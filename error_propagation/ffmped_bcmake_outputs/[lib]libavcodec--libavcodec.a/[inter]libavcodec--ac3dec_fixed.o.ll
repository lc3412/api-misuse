; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_fixed.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_fixed.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AC3DecodeContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, [2 x float], i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [7 x i32], i32, [18 x i32], i32, [18 x i8], [18 x i8], i32, [7 x i32], [7 x [18 x i32]], i32, [7 x i8], [7 x i8], i32, i32, i32, i32, [17 x i8], [17 x i8], [7 x i8], [7 x [17 x i32]], [7 x [17 x i32]], [7 x i32], [7 x [256 x [6 x i32]]], i32, i32, i32, [2 x i16*], i32, i32, i32, i32, i32, [2 x i32], i32, i32, [2 x i32], [7 x i32], [7 x i32], i32, i32, [4 x i32], [7 x i32], [7 x [256 x i8]], [6 x [7 x i32]], %struct.AC3BitAllocParameters, i32, [7 x i32], [7 x i32], [7 x [256 x i8]], [7 x [256 x i16]], [7 x [50 x i16]], [7 x [50 x i16]], [7 x i32], [7 x i32], [7 x [8 x i8]], [7 x [8 x i8]], [7 x [8 x i8]], [7 x i32], %struct.AVLFG, [7 x i32], %struct.FFTContext, %struct.FFTContext, %struct.BswapDSPContext, %struct.AVFixedDSPContext*, %struct.AC3DSPContext, %struct.FmtConvertContext, [7 x i16*], [7 x i32*], [7 x i32*], [8 x i8], [7 x [256 x i32]], [16 x i8], [7 x [256 x i32]], [16 x [256 x i32]], [256 x i32], [256 x i32], [16 x [256 x i16]], [32832 x i8], [16 x [1536 x i16]] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AC3BitAllocParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVLFG = type { [64 x i32], i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, i32*, i32*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, i32, i32, i32* }
%struct.FFTComplex = type { i32, i32 }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.AVFixedDSPContext = type { void (i16*, i32*, i32*, i32*, i32, i8)*, void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)*, i32 (i32*, i32*, i32)*, void (i32*, i32*, i32)* }
%struct.AC3DSPContext = type { void (i8*, i32, i32)*, i32 (i16*, i32)*, void (i16*, i32, i32)*, void (i32*, i32, i32)*, void (i32*, float*, i32)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i8*, i32)*, i32 ([16 x i16]*)*, void (i8*, i32*, i32)*, void (i64*, i32*, i32*, i32)*, void (float*, float*, float*, i32)*, i32, i32, void (float**, float**, i32)*, void (i32**, i16**, i32)*, void (i16*, i16*, i16*, i32)* }
%struct.FmtConvertContext = type { void (float*, i32*, float, i32)*, void (float*, i32*, i64)*, void (%struct.FmtConvertContext*, float*, i32*, float*, i32)* }
%struct.AVDownmixInfo = type { i32, double, double, double, double, double }
%struct.AC3HeaderInfo = type { i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i16, i32, i32, i8, i16, i32, i8, i16, i64 }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }
%struct.mant_groups = type { [2 x i32], [2 x i32], i32, i32, i32, i32 }
%union.anon.0 = type { i32 }

@.str = private unnamed_addr constant [10 x i8] c"ac3_fixed\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"ATSC A/52A (AC-3)\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 6, i32 -1], align 4
@ac3_decoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([4 x %struct.AVOption], [4 x %struct.AVOption]* bitcast (<{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }>* @options to [4 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_ac3_fixed_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86019, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @ac3_decoder_class, %struct.AVProfile* null, i8* null, i32 178112, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ac3_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ac3_decode_frame, i32 (%struct.AVCodecContext*)* @ac3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [25 x i8] c"Fixed-Point AC-3 Decoder\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"cons_noisegen\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"enable consistent noise generation\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"drc_scale\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"percentage of dynamic range compression to apply\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"heavy_compr\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"enable heavy dynamic range compression\00", align 1
@options = internal constant <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0), i32 45156, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 10, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i32 0, i32 0), i32 45084, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 6.000000e+00, i32 10, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 45088, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 10, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@ungroup_3_in_7_bits_tab = internal global [128 x [3 x i8]] zeroinitializer, align 16
@ff_ac3_ungroup_3_in_5_bits_tab = external constant [32 x [3 x i8]], align 16
@b1_mantissas = internal global [32 x [3 x i32]] zeroinitializer, align 16
@b2_mantissas = internal global [128 x [3 x i32]] zeroinitializer, align 16
@b4_mantissas = internal global [128 x [2 x i32]] zeroinitializer, align 16
@b3_mantissas = internal global [8 x i32] zeroinitializer, align 16
@b5_mantissas = internal global [16 x i32] zeroinitializer, align 16
@.str.10 = private unnamed_addr constant [18 x i8] c"frame sync error\0A\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"invalid bitstream id\0A\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"invalid sample rate\0A\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"invalid frame size\0A\00", align 1
@.str.14 = private unnamed_addr constant [42 x i8] c"unsupported substream %d: skipping frame\0A\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"invalid frame type\0A\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"incomplete frame\0A\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"frame CRC mismatch\0A\00", align 1
@.str.18 = private unnamed_addr constant [53 x i8] c"Ignoring dependent frame without independent frame.\0A\00", align 1
@gain_levels = internal constant [9 x float] [float 0x3FF6A09E60000000, float 0x3FF306FE00000000, float 1.000000e+00, float 0x3FEAE89FA0000000, float 0x3FE6A09E60000000, float 0x3FE306FE00000000, float 5.000000e-01, float 0.000000e+00, float 0x3FD6A09E60000000], align 16
@.str.19 = private unnamed_addr constant [30 x i8] c"error setting downmix coeffs\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"unable to determine channel mode\0A\00", align 1
@avpriv_ac3_channel_layout_tab = external constant [8 x i16], align 16
@ff_ac3_dec_channel_map = external constant [8 x [2 x [6 x i8]]], align 16
@.str.21 = private unnamed_addr constant [32 x i8] c"error decoding the audio block\0A\00", align 1
@.str.22 = private unnamed_addr constant [42 x i8] c"Ignoring non-compatible dependent frame.\0A\00", align 1
@ff_ac3_channels_tab = external constant [8 x i8], align 1
@ff_eac3_custom_channel_map_locations = external constant [16 x [2 x i64]], align 16
@.str.23 = private unnamed_addr constant [30 x i8] c"Too many channels (%d) coded\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"ch>=8 || frame->extended_data[ch] == frame->data[ch]\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"libavcodec/ac3dec.c\00", align 1
@gain_levels_lfe = internal constant [32 x float] [float 0x40094C56E0000000, float 0x40068C0BE0000000, float 0x40041857A0000000, float 0x4001E8E580000000, float 0x3FFFEC96C0000000, float 0x3FFC73D3A0000000, float 0x3FF95BB8C0000000, float 0x3FF699BF60000000, float 0x3FF4248D80000000, float 0x3FF1F3C920000000, float 1.000000e+00, float 0x3FEC8520E0000000, float 0x3FE96B2280000000, float 0x3FE6A77E60000000, float 0x3FE430CCC0000000, float 0x3FE1FEB280000000, float 0x3FE009B960000000, float 0x3FDC967440000000, float 0x3FD97A95C0000000, float 0x3FD6B541A0000000, float 0x3FD43D1020000000, float 0x3FD209A240000000, float 0x3FD01376E0000000, float 0x3FCCA7D680000000, float 0x3FC98A1160000000, float 0x3FC6C31160000000, float 0x3FC4495E20000000, float 0x3FC2149400000000, float 0x3FC01D3AA0000000, float 0x3FBCB93460000000, float 0x3FB99999A0000000, float 0x3FB6D0E560000000], align 16
@.str.27 = private unnamed_addr constant [21 x i8] c"Reserved frame type\0A\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"Additional substreams\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Reduced sampling rate\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"channel_map: %0X\0A\00", align 1
@ff_ac3_slow_decay_tab = external constant [4 x i8], align 1
@ff_ac3_fast_decay_tab = external constant [4 x i8], align 1
@ff_ac3_slow_gain_tab = external constant [4 x i16], align 2
@ff_ac3_db_per_bit_tab = external constant [4 x i16], align 2
@ff_ac3_floor_tab = external constant [8 x i16], align 16
@ff_eac3_frm_expstr = external constant [32 x [6 x i8]], align 16
@.str.31 = private unnamed_addr constant [17 x i8] c"Block start info\00", align 1
@ac3_default_coeffs = internal constant [8 x [5 x [2 x i8]]] [[5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\04\04", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] c"\06\06", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] c"\08\08", [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] c"\06\07", [2 x i8] c"\07\06", [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] c"\06\07", [2 x i8] c"\07\06"]], align 16
@.str.32 = private unnamed_addr constant [50 x i8] c"new coupling strategy must be present in block 0\0A\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"Warning: new rematrixing strategy not present in block 0\0A\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"bandwidth code = %d > 60\0A\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"new bit allocation info must be present in block 0\0A\00", align 1
@ff_ac3_fast_gain_tab = external constant [8 x i16], align 16
@.str.36 = private unnamed_addr constant [44 x i8] c"new snr offsets must be present in block 0\0A\00", align 1
@.str.37 = private unnamed_addr constant [51 x i8] c"new coupling leak info must be present in block 0\0A\00", align 1
@.str.38 = private unnamed_addr constant [40 x i8] c"delta bit allocation strategy reserved\0A\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"error in bit allocation\0A\00", align 1
@ff_eac3_hebap_tab = external constant [64 x i8], align 16
@ff_ac3_bap_tab = external constant [64 x i8], align 16
@end_freq_inv_tab = internal constant [8 x i32] [i32 50529027, i32 44278013, i32 39403370, i32 32292987, i32 27356480, i32 23729101, i32 20951060, i32 18755316], align 16
@.str.40 = private unnamed_addr constant [45 x i8] c"invalid spectral extension range (%d >= %d)\0A\00", align 1
@.str.41 = private unnamed_addr constant [54 x i8] c"invalid spectral extension copy start bin (%d >= %d)\0A\00", align 1
@ff_eac3_default_spx_band_struct = external constant [17 x i8], align 16
@.str.42 = private unnamed_addr constant [47 x i8] c"band_struct_size >= start_subband + n_subbands\00", align 1
@ff_sqrt_tab = external constant [256 x i8], align 16
@ff_inverse = external constant [257 x i32], align 16
@.str.43 = private unnamed_addr constant [43 x i8] c"coupling not allowed in mono or dual-mono\0A\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"Enhanced coupling\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"invalid coupling range (%d >= %d)\0A\00", align 1
@ff_eac3_default_cpl_band_struct = external constant [18 x i8], align 16
@.str.46 = private unnamed_addr constant [53 x i8] c"new coupling coordinates must be present in block 0\0A\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"expacc %d is out-of-range\0A\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"exponent %d is out-of-range\0A\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"bap %d is invalid in plain AC-3\0A\00", align 1
@quantization_tab = internal constant [16 x i8] c"\00\03\05\07\0B\0F\05\06\07\08\09\0A\0B\0C\0E\10", align 16
@.str.50 = private unnamed_addr constant [34 x i8] c"GAQ gain group code out-of-range\0A\00", align 1
@ff_eac3_bits_vs_hebap = external constant [20 x i8], align 16
@ff_eac3_mantissa_vq = external constant [8 x [6 x i16]*], align 16
@ff_eac3_gaq_remap_2_4_b = external constant [9 x [2 x i16]], align 16
@ff_eac3_gaq_remap_2_4_a = external constant [9 x [2 x i16]], align 16
@ff_eac3_gaq_remap_1 = external constant [12 x i16], align 16
@ff_ac3_rematrix_band_tab = external constant [5 x i8], align 1
@ff_eac3_apply_spectral_extension.wrapflag = private unnamed_addr constant [17 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@ff_eac3_spx_atten_tab = external constant [32 x [3 x float]], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ac3_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1846 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1848, metadata !1849), !dbg !1850
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !1851, metadata !1849), !dbg !2249
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2250
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2251
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2251
  %2 = bitcast i8* %1 to %struct.AC3DecodeContext*, !dbg !2250
  store %struct.AC3DecodeContext* %2, %struct.AC3DecodeContext** %s, align 8, !dbg !2249
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2252, metadata !1849), !dbg !2253
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2254
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2255
  %avctx1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 1, !dbg !2256
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 8, !dbg !2257
  call void @ac3_tables_init(), !dbg !2258
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2259
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 108, !dbg !2260
  %call = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %imdct_256, i32 8, i32 1, double 1.000000e+00), !dbg !2261
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2262
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 107, !dbg !2263
  %call2 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %imdct_512, i32 9, i32 1, double 1.000000e+00), !dbg !2264
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2265
  %window = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 121, !dbg !2266
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %window, i32 0, i32 0, !dbg !2265
  call void @ff_kbd_window_init_fixed(i32* %arraydecay, float 5.000000e+00, i32 256), !dbg !2267
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2268
  %bdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 109, !dbg !2269
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !2270
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2271
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 13, !dbg !2272
  %10 = load i32, i32* %flags, align 4, !dbg !2272
  %and = and i32 %10, 8388608, !dbg !2273
  %call3 = call %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32 %and), !dbg !2274
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2275
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 110, !dbg !2276
  store %struct.AVFixedDSPContext* %call3, %struct.AVFixedDSPContext** %fdsp, align 8, !dbg !2277
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2278
  %ac3dsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 111, !dbg !2279
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2280
  %flags4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 13, !dbg !2281
  %14 = load i32, i32* %flags4, align 4, !dbg !2281
  %and5 = and i32 %14, 8388608, !dbg !2282
  call void @ff_ac3dsp_init(%struct.AC3DSPContext* %ac3dsp, i32 %and5), !dbg !2283
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2284
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 105, !dbg !2285
  call void @av_lfg_init(%struct.AVLFG* %dith_state, i32 0), !dbg !2286
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2287
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 84, !dbg !2289
  store i32 6, i32* %sample_fmt, align 8, !dbg !2290
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2291
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 83, !dbg !2293
  %18 = load i32, i32* %channels, align 4, !dbg !2293
  %cmp = icmp sgt i32 %18, 1, !dbg !2294
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2295

land.lhs.true:                                    ; preds = %entry
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2296
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 90, !dbg !2297
  %20 = load i64, i64* %request_channel_layout, align 8, !dbg !2297
  %cmp6 = icmp eq i64 %20, 4, !dbg !2298
  br i1 %cmp6, label %if.then, label %if.else, !dbg !2299

if.then:                                          ; preds = %land.lhs.true
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2301
  %channels7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 83, !dbg !2302
  store i32 1, i32* %channels7, align 4, !dbg !2303
  br label %if.end15, !dbg !2301

if.else:                                          ; preds = %land.lhs.true, %entry
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2304
  %channels8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 83, !dbg !2306
  %23 = load i32, i32* %channels8, align 4, !dbg !2306
  %cmp9 = icmp sgt i32 %23, 2, !dbg !2307
  br i1 %cmp9, label %land.lhs.true10, label %if.end, !dbg !2308

land.lhs.true10:                                  ; preds = %if.else
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2309
  %request_channel_layout11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 90, !dbg !2310
  %25 = load i64, i64* %request_channel_layout11, align 8, !dbg !2310
  %cmp12 = icmp eq i64 %25, 3, !dbg !2311
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !2312

if.then13:                                        ; preds = %land.lhs.true10
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2314
  %channels14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 83, !dbg !2315
  store i32 2, i32* %channels14, align 4, !dbg !2316
  br label %if.end, !dbg !2314

if.end:                                           ; preds = %if.then13, %land.lhs.true10, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2317
  %downmixed = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 74, !dbg !2318
  store i32 1, i32* %downmixed, align 32, !dbg !2319
  store i32 0, i32* %i, align 4, !dbg !2320
  br label %for.cond, !dbg !2322

for.cond:                                         ; preds = %for.inc, %if.end15
  %28 = load i32, i32* %i, align 4, !dbg !2323
  %cmp16 = icmp slt i32 %28, 7, !dbg !2326
  br i1 %cmp16, label %for.body, label %for.end, !dbg !2327

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %i, align 4, !dbg !2328
  %idxprom = sext i32 %29 to i64, !dbg !2330
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2330
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 119, !dbg !2331
  %arrayidx = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs, i64 0, i64 %idxprom, !dbg !2330
  %arraydecay17 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx, i32 0, i32 0, !dbg !2330
  %31 = load i32, i32* %i, align 4, !dbg !2332
  %idxprom18 = sext i32 %31 to i64, !dbg !2333
  %32 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2333
  %xcfptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %32, i32 0, i32 114, !dbg !2334
  %arrayidx19 = getelementptr inbounds [7 x i32*], [7 x i32*]* %xcfptr, i64 0, i64 %idxprom18, !dbg !2333
  store i32* %arraydecay17, i32** %arrayidx19, align 8, !dbg !2335
  %33 = load i32, i32* %i, align 4, !dbg !2336
  %idxprom20 = sext i32 %33 to i64, !dbg !2337
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2337
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 120, !dbg !2338
  %arrayidx21 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay, i64 0, i64 %idxprom20, !dbg !2337
  %arraydecay22 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx21, i32 0, i32 0, !dbg !2337
  %35 = load i32, i32* %i, align 4, !dbg !2339
  %idxprom23 = sext i32 %35 to i64, !dbg !2340
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2340
  %dlyptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 115, !dbg !2341
  %arrayidx24 = getelementptr inbounds [7 x i32*], [7 x i32*]* %dlyptr, i64 0, i64 %idxprom23, !dbg !2340
  store i32* %arraydecay22, i32** %arrayidx24, align 8, !dbg !2342
  br label %for.inc, !dbg !2343

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !2344
  %inc = add nsw i32 %37, 1, !dbg !2344
  store i32 %inc, i32* %i, align 4, !dbg !2344
  br label %for.cond, !dbg !2346, !llvm.loop !2347

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !2349
}

; Function Attrs: nounwind uwtable
define internal i32 @ac3_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2350 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !2351, metadata !1849), !dbg !2356
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %full_buf_size = alloca i32, align 4
  %s = alloca %struct.AC3DecodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %err = alloca i32, align 4
  %offset = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %skip = alloca i32, align 4
  %got_independent_frame = alloca i32, align 4
  %channel_map = alloca i8*, align 8
  %extended_channel_map = alloca [16 x i8], align 16
  %output = alloca [7 x i16*], align 16
  %matrix_encoding = alloca i32, align 4
  %downmix_info = alloca %struct.AVDownmixInfo*, align 8
  %cnt = alloca i32, align 4
  %hdr = alloca %struct.AC3HeaderInfo, align 8
  %err360 = alloca i32, align 4
  %ich_layout = alloca i64, align 8
  %channel_map_size = alloca i32, align 4
  %channel_layout449 = alloca i64, align 8
  %extend = alloca i32, align 4
  %index = alloca i32, align 4
  %i520 = alloca i32, align 4
  %index532 = alloca i32, align 4
  %map = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2360, metadata !1849), !dbg !2361
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2362, metadata !1849), !dbg !2363
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2364, metadata !1849), !dbg !2365
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2366, metadata !1849), !dbg !2367
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2368, metadata !1849), !dbg !2369
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2370
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2370
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2369
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2371, metadata !1849), !dbg !2372
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2373
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2374
  %3 = load i8*, i8** %data1, align 8, !dbg !2374
  store i8* %3, i8** %buf, align 8, !dbg !2372
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2375, metadata !1849), !dbg !2376
  call void @llvm.dbg.declare(metadata i32* %full_buf_size, metadata !2377, metadata !1849), !dbg !2378
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2379
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2380
  %5 = load i32, i32* %size, align 8, !dbg !2380
  store i32 %5, i32* %full_buf_size, align 4, !dbg !2378
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !2381, metadata !1849), !dbg !2382
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2383
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2384
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2384
  %8 = bitcast i8* %7 to %struct.AC3DecodeContext*, !dbg !2383
  store %struct.AC3DecodeContext* %8, %struct.AC3DecodeContext** %s, align 8, !dbg !2382
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2385, metadata !1849), !dbg !2386
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2387, metadata !1849), !dbg !2388
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2389, metadata !1849), !dbg !2390
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2391, metadata !1849), !dbg !2392
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2393, metadata !1849), !dbg !2394
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2395, metadata !1849), !dbg !2396
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2397, metadata !1849), !dbg !2398
  store i32 0, i32* %skip, align 4, !dbg !2398
  call void @llvm.dbg.declare(metadata i32* %got_independent_frame, metadata !2399, metadata !1849), !dbg !2400
  store i32 0, i32* %got_independent_frame, align 4, !dbg !2400
  call void @llvm.dbg.declare(metadata i8** %channel_map, metadata !2401, metadata !1849), !dbg !2402
  call void @llvm.dbg.declare(metadata [16 x i8]* %extended_channel_map, metadata !2403, metadata !1849), !dbg !2405
  call void @llvm.dbg.declare(metadata [7 x i16*]* %output, metadata !2406, metadata !1849), !dbg !2410
  call void @llvm.dbg.declare(metadata i32* %matrix_encoding, metadata !2411, metadata !1849), !dbg !2412
  call void @llvm.dbg.declare(metadata %struct.AVDownmixInfo** %downmix_info, metadata !2413, metadata !1849), !dbg !2424
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2425
  %superframe_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 5, !dbg !2426
  store i32 0, i32* %superframe_size, align 8, !dbg !2427
  %10 = load i32, i32* %full_buf_size, align 4, !dbg !2428
  store i32 %10, i32* %buf_size, align 4, !dbg !2429
  store i32 1, i32* %i, align 4, !dbg !2430
  br label %for.cond, !dbg !2432

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !2433
  %12 = load i32, i32* %buf_size, align 4, !dbg !2436
  %cmp = icmp slt i32 %11, %12, !dbg !2437
  br i1 %cmp, label %for.body, label %for.end, !dbg !2438

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !2439
  %idxprom = sext i32 %13 to i64, !dbg !2442
  %14 = load i8*, i8** %buf, align 8, !dbg !2442
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom, !dbg !2442
  %15 = load i8, i8* %arrayidx, align 1, !dbg !2442
  %conv = zext i8 %15 to i32, !dbg !2442
  %cmp2 = icmp eq i32 %conv, 119, !dbg !2443
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !2444

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !2445
  %idxprom4 = sext i32 %16 to i64, !dbg !2447
  %17 = load i8*, i8** %buf, align 8, !dbg !2447
  %arrayidx5 = getelementptr inbounds i8, i8* %17, i64 %idxprom4, !dbg !2447
  %18 = load i8, i8* %arrayidx5, align 1, !dbg !2447
  %conv6 = zext i8 %18 to i32, !dbg !2447
  %cmp7 = icmp eq i32 %conv6, 11, !dbg !2448
  br i1 %cmp7, label %if.then, label %if.end29, !dbg !2449

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %19 = load i32, i32* %i, align 4, !dbg !2450
  %idxprom9 = sext i32 %19 to i64, !dbg !2453
  %20 = load i8*, i8** %buf, align 8, !dbg !2453
  %arrayidx10 = getelementptr inbounds i8, i8* %20, i64 %idxprom9, !dbg !2453
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !2453
  %conv11 = zext i8 %21 to i32, !dbg !2453
  %22 = load i32, i32* %i, align 4, !dbg !2454
  %sub = sub nsw i32 %22, 1, !dbg !2455
  %idxprom12 = sext i32 %sub to i64, !dbg !2456
  %23 = load i8*, i8** %buf, align 8, !dbg !2456
  %arrayidx13 = getelementptr inbounds i8, i8* %23, i64 %idxprom12, !dbg !2456
  %24 = load i8, i8* %arrayidx13, align 1, !dbg !2456
  %conv14 = zext i8 %24 to i32, !dbg !2456
  %xor = xor i32 %conv11, %conv14, !dbg !2457
  %cmp15 = icmp eq i32 %xor, 124, !dbg !2458
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2459

if.then17:                                        ; preds = %if.then
  %25 = load i32, i32* %i, align 4, !dbg !2460
  %dec = add nsw i32 %25, -1, !dbg !2460
  store i32 %dec, i32* %i, align 4, !dbg !2460
  br label %for.end, !dbg !2462

if.else:                                          ; preds = %if.then
  %26 = load i32, i32* %i, align 4, !dbg !2463
  %idxprom18 = sext i32 %26 to i64, !dbg !2465
  %27 = load i8*, i8** %buf, align 8, !dbg !2465
  %arrayidx19 = getelementptr inbounds i8, i8* %27, i64 %idxprom18, !dbg !2465
  %28 = load i8, i8* %arrayidx19, align 1, !dbg !2465
  %conv20 = zext i8 %28 to i32, !dbg !2465
  %29 = load i32, i32* %i, align 4, !dbg !2466
  %add = add nsw i32 %29, 1, !dbg !2467
  %idxprom21 = sext i32 %add to i64, !dbg !2468
  %30 = load i8*, i8** %buf, align 8, !dbg !2468
  %arrayidx22 = getelementptr inbounds i8, i8* %30, i64 %idxprom21, !dbg !2468
  %31 = load i8, i8* %arrayidx22, align 1, !dbg !2468
  %conv23 = zext i8 %31 to i32, !dbg !2468
  %xor24 = xor i32 %conv20, %conv23, !dbg !2469
  %cmp25 = icmp eq i32 %xor24, 124, !dbg !2470
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !2471

if.then27:                                        ; preds = %if.else
  br label %for.end, !dbg !2472

if.end:                                           ; preds = %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end
  br label %if.end29, !dbg !2474

if.end29:                                         ; preds = %if.end28, %lor.lhs.false
  br label %for.inc, !dbg !2475

for.inc:                                          ; preds = %if.end29
  %32 = load i32, i32* %i, align 4, !dbg !2476
  %add30 = add nsw i32 %32, 2, !dbg !2476
  store i32 %add30, i32* %i, align 4, !dbg !2476
  br label %for.cond, !dbg !2478, !llvm.loop !2479

for.end:                                          ; preds = %if.then27, %if.then17, %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !2481
  %34 = load i32, i32* %buf_size, align 4, !dbg !2483
  %cmp31 = icmp sge i32 %33, %34, !dbg !2484
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !2485

if.then33:                                        ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2486
  br label %return, !dbg !2486

if.end34:                                         ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !2487
  %cmp35 = icmp sgt i32 %35, 10, !dbg !2489
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !2490

if.then37:                                        ; preds = %if.end34
  %36 = load i32, i32* %i, align 4, !dbg !2491
  store i32 %36, i32* %retval, align 4, !dbg !2492
  br label %return, !dbg !2492

if.end38:                                         ; preds = %if.end34
  %37 = load i32, i32* %i, align 4, !dbg !2493
  %38 = load i8*, i8** %buf, align 8, !dbg !2494
  %idx.ext = sext i32 %37 to i64, !dbg !2494
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %idx.ext, !dbg !2494
  store i8* %add.ptr, i8** %buf, align 8, !dbg !2494
  %39 = load i32, i32* %i, align 4, !dbg !2495
  %40 = load i32, i32* %buf_size, align 4, !dbg !2496
  %sub39 = sub nsw i32 %40, %39, !dbg !2496
  store i32 %sub39, i32* %buf_size, align 4, !dbg !2496
  %41 = load i32, i32* %buf_size, align 4, !dbg !2497
  %cmp40 = icmp sge i32 %41, 2, !dbg !2498
  br i1 %cmp40, label %land.lhs.true, label %if.else48, !dbg !2499

land.lhs.true:                                    ; preds = %if.end38
  %42 = load i8*, i8** %buf, align 8, !dbg !2500
  %43 = bitcast i8* %42 to %union.unaligned_16*, !dbg !2501
  %l = bitcast %union.unaligned_16* %43 to i16*, !dbg !2501
  %44 = load i16, i16* %l, align 1, !dbg !2501
  store i16 %44, i16* %x.addr.i, align 2, !dbg !2502
  %45 = load i16, i16* %x.addr.i, align 2, !dbg !2503
  %conv.i = zext i16 %45 to i32, !dbg !2503
  %shr.i = ashr i32 %conv.i, 8, !dbg !2504
  %46 = load i16, i16* %x.addr.i, align 2, !dbg !2505
  %conv1.i = zext i16 %46 to i32, !dbg !2505
  %shl.i = shl i32 %conv1.i, 8, !dbg !2506
  %or.i = or i32 %shr.i, %shl.i, !dbg !2507
  %conv2.i = trunc i32 %or.i to i16, !dbg !2508
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !2509
  %47 = load i16, i16* %x.addr.i, align 2, !dbg !2510
  %conv42 = zext i16 %47 to i32, !dbg !2502
  %cmp43 = icmp eq i32 %conv42, 30475, !dbg !2511
  br i1 %cmp43, label %if.then45, label %if.else48, !dbg !2512

if.then45:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !2513, metadata !1849), !dbg !2515
  %48 = load i32, i32* %buf_size, align 4, !dbg !2516
  %cmp46 = icmp sgt i32 %48, 32768, !dbg !2517
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !2518

cond.true:                                        ; preds = %if.then45
  br label %cond.end, !dbg !2519

cond.false:                                       ; preds = %if.then45
  %49 = load i32, i32* %buf_size, align 4, !dbg !2521
  br label %cond.end, !dbg !2523

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 32768, %cond.true ], [ %49, %cond.false ], !dbg !2524
  %shr = ashr i32 %cond, 1, !dbg !2526
  store i32 %shr, i32* %cnt, align 4, !dbg !2527
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2528
  %bdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 109, !dbg !2529
  %bswap16_buf = getelementptr inbounds %struct.BswapDSPContext, %struct.BswapDSPContext* %bdsp, i32 0, i32 1, !dbg !2530
  %51 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %bswap16_buf, align 8, !dbg !2530
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2531
  %input_buffer = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 124, !dbg !2532
  %arraydecay = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer, i32 0, i32 0, !dbg !2531
  %53 = bitcast i8* %arraydecay to i16*, !dbg !2533
  %54 = load i8*, i8** %buf, align 8, !dbg !2534
  %55 = bitcast i8* %54 to i16*, !dbg !2535
  %56 = load i32, i32* %cnt, align 4, !dbg !2536
  call void %51(i16* %53, i16* %55, i32 %56), !dbg !2528
  br label %if.end58, !dbg !2537

if.else48:                                        ; preds = %land.lhs.true, %if.end38
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2538
  %input_buffer49 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 124, !dbg !2539
  %arraydecay50 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer49, i32 0, i32 0, !dbg !2540
  %58 = load i8*, i8** %buf, align 8, !dbg !2541
  %59 = load i32, i32* %buf_size, align 4, !dbg !2542
  %cmp51 = icmp sgt i32 %59, 32768, !dbg !2543
  br i1 %cmp51, label %cond.true53, label %cond.false54, !dbg !2544

cond.true53:                                      ; preds = %if.else48
  br label %cond.end55, !dbg !2545

cond.false54:                                     ; preds = %if.else48
  %60 = load i32, i32* %buf_size, align 4, !dbg !2546
  br label %cond.end55, !dbg !2548

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond56 = phi i32 [ 32768, %cond.true53 ], [ %60, %cond.false54 ], !dbg !2549
  %conv57 = sext i32 %cond56 to i64, !dbg !2551
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay50, i8* %58, i64 %conv57, i32 1, i1 false), !dbg !2552
  br label %if.end58

if.end58:                                         ; preds = %cond.end55, %cond.end
  %61 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2553
  %consistent_noise_generation = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %61, i32 0, i32 85, !dbg !2555
  %62 = load i32, i32* %consistent_noise_generation, align 4, !dbg !2555
  %tobool = icmp ne i32 %62, 0, !dbg !2553
  br i1 %tobool, label %if.then59, label %if.end69, !dbg !2556

if.then59:                                        ; preds = %if.end58
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2557
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 105, !dbg !2558
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2559
  %input_buffer60 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 124, !dbg !2560
  %arraydecay61 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer60, i32 0, i32 0, !dbg !2559
  %65 = load i32, i32* %buf_size, align 4, !dbg !2561
  %cmp62 = icmp sgt i32 %65, 32768, !dbg !2562
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !2563

cond.true64:                                      ; preds = %if.then59
  br label %cond.end66, !dbg !2564

cond.false65:                                     ; preds = %if.then59
  %66 = load i32, i32* %buf_size, align 4, !dbg !2566
  br label %cond.end66, !dbg !2568

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ 32768, %cond.true64 ], [ %66, %cond.false65 ], !dbg !2569
  %call68 = call i32 @av_lfg_init_from_data(%struct.AVLFG* %dith_state, i8* %arraydecay61, i32 %cond67), !dbg !2571
  br label %if.end69, !dbg !2571

if.end69:                                         ; preds = %cond.end66, %if.end58
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2572
  %input_buffer70 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 124, !dbg !2573
  %arraydecay71 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer70, i32 0, i32 0, !dbg !2572
  store i8* %arraydecay71, i8** %buf, align 8, !dbg !2574
  br label %dependent_frame, !dbg !2575

dependent_frame:                                  ; preds = %if.else400, %if.end69
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2576
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 2, !dbg !2578
  %69 = load i8*, i8** %buf, align 8, !dbg !2579
  %70 = load i32, i32* %buf_size, align 4, !dbg !2580
  %call72 = call i32 @init_get_bits8(%struct.GetBitContext* %gbc, i8* %69, i32 %70), !dbg !2581
  store i32 %call72, i32* %ret, align 4, !dbg !2582
  %cmp73 = icmp slt i32 %call72, 0, !dbg !2583
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !2584

if.then75:                                        ; preds = %dependent_frame
  %71 = load i32, i32* %ret, align 4, !dbg !2585
  store i32 %71, i32* %retval, align 4, !dbg !2586
  br label %return, !dbg !2586

if.end76:                                         ; preds = %dependent_frame
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2587
  %call77 = call i32 @parse_frame_header(%struct.AC3DecodeContext* %72), !dbg !2588
  store i32 %call77, i32* %err, align 4, !dbg !2589
  %73 = load i32, i32* %err, align 4, !dbg !2590
  %tobool78 = icmp ne i32 %73, 0, !dbg !2590
  br i1 %tobool78, label %if.then79, label %if.else90, !dbg !2592

if.then79:                                        ; preds = %if.end76
  %74 = load i32, i32* %err, align 4, !dbg !2593
  switch i32 %74, label %sw.default [
    i32 -16976906, label %sw.bb
    i32 -33754122, label %sw.bb80
    i32 -50531338, label %sw.bb81
    i32 -67308554, label %sw.bb82
    i32 -84085770, label %sw.bb83
    i32 -100862986, label %sw.bb89
    i32 -117640202, label %sw.bb89
  ], !dbg !2595

sw.bb:                                            ; preds = %if.then79
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2596
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !2596
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0)), !dbg !2598
  store i32 -1094995529, i32* %retval, align 4, !dbg !2599
  br label %return, !dbg !2599

sw.bb80:                                          ; preds = %if.then79
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2600
  %78 = bitcast %struct.AVCodecContext* %77 to i8*, !dbg !2600
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i32 0, i32 0)), !dbg !2601
  br label %sw.epilog, !dbg !2602

sw.bb81:                                          ; preds = %if.then79
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2603
  %80 = bitcast %struct.AVCodecContext* %79 to i8*, !dbg !2603
  call void (i8*, i32, i8*, ...) @av_log(i8* %80, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0)), !dbg !2604
  br label %sw.epilog, !dbg !2605

sw.bb82:                                          ; preds = %if.then79
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2606
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !2606
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0)), !dbg !2607
  br label %sw.epilog, !dbg !2608

sw.bb83:                                          ; preds = %if.then79
  %83 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2609
  %substreamid = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %83, i32 0, i32 4, !dbg !2611
  %84 = load i32, i32* %substreamid, align 4, !dbg !2611
  %tobool84 = icmp ne i32 %84, 0, !dbg !2609
  br i1 %tobool84, label %if.then85, label %if.else87, !dbg !2612

if.then85:                                        ; preds = %sw.bb83
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2613
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !2613
  %87 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2615
  %substreamid86 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %87, i32 0, i32 4, !dbg !2616
  %88 = load i32, i32* %substreamid86, align 4, !dbg !2616
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i32 0, i32 0), i32 %88), !dbg !2617
  %89 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2618
  store i32 0, i32* %89, align 4, !dbg !2619
  %90 = load i32, i32* %buf_size, align 4, !dbg !2620
  store i32 %90, i32* %retval, align 4, !dbg !2621
  br label %return, !dbg !2621

if.else87:                                        ; preds = %sw.bb83
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2622
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !2622
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i32 0, i32 0)), !dbg !2624
  br label %if.end88

if.end88:                                         ; preds = %if.else87
  br label %sw.epilog, !dbg !2625

sw.bb89:                                          ; preds = %if.then79, %if.then79
  br label %sw.epilog, !dbg !2626

sw.default:                                       ; preds = %if.then79
  %93 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2627
  store i32 0, i32* %93, align 4, !dbg !2628
  %94 = load i32, i32* %err, align 4, !dbg !2629
  store i32 %94, i32* %retval, align 4, !dbg !2630
  br label %return, !dbg !2630

sw.epilog:                                        ; preds = %sw.bb89, %if.end88, %sw.bb82, %sw.bb81, %sw.bb80
  br label %if.end113, !dbg !2631

if.else90:                                        ; preds = %if.end76
  %95 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2632
  %frame_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %95, i32 0, i32 6, !dbg !2635
  %96 = load i32, i32* %frame_size, align 4, !dbg !2635
  %97 = load i32, i32* %buf_size, align 4, !dbg !2636
  %cmp91 = icmp sgt i32 %96, %97, !dbg !2637
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !2638

if.then93:                                        ; preds = %if.else90
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2639
  %99 = bitcast %struct.AVCodecContext* %98 to i8*, !dbg !2639
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i32 0, i32 0)), !dbg !2641
  store i32 -67308554, i32* %err, align 4, !dbg !2642
  br label %if.end112, !dbg !2643

if.else94:                                        ; preds = %if.else90
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2644
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 135, !dbg !2647
  %101 = load i32, i32* %err_recognition, align 8, !dbg !2647
  %and = and i32 %101, 65537, !dbg !2648
  %tobool95 = icmp ne i32 %and, 0, !dbg !2648
  br i1 %tobool95, label %if.then96, label %if.end111, !dbg !2644

if.then96:                                        ; preds = %if.else94
  %call97 = call i32* @av_crc_get_table(i32 1), !dbg !2649
  %102 = load i8*, i8** %buf, align 8, !dbg !2652
  %arrayidx98 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !2652
  %103 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2653
  %frame_size99 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %103, i32 0, i32 6, !dbg !2654
  %104 = load i32, i32* %frame_size99, align 4, !dbg !2654
  %sub100 = sub nsw i32 %104, 2, !dbg !2655
  %conv101 = sext i32 %sub100 to i64, !dbg !2653
  %call102 = call i32 @av_crc(i32* %call97, i32 0, i8* %arrayidx98, i64 %conv101) #10, !dbg !2656
  %tobool103 = icmp ne i32 %call102, 0, !dbg !2658
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !2659

if.then104:                                       ; preds = %if.then96
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2660
  %106 = bitcast %struct.AVCodecContext* %105 to i8*, !dbg !2660
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0)), !dbg !2662
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2663
  %err_recognition105 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %107, i32 0, i32 135, !dbg !2665
  %108 = load i32, i32* %err_recognition105, align 8, !dbg !2665
  %and106 = and i32 %108, 8, !dbg !2666
  %tobool107 = icmp ne i32 %and106, 0, !dbg !2666
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !2667

if.then108:                                       ; preds = %if.then104
  store i32 -1094995529, i32* %retval, align 4, !dbg !2668
  br label %return, !dbg !2668

if.end109:                                        ; preds = %if.then104
  store i32 -100862986, i32* %err, align 4, !dbg !2669
  br label %if.end110, !dbg !2670

if.end110:                                        ; preds = %if.end109, %if.then96
  br label %if.end111, !dbg !2671

if.end111:                                        ; preds = %if.end110, %if.else94
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then93
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %sw.epilog
  %109 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2672
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %109, i32 0, i32 3, !dbg !2674
  %110 = load i32, i32* %frame_type, align 16, !dbg !2674
  %cmp114 = icmp eq i32 %110, 1, !dbg !2675
  br i1 %cmp114, label %land.lhs.true116, label %if.end127, !dbg !2676

land.lhs.true116:                                 ; preds = %if.end113
  %111 = load i32, i32* %got_independent_frame, align 4, !dbg !2677
  %tobool117 = icmp ne i32 %111, 0, !dbg !2677
  br i1 %tobool117, label %if.end127, label %if.then118, !dbg !2679

if.then118:                                       ; preds = %land.lhs.true116
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2680
  %113 = bitcast %struct.AVCodecContext* %112 to i8*, !dbg !2680
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i32 0, i32 0)), !dbg !2682
  %114 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2683
  store i32 0, i32* %114, align 4, !dbg !2684
  %115 = load i32, i32* %full_buf_size, align 4, !dbg !2685
  %116 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2686
  %frame_size119 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %116, i32 0, i32 6, !dbg !2687
  %117 = load i32, i32* %frame_size119, align 4, !dbg !2687
  %cmp120 = icmp sgt i32 %115, %117, !dbg !2688
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !2689

cond.true122:                                     ; preds = %if.then118
  %118 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2690
  %frame_size123 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %118, i32 0, i32 6, !dbg !2692
  %119 = load i32, i32* %frame_size123, align 4, !dbg !2692
  br label %cond.end125, !dbg !2693

cond.false124:                                    ; preds = %if.then118
  %120 = load i32, i32* %full_buf_size, align 4, !dbg !2694
  br label %cond.end125, !dbg !2696

cond.end125:                                      ; preds = %cond.false124, %cond.true122
  %cond126 = phi i32 [ %119, %cond.true122 ], [ %120, %cond.false124 ], !dbg !2697
  store i32 %cond126, i32* %retval, align 4, !dbg !2699
  br label %return, !dbg !2699

if.end127:                                        ; preds = %land.lhs.true116, %if.end113
  %121 = load i32, i32* %err, align 4, !dbg !2700
  %tobool128 = icmp ne i32 %121, 0, !dbg !2700
  br i1 %tobool128, label %lor.lhs.false129, label %if.then135, !dbg !2702

lor.lhs.false129:                                 ; preds = %if.end127
  %122 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2703
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %122, i32 0, i32 71, !dbg !2705
  %123 = load i32, i32* %channels, align 8, !dbg !2705
  %tobool130 = icmp ne i32 %123, 0, !dbg !2703
  br i1 %tobool130, label %land.lhs.true131, label %if.else187, !dbg !2706

land.lhs.true131:                                 ; preds = %lor.lhs.false129
  %124 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2707
  %out_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %124, i32 0, i32 77, !dbg !2709
  %125 = load i32, i32* %out_channels, align 4, !dbg !2709
  %126 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2710
  %channels132 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %126, i32 0, i32 71, !dbg !2711
  %127 = load i32, i32* %channels132, align 8, !dbg !2711
  %cmp133 = icmp ne i32 %125, %127, !dbg !2712
  br i1 %cmp133, label %if.then135, label %if.else187, !dbg !2713

if.then135:                                       ; preds = %land.lhs.true131, %if.end127
  %128 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2714
  %channels136 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %128, i32 0, i32 71, !dbg !2716
  %129 = load i32, i32* %channels136, align 8, !dbg !2716
  %130 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2717
  %out_channels137 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %130, i32 0, i32 77, !dbg !2718
  store i32 %129, i32* %out_channels137, align 4, !dbg !2719
  %131 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2720
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %131, i32 0, i32 12, !dbg !2721
  %132 = load i32, i32* %channel_mode, align 4, !dbg !2721
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2722
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 75, !dbg !2723
  store i32 %132, i32* %output_mode, align 4, !dbg !2724
  %134 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2725
  %lfe_on = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %134, i32 0, i32 13, !dbg !2727
  %135 = load i32, i32* %lfe_on, align 8, !dbg !2727
  %tobool138 = icmp ne i32 %135, 0, !dbg !2725
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !2728

if.then139:                                       ; preds = %if.then135
  %136 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2729
  %output_mode140 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %136, i32 0, i32 75, !dbg !2730
  %137 = load i32, i32* %output_mode140, align 4, !dbg !2731
  %or = or i32 %137, 8, !dbg !2731
  store i32 %or, i32* %output_mode140, align 4, !dbg !2731
  br label %if.end141, !dbg !2729

if.end141:                                        ; preds = %if.then139, %if.then135
  %138 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2732
  %channels142 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %138, i32 0, i32 71, !dbg !2734
  %139 = load i32, i32* %channels142, align 8, !dbg !2734
  %cmp143 = icmp sgt i32 %139, 1, !dbg !2735
  br i1 %cmp143, label %land.lhs.true145, label %if.else151, !dbg !2736

land.lhs.true145:                                 ; preds = %if.end141
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2737
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 90, !dbg !2738
  %141 = load i64, i64* %request_channel_layout, align 8, !dbg !2738
  %cmp146 = icmp eq i64 %141, 4, !dbg !2739
  br i1 %cmp146, label %if.then148, label %if.else151, !dbg !2740

if.then148:                                       ; preds = %land.lhs.true145
  %142 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2742
  %out_channels149 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %142, i32 0, i32 77, !dbg !2744
  store i32 1, i32* %out_channels149, align 4, !dbg !2745
  %143 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2746
  %output_mode150 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %143, i32 0, i32 75, !dbg !2747
  store i32 1, i32* %output_mode150, align 4, !dbg !2748
  br label %if.end163, !dbg !2749

if.else151:                                       ; preds = %land.lhs.true145, %if.end141
  %144 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2750
  %channels152 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %144, i32 0, i32 71, !dbg !2753
  %145 = load i32, i32* %channels152, align 8, !dbg !2753
  %cmp153 = icmp sgt i32 %145, 2, !dbg !2754
  br i1 %cmp153, label %land.lhs.true155, label %if.end162, !dbg !2755

land.lhs.true155:                                 ; preds = %if.else151
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2756
  %request_channel_layout156 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %146, i32 0, i32 90, !dbg !2757
  %147 = load i64, i64* %request_channel_layout156, align 8, !dbg !2757
  %cmp157 = icmp eq i64 %147, 3, !dbg !2758
  br i1 %cmp157, label %if.then159, label %if.end162, !dbg !2759

if.then159:                                       ; preds = %land.lhs.true155
  %148 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2761
  %out_channels160 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %148, i32 0, i32 77, !dbg !2763
  store i32 2, i32* %out_channels160, align 4, !dbg !2764
  %149 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2765
  %output_mode161 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %149, i32 0, i32 75, !dbg !2766
  store i32 2, i32* %output_mode161, align 4, !dbg !2767
  br label %if.end162, !dbg !2768

if.end162:                                        ; preds = %if.then159, %land.lhs.true155, %if.else151
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then148
  %150 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2769
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %150, i32 0, i32 19, !dbg !2770
  %151 = load i32, i32* %center_mix_level, align 4, !dbg !2770
  %idxprom164 = sext i32 %151 to i64, !dbg !2771
  %arrayidx165 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom164, !dbg !2771
  %152 = load float, float* %arrayidx165, align 4, !dbg !2771
  %153 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2772
  %loro_center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %153, i32 0, i32 34, !dbg !2773
  store float %152, float* %loro_center_mix_level, align 8, !dbg !2774
  %154 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2775
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %154, i32 0, i32 21, !dbg !2776
  %155 = load i32, i32* %surround_mix_level, align 4, !dbg !2776
  %idxprom166 = sext i32 %155 to i64, !dbg !2777
  %arrayidx167 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom166, !dbg !2777
  %156 = load float, float* %arrayidx167, align 4, !dbg !2777
  %157 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2778
  %loro_surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %157, i32 0, i32 35, !dbg !2779
  store float %156, float* %loro_surround_mix_level, align 4, !dbg !2780
  %158 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2781
  %ltrt_center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %158, i32 0, i32 32, !dbg !2782
  store float 0x3FE6A09E60000000, float* %ltrt_center_mix_level, align 16, !dbg !2783
  %159 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2784
  %ltrt_surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %159, i32 0, i32 33, !dbg !2785
  store float 0x3FE6A09E60000000, float* %ltrt_surround_mix_level, align 4, !dbg !2786
  %160 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2787
  %channels168 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %160, i32 0, i32 71, !dbg !2789
  %161 = load i32, i32* %channels168, align 8, !dbg !2789
  %162 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2790
  %out_channels169 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %162, i32 0, i32 77, !dbg !2791
  %163 = load i32, i32* %out_channels169, align 4, !dbg !2791
  %cmp170 = icmp ne i32 %161, %163, !dbg !2792
  br i1 %cmp170, label %land.lhs.true172, label %if.end186, !dbg !2793

land.lhs.true172:                                 ; preds = %if.end163
  %164 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2794
  %output_mode173 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %164, i32 0, i32 75, !dbg !2796
  %165 = load i32, i32* %output_mode173, align 4, !dbg !2796
  %and174 = and i32 %165, 8, !dbg !2797
  %tobool175 = icmp ne i32 %and174, 0, !dbg !2797
  br i1 %tobool175, label %land.lhs.true176, label %if.then180, !dbg !2798

land.lhs.true176:                                 ; preds = %land.lhs.true172
  %166 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2799
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %166, i32 0, i32 70, !dbg !2800
  %167 = load i32, i32* %fbw_channels, align 4, !dbg !2800
  %168 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2801
  %out_channels177 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %168, i32 0, i32 77, !dbg !2802
  %169 = load i32, i32* %out_channels177, align 4, !dbg !2802
  %cmp178 = icmp eq i32 %167, %169, !dbg !2803
  br i1 %cmp178, label %if.end186, label %if.then180, !dbg !2804

if.then180:                                       ; preds = %land.lhs.true176, %land.lhs.true172
  %170 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2806
  %call181 = call i32 @set_downmix_coeffs(%struct.AC3DecodeContext* %170), !dbg !2809
  store i32 %call181, i32* %ret, align 4, !dbg !2810
  %cmp182 = icmp slt i32 %call181, 0, !dbg !2811
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !2812

if.then184:                                       ; preds = %if.then180
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2813
  %172 = bitcast %struct.AVCodecContext* %171 to i8*, !dbg !2813
  call void (i8*, i32, i8*, ...) @av_log(i8* %172, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i32 0, i32 0)), !dbg !2815
  %173 = load i32, i32* %ret, align 4, !dbg !2816
  store i32 %173, i32* %retval, align 4, !dbg !2817
  br label %return, !dbg !2817

if.end185:                                        ; preds = %if.then180
  br label %if.end186, !dbg !2818

if.end186:                                        ; preds = %if.end185, %land.lhs.true176, %if.end163
  br label %if.end192, !dbg !2819

if.else187:                                       ; preds = %land.lhs.true131, %lor.lhs.false129
  %174 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2820
  %channels188 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %174, i32 0, i32 71, !dbg !2823
  %175 = load i32, i32* %channels188, align 8, !dbg !2823
  %tobool189 = icmp ne i32 %175, 0, !dbg !2820
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !2824

if.then190:                                       ; preds = %if.else187
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2825
  %177 = bitcast %struct.AVCodecContext* %176 to i8*, !dbg !2825
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i32 0, i32 0)), !dbg !2827
  store i32 -1094995529, i32* %retval, align 4, !dbg !2828
  br label %return, !dbg !2828

if.end191:                                        ; preds = %if.else187
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end186
  %178 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2829
  %out_channels193 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %178, i32 0, i32 77, !dbg !2830
  %179 = load i32, i32* %out_channels193, align 4, !dbg !2830
  %180 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2831
  %channels194 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %180, i32 0, i32 83, !dbg !2832
  store i32 %179, i32* %channels194, align 4, !dbg !2833
  %181 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2834
  %output_mode195 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %181, i32 0, i32 75, !dbg !2835
  %182 = load i32, i32* %output_mode195, align 4, !dbg !2835
  %and196 = and i32 %182, -9, !dbg !2836
  %idxprom197 = sext i32 %and196 to i64, !dbg !2837
  %arrayidx198 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %idxprom197, !dbg !2837
  %183 = load i16, i16* %arrayidx198, align 2, !dbg !2837
  %conv199 = zext i16 %183 to i64, !dbg !2837
  %184 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2838
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %184, i32 0, i32 89, !dbg !2839
  store i64 %conv199, i64* %channel_layout, align 8, !dbg !2840
  %185 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2841
  %output_mode200 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %185, i32 0, i32 75, !dbg !2843
  %186 = load i32, i32* %output_mode200, align 4, !dbg !2843
  %and201 = and i32 %186, 8, !dbg !2844
  %tobool202 = icmp ne i32 %and201, 0, !dbg !2844
  br i1 %tobool202, label %if.then203, label %if.end206, !dbg !2845

if.then203:                                       ; preds = %if.end192
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2846
  %channel_layout204 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %187, i32 0, i32 89, !dbg !2847
  %188 = load i64, i64* %channel_layout204, align 8, !dbg !2848
  %or205 = or i64 %188, 8, !dbg !2848
  store i64 %or205, i64* %channel_layout204, align 8, !dbg !2848
  br label %if.end206, !dbg !2846

if.end206:                                        ; preds = %if.then203, %if.end192
  %189 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2849
  %bitstream_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %189, i32 0, i32 11, !dbg !2850
  %190 = load i32, i32* %bitstream_mode, align 16, !dbg !2850
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2851
  %audio_service_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 91, !dbg !2852
  store i32 %190, i32* %audio_service_type, align 8, !dbg !2853
  %192 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2854
  %bitstream_mode207 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %192, i32 0, i32 11, !dbg !2856
  %193 = load i32, i32* %bitstream_mode207, align 16, !dbg !2856
  %cmp208 = icmp eq i32 %193, 7, !dbg !2857
  br i1 %cmp208, label %land.lhs.true210, label %if.end216, !dbg !2858

land.lhs.true210:                                 ; preds = %if.end206
  %194 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2859
  %channels211 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %194, i32 0, i32 71, !dbg !2861
  %195 = load i32, i32* %channels211, align 8, !dbg !2861
  %cmp212 = icmp sgt i32 %195, 1, !dbg !2862
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !2863

if.then214:                                       ; preds = %land.lhs.true210
  %196 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2864
  %audio_service_type215 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %196, i32 0, i32 91, !dbg !2865
  store i32 8, i32* %audio_service_type215, align 8, !dbg !2866
  br label %if.end216, !dbg !2864

if.end216:                                        ; preds = %if.then214, %land.lhs.true210, %if.end206
  %197 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2867
  %lfe_on217 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %197, i32 0, i32 13, !dbg !2868
  %198 = load i32, i32* %lfe_on217, align 8, !dbg !2868
  %idxprom218 = sext i32 %198 to i64, !dbg !2869
  %199 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2870
  %output_mode219 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %199, i32 0, i32 75, !dbg !2871
  %200 = load i32, i32* %output_mode219, align 4, !dbg !2871
  %and220 = and i32 %200, -9, !dbg !2872
  %idxprom221 = sext i32 %and220 to i64, !dbg !2869
  %arrayidx222 = getelementptr inbounds [8 x [2 x [6 x i8]]], [8 x [2 x [6 x i8]]]* @ff_ac3_dec_channel_map, i64 0, i64 %idxprom221, !dbg !2869
  %arrayidx223 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %arrayidx222, i64 0, i64 %idxprom218, !dbg !2869
  %arraydecay224 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx223, i32 0, i32 0, !dbg !2869
  store i8* %arraydecay224, i8** %channel_map, align 8, !dbg !2873
  %201 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2874
  %frame_type225 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %201, i32 0, i32 3, !dbg !2875
  %202 = load i32, i32* %frame_type225, align 16, !dbg !2875
  %cmp226 = icmp eq i32 %202, 1, !dbg !2876
  %cond228 = select i1 %cmp226, i32 7, i32 0, !dbg !2874
  store i32 %cond228, i32* %offset, align 4, !dbg !2877
  store i32 0, i32* %ch, align 4, !dbg !2878
  br label %for.cond229, !dbg !2880

for.cond229:                                      ; preds = %for.inc247, %if.end216
  %203 = load i32, i32* %ch, align 4, !dbg !2881
  %cmp230 = icmp slt i32 %203, 7, !dbg !2884
  br i1 %cmp230, label %for.body232, label %for.end248, !dbg !2885

for.body232:                                      ; preds = %for.cond229
  %204 = load i32, i32* %ch, align 4, !dbg !2886
  %205 = load i32, i32* %offset, align 4, !dbg !2888
  %add233 = add nsw i32 %204, %205, !dbg !2889
  %idxprom234 = sext i32 %add233 to i64, !dbg !2890
  %206 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2890
  %output235 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %206, i32 0, i32 123, !dbg !2891
  %arrayidx236 = getelementptr inbounds [16 x [256 x i16]], [16 x [256 x i16]]* %output235, i64 0, i64 %idxprom234, !dbg !2890
  %arraydecay237 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx236, i32 0, i32 0, !dbg !2890
  %207 = load i32, i32* %ch, align 4, !dbg !2892
  %idxprom238 = sext i32 %207 to i64, !dbg !2893
  %arrayidx239 = getelementptr inbounds [7 x i16*], [7 x i16*]* %output, i64 0, i64 %idxprom238, !dbg !2893
  store i16* %arraydecay237, i16** %arrayidx239, align 8, !dbg !2894
  %208 = load i32, i32* %ch, align 4, !dbg !2895
  %209 = load i32, i32* %offset, align 4, !dbg !2896
  %add240 = add nsw i32 %208, %209, !dbg !2897
  %idxprom241 = sext i32 %add240 to i64, !dbg !2898
  %210 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2898
  %output242 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %210, i32 0, i32 123, !dbg !2899
  %arrayidx243 = getelementptr inbounds [16 x [256 x i16]], [16 x [256 x i16]]* %output242, i64 0, i64 %idxprom241, !dbg !2898
  %arraydecay244 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx243, i32 0, i32 0, !dbg !2898
  %211 = load i32, i32* %ch, align 4, !dbg !2900
  %idxprom245 = sext i32 %211 to i64, !dbg !2901
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2901
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 113, !dbg !2902
  %arrayidx246 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr, i64 0, i64 %idxprom245, !dbg !2901
  store i16* %arraydecay244, i16** %arrayidx246, align 8, !dbg !2903
  br label %for.inc247, !dbg !2904

for.inc247:                                       ; preds = %for.body232
  %213 = load i32, i32* %ch, align 4, !dbg !2905
  %inc = add nsw i32 %213, 1, !dbg !2905
  store i32 %inc, i32* %ch, align 4, !dbg !2905
  br label %for.cond229, !dbg !2907, !llvm.loop !2908

for.end248:                                       ; preds = %for.cond229
  store i32 0, i32* %ch, align 4, !dbg !2910
  br label %for.cond249, !dbg !2912

for.cond249:                                      ; preds = %for.inc268, %for.end248
  %214 = load i32, i32* %ch, align 4, !dbg !2913
  %215 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2916
  %channels250 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %215, i32 0, i32 71, !dbg !2917
  %216 = load i32, i32* %channels250, align 8, !dbg !2917
  %cmp251 = icmp slt i32 %214, %216, !dbg !2918
  br i1 %cmp251, label %for.body253, label %for.end270, !dbg !2919

for.body253:                                      ; preds = %for.cond249
  %217 = load i32, i32* %ch, align 4, !dbg !2920
  %218 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2923
  %out_channels254 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %218, i32 0, i32 77, !dbg !2924
  %219 = load i32, i32* %out_channels254, align 4, !dbg !2924
  %cmp255 = icmp slt i32 %217, %219, !dbg !2925
  br i1 %cmp255, label %if.then257, label %if.end267, !dbg !2926

if.then257:                                       ; preds = %for.body253
  %220 = load i32, i32* %ch, align 4, !dbg !2927
  %221 = load i32, i32* %offset, align 4, !dbg !2928
  %add258 = add nsw i32 %220, %221, !dbg !2929
  %idxprom259 = sext i32 %add258 to i64, !dbg !2930
  %222 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2930
  %output_buffer = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %222, i32 0, i32 125, !dbg !2931
  %arrayidx260 = getelementptr inbounds [16 x [1536 x i16]], [16 x [1536 x i16]]* %output_buffer, i64 0, i64 %idxprom259, !dbg !2930
  %arraydecay261 = getelementptr inbounds [1536 x i16], [1536 x i16]* %arrayidx260, i32 0, i32 0, !dbg !2930
  %223 = load i32, i32* %ch, align 4, !dbg !2932
  %idxprom262 = sext i32 %223 to i64, !dbg !2933
  %224 = load i8*, i8** %channel_map, align 8, !dbg !2933
  %arrayidx263 = getelementptr inbounds i8, i8* %224, i64 %idxprom262, !dbg !2933
  %225 = load i8, i8* %arrayidx263, align 1, !dbg !2933
  %idxprom264 = zext i8 %225 to i64, !dbg !2934
  %226 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2934
  %outptr265 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %226, i32 0, i32 113, !dbg !2935
  %arrayidx266 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr265, i64 0, i64 %idxprom264, !dbg !2934
  store i16* %arraydecay261, i16** %arrayidx266, align 8, !dbg !2936
  br label %if.end267, !dbg !2934

if.end267:                                        ; preds = %if.then257, %for.body253
  br label %for.inc268, !dbg !2937

for.inc268:                                       ; preds = %if.end267
  %227 = load i32, i32* %ch, align 4, !dbg !2938
  %inc269 = add nsw i32 %227, 1, !dbg !2938
  store i32 %inc269, i32* %ch, align 4, !dbg !2938
  br label %for.cond249, !dbg !2940, !llvm.loop !2941

for.end270:                                       ; preds = %for.cond249
  store i32 0, i32* %blk, align 4, !dbg !2943
  br label %for.cond271, !dbg !2945

for.cond271:                                      ; preds = %for.inc338, %for.end270
  %228 = load i32, i32* %blk, align 4, !dbg !2946
  %229 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2949
  %num_blocks = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %229, i32 0, i32 9, !dbg !2950
  %230 = load i32, i32* %num_blocks, align 8, !dbg !2950
  %cmp272 = icmp slt i32 %228, %230, !dbg !2951
  br i1 %cmp272, label %for.body274, label %for.end340, !dbg !2952

for.body274:                                      ; preds = %for.cond271
  %231 = load i32, i32* %err, align 4, !dbg !2953
  %tobool275 = icmp ne i32 %231, 0, !dbg !2953
  br i1 %tobool275, label %if.end280, label %land.lhs.true276, !dbg !2956

land.lhs.true276:                                 ; preds = %for.body274
  %232 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2957
  %233 = load i32, i32* %blk, align 4, !dbg !2959
  %234 = load i32, i32* %offset, align 4, !dbg !2960
  %call277 = call i32 @decode_audio_block(%struct.AC3DecodeContext* %232, i32 %233, i32 %234), !dbg !2961
  %tobool278 = icmp ne i32 %call277, 0, !dbg !2961
  br i1 %tobool278, label %if.then279, label %if.end280, !dbg !2962

if.then279:                                       ; preds = %land.lhs.true276
  %235 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2963
  %236 = bitcast %struct.AVCodecContext* %235 to i8*, !dbg !2963
  call void (i8*, i32, i8*, ...) @av_log(i8* %236, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !2965
  store i32 1, i32* %err, align 4, !dbg !2966
  br label %if.end280, !dbg !2967

if.end280:                                        ; preds = %if.then279, %land.lhs.true276, %for.body274
  %237 = load i32, i32* %err, align 4, !dbg !2968
  %tobool281 = icmp ne i32 %237, 0, !dbg !2968
  br i1 %tobool281, label %if.then282, label %if.end300, !dbg !2970

if.then282:                                       ; preds = %if.end280
  store i32 0, i32* %ch, align 4, !dbg !2971
  br label %for.cond283, !dbg !2973

for.cond283:                                      ; preds = %for.inc297, %if.then282
  %238 = load i32, i32* %ch, align 4, !dbg !2974
  %239 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2977
  %out_channels284 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %239, i32 0, i32 77, !dbg !2978
  %240 = load i32, i32* %out_channels284, align 4, !dbg !2978
  %cmp285 = icmp slt i32 %238, %240, !dbg !2979
  br i1 %cmp285, label %for.body287, label %for.end299, !dbg !2980

for.body287:                                      ; preds = %for.cond283
  %241 = load i32, i32* %ch, align 4, !dbg !2981
  %242 = load i32, i32* %offset, align 4, !dbg !2982
  %add288 = add nsw i32 %241, %242, !dbg !2983
  %idxprom289 = sext i32 %add288 to i64, !dbg !2984
  %243 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2984
  %output_buffer290 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %243, i32 0, i32 125, !dbg !2985
  %arrayidx291 = getelementptr inbounds [16 x [1536 x i16]], [16 x [1536 x i16]]* %output_buffer290, i64 0, i64 %idxprom289, !dbg !2984
  %arraydecay292 = getelementptr inbounds [1536 x i16], [1536 x i16]* %arrayidx291, i32 0, i32 0, !dbg !2984
  %244 = load i32, i32* %blk, align 4, !dbg !2986
  %mul = mul nsw i32 256, %244, !dbg !2987
  %idx.ext293 = sext i32 %mul to i64, !dbg !2988
  %add.ptr294 = getelementptr inbounds i16, i16* %arraydecay292, i64 %idx.ext293, !dbg !2988
  %245 = bitcast i16* %add.ptr294 to i8*, !dbg !2989
  %246 = load i32, i32* %ch, align 4, !dbg !2990
  %idxprom295 = sext i32 %246 to i64, !dbg !2991
  %arrayidx296 = getelementptr inbounds [7 x i16*], [7 x i16*]* %output, i64 0, i64 %idxprom295, !dbg !2991
  %247 = load i16*, i16** %arrayidx296, align 8, !dbg !2991
  %248 = bitcast i16* %247 to i8*, !dbg !2989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %248, i64 512, i32 2, i1 false), !dbg !2989
  br label %for.inc297, !dbg !2989

for.inc297:                                       ; preds = %for.body287
  %249 = load i32, i32* %ch, align 4, !dbg !2992
  %inc298 = add nsw i32 %249, 1, !dbg !2992
  store i32 %inc298, i32* %ch, align 4, !dbg !2992
  br label %for.cond283, !dbg !2994, !llvm.loop !2995

for.end299:                                       ; preds = %for.cond283
  br label %if.end300, !dbg !2997

if.end300:                                        ; preds = %for.end299, %if.end280
  store i32 0, i32* %ch, align 4, !dbg !2999
  br label %for.cond301, !dbg !3001

for.cond301:                                      ; preds = %for.inc313, %if.end300
  %250 = load i32, i32* %ch, align 4, !dbg !3002
  %251 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3005
  %out_channels302 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %251, i32 0, i32 77, !dbg !3006
  %252 = load i32, i32* %out_channels302, align 4, !dbg !3006
  %cmp303 = icmp slt i32 %250, %252, !dbg !3007
  br i1 %cmp303, label %for.body305, label %for.end315, !dbg !3008

for.body305:                                      ; preds = %for.cond301
  %253 = load i32, i32* %ch, align 4, !dbg !3009
  %idxprom306 = sext i32 %253 to i64, !dbg !3010
  %254 = load i8*, i8** %channel_map, align 8, !dbg !3010
  %arrayidx307 = getelementptr inbounds i8, i8* %254, i64 %idxprom306, !dbg !3010
  %255 = load i8, i8* %arrayidx307, align 1, !dbg !3010
  %idxprom308 = zext i8 %255 to i64, !dbg !3011
  %256 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3011
  %outptr309 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %256, i32 0, i32 113, !dbg !3012
  %arrayidx310 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr309, i64 0, i64 %idxprom308, !dbg !3011
  %257 = load i16*, i16** %arrayidx310, align 8, !dbg !3011
  %258 = load i32, i32* %ch, align 4, !dbg !3013
  %idxprom311 = sext i32 %258 to i64, !dbg !3014
  %arrayidx312 = getelementptr inbounds [7 x i16*], [7 x i16*]* %output, i64 0, i64 %idxprom311, !dbg !3014
  store i16* %257, i16** %arrayidx312, align 8, !dbg !3015
  br label %for.inc313, !dbg !3014

for.inc313:                                       ; preds = %for.body305
  %259 = load i32, i32* %ch, align 4, !dbg !3016
  %inc314 = add nsw i32 %259, 1, !dbg !3016
  store i32 %inc314, i32* %ch, align 4, !dbg !3016
  br label %for.cond301, !dbg !3018, !llvm.loop !3019

for.end315:                                       ; preds = %for.cond301
  store i32 0, i32* %ch, align 4, !dbg !3021
  br label %for.cond316, !dbg !3023

for.cond316:                                      ; preds = %for.inc335, %for.end315
  %260 = load i32, i32* %ch, align 4, !dbg !3024
  %261 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3027
  %out_channels317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %261, i32 0, i32 77, !dbg !3028
  %262 = load i32, i32* %out_channels317, align 4, !dbg !3028
  %cmp318 = icmp slt i32 %260, %262, !dbg !3029
  br i1 %cmp318, label %for.body320, label %for.end337, !dbg !3030

for.body320:                                      ; preds = %for.cond316
  %263 = load i32, i32* %ch, align 4, !dbg !3031
  %tobool321 = icmp ne i32 %263, 0, !dbg !3031
  br i1 %tobool321, label %lor.lhs.false322, label %if.then327, !dbg !3034

lor.lhs.false322:                                 ; preds = %for.body320
  %264 = load i32, i32* %ch, align 4, !dbg !3035
  %idxprom323 = sext i32 %264 to i64, !dbg !3037
  %265 = load i8*, i8** %channel_map, align 8, !dbg !3037
  %arrayidx324 = getelementptr inbounds i8, i8* %265, i64 %idxprom323, !dbg !3037
  %266 = load i8, i8* %arrayidx324, align 1, !dbg !3037
  %conv325 = zext i8 %266 to i32, !dbg !3037
  %tobool326 = icmp ne i32 %conv325, 0, !dbg !3037
  br i1 %tobool326, label %if.then327, label %if.end334, !dbg !3038

if.then327:                                       ; preds = %lor.lhs.false322, %for.body320
  %267 = load i32, i32* %ch, align 4, !dbg !3039
  %idxprom328 = sext i32 %267 to i64, !dbg !3040
  %268 = load i8*, i8** %channel_map, align 8, !dbg !3040
  %arrayidx329 = getelementptr inbounds i8, i8* %268, i64 %idxprom328, !dbg !3040
  %269 = load i8, i8* %arrayidx329, align 1, !dbg !3040
  %idxprom330 = zext i8 %269 to i64, !dbg !3041
  %270 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3041
  %outptr331 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %270, i32 0, i32 113, !dbg !3042
  %arrayidx332 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr331, i64 0, i64 %idxprom330, !dbg !3041
  %271 = load i16*, i16** %arrayidx332, align 8, !dbg !3043
  %add.ptr333 = getelementptr inbounds i16, i16* %271, i64 256, !dbg !3043
  store i16* %add.ptr333, i16** %arrayidx332, align 8, !dbg !3043
  br label %if.end334, !dbg !3041

if.end334:                                        ; preds = %if.then327, %lor.lhs.false322
  br label %for.inc335, !dbg !3044

for.inc335:                                       ; preds = %if.end334
  %272 = load i32, i32* %ch, align 4, !dbg !3045
  %inc336 = add nsw i32 %272, 1, !dbg !3045
  store i32 %inc336, i32* %ch, align 4, !dbg !3045
  br label %for.cond316, !dbg !3047, !llvm.loop !3048

for.end337:                                       ; preds = %for.cond316
  br label %for.inc338, !dbg !3050

for.inc338:                                       ; preds = %for.end337
  %273 = load i32, i32* %blk, align 4, !dbg !3051
  %inc339 = add nsw i32 %273, 1, !dbg !3051
  store i32 %inc339, i32* %blk, align 4, !dbg !3051
  br label %for.cond271, !dbg !3053, !llvm.loop !3054

for.end340:                                       ; preds = %for.cond271
  store i32 0, i32* %ch, align 4, !dbg !3056
  br label %for.cond341, !dbg !3058

for.cond341:                                      ; preds = %for.inc353, %for.end340
  %274 = load i32, i32* %ch, align 4, !dbg !3059
  %275 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3062
  %out_channels342 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %275, i32 0, i32 77, !dbg !3063
  %276 = load i32, i32* %out_channels342, align 4, !dbg !3063
  %cmp343 = icmp slt i32 %274, %276, !dbg !3064
  br i1 %cmp343, label %for.body345, label %for.end355, !dbg !3065

for.body345:                                      ; preds = %for.cond341
  %277 = load i32, i32* %ch, align 4, !dbg !3066
  %278 = load i32, i32* %offset, align 4, !dbg !3067
  %add346 = add nsw i32 %277, %278, !dbg !3068
  %idxprom347 = sext i32 %add346 to i64, !dbg !3069
  %279 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3069
  %output348 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %279, i32 0, i32 123, !dbg !3070
  %arrayidx349 = getelementptr inbounds [16 x [256 x i16]], [16 x [256 x i16]]* %output348, i64 0, i64 %idxprom347, !dbg !3069
  %arraydecay350 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx349, i32 0, i32 0, !dbg !3071
  %280 = bitcast i16* %arraydecay350 to i8*, !dbg !3071
  %281 = load i32, i32* %ch, align 4, !dbg !3072
  %idxprom351 = sext i32 %281 to i64, !dbg !3073
  %arrayidx352 = getelementptr inbounds [7 x i16*], [7 x i16*]* %output, i64 0, i64 %idxprom351, !dbg !3073
  %282 = load i16*, i16** %arrayidx352, align 8, !dbg !3073
  %283 = bitcast i16* %282 to i8*, !dbg !3071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %283, i64 512, i32 2, i1 false), !dbg !3071
  br label %for.inc353, !dbg !3071

for.inc353:                                       ; preds = %for.body345
  %284 = load i32, i32* %ch, align 4, !dbg !3074
  %inc354 = add nsw i32 %284, 1, !dbg !3074
  store i32 %inc354, i32* %ch, align 4, !dbg !3074
  br label %for.cond341, !dbg !3076, !llvm.loop !3077

for.end355:                                       ; preds = %for.cond341
  %285 = load i32, i32* %buf_size, align 4, !dbg !3079
  %286 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3081
  %frame_size356 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %286, i32 0, i32 6, !dbg !3082
  %287 = load i32, i32* %frame_size356, align 4, !dbg !3082
  %cmp357 = icmp sgt i32 %285, %287, !dbg !3083
  br i1 %cmp357, label %if.then359, label %if.end409, !dbg !3084

if.then359:                                       ; preds = %for.end355
  call void @llvm.dbg.declare(metadata %struct.AC3HeaderInfo* %hdr, metadata !3085, metadata !1849), !dbg !3110
  call void @llvm.dbg.declare(metadata i32* %err360, metadata !3111, metadata !1849), !dbg !3112
  %288 = load i32, i32* %buf_size, align 4, !dbg !3113
  %289 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3115
  %frame_size361 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %289, i32 0, i32 6, !dbg !3116
  %290 = load i32, i32* %frame_size361, align 4, !dbg !3116
  %sub362 = sub nsw i32 %288, %290, !dbg !3117
  %cmp363 = icmp sle i32 %sub362, 16, !dbg !3118
  br i1 %cmp363, label %if.then365, label %if.end368, !dbg !3119

if.then365:                                       ; preds = %if.then359
  %291 = load i32, i32* %buf_size, align 4, !dbg !3120
  %292 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3122
  %frame_size366 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %292, i32 0, i32 6, !dbg !3123
  %293 = load i32, i32* %frame_size366, align 4, !dbg !3123
  %sub367 = sub nsw i32 %291, %293, !dbg !3124
  store i32 %sub367, i32* %skip, align 4, !dbg !3125
  br label %skip410, !dbg !3126

if.end368:                                        ; preds = %if.then359
  %294 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3127
  %gbc369 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %294, i32 0, i32 2, !dbg !3129
  %295 = load i8*, i8** %buf, align 8, !dbg !3130
  %296 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3131
  %frame_size370 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %296, i32 0, i32 6, !dbg !3132
  %297 = load i32, i32* %frame_size370, align 4, !dbg !3132
  %idx.ext371 = sext i32 %297 to i64, !dbg !3133
  %add.ptr372 = getelementptr inbounds i8, i8* %295, i64 %idx.ext371, !dbg !3133
  %298 = load i32, i32* %buf_size, align 4, !dbg !3134
  %299 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3135
  %frame_size373 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %299, i32 0, i32 6, !dbg !3136
  %300 = load i32, i32* %frame_size373, align 4, !dbg !3136
  %sub374 = sub nsw i32 %298, %300, !dbg !3137
  %call375 = call i32 @init_get_bits8(%struct.GetBitContext* %gbc369, i8* %add.ptr372, i32 %sub374), !dbg !3138
  store i32 %call375, i32* %ret, align 4, !dbg !3139
  %cmp376 = icmp slt i32 %call375, 0, !dbg !3140
  br i1 %cmp376, label %if.then378, label %if.end379, !dbg !3141

if.then378:                                       ; preds = %if.end368
  %301 = load i32, i32* %ret, align 4, !dbg !3142
  store i32 %301, i32* %retval, align 4, !dbg !3143
  br label %return, !dbg !3143

if.end379:                                        ; preds = %if.end368
  %302 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3144
  %gbc380 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %302, i32 0, i32 2, !dbg !3145
  %call381 = call i32 @ff_ac3_parse_header(%struct.GetBitContext* %gbc380, %struct.AC3HeaderInfo* %hdr), !dbg !3146
  store i32 %call381, i32* %err360, align 4, !dbg !3147
  %303 = load i32, i32* %err360, align 4, !dbg !3148
  %tobool382 = icmp ne i32 %303, 0, !dbg !3148
  br i1 %tobool382, label %if.then383, label %if.end384, !dbg !3150

if.then383:                                       ; preds = %if.end379
  %304 = load i32, i32* %err360, align 4, !dbg !3151
  store i32 %304, i32* %retval, align 4, !dbg !3152
  br label %return, !dbg !3152

if.end384:                                        ; preds = %if.end379
  %frame_type385 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 7, !dbg !3153
  %305 = load i8, i8* %frame_type385, align 1, !dbg !3153
  %conv386 = zext i8 %305 to i32, !dbg !3155
  %cmp387 = icmp eq i32 %conv386, 1, !dbg !3156
  br i1 %cmp387, label %if.then389, label %if.end408, !dbg !3157

if.then389:                                       ; preds = %if.end384
  %num_blocks390 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 12, !dbg !3158
  %306 = load i32, i32* %num_blocks390, align 4, !dbg !3158
  %307 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3161
  %num_blocks391 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %307, i32 0, i32 9, !dbg !3162
  %308 = load i32, i32* %num_blocks391, align 8, !dbg !3162
  %cmp392 = icmp ne i32 %306, %308, !dbg !3163
  br i1 %cmp392, label %if.then399, label %lor.lhs.false394, !dbg !3164

lor.lhs.false394:                                 ; preds = %if.then389
  %309 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3165
  %sample_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %309, i32 0, i32 8, !dbg !3167
  %310 = load i32, i32* %sample_rate, align 4, !dbg !3167
  %sample_rate395 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 15, !dbg !3168
  %311 = load i16, i16* %sample_rate395, align 2, !dbg !3168
  %conv396 = zext i16 %311 to i32, !dbg !3169
  %cmp397 = icmp ne i32 %310, %conv396, !dbg !3170
  br i1 %cmp397, label %if.then399, label %if.else400, !dbg !3171

if.then399:                                       ; preds = %lor.lhs.false394, %if.then389
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3172
  %313 = bitcast %struct.AVCodecContext* %312 to i8*, !dbg !3172
  call void (i8*, i32, i8*, ...) @av_log(i8* %313, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0)), !dbg !3174
  br label %if.end407, !dbg !3175

if.else400:                                       ; preds = %lor.lhs.false394
  %314 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3176
  %frame_size401 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %314, i32 0, i32 6, !dbg !3178
  %315 = load i32, i32* %frame_size401, align 4, !dbg !3178
  %316 = load i8*, i8** %buf, align 8, !dbg !3179
  %idx.ext402 = sext i32 %315 to i64, !dbg !3179
  %add.ptr403 = getelementptr inbounds i8, i8* %316, i64 %idx.ext402, !dbg !3179
  store i8* %add.ptr403, i8** %buf, align 8, !dbg !3179
  %317 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3180
  %frame_size404 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %317, i32 0, i32 6, !dbg !3181
  %318 = load i32, i32* %frame_size404, align 4, !dbg !3181
  %319 = load i32, i32* %buf_size, align 4, !dbg !3182
  %sub405 = sub nsw i32 %319, %318, !dbg !3182
  store i32 %sub405, i32* %buf_size, align 4, !dbg !3182
  %320 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3183
  %output_mode406 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %320, i32 0, i32 75, !dbg !3184
  %321 = load i32, i32* %output_mode406, align 4, !dbg !3184
  %322 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3185
  %prev_output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %322, i32 0, i32 76, !dbg !3186
  store i32 %321, i32* %prev_output_mode, align 8, !dbg !3187
  %323 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3188
  %bit_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %323, i32 0, i32 7, !dbg !3189
  %324 = load i32, i32* %bit_rate, align 32, !dbg !3189
  %325 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3190
  %prev_bit_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %325, i32 0, i32 78, !dbg !3191
  store i32 %324, i32* %prev_bit_rate, align 16, !dbg !3192
  store i32 1, i32* %got_independent_frame, align 4, !dbg !3193
  br label %dependent_frame, !dbg !3194

if.end407:                                        ; preds = %if.then399
  br label %if.end408, !dbg !3195

if.end408:                                        ; preds = %if.end407, %if.end384
  br label %if.end409, !dbg !3196

if.end409:                                        ; preds = %if.end408, %for.end355
  br label %skip410, !dbg !3197

skip410:                                          ; preds = %if.end409, %if.then365
  %326 = load i32, i32* %err, align 4, !dbg !3199
  %tobool411 = icmp ne i32 %326, 0, !dbg !3199
  %cond412 = select i1 %tobool411, i32 1, i32 0, !dbg !3199
  %327 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3200
  %decode_error_flags = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %327, i32 0, i32 40, !dbg !3201
  store i32 %cond412, i32* %decode_error_flags, align 8, !dbg !3202
  %328 = load i32, i32* %err, align 4, !dbg !3203
  %tobool413 = icmp ne i32 %328, 0, !dbg !3203
  br i1 %tobool413, label %if.end422, label %if.then414, !dbg !3205

if.then414:                                       ; preds = %skip410
  %329 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3206
  %sample_rate415 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %329, i32 0, i32 8, !dbg !3208
  %330 = load i32, i32* %sample_rate415, align 4, !dbg !3208
  %331 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3209
  %sample_rate416 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %331, i32 0, i32 82, !dbg !3210
  store i32 %330, i32* %sample_rate416, align 8, !dbg !3211
  %332 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3212
  %bit_rate417 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %332, i32 0, i32 7, !dbg !3213
  %333 = load i32, i32* %bit_rate417, align 32, !dbg !3213
  %334 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3214
  %prev_bit_rate418 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %334, i32 0, i32 78, !dbg !3215
  %335 = load i32, i32* %prev_bit_rate418, align 16, !dbg !3215
  %add419 = add nsw i32 %333, %335, !dbg !3216
  %conv420 = sext i32 %add419 to i64, !dbg !3212
  %336 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3217
  %bit_rate421 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %336, i32 0, i32 9, !dbg !3218
  store i64 %conv420, i64* %bit_rate421, align 8, !dbg !3219
  br label %if.end422, !dbg !3220

if.end422:                                        ; preds = %if.then414, %skip410
  store i32 0, i32* %ch, align 4, !dbg !3221
  br label %for.cond423, !dbg !3223

for.cond423:                                      ; preds = %for.inc430, %if.end422
  %337 = load i32, i32* %ch, align 4, !dbg !3224
  %cmp424 = icmp slt i32 %337, 16, !dbg !3227
  br i1 %cmp424, label %for.body426, label %for.end432, !dbg !3228

for.body426:                                      ; preds = %for.cond423
  %338 = load i32, i32* %ch, align 4, !dbg !3229
  %conv427 = trunc i32 %338 to i8, !dbg !3229
  %339 = load i32, i32* %ch, align 4, !dbg !3230
  %idxprom428 = sext i32 %339 to i64, !dbg !3231
  %arrayidx429 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom428, !dbg !3231
  store i8 %conv427, i8* %arrayidx429, align 1, !dbg !3232
  br label %for.inc430, !dbg !3231

for.inc430:                                       ; preds = %for.body426
  %340 = load i32, i32* %ch, align 4, !dbg !3233
  %inc431 = add nsw i32 %340, 1, !dbg !3233
  store i32 %inc431, i32* %ch, align 4, !dbg !3233
  br label %for.cond423, !dbg !3235, !llvm.loop !3236

for.end432:                                       ; preds = %for.cond423
  %341 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3238
  %frame_type433 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %341, i32 0, i32 3, !dbg !3240
  %342 = load i32, i32* %frame_type433, align 16, !dbg !3240
  %cmp434 = icmp eq i32 %342, 1, !dbg !3241
  br i1 %cmp434, label %if.then436, label %if.end561, !dbg !3242

if.then436:                                       ; preds = %for.end432
  call void @llvm.dbg.declare(metadata i64* %ich_layout, metadata !3243, metadata !1849), !dbg !3245
  %343 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3246
  %prev_output_mode437 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %343, i32 0, i32 76, !dbg !3247
  %344 = load i32, i32* %prev_output_mode437, align 8, !dbg !3247
  %and438 = and i32 %344, -9, !dbg !3248
  %idxprom439 = sext i32 %and438 to i64, !dbg !3249
  %arrayidx440 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %idxprom439, !dbg !3249
  %345 = load i16, i16* %arrayidx440, align 2, !dbg !3249
  %conv441 = zext i16 %345 to i64, !dbg !3249
  store i64 %conv441, i64* %ich_layout, align 8, !dbg !3245
  call void @llvm.dbg.declare(metadata i32* %channel_map_size, metadata !3250, metadata !1849), !dbg !3251
  %346 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3252
  %output_mode442 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %346, i32 0, i32 75, !dbg !3253
  %347 = load i32, i32* %output_mode442, align 4, !dbg !3253
  %and443 = and i32 %347, -9, !dbg !3254
  %idxprom444 = sext i32 %and443 to i64, !dbg !3255
  %arrayidx445 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_ac3_channels_tab, i64 0, i64 %idxprom444, !dbg !3255
  %348 = load i8, i8* %arrayidx445, align 1, !dbg !3255
  %conv446 = zext i8 %348 to i32, !dbg !3255
  %349 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3256
  %lfe_on447 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %349, i32 0, i32 13, !dbg !3257
  %350 = load i32, i32* %lfe_on447, align 8, !dbg !3257
  %add448 = add nsw i32 %conv446, %350, !dbg !3258
  store i32 %add448, i32* %channel_map_size, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i64* %channel_layout449, metadata !3259, metadata !1849), !dbg !3260
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !3261, metadata !1849), !dbg !3262
  store i32 0, i32* %extend, align 4, !dbg !3262
  %351 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3263
  %prev_output_mode450 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %351, i32 0, i32 76, !dbg !3265
  %352 = load i32, i32* %prev_output_mode450, align 8, !dbg !3265
  %and451 = and i32 %352, 8, !dbg !3266
  %tobool452 = icmp ne i32 %and451, 0, !dbg !3266
  br i1 %tobool452, label %if.then453, label %if.end455, !dbg !3267

if.then453:                                       ; preds = %if.then436
  %353 = load i64, i64* %ich_layout, align 8, !dbg !3268
  %or454 = or i64 %353, 8, !dbg !3268
  store i64 %or454, i64* %ich_layout, align 8, !dbg !3268
  br label %if.end455, !dbg !3269

if.end455:                                        ; preds = %if.then453, %if.then436
  %354 = load i64, i64* %ich_layout, align 8, !dbg !3270
  store i64 %354, i64* %channel_layout449, align 8, !dbg !3271
  store i32 0, i32* %ch, align 4, !dbg !3272
  br label %for.cond456, !dbg !3274

for.cond456:                                      ; preds = %for.inc471, %if.end455
  %355 = load i32, i32* %ch, align 4, !dbg !3275
  %cmp457 = icmp slt i32 %355, 16, !dbg !3278
  br i1 %cmp457, label %for.body459, label %for.end473, !dbg !3279

for.body459:                                      ; preds = %for.cond456
  %356 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3280
  %channel_map460 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %356, i32 0, i32 17, !dbg !3283
  %357 = load i32, i32* %channel_map460, align 4, !dbg !3283
  %358 = load i32, i32* %ch, align 4, !dbg !3284
  %sub461 = sub nsw i32 16, %358, !dbg !3285
  %sub462 = sub nsw i32 %sub461, 1, !dbg !3286
  %shl = shl i32 1, %sub462, !dbg !3287
  %and463 = and i32 %357, %shl, !dbg !3288
  %tobool464 = icmp ne i32 %and463, 0, !dbg !3288
  br i1 %tobool464, label %if.then465, label %if.end470, !dbg !3289

if.then465:                                       ; preds = %for.body459
  %359 = load i32, i32* %ch, align 4, !dbg !3290
  %idxprom466 = sext i32 %359 to i64, !dbg !3292
  %arrayidx467 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom466, !dbg !3292
  %arrayidx468 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx467, i64 0, i64 1, !dbg !3292
  %360 = load i64, i64* %arrayidx468, align 8, !dbg !3292
  %361 = load i64, i64* %channel_layout449, align 8, !dbg !3293
  %or469 = or i64 %361, %360, !dbg !3293
  store i64 %or469, i64* %channel_layout449, align 8, !dbg !3293
  br label %if.end470, !dbg !3294

if.end470:                                        ; preds = %if.then465, %for.body459
  br label %for.inc471, !dbg !3295

for.inc471:                                       ; preds = %if.end470
  %362 = load i32, i32* %ch, align 4, !dbg !3296
  %inc472 = add nsw i32 %362, 1, !dbg !3296
  store i32 %inc472, i32* %ch, align 4, !dbg !3296
  br label %for.cond456, !dbg !3298, !llvm.loop !3299

for.end473:                                       ; preds = %for.cond456
  %363 = load i64, i64* %channel_layout449, align 8, !dbg !3301
  %call474 = call i32 @av_get_channel_layout_nb_channels(i64 %363), !dbg !3303
  %cmp475 = icmp sgt i32 %call474, 16, !dbg !3304
  br i1 %cmp475, label %if.then477, label %if.end479, !dbg !3305

if.then477:                                       ; preds = %for.end473
  %364 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3306
  %365 = bitcast %struct.AVCodecContext* %364 to i8*, !dbg !3306
  %366 = load i64, i64* %channel_layout449, align 8, !dbg !3308
  %call478 = call i32 @av_get_channel_layout_nb_channels(i64 %366), !dbg !3309
  call void (i8*, i32, i8*, ...) @av_log(i8* %365, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 %call478), !dbg !3310
  store i32 -1094995529, i32* %retval, align 4, !dbg !3311
  br label %return, !dbg !3311

if.end479:                                        ; preds = %for.end473
  %367 = load i64, i64* %channel_layout449, align 8, !dbg !3312
  %368 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3313
  %channel_layout480 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %368, i32 0, i32 89, !dbg !3314
  store i64 %367, i64* %channel_layout480, align 8, !dbg !3315
  %369 = load i64, i64* %channel_layout449, align 8, !dbg !3316
  %call481 = call i32 @av_get_channel_layout_nb_channels(i64 %369), !dbg !3317
  %370 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3318
  %channels482 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %370, i32 0, i32 83, !dbg !3319
  store i32 %call481, i32* %channels482, align 4, !dbg !3320
  store i32 0, i32* %ch, align 4, !dbg !3321
  br label %for.cond483, !dbg !3323

for.cond483:                                      ; preds = %for.inc558, %if.end479
  %371 = load i32, i32* %ch, align 4, !dbg !3324
  %cmp484 = icmp slt i32 %371, 16, !dbg !3327
  br i1 %cmp484, label %for.body486, label %for.end560, !dbg !3328

for.body486:                                      ; preds = %for.cond483
  %372 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3329
  %channel_map487 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %372, i32 0, i32 17, !dbg !3332
  %373 = load i32, i32* %channel_map487, align 4, !dbg !3332
  %374 = load i32, i32* %ch, align 4, !dbg !3333
  %sub488 = sub nsw i32 16, %374, !dbg !3334
  %sub489 = sub nsw i32 %sub488, 1, !dbg !3335
  %shl490 = shl i32 1, %sub489, !dbg !3336
  %and491 = and i32 %373, %shl490, !dbg !3337
  %tobool492 = icmp ne i32 %and491, 0, !dbg !3337
  br i1 %tobool492, label %if.then493, label %if.end557, !dbg !3338

if.then493:                                       ; preds = %for.body486
  %375 = load i32, i32* %ch, align 4, !dbg !3339
  %idxprom494 = sext i32 %375 to i64, !dbg !3342
  %arrayidx495 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom494, !dbg !3342
  %arrayidx496 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx495, i64 0, i64 0, !dbg !3342
  %376 = load i64, i64* %arrayidx496, align 16, !dbg !3342
  %tobool497 = icmp ne i64 %376, 0, !dbg !3342
  br i1 %tobool497, label %if.then498, label %if.else519, !dbg !3343

if.then498:                                       ; preds = %if.then493
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3344, metadata !1849), !dbg !3346
  %377 = load i64, i64* %channel_layout449, align 8, !dbg !3347
  %378 = load i32, i32* %ch, align 4, !dbg !3348
  %idxprom499 = sext i32 %378 to i64, !dbg !3349
  %arrayidx500 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom499, !dbg !3349
  %arrayidx501 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx500, i64 0, i64 1, !dbg !3349
  %379 = load i64, i64* %arrayidx501, align 8, !dbg !3349
  %call502 = call i32 @av_get_channel_layout_channel_index(i64 %377, i64 %379), !dbg !3350
  store i32 %call502, i32* %index, align 4, !dbg !3346
  %380 = load i32, i32* %index, align 4, !dbg !3351
  %cmp503 = icmp slt i32 %380, 0, !dbg !3353
  br i1 %cmp503, label %if.then505, label %if.end506, !dbg !3354

if.then505:                                       ; preds = %if.then498
  store i32 -1094995529, i32* %retval, align 4, !dbg !3355
  br label %return, !dbg !3355

if.end506:                                        ; preds = %if.then498
  %381 = load i32, i32* %extend, align 4, !dbg !3356
  %382 = load i32, i32* %channel_map_size, align 4, !dbg !3358
  %cmp507 = icmp sge i32 %381, %382, !dbg !3359
  br i1 %cmp507, label %if.then509, label %if.end510, !dbg !3360

if.then509:                                       ; preds = %if.end506
  store i32 -1094995529, i32* %retval, align 4, !dbg !3361
  br label %return, !dbg !3361

if.end510:                                        ; preds = %if.end506
  %383 = load i32, i32* %offset, align 4, !dbg !3362
  %384 = load i32, i32* %extend, align 4, !dbg !3363
  %inc511 = add nsw i32 %384, 1, !dbg !3363
  store i32 %inc511, i32* %extend, align 4, !dbg !3363
  %idxprom512 = sext i32 %384 to i64, !dbg !3364
  %385 = load i8*, i8** %channel_map, align 8, !dbg !3364
  %arrayidx513 = getelementptr inbounds i8, i8* %385, i64 %idxprom512, !dbg !3364
  %386 = load i8, i8* %arrayidx513, align 1, !dbg !3364
  %conv514 = zext i8 %386 to i32, !dbg !3364
  %add515 = add nsw i32 %383, %conv514, !dbg !3365
  %conv516 = trunc i32 %add515 to i8, !dbg !3362
  %387 = load i32, i32* %index, align 4, !dbg !3366
  %idxprom517 = sext i32 %387 to i64, !dbg !3367
  %arrayidx518 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom517, !dbg !3367
  store i8 %conv516, i8* %arrayidx518, align 1, !dbg !3368
  br label %if.end556, !dbg !3369

if.else519:                                       ; preds = %if.then493
  call void @llvm.dbg.declare(metadata i32* %i520, metadata !3370, metadata !1849), !dbg !3372
  store i32 0, i32* %i520, align 4, !dbg !3373
  br label %for.cond521, !dbg !3375

for.cond521:                                      ; preds = %for.inc553, %if.else519
  %388 = load i32, i32* %i520, align 4, !dbg !3376
  %cmp522 = icmp slt i32 %388, 64, !dbg !3379
  br i1 %cmp522, label %for.body524, label %for.end555, !dbg !3380

for.body524:                                      ; preds = %for.cond521
  %389 = load i32, i32* %i520, align 4, !dbg !3381
  %sh_prom = zext i32 %389 to i64, !dbg !3384
  %shl525 = shl i64 1, %sh_prom, !dbg !3384
  %390 = load i32, i32* %ch, align 4, !dbg !3385
  %idxprom526 = sext i32 %390 to i64, !dbg !3386
  %arrayidx527 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom526, !dbg !3386
  %arrayidx528 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx527, i64 0, i64 1, !dbg !3386
  %391 = load i64, i64* %arrayidx528, align 8, !dbg !3386
  %and529 = and i64 %shl525, %391, !dbg !3387
  %tobool530 = icmp ne i64 %and529, 0, !dbg !3387
  br i1 %tobool530, label %if.then531, label %if.end552, !dbg !3388

if.then531:                                       ; preds = %for.body524
  call void @llvm.dbg.declare(metadata i32* %index532, metadata !3389, metadata !1849), !dbg !3391
  %392 = load i64, i64* %channel_layout449, align 8, !dbg !3392
  %393 = load i32, i32* %i520, align 4, !dbg !3393
  %sh_prom533 = zext i32 %393 to i64, !dbg !3394
  %shl534 = shl i64 1, %sh_prom533, !dbg !3394
  %call535 = call i32 @av_get_channel_layout_channel_index(i64 %392, i64 %shl534), !dbg !3395
  store i32 %call535, i32* %index532, align 4, !dbg !3391
  %394 = load i32, i32* %index532, align 4, !dbg !3396
  %cmp536 = icmp slt i32 %394, 0, !dbg !3398
  br i1 %cmp536, label %if.then538, label %if.end539, !dbg !3399

if.then538:                                       ; preds = %if.then531
  store i32 -1094995529, i32* %retval, align 4, !dbg !3400
  br label %return, !dbg !3400

if.end539:                                        ; preds = %if.then531
  %395 = load i32, i32* %extend, align 4, !dbg !3401
  %396 = load i32, i32* %channel_map_size, align 4, !dbg !3403
  %cmp540 = icmp sge i32 %395, %396, !dbg !3404
  br i1 %cmp540, label %if.then542, label %if.end543, !dbg !3405

if.then542:                                       ; preds = %if.end539
  store i32 -1094995529, i32* %retval, align 4, !dbg !3406
  br label %return, !dbg !3406

if.end543:                                        ; preds = %if.end539
  %397 = load i32, i32* %offset, align 4, !dbg !3407
  %398 = load i32, i32* %extend, align 4, !dbg !3408
  %inc544 = add nsw i32 %398, 1, !dbg !3408
  store i32 %inc544, i32* %extend, align 4, !dbg !3408
  %idxprom545 = sext i32 %398 to i64, !dbg !3409
  %399 = load i8*, i8** %channel_map, align 8, !dbg !3409
  %arrayidx546 = getelementptr inbounds i8, i8* %399, i64 %idxprom545, !dbg !3409
  %400 = load i8, i8* %arrayidx546, align 1, !dbg !3409
  %conv547 = zext i8 %400 to i32, !dbg !3409
  %add548 = add nsw i32 %397, %conv547, !dbg !3410
  %conv549 = trunc i32 %add548 to i8, !dbg !3407
  %401 = load i32, i32* %index532, align 4, !dbg !3411
  %idxprom550 = sext i32 %401 to i64, !dbg !3412
  %arrayidx551 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom550, !dbg !3412
  store i8 %conv549, i8* %arrayidx551, align 1, !dbg !3413
  br label %if.end552, !dbg !3414

if.end552:                                        ; preds = %if.end543, %for.body524
  br label %for.inc553, !dbg !3415

for.inc553:                                       ; preds = %if.end552
  %402 = load i32, i32* %i520, align 4, !dbg !3416
  %inc554 = add nsw i32 %402, 1, !dbg !3416
  store i32 %inc554, i32* %i520, align 4, !dbg !3416
  br label %for.cond521, !dbg !3418, !llvm.loop !3419

for.end555:                                       ; preds = %for.cond521
  br label %if.end556

if.end556:                                        ; preds = %for.end555, %if.end510
  br label %if.end557, !dbg !3421

if.end557:                                        ; preds = %if.end556, %for.body486
  br label %for.inc558, !dbg !3422

for.inc558:                                       ; preds = %if.end557
  %403 = load i32, i32* %ch, align 4, !dbg !3423
  %inc559 = add nsw i32 %403, 1, !dbg !3423
  store i32 %inc559, i32* %ch, align 4, !dbg !3423
  br label %for.cond483, !dbg !3425, !llvm.loop !3426

for.end560:                                       ; preds = %for.cond483
  br label %if.end561, !dbg !3428

if.end561:                                        ; preds = %for.end560, %for.end432
  %404 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3429
  %num_blocks562 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %404, i32 0, i32 9, !dbg !3430
  %405 = load i32, i32* %num_blocks562, align 8, !dbg !3430
  %mul563 = mul nsw i32 %405, 256, !dbg !3431
  %406 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3432
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %406, i32 0, i32 5, !dbg !3433
  store i32 %mul563, i32* %nb_samples, align 8, !dbg !3434
  %407 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3435
  %408 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3437
  %call564 = call i32 @ff_get_buffer(%struct.AVCodecContext* %407, %struct.AVFrame* %408, i32 0), !dbg !3438
  store i32 %call564, i32* %ret, align 4, !dbg !3439
  %cmp565 = icmp slt i32 %call564, 0, !dbg !3440
  br i1 %cmp565, label %if.then567, label %if.end568, !dbg !3441

if.then567:                                       ; preds = %if.end561
  %409 = load i32, i32* %ret, align 4, !dbg !3442
  store i32 %409, i32* %retval, align 4, !dbg !3443
  br label %return, !dbg !3443

if.end568:                                        ; preds = %if.end561
  store i32 0, i32* %ch, align 4, !dbg !3444
  br label %for.cond569, !dbg !3446

for.cond569:                                      ; preds = %for.inc600, %if.end568
  %410 = load i32, i32* %ch, align 4, !dbg !3447
  %411 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3450
  %channels570 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %411, i32 0, i32 83, !dbg !3451
  %412 = load i32, i32* %channels570, align 4, !dbg !3451
  %cmp571 = icmp slt i32 %410, %412, !dbg !3452
  br i1 %cmp571, label %for.body573, label %for.end602, !dbg !3453

for.body573:                                      ; preds = %for.cond569
  call void @llvm.dbg.declare(metadata i32* %map, metadata !3454, metadata !1849), !dbg !3456
  %413 = load i32, i32* %ch, align 4, !dbg !3457
  %idxprom574 = sext i32 %413 to i64, !dbg !3458
  %arrayidx575 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom574, !dbg !3458
  %414 = load i8, i8* %arrayidx575, align 1, !dbg !3458
  %conv576 = zext i8 %414 to i32, !dbg !3458
  store i32 %conv576, i32* %map, align 4, !dbg !3456
  br label %do.body, !dbg !3459, !llvm.loop !3460

do.body:                                          ; preds = %for.body573
  %415 = load i32, i32* %ch, align 4, !dbg !3461
  %cmp577 = icmp sge i32 %415, 8, !dbg !3465
  br i1 %cmp577, label %if.end588, label %lor.lhs.false579, !dbg !3466

lor.lhs.false579:                                 ; preds = %do.body
  %416 = load i32, i32* %ch, align 4, !dbg !3467
  %idxprom580 = sext i32 %416 to i64, !dbg !3469
  %417 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3469
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %417, i32 0, i32 2, !dbg !3470
  %418 = load i8**, i8*** %extended_data, align 8, !dbg !3470
  %arrayidx581 = getelementptr inbounds i8*, i8** %418, i64 %idxprom580, !dbg !3469
  %419 = load i8*, i8** %arrayidx581, align 8, !dbg !3469
  %420 = load i32, i32* %ch, align 4, !dbg !3471
  %idxprom582 = sext i32 %420 to i64, !dbg !3472
  %421 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3472
  %data583 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %421, i32 0, i32 0, !dbg !3473
  %arrayidx584 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data583, i64 0, i64 %idxprom582, !dbg !3472
  %422 = load i8*, i8** %arrayidx584, align 8, !dbg !3472
  %cmp585 = icmp eq i8* %419, %422, !dbg !3474
  br i1 %cmp585, label %if.end588, label %if.then587, !dbg !3475

if.then587:                                       ; preds = %lor.lhs.false579
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0), i32 1758), !dbg !3476
  call void @abort() #11, !dbg !3479
  unreachable, !dbg !3481

if.end588:                                        ; preds = %lor.lhs.false579, %do.body
  br label %do.end, !dbg !3482

do.end:                                           ; preds = %if.end588
  %423 = load i32, i32* %ch, align 4, !dbg !3484
  %idxprom589 = sext i32 %423 to i64, !dbg !3485
  %424 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3485
  %extended_data590 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %424, i32 0, i32 2, !dbg !3486
  %425 = load i8**, i8*** %extended_data590, align 8, !dbg !3486
  %arrayidx591 = getelementptr inbounds i8*, i8** %425, i64 %idxprom589, !dbg !3485
  %426 = load i8*, i8** %arrayidx591, align 8, !dbg !3485
  %427 = bitcast i8* %426 to i16*, !dbg !3487
  %428 = bitcast i16* %427 to i8*, !dbg !3487
  %429 = load i32, i32* %map, align 4, !dbg !3488
  %idxprom592 = sext i32 %429 to i64, !dbg !3489
  %430 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3489
  %output_buffer593 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %430, i32 0, i32 125, !dbg !3490
  %arrayidx594 = getelementptr inbounds [16 x [1536 x i16]], [16 x [1536 x i16]]* %output_buffer593, i64 0, i64 %idxprom592, !dbg !3489
  %arraydecay595 = getelementptr inbounds [1536 x i16], [1536 x i16]* %arrayidx594, i32 0, i32 0, !dbg !3487
  %431 = bitcast i16* %arraydecay595 to i8*, !dbg !3487
  %432 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3491
  %num_blocks596 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %432, i32 0, i32 9, !dbg !3492
  %433 = load i32, i32* %num_blocks596, align 8, !dbg !3492
  %mul597 = mul nsw i32 %433, 256, !dbg !3493
  %conv598 = sext i32 %mul597 to i64, !dbg !3491
  %mul599 = mul i64 %conv598, 2, !dbg !3494
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %431, i64 %mul599, i32 2, i1 false), !dbg !3487
  br label %for.inc600, !dbg !3495

for.inc600:                                       ; preds = %do.end
  %434 = load i32, i32* %ch, align 4, !dbg !3496
  %inc601 = add nsw i32 %434, 1, !dbg !3496
  store i32 %inc601, i32* %ch, align 4, !dbg !3496
  br label %for.cond569, !dbg !3498, !llvm.loop !3499

for.end602:                                       ; preds = %for.cond569
  store i32 0, i32* %matrix_encoding, align 4, !dbg !3501
  %435 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3502
  %channel_mode603 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %435, i32 0, i32 12, !dbg !3504
  %436 = load i32, i32* %channel_mode603, align 4, !dbg !3504
  %cmp604 = icmp eq i32 %436, 2, !dbg !3505
  br i1 %cmp604, label %land.lhs.true606, label %if.else622, !dbg !3506

land.lhs.true606:                                 ; preds = %for.end602
  %437 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3507
  %channel_mode607 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %437, i32 0, i32 12, !dbg !3508
  %438 = load i32, i32* %channel_mode607, align 4, !dbg !3508
  %439 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3509
  %output_mode608 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %439, i32 0, i32 75, !dbg !3510
  %440 = load i32, i32* %output_mode608, align 4, !dbg !3510
  %and609 = and i32 %440, -9, !dbg !3511
  %cmp610 = icmp eq i32 %438, %and609, !dbg !3512
  br i1 %cmp610, label %if.then612, label %if.else622, !dbg !3513

if.then612:                                       ; preds = %land.lhs.true606
  %441 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3515
  %dolby_surround_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %441, i32 0, i32 28, !dbg !3518
  %442 = load i32, i32* %dolby_surround_mode, align 32, !dbg !3518
  %cmp613 = icmp eq i32 %442, 2, !dbg !3519
  br i1 %cmp613, label %if.then615, label %if.else616, !dbg !3520

if.then615:                                       ; preds = %if.then612
  store i32 1, i32* %matrix_encoding, align 4, !dbg !3521
  br label %if.end621, !dbg !3522

if.else616:                                       ; preds = %if.then612
  %443 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3523
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %443, i32 0, i32 30, !dbg !3525
  %444 = load i32, i32* %dolby_headphone_mode, align 8, !dbg !3525
  %cmp617 = icmp eq i32 %444, 2, !dbg !3526
  br i1 %cmp617, label %if.then619, label %if.end620, !dbg !3527

if.then619:                                       ; preds = %if.else616
  store i32 6, i32* %matrix_encoding, align 4, !dbg !3528
  br label %if.end620, !dbg !3529

if.end620:                                        ; preds = %if.then619, %if.else616
  br label %if.end621

if.end621:                                        ; preds = %if.end620, %if.then615
  br label %if.end638, !dbg !3530

if.else622:                                       ; preds = %land.lhs.true606, %for.end602
  %445 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3531
  %channel_mode623 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %445, i32 0, i32 12, !dbg !3534
  %446 = load i32, i32* %channel_mode623, align 4, !dbg !3534
  %cmp624 = icmp sge i32 %446, 6, !dbg !3535
  br i1 %cmp624, label %land.lhs.true626, label %if.end637, !dbg !3536

land.lhs.true626:                                 ; preds = %if.else622
  %447 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3537
  %channel_mode627 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %447, i32 0, i32 12, !dbg !3538
  %448 = load i32, i32* %channel_mode627, align 4, !dbg !3538
  %449 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3539
  %output_mode628 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %449, i32 0, i32 75, !dbg !3540
  %450 = load i32, i32* %output_mode628, align 4, !dbg !3540
  %and629 = and i32 %450, -9, !dbg !3541
  %cmp630 = icmp eq i32 %448, %and629, !dbg !3542
  br i1 %cmp630, label %if.then632, label %if.end637, !dbg !3543

if.then632:                                       ; preds = %land.lhs.true626
  %451 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3545
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %451, i32 0, i32 29, !dbg !3547
  %452 = load i32, i32* %dolby_surround_ex_mode, align 4, !dbg !3547
  switch i32 %452, label %sw.default635 [
    i32 2, label %sw.bb633
    i32 3, label %sw.bb634
  ], !dbg !3548

sw.bb633:                                         ; preds = %if.then632
  store i32 5, i32* %matrix_encoding, align 4, !dbg !3549
  br label %sw.epilog636, !dbg !3551

sw.bb634:                                         ; preds = %if.then632
  store i32 4, i32* %matrix_encoding, align 4, !dbg !3552
  br label %sw.epilog636, !dbg !3553

sw.default635:                                    ; preds = %if.then632
  br label %sw.epilog636, !dbg !3554

sw.epilog636:                                     ; preds = %sw.default635, %sw.bb634, %sw.bb633
  br label %if.end637, !dbg !3555

if.end637:                                        ; preds = %sw.epilog636, %land.lhs.true626, %if.else622
  br label %if.end638

if.end638:                                        ; preds = %if.end637, %if.end621
  %453 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3556
  %454 = load i32, i32* %matrix_encoding, align 4, !dbg !3558
  %call639 = call i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame* %453, i32 %454), !dbg !3559
  store i32 %call639, i32* %ret, align 4, !dbg !3560
  %cmp640 = icmp slt i32 %call639, 0, !dbg !3561
  br i1 %cmp640, label %if.then642, label %if.end643, !dbg !3562

if.then642:                                       ; preds = %if.end638
  %455 = load i32, i32* %ret, align 4, !dbg !3563
  store i32 %455, i32* %retval, align 4, !dbg !3564
  br label %return, !dbg !3564

if.end643:                                        ; preds = %if.end638
  %456 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3565
  %call644 = call %struct.AVDownmixInfo* @av_downmix_info_update_side_data(%struct.AVFrame* %456), !dbg !3567
  store %struct.AVDownmixInfo* %call644, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3568
  %tobool645 = icmp ne %struct.AVDownmixInfo* %call644, null, !dbg !3568
  br i1 %tobool645, label %if.then646, label %if.else682, !dbg !3569

if.then646:                                       ; preds = %if.end643
  %457 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3570
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %457, i32 0, i32 18, !dbg !3572
  %458 = load i32, i32* %preferred_downmix, align 8, !dbg !3572
  switch i32 %458, label %sw.default652 [
    i32 1, label %sw.bb647
    i32 2, label %sw.bb648
    i32 3, label %sw.bb650
  ], !dbg !3573

sw.bb647:                                         ; preds = %if.then646
  %459 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3574
  %preferred_downmix_type = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %459, i32 0, i32 0, !dbg !3576
  store i32 2, i32* %preferred_downmix_type, align 8, !dbg !3577
  br label %sw.epilog654, !dbg !3578

sw.bb648:                                         ; preds = %if.then646
  %460 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3579
  %preferred_downmix_type649 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %460, i32 0, i32 0, !dbg !3580
  store i32 1, i32* %preferred_downmix_type649, align 8, !dbg !3581
  br label %sw.epilog654, !dbg !3582

sw.bb650:                                         ; preds = %if.then646
  %461 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3583
  %preferred_downmix_type651 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %461, i32 0, i32 0, !dbg !3584
  store i32 3, i32* %preferred_downmix_type651, align 8, !dbg !3585
  br label %sw.epilog654, !dbg !3586

sw.default652:                                    ; preds = %if.then646
  %462 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3587
  %preferred_downmix_type653 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %462, i32 0, i32 0, !dbg !3588
  store i32 0, i32* %preferred_downmix_type653, align 8, !dbg !3589
  br label %sw.epilog654, !dbg !3590

sw.epilog654:                                     ; preds = %sw.default652, %sw.bb650, %sw.bb648, %sw.bb647
  %463 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3591
  %center_mix_level655 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %463, i32 0, i32 19, !dbg !3592
  %464 = load i32, i32* %center_mix_level655, align 4, !dbg !3592
  %idxprom656 = sext i32 %464 to i64, !dbg !3593
  %arrayidx657 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom656, !dbg !3593
  %465 = load float, float* %arrayidx657, align 4, !dbg !3593
  %conv658 = fpext float %465 to double, !dbg !3593
  %466 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3594
  %center_mix_level659 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %466, i32 0, i32 1, !dbg !3595
  store double %conv658, double* %center_mix_level659, align 8, !dbg !3596
  %467 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3597
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %467, i32 0, i32 20, !dbg !3598
  %468 = load i32, i32* %center_mix_level_ltrt, align 32, !dbg !3598
  %idxprom660 = sext i32 %468 to i64, !dbg !3599
  %arrayidx661 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom660, !dbg !3599
  %469 = load float, float* %arrayidx661, align 4, !dbg !3599
  %conv662 = fpext float %469 to double, !dbg !3599
  %470 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3600
  %center_mix_level_ltrt663 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %470, i32 0, i32 2, !dbg !3601
  store double %conv662, double* %center_mix_level_ltrt663, align 8, !dbg !3602
  %471 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3603
  %surround_mix_level664 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %471, i32 0, i32 21, !dbg !3604
  %472 = load i32, i32* %surround_mix_level664, align 4, !dbg !3604
  %idxprom665 = sext i32 %472 to i64, !dbg !3605
  %arrayidx666 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom665, !dbg !3605
  %473 = load float, float* %arrayidx666, align 4, !dbg !3605
  %conv667 = fpext float %473 to double, !dbg !3605
  %474 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3606
  %surround_mix_level668 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %474, i32 0, i32 3, !dbg !3607
  store double %conv667, double* %surround_mix_level668, align 8, !dbg !3608
  %475 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3609
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %475, i32 0, i32 22, !dbg !3610
  %476 = load i32, i32* %surround_mix_level_ltrt, align 8, !dbg !3610
  %idxprom669 = sext i32 %476 to i64, !dbg !3611
  %arrayidx670 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom669, !dbg !3611
  %477 = load float, float* %arrayidx670, align 4, !dbg !3611
  %conv671 = fpext float %477 to double, !dbg !3611
  %478 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3612
  %surround_mix_level_ltrt672 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %478, i32 0, i32 4, !dbg !3613
  store double %conv671, double* %surround_mix_level_ltrt672, align 8, !dbg !3614
  %479 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3615
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %479, i32 0, i32 23, !dbg !3617
  %480 = load i32, i32* %lfe_mix_level_exists, align 4, !dbg !3617
  %tobool673 = icmp ne i32 %480, 0, !dbg !3615
  br i1 %tobool673, label %if.then674, label %if.else679, !dbg !3618

if.then674:                                       ; preds = %sw.epilog654
  %481 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3619
  %lfe_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %481, i32 0, i32 24, !dbg !3620
  %482 = load i32, i32* %lfe_mix_level, align 16, !dbg !3620
  %idxprom675 = sext i32 %482 to i64, !dbg !3621
  %arrayidx676 = getelementptr inbounds [32 x float], [32 x float]* @gain_levels_lfe, i64 0, i64 %idxprom675, !dbg !3621
  %483 = load float, float* %arrayidx676, align 4, !dbg !3621
  %conv677 = fpext float %483 to double, !dbg !3621
  %484 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3622
  %lfe_mix_level678 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %484, i32 0, i32 5, !dbg !3623
  store double %conv677, double* %lfe_mix_level678, align 8, !dbg !3624
  br label %if.end681, !dbg !3622

if.else679:                                       ; preds = %sw.epilog654
  %485 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3625
  %lfe_mix_level680 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %485, i32 0, i32 5, !dbg !3626
  store double 0.000000e+00, double* %lfe_mix_level680, align 8, !dbg !3627
  br label %if.end681

if.end681:                                        ; preds = %if.else679, %if.then674
  br label %if.end683, !dbg !3628

if.else682:                                       ; preds = %if.end643
  store i32 -12, i32* %retval, align 4, !dbg !3629
  br label %return, !dbg !3629

if.end683:                                        ; preds = %if.end681
  %486 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3630
  store i32 1, i32* %486, align 4, !dbg !3631
  %487 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3632
  %superframe_size684 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %487, i32 0, i32 5, !dbg !3634
  %488 = load i32, i32* %superframe_size684, align 8, !dbg !3634
  %tobool685 = icmp ne i32 %488, 0, !dbg !3632
  br i1 %tobool685, label %if.end697, label %if.then686, !dbg !3635

if.then686:                                       ; preds = %if.end683
  %489 = load i32, i32* %full_buf_size, align 4, !dbg !3636
  %490 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3637
  %frame_size687 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %490, i32 0, i32 6, !dbg !3638
  %491 = load i32, i32* %frame_size687, align 4, !dbg !3638
  %492 = load i32, i32* %skip, align 4, !dbg !3639
  %add688 = add nsw i32 %491, %492, !dbg !3640
  %cmp689 = icmp sgt i32 %489, %add688, !dbg !3641
  br i1 %cmp689, label %cond.true691, label %cond.false694, !dbg !3642

cond.true691:                                     ; preds = %if.then686
  %493 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3643
  %frame_size692 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %493, i32 0, i32 6, !dbg !3645
  %494 = load i32, i32* %frame_size692, align 4, !dbg !3645
  %495 = load i32, i32* %skip, align 4, !dbg !3646
  %add693 = add nsw i32 %494, %495, !dbg !3647
  br label %cond.end695, !dbg !3648

cond.false694:                                    ; preds = %if.then686
  %496 = load i32, i32* %full_buf_size, align 4, !dbg !3649
  br label %cond.end695, !dbg !3651

cond.end695:                                      ; preds = %cond.false694, %cond.true691
  %cond696 = phi i32 [ %add693, %cond.true691 ], [ %496, %cond.false694 ], !dbg !3652
  store i32 %cond696, i32* %retval, align 4, !dbg !3654
  br label %return, !dbg !3654

if.end697:                                        ; preds = %if.end683
  %497 = load i32, i32* %full_buf_size, align 4, !dbg !3655
  %498 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3656
  %superframe_size698 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %498, i32 0, i32 5, !dbg !3657
  %499 = load i32, i32* %superframe_size698, align 8, !dbg !3657
  %500 = load i32, i32* %skip, align 4, !dbg !3658
  %add699 = add nsw i32 %499, %500, !dbg !3659
  %cmp700 = icmp sgt i32 %497, %add699, !dbg !3660
  br i1 %cmp700, label %cond.true702, label %cond.false705, !dbg !3661

cond.true702:                                     ; preds = %if.end697
  %501 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3662
  %superframe_size703 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %501, i32 0, i32 5, !dbg !3663
  %502 = load i32, i32* %superframe_size703, align 8, !dbg !3663
  %503 = load i32, i32* %skip, align 4, !dbg !3664
  %add704 = add nsw i32 %502, %503, !dbg !3665
  br label %cond.end706, !dbg !3666

cond.false705:                                    ; preds = %if.end697
  %504 = load i32, i32* %full_buf_size, align 4, !dbg !3667
  br label %cond.end706, !dbg !3669

cond.end706:                                      ; preds = %cond.false705, %cond.true702
  %cond707 = phi i32 [ %add704, %cond.true702 ], [ %504, %cond.false705 ], !dbg !3670
  store i32 %cond707, i32* %retval, align 4, !dbg !3672
  br label %return, !dbg !3672

return:                                           ; preds = %cond.end706, %cond.end695, %if.else682, %if.then642, %if.then567, %if.then542, %if.then538, %if.then509, %if.then505, %if.then477, %if.then383, %if.then378, %if.then190, %if.then184, %cond.end125, %if.then108, %sw.default, %if.then85, %sw.bb, %if.then75, %if.then37, %if.then33
  %505 = load i32, i32* %retval, align 4, !dbg !3673
  ret i32 %505, !dbg !3673
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ac3_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3674 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AC3DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3675, metadata !1849), !dbg !3676
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !3677, metadata !1849), !dbg !3678
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3679
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3680
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3680
  %2 = bitcast i8* %1 to %struct.AC3DecodeContext*, !dbg !3679
  store %struct.AC3DecodeContext* %2, %struct.AC3DecodeContext** %s, align 8, !dbg !3678
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3681
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 107, !dbg !3682
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %imdct_512), !dbg !3683
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3684
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 108, !dbg !3685
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %imdct_256), !dbg !3686
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3687
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 110, !dbg !3688
  %6 = bitcast %struct.AVFixedDSPContext** %fdsp to i8*, !dbg !3689
  call void @av_freep(i8* %6), !dbg !3690
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3691
  %downmix_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 73, !dbg !3692
  %arrayidx = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs, i64 0, i64 0, !dbg !3691
  %8 = bitcast i16** %arrayidx to i8*, !dbg !3693
  call void @av_freep(i8* %8), !dbg !3694
  ret i32 0, !dbg !3695
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @ac3_tables_init() #0 !dbg !3696 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3699, metadata !1849), !dbg !3700
  store i32 0, i32* %i, align 4, !dbg !3701
  br label %for.cond, !dbg !3703

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3704
  %cmp = icmp slt i32 %0, 128, !dbg !3707
  br i1 %cmp, label %for.body, label %for.end, !dbg !3708

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3709
  %div = sdiv i32 %1, 25, !dbg !3711
  %conv = trunc i32 %div to i8, !dbg !3709
  %2 = load i32, i32* %i, align 4, !dbg !3712
  %idxprom = sext i32 %2 to i64, !dbg !3713
  %arrayidx = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom, !dbg !3713
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !3713
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !3714
  %3 = load i32, i32* %i, align 4, !dbg !3715
  %rem = srem i32 %3, 25, !dbg !3716
  %div2 = sdiv i32 %rem, 5, !dbg !3717
  %conv3 = trunc i32 %div2 to i8, !dbg !3718
  %4 = load i32, i32* %i, align 4, !dbg !3719
  %idxprom4 = sext i32 %4 to i64, !dbg !3720
  %arrayidx5 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom4, !dbg !3720
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx5, i64 0, i64 1, !dbg !3720
  store i8 %conv3, i8* %arrayidx6, align 1, !dbg !3721
  %5 = load i32, i32* %i, align 4, !dbg !3722
  %rem7 = srem i32 %5, 25, !dbg !3723
  %rem8 = srem i32 %rem7, 5, !dbg !3724
  %conv9 = trunc i32 %rem8 to i8, !dbg !3725
  %6 = load i32, i32* %i, align 4, !dbg !3726
  %idxprom10 = sext i32 %6 to i64, !dbg !3727
  %arrayidx11 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom10, !dbg !3727
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx11, i64 0, i64 2, !dbg !3727
  store i8 %conv9, i8* %arrayidx12, align 1, !dbg !3728
  br label %for.inc, !dbg !3729

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !3730
  %inc = add nsw i32 %7, 1, !dbg !3730
  store i32 %inc, i32* %i, align 4, !dbg !3730
  br label %for.cond, !dbg !3732, !llvm.loop !3733

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3735
  br label %for.cond13, !dbg !3737

for.cond13:                                       ; preds = %for.inc40, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !3738
  %cmp14 = icmp slt i32 %8, 32, !dbg !3741
  br i1 %cmp14, label %for.body16, label %for.end42, !dbg !3742

for.body16:                                       ; preds = %for.cond13
  %9 = load i32, i32* %i, align 4, !dbg !3743
  %idxprom17 = sext i32 %9 to i64, !dbg !3745
  %arrayidx18 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom17, !dbg !3745
  %arrayidx19 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx18, i64 0, i64 0, !dbg !3745
  %10 = load i8, i8* %arrayidx19, align 1, !dbg !3745
  %conv20 = zext i8 %10 to i32, !dbg !3745
  %call = call i32 @symmetric_dequant(i32 %conv20, i32 3), !dbg !3746
  %11 = load i32, i32* %i, align 4, !dbg !3747
  %idxprom21 = sext i32 %11 to i64, !dbg !3748
  %arrayidx22 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom21, !dbg !3748
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx22, i64 0, i64 0, !dbg !3748
  store i32 %call, i32* %arrayidx23, align 4, !dbg !3749
  %12 = load i32, i32* %i, align 4, !dbg !3750
  %idxprom24 = sext i32 %12 to i64, !dbg !3751
  %arrayidx25 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom24, !dbg !3751
  %arrayidx26 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx25, i64 0, i64 1, !dbg !3751
  %13 = load i8, i8* %arrayidx26, align 1, !dbg !3751
  %conv27 = zext i8 %13 to i32, !dbg !3751
  %call28 = call i32 @symmetric_dequant(i32 %conv27, i32 3), !dbg !3752
  %14 = load i32, i32* %i, align 4, !dbg !3753
  %idxprom29 = sext i32 %14 to i64, !dbg !3754
  %arrayidx30 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom29, !dbg !3754
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx30, i64 0, i64 1, !dbg !3754
  store i32 %call28, i32* %arrayidx31, align 4, !dbg !3755
  %15 = load i32, i32* %i, align 4, !dbg !3756
  %idxprom32 = sext i32 %15 to i64, !dbg !3757
  %arrayidx33 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom32, !dbg !3757
  %arrayidx34 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx33, i64 0, i64 2, !dbg !3757
  %16 = load i8, i8* %arrayidx34, align 1, !dbg !3757
  %conv35 = zext i8 %16 to i32, !dbg !3757
  %call36 = call i32 @symmetric_dequant(i32 %conv35, i32 3), !dbg !3758
  %17 = load i32, i32* %i, align 4, !dbg !3759
  %idxprom37 = sext i32 %17 to i64, !dbg !3760
  %arrayidx38 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom37, !dbg !3760
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx38, i64 0, i64 2, !dbg !3760
  store i32 %call36, i32* %arrayidx39, align 4, !dbg !3761
  br label %for.inc40, !dbg !3762

for.inc40:                                        ; preds = %for.body16
  %18 = load i32, i32* %i, align 4, !dbg !3763
  %inc41 = add nsw i32 %18, 1, !dbg !3763
  store i32 %inc41, i32* %i, align 4, !dbg !3763
  br label %for.cond13, !dbg !3765, !llvm.loop !3766

for.end42:                                        ; preds = %for.cond13
  store i32 0, i32* %i, align 4, !dbg !3768
  br label %for.cond43, !dbg !3770

for.cond43:                                       ; preds = %for.inc81, %for.end42
  %19 = load i32, i32* %i, align 4, !dbg !3771
  %cmp44 = icmp slt i32 %19, 128, !dbg !3774
  br i1 %cmp44, label %for.body46, label %for.end83, !dbg !3775

for.body46:                                       ; preds = %for.cond43
  %20 = load i32, i32* %i, align 4, !dbg !3776
  %idxprom47 = sext i32 %20 to i64, !dbg !3778
  %arrayidx48 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom47, !dbg !3778
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx48, i64 0, i64 0, !dbg !3778
  %21 = load i8, i8* %arrayidx49, align 1, !dbg !3778
  %conv50 = zext i8 %21 to i32, !dbg !3778
  %call51 = call i32 @symmetric_dequant(i32 %conv50, i32 5), !dbg !3779
  %22 = load i32, i32* %i, align 4, !dbg !3780
  %idxprom52 = sext i32 %22 to i64, !dbg !3781
  %arrayidx53 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom52, !dbg !3781
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx53, i64 0, i64 0, !dbg !3781
  store i32 %call51, i32* %arrayidx54, align 4, !dbg !3782
  %23 = load i32, i32* %i, align 4, !dbg !3783
  %idxprom55 = sext i32 %23 to i64, !dbg !3784
  %arrayidx56 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom55, !dbg !3784
  %arrayidx57 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx56, i64 0, i64 1, !dbg !3784
  %24 = load i8, i8* %arrayidx57, align 1, !dbg !3784
  %conv58 = zext i8 %24 to i32, !dbg !3784
  %call59 = call i32 @symmetric_dequant(i32 %conv58, i32 5), !dbg !3785
  %25 = load i32, i32* %i, align 4, !dbg !3786
  %idxprom60 = sext i32 %25 to i64, !dbg !3787
  %arrayidx61 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom60, !dbg !3787
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx61, i64 0, i64 1, !dbg !3787
  store i32 %call59, i32* %arrayidx62, align 4, !dbg !3788
  %26 = load i32, i32* %i, align 4, !dbg !3789
  %idxprom63 = sext i32 %26 to i64, !dbg !3790
  %arrayidx64 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom63, !dbg !3790
  %arrayidx65 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx64, i64 0, i64 2, !dbg !3790
  %27 = load i8, i8* %arrayidx65, align 1, !dbg !3790
  %conv66 = zext i8 %27 to i32, !dbg !3790
  %call67 = call i32 @symmetric_dequant(i32 %conv66, i32 5), !dbg !3791
  %28 = load i32, i32* %i, align 4, !dbg !3792
  %idxprom68 = sext i32 %28 to i64, !dbg !3793
  %arrayidx69 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom68, !dbg !3793
  %arrayidx70 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx69, i64 0, i64 2, !dbg !3793
  store i32 %call67, i32* %arrayidx70, align 4, !dbg !3794
  %29 = load i32, i32* %i, align 4, !dbg !3795
  %div71 = sdiv i32 %29, 11, !dbg !3796
  %call72 = call i32 @symmetric_dequant(i32 %div71, i32 11), !dbg !3797
  %30 = load i32, i32* %i, align 4, !dbg !3798
  %idxprom73 = sext i32 %30 to i64, !dbg !3799
  %arrayidx74 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom73, !dbg !3799
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx74, i64 0, i64 0, !dbg !3799
  store i32 %call72, i32* %arrayidx75, align 8, !dbg !3800
  %31 = load i32, i32* %i, align 4, !dbg !3801
  %rem76 = srem i32 %31, 11, !dbg !3802
  %call77 = call i32 @symmetric_dequant(i32 %rem76, i32 11), !dbg !3803
  %32 = load i32, i32* %i, align 4, !dbg !3804
  %idxprom78 = sext i32 %32 to i64, !dbg !3805
  %arrayidx79 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom78, !dbg !3805
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx79, i64 0, i64 1, !dbg !3805
  store i32 %call77, i32* %arrayidx80, align 4, !dbg !3806
  br label %for.inc81, !dbg !3807

for.inc81:                                        ; preds = %for.body46
  %33 = load i32, i32* %i, align 4, !dbg !3808
  %inc82 = add nsw i32 %33, 1, !dbg !3808
  store i32 %inc82, i32* %i, align 4, !dbg !3808
  br label %for.cond43, !dbg !3810, !llvm.loop !3811

for.end83:                                        ; preds = %for.cond43
  store i32 0, i32* %i, align 4, !dbg !3813
  br label %for.cond84, !dbg !3815

for.cond84:                                       ; preds = %for.inc91, %for.end83
  %34 = load i32, i32* %i, align 4, !dbg !3816
  %cmp85 = icmp slt i32 %34, 7, !dbg !3819
  br i1 %cmp85, label %for.body87, label %for.end93, !dbg !3820

for.body87:                                       ; preds = %for.cond84
  %35 = load i32, i32* %i, align 4, !dbg !3821
  %call88 = call i32 @symmetric_dequant(i32 %35, i32 7), !dbg !3823
  %36 = load i32, i32* %i, align 4, !dbg !3824
  %idxprom89 = sext i32 %36 to i64, !dbg !3825
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* @b3_mantissas, i64 0, i64 %idxprom89, !dbg !3825
  store i32 %call88, i32* %arrayidx90, align 4, !dbg !3826
  br label %for.inc91, !dbg !3827

for.inc91:                                        ; preds = %for.body87
  %37 = load i32, i32* %i, align 4, !dbg !3828
  %inc92 = add nsw i32 %37, 1, !dbg !3828
  store i32 %inc92, i32* %i, align 4, !dbg !3828
  br label %for.cond84, !dbg !3830, !llvm.loop !3831

for.end93:                                        ; preds = %for.cond84
  store i32 0, i32* %i, align 4, !dbg !3833
  br label %for.cond94, !dbg !3835

for.cond94:                                       ; preds = %for.inc101, %for.end93
  %38 = load i32, i32* %i, align 4, !dbg !3836
  %cmp95 = icmp slt i32 %38, 15, !dbg !3839
  br i1 %cmp95, label %for.body97, label %for.end103, !dbg !3840

for.body97:                                       ; preds = %for.cond94
  %39 = load i32, i32* %i, align 4, !dbg !3841
  %call98 = call i32 @symmetric_dequant(i32 %39, i32 15), !dbg !3843
  %40 = load i32, i32* %i, align 4, !dbg !3844
  %idxprom99 = sext i32 %40 to i64, !dbg !3845
  %arrayidx100 = getelementptr inbounds [16 x i32], [16 x i32]* @b5_mantissas, i64 0, i64 %idxprom99, !dbg !3845
  store i32 %call98, i32* %arrayidx100, align 4, !dbg !3846
  br label %for.inc101, !dbg !3847

for.inc101:                                       ; preds = %for.body97
  %41 = load i32, i32* %i, align 4, !dbg !3848
  %inc102 = add nsw i32 %41, 1, !dbg !3848
  store i32 %inc102, i32* %i, align 4, !dbg !3848
  br label %for.cond94, !dbg !3850, !llvm.loop !3851

for.end103:                                       ; preds = %for.cond94
  ret void, !dbg !3853
}

declare i32 @ff_mdct_init_fixed_32(%struct.FFTContext*, i32, i32, double) #2

declare void @ff_kbd_window_init_fixed(i32*, float, i32) #2

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #2

declare %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32) #2

declare void @ff_ac3dsp_init(%struct.AC3DSPContext*, i32) #2

declare void @av_lfg_init(%struct.AVLFG*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @symmetric_dequant(i32 %code, i32 %levels) #4 !dbg !3854 {
entry:
  %code.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3857, metadata !1849), !dbg !3858
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !3859, metadata !1849), !dbg !3860
  %0 = load i32, i32* %code.addr, align 4, !dbg !3861
  %1 = load i32, i32* %levels.addr, align 4, !dbg !3862
  %shr = ashr i32 %1, 1, !dbg !3863
  %sub = sub nsw i32 %0, %shr, !dbg !3864
  %mul = mul nsw i32 %sub, 16777216, !dbg !3865
  %2 = load i32, i32* %levels.addr, align 4, !dbg !3866
  %div = sdiv i32 %mul, %2, !dbg !3867
  ret i32 %div, !dbg !3868
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare i32 @av_lfg_init_from_data(%struct.AVLFG*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !3869 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3873, metadata !1849), !dbg !3874
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3875, metadata !1849), !dbg !3876
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !3877, metadata !1849), !dbg !3878
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !3879
  %cmp = icmp sgt i32 %0, 268435455, !dbg !3881
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3882

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !3883
  %cmp1 = icmp slt i32 %1, 0, !dbg !3885
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3886

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !3887
  br label %if.end, !dbg !3888

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3889
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3890
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !3891
  %mul = mul nsw i32 %4, 8, !dbg !3892
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !3893
  ret i32 %call, !dbg !3894
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_frame_header(%struct.AC3DecodeContext* %s) #1 !dbg !3895 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %hdr = alloca %struct.AC3HeaderInfo, align 8
  %err = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !3898, metadata !1849), !dbg !3899
  call void @llvm.dbg.declare(metadata %struct.AC3HeaderInfo* %hdr, metadata !3900, metadata !1849), !dbg !3901
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3902, metadata !1849), !dbg !3903
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3904
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !3905
  %call = call i32 @ff_ac3_parse_header(%struct.GetBitContext* %gbc, %struct.AC3HeaderInfo* %hdr), !dbg !3906
  store i32 %call, i32* %err, align 4, !dbg !3907
  %1 = load i32, i32* %err, align 4, !dbg !3908
  %tobool = icmp ne i32 %1, 0, !dbg !3908
  br i1 %tobool, label %if.then, label %if.end, !dbg !3910

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !3911
  store i32 %2, i32* %retval, align 4, !dbg !3912
  br label %return, !dbg !3912

if.end:                                           ; preds = %entry
  %sr_code = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 2, !dbg !3913
  %3 = load i8, i8* %sr_code, align 4, !dbg !3913
  %conv = zext i8 %3 to i32, !dbg !3914
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3915
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 91, !dbg !3916
  %sr_code1 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 0, !dbg !3917
  store i32 %conv, i32* %sr_code1, align 32, !dbg !3918
  %bitstream_id = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 3, !dbg !3919
  %5 = load i8, i8* %bitstream_id, align 1, !dbg !3919
  %conv2 = zext i8 %5 to i32, !dbg !3920
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3921
  %bitstream_id3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 10, !dbg !3922
  store i32 %conv2, i32* %bitstream_id3, align 4, !dbg !3923
  %bitstream_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 4, !dbg !3924
  %7 = load i8, i8* %bitstream_mode, align 2, !dbg !3924
  %conv4 = zext i8 %7 to i32, !dbg !3925
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3926
  %bitstream_mode5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 11, !dbg !3927
  store i32 %conv4, i32* %bitstream_mode5, align 16, !dbg !3928
  %channel_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 5, !dbg !3929
  %9 = load i8, i8* %channel_mode, align 1, !dbg !3929
  %conv6 = zext i8 %9 to i32, !dbg !3930
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3931
  %channel_mode7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 12, !dbg !3932
  store i32 %conv6, i32* %channel_mode7, align 4, !dbg !3933
  %lfe_on = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 6, !dbg !3934
  %11 = load i8, i8* %lfe_on, align 8, !dbg !3934
  %conv8 = zext i8 %11 to i32, !dbg !3935
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3936
  %lfe_on9 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 13, !dbg !3937
  store i32 %conv8, i32* %lfe_on9, align 8, !dbg !3938
  %sr_shift = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 14, !dbg !3939
  %13 = load i8, i8* %sr_shift, align 4, !dbg !3939
  %conv10 = zext i8 %13 to i32, !dbg !3940
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3941
  %bit_alloc_params11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 91, !dbg !3942
  %sr_shift12 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params11, i32 0, i32 1, !dbg !3943
  store i32 %conv10, i32* %sr_shift12, align 4, !dbg !3944
  %sample_rate = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 15, !dbg !3945
  %15 = load i16, i16* %sample_rate, align 2, !dbg !3945
  %conv13 = zext i16 %15 to i32, !dbg !3946
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3947
  %sample_rate14 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 8, !dbg !3948
  store i32 %conv13, i32* %sample_rate14, align 4, !dbg !3949
  %bit_rate = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 16, !dbg !3950
  %17 = load i32, i32* %bit_rate, align 8, !dbg !3950
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3951
  %bit_rate15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 7, !dbg !3952
  store i32 %17, i32* %bit_rate15, align 32, !dbg !3953
  %channels = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 17, !dbg !3954
  %19 = load i8, i8* %channels, align 4, !dbg !3954
  %conv16 = zext i8 %19 to i32, !dbg !3955
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3956
  %channels17 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 71, !dbg !3957
  store i32 %conv16, i32* %channels17, align 8, !dbg !3958
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3959
  %channels18 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 71, !dbg !3960
  %22 = load i32, i32* %channels18, align 8, !dbg !3960
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3961
  %lfe_on19 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 13, !dbg !3962
  %24 = load i32, i32* %lfe_on19, align 8, !dbg !3962
  %sub = sub nsw i32 %22, %24, !dbg !3963
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3964
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 70, !dbg !3965
  store i32 %sub, i32* %fbw_channels, align 4, !dbg !3966
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3967
  %fbw_channels20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 70, !dbg !3968
  %27 = load i32, i32* %fbw_channels20, align 4, !dbg !3968
  %add = add nsw i32 %27, 1, !dbg !3969
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3970
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 72, !dbg !3971
  store i32 %add, i32* %lfe_ch, align 4, !dbg !3972
  %frame_size = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 18, !dbg !3973
  %29 = load i16, i16* %frame_size, align 2, !dbg !3973
  %conv21 = zext i16 %29 to i32, !dbg !3974
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3975
  %frame_size22 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 6, !dbg !3976
  store i32 %conv21, i32* %frame_size22, align 4, !dbg !3977
  %frame_size23 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 18, !dbg !3978
  %31 = load i16, i16* %frame_size23, align 2, !dbg !3978
  %conv24 = zext i16 %31 to i32, !dbg !3979
  %32 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3980
  %superframe_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %32, i32 0, i32 5, !dbg !3981
  %33 = load i32, i32* %superframe_size, align 8, !dbg !3982
  %add25 = add nsw i32 %33, %conv24, !dbg !3982
  store i32 %add25, i32* %superframe_size, align 8, !dbg !3982
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3983
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 18, !dbg !3984
  store i32 0, i32* %preferred_downmix, align 8, !dbg !3985
  %center_mix_level = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 9, !dbg !3986
  %35 = load i32, i32* %center_mix_level, align 8, !dbg !3986
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3987
  %center_mix_level26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 19, !dbg !3988
  store i32 %35, i32* %center_mix_level26, align 4, !dbg !3989
  %37 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3990
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %37, i32 0, i32 20, !dbg !3991
  store i32 4, i32* %center_mix_level_ltrt, align 32, !dbg !3992
  %surround_mix_level = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 10, !dbg !3993
  %38 = load i32, i32* %surround_mix_level, align 4, !dbg !3993
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3994
  %surround_mix_level27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 21, !dbg !3995
  store i32 %38, i32* %surround_mix_level27, align 4, !dbg !3996
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3997
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 22, !dbg !3998
  store i32 4, i32* %surround_mix_level_ltrt, align 8, !dbg !3999
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4000
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 23, !dbg !4001
  store i32 0, i32* %lfe_mix_level_exists, align 4, !dbg !4002
  %num_blocks = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 12, !dbg !4003
  %42 = load i32, i32* %num_blocks, align 4, !dbg !4003
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4004
  %num_blocks28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 9, !dbg !4005
  store i32 %42, i32* %num_blocks28, align 8, !dbg !4006
  %frame_type = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 7, !dbg !4007
  %44 = load i8, i8* %frame_type, align 1, !dbg !4007
  %conv29 = zext i8 %44 to i32, !dbg !4008
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4009
  %frame_type30 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 3, !dbg !4010
  store i32 %conv29, i32* %frame_type30, align 16, !dbg !4011
  %substreamid = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 8, !dbg !4012
  %46 = load i32, i32* %substreamid, align 4, !dbg !4012
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4013
  %substreamid31 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 4, !dbg !4014
  store i32 %46, i32* %substreamid31, align 4, !dbg !4015
  %dolby_surround_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 13, !dbg !4016
  %48 = load i32, i32* %dolby_surround_mode, align 8, !dbg !4016
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4017
  %dolby_surround_mode32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 28, !dbg !4018
  store i32 %48, i32* %dolby_surround_mode32, align 32, !dbg !4019
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4020
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 29, !dbg !4021
  store i32 0, i32* %dolby_surround_ex_mode, align 4, !dbg !4022
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4023
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 30, !dbg !4024
  store i32 0, i32* %dolby_headphone_mode, align 8, !dbg !4025
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4026
  %lfe_on33 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 13, !dbg !4028
  %53 = load i32, i32* %lfe_on33, align 8, !dbg !4028
  %tobool34 = icmp ne i32 %53, 0, !dbg !4026
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !4029

if.then35:                                        ; preds = %if.end
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4030
  %lfe_ch36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 72, !dbg !4032
  %55 = load i32, i32* %lfe_ch36, align 4, !dbg !4032
  %idxprom = sext i32 %55 to i64, !dbg !4033
  %56 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4033
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %56, i32 0, i32 83, !dbg !4034
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom, !dbg !4033
  store i32 0, i32* %arrayidx, align 4, !dbg !4035
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4036
  %lfe_ch37 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 72, !dbg !4037
  %58 = load i32, i32* %lfe_ch37, align 4, !dbg !4037
  %idxprom38 = sext i32 %58 to i64, !dbg !4038
  %59 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4038
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %59, i32 0, i32 84, !dbg !4039
  %arrayidx39 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom38, !dbg !4038
  store i32 7, i32* %arrayidx39, align 4, !dbg !4040
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4041
  %lfe_ch40 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 72, !dbg !4042
  %61 = load i32, i32* %lfe_ch40, align 4, !dbg !4042
  %idxprom41 = sext i32 %61 to i64, !dbg !4043
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4043
  %num_exp_groups = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 88, !dbg !4044
  %arrayidx42 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups, i64 0, i64 %idxprom41, !dbg !4043
  store i32 2, i32* %arrayidx42, align 4, !dbg !4045
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4046
  %lfe_ch43 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 72, !dbg !4047
  %64 = load i32, i32* %lfe_ch43, align 4, !dbg !4047
  %idxprom44 = sext i32 %64 to i64, !dbg !4048
  %65 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4048
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %65, i32 0, i32 47, !dbg !4049
  %arrayidx45 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom44, !dbg !4048
  store i32 0, i32* %arrayidx45, align 4, !dbg !4050
  br label %if.end46, !dbg !4051

if.end46:                                         ; preds = %if.then35, %if.end
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4052
  %bitstream_id47 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 10, !dbg !4054
  %67 = load i32, i32* %bitstream_id47, align 4, !dbg !4054
  %cmp = icmp sle i32 %67, 10, !dbg !4055
  br i1 %cmp, label %if.then49, label %if.else, !dbg !4056

if.then49:                                        ; preds = %if.end46
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4057
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 25, !dbg !4059
  store i32 0, i32* %eac3, align 4, !dbg !4060
  %69 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4061
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %69, i32 0, i32 38, !dbg !4062
  store i32 2, i32* %snr_offset_strategy, align 4, !dbg !4063
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4064
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 39, !dbg !4065
  store i32 1, i32* %block_switch_syntax, align 16, !dbg !4066
  %71 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4067
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %71, i32 0, i32 40, !dbg !4068
  store i32 1, i32* %dither_flag_syntax, align 4, !dbg !4069
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4070
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 41, !dbg !4071
  store i32 1, i32* %bit_allocation_syntax, align 8, !dbg !4072
  %73 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4073
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %73, i32 0, i32 42, !dbg !4074
  store i32 0, i32* %fast_gain_syntax, align 4, !dbg !4075
  %74 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4076
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %74, i32 0, i32 92, !dbg !4077
  store i32 0, i32* %first_cpl_leak, align 4, !dbg !4078
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4079
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 43, !dbg !4080
  store i32 1, i32* %dba_syntax, align 32, !dbg !4081
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4082
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 44, !dbg !4083
  store i32 1, i32* %skip_syntax, align 4, !dbg !4084
  %77 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4085
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %77, i32 0, i32 68, !dbg !4086
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i32 0, i32 0, !dbg !4087
  %78 = bitcast i32* %arraydecay to i8*, !dbg !4087
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 28, i32 8, i1 false), !dbg !4087
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4088
  %call50 = call i32 @ac3_parse_header(%struct.AC3DecodeContext* %79), !dbg !4089
  store i32 %call50, i32* %retval, align 4, !dbg !4090
  br label %return, !dbg !4090

if.else:                                          ; preds = %if.end46
  %80 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4091
  %eac351 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %80, i32 0, i32 25, !dbg !4094
  store i32 1, i32* %eac351, align 4, !dbg !4095
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4096
  %call52 = call i32 @ff_eac3_parse_header(%struct.AC3DecodeContext* %81), !dbg !4097
  store i32 %call52, i32* %retval, align 4, !dbg !4098
  br label %return, !dbg !4098

return:                                           ; preds = %if.else, %if.then49, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !4099
  ret i32 %82, !dbg !4099
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #6

declare i32* @av_crc_get_table(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @set_downmix_coeffs(%struct.AC3DecodeContext* %s) #1 !dbg !4100 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  %cmix = alloca float, align 4
  %smix = alloca float, align 4
  %norm0 = alloca float, align 4
  %norm1 = alloca float, align 4
  %downmix_coeffs = alloca [2 x [7 x float]], align 16
  %nf = alloca i32, align 4
  %nf69 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !4101, metadata !1849), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4103, metadata !1849), !dbg !4104
  call void @llvm.dbg.declare(metadata float* %cmix, metadata !4105, metadata !1849), !dbg !4106
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4107
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 19, !dbg !4108
  %1 = load i32, i32* %center_mix_level, align 4, !dbg !4108
  %idxprom = sext i32 %1 to i64, !dbg !4109
  %arrayidx = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom, !dbg !4109
  %2 = load float, float* %arrayidx, align 4, !dbg !4109
  store float %2, float* %cmix, align 4, !dbg !4106
  call void @llvm.dbg.declare(metadata float* %smix, metadata !4110, metadata !1849), !dbg !4111
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4112
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 21, !dbg !4113
  %4 = load i32, i32* %surround_mix_level, align 4, !dbg !4113
  %idxprom1 = sext i32 %4 to i64, !dbg !4114
  %arrayidx2 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom1, !dbg !4114
  %5 = load float, float* %arrayidx2, align 4, !dbg !4114
  store float %5, float* %smix, align 4, !dbg !4111
  call void @llvm.dbg.declare(metadata float* %norm0, metadata !4115, metadata !1849), !dbg !4116
  call void @llvm.dbg.declare(metadata float* %norm1, metadata !4117, metadata !1849), !dbg !4118
  call void @llvm.dbg.declare(metadata [2 x [7 x float]]* %downmix_coeffs, metadata !4119, metadata !1849), !dbg !4122
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4123
  %downmix_coeffs3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 73, !dbg !4125
  %arrayidx4 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs3, i64 0, i64 0, !dbg !4123
  %7 = load i16*, i16** %arrayidx4, align 16, !dbg !4123
  %tobool = icmp ne i16* %7, null, !dbg !4123
  br i1 %tobool, label %if.end15, label %if.then, !dbg !4126

if.then:                                          ; preds = %entry
  %call = call i8* @av_malloc_array(i64 14, i64 2), !dbg !4127
  %8 = bitcast i8* %call to i16*, !dbg !4127
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4129
  %downmix_coeffs5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 73, !dbg !4130
  %arrayidx6 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs5, i64 0, i64 0, !dbg !4129
  store i16* %8, i16** %arrayidx6, align 16, !dbg !4131
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4132
  %downmix_coeffs7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 73, !dbg !4134
  %arrayidx8 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs7, i64 0, i64 0, !dbg !4132
  %11 = load i16*, i16** %arrayidx8, align 16, !dbg !4132
  %tobool9 = icmp ne i16* %11, null, !dbg !4132
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !4135

if.then10:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !4136
  br label %return, !dbg !4136

if.end:                                           ; preds = %if.then
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4137
  %downmix_coeffs11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 73, !dbg !4138
  %arrayidx12 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs11, i64 0, i64 0, !dbg !4137
  %13 = load i16*, i16** %arrayidx12, align 16, !dbg !4137
  %add.ptr = getelementptr inbounds i16, i16* %13, i64 7, !dbg !4139
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4140
  %downmix_coeffs13 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 73, !dbg !4141
  %arrayidx14 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs13, i64 0, i64 1, !dbg !4140
  store i16* %add.ptr, i16** %arrayidx14, align 8, !dbg !4142
  br label %if.end15, !dbg !4143

if.end15:                                         ; preds = %if.end, %entry
  store i32 0, i32* %i, align 4, !dbg !4144
  br label %for.cond, !dbg !4146

for.cond:                                         ; preds = %for.inc, %if.end15
  %15 = load i32, i32* %i, align 4, !dbg !4147
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4150
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 70, !dbg !4151
  %17 = load i32, i32* %fbw_channels, align 4, !dbg !4151
  %cmp = icmp slt i32 %15, %17, !dbg !4152
  br i1 %cmp, label %for.body, label %for.end, !dbg !4153

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !4154
  %idxprom16 = sext i32 %18 to i64, !dbg !4156
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4157
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 12, !dbg !4158
  %20 = load i32, i32* %channel_mode, align 4, !dbg !4158
  %idxprom17 = sext i32 %20 to i64, !dbg !4156
  %arrayidx18 = getelementptr inbounds [8 x [5 x [2 x i8]]], [8 x [5 x [2 x i8]]]* @ac3_default_coeffs, i64 0, i64 %idxprom17, !dbg !4156
  %arrayidx19 = getelementptr inbounds [5 x [2 x i8]], [5 x [2 x i8]]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !4156
  %arrayidx20 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx19, i64 0, i64 0, !dbg !4156
  %21 = load i8, i8* %arrayidx20, align 2, !dbg !4156
  %idxprom21 = zext i8 %21 to i64, !dbg !4159
  %arrayidx22 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom21, !dbg !4159
  %22 = load float, float* %arrayidx22, align 4, !dbg !4159
  %23 = load i32, i32* %i, align 4, !dbg !4160
  %idxprom23 = sext i32 %23 to i64, !dbg !4161
  %arrayidx24 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4161
  %arrayidx25 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx24, i64 0, i64 %idxprom23, !dbg !4161
  store float %22, float* %arrayidx25, align 4, !dbg !4162
  %24 = load i32, i32* %i, align 4, !dbg !4163
  %idxprom26 = sext i32 %24 to i64, !dbg !4164
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4165
  %channel_mode27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 12, !dbg !4166
  %26 = load i32, i32* %channel_mode27, align 4, !dbg !4166
  %idxprom28 = sext i32 %26 to i64, !dbg !4164
  %arrayidx29 = getelementptr inbounds [8 x [5 x [2 x i8]]], [8 x [5 x [2 x i8]]]* @ac3_default_coeffs, i64 0, i64 %idxprom28, !dbg !4164
  %arrayidx30 = getelementptr inbounds [5 x [2 x i8]], [5 x [2 x i8]]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !4164
  %arrayidx31 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx30, i64 0, i64 1, !dbg !4164
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !4164
  %idxprom32 = zext i8 %27 to i64, !dbg !4167
  %arrayidx33 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom32, !dbg !4167
  %28 = load float, float* %arrayidx33, align 4, !dbg !4167
  %29 = load i32, i32* %i, align 4, !dbg !4168
  %idxprom34 = sext i32 %29 to i64, !dbg !4169
  %arrayidx35 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4169
  %arrayidx36 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx35, i64 0, i64 %idxprom34, !dbg !4169
  store float %28, float* %arrayidx36, align 4, !dbg !4170
  br label %for.inc, !dbg !4171

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !4172
  %inc = add nsw i32 %30, 1, !dbg !4172
  store i32 %inc, i32* %i, align 4, !dbg !4172
  br label %for.cond, !dbg !4174, !llvm.loop !4175

for.end:                                          ; preds = %for.cond
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4177
  %channel_mode37 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 12, !dbg !4179
  %32 = load i32, i32* %channel_mode37, align 4, !dbg !4179
  %cmp38 = icmp sgt i32 %32, 1, !dbg !4180
  br i1 %cmp38, label %land.lhs.true, label %if.end46, !dbg !4181

land.lhs.true:                                    ; preds = %for.end
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4182
  %channel_mode39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 12, !dbg !4184
  %34 = load i32, i32* %channel_mode39, align 4, !dbg !4184
  %and = and i32 %34, 1, !dbg !4185
  %tobool40 = icmp ne i32 %and, 0, !dbg !4185
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !4186

if.then41:                                        ; preds = %land.lhs.true
  %35 = load float, float* %cmix, align 4, !dbg !4187
  %arrayidx42 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4189
  %arrayidx43 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx42, i64 0, i64 1, !dbg !4189
  store float %35, float* %arrayidx43, align 4, !dbg !4190
  %arrayidx44 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4191
  %arrayidx45 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx44, i64 0, i64 1, !dbg !4191
  store float %35, float* %arrayidx45, align 4, !dbg !4192
  br label %if.end46, !dbg !4193

if.end46:                                         ; preds = %if.then41, %land.lhs.true, %for.end
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4194
  %channel_mode47 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 12, !dbg !4196
  %37 = load i32, i32* %channel_mode47, align 4, !dbg !4196
  %cmp48 = icmp eq i32 %37, 4, !dbg !4197
  br i1 %cmp48, label %if.then51, label %lor.lhs.false, !dbg !4198

lor.lhs.false:                                    ; preds = %if.end46
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4199
  %channel_mode49 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 12, !dbg !4201
  %39 = load i32, i32* %channel_mode49, align 4, !dbg !4201
  %cmp50 = icmp eq i32 %39, 5, !dbg !4202
  br i1 %cmp50, label %if.then51, label %if.end60, !dbg !4203

if.then51:                                        ; preds = %lor.lhs.false, %if.end46
  call void @llvm.dbg.declare(metadata i32* %nf, metadata !4204, metadata !1849), !dbg !4206
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4207
  %channel_mode52 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 12, !dbg !4208
  %41 = load i32, i32* %channel_mode52, align 4, !dbg !4208
  %sub = sub nsw i32 %41, 2, !dbg !4209
  store i32 %sub, i32* %nf, align 4, !dbg !4206
  %42 = load float, float* %smix, align 4, !dbg !4210
  %conv = fpext float %42 to double, !dbg !4210
  %mul = fmul double %conv, 0x3FE6A09E667F3BCD, !dbg !4211
  %conv53 = fptrunc double %mul to float, !dbg !4210
  %43 = load i32, i32* %nf, align 4, !dbg !4212
  %idxprom54 = sext i32 %43 to i64, !dbg !4213
  %arrayidx55 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4213
  %arrayidx56 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx55, i64 0, i64 %idxprom54, !dbg !4213
  store float %conv53, float* %arrayidx56, align 4, !dbg !4214
  %44 = load i32, i32* %nf, align 4, !dbg !4215
  %idxprom57 = sext i32 %44 to i64, !dbg !4216
  %arrayidx58 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4216
  %arrayidx59 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx58, i64 0, i64 %idxprom57, !dbg !4216
  store float %conv53, float* %arrayidx59, align 4, !dbg !4217
  br label %if.end60, !dbg !4218

if.end60:                                         ; preds = %if.then51, %lor.lhs.false
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4219
  %channel_mode61 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 12, !dbg !4221
  %46 = load i32, i32* %channel_mode61, align 4, !dbg !4221
  %cmp62 = icmp eq i32 %46, 6, !dbg !4222
  br i1 %cmp62, label %if.then68, label %lor.lhs.false64, !dbg !4223

lor.lhs.false64:                                  ; preds = %if.end60
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4224
  %channel_mode65 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 12, !dbg !4226
  %48 = load i32, i32* %channel_mode65, align 4, !dbg !4226
  %cmp66 = icmp eq i32 %48, 7, !dbg !4227
  br i1 %cmp66, label %if.then68, label %if.end78, !dbg !4228

if.then68:                                        ; preds = %lor.lhs.false64, %if.end60
  call void @llvm.dbg.declare(metadata i32* %nf69, metadata !4229, metadata !1849), !dbg !4231
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4232
  %channel_mode70 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 12, !dbg !4233
  %50 = load i32, i32* %channel_mode70, align 4, !dbg !4233
  %sub71 = sub nsw i32 %50, 4, !dbg !4234
  store i32 %sub71, i32* %nf69, align 4, !dbg !4231
  %51 = load float, float* %smix, align 4, !dbg !4235
  %52 = load i32, i32* %nf69, align 4, !dbg !4236
  %add = add nsw i32 %52, 1, !dbg !4237
  %idxprom72 = sext i32 %add to i64, !dbg !4238
  %arrayidx73 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4238
  %arrayidx74 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx73, i64 0, i64 %idxprom72, !dbg !4238
  store float %51, float* %arrayidx74, align 4, !dbg !4239
  %53 = load i32, i32* %nf69, align 4, !dbg !4240
  %idxprom75 = sext i32 %53 to i64, !dbg !4241
  %arrayidx76 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4241
  %arrayidx77 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx76, i64 0, i64 %idxprom75, !dbg !4241
  store float %51, float* %arrayidx77, align 4, !dbg !4242
  br label %if.end78, !dbg !4243

if.end78:                                         ; preds = %if.then68, %lor.lhs.false64
  store float 0.000000e+00, float* %norm1, align 4, !dbg !4244
  store float 0.000000e+00, float* %norm0, align 4, !dbg !4245
  store i32 0, i32* %i, align 4, !dbg !4246
  br label %for.cond79, !dbg !4248

for.cond79:                                       ; preds = %for.inc92, %if.end78
  %54 = load i32, i32* %i, align 4, !dbg !4249
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4252
  %fbw_channels80 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 70, !dbg !4253
  %56 = load i32, i32* %fbw_channels80, align 4, !dbg !4253
  %cmp81 = icmp slt i32 %54, %56, !dbg !4254
  br i1 %cmp81, label %for.body83, label %for.end94, !dbg !4255

for.body83:                                       ; preds = %for.cond79
  %57 = load i32, i32* %i, align 4, !dbg !4256
  %idxprom84 = sext i32 %57 to i64, !dbg !4258
  %arrayidx85 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4258
  %arrayidx86 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx85, i64 0, i64 %idxprom84, !dbg !4258
  %58 = load float, float* %arrayidx86, align 4, !dbg !4258
  %59 = load float, float* %norm0, align 4, !dbg !4259
  %add87 = fadd float %59, %58, !dbg !4259
  store float %add87, float* %norm0, align 4, !dbg !4259
  %60 = load i32, i32* %i, align 4, !dbg !4260
  %idxprom88 = sext i32 %60 to i64, !dbg !4261
  %arrayidx89 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4261
  %arrayidx90 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx89, i64 0, i64 %idxprom88, !dbg !4261
  %61 = load float, float* %arrayidx90, align 4, !dbg !4261
  %62 = load float, float* %norm1, align 4, !dbg !4262
  %add91 = fadd float %62, %61, !dbg !4262
  store float %add91, float* %norm1, align 4, !dbg !4262
  br label %for.inc92, !dbg !4263

for.inc92:                                        ; preds = %for.body83
  %63 = load i32, i32* %i, align 4, !dbg !4264
  %inc93 = add nsw i32 %63, 1, !dbg !4264
  store i32 %inc93, i32* %i, align 4, !dbg !4264
  br label %for.cond79, !dbg !4266, !llvm.loop !4267

for.end94:                                        ; preds = %for.cond79
  %64 = load float, float* %norm0, align 4, !dbg !4269
  %div = fdiv float 1.000000e+00, %64, !dbg !4270
  store float %div, float* %norm0, align 4, !dbg !4271
  %65 = load float, float* %norm1, align 4, !dbg !4272
  %div95 = fdiv float 1.000000e+00, %65, !dbg !4273
  store float %div95, float* %norm1, align 4, !dbg !4274
  store i32 0, i32* %i, align 4, !dbg !4275
  br label %for.cond96, !dbg !4277

for.cond96:                                       ; preds = %for.inc109, %for.end94
  %66 = load i32, i32* %i, align 4, !dbg !4278
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4281
  %fbw_channels97 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 70, !dbg !4282
  %68 = load i32, i32* %fbw_channels97, align 4, !dbg !4282
  %cmp98 = icmp slt i32 %66, %68, !dbg !4283
  br i1 %cmp98, label %for.body100, label %for.end111, !dbg !4284

for.body100:                                      ; preds = %for.cond96
  %69 = load float, float* %norm0, align 4, !dbg !4285
  %70 = load i32, i32* %i, align 4, !dbg !4287
  %idxprom101 = sext i32 %70 to i64, !dbg !4288
  %arrayidx102 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4288
  %arrayidx103 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx102, i64 0, i64 %idxprom101, !dbg !4288
  %71 = load float, float* %arrayidx103, align 4, !dbg !4289
  %mul104 = fmul float %71, %69, !dbg !4289
  store float %mul104, float* %arrayidx103, align 4, !dbg !4289
  %72 = load float, float* %norm1, align 4, !dbg !4290
  %73 = load i32, i32* %i, align 4, !dbg !4291
  %idxprom105 = sext i32 %73 to i64, !dbg !4292
  %arrayidx106 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4292
  %arrayidx107 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx106, i64 0, i64 %idxprom105, !dbg !4292
  %74 = load float, float* %arrayidx107, align 4, !dbg !4293
  %mul108 = fmul float %74, %72, !dbg !4293
  store float %mul108, float* %arrayidx107, align 4, !dbg !4293
  br label %for.inc109, !dbg !4294

for.inc109:                                       ; preds = %for.body100
  %75 = load i32, i32* %i, align 4, !dbg !4295
  %inc110 = add nsw i32 %75, 1, !dbg !4295
  store i32 %inc110, i32* %i, align 4, !dbg !4295
  br label %for.cond96, !dbg !4297, !llvm.loop !4298

for.end111:                                       ; preds = %for.cond96
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4300
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 75, !dbg !4302
  %77 = load i32, i32* %output_mode, align 4, !dbg !4302
  %cmp112 = icmp eq i32 %77, 1, !dbg !4303
  br i1 %cmp112, label %if.then114, label %if.end136, !dbg !4304

if.then114:                                       ; preds = %for.end111
  store i32 0, i32* %i, align 4, !dbg !4305
  br label %for.cond115, !dbg !4308

for.cond115:                                      ; preds = %for.inc133, %if.then114
  %78 = load i32, i32* %i, align 4, !dbg !4309
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4312
  %fbw_channels116 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %79, i32 0, i32 70, !dbg !4313
  %80 = load i32, i32* %fbw_channels116, align 4, !dbg !4313
  %cmp117 = icmp slt i32 %78, %80, !dbg !4314
  br i1 %cmp117, label %for.body119, label %for.end135, !dbg !4315

for.body119:                                      ; preds = %for.cond115
  %81 = load i32, i32* %i, align 4, !dbg !4316
  %idxprom120 = sext i32 %81 to i64, !dbg !4317
  %arrayidx121 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4317
  %arrayidx122 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx121, i64 0, i64 %idxprom120, !dbg !4317
  %82 = load float, float* %arrayidx122, align 4, !dbg !4317
  %83 = load i32, i32* %i, align 4, !dbg !4318
  %idxprom123 = sext i32 %83 to i64, !dbg !4319
  %arrayidx124 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4319
  %arrayidx125 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx124, i64 0, i64 %idxprom123, !dbg !4319
  %84 = load float, float* %arrayidx125, align 4, !dbg !4319
  %add126 = fadd float %82, %84, !dbg !4320
  %conv127 = fpext float %add126 to double, !dbg !4321
  %mul128 = fmul double %conv127, 0x3FE6A09E667F3BCD, !dbg !4322
  %conv129 = fptrunc double %mul128 to float, !dbg !4321
  %85 = load i32, i32* %i, align 4, !dbg !4323
  %idxprom130 = sext i32 %85 to i64, !dbg !4324
  %arrayidx131 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4324
  %arrayidx132 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx131, i64 0, i64 %idxprom130, !dbg !4324
  store float %conv129, float* %arrayidx132, align 4, !dbg !4325
  br label %for.inc133, !dbg !4324

for.inc133:                                       ; preds = %for.body119
  %86 = load i32, i32* %i, align 4, !dbg !4326
  %inc134 = add nsw i32 %86, 1, !dbg !4326
  store i32 %inc134, i32* %i, align 4, !dbg !4326
  br label %for.cond115, !dbg !4328, !llvm.loop !4329

for.end135:                                       ; preds = %for.cond115
  br label %if.end136, !dbg !4331

if.end136:                                        ; preds = %for.end135, %for.end111
  store i32 0, i32* %i, align 4, !dbg !4332
  br label %for.cond137, !dbg !4334

for.cond137:                                      ; preds = %for.inc166, %if.end136
  %87 = load i32, i32* %i, align 4, !dbg !4335
  %88 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4338
  %fbw_channels138 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %88, i32 0, i32 70, !dbg !4339
  %89 = load i32, i32* %fbw_channels138, align 4, !dbg !4339
  %cmp139 = icmp slt i32 %87, %89, !dbg !4340
  br i1 %cmp139, label %for.body141, label %for.end168, !dbg !4341

for.body141:                                      ; preds = %for.cond137
  %90 = load i32, i32* %i, align 4, !dbg !4342
  %idxprom142 = sext i32 %90 to i64, !dbg !4344
  %arrayidx143 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4344
  %arrayidx144 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx143, i64 0, i64 %idxprom142, !dbg !4344
  %91 = load float, float* %arrayidx144, align 4, !dbg !4344
  %mul145 = fmul float %91, 4.096000e+03, !dbg !4345
  %conv146 = fpext float %mul145 to double, !dbg !4346
  %add147 = fadd double %conv146, 5.000000e-01, !dbg !4347
  %conv148 = fptosi double %add147 to i32, !dbg !4348
  %conv149 = trunc i32 %conv148 to i16, !dbg !4349
  %92 = load i32, i32* %i, align 4, !dbg !4350
  %idxprom150 = sext i32 %92 to i64, !dbg !4351
  %93 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4351
  %downmix_coeffs151 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %93, i32 0, i32 73, !dbg !4352
  %arrayidx152 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs151, i64 0, i64 0, !dbg !4351
  %94 = load i16*, i16** %arrayidx152, align 16, !dbg !4351
  %arrayidx153 = getelementptr inbounds i16, i16* %94, i64 %idxprom150, !dbg !4351
  store i16 %conv149, i16* %arrayidx153, align 2, !dbg !4353
  %95 = load i32, i32* %i, align 4, !dbg !4354
  %idxprom154 = sext i32 %95 to i64, !dbg !4355
  %arrayidx155 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4355
  %arrayidx156 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx155, i64 0, i64 %idxprom154, !dbg !4355
  %96 = load float, float* %arrayidx156, align 4, !dbg !4355
  %mul157 = fmul float %96, 4.096000e+03, !dbg !4356
  %conv158 = fpext float %mul157 to double, !dbg !4357
  %add159 = fadd double %conv158, 5.000000e-01, !dbg !4358
  %conv160 = fptosi double %add159 to i32, !dbg !4359
  %conv161 = trunc i32 %conv160 to i16, !dbg !4360
  %97 = load i32, i32* %i, align 4, !dbg !4361
  %idxprom162 = sext i32 %97 to i64, !dbg !4362
  %98 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4362
  %downmix_coeffs163 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %98, i32 0, i32 73, !dbg !4363
  %arrayidx164 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs163, i64 0, i64 1, !dbg !4362
  %99 = load i16*, i16** %arrayidx164, align 8, !dbg !4362
  %arrayidx165 = getelementptr inbounds i16, i16* %99, i64 %idxprom162, !dbg !4362
  store i16 %conv161, i16* %arrayidx165, align 2, !dbg !4364
  br label %for.inc166, !dbg !4365

for.inc166:                                       ; preds = %for.body141
  %100 = load i32, i32* %i, align 4, !dbg !4366
  %inc167 = add nsw i32 %100, 1, !dbg !4366
  store i32 %inc167, i32* %i, align 4, !dbg !4366
  br label %for.cond137, !dbg !4368, !llvm.loop !4369

for.end168:                                       ; preds = %for.cond137
  store i32 0, i32* %retval, align 4, !dbg !4371
  br label %return, !dbg !4371

return:                                           ; preds = %for.end168, %if.then10
  %101 = load i32, i32* %retval, align 4, !dbg !4372
  ret i32 %101, !dbg !4372
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_block(%struct.AC3DecodeContext* %s, i32 %blk, i32 %offset) #1 !dbg !4373 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %fbw_channels = alloca i32, align 4
  %channel_mode = alloca i32, align 4
  %i = alloca i32, align 4
  %bnd = alloca i32, align 4
  %seg = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %different_transforms = alloca i32, align 4
  %downmix_output = alloca i32, align 4
  %cpl_in_use = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %bit_alloc_stages = alloca [7 x i8], align 1
  %range_bits = alloca i32, align 4
  %range = alloca i32, align 4
  %group_size = alloca i32, align 4
  %prev = alloca i32, align 4
  %bandwidth_code = alloca i32, align 4
  %snr = alloca i32, align 4
  %csnr = alloca i32, align 4
  %prev512 = alloca i32, align 4
  %prev573 = alloca i32, align 4
  %fl = alloca i32, align 4
  %sl = alloca i32, align 4
  %bap_tab = alloca i8*, align 8
  %skipl = alloca i32, align 4
  %audio_channel = alloca i32, align 4
  %gain = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !4376, metadata !1849), !dbg !4377
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !4378, metadata !1849), !dbg !4379
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4380, metadata !1849), !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !4382, metadata !1849), !dbg !4383
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4384
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 70, !dbg !4385
  %1 = load i32, i32* %fbw_channels1, align 4, !dbg !4385
  store i32 %1, i32* %fbw_channels, align 4, !dbg !4383
  call void @llvm.dbg.declare(metadata i32* %channel_mode, metadata !4386, metadata !1849), !dbg !4387
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4388
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 12, !dbg !4389
  %3 = load i32, i32* %channel_mode2, align 4, !dbg !4389
  store i32 %3, i32* %channel_mode, align 4, !dbg !4387
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4390, metadata !1849), !dbg !4391
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !4392, metadata !1849), !dbg !4393
  call void @llvm.dbg.declare(metadata i32* %seg, metadata !4394, metadata !1849), !dbg !4395
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4396, metadata !1849), !dbg !4397
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4398, metadata !1849), !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %different_transforms, metadata !4400, metadata !1849), !dbg !4401
  call void @llvm.dbg.declare(metadata i32* %downmix_output, metadata !4402, metadata !1849), !dbg !4403
  call void @llvm.dbg.declare(metadata i32* %cpl_in_use, metadata !4404, metadata !1849), !dbg !4405
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !4406, metadata !1849), !dbg !4407
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4408
  %gbc3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 2, !dbg !4409
  store %struct.GetBitContext* %gbc3, %struct.GetBitContext** %gbc, align 8, !dbg !4407
  call void @llvm.dbg.declare(metadata [7 x i8]* %bit_alloc_stages, metadata !4410, metadata !1849), !dbg !4411
  %5 = bitcast [7 x i8]* %bit_alloc_stages to i8*, !dbg !4411
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 7, i32 1, i1 false), !dbg !4411
  store i32 0, i32* %different_transforms, align 4, !dbg !4412
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4413
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 39, !dbg !4415
  %7 = load i32, i32* %block_switch_syntax, align 16, !dbg !4415
  %tobool = icmp ne i32 %7, 0, !dbg !4413
  br i1 %tobool, label %if.then, label %if.end12, !dbg !4416

if.then:                                          ; preds = %entry
  store i32 1, i32* %ch, align 4, !dbg !4417
  br label %for.cond, !dbg !4420

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %ch, align 4, !dbg !4421
  %9 = load i32, i32* %fbw_channels, align 4, !dbg !4424
  %cmp = icmp sle i32 %8, %9, !dbg !4425
  br i1 %cmp, label %for.body, label %for.end, !dbg !4426

for.body:                                         ; preds = %for.cond
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4427
  %call = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !4429
  %11 = load i32, i32* %ch, align 4, !dbg !4430
  %idxprom = sext i32 %11 to i64, !dbg !4431
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4431
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 106, !dbg !4432
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i64 0, i64 %idxprom, !dbg !4431
  store i32 %call, i32* %arrayidx, align 4, !dbg !4433
  %13 = load i32, i32* %ch, align 4, !dbg !4434
  %cmp4 = icmp sgt i32 %13, 1, !dbg !4436
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !4437

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32, i32* %ch, align 4, !dbg !4438
  %idxprom5 = sext i32 %14 to i64, !dbg !4440
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4440
  %block_switch6 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 106, !dbg !4441
  %arrayidx7 = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch6, i64 0, i64 %idxprom5, !dbg !4440
  %16 = load i32, i32* %arrayidx7, align 4, !dbg !4440
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4442
  %block_switch8 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 106, !dbg !4443
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch8, i64 0, i64 1, !dbg !4442
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !4442
  %cmp10 = icmp ne i32 %16, %18, !dbg !4444
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !4445

if.then11:                                        ; preds = %land.lhs.true
  store i32 1, i32* %different_transforms, align 4, !dbg !4446
  br label %if.end, !dbg !4447

if.end:                                           ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4448

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %ch, align 4, !dbg !4449
  %inc = add nsw i32 %19, 1, !dbg !4449
  store i32 %inc, i32* %ch, align 4, !dbg !4449
  br label %for.cond, !dbg !4451, !llvm.loop !4452

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !4454

if.end12:                                         ; preds = %for.end, %entry
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4455
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 40, !dbg !4457
  %21 = load i32, i32* %dither_flag_syntax, align 4, !dbg !4457
  %tobool13 = icmp ne i32 %21, 0, !dbg !4455
  br i1 %tobool13, label %if.then14, label %if.end24, !dbg !4458

if.then14:                                        ; preds = %if.end12
  store i32 1, i32* %ch, align 4, !dbg !4459
  br label %for.cond15, !dbg !4462

for.cond15:                                       ; preds = %for.inc21, %if.then14
  %22 = load i32, i32* %ch, align 4, !dbg !4463
  %23 = load i32, i32* %fbw_channels, align 4, !dbg !4466
  %cmp16 = icmp sle i32 %22, %23, !dbg !4467
  br i1 %cmp16, label %for.body17, label %for.end23, !dbg !4468

for.body17:                                       ; preds = %for.cond15
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4469
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %24), !dbg !4471
  %25 = load i32, i32* %ch, align 4, !dbg !4472
  %idxprom19 = sext i32 %25 to i64, !dbg !4473
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4473
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 104, !dbg !4474
  %arrayidx20 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom19, !dbg !4473
  store i32 %call18, i32* %arrayidx20, align 4, !dbg !4475
  br label %for.inc21, !dbg !4476

for.inc21:                                        ; preds = %for.body17
  %27 = load i32, i32* %ch, align 4, !dbg !4477
  %inc22 = add nsw i32 %27, 1, !dbg !4477
  store i32 %inc22, i32* %ch, align 4, !dbg !4477
  br label %for.cond15, !dbg !4479, !llvm.loop !4480

for.end23:                                        ; preds = %for.cond15
  br label %if.end24, !dbg !4482

if.end24:                                         ; preds = %for.end23, %if.end12
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4483
  %channel_mode25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 12, !dbg !4484
  %29 = load i32, i32* %channel_mode25, align 4, !dbg !4484
  %tobool26 = icmp ne i32 %29, 0, !dbg !4485
  %lnot = xor i1 %tobool26, true, !dbg !4485
  %lnot.ext = zext i1 %lnot to i32, !dbg !4485
  store i32 %lnot.ext, i32* %i, align 4, !dbg !4486
  br label %do.body, !dbg !4487, !llvm.loop !4488

do.body:                                          ; preds = %do.cond, %if.end24
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4489
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !4492
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4492
  br i1 %tobool28, label %if.then29, label %if.else41, !dbg !4493

if.then29:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %range_bits, metadata !4494, metadata !1849), !dbg !4496
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4497
  %call30 = call i32 @get_bits(%struct.GetBitContext* %31, i32 8), !dbg !4498
  store i32 %call30, i32* %range_bits, align 4, !dbg !4496
  call void @llvm.dbg.declare(metadata i32* %range, metadata !4499, metadata !1849), !dbg !4500
  %32 = load i32, i32* %range_bits, align 4, !dbg !4501
  %33 = load i32, i32* %range_bits, align 4, !dbg !4502
  %and = and i32 %33, 128, !dbg !4503
  %shl = shl i32 %and, 1, !dbg !4504
  %or = or i32 %32, %shl, !dbg !4505
  store i32 %or, i32* %range, align 4, !dbg !4500
  %34 = load i32, i32* %range_bits, align 4, !dbg !4506
  %cmp31 = icmp sle i32 %34, 127, !dbg !4508
  br i1 %cmp31, label %if.then34, label %lor.lhs.false, !dbg !4509

lor.lhs.false:                                    ; preds = %if.then29
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4510
  %drc_scale = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 80, !dbg !4512
  %36 = load i32, i32* %drc_scale, align 4, !dbg !4512
  %conv = sitofp i32 %36 to double, !dbg !4510
  %cmp32 = fcmp ole double %conv, 1.000000e+00, !dbg !4513
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !4514

if.then34:                                        ; preds = %lor.lhs.false, %if.then29
  %37 = load i32, i32* %range, align 4, !dbg !4515
  %38 = load i32, i32* %i, align 4, !dbg !4516
  %idxprom35 = sext i32 %38 to i64, !dbg !4517
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4517
  %dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 79, !dbg !4518
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %dynamic_range, i64 0, i64 %idxprom35, !dbg !4517
  store i32 %37, i32* %arrayidx36, align 4, !dbg !4519
  br label %if.end40, !dbg !4517

if.else:                                          ; preds = %lor.lhs.false
  %40 = load i32, i32* %range, align 4, !dbg !4520
  %41 = load i32, i32* %i, align 4, !dbg !4521
  %idxprom37 = sext i32 %41 to i64, !dbg !4522
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4522
  %dynamic_range38 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 79, !dbg !4523
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %dynamic_range38, i64 0, i64 %idxprom37, !dbg !4522
  store i32 %40, i32* %arrayidx39, align 4, !dbg !4524
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then34
  br label %if.end49, !dbg !4525

if.else41:                                        ; preds = %do.body
  %43 = load i32, i32* %blk.addr, align 4, !dbg !4526
  %cmp42 = icmp eq i32 %43, 0, !dbg !4529
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !4526

if.then44:                                        ; preds = %if.else41
  %44 = load i32, i32* %i, align 4, !dbg !4530
  %idxprom45 = sext i32 %44 to i64, !dbg !4532
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4532
  %dynamic_range46 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 79, !dbg !4533
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %dynamic_range46, i64 0, i64 %idxprom45, !dbg !4532
  store i32 0, i32* %arrayidx47, align 4, !dbg !4534
  br label %if.end48, !dbg !4535

if.end48:                                         ; preds = %if.then44, %if.else41
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end40
  br label %do.cond, !dbg !4536

do.cond:                                          ; preds = %if.end49
  %46 = load i32, i32* %i, align 4, !dbg !4537
  %dec = add nsw i32 %46, -1, !dbg !4537
  store i32 %dec, i32* %i, align 4, !dbg !4537
  %tobool50 = icmp ne i32 %46, 0, !dbg !4539
  br i1 %tobool50, label %do.body, label %do.end, !dbg !4539, !llvm.loop !4488

do.end:                                           ; preds = %do.cond
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4540
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 25, !dbg !4542
  %48 = load i32, i32* %eac3, align 4, !dbg !4542
  %tobool51 = icmp ne i32 %48, 0, !dbg !4540
  br i1 %tobool51, label %land.lhs.true52, label %if.end68, !dbg !4543

land.lhs.true52:                                  ; preds = %do.end
  %49 = load i32, i32* %blk.addr, align 4, !dbg !4544
  %tobool53 = icmp ne i32 %49, 0, !dbg !4544
  br i1 %tobool53, label %lor.lhs.false54, label %if.then57, !dbg !4546

lor.lhs.false54:                                  ; preds = %land.lhs.true52
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4547
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %50), !dbg !4549
  %tobool56 = icmp ne i32 %call55, 0, !dbg !4549
  br i1 %tobool56, label %if.then57, label %if.end68, !dbg !4550

if.then57:                                        ; preds = %lor.lhs.false54, %land.lhs.true52
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4551
  %call58 = call i32 @get_bits1(%struct.GetBitContext* %51), !dbg !4553
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4554
  %spx_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 56, !dbg !4555
  store i32 %call58, i32* %spx_in_use, align 32, !dbg !4556
  %53 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4557
  %spx_in_use59 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %53, i32 0, i32 56, !dbg !4559
  %54 = load i32, i32* %spx_in_use59, align 32, !dbg !4559
  %tobool60 = icmp ne i32 %54, 0, !dbg !4557
  br i1 %tobool60, label %if.then61, label %if.end67, !dbg !4560

if.then61:                                        ; preds = %if.then57
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4561
  %56 = load i32, i32* %blk.addr, align 4, !dbg !4564
  %call62 = call i32 @spx_strategy(%struct.AC3DecodeContext* %55, i32 %56), !dbg !4565
  store i32 %call62, i32* %ret, align 4, !dbg !4566
  %cmp63 = icmp slt i32 %call62, 0, !dbg !4567
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !4568

if.then65:                                        ; preds = %if.then61
  %57 = load i32, i32* %ret, align 4, !dbg !4569
  store i32 %57, i32* %retval, align 4, !dbg !4570
  br label %return, !dbg !4570

if.end66:                                         ; preds = %if.then61
  br label %if.end67, !dbg !4571

if.end67:                                         ; preds = %if.end66, %if.then57
  br label %if.end68, !dbg !4572

if.end68:                                         ; preds = %if.end67, %lor.lhs.false54, %do.end
  %58 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4573
  %eac369 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %58, i32 0, i32 25, !dbg !4575
  %59 = load i32, i32* %eac369, align 4, !dbg !4575
  %tobool70 = icmp ne i32 %59, 0, !dbg !4573
  br i1 %tobool70, label %lor.lhs.false71, label %if.then74, !dbg !4576

lor.lhs.false71:                                  ; preds = %if.end68
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4577
  %spx_in_use72 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 56, !dbg !4579
  %61 = load i32, i32* %spx_in_use72, align 32, !dbg !4579
  %tobool73 = icmp ne i32 %61, 0, !dbg !4577
  br i1 %tobool73, label %if.end87, label %if.then74, !dbg !4580

if.then74:                                        ; preds = %lor.lhs.false71, %if.end68
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4581
  %spx_in_use75 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 56, !dbg !4583
  store i32 0, i32* %spx_in_use75, align 32, !dbg !4584
  store i32 1, i32* %ch, align 4, !dbg !4585
  br label %for.cond76, !dbg !4587

for.cond76:                                       ; preds = %for.inc84, %if.then74
  %63 = load i32, i32* %ch, align 4, !dbg !4588
  %64 = load i32, i32* %fbw_channels, align 4, !dbg !4591
  %cmp77 = icmp sle i32 %63, %64, !dbg !4592
  br i1 %cmp77, label %for.body79, label %for.end86, !dbg !4593

for.body79:                                       ; preds = %for.cond76
  %65 = load i32, i32* %ch, align 4, !dbg !4594
  %idxprom80 = sext i32 %65 to i64, !dbg !4596
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4596
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 57, !dbg !4597
  %arrayidx81 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom80, !dbg !4596
  store i8 0, i8* %arrayidx81, align 1, !dbg !4598
  %67 = load i32, i32* %ch, align 4, !dbg !4599
  %idxprom82 = sext i32 %67 to i64, !dbg !4600
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4600
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 65, !dbg !4601
  %arrayidx83 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom82, !dbg !4600
  store i8 1, i8* %arrayidx83, align 1, !dbg !4602
  br label %for.inc84, !dbg !4603

for.inc84:                                        ; preds = %for.body79
  %69 = load i32, i32* %ch, align 4, !dbg !4604
  %inc85 = add nsw i32 %69, 1, !dbg !4604
  store i32 %inc85, i32* %ch, align 4, !dbg !4604
  br label %for.cond76, !dbg !4606, !llvm.loop !4607

for.end86:                                        ; preds = %for.cond76
  br label %if.end87, !dbg !4609

if.end87:                                         ; preds = %for.end86, %lor.lhs.false71
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4610
  %spx_in_use88 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 56, !dbg !4612
  %71 = load i32, i32* %spx_in_use88, align 32, !dbg !4612
  %tobool89 = icmp ne i32 %71, 0, !dbg !4610
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !4613

if.then90:                                        ; preds = %if.end87
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4614
  call void @spx_coordinates(%struct.AC3DecodeContext* %72), !dbg !4615
  br label %if.end91, !dbg !4615

if.end91:                                         ; preds = %if.then90, %if.end87
  %73 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4616
  %eac392 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %73, i32 0, i32 25, !dbg !4618
  %74 = load i32, i32* %eac392, align 4, !dbg !4618
  %tobool93 = icmp ne i32 %74, 0, !dbg !4616
  br i1 %tobool93, label %cond.true, label %cond.false, !dbg !4619

cond.true:                                        ; preds = %if.end91
  %75 = load i32, i32* %blk.addr, align 4, !dbg !4620
  %idxprom94 = sext i32 %75 to i64, !dbg !4622
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4622
  %cpl_strategy_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 46, !dbg !4623
  %arrayidx95 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists, i64 0, i64 %idxprom94, !dbg !4622
  %77 = load i32, i32* %arrayidx95, align 4, !dbg !4622
  %tobool96 = icmp ne i32 %77, 0, !dbg !4622
  br i1 %tobool96, label %if.then99, label %if.else105, !dbg !4624

cond.false:                                       ; preds = %if.end91
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4625
  %call97 = call i32 @get_bits1(%struct.GetBitContext* %78), !dbg !4627
  %tobool98 = icmp ne i32 %call97, 0, !dbg !4627
  br i1 %tobool98, label %if.then99, label %if.else105, !dbg !4628

if.then99:                                        ; preds = %cond.false, %cond.true
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4629
  %80 = load i32, i32* %blk.addr, align 4, !dbg !4632
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i32 0, i32 0, !dbg !4633
  %call100 = call i32 @coupling_strategy(%struct.AC3DecodeContext* %79, i32 %80, i8* %arraydecay), !dbg !4634
  store i32 %call100, i32* %ret, align 4, !dbg !4635
  %cmp101 = icmp slt i32 %call100, 0, !dbg !4636
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !4637

if.then103:                                       ; preds = %if.then99
  %81 = load i32, i32* %ret, align 4, !dbg !4638
  store i32 %81, i32* %retval, align 4, !dbg !4639
  br label %return, !dbg !4639

if.end104:                                        ; preds = %if.then99
  br label %if.end120, !dbg !4640

if.else105:                                       ; preds = %cond.false, %cond.true
  %82 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4641
  %eac3106 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %82, i32 0, i32 25, !dbg !4644
  %83 = load i32, i32* %eac3106, align 4, !dbg !4644
  %tobool107 = icmp ne i32 %83, 0, !dbg !4641
  br i1 %tobool107, label %if.end119, label %if.then108, !dbg !4645

if.then108:                                       ; preds = %if.else105
  %84 = load i32, i32* %blk.addr, align 4, !dbg !4646
  %tobool109 = icmp ne i32 %84, 0, !dbg !4646
  br i1 %tobool109, label %if.else111, label %if.then110, !dbg !4649

if.then110:                                       ; preds = %if.then108
  %85 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4650
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %85, i32 0, i32 1, !dbg !4652
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4652
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !4650
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.32, i32 0, i32 0)), !dbg !4653
  store i32 -1094995529, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

if.else111:                                       ; preds = %if.then108
  %88 = load i32, i32* %blk.addr, align 4, !dbg !4655
  %sub = sub nsw i32 %88, 1, !dbg !4657
  %idxprom112 = sext i32 %sub to i64, !dbg !4658
  %89 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4658
  %cpl_in_use113 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %89, i32 0, i32 45, !dbg !4659
  %arrayidx114 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use113, i64 0, i64 %idxprom112, !dbg !4658
  %90 = load i32, i32* %arrayidx114, align 4, !dbg !4658
  %91 = load i32, i32* %blk.addr, align 4, !dbg !4660
  %idxprom115 = sext i32 %91 to i64, !dbg !4661
  %92 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4661
  %cpl_in_use116 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %92, i32 0, i32 45, !dbg !4662
  %arrayidx117 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use116, i64 0, i64 %idxprom115, !dbg !4661
  store i32 %90, i32* %arrayidx117, align 4, !dbg !4663
  br label %if.end118

if.end118:                                        ; preds = %if.else111
  br label %if.end119, !dbg !4664

if.end119:                                        ; preds = %if.end118, %if.else105
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end104
  %93 = load i32, i32* %blk.addr, align 4, !dbg !4665
  %idxprom121 = sext i32 %93 to i64, !dbg !4666
  %94 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4666
  %cpl_in_use122 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %94, i32 0, i32 45, !dbg !4667
  %arrayidx123 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use122, i64 0, i64 %idxprom121, !dbg !4666
  %95 = load i32, i32* %arrayidx123, align 4, !dbg !4666
  store i32 %95, i32* %cpl_in_use, align 4, !dbg !4668
  %96 = load i32, i32* %cpl_in_use, align 4, !dbg !4669
  %tobool124 = icmp ne i32 %96, 0, !dbg !4669
  br i1 %tobool124, label %if.then125, label %if.end131, !dbg !4671

if.then125:                                       ; preds = %if.end120
  %97 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4672
  %98 = load i32, i32* %blk.addr, align 4, !dbg !4675
  %call126 = call i32 @coupling_coordinates(%struct.AC3DecodeContext* %97, i32 %98), !dbg !4676
  store i32 %call126, i32* %ret, align 4, !dbg !4677
  %cmp127 = icmp slt i32 %call126, 0, !dbg !4678
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !4679

if.then129:                                       ; preds = %if.then125
  %99 = load i32, i32* %ret, align 4, !dbg !4680
  store i32 %99, i32* %retval, align 4, !dbg !4681
  br label %return, !dbg !4681

if.end130:                                        ; preds = %if.then125
  br label %if.end131, !dbg !4682

if.end131:                                        ; preds = %if.end130, %if.end120
  %100 = load i32, i32* %channel_mode, align 4, !dbg !4683
  %cmp132 = icmp eq i32 %100, 2, !dbg !4685
  br i1 %cmp132, label %if.then134, label %if.end184, !dbg !4686

if.then134:                                       ; preds = %if.end131
  %101 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4687
  %eac3135 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %101, i32 0, i32 25, !dbg !4690
  %102 = load i32, i32* %eac3135, align 4, !dbg !4690
  %tobool136 = icmp ne i32 %102, 0, !dbg !4687
  br i1 %tobool136, label %land.lhs.true137, label %lor.lhs.false139, !dbg !4691

land.lhs.true137:                                 ; preds = %if.then134
  %103 = load i32, i32* %blk.addr, align 4, !dbg !4692
  %tobool138 = icmp ne i32 %103, 0, !dbg !4692
  br i1 %tobool138, label %lor.lhs.false139, label %if.then142, !dbg !4694

lor.lhs.false139:                                 ; preds = %land.lhs.true137, %if.then134
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4695
  %call140 = call i32 @get_bits1(%struct.GetBitContext* %104), !dbg !4697
  %tobool141 = icmp ne i32 %call140, 0, !dbg !4697
  br i1 %tobool141, label %if.then142, label %if.else177, !dbg !4698

if.then142:                                       ; preds = %lor.lhs.false139, %land.lhs.true137
  %105 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4699
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %105, i32 0, i32 86, !dbg !4701
  store i32 4, i32* %num_rematrixing_bands, align 8, !dbg !4702
  %106 = load i32, i32* %cpl_in_use, align 4, !dbg !4703
  %tobool143 = icmp ne i32 %106, 0, !dbg !4703
  br i1 %tobool143, label %land.lhs.true144, label %if.else155, !dbg !4705

land.lhs.true144:                                 ; preds = %if.then142
  %107 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4706
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %107, i32 0, i32 83, !dbg !4708
  %arrayidx145 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !4706
  %108 = load i32, i32* %arrayidx145, align 4, !dbg !4706
  %cmp146 = icmp sle i32 %108, 61, !dbg !4709
  br i1 %cmp146, label %if.then148, label %if.else155, !dbg !4710

if.then148:                                       ; preds = %land.lhs.true144
  %109 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4711
  %start_freq149 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %109, i32 0, i32 83, !dbg !4713
  %arrayidx150 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq149, i64 0, i64 0, !dbg !4711
  %110 = load i32, i32* %arrayidx150, align 4, !dbg !4711
  %cmp151 = icmp eq i32 %110, 37, !dbg !4714
  %conv152 = zext i1 %cmp151 to i32, !dbg !4714
  %add = add nsw i32 1, %conv152, !dbg !4715
  %111 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4716
  %num_rematrixing_bands153 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %111, i32 0, i32 86, !dbg !4717
  %112 = load i32, i32* %num_rematrixing_bands153, align 8, !dbg !4718
  %sub154 = sub nsw i32 %112, %add, !dbg !4718
  store i32 %sub154, i32* %num_rematrixing_bands153, align 8, !dbg !4718
  br label %if.end165, !dbg !4719

if.else155:                                       ; preds = %land.lhs.true144, %if.then142
  %113 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4720
  %spx_in_use156 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %113, i32 0, i32 56, !dbg !4723
  %114 = load i32, i32* %spx_in_use156, align 32, !dbg !4723
  %tobool157 = icmp ne i32 %114, 0, !dbg !4720
  br i1 %tobool157, label %land.lhs.true158, label %if.end164, !dbg !4724

land.lhs.true158:                                 ; preds = %if.else155
  %115 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4725
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %115, i32 0, i32 59, !dbg !4727
  %116 = load i32, i32* %spx_src_start_freq, align 4, !dbg !4727
  %cmp159 = icmp sle i32 %116, 61, !dbg !4728
  br i1 %cmp159, label %if.then161, label %if.end164, !dbg !4729

if.then161:                                       ; preds = %land.lhs.true158
  %117 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4730
  %num_rematrixing_bands162 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %117, i32 0, i32 86, !dbg !4732
  %118 = load i32, i32* %num_rematrixing_bands162, align 8, !dbg !4733
  %dec163 = add nsw i32 %118, -1, !dbg !4733
  store i32 %dec163, i32* %num_rematrixing_bands162, align 8, !dbg !4733
  br label %if.end164, !dbg !4734

if.end164:                                        ; preds = %if.then161, %land.lhs.true158, %if.else155
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then148
  store i32 0, i32* %bnd, align 4, !dbg !4735
  br label %for.cond166, !dbg !4737

for.cond166:                                      ; preds = %for.inc174, %if.end165
  %119 = load i32, i32* %bnd, align 4, !dbg !4738
  %120 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4741
  %num_rematrixing_bands167 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %120, i32 0, i32 86, !dbg !4742
  %121 = load i32, i32* %num_rematrixing_bands167, align 8, !dbg !4742
  %cmp168 = icmp slt i32 %119, %121, !dbg !4743
  br i1 %cmp168, label %for.body170, label %for.end176, !dbg !4744

for.body170:                                      ; preds = %for.cond166
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4745
  %call171 = call i32 @get_bits1(%struct.GetBitContext* %122), !dbg !4746
  %123 = load i32, i32* %bnd, align 4, !dbg !4747
  %idxprom172 = sext i32 %123 to i64, !dbg !4748
  %124 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4748
  %rematrixing_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %124, i32 0, i32 87, !dbg !4749
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %rematrixing_flags, i64 0, i64 %idxprom172, !dbg !4748
  store i32 %call171, i32* %arrayidx173, align 4, !dbg !4750
  br label %for.inc174, !dbg !4748

for.inc174:                                       ; preds = %for.body170
  %125 = load i32, i32* %bnd, align 4, !dbg !4751
  %inc175 = add nsw i32 %125, 1, !dbg !4751
  store i32 %inc175, i32* %bnd, align 4, !dbg !4751
  br label %for.cond166, !dbg !4753, !llvm.loop !4754

for.end176:                                       ; preds = %for.cond166
  br label %if.end183, !dbg !4756

if.else177:                                       ; preds = %lor.lhs.false139
  %126 = load i32, i32* %blk.addr, align 4, !dbg !4757
  %tobool178 = icmp ne i32 %126, 0, !dbg !4757
  br i1 %tobool178, label %if.end182, label %if.then179, !dbg !4760

if.then179:                                       ; preds = %if.else177
  %127 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4761
  %avctx180 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %127, i32 0, i32 1, !dbg !4763
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx180, align 8, !dbg !4763
  %129 = bitcast %struct.AVCodecContext* %128 to i8*, !dbg !4761
  call void (i8*, i32, i8*, ...) @av_log(i8* %129, i32 24, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i32 0, i32 0)), !dbg !4764
  %130 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4765
  %num_rematrixing_bands181 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %130, i32 0, i32 86, !dbg !4766
  store i32 0, i32* %num_rematrixing_bands181, align 8, !dbg !4767
  br label %if.end182, !dbg !4768

if.end182:                                        ; preds = %if.then179, %if.else177
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %for.end176
  br label %if.end184, !dbg !4769

if.end184:                                        ; preds = %if.end183, %if.end131
  %131 = load i32, i32* %cpl_in_use, align 4, !dbg !4770
  %tobool185 = icmp ne i32 %131, 0, !dbg !4772
  %lnot186 = xor i1 %tobool185, true, !dbg !4772
  %lnot.ext187 = zext i1 %lnot186 to i32, !dbg !4772
  store i32 %lnot.ext187, i32* %ch, align 4, !dbg !4773
  br label %for.cond188, !dbg !4774

for.cond188:                                      ; preds = %for.inc215, %if.end184
  %132 = load i32, i32* %ch, align 4, !dbg !4775
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4778
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 71, !dbg !4779
  %134 = load i32, i32* %channels, align 8, !dbg !4779
  %cmp189 = icmp sle i32 %132, %134, !dbg !4780
  br i1 %cmp189, label %for.body191, label %for.end217, !dbg !4781

for.body191:                                      ; preds = %for.cond188
  %135 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4782
  %eac3192 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %135, i32 0, i32 25, !dbg !4785
  %136 = load i32, i32* %eac3192, align 4, !dbg !4785
  %tobool193 = icmp ne i32 %136, 0, !dbg !4782
  br i1 %tobool193, label %if.end203, label %if.then194, !dbg !4786

if.then194:                                       ; preds = %for.body191
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4787
  %138 = load i32, i32* %ch, align 4, !dbg !4788
  %139 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4789
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %139, i32 0, i32 72, !dbg !4790
  %140 = load i32, i32* %lfe_ch, align 4, !dbg !4790
  %cmp195 = icmp eq i32 %138, %140, !dbg !4791
  %conv196 = zext i1 %cmp195 to i32, !dbg !4791
  %sub197 = sub nsw i32 2, %conv196, !dbg !4792
  %call198 = call i32 @get_bits(%struct.GetBitContext* %137, i32 %sub197), !dbg !4793
  %141 = load i32, i32* %ch, align 4, !dbg !4794
  %idxprom199 = sext i32 %141 to i64, !dbg !4795
  %142 = load i32, i32* %blk.addr, align 4, !dbg !4796
  %idxprom200 = sext i32 %142 to i64, !dbg !4795
  %143 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4795
  %exp_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %143, i32 0, i32 90, !dbg !4797
  %arrayidx201 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy, i64 0, i64 %idxprom200, !dbg !4795
  %arrayidx202 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx201, i64 0, i64 %idxprom199, !dbg !4795
  store i32 %call198, i32* %arrayidx202, align 4, !dbg !4798
  br label %if.end203, !dbg !4795

if.end203:                                        ; preds = %if.then194, %for.body191
  %144 = load i32, i32* %ch, align 4, !dbg !4799
  %idxprom204 = sext i32 %144 to i64, !dbg !4801
  %145 = load i32, i32* %blk.addr, align 4, !dbg !4802
  %idxprom205 = sext i32 %145 to i64, !dbg !4801
  %146 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4801
  %exp_strategy206 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %146, i32 0, i32 90, !dbg !4803
  %arrayidx207 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy206, i64 0, i64 %idxprom205, !dbg !4801
  %arrayidx208 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx207, i64 0, i64 %idxprom204, !dbg !4801
  %147 = load i32, i32* %arrayidx208, align 4, !dbg !4801
  %cmp209 = icmp ne i32 %147, 0, !dbg !4804
  br i1 %cmp209, label %if.then211, label %if.end214, !dbg !4805

if.then211:                                       ; preds = %if.end203
  %148 = load i32, i32* %ch, align 4, !dbg !4806
  %idxprom212 = sext i32 %148 to i64, !dbg !4807
  %arrayidx213 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom212, !dbg !4807
  store i8 3, i8* %arrayidx213, align 1, !dbg !4808
  br label %if.end214, !dbg !4807

if.end214:                                        ; preds = %if.then211, %if.end203
  br label %for.inc215, !dbg !4809

for.inc215:                                       ; preds = %if.end214
  %149 = load i32, i32* %ch, align 4, !dbg !4810
  %inc216 = add nsw i32 %149, 1, !dbg !4810
  store i32 %inc216, i32* %ch, align 4, !dbg !4810
  br label %for.cond188, !dbg !4812, !llvm.loop !4813

for.end217:                                       ; preds = %for.cond188
  store i32 1, i32* %ch, align 4, !dbg !4815
  br label %for.cond218, !dbg !4817

for.cond218:                                      ; preds = %for.inc293, %for.end217
  %150 = load i32, i32* %ch, align 4, !dbg !4818
  %151 = load i32, i32* %fbw_channels, align 4, !dbg !4821
  %cmp219 = icmp sle i32 %150, %151, !dbg !4822
  br i1 %cmp219, label %for.body221, label %for.end295, !dbg !4823

for.body221:                                      ; preds = %for.cond218
  %152 = load i32, i32* %ch, align 4, !dbg !4824
  %idxprom222 = sext i32 %152 to i64, !dbg !4826
  %153 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4826
  %start_freq223 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %153, i32 0, i32 83, !dbg !4827
  %arrayidx224 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq223, i64 0, i64 %idxprom222, !dbg !4826
  store i32 0, i32* %arrayidx224, align 4, !dbg !4828
  %154 = load i32, i32* %ch, align 4, !dbg !4829
  %idxprom225 = sext i32 %154 to i64, !dbg !4831
  %155 = load i32, i32* %blk.addr, align 4, !dbg !4832
  %idxprom226 = sext i32 %155 to i64, !dbg !4831
  %156 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4831
  %exp_strategy227 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %156, i32 0, i32 90, !dbg !4833
  %arrayidx228 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy227, i64 0, i64 %idxprom226, !dbg !4831
  %arrayidx229 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx228, i64 0, i64 %idxprom225, !dbg !4831
  %157 = load i32, i32* %arrayidx229, align 4, !dbg !4831
  %cmp230 = icmp ne i32 %157, 0, !dbg !4834
  br i1 %cmp230, label %if.then232, label %if.end292, !dbg !4835

if.then232:                                       ; preds = %for.body221
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !4836, metadata !1849), !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !4839, metadata !1849), !dbg !4840
  %158 = load i32, i32* %ch, align 4, !dbg !4841
  %idxprom233 = sext i32 %158 to i64, !dbg !4842
  %159 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4842
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %159, i32 0, i32 84, !dbg !4843
  %arrayidx234 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom233, !dbg !4842
  %160 = load i32, i32* %arrayidx234, align 4, !dbg !4842
  store i32 %160, i32* %prev, align 4, !dbg !4840
  %161 = load i32, i32* %ch, align 4, !dbg !4844
  %idxprom235 = sext i32 %161 to i64, !dbg !4846
  %162 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4846
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %162, i32 0, i32 47, !dbg !4847
  %arrayidx236 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom235, !dbg !4846
  %163 = load i32, i32* %arrayidx236, align 4, !dbg !4846
  %tobool237 = icmp ne i32 %163, 0, !dbg !4846
  br i1 %tobool237, label %if.then238, label %if.else244, !dbg !4848

if.then238:                                       ; preds = %if.then232
  %164 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4849
  %start_freq239 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %164, i32 0, i32 83, !dbg !4850
  %arrayidx240 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq239, i64 0, i64 0, !dbg !4849
  %165 = load i32, i32* %arrayidx240, align 4, !dbg !4849
  %166 = load i32, i32* %ch, align 4, !dbg !4851
  %idxprom241 = sext i32 %166 to i64, !dbg !4852
  %167 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4852
  %end_freq242 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %167, i32 0, i32 84, !dbg !4853
  %arrayidx243 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq242, i64 0, i64 %idxprom241, !dbg !4852
  store i32 %165, i32* %arrayidx243, align 4, !dbg !4854
  br label %if.end266, !dbg !4852

if.else244:                                       ; preds = %if.then232
  %168 = load i32, i32* %ch, align 4, !dbg !4855
  %idxprom245 = sext i32 %168 to i64, !dbg !4857
  %169 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4857
  %channel_uses_spx246 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %169, i32 0, i32 57, !dbg !4858
  %arrayidx247 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx246, i64 0, i64 %idxprom245, !dbg !4857
  %170 = load i8, i8* %arrayidx247, align 1, !dbg !4857
  %tobool248 = icmp ne i8 %170, 0, !dbg !4857
  br i1 %tobool248, label %if.then249, label %if.else254, !dbg !4859

if.then249:                                       ; preds = %if.else244
  %171 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4860
  %spx_src_start_freq250 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %171, i32 0, i32 59, !dbg !4861
  %172 = load i32, i32* %spx_src_start_freq250, align 4, !dbg !4861
  %173 = load i32, i32* %ch, align 4, !dbg !4862
  %idxprom251 = sext i32 %173 to i64, !dbg !4863
  %174 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4863
  %end_freq252 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %174, i32 0, i32 84, !dbg !4864
  %arrayidx253 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq252, i64 0, i64 %idxprom251, !dbg !4863
  store i32 %172, i32* %arrayidx253, align 4, !dbg !4865
  br label %if.end265, !dbg !4863

if.else254:                                       ; preds = %if.else244
  call void @llvm.dbg.declare(metadata i32* %bandwidth_code, metadata !4866, metadata !1849), !dbg !4868
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4869
  %call255 = call i32 @get_bits(%struct.GetBitContext* %175, i32 6), !dbg !4870
  store i32 %call255, i32* %bandwidth_code, align 4, !dbg !4868
  %176 = load i32, i32* %bandwidth_code, align 4, !dbg !4871
  %cmp256 = icmp sgt i32 %176, 60, !dbg !4873
  br i1 %cmp256, label %if.then258, label %if.end260, !dbg !4874

if.then258:                                       ; preds = %if.else254
  %177 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4875
  %avctx259 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %177, i32 0, i32 1, !dbg !4877
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx259, align 8, !dbg !4877
  %179 = bitcast %struct.AVCodecContext* %178 to i8*, !dbg !4875
  %180 = load i32, i32* %bandwidth_code, align 4, !dbg !4878
  call void (i8*, i32, i8*, ...) @av_log(i8* %179, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0), i32 %180), !dbg !4879
  store i32 -1094995529, i32* %retval, align 4, !dbg !4880
  br label %return, !dbg !4880

if.end260:                                        ; preds = %if.else254
  %181 = load i32, i32* %bandwidth_code, align 4, !dbg !4881
  %mul = mul nsw i32 %181, 3, !dbg !4882
  %add261 = add nsw i32 %mul, 73, !dbg !4883
  %182 = load i32, i32* %ch, align 4, !dbg !4884
  %idxprom262 = sext i32 %182 to i64, !dbg !4885
  %183 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4885
  %end_freq263 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %183, i32 0, i32 84, !dbg !4886
  %arrayidx264 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq263, i64 0, i64 %idxprom262, !dbg !4885
  store i32 %add261, i32* %arrayidx264, align 4, !dbg !4887
  br label %if.end265

if.end265:                                        ; preds = %if.end260, %if.then249
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then238
  %184 = load i32, i32* %ch, align 4, !dbg !4888
  %idxprom267 = sext i32 %184 to i64, !dbg !4889
  %185 = load i32, i32* %blk.addr, align 4, !dbg !4890
  %idxprom268 = sext i32 %185 to i64, !dbg !4889
  %186 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4889
  %exp_strategy269 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %186, i32 0, i32 90, !dbg !4891
  %arrayidx270 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy269, i64 0, i64 %idxprom268, !dbg !4889
  %arrayidx271 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx270, i64 0, i64 %idxprom267, !dbg !4889
  %187 = load i32, i32* %arrayidx271, align 4, !dbg !4889
  %sub272 = sub nsw i32 %187, 1, !dbg !4892
  %shl273 = shl i32 3, %sub272, !dbg !4893
  store i32 %shl273, i32* %group_size, align 4, !dbg !4894
  %188 = load i32, i32* %ch, align 4, !dbg !4895
  %idxprom274 = sext i32 %188 to i64, !dbg !4896
  %189 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4896
  %end_freq275 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %189, i32 0, i32 84, !dbg !4897
  %arrayidx276 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq275, i64 0, i64 %idxprom274, !dbg !4896
  %190 = load i32, i32* %arrayidx276, align 4, !dbg !4896
  %191 = load i32, i32* %group_size, align 4, !dbg !4898
  %add277 = add nsw i32 %190, %191, !dbg !4899
  %sub278 = sub nsw i32 %add277, 4, !dbg !4900
  %192 = load i32, i32* %group_size, align 4, !dbg !4901
  %div = sdiv i32 %sub278, %192, !dbg !4902
  %193 = load i32, i32* %ch, align 4, !dbg !4903
  %idxprom279 = sext i32 %193 to i64, !dbg !4904
  %194 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4904
  %num_exp_groups = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %194, i32 0, i32 88, !dbg !4905
  %arrayidx280 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups, i64 0, i64 %idxprom279, !dbg !4904
  store i32 %div, i32* %arrayidx280, align 4, !dbg !4906
  %195 = load i32, i32* %blk.addr, align 4, !dbg !4907
  %cmp281 = icmp sgt i32 %195, 0, !dbg !4909
  br i1 %cmp281, label %land.lhs.true283, label %if.end291, !dbg !4910

land.lhs.true283:                                 ; preds = %if.end266
  %196 = load i32, i32* %ch, align 4, !dbg !4911
  %idxprom284 = sext i32 %196 to i64, !dbg !4913
  %197 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4913
  %end_freq285 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %197, i32 0, i32 84, !dbg !4914
  %arrayidx286 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq285, i64 0, i64 %idxprom284, !dbg !4913
  %198 = load i32, i32* %arrayidx286, align 4, !dbg !4913
  %199 = load i32, i32* %prev, align 4, !dbg !4915
  %cmp287 = icmp ne i32 %198, %199, !dbg !4916
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !4917

if.then289:                                       ; preds = %land.lhs.true283
  %arraydecay290 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i32 0, i32 0, !dbg !4918
  call void @llvm.memset.p0i8.i64(i8* %arraydecay290, i8 3, i64 7, i32 1, i1 false), !dbg !4918
  br label %if.end291, !dbg !4918

if.end291:                                        ; preds = %if.then289, %land.lhs.true283, %if.end266
  br label %if.end292, !dbg !4919

if.end292:                                        ; preds = %if.end291, %for.body221
  br label %for.inc293, !dbg !4920

for.inc293:                                       ; preds = %if.end292
  %200 = load i32, i32* %ch, align 4, !dbg !4921
  %inc294 = add nsw i32 %200, 1, !dbg !4921
  store i32 %inc294, i32* %ch, align 4, !dbg !4921
  br label %for.cond218, !dbg !4923, !llvm.loop !4924

for.end295:                                       ; preds = %for.cond218
  %201 = load i32, i32* %cpl_in_use, align 4, !dbg !4926
  %tobool296 = icmp ne i32 %201, 0, !dbg !4926
  br i1 %tobool296, label %land.lhs.true297, label %if.end319, !dbg !4928

land.lhs.true297:                                 ; preds = %for.end295
  %202 = load i32, i32* %blk.addr, align 4, !dbg !4929
  %idxprom298 = sext i32 %202 to i64, !dbg !4931
  %203 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4931
  %exp_strategy299 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %203, i32 0, i32 90, !dbg !4932
  %arrayidx300 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy299, i64 0, i64 %idxprom298, !dbg !4931
  %arrayidx301 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx300, i64 0, i64 0, !dbg !4931
  %204 = load i32, i32* %arrayidx301, align 4, !dbg !4931
  %cmp302 = icmp ne i32 %204, 0, !dbg !4933
  br i1 %cmp302, label %if.then304, label %if.end319, !dbg !4934

if.then304:                                       ; preds = %land.lhs.true297
  %205 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4935
  %end_freq305 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %205, i32 0, i32 84, !dbg !4937
  %arrayidx306 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq305, i64 0, i64 0, !dbg !4935
  %206 = load i32, i32* %arrayidx306, align 8, !dbg !4935
  %207 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4938
  %start_freq307 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %207, i32 0, i32 83, !dbg !4939
  %arrayidx308 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq307, i64 0, i64 0, !dbg !4938
  %208 = load i32, i32* %arrayidx308, align 4, !dbg !4938
  %sub309 = sub nsw i32 %206, %208, !dbg !4940
  %209 = load i32, i32* %blk.addr, align 4, !dbg !4941
  %idxprom310 = sext i32 %209 to i64, !dbg !4942
  %210 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4942
  %exp_strategy311 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %210, i32 0, i32 90, !dbg !4943
  %arrayidx312 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy311, i64 0, i64 %idxprom310, !dbg !4942
  %arrayidx313 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx312, i64 0, i64 0, !dbg !4942
  %211 = load i32, i32* %arrayidx313, align 4, !dbg !4942
  %sub314 = sub nsw i32 %211, 1, !dbg !4944
  %shl315 = shl i32 3, %sub314, !dbg !4945
  %div316 = sdiv i32 %sub309, %shl315, !dbg !4946
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4947
  %num_exp_groups317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 88, !dbg !4948
  %arrayidx318 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups317, i64 0, i64 0, !dbg !4947
  store i32 %div316, i32* %arrayidx318, align 4, !dbg !4949
  br label %if.end319, !dbg !4950

if.end319:                                        ; preds = %if.then304, %land.lhs.true297, %for.end295
  %213 = load i32, i32* %cpl_in_use, align 4, !dbg !4951
  %tobool320 = icmp ne i32 %213, 0, !dbg !4953
  %lnot321 = xor i1 %tobool320, true, !dbg !4953
  %lnot.ext322 = zext i1 %lnot321 to i32, !dbg !4953
  store i32 %lnot.ext322, i32* %ch, align 4, !dbg !4954
  br label %for.cond323, !dbg !4955

for.cond323:                                      ; preds = %for.inc384, %if.end319
  %214 = load i32, i32* %ch, align 4, !dbg !4956
  %215 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4959
  %channels324 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %215, i32 0, i32 71, !dbg !4960
  %216 = load i32, i32* %channels324, align 8, !dbg !4960
  %cmp325 = icmp sle i32 %214, %216, !dbg !4961
  br i1 %cmp325, label %for.body327, label %for.end386, !dbg !4962

for.body327:                                      ; preds = %for.cond323
  %217 = load i32, i32* %ch, align 4, !dbg !4963
  %idxprom328 = sext i32 %217 to i64, !dbg !4966
  %218 = load i32, i32* %blk.addr, align 4, !dbg !4967
  %idxprom329 = sext i32 %218 to i64, !dbg !4966
  %219 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4966
  %exp_strategy330 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %219, i32 0, i32 90, !dbg !4968
  %arrayidx331 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy330, i64 0, i64 %idxprom329, !dbg !4966
  %arrayidx332 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx331, i64 0, i64 %idxprom328, !dbg !4966
  %220 = load i32, i32* %arrayidx332, align 4, !dbg !4966
  %cmp333 = icmp ne i32 %220, 0, !dbg !4969
  br i1 %cmp333, label %if.then335, label %if.end383, !dbg !4970

if.then335:                                       ; preds = %for.body327
  %221 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4971
  %call336 = call i32 @get_bits(%struct.GetBitContext* %221, i32 4), !dbg !4973
  %222 = load i32, i32* %ch, align 4, !dbg !4974
  %tobool337 = icmp ne i32 %222, 0, !dbg !4975
  %lnot338 = xor i1 %tobool337, true, !dbg !4975
  %lnot.ext339 = zext i1 %lnot338 to i32, !dbg !4975
  %shl340 = shl i32 %call336, %lnot.ext339, !dbg !4976
  %conv341 = trunc i32 %shl340 to i8, !dbg !4973
  %223 = load i32, i32* %ch, align 4, !dbg !4977
  %idxprom342 = sext i32 %223 to i64, !dbg !4978
  %224 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4978
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %224, i32 0, i32 89, !dbg !4979
  %arrayidx343 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom342, !dbg !4978
  %arrayidx344 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx343, i64 0, i64 0, !dbg !4978
  store i8 %conv341, i8* %arrayidx344, align 8, !dbg !4980
  %225 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4981
  %226 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4983
  %227 = load i32, i32* %ch, align 4, !dbg !4984
  %idxprom345 = sext i32 %227 to i64, !dbg !4985
  %228 = load i32, i32* %blk.addr, align 4, !dbg !4986
  %idxprom346 = sext i32 %228 to i64, !dbg !4985
  %229 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4985
  %exp_strategy347 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %229, i32 0, i32 90, !dbg !4987
  %arrayidx348 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy347, i64 0, i64 %idxprom346, !dbg !4985
  %arrayidx349 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx348, i64 0, i64 %idxprom345, !dbg !4985
  %230 = load i32, i32* %arrayidx349, align 4, !dbg !4985
  %231 = load i32, i32* %ch, align 4, !dbg !4988
  %idxprom350 = sext i32 %231 to i64, !dbg !4989
  %232 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4989
  %num_exp_groups351 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %232, i32 0, i32 88, !dbg !4990
  %arrayidx352 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups351, i64 0, i64 %idxprom350, !dbg !4989
  %233 = load i32, i32* %arrayidx352, align 4, !dbg !4989
  %234 = load i32, i32* %ch, align 4, !dbg !4991
  %idxprom353 = sext i32 %234 to i64, !dbg !4992
  %235 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4992
  %dexps354 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %235, i32 0, i32 89, !dbg !4993
  %arrayidx355 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps354, i64 0, i64 %idxprom353, !dbg !4992
  %arrayidx356 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx355, i64 0, i64 0, !dbg !4992
  %236 = load i8, i8* %arrayidx356, align 8, !dbg !4992
  %237 = load i32, i32* %ch, align 4, !dbg !4994
  %idxprom357 = sext i32 %237 to i64, !dbg !4995
  %238 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4995
  %start_freq358 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %238, i32 0, i32 83, !dbg !4996
  %arrayidx359 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq358, i64 0, i64 %idxprom357, !dbg !4995
  %239 = load i32, i32* %arrayidx359, align 4, !dbg !4995
  %240 = load i32, i32* %ch, align 4, !dbg !4997
  %tobool360 = icmp ne i32 %240, 0, !dbg !4998
  %lnot361 = xor i1 %tobool360, true, !dbg !4998
  %lnot363 = xor i1 %lnot361, true, !dbg !4999
  %lnot.ext364 = zext i1 %lnot363 to i32, !dbg !4999
  %add365 = add nsw i32 %239, %lnot.ext364, !dbg !5000
  %idxprom366 = sext i32 %add365 to i64, !dbg !5001
  %241 = load i32, i32* %ch, align 4, !dbg !5002
  %idxprom367 = sext i32 %241 to i64, !dbg !5001
  %242 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5001
  %dexps368 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %242, i32 0, i32 89, !dbg !5003
  %arrayidx369 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps368, i64 0, i64 %idxprom367, !dbg !5001
  %arrayidx370 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx369, i64 0, i64 %idxprom366, !dbg !5001
  %call371 = call i32 @decode_exponents(%struct.AC3DecodeContext* %225, %struct.GetBitContext* %226, i32 %230, i32 %233, i8 zeroext %236, i8* %arrayidx370), !dbg !5004
  %tobool372 = icmp ne i32 %call371, 0, !dbg !5004
  br i1 %tobool372, label %if.then373, label %if.end374, !dbg !5005

if.then373:                                       ; preds = %if.then335
  store i32 -1094995529, i32* %retval, align 4, !dbg !5006
  br label %return, !dbg !5006

if.end374:                                        ; preds = %if.then335
  %243 = load i32, i32* %ch, align 4, !dbg !5008
  %cmp375 = icmp ne i32 %243, 0, !dbg !5010
  br i1 %cmp375, label %land.lhs.true377, label %if.end382, !dbg !5011

land.lhs.true377:                                 ; preds = %if.end374
  %244 = load i32, i32* %ch, align 4, !dbg !5012
  %245 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5014
  %lfe_ch378 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %245, i32 0, i32 72, !dbg !5015
  %246 = load i32, i32* %lfe_ch378, align 4, !dbg !5015
  %cmp379 = icmp ne i32 %244, %246, !dbg !5016
  br i1 %cmp379, label %if.then381, label %if.end382, !dbg !5017

if.then381:                                       ; preds = %land.lhs.true377
  %247 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5018
  call void @skip_bits(%struct.GetBitContext* %247, i32 2), !dbg !5019
  br label %if.end382, !dbg !5019

if.end382:                                        ; preds = %if.then381, %land.lhs.true377, %if.end374
  br label %if.end383, !dbg !5020

if.end383:                                        ; preds = %if.end382, %for.body327
  br label %for.inc384, !dbg !5021

for.inc384:                                       ; preds = %if.end383
  %248 = load i32, i32* %ch, align 4, !dbg !5022
  %inc385 = add nsw i32 %248, 1, !dbg !5022
  store i32 %inc385, i32* %ch, align 4, !dbg !5022
  br label %for.cond323, !dbg !5024, !llvm.loop !5025

for.end386:                                       ; preds = %for.cond323
  %249 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5027
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %249, i32 0, i32 41, !dbg !5029
  %250 = load i32, i32* %bit_allocation_syntax, align 8, !dbg !5029
  %tobool387 = icmp ne i32 %250, 0, !dbg !5027
  br i1 %tobool387, label %if.then388, label %if.end450, !dbg !5030

if.then388:                                       ; preds = %for.end386
  %251 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5031
  %call389 = call i32 @get_bits1(%struct.GetBitContext* %251), !dbg !5034
  %tobool390 = icmp ne i32 %call389, 0, !dbg !5034
  br i1 %tobool390, label %if.then391, label %if.else444, !dbg !5035

if.then391:                                       ; preds = %if.then388
  %252 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5036
  %call392 = call i32 @get_bits(%struct.GetBitContext* %252, i32 2), !dbg !5038
  %idxprom393 = zext i32 %call392 to i64, !dbg !5039
  %arrayidx394 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_slow_decay_tab, i64 0, i64 %idxprom393, !dbg !5039
  %253 = load i8, i8* %arrayidx394, align 1, !dbg !5039
  %conv395 = zext i8 %253 to i32, !dbg !5039
  %254 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5040
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %254, i32 0, i32 91, !dbg !5041
  %sr_shift = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 1, !dbg !5042
  %255 = load i32, i32* %sr_shift, align 4, !dbg !5042
  %shr = ashr i32 %conv395, %255, !dbg !5043
  %256 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5044
  %bit_alloc_params396 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %256, i32 0, i32 91, !dbg !5045
  %slow_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params396, i32 0, i32 3, !dbg !5046
  store i32 %shr, i32* %slow_decay, align 4, !dbg !5047
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5048
  %call397 = call i32 @get_bits(%struct.GetBitContext* %257, i32 2), !dbg !5049
  %idxprom398 = zext i32 %call397 to i64, !dbg !5050
  %arrayidx399 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_fast_decay_tab, i64 0, i64 %idxprom398, !dbg !5050
  %258 = load i8, i8* %arrayidx399, align 1, !dbg !5050
  %conv400 = zext i8 %258 to i32, !dbg !5050
  %259 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5051
  %bit_alloc_params401 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %259, i32 0, i32 91, !dbg !5052
  %sr_shift402 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params401, i32 0, i32 1, !dbg !5053
  %260 = load i32, i32* %sr_shift402, align 4, !dbg !5053
  %shr403 = ashr i32 %conv400, %260, !dbg !5054
  %261 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5055
  %bit_alloc_params404 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %261, i32 0, i32 91, !dbg !5056
  %fast_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params404, i32 0, i32 4, !dbg !5057
  store i32 %shr403, i32* %fast_decay, align 16, !dbg !5058
  %262 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5059
  %call405 = call i32 @get_bits(%struct.GetBitContext* %262, i32 2), !dbg !5060
  %idxprom406 = zext i32 %call405 to i64, !dbg !5061
  %arrayidx407 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_slow_gain_tab, i64 0, i64 %idxprom406, !dbg !5061
  %263 = load i16, i16* %arrayidx407, align 2, !dbg !5061
  %conv408 = zext i16 %263 to i32, !dbg !5061
  %264 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5062
  %bit_alloc_params409 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %264, i32 0, i32 91, !dbg !5063
  %slow_gain = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params409, i32 0, i32 2, !dbg !5064
  store i32 %conv408, i32* %slow_gain, align 8, !dbg !5065
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5066
  %call410 = call i32 @get_bits(%struct.GetBitContext* %265, i32 2), !dbg !5067
  %idxprom411 = zext i32 %call410 to i64, !dbg !5068
  %arrayidx412 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_db_per_bit_tab, i64 0, i64 %idxprom411, !dbg !5068
  %266 = load i16, i16* %arrayidx412, align 2, !dbg !5068
  %conv413 = zext i16 %266 to i32, !dbg !5068
  %267 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5069
  %bit_alloc_params414 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %267, i32 0, i32 91, !dbg !5070
  %db_per_bit = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params414, i32 0, i32 5, !dbg !5071
  store i32 %conv413, i32* %db_per_bit, align 4, !dbg !5072
  %268 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5073
  %call415 = call i32 @get_bits(%struct.GetBitContext* %268, i32 3), !dbg !5074
  %idxprom416 = zext i32 %call415 to i64, !dbg !5075
  %arrayidx417 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_floor_tab, i64 0, i64 %idxprom416, !dbg !5075
  %269 = load i16, i16* %arrayidx417, align 2, !dbg !5075
  %conv418 = sext i16 %269 to i32, !dbg !5075
  %270 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5076
  %bit_alloc_params419 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %270, i32 0, i32 91, !dbg !5077
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params419, i32 0, i32 6, !dbg !5078
  store i32 %conv418, i32* %floor, align 8, !dbg !5079
  %271 = load i32, i32* %cpl_in_use, align 4, !dbg !5080
  %tobool420 = icmp ne i32 %271, 0, !dbg !5082
  %lnot421 = xor i1 %tobool420, true, !dbg !5082
  %lnot.ext422 = zext i1 %lnot421 to i32, !dbg !5082
  store i32 %lnot.ext422, i32* %ch, align 4, !dbg !5083
  br label %for.cond423, !dbg !5084

for.cond423:                                      ; preds = %for.inc441, %if.then391
  %272 = load i32, i32* %ch, align 4, !dbg !5085
  %273 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5088
  %channels424 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %273, i32 0, i32 71, !dbg !5089
  %274 = load i32, i32* %channels424, align 8, !dbg !5089
  %cmp425 = icmp sle i32 %272, %274, !dbg !5090
  br i1 %cmp425, label %for.body427, label %for.end443, !dbg !5091

for.body427:                                      ; preds = %for.cond423
  %275 = load i32, i32* %ch, align 4, !dbg !5092
  %idxprom428 = sext i32 %275 to i64, !dbg !5093
  %arrayidx429 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom428, !dbg !5093
  %276 = load i8, i8* %arrayidx429, align 1, !dbg !5093
  %conv430 = zext i8 %276 to i32, !dbg !5094
  %cmp431 = icmp sgt i32 %conv430, 2, !dbg !5095
  br i1 %cmp431, label %cond.true433, label %cond.false437, !dbg !5094

cond.true433:                                     ; preds = %for.body427
  %277 = load i32, i32* %ch, align 4, !dbg !5096
  %idxprom434 = sext i32 %277 to i64, !dbg !5097
  %arrayidx435 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom434, !dbg !5097
  %278 = load i8, i8* %arrayidx435, align 1, !dbg !5097
  %conv436 = zext i8 %278 to i32, !dbg !5098
  br label %cond.end, !dbg !5099

cond.false437:                                    ; preds = %for.body427
  br label %cond.end, !dbg !5100

cond.end:                                         ; preds = %cond.false437, %cond.true433
  %cond = phi i32 [ %conv436, %cond.true433 ], [ 2, %cond.false437 ], !dbg !5102
  %conv438 = trunc i32 %cond to i8, !dbg !5104
  %279 = load i32, i32* %ch, align 4, !dbg !5105
  %idxprom439 = sext i32 %279 to i64, !dbg !5106
  %arrayidx440 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom439, !dbg !5106
  store i8 %conv438, i8* %arrayidx440, align 1, !dbg !5107
  br label %for.inc441, !dbg !5106

for.inc441:                                       ; preds = %cond.end
  %280 = load i32, i32* %ch, align 4, !dbg !5108
  %inc442 = add nsw i32 %280, 1, !dbg !5108
  store i32 %inc442, i32* %ch, align 4, !dbg !5108
  br label %for.cond423, !dbg !5109, !llvm.loop !5110

for.end443:                                       ; preds = %for.cond423
  br label %if.end449, !dbg !5112

if.else444:                                       ; preds = %if.then388
  %281 = load i32, i32* %blk.addr, align 4, !dbg !5113
  %tobool445 = icmp ne i32 %281, 0, !dbg !5113
  br i1 %tobool445, label %if.end448, label %if.then446, !dbg !5116

if.then446:                                       ; preds = %if.else444
  %282 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5117
  %avctx447 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %282, i32 0, i32 1, !dbg !5119
  %283 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx447, align 8, !dbg !5119
  %284 = bitcast %struct.AVCodecContext* %283 to i8*, !dbg !5117
  call void (i8*, i32, i8*, ...) @av_log(i8* %284, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i32 0, i32 0)), !dbg !5120
  store i32 -1094995529, i32* %retval, align 4, !dbg !5121
  br label %return, !dbg !5121

if.end448:                                        ; preds = %if.else444
  br label %if.end449

if.end449:                                        ; preds = %if.end448, %for.end443
  br label %if.end450, !dbg !5122

if.end450:                                        ; preds = %if.end449, %for.end386
  %285 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5123
  %eac3451 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %285, i32 0, i32 25, !dbg !5125
  %286 = load i32, i32* %eac3451, align 4, !dbg !5125
  %tobool452 = icmp ne i32 %286, 0, !dbg !5123
  br i1 %tobool452, label %lor.lhs.false453, label %if.then455, !dbg !5126

lor.lhs.false453:                                 ; preds = %if.end450
  %287 = load i32, i32* %blk.addr, align 4, !dbg !5127
  %tobool454 = icmp ne i32 %287, 0, !dbg !5127
  br i1 %tobool454, label %if.end559, label %if.then455, !dbg !5129

if.then455:                                       ; preds = %lor.lhs.false453, %if.end450
  %288 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5130
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %288, i32 0, i32 38, !dbg !5133
  %289 = load i32, i32* %snr_offset_strategy, align 4, !dbg !5133
  %tobool456 = icmp ne i32 %289, 0, !dbg !5130
  br i1 %tobool456, label %land.lhs.true457, label %if.else550, !dbg !5134

land.lhs.true457:                                 ; preds = %if.then455
  %290 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5135
  %call458 = call i32 @get_bits1(%struct.GetBitContext* %290), !dbg !5137
  %tobool459 = icmp ne i32 %call458, 0, !dbg !5137
  br i1 %tobool459, label %if.then460, label %if.else550, !dbg !5138

if.then460:                                       ; preds = %land.lhs.true457
  call void @llvm.dbg.declare(metadata i32* %snr, metadata !5139, metadata !1849), !dbg !5141
  store i32 0, i32* %snr, align 4, !dbg !5141
  call void @llvm.dbg.declare(metadata i32* %csnr, metadata !5142, metadata !1849), !dbg !5143
  %291 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5144
  %call461 = call i32 @get_bits(%struct.GetBitContext* %291, i32 6), !dbg !5145
  %sub462 = sub i32 %call461, 15, !dbg !5146
  %shl463 = shl i32 %sub462, 4, !dbg !5147
  store i32 %shl463, i32* %csnr, align 4, !dbg !5148
  %292 = load i32, i32* %cpl_in_use, align 4, !dbg !5149
  %tobool464 = icmp ne i32 %292, 0, !dbg !5151
  %lnot465 = xor i1 %tobool464, true, !dbg !5151
  %lnot.ext466 = zext i1 %lnot465 to i32, !dbg !5151
  store i32 %lnot.ext466, i32* %ch, align 4, !dbg !5152
  store i32 %lnot.ext466, i32* %i, align 4, !dbg !5153
  br label %for.cond467, !dbg !5154

for.cond467:                                      ; preds = %for.inc547, %if.then460
  %293 = load i32, i32* %ch, align 4, !dbg !5155
  %294 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5158
  %channels468 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %294, i32 0, i32 71, !dbg !5159
  %295 = load i32, i32* %channels468, align 8, !dbg !5159
  %cmp469 = icmp sle i32 %293, %295, !dbg !5160
  br i1 %cmp469, label %for.body471, label %for.end549, !dbg !5161

for.body471:                                      ; preds = %for.cond467
  %296 = load i32, i32* %ch, align 4, !dbg !5162
  %297 = load i32, i32* %i, align 4, !dbg !5165
  %cmp472 = icmp eq i32 %296, %297, !dbg !5166
  br i1 %cmp472, label %if.then478, label %lor.lhs.false474, !dbg !5167

lor.lhs.false474:                                 ; preds = %for.body471
  %298 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5168
  %snr_offset_strategy475 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %298, i32 0, i32 38, !dbg !5170
  %299 = load i32, i32* %snr_offset_strategy475, align 4, !dbg !5170
  %cmp476 = icmp eq i32 %299, 2, !dbg !5171
  br i1 %cmp476, label %if.then478, label %if.end482, !dbg !5172

if.then478:                                       ; preds = %lor.lhs.false474, %for.body471
  %300 = load i32, i32* %csnr, align 4, !dbg !5173
  %301 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5174
  %call479 = call i32 @get_bits(%struct.GetBitContext* %301, i32 4), !dbg !5175
  %add480 = add i32 %300, %call479, !dbg !5176
  %shl481 = shl i32 %add480, 2, !dbg !5177
  store i32 %shl481, i32* %snr, align 4, !dbg !5178
  br label %if.end482, !dbg !5179

if.end482:                                        ; preds = %if.then478, %lor.lhs.false474
  %302 = load i32, i32* %blk.addr, align 4, !dbg !5180
  %tobool483 = icmp ne i32 %302, 0, !dbg !5180
  br i1 %tobool483, label %land.lhs.true484, label %if.end505, !dbg !5182

land.lhs.true484:                                 ; preds = %if.end482
  %303 = load i32, i32* %ch, align 4, !dbg !5183
  %idxprom485 = sext i32 %303 to i64, !dbg !5185
  %304 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5185
  %snr_offset = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %304, i32 0, i32 93, !dbg !5186
  %arrayidx486 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset, i64 0, i64 %idxprom485, !dbg !5185
  %305 = load i32, i32* %arrayidx486, align 4, !dbg !5185
  %306 = load i32, i32* %snr, align 4, !dbg !5187
  %cmp487 = icmp ne i32 %305, %306, !dbg !5188
  br i1 %cmp487, label %if.then489, label %if.end505, !dbg !5189

if.then489:                                       ; preds = %land.lhs.true484
  %307 = load i32, i32* %ch, align 4, !dbg !5190
  %idxprom490 = sext i32 %307 to i64, !dbg !5192
  %arrayidx491 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom490, !dbg !5192
  %308 = load i8, i8* %arrayidx491, align 1, !dbg !5192
  %conv492 = zext i8 %308 to i32, !dbg !5193
  %cmp493 = icmp sgt i32 %conv492, 1, !dbg !5194
  br i1 %cmp493, label %cond.true495, label %cond.false499, !dbg !5193

cond.true495:                                     ; preds = %if.then489
  %309 = load i32, i32* %ch, align 4, !dbg !5195
  %idxprom496 = sext i32 %309 to i64, !dbg !5197
  %arrayidx497 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom496, !dbg !5197
  %310 = load i8, i8* %arrayidx497, align 1, !dbg !5197
  %conv498 = zext i8 %310 to i32, !dbg !5198
  br label %cond.end500, !dbg !5199

cond.false499:                                    ; preds = %if.then489
  br label %cond.end500, !dbg !5200

cond.end500:                                      ; preds = %cond.false499, %cond.true495
  %cond501 = phi i32 [ %conv498, %cond.true495 ], [ 1, %cond.false499 ], !dbg !5202
  %conv502 = trunc i32 %cond501 to i8, !dbg !5204
  %311 = load i32, i32* %ch, align 4, !dbg !5205
  %idxprom503 = sext i32 %311 to i64, !dbg !5206
  %arrayidx504 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom503, !dbg !5206
  store i8 %conv502, i8* %arrayidx504, align 1, !dbg !5207
  br label %if.end505, !dbg !5208

if.end505:                                        ; preds = %cond.end500, %land.lhs.true484, %if.end482
  %312 = load i32, i32* %snr, align 4, !dbg !5209
  %313 = load i32, i32* %ch, align 4, !dbg !5210
  %idxprom506 = sext i32 %313 to i64, !dbg !5211
  %314 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5211
  %snr_offset507 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %314, i32 0, i32 93, !dbg !5212
  %arrayidx508 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset507, i64 0, i64 %idxprom506, !dbg !5211
  store i32 %312, i32* %arrayidx508, align 4, !dbg !5213
  %315 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5214
  %eac3509 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %315, i32 0, i32 25, !dbg !5216
  %316 = load i32, i32* %eac3509, align 4, !dbg !5216
  %tobool510 = icmp ne i32 %316, 0, !dbg !5214
  br i1 %tobool510, label %if.end546, label %if.then511, !dbg !5217

if.then511:                                       ; preds = %if.end505
  call void @llvm.dbg.declare(metadata i32* %prev512, metadata !5218, metadata !1849), !dbg !5220
  %317 = load i32, i32* %ch, align 4, !dbg !5221
  %idxprom513 = sext i32 %317 to i64, !dbg !5222
  %318 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5222
  %fast_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %318, i32 0, i32 94, !dbg !5223
  %arrayidx514 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain, i64 0, i64 %idxprom513, !dbg !5222
  %319 = load i32, i32* %arrayidx514, align 4, !dbg !5222
  store i32 %319, i32* %prev512, align 4, !dbg !5220
  %320 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5224
  %call515 = call i32 @get_bits(%struct.GetBitContext* %320, i32 3), !dbg !5225
  %idxprom516 = zext i32 %call515 to i64, !dbg !5226
  %arrayidx517 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 %idxprom516, !dbg !5226
  %321 = load i16, i16* %arrayidx517, align 2, !dbg !5226
  %conv518 = zext i16 %321 to i32, !dbg !5226
  %322 = load i32, i32* %ch, align 4, !dbg !5227
  %idxprom519 = sext i32 %322 to i64, !dbg !5228
  %323 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5228
  %fast_gain520 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %323, i32 0, i32 94, !dbg !5229
  %arrayidx521 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain520, i64 0, i64 %idxprom519, !dbg !5228
  store i32 %conv518, i32* %arrayidx521, align 4, !dbg !5230
  %324 = load i32, i32* %blk.addr, align 4, !dbg !5231
  %tobool522 = icmp ne i32 %324, 0, !dbg !5231
  br i1 %tobool522, label %land.lhs.true523, label %if.end545, !dbg !5233

land.lhs.true523:                                 ; preds = %if.then511
  %325 = load i32, i32* %prev512, align 4, !dbg !5234
  %326 = load i32, i32* %ch, align 4, !dbg !5236
  %idxprom524 = sext i32 %326 to i64, !dbg !5237
  %327 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5237
  %fast_gain525 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %327, i32 0, i32 94, !dbg !5238
  %arrayidx526 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain525, i64 0, i64 %idxprom524, !dbg !5237
  %328 = load i32, i32* %arrayidx526, align 4, !dbg !5237
  %cmp527 = icmp ne i32 %325, %328, !dbg !5239
  br i1 %cmp527, label %if.then529, label %if.end545, !dbg !5240

if.then529:                                       ; preds = %land.lhs.true523
  %329 = load i32, i32* %ch, align 4, !dbg !5241
  %idxprom530 = sext i32 %329 to i64, !dbg !5242
  %arrayidx531 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom530, !dbg !5242
  %330 = load i8, i8* %arrayidx531, align 1, !dbg !5242
  %conv532 = zext i8 %330 to i32, !dbg !5243
  %cmp533 = icmp sgt i32 %conv532, 2, !dbg !5244
  br i1 %cmp533, label %cond.true535, label %cond.false539, !dbg !5243

cond.true535:                                     ; preds = %if.then529
  %331 = load i32, i32* %ch, align 4, !dbg !5245
  %idxprom536 = sext i32 %331 to i64, !dbg !5246
  %arrayidx537 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom536, !dbg !5246
  %332 = load i8, i8* %arrayidx537, align 1, !dbg !5246
  %conv538 = zext i8 %332 to i32, !dbg !5247
  br label %cond.end540, !dbg !5248

cond.false539:                                    ; preds = %if.then529
  br label %cond.end540, !dbg !5249

cond.end540:                                      ; preds = %cond.false539, %cond.true535
  %cond541 = phi i32 [ %conv538, %cond.true535 ], [ 2, %cond.false539 ], !dbg !5251
  %conv542 = trunc i32 %cond541 to i8, !dbg !5253
  %333 = load i32, i32* %ch, align 4, !dbg !5254
  %idxprom543 = sext i32 %333 to i64, !dbg !5255
  %arrayidx544 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom543, !dbg !5255
  store i8 %conv542, i8* %arrayidx544, align 1, !dbg !5256
  br label %if.end545, !dbg !5255

if.end545:                                        ; preds = %cond.end540, %land.lhs.true523, %if.then511
  br label %if.end546, !dbg !5257

if.end546:                                        ; preds = %if.end545, %if.end505
  br label %for.inc547, !dbg !5258

for.inc547:                                       ; preds = %if.end546
  %334 = load i32, i32* %ch, align 4, !dbg !5259
  %inc548 = add nsw i32 %334, 1, !dbg !5259
  store i32 %inc548, i32* %ch, align 4, !dbg !5259
  br label %for.cond467, !dbg !5261, !llvm.loop !5262

for.end549:                                       ; preds = %for.cond467
  br label %if.end558, !dbg !5264

if.else550:                                       ; preds = %land.lhs.true457, %if.then455
  %335 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5265
  %eac3551 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %335, i32 0, i32 25, !dbg !5268
  %336 = load i32, i32* %eac3551, align 4, !dbg !5268
  %tobool552 = icmp ne i32 %336, 0, !dbg !5265
  br i1 %tobool552, label %if.end557, label %land.lhs.true553, !dbg !5269

land.lhs.true553:                                 ; preds = %if.else550
  %337 = load i32, i32* %blk.addr, align 4, !dbg !5270
  %tobool554 = icmp ne i32 %337, 0, !dbg !5270
  br i1 %tobool554, label %if.end557, label %if.then555, !dbg !5272

if.then555:                                       ; preds = %land.lhs.true553
  %338 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5273
  %avctx556 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %338, i32 0, i32 1, !dbg !5275
  %339 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx556, align 8, !dbg !5275
  %340 = bitcast %struct.AVCodecContext* %339 to i8*, !dbg !5273
  call void (i8*, i32, i8*, ...) @av_log(i8* %340, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0)), !dbg !5276
  store i32 -1094995529, i32* %retval, align 4, !dbg !5277
  br label %return, !dbg !5277

if.end557:                                        ; preds = %land.lhs.true553, %if.else550
  br label %if.end558

if.end558:                                        ; preds = %if.end557, %for.end549
  br label %if.end559, !dbg !5278

if.end559:                                        ; preds = %if.end558, %lor.lhs.false453
  %341 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5279
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %341, i32 0, i32 42, !dbg !5281
  %342 = load i32, i32* %fast_gain_syntax, align 4, !dbg !5281
  %tobool560 = icmp ne i32 %342, 0, !dbg !5279
  br i1 %tobool560, label %land.lhs.true561, label %if.else611, !dbg !5282

land.lhs.true561:                                 ; preds = %if.end559
  %343 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5283
  %call562 = call i32 @get_bits1(%struct.GetBitContext* %343), !dbg !5285
  %tobool563 = icmp ne i32 %call562, 0, !dbg !5285
  br i1 %tobool563, label %if.then564, label %if.else611, !dbg !5286

if.then564:                                       ; preds = %land.lhs.true561
  %344 = load i32, i32* %cpl_in_use, align 4, !dbg !5287
  %tobool565 = icmp ne i32 %344, 0, !dbg !5290
  %lnot566 = xor i1 %tobool565, true, !dbg !5290
  %lnot.ext567 = zext i1 %lnot566 to i32, !dbg !5290
  store i32 %lnot.ext567, i32* %ch, align 4, !dbg !5291
  br label %for.cond568, !dbg !5292

for.cond568:                                      ; preds = %for.inc608, %if.then564
  %345 = load i32, i32* %ch, align 4, !dbg !5293
  %346 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5296
  %channels569 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %346, i32 0, i32 71, !dbg !5297
  %347 = load i32, i32* %channels569, align 8, !dbg !5297
  %cmp570 = icmp sle i32 %345, %347, !dbg !5298
  br i1 %cmp570, label %for.body572, label %for.end610, !dbg !5299

for.body572:                                      ; preds = %for.cond568
  call void @llvm.dbg.declare(metadata i32* %prev573, metadata !5300, metadata !1849), !dbg !5302
  %348 = load i32, i32* %ch, align 4, !dbg !5303
  %idxprom574 = sext i32 %348 to i64, !dbg !5304
  %349 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5304
  %fast_gain575 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %349, i32 0, i32 94, !dbg !5305
  %arrayidx576 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain575, i64 0, i64 %idxprom574, !dbg !5304
  %350 = load i32, i32* %arrayidx576, align 4, !dbg !5304
  store i32 %350, i32* %prev573, align 4, !dbg !5302
  %351 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5306
  %call577 = call i32 @get_bits(%struct.GetBitContext* %351, i32 3), !dbg !5307
  %idxprom578 = zext i32 %call577 to i64, !dbg !5308
  %arrayidx579 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 %idxprom578, !dbg !5308
  %352 = load i16, i16* %arrayidx579, align 2, !dbg !5308
  %conv580 = zext i16 %352 to i32, !dbg !5308
  %353 = load i32, i32* %ch, align 4, !dbg !5309
  %idxprom581 = sext i32 %353 to i64, !dbg !5310
  %354 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5310
  %fast_gain582 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %354, i32 0, i32 94, !dbg !5311
  %arrayidx583 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain582, i64 0, i64 %idxprom581, !dbg !5310
  store i32 %conv580, i32* %arrayidx583, align 4, !dbg !5312
  %355 = load i32, i32* %blk.addr, align 4, !dbg !5313
  %tobool584 = icmp ne i32 %355, 0, !dbg !5313
  br i1 %tobool584, label %land.lhs.true585, label %if.end607, !dbg !5315

land.lhs.true585:                                 ; preds = %for.body572
  %356 = load i32, i32* %prev573, align 4, !dbg !5316
  %357 = load i32, i32* %ch, align 4, !dbg !5318
  %idxprom586 = sext i32 %357 to i64, !dbg !5319
  %358 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5319
  %fast_gain587 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %358, i32 0, i32 94, !dbg !5320
  %arrayidx588 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain587, i64 0, i64 %idxprom586, !dbg !5319
  %359 = load i32, i32* %arrayidx588, align 4, !dbg !5319
  %cmp589 = icmp ne i32 %356, %359, !dbg !5321
  br i1 %cmp589, label %if.then591, label %if.end607, !dbg !5322

if.then591:                                       ; preds = %land.lhs.true585
  %360 = load i32, i32* %ch, align 4, !dbg !5323
  %idxprom592 = sext i32 %360 to i64, !dbg !5324
  %arrayidx593 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom592, !dbg !5324
  %361 = load i8, i8* %arrayidx593, align 1, !dbg !5324
  %conv594 = zext i8 %361 to i32, !dbg !5325
  %cmp595 = icmp sgt i32 %conv594, 2, !dbg !5326
  br i1 %cmp595, label %cond.true597, label %cond.false601, !dbg !5325

cond.true597:                                     ; preds = %if.then591
  %362 = load i32, i32* %ch, align 4, !dbg !5327
  %idxprom598 = sext i32 %362 to i64, !dbg !5328
  %arrayidx599 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom598, !dbg !5328
  %363 = load i8, i8* %arrayidx599, align 1, !dbg !5328
  %conv600 = zext i8 %363 to i32, !dbg !5329
  br label %cond.end602, !dbg !5330

cond.false601:                                    ; preds = %if.then591
  br label %cond.end602, !dbg !5331

cond.end602:                                      ; preds = %cond.false601, %cond.true597
  %cond603 = phi i32 [ %conv600, %cond.true597 ], [ 2, %cond.false601 ], !dbg !5333
  %conv604 = trunc i32 %cond603 to i8, !dbg !5335
  %364 = load i32, i32* %ch, align 4, !dbg !5336
  %idxprom605 = sext i32 %364 to i64, !dbg !5337
  %arrayidx606 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom605, !dbg !5337
  store i8 %conv604, i8* %arrayidx606, align 1, !dbg !5338
  br label %if.end607, !dbg !5337

if.end607:                                        ; preds = %cond.end602, %land.lhs.true585, %for.body572
  br label %for.inc608, !dbg !5339

for.inc608:                                       ; preds = %if.end607
  %365 = load i32, i32* %ch, align 4, !dbg !5340
  %inc609 = add nsw i32 %365, 1, !dbg !5340
  store i32 %inc609, i32* %ch, align 4, !dbg !5340
  br label %for.cond568, !dbg !5342, !llvm.loop !5343

for.end610:                                       ; preds = %for.cond568
  br label %if.end633, !dbg !5345

if.else611:                                       ; preds = %land.lhs.true561, %if.end559
  %366 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5346
  %eac3612 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %366, i32 0, i32 25, !dbg !5349
  %367 = load i32, i32* %eac3612, align 4, !dbg !5349
  %tobool613 = icmp ne i32 %367, 0, !dbg !5346
  br i1 %tobool613, label %land.lhs.true614, label %if.end632, !dbg !5350

land.lhs.true614:                                 ; preds = %if.else611
  %368 = load i32, i32* %blk.addr, align 4, !dbg !5351
  %tobool615 = icmp ne i32 %368, 0, !dbg !5351
  br i1 %tobool615, label %if.end632, label %if.then616, !dbg !5353

if.then616:                                       ; preds = %land.lhs.true614
  %369 = load i32, i32* %cpl_in_use, align 4, !dbg !5354
  %tobool617 = icmp ne i32 %369, 0, !dbg !5357
  %lnot618 = xor i1 %tobool617, true, !dbg !5357
  %lnot.ext619 = zext i1 %lnot618 to i32, !dbg !5357
  store i32 %lnot.ext619, i32* %ch, align 4, !dbg !5358
  br label %for.cond620, !dbg !5359

for.cond620:                                      ; preds = %for.inc629, %if.then616
  %370 = load i32, i32* %ch, align 4, !dbg !5360
  %371 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5363
  %channels621 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %371, i32 0, i32 71, !dbg !5364
  %372 = load i32, i32* %channels621, align 8, !dbg !5364
  %cmp622 = icmp sle i32 %370, %372, !dbg !5365
  br i1 %cmp622, label %for.body624, label %for.end631, !dbg !5366

for.body624:                                      ; preds = %for.cond620
  %373 = load i16, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 4), align 8, !dbg !5367
  %conv625 = zext i16 %373 to i32, !dbg !5367
  %374 = load i32, i32* %ch, align 4, !dbg !5368
  %idxprom626 = sext i32 %374 to i64, !dbg !5369
  %375 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5369
  %fast_gain627 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %375, i32 0, i32 94, !dbg !5370
  %arrayidx628 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain627, i64 0, i64 %idxprom626, !dbg !5369
  store i32 %conv625, i32* %arrayidx628, align 4, !dbg !5371
  br label %for.inc629, !dbg !5369

for.inc629:                                       ; preds = %for.body624
  %376 = load i32, i32* %ch, align 4, !dbg !5372
  %inc630 = add nsw i32 %376, 1, !dbg !5372
  store i32 %inc630, i32* %ch, align 4, !dbg !5372
  br label %for.cond620, !dbg !5374, !llvm.loop !5375

for.end631:                                       ; preds = %for.cond620
  br label %if.end632, !dbg !5377

if.end632:                                        ; preds = %for.end631, %land.lhs.true614, %if.else611
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %for.end610
  %377 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5378
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %377, i32 0, i32 3, !dbg !5380
  %378 = load i32, i32* %frame_type, align 16, !dbg !5380
  %cmp634 = icmp eq i32 %378, 0, !dbg !5381
  br i1 %cmp634, label %land.lhs.true636, label %if.end640, !dbg !5382

land.lhs.true636:                                 ; preds = %if.end633
  %379 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5383
  %call637 = call i32 @get_bits1(%struct.GetBitContext* %379), !dbg !5385
  %tobool638 = icmp ne i32 %call637, 0, !dbg !5385
  br i1 %tobool638, label %if.then639, label %if.end640, !dbg !5386

if.then639:                                       ; preds = %land.lhs.true636
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5387
  call void @skip_bits(%struct.GetBitContext* %380, i32 10), !dbg !5389
  br label %if.end640, !dbg !5390

if.end640:                                        ; preds = %if.then639, %land.lhs.true636, %if.end633
  %381 = load i32, i32* %cpl_in_use, align 4, !dbg !5391
  %tobool641 = icmp ne i32 %381, 0, !dbg !5391
  br i1 %tobool641, label %if.then642, label %if.end687, !dbg !5393

if.then642:                                       ; preds = %if.end640
  %382 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5394
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %382, i32 0, i32 92, !dbg !5397
  %383 = load i32, i32* %first_cpl_leak, align 4, !dbg !5397
  %tobool643 = icmp ne i32 %383, 0, !dbg !5394
  br i1 %tobool643, label %if.then647, label %lor.lhs.false644, !dbg !5398

lor.lhs.false644:                                 ; preds = %if.then642
  %384 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5399
  %call645 = call i32 @get_bits1(%struct.GetBitContext* %384), !dbg !5401
  %tobool646 = icmp ne i32 %call645, 0, !dbg !5401
  br i1 %tobool646, label %if.then647, label %if.else677, !dbg !5402

if.then647:                                       ; preds = %lor.lhs.false644, %if.then642
  call void @llvm.dbg.declare(metadata i32* %fl, metadata !5403, metadata !1849), !dbg !5405
  %385 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5406
  %call648 = call i32 @get_bits(%struct.GetBitContext* %385, i32 3), !dbg !5407
  store i32 %call648, i32* %fl, align 4, !dbg !5405
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !5408, metadata !1849), !dbg !5409
  %386 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5410
  %call649 = call i32 @get_bits(%struct.GetBitContext* %386, i32 3), !dbg !5411
  store i32 %call649, i32* %sl, align 4, !dbg !5409
  %387 = load i32, i32* %blk.addr, align 4, !dbg !5412
  %tobool650 = icmp ne i32 %387, 0, !dbg !5412
  br i1 %tobool650, label %land.lhs.true651, label %if.end672, !dbg !5414

land.lhs.true651:                                 ; preds = %if.then647
  %388 = load i32, i32* %fl, align 4, !dbg !5415
  %389 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5417
  %bit_alloc_params652 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %389, i32 0, i32 91, !dbg !5418
  %cpl_fast_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params652, i32 0, i32 7, !dbg !5419
  %390 = load i32, i32* %cpl_fast_leak, align 4, !dbg !5419
  %cmp653 = icmp ne i32 %388, %390, !dbg !5420
  br i1 %cmp653, label %if.then659, label %lor.lhs.false655, !dbg !5421

lor.lhs.false655:                                 ; preds = %land.lhs.true651
  %391 = load i32, i32* %sl, align 4, !dbg !5422
  %392 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5423
  %bit_alloc_params656 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %392, i32 0, i32 91, !dbg !5424
  %cpl_slow_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params656, i32 0, i32 8, !dbg !5425
  %393 = load i32, i32* %cpl_slow_leak, align 32, !dbg !5425
  %cmp657 = icmp ne i32 %391, %393, !dbg !5426
  br i1 %cmp657, label %if.then659, label %if.end672, !dbg !5427

if.then659:                                       ; preds = %lor.lhs.false655, %land.lhs.true651
  %arrayidx660 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5429
  %394 = load i8, i8* %arrayidx660, align 1, !dbg !5429
  %conv661 = zext i8 %394 to i32, !dbg !5431
  %cmp662 = icmp sgt i32 %conv661, 2, !dbg !5432
  br i1 %cmp662, label %cond.true664, label %cond.false667, !dbg !5431

cond.true664:                                     ; preds = %if.then659
  %arrayidx665 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5433
  %395 = load i8, i8* %arrayidx665, align 1, !dbg !5433
  %conv666 = zext i8 %395 to i32, !dbg !5435
  br label %cond.end668, !dbg !5436

cond.false667:                                    ; preds = %if.then659
  br label %cond.end668, !dbg !5437

cond.end668:                                      ; preds = %cond.false667, %cond.true664
  %cond669 = phi i32 [ %conv666, %cond.true664 ], [ 2, %cond.false667 ], !dbg !5439
  %conv670 = trunc i32 %cond669 to i8, !dbg !5441
  %arrayidx671 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5442
  store i8 %conv670, i8* %arrayidx671, align 1, !dbg !5443
  br label %if.end672, !dbg !5444

if.end672:                                        ; preds = %cond.end668, %lor.lhs.false655, %if.then647
  %396 = load i32, i32* %fl, align 4, !dbg !5445
  %397 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5446
  %bit_alloc_params673 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %397, i32 0, i32 91, !dbg !5447
  %cpl_fast_leak674 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params673, i32 0, i32 7, !dbg !5448
  store i32 %396, i32* %cpl_fast_leak674, align 4, !dbg !5449
  %398 = load i32, i32* %sl, align 4, !dbg !5450
  %399 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5451
  %bit_alloc_params675 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %399, i32 0, i32 91, !dbg !5452
  %cpl_slow_leak676 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params675, i32 0, i32 8, !dbg !5453
  store i32 %398, i32* %cpl_slow_leak676, align 32, !dbg !5454
  br label %if.end685, !dbg !5455

if.else677:                                       ; preds = %lor.lhs.false644
  %400 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5456
  %eac3678 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %400, i32 0, i32 25, !dbg !5459
  %401 = load i32, i32* %eac3678, align 4, !dbg !5459
  %tobool679 = icmp ne i32 %401, 0, !dbg !5456
  br i1 %tobool679, label %if.end684, label %land.lhs.true680, !dbg !5460

land.lhs.true680:                                 ; preds = %if.else677
  %402 = load i32, i32* %blk.addr, align 4, !dbg !5461
  %tobool681 = icmp ne i32 %402, 0, !dbg !5461
  br i1 %tobool681, label %if.end684, label %if.then682, !dbg !5463

if.then682:                                       ; preds = %land.lhs.true680
  %403 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5464
  %avctx683 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %403, i32 0, i32 1, !dbg !5466
  %404 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx683, align 8, !dbg !5466
  %405 = bitcast %struct.AVCodecContext* %404 to i8*, !dbg !5464
  call void (i8*, i32, i8*, ...) @av_log(i8* %405, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.37, i32 0, i32 0)), !dbg !5467
  store i32 -1094995529, i32* %retval, align 4, !dbg !5468
  br label %return, !dbg !5468

if.end684:                                        ; preds = %land.lhs.true680, %if.else677
  br label %if.end685

if.end685:                                        ; preds = %if.end684, %if.end672
  %406 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5469
  %first_cpl_leak686 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %406, i32 0, i32 92, !dbg !5470
  store i32 0, i32* %first_cpl_leak686, align 4, !dbg !5471
  br label %if.end687, !dbg !5472

if.end687:                                        ; preds = %if.end685, %if.end640
  %407 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5473
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %407, i32 0, i32 43, !dbg !5475
  %408 = load i32, i32* %dba_syntax, align 32, !dbg !5475
  %tobool688 = icmp ne i32 %408, 0, !dbg !5473
  br i1 %tobool688, label %land.lhs.true689, label %if.else793, !dbg !5476

land.lhs.true689:                                 ; preds = %if.end687
  %409 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5477
  %call690 = call i32 @get_bits1(%struct.GetBitContext* %409), !dbg !5479
  %tobool691 = icmp ne i32 %call690, 0, !dbg !5479
  br i1 %tobool691, label %if.then692, label %if.else793, !dbg !5480

if.then692:                                       ; preds = %land.lhs.true689
  %410 = load i32, i32* %cpl_in_use, align 4, !dbg !5481
  %tobool693 = icmp ne i32 %410, 0, !dbg !5484
  %lnot694 = xor i1 %tobool693, true, !dbg !5484
  %lnot.ext695 = zext i1 %lnot694 to i32, !dbg !5484
  store i32 %lnot.ext695, i32* %ch, align 4, !dbg !5485
  br label %for.cond696, !dbg !5486

for.cond696:                                      ; preds = %for.inc726, %if.then692
  %411 = load i32, i32* %ch, align 4, !dbg !5487
  %412 = load i32, i32* %fbw_channels, align 4, !dbg !5490
  %cmp697 = icmp sle i32 %411, %412, !dbg !5491
  br i1 %cmp697, label %for.body699, label %for.end728, !dbg !5492

for.body699:                                      ; preds = %for.cond696
  %413 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5493
  %call700 = call i32 @get_bits(%struct.GetBitContext* %413, i32 2), !dbg !5495
  %414 = load i32, i32* %ch, align 4, !dbg !5496
  %idxprom701 = sext i32 %414 to i64, !dbg !5497
  %415 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5497
  %dba_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %415, i32 0, i32 99, !dbg !5498
  %arrayidx702 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode, i64 0, i64 %idxprom701, !dbg !5497
  store i32 %call700, i32* %arrayidx702, align 4, !dbg !5499
  %416 = load i32, i32* %ch, align 4, !dbg !5500
  %idxprom703 = sext i32 %416 to i64, !dbg !5502
  %417 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5502
  %dba_mode704 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %417, i32 0, i32 99, !dbg !5503
  %arrayidx705 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode704, i64 0, i64 %idxprom703, !dbg !5502
  %418 = load i32, i32* %arrayidx705, align 4, !dbg !5502
  %cmp706 = icmp eq i32 %418, 3, !dbg !5504
  br i1 %cmp706, label %if.then708, label %if.end710, !dbg !5505

if.then708:                                       ; preds = %for.body699
  %419 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5506
  %avctx709 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %419, i32 0, i32 1, !dbg !5508
  %420 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx709, align 8, !dbg !5508
  %421 = bitcast %struct.AVCodecContext* %420 to i8*, !dbg !5506
  call void (i8*, i32, i8*, ...) @av_log(i8* %421, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38, i32 0, i32 0)), !dbg !5509
  store i32 -1094995529, i32* %retval, align 4, !dbg !5510
  br label %return, !dbg !5510

if.end710:                                        ; preds = %for.body699
  %422 = load i32, i32* %ch, align 4, !dbg !5511
  %idxprom711 = sext i32 %422 to i64, !dbg !5512
  %arrayidx712 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom711, !dbg !5512
  %423 = load i8, i8* %arrayidx712, align 1, !dbg !5512
  %conv713 = zext i8 %423 to i32, !dbg !5513
  %cmp714 = icmp sgt i32 %conv713, 2, !dbg !5514
  br i1 %cmp714, label %cond.true716, label %cond.false720, !dbg !5513

cond.true716:                                     ; preds = %if.end710
  %424 = load i32, i32* %ch, align 4, !dbg !5515
  %idxprom717 = sext i32 %424 to i64, !dbg !5517
  %arrayidx718 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom717, !dbg !5517
  %425 = load i8, i8* %arrayidx718, align 1, !dbg !5517
  %conv719 = zext i8 %425 to i32, !dbg !5518
  br label %cond.end721, !dbg !5519

cond.false720:                                    ; preds = %if.end710
  br label %cond.end721, !dbg !5520

cond.end721:                                      ; preds = %cond.false720, %cond.true716
  %cond722 = phi i32 [ %conv719, %cond.true716 ], [ 2, %cond.false720 ], !dbg !5522
  %conv723 = trunc i32 %cond722 to i8, !dbg !5524
  %426 = load i32, i32* %ch, align 4, !dbg !5525
  %idxprom724 = sext i32 %426 to i64, !dbg !5526
  %arrayidx725 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom724, !dbg !5526
  store i8 %conv723, i8* %arrayidx725, align 1, !dbg !5527
  br label %for.inc726, !dbg !5528

for.inc726:                                       ; preds = %cond.end721
  %427 = load i32, i32* %ch, align 4, !dbg !5529
  %inc727 = add nsw i32 %427, 1, !dbg !5529
  store i32 %inc727, i32* %ch, align 4, !dbg !5529
  br label %for.cond696, !dbg !5531, !llvm.loop !5532

for.end728:                                       ; preds = %for.cond696
  %428 = load i32, i32* %cpl_in_use, align 4, !dbg !5534
  %tobool729 = icmp ne i32 %428, 0, !dbg !5536
  %lnot730 = xor i1 %tobool729, true, !dbg !5536
  %lnot.ext731 = zext i1 %lnot730 to i32, !dbg !5536
  store i32 %lnot.ext731, i32* %ch, align 4, !dbg !5537
  br label %for.cond732, !dbg !5538

for.cond732:                                      ; preds = %for.inc790, %for.end728
  %429 = load i32, i32* %ch, align 4, !dbg !5539
  %430 = load i32, i32* %fbw_channels, align 4, !dbg !5542
  %cmp733 = icmp sle i32 %429, %430, !dbg !5543
  br i1 %cmp733, label %for.body735, label %for.end792, !dbg !5544

for.body735:                                      ; preds = %for.cond732
  %431 = load i32, i32* %ch, align 4, !dbg !5545
  %idxprom736 = sext i32 %431 to i64, !dbg !5548
  %432 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5548
  %dba_mode737 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %432, i32 0, i32 99, !dbg !5549
  %arrayidx738 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode737, i64 0, i64 %idxprom736, !dbg !5548
  %433 = load i32, i32* %arrayidx738, align 4, !dbg !5548
  %cmp739 = icmp eq i32 %433, 1, !dbg !5550
  br i1 %cmp739, label %if.then741, label %if.end789, !dbg !5551

if.then741:                                       ; preds = %for.body735
  %434 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5552
  %call742 = call i32 @get_bits(%struct.GetBitContext* %434, i32 3), !dbg !5554
  %add743 = add i32 %call742, 1, !dbg !5555
  %435 = load i32, i32* %ch, align 4, !dbg !5556
  %idxprom744 = sext i32 %435 to i64, !dbg !5557
  %436 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5557
  %dba_nsegs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %436, i32 0, i32 100, !dbg !5558
  %arrayidx745 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs, i64 0, i64 %idxprom744, !dbg !5557
  store i32 %add743, i32* %arrayidx745, align 4, !dbg !5559
  store i32 0, i32* %seg, align 4, !dbg !5560
  br label %for.cond746, !dbg !5562

for.cond746:                                      ; preds = %for.inc771, %if.then741
  %437 = load i32, i32* %seg, align 4, !dbg !5563
  %438 = load i32, i32* %ch, align 4, !dbg !5566
  %idxprom747 = sext i32 %438 to i64, !dbg !5567
  %439 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5567
  %dba_nsegs748 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %439, i32 0, i32 100, !dbg !5568
  %arrayidx749 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs748, i64 0, i64 %idxprom747, !dbg !5567
  %440 = load i32, i32* %arrayidx749, align 4, !dbg !5567
  %cmp750 = icmp slt i32 %437, %440, !dbg !5569
  br i1 %cmp750, label %for.body752, label %for.end773, !dbg !5570

for.body752:                                      ; preds = %for.cond746
  %441 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5571
  %call753 = call i32 @get_bits(%struct.GetBitContext* %441, i32 5), !dbg !5573
  %conv754 = trunc i32 %call753 to i8, !dbg !5573
  %442 = load i32, i32* %seg, align 4, !dbg !5574
  %idxprom755 = sext i32 %442 to i64, !dbg !5575
  %443 = load i32, i32* %ch, align 4, !dbg !5576
  %idxprom756 = sext i32 %443 to i64, !dbg !5575
  %444 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5575
  %dba_offsets = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %444, i32 0, i32 101, !dbg !5577
  %arrayidx757 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_offsets, i64 0, i64 %idxprom756, !dbg !5575
  %arrayidx758 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx757, i64 0, i64 %idxprom755, !dbg !5575
  store i8 %conv754, i8* %arrayidx758, align 1, !dbg !5578
  %445 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5579
  %call759 = call i32 @get_bits(%struct.GetBitContext* %445, i32 4), !dbg !5580
  %conv760 = trunc i32 %call759 to i8, !dbg !5580
  %446 = load i32, i32* %seg, align 4, !dbg !5581
  %idxprom761 = sext i32 %446 to i64, !dbg !5582
  %447 = load i32, i32* %ch, align 4, !dbg !5583
  %idxprom762 = sext i32 %447 to i64, !dbg !5582
  %448 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5582
  %dba_lengths = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %448, i32 0, i32 102, !dbg !5584
  %arrayidx763 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_lengths, i64 0, i64 %idxprom762, !dbg !5582
  %arrayidx764 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx763, i64 0, i64 %idxprom761, !dbg !5582
  store i8 %conv760, i8* %arrayidx764, align 1, !dbg !5585
  %449 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5586
  %call765 = call i32 @get_bits(%struct.GetBitContext* %449, i32 3), !dbg !5587
  %conv766 = trunc i32 %call765 to i8, !dbg !5587
  %450 = load i32, i32* %seg, align 4, !dbg !5588
  %idxprom767 = sext i32 %450 to i64, !dbg !5589
  %451 = load i32, i32* %ch, align 4, !dbg !5590
  %idxprom768 = sext i32 %451 to i64, !dbg !5589
  %452 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5589
  %dba_values = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %452, i32 0, i32 103, !dbg !5591
  %arrayidx769 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_values, i64 0, i64 %idxprom768, !dbg !5589
  %arrayidx770 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx769, i64 0, i64 %idxprom767, !dbg !5589
  store i8 %conv766, i8* %arrayidx770, align 1, !dbg !5592
  br label %for.inc771, !dbg !5593

for.inc771:                                       ; preds = %for.body752
  %453 = load i32, i32* %seg, align 4, !dbg !5594
  %inc772 = add nsw i32 %453, 1, !dbg !5594
  store i32 %inc772, i32* %seg, align 4, !dbg !5594
  br label %for.cond746, !dbg !5596, !llvm.loop !5597

for.end773:                                       ; preds = %for.cond746
  %454 = load i32, i32* %ch, align 4, !dbg !5599
  %idxprom774 = sext i32 %454 to i64, !dbg !5600
  %arrayidx775 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom774, !dbg !5600
  %455 = load i8, i8* %arrayidx775, align 1, !dbg !5600
  %conv776 = zext i8 %455 to i32, !dbg !5601
  %cmp777 = icmp sgt i32 %conv776, 2, !dbg !5602
  br i1 %cmp777, label %cond.true779, label %cond.false783, !dbg !5601

cond.true779:                                     ; preds = %for.end773
  %456 = load i32, i32* %ch, align 4, !dbg !5603
  %idxprom780 = sext i32 %456 to i64, !dbg !5605
  %arrayidx781 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom780, !dbg !5605
  %457 = load i8, i8* %arrayidx781, align 1, !dbg !5605
  %conv782 = zext i8 %457 to i32, !dbg !5606
  br label %cond.end784, !dbg !5607

cond.false783:                                    ; preds = %for.end773
  br label %cond.end784, !dbg !5608

cond.end784:                                      ; preds = %cond.false783, %cond.true779
  %cond785 = phi i32 [ %conv782, %cond.true779 ], [ 2, %cond.false783 ], !dbg !5610
  %conv786 = trunc i32 %cond785 to i8, !dbg !5612
  %458 = load i32, i32* %ch, align 4, !dbg !5613
  %idxprom787 = sext i32 %458 to i64, !dbg !5614
  %arrayidx788 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom787, !dbg !5614
  store i8 %conv786, i8* %arrayidx788, align 1, !dbg !5615
  br label %if.end789, !dbg !5616

if.end789:                                        ; preds = %cond.end784, %for.body735
  br label %for.inc790, !dbg !5617

for.inc790:                                       ; preds = %if.end789
  %459 = load i32, i32* %ch, align 4, !dbg !5618
  %inc791 = add nsw i32 %459, 1, !dbg !5618
  store i32 %inc791, i32* %ch, align 4, !dbg !5618
  br label %for.cond732, !dbg !5620, !llvm.loop !5621

for.end792:                                       ; preds = %for.cond732
  br label %if.end809, !dbg !5623

if.else793:                                       ; preds = %land.lhs.true689, %if.end687
  %460 = load i32, i32* %blk.addr, align 4, !dbg !5624
  %cmp794 = icmp eq i32 %460, 0, !dbg !5627
  br i1 %cmp794, label %if.then796, label %if.end808, !dbg !5624

if.then796:                                       ; preds = %if.else793
  store i32 0, i32* %ch, align 4, !dbg !5628
  br label %for.cond797, !dbg !5631

for.cond797:                                      ; preds = %for.inc805, %if.then796
  %461 = load i32, i32* %ch, align 4, !dbg !5632
  %462 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5635
  %channels798 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %462, i32 0, i32 71, !dbg !5636
  %463 = load i32, i32* %channels798, align 8, !dbg !5636
  %cmp799 = icmp sle i32 %461, %463, !dbg !5637
  br i1 %cmp799, label %for.body801, label %for.end807, !dbg !5638

for.body801:                                      ; preds = %for.cond797
  %464 = load i32, i32* %ch, align 4, !dbg !5639
  %idxprom802 = sext i32 %464 to i64, !dbg !5641
  %465 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5641
  %dba_mode803 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %465, i32 0, i32 99, !dbg !5642
  %arrayidx804 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode803, i64 0, i64 %idxprom802, !dbg !5641
  store i32 2, i32* %arrayidx804, align 4, !dbg !5643
  br label %for.inc805, !dbg !5644

for.inc805:                                       ; preds = %for.body801
  %466 = load i32, i32* %ch, align 4, !dbg !5645
  %inc806 = add nsw i32 %466, 1, !dbg !5645
  store i32 %inc806, i32* %ch, align 4, !dbg !5645
  br label %for.cond797, !dbg !5647, !llvm.loop !5648

for.end807:                                       ; preds = %for.cond797
  br label %if.end808, !dbg !5650

if.end808:                                        ; preds = %for.end807, %if.else793
  br label %if.end809

if.end809:                                        ; preds = %if.end808, %for.end792
  %467 = load i32, i32* %cpl_in_use, align 4, !dbg !5651
  %tobool810 = icmp ne i32 %467, 0, !dbg !5653
  %lnot811 = xor i1 %tobool810, true, !dbg !5653
  %lnot.ext812 = zext i1 %lnot811 to i32, !dbg !5653
  store i32 %lnot.ext812, i32* %ch, align 4, !dbg !5654
  br label %for.cond813, !dbg !5655

for.cond813:                                      ; preds = %for.inc924, %if.end809
  %468 = load i32, i32* %ch, align 4, !dbg !5656
  %469 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5659
  %channels814 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %469, i32 0, i32 71, !dbg !5660
  %470 = load i32, i32* %channels814, align 8, !dbg !5660
  %cmp815 = icmp sle i32 %468, %470, !dbg !5661
  br i1 %cmp815, label %for.body817, label %for.end926, !dbg !5662

for.body817:                                      ; preds = %for.cond813
  %471 = load i32, i32* %ch, align 4, !dbg !5663
  %idxprom818 = sext i32 %471 to i64, !dbg !5666
  %arrayidx819 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom818, !dbg !5666
  %472 = load i8, i8* %arrayidx819, align 1, !dbg !5666
  %conv820 = zext i8 %472 to i32, !dbg !5666
  %cmp821 = icmp sgt i32 %conv820, 2, !dbg !5667
  br i1 %cmp821, label %if.then823, label %if.end840, !dbg !5668

if.then823:                                       ; preds = %for.body817
  %473 = load i32, i32* %ch, align 4, !dbg !5669
  %idxprom824 = sext i32 %473 to i64, !dbg !5671
  %474 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5671
  %dexps825 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %474, i32 0, i32 89, !dbg !5672
  %arrayidx826 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps825, i64 0, i64 %idxprom824, !dbg !5671
  %arraydecay827 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx826, i32 0, i32 0, !dbg !5671
  %475 = load i32, i32* %ch, align 4, !dbg !5673
  %idxprom828 = sext i32 %475 to i64, !dbg !5674
  %476 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5674
  %start_freq829 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %476, i32 0, i32 83, !dbg !5675
  %arrayidx830 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq829, i64 0, i64 %idxprom828, !dbg !5674
  %477 = load i32, i32* %arrayidx830, align 4, !dbg !5674
  %478 = load i32, i32* %ch, align 4, !dbg !5676
  %idxprom831 = sext i32 %478 to i64, !dbg !5677
  %479 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5677
  %end_freq832 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %479, i32 0, i32 84, !dbg !5678
  %arrayidx833 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq832, i64 0, i64 %idxprom831, !dbg !5677
  %480 = load i32, i32* %arrayidx833, align 4, !dbg !5677
  %481 = load i32, i32* %ch, align 4, !dbg !5679
  %idxprom834 = sext i32 %481 to i64, !dbg !5680
  %482 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5680
  %psd = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %482, i32 0, i32 96, !dbg !5681
  %arrayidx835 = getelementptr inbounds [7 x [256 x i16]], [7 x [256 x i16]]* %psd, i64 0, i64 %idxprom834, !dbg !5680
  %arraydecay836 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx835, i32 0, i32 0, !dbg !5680
  %483 = load i32, i32* %ch, align 4, !dbg !5682
  %idxprom837 = sext i32 %483 to i64, !dbg !5683
  %484 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5683
  %band_psd = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %484, i32 0, i32 97, !dbg !5684
  %arrayidx838 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %band_psd, i64 0, i64 %idxprom837, !dbg !5683
  %arraydecay839 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx838, i32 0, i32 0, !dbg !5683
  call void @ff_ac3_bit_alloc_calc_psd(i8* %arraydecay827, i32 %477, i32 %480, i16* %arraydecay836, i16* %arraydecay839), !dbg !5685
  br label %if.end840, !dbg !5686

if.end840:                                        ; preds = %if.then823, %for.body817
  %485 = load i32, i32* %ch, align 4, !dbg !5687
  %idxprom841 = sext i32 %485 to i64, !dbg !5689
  %arrayidx842 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom841, !dbg !5689
  %486 = load i8, i8* %arrayidx842, align 1, !dbg !5689
  %conv843 = zext i8 %486 to i32, !dbg !5689
  %cmp844 = icmp sgt i32 %conv843, 1, !dbg !5690
  br i1 %cmp844, label %if.then846, label %if.end890, !dbg !5691

if.then846:                                       ; preds = %if.end840
  %487 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5692
  %bit_alloc_params847 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %487, i32 0, i32 91, !dbg !5695
  %488 = load i32, i32* %ch, align 4, !dbg !5696
  %idxprom848 = sext i32 %488 to i64, !dbg !5697
  %489 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5697
  %band_psd849 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %489, i32 0, i32 97, !dbg !5698
  %arrayidx850 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %band_psd849, i64 0, i64 %idxprom848, !dbg !5697
  %arraydecay851 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx850, i32 0, i32 0, !dbg !5697
  %490 = load i32, i32* %ch, align 4, !dbg !5699
  %idxprom852 = sext i32 %490 to i64, !dbg !5700
  %491 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5700
  %start_freq853 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %491, i32 0, i32 83, !dbg !5701
  %arrayidx854 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq853, i64 0, i64 %idxprom852, !dbg !5700
  %492 = load i32, i32* %arrayidx854, align 4, !dbg !5700
  %493 = load i32, i32* %ch, align 4, !dbg !5702
  %idxprom855 = sext i32 %493 to i64, !dbg !5703
  %494 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5703
  %end_freq856 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %494, i32 0, i32 84, !dbg !5704
  %arrayidx857 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq856, i64 0, i64 %idxprom855, !dbg !5703
  %495 = load i32, i32* %arrayidx857, align 4, !dbg !5703
  %496 = load i32, i32* %ch, align 4, !dbg !5705
  %idxprom858 = sext i32 %496 to i64, !dbg !5706
  %497 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5706
  %fast_gain859 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %497, i32 0, i32 94, !dbg !5707
  %arrayidx860 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain859, i64 0, i64 %idxprom858, !dbg !5706
  %498 = load i32, i32* %arrayidx860, align 4, !dbg !5706
  %499 = load i32, i32* %ch, align 4, !dbg !5708
  %500 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5709
  %lfe_ch861 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %500, i32 0, i32 72, !dbg !5710
  %501 = load i32, i32* %lfe_ch861, align 4, !dbg !5710
  %cmp862 = icmp eq i32 %499, %501, !dbg !5711
  %conv863 = zext i1 %cmp862 to i32, !dbg !5711
  %502 = load i32, i32* %ch, align 4, !dbg !5712
  %idxprom864 = sext i32 %502 to i64, !dbg !5713
  %503 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5713
  %dba_mode865 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %503, i32 0, i32 99, !dbg !5714
  %arrayidx866 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode865, i64 0, i64 %idxprom864, !dbg !5713
  %504 = load i32, i32* %arrayidx866, align 4, !dbg !5713
  %505 = load i32, i32* %ch, align 4, !dbg !5715
  %idxprom867 = sext i32 %505 to i64, !dbg !5716
  %506 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5716
  %dba_nsegs868 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %506, i32 0, i32 100, !dbg !5717
  %arrayidx869 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs868, i64 0, i64 %idxprom867, !dbg !5716
  %507 = load i32, i32* %arrayidx869, align 4, !dbg !5716
  %508 = load i32, i32* %ch, align 4, !dbg !5718
  %idxprom870 = sext i32 %508 to i64, !dbg !5719
  %509 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5719
  %dba_offsets871 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %509, i32 0, i32 101, !dbg !5720
  %arrayidx872 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_offsets871, i64 0, i64 %idxprom870, !dbg !5719
  %arraydecay873 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx872, i32 0, i32 0, !dbg !5719
  %510 = load i32, i32* %ch, align 4, !dbg !5721
  %idxprom874 = sext i32 %510 to i64, !dbg !5722
  %511 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5722
  %dba_lengths875 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %511, i32 0, i32 102, !dbg !5723
  %arrayidx876 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_lengths875, i64 0, i64 %idxprom874, !dbg !5722
  %arraydecay877 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx876, i32 0, i32 0, !dbg !5722
  %512 = load i32, i32* %ch, align 4, !dbg !5724
  %idxprom878 = sext i32 %512 to i64, !dbg !5725
  %513 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5725
  %dba_values879 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %513, i32 0, i32 103, !dbg !5726
  %arrayidx880 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_values879, i64 0, i64 %idxprom878, !dbg !5725
  %arraydecay881 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx880, i32 0, i32 0, !dbg !5725
  %514 = load i32, i32* %ch, align 4, !dbg !5727
  %idxprom882 = sext i32 %514 to i64, !dbg !5728
  %515 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5728
  %mask = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %515, i32 0, i32 98, !dbg !5729
  %arrayidx883 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %mask, i64 0, i64 %idxprom882, !dbg !5728
  %arraydecay884 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx883, i32 0, i32 0, !dbg !5728
  %call885 = call i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters* %bit_alloc_params847, i16* %arraydecay851, i32 %492, i32 %495, i32 %498, i32 %conv863, i32 %504, i32 %507, i8* %arraydecay873, i8* %arraydecay877, i8* %arraydecay881, i16* %arraydecay884), !dbg !5730
  %tobool886 = icmp ne i32 %call885, 0, !dbg !5730
  br i1 %tobool886, label %if.then887, label %if.end889, !dbg !5731

if.then887:                                       ; preds = %if.then846
  %516 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5732
  %avctx888 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %516, i32 0, i32 1, !dbg !5734
  %517 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx888, align 8, !dbg !5734
  %518 = bitcast %struct.AVCodecContext* %517 to i8*, !dbg !5732
  call void (i8*, i32, i8*, ...) @av_log(i8* %518, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i32 0, i32 0)), !dbg !5735
  store i32 -1094995529, i32* %retval, align 4, !dbg !5736
  br label %return, !dbg !5736

if.end889:                                        ; preds = %if.then846
  br label %if.end890, !dbg !5737

if.end890:                                        ; preds = %if.end889, %if.end840
  %519 = load i32, i32* %ch, align 4, !dbg !5738
  %idxprom891 = sext i32 %519 to i64, !dbg !5740
  %arrayidx892 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom891, !dbg !5740
  %520 = load i8, i8* %arrayidx892, align 1, !dbg !5740
  %conv893 = zext i8 %520 to i32, !dbg !5740
  %cmp894 = icmp sgt i32 %conv893, 0, !dbg !5741
  br i1 %cmp894, label %if.then896, label %if.end923, !dbg !5742

if.then896:                                       ; preds = %if.end890
  call void @llvm.dbg.declare(metadata i8** %bap_tab, metadata !5743, metadata !1849), !dbg !5745
  %521 = load i32, i32* %ch, align 4, !dbg !5746
  %idxprom897 = sext i32 %521 to i64, !dbg !5747
  %522 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5747
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %522, i32 0, i32 68, !dbg !5748
  %arrayidx898 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 %idxprom897, !dbg !5747
  %523 = load i32, i32* %arrayidx898, align 4, !dbg !5747
  %tobool899 = icmp ne i32 %523, 0, !dbg !5747
  %cond900 = select i1 %tobool899, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_eac3_hebap_tab, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_ac3_bap_tab, i32 0, i32 0), !dbg !5747
  store i8* %cond900, i8** %bap_tab, align 8, !dbg !5745
  %524 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5749
  %ac3dsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %524, i32 0, i32 111, !dbg !5750
  %bit_alloc_calc_bap = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 5, !dbg !5751
  %525 = load void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)** %bit_alloc_calc_bap, align 8, !dbg !5751
  %526 = load i32, i32* %ch, align 4, !dbg !5752
  %idxprom901 = sext i32 %526 to i64, !dbg !5753
  %527 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5753
  %mask902 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %527, i32 0, i32 98, !dbg !5754
  %arrayidx903 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %mask902, i64 0, i64 %idxprom901, !dbg !5753
  %arraydecay904 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx903, i32 0, i32 0, !dbg !5753
  %528 = load i32, i32* %ch, align 4, !dbg !5755
  %idxprom905 = sext i32 %528 to i64, !dbg !5756
  %529 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5756
  %psd906 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %529, i32 0, i32 96, !dbg !5757
  %arrayidx907 = getelementptr inbounds [7 x [256 x i16]], [7 x [256 x i16]]* %psd906, i64 0, i64 %idxprom905, !dbg !5756
  %arraydecay908 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx907, i32 0, i32 0, !dbg !5756
  %530 = load i32, i32* %ch, align 4, !dbg !5758
  %idxprom909 = sext i32 %530 to i64, !dbg !5759
  %531 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5759
  %start_freq910 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %531, i32 0, i32 83, !dbg !5760
  %arrayidx911 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq910, i64 0, i64 %idxprom909, !dbg !5759
  %532 = load i32, i32* %arrayidx911, align 4, !dbg !5759
  %533 = load i32, i32* %ch, align 4, !dbg !5761
  %idxprom912 = sext i32 %533 to i64, !dbg !5762
  %534 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5762
  %end_freq913 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %534, i32 0, i32 84, !dbg !5763
  %arrayidx914 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq913, i64 0, i64 %idxprom912, !dbg !5762
  %535 = load i32, i32* %arrayidx914, align 4, !dbg !5762
  %536 = load i32, i32* %ch, align 4, !dbg !5764
  %idxprom915 = sext i32 %536 to i64, !dbg !5765
  %537 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5765
  %snr_offset916 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %537, i32 0, i32 93, !dbg !5766
  %arrayidx917 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset916, i64 0, i64 %idxprom915, !dbg !5765
  %538 = load i32, i32* %arrayidx917, align 4, !dbg !5765
  %539 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5767
  %bit_alloc_params918 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %539, i32 0, i32 91, !dbg !5768
  %floor919 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params918, i32 0, i32 6, !dbg !5769
  %540 = load i32, i32* %floor919, align 8, !dbg !5769
  %541 = load i8*, i8** %bap_tab, align 8, !dbg !5770
  %542 = load i32, i32* %ch, align 4, !dbg !5771
  %idxprom920 = sext i32 %542 to i64, !dbg !5772
  %543 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5772
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %543, i32 0, i32 95, !dbg !5773
  %arrayidx921 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom920, !dbg !5772
  %arraydecay922 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx921, i32 0, i32 0, !dbg !5772
  call void %525(i16* %arraydecay904, i16* %arraydecay908, i32 %532, i32 %535, i32 %538, i32 %540, i8* %541, i8* %arraydecay922), !dbg !5749
  br label %if.end923, !dbg !5774

if.end923:                                        ; preds = %if.then896, %if.end890
  br label %for.inc924, !dbg !5775

for.inc924:                                       ; preds = %if.end923
  %544 = load i32, i32* %ch, align 4, !dbg !5776
  %inc925 = add nsw i32 %544, 1, !dbg !5776
  store i32 %inc925, i32* %ch, align 4, !dbg !5776
  br label %for.cond813, !dbg !5778, !llvm.loop !5779

for.end926:                                       ; preds = %for.cond813
  %545 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5781
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %545, i32 0, i32 44, !dbg !5783
  %546 = load i32, i32* %skip_syntax, align 4, !dbg !5783
  %tobool927 = icmp ne i32 %546, 0, !dbg !5781
  br i1 %tobool927, label %land.lhs.true928, label %if.end934, !dbg !5784

land.lhs.true928:                                 ; preds = %for.end926
  %547 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5785
  %call929 = call i32 @get_bits1(%struct.GetBitContext* %547), !dbg !5787
  %tobool930 = icmp ne i32 %call929, 0, !dbg !5787
  br i1 %tobool930, label %if.then931, label %if.end934, !dbg !5788

if.then931:                                       ; preds = %land.lhs.true928
  call void @llvm.dbg.declare(metadata i32* %skipl, metadata !5789, metadata !1849), !dbg !5791
  %548 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5792
  %call932 = call i32 @get_bits(%struct.GetBitContext* %548, i32 9), !dbg !5793
  store i32 %call932, i32* %skipl, align 4, !dbg !5791
  %549 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5794
  %550 = load i32, i32* %skipl, align 4, !dbg !5795
  %mul933 = mul nsw i32 8, %550, !dbg !5796
  call void @skip_bits_long(%struct.GetBitContext* %549, i32 %mul933), !dbg !5797
  br label %if.end934, !dbg !5798

if.end934:                                        ; preds = %if.then931, %land.lhs.true928, %for.end926
  %551 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5799
  %552 = load i32, i32* %blk.addr, align 4, !dbg !5800
  call void @decode_transform_coeffs(%struct.AC3DecodeContext* %551, i32 %552), !dbg !5801
  %553 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5802
  %channel_mode935 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %553, i32 0, i32 12, !dbg !5804
  %554 = load i32, i32* %channel_mode935, align 4, !dbg !5804
  %cmp936 = icmp eq i32 %554, 2, !dbg !5805
  br i1 %cmp936, label %if.then938, label %if.end939, !dbg !5806

if.then938:                                       ; preds = %if.end934
  %555 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5807
  call void @do_rematrixing(%struct.AC3DecodeContext* %555), !dbg !5808
  br label %if.end939, !dbg !5808

if.end939:                                        ; preds = %if.then938, %if.end934
  store i32 1, i32* %ch, align 4, !dbg !5809
  br label %for.cond940, !dbg !5811

for.cond940:                                      ; preds = %for.inc973, %if.end939
  %556 = load i32, i32* %ch, align 4, !dbg !5812
  %557 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5815
  %channels941 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %557, i32 0, i32 71, !dbg !5816
  %558 = load i32, i32* %channels941, align 8, !dbg !5816
  %cmp942 = icmp sle i32 %556, %558, !dbg !5817
  br i1 %cmp942, label %for.body944, label %for.end975, !dbg !5818

for.body944:                                      ; preds = %for.cond940
  call void @llvm.dbg.declare(metadata i32* %audio_channel, metadata !5819, metadata !1849), !dbg !5821
  store i32 0, i32* %audio_channel, align 4, !dbg !5821
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !5822, metadata !1849), !dbg !5823
  %559 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5824
  %channel_mode945 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %559, i32 0, i32 12, !dbg !5826
  %560 = load i32, i32* %channel_mode945, align 4, !dbg !5826
  %cmp946 = icmp eq i32 %560, 0, !dbg !5827
  br i1 %cmp946, label %land.lhs.true948, label %if.end953, !dbg !5828

land.lhs.true948:                                 ; preds = %for.body944
  %561 = load i32, i32* %ch, align 4, !dbg !5829
  %cmp949 = icmp sle i32 %561, 2, !dbg !5831
  br i1 %cmp949, label %if.then951, label %if.end953, !dbg !5832

if.then951:                                       ; preds = %land.lhs.true948
  %562 = load i32, i32* %ch, align 4, !dbg !5833
  %sub952 = sub nsw i32 2, %562, !dbg !5834
  store i32 %sub952, i32* %audio_channel, align 4, !dbg !5835
  br label %if.end953, !dbg !5836

if.end953:                                        ; preds = %if.then951, %land.lhs.true948, %for.body944
  %563 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5837
  %heavy_compression = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %563, i32 0, i32 81, !dbg !5839
  %564 = load i32, i32* %heavy_compression, align 32, !dbg !5839
  %tobool954 = icmp ne i32 %564, 0, !dbg !5837
  br i1 %tobool954, label %land.lhs.true955, label %if.else962, !dbg !5840

land.lhs.true955:                                 ; preds = %if.end953
  %565 = load i32, i32* %audio_channel, align 4, !dbg !5841
  %idxprom956 = sext i32 %565 to i64, !dbg !5843
  %566 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5843
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %566, i32 0, i32 15, !dbg !5844
  %arrayidx957 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom956, !dbg !5843
  %567 = load i32, i32* %arrayidx957, align 4, !dbg !5843
  %tobool958 = icmp ne i32 %567, 0, !dbg !5843
  br i1 %tobool958, label %if.then959, label %if.else962, !dbg !5845

if.then959:                                       ; preds = %land.lhs.true955
  %568 = load i32, i32* %audio_channel, align 4, !dbg !5846
  %idxprom960 = sext i32 %568 to i64, !dbg !5847
  %569 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5847
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %569, i32 0, i32 82, !dbg !5848
  %arrayidx961 = getelementptr inbounds [2 x i32], [2 x i32]* %heavy_dynamic_range, i64 0, i64 %idxprom960, !dbg !5847
  %570 = load i32, i32* %arrayidx961, align 4, !dbg !5847
  store i32 %570, i32* %gain, align 4, !dbg !5849
  br label %if.end966, !dbg !5850

if.else962:                                       ; preds = %land.lhs.true955, %if.end953
  %571 = load i32, i32* %audio_channel, align 4, !dbg !5851
  %idxprom963 = sext i32 %571 to i64, !dbg !5852
  %572 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5852
  %dynamic_range964 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %572, i32 0, i32 79, !dbg !5853
  %arrayidx965 = getelementptr inbounds [2 x i32], [2 x i32]* %dynamic_range964, i64 0, i64 %idxprom963, !dbg !5852
  %573 = load i32, i32* %arrayidx965, align 4, !dbg !5852
  store i32 %573, i32* %gain, align 4, !dbg !5854
  br label %if.end966

if.end966:                                        ; preds = %if.else962, %if.then959
  %574 = load i32, i32* %ch, align 4, !dbg !5855
  %idxprom967 = sext i32 %574 to i64, !dbg !5856
  %575 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5856
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %575, i32 0, i32 119, !dbg !5857
  %arrayidx968 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs, i64 0, i64 %idxprom967, !dbg !5856
  %arraydecay969 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx968, i32 0, i32 0, !dbg !5856
  %576 = load i32, i32* %ch, align 4, !dbg !5858
  %idxprom970 = sext i32 %576 to i64, !dbg !5859
  %577 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5859
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %577, i32 0, i32 117, !dbg !5860
  %arrayidx971 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom970, !dbg !5859
  %arraydecay972 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx971, i32 0, i32 0, !dbg !5859
  %578 = load i32, i32* %gain, align 4, !dbg !5861
  call void @scale_coefs(i32* %arraydecay969, i32* %arraydecay972, i32 %578, i32 256), !dbg !5862
  br label %for.inc973, !dbg !5863

for.inc973:                                       ; preds = %if.end966
  %579 = load i32, i32* %ch, align 4, !dbg !5864
  %inc974 = add nsw i32 %579, 1, !dbg !5864
  store i32 %inc974, i32* %ch, align 4, !dbg !5864
  br label %for.cond940, !dbg !5866, !llvm.loop !5867

for.end975:                                       ; preds = %for.cond940
  %580 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5869
  %spx_in_use976 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %580, i32 0, i32 56, !dbg !5871
  %581 = load i32, i32* %spx_in_use976, align 32, !dbg !5871
  %tobool977 = icmp ne i32 %581, 0, !dbg !5869
  br i1 %tobool977, label %if.then978, label %if.end979, !dbg !5872

if.then978:                                       ; preds = %for.end975
  %582 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5873
  call void @ff_eac3_apply_spectral_extension(%struct.AC3DecodeContext* %582), !dbg !5875
  br label %if.end979, !dbg !5876

if.end979:                                        ; preds = %if.then978, %for.end975
  %583 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5877
  %channels980 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %583, i32 0, i32 71, !dbg !5878
  %584 = load i32, i32* %channels980, align 8, !dbg !5878
  %585 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5879
  %out_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %585, i32 0, i32 77, !dbg !5880
  %586 = load i32, i32* %out_channels, align 4, !dbg !5880
  %cmp981 = icmp ne i32 %584, %586, !dbg !5881
  br i1 %cmp981, label %land.rhs, label %land.end992, !dbg !5882

land.rhs:                                         ; preds = %if.end979
  %587 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5883
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %587, i32 0, i32 75, !dbg !5884
  %588 = load i32, i32* %output_mode, align 4, !dbg !5884
  %and983 = and i32 %588, 8, !dbg !5885
  %tobool984 = icmp ne i32 %and983, 0, !dbg !5885
  br i1 %tobool984, label %land.rhs985, label %land.end, !dbg !5886

land.rhs985:                                      ; preds = %land.rhs
  %589 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5887
  %fbw_channels986 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %589, i32 0, i32 70, !dbg !5888
  %590 = load i32, i32* %fbw_channels986, align 4, !dbg !5888
  %591 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5889
  %out_channels987 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %591, i32 0, i32 77, !dbg !5890
  %592 = load i32, i32* %out_channels987, align 4, !dbg !5890
  %cmp988 = icmp eq i32 %590, %592, !dbg !5891
  br label %land.end

land.end:                                         ; preds = %land.rhs985, %land.rhs
  %593 = phi i1 [ false, %land.rhs ], [ %cmp988, %land.rhs985 ]
  %lnot990 = xor i1 %593, true, !dbg !5892
  br label %land.end992

land.end992:                                      ; preds = %land.end, %if.end979
  %594 = phi i1 [ false, %if.end979 ], [ %lnot990, %land.end ]
  %land.ext = zext i1 %594 to i32, !dbg !5893
  store i32 %land.ext, i32* %downmix_output, align 4, !dbg !5894
  %595 = load i32, i32* %different_transforms, align 4, !dbg !5895
  %tobool993 = icmp ne i32 %595, 0, !dbg !5895
  br i1 %tobool993, label %if.then994, label %if.else1007, !dbg !5897

if.then994:                                       ; preds = %land.end992
  %596 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5898
  %downmixed = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %596, i32 0, i32 74, !dbg !5901
  %597 = load i32, i32* %downmixed, align 32, !dbg !5901
  %tobool995 = icmp ne i32 %597, 0, !dbg !5898
  br i1 %tobool995, label %if.then996, label %if.end998, !dbg !5902

if.then996:                                       ; preds = %if.then994
  %598 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5903
  %downmixed997 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %598, i32 0, i32 74, !dbg !5905
  store i32 0, i32* %downmixed997, align 32, !dbg !5906
  %599 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5907
  call void @ac3_upmix_delay(%struct.AC3DecodeContext* %599), !dbg !5908
  br label %if.end998, !dbg !5909

if.end998:                                        ; preds = %if.then996, %if.then994
  %600 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5910
  %601 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5911
  %channels999 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %601, i32 0, i32 71, !dbg !5912
  %602 = load i32, i32* %channels999, align 8, !dbg !5912
  %603 = load i32, i32* %offset.addr, align 4, !dbg !5913
  call void @do_imdct(%struct.AC3DecodeContext* %600, i32 %602, i32 %603), !dbg !5914
  %604 = load i32, i32* %downmix_output, align 4, !dbg !5915
  %tobool1000 = icmp ne i32 %604, 0, !dbg !5915
  br i1 %tobool1000, label %if.then1001, label %if.end1006, !dbg !5917

if.then1001:                                      ; preds = %if.end998
  %605 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5918
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %605, i32 0, i32 113, !dbg !5920
  %arraydecay1002 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr, i32 0, i32 0, !dbg !5918
  %606 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5921
  %downmix_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %606, i32 0, i32 73, !dbg !5922
  %arraydecay1003 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs, i32 0, i32 0, !dbg !5921
  %607 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5923
  %out_channels1004 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %607, i32 0, i32 77, !dbg !5924
  %608 = load i32, i32* %out_channels1004, align 4, !dbg !5924
  %609 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5925
  %fbw_channels1005 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %609, i32 0, i32 70, !dbg !5926
  %610 = load i32, i32* %fbw_channels1005, align 4, !dbg !5926
  call void @ac3_downmix_c_fixed16(i16** %arraydecay1002, i16** %arraydecay1003, i32 %608, i32 %610, i32 256), !dbg !5927
  br label %if.end1006, !dbg !5928

if.end1006:                                       ; preds = %if.then1001, %if.end998
  br label %if.end1031, !dbg !5929

if.else1007:                                      ; preds = %land.end992
  %611 = load i32, i32* %downmix_output, align 4, !dbg !5930
  %tobool1008 = icmp ne i32 %611, 0, !dbg !5930
  br i1 %tobool1008, label %if.then1009, label %if.end1016, !dbg !5933

if.then1009:                                      ; preds = %if.else1007
  %612 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5934
  %ac3dsp1010 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %612, i32 0, i32 111, !dbg !5936
  %613 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5937
  %xcfptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %613, i32 0, i32 114, !dbg !5938
  %arraydecay1011 = getelementptr inbounds [7 x i32*], [7 x i32*]* %xcfptr, i32 0, i32 0, !dbg !5937
  %add.ptr = getelementptr inbounds i32*, i32** %arraydecay1011, i64 1, !dbg !5939
  %614 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5940
  %downmix_coeffs1012 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %614, i32 0, i32 73, !dbg !5941
  %arraydecay1013 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs1012, i32 0, i32 0, !dbg !5940
  %615 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5942
  %out_channels1014 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %615, i32 0, i32 77, !dbg !5943
  %616 = load i32, i32* %out_channels1014, align 4, !dbg !5943
  %617 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5944
  %fbw_channels1015 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %617, i32 0, i32 70, !dbg !5945
  %618 = load i32, i32* %fbw_channels1015, align 4, !dbg !5945
  call void @ff_ac3dsp_downmix_fixed(%struct.AC3DSPContext* %ac3dsp1010, i32** %add.ptr, i16** %arraydecay1013, i32 %616, i32 %618, i32 256), !dbg !5946
  br label %if.end1016, !dbg !5947

if.end1016:                                       ; preds = %if.then1009, %if.else1007
  %619 = load i32, i32* %downmix_output, align 4, !dbg !5948
  %tobool1017 = icmp ne i32 %619, 0, !dbg !5948
  br i1 %tobool1017, label %land.lhs.true1018, label %if.end1029, !dbg !5950

land.lhs.true1018:                                ; preds = %if.end1016
  %620 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5951
  %downmixed1019 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %620, i32 0, i32 74, !dbg !5953
  %621 = load i32, i32* %downmixed1019, align 32, !dbg !5953
  %tobool1020 = icmp ne i32 %621, 0, !dbg !5951
  br i1 %tobool1020, label %if.end1029, label %if.then1021, !dbg !5954

if.then1021:                                      ; preds = %land.lhs.true1018
  %622 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5955
  %downmixed1022 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %622, i32 0, i32 74, !dbg !5957
  store i32 1, i32* %downmixed1022, align 32, !dbg !5958
  %623 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5959
  %ac3dsp1023 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %623, i32 0, i32 111, !dbg !5960
  %624 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5961
  %dlyptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %624, i32 0, i32 115, !dbg !5962
  %arraydecay1024 = getelementptr inbounds [7 x i32*], [7 x i32*]* %dlyptr, i32 0, i32 0, !dbg !5961
  %625 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5963
  %downmix_coeffs1025 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %625, i32 0, i32 73, !dbg !5964
  %arraydecay1026 = getelementptr inbounds [2 x i16*], [2 x i16*]* %downmix_coeffs1025, i32 0, i32 0, !dbg !5963
  %626 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5965
  %out_channels1027 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %626, i32 0, i32 77, !dbg !5966
  %627 = load i32, i32* %out_channels1027, align 4, !dbg !5966
  %628 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5967
  %fbw_channels1028 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %628, i32 0, i32 70, !dbg !5968
  %629 = load i32, i32* %fbw_channels1028, align 4, !dbg !5968
  call void @ff_ac3dsp_downmix_fixed(%struct.AC3DSPContext* %ac3dsp1023, i32** %arraydecay1024, i16** %arraydecay1026, i32 %627, i32 %629, i32 128), !dbg !5969
  br label %if.end1029, !dbg !5970

if.end1029:                                       ; preds = %if.then1021, %land.lhs.true1018, %if.end1016
  %630 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5971
  %631 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5972
  %out_channels1030 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %631, i32 0, i32 77, !dbg !5973
  %632 = load i32, i32* %out_channels1030, align 4, !dbg !5973
  %633 = load i32, i32* %offset.addr, align 4, !dbg !5974
  call void @do_imdct(%struct.AC3DecodeContext* %630, i32 %632, i32 %633), !dbg !5975
  br label %if.end1031

if.end1031:                                       ; preds = %if.end1029, %if.end1006
  store i32 0, i32* %retval, align 4, !dbg !5976
  br label %return, !dbg !5976

return:                                           ; preds = %if.end1031, %if.then887, %if.then708, %if.then682, %if.then555, %if.then446, %if.then373, %if.then258, %if.then129, %if.then110, %if.then103, %if.then65
  %634 = load i32, i32* %retval, align 4, !dbg !5977
  ret i32 %634, !dbg !5977
}

declare i32 @ff_ac3_parse_header(%struct.GetBitContext*, %struct.AC3HeaderInfo*) #2

declare i32 @av_get_channel_layout_nb_channels(i64) #2

declare i32 @av_get_channel_layout_channel_index(i64, i64) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame*, i32) #2

declare %struct.AVDownmixInfo* @av_downmix_info_update_side_data(%struct.AVFrame*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !5978 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5979, metadata !1849), !dbg !5980
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5981, metadata !1849), !dbg !5982
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5983, metadata !1849), !dbg !5984
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5985, metadata !1849), !dbg !5986
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5987, metadata !1849), !dbg !5988
  store i32 0, i32* %ret, align 4, !dbg !5988
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5989
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5991
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5992

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5993
  %cmp1 = icmp slt i32 %1, 0, !dbg !5995
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5996

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5997
  %tobool = icmp ne i8* %2, null, !dbg !5997
  br i1 %tobool, label %if.end, label %if.then, !dbg !5999

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !6000
  store i8* null, i8** %buffer.addr, align 8, !dbg !6002
  store i32 -1094995529, i32* %ret, align 4, !dbg !6003
  br label %if.end, !dbg !6004

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !6005
  %add = add nsw i32 %3, 7, !dbg !6006
  %shr = ashr i32 %add, 3, !dbg !6007
  store i32 %shr, i32* %buffer_size, align 4, !dbg !6008
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !6009
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6010
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !6011
  store i8* %4, i8** %buffer3, align 8, !dbg !6012
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !6013
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6014
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !6015
  store i32 %6, i32* %size_in_bits, align 4, !dbg !6016
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !6017
  %add4 = add nsw i32 %8, 8, !dbg !6018
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6019
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !6020
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !6021
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !6022
  %11 = load i32, i32* %buffer_size, align 4, !dbg !6023
  %idx.ext = sext i32 %11 to i64, !dbg !6024
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !6024
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6025
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !6026
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !6027
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6028
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !6029
  store i32 0, i32* %index, align 8, !dbg !6030
  %14 = load i32, i32* %ret, align 4, !dbg !6031
  ret i32 %14, !dbg !6032
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal i32 @ac3_parse_header(%struct.AC3DecodeContext* %s) #1 !dbg !6033 {
entry:
  %retval.i111 = alloca i32, align 4
  %a.addr.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i112, metadata !6034, metadata !1849), !dbg !6039
  %amin.addr.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i113, metadata !6046, metadata !1849), !dbg !6047
  %amax.addr.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i114, metadata !6048, metadata !1849), !dbg !6049
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6034, metadata !1849), !dbg !6050
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6046, metadata !1849), !dbg !6052
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6048, metadata !1849), !dbg !6053
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %gbc = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !6054, metadata !1849), !dbg !6055
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !6056, metadata !1849), !dbg !6057
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6058
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !6059
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6060, metadata !1849), !dbg !6061
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6062
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 12, !dbg !6063
  %2 = load i32, i32* %channel_mode, align 4, !dbg !6063
  %tobool = icmp ne i32 %2, 0, !dbg !6064
  %lnot = xor i1 %tobool, true, !dbg !6064
  %lnot.ext = zext i1 %lnot to i32, !dbg !6064
  store i32 %lnot.ext, i32* %i, align 4, !dbg !6065
  br label %do.body, !dbg !6066, !llvm.loop !6067

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6068
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 5), !dbg !6070
  %sub = sub i32 0, %call, !dbg !6071
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6072
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 12, !dbg !6073
  %5 = load i32, i32* %channel_mode2, align 4, !dbg !6073
  %tobool3 = icmp ne i32 %5, 0, !dbg !6074
  %lnot4 = xor i1 %tobool3, true, !dbg !6074
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6074
  %6 = load i32, i32* %i, align 4, !dbg !6075
  %sub6 = sub nsw i32 %lnot.ext5, %6, !dbg !6076
  %idxprom = sext i32 %sub6 to i64, !dbg !6077
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6077
  %dialog_normalization = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 14, !dbg !6078
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization, i64 0, i64 %idxprom, !dbg !6077
  store i32 %sub, i32* %arrayidx, align 4, !dbg !6079
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6080
  %channel_mode7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 12, !dbg !6082
  %9 = load i32, i32* %channel_mode7, align 4, !dbg !6082
  %tobool8 = icmp ne i32 %9, 0, !dbg !6083
  %lnot9 = xor i1 %tobool8, true, !dbg !6083
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6083
  %10 = load i32, i32* %i, align 4, !dbg !6084
  %sub11 = sub nsw i32 %lnot.ext10, %10, !dbg !6085
  %idxprom12 = sext i32 %sub11 to i64, !dbg !6086
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6086
  %dialog_normalization13 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 14, !dbg !6087
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization13, i64 0, i64 %idxprom12, !dbg !6086
  %12 = load i32, i32* %arrayidx14, align 4, !dbg !6086
  %cmp = icmp eq i32 %12, 0, !dbg !6088
  br i1 %cmp, label %if.then, label %if.end, !dbg !6089

if.then:                                          ; preds = %do.body
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6090
  %channel_mode15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 12, !dbg !6092
  %14 = load i32, i32* %channel_mode15, align 4, !dbg !6092
  %tobool16 = icmp ne i32 %14, 0, !dbg !6093
  %lnot17 = xor i1 %tobool16, true, !dbg !6093
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6093
  %15 = load i32, i32* %i, align 4, !dbg !6094
  %sub19 = sub nsw i32 %lnot.ext18, %15, !dbg !6095
  %idxprom20 = sext i32 %sub19 to i64, !dbg !6096
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6096
  %dialog_normalization21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 14, !dbg !6097
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization21, i64 0, i64 %idxprom20, !dbg !6096
  store i32 -31, i32* %arrayidx22, align 4, !dbg !6098
  br label %if.end, !dbg !6099

if.end:                                           ; preds = %if.then, %do.body
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6100
  %target_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 36, !dbg !6102
  %18 = load i32, i32* %target_level, align 32, !dbg !6102
  %cmp23 = icmp ne i32 %18, 0, !dbg !6103
  br i1 %cmp23, label %if.then24, label %if.end43, !dbg !6104

if.then24:                                        ; preds = %if.end
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6105
  %target_level25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 36, !dbg !6107
  %20 = load i32, i32* %target_level25, align 32, !dbg !6107
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6108
  %channel_mode26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 12, !dbg !6109
  %22 = load i32, i32* %channel_mode26, align 4, !dbg !6109
  %tobool27 = icmp ne i32 %22, 0, !dbg !6110
  %lnot28 = xor i1 %tobool27, true, !dbg !6110
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !6110
  %23 = load i32, i32* %i, align 4, !dbg !6111
  %sub30 = sub nsw i32 %lnot.ext29, %23, !dbg !6112
  %idxprom31 = sext i32 %sub30 to i64, !dbg !6113
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6113
  %dialog_normalization32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 14, !dbg !6114
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization32, i64 0, i64 %idxprom31, !dbg !6113
  %25 = load i32, i32* %arrayidx33, align 4, !dbg !6113
  %sub34 = sub nsw i32 %20, %25, !dbg !6115
  %conv = sitofp i32 %sub34 to float, !dbg !6116
  %div = fdiv float %conv, 6.000000e+00, !dbg !6117
  %call35 = call float @powf(float 2.000000e+00, float %div) #12, !dbg !6118
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6119
  %channel_mode36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 12, !dbg !6120
  %27 = load i32, i32* %channel_mode36, align 4, !dbg !6120
  %tobool37 = icmp ne i32 %27, 0, !dbg !6121
  %lnot38 = xor i1 %tobool37, true, !dbg !6121
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !6121
  %28 = load i32, i32* %i, align 4, !dbg !6122
  %sub40 = sub nsw i32 %lnot.ext39, %28, !dbg !6123
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6124
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6124
  %level_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 37, !dbg !6125
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %level_gain, i64 0, i64 %idxprom41, !dbg !6124
  store float %call35, float* %arrayidx42, align 4, !dbg !6126
  br label %if.end43, !dbg !6127

if.end43:                                         ; preds = %if.then24, %if.end
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6128
  %call44 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !6130
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6131
  %channel_mode45 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 12, !dbg !6132
  %32 = load i32, i32* %channel_mode45, align 4, !dbg !6132
  %tobool46 = icmp ne i32 %32, 0, !dbg !6133
  %lnot47 = xor i1 %tobool46, true, !dbg !6133
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !6133
  %33 = load i32, i32* %i, align 4, !dbg !6134
  %sub49 = sub nsw i32 %lnot.ext48, %33, !dbg !6135
  %idxprom50 = sext i32 %sub49 to i64, !dbg !6136
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6136
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 15, !dbg !6137
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom50, !dbg !6136
  store i32 %call44, i32* %arrayidx51, align 4, !dbg !6138
  %tobool52 = icmp ne i32 %call44, 0, !dbg !6138
  br i1 %tobool52, label %if.then53, label %if.end62, !dbg !6139

if.then53:                                        ; preds = %if.end43
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6140
  %call54 = call i32 @get_bits(%struct.GetBitContext* %35, i32 8), !dbg !6142
  %shl = shl i32 %call54, 1, !dbg !6143
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6144
  %channel_mode55 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 12, !dbg !6145
  %37 = load i32, i32* %channel_mode55, align 4, !dbg !6145
  %tobool56 = icmp ne i32 %37, 0, !dbg !6146
  %lnot57 = xor i1 %tobool56, true, !dbg !6146
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !6146
  %38 = load i32, i32* %i, align 4, !dbg !6147
  %sub59 = sub nsw i32 %lnot.ext58, %38, !dbg !6148
  %idxprom60 = sext i32 %sub59 to i64, !dbg !6149
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6149
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 82, !dbg !6150
  %arrayidx61 = getelementptr inbounds [2 x i32], [2 x i32]* %heavy_dynamic_range, i64 0, i64 %idxprom60, !dbg !6149
  store i32 %shl, i32* %arrayidx61, align 4, !dbg !6151
  br label %if.end62, !dbg !6152

if.end62:                                         ; preds = %if.then53, %if.end43
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6153
  %call63 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !6155
  %tobool64 = icmp ne i32 %call63, 0, !dbg !6155
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !6156

if.then65:                                        ; preds = %if.end62
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6157
  call void @skip_bits(%struct.GetBitContext* %41, i32 8), !dbg !6158
  br label %if.end66, !dbg !6158

if.end66:                                         ; preds = %if.then65, %if.end62
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6159
  %call67 = call i32 @get_bits1(%struct.GetBitContext* %42), !dbg !6161
  %tobool68 = icmp ne i32 %call67, 0, !dbg !6161
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6162

if.then69:                                        ; preds = %if.end66
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6163
  call void @skip_bits(%struct.GetBitContext* %43, i32 7), !dbg !6164
  br label %if.end70, !dbg !6164

if.end70:                                         ; preds = %if.then69, %if.end66
  br label %do.cond, !dbg !6165

do.cond:                                          ; preds = %if.end70
  %44 = load i32, i32* %i, align 4, !dbg !6166
  %dec = add nsw i32 %44, -1, !dbg !6166
  store i32 %dec, i32* %i, align 4, !dbg !6166
  %tobool71 = icmp ne i32 %44, 0, !dbg !6168
  br i1 %tobool71, label %do.body, label %do.end, !dbg !6168, !llvm.loop !6067

do.end:                                           ; preds = %do.cond
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6169
  call void @skip_bits(%struct.GetBitContext* %45, i32 2), !dbg !6170
  %46 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6171
  %bitstream_id = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %46, i32 0, i32 10, !dbg !6172
  %47 = load i32, i32* %bitstream_id, align 4, !dbg !6172
  %cmp72 = icmp ne i32 %47, 6, !dbg !6173
  br i1 %cmp72, label %if.then74, label %if.else, !dbg !6174

if.then74:                                        ; preds = %do.end
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6175
  %call75 = call i32 @get_bits1(%struct.GetBitContext* %48), !dbg !6178
  %tobool76 = icmp ne i32 %call75, 0, !dbg !6178
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !6179

if.then77:                                        ; preds = %if.then74
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6180
  call void @skip_bits(%struct.GetBitContext* %49, i32 14), !dbg !6181
  br label %if.end78, !dbg !6181

if.end78:                                         ; preds = %if.then77, %if.then74
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6182
  %call79 = call i32 @get_bits1(%struct.GetBitContext* %50), !dbg !6184
  %tobool80 = icmp ne i32 %call79, 0, !dbg !6184
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !6185

if.then81:                                        ; preds = %if.end78
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6186
  call void @skip_bits(%struct.GetBitContext* %51, i32 14), !dbg !6187
  br label %if.end82, !dbg !6187

if.end82:                                         ; preds = %if.then81, %if.end78
  br label %if.end100, !dbg !6188

if.else:                                          ; preds = %do.end
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6189
  %call83 = call i32 @get_bits1(%struct.GetBitContext* %52), !dbg !6190
  %tobool84 = icmp ne i32 %call83, 0, !dbg !6190
  br i1 %tobool84, label %if.then85, label %if.end93, !dbg !6191

if.then85:                                        ; preds = %if.else
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6192
  %call86 = call i32 @get_bits(%struct.GetBitContext* %53, i32 2), !dbg !6193
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6194
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 18, !dbg !6195
  store i32 %call86, i32* %preferred_downmix, align 8, !dbg !6196
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6197
  %call87 = call i32 @get_bits(%struct.GetBitContext* %55, i32 3), !dbg !6198
  %56 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6199
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %56, i32 0, i32 20, !dbg !6200
  store i32 %call87, i32* %center_mix_level_ltrt, align 32, !dbg !6201
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6202
  %call88 = call i32 @get_bits(%struct.GetBitContext* %57, i32 3), !dbg !6203
  store i32 %call88, i32* %a.addr.i, align 4, !dbg !6204
  store i32 3, i32* %amin.addr.i, align 4, !dbg !6204
  store i32 7, i32* %amax.addr.i, align 4, !dbg !6204
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !6205
  %59 = load i32, i32* %amin.addr.i, align 4, !dbg !6207
  %cmp.i = icmp slt i32 %58, %59, !dbg !6208
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6209

if.then.i:                                        ; preds = %if.then85
  %60 = load i32, i32* %amin.addr.i, align 4, !dbg !6210
  store i32 %60, i32* %retval.i, align 4, !dbg !6212
  br label %av_clip_c.exit, !dbg !6212

if.else.i:                                        ; preds = %if.then85
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !6213
  %62 = load i32, i32* %amax.addr.i, align 4, !dbg !6215
  %cmp1.i = icmp sgt i32 %61, %62, !dbg !6216
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6217

if.then2.i:                                       ; preds = %if.else.i
  %63 = load i32, i32* %amax.addr.i, align 4, !dbg !6218
  store i32 %63, i32* %retval.i, align 4, !dbg !6220
  br label %av_clip_c.exit, !dbg !6220

if.else3.i:                                       ; preds = %if.else.i
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !6221
  store i32 %64, i32* %retval.i, align 4, !dbg !6222
  br label %av_clip_c.exit, !dbg !6222

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %65 = load i32, i32* %retval.i, align 4, !dbg !6223
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6224
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 22, !dbg !6225
  store i32 %65, i32* %surround_mix_level_ltrt, align 8, !dbg !6226
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6227
  %call90 = call i32 @get_bits(%struct.GetBitContext* %67, i32 3), !dbg !6228
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6229
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 19, !dbg !6230
  store i32 %call90, i32* %center_mix_level, align 4, !dbg !6231
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6232
  %call91 = call i32 @get_bits(%struct.GetBitContext* %69, i32 3), !dbg !6233
  store i32 %call91, i32* %a.addr.i112, align 4, !dbg !6234
  store i32 3, i32* %amin.addr.i113, align 4, !dbg !6234
  store i32 7, i32* %amax.addr.i114, align 4, !dbg !6234
  %70 = load i32, i32* %a.addr.i112, align 4, !dbg !6235
  %71 = load i32, i32* %amin.addr.i113, align 4, !dbg !6236
  %cmp.i115 = icmp slt i32 %70, %71, !dbg !6237
  br i1 %cmp.i115, label %if.then.i116, label %if.else.i118, !dbg !6238

if.then.i116:                                     ; preds = %av_clip_c.exit
  %72 = load i32, i32* %amin.addr.i113, align 4, !dbg !6239
  store i32 %72, i32* %retval.i111, align 4, !dbg !6240
  br label %av_clip_c.exit121, !dbg !6240

if.else.i118:                                     ; preds = %av_clip_c.exit
  %73 = load i32, i32* %a.addr.i112, align 4, !dbg !6241
  %74 = load i32, i32* %amax.addr.i114, align 4, !dbg !6242
  %cmp1.i117 = icmp sgt i32 %73, %74, !dbg !6243
  br i1 %cmp1.i117, label %if.then2.i119, label %if.else3.i120, !dbg !6244

if.then2.i119:                                    ; preds = %if.else.i118
  %75 = load i32, i32* %amax.addr.i114, align 4, !dbg !6245
  store i32 %75, i32* %retval.i111, align 4, !dbg !6246
  br label %av_clip_c.exit121, !dbg !6246

if.else3.i120:                                    ; preds = %if.else.i118
  %76 = load i32, i32* %a.addr.i112, align 4, !dbg !6247
  store i32 %76, i32* %retval.i111, align 4, !dbg !6248
  br label %av_clip_c.exit121, !dbg !6248

av_clip_c.exit121:                                ; preds = %if.then.i116, %if.then2.i119, %if.else3.i120
  %77 = load i32, i32* %retval.i111, align 4, !dbg !6249
  %78 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6250
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %78, i32 0, i32 21, !dbg !6251
  store i32 %77, i32* %surround_mix_level, align 4, !dbg !6252
  br label %if.end93, !dbg !6253

if.end93:                                         ; preds = %av_clip_c.exit121, %if.else
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6254
  %call94 = call i32 @get_bits1(%struct.GetBitContext* %79), !dbg !6256
  %tobool95 = icmp ne i32 %call94, 0, !dbg !6256
  br i1 %tobool95, label %if.then96, label %if.end99, !dbg !6257

if.then96:                                        ; preds = %if.end93
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6258
  %call97 = call i32 @get_bits(%struct.GetBitContext* %80, i32 2), !dbg !6260
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6261
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %81, i32 0, i32 29, !dbg !6262
  store i32 %call97, i32* %dolby_surround_ex_mode, align 4, !dbg !6263
  %82 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6264
  %call98 = call i32 @get_bits(%struct.GetBitContext* %82, i32 2), !dbg !6265
  %83 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6266
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %83, i32 0, i32 30, !dbg !6267
  store i32 %call98, i32* %dolby_headphone_mode, align 8, !dbg !6268
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6269
  call void @skip_bits(%struct.GetBitContext* %84, i32 10), !dbg !6270
  br label %if.end99, !dbg !6271

if.end99:                                         ; preds = %if.then96, %if.end93
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end82
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6272
  %call101 = call i32 @get_bits1(%struct.GetBitContext* %85), !dbg !6274
  %tobool102 = icmp ne i32 %call101, 0, !dbg !6274
  br i1 %tobool102, label %if.then103, label %if.end110, !dbg !6275

if.then103:                                       ; preds = %if.end100
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6276
  %call104 = call i32 @get_bits(%struct.GetBitContext* %86, i32 6), !dbg !6278
  store i32 %call104, i32* %i, align 4, !dbg !6279
  br label %do.body105, !dbg !6280, !llvm.loop !6281

do.body105:                                       ; preds = %do.cond106, %if.then103
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6282
  call void @skip_bits(%struct.GetBitContext* %87, i32 8), !dbg !6284
  br label %do.cond106, !dbg !6285

do.cond106:                                       ; preds = %do.body105
  %88 = load i32, i32* %i, align 4, !dbg !6286
  %dec107 = add nsw i32 %88, -1, !dbg !6286
  store i32 %dec107, i32* %i, align 4, !dbg !6286
  %tobool108 = icmp ne i32 %88, 0, !dbg !6288
  br i1 %tobool108, label %do.body105, label %do.end109, !dbg !6288, !llvm.loop !6281

do.end109:                                        ; preds = %do.cond106
  br label %if.end110, !dbg !6289

if.end110:                                        ; preds = %do.end109, %if.end100
  ret i32 0, !dbg !6290
}

; Function Attrs: nounwind uwtable
define internal i32 @ff_eac3_parse_header(%struct.AC3DecodeContext* %s) #1 !dbg !6291 {
entry:
  %retval.i568 = alloca i32, align 4
  %a.addr.i569 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i569, metadata !6034, metadata !1849), !dbg !6292
  %amin.addr.i570 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i570, metadata !6046, metadata !1849), !dbg !6301
  %amax.addr.i571 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i571, metadata !6048, metadata !1849), !dbg !6302
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6034, metadata !1849), !dbg !6303
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6046, metadata !1849), !dbg !6305
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6048, metadata !1849), !dbg !6306
  %x.addr.i3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i3.i, metadata !6307, metadata !1849), !dbg !6311
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6307, metadata !1849), !dbg !6323
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6325, metadata !1849), !dbg !6326
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %ac3_exponent_strategy = alloca i32, align 4
  %parse_aht_info = alloca i32, align 4
  %parse_spx_atten_data = alloca i32, align 4
  %parse_transient_proc_info = alloca i32, align 4
  %num_cpl_blocks = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %channel_layout = alloca i64, align 8
  %channel_map = alloca i32, align 4
  %mix_data_size = alloca i32, align 4
  %addbsil = alloca i32, align 4
  %frmchexpstr = alloca i32, align 4
  %use_aht = alloca i32, align 4
  %csnroffst = alloca i32, align 4
  %snroffst = alloca i32, align 4
  %block_start_bits = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !6327, metadata !1849), !dbg !6328
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6329, metadata !1849), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !6331, metadata !1849), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6333, metadata !1849), !dbg !6334
  call void @llvm.dbg.declare(metadata i32* %ac3_exponent_strategy, metadata !6335, metadata !1849), !dbg !6336
  call void @llvm.dbg.declare(metadata i32* %parse_aht_info, metadata !6337, metadata !1849), !dbg !6338
  call void @llvm.dbg.declare(metadata i32* %parse_spx_atten_data, metadata !6339, metadata !1849), !dbg !6340
  call void @llvm.dbg.declare(metadata i32* %parse_transient_proc_info, metadata !6341, metadata !1849), !dbg !6342
  call void @llvm.dbg.declare(metadata i32* %num_cpl_blocks, metadata !6343, metadata !1849), !dbg !6344
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !6345, metadata !1849), !dbg !6346
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6347
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !6348
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !6346
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6349
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 3, !dbg !6351
  %2 = load i32, i32* %frame_type, align 16, !dbg !6351
  %cmp = icmp eq i32 %2, 3, !dbg !6352
  br i1 %cmp, label %if.then, label %if.end, !dbg !6353

if.then:                                          ; preds = %entry
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6354
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 1, !dbg !6356
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6356
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !6354
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0)), !dbg !6357
  store i32 -84085770, i32* %retval, align 4, !dbg !6358
  br label %return, !dbg !6358

if.end:                                           ; preds = %entry
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6359
  %substreamid = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 4, !dbg !6361
  %7 = load i32, i32* %substreamid, align 4, !dbg !6361
  %tobool = icmp ne i32 %7, 0, !dbg !6359
  br i1 %tobool, label %if.then2, label %if.end8, !dbg !6362

if.then2:                                         ; preds = %if.end
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6363
  %eac3_subsbtreamid_found = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 27, !dbg !6366
  %9 = load i32, i32* %eac3_subsbtreamid_found, align 4, !dbg !6366
  %tobool3 = icmp ne i32 %9, 0, !dbg !6363
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !6367

if.then4:                                         ; preds = %if.then2
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6368
  %eac3_subsbtreamid_found5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 27, !dbg !6370
  store i32 1, i32* %eac3_subsbtreamid_found5, align 4, !dbg !6371
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6372
  %avctx6 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 1, !dbg !6373
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !6373
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !6372
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0)), !dbg !6374
  br label %if.end7, !dbg !6375

if.end7:                                          ; preds = %if.then4, %if.then2
  store i32 -84085770, i32* %retval, align 4, !dbg !6376
  br label %return, !dbg !6376

if.end8:                                          ; preds = %if.end
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6377
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 91, !dbg !6379
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 0, !dbg !6380
  %15 = load i32, i32* %sr_code, align 32, !dbg !6380
  %cmp9 = icmp eq i32 %15, 3, !dbg !6381
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6382

if.then10:                                        ; preds = %if.end8
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6383
  %avctx11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 1, !dbg !6385
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !6385
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !6383
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0)), !dbg !6386
  store i32 -1163346256, i32* %retval, align 4, !dbg !6387
  br label %return, !dbg !6387

if.end12:                                         ; preds = %if.end8
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6388
  call void @skip_bits(%struct.GetBitContext* %19, i32 5), !dbg !6389
  store i32 0, i32* %i, align 4, !dbg !6390
  br label %for.cond, !dbg !6392

for.cond:                                         ; preds = %for.inc, %if.end12
  %20 = load i32, i32* %i, align 4, !dbg !6393
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6396
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 12, !dbg !6397
  %22 = load i32, i32* %channel_mode, align 4, !dbg !6397
  %tobool13 = icmp ne i32 %22, 0, !dbg !6396
  %cond = select i1 %tobool13, i32 1, i32 2, !dbg !6396
  %cmp14 = icmp slt i32 %20, %cond, !dbg !6398
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6399

for.body:                                         ; preds = %for.cond
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6400
  %call = call i32 @get_bits(%struct.GetBitContext* %23, i32 5), !dbg !6402
  %sub = sub i32 0, %call, !dbg !6403
  %24 = load i32, i32* %i, align 4, !dbg !6404
  %idxprom = sext i32 %24 to i64, !dbg !6405
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6405
  %dialog_normalization = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 14, !dbg !6406
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization, i64 0, i64 %idxprom, !dbg !6405
  store i32 %sub, i32* %arrayidx, align 4, !dbg !6407
  %26 = load i32, i32* %i, align 4, !dbg !6408
  %idxprom15 = sext i32 %26 to i64, !dbg !6410
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6410
  %dialog_normalization16 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 14, !dbg !6411
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization16, i64 0, i64 %idxprom15, !dbg !6410
  %28 = load i32, i32* %arrayidx17, align 4, !dbg !6410
  %cmp18 = icmp eq i32 %28, 0, !dbg !6412
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !6413

if.then19:                                        ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom20 = sext i32 %29 to i64, !dbg !6416
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6416
  %dialog_normalization21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 14, !dbg !6417
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization21, i64 0, i64 %idxprom20, !dbg !6416
  store i32 -31, i32* %arrayidx22, align 4, !dbg !6418
  br label %if.end23, !dbg !6419

if.end23:                                         ; preds = %if.then19, %for.body
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6420
  %target_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 36, !dbg !6422
  %32 = load i32, i32* %target_level, align 32, !dbg !6422
  %cmp24 = icmp ne i32 %32, 0, !dbg !6423
  br i1 %cmp24, label %if.then25, label %if.end34, !dbg !6424

if.then25:                                        ; preds = %if.end23
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6425
  %target_level26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 36, !dbg !6427
  %34 = load i32, i32* %target_level26, align 32, !dbg !6427
  %35 = load i32, i32* %i, align 4, !dbg !6428
  %idxprom27 = sext i32 %35 to i64, !dbg !6429
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6429
  %dialog_normalization28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 14, !dbg !6430
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization28, i64 0, i64 %idxprom27, !dbg !6429
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !6429
  %sub30 = sub nsw i32 %34, %37, !dbg !6431
  %conv = sitofp i32 %sub30 to float, !dbg !6432
  %div = fdiv float %conv, 6.000000e+00, !dbg !6433
  %call31 = call float @powf(float 2.000000e+00, float %div) #12, !dbg !6434
  %38 = load i32, i32* %i, align 4, !dbg !6435
  %idxprom32 = sext i32 %38 to i64, !dbg !6436
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6436
  %level_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 37, !dbg !6437
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %level_gain, i64 0, i64 %idxprom32, !dbg !6436
  store float %call31, float* %arrayidx33, align 4, !dbg !6438
  br label %if.end34, !dbg !6439

if.end34:                                         ; preds = %if.then25, %if.end23
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6440
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !6441
  %41 = load i32, i32* %i, align 4, !dbg !6442
  %idxprom36 = sext i32 %41 to i64, !dbg !6443
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6443
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 15, !dbg !6444
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom36, !dbg !6443
  store i32 %call35, i32* %arrayidx37, align 4, !dbg !6445
  %43 = load i32, i32* %i, align 4, !dbg !6446
  %idxprom38 = sext i32 %43 to i64, !dbg !6448
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6448
  %compression_exists39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 15, !dbg !6449
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists39, i64 0, i64 %idxprom38, !dbg !6448
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !6448
  %tobool41 = icmp ne i32 %45, 0, !dbg !6448
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !6450

if.then42:                                        ; preds = %if.end34
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6451
  %call43 = call i32 @get_bits(%struct.GetBitContext* %46, i32 8), !dbg !6453
  %shl = shl i32 %call43, 1, !dbg !6454
  %47 = load i32, i32* %i, align 4, !dbg !6455
  %idxprom44 = sext i32 %47 to i64, !dbg !6456
  %48 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6456
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %48, i32 0, i32 82, !dbg !6457
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %heavy_dynamic_range, i64 0, i64 %idxprom44, !dbg !6456
  store i32 %shl, i32* %arrayidx45, align 4, !dbg !6458
  br label %if.end46, !dbg !6459

if.end46:                                         ; preds = %if.then42, %if.end34
  br label %for.inc, !dbg !6460

for.inc:                                          ; preds = %if.end46
  %49 = load i32, i32* %i, align 4, !dbg !6461
  %inc = add nsw i32 %49, 1, !dbg !6461
  store i32 %inc, i32* %i, align 4, !dbg !6461
  br label %for.cond, !dbg !6463, !llvm.loop !6464

for.end:                                          ; preds = %for.cond
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6466
  %frame_type47 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 3, !dbg !6467
  %51 = load i32, i32* %frame_type47, align 16, !dbg !6467
  %cmp48 = icmp eq i32 %51, 1, !dbg !6468
  br i1 %cmp48, label %if.then50, label %if.end79, !dbg !6469

if.then50:                                        ; preds = %for.end
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6470
  %call51 = call i32 @get_bits1(%struct.GetBitContext* %52), !dbg !6471
  %tobool52 = icmp ne i32 %call51, 0, !dbg !6471
  br i1 %tobool52, label %if.then53, label %if.end78, !dbg !6472

if.then53:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata i64* %channel_layout, metadata !6473, metadata !1849), !dbg !6474
  store i64 0, i64* %channel_layout, align 8, !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %channel_map, metadata !6475, metadata !1849), !dbg !6476
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6477
  %call54 = call i32 @get_bits(%struct.GetBitContext* %53, i32 16), !dbg !6478
  store i32 %call54, i32* %channel_map, align 4, !dbg !6476
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6479
  %avctx55 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 1, !dbg !6480
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx55, align 8, !dbg !6480
  %56 = bitcast %struct.AVCodecContext* %55 to i8*, !dbg !6479
  %57 = load i32, i32* %channel_map, align 4, !dbg !6481
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i32 %57), !dbg !6482
  store i32 0, i32* %i, align 4, !dbg !6483
  br label %for.cond56, !dbg !6485

for.cond56:                                       ; preds = %for.inc69, %if.then53
  %58 = load i32, i32* %i, align 4, !dbg !6486
  %cmp57 = icmp slt i32 %58, 16, !dbg !6489
  br i1 %cmp57, label %for.body59, label %for.end71, !dbg !6490

for.body59:                                       ; preds = %for.cond56
  %59 = load i32, i32* %channel_map, align 4, !dbg !6491
  %60 = load i32, i32* %i, align 4, !dbg !6493
  %sub60 = sub nsw i32 16, %60, !dbg !6494
  %sub61 = sub nsw i32 %sub60, 1, !dbg !6495
  %shl62 = shl i32 1, %sub61, !dbg !6496
  %and = and i32 %59, %shl62, !dbg !6497
  %tobool63 = icmp ne i32 %and, 0, !dbg !6497
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !6498

if.then64:                                        ; preds = %for.body59
  %61 = load i32, i32* %i, align 4, !dbg !6499
  %idxprom65 = sext i32 %61 to i64, !dbg !6500
  %arrayidx66 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom65, !dbg !6500
  %arrayidx67 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx66, i64 0, i64 1, !dbg !6500
  %62 = load i64, i64* %arrayidx67, align 8, !dbg !6500
  %63 = load i64, i64* %channel_layout, align 8, !dbg !6501
  %or = or i64 %63, %62, !dbg !6501
  store i64 %or, i64* %channel_layout, align 8, !dbg !6501
  br label %if.end68, !dbg !6502

if.end68:                                         ; preds = %if.then64, %for.body59
  br label %for.inc69, !dbg !6503

for.inc69:                                        ; preds = %if.end68
  %64 = load i32, i32* %i, align 4, !dbg !6505
  %inc70 = add nsw i32 %64, 1, !dbg !6505
  store i32 %inc70, i32* %i, align 4, !dbg !6505
  br label %for.cond56, !dbg !6507, !llvm.loop !6508

for.end71:                                        ; preds = %for.cond56
  %65 = load i64, i64* %channel_layout, align 8, !dbg !6510
  store i64 %65, i64* %x.addr.i, align 8, !dbg !6511
  %66 = load i64, i64* %x.addr.i, align 8, !dbg !6512
  %conv.i = trunc i64 %66 to i32, !dbg !6513
  store i32 %conv.i, i32* %x.addr.i.i, align 4, !dbg !6514
  %67 = load i32, i32* %x.addr.i.i, align 4, !dbg !6515
  %shr.i.i = lshr i32 %67, 1, !dbg !6516
  %and.i.i = and i32 %shr.i.i, 1431655765, !dbg !6517
  %68 = load i32, i32* %x.addr.i.i, align 4, !dbg !6518
  %sub.i.i = sub i32 %68, %and.i.i, !dbg !6518
  store i32 %sub.i.i, i32* %x.addr.i.i, align 4, !dbg !6518
  %69 = load i32, i32* %x.addr.i.i, align 4, !dbg !6519
  %and1.i.i = and i32 %69, 858993459, !dbg !6520
  %70 = load i32, i32* %x.addr.i.i, align 4, !dbg !6521
  %shr2.i.i = lshr i32 %70, 2, !dbg !6522
  %and3.i.i = and i32 %shr2.i.i, 858993459, !dbg !6523
  %add.i.i = add i32 %and1.i.i, %and3.i.i, !dbg !6524
  store i32 %add.i.i, i32* %x.addr.i.i, align 4, !dbg !6525
  %71 = load i32, i32* %x.addr.i.i, align 4, !dbg !6526
  %72 = load i32, i32* %x.addr.i.i, align 4, !dbg !6527
  %shr4.i.i = lshr i32 %72, 4, !dbg !6528
  %add5.i.i = add i32 %71, %shr4.i.i, !dbg !6529
  %and6.i.i = and i32 %add5.i.i, 252645135, !dbg !6530
  store i32 %and6.i.i, i32* %x.addr.i.i, align 4, !dbg !6531
  %73 = load i32, i32* %x.addr.i.i, align 4, !dbg !6532
  %shr7.i.i = lshr i32 %73, 8, !dbg !6533
  %74 = load i32, i32* %x.addr.i.i, align 4, !dbg !6534
  %add8.i.i = add i32 %74, %shr7.i.i, !dbg !6534
  store i32 %add8.i.i, i32* %x.addr.i.i, align 4, !dbg !6534
  %75 = load i32, i32* %x.addr.i.i, align 4, !dbg !6535
  %76 = load i32, i32* %x.addr.i.i, align 4, !dbg !6536
  %shr9.i.i = lshr i32 %76, 16, !dbg !6537
  %add10.i.i = add i32 %75, %shr9.i.i, !dbg !6538
  %and11.i.i = and i32 %add10.i.i, 63, !dbg !6539
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6540
  %shr.i = lshr i64 %77, 32, !dbg !6541
  %conv1.i = trunc i64 %shr.i to i32, !dbg !6542
  store i32 %conv1.i, i32* %x.addr.i3.i, align 4, !dbg !6543
  %78 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6544
  %shr.i4.i = lshr i32 %78, 1, !dbg !6545
  %and.i5.i = and i32 %shr.i4.i, 1431655765, !dbg !6546
  %79 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6547
  %sub.i6.i = sub i32 %79, %and.i5.i, !dbg !6547
  store i32 %sub.i6.i, i32* %x.addr.i3.i, align 4, !dbg !6547
  %80 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6548
  %and1.i7.i = and i32 %80, 858993459, !dbg !6549
  %81 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6550
  %shr2.i8.i = lshr i32 %81, 2, !dbg !6551
  %and3.i9.i = and i32 %shr2.i8.i, 858993459, !dbg !6552
  %add.i10.i = add i32 %and1.i7.i, %and3.i9.i, !dbg !6553
  store i32 %add.i10.i, i32* %x.addr.i3.i, align 4, !dbg !6554
  %82 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6555
  %83 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6556
  %shr4.i11.i = lshr i32 %83, 4, !dbg !6557
  %add5.i12.i = add i32 %82, %shr4.i11.i, !dbg !6558
  %and6.i13.i = and i32 %add5.i12.i, 252645135, !dbg !6559
  store i32 %and6.i13.i, i32* %x.addr.i3.i, align 4, !dbg !6560
  %84 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6561
  %shr7.i14.i = lshr i32 %84, 8, !dbg !6562
  %85 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6563
  %add8.i15.i = add i32 %85, %shr7.i14.i, !dbg !6563
  store i32 %add8.i15.i, i32* %x.addr.i3.i, align 4, !dbg !6563
  %86 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6564
  %87 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6565
  %shr9.i16.i = lshr i32 %87, 16, !dbg !6566
  %add10.i17.i = add i32 %86, %shr9.i16.i, !dbg !6567
  %and11.i18.i = and i32 %add10.i17.i, 63, !dbg !6568
  %add.i = add nsw i32 %and11.i.i, %and11.i18.i, !dbg !6569
  %cmp73 = icmp sgt i32 %add.i, 16, !dbg !6570
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !6571

if.then75:                                        ; preds = %for.end71
  store i32 -1094995529, i32* %retval, align 4, !dbg !6572
  br label %return, !dbg !6572

if.end76:                                         ; preds = %for.end71
  %88 = load i32, i32* %channel_map, align 4, !dbg !6574
  %89 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6575
  %channel_map77 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %89, i32 0, i32 17, !dbg !6576
  store i32 %88, i32* %channel_map77, align 4, !dbg !6577
  br label %if.end78, !dbg !6578

if.end78:                                         ; preds = %if.end76, %if.then50
  br label %if.end79, !dbg !6579

if.end79:                                         ; preds = %if.end78, %for.end
  %90 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6580
  %call80 = call i32 @get_bits1(%struct.GetBitContext* %90), !dbg !6581
  %tobool81 = icmp ne i32 %call80, 0, !dbg !6581
  br i1 %tobool81, label %if.then82, label %if.end176, !dbg !6582

if.then82:                                        ; preds = %if.end79
  %91 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6583
  %channel_mode83 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %91, i32 0, i32 12, !dbg !6584
  %92 = load i32, i32* %channel_mode83, align 4, !dbg !6584
  %cmp84 = icmp sgt i32 %92, 2, !dbg !6585
  br i1 %cmp84, label %if.then86, label %if.end104, !dbg !6586

if.then86:                                        ; preds = %if.then82
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6587
  %call87 = call i32 @get_bits(%struct.GetBitContext* %93, i32 2), !dbg !6588
  %94 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6589
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %94, i32 0, i32 18, !dbg !6590
  store i32 %call87, i32* %preferred_downmix, align 8, !dbg !6591
  %95 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6592
  %channel_mode88 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %95, i32 0, i32 12, !dbg !6594
  %96 = load i32, i32* %channel_mode88, align 4, !dbg !6594
  %and89 = and i32 %96, 1, !dbg !6595
  %tobool90 = icmp ne i32 %and89, 0, !dbg !6595
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !6596

if.then91:                                        ; preds = %if.then86
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6597
  %call92 = call i32 @get_bits(%struct.GetBitContext* %97, i32 3), !dbg !6599
  %98 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6600
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %98, i32 0, i32 20, !dbg !6601
  store i32 %call92, i32* %center_mix_level_ltrt, align 32, !dbg !6602
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6603
  %call93 = call i32 @get_bits(%struct.GetBitContext* %99, i32 3), !dbg !6604
  %100 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6605
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %100, i32 0, i32 19, !dbg !6606
  store i32 %call93, i32* %center_mix_level, align 4, !dbg !6607
  br label %if.end94, !dbg !6608

if.end94:                                         ; preds = %if.then91, %if.then86
  %101 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6609
  %channel_mode95 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %101, i32 0, i32 12, !dbg !6610
  %102 = load i32, i32* %channel_mode95, align 4, !dbg !6610
  %and96 = and i32 %102, 4, !dbg !6611
  %tobool97 = icmp ne i32 %and96, 0, !dbg !6611
  br i1 %tobool97, label %if.then98, label %if.end103, !dbg !6612

if.then98:                                        ; preds = %if.end94
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6613
  %call99 = call i32 @get_bits(%struct.GetBitContext* %103, i32 3), !dbg !6614
  store i32 %call99, i32* %a.addr.i, align 4, !dbg !6615
  store i32 3, i32* %amin.addr.i, align 4, !dbg !6615
  store i32 7, i32* %amax.addr.i, align 4, !dbg !6615
  %104 = load i32, i32* %a.addr.i, align 4, !dbg !6616
  %105 = load i32, i32* %amin.addr.i, align 4, !dbg !6617
  %cmp.i = icmp slt i32 %104, %105, !dbg !6618
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6619

if.then.i:                                        ; preds = %if.then98
  %106 = load i32, i32* %amin.addr.i, align 4, !dbg !6620
  store i32 %106, i32* %retval.i, align 4, !dbg !6621
  br label %av_clip_c.exit, !dbg !6621

if.else.i:                                        ; preds = %if.then98
  %107 = load i32, i32* %a.addr.i, align 4, !dbg !6622
  %108 = load i32, i32* %amax.addr.i, align 4, !dbg !6623
  %cmp1.i = icmp sgt i32 %107, %108, !dbg !6624
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6625

if.then2.i:                                       ; preds = %if.else.i
  %109 = load i32, i32* %amax.addr.i, align 4, !dbg !6626
  store i32 %109, i32* %retval.i, align 4, !dbg !6627
  br label %av_clip_c.exit, !dbg !6627

if.else3.i:                                       ; preds = %if.else.i
  %110 = load i32, i32* %a.addr.i, align 4, !dbg !6628
  store i32 %110, i32* %retval.i, align 4, !dbg !6629
  br label %av_clip_c.exit, !dbg !6629

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %111 = load i32, i32* %retval.i, align 4, !dbg !6630
  %112 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6631
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %112, i32 0, i32 22, !dbg !6632
  store i32 %111, i32* %surround_mix_level_ltrt, align 8, !dbg !6633
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6634
  %call101 = call i32 @get_bits(%struct.GetBitContext* %113, i32 3), !dbg !6635
  store i32 %call101, i32* %a.addr.i569, align 4, !dbg !6636
  store i32 3, i32* %amin.addr.i570, align 4, !dbg !6636
  store i32 7, i32* %amax.addr.i571, align 4, !dbg !6636
  %114 = load i32, i32* %a.addr.i569, align 4, !dbg !6637
  %115 = load i32, i32* %amin.addr.i570, align 4, !dbg !6638
  %cmp.i572 = icmp slt i32 %114, %115, !dbg !6639
  br i1 %cmp.i572, label %if.then.i573, label %if.else.i575, !dbg !6640

if.then.i573:                                     ; preds = %av_clip_c.exit
  %116 = load i32, i32* %amin.addr.i570, align 4, !dbg !6641
  store i32 %116, i32* %retval.i568, align 4, !dbg !6642
  br label %av_clip_c.exit578, !dbg !6642

if.else.i575:                                     ; preds = %av_clip_c.exit
  %117 = load i32, i32* %a.addr.i569, align 4, !dbg !6643
  %118 = load i32, i32* %amax.addr.i571, align 4, !dbg !6644
  %cmp1.i574 = icmp sgt i32 %117, %118, !dbg !6645
  br i1 %cmp1.i574, label %if.then2.i576, label %if.else3.i577, !dbg !6646

if.then2.i576:                                    ; preds = %if.else.i575
  %119 = load i32, i32* %amax.addr.i571, align 4, !dbg !6647
  store i32 %119, i32* %retval.i568, align 4, !dbg !6648
  br label %av_clip_c.exit578, !dbg !6648

if.else3.i577:                                    ; preds = %if.else.i575
  %120 = load i32, i32* %a.addr.i569, align 4, !dbg !6649
  store i32 %120, i32* %retval.i568, align 4, !dbg !6650
  br label %av_clip_c.exit578, !dbg !6650

av_clip_c.exit578:                                ; preds = %if.then.i573, %if.then2.i576, %if.else3.i577
  %121 = load i32, i32* %retval.i568, align 4, !dbg !6651
  %122 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6652
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %122, i32 0, i32 21, !dbg !6653
  store i32 %121, i32* %surround_mix_level, align 4, !dbg !6654
  br label %if.end103, !dbg !6655

if.end103:                                        ; preds = %av_clip_c.exit578, %if.end94
  br label %if.end104, !dbg !6656

if.end104:                                        ; preds = %if.end103, %if.then82
  %123 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6657
  %lfe_on = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %123, i32 0, i32 13, !dbg !6659
  %124 = load i32, i32* %lfe_on, align 8, !dbg !6659
  %tobool105 = icmp ne i32 %124, 0, !dbg !6657
  br i1 %tobool105, label %land.lhs.true, label %if.end110, !dbg !6660

land.lhs.true:                                    ; preds = %if.end104
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6661
  %call106 = call i32 @get_bits1(%struct.GetBitContext* %125), !dbg !6663
  %126 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6664
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %126, i32 0, i32 23, !dbg !6665
  store i32 %call106, i32* %lfe_mix_level_exists, align 4, !dbg !6666
  %tobool107 = icmp ne i32 %call106, 0, !dbg !6666
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !6667

if.then108:                                       ; preds = %land.lhs.true
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6668
  %call109 = call i32 @get_bits(%struct.GetBitContext* %127, i32 5), !dbg !6670
  %128 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6671
  %lfe_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %128, i32 0, i32 24, !dbg !6672
  store i32 %call109, i32* %lfe_mix_level, align 16, !dbg !6673
  br label %if.end110, !dbg !6674

if.end110:                                        ; preds = %if.then108, %land.lhs.true, %if.end104
  %129 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6675
  %frame_type111 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %129, i32 0, i32 3, !dbg !6677
  %130 = load i32, i32* %frame_type111, align 16, !dbg !6677
  %cmp112 = icmp eq i32 %130, 0, !dbg !6678
  br i1 %cmp112, label %if.then114, label %if.end175, !dbg !6679

if.then114:                                       ; preds = %if.end110
  store i32 0, i32* %i, align 4, !dbg !6680
  br label %for.cond115, !dbg !6683

for.cond115:                                      ; preds = %for.inc126, %if.then114
  %131 = load i32, i32* %i, align 4, !dbg !6684
  %132 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6687
  %channel_mode116 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %132, i32 0, i32 12, !dbg !6688
  %133 = load i32, i32* %channel_mode116, align 4, !dbg !6688
  %tobool117 = icmp ne i32 %133, 0, !dbg !6687
  %cond118 = select i1 %tobool117, i32 1, i32 2, !dbg !6687
  %cmp119 = icmp slt i32 %131, %cond118, !dbg !6689
  br i1 %cmp119, label %for.body121, label %for.end128, !dbg !6690

for.body121:                                      ; preds = %for.cond115
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6691
  %call122 = call i32 @get_bits1(%struct.GetBitContext* %134), !dbg !6694
  %tobool123 = icmp ne i32 %call122, 0, !dbg !6694
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6695

if.then124:                                       ; preds = %for.body121
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6696
  call void @skip_bits(%struct.GetBitContext* %135, i32 6), !dbg !6698
  br label %if.end125, !dbg !6699

if.end125:                                        ; preds = %if.then124, %for.body121
  br label %for.inc126, !dbg !6700

for.inc126:                                       ; preds = %if.end125
  %136 = load i32, i32* %i, align 4, !dbg !6701
  %inc127 = add nsw i32 %136, 1, !dbg !6701
  store i32 %inc127, i32* %i, align 4, !dbg !6701
  br label %for.cond115, !dbg !6703, !llvm.loop !6704

for.end128:                                       ; preds = %for.cond115
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6706
  %call129 = call i32 @get_bits1(%struct.GetBitContext* %137), !dbg !6708
  %tobool130 = icmp ne i32 %call129, 0, !dbg !6708
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !6709

if.then131:                                       ; preds = %for.end128
  %138 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6710
  call void @skip_bits(%struct.GetBitContext* %138, i32 6), !dbg !6712
  br label %if.end132, !dbg !6713

if.end132:                                        ; preds = %if.then131, %for.end128
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6714
  %call133 = call i32 @get_bits(%struct.GetBitContext* %139, i32 2), !dbg !6715
  switch i32 %call133, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb134
    i32 3, label %sw.bb135
  ], !dbg !6716

sw.bb:                                            ; preds = %if.end132
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6717
  call void @skip_bits(%struct.GetBitContext* %140, i32 5), !dbg !6719
  br label %sw.epilog, !dbg !6720

sw.bb134:                                         ; preds = %if.end132
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6721
  call void @skip_bits(%struct.GetBitContext* %141, i32 12), !dbg !6722
  br label %sw.epilog, !dbg !6723

sw.bb135:                                         ; preds = %if.end132
  call void @llvm.dbg.declare(metadata i32* %mix_data_size, metadata !6724, metadata !1849), !dbg !6726
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6727
  %call136 = call i32 @get_bits(%struct.GetBitContext* %142, i32 5), !dbg !6728
  %add = add i32 %call136, 2, !dbg !6729
  %shl137 = shl i32 %add, 3, !dbg !6730
  store i32 %shl137, i32* %mix_data_size, align 4, !dbg !6726
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6731
  %144 = load i32, i32* %mix_data_size, align 4, !dbg !6732
  call void @skip_bits_long(%struct.GetBitContext* %143, i32 %144), !dbg !6733
  br label %sw.epilog, !dbg !6734

sw.epilog:                                        ; preds = %if.end132, %sw.bb135, %sw.bb134, %sw.bb
  %145 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6735
  %channel_mode138 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %145, i32 0, i32 12, !dbg !6737
  %146 = load i32, i32* %channel_mode138, align 4, !dbg !6737
  %cmp139 = icmp slt i32 %146, 2, !dbg !6738
  br i1 %cmp139, label %if.then141, label %if.end156, !dbg !6739

if.then141:                                       ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !6740
  br label %for.cond142, !dbg !6743

for.cond142:                                      ; preds = %for.inc153, %if.then141
  %147 = load i32, i32* %i, align 4, !dbg !6744
  %148 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6747
  %channel_mode143 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %148, i32 0, i32 12, !dbg !6748
  %149 = load i32, i32* %channel_mode143, align 4, !dbg !6748
  %tobool144 = icmp ne i32 %149, 0, !dbg !6747
  %cond145 = select i1 %tobool144, i32 1, i32 2, !dbg !6747
  %cmp146 = icmp slt i32 %147, %cond145, !dbg !6749
  br i1 %cmp146, label %for.body148, label %for.end155, !dbg !6750

for.body148:                                      ; preds = %for.cond142
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6751
  %call149 = call i32 @get_bits1(%struct.GetBitContext* %150), !dbg !6754
  %tobool150 = icmp ne i32 %call149, 0, !dbg !6754
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !6755

if.then151:                                       ; preds = %for.body148
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6756
  call void @skip_bits(%struct.GetBitContext* %151, i32 8), !dbg !6758
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6759
  call void @skip_bits(%struct.GetBitContext* %152, i32 6), !dbg !6760
  br label %if.end152, !dbg !6761

if.end152:                                        ; preds = %if.then151, %for.body148
  br label %for.inc153, !dbg !6762

for.inc153:                                       ; preds = %if.end152
  %153 = load i32, i32* %i, align 4, !dbg !6763
  %inc154 = add nsw i32 %153, 1, !dbg !6763
  store i32 %inc154, i32* %i, align 4, !dbg !6763
  br label %for.cond142, !dbg !6765, !llvm.loop !6766

for.end155:                                       ; preds = %for.cond142
  br label %if.end156, !dbg !6768

if.end156:                                        ; preds = %for.end155, %sw.epilog
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6769
  %call157 = call i32 @get_bits1(%struct.GetBitContext* %154), !dbg !6771
  %tobool158 = icmp ne i32 %call157, 0, !dbg !6771
  br i1 %tobool158, label %if.then159, label %if.end174, !dbg !6772

if.then159:                                       ; preds = %if.end156
  store i32 0, i32* %blk, align 4, !dbg !6773
  br label %for.cond160, !dbg !6776

for.cond160:                                      ; preds = %for.inc171, %if.then159
  %155 = load i32, i32* %blk, align 4, !dbg !6777
  %156 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6780
  %num_blocks = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %156, i32 0, i32 9, !dbg !6781
  %157 = load i32, i32* %num_blocks, align 8, !dbg !6781
  %cmp161 = icmp slt i32 %155, %157, !dbg !6782
  br i1 %cmp161, label %for.body163, label %for.end173, !dbg !6783

for.body163:                                      ; preds = %for.cond160
  %158 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6784
  %num_blocks164 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %158, i32 0, i32 9, !dbg !6787
  %159 = load i32, i32* %num_blocks164, align 8, !dbg !6787
  %cmp165 = icmp eq i32 %159, 1, !dbg !6788
  br i1 %cmp165, label %if.then169, label %lor.lhs.false, !dbg !6789

lor.lhs.false:                                    ; preds = %for.body163
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6790
  %call167 = call i32 @get_bits1(%struct.GetBitContext* %160), !dbg !6792
  %tobool168 = icmp ne i32 %call167, 0, !dbg !6792
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !6793

if.then169:                                       ; preds = %lor.lhs.false, %for.body163
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6794
  call void @skip_bits(%struct.GetBitContext* %161, i32 5), !dbg !6796
  br label %if.end170, !dbg !6797

if.end170:                                        ; preds = %if.then169, %lor.lhs.false
  br label %for.inc171, !dbg !6798

for.inc171:                                       ; preds = %if.end170
  %162 = load i32, i32* %blk, align 4, !dbg !6799
  %inc172 = add nsw i32 %162, 1, !dbg !6799
  store i32 %inc172, i32* %blk, align 4, !dbg !6799
  br label %for.cond160, !dbg !6801, !llvm.loop !6802

for.end173:                                       ; preds = %for.cond160
  br label %if.end174, !dbg !6804

if.end174:                                        ; preds = %for.end173, %if.end156
  br label %if.end175, !dbg !6805

if.end175:                                        ; preds = %if.end174, %if.end110
  br label %if.end176, !dbg !6806

if.end176:                                        ; preds = %if.end175, %if.end79
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6807
  %call177 = call i32 @get_bits1(%struct.GetBitContext* %163), !dbg !6809
  %tobool178 = icmp ne i32 %call177, 0, !dbg !6809
  br i1 %tobool178, label %if.then179, label %if.end214, !dbg !6810

if.then179:                                       ; preds = %if.end176
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6811
  %call180 = call i32 @get_bits(%struct.GetBitContext* %164, i32 3), !dbg !6813
  %165 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6814
  %bitstream_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %165, i32 0, i32 11, !dbg !6815
  store i32 %call180, i32* %bitstream_mode, align 16, !dbg !6816
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6817
  call void @skip_bits(%struct.GetBitContext* %166, i32 2), !dbg !6818
  %167 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6819
  %channel_mode181 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %167, i32 0, i32 12, !dbg !6821
  %168 = load i32, i32* %channel_mode181, align 4, !dbg !6821
  %cmp182 = icmp eq i32 %168, 2, !dbg !6822
  br i1 %cmp182, label %if.then184, label %if.end187, !dbg !6823

if.then184:                                       ; preds = %if.then179
  %169 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6824
  %call185 = call i32 @get_bits(%struct.GetBitContext* %169, i32 2), !dbg !6826
  %170 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6827
  %dolby_surround_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %170, i32 0, i32 28, !dbg !6828
  store i32 %call185, i32* %dolby_surround_mode, align 32, !dbg !6829
  %171 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6830
  %call186 = call i32 @get_bits(%struct.GetBitContext* %171, i32 2), !dbg !6831
  %172 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6832
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %172, i32 0, i32 30, !dbg !6833
  store i32 %call186, i32* %dolby_headphone_mode, align 8, !dbg !6834
  br label %if.end187, !dbg !6835

if.end187:                                        ; preds = %if.then184, %if.then179
  %173 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6836
  %channel_mode188 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %173, i32 0, i32 12, !dbg !6838
  %174 = load i32, i32* %channel_mode188, align 4, !dbg !6838
  %cmp189 = icmp sge i32 %174, 6, !dbg !6839
  br i1 %cmp189, label %if.then191, label %if.end193, !dbg !6840

if.then191:                                       ; preds = %if.end187
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6841
  %call192 = call i32 @get_bits(%struct.GetBitContext* %175, i32 2), !dbg !6843
  %176 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6844
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %176, i32 0, i32 29, !dbg !6845
  store i32 %call192, i32* %dolby_surround_ex_mode, align 4, !dbg !6846
  br label %if.end193, !dbg !6847

if.end193:                                        ; preds = %if.then191, %if.end187
  store i32 0, i32* %i, align 4, !dbg !6848
  br label %for.cond194, !dbg !6850

for.cond194:                                      ; preds = %for.inc205, %if.end193
  %177 = load i32, i32* %i, align 4, !dbg !6851
  %178 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6854
  %channel_mode195 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %178, i32 0, i32 12, !dbg !6855
  %179 = load i32, i32* %channel_mode195, align 4, !dbg !6855
  %tobool196 = icmp ne i32 %179, 0, !dbg !6854
  %cond197 = select i1 %tobool196, i32 1, i32 2, !dbg !6854
  %cmp198 = icmp slt i32 %177, %cond197, !dbg !6856
  br i1 %cmp198, label %for.body200, label %for.end207, !dbg !6857

for.body200:                                      ; preds = %for.cond194
  %180 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6858
  %call201 = call i32 @get_bits1(%struct.GetBitContext* %180), !dbg !6861
  %tobool202 = icmp ne i32 %call201, 0, !dbg !6861
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !6862

if.then203:                                       ; preds = %for.body200
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6863
  call void @skip_bits(%struct.GetBitContext* %181, i32 8), !dbg !6865
  br label %if.end204, !dbg !6866

if.end204:                                        ; preds = %if.then203, %for.body200
  br label %for.inc205, !dbg !6867

for.inc205:                                       ; preds = %if.end204
  %182 = load i32, i32* %i, align 4, !dbg !6868
  %inc206 = add nsw i32 %182, 1, !dbg !6868
  store i32 %inc206, i32* %i, align 4, !dbg !6868
  br label %for.cond194, !dbg !6870, !llvm.loop !6871

for.end207:                                       ; preds = %for.cond194
  %183 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6873
  %bit_alloc_params208 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %183, i32 0, i32 91, !dbg !6875
  %sr_code209 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params208, i32 0, i32 0, !dbg !6876
  %184 = load i32, i32* %sr_code209, align 32, !dbg !6876
  %cmp210 = icmp ne i32 %184, 3, !dbg !6877
  br i1 %cmp210, label %if.then212, label %if.end213, !dbg !6878

if.then212:                                       ; preds = %for.end207
  %185 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6879
  call void @skip_bits1(%struct.GetBitContext* %185), !dbg !6881
  br label %if.end213, !dbg !6882

if.end213:                                        ; preds = %if.then212, %for.end207
  br label %if.end214, !dbg !6883

if.end214:                                        ; preds = %if.end213, %if.end176
  %186 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6884
  %frame_type215 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %186, i32 0, i32 3, !dbg !6886
  %187 = load i32, i32* %frame_type215, align 16, !dbg !6886
  %cmp216 = icmp eq i32 %187, 0, !dbg !6887
  br i1 %cmp216, label %land.lhs.true218, label %if.end223, !dbg !6888

land.lhs.true218:                                 ; preds = %if.end214
  %188 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6889
  %num_blocks219 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %188, i32 0, i32 9, !dbg !6891
  %189 = load i32, i32* %num_blocks219, align 8, !dbg !6891
  %cmp220 = icmp ne i32 %189, 6, !dbg !6892
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !6893

if.then222:                                       ; preds = %land.lhs.true218
  %190 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6894
  call void @skip_bits1(%struct.GetBitContext* %190), !dbg !6896
  br label %if.end223, !dbg !6897

if.end223:                                        ; preds = %if.then222, %land.lhs.true218, %if.end214
  %191 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6898
  %frame_type224 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %191, i32 0, i32 3, !dbg !6900
  %192 = load i32, i32* %frame_type224, align 16, !dbg !6900
  %cmp225 = icmp eq i32 %192, 2, !dbg !6901
  br i1 %cmp225, label %land.lhs.true227, label %if.end235, !dbg !6902

land.lhs.true227:                                 ; preds = %if.end223
  %193 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6903
  %num_blocks228 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %193, i32 0, i32 9, !dbg !6904
  %194 = load i32, i32* %num_blocks228, align 8, !dbg !6904
  %cmp229 = icmp eq i32 %194, 6, !dbg !6905
  br i1 %cmp229, label %if.then234, label %lor.lhs.false231, !dbg !6906

lor.lhs.false231:                                 ; preds = %land.lhs.true227
  %195 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6907
  %call232 = call i32 @get_bits1(%struct.GetBitContext* %195), !dbg !6909
  %tobool233 = icmp ne i32 %call232, 0, !dbg !6909
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !6910

if.then234:                                       ; preds = %lor.lhs.false231, %land.lhs.true227
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6912
  call void @skip_bits(%struct.GetBitContext* %196, i32 6), !dbg !6914
  br label %if.end235, !dbg !6915

if.end235:                                        ; preds = %if.then234, %lor.lhs.false231, %if.end223
  %197 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6916
  %call236 = call i32 @get_bits1(%struct.GetBitContext* %197), !dbg !6918
  %tobool237 = icmp ne i32 %call236, 0, !dbg !6918
  br i1 %tobool237, label %if.then238, label %if.end248, !dbg !6919

if.then238:                                       ; preds = %if.end235
  call void @llvm.dbg.declare(metadata i32* %addbsil, metadata !6920, metadata !1849), !dbg !6922
  %198 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6923
  %call239 = call i32 @get_bits(%struct.GetBitContext* %198, i32 6), !dbg !6924
  store i32 %call239, i32* %addbsil, align 4, !dbg !6922
  store i32 0, i32* %i, align 4, !dbg !6925
  br label %for.cond240, !dbg !6927

for.cond240:                                      ; preds = %for.inc245, %if.then238
  %199 = load i32, i32* %i, align 4, !dbg !6928
  %200 = load i32, i32* %addbsil, align 4, !dbg !6931
  %add241 = add nsw i32 %200, 1, !dbg !6932
  %cmp242 = icmp slt i32 %199, %add241, !dbg !6933
  br i1 %cmp242, label %for.body244, label %for.end247, !dbg !6934

for.body244:                                      ; preds = %for.cond240
  %201 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6935
  call void @skip_bits(%struct.GetBitContext* %201, i32 8), !dbg !6937
  br label %for.inc245, !dbg !6938

for.inc245:                                       ; preds = %for.body244
  %202 = load i32, i32* %i, align 4, !dbg !6939
  %inc246 = add nsw i32 %202, 1, !dbg !6939
  store i32 %inc246, i32* %i, align 4, !dbg !6939
  br label %for.cond240, !dbg !6941, !llvm.loop !6942

for.end247:                                       ; preds = %for.cond240
  br label %if.end248, !dbg !6944

if.end248:                                        ; preds = %for.end247, %if.end235
  %203 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6945
  %num_blocks249 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %203, i32 0, i32 9, !dbg !6947
  %204 = load i32, i32* %num_blocks249, align 8, !dbg !6947
  %cmp250 = icmp eq i32 %204, 6, !dbg !6948
  br i1 %cmp250, label %if.then252, label %if.else, !dbg !6949

if.then252:                                       ; preds = %if.end248
  %205 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6950
  %call253 = call i32 @get_bits1(%struct.GetBitContext* %205), !dbg !6952
  store i32 %call253, i32* %ac3_exponent_strategy, align 4, !dbg !6953
  %206 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6954
  %call254 = call i32 @get_bits1(%struct.GetBitContext* %206), !dbg !6955
  store i32 %call254, i32* %parse_aht_info, align 4, !dbg !6956
  br label %if.end255, !dbg !6957

if.else:                                          ; preds = %if.end248
  store i32 1, i32* %ac3_exponent_strategy, align 4, !dbg !6958
  store i32 0, i32* %parse_aht_info, align 4, !dbg !6960
  br label %if.end255

if.end255:                                        ; preds = %if.else, %if.then252
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6961
  %call256 = call i32 @get_bits(%struct.GetBitContext* %207, i32 2), !dbg !6962
  %208 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6963
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %208, i32 0, i32 38, !dbg !6964
  store i32 %call256, i32* %snr_offset_strategy, align 4, !dbg !6965
  %209 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6966
  %call257 = call i32 @get_bits1(%struct.GetBitContext* %209), !dbg !6967
  store i32 %call257, i32* %parse_transient_proc_info, align 4, !dbg !6968
  %210 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6969
  %call258 = call i32 @get_bits1(%struct.GetBitContext* %210), !dbg !6970
  %211 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6971
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %211, i32 0, i32 39, !dbg !6972
  store i32 %call258, i32* %block_switch_syntax, align 16, !dbg !6973
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6974
  %block_switch_syntax259 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 39, !dbg !6976
  %213 = load i32, i32* %block_switch_syntax259, align 16, !dbg !6976
  %tobool260 = icmp ne i32 %213, 0, !dbg !6974
  br i1 %tobool260, label %if.end262, label %if.then261, !dbg !6977

if.then261:                                       ; preds = %if.end255
  %214 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6978
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %214, i32 0, i32 106, !dbg !6979
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i32 0, i32 0, !dbg !6980
  %215 = bitcast i32* %arraydecay to i8*, !dbg !6980
  call void @llvm.memset.p0i8.i64(i8* %215, i8 0, i64 28, i32 8, i1 false), !dbg !6980
  br label %if.end262, !dbg !6980

if.end262:                                        ; preds = %if.then261, %if.end255
  %216 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6981
  %call263 = call i32 @get_bits1(%struct.GetBitContext* %216), !dbg !6982
  %217 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6983
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %217, i32 0, i32 40, !dbg !6984
  store i32 %call263, i32* %dither_flag_syntax, align 4, !dbg !6985
  %218 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6986
  %dither_flag_syntax264 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %218, i32 0, i32 40, !dbg !6988
  %219 = load i32, i32* %dither_flag_syntax264, align 4, !dbg !6988
  %tobool265 = icmp ne i32 %219, 0, !dbg !6986
  br i1 %tobool265, label %if.end276, label %if.then266, !dbg !6989

if.then266:                                       ; preds = %if.end262
  store i32 1, i32* %ch, align 4, !dbg !6990
  br label %for.cond267, !dbg !6993

for.cond267:                                      ; preds = %for.inc273, %if.then266
  %220 = load i32, i32* %ch, align 4, !dbg !6994
  %221 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6997
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %221, i32 0, i32 70, !dbg !6998
  %222 = load i32, i32* %fbw_channels, align 4, !dbg !6998
  %cmp268 = icmp sle i32 %220, %222, !dbg !6999
  br i1 %cmp268, label %for.body270, label %for.end275, !dbg !7000

for.body270:                                      ; preds = %for.cond267
  %223 = load i32, i32* %ch, align 4, !dbg !7001
  %idxprom271 = sext i32 %223 to i64, !dbg !7002
  %224 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7002
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %224, i32 0, i32 104, !dbg !7003
  %arrayidx272 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom271, !dbg !7002
  store i32 1, i32* %arrayidx272, align 4, !dbg !7004
  br label %for.inc273, !dbg !7002

for.inc273:                                       ; preds = %for.body270
  %225 = load i32, i32* %ch, align 4, !dbg !7005
  %inc274 = add nsw i32 %225, 1, !dbg !7005
  store i32 %inc274, i32* %ch, align 4, !dbg !7005
  br label %for.cond267, !dbg !7007, !llvm.loop !7008

for.end275:                                       ; preds = %for.cond267
  br label %if.end276, !dbg !7010

if.end276:                                        ; preds = %for.end275, %if.end262
  %226 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7011
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %226, i32 0, i32 72, !dbg !7012
  %227 = load i32, i32* %lfe_ch, align 4, !dbg !7012
  %idxprom277 = sext i32 %227 to i64, !dbg !7013
  %228 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7013
  %dither_flag278 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %228, i32 0, i32 104, !dbg !7014
  %arrayidx279 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag278, i64 0, i64 %idxprom277, !dbg !7013
  store i32 0, i32* %arrayidx279, align 4, !dbg !7015
  %229 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7016
  %dither_flag280 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %229, i32 0, i32 104, !dbg !7017
  %arrayidx281 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag280, i64 0, i64 0, !dbg !7016
  store i32 0, i32* %arrayidx281, align 8, !dbg !7018
  %230 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7019
  %call282 = call i32 @get_bits1(%struct.GetBitContext* %230), !dbg !7020
  %231 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7021
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %231, i32 0, i32 41, !dbg !7022
  store i32 %call282, i32* %bit_allocation_syntax, align 8, !dbg !7023
  %232 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7024
  %bit_allocation_syntax283 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %232, i32 0, i32 41, !dbg !7026
  %233 = load i32, i32* %bit_allocation_syntax283, align 8, !dbg !7026
  %tobool284 = icmp ne i32 %233, 0, !dbg !7024
  br i1 %tobool284, label %if.end296, label %if.then285, !dbg !7027

if.then285:                                       ; preds = %if.end276
  %234 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ff_ac3_slow_decay_tab, i64 0, i64 2), align 1, !dbg !7028
  %conv286 = zext i8 %234 to i32, !dbg !7028
  %235 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7030
  %bit_alloc_params287 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %235, i32 0, i32 91, !dbg !7031
  %slow_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params287, i32 0, i32 3, !dbg !7032
  store i32 %conv286, i32* %slow_decay, align 4, !dbg !7033
  %236 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ff_ac3_fast_decay_tab, i64 0, i64 1), align 1, !dbg !7034
  %conv288 = zext i8 %236 to i32, !dbg !7034
  %237 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7035
  %bit_alloc_params289 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %237, i32 0, i32 91, !dbg !7036
  %fast_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params289, i32 0, i32 4, !dbg !7037
  store i32 %conv288, i32* %fast_decay, align 16, !dbg !7038
  %238 = load i16, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @ff_ac3_slow_gain_tab, i64 0, i64 1), align 2, !dbg !7039
  %conv290 = zext i16 %238 to i32, !dbg !7039
  %239 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7040
  %bit_alloc_params291 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %239, i32 0, i32 91, !dbg !7041
  %slow_gain = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params291, i32 0, i32 2, !dbg !7042
  store i32 %conv290, i32* %slow_gain, align 8, !dbg !7043
  %240 = load i16, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @ff_ac3_db_per_bit_tab, i64 0, i64 2), align 2, !dbg !7044
  %conv292 = zext i16 %240 to i32, !dbg !7044
  %241 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7045
  %bit_alloc_params293 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %241, i32 0, i32 91, !dbg !7046
  %db_per_bit = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params293, i32 0, i32 5, !dbg !7047
  store i32 %conv292, i32* %db_per_bit, align 4, !dbg !7048
  %242 = load i16, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @ff_ac3_floor_tab, i64 0, i64 7), align 2, !dbg !7049
  %conv294 = sext i16 %242 to i32, !dbg !7049
  %243 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7050
  %bit_alloc_params295 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %243, i32 0, i32 91, !dbg !7051
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params295, i32 0, i32 6, !dbg !7052
  store i32 %conv294, i32* %floor, align 8, !dbg !7053
  br label %if.end296, !dbg !7054

if.end296:                                        ; preds = %if.then285, %if.end276
  %244 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7055
  %call297 = call i32 @get_bits1(%struct.GetBitContext* %244), !dbg !7056
  %245 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7057
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %245, i32 0, i32 42, !dbg !7058
  store i32 %call297, i32* %fast_gain_syntax, align 4, !dbg !7059
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7060
  %call298 = call i32 @get_bits1(%struct.GetBitContext* %246), !dbg !7061
  %247 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7062
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %247, i32 0, i32 43, !dbg !7063
  store i32 %call298, i32* %dba_syntax, align 32, !dbg !7064
  %248 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7065
  %call299 = call i32 @get_bits1(%struct.GetBitContext* %248), !dbg !7066
  %249 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7067
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %249, i32 0, i32 44, !dbg !7068
  store i32 %call299, i32* %skip_syntax, align 4, !dbg !7069
  %250 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7070
  %call300 = call i32 @get_bits1(%struct.GetBitContext* %250), !dbg !7071
  store i32 %call300, i32* %parse_spx_atten_data, align 4, !dbg !7072
  store i32 0, i32* %num_cpl_blocks, align 4, !dbg !7073
  %251 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7074
  %channel_mode301 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %251, i32 0, i32 12, !dbg !7076
  %252 = load i32, i32* %channel_mode301, align 4, !dbg !7076
  %cmp302 = icmp sgt i32 %252, 1, !dbg !7077
  br i1 %cmp302, label %if.then304, label %if.else339, !dbg !7078

if.then304:                                       ; preds = %if.end296
  store i32 0, i32* %blk, align 4, !dbg !7079
  br label %for.cond305, !dbg !7082

for.cond305:                                      ; preds = %for.inc336, %if.then304
  %253 = load i32, i32* %blk, align 4, !dbg !7083
  %254 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7086
  %num_blocks306 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %254, i32 0, i32 9, !dbg !7087
  %255 = load i32, i32* %num_blocks306, align 8, !dbg !7087
  %cmp307 = icmp slt i32 %253, %255, !dbg !7088
  br i1 %cmp307, label %for.body309, label %for.end338, !dbg !7089

for.body309:                                      ; preds = %for.cond305
  %256 = load i32, i32* %blk, align 4, !dbg !7090
  %tobool310 = icmp ne i32 %256, 0, !dbg !7090
  br i1 %tobool310, label %lor.rhs, label %lor.end, !dbg !7092

lor.rhs:                                          ; preds = %for.body309
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7093
  %call311 = call i32 @get_bits1(%struct.GetBitContext* %257), !dbg !7095
  %tobool312 = icmp ne i32 %call311, 0, !dbg !7096
  br label %lor.end, !dbg !7096

lor.end:                                          ; preds = %lor.rhs, %for.body309
  %258 = phi i1 [ true, %for.body309 ], [ %tobool312, %lor.rhs ]
  %lor.ext = zext i1 %258 to i32, !dbg !7097
  %259 = load i32, i32* %blk, align 4, !dbg !7099
  %idxprom313 = sext i32 %259 to i64, !dbg !7100
  %260 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7100
  %cpl_strategy_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %260, i32 0, i32 46, !dbg !7101
  %arrayidx314 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists, i64 0, i64 %idxprom313, !dbg !7100
  store i32 %lor.ext, i32* %arrayidx314, align 4, !dbg !7102
  %261 = load i32, i32* %blk, align 4, !dbg !7103
  %idxprom315 = sext i32 %261 to i64, !dbg !7105
  %262 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7105
  %cpl_strategy_exists316 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %262, i32 0, i32 46, !dbg !7106
  %arrayidx317 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists316, i64 0, i64 %idxprom315, !dbg !7105
  %263 = load i32, i32* %arrayidx317, align 4, !dbg !7105
  %tobool318 = icmp ne i32 %263, 0, !dbg !7105
  br i1 %tobool318, label %if.then319, label %if.else323, !dbg !7107

if.then319:                                       ; preds = %lor.end
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7108
  %call320 = call i32 @get_bits1(%struct.GetBitContext* %264), !dbg !7110
  %265 = load i32, i32* %blk, align 4, !dbg !7111
  %idxprom321 = sext i32 %265 to i64, !dbg !7112
  %266 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7112
  %cpl_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %266, i32 0, i32 45, !dbg !7113
  %arrayidx322 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use, i64 0, i64 %idxprom321, !dbg !7112
  store i32 %call320, i32* %arrayidx322, align 4, !dbg !7114
  br label %if.end331, !dbg !7115

if.else323:                                       ; preds = %lor.end
  %267 = load i32, i32* %blk, align 4, !dbg !7116
  %sub324 = sub nsw i32 %267, 1, !dbg !7118
  %idxprom325 = sext i32 %sub324 to i64, !dbg !7119
  %268 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7119
  %cpl_in_use326 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %268, i32 0, i32 45, !dbg !7120
  %arrayidx327 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use326, i64 0, i64 %idxprom325, !dbg !7119
  %269 = load i32, i32* %arrayidx327, align 4, !dbg !7119
  %270 = load i32, i32* %blk, align 4, !dbg !7121
  %idxprom328 = sext i32 %270 to i64, !dbg !7122
  %271 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7122
  %cpl_in_use329 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %271, i32 0, i32 45, !dbg !7123
  %arrayidx330 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use329, i64 0, i64 %idxprom328, !dbg !7122
  store i32 %269, i32* %arrayidx330, align 4, !dbg !7124
  br label %if.end331

if.end331:                                        ; preds = %if.else323, %if.then319
  %272 = load i32, i32* %blk, align 4, !dbg !7125
  %idxprom332 = sext i32 %272 to i64, !dbg !7126
  %273 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7126
  %cpl_in_use333 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %273, i32 0, i32 45, !dbg !7127
  %arrayidx334 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use333, i64 0, i64 %idxprom332, !dbg !7126
  %274 = load i32, i32* %arrayidx334, align 4, !dbg !7126
  %275 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7128
  %add335 = add nsw i32 %275, %274, !dbg !7128
  store i32 %add335, i32* %num_cpl_blocks, align 4, !dbg !7128
  br label %for.inc336, !dbg !7129

for.inc336:                                       ; preds = %if.end331
  %276 = load i32, i32* %blk, align 4, !dbg !7130
  %inc337 = add nsw i32 %276, 1, !dbg !7130
  store i32 %inc337, i32* %blk, align 4, !dbg !7130
  br label %for.cond305, !dbg !7132, !llvm.loop !7133

for.end338:                                       ; preds = %for.cond305
  br label %if.end342, !dbg !7135

if.else339:                                       ; preds = %if.end296
  %277 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7136
  %cpl_in_use340 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %277, i32 0, i32 45, !dbg !7138
  %arraydecay341 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use340, i32 0, i32 0, !dbg !7139
  %278 = bitcast i32* %arraydecay341 to i8*, !dbg !7139
  call void @llvm.memset.p0i8.i64(i8* %278, i8 0, i64 24, i32 8, i1 false), !dbg !7139
  br label %if.end342

if.end342:                                        ; preds = %if.else339, %for.end338
  %279 = load i32, i32* %ac3_exponent_strategy, align 4, !dbg !7140
  %tobool343 = icmp ne i32 %279, 0, !dbg !7140
  br i1 %tobool343, label %if.then344, label %if.else370, !dbg !7142

if.then344:                                       ; preds = %if.end342
  store i32 0, i32* %blk, align 4, !dbg !7143
  br label %for.cond345, !dbg !7146

for.cond345:                                      ; preds = %for.inc367, %if.then344
  %280 = load i32, i32* %blk, align 4, !dbg !7147
  %281 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7150
  %num_blocks346 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %281, i32 0, i32 9, !dbg !7151
  %282 = load i32, i32* %num_blocks346, align 8, !dbg !7151
  %cmp347 = icmp slt i32 %280, %282, !dbg !7152
  br i1 %cmp347, label %for.body349, label %for.end369, !dbg !7153

for.body349:                                      ; preds = %for.cond345
  %283 = load i32, i32* %blk, align 4, !dbg !7154
  %idxprom350 = sext i32 %283 to i64, !dbg !7157
  %284 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7157
  %cpl_in_use351 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %284, i32 0, i32 45, !dbg !7158
  %arrayidx352 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use351, i64 0, i64 %idxprom350, !dbg !7157
  %285 = load i32, i32* %arrayidx352, align 4, !dbg !7157
  %tobool353 = icmp ne i32 %285, 0, !dbg !7159
  %lnot = xor i1 %tobool353, true, !dbg !7159
  %lnot.ext = zext i1 %lnot to i32, !dbg !7159
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !7160
  br label %for.cond354, !dbg !7161

for.cond354:                                      ; preds = %for.inc364, %for.body349
  %286 = load i32, i32* %ch, align 4, !dbg !7162
  %287 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7165
  %fbw_channels355 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %287, i32 0, i32 70, !dbg !7166
  %288 = load i32, i32* %fbw_channels355, align 4, !dbg !7166
  %cmp356 = icmp sle i32 %286, %288, !dbg !7167
  br i1 %cmp356, label %for.body358, label %for.end366, !dbg !7168

for.body358:                                      ; preds = %for.cond354
  %289 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7169
  %call359 = call i32 @get_bits(%struct.GetBitContext* %289, i32 2), !dbg !7171
  %290 = load i32, i32* %ch, align 4, !dbg !7172
  %idxprom360 = sext i32 %290 to i64, !dbg !7173
  %291 = load i32, i32* %blk, align 4, !dbg !7174
  %idxprom361 = sext i32 %291 to i64, !dbg !7173
  %292 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7173
  %exp_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %292, i32 0, i32 90, !dbg !7175
  %arrayidx362 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy, i64 0, i64 %idxprom361, !dbg !7173
  %arrayidx363 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx362, i64 0, i64 %idxprom360, !dbg !7173
  store i32 %call359, i32* %arrayidx363, align 4, !dbg !7176
  br label %for.inc364, !dbg !7177

for.inc364:                                       ; preds = %for.body358
  %293 = load i32, i32* %ch, align 4, !dbg !7178
  %inc365 = add nsw i32 %293, 1, !dbg !7178
  store i32 %inc365, i32* %ch, align 4, !dbg !7178
  br label %for.cond354, !dbg !7180, !llvm.loop !7181

for.end366:                                       ; preds = %for.cond354
  br label %for.inc367, !dbg !7183

for.inc367:                                       ; preds = %for.end366
  %294 = load i32, i32* %blk, align 4, !dbg !7184
  %inc368 = add nsw i32 %294, 1, !dbg !7184
  store i32 %inc368, i32* %blk, align 4, !dbg !7184
  br label %for.cond345, !dbg !7186, !llvm.loop !7187

for.end369:                                       ; preds = %for.cond345
  br label %if.end403, !dbg !7189

if.else370:                                       ; preds = %if.end342
  %295 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7190
  %channel_mode371 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %295, i32 0, i32 12, !dbg !7193
  %296 = load i32, i32* %channel_mode371, align 4, !dbg !7193
  %cmp372 = icmp sgt i32 %296, 1, !dbg !7194
  br i1 %cmp372, label %land.rhs, label %land.end, !dbg !7195

land.rhs:                                         ; preds = %if.else370
  %297 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7196
  %tobool374 = icmp ne i32 %297, 0, !dbg !7198
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else370
  %298 = phi i1 [ false, %if.else370 ], [ %tobool374, %land.rhs ]
  %lnot375 = xor i1 %298, true, !dbg !7199
  %lnot.ext376 = zext i1 %lnot375 to i32, !dbg !7199
  store i32 %lnot.ext376, i32* %ch, align 4, !dbg !7201
  br label %for.cond377, !dbg !7202

for.cond377:                                      ; preds = %for.inc400, %land.end
  %299 = load i32, i32* %ch, align 4, !dbg !7203
  %300 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7206
  %fbw_channels378 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %300, i32 0, i32 70, !dbg !7207
  %301 = load i32, i32* %fbw_channels378, align 4, !dbg !7207
  %cmp379 = icmp sle i32 %299, %301, !dbg !7208
  br i1 %cmp379, label %for.body381, label %for.end402, !dbg !7209

for.body381:                                      ; preds = %for.cond377
  call void @llvm.dbg.declare(metadata i32* %frmchexpstr, metadata !7210, metadata !1849), !dbg !7212
  %302 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7213
  %call382 = call i32 @get_bits(%struct.GetBitContext* %302, i32 5), !dbg !7214
  store i32 %call382, i32* %frmchexpstr, align 4, !dbg !7212
  store i32 0, i32* %blk, align 4, !dbg !7215
  br label %for.cond383, !dbg !7217

for.cond383:                                      ; preds = %for.inc397, %for.body381
  %303 = load i32, i32* %blk, align 4, !dbg !7218
  %cmp384 = icmp slt i32 %303, 6, !dbg !7221
  br i1 %cmp384, label %for.body386, label %for.end399, !dbg !7222

for.body386:                                      ; preds = %for.cond383
  %304 = load i32, i32* %blk, align 4, !dbg !7223
  %idxprom387 = sext i32 %304 to i64, !dbg !7225
  %305 = load i32, i32* %frmchexpstr, align 4, !dbg !7226
  %idxprom388 = sext i32 %305 to i64, !dbg !7225
  %arrayidx389 = getelementptr inbounds [32 x [6 x i8]], [32 x [6 x i8]]* @ff_eac3_frm_expstr, i64 0, i64 %idxprom388, !dbg !7225
  %arrayidx390 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx389, i64 0, i64 %idxprom387, !dbg !7225
  %306 = load i8, i8* %arrayidx390, align 1, !dbg !7225
  %conv391 = zext i8 %306 to i32, !dbg !7225
  %307 = load i32, i32* %ch, align 4, !dbg !7227
  %idxprom392 = sext i32 %307 to i64, !dbg !7228
  %308 = load i32, i32* %blk, align 4, !dbg !7229
  %idxprom393 = sext i32 %308 to i64, !dbg !7228
  %309 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7228
  %exp_strategy394 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %309, i32 0, i32 90, !dbg !7230
  %arrayidx395 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy394, i64 0, i64 %idxprom393, !dbg !7228
  %arrayidx396 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx395, i64 0, i64 %idxprom392, !dbg !7228
  store i32 %conv391, i32* %arrayidx396, align 4, !dbg !7231
  br label %for.inc397, !dbg !7232

for.inc397:                                       ; preds = %for.body386
  %310 = load i32, i32* %blk, align 4, !dbg !7233
  %inc398 = add nsw i32 %310, 1, !dbg !7233
  store i32 %inc398, i32* %blk, align 4, !dbg !7233
  br label %for.cond383, !dbg !7235, !llvm.loop !7236

for.end399:                                       ; preds = %for.cond383
  br label %for.inc400, !dbg !7238

for.inc400:                                       ; preds = %for.end399
  %311 = load i32, i32* %ch, align 4, !dbg !7239
  %inc401 = add nsw i32 %311, 1, !dbg !7239
  store i32 %inc401, i32* %ch, align 4, !dbg !7239
  br label %for.cond377, !dbg !7241, !llvm.loop !7242

for.end402:                                       ; preds = %for.cond377
  br label %if.end403

if.end403:                                        ; preds = %for.end402, %for.end369
  %312 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7244
  %lfe_on404 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %312, i32 0, i32 13, !dbg !7246
  %313 = load i32, i32* %lfe_on404, align 8, !dbg !7246
  %tobool405 = icmp ne i32 %313, 0, !dbg !7244
  br i1 %tobool405, label %if.then406, label %if.end422, !dbg !7247

if.then406:                                       ; preds = %if.end403
  store i32 0, i32* %blk, align 4, !dbg !7248
  br label %for.cond407, !dbg !7251

for.cond407:                                      ; preds = %for.inc419, %if.then406
  %314 = load i32, i32* %blk, align 4, !dbg !7252
  %315 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7255
  %num_blocks408 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %315, i32 0, i32 9, !dbg !7256
  %316 = load i32, i32* %num_blocks408, align 8, !dbg !7256
  %cmp409 = icmp slt i32 %314, %316, !dbg !7257
  br i1 %cmp409, label %for.body411, label %for.end421, !dbg !7258

for.body411:                                      ; preds = %for.cond407
  %317 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7259
  %call412 = call i32 @get_bits1(%struct.GetBitContext* %317), !dbg !7261
  %318 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7262
  %lfe_ch413 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %318, i32 0, i32 72, !dbg !7263
  %319 = load i32, i32* %lfe_ch413, align 4, !dbg !7263
  %idxprom414 = sext i32 %319 to i64, !dbg !7264
  %320 = load i32, i32* %blk, align 4, !dbg !7265
  %idxprom415 = sext i32 %320 to i64, !dbg !7264
  %321 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7264
  %exp_strategy416 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %321, i32 0, i32 90, !dbg !7266
  %arrayidx417 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy416, i64 0, i64 %idxprom415, !dbg !7264
  %arrayidx418 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx417, i64 0, i64 %idxprom414, !dbg !7264
  store i32 %call412, i32* %arrayidx418, align 4, !dbg !7267
  br label %for.inc419, !dbg !7268

for.inc419:                                       ; preds = %for.body411
  %322 = load i32, i32* %blk, align 4, !dbg !7269
  %inc420 = add nsw i32 %322, 1, !dbg !7269
  store i32 %inc420, i32* %blk, align 4, !dbg !7269
  br label %for.cond407, !dbg !7271, !llvm.loop !7272

for.end421:                                       ; preds = %for.cond407
  br label %if.end422, !dbg !7274

if.end422:                                        ; preds = %for.end421, %if.end403
  %323 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7275
  %frame_type423 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %323, i32 0, i32 3, !dbg !7277
  %324 = load i32, i32* %frame_type423, align 16, !dbg !7277
  %cmp424 = icmp eq i32 %324, 0, !dbg !7278
  br i1 %cmp424, label %land.lhs.true426, label %if.end435, !dbg !7279

land.lhs.true426:                                 ; preds = %if.end422
  %325 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7280
  %num_blocks427 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %325, i32 0, i32 9, !dbg !7281
  %326 = load i32, i32* %num_blocks427, align 8, !dbg !7281
  %cmp428 = icmp eq i32 %326, 6, !dbg !7282
  br i1 %cmp428, label %if.then433, label %lor.lhs.false430, !dbg !7283

lor.lhs.false430:                                 ; preds = %land.lhs.true426
  %327 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7284
  %call431 = call i32 @get_bits1(%struct.GetBitContext* %327), !dbg !7286
  %tobool432 = icmp ne i32 %call431, 0, !dbg !7286
  br i1 %tobool432, label %if.then433, label %if.end435, !dbg !7287

if.then433:                                       ; preds = %lor.lhs.false430, %land.lhs.true426
  %328 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7288
  %329 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7290
  %fbw_channels434 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %329, i32 0, i32 70, !dbg !7291
  %330 = load i32, i32* %fbw_channels434, align 4, !dbg !7291
  %mul = mul nsw i32 5, %330, !dbg !7292
  call void @skip_bits(%struct.GetBitContext* %328, i32 %mul), !dbg !7293
  br label %if.end435, !dbg !7294

if.end435:                                        ; preds = %if.then433, %lor.lhs.false430, %if.end422
  %331 = load i32, i32* %parse_aht_info, align 4, !dbg !7295
  %tobool436 = icmp ne i32 %331, 0, !dbg !7295
  br i1 %tobool436, label %if.then437, label %if.else479, !dbg !7297

if.then437:                                       ; preds = %if.end435
  %332 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7298
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %332, i32 0, i32 68, !dbg !7300
  %arrayidx438 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 0, !dbg !7298
  store i32 0, i32* %arrayidx438, align 8, !dbg !7301
  %333 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7302
  %cmp439 = icmp ne i32 %333, 6, !dbg !7304
  %conv440 = zext i1 %cmp439 to i32, !dbg !7304
  store i32 %conv440, i32* %ch, align 4, !dbg !7305
  br label %for.cond441, !dbg !7306

for.cond441:                                      ; preds = %for.inc476, %if.then437
  %334 = load i32, i32* %ch, align 4, !dbg !7307
  %335 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7310
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %335, i32 0, i32 71, !dbg !7311
  %336 = load i32, i32* %channels, align 8, !dbg !7311
  %cmp442 = icmp sle i32 %334, %336, !dbg !7312
  br i1 %cmp442, label %for.body444, label %for.end478, !dbg !7313

for.body444:                                      ; preds = %for.cond441
  call void @llvm.dbg.declare(metadata i32* %use_aht, metadata !7314, metadata !1849), !dbg !7316
  store i32 1, i32* %use_aht, align 4, !dbg !7316
  store i32 1, i32* %blk, align 4, !dbg !7317
  br label %for.cond445, !dbg !7319

for.cond445:                                      ; preds = %for.inc465, %for.body444
  %337 = load i32, i32* %blk, align 4, !dbg !7320
  %cmp446 = icmp slt i32 %337, 6, !dbg !7323
  br i1 %cmp446, label %for.body448, label %for.end467, !dbg !7324

for.body448:                                      ; preds = %for.cond445
  %338 = load i32, i32* %ch, align 4, !dbg !7325
  %idxprom449 = sext i32 %338 to i64, !dbg !7328
  %339 = load i32, i32* %blk, align 4, !dbg !7329
  %idxprom450 = sext i32 %339 to i64, !dbg !7328
  %340 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7328
  %exp_strategy451 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %340, i32 0, i32 90, !dbg !7330
  %arrayidx452 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy451, i64 0, i64 %idxprom450, !dbg !7328
  %arrayidx453 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx452, i64 0, i64 %idxprom449, !dbg !7328
  %341 = load i32, i32* %arrayidx453, align 4, !dbg !7328
  %cmp454 = icmp ne i32 %341, 0, !dbg !7331
  br i1 %cmp454, label %if.then463, label %lor.lhs.false456, !dbg !7332

lor.lhs.false456:                                 ; preds = %for.body448
  %342 = load i32, i32* %ch, align 4, !dbg !7333
  %tobool457 = icmp ne i32 %342, 0, !dbg !7333
  br i1 %tobool457, label %if.end464, label %land.lhs.true458, !dbg !7334

land.lhs.true458:                                 ; preds = %lor.lhs.false456
  %343 = load i32, i32* %blk, align 4, !dbg !7335
  %idxprom459 = sext i32 %343 to i64, !dbg !7337
  %344 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7337
  %cpl_strategy_exists460 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %344, i32 0, i32 46, !dbg !7338
  %arrayidx461 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists460, i64 0, i64 %idxprom459, !dbg !7337
  %345 = load i32, i32* %arrayidx461, align 4, !dbg !7337
  %tobool462 = icmp ne i32 %345, 0, !dbg !7337
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !7339

if.then463:                                       ; preds = %land.lhs.true458, %for.body448
  store i32 0, i32* %use_aht, align 4, !dbg !7341
  br label %for.end467, !dbg !7343

if.end464:                                        ; preds = %land.lhs.true458, %lor.lhs.false456
  br label %for.inc465, !dbg !7344

for.inc465:                                       ; preds = %if.end464
  %346 = load i32, i32* %blk, align 4, !dbg !7345
  %inc466 = add nsw i32 %346, 1, !dbg !7345
  store i32 %inc466, i32* %blk, align 4, !dbg !7345
  br label %for.cond445, !dbg !7347, !llvm.loop !7348

for.end467:                                       ; preds = %if.then463, %for.cond445
  %347 = load i32, i32* %use_aht, align 4, !dbg !7350
  %tobool468 = icmp ne i32 %347, 0, !dbg !7350
  br i1 %tobool468, label %land.rhs469, label %land.end472, !dbg !7351

land.rhs469:                                      ; preds = %for.end467
  %348 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7352
  %call470 = call i32 @get_bits1(%struct.GetBitContext* %348), !dbg !7354
  %tobool471 = icmp ne i32 %call470, 0, !dbg !7355
  br label %land.end472

land.end472:                                      ; preds = %land.rhs469, %for.end467
  %349 = phi i1 [ false, %for.end467 ], [ %tobool471, %land.rhs469 ]
  %land.ext = zext i1 %349 to i32, !dbg !7356
  %350 = load i32, i32* %ch, align 4, !dbg !7358
  %idxprom473 = sext i32 %350 to i64, !dbg !7359
  %351 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7359
  %channel_uses_aht474 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %351, i32 0, i32 68, !dbg !7360
  %arrayidx475 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht474, i64 0, i64 %idxprom473, !dbg !7359
  store i32 %land.ext, i32* %arrayidx475, align 4, !dbg !7361
  br label %for.inc476, !dbg !7362

for.inc476:                                       ; preds = %land.end472
  %352 = load i32, i32* %ch, align 4, !dbg !7363
  %inc477 = add nsw i32 %352, 1, !dbg !7363
  store i32 %inc477, i32* %ch, align 4, !dbg !7363
  br label %for.cond441, !dbg !7365, !llvm.loop !7366

for.end478:                                       ; preds = %for.cond441
  br label %if.end482, !dbg !7368

if.else479:                                       ; preds = %if.end435
  %353 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7369
  %channel_uses_aht480 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %353, i32 0, i32 68, !dbg !7371
  %arraydecay481 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht480, i32 0, i32 0, !dbg !7372
  %354 = bitcast i32* %arraydecay481 to i8*, !dbg !7372
  call void @llvm.memset.p0i8.i64(i8* %354, i8 0, i64 28, i32 8, i1 false), !dbg !7372
  br label %if.end482

if.end482:                                        ; preds = %if.else479, %for.end478
  %355 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7373
  %snr_offset_strategy483 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %355, i32 0, i32 38, !dbg !7375
  %356 = load i32, i32* %snr_offset_strategy483, align 4, !dbg !7375
  %tobool484 = icmp ne i32 %356, 0, !dbg !7373
  br i1 %tobool484, label %if.end502, label %if.then485, !dbg !7376

if.then485:                                       ; preds = %if.end482
  call void @llvm.dbg.declare(metadata i32* %csnroffst, metadata !7377, metadata !1849), !dbg !7379
  %357 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7380
  %call486 = call i32 @get_bits(%struct.GetBitContext* %357, i32 6), !dbg !7381
  %sub487 = sub i32 %call486, 15, !dbg !7382
  %shl488 = shl i32 %sub487, 4, !dbg !7383
  store i32 %shl488, i32* %csnroffst, align 4, !dbg !7379
  call void @llvm.dbg.declare(metadata i32* %snroffst, metadata !7384, metadata !1849), !dbg !7385
  %358 = load i32, i32* %csnroffst, align 4, !dbg !7386
  %359 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7387
  %call489 = call i32 @get_bits(%struct.GetBitContext* %359, i32 4), !dbg !7388
  %add490 = add i32 %358, %call489, !dbg !7389
  %shl491 = shl i32 %add490, 2, !dbg !7390
  store i32 %shl491, i32* %snroffst, align 4, !dbg !7385
  store i32 0, i32* %ch, align 4, !dbg !7391
  br label %for.cond492, !dbg !7393

for.cond492:                                      ; preds = %for.inc499, %if.then485
  %360 = load i32, i32* %ch, align 4, !dbg !7394
  %361 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7397
  %channels493 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %361, i32 0, i32 71, !dbg !7398
  %362 = load i32, i32* %channels493, align 8, !dbg !7398
  %cmp494 = icmp sle i32 %360, %362, !dbg !7399
  br i1 %cmp494, label %for.body496, label %for.end501, !dbg !7400

for.body496:                                      ; preds = %for.cond492
  %363 = load i32, i32* %snroffst, align 4, !dbg !7401
  %364 = load i32, i32* %ch, align 4, !dbg !7402
  %idxprom497 = sext i32 %364 to i64, !dbg !7403
  %365 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7403
  %snr_offset = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %365, i32 0, i32 93, !dbg !7404
  %arrayidx498 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset, i64 0, i64 %idxprom497, !dbg !7403
  store i32 %363, i32* %arrayidx498, align 4, !dbg !7405
  br label %for.inc499, !dbg !7403

for.inc499:                                       ; preds = %for.body496
  %366 = load i32, i32* %ch, align 4, !dbg !7406
  %inc500 = add nsw i32 %366, 1, !dbg !7406
  store i32 %inc500, i32* %ch, align 4, !dbg !7406
  br label %for.cond492, !dbg !7408, !llvm.loop !7409

for.end501:                                       ; preds = %for.cond492
  br label %if.end502, !dbg !7411

if.end502:                                        ; preds = %for.end501, %if.end482
  %367 = load i32, i32* %parse_transient_proc_info, align 4, !dbg !7412
  %tobool503 = icmp ne i32 %367, 0, !dbg !7412
  br i1 %tobool503, label %if.then504, label %if.end517, !dbg !7414

if.then504:                                       ; preds = %if.end502
  store i32 1, i32* %ch, align 4, !dbg !7415
  br label %for.cond505, !dbg !7418

for.cond505:                                      ; preds = %for.inc514, %if.then504
  %368 = load i32, i32* %ch, align 4, !dbg !7419
  %369 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7422
  %fbw_channels506 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %369, i32 0, i32 70, !dbg !7423
  %370 = load i32, i32* %fbw_channels506, align 4, !dbg !7423
  %cmp507 = icmp sle i32 %368, %370, !dbg !7424
  br i1 %cmp507, label %for.body509, label %for.end516, !dbg !7425

for.body509:                                      ; preds = %for.cond505
  %371 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7426
  %call510 = call i32 @get_bits1(%struct.GetBitContext* %371), !dbg !7429
  %tobool511 = icmp ne i32 %call510, 0, !dbg !7429
  br i1 %tobool511, label %if.then512, label %if.end513, !dbg !7430

if.then512:                                       ; preds = %for.body509
  %372 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7431
  call void @skip_bits(%struct.GetBitContext* %372, i32 10), !dbg !7433
  %373 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7434
  call void @skip_bits(%struct.GetBitContext* %373, i32 8), !dbg !7435
  br label %if.end513, !dbg !7436

if.end513:                                        ; preds = %if.then512, %for.body509
  br label %for.inc514, !dbg !7437

for.inc514:                                       ; preds = %if.end513
  %374 = load i32, i32* %ch, align 4, !dbg !7438
  %inc515 = add nsw i32 %374, 1, !dbg !7438
  store i32 %inc515, i32* %ch, align 4, !dbg !7438
  br label %for.cond505, !dbg !7440, !llvm.loop !7441

for.end516:                                       ; preds = %for.cond505
  br label %if.end517, !dbg !7443

if.end517:                                        ; preds = %for.end516, %if.end502
  store i32 1, i32* %ch, align 4, !dbg !7444
  br label %for.cond518, !dbg !7446

for.cond518:                                      ; preds = %for.inc537, %if.end517
  %375 = load i32, i32* %ch, align 4, !dbg !7447
  %376 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7450
  %fbw_channels519 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %376, i32 0, i32 70, !dbg !7451
  %377 = load i32, i32* %fbw_channels519, align 4, !dbg !7451
  %cmp520 = icmp sle i32 %375, %377, !dbg !7452
  br i1 %cmp520, label %for.body522, label %for.end539, !dbg !7453

for.body522:                                      ; preds = %for.cond518
  %378 = load i32, i32* %parse_spx_atten_data, align 4, !dbg !7454
  %tobool523 = icmp ne i32 %378, 0, !dbg !7454
  br i1 %tobool523, label %land.lhs.true524, label %if.else532, !dbg !7457

land.lhs.true524:                                 ; preds = %for.body522
  %379 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7458
  %call525 = call i32 @get_bits1(%struct.GetBitContext* %379), !dbg !7460
  %tobool526 = icmp ne i32 %call525, 0, !dbg !7460
  br i1 %tobool526, label %if.then527, label %if.else532, !dbg !7461

if.then527:                                       ; preds = %land.lhs.true524
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7462
  %call528 = call i32 @get_bits(%struct.GetBitContext* %380, i32 5), !dbg !7464
  %conv529 = trunc i32 %call528 to i8, !dbg !7464
  %381 = load i32, i32* %ch, align 4, !dbg !7465
  %idxprom530 = sext i32 %381 to i64, !dbg !7466
  %382 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7466
  %spx_atten_code = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %382, i32 0, i32 58, !dbg !7467
  %arrayidx531 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code, i64 0, i64 %idxprom530, !dbg !7466
  store i8 %conv529, i8* %arrayidx531, align 1, !dbg !7468
  br label %if.end536, !dbg !7469

if.else532:                                       ; preds = %land.lhs.true524, %for.body522
  %383 = load i32, i32* %ch, align 4, !dbg !7470
  %idxprom533 = sext i32 %383 to i64, !dbg !7472
  %384 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7472
  %spx_atten_code534 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %384, i32 0, i32 58, !dbg !7473
  %arrayidx535 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code534, i64 0, i64 %idxprom533, !dbg !7472
  store i8 -1, i8* %arrayidx535, align 1, !dbg !7474
  br label %if.end536

if.end536:                                        ; preds = %if.else532, %if.then527
  br label %for.inc537, !dbg !7475

for.inc537:                                       ; preds = %if.end536
  %385 = load i32, i32* %ch, align 4, !dbg !7476
  %inc538 = add nsw i32 %385, 1, !dbg !7476
  store i32 %inc538, i32* %ch, align 4, !dbg !7476
  br label %for.cond518, !dbg !7478, !llvm.loop !7479

for.end539:                                       ; preds = %for.cond518
  %386 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7481
  %num_blocks540 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %386, i32 0, i32 9, !dbg !7483
  %387 = load i32, i32* %num_blocks540, align 8, !dbg !7483
  %cmp541 = icmp sgt i32 %387, 1, !dbg !7484
  br i1 %cmp541, label %land.lhs.true543, label %if.end555, !dbg !7485

land.lhs.true543:                                 ; preds = %for.end539
  %388 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7486
  %call544 = call i32 @get_bits1(%struct.GetBitContext* %388), !dbg !7488
  %tobool545 = icmp ne i32 %call544, 0, !dbg !7488
  br i1 %tobool545, label %if.then546, label %if.end555, !dbg !7489

if.then546:                                       ; preds = %land.lhs.true543
  call void @llvm.dbg.declare(metadata i32* %block_start_bits, metadata !7490, metadata !1849), !dbg !7492
  %389 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7493
  %num_blocks547 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %389, i32 0, i32 9, !dbg !7494
  %390 = load i32, i32* %num_blocks547, align 8, !dbg !7494
  %sub548 = sub nsw i32 %390, 1, !dbg !7495
  %391 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7496
  %frame_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %391, i32 0, i32 6, !dbg !7497
  %392 = load i32, i32* %frame_size, align 4, !dbg !7497
  %sub549 = sub nsw i32 %392, 2, !dbg !7498
  %or550 = or i32 %sub549, 1, !dbg !7499
  %393 = call i32 @llvm.ctlz.i32(i32 %or550, i1 true), !dbg !7500
  %sub551 = sub nsw i32 31, %393, !dbg !7501
  %add552 = add nsw i32 4, %sub551, !dbg !7502
  %mul553 = mul nsw i32 %sub548, %add552, !dbg !7503
  store i32 %mul553, i32* %block_start_bits, align 4, !dbg !7492
  %394 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7504
  %395 = load i32, i32* %block_start_bits, align 4, !dbg !7505
  call void @skip_bits_long(%struct.GetBitContext* %394, i32 %395), !dbg !7506
  %396 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7507
  %avctx554 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %396, i32 0, i32 1, !dbg !7508
  %397 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx554, align 8, !dbg !7508
  %398 = bitcast %struct.AVCodecContext* %397 to i8*, !dbg !7507
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %398, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0)), !dbg !7509
  br label %if.end555, !dbg !7510

if.end555:                                        ; preds = %if.then546, %land.lhs.true543, %for.end539
  store i32 1, i32* %ch, align 4, !dbg !7511
  br label %for.cond556, !dbg !7513

for.cond556:                                      ; preds = %for.inc565, %if.end555
  %399 = load i32, i32* %ch, align 4, !dbg !7514
  %400 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7517
  %fbw_channels557 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %400, i32 0, i32 70, !dbg !7518
  %401 = load i32, i32* %fbw_channels557, align 4, !dbg !7518
  %cmp558 = icmp sle i32 %399, %401, !dbg !7519
  br i1 %cmp558, label %for.body560, label %for.end567, !dbg !7520

for.body560:                                      ; preds = %for.cond556
  %402 = load i32, i32* %ch, align 4, !dbg !7521
  %idxprom561 = sext i32 %402 to i64, !dbg !7523
  %403 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7523
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %403, i32 0, i32 65, !dbg !7524
  %arrayidx562 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom561, !dbg !7523
  store i8 1, i8* %arrayidx562, align 1, !dbg !7525
  %404 = load i32, i32* %ch, align 4, !dbg !7526
  %idxprom563 = sext i32 %404 to i64, !dbg !7527
  %405 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7527
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %405, i32 0, i32 54, !dbg !7528
  %arrayidx564 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom563, !dbg !7527
  store i32 1, i32* %arrayidx564, align 4, !dbg !7529
  br label %for.inc565, !dbg !7530

for.inc565:                                       ; preds = %for.body560
  %406 = load i32, i32* %ch, align 4, !dbg !7531
  %inc566 = add nsw i32 %406, 1, !dbg !7531
  store i32 %inc566, i32* %ch, align 4, !dbg !7531
  br label %for.cond556, !dbg !7533, !llvm.loop !7534

for.end567:                                       ; preds = %for.cond556
  %407 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7536
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %407, i32 0, i32 92, !dbg !7537
  store i32 1, i32* %first_cpl_leak, align 4, !dbg !7538
  store i32 0, i32* %retval, align 4, !dbg !7539
  br label %return, !dbg !7539

return:                                           ; preds = %for.end567, %if.then75, %if.then10, %if.end7, %if.then
  %408 = load i32, i32* %retval, align 4, !dbg !7540
  ret i32 %408, !dbg !7540
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7541 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7544, metadata !1849), !dbg !7548
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7550, metadata !1849), !dbg !7551
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7552, metadata !1849), !dbg !7553
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7554, metadata !1849), !dbg !7555
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7556, metadata !1849), !dbg !7557
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7558
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7559
  %1 = load i32, i32* %index, align 8, !dbg !7559
  store i32 %1, i32* %re_index, align 4, !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7560, metadata !1849), !dbg !7561
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7562, metadata !1849), !dbg !7563
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7564
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7565
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7565
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7563
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7566
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7567
  %5 = load i8*, i8** %buffer, align 8, !dbg !7567
  %6 = load i32, i32* %re_index, align 4, !dbg !7568
  %shr = lshr i32 %6, 3, !dbg !7569
  %idx.ext = zext i32 %shr to i64, !dbg !7570
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7570
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7571
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7571
  %8 = load i32, i32* %l, align 1, !dbg !7571
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7572
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7573
  %shl.i = shl i32 %9, 8, !dbg !7574
  %and.i = and i32 %shl.i, 65280, !dbg !7575
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7576
  %shr.i = lshr i32 %10, 8, !dbg !7577
  %and1.i = and i32 %shr.i, 255, !dbg !7578
  %or.i = or i32 %and.i, %and1.i, !dbg !7579
  %shl2.i = shl i32 %or.i, 16, !dbg !7580
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7581
  %shr3.i = lshr i32 %11, 16, !dbg !7582
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7583
  %and5.i = and i32 %shl4.i, 65280, !dbg !7584
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7585
  %shr6.i = lshr i32 %12, 16, !dbg !7586
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7587
  %and8.i = and i32 %shr7.i, 255, !dbg !7588
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7589
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7590
  %13 = load i32, i32* %re_index, align 4, !dbg !7591
  %and = and i32 %13, 7, !dbg !7592
  %shl = shl i32 %or10.i, %and, !dbg !7593
  store i32 %shl, i32* %re_cache, align 4, !dbg !7594
  %14 = load i32, i32* %re_cache, align 4, !dbg !7595
  %15 = load i32, i32* %n.addr, align 4, !dbg !7596
  %conv = trunc i32 %15 to i8, !dbg !7596
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7597
  store i32 %call4, i32* %tmp, align 4, !dbg !7598
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7599
  %17 = load i32, i32* %re_index, align 4, !dbg !7600
  %18 = load i32, i32* %n.addr, align 4, !dbg !7601
  %add = add i32 %17, %18, !dbg !7602
  %cmp = icmp ugt i32 %16, %add, !dbg !7603
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7604

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7605
  %20 = load i32, i32* %n.addr, align 4, !dbg !7607
  %add6 = add i32 %19, %20, !dbg !7608
  br label %cond.end, !dbg !7609

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7610
  br label %cond.end, !dbg !7612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7613
  store i32 %cond, i32* %re_index, align 4, !dbg !7615
  %22 = load i32, i32* %re_index, align 4, !dbg !7616
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7617
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7618
  store i32 %22, i32* %index7, align 8, !dbg !7619
  %24 = load i32, i32* %tmp, align 4, !dbg !7620
  ret i32 %24, !dbg !7621
}

; Function Attrs: nounwind
declare float @powf(float, float) #8

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !7622 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7625, metadata !1849), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7627, metadata !1849), !dbg !7628
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7629
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7630
  %1 = load i32, i32* %index1, align 8, !dbg !7630
  store i32 %1, i32* %index, align 4, !dbg !7628
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7631, metadata !1849), !dbg !7632
  %2 = load i32, i32* %index, align 4, !dbg !7633
  %shr = lshr i32 %2, 3, !dbg !7634
  %idxprom = zext i32 %shr to i64, !dbg !7635
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7635
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !7636
  %4 = load i8*, i8** %buffer, align 8, !dbg !7636
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7635
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7635
  store i8 %5, i8* %result, align 1, !dbg !7632
  %6 = load i32, i32* %index, align 4, !dbg !7637
  %and = and i32 %6, 7, !dbg !7638
  %7 = load i8, i8* %result, align 1, !dbg !7639
  %conv = zext i8 %7 to i32, !dbg !7639
  %shl = shl i32 %conv, %and, !dbg !7639
  %conv2 = trunc i32 %shl to i8, !dbg !7639
  store i8 %conv2, i8* %result, align 1, !dbg !7639
  %8 = load i8, i8* %result, align 1, !dbg !7640
  %conv3 = zext i8 %8 to i32, !dbg !7640
  %shr4 = ashr i32 %conv3, 7, !dbg !7640
  %conv5 = trunc i32 %shr4 to i8, !dbg !7640
  store i8 %conv5, i8* %result, align 1, !dbg !7640
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7641
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !7643
  %10 = load i32, i32* %index6, align 8, !dbg !7643
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7644
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !7645
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7645
  %cmp = icmp slt i32 %10, %12, !dbg !7646
  br i1 %cmp, label %if.then, label %if.end, !dbg !7647

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !7648
  %inc = add i32 %13, 1, !dbg !7648
  store i32 %inc, i32* %index, align 4, !dbg !7648
  br label %if.end, !dbg !7649

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !7650
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7651
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7652
  store i32 %14, i32* %index8, align 8, !dbg !7653
  %16 = load i8, i8* %result, align 1, !dbg !7654
  %conv9 = zext i8 %16 to i32, !dbg !7654
  ret i32 %conv9, !dbg !7655
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7656 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7659, metadata !1849), !dbg !7660
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7661, metadata !1849), !dbg !7662
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7663, metadata !1849), !dbg !7664
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7665
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7666
  %1 = load i32, i32* %index, align 8, !dbg !7666
  store i32 %1, i32* %re_index, align 4, !dbg !7664
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7667, metadata !1849), !dbg !7668
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7669, metadata !1849), !dbg !7670
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7671
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7672
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7672
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7670
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !7673
  %5 = load i32, i32* %re_index, align 4, !dbg !7674
  %6 = load i32, i32* %n.addr, align 4, !dbg !7675
  %add = add i32 %5, %6, !dbg !7676
  %cmp = icmp ugt i32 %4, %add, !dbg !7677
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7678

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !7679
  %8 = load i32, i32* %n.addr, align 4, !dbg !7681
  %add1 = add i32 %7, %8, !dbg !7682
  br label %cond.end, !dbg !7683

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !7684
  br label %cond.end, !dbg !7686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !7687
  store i32 %cond, i32* %re_index, align 4, !dbg !7689
  %10 = load i32, i32* %re_index, align 4, !dbg !7690
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7691
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !7692
  store i32 %10, i32* %index2, align 8, !dbg !7693
  ret void, !dbg !7694
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !7695 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7699, metadata !1849), !dbg !7700
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7701, metadata !1849), !dbg !7702
  %0 = load i32, i32* %a.addr, align 4, !dbg !7703
  %1 = load i8, i8* %s.addr, align 1, !dbg !7704
  %conv = sext i8 %1 to i32, !dbg !7704
  %sub = sub nsw i32 0, %conv, !dbg !7705
  %conv1 = trunc i32 %sub to i8, !dbg !7706
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !7703, !srcloc !7707
  store i32 %2, i32* %a.addr, align 4, !dbg !7703
  %3 = load i32, i32* %a.addr, align 4, !dbg !7708
  ret i32 %3, !dbg !7709
}

declare void @avpriv_request_sample(i8*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7710 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6034, metadata !1849), !dbg !7711
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6046, metadata !1849), !dbg !7713
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6048, metadata !1849), !dbg !7714
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7715, metadata !1849), !dbg !7716
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7717, metadata !1849), !dbg !7718
  %0 = load i32, i32* %n.addr, align 4, !dbg !7719
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7720
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !7721
  %2 = load i32, i32* %index, align 8, !dbg !7721
  %sub = sub nsw i32 0, %2, !dbg !7722
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7723
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !7724
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7724
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7725
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !7726
  %6 = load i32, i32* %index1, align 8, !dbg !7726
  %sub2 = sub nsw i32 %4, %6, !dbg !7727
  store i32 %0, i32* %a.addr.i, align 4, !dbg !7728
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !7728
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !7728
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !7729
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !7730
  %cmp.i = icmp slt i32 %7, %8, !dbg !7731
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7732

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !7733
  store i32 %9, i32* %retval.i, align 4, !dbg !7734
  br label %av_clip_c.exit, !dbg !7734

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !7735
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !7736
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !7737
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7738

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !7739
  store i32 %12, i32* %retval.i, align 4, !dbg !7740
  br label %av_clip_c.exit, !dbg !7740

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !7741
  store i32 %13, i32* %retval.i, align 4, !dbg !7742
  br label %av_clip_c.exit, !dbg !7742

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !7743
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7744
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7745
  %16 = load i32, i32* %index3, align 8, !dbg !7746
  %add = add nsw i32 %16, %14, !dbg !7746
  store i32 %add, i32* %index3, align 8, !dbg !7746
  ret void, !dbg !7747
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #4 !dbg !7748 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7751, metadata !1849), !dbg !7752
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7753
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !7754
  ret void, !dbg !7755
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

declare i8* @av_malloc_array(i64, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @spx_strategy(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !7756 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %dst_start_freq = alloca i32, align 4
  %dst_end_freq = alloca i32, align 4
  %src_start_freq = alloca i32, align 4
  %start_subband = alloca i32, align 4
  %end_subband = alloca i32, align 4
  %ch = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !7759, metadata !1849), !dbg !7760
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !7761, metadata !1849), !dbg !7762
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !7763, metadata !1849), !dbg !7764
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7765
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !7766
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !7764
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !7767, metadata !1849), !dbg !7768
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7769
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !7770
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !7770
  store i32 %2, i32* %fbw_channels, align 4, !dbg !7768
  call void @llvm.dbg.declare(metadata i32* %dst_start_freq, metadata !7771, metadata !1849), !dbg !7772
  call void @llvm.dbg.declare(metadata i32* %dst_end_freq, metadata !7773, metadata !1849), !dbg !7774
  call void @llvm.dbg.declare(metadata i32* %src_start_freq, metadata !7775, metadata !1849), !dbg !7776
  call void @llvm.dbg.declare(metadata i32* %start_subband, metadata !7777, metadata !1849), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %end_subband, metadata !7779, metadata !1849), !dbg !7780
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7781, metadata !1849), !dbg !7782
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7783
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 12, !dbg !7785
  %4 = load i32, i32* %channel_mode, align 4, !dbg !7785
  %cmp = icmp eq i32 %4, 1, !dbg !7786
  br i1 %cmp, label %if.then, label %if.else, !dbg !7787

if.then:                                          ; preds = %entry
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7788
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 57, !dbg !7790
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 1, !dbg !7788
  store i8 1, i8* %arrayidx, align 1, !dbg !7791
  br label %if.end, !dbg !7792

if.else:                                          ; preds = %entry
  store i32 1, i32* %ch, align 4, !dbg !7793
  br label %for.cond, !dbg !7796

for.cond:                                         ; preds = %for.inc, %if.else
  %6 = load i32, i32* %ch, align 4, !dbg !7797
  %7 = load i32, i32* %fbw_channels, align 4, !dbg !7800
  %cmp2 = icmp sle i32 %6, %7, !dbg !7801
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7802

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7803
  %call = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !7804
  %conv = trunc i32 %call to i8, !dbg !7804
  %9 = load i32, i32* %ch, align 4, !dbg !7805
  %idxprom = sext i32 %9 to i64, !dbg !7806
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7806
  %channel_uses_spx3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 57, !dbg !7807
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx3, i64 0, i64 %idxprom, !dbg !7806
  store i8 %conv, i8* %arrayidx4, align 1, !dbg !7808
  br label %for.inc, !dbg !7806

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %ch, align 4, !dbg !7809
  %inc = add nsw i32 %11, 1, !dbg !7809
  store i32 %inc, i32* %ch, align 4, !dbg !7809
  br label %for.cond, !dbg !7811, !llvm.loop !7812

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7814
  %call5 = call i32 @get_bits(%struct.GetBitContext* %12, i32 2), !dbg !7815
  store i32 %call5, i32* %dst_start_freq, align 4, !dbg !7816
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7817
  %call6 = call i32 @get_bits(%struct.GetBitContext* %13, i32 3), !dbg !7818
  %add = add i32 %call6, 2, !dbg !7819
  store i32 %add, i32* %start_subband, align 4, !dbg !7820
  %14 = load i32, i32* %start_subband, align 4, !dbg !7821
  %cmp7 = icmp sgt i32 %14, 7, !dbg !7823
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !7824

if.then9:                                         ; preds = %if.end
  %15 = load i32, i32* %start_subband, align 4, !dbg !7825
  %sub = sub nsw i32 %15, 7, !dbg !7826
  %16 = load i32, i32* %start_subband, align 4, !dbg !7827
  %add10 = add nsw i32 %16, %sub, !dbg !7827
  store i32 %add10, i32* %start_subband, align 4, !dbg !7827
  br label %if.end11, !dbg !7828

if.end11:                                         ; preds = %if.then9, %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7829
  %call12 = call i32 @get_bits(%struct.GetBitContext* %17, i32 3), !dbg !7830
  %add13 = add i32 %call12, 5, !dbg !7831
  store i32 %add13, i32* %end_subband, align 4, !dbg !7832
  %18 = load i32, i32* %end_subband, align 4, !dbg !7833
  %sub14 = sub nsw i32 %18, 5, !dbg !7834
  %idxprom15 = sext i32 %sub14 to i64, !dbg !7835
  %arrayidx16 = getelementptr inbounds [8 x i32], [8 x i32]* @end_freq_inv_tab, i64 0, i64 %idxprom15, !dbg !7835
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !7835
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7836
  %spx_dst_end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 60, !dbg !7837
  store i32 %19, i32* %spx_dst_end_freq, align 8, !dbg !7838
  %21 = load i32, i32* %end_subband, align 4, !dbg !7839
  %cmp17 = icmp sgt i32 %21, 7, !dbg !7841
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !7842

if.then19:                                        ; preds = %if.end11
  %22 = load i32, i32* %end_subband, align 4, !dbg !7843
  %sub20 = sub nsw i32 %22, 7, !dbg !7844
  %23 = load i32, i32* %end_subband, align 4, !dbg !7845
  %add21 = add nsw i32 %23, %sub20, !dbg !7845
  store i32 %add21, i32* %end_subband, align 4, !dbg !7845
  br label %if.end22, !dbg !7846

if.end22:                                         ; preds = %if.then19, %if.end11
  %24 = load i32, i32* %dst_start_freq, align 4, !dbg !7847
  %mul = mul nsw i32 %24, 12, !dbg !7848
  %add23 = add nsw i32 %mul, 25, !dbg !7849
  store i32 %add23, i32* %dst_start_freq, align 4, !dbg !7850
  %25 = load i32, i32* %start_subband, align 4, !dbg !7851
  %mul24 = mul nsw i32 %25, 12, !dbg !7852
  %add25 = add nsw i32 %mul24, 25, !dbg !7853
  store i32 %add25, i32* %src_start_freq, align 4, !dbg !7854
  %26 = load i32, i32* %end_subband, align 4, !dbg !7855
  %mul26 = mul nsw i32 %26, 12, !dbg !7856
  %add27 = add nsw i32 %mul26, 25, !dbg !7857
  store i32 %add27, i32* %dst_end_freq, align 4, !dbg !7858
  %27 = load i32, i32* %start_subband, align 4, !dbg !7859
  %28 = load i32, i32* %end_subband, align 4, !dbg !7861
  %cmp28 = icmp sge i32 %27, %28, !dbg !7862
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !7863

if.then30:                                        ; preds = %if.end22
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7864
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 1, !dbg !7866
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7866
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !7864
  %32 = load i32, i32* %start_subband, align 4, !dbg !7867
  %33 = load i32, i32* %end_subband, align 4, !dbg !7868
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.40, i32 0, i32 0), i32 %32, i32 %33), !dbg !7869
  store i32 -1094995529, i32* %retval, align 4, !dbg !7870
  br label %return, !dbg !7870

if.end31:                                         ; preds = %if.end22
  %34 = load i32, i32* %dst_start_freq, align 4, !dbg !7871
  %35 = load i32, i32* %src_start_freq, align 4, !dbg !7873
  %cmp32 = icmp sge i32 %34, %35, !dbg !7874
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !7875

if.then34:                                        ; preds = %if.end31
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7876
  %avctx35 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 1, !dbg !7878
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx35, align 8, !dbg !7878
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !7876
  %39 = load i32, i32* %dst_start_freq, align 4, !dbg !7879
  %40 = load i32, i32* %src_start_freq, align 4, !dbg !7880
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i32 0, i32 0), i32 %39, i32 %40), !dbg !7881
  store i32 -1094995529, i32* %retval, align 4, !dbg !7882
  br label %return, !dbg !7882

if.end36:                                         ; preds = %if.end31
  %41 = load i32, i32* %dst_start_freq, align 4, !dbg !7883
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7884
  %spx_dst_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 61, !dbg !7885
  store i32 %41, i32* %spx_dst_start_freq, align 4, !dbg !7886
  %43 = load i32, i32* %src_start_freq, align 4, !dbg !7887
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7888
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 59, !dbg !7889
  store i32 %43, i32* %spx_src_start_freq, align 4, !dbg !7890
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7891
  %46 = load i32, i32* %blk.addr, align 4, !dbg !7892
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7893
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 25, !dbg !7894
  %48 = load i32, i32* %eac3, align 4, !dbg !7894
  %49 = load i32, i32* %start_subband, align 4, !dbg !7895
  %50 = load i32, i32* %end_subband, align 4, !dbg !7896
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7897
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 62, !dbg !7898
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7899
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 64, !dbg !7900
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i32 0, i32 0, !dbg !7899
  %53 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7901
  %spx_band_struct = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %53, i32 0, i32 63, !dbg !7902
  %arraydecay37 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_struct, i32 0, i32 0, !dbg !7901
  call void @decode_band_structure(%struct.GetBitContext* %45, i32 %46, i32 %48, i32 0, i32 %49, i32 %50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @ff_eac3_default_spx_band_struct, i32 0, i32 0), i32* %num_spx_bands, i8* %arraydecay, i8* %arraydecay37, i32 17), !dbg !7903
  store i32 0, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

return:                                           ; preds = %if.end36, %if.then34, %if.then30
  %54 = load i32, i32* %retval, align 4, !dbg !7905
  ret i32 %54, !dbg !7905
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @spx_coordinates(%struct.AC3DecodeContext* %s) #4 !dbg !7906 {
entry:
  %x.addr.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i83, metadata !7909, metadata !1849), !dbg !7911
  %bits.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i84, metadata !7926, metadata !1849), !dbg !7927
  %retval1.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %retval1.i85, metadata !7928, metadata !1849), !dbg !7929
  %bit_mask.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_mask.i86, metadata !7930, metadata !1849), !dbg !7931
  %guess.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %guess.i87, metadata !7932, metadata !1849), !dbg !7933
  %square.i88 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %square.i88, metadata !7934, metadata !1849), !dbg !7935
  %i.i89 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i89, metadata !7936, metadata !1849), !dbg !7937
  %accu.i90 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %accu.i90, metadata !7938, metadata !1849), !dbg !7939
  %shift1.i91 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift1.i91, metadata !7940, metadata !1849), !dbg !7941
  %shift2.i92 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift2.i92, metadata !7942, metadata !1849), !dbg !7943
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7909, metadata !1849), !dbg !7944
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7926, metadata !1849), !dbg !7946
  %retval1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %retval1.i, metadata !7928, metadata !1849), !dbg !7947
  %bit_mask.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_mask.i, metadata !7930, metadata !1849), !dbg !7948
  %guess.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %guess.i, metadata !7932, metadata !1849), !dbg !7949
  %square.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %square.i, metadata !7934, metadata !1849), !dbg !7950
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !7936, metadata !1849), !dbg !7951
  %accu.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %accu.i, metadata !7938, metadata !1849), !dbg !7952
  %shift1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift1.i, metadata !7940, metadata !1849), !dbg !7953
  %shift2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift2.i, metadata !7942, metadata !1849), !dbg !7954
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %ch = alloca i32, align 4
  %bnd = alloca i32, align 4
  %spx_blend = alloca i32, align 4
  %bin = alloca i32, align 4
  %master_spx_coord = alloca i32, align 4
  %bandsize = alloca i32, align 4
  %spx_coord_exp = alloca i32, align 4
  %spx_coord_mant = alloca i32, align 4
  %nratio = alloca i32, align 4
  %sblend = alloca i32, align 4
  %nblend = alloca i32, align 4
  %accu = alloca i64, align 8
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !7955, metadata !1849), !dbg !7956
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !7957, metadata !1849), !dbg !7958
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7959
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !7960
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !7958
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !7961, metadata !1849), !dbg !7962
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7963
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !7964
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !7964
  store i32 %2, i32* %fbw_channels, align 4, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7965, metadata !1849), !dbg !7966
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !7967, metadata !1849), !dbg !7968
  store i32 1, i32* %ch, align 4, !dbg !7969
  br label %for.cond, !dbg !7970

for.cond:                                         ; preds = %for.inc80, %entry
  %3 = load i32, i32* %ch, align 4, !dbg !7971
  %4 = load i32, i32* %fbw_channels, align 4, !dbg !7973
  %cmp = icmp sle i32 %3, %4, !dbg !7974
  br i1 %cmp, label %for.body, label %for.end82, !dbg !7975

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %ch, align 4, !dbg !7976
  %idxprom = sext i32 %5 to i64, !dbg !7977
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7977
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 57, !dbg !7978
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom, !dbg !7977
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7977
  %tobool = icmp ne i8 %7, 0, !dbg !7977
  br i1 %tobool, label %if.then, label %if.else75, !dbg !7979

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %ch, align 4, !dbg !7980
  %idxprom2 = sext i32 %8 to i64, !dbg !7981
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7981
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 65, !dbg !7982
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom2, !dbg !7981
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !7981
  %conv = zext i8 %10 to i32, !dbg !7981
  %tobool4 = icmp ne i32 %conv, 0, !dbg !7981
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !7983

lor.lhs.false:                                    ; preds = %if.then
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7984
  %call = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !7986
  %tobool5 = icmp ne i32 %call, 0, !dbg !7986
  br i1 %tobool5, label %if.then6, label %if.end74, !dbg !7987

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata i32* %spx_blend, metadata !7988, metadata !1849), !dbg !7989
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !7990, metadata !1849), !dbg !7991
  call void @llvm.dbg.declare(metadata i32* %master_spx_coord, metadata !7992, metadata !1849), !dbg !7993
  %12 = load i32, i32* %ch, align 4, !dbg !7994
  %idxprom7 = sext i32 %12 to i64, !dbg !7995
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7995
  %first_spx_coords8 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 65, !dbg !7996
  %arrayidx9 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords8, i64 0, i64 %idxprom7, !dbg !7995
  store i8 0, i8* %arrayidx9, align 1, !dbg !7997
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7998
  %call10 = call i32 @get_bits(%struct.GetBitContext* %14, i32 5), !dbg !7999
  store i32 %call10, i32* %spx_blend, align 4, !dbg !8000
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8001
  %call11 = call i32 @get_bits(%struct.GetBitContext* %15, i32 2), !dbg !8002
  %mul = mul i32 %call11, 3, !dbg !8003
  store i32 %mul, i32* %master_spx_coord, align 4, !dbg !8004
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8005
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 59, !dbg !8006
  %17 = load i32, i32* %spx_src_start_freq, align 4, !dbg !8006
  store i32 %17, i32* %bin, align 4, !dbg !8007
  store i32 0, i32* %bnd, align 4, !dbg !8008
  br label %for.cond12, !dbg !8009

for.cond12:                                       ; preds = %for.inc, %if.then6
  %18 = load i32, i32* %bnd, align 4, !dbg !8010
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8012
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 62, !dbg !8013
  %20 = load i32, i32* %num_spx_bands, align 32, !dbg !8013
  %cmp13 = icmp slt i32 %18, %20, !dbg !8014
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !8015

for.body15:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata i32* %bandsize, metadata !8016, metadata !1849), !dbg !8017
  %21 = load i32, i32* %bnd, align 4, !dbg !8018
  %idxprom16 = sext i32 %21 to i64, !dbg !8019
  %22 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8019
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %22, i32 0, i32 64, !dbg !8020
  %arrayidx17 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i64 0, i64 %idxprom16, !dbg !8019
  %23 = load i8, i8* %arrayidx17, align 1, !dbg !8019
  %conv18 = zext i8 %23 to i32, !dbg !8019
  store i32 %conv18, i32* %bandsize, align 4, !dbg !8017
  call void @llvm.dbg.declare(metadata i32* %spx_coord_exp, metadata !8021, metadata !1849), !dbg !8022
  call void @llvm.dbg.declare(metadata i32* %spx_coord_mant, metadata !8023, metadata !1849), !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %nratio, metadata !8025, metadata !1849), !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %sblend, metadata !8027, metadata !1849), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %nblend, metadata !8029, metadata !1849), !dbg !8030
  call void @llvm.dbg.declare(metadata i64* %accu, metadata !8031, metadata !1849), !dbg !8032
  %24 = load i32, i32* %bin, align 4, !dbg !8033
  %shl = shl i32 %24, 23, !dbg !8034
  %25 = load i32, i32* %bandsize, align 4, !dbg !8035
  %shl19 = shl i32 %25, 22, !dbg !8036
  %add = add nsw i32 %shl, %shl19, !dbg !8037
  %conv20 = sext i32 %add to i64, !dbg !8038
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8039
  %spx_dst_end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 60, !dbg !8040
  %27 = load i32, i32* %spx_dst_end_freq, align 8, !dbg !8040
  %conv21 = sext i32 %27 to i64, !dbg !8041
  %mul22 = mul nsw i64 %conv20, %conv21, !dbg !8042
  store i64 %mul22, i64* %accu, align 8, !dbg !8032
  %28 = load i64, i64* %accu, align 8, !dbg !8043
  %shr = ashr i64 %28, 32, !dbg !8044
  %conv23 = trunc i64 %shr to i32, !dbg !8045
  store i32 %conv23, i32* %nratio, align 4, !dbg !8046
  %29 = load i32, i32* %spx_blend, align 4, !dbg !8047
  %shl24 = shl i32 %29, 18, !dbg !8048
  %30 = load i32, i32* %nratio, align 4, !dbg !8049
  %sub = sub nsw i32 %30, %shl24, !dbg !8049
  store i32 %sub, i32* %nratio, align 4, !dbg !8049
  %31 = load i32, i32* %nratio, align 4, !dbg !8050
  %cmp25 = icmp slt i32 %31, 0, !dbg !8051
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !8052

if.then27:                                        ; preds = %for.body15
  store i32 0, i32* %nblend, align 4, !dbg !8053
  store i32 8388608, i32* %sblend, align 4, !dbg !8055
  br label %if.end40, !dbg !8056

if.else:                                          ; preds = %for.body15
  %32 = load i32, i32* %nratio, align 4, !dbg !8057
  %cmp28 = icmp sgt i32 %32, 8388607, !dbg !8059
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !8057

if.then30:                                        ; preds = %if.else
  store i32 14529495, i32* %nblend, align 4, !dbg !8060
  store i32 0, i32* %sblend, align 4, !dbg !8062
  br label %if.end, !dbg !8063

if.else31:                                        ; preds = %if.else
  %33 = load i32, i32* %nratio, align 4, !dbg !8064
  store i32 %33, i32* %x.addr.i, align 4, !dbg !8065
  store i32 23, i32* %bits.addr.i, align 4, !dbg !8065
  %34 = load i32, i32* %bits.addr.i, align 4, !dbg !8066
  %sub.i = sub nsw i32 30, %34, !dbg !8067
  store i32 %sub.i, i32* %shift1.i, align 4, !dbg !7953
  %35 = load i32, i32* %bits.addr.i, align 4, !dbg !8068
  %sub2.i = sub nsw i32 %35, 15, !dbg !8069
  store i32 %sub2.i, i32* %shift2.i, align 4, !dbg !7954
  %36 = load i32, i32* %shift1.i, align 4, !dbg !8070
  %cmp.i = icmp sgt i32 %36, 0, !dbg !8072
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8073

if.then.i:                                        ; preds = %if.else31
  %37 = load i32, i32* %x.addr.i, align 4, !dbg !8074
  %38 = load i32, i32* %shift1.i, align 4, !dbg !8076
  %shl.i = shl i32 %37, %38, !dbg !8077
  %call.i = call i32 @ff_sqrt(i32 %shl.i) #3, !dbg !8078
  store i32 %call.i, i32* %retval1.i, align 4, !dbg !8079
  br label %if.end.i, !dbg !8080

if.else.i:                                        ; preds = %if.else31
  %39 = load i32, i32* %x.addr.i, align 4, !dbg !8081
  %40 = load i32, i32* %shift1.i, align 4, !dbg !8082
  %sub3.i = sub nsw i32 0, %40, !dbg !8083
  %shr.i = ashr i32 %39, %sub3.i, !dbg !8084
  %call4.i = call i32 @ff_sqrt(i32 %shr.i) #3, !dbg !8085
  store i32 %call4.i, i32* %retval1.i, align 4, !dbg !8086
  br label %if.end.i, !dbg !8065

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %41 = load i32, i32* %shift2.i, align 4, !dbg !8087
  %cmp5.i = icmp sgt i32 %41, 0, !dbg !8089
  br i1 %cmp5.i, label %if.then6.i, label %if.else22.i, !dbg !8090

if.then6.i:                                       ; preds = %if.end.i
  %42 = load i32, i32* %retval1.i, align 4, !dbg !8091
  %43 = load i32, i32* %shift2.i, align 4, !dbg !8093
  %shl7.i = shl i32 %42, %43, !dbg !8094
  store i32 %shl7.i, i32* %retval1.i, align 4, !dbg !8095
  %44 = load i32, i32* %shift2.i, align 4, !dbg !8096
  %sub8.i = sub nsw i32 %44, 1, !dbg !8097
  %shl9.i = shl i32 1, %sub8.i, !dbg !8098
  store i32 %shl9.i, i32* %bit_mask.i, align 4, !dbg !8099
  store i32 0, i32* %i.i, align 4, !dbg !8100
  br label %for.cond.i, !dbg !8102

for.cond.i:                                       ; preds = %if.end20.i, %if.then6.i
  %45 = load i32, i32* %i.i, align 4, !dbg !8103
  %46 = load i32, i32* %shift2.i, align 4, !dbg !8106
  %cmp10.i = icmp slt i32 %45, %46, !dbg !8107
  br i1 %cmp10.i, label %for.body.i, label %for.end.i, !dbg !8108

for.body.i:                                       ; preds = %for.cond.i
  %47 = load i32, i32* %retval1.i, align 4, !dbg !8109
  %48 = load i32, i32* %bit_mask.i, align 4, !dbg !8111
  %add.i = add nsw i32 %47, %48, !dbg !8112
  store i32 %add.i, i32* %guess.i, align 4, !dbg !8113
  %49 = load i32, i32* %guess.i, align 4, !dbg !8114
  %conv.i = sext i32 %49 to i64, !dbg !8115
  %50 = load i32, i32* %guess.i, align 4, !dbg !8116
  %conv11.i = sext i32 %50 to i64, !dbg !8116
  %mul.i = mul nsw i64 %conv.i, %conv11.i, !dbg !8117
  store i64 %mul.i, i64* %accu.i, align 8, !dbg !8118
  %51 = load i64, i64* %accu.i, align 8, !dbg !8119
  %52 = load i32, i32* %bit_mask.i, align 4, !dbg !8120
  %conv12.i = sext i32 %52 to i64, !dbg !8120
  %add13.i = add nsw i64 %51, %conv12.i, !dbg !8121
  %53 = load i32, i32* %bits.addr.i, align 4, !dbg !8122
  %sh_prom.i = zext i32 %53 to i64, !dbg !8123
  %shr14.i = ashr i64 %add13.i, %sh_prom.i, !dbg !8123
  %conv15.i = trunc i64 %shr14.i to i32, !dbg !8124
  store i32 %conv15.i, i32* %square.i, align 4, !dbg !8125
  %54 = load i32, i32* %x.addr.i, align 4, !dbg !8126
  %55 = load i32, i32* %square.i, align 4, !dbg !8128
  %cmp16.i = icmp sge i32 %54, %55, !dbg !8129
  br i1 %cmp16.i, label %if.then18.i, label %if.end20.i, !dbg !8130

if.then18.i:                                      ; preds = %for.body.i
  %56 = load i32, i32* %bit_mask.i, align 4, !dbg !8131
  %57 = load i32, i32* %retval1.i, align 4, !dbg !8132
  %add19.i = add nsw i32 %57, %56, !dbg !8132
  store i32 %add19.i, i32* %retval1.i, align 4, !dbg !8132
  br label %if.end20.i, !dbg !8133

if.end20.i:                                       ; preds = %if.then18.i, %for.body.i
  %58 = load i32, i32* %bit_mask.i, align 4, !dbg !8134
  %shr21.i = ashr i32 %58, 1, !dbg !8134
  store i32 %shr21.i, i32* %bit_mask.i, align 4, !dbg !8134
  %59 = load i32, i32* %i.i, align 4, !dbg !8135
  %inc.i = add nsw i32 %59, 1, !dbg !8135
  store i32 %inc.i, i32* %i.i, align 4, !dbg !8135
  br label %for.cond.i, !dbg !8137, !llvm.loop !8138

for.end.i:                                        ; preds = %for.cond.i
  br label %fixed_sqrt.exit, !dbg !8140

if.else22.i:                                      ; preds = %if.end.i
  %60 = load i32, i32* %shift2.i, align 4, !dbg !8141
  %sub23.i = sub nsw i32 0, %60, !dbg !8142
  %61 = load i32, i32* %retval1.i, align 4, !dbg !8143
  %shr24.i = ashr i32 %61, %sub23.i, !dbg !8143
  store i32 %shr24.i, i32* %retval1.i, align 4, !dbg !8143
  br label %fixed_sqrt.exit, !dbg !8065

fixed_sqrt.exit:                                  ; preds = %for.end.i, %if.else22.i
  %62 = load i32, i32* %retval1.i, align 4, !dbg !8144
  store i32 %62, i32* %nblend, align 4, !dbg !8145
  %63 = load i32, i32* %nblend, align 4, !dbg !8146
  %conv33 = sext i32 %63 to i64, !dbg !8147
  %mul34 = mul nsw i64 %conv33, 1859775393, !dbg !8148
  store i64 %mul34, i64* %accu, align 8, !dbg !8149
  %64 = load i64, i64* %accu, align 8, !dbg !8150
  %add35 = add nsw i64 %64, 536870912, !dbg !8151
  %shr36 = ashr i64 %add35, 30, !dbg !8152
  %conv37 = trunc i64 %shr36 to i32, !dbg !8153
  store i32 %conv37, i32* %nblend, align 4, !dbg !8154
  %65 = load i32, i32* %nratio, align 4, !dbg !8155
  %sub38 = sub nsw i32 8388608, %65, !dbg !8156
  store i32 %sub38, i32* %x.addr.i83, align 4, !dbg !8157
  store i32 23, i32* %bits.addr.i84, align 4, !dbg !8157
  %66 = load i32, i32* %bits.addr.i84, align 4, !dbg !8158
  %sub.i93 = sub nsw i32 30, %66, !dbg !8159
  store i32 %sub.i93, i32* %shift1.i91, align 4, !dbg !7941
  %67 = load i32, i32* %bits.addr.i84, align 4, !dbg !8160
  %sub2.i94 = sub nsw i32 %67, 15, !dbg !8161
  store i32 %sub2.i94, i32* %shift2.i92, align 4, !dbg !7943
  %68 = load i32, i32* %shift1.i91, align 4, !dbg !8162
  %cmp.i95 = icmp sgt i32 %68, 0, !dbg !8163
  br i1 %cmp.i95, label %if.then.i98, label %if.else.i102, !dbg !8164

if.then.i98:                                      ; preds = %fixed_sqrt.exit
  %69 = load i32, i32* %x.addr.i83, align 4, !dbg !8165
  %70 = load i32, i32* %shift1.i91, align 4, !dbg !8166
  %shl.i96 = shl i32 %69, %70, !dbg !8167
  %call.i97 = call i32 @ff_sqrt(i32 %shl.i96) #3, !dbg !8168
  store i32 %call.i97, i32* %retval1.i85, align 4, !dbg !8169
  br label %if.end.i104, !dbg !8170

if.else.i102:                                     ; preds = %fixed_sqrt.exit
  %71 = load i32, i32* %x.addr.i83, align 4, !dbg !8171
  %72 = load i32, i32* %shift1.i91, align 4, !dbg !8172
  %sub3.i99 = sub nsw i32 0, %72, !dbg !8173
  %shr.i100 = ashr i32 %71, %sub3.i99, !dbg !8174
  %call4.i101 = call i32 @ff_sqrt(i32 %shr.i100) #3, !dbg !8175
  store i32 %call4.i101, i32* %retval1.i85, align 4, !dbg !8176
  br label %if.end.i104, !dbg !8157

if.end.i104:                                      ; preds = %if.else.i102, %if.then.i98
  %73 = load i32, i32* %shift2.i92, align 4, !dbg !8177
  %cmp5.i103 = icmp sgt i32 %73, 0, !dbg !8178
  br i1 %cmp5.i103, label %if.then6.i108, label %if.else22.i130, !dbg !8179

if.then6.i108:                                    ; preds = %if.end.i104
  %74 = load i32, i32* %retval1.i85, align 4, !dbg !8180
  %75 = load i32, i32* %shift2.i92, align 4, !dbg !8181
  %shl7.i105 = shl i32 %74, %75, !dbg !8182
  store i32 %shl7.i105, i32* %retval1.i85, align 4, !dbg !8183
  %76 = load i32, i32* %shift2.i92, align 4, !dbg !8184
  %sub8.i106 = sub nsw i32 %76, 1, !dbg !8185
  %shl9.i107 = shl i32 1, %sub8.i106, !dbg !8186
  store i32 %shl9.i107, i32* %bit_mask.i86, align 4, !dbg !8187
  store i32 0, i32* %i.i89, align 4, !dbg !8188
  br label %for.cond.i110, !dbg !8189

for.cond.i110:                                    ; preds = %if.end20.i125, %if.then6.i108
  %77 = load i32, i32* %i.i89, align 4, !dbg !8190
  %78 = load i32, i32* %shift2.i92, align 4, !dbg !8191
  %cmp10.i109 = icmp slt i32 %77, %78, !dbg !8192
  br i1 %cmp10.i109, label %for.body.i121, label %for.end.i127, !dbg !8193

for.body.i121:                                    ; preds = %for.cond.i110
  %79 = load i32, i32* %retval1.i85, align 4, !dbg !8194
  %80 = load i32, i32* %bit_mask.i86, align 4, !dbg !8195
  %add.i111 = add nsw i32 %79, %80, !dbg !8196
  store i32 %add.i111, i32* %guess.i87, align 4, !dbg !8197
  %81 = load i32, i32* %guess.i87, align 4, !dbg !8198
  %conv.i112 = sext i32 %81 to i64, !dbg !8199
  %82 = load i32, i32* %guess.i87, align 4, !dbg !8200
  %conv11.i113 = sext i32 %82 to i64, !dbg !8200
  %mul.i114 = mul nsw i64 %conv.i112, %conv11.i113, !dbg !8201
  store i64 %mul.i114, i64* %accu.i90, align 8, !dbg !8202
  %83 = load i64, i64* %accu.i90, align 8, !dbg !8203
  %84 = load i32, i32* %bit_mask.i86, align 4, !dbg !8204
  %conv12.i115 = sext i32 %84 to i64, !dbg !8204
  %add13.i116 = add nsw i64 %83, %conv12.i115, !dbg !8205
  %85 = load i32, i32* %bits.addr.i84, align 4, !dbg !8206
  %sh_prom.i117 = zext i32 %85 to i64, !dbg !8207
  %shr14.i118 = ashr i64 %add13.i116, %sh_prom.i117, !dbg !8207
  %conv15.i119 = trunc i64 %shr14.i118 to i32, !dbg !8208
  store i32 %conv15.i119, i32* %square.i88, align 4, !dbg !8209
  %86 = load i32, i32* %x.addr.i83, align 4, !dbg !8210
  %87 = load i32, i32* %square.i88, align 4, !dbg !8211
  %cmp16.i120 = icmp sge i32 %86, %87, !dbg !8212
  br i1 %cmp16.i120, label %if.then18.i123, label %if.end20.i125, !dbg !8213

if.then18.i123:                                   ; preds = %for.body.i121
  %88 = load i32, i32* %bit_mask.i86, align 4, !dbg !8214
  %89 = load i32, i32* %retval1.i85, align 4, !dbg !8215
  %add19.i122 = add nsw i32 %89, %88, !dbg !8215
  store i32 %add19.i122, i32* %retval1.i85, align 4, !dbg !8215
  br label %if.end20.i125, !dbg !8216

if.end20.i125:                                    ; preds = %if.then18.i123, %for.body.i121
  %90 = load i32, i32* %bit_mask.i86, align 4, !dbg !8217
  %shr21.i124 = ashr i32 %90, 1, !dbg !8217
  store i32 %shr21.i124, i32* %bit_mask.i86, align 4, !dbg !8217
  %91 = load i32, i32* %i.i89, align 4, !dbg !8218
  %inc.i126 = add nsw i32 %91, 1, !dbg !8218
  store i32 %inc.i126, i32* %i.i89, align 4, !dbg !8218
  br label %for.cond.i110, !dbg !8219, !llvm.loop !8138

for.end.i127:                                     ; preds = %for.cond.i110
  br label %fixed_sqrt.exit131, !dbg !8220

if.else22.i130:                                   ; preds = %if.end.i104
  %92 = load i32, i32* %shift2.i92, align 4, !dbg !8221
  %sub23.i128 = sub nsw i32 0, %92, !dbg !8222
  %93 = load i32, i32* %retval1.i85, align 4, !dbg !8223
  %shr24.i129 = ashr i32 %93, %sub23.i128, !dbg !8223
  store i32 %shr24.i129, i32* %retval1.i85, align 4, !dbg !8223
  br label %fixed_sqrt.exit131, !dbg !8157

fixed_sqrt.exit131:                               ; preds = %for.end.i127, %if.else22.i130
  %94 = load i32, i32* %retval1.i85, align 4, !dbg !8224
  store i32 %94, i32* %sblend, align 4, !dbg !8225
  br label %if.end

if.end:                                           ; preds = %fixed_sqrt.exit131, %if.then30
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then27
  %95 = load i32, i32* %bandsize, align 4, !dbg !8226
  %96 = load i32, i32* %bin, align 4, !dbg !8227
  %add41 = add nsw i32 %96, %95, !dbg !8227
  store i32 %add41, i32* %bin, align 4, !dbg !8227
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8228
  %call42 = call i32 @get_bits(%struct.GetBitContext* %97, i32 4), !dbg !8229
  store i32 %call42, i32* %spx_coord_exp, align 4, !dbg !8230
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8231
  %call43 = call i32 @get_bits(%struct.GetBitContext* %98, i32 2), !dbg !8232
  store i32 %call43, i32* %spx_coord_mant, align 4, !dbg !8233
  %99 = load i32, i32* %spx_coord_exp, align 4, !dbg !8234
  %cmp44 = icmp eq i32 %99, 15, !dbg !8236
  br i1 %cmp44, label %if.then46, label %if.else48, !dbg !8237

if.then46:                                        ; preds = %if.end40
  %100 = load i32, i32* %spx_coord_mant, align 4, !dbg !8238
  %shl47 = shl i32 %100, 1, !dbg !8238
  store i32 %shl47, i32* %spx_coord_mant, align 4, !dbg !8238
  br label %if.end50, !dbg !8240

if.else48:                                        ; preds = %if.end40
  %101 = load i32, i32* %spx_coord_mant, align 4, !dbg !8241
  %add49 = add nsw i32 %101, 4, !dbg !8241
  store i32 %add49, i32* %spx_coord_mant, align 4, !dbg !8241
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.then46
  %102 = load i32, i32* %spx_coord_exp, align 4, !dbg !8242
  %sub51 = sub nsw i32 25, %102, !dbg !8243
  %103 = load i32, i32* %master_spx_coord, align 4, !dbg !8244
  %sub52 = sub nsw i32 %sub51, %103, !dbg !8245
  %104 = load i32, i32* %spx_coord_mant, align 4, !dbg !8246
  %shl53 = shl i32 %104, %sub52, !dbg !8246
  store i32 %shl53, i32* %spx_coord_mant, align 4, !dbg !8246
  %105 = load i32, i32* %nblend, align 4, !dbg !8247
  %conv54 = sext i32 %105 to i64, !dbg !8248
  %106 = load i32, i32* %spx_coord_mant, align 4, !dbg !8249
  %conv55 = sext i32 %106 to i64, !dbg !8249
  %mul56 = mul nsw i64 %conv54, %conv55, !dbg !8250
  store i64 %mul56, i64* %accu, align 8, !dbg !8251
  %107 = load i64, i64* %accu, align 8, !dbg !8252
  %add57 = add nsw i64 %107, 4194304, !dbg !8253
  %shr58 = ashr i64 %add57, 23, !dbg !8254
  %conv59 = trunc i64 %shr58 to i32, !dbg !8255
  %108 = load i32, i32* %bnd, align 4, !dbg !8256
  %idxprom60 = sext i32 %108 to i64, !dbg !8257
  %109 = load i32, i32* %ch, align 4, !dbg !8258
  %idxprom61 = sext i32 %109 to i64, !dbg !8257
  %110 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8257
  %spx_noise_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %110, i32 0, i32 66, !dbg !8259
  %arrayidx62 = getelementptr inbounds [7 x [17 x i32]], [7 x [17 x i32]]* %spx_noise_blend, i64 0, i64 %idxprom61, !dbg !8257
  %arrayidx63 = getelementptr inbounds [17 x i32], [17 x i32]* %arrayidx62, i64 0, i64 %idxprom60, !dbg !8257
  store i32 %conv59, i32* %arrayidx63, align 4, !dbg !8260
  %111 = load i32, i32* %sblend, align 4, !dbg !8261
  %conv64 = sext i32 %111 to i64, !dbg !8262
  %112 = load i32, i32* %spx_coord_mant, align 4, !dbg !8263
  %conv65 = sext i32 %112 to i64, !dbg !8263
  %mul66 = mul nsw i64 %conv64, %conv65, !dbg !8264
  store i64 %mul66, i64* %accu, align 8, !dbg !8265
  %113 = load i64, i64* %accu, align 8, !dbg !8266
  %add67 = add nsw i64 %113, 4194304, !dbg !8267
  %shr68 = ashr i64 %add67, 23, !dbg !8268
  %conv69 = trunc i64 %shr68 to i32, !dbg !8269
  %114 = load i32, i32* %bnd, align 4, !dbg !8270
  %idxprom70 = sext i32 %114 to i64, !dbg !8271
  %115 = load i32, i32* %ch, align 4, !dbg !8272
  %idxprom71 = sext i32 %115 to i64, !dbg !8271
  %116 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8271
  %spx_signal_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %116, i32 0, i32 67, !dbg !8273
  %arrayidx72 = getelementptr inbounds [7 x [17 x i32]], [7 x [17 x i32]]* %spx_signal_blend, i64 0, i64 %idxprom71, !dbg !8271
  %arrayidx73 = getelementptr inbounds [17 x i32], [17 x i32]* %arrayidx72, i64 0, i64 %idxprom70, !dbg !8271
  store i32 %conv69, i32* %arrayidx73, align 4, !dbg !8274
  br label %for.inc, !dbg !8275

for.inc:                                          ; preds = %if.end50
  %117 = load i32, i32* %bnd, align 4, !dbg !8276
  %inc = add nsw i32 %117, 1, !dbg !8276
  store i32 %inc, i32* %bnd, align 4, !dbg !8276
  br label %for.cond12, !dbg !8278, !llvm.loop !8279

for.end:                                          ; preds = %for.cond12
  br label %if.end74, !dbg !8281

if.end74:                                         ; preds = %for.end, %lor.lhs.false
  br label %if.end79, !dbg !8282

if.else75:                                        ; preds = %for.body
  %118 = load i32, i32* %ch, align 4, !dbg !8283
  %idxprom76 = sext i32 %118 to i64, !dbg !8285
  %119 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8285
  %first_spx_coords77 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %119, i32 0, i32 65, !dbg !8286
  %arrayidx78 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords77, i64 0, i64 %idxprom76, !dbg !8285
  store i8 1, i8* %arrayidx78, align 1, !dbg !8287
  br label %if.end79

if.end79:                                         ; preds = %if.else75, %if.end74
  br label %for.inc80, !dbg !8288

for.inc80:                                        ; preds = %if.end79
  %120 = load i32, i32* %ch, align 4, !dbg !8289
  %inc81 = add nsw i32 %120, 1, !dbg !8289
  store i32 %inc81, i32* %ch, align 4, !dbg !8289
  br label %for.cond, !dbg !8291, !llvm.loop !8292

for.end82:                                        ; preds = %for.cond
  ret void, !dbg !8294
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coupling_strategy(%struct.AC3DecodeContext* %s, i32 %blk, i8* %bit_alloc_stages) #4 !dbg !8295 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bit_alloc_stages.addr = alloca i8*, align 8
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %channel_mode = alloca i32, align 4
  %ch = alloca i32, align 4
  %cpl_start_subband = alloca i32, align 4
  %cpl_end_subband = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8298, metadata !1849), !dbg !8299
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8300, metadata !1849), !dbg !8301
  store i8* %bit_alloc_stages, i8** %bit_alloc_stages.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bit_alloc_stages.addr, metadata !8302, metadata !1849), !dbg !8303
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !8304, metadata !1849), !dbg !8305
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8306
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !8307
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !8305
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !8308, metadata !1849), !dbg !8309
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8310
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !8311
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !8311
  store i32 %2, i32* %fbw_channels, align 4, !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %channel_mode, metadata !8312, metadata !1849), !dbg !8313
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8314
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 12, !dbg !8315
  %4 = load i32, i32* %channel_mode2, align 4, !dbg !8315
  store i32 %4, i32* %channel_mode, align 4, !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8316, metadata !1849), !dbg !8317
  %5 = load i8*, i8** %bit_alloc_stages.addr, align 8, !dbg !8318
  call void @llvm.memset.p0i8.i64(i8* %5, i8 3, i64 7, i32 1, i1 false), !dbg !8319
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8320
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 25, !dbg !8322
  %7 = load i32, i32* %eac3, align 4, !dbg !8322
  %tobool = icmp ne i32 %7, 0, !dbg !8320
  br i1 %tobool, label %if.end, label %if.then, !dbg !8323

if.then:                                          ; preds = %entry
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8324
  %call = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !8325
  %9 = load i32, i32* %blk.addr, align 4, !dbg !8326
  %idxprom = sext i32 %9 to i64, !dbg !8327
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8327
  %cpl_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 45, !dbg !8328
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use, i64 0, i64 %idxprom, !dbg !8327
  store i32 %call, i32* %arrayidx, align 4, !dbg !8329
  br label %if.end, !dbg !8327

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %blk.addr, align 4, !dbg !8330
  %idxprom3 = sext i32 %11 to i64, !dbg !8332
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8332
  %cpl_in_use4 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 45, !dbg !8333
  %arrayidx5 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use4, i64 0, i64 %idxprom3, !dbg !8332
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !8332
  %tobool6 = icmp ne i32 %13, 0, !dbg !8332
  br i1 %tobool6, label %if.then7, label %if.else50, !dbg !8334

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cpl_start_subband, metadata !8335, metadata !1849), !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %cpl_end_subband, metadata !8338, metadata !1849), !dbg !8339
  %14 = load i32, i32* %channel_mode, align 4, !dbg !8340
  %cmp = icmp slt i32 %14, 2, !dbg !8342
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !8343

if.then8:                                         ; preds = %if.then7
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8344
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 1, !dbg !8346
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8346
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !8344
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i32 0, i32 0)), !dbg !8347
  store i32 -1094995529, i32* %retval, align 4, !dbg !8348
  br label %return, !dbg !8348

if.end9:                                          ; preds = %if.then7
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8349
  %eac310 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 25, !dbg !8351
  %19 = load i32, i32* %eac310, align 4, !dbg !8351
  %tobool11 = icmp ne i32 %19, 0, !dbg !8349
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !8352

land.lhs.true:                                    ; preds = %if.end9
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8353
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %20), !dbg !8355
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8355
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8356

if.then14:                                        ; preds = %land.lhs.true
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8357
  %avctx15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 1, !dbg !8359
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx15, align 8, !dbg !8359
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !8357
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0)), !dbg !8360
  store i32 -1163346256, i32* %retval, align 4, !dbg !8361
  br label %return, !dbg !8361

if.end16:                                         ; preds = %land.lhs.true, %if.end9
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8362
  %eac317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 25, !dbg !8364
  %25 = load i32, i32* %eac317, align 4, !dbg !8364
  %tobool18 = icmp ne i32 %25, 0, !dbg !8362
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !8365

land.lhs.true19:                                  ; preds = %if.end16
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8366
  %channel_mode20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 12, !dbg !8368
  %27 = load i32, i32* %channel_mode20, align 4, !dbg !8368
  %cmp21 = icmp eq i32 %27, 2, !dbg !8369
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !8370

if.then22:                                        ; preds = %land.lhs.true19
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8371
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 47, !dbg !8373
  %arrayidx23 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 1, !dbg !8371
  store i32 1, i32* %arrayidx23, align 4, !dbg !8374
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8375
  %channel_in_cpl24 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 47, !dbg !8376
  %arrayidx25 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl24, i64 0, i64 2, !dbg !8375
  store i32 1, i32* %arrayidx25, align 8, !dbg !8377
  br label %if.end31, !dbg !8378

if.else:                                          ; preds = %land.lhs.true19, %if.end16
  store i32 1, i32* %ch, align 4, !dbg !8379
  br label %for.cond, !dbg !8382

for.cond:                                         ; preds = %for.inc, %if.else
  %30 = load i32, i32* %ch, align 4, !dbg !8383
  %31 = load i32, i32* %fbw_channels, align 4, !dbg !8386
  %cmp26 = icmp sle i32 %30, %31, !dbg !8387
  br i1 %cmp26, label %for.body, label %for.end, !dbg !8388

for.body:                                         ; preds = %for.cond
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8389
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %32), !dbg !8390
  %33 = load i32, i32* %ch, align 4, !dbg !8391
  %idxprom28 = sext i32 %33 to i64, !dbg !8392
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8392
  %channel_in_cpl29 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 47, !dbg !8393
  %arrayidx30 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl29, i64 0, i64 %idxprom28, !dbg !8392
  store i32 %call27, i32* %arrayidx30, align 4, !dbg !8394
  br label %for.inc, !dbg !8392

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %ch, align 4, !dbg !8395
  %inc = add nsw i32 %35, 1, !dbg !8395
  store i32 %inc, i32* %ch, align 4, !dbg !8395
  br label %for.cond, !dbg !8397, !llvm.loop !8398

for.end:                                          ; preds = %for.cond
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then22
  %36 = load i32, i32* %channel_mode, align 4, !dbg !8400
  %cmp32 = icmp eq i32 %36, 2, !dbg !8402
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !8403

if.then33:                                        ; preds = %if.end31
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8404
  %call34 = call i32 @get_bits1(%struct.GetBitContext* %37), !dbg !8405
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8406
  %phase_flags_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 48, !dbg !8407
  store i32 %call34, i32* %phase_flags_in_use, align 4, !dbg !8408
  br label %if.end35, !dbg !8406

if.end35:                                         ; preds = %if.then33, %if.end31
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8409
  %call36 = call i32 @get_bits(%struct.GetBitContext* %39, i32 4), !dbg !8410
  store i32 %call36, i32* %cpl_start_subband, align 4, !dbg !8411
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8412
  %spx_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 56, !dbg !8413
  %41 = load i32, i32* %spx_in_use, align 32, !dbg !8413
  %tobool37 = icmp ne i32 %41, 0, !dbg !8412
  br i1 %tobool37, label %cond.true, label %cond.false, !dbg !8412

cond.true:                                        ; preds = %if.end35
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8414
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 59, !dbg !8416
  %43 = load i32, i32* %spx_src_start_freq, align 4, !dbg !8416
  %sub = sub nsw i32 %43, 37, !dbg !8417
  %div = sdiv i32 %sub, 12, !dbg !8418
  br label %cond.end, !dbg !8419

cond.false:                                       ; preds = %if.end35
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8420
  %call38 = call i32 @get_bits(%struct.GetBitContext* %44, i32 4), !dbg !8421
  %add = add i32 %call38, 3, !dbg !8422
  br label %cond.end, !dbg !8423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %add, %cond.false ], !dbg !8425
  store i32 %cond, i32* %cpl_end_subband, align 4, !dbg !8427
  %45 = load i32, i32* %cpl_start_subband, align 4, !dbg !8428
  %46 = load i32, i32* %cpl_end_subband, align 4, !dbg !8430
  %cmp39 = icmp sge i32 %45, %46, !dbg !8431
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !8432

if.then40:                                        ; preds = %cond.end
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8433
  %avctx41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 1, !dbg !8435
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx41, align 8, !dbg !8435
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !8433
  %50 = load i32, i32* %cpl_start_subband, align 4, !dbg !8436
  %51 = load i32, i32* %cpl_end_subband, align 4, !dbg !8437
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i32 0, i32 0), i32 %50, i32 %51), !dbg !8438
  store i32 -1094995529, i32* %retval, align 4, !dbg !8439
  br label %return, !dbg !8439

if.end42:                                         ; preds = %cond.end
  %52 = load i32, i32* %cpl_start_subband, align 4, !dbg !8440
  %mul = mul nsw i32 %52, 12, !dbg !8441
  %add43 = add nsw i32 %mul, 37, !dbg !8442
  %53 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8443
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %53, i32 0, i32 83, !dbg !8444
  %arrayidx44 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !8443
  store i32 %add43, i32* %arrayidx44, align 4, !dbg !8445
  %54 = load i32, i32* %cpl_end_subband, align 4, !dbg !8446
  %mul45 = mul nsw i32 %54, 12, !dbg !8447
  %add46 = add nsw i32 %mul45, 37, !dbg !8448
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8449
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 84, !dbg !8450
  %arrayidx47 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !8449
  store i32 %add46, i32* %arrayidx47, align 8, !dbg !8451
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8452
  %57 = load i32, i32* %blk.addr, align 4, !dbg !8453
  %58 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8454
  %eac348 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %58, i32 0, i32 25, !dbg !8455
  %59 = load i32, i32* %eac348, align 4, !dbg !8455
  %60 = load i32, i32* %cpl_start_subband, align 4, !dbg !8456
  %61 = load i32, i32* %cpl_end_subband, align 4, !dbg !8457
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8458
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 50, !dbg !8459
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8460
  %cpl_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 52, !dbg !8461
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_sizes, i32 0, i32 0, !dbg !8460
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8462
  %cpl_band_struct = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 51, !dbg !8463
  %arraydecay49 = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_struct, i32 0, i32 0, !dbg !8462
  call void @decode_band_structure(%struct.GetBitContext* %56, i32 %57, i32 %59, i32 0, i32 %60, i32 %61, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @ff_eac3_default_cpl_band_struct, i32 0, i32 0), i32* %num_cpl_bands, i8* %arraydecay, i8* %arraydecay49, i32 18), !dbg !8464
  br label %if.end64, !dbg !8465

if.else50:                                        ; preds = %if.end
  store i32 1, i32* %ch, align 4, !dbg !8466
  br label %for.cond51, !dbg !8469

for.cond51:                                       ; preds = %for.inc59, %if.else50
  %65 = load i32, i32* %ch, align 4, !dbg !8470
  %66 = load i32, i32* %fbw_channels, align 4, !dbg !8473
  %cmp52 = icmp sle i32 %65, %66, !dbg !8474
  br i1 %cmp52, label %for.body53, label %for.end61, !dbg !8475

for.body53:                                       ; preds = %for.cond51
  %67 = load i32, i32* %ch, align 4, !dbg !8476
  %idxprom54 = sext i32 %67 to i64, !dbg !8478
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8478
  %channel_in_cpl55 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 47, !dbg !8479
  %arrayidx56 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl55, i64 0, i64 %idxprom54, !dbg !8478
  store i32 0, i32* %arrayidx56, align 4, !dbg !8480
  %69 = load i32, i32* %ch, align 4, !dbg !8481
  %idxprom57 = sext i32 %69 to i64, !dbg !8482
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8482
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 54, !dbg !8483
  %arrayidx58 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom57, !dbg !8482
  store i32 1, i32* %arrayidx58, align 4, !dbg !8484
  br label %for.inc59, !dbg !8485

for.inc59:                                        ; preds = %for.body53
  %71 = load i32, i32* %ch, align 4, !dbg !8486
  %inc60 = add nsw i32 %71, 1, !dbg !8486
  store i32 %inc60, i32* %ch, align 4, !dbg !8486
  br label %for.cond51, !dbg !8488, !llvm.loop !8489

for.end61:                                        ; preds = %for.cond51
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8491
  %eac362 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 25, !dbg !8492
  %73 = load i32, i32* %eac362, align 4, !dbg !8492
  %74 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8493
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %74, i32 0, i32 92, !dbg !8494
  store i32 %73, i32* %first_cpl_leak, align 4, !dbg !8495
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8496
  %phase_flags_in_use63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 48, !dbg !8497
  store i32 0, i32* %phase_flags_in_use63, align 4, !dbg !8498
  br label %if.end64

if.end64:                                         ; preds = %for.end61, %if.end42
  store i32 0, i32* %retval, align 4, !dbg !8499
  br label %return, !dbg !8499

return:                                           ; preds = %if.end64, %if.then40, %if.then14, %if.then8
  %76 = load i32, i32* %retval, align 4, !dbg !8500
  ret i32 %76, !dbg !8500
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coupling_coordinates(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !8501 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %ch = alloca i32, align 4
  %bnd = alloca i32, align 4
  %cpl_coords_exist = alloca i32, align 4
  %master_cpl_coord = alloca i32, align 4
  %cpl_coord_exp = alloca i32, align 4
  %cpl_coord_mant = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8502, metadata !1849), !dbg !8503
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8504, metadata !1849), !dbg !8505
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !8506, metadata !1849), !dbg !8507
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8508
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !8509
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !8507
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !8510, metadata !1849), !dbg !8511
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8512
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !8513
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !8513
  store i32 %2, i32* %fbw_channels, align 4, !dbg !8511
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8514, metadata !1849), !dbg !8515
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8516, metadata !1849), !dbg !8517
  call void @llvm.dbg.declare(metadata i32* %cpl_coords_exist, metadata !8518, metadata !1849), !dbg !8519
  store i32 0, i32* %cpl_coords_exist, align 4, !dbg !8519
  store i32 1, i32* %ch, align 4, !dbg !8520
  br label %for.cond, !dbg !8522

for.cond:                                         ; preds = %for.inc45, %entry
  %3 = load i32, i32* %ch, align 4, !dbg !8523
  %4 = load i32, i32* %fbw_channels, align 4, !dbg !8526
  %cmp = icmp sle i32 %3, %4, !dbg !8527
  br i1 %cmp, label %for.body, label %for.end47, !dbg !8528

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %ch, align 4, !dbg !8529
  %idxprom = sext i32 %5 to i64, !dbg !8532
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8532
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 47, !dbg !8533
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom, !dbg !8532
  %7 = load i32, i32* %arrayidx, align 4, !dbg !8532
  %tobool = icmp ne i32 %7, 0, !dbg !8532
  br i1 %tobool, label %if.then, label %if.else40, !dbg !8534

if.then:                                          ; preds = %for.body
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8535
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 25, !dbg !8538
  %9 = load i32, i32* %eac3, align 4, !dbg !8538
  %tobool2 = icmp ne i32 %9, 0, !dbg !8535
  br i1 %tobool2, label %land.lhs.true, label %lor.lhs.false, !dbg !8539

land.lhs.true:                                    ; preds = %if.then
  %10 = load i32, i32* %ch, align 4, !dbg !8540
  %idxprom3 = sext i32 %10 to i64, !dbg !8542
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8542
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 54, !dbg !8543
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom3, !dbg !8542
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !8542
  %tobool5 = icmp ne i32 %12, 0, !dbg !8542
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !8544

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8545
  %call = call i32 @get_bits1(%struct.GetBitContext* %13), !dbg !8547
  %tobool6 = icmp ne i32 %call, 0, !dbg !8547
  br i1 %tobool6, label %if.then7, label %if.else35, !dbg !8548

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %master_cpl_coord, metadata !8549, metadata !1849), !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %cpl_coord_exp, metadata !8552, metadata !1849), !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %cpl_coord_mant, metadata !8554, metadata !1849), !dbg !8555
  %14 = load i32, i32* %ch, align 4, !dbg !8556
  %idxprom8 = sext i32 %14 to i64, !dbg !8557
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8557
  %first_cpl_coords9 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 54, !dbg !8558
  %arrayidx10 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords9, i64 0, i64 %idxprom8, !dbg !8557
  store i32 0, i32* %arrayidx10, align 4, !dbg !8559
  store i32 1, i32* %cpl_coords_exist, align 4, !dbg !8560
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8561
  %call11 = call i32 @get_bits(%struct.GetBitContext* %16, i32 2), !dbg !8562
  %mul = mul i32 3, %call11, !dbg !8563
  store i32 %mul, i32* %master_cpl_coord, align 4, !dbg !8564
  store i32 0, i32* %bnd, align 4, !dbg !8565
  br label %for.cond12, !dbg !8567

for.cond12:                                       ; preds = %for.inc, %if.then7
  %17 = load i32, i32* %bnd, align 4, !dbg !8568
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8571
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 50, !dbg !8572
  %19 = load i32, i32* %num_cpl_bands, align 32, !dbg !8572
  %cmp13 = icmp slt i32 %17, %19, !dbg !8573
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !8574

for.body14:                                       ; preds = %for.cond12
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8575
  %call15 = call i32 @get_bits(%struct.GetBitContext* %20, i32 4), !dbg !8577
  store i32 %call15, i32* %cpl_coord_exp, align 4, !dbg !8578
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8579
  %call16 = call i32 @get_bits(%struct.GetBitContext* %21, i32 4), !dbg !8580
  store i32 %call16, i32* %cpl_coord_mant, align 4, !dbg !8581
  %22 = load i32, i32* %cpl_coord_exp, align 4, !dbg !8582
  %cmp17 = icmp eq i32 %22, 15, !dbg !8584
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !8585

if.then18:                                        ; preds = %for.body14
  %23 = load i32, i32* %cpl_coord_mant, align 4, !dbg !8586
  %shl = shl i32 %23, 22, !dbg !8587
  %24 = load i32, i32* %bnd, align 4, !dbg !8588
  %idxprom19 = sext i32 %24 to i64, !dbg !8589
  %25 = load i32, i32* %ch, align 4, !dbg !8590
  %idxprom20 = sext i32 %25 to i64, !dbg !8589
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8589
  %cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 55, !dbg !8591
  %arrayidx21 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords, i64 0, i64 %idxprom20, !dbg !8589
  %arrayidx22 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !8589
  store i32 %shl, i32* %arrayidx22, align 4, !dbg !8592
  br label %if.end, !dbg !8589

if.else:                                          ; preds = %for.body14
  %27 = load i32, i32* %cpl_coord_mant, align 4, !dbg !8593
  %add = add nsw i32 %27, 16, !dbg !8594
  %shl23 = shl i32 %add, 21, !dbg !8595
  %28 = load i32, i32* %bnd, align 4, !dbg !8596
  %idxprom24 = sext i32 %28 to i64, !dbg !8597
  %29 = load i32, i32* %ch, align 4, !dbg !8598
  %idxprom25 = sext i32 %29 to i64, !dbg !8597
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8597
  %cpl_coords26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 55, !dbg !8599
  %arrayidx27 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords26, i64 0, i64 %idxprom25, !dbg !8597
  %arrayidx28 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !8597
  store i32 %shl23, i32* %arrayidx28, align 4, !dbg !8600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %31 = load i32, i32* %cpl_coord_exp, align 4, !dbg !8601
  %32 = load i32, i32* %master_cpl_coord, align 4, !dbg !8602
  %add29 = add nsw i32 %31, %32, !dbg !8603
  %33 = load i32, i32* %bnd, align 4, !dbg !8604
  %idxprom30 = sext i32 %33 to i64, !dbg !8605
  %34 = load i32, i32* %ch, align 4, !dbg !8606
  %idxprom31 = sext i32 %34 to i64, !dbg !8605
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8605
  %cpl_coords32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 55, !dbg !8607
  %arrayidx33 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords32, i64 0, i64 %idxprom31, !dbg !8605
  %arrayidx34 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !8605
  %36 = load i32, i32* %arrayidx34, align 4, !dbg !8608
  %shr = ashr i32 %36, %add29, !dbg !8608
  store i32 %shr, i32* %arrayidx34, align 4, !dbg !8608
  br label %for.inc, !dbg !8609

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %bnd, align 4, !dbg !8610
  %inc = add nsw i32 %37, 1, !dbg !8610
  store i32 %inc, i32* %bnd, align 4, !dbg !8610
  br label %for.cond12, !dbg !8612, !llvm.loop !8613

for.end:                                          ; preds = %for.cond12
  br label %if.end39, !dbg !8615

if.else35:                                        ; preds = %lor.lhs.false
  %38 = load i32, i32* %blk.addr, align 4, !dbg !8616
  %tobool36 = icmp ne i32 %38, 0, !dbg !8616
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !8619

if.then37:                                        ; preds = %if.else35
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8620
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 1, !dbg !8622
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8622
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !8620
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.46, i32 0, i32 0)), !dbg !8623
  store i32 -1094995529, i32* %retval, align 4, !dbg !8624
  br label %return, !dbg !8624

if.end38:                                         ; preds = %if.else35
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %for.end
  br label %if.end44, !dbg !8625

if.else40:                                        ; preds = %for.body
  %42 = load i32, i32* %ch, align 4, !dbg !8626
  %idxprom41 = sext i32 %42 to i64, !dbg !8628
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8628
  %first_cpl_coords42 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 54, !dbg !8629
  %arrayidx43 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords42, i64 0, i64 %idxprom41, !dbg !8628
  store i32 1, i32* %arrayidx43, align 4, !dbg !8630
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %if.end39
  br label %for.inc45, !dbg !8631

for.inc45:                                        ; preds = %if.end44
  %44 = load i32, i32* %ch, align 4, !dbg !8632
  %inc46 = add nsw i32 %44, 1, !dbg !8632
  store i32 %inc46, i32* %ch, align 4, !dbg !8632
  br label %for.cond, !dbg !8634, !llvm.loop !8635

for.end47:                                        ; preds = %for.cond
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8637
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 12, !dbg !8639
  %46 = load i32, i32* %channel_mode, align 4, !dbg !8639
  %cmp48 = icmp eq i32 %46, 2, !dbg !8640
  br i1 %cmp48, label %land.lhs.true49, label %if.end63, !dbg !8641

land.lhs.true49:                                  ; preds = %for.end47
  %47 = load i32, i32* %cpl_coords_exist, align 4, !dbg !8642
  %tobool50 = icmp ne i32 %47, 0, !dbg !8642
  br i1 %tobool50, label %if.then51, label %if.end63, !dbg !8644

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %bnd, align 4, !dbg !8645
  br label %for.cond52, !dbg !8648

for.cond52:                                       ; preds = %for.inc60, %if.then51
  %48 = load i32, i32* %bnd, align 4, !dbg !8649
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8652
  %num_cpl_bands53 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 50, !dbg !8653
  %50 = load i32, i32* %num_cpl_bands53, align 32, !dbg !8653
  %cmp54 = icmp slt i32 %48, %50, !dbg !8654
  br i1 %cmp54, label %for.body55, label %for.end62, !dbg !8655

for.body55:                                       ; preds = %for.cond52
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8656
  %phase_flags_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 48, !dbg !8658
  %52 = load i32, i32* %phase_flags_in_use, align 4, !dbg !8658
  %tobool56 = icmp ne i32 %52, 0, !dbg !8656
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !8656

cond.true:                                        ; preds = %for.body55
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8659
  %call57 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !8661
  br label %cond.end, !dbg !8662

cond.false:                                       ; preds = %for.body55
  br label %cond.end, !dbg !8663

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call57, %cond.true ], [ 0, %cond.false ], !dbg !8665
  %54 = load i32, i32* %bnd, align 4, !dbg !8667
  %idxprom58 = sext i32 %54 to i64, !dbg !8668
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8668
  %phase_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 49, !dbg !8669
  %arrayidx59 = getelementptr inbounds [18 x i32], [18 x i32]* %phase_flags, i64 0, i64 %idxprom58, !dbg !8668
  store i32 %cond, i32* %arrayidx59, align 4, !dbg !8670
  br label %for.inc60, !dbg !8671

for.inc60:                                        ; preds = %cond.end
  %56 = load i32, i32* %bnd, align 4, !dbg !8672
  %inc61 = add nsw i32 %56, 1, !dbg !8672
  store i32 %inc61, i32* %bnd, align 4, !dbg !8672
  br label %for.cond52, !dbg !8674, !llvm.loop !8675

for.end62:                                        ; preds = %for.cond52
  br label %if.end63, !dbg !8677

if.end63:                                         ; preds = %for.end62, %land.lhs.true49, %for.end47
  store i32 0, i32* %retval, align 4, !dbg !8678
  br label %return, !dbg !8678

return:                                           ; preds = %if.end63, %if.then37
  %57 = load i32, i32* %retval, align 4, !dbg !8679
  ret i32 %57, !dbg !8679
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_exponents(%struct.AC3DecodeContext* %s, %struct.GetBitContext* %gbc, i32 %exp_strategy, i32 %ngrps, i8 zeroext %absexp, i8* %dexps) #1 !dbg !8680 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %exp_strategy.addr = alloca i32, align 4
  %ngrps.addr = alloca i32, align 4
  %absexp.addr = alloca i8, align 1
  %dexps.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %grp = alloca i32, align 4
  %group_size = alloca i32, align 4
  %dexp = alloca [256 x i32], align 16
  %expacc = alloca i32, align 4
  %prevexp = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8683, metadata !1849), !dbg !8684
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !8685, metadata !1849), !dbg !8686
  store i32 %exp_strategy, i32* %exp_strategy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exp_strategy.addr, metadata !8687, metadata !1849), !dbg !8688
  store i32 %ngrps, i32* %ngrps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ngrps.addr, metadata !8689, metadata !1849), !dbg !8690
  store i8 %absexp, i8* %absexp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %absexp.addr, metadata !8691, metadata !1849), !dbg !8692
  store i8* %dexps, i8** %dexps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dexps.addr, metadata !8693, metadata !1849), !dbg !8694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8695, metadata !1849), !dbg !8696
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8697, metadata !1849), !dbg !8698
  call void @llvm.dbg.declare(metadata i32* %grp, metadata !8699, metadata !1849), !dbg !8700
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !8701, metadata !1849), !dbg !8702
  call void @llvm.dbg.declare(metadata [256 x i32]* %dexp, metadata !8703, metadata !1849), !dbg !8705
  call void @llvm.dbg.declare(metadata i32* %expacc, metadata !8706, metadata !1849), !dbg !8707
  call void @llvm.dbg.declare(metadata i32* %prevexp, metadata !8708, metadata !1849), !dbg !8709
  %0 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8710
  %1 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8711
  %cmp = icmp eq i32 %1, 3, !dbg !8712
  %conv = zext i1 %cmp to i32, !dbg !8712
  %add = add nsw i32 %0, %conv, !dbg !8713
  store i32 %add, i32* %group_size, align 4, !dbg !8714
  store i32 0, i32* %grp, align 4, !dbg !8715
  store i32 0, i32* %i, align 4, !dbg !8717
  br label %for.cond, !dbg !8718

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %grp, align 4, !dbg !8719
  %3 = load i32, i32* %ngrps.addr, align 4, !dbg !8722
  %cmp1 = icmp slt i32 %2, %3, !dbg !8723
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8724

for.body:                                         ; preds = %for.cond
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !8725
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 7), !dbg !8727
  store i32 %call, i32* %expacc, align 4, !dbg !8728
  %5 = load i32, i32* %expacc, align 4, !dbg !8729
  %cmp3 = icmp sge i32 %5, 125, !dbg !8731
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8732

if.then:                                          ; preds = %for.body
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8733
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 1, !dbg !8735
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8735
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !8733
  %9 = load i32, i32* %expacc, align 4, !dbg !8736
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i32 0, i32 0), i32 %9), !dbg !8737
  store i32 -1094995529, i32* %retval, align 4, !dbg !8738
  br label %return, !dbg !8738

if.end:                                           ; preds = %for.body
  %10 = load i32, i32* %expacc, align 4, !dbg !8739
  %idxprom = sext i32 %10 to i64, !dbg !8740
  %arrayidx = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom, !dbg !8740
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !8740
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !8740
  %conv6 = zext i8 %11 to i32, !dbg !8740
  %12 = load i32, i32* %i, align 4, !dbg !8741
  %inc = add nsw i32 %12, 1, !dbg !8741
  store i32 %inc, i32* %i, align 4, !dbg !8741
  %idxprom7 = sext i32 %12 to i64, !dbg !8742
  %arrayidx8 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom7, !dbg !8742
  store i32 %conv6, i32* %arrayidx8, align 4, !dbg !8743
  %13 = load i32, i32* %expacc, align 4, !dbg !8744
  %idxprom9 = sext i32 %13 to i64, !dbg !8745
  %arrayidx10 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom9, !dbg !8745
  %arrayidx11 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx10, i64 0, i64 1, !dbg !8745
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !8745
  %conv12 = zext i8 %14 to i32, !dbg !8745
  %15 = load i32, i32* %i, align 4, !dbg !8746
  %inc13 = add nsw i32 %15, 1, !dbg !8746
  store i32 %inc13, i32* %i, align 4, !dbg !8746
  %idxprom14 = sext i32 %15 to i64, !dbg !8747
  %arrayidx15 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom14, !dbg !8747
  store i32 %conv12, i32* %arrayidx15, align 4, !dbg !8748
  %16 = load i32, i32* %expacc, align 4, !dbg !8749
  %idxprom16 = sext i32 %16 to i64, !dbg !8750
  %arrayidx17 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom16, !dbg !8750
  %arrayidx18 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx17, i64 0, i64 2, !dbg !8750
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !8750
  %conv19 = zext i8 %17 to i32, !dbg !8750
  %18 = load i32, i32* %i, align 4, !dbg !8751
  %inc20 = add nsw i32 %18, 1, !dbg !8751
  store i32 %inc20, i32* %i, align 4, !dbg !8751
  %idxprom21 = sext i32 %18 to i64, !dbg !8752
  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom21, !dbg !8752
  store i32 %conv19, i32* %arrayidx22, align 4, !dbg !8753
  br label %for.inc, !dbg !8754

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %grp, align 4, !dbg !8755
  %inc23 = add nsw i32 %19, 1, !dbg !8755
  store i32 %inc23, i32* %grp, align 4, !dbg !8755
  br label %for.cond, !dbg !8757, !llvm.loop !8758

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %absexp.addr, align 1, !dbg !8760
  %conv24 = zext i8 %20 to i32, !dbg !8760
  store i32 %conv24, i32* %prevexp, align 4, !dbg !8761
  store i32 0, i32* %i, align 4, !dbg !8762
  store i32 0, i32* %j, align 4, !dbg !8764
  br label %for.cond25, !dbg !8765

for.cond25:                                       ; preds = %for.inc55, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !8766
  %22 = load i32, i32* %ngrps.addr, align 4, !dbg !8769
  %mul = mul nsw i32 %22, 3, !dbg !8770
  %cmp26 = icmp slt i32 %21, %mul, !dbg !8771
  br i1 %cmp26, label %for.body28, label %for.end57, !dbg !8772

for.body28:                                       ; preds = %for.cond25
  %23 = load i32, i32* %i, align 4, !dbg !8773
  %idxprom29 = sext i32 %23 to i64, !dbg !8775
  %arrayidx30 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom29, !dbg !8775
  %24 = load i32, i32* %arrayidx30, align 4, !dbg !8775
  %sub = sub nsw i32 %24, 2, !dbg !8776
  %25 = load i32, i32* %prevexp, align 4, !dbg !8777
  %add31 = add nsw i32 %25, %sub, !dbg !8777
  store i32 %add31, i32* %prevexp, align 4, !dbg !8777
  %26 = load i32, i32* %prevexp, align 4, !dbg !8778
  %cmp32 = icmp ugt i32 %26, 24, !dbg !8780
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !8781

if.then34:                                        ; preds = %for.body28
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8782
  %avctx35 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 1, !dbg !8784
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx35, align 8, !dbg !8784
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !8782
  %30 = load i32, i32* %prevexp, align 4, !dbg !8785
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i32 0, i32 0), i32 %30), !dbg !8786
  store i32 -1094995529, i32* %retval, align 4, !dbg !8787
  br label %return, !dbg !8787

if.end36:                                         ; preds = %for.body28
  %31 = load i32, i32* %group_size, align 4, !dbg !8788
  switch i32 %31, label %sw.epilog [
    i32 4, label %sw.bb
    i32 2, label %sw.bb45
    i32 1, label %sw.bb50
  ], !dbg !8789

sw.bb:                                            ; preds = %if.end36
  %32 = load i32, i32* %prevexp, align 4, !dbg !8790
  %conv37 = trunc i32 %32 to i8, !dbg !8790
  %33 = load i32, i32* %j, align 4, !dbg !8792
  %inc38 = add nsw i32 %33, 1, !dbg !8792
  store i32 %inc38, i32* %j, align 4, !dbg !8792
  %idxprom39 = sext i32 %33 to i64, !dbg !8793
  %34 = load i8*, i8** %dexps.addr, align 8, !dbg !8793
  %arrayidx40 = getelementptr inbounds i8, i8* %34, i64 %idxprom39, !dbg !8793
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !8794
  %35 = load i32, i32* %prevexp, align 4, !dbg !8795
  %conv41 = trunc i32 %35 to i8, !dbg !8795
  %36 = load i32, i32* %j, align 4, !dbg !8796
  %inc42 = add nsw i32 %36, 1, !dbg !8796
  store i32 %inc42, i32* %j, align 4, !dbg !8796
  %idxprom43 = sext i32 %36 to i64, !dbg !8797
  %37 = load i8*, i8** %dexps.addr, align 8, !dbg !8797
  %arrayidx44 = getelementptr inbounds i8, i8* %37, i64 %idxprom43, !dbg !8797
  store i8 %conv41, i8* %arrayidx44, align 1, !dbg !8798
  br label %sw.bb45, !dbg !8797

sw.bb45:                                          ; preds = %if.end36, %sw.bb
  %38 = load i32, i32* %prevexp, align 4, !dbg !8799
  %conv46 = trunc i32 %38 to i8, !dbg !8799
  %39 = load i32, i32* %j, align 4, !dbg !8800
  %inc47 = add nsw i32 %39, 1, !dbg !8800
  store i32 %inc47, i32* %j, align 4, !dbg !8800
  %idxprom48 = sext i32 %39 to i64, !dbg !8801
  %40 = load i8*, i8** %dexps.addr, align 8, !dbg !8801
  %arrayidx49 = getelementptr inbounds i8, i8* %40, i64 %idxprom48, !dbg !8801
  store i8 %conv46, i8* %arrayidx49, align 1, !dbg !8802
  br label %sw.bb50, !dbg !8801

sw.bb50:                                          ; preds = %if.end36, %sw.bb45
  %41 = load i32, i32* %prevexp, align 4, !dbg !8803
  %conv51 = trunc i32 %41 to i8, !dbg !8803
  %42 = load i32, i32* %j, align 4, !dbg !8804
  %inc52 = add nsw i32 %42, 1, !dbg !8804
  store i32 %inc52, i32* %j, align 4, !dbg !8804
  %idxprom53 = sext i32 %42 to i64, !dbg !8805
  %43 = load i8*, i8** %dexps.addr, align 8, !dbg !8805
  %arrayidx54 = getelementptr inbounds i8, i8* %43, i64 %idxprom53, !dbg !8805
  store i8 %conv51, i8* %arrayidx54, align 1, !dbg !8806
  br label %sw.epilog, !dbg !8807

sw.epilog:                                        ; preds = %sw.bb50, %if.end36
  br label %for.inc55, !dbg !8808

for.inc55:                                        ; preds = %sw.epilog
  %44 = load i32, i32* %i, align 4, !dbg !8809
  %inc56 = add nsw i32 %44, 1, !dbg !8809
  store i32 %inc56, i32* %i, align 4, !dbg !8809
  br label %for.cond25, !dbg !8811, !llvm.loop !8812

for.end57:                                        ; preds = %for.cond25
  store i32 0, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

return:                                           ; preds = %for.end57, %if.then34, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !8815
  ret i32 %45, !dbg !8815
}

declare void @ff_ac3_bit_alloc_calc_psd(i8*, i32, i32, i16*, i16*) #2

declare i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters*, i16*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i16*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @decode_transform_coeffs(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !8816 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %end = alloca i32, align 4
  %got_cplchan = alloca i32, align 4
  %m = alloca %struct.mant_groups, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8819, metadata !1849), !dbg !8820
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8821, metadata !1849), !dbg !8822
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8823, metadata !1849), !dbg !8824
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8825, metadata !1849), !dbg !8826
  call void @llvm.dbg.declare(metadata i32* %got_cplchan, metadata !8827, metadata !1849), !dbg !8828
  store i32 0, i32* %got_cplchan, align 4, !dbg !8828
  call void @llvm.dbg.declare(metadata %struct.mant_groups* %m, metadata !8829, metadata !1849), !dbg !8839
  %b4 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 5, !dbg !8840
  store i32 0, i32* %b4, align 4, !dbg !8841
  %b2 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 4, !dbg !8842
  store i32 0, i32* %b2, align 4, !dbg !8843
  %b1 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 3, !dbg !8844
  store i32 0, i32* %b1, align 4, !dbg !8845
  store i32 1, i32* %ch, align 4, !dbg !8846
  br label %for.cond, !dbg !8848

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !8849
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8852
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 71, !dbg !8853
  %2 = load i32, i32* %channels, align 8, !dbg !8853
  %cmp = icmp sle i32 %0, %2, !dbg !8854
  br i1 %cmp, label %for.body, label %for.end, !dbg !8855

for.body:                                         ; preds = %for.cond
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8856
  %4 = load i32, i32* %blk.addr, align 4, !dbg !8858
  %5 = load i32, i32* %ch, align 4, !dbg !8859
  call void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %3, i32 %4, i32 %5, %struct.mant_groups* %m), !dbg !8860
  %6 = load i32, i32* %ch, align 4, !dbg !8861
  %idxprom = sext i32 %6 to i64, !dbg !8863
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8863
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 47, !dbg !8864
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom, !dbg !8863
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8863
  %tobool = icmp ne i32 %8, 0, !dbg !8863
  br i1 %tobool, label %if.then, label %if.else, !dbg !8865

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %got_cplchan, align 4, !dbg !8866
  %tobool1 = icmp ne i32 %9, 0, !dbg !8866
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8869

if.then2:                                         ; preds = %if.then
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8870
  %11 = load i32, i32* %blk.addr, align 4, !dbg !8872
  call void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %10, i32 %11, i32 0, %struct.mant_groups* %m), !dbg !8873
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8874
  call void @calc_transform_coeffs_cpl(%struct.AC3DecodeContext* %12), !dbg !8875
  store i32 1, i32* %got_cplchan, align 4, !dbg !8876
  br label %if.end, !dbg !8877

if.end:                                           ; preds = %if.then2, %if.then
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8878
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 84, !dbg !8879
  %arrayidx3 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !8878
  %14 = load i32, i32* %arrayidx3, align 8, !dbg !8878
  store i32 %14, i32* %end, align 4, !dbg !8880
  br label %if.end7, !dbg !8881

if.else:                                          ; preds = %for.body
  %15 = load i32, i32* %ch, align 4, !dbg !8882
  %idxprom4 = sext i32 %15 to i64, !dbg !8884
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8884
  %end_freq5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 84, !dbg !8885
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq5, i64 0, i64 %idxprom4, !dbg !8884
  %17 = load i32, i32* %arrayidx6, align 4, !dbg !8884
  store i32 %17, i32* %end, align 4, !dbg !8886
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end
  br label %do.body, !dbg !8887, !llvm.loop !8888

do.body:                                          ; preds = %do.cond, %if.end7
  %18 = load i32, i32* %end, align 4, !dbg !8889
  %idxprom8 = sext i32 %18 to i64, !dbg !8890
  %19 = load i32, i32* %ch, align 4, !dbg !8891
  %idxprom9 = sext i32 %19 to i64, !dbg !8890
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8890
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 117, !dbg !8892
  %arrayidx10 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom9, !dbg !8890
  %arrayidx11 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !8890
  store i32 0, i32* %arrayidx11, align 4, !dbg !8893
  br label %do.cond, !dbg !8890

do.cond:                                          ; preds = %do.body
  %21 = load i32, i32* %end, align 4, !dbg !8894
  %inc = add nsw i32 %21, 1, !dbg !8894
  store i32 %inc, i32* %end, align 4, !dbg !8894
  %cmp12 = icmp slt i32 %inc, 256, !dbg !8895
  br i1 %cmp12, label %do.body, label %do.end, !dbg !8896, !llvm.loop !8888

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !8898

for.inc:                                          ; preds = %do.end
  %22 = load i32, i32* %ch, align 4, !dbg !8899
  %inc13 = add nsw i32 %22, 1, !dbg !8899
  store i32 %inc13, i32* %ch, align 4, !dbg !8899
  br label %for.cond, !dbg !8901, !llvm.loop !8902

for.end:                                          ; preds = %for.cond
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8904
  call void @remove_dithering(%struct.AC3DecodeContext* %23), !dbg !8905
  ret void, !dbg !8906
}

; Function Attrs: nounwind uwtable
define internal void @do_rematrixing(%struct.AC3DecodeContext* %s) #1 !dbg !8907 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bnd = alloca i32, align 4
  %i = alloca i32, align 4
  %end = alloca i32, align 4
  %bndend = alloca i32, align 4
  %tmp0 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8908, metadata !1849), !dbg !8909
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8910, metadata !1849), !dbg !8911
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8912, metadata !1849), !dbg !8913
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8914, metadata !1849), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %bndend, metadata !8916, metadata !1849), !dbg !8917
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8918
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 84, !dbg !8919
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 1, !dbg !8918
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8918
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8920
  %end_freq1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 84, !dbg !8921
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq1, i64 0, i64 2, !dbg !8920
  %3 = load i32, i32* %arrayidx2, align 8, !dbg !8920
  %cmp = icmp sgt i32 %1, %3, !dbg !8922
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8923

cond.true:                                        ; preds = %entry
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8924
  %end_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 84, !dbg !8926
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq3, i64 0, i64 2, !dbg !8924
  %5 = load i32, i32* %arrayidx4, align 8, !dbg !8924
  br label %cond.end, !dbg !8927

cond.false:                                       ; preds = %entry
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8928
  %end_freq5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 84, !dbg !8930
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq5, i64 0, i64 1, !dbg !8928
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !8928
  br label %cond.end, !dbg !8931

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %7, %cond.false ], !dbg !8932
  store i32 %cond, i32* %end, align 4, !dbg !8934
  store i32 0, i32* %bnd, align 4, !dbg !8935
  br label %for.cond, !dbg !8937

for.cond:                                         ; preds = %for.inc48, %cond.end
  %8 = load i32, i32* %bnd, align 4, !dbg !8938
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8941
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 86, !dbg !8942
  %10 = load i32, i32* %num_rematrixing_bands, align 8, !dbg !8942
  %cmp7 = icmp slt i32 %8, %10, !dbg !8943
  br i1 %cmp7, label %for.body, label %for.end50, !dbg !8944

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %bnd, align 4, !dbg !8945
  %idxprom = sext i32 %11 to i64, !dbg !8948
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8948
  %rematrixing_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 87, !dbg !8949
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %rematrixing_flags, i64 0, i64 %idxprom, !dbg !8948
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !8948
  %tobool = icmp ne i32 %13, 0, !dbg !8948
  br i1 %tobool, label %if.then, label %if.end, !dbg !8950

if.then:                                          ; preds = %for.body
  %14 = load i32, i32* %end, align 4, !dbg !8951
  %15 = load i32, i32* %bnd, align 4, !dbg !8953
  %add = add nsw i32 %15, 1, !dbg !8954
  %idxprom9 = sext i32 %add to i64, !dbg !8955
  %arrayidx10 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom9, !dbg !8955
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !8955
  %conv = zext i8 %16 to i32, !dbg !8956
  %cmp11 = icmp sgt i32 %14, %conv, !dbg !8957
  br i1 %cmp11, label %cond.true13, label %cond.false18, !dbg !8958

cond.true13:                                      ; preds = %if.then
  %17 = load i32, i32* %bnd, align 4, !dbg !8959
  %add14 = add nsw i32 %17, 1, !dbg !8961
  %idxprom15 = sext i32 %add14 to i64, !dbg !8962
  %arrayidx16 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom15, !dbg !8962
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !8962
  %conv17 = zext i8 %18 to i32, !dbg !8963
  br label %cond.end19, !dbg !8964

cond.false18:                                     ; preds = %if.then
  %19 = load i32, i32* %end, align 4, !dbg !8965
  br label %cond.end19, !dbg !8967

cond.end19:                                       ; preds = %cond.false18, %cond.true13
  %cond20 = phi i32 [ %conv17, %cond.true13 ], [ %19, %cond.false18 ], !dbg !8968
  store i32 %cond20, i32* %bndend, align 4, !dbg !8970
  %20 = load i32, i32* %bnd, align 4, !dbg !8971
  %idxprom21 = sext i32 %20 to i64, !dbg !8973
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom21, !dbg !8973
  %21 = load i8, i8* %arrayidx22, align 1, !dbg !8973
  %conv23 = zext i8 %21 to i32, !dbg !8973
  store i32 %conv23, i32* %i, align 4, !dbg !8974
  br label %for.cond24, !dbg !8975

for.cond24:                                       ; preds = %for.inc, %cond.end19
  %22 = load i32, i32* %i, align 4, !dbg !8976
  %23 = load i32, i32* %bndend, align 4, !dbg !8979
  %cmp25 = icmp slt i32 %22, %23, !dbg !8980
  br i1 %cmp25, label %for.body27, label %for.end, !dbg !8981

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i32* %tmp0, metadata !8982, metadata !1849), !dbg !8984
  %24 = load i32, i32* %i, align 4, !dbg !8985
  %idxprom28 = sext i32 %24 to i64, !dbg !8986
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8986
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 117, !dbg !8987
  %arrayidx29 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 1, !dbg !8986
  %arrayidx30 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx29, i64 0, i64 %idxprom28, !dbg !8986
  %26 = load i32, i32* %arrayidx30, align 4, !dbg !8986
  store i32 %26, i32* %tmp0, align 4, !dbg !8984
  %27 = load i32, i32* %i, align 4, !dbg !8988
  %idxprom31 = sext i32 %27 to i64, !dbg !8989
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8989
  %fixed_coeffs32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 117, !dbg !8990
  %arrayidx33 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs32, i64 0, i64 2, !dbg !8989
  %arrayidx34 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx33, i64 0, i64 %idxprom31, !dbg !8989
  %29 = load i32, i32* %arrayidx34, align 4, !dbg !8989
  %30 = load i32, i32* %i, align 4, !dbg !8991
  %idxprom35 = sext i32 %30 to i64, !dbg !8992
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8992
  %fixed_coeffs36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 117, !dbg !8993
  %arrayidx37 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs36, i64 0, i64 1, !dbg !8992
  %arrayidx38 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx37, i64 0, i64 %idxprom35, !dbg !8992
  %32 = load i32, i32* %arrayidx38, align 4, !dbg !8994
  %add39 = add nsw i32 %32, %29, !dbg !8994
  store i32 %add39, i32* %arrayidx38, align 4, !dbg !8994
  %33 = load i32, i32* %tmp0, align 4, !dbg !8995
  %34 = load i32, i32* %i, align 4, !dbg !8996
  %idxprom40 = sext i32 %34 to i64, !dbg !8997
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8997
  %fixed_coeffs41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 117, !dbg !8998
  %arrayidx42 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs41, i64 0, i64 2, !dbg !8997
  %arrayidx43 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx42, i64 0, i64 %idxprom40, !dbg !8997
  %36 = load i32, i32* %arrayidx43, align 4, !dbg !8997
  %sub = sub nsw i32 %33, %36, !dbg !8999
  %37 = load i32, i32* %i, align 4, !dbg !9000
  %idxprom44 = sext i32 %37 to i64, !dbg !9001
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9001
  %fixed_coeffs45 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 117, !dbg !9002
  %arrayidx46 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs45, i64 0, i64 2, !dbg !9001
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx46, i64 0, i64 %idxprom44, !dbg !9001
  store i32 %sub, i32* %arrayidx47, align 4, !dbg !9003
  br label %for.inc, !dbg !9004

for.inc:                                          ; preds = %for.body27
  %39 = load i32, i32* %i, align 4, !dbg !9005
  %inc = add nsw i32 %39, 1, !dbg !9005
  store i32 %inc, i32* %i, align 4, !dbg !9005
  br label %for.cond24, !dbg !9007, !llvm.loop !9008

for.end:                                          ; preds = %for.cond24
  br label %if.end, !dbg !9010

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc48, !dbg !9011

for.inc48:                                        ; preds = %if.end
  %40 = load i32, i32* %bnd, align 4, !dbg !9012
  %inc49 = add nsw i32 %40, 1, !dbg !9012
  store i32 %inc49, i32* %bnd, align 4, !dbg !9012
  br label %for.cond, !dbg !9014, !llvm.loop !9015

for.end50:                                        ; preds = %for.cond
  ret void, !dbg !9017
}

; Function Attrs: nounwind uwtable
define internal void @scale_coefs(i32* %dst, i32* %src, i32 %dynrng, i32 %len) #1 !dbg !9018 {
entry:
  %dst.addr = alloca i32*, align 8
  %src.addr = alloca i32*, align 8
  %dynrng.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %shift = alloca i32, align 4
  %mul = alloca i32, align 4
  %round = alloca i32, align 4
  %temp = alloca i32, align 4
  %temp1 = alloca i32, align 4
  %temp2 = alloca i32, align 4
  %temp3 = alloca i32, align 4
  %temp4 = alloca i32, align 4
  %temp5 = alloca i32, align 4
  %temp6 = alloca i32, align 4
  %temp7 = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !9021, metadata !1849), !dbg !9022
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !9023, metadata !1849), !dbg !9024
  store i32 %dynrng, i32* %dynrng.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dynrng.addr, metadata !9025, metadata !1849), !dbg !9026
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9027, metadata !1849), !dbg !9028
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9029, metadata !1849), !dbg !9030
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !9031, metadata !1849), !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %mul, metadata !9033, metadata !1849), !dbg !9034
  call void @llvm.dbg.declare(metadata i32* %round, metadata !9035, metadata !1849), !dbg !9036
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9037, metadata !1849), !dbg !9038
  call void @llvm.dbg.declare(metadata i32* %temp1, metadata !9039, metadata !1849), !dbg !9040
  call void @llvm.dbg.declare(metadata i32* %temp2, metadata !9041, metadata !1849), !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %temp3, metadata !9043, metadata !1849), !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %temp4, metadata !9045, metadata !1849), !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %temp5, metadata !9047, metadata !1849), !dbg !9048
  call void @llvm.dbg.declare(metadata i32* %temp6, metadata !9049, metadata !1849), !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %temp7, metadata !9051, metadata !1849), !dbg !9052
  %0 = load i32, i32* %dynrng.addr, align 4, !dbg !9053
  %and = and i32 %0, 31, !dbg !9054
  %add = add nsw i32 %and, 32, !dbg !9055
  store i32 %add, i32* %mul, align 4, !dbg !9056
  %1 = load i32, i32* %dynrng.addr, align 4, !dbg !9057
  %call = call i32 @sign_extend(i32 %1, i32 9) #3, !dbg !9058
  %shr = ashr i32 %call, 5, !dbg !9059
  %sub = sub nsw i32 4, %shr, !dbg !9060
  store i32 %sub, i32* %shift, align 4, !dbg !9061
  %2 = load i32, i32* %shift, align 4, !dbg !9062
  %cmp = icmp sgt i32 %2, 0, !dbg !9064
  br i1 %cmp, label %if.then, label %if.else, !dbg !9065

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %shift, align 4, !dbg !9066
  %sub1 = sub nsw i32 %3, 1, !dbg !9068
  %shl = shl i32 1, %sub1, !dbg !9069
  store i32 %shl, i32* %round, align 4, !dbg !9070
  store i32 0, i32* %i, align 4, !dbg !9071
  br label %for.cond, !dbg !9073

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !9074
  %5 = load i32, i32* %len.addr, align 4, !dbg !9077
  %cmp2 = icmp slt i32 %4, %5, !dbg !9078
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9079

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !9080
  %idxprom = sext i32 %6 to i64, !dbg !9082
  %7 = load i32*, i32** %src.addr, align 8, !dbg !9082
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !9082
  %8 = load i32, i32* %arrayidx, align 4, !dbg !9082
  %9 = load i32, i32* %mul, align 4, !dbg !9083
  %mul3 = mul i32 %8, %9, !dbg !9084
  store i32 %mul3, i32* %temp, align 4, !dbg !9085
  %10 = load i32, i32* %i, align 4, !dbg !9086
  %add4 = add nsw i32 %10, 1, !dbg !9087
  %idxprom5 = sext i32 %add4 to i64, !dbg !9088
  %11 = load i32*, i32** %src.addr, align 8, !dbg !9088
  %arrayidx6 = getelementptr inbounds i32, i32* %11, i64 %idxprom5, !dbg !9088
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !9088
  %13 = load i32, i32* %mul, align 4, !dbg !9089
  %mul7 = mul i32 %12, %13, !dbg !9090
  store i32 %mul7, i32* %temp1, align 4, !dbg !9091
  %14 = load i32, i32* %temp, align 4, !dbg !9092
  %15 = load i32, i32* %round, align 4, !dbg !9093
  %add8 = add i32 %14, %15, !dbg !9094
  store i32 %add8, i32* %temp, align 4, !dbg !9095
  %16 = load i32, i32* %i, align 4, !dbg !9096
  %add9 = add nsw i32 %16, 2, !dbg !9097
  %idxprom10 = sext i32 %add9 to i64, !dbg !9098
  %17 = load i32*, i32** %src.addr, align 8, !dbg !9098
  %arrayidx11 = getelementptr inbounds i32, i32* %17, i64 %idxprom10, !dbg !9098
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !9098
  %19 = load i32, i32* %mul, align 4, !dbg !9099
  %mul12 = mul i32 %18, %19, !dbg !9100
  store i32 %mul12, i32* %temp2, align 4, !dbg !9101
  %20 = load i32, i32* %temp1, align 4, !dbg !9102
  %21 = load i32, i32* %round, align 4, !dbg !9103
  %add13 = add i32 %20, %21, !dbg !9104
  store i32 %add13, i32* %temp1, align 4, !dbg !9105
  %22 = load i32, i32* %temp, align 4, !dbg !9106
  %23 = load i32, i32* %shift, align 4, !dbg !9107
  %shr14 = ashr i32 %22, %23, !dbg !9108
  %24 = load i32, i32* %i, align 4, !dbg !9109
  %idxprom15 = sext i32 %24 to i64, !dbg !9110
  %25 = load i32*, i32** %dst.addr, align 8, !dbg !9110
  %arrayidx16 = getelementptr inbounds i32, i32* %25, i64 %idxprom15, !dbg !9110
  store i32 %shr14, i32* %arrayidx16, align 4, !dbg !9111
  %26 = load i32, i32* %i, align 4, !dbg !9112
  %add17 = add nsw i32 %26, 3, !dbg !9113
  %idxprom18 = sext i32 %add17 to i64, !dbg !9114
  %27 = load i32*, i32** %src.addr, align 8, !dbg !9114
  %arrayidx19 = getelementptr inbounds i32, i32* %27, i64 %idxprom18, !dbg !9114
  %28 = load i32, i32* %arrayidx19, align 4, !dbg !9114
  %29 = load i32, i32* %mul, align 4, !dbg !9115
  %mul20 = mul i32 %28, %29, !dbg !9116
  store i32 %mul20, i32* %temp3, align 4, !dbg !9117
  %30 = load i32, i32* %temp2, align 4, !dbg !9118
  %31 = load i32, i32* %round, align 4, !dbg !9119
  %add21 = add i32 %30, %31, !dbg !9120
  store i32 %add21, i32* %temp2, align 4, !dbg !9121
  %32 = load i32, i32* %temp1, align 4, !dbg !9122
  %33 = load i32, i32* %shift, align 4, !dbg !9123
  %shr22 = ashr i32 %32, %33, !dbg !9124
  %34 = load i32, i32* %i, align 4, !dbg !9125
  %add23 = add nsw i32 %34, 1, !dbg !9126
  %idxprom24 = sext i32 %add23 to i64, !dbg !9127
  %35 = load i32*, i32** %dst.addr, align 8, !dbg !9127
  %arrayidx25 = getelementptr inbounds i32, i32* %35, i64 %idxprom24, !dbg !9127
  store i32 %shr22, i32* %arrayidx25, align 4, !dbg !9128
  %36 = load i32, i32* %i, align 4, !dbg !9129
  %add26 = add nsw i32 %36, 4, !dbg !9130
  %idxprom27 = sext i32 %add26 to i64, !dbg !9131
  %37 = load i32*, i32** %src.addr, align 8, !dbg !9131
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 %idxprom27, !dbg !9131
  %38 = load i32, i32* %arrayidx28, align 4, !dbg !9131
  %39 = load i32, i32* %mul, align 4, !dbg !9132
  %mul29 = mul i32 %38, %39, !dbg !9133
  store i32 %mul29, i32* %temp4, align 4, !dbg !9134
  %40 = load i32, i32* %temp3, align 4, !dbg !9135
  %41 = load i32, i32* %round, align 4, !dbg !9136
  %add30 = add i32 %40, %41, !dbg !9137
  store i32 %add30, i32* %temp3, align 4, !dbg !9138
  %42 = load i32, i32* %temp2, align 4, !dbg !9139
  %43 = load i32, i32* %shift, align 4, !dbg !9140
  %shr31 = ashr i32 %42, %43, !dbg !9141
  %44 = load i32, i32* %i, align 4, !dbg !9142
  %add32 = add nsw i32 %44, 2, !dbg !9143
  %idxprom33 = sext i32 %add32 to i64, !dbg !9144
  %45 = load i32*, i32** %dst.addr, align 8, !dbg !9144
  %arrayidx34 = getelementptr inbounds i32, i32* %45, i64 %idxprom33, !dbg !9144
  store i32 %shr31, i32* %arrayidx34, align 4, !dbg !9145
  %46 = load i32, i32* %i, align 4, !dbg !9146
  %add35 = add nsw i32 %46, 5, !dbg !9147
  %idxprom36 = sext i32 %add35 to i64, !dbg !9148
  %47 = load i32*, i32** %src.addr, align 8, !dbg !9148
  %arrayidx37 = getelementptr inbounds i32, i32* %47, i64 %idxprom36, !dbg !9148
  %48 = load i32, i32* %arrayidx37, align 4, !dbg !9148
  %49 = load i32, i32* %mul, align 4, !dbg !9149
  %mul38 = mul i32 %48, %49, !dbg !9150
  store i32 %mul38, i32* %temp5, align 4, !dbg !9151
  %50 = load i32, i32* %temp4, align 4, !dbg !9152
  %51 = load i32, i32* %round, align 4, !dbg !9153
  %add39 = add i32 %50, %51, !dbg !9154
  store i32 %add39, i32* %temp4, align 4, !dbg !9155
  %52 = load i32, i32* %temp3, align 4, !dbg !9156
  %53 = load i32, i32* %shift, align 4, !dbg !9157
  %shr40 = ashr i32 %52, %53, !dbg !9158
  %54 = load i32, i32* %i, align 4, !dbg !9159
  %add41 = add nsw i32 %54, 3, !dbg !9160
  %idxprom42 = sext i32 %add41 to i64, !dbg !9161
  %55 = load i32*, i32** %dst.addr, align 8, !dbg !9161
  %arrayidx43 = getelementptr inbounds i32, i32* %55, i64 %idxprom42, !dbg !9161
  store i32 %shr40, i32* %arrayidx43, align 4, !dbg !9162
  %56 = load i32, i32* %i, align 4, !dbg !9163
  %add44 = add nsw i32 %56, 6, !dbg !9164
  %idxprom45 = sext i32 %add44 to i64, !dbg !9165
  %57 = load i32*, i32** %src.addr, align 8, !dbg !9165
  %arrayidx46 = getelementptr inbounds i32, i32* %57, i64 %idxprom45, !dbg !9165
  %58 = load i32, i32* %arrayidx46, align 4, !dbg !9165
  %59 = load i32, i32* %mul, align 4, !dbg !9166
  %mul47 = mul i32 %58, %59, !dbg !9167
  store i32 %mul47, i32* %temp6, align 4, !dbg !9168
  %60 = load i32, i32* %temp4, align 4, !dbg !9169
  %61 = load i32, i32* %shift, align 4, !dbg !9170
  %shr48 = ashr i32 %60, %61, !dbg !9171
  %62 = load i32, i32* %i, align 4, !dbg !9172
  %add49 = add nsw i32 %62, 4, !dbg !9173
  %idxprom50 = sext i32 %add49 to i64, !dbg !9174
  %63 = load i32*, i32** %dst.addr, align 8, !dbg !9174
  %arrayidx51 = getelementptr inbounds i32, i32* %63, i64 %idxprom50, !dbg !9174
  store i32 %shr48, i32* %arrayidx51, align 4, !dbg !9175
  %64 = load i32, i32* %temp5, align 4, !dbg !9176
  %65 = load i32, i32* %round, align 4, !dbg !9177
  %add52 = add i32 %64, %65, !dbg !9178
  store i32 %add52, i32* %temp5, align 4, !dbg !9179
  %66 = load i32, i32* %i, align 4, !dbg !9180
  %add53 = add nsw i32 %66, 7, !dbg !9181
  %idxprom54 = sext i32 %add53 to i64, !dbg !9182
  %67 = load i32*, i32** %src.addr, align 8, !dbg !9182
  %arrayidx55 = getelementptr inbounds i32, i32* %67, i64 %idxprom54, !dbg !9182
  %68 = load i32, i32* %arrayidx55, align 4, !dbg !9182
  %69 = load i32, i32* %mul, align 4, !dbg !9183
  %mul56 = mul i32 %68, %69, !dbg !9184
  store i32 %mul56, i32* %temp7, align 4, !dbg !9185
  %70 = load i32, i32* %temp6, align 4, !dbg !9186
  %71 = load i32, i32* %round, align 4, !dbg !9187
  %add57 = add i32 %70, %71, !dbg !9188
  store i32 %add57, i32* %temp6, align 4, !dbg !9189
  %72 = load i32, i32* %temp5, align 4, !dbg !9190
  %73 = load i32, i32* %shift, align 4, !dbg !9191
  %shr58 = ashr i32 %72, %73, !dbg !9192
  %74 = load i32, i32* %i, align 4, !dbg !9193
  %add59 = add nsw i32 %74, 5, !dbg !9194
  %idxprom60 = sext i32 %add59 to i64, !dbg !9195
  %75 = load i32*, i32** %dst.addr, align 8, !dbg !9195
  %arrayidx61 = getelementptr inbounds i32, i32* %75, i64 %idxprom60, !dbg !9195
  store i32 %shr58, i32* %arrayidx61, align 4, !dbg !9196
  %76 = load i32, i32* %temp7, align 4, !dbg !9197
  %77 = load i32, i32* %round, align 4, !dbg !9198
  %add62 = add i32 %76, %77, !dbg !9199
  store i32 %add62, i32* %temp7, align 4, !dbg !9200
  %78 = load i32, i32* %temp6, align 4, !dbg !9201
  %79 = load i32, i32* %shift, align 4, !dbg !9202
  %shr63 = ashr i32 %78, %79, !dbg !9203
  %80 = load i32, i32* %i, align 4, !dbg !9204
  %add64 = add nsw i32 %80, 6, !dbg !9205
  %idxprom65 = sext i32 %add64 to i64, !dbg !9206
  %81 = load i32*, i32** %dst.addr, align 8, !dbg !9206
  %arrayidx66 = getelementptr inbounds i32, i32* %81, i64 %idxprom65, !dbg !9206
  store i32 %shr63, i32* %arrayidx66, align 4, !dbg !9207
  %82 = load i32, i32* %temp7, align 4, !dbg !9208
  %83 = load i32, i32* %shift, align 4, !dbg !9209
  %shr67 = ashr i32 %82, %83, !dbg !9210
  %84 = load i32, i32* %i, align 4, !dbg !9211
  %add68 = add nsw i32 %84, 7, !dbg !9212
  %idxprom69 = sext i32 %add68 to i64, !dbg !9213
  %85 = load i32*, i32** %dst.addr, align 8, !dbg !9213
  %arrayidx70 = getelementptr inbounds i32, i32* %85, i64 %idxprom69, !dbg !9213
  store i32 %shr67, i32* %arrayidx70, align 4, !dbg !9214
  br label %for.inc, !dbg !9215

for.inc:                                          ; preds = %for.body
  %86 = load i32, i32* %i, align 4, !dbg !9216
  %add71 = add nsw i32 %86, 8, !dbg !9216
  store i32 %add71, i32* %i, align 4, !dbg !9216
  br label %for.cond, !dbg !9218, !llvm.loop !9219

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9221

if.else:                                          ; preds = %entry
  %87 = load i32, i32* %shift, align 4, !dbg !9222
  %sub72 = sub nsw i32 0, %87, !dbg !9224
  store i32 %sub72, i32* %shift, align 4, !dbg !9225
  store i32 0, i32* %i, align 4, !dbg !9226
  br label %for.cond73, !dbg !9228

for.cond73:                                       ; preds = %for.inc138, %if.else
  %88 = load i32, i32* %i, align 4, !dbg !9229
  %89 = load i32, i32* %len.addr, align 4, !dbg !9232
  %cmp74 = icmp slt i32 %88, %89, !dbg !9233
  br i1 %cmp74, label %for.body75, label %for.end140, !dbg !9234

for.body75:                                       ; preds = %for.cond73
  %90 = load i32, i32* %i, align 4, !dbg !9235
  %idxprom76 = sext i32 %90 to i64, !dbg !9237
  %91 = load i32*, i32** %src.addr, align 8, !dbg !9237
  %arrayidx77 = getelementptr inbounds i32, i32* %91, i64 %idxprom76, !dbg !9237
  %92 = load i32, i32* %arrayidx77, align 4, !dbg !9237
  %93 = load i32, i32* %mul, align 4, !dbg !9238
  %mul78 = mul i32 %92, %93, !dbg !9239
  store i32 %mul78, i32* %temp, align 4, !dbg !9240
  %94 = load i32, i32* %i, align 4, !dbg !9241
  %add79 = add nsw i32 %94, 1, !dbg !9242
  %idxprom80 = sext i32 %add79 to i64, !dbg !9243
  %95 = load i32*, i32** %src.addr, align 8, !dbg !9243
  %arrayidx81 = getelementptr inbounds i32, i32* %95, i64 %idxprom80, !dbg !9243
  %96 = load i32, i32* %arrayidx81, align 4, !dbg !9243
  %97 = load i32, i32* %mul, align 4, !dbg !9244
  %mul82 = mul i32 %96, %97, !dbg !9245
  store i32 %mul82, i32* %temp1, align 4, !dbg !9246
  %98 = load i32, i32* %i, align 4, !dbg !9247
  %add83 = add nsw i32 %98, 2, !dbg !9248
  %idxprom84 = sext i32 %add83 to i64, !dbg !9249
  %99 = load i32*, i32** %src.addr, align 8, !dbg !9249
  %arrayidx85 = getelementptr inbounds i32, i32* %99, i64 %idxprom84, !dbg !9249
  %100 = load i32, i32* %arrayidx85, align 4, !dbg !9249
  %101 = load i32, i32* %mul, align 4, !dbg !9250
  %mul86 = mul i32 %100, %101, !dbg !9251
  store i32 %mul86, i32* %temp2, align 4, !dbg !9252
  %102 = load i32, i32* %temp, align 4, !dbg !9253
  %103 = load i32, i32* %shift, align 4, !dbg !9254
  %shl87 = shl i32 %102, %103, !dbg !9255
  %104 = load i32, i32* %i, align 4, !dbg !9256
  %idxprom88 = sext i32 %104 to i64, !dbg !9257
  %105 = load i32*, i32** %dst.addr, align 8, !dbg !9257
  %arrayidx89 = getelementptr inbounds i32, i32* %105, i64 %idxprom88, !dbg !9257
  store i32 %shl87, i32* %arrayidx89, align 4, !dbg !9258
  %106 = load i32, i32* %i, align 4, !dbg !9259
  %add90 = add nsw i32 %106, 3, !dbg !9260
  %idxprom91 = sext i32 %add90 to i64, !dbg !9261
  %107 = load i32*, i32** %src.addr, align 8, !dbg !9261
  %arrayidx92 = getelementptr inbounds i32, i32* %107, i64 %idxprom91, !dbg !9261
  %108 = load i32, i32* %arrayidx92, align 4, !dbg !9261
  %109 = load i32, i32* %mul, align 4, !dbg !9262
  %mul93 = mul i32 %108, %109, !dbg !9263
  store i32 %mul93, i32* %temp3, align 4, !dbg !9264
  %110 = load i32, i32* %temp1, align 4, !dbg !9265
  %111 = load i32, i32* %shift, align 4, !dbg !9266
  %shl94 = shl i32 %110, %111, !dbg !9267
  %112 = load i32, i32* %i, align 4, !dbg !9268
  %add95 = add nsw i32 %112, 1, !dbg !9269
  %idxprom96 = sext i32 %add95 to i64, !dbg !9270
  %113 = load i32*, i32** %dst.addr, align 8, !dbg !9270
  %arrayidx97 = getelementptr inbounds i32, i32* %113, i64 %idxprom96, !dbg !9270
  store i32 %shl94, i32* %arrayidx97, align 4, !dbg !9271
  %114 = load i32, i32* %i, align 4, !dbg !9272
  %add98 = add nsw i32 %114, 4, !dbg !9273
  %idxprom99 = sext i32 %add98 to i64, !dbg !9274
  %115 = load i32*, i32** %src.addr, align 8, !dbg !9274
  %arrayidx100 = getelementptr inbounds i32, i32* %115, i64 %idxprom99, !dbg !9274
  %116 = load i32, i32* %arrayidx100, align 4, !dbg !9274
  %117 = load i32, i32* %mul, align 4, !dbg !9275
  %mul101 = mul i32 %116, %117, !dbg !9276
  store i32 %mul101, i32* %temp4, align 4, !dbg !9277
  %118 = load i32, i32* %temp2, align 4, !dbg !9278
  %119 = load i32, i32* %shift, align 4, !dbg !9279
  %shl102 = shl i32 %118, %119, !dbg !9280
  %120 = load i32, i32* %i, align 4, !dbg !9281
  %add103 = add nsw i32 %120, 2, !dbg !9282
  %idxprom104 = sext i32 %add103 to i64, !dbg !9283
  %121 = load i32*, i32** %dst.addr, align 8, !dbg !9283
  %arrayidx105 = getelementptr inbounds i32, i32* %121, i64 %idxprom104, !dbg !9283
  store i32 %shl102, i32* %arrayidx105, align 4, !dbg !9284
  %122 = load i32, i32* %i, align 4, !dbg !9285
  %add106 = add nsw i32 %122, 5, !dbg !9286
  %idxprom107 = sext i32 %add106 to i64, !dbg !9287
  %123 = load i32*, i32** %src.addr, align 8, !dbg !9287
  %arrayidx108 = getelementptr inbounds i32, i32* %123, i64 %idxprom107, !dbg !9287
  %124 = load i32, i32* %arrayidx108, align 4, !dbg !9287
  %125 = load i32, i32* %mul, align 4, !dbg !9288
  %mul109 = mul i32 %124, %125, !dbg !9289
  store i32 %mul109, i32* %temp5, align 4, !dbg !9290
  %126 = load i32, i32* %temp3, align 4, !dbg !9291
  %127 = load i32, i32* %shift, align 4, !dbg !9292
  %shl110 = shl i32 %126, %127, !dbg !9293
  %128 = load i32, i32* %i, align 4, !dbg !9294
  %add111 = add nsw i32 %128, 3, !dbg !9295
  %idxprom112 = sext i32 %add111 to i64, !dbg !9296
  %129 = load i32*, i32** %dst.addr, align 8, !dbg !9296
  %arrayidx113 = getelementptr inbounds i32, i32* %129, i64 %idxprom112, !dbg !9296
  store i32 %shl110, i32* %arrayidx113, align 4, !dbg !9297
  %130 = load i32, i32* %i, align 4, !dbg !9298
  %add114 = add nsw i32 %130, 6, !dbg !9299
  %idxprom115 = sext i32 %add114 to i64, !dbg !9300
  %131 = load i32*, i32** %src.addr, align 8, !dbg !9300
  %arrayidx116 = getelementptr inbounds i32, i32* %131, i64 %idxprom115, !dbg !9300
  %132 = load i32, i32* %arrayidx116, align 4, !dbg !9300
  %133 = load i32, i32* %mul, align 4, !dbg !9301
  %mul117 = mul i32 %132, %133, !dbg !9302
  store i32 %mul117, i32* %temp6, align 4, !dbg !9303
  %134 = load i32, i32* %temp4, align 4, !dbg !9304
  %135 = load i32, i32* %shift, align 4, !dbg !9305
  %shl118 = shl i32 %134, %135, !dbg !9306
  %136 = load i32, i32* %i, align 4, !dbg !9307
  %add119 = add nsw i32 %136, 4, !dbg !9308
  %idxprom120 = sext i32 %add119 to i64, !dbg !9309
  %137 = load i32*, i32** %dst.addr, align 8, !dbg !9309
  %arrayidx121 = getelementptr inbounds i32, i32* %137, i64 %idxprom120, !dbg !9309
  store i32 %shl118, i32* %arrayidx121, align 4, !dbg !9310
  %138 = load i32, i32* %i, align 4, !dbg !9311
  %add122 = add nsw i32 %138, 7, !dbg !9312
  %idxprom123 = sext i32 %add122 to i64, !dbg !9313
  %139 = load i32*, i32** %src.addr, align 8, !dbg !9313
  %arrayidx124 = getelementptr inbounds i32, i32* %139, i64 %idxprom123, !dbg !9313
  %140 = load i32, i32* %arrayidx124, align 4, !dbg !9313
  %141 = load i32, i32* %mul, align 4, !dbg !9314
  %mul125 = mul i32 %140, %141, !dbg !9315
  store i32 %mul125, i32* %temp7, align 4, !dbg !9316
  %142 = load i32, i32* %temp5, align 4, !dbg !9317
  %143 = load i32, i32* %shift, align 4, !dbg !9318
  %shl126 = shl i32 %142, %143, !dbg !9319
  %144 = load i32, i32* %i, align 4, !dbg !9320
  %add127 = add nsw i32 %144, 5, !dbg !9321
  %idxprom128 = sext i32 %add127 to i64, !dbg !9322
  %145 = load i32*, i32** %dst.addr, align 8, !dbg !9322
  %arrayidx129 = getelementptr inbounds i32, i32* %145, i64 %idxprom128, !dbg !9322
  store i32 %shl126, i32* %arrayidx129, align 4, !dbg !9323
  %146 = load i32, i32* %temp6, align 4, !dbg !9324
  %147 = load i32, i32* %shift, align 4, !dbg !9325
  %shl130 = shl i32 %146, %147, !dbg !9326
  %148 = load i32, i32* %i, align 4, !dbg !9327
  %add131 = add nsw i32 %148, 6, !dbg !9328
  %idxprom132 = sext i32 %add131 to i64, !dbg !9329
  %149 = load i32*, i32** %dst.addr, align 8, !dbg !9329
  %arrayidx133 = getelementptr inbounds i32, i32* %149, i64 %idxprom132, !dbg !9329
  store i32 %shl130, i32* %arrayidx133, align 4, !dbg !9330
  %150 = load i32, i32* %temp7, align 4, !dbg !9331
  %151 = load i32, i32* %shift, align 4, !dbg !9332
  %shl134 = shl i32 %150, %151, !dbg !9333
  %152 = load i32, i32* %i, align 4, !dbg !9334
  %add135 = add nsw i32 %152, 7, !dbg !9335
  %idxprom136 = sext i32 %add135 to i64, !dbg !9336
  %153 = load i32*, i32** %dst.addr, align 8, !dbg !9336
  %arrayidx137 = getelementptr inbounds i32, i32* %153, i64 %idxprom136, !dbg !9336
  store i32 %shl134, i32* %arrayidx137, align 4, !dbg !9337
  br label %for.inc138, !dbg !9338

for.inc138:                                       ; preds = %for.body75
  %154 = load i32, i32* %i, align 4, !dbg !9339
  %add139 = add nsw i32 %154, 8, !dbg !9339
  store i32 %add139, i32* %i, align 4, !dbg !9339
  br label %for.cond73, !dbg !9341, !llvm.loop !9342

for.end140:                                       ; preds = %for.cond73
  br label %if.end

if.end:                                           ; preds = %for.end140, %for.end
  ret void, !dbg !9344
}

; Function Attrs: nounwind uwtable
define internal void @ff_eac3_apply_spectral_extension(%struct.AC3DecodeContext* %s) #1 !dbg !9345 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bin = alloca i32, align 4
  %bnd = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %wrapflag = alloca [17 x i8], align 16
  %num_copy_sections = alloca i8, align 1
  %copy_sizes = alloca [17 x i8], align 16
  %rms_energy = alloca [17 x float], align 16
  %copysize = alloca i32, align 4
  %bandsize = alloca i32, align 4
  %bandsize85 = alloca i32, align 4
  %accum = alloca float, align 4
  %coeff = alloca float, align 4
  %atten_tab = alloca float*, align 8
  %coeffs = alloca i32*, align 8
  %nscale = alloca float, align 4
  %sscale = alloca float, align 4
  %noise = alloca float, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9346, metadata !1849), !dbg !9347
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !9348, metadata !1849), !dbg !9349
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !9350, metadata !1849), !dbg !9351
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9352, metadata !1849), !dbg !9353
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9354, metadata !1849), !dbg !9355
  call void @llvm.dbg.declare(metadata [17 x i8]* %wrapflag, metadata !9356, metadata !1849), !dbg !9357
  %0 = bitcast [17 x i8]* %wrapflag to i8*, !dbg !9357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @ff_eac3_apply_spectral_extension.wrapflag, i32 0, i32 0), i64 17, i32 16, i1 false), !dbg !9357
  call void @llvm.dbg.declare(metadata i8* %num_copy_sections, metadata !9358, metadata !1849), !dbg !9359
  call void @llvm.dbg.declare(metadata [17 x i8]* %copy_sizes, metadata !9360, metadata !1849), !dbg !9361
  call void @llvm.dbg.declare(metadata [17 x float]* %rms_energy, metadata !9362, metadata !1849), !dbg !9364
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9365
  %spx_dst_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 61, !dbg !9366
  %2 = load i32, i32* %spx_dst_start_freq, align 4, !dbg !9366
  store i32 %2, i32* %bin, align 4, !dbg !9367
  store i8 0, i8* %num_copy_sections, align 1, !dbg !9368
  store i32 0, i32* %bnd, align 4, !dbg !9369
  br label %for.cond, !dbg !9371

for.cond:                                         ; preds = %for.inc36, %entry
  %3 = load i32, i32* %bnd, align 4, !dbg !9372
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9375
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 62, !dbg !9376
  %5 = load i32, i32* %num_spx_bands, align 32, !dbg !9376
  %cmp = icmp slt i32 %3, %5, !dbg !9377
  br i1 %cmp, label %for.body, label %for.end38, !dbg !9378

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %copysize, metadata !9379, metadata !1849), !dbg !9381
  call void @llvm.dbg.declare(metadata i32* %bandsize, metadata !9382, metadata !1849), !dbg !9383
  %6 = load i32, i32* %bnd, align 4, !dbg !9384
  %idxprom = sext i32 %6 to i64, !dbg !9385
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9385
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 64, !dbg !9386
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i64 0, i64 %idxprom, !dbg !9385
  %8 = load i8, i8* %arrayidx, align 1, !dbg !9385
  %conv = zext i8 %8 to i32, !dbg !9385
  store i32 %conv, i32* %bandsize, align 4, !dbg !9383
  %9 = load i32, i32* %bin, align 4, !dbg !9387
  %10 = load i32, i32* %bandsize, align 4, !dbg !9389
  %add = add nsw i32 %9, %10, !dbg !9390
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9391
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 59, !dbg !9392
  %12 = load i32, i32* %spx_src_start_freq, align 4, !dbg !9392
  %cmp1 = icmp sgt i32 %add, %12, !dbg !9393
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9394

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %bin, align 4, !dbg !9395
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9397
  %spx_dst_start_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 61, !dbg !9398
  %15 = load i32, i32* %spx_dst_start_freq3, align 4, !dbg !9398
  %sub = sub nsw i32 %13, %15, !dbg !9399
  %conv4 = trunc i32 %sub to i8, !dbg !9395
  %16 = load i8, i8* %num_copy_sections, align 1, !dbg !9400
  %inc = add i8 %16, 1, !dbg !9400
  store i8 %inc, i8* %num_copy_sections, align 1, !dbg !9400
  %idxprom5 = zext i8 %16 to i64, !dbg !9401
  %arrayidx6 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom5, !dbg !9401
  store i8 %conv4, i8* %arrayidx6, align 1, !dbg !9402
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9403
  %spx_dst_start_freq7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 61, !dbg !9404
  %18 = load i32, i32* %spx_dst_start_freq7, align 4, !dbg !9404
  store i32 %18, i32* %bin, align 4, !dbg !9405
  %19 = load i32, i32* %bnd, align 4, !dbg !9406
  %idxprom8 = sext i32 %19 to i64, !dbg !9407
  %arrayidx9 = getelementptr inbounds [17 x i8], [17 x i8]* %wrapflag, i64 0, i64 %idxprom8, !dbg !9407
  store i8 1, i8* %arrayidx9, align 1, !dbg !9408
  br label %if.end, !dbg !9409

if.end:                                           ; preds = %if.then, %for.body
  store i32 0, i32* %i, align 4, !dbg !9410
  br label %for.cond10, !dbg !9412

for.cond10:                                       ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !9413
  %21 = load i32, i32* %bandsize, align 4, !dbg !9416
  %cmp11 = icmp slt i32 %20, %21, !dbg !9417
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !9418

for.body13:                                       ; preds = %for.cond10
  %22 = load i32, i32* %bin, align 4, !dbg !9419
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9422
  %spx_src_start_freq14 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 59, !dbg !9423
  %24 = load i32, i32* %spx_src_start_freq14, align 4, !dbg !9423
  %cmp15 = icmp eq i32 %22, %24, !dbg !9424
  br i1 %cmp15, label %if.then17, label %if.end25, !dbg !9425

if.then17:                                        ; preds = %for.body13
  %25 = load i32, i32* %bin, align 4, !dbg !9426
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9428
  %spx_dst_start_freq18 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 61, !dbg !9429
  %27 = load i32, i32* %spx_dst_start_freq18, align 4, !dbg !9429
  %sub19 = sub nsw i32 %25, %27, !dbg !9430
  %conv20 = trunc i32 %sub19 to i8, !dbg !9426
  %28 = load i8, i8* %num_copy_sections, align 1, !dbg !9431
  %inc21 = add i8 %28, 1, !dbg !9431
  store i8 %inc21, i8* %num_copy_sections, align 1, !dbg !9431
  %idxprom22 = zext i8 %28 to i64, !dbg !9432
  %arrayidx23 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom22, !dbg !9432
  store i8 %conv20, i8* %arrayidx23, align 1, !dbg !9433
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9434
  %spx_dst_start_freq24 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 61, !dbg !9435
  %30 = load i32, i32* %spx_dst_start_freq24, align 4, !dbg !9435
  store i32 %30, i32* %bin, align 4, !dbg !9436
  br label %if.end25, !dbg !9437

if.end25:                                         ; preds = %if.then17, %for.body13
  %31 = load i32, i32* %bandsize, align 4, !dbg !9438
  %32 = load i32, i32* %i, align 4, !dbg !9439
  %sub26 = sub nsw i32 %31, %32, !dbg !9440
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9441
  %spx_src_start_freq27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 59, !dbg !9442
  %34 = load i32, i32* %spx_src_start_freq27, align 4, !dbg !9442
  %35 = load i32, i32* %bin, align 4, !dbg !9443
  %sub28 = sub nsw i32 %34, %35, !dbg !9444
  %cmp29 = icmp sgt i32 %sub26, %sub28, !dbg !9445
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !9446

cond.true:                                        ; preds = %if.end25
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9447
  %spx_src_start_freq31 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 59, !dbg !9449
  %37 = load i32, i32* %spx_src_start_freq31, align 4, !dbg !9449
  %38 = load i32, i32* %bin, align 4, !dbg !9450
  %sub32 = sub nsw i32 %37, %38, !dbg !9451
  br label %cond.end, !dbg !9452

cond.false:                                       ; preds = %if.end25
  %39 = load i32, i32* %bandsize, align 4, !dbg !9453
  %40 = load i32, i32* %i, align 4, !dbg !9455
  %sub33 = sub nsw i32 %39, %40, !dbg !9456
  br label %cond.end, !dbg !9457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub32, %cond.true ], [ %sub33, %cond.false ], !dbg !9458
  store i32 %cond, i32* %copysize, align 4, !dbg !9460
  %41 = load i32, i32* %copysize, align 4, !dbg !9461
  %42 = load i32, i32* %bin, align 4, !dbg !9462
  %add34 = add nsw i32 %42, %41, !dbg !9462
  store i32 %add34, i32* %bin, align 4, !dbg !9462
  br label %for.inc, !dbg !9463

for.inc:                                          ; preds = %cond.end
  %43 = load i32, i32* %copysize, align 4, !dbg !9464
  %44 = load i32, i32* %i, align 4, !dbg !9466
  %add35 = add nsw i32 %44, %43, !dbg !9466
  store i32 %add35, i32* %i, align 4, !dbg !9466
  br label %for.cond10, !dbg !9467, !llvm.loop !9468

for.end:                                          ; preds = %for.cond10
  br label %for.inc36, !dbg !9470

for.inc36:                                        ; preds = %for.end
  %45 = load i32, i32* %bnd, align 4, !dbg !9471
  %inc37 = add nsw i32 %45, 1, !dbg !9471
  store i32 %inc37, i32* %bnd, align 4, !dbg !9471
  br label %for.cond, !dbg !9473, !llvm.loop !9474

for.end38:                                        ; preds = %for.cond
  %46 = load i32, i32* %bin, align 4, !dbg !9476
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9477
  %spx_dst_start_freq39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 61, !dbg !9478
  %48 = load i32, i32* %spx_dst_start_freq39, align 4, !dbg !9478
  %sub40 = sub nsw i32 %46, %48, !dbg !9479
  %conv41 = trunc i32 %sub40 to i8, !dbg !9476
  %49 = load i8, i8* %num_copy_sections, align 1, !dbg !9480
  %inc42 = add i8 %49, 1, !dbg !9480
  store i8 %inc42, i8* %num_copy_sections, align 1, !dbg !9480
  %idxprom43 = zext i8 %49 to i64, !dbg !9481
  %arrayidx44 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom43, !dbg !9481
  store i8 %conv41, i8* %arrayidx44, align 1, !dbg !9482
  store i32 1, i32* %ch, align 4, !dbg !9483
  br label %for.cond45, !dbg !9485

for.cond45:                                       ; preds = %for.inc234, %for.end38
  %50 = load i32, i32* %ch, align 4, !dbg !9486
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9489
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 70, !dbg !9490
  %52 = load i32, i32* %fbw_channels, align 4, !dbg !9490
  %cmp46 = icmp sle i32 %50, %52, !dbg !9491
  br i1 %cmp46, label %for.body48, label %for.end236, !dbg !9492

for.body48:                                       ; preds = %for.cond45
  %53 = load i32, i32* %ch, align 4, !dbg !9493
  %idxprom49 = sext i32 %53 to i64, !dbg !9496
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9496
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 57, !dbg !9497
  %arrayidx50 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom49, !dbg !9496
  %55 = load i8, i8* %arrayidx50, align 1, !dbg !9496
  %tobool = icmp ne i8 %55, 0, !dbg !9496
  br i1 %tobool, label %if.end52, label %if.then51, !dbg !9498

if.then51:                                        ; preds = %for.body48
  br label %for.inc234, !dbg !9499

if.end52:                                         ; preds = %for.body48
  %56 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9500
  %spx_src_start_freq53 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %56, i32 0, i32 59, !dbg !9501
  %57 = load i32, i32* %spx_src_start_freq53, align 4, !dbg !9501
  store i32 %57, i32* %bin, align 4, !dbg !9502
  store i32 0, i32* %i, align 4, !dbg !9503
  br label %for.cond54, !dbg !9505

for.cond54:                                       ; preds = %for.inc76, %if.end52
  %58 = load i32, i32* %i, align 4, !dbg !9506
  %59 = load i8, i8* %num_copy_sections, align 1, !dbg !9509
  %conv55 = zext i8 %59 to i32, !dbg !9509
  %cmp56 = icmp slt i32 %58, %conv55, !dbg !9510
  br i1 %cmp56, label %for.body58, label %for.end78, !dbg !9511

for.body58:                                       ; preds = %for.cond54
  %60 = load i32, i32* %bin, align 4, !dbg !9512
  %idxprom59 = sext i32 %60 to i64, !dbg !9514
  %61 = load i32, i32* %ch, align 4, !dbg !9515
  %idxprom60 = sext i32 %61 to i64, !dbg !9514
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9514
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 119, !dbg !9516
  %arrayidx61 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs, i64 0, i64 %idxprom60, !dbg !9514
  %arrayidx62 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx61, i64 0, i64 %idxprom59, !dbg !9514
  %63 = bitcast i32* %arrayidx62 to i8*, !dbg !9517
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9518
  %spx_dst_start_freq63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 61, !dbg !9519
  %65 = load i32, i32* %spx_dst_start_freq63, align 4, !dbg !9519
  %idxprom64 = sext i32 %65 to i64, !dbg !9520
  %66 = load i32, i32* %ch, align 4, !dbg !9521
  %idxprom65 = sext i32 %66 to i64, !dbg !9520
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9520
  %transform_coeffs66 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 119, !dbg !9522
  %arrayidx67 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs66, i64 0, i64 %idxprom65, !dbg !9520
  %arrayidx68 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx67, i64 0, i64 %idxprom64, !dbg !9520
  %68 = bitcast i32* %arrayidx68 to i8*, !dbg !9517
  %69 = load i32, i32* %i, align 4, !dbg !9523
  %idxprom69 = sext i32 %69 to i64, !dbg !9524
  %arrayidx70 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom69, !dbg !9524
  %70 = load i8, i8* %arrayidx70, align 1, !dbg !9524
  %conv71 = zext i8 %70 to i64, !dbg !9524
  %mul = mul i64 %conv71, 4, !dbg !9525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %68, i64 %mul, i32 4, i1 false), !dbg !9517
  %71 = load i32, i32* %i, align 4, !dbg !9526
  %idxprom72 = sext i32 %71 to i64, !dbg !9527
  %arrayidx73 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom72, !dbg !9527
  %72 = load i8, i8* %arrayidx73, align 1, !dbg !9527
  %conv74 = zext i8 %72 to i32, !dbg !9527
  %73 = load i32, i32* %bin, align 4, !dbg !9528
  %add75 = add nsw i32 %73, %conv74, !dbg !9528
  store i32 %add75, i32* %bin, align 4, !dbg !9528
  br label %for.inc76, !dbg !9529

for.inc76:                                        ; preds = %for.body58
  %74 = load i32, i32* %i, align 4, !dbg !9530
  %inc77 = add nsw i32 %74, 1, !dbg !9530
  store i32 %inc77, i32* %i, align 4, !dbg !9530
  br label %for.cond54, !dbg !9532, !llvm.loop !9533

for.end78:                                        ; preds = %for.cond54
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9535
  %spx_src_start_freq79 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 59, !dbg !9536
  %76 = load i32, i32* %spx_src_start_freq79, align 4, !dbg !9536
  store i32 %76, i32* %bin, align 4, !dbg !9537
  store i32 0, i32* %bnd, align 4, !dbg !9538
  br label %for.cond80, !dbg !9540

for.cond80:                                       ; preds = %for.inc109, %for.end78
  %77 = load i32, i32* %bnd, align 4, !dbg !9541
  %78 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9544
  %num_spx_bands81 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %78, i32 0, i32 62, !dbg !9545
  %79 = load i32, i32* %num_spx_bands81, align 32, !dbg !9545
  %cmp82 = icmp slt i32 %77, %79, !dbg !9546
  br i1 %cmp82, label %for.body84, label %for.end111, !dbg !9547

for.body84:                                       ; preds = %for.cond80
  call void @llvm.dbg.declare(metadata i32* %bandsize85, metadata !9548, metadata !1849), !dbg !9550
  %80 = load i32, i32* %bnd, align 4, !dbg !9551
  %idxprom86 = sext i32 %80 to i64, !dbg !9552
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9552
  %spx_band_sizes87 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %81, i32 0, i32 64, !dbg !9553
  %arrayidx88 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes87, i64 0, i64 %idxprom86, !dbg !9552
  %82 = load i8, i8* %arrayidx88, align 1, !dbg !9552
  %conv89 = zext i8 %82 to i32, !dbg !9552
  store i32 %conv89, i32* %bandsize85, align 4, !dbg !9550
  call void @llvm.dbg.declare(metadata float* %accum, metadata !9554, metadata !1849), !dbg !9555
  store float 0.000000e+00, float* %accum, align 4, !dbg !9555
  store i32 0, i32* %i, align 4, !dbg !9556
  br label %for.cond90, !dbg !9558

for.cond90:                                       ; preds = %for.inc103, %for.body84
  %83 = load i32, i32* %i, align 4, !dbg !9559
  %84 = load i32, i32* %bandsize85, align 4, !dbg !9562
  %cmp91 = icmp slt i32 %83, %84, !dbg !9563
  br i1 %cmp91, label %for.body93, label %for.end105, !dbg !9564

for.body93:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata float* %coeff, metadata !9565, metadata !1849), !dbg !9567
  %85 = load i32, i32* %bin, align 4, !dbg !9568
  %inc94 = add nsw i32 %85, 1, !dbg !9568
  store i32 %inc94, i32* %bin, align 4, !dbg !9568
  %idxprom95 = sext i32 %85 to i64, !dbg !9569
  %86 = load i32, i32* %ch, align 4, !dbg !9570
  %idxprom96 = sext i32 %86 to i64, !dbg !9569
  %87 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9569
  %transform_coeffs97 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %87, i32 0, i32 119, !dbg !9571
  %arrayidx98 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs97, i64 0, i64 %idxprom96, !dbg !9569
  %arrayidx99 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx98, i64 0, i64 %idxprom95, !dbg !9569
  %88 = load i32, i32* %arrayidx99, align 4, !dbg !9569
  %conv100 = sitofp i32 %88 to float, !dbg !9569
  store float %conv100, float* %coeff, align 4, !dbg !9567
  %89 = load float, float* %coeff, align 4, !dbg !9572
  %90 = load float, float* %coeff, align 4, !dbg !9573
  %mul101 = fmul float %89, %90, !dbg !9574
  %91 = load float, float* %accum, align 4, !dbg !9575
  %add102 = fadd float %91, %mul101, !dbg !9575
  store float %add102, float* %accum, align 4, !dbg !9575
  br label %for.inc103, !dbg !9576

for.inc103:                                       ; preds = %for.body93
  %92 = load i32, i32* %i, align 4, !dbg !9577
  %inc104 = add nsw i32 %92, 1, !dbg !9577
  store i32 %inc104, i32* %i, align 4, !dbg !9577
  br label %for.cond90, !dbg !9579, !llvm.loop !9580

for.end105:                                       ; preds = %for.cond90
  %93 = load float, float* %accum, align 4, !dbg !9582
  %94 = load i32, i32* %bandsize85, align 4, !dbg !9583
  %conv106 = sitofp i32 %94 to float, !dbg !9583
  %div = fdiv float %93, %conv106, !dbg !9584
  %call = call float @sqrtf(float %div) #12, !dbg !9585
  %95 = load i32, i32* %bnd, align 4, !dbg !9586
  %idxprom107 = sext i32 %95 to i64, !dbg !9587
  %arrayidx108 = getelementptr inbounds [17 x float], [17 x float]* %rms_energy, i64 0, i64 %idxprom107, !dbg !9587
  store float %call, float* %arrayidx108, align 4, !dbg !9588
  br label %for.inc109, !dbg !9589

for.inc109:                                       ; preds = %for.end105
  %96 = load i32, i32* %bnd, align 4, !dbg !9590
  %inc110 = add nsw i32 %96, 1, !dbg !9590
  store i32 %inc110, i32* %bnd, align 4, !dbg !9590
  br label %for.cond80, !dbg !9592, !llvm.loop !9593

for.end111:                                       ; preds = %for.cond80
  %97 = load i32, i32* %ch, align 4, !dbg !9595
  %idxprom112 = sext i32 %97 to i64, !dbg !9597
  %98 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9597
  %spx_atten_code = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %98, i32 0, i32 58, !dbg !9598
  %arrayidx113 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code, i64 0, i64 %idxprom112, !dbg !9597
  %99 = load i8, i8* %arrayidx113, align 1, !dbg !9597
  %conv114 = sext i8 %99 to i32, !dbg !9597
  %cmp115 = icmp sge i32 %conv114, 0, !dbg !9599
  br i1 %cmp115, label %if.then117, label %if.end173, !dbg !9600

if.then117:                                       ; preds = %for.end111
  call void @llvm.dbg.declare(metadata float** %atten_tab, metadata !9601, metadata !1849), !dbg !9603
  %100 = load i32, i32* %ch, align 4, !dbg !9604
  %idxprom118 = sext i32 %100 to i64, !dbg !9605
  %101 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9605
  %spx_atten_code119 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %101, i32 0, i32 58, !dbg !9606
  %arrayidx120 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code119, i64 0, i64 %idxprom118, !dbg !9605
  %102 = load i8, i8* %arrayidx120, align 1, !dbg !9605
  %idxprom121 = sext i8 %102 to i64, !dbg !9607
  %arrayidx122 = getelementptr inbounds [32 x [3 x float]], [32 x [3 x float]]* @ff_eac3_spx_atten_tab, i64 0, i64 %idxprom121, !dbg !9607
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx122, i32 0, i32 0, !dbg !9607
  store float* %arraydecay, float** %atten_tab, align 8, !dbg !9603
  %103 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9608
  %spx_src_start_freq123 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %103, i32 0, i32 59, !dbg !9609
  %104 = load i32, i32* %spx_src_start_freq123, align 4, !dbg !9609
  %sub124 = sub nsw i32 %104, 2, !dbg !9610
  store i32 %sub124, i32* %bin, align 4, !dbg !9611
  store i32 0, i32* %bnd, align 4, !dbg !9612
  br label %for.cond125, !dbg !9614

for.cond125:                                      ; preds = %for.inc170, %if.then117
  %105 = load i32, i32* %bnd, align 4, !dbg !9615
  %106 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9618
  %num_spx_bands126 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %106, i32 0, i32 62, !dbg !9619
  %107 = load i32, i32* %num_spx_bands126, align 32, !dbg !9619
  %cmp127 = icmp slt i32 %105, %107, !dbg !9620
  br i1 %cmp127, label %for.body129, label %for.end172, !dbg !9621

for.body129:                                      ; preds = %for.cond125
  %108 = load i32, i32* %bnd, align 4, !dbg !9622
  %idxprom130 = sext i32 %108 to i64, !dbg !9625
  %arrayidx131 = getelementptr inbounds [17 x i8], [17 x i8]* %wrapflag, i64 0, i64 %idxprom130, !dbg !9625
  %109 = load i8, i8* %arrayidx131, align 1, !dbg !9625
  %tobool132 = icmp ne i8 %109, 0, !dbg !9625
  br i1 %tobool132, label %if.then133, label %if.end164, !dbg !9626

if.then133:                                       ; preds = %for.body129
  call void @llvm.dbg.declare(metadata i32** %coeffs, metadata !9627, metadata !1849), !dbg !9629
  %110 = load i32, i32* %bin, align 4, !dbg !9630
  %idxprom134 = sext i32 %110 to i64, !dbg !9631
  %111 = load i32, i32* %ch, align 4, !dbg !9632
  %idxprom135 = sext i32 %111 to i64, !dbg !9631
  %112 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9631
  %transform_coeffs136 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %112, i32 0, i32 119, !dbg !9633
  %arrayidx137 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs136, i64 0, i64 %idxprom135, !dbg !9631
  %arrayidx138 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx137, i64 0, i64 %idxprom134, !dbg !9631
  store i32* %arrayidx138, i32** %coeffs, align 8, !dbg !9629
  %113 = load float*, float** %atten_tab, align 8, !dbg !9634
  %arrayidx139 = getelementptr inbounds float, float* %113, i64 0, !dbg !9634
  %114 = load float, float* %arrayidx139, align 4, !dbg !9634
  %115 = load i32*, i32** %coeffs, align 8, !dbg !9635
  %arrayidx140 = getelementptr inbounds i32, i32* %115, i64 0, !dbg !9635
  %116 = load i32, i32* %arrayidx140, align 4, !dbg !9636
  %conv141 = sitofp i32 %116 to float, !dbg !9636
  %mul142 = fmul float %conv141, %114, !dbg !9636
  %conv143 = fptosi float %mul142 to i32, !dbg !9636
  store i32 %conv143, i32* %arrayidx140, align 4, !dbg !9636
  %117 = load float*, float** %atten_tab, align 8, !dbg !9637
  %arrayidx144 = getelementptr inbounds float, float* %117, i64 1, !dbg !9637
  %118 = load float, float* %arrayidx144, align 4, !dbg !9637
  %119 = load i32*, i32** %coeffs, align 8, !dbg !9638
  %arrayidx145 = getelementptr inbounds i32, i32* %119, i64 1, !dbg !9638
  %120 = load i32, i32* %arrayidx145, align 4, !dbg !9639
  %conv146 = sitofp i32 %120 to float, !dbg !9639
  %mul147 = fmul float %conv146, %118, !dbg !9639
  %conv148 = fptosi float %mul147 to i32, !dbg !9639
  store i32 %conv148, i32* %arrayidx145, align 4, !dbg !9639
  %121 = load float*, float** %atten_tab, align 8, !dbg !9640
  %arrayidx149 = getelementptr inbounds float, float* %121, i64 2, !dbg !9640
  %122 = load float, float* %arrayidx149, align 4, !dbg !9640
  %123 = load i32*, i32** %coeffs, align 8, !dbg !9641
  %arrayidx150 = getelementptr inbounds i32, i32* %123, i64 2, !dbg !9641
  %124 = load i32, i32* %arrayidx150, align 4, !dbg !9642
  %conv151 = sitofp i32 %124 to float, !dbg !9642
  %mul152 = fmul float %conv151, %122, !dbg !9642
  %conv153 = fptosi float %mul152 to i32, !dbg !9642
  store i32 %conv153, i32* %arrayidx150, align 4, !dbg !9642
  %125 = load float*, float** %atten_tab, align 8, !dbg !9643
  %arrayidx154 = getelementptr inbounds float, float* %125, i64 1, !dbg !9643
  %126 = load float, float* %arrayidx154, align 4, !dbg !9643
  %127 = load i32*, i32** %coeffs, align 8, !dbg !9644
  %arrayidx155 = getelementptr inbounds i32, i32* %127, i64 3, !dbg !9644
  %128 = load i32, i32* %arrayidx155, align 4, !dbg !9645
  %conv156 = sitofp i32 %128 to float, !dbg !9645
  %mul157 = fmul float %conv156, %126, !dbg !9645
  %conv158 = fptosi float %mul157 to i32, !dbg !9645
  store i32 %conv158, i32* %arrayidx155, align 4, !dbg !9645
  %129 = load float*, float** %atten_tab, align 8, !dbg !9646
  %arrayidx159 = getelementptr inbounds float, float* %129, i64 0, !dbg !9646
  %130 = load float, float* %arrayidx159, align 4, !dbg !9646
  %131 = load i32*, i32** %coeffs, align 8, !dbg !9647
  %arrayidx160 = getelementptr inbounds i32, i32* %131, i64 4, !dbg !9647
  %132 = load i32, i32* %arrayidx160, align 4, !dbg !9648
  %conv161 = sitofp i32 %132 to float, !dbg !9648
  %mul162 = fmul float %conv161, %130, !dbg !9648
  %conv163 = fptosi float %mul162 to i32, !dbg !9648
  store i32 %conv163, i32* %arrayidx160, align 4, !dbg !9648
  br label %if.end164, !dbg !9649

if.end164:                                        ; preds = %if.then133, %for.body129
  %133 = load i32, i32* %bnd, align 4, !dbg !9650
  %idxprom165 = sext i32 %133 to i64, !dbg !9651
  %134 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9651
  %spx_band_sizes166 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %134, i32 0, i32 64, !dbg !9652
  %arrayidx167 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes166, i64 0, i64 %idxprom165, !dbg !9651
  %135 = load i8, i8* %arrayidx167, align 1, !dbg !9651
  %conv168 = zext i8 %135 to i32, !dbg !9651
  %136 = load i32, i32* %bin, align 4, !dbg !9653
  %add169 = add nsw i32 %136, %conv168, !dbg !9653
  store i32 %add169, i32* %bin, align 4, !dbg !9653
  br label %for.inc170, !dbg !9654

for.inc170:                                       ; preds = %if.end164
  %137 = load i32, i32* %bnd, align 4, !dbg !9655
  %inc171 = add nsw i32 %137, 1, !dbg !9655
  store i32 %inc171, i32* %bnd, align 4, !dbg !9655
  br label %for.cond125, !dbg !9657, !llvm.loop !9658

for.end172:                                       ; preds = %for.cond125
  br label %if.end173, !dbg !9660

if.end173:                                        ; preds = %for.end172, %for.end111
  %138 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9661
  %spx_src_start_freq174 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %138, i32 0, i32 59, !dbg !9662
  %139 = load i32, i32* %spx_src_start_freq174, align 4, !dbg !9662
  store i32 %139, i32* %bin, align 4, !dbg !9663
  store i32 0, i32* %bnd, align 4, !dbg !9664
  br label %for.cond175, !dbg !9666

for.cond175:                                      ; preds = %for.inc231, %if.end173
  %140 = load i32, i32* %bnd, align 4, !dbg !9667
  %141 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9670
  %num_spx_bands176 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %141, i32 0, i32 62, !dbg !9671
  %142 = load i32, i32* %num_spx_bands176, align 32, !dbg !9671
  %cmp177 = icmp slt i32 %140, %142, !dbg !9672
  br i1 %cmp177, label %for.body179, label %for.end233, !dbg !9673

for.body179:                                      ; preds = %for.cond175
  call void @llvm.dbg.declare(metadata float* %nscale, metadata !9674, metadata !1849), !dbg !9676
  %143 = load i32, i32* %bnd, align 4, !dbg !9677
  %idxprom180 = sext i32 %143 to i64, !dbg !9678
  %144 = load i32, i32* %ch, align 4, !dbg !9679
  %idxprom181 = sext i32 %144 to i64, !dbg !9678
  %145 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9678
  %spx_noise_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %145, i32 0, i32 66, !dbg !9680
  %arrayidx182 = getelementptr inbounds [7 x [17 x i32]], [7 x [17 x i32]]* %spx_noise_blend, i64 0, i64 %idxprom181, !dbg !9678
  %arrayidx183 = getelementptr inbounds [17 x i32], [17 x i32]* %arrayidx182, i64 0, i64 %idxprom180, !dbg !9678
  %146 = load i32, i32* %arrayidx183, align 4, !dbg !9678
  %conv184 = sitofp i32 %146 to float, !dbg !9678
  %147 = load i32, i32* %bnd, align 4, !dbg !9681
  %idxprom185 = sext i32 %147 to i64, !dbg !9682
  %arrayidx186 = getelementptr inbounds [17 x float], [17 x float]* %rms_energy, i64 0, i64 %idxprom185, !dbg !9682
  %148 = load float, float* %arrayidx186, align 4, !dbg !9682
  %mul187 = fmul float %conv184, %148, !dbg !9683
  %mul188 = fmul float %mul187, 0xBE00000000000000, !dbg !9684
  store float %mul188, float* %nscale, align 4, !dbg !9676
  call void @llvm.dbg.declare(metadata float* %sscale, metadata !9685, metadata !1849), !dbg !9686
  %149 = load i32, i32* %bnd, align 4, !dbg !9687
  %idxprom189 = sext i32 %149 to i64, !dbg !9688
  %150 = load i32, i32* %ch, align 4, !dbg !9689
  %idxprom190 = sext i32 %150 to i64, !dbg !9688
  %151 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9688
  %spx_signal_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %151, i32 0, i32 67, !dbg !9690
  %arrayidx191 = getelementptr inbounds [7 x [17 x i32]], [7 x [17 x i32]]* %spx_signal_blend, i64 0, i64 %idxprom190, !dbg !9688
  %arrayidx192 = getelementptr inbounds [17 x i32], [17 x i32]* %arrayidx191, i64 0, i64 %idxprom189, !dbg !9688
  %152 = load i32, i32* %arrayidx192, align 4, !dbg !9688
  %conv193 = sitofp i32 %152 to float, !dbg !9688
  store float %conv193, float* %sscale, align 4, !dbg !9686
  %153 = load float, float* %nscale, align 4, !dbg !9691
  %conv194 = fpext float %153 to double, !dbg !9691
  %mul195 = fmul double %conv194, 0x3E80000000000000, !dbg !9691
  %conv196 = fptrunc double %mul195 to float, !dbg !9691
  store float %conv196, float* %nscale, align 4, !dbg !9691
  %154 = load float, float* %sscale, align 4, !dbg !9692
  %conv197 = fpext float %154 to double, !dbg !9692
  %mul198 = fmul double %conv197, 0x3E80000000000000, !dbg !9692
  %conv199 = fptrunc double %mul198 to float, !dbg !9692
  store float %conv199, float* %sscale, align 4, !dbg !9692
  store i32 0, i32* %i, align 4, !dbg !9693
  br label %for.cond200, !dbg !9695

for.cond200:                                      ; preds = %for.inc228, %for.body179
  %155 = load i32, i32* %i, align 4, !dbg !9696
  %156 = load i32, i32* %bnd, align 4, !dbg !9699
  %idxprom201 = sext i32 %156 to i64, !dbg !9700
  %157 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9700
  %spx_band_sizes202 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %157, i32 0, i32 64, !dbg !9701
  %arrayidx203 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes202, i64 0, i64 %idxprom201, !dbg !9700
  %158 = load i8, i8* %arrayidx203, align 1, !dbg !9700
  %conv204 = zext i8 %158 to i32, !dbg !9700
  %cmp205 = icmp slt i32 %155, %conv204, !dbg !9702
  br i1 %cmp205, label %for.body207, label %for.end230, !dbg !9703

for.body207:                                      ; preds = %for.cond200
  call void @llvm.dbg.declare(metadata float* %noise, metadata !9704, metadata !1849), !dbg !9706
  %159 = load float, float* %nscale, align 4, !dbg !9707
  %160 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9708
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %160, i32 0, i32 105, !dbg !9709
  %call208 = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !9710
  %conv209 = sitofp i32 %call208 to float, !dbg !9711
  %mul210 = fmul float %159, %conv209, !dbg !9712
  store float %mul210, float* %noise, align 4, !dbg !9706
  %161 = load float, float* %sscale, align 4, !dbg !9713
  %162 = load i32, i32* %bin, align 4, !dbg !9714
  %idxprom211 = sext i32 %162 to i64, !dbg !9715
  %163 = load i32, i32* %ch, align 4, !dbg !9716
  %idxprom212 = sext i32 %163 to i64, !dbg !9715
  %164 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9715
  %transform_coeffs213 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %164, i32 0, i32 119, !dbg !9717
  %arrayidx214 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs213, i64 0, i64 %idxprom212, !dbg !9715
  %arrayidx215 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx214, i64 0, i64 %idxprom211, !dbg !9715
  %165 = load i32, i32* %arrayidx215, align 4, !dbg !9718
  %conv216 = sitofp i32 %165 to float, !dbg !9718
  %mul217 = fmul float %conv216, %161, !dbg !9718
  %conv218 = fptosi float %mul217 to i32, !dbg !9718
  store i32 %conv218, i32* %arrayidx215, align 4, !dbg !9718
  %166 = load float, float* %noise, align 4, !dbg !9719
  %167 = load i32, i32* %bin, align 4, !dbg !9720
  %inc219 = add nsw i32 %167, 1, !dbg !9720
  store i32 %inc219, i32* %bin, align 4, !dbg !9720
  %idxprom220 = sext i32 %167 to i64, !dbg !9721
  %168 = load i32, i32* %ch, align 4, !dbg !9722
  %idxprom221 = sext i32 %168 to i64, !dbg !9721
  %169 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9721
  %transform_coeffs222 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %169, i32 0, i32 119, !dbg !9723
  %arrayidx223 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs222, i64 0, i64 %idxprom221, !dbg !9721
  %arrayidx224 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx223, i64 0, i64 %idxprom220, !dbg !9721
  %170 = load i32, i32* %arrayidx224, align 4, !dbg !9724
  %conv225 = sitofp i32 %170 to float, !dbg !9724
  %add226 = fadd float %conv225, %166, !dbg !9724
  %conv227 = fptosi float %add226 to i32, !dbg !9724
  store i32 %conv227, i32* %arrayidx224, align 4, !dbg !9724
  br label %for.inc228, !dbg !9725

for.inc228:                                       ; preds = %for.body207
  %171 = load i32, i32* %i, align 4, !dbg !9726
  %inc229 = add nsw i32 %171, 1, !dbg !9726
  store i32 %inc229, i32* %i, align 4, !dbg !9726
  br label %for.cond200, !dbg !9728, !llvm.loop !9729

for.end230:                                       ; preds = %for.cond200
  br label %for.inc231, !dbg !9731

for.inc231:                                       ; preds = %for.end230
  %172 = load i32, i32* %bnd, align 4, !dbg !9732
  %inc232 = add nsw i32 %172, 1, !dbg !9732
  store i32 %inc232, i32* %bnd, align 4, !dbg !9732
  br label %for.cond175, !dbg !9734, !llvm.loop !9735

for.end233:                                       ; preds = %for.cond175
  br label %for.inc234, !dbg !9737

for.inc234:                                       ; preds = %for.end233, %if.then51
  %173 = load i32, i32* %ch, align 4, !dbg !9738
  %inc235 = add nsw i32 %173, 1, !dbg !9738
  store i32 %inc235, i32* %ch, align 4, !dbg !9738
  br label %for.cond45, !dbg !9740, !llvm.loop !9741

for.end236:                                       ; preds = %for.cond45
  ret void, !dbg !9743
}

; Function Attrs: nounwind uwtable
define internal void @ac3_upmix_delay(%struct.AC3DecodeContext* %s) #1 !dbg !9744 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %channel_data_size = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9745, metadata !1849), !dbg !9746
  call void @llvm.dbg.declare(metadata i32* %channel_data_size, metadata !9747, metadata !1849), !dbg !9748
  store i32 1024, i32* %channel_data_size, align 4, !dbg !9748
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9749
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 12, !dbg !9750
  %1 = load i32, i32* %channel_mode, align 4, !dbg !9750
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 6, label %sw.bb4
    i32 4, label %sw.bb9
    i32 7, label %sw.bb14
    i32 5, label %sw.bb19
    i32 3, label %sw.bb24
  ], !dbg !9751

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9752
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 120, !dbg !9754
  %arrayidx = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay, i64 0, i64 1, !dbg !9752
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx, i32 0, i32 0, !dbg !9755
  %3 = bitcast i32* %arraydecay to i8*, !dbg !9755
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9756
  %delay1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 120, !dbg !9757
  %arrayidx2 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay1, i64 0, i64 0, !dbg !9756
  %arraydecay3 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx2, i32 0, i32 0, !dbg !9755
  %5 = bitcast i32* %arraydecay3 to i8*, !dbg !9755
  %6 = load i32, i32* %channel_data_size, align 4, !dbg !9758
  %conv = sext i32 %6 to i64, !dbg !9758
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %5, i64 %conv, i32 32, i1 false), !dbg !9755
  br label %sw.epilog, !dbg !9759

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9760
  %delay5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 120, !dbg !9761
  %arrayidx6 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay5, i64 0, i64 3, !dbg !9760
  %arraydecay7 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx6, i32 0, i32 0, !dbg !9762
  %8 = bitcast i32* %arraydecay7 to i8*, !dbg !9762
  %9 = load i32, i32* %channel_data_size, align 4, !dbg !9763
  %conv8 = sext i32 %9 to i64, !dbg !9763
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %conv8, i32 32, i1 false), !dbg !9762
  br label %sw.bb9, !dbg !9762

sw.bb9:                                           ; preds = %entry, %sw.bb4
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9764
  %delay10 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 120, !dbg !9765
  %arrayidx11 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay10, i64 0, i64 2, !dbg !9764
  %arraydecay12 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx11, i32 0, i32 0, !dbg !9766
  %11 = bitcast i32* %arraydecay12 to i8*, !dbg !9766
  %12 = load i32, i32* %channel_data_size, align 4, !dbg !9767
  %conv13 = sext i32 %12 to i64, !dbg !9767
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %conv13, i32 32, i1 false), !dbg !9766
  br label %sw.epilog, !dbg !9768

sw.bb14:                                          ; preds = %entry
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9769
  %delay15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 120, !dbg !9770
  %arrayidx16 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay15, i64 0, i64 4, !dbg !9769
  %arraydecay17 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx16, i32 0, i32 0, !dbg !9771
  %14 = bitcast i32* %arraydecay17 to i8*, !dbg !9771
  %15 = load i32, i32* %channel_data_size, align 4, !dbg !9772
  %conv18 = sext i32 %15 to i64, !dbg !9772
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %conv18, i32 32, i1 false), !dbg !9771
  br label %sw.bb19, !dbg !9771

sw.bb19:                                          ; preds = %entry, %sw.bb14
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9773
  %delay20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 120, !dbg !9774
  %arrayidx21 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay20, i64 0, i64 3, !dbg !9773
  %arraydecay22 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx21, i32 0, i32 0, !dbg !9775
  %17 = bitcast i32* %arraydecay22 to i8*, !dbg !9775
  %18 = load i32, i32* %channel_data_size, align 4, !dbg !9776
  %conv23 = sext i32 %18 to i64, !dbg !9776
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 %conv23, i32 32, i1 false), !dbg !9775
  br label %sw.bb24, !dbg !9775

sw.bb24:                                          ; preds = %entry, %sw.bb19
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9777
  %delay25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 120, !dbg !9778
  %arrayidx26 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay25, i64 0, i64 2, !dbg !9777
  %arraydecay27 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx26, i32 0, i32 0, !dbg !9779
  %20 = bitcast i32* %arraydecay27 to i8*, !dbg !9779
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9780
  %delay28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 120, !dbg !9781
  %arrayidx29 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay28, i64 0, i64 1, !dbg !9780
  %arraydecay30 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx29, i32 0, i32 0, !dbg !9779
  %22 = bitcast i32* %arraydecay30 to i8*, !dbg !9779
  %23 = load i32, i32* %channel_data_size, align 4, !dbg !9782
  %conv31 = sext i32 %23 to i64, !dbg !9782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %conv31, i32 32, i1 false), !dbg !9779
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9783
  %delay32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 120, !dbg !9784
  %arrayidx33 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay32, i64 0, i64 1, !dbg !9783
  %arraydecay34 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx33, i32 0, i32 0, !dbg !9785
  %25 = bitcast i32* %arraydecay34 to i8*, !dbg !9785
  %26 = load i32, i32* %channel_data_size, align 4, !dbg !9786
  %conv35 = sext i32 %26 to i64, !dbg !9786
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 %conv35, i32 32, i1 false), !dbg !9785
  br label %sw.epilog, !dbg !9787

sw.epilog:                                        ; preds = %entry, %sw.bb24, %sw.bb9, %sw.bb
  ret void, !dbg !9788
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @do_imdct(%struct.AC3DecodeContext* %s, i32 %channels, i32 %offset) #4 !dbg !9789 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %channels.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32*, align 8
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9792, metadata !1849), !dbg !9793
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !9794, metadata !1849), !dbg !9795
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9796, metadata !1849), !dbg !9797
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9798, metadata !1849), !dbg !9799
  store i32 1, i32* %ch, align 4, !dbg !9800
  br label %for.cond, !dbg !9802

for.cond:                                         ; preds = %for.inc79, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !9803
  %1 = load i32, i32* %channels.addr, align 4, !dbg !9806
  %cmp = icmp sle i32 %0, %1, !dbg !9807
  br i1 %cmp, label %for.body, label %for.end81, !dbg !9808

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch, align 4, !dbg !9809
  %idxprom = sext i32 %2 to i64, !dbg !9812
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9812
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 106, !dbg !9813
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i64 0, i64 %idxprom, !dbg !9812
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9812
  %tobool = icmp ne i32 %4, 0, !dbg !9812
  br i1 %tobool, label %if.then, label %if.else, !dbg !9814

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9815, metadata !1849), !dbg !9817
  call void @llvm.dbg.declare(metadata i32** %x, metadata !9818, metadata !1849), !dbg !9819
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9820
  %tmp_output = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 122, !dbg !9821
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output, i32 0, i32 0, !dbg !9820
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 128, !dbg !9822
  store i32* %add.ptr, i32** %x, align 8, !dbg !9819
  store i32 0, i32* %i, align 4, !dbg !9823
  br label %for.cond1, !dbg !9825

for.cond1:                                        ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !9826
  %cmp2 = icmp slt i32 %6, 128, !dbg !9829
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !9830

for.body3:                                        ; preds = %for.cond1
  %7 = load i32, i32* %i, align 4, !dbg !9831
  %mul = mul nsw i32 2, %7, !dbg !9832
  %idxprom4 = sext i32 %mul to i64, !dbg !9833
  %8 = load i32, i32* %ch, align 4, !dbg !9834
  %idxprom5 = sext i32 %8 to i64, !dbg !9833
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9833
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 119, !dbg !9835
  %arrayidx6 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs, i64 0, i64 %idxprom5, !dbg !9833
  %arrayidx7 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !9833
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !9833
  %11 = load i32, i32* %i, align 4, !dbg !9836
  %idxprom8 = sext i32 %11 to i64, !dbg !9837
  %12 = load i32*, i32** %x, align 8, !dbg !9837
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !9837
  store i32 %10, i32* %arrayidx9, align 4, !dbg !9838
  br label %for.inc, !dbg !9837

for.inc:                                          ; preds = %for.body3
  %13 = load i32, i32* %i, align 4, !dbg !9839
  %inc = add nsw i32 %13, 1, !dbg !9839
  store i32 %inc, i32* %i, align 4, !dbg !9839
  br label %for.cond1, !dbg !9841, !llvm.loop !9842

for.end:                                          ; preds = %for.cond1
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9844
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 108, !dbg !9845
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_256, i32 0, i32 11, !dbg !9846
  %15 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !9846
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9847
  %imdct_25610 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 108, !dbg !9848
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9849
  %tmp_output11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 122, !dbg !9850
  %arraydecay12 = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output11, i32 0, i32 0, !dbg !9849
  %18 = load i32*, i32** %x, align 8, !dbg !9851
  call void %15(%struct.FFTContext* %imdct_25610, i32* %arraydecay12, i32* %18), !dbg !9844
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9852
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 110, !dbg !9853
  %20 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 8, !dbg !9853
  %vector_fmul_window_scaled = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %20, i32 0, i32 0, !dbg !9854
  %21 = load void (i16*, i32*, i32*, i32*, i32, i8)*, void (i16*, i32*, i32*, i32*, i32, i8)** %vector_fmul_window_scaled, align 8, !dbg !9854
  %22 = load i32, i32* %ch, align 4, !dbg !9855
  %sub = sub nsw i32 %22, 1, !dbg !9856
  %idxprom13 = sext i32 %sub to i64, !dbg !9857
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9857
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 113, !dbg !9858
  %arrayidx14 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr, i64 0, i64 %idxprom13, !dbg !9857
  %24 = load i16*, i16** %arrayidx14, align 8, !dbg !9857
  %25 = load i32, i32* %ch, align 4, !dbg !9859
  %sub15 = sub nsw i32 %25, 1, !dbg !9860
  %26 = load i32, i32* %offset.addr, align 4, !dbg !9861
  %add = add nsw i32 %sub15, %26, !dbg !9862
  %idxprom16 = sext i32 %add to i64, !dbg !9863
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9863
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 120, !dbg !9864
  %arrayidx17 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay, i64 0, i64 %idxprom16, !dbg !9863
  %arraydecay18 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx17, i32 0, i32 0, !dbg !9863
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9865
  %tmp_output19 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 122, !dbg !9866
  %arraydecay20 = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output19, i32 0, i32 0, !dbg !9865
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9867
  %window = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 121, !dbg !9868
  %arraydecay21 = getelementptr inbounds [256 x i32], [256 x i32]* %window, i32 0, i32 0, !dbg !9867
  call void %21(i16* %24, i32* %arraydecay18, i32* %arraydecay20, i32* %arraydecay21, i32 128, i8 zeroext 8), !dbg !9852
  store i32 0, i32* %i, align 4, !dbg !9869
  br label %for.cond22, !dbg !9871

for.cond22:                                       ; preds = %for.inc34, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !9872
  %cmp23 = icmp slt i32 %30, 128, !dbg !9875
  br i1 %cmp23, label %for.body24, label %for.end36, !dbg !9876

for.body24:                                       ; preds = %for.cond22
  %31 = load i32, i32* %i, align 4, !dbg !9877
  %mul25 = mul nsw i32 2, %31, !dbg !9878
  %add26 = add nsw i32 %mul25, 1, !dbg !9879
  %idxprom27 = sext i32 %add26 to i64, !dbg !9880
  %32 = load i32, i32* %ch, align 4, !dbg !9881
  %idxprom28 = sext i32 %32 to i64, !dbg !9880
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9880
  %transform_coeffs29 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 119, !dbg !9882
  %arrayidx30 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs29, i64 0, i64 %idxprom28, !dbg !9880
  %arrayidx31 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx30, i64 0, i64 %idxprom27, !dbg !9880
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !9880
  %35 = load i32, i32* %i, align 4, !dbg !9883
  %idxprom32 = sext i32 %35 to i64, !dbg !9884
  %36 = load i32*, i32** %x, align 8, !dbg !9884
  %arrayidx33 = getelementptr inbounds i32, i32* %36, i64 %idxprom32, !dbg !9884
  store i32 %34, i32* %arrayidx33, align 4, !dbg !9885
  br label %for.inc34, !dbg !9884

for.inc34:                                        ; preds = %for.body24
  %37 = load i32, i32* %i, align 4, !dbg !9886
  %inc35 = add nsw i32 %37, 1, !dbg !9886
  store i32 %inc35, i32* %i, align 4, !dbg !9886
  br label %for.cond22, !dbg !9888, !llvm.loop !9889

for.end36:                                        ; preds = %for.cond22
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9891
  %imdct_25637 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 108, !dbg !9892
  %imdct_half38 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_25637, i32 0, i32 11, !dbg !9893
  %39 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half38, align 8, !dbg !9893
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9894
  %imdct_25639 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 108, !dbg !9895
  %41 = load i32, i32* %ch, align 4, !dbg !9896
  %sub40 = sub nsw i32 %41, 1, !dbg !9897
  %42 = load i32, i32* %offset.addr, align 4, !dbg !9898
  %add41 = add nsw i32 %sub40, %42, !dbg !9899
  %idxprom42 = sext i32 %add41 to i64, !dbg !9900
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9900
  %delay43 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 120, !dbg !9901
  %arrayidx44 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay43, i64 0, i64 %idxprom42, !dbg !9900
  %arraydecay45 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx44, i32 0, i32 0, !dbg !9900
  %44 = load i32*, i32** %x, align 8, !dbg !9902
  call void %39(%struct.FFTContext* %imdct_25639, i32* %arraydecay45, i32* %44), !dbg !9891
  br label %if.end, !dbg !9903

if.else:                                          ; preds = %for.body
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9904
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 107, !dbg !9906
  %imdct_half46 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_512, i32 0, i32 11, !dbg !9907
  %46 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half46, align 8, !dbg !9907
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9908
  %imdct_51247 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 107, !dbg !9909
  %48 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9910
  %tmp_output48 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %48, i32 0, i32 122, !dbg !9911
  %arraydecay49 = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output48, i32 0, i32 0, !dbg !9910
  %49 = load i32, i32* %ch, align 4, !dbg !9912
  %idxprom50 = sext i32 %49 to i64, !dbg !9913
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9913
  %transform_coeffs51 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 119, !dbg !9914
  %arrayidx52 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %transform_coeffs51, i64 0, i64 %idxprom50, !dbg !9913
  %arraydecay53 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx52, i32 0, i32 0, !dbg !9913
  call void %46(%struct.FFTContext* %imdct_51247, i32* %arraydecay49, i32* %arraydecay53), !dbg !9904
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9915
  %fdsp54 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 110, !dbg !9916
  %52 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp54, align 8, !dbg !9916
  %vector_fmul_window_scaled55 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %52, i32 0, i32 0, !dbg !9917
  %53 = load void (i16*, i32*, i32*, i32*, i32, i8)*, void (i16*, i32*, i32*, i32*, i32, i8)** %vector_fmul_window_scaled55, align 8, !dbg !9917
  %54 = load i32, i32* %ch, align 4, !dbg !9918
  %sub56 = sub nsw i32 %54, 1, !dbg !9919
  %idxprom57 = sext i32 %sub56 to i64, !dbg !9920
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9920
  %outptr58 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 113, !dbg !9921
  %arrayidx59 = getelementptr inbounds [7 x i16*], [7 x i16*]* %outptr58, i64 0, i64 %idxprom57, !dbg !9920
  %56 = load i16*, i16** %arrayidx59, align 8, !dbg !9920
  %57 = load i32, i32* %ch, align 4, !dbg !9922
  %sub60 = sub nsw i32 %57, 1, !dbg !9923
  %58 = load i32, i32* %offset.addr, align 4, !dbg !9924
  %add61 = add nsw i32 %sub60, %58, !dbg !9925
  %idxprom62 = sext i32 %add61 to i64, !dbg !9926
  %59 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9926
  %delay63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %59, i32 0, i32 120, !dbg !9927
  %arrayidx64 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay63, i64 0, i64 %idxprom62, !dbg !9926
  %arraydecay65 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx64, i32 0, i32 0, !dbg !9926
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9928
  %tmp_output66 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 122, !dbg !9929
  %arraydecay67 = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output66, i32 0, i32 0, !dbg !9928
  %61 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9930
  %window68 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %61, i32 0, i32 121, !dbg !9931
  %arraydecay69 = getelementptr inbounds [256 x i32], [256 x i32]* %window68, i32 0, i32 0, !dbg !9930
  call void %53(i16* %56, i32* %arraydecay65, i32* %arraydecay67, i32* %arraydecay69, i32 128, i8 zeroext 8), !dbg !9915
  %62 = load i32, i32* %ch, align 4, !dbg !9932
  %sub70 = sub nsw i32 %62, 1, !dbg !9933
  %63 = load i32, i32* %offset.addr, align 4, !dbg !9934
  %add71 = add nsw i32 %sub70, %63, !dbg !9935
  %idxprom72 = sext i32 %add71 to i64, !dbg !9936
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9936
  %delay73 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 120, !dbg !9937
  %arrayidx74 = getelementptr inbounds [16 x [256 x i32]], [16 x [256 x i32]]* %delay73, i64 0, i64 %idxprom72, !dbg !9936
  %arraydecay75 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx74, i32 0, i32 0, !dbg !9938
  %65 = bitcast i32* %arraydecay75 to i8*, !dbg !9938
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9939
  %tmp_output76 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 122, !dbg !9940
  %arraydecay77 = getelementptr inbounds [256 x i32], [256 x i32]* %tmp_output76, i32 0, i32 0, !dbg !9939
  %add.ptr78 = getelementptr inbounds i32, i32* %arraydecay77, i64 128, !dbg !9941
  %67 = bitcast i32* %add.ptr78 to i8*, !dbg !9938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %67, i64 512, i32 4, i1 false), !dbg !9938
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end36
  br label %for.inc79, !dbg !9942

for.inc79:                                        ; preds = %if.end
  %68 = load i32, i32* %ch, align 4, !dbg !9943
  %inc80 = add nsw i32 %68, 1, !dbg !9943
  store i32 %inc80, i32* %ch, align 4, !dbg !9943
  br label %for.cond, !dbg !9945, !llvm.loop !9946

for.end81:                                        ; preds = %for.cond
  ret void, !dbg !9948
}

; Function Attrs: nounwind uwtable
define internal void @ac3_downmix_c_fixed16(i16** %samples, i16** %matrix, i32 %out_ch, i32 %in_ch, i32 %len) #1 !dbg !9949 {
entry:
  %samples.addr = alloca i16**, align 8
  %matrix.addr = alloca i16**, align 8
  %out_ch.addr = alloca i32, align 4
  %in_ch.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %v0 = alloca i32, align 4
  %v1 = alloca i32, align 4
  store i16** %samples, i16*** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %samples.addr, metadata !9952, metadata !1849), !dbg !9953
  store i16** %matrix, i16*** %matrix.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %matrix.addr, metadata !9954, metadata !1849), !dbg !9955
  store i32 %out_ch, i32* %out_ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %out_ch.addr, metadata !9956, metadata !1849), !dbg !9957
  store i32 %in_ch, i32* %in_ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_ch.addr, metadata !9958, metadata !1849), !dbg !9959
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9960, metadata !1849), !dbg !9961
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9962, metadata !1849), !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9964, metadata !1849), !dbg !9965
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !9966, metadata !1849), !dbg !9967
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !9968, metadata !1849), !dbg !9969
  %0 = load i32, i32* %out_ch.addr, align 4, !dbg !9970
  %cmp = icmp eq i32 %0, 2, !dbg !9972
  br i1 %cmp, label %if.then, label %if.else, !dbg !9973

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9974
  br label %for.cond, !dbg !9977

for.cond:                                         ; preds = %for.inc33, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !9978
  %2 = load i32, i32* %len.addr, align 4, !dbg !9981
  %cmp1 = icmp slt i32 %1, %2, !dbg !9982
  br i1 %cmp1, label %for.body, label %for.end35, !dbg !9983

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %v1, align 4, !dbg !9984
  store i32 0, i32* %v0, align 4, !dbg !9986
  store i32 0, i32* %j, align 4, !dbg !9987
  br label %for.cond2, !dbg !9989

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !9990
  %4 = load i32, i32* %in_ch.addr, align 4, !dbg !9993
  %cmp3 = icmp slt i32 %3, %4, !dbg !9994
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !9995

for.body4:                                        ; preds = %for.cond2
  %5 = load i32, i32* %i, align 4, !dbg !9996
  %idxprom = sext i32 %5 to i64, !dbg !9998
  %6 = load i32, i32* %j, align 4, !dbg !9999
  %idxprom5 = sext i32 %6 to i64, !dbg !9998
  %7 = load i16**, i16*** %samples.addr, align 8, !dbg !9998
  %arrayidx = getelementptr inbounds i16*, i16** %7, i64 %idxprom5, !dbg !9998
  %8 = load i16*, i16** %arrayidx, align 8, !dbg !9998
  %arrayidx6 = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !9998
  %9 = load i16, i16* %arrayidx6, align 2, !dbg !9998
  %conv = sext i16 %9 to i32, !dbg !9998
  %10 = load i32, i32* %j, align 4, !dbg !10000
  %idxprom7 = sext i32 %10 to i64, !dbg !10001
  %11 = load i16**, i16*** %matrix.addr, align 8, !dbg !10001
  %arrayidx8 = getelementptr inbounds i16*, i16** %11, i64 0, !dbg !10001
  %12 = load i16*, i16** %arrayidx8, align 8, !dbg !10001
  %arrayidx9 = getelementptr inbounds i16, i16* %12, i64 %idxprom7, !dbg !10001
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !10001
  %conv10 = sext i16 %13 to i32, !dbg !10001
  %mul = mul nsw i32 %conv, %conv10, !dbg !10002
  %14 = load i32, i32* %v0, align 4, !dbg !10003
  %add = add nsw i32 %14, %mul, !dbg !10003
  store i32 %add, i32* %v0, align 4, !dbg !10003
  %15 = load i32, i32* %i, align 4, !dbg !10004
  %idxprom11 = sext i32 %15 to i64, !dbg !10005
  %16 = load i32, i32* %j, align 4, !dbg !10006
  %idxprom12 = sext i32 %16 to i64, !dbg !10005
  %17 = load i16**, i16*** %samples.addr, align 8, !dbg !10005
  %arrayidx13 = getelementptr inbounds i16*, i16** %17, i64 %idxprom12, !dbg !10005
  %18 = load i16*, i16** %arrayidx13, align 8, !dbg !10005
  %arrayidx14 = getelementptr inbounds i16, i16* %18, i64 %idxprom11, !dbg !10005
  %19 = load i16, i16* %arrayidx14, align 2, !dbg !10005
  %conv15 = sext i16 %19 to i32, !dbg !10005
  %20 = load i32, i32* %j, align 4, !dbg !10007
  %idxprom16 = sext i32 %20 to i64, !dbg !10008
  %21 = load i16**, i16*** %matrix.addr, align 8, !dbg !10008
  %arrayidx17 = getelementptr inbounds i16*, i16** %21, i64 1, !dbg !10008
  %22 = load i16*, i16** %arrayidx17, align 8, !dbg !10008
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom16, !dbg !10008
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !10008
  %conv19 = sext i16 %23 to i32, !dbg !10008
  %mul20 = mul nsw i32 %conv15, %conv19, !dbg !10009
  %24 = load i32, i32* %v1, align 4, !dbg !10010
  %add21 = add nsw i32 %24, %mul20, !dbg !10010
  store i32 %add21, i32* %v1, align 4, !dbg !10010
  br label %for.inc, !dbg !10011

for.inc:                                          ; preds = %for.body4
  %25 = load i32, i32* %j, align 4, !dbg !10012
  %inc = add nsw i32 %25, 1, !dbg !10012
  store i32 %inc, i32* %j, align 4, !dbg !10012
  br label %for.cond2, !dbg !10014, !llvm.loop !10015

for.end:                                          ; preds = %for.cond2
  %26 = load i32, i32* %v0, align 4, !dbg !10017
  %add22 = add nsw i32 %26, 2048, !dbg !10018
  %shr = ashr i32 %add22, 12, !dbg !10019
  %conv23 = trunc i32 %shr to i16, !dbg !10020
  %27 = load i32, i32* %i, align 4, !dbg !10021
  %idxprom24 = sext i32 %27 to i64, !dbg !10022
  %28 = load i16**, i16*** %samples.addr, align 8, !dbg !10022
  %arrayidx25 = getelementptr inbounds i16*, i16** %28, i64 0, !dbg !10022
  %29 = load i16*, i16** %arrayidx25, align 8, !dbg !10022
  %arrayidx26 = getelementptr inbounds i16, i16* %29, i64 %idxprom24, !dbg !10022
  store i16 %conv23, i16* %arrayidx26, align 2, !dbg !10023
  %30 = load i32, i32* %v1, align 4, !dbg !10024
  %add27 = add nsw i32 %30, 2048, !dbg !10025
  %shr28 = ashr i32 %add27, 12, !dbg !10026
  %conv29 = trunc i32 %shr28 to i16, !dbg !10027
  %31 = load i32, i32* %i, align 4, !dbg !10028
  %idxprom30 = sext i32 %31 to i64, !dbg !10029
  %32 = load i16**, i16*** %samples.addr, align 8, !dbg !10029
  %arrayidx31 = getelementptr inbounds i16*, i16** %32, i64 1, !dbg !10029
  %33 = load i16*, i16** %arrayidx31, align 8, !dbg !10029
  %arrayidx32 = getelementptr inbounds i16, i16* %33, i64 %idxprom30, !dbg !10029
  store i16 %conv29, i16* %arrayidx32, align 2, !dbg !10030
  br label %for.inc33, !dbg !10031

for.inc33:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !10032
  %inc34 = add nsw i32 %34, 1, !dbg !10032
  store i32 %inc34, i32* %i, align 4, !dbg !10032
  br label %for.cond, !dbg !10034, !llvm.loop !10035

for.end35:                                        ; preds = %for.cond
  br label %if.end70, !dbg !10037

if.else:                                          ; preds = %entry
  %35 = load i32, i32* %out_ch.addr, align 4, !dbg !10038
  %cmp36 = icmp eq i32 %35, 1, !dbg !10041
  br i1 %cmp36, label %if.then38, label %if.end, !dbg !10038

if.then38:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !10042
  br label %for.cond39, !dbg !10045

for.cond39:                                       ; preds = %for.inc67, %if.then38
  %36 = load i32, i32* %i, align 4, !dbg !10046
  %37 = load i32, i32* %len.addr, align 4, !dbg !10049
  %cmp40 = icmp slt i32 %36, %37, !dbg !10050
  br i1 %cmp40, label %for.body42, label %for.end69, !dbg !10051

for.body42:                                       ; preds = %for.cond39
  store i32 0, i32* %v0, align 4, !dbg !10052
  store i32 0, i32* %j, align 4, !dbg !10054
  br label %for.cond43, !dbg !10056

for.cond43:                                       ; preds = %for.inc58, %for.body42
  %38 = load i32, i32* %j, align 4, !dbg !10057
  %39 = load i32, i32* %in_ch.addr, align 4, !dbg !10060
  %cmp44 = icmp slt i32 %38, %39, !dbg !10061
  br i1 %cmp44, label %for.body46, label %for.end60, !dbg !10062

for.body46:                                       ; preds = %for.cond43
  %40 = load i32, i32* %i, align 4, !dbg !10063
  %idxprom47 = sext i32 %40 to i64, !dbg !10064
  %41 = load i32, i32* %j, align 4, !dbg !10065
  %idxprom48 = sext i32 %41 to i64, !dbg !10064
  %42 = load i16**, i16*** %samples.addr, align 8, !dbg !10064
  %arrayidx49 = getelementptr inbounds i16*, i16** %42, i64 %idxprom48, !dbg !10064
  %43 = load i16*, i16** %arrayidx49, align 8, !dbg !10064
  %arrayidx50 = getelementptr inbounds i16, i16* %43, i64 %idxprom47, !dbg !10064
  %44 = load i16, i16* %arrayidx50, align 2, !dbg !10064
  %conv51 = sext i16 %44 to i32, !dbg !10064
  %45 = load i32, i32* %j, align 4, !dbg !10066
  %idxprom52 = sext i32 %45 to i64, !dbg !10067
  %46 = load i16**, i16*** %matrix.addr, align 8, !dbg !10067
  %arrayidx53 = getelementptr inbounds i16*, i16** %46, i64 0, !dbg !10067
  %47 = load i16*, i16** %arrayidx53, align 8, !dbg !10067
  %arrayidx54 = getelementptr inbounds i16, i16* %47, i64 %idxprom52, !dbg !10067
  %48 = load i16, i16* %arrayidx54, align 2, !dbg !10067
  %conv55 = sext i16 %48 to i32, !dbg !10067
  %mul56 = mul nsw i32 %conv51, %conv55, !dbg !10068
  %49 = load i32, i32* %v0, align 4, !dbg !10069
  %add57 = add nsw i32 %49, %mul56, !dbg !10069
  store i32 %add57, i32* %v0, align 4, !dbg !10069
  br label %for.inc58, !dbg !10070

for.inc58:                                        ; preds = %for.body46
  %50 = load i32, i32* %j, align 4, !dbg !10071
  %inc59 = add nsw i32 %50, 1, !dbg !10071
  store i32 %inc59, i32* %j, align 4, !dbg !10071
  br label %for.cond43, !dbg !10073, !llvm.loop !10074

for.end60:                                        ; preds = %for.cond43
  %51 = load i32, i32* %v0, align 4, !dbg !10076
  %add61 = add nsw i32 %51, 2048, !dbg !10077
  %shr62 = ashr i32 %add61, 12, !dbg !10078
  %conv63 = trunc i32 %shr62 to i16, !dbg !10079
  %52 = load i32, i32* %i, align 4, !dbg !10080
  %idxprom64 = sext i32 %52 to i64, !dbg !10081
  %53 = load i16**, i16*** %samples.addr, align 8, !dbg !10081
  %arrayidx65 = getelementptr inbounds i16*, i16** %53, i64 0, !dbg !10081
  %54 = load i16*, i16** %arrayidx65, align 8, !dbg !10081
  %arrayidx66 = getelementptr inbounds i16, i16* %54, i64 %idxprom64, !dbg !10081
  store i16 %conv63, i16* %arrayidx66, align 2, !dbg !10082
  br label %for.inc67, !dbg !10083

for.inc67:                                        ; preds = %for.end60
  %55 = load i32, i32* %i, align 4, !dbg !10084
  %inc68 = add nsw i32 %55, 1, !dbg !10084
  store i32 %inc68, i32* %i, align 4, !dbg !10084
  br label %for.cond39, !dbg !10086, !llvm.loop !10087

for.end69:                                        ; preds = %for.cond39
  br label %if.end, !dbg !10089

if.end:                                           ; preds = %for.end69, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end, %for.end35
  ret void, !dbg !10090
}

declare void @ff_ac3dsp_downmix_fixed(%struct.AC3DSPContext*, i32**, i16**, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @decode_band_structure(%struct.GetBitContext* %gbc, i32 %blk, i32 %eac3, i32 %ecpl, i32 %start_subband, i32 %end_subband, i8* %default_band_struct, i32* %num_bands, i8* %band_sizes, i8* %band_struct, i32 %band_struct_size) #1 !dbg !10091 {
entry:
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %blk.addr = alloca i32, align 4
  %eac3.addr = alloca i32, align 4
  %ecpl.addr = alloca i32, align 4
  %start_subband.addr = alloca i32, align 4
  %end_subband.addr = alloca i32, align 4
  %default_band_struct.addr = alloca i8*, align 8
  %num_bands.addr = alloca i32*, align 8
  %band_sizes.addr = alloca i8*, align 8
  %band_struct.addr = alloca i8*, align 8
  %band_struct_size.addr = alloca i32, align 4
  %subbnd = alloca i32, align 4
  %bnd = alloca i32, align 4
  %n_subbands = alloca i32, align 4
  %n_bands = alloca i32, align 4
  %bnd_sz = alloca [22 x i8], align 16
  %subbnd_size = alloca i32, align 4
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !10094, metadata !1849), !dbg !10095
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !10096, metadata !1849), !dbg !10097
  store i32 %eac3, i32* %eac3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eac3.addr, metadata !10098, metadata !1849), !dbg !10099
  store i32 %ecpl, i32* %ecpl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ecpl.addr, metadata !10100, metadata !1849), !dbg !10101
  store i32 %start_subband, i32* %start_subband.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_subband.addr, metadata !10102, metadata !1849), !dbg !10103
  store i32 %end_subband, i32* %end_subband.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_subband.addr, metadata !10104, metadata !1849), !dbg !10105
  store i8* %default_band_struct, i8** %default_band_struct.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %default_band_struct.addr, metadata !10106, metadata !1849), !dbg !10107
  store i32* %num_bands, i32** %num_bands.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_bands.addr, metadata !10108, metadata !1849), !dbg !10109
  store i8* %band_sizes, i8** %band_sizes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %band_sizes.addr, metadata !10110, metadata !1849), !dbg !10111
  store i8* %band_struct, i8** %band_struct.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %band_struct.addr, metadata !10112, metadata !1849), !dbg !10113
  store i32 %band_struct_size, i32* %band_struct_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band_struct_size.addr, metadata !10114, metadata !1849), !dbg !10115
  call void @llvm.dbg.declare(metadata i32* %subbnd, metadata !10116, metadata !1849), !dbg !10117
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !10118, metadata !1849), !dbg !10119
  call void @llvm.dbg.declare(metadata i32* %n_subbands, metadata !10120, metadata !1849), !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %n_bands, metadata !10122, metadata !1849), !dbg !10123
  store i32 0, i32* %n_bands, align 4, !dbg !10123
  call void @llvm.dbg.declare(metadata [22 x i8]* %bnd_sz, metadata !10124, metadata !1849), !dbg !10128
  %0 = load i32, i32* %end_subband.addr, align 4, !dbg !10129
  %1 = load i32, i32* %start_subband.addr, align 4, !dbg !10130
  %sub = sub nsw i32 %0, %1, !dbg !10131
  store i32 %sub, i32* %n_subbands, align 4, !dbg !10132
  %2 = load i32, i32* %blk.addr, align 4, !dbg !10133
  %tobool = icmp ne i32 %2, 0, !dbg !10133
  br i1 %tobool, label %if.end, label %if.then, !dbg !10135

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %band_struct.addr, align 8, !dbg !10136
  %4 = load i8*, i8** %default_band_struct.addr, align 8, !dbg !10137
  %5 = load i32, i32* %band_struct_size.addr, align 4, !dbg !10138
  %conv = sext i32 %5 to i64, !dbg !10138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 %conv, i32 1, i1 false), !dbg !10139
  br label %if.end, !dbg !10139

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !10140, !llvm.loop !10141

do.body:                                          ; preds = %if.end
  %6 = load i32, i32* %band_struct_size.addr, align 4, !dbg !10142
  %7 = load i32, i32* %start_subband.addr, align 4, !dbg !10146
  %8 = load i32, i32* %n_subbands, align 4, !dbg !10147
  %add = add nsw i32 %7, %8, !dbg !10148
  %cmp = icmp sge i32 %6, %add, !dbg !10149
  br i1 %cmp, label %if.end3, label %if.then2, !dbg !10150

if.then2:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0), i32 781), !dbg !10151
  call void @abort() #11, !dbg !10154
  unreachable, !dbg !10156

if.end3:                                          ; preds = %do.body
  br label %do.end, !dbg !10157

do.end:                                           ; preds = %if.end3
  %9 = load i32, i32* %start_subband.addr, align 4, !dbg !10159
  %add4 = add nsw i32 %9, 1, !dbg !10160
  %10 = load i8*, i8** %band_struct.addr, align 8, !dbg !10161
  %idx.ext = sext i32 %add4 to i64, !dbg !10161
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !10161
  store i8* %add.ptr, i8** %band_struct.addr, align 8, !dbg !10161
  %11 = load i32, i32* %eac3.addr, align 4, !dbg !10162
  %tobool5 = icmp ne i32 %11, 0, !dbg !10162
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !10164

lor.lhs.false:                                    ; preds = %do.end
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !10165
  %call = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !10167
  %tobool6 = icmp ne i32 %call, 0, !dbg !10167
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !10168

if.then7:                                         ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %subbnd, align 4, !dbg !10169
  br label %for.cond, !dbg !10172

for.cond:                                         ; preds = %for.inc, %if.then7
  %13 = load i32, i32* %subbnd, align 4, !dbg !10173
  %14 = load i32, i32* %n_subbands, align 4, !dbg !10176
  %sub8 = sub nsw i32 %14, 1, !dbg !10177
  %cmp9 = icmp slt i32 %13, %sub8, !dbg !10178
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10179

for.body:                                         ; preds = %for.cond
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !10180
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %15), !dbg !10182
  %conv12 = trunc i32 %call11 to i8, !dbg !10182
  %16 = load i32, i32* %subbnd, align 4, !dbg !10183
  %idxprom = sext i32 %16 to i64, !dbg !10184
  %17 = load i8*, i8** %band_struct.addr, align 8, !dbg !10184
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !10184
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !10185
  br label %for.inc, !dbg !10186

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %subbnd, align 4, !dbg !10187
  %inc = add nsw i32 %18, 1, !dbg !10187
  store i32 %inc, i32* %subbnd, align 4, !dbg !10187
  br label %for.cond, !dbg !10189, !llvm.loop !10190

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !10192

if.end13:                                         ; preds = %for.end, %lor.lhs.false
  %19 = load i32*, i32** %num_bands.addr, align 8, !dbg !10193
  %tobool14 = icmp ne i32* %19, null, !dbg !10193
  br i1 %tobool14, label %if.then17, label %lor.lhs.false15, !dbg !10195

lor.lhs.false15:                                  ; preds = %if.end13
  %20 = load i8*, i8** %band_sizes.addr, align 8, !dbg !10196
  %tobool16 = icmp ne i8* %20, null, !dbg !10196
  br i1 %tobool16, label %if.then17, label %if.end47, !dbg !10198

if.then17:                                        ; preds = %lor.lhs.false15, %if.end13
  %21 = load i32, i32* %n_subbands, align 4, !dbg !10199
  store i32 %21, i32* %n_bands, align 4, !dbg !10201
  %22 = load i32, i32* %ecpl.addr, align 4, !dbg !10202
  %tobool18 = icmp ne i32 %22, 0, !dbg !10202
  %cond = select i1 %tobool18, i32 6, i32 12, !dbg !10202
  %conv19 = trunc i32 %cond to i8, !dbg !10202
  %arrayidx20 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 0, !dbg !10203
  store i8 %conv19, i8* %arrayidx20, align 16, !dbg !10204
  store i32 0, i32* %bnd, align 4, !dbg !10205
  store i32 1, i32* %subbnd, align 4, !dbg !10207
  br label %for.cond21, !dbg !10208

for.cond21:                                       ; preds = %for.inc44, %if.then17
  %23 = load i32, i32* %subbnd, align 4, !dbg !10209
  %24 = load i32, i32* %n_subbands, align 4, !dbg !10212
  %cmp22 = icmp slt i32 %23, %24, !dbg !10213
  br i1 %cmp22, label %for.body24, label %for.end46, !dbg !10214

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i32* %subbnd_size, metadata !10215, metadata !1849), !dbg !10217
  %25 = load i32, i32* %ecpl.addr, align 4, !dbg !10218
  %tobool25 = icmp ne i32 %25, 0, !dbg !10218
  br i1 %tobool25, label %land.rhs, label %land.end, !dbg !10219

land.rhs:                                         ; preds = %for.body24
  %26 = load i32, i32* %subbnd, align 4, !dbg !10220
  %cmp26 = icmp slt i32 %26, 4, !dbg !10222
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body24
  %27 = phi i1 [ false, %for.body24 ], [ %cmp26, %land.rhs ]
  %cond28 = select i1 %27, i32 6, i32 12, !dbg !10223
  store i32 %cond28, i32* %subbnd_size, align 4, !dbg !10225
  %28 = load i32, i32* %subbnd, align 4, !dbg !10226
  %sub29 = sub nsw i32 %28, 1, !dbg !10228
  %idxprom30 = sext i32 %sub29 to i64, !dbg !10229
  %29 = load i8*, i8** %band_struct.addr, align 8, !dbg !10229
  %arrayidx31 = getelementptr inbounds i8, i8* %29, i64 %idxprom30, !dbg !10229
  %30 = load i8, i8* %arrayidx31, align 1, !dbg !10229
  %tobool32 = icmp ne i8 %30, 0, !dbg !10229
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !10230

if.then33:                                        ; preds = %land.end
  %31 = load i32, i32* %n_bands, align 4, !dbg !10231
  %dec = add nsw i32 %31, -1, !dbg !10231
  store i32 %dec, i32* %n_bands, align 4, !dbg !10231
  %32 = load i32, i32* %subbnd_size, align 4, !dbg !10233
  %33 = load i32, i32* %bnd, align 4, !dbg !10234
  %idxprom34 = sext i32 %33 to i64, !dbg !10235
  %arrayidx35 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 %idxprom34, !dbg !10235
  %34 = load i8, i8* %arrayidx35, align 1, !dbg !10236
  %conv36 = zext i8 %34 to i32, !dbg !10236
  %add37 = add nsw i32 %conv36, %32, !dbg !10236
  %conv38 = trunc i32 %add37 to i8, !dbg !10236
  store i8 %conv38, i8* %arrayidx35, align 1, !dbg !10236
  br label %if.end43, !dbg !10237

if.else:                                          ; preds = %land.end
  %35 = load i32, i32* %subbnd_size, align 4, !dbg !10238
  %conv39 = trunc i32 %35 to i8, !dbg !10238
  %36 = load i32, i32* %bnd, align 4, !dbg !10240
  %inc40 = add nsw i32 %36, 1, !dbg !10240
  store i32 %inc40, i32* %bnd, align 4, !dbg !10240
  %idxprom41 = sext i32 %inc40 to i64, !dbg !10241
  %arrayidx42 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 %idxprom41, !dbg !10241
  store i8 %conv39, i8* %arrayidx42, align 1, !dbg !10242
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then33
  br label %for.inc44, !dbg !10243

for.inc44:                                        ; preds = %if.end43
  %37 = load i32, i32* %subbnd, align 4, !dbg !10244
  %inc45 = add nsw i32 %37, 1, !dbg !10244
  store i32 %inc45, i32* %subbnd, align 4, !dbg !10244
  br label %for.cond21, !dbg !10246, !llvm.loop !10247

for.end46:                                        ; preds = %for.cond21
  br label %if.end47, !dbg !10249

if.end47:                                         ; preds = %for.end46, %lor.lhs.false15
  %38 = load i32*, i32** %num_bands.addr, align 8, !dbg !10250
  %tobool48 = icmp ne i32* %38, null, !dbg !10250
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !10252

if.then49:                                        ; preds = %if.end47
  %39 = load i32, i32* %n_bands, align 4, !dbg !10253
  %40 = load i32*, i32** %num_bands.addr, align 8, !dbg !10254
  store i32 %39, i32* %40, align 4, !dbg !10255
  br label %if.end50, !dbg !10256

if.end50:                                         ; preds = %if.then49, %if.end47
  %41 = load i8*, i8** %band_sizes.addr, align 8, !dbg !10257
  %tobool51 = icmp ne i8* %41, null, !dbg !10257
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !10259

if.then52:                                        ; preds = %if.end50
  %42 = load i8*, i8** %band_sizes.addr, align 8, !dbg !10260
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i32 0, i32 0, !dbg !10261
  %43 = load i32, i32* %n_bands, align 4, !dbg !10262
  %conv53 = sext i32 %43 to i64, !dbg !10262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %arraydecay, i64 %conv53, i32 1, i1 false), !dbg !10261
  br label %if.end54, !dbg !10261

if.end54:                                         ; preds = %if.then52, %if.end50
  ret void, !dbg !10263
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @ff_sqrt(i32 %a) #9 !dbg !10264 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b = alloca i32, align 4
  %s = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !10268, metadata !1849), !dbg !10269
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10270, metadata !1849), !dbg !10271
  %0 = load i32, i32* %a.addr, align 4, !dbg !10272
  %cmp = icmp ult i32 %0, 255, !dbg !10274
  br i1 %cmp, label %if.then, label %if.else, !dbg !10275

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4, !dbg !10276
  %add = add i32 %1, 1, !dbg !10278
  %idxprom = zext i32 %add to i64, !dbg !10279
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom, !dbg !10279
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10279
  %conv = zext i8 %2 to i32, !dbg !10279
  %sub = sub nsw i32 %conv, 1, !dbg !10280
  %shr = ashr i32 %sub, 4, !dbg !10281
  store i32 %shr, i32* %retval, align 4, !dbg !10282
  br label %return, !dbg !10282

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %a.addr, align 4, !dbg !10283
  %cmp1 = icmp ult i32 %3, 4096, !dbg !10285
  br i1 %cmp1, label %if.then3, label %if.else9, !dbg !10286

if.then3:                                         ; preds = %if.else
  %4 = load i32, i32* %a.addr, align 4, !dbg !10287
  %shr4 = lshr i32 %4, 4, !dbg !10289
  %idxprom5 = zext i32 %shr4 to i64, !dbg !10290
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom5, !dbg !10290
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !10290
  %conv7 = zext i8 %5 to i32, !dbg !10290
  %shr8 = ashr i32 %conv7, 2, !dbg !10291
  store i32 %shr8, i32* %b, align 4, !dbg !10292
  br label %if.end45, !dbg !10293

if.else9:                                         ; preds = %if.else
  %6 = load i32, i32* %a.addr, align 4, !dbg !10294
  %cmp10 = icmp ult i32 %6, 16384, !dbg !10296
  br i1 %cmp10, label %if.then12, label %if.else18, !dbg !10297

if.then12:                                        ; preds = %if.else9
  %7 = load i32, i32* %a.addr, align 4, !dbg !10298
  %shr13 = lshr i32 %7, 6, !dbg !10300
  %idxprom14 = zext i32 %shr13 to i64, !dbg !10301
  %arrayidx15 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom14, !dbg !10301
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !10301
  %conv16 = zext i8 %8 to i32, !dbg !10301
  %shr17 = ashr i32 %conv16, 1, !dbg !10302
  store i32 %shr17, i32* %b, align 4, !dbg !10303
  br label %if.end44, !dbg !10304

if.else18:                                        ; preds = %if.else9
  %9 = load i32, i32* %a.addr, align 4, !dbg !10305
  %cmp19 = icmp ult i32 %9, 65536, !dbg !10307
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !10308

if.then21:                                        ; preds = %if.else18
  %10 = load i32, i32* %a.addr, align 4, !dbg !10309
  %shr22 = lshr i32 %10, 8, !dbg !10311
  %idxprom23 = zext i32 %shr22 to i64, !dbg !10312
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom23, !dbg !10312
  %11 = load i8, i8* %arrayidx24, align 1, !dbg !10312
  %conv25 = zext i8 %11 to i32, !dbg !10312
  store i32 %conv25, i32* %b, align 4, !dbg !10313
  br label %if.end, !dbg !10314

if.else26:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata i32* %s, metadata !10315, metadata !1849), !dbg !10317
  %12 = load i32, i32* %a.addr, align 4, !dbg !10318
  %shr27 = lshr i32 %12, 16, !dbg !10319
  %or = or i32 %shr27, 1, !dbg !10320
  %13 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !10321
  %sub28 = sub nsw i32 31, %13, !dbg !10322
  %shr29 = ashr i32 %sub28, 1, !dbg !10323
  store i32 %shr29, i32* %s, align 4, !dbg !10317
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10324, metadata !1849), !dbg !10325
  %14 = load i32, i32* %a.addr, align 4, !dbg !10326
  %15 = load i32, i32* %s, align 4, !dbg !10327
  %add30 = add nsw i32 %15, 2, !dbg !10328
  %shr31 = lshr i32 %14, %add30, !dbg !10329
  store i32 %shr31, i32* %c, align 4, !dbg !10325
  %16 = load i32, i32* %c, align 4, !dbg !10330
  %17 = load i32, i32* %s, align 4, !dbg !10331
  %add32 = add nsw i32 %17, 8, !dbg !10332
  %shr33 = lshr i32 %16, %add32, !dbg !10333
  %idxprom34 = zext i32 %shr33 to i64, !dbg !10334
  %arrayidx35 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom34, !dbg !10334
  %18 = load i8, i8* %arrayidx35, align 1, !dbg !10334
  %conv36 = zext i8 %18 to i32, !dbg !10334
  store i32 %conv36, i32* %b, align 4, !dbg !10335
  %19 = load i32, i32* %c, align 4, !dbg !10336
  %conv37 = zext i32 %19 to i64, !dbg !10337
  %20 = load i32, i32* %b, align 4, !dbg !10338
  %idxprom38 = zext i32 %20 to i64, !dbg !10339
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %idxprom38, !dbg !10339
  %21 = load i32, i32* %arrayidx39, align 4, !dbg !10339
  %conv40 = zext i32 %21 to i64, !dbg !10339
  %mul = mul i64 %conv37, %conv40, !dbg !10340
  %shr41 = lshr i64 %mul, 32, !dbg !10341
  %conv42 = trunc i64 %shr41 to i32, !dbg !10342
  %22 = load i32, i32* %b, align 4, !dbg !10343
  %23 = load i32, i32* %s, align 4, !dbg !10344
  %shl = shl i32 %22, %23, !dbg !10345
  %add43 = add i32 %conv42, %shl, !dbg !10346
  store i32 %add43, i32* %b, align 4, !dbg !10347
  br label %if.end

if.end:                                           ; preds = %if.else26, %if.then21
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then12
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then3
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  %24 = load i32, i32* %b, align 4, !dbg !10348
  %25 = load i32, i32* %a.addr, align 4, !dbg !10349
  %26 = load i32, i32* %b, align 4, !dbg !10350
  %27 = load i32, i32* %b, align 4, !dbg !10351
  %mul47 = mul i32 %26, %27, !dbg !10352
  %cmp48 = icmp ult i32 %25, %mul47, !dbg !10353
  %conv49 = zext i1 %cmp48 to i32, !dbg !10353
  %sub50 = sub i32 %24, %conv49, !dbg !10354
  store i32 %sub50, i32* %retval, align 4, !dbg !10355
  br label %return, !dbg !10355

return:                                           ; preds = %if.end46, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10356
  ret i32 %28, !dbg !10356
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %s, i32 %blk, i32 %ch, %struct.mant_groups* %m) #4 !dbg !10357 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %m.addr = alloca %struct.mant_groups*, align 8
  %bin = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10361, metadata !1849), !dbg !10362
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !10363, metadata !1849), !dbg !10364
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !10365, metadata !1849), !dbg !10366
  store %struct.mant_groups* %m, %struct.mant_groups** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mant_groups** %m.addr, metadata !10367, metadata !1849), !dbg !10368
  %0 = load i32, i32* %ch.addr, align 4, !dbg !10369
  %idxprom = sext i32 %0 to i64, !dbg !10371
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10371
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 68, !dbg !10372
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 %idxprom, !dbg !10371
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10371
  %tobool = icmp ne i32 %2, 0, !dbg !10371
  br i1 %tobool, label %if.else, label %if.then, !dbg !10373

if.then:                                          ; preds = %entry
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10374
  %4 = load i32, i32* %ch.addr, align 4, !dbg !10376
  %5 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10377
  call void @ac3_decode_transform_coeffs_ch(%struct.AC3DecodeContext* %3, i32 %4, %struct.mant_groups* %5), !dbg !10378
  br label %if.end21, !dbg !10379

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !10380, metadata !1849), !dbg !10382
  %6 = load i32, i32* %blk.addr, align 4, !dbg !10383
  %tobool1 = icmp ne i32 %6, 0, !dbg !10383
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !10385

if.then2:                                         ; preds = %if.else
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10386
  %8 = load i32, i32* %ch.addr, align 4, !dbg !10387
  call void @ff_eac3_decode_transform_coeffs_aht_ch(%struct.AC3DecodeContext* %7, i32 %8), !dbg !10388
  br label %if.end, !dbg !10388

if.end:                                           ; preds = %if.then2, %if.else
  %9 = load i32, i32* %ch.addr, align 4, !dbg !10389
  %idxprom3 = sext i32 %9 to i64, !dbg !10391
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10391
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 83, !dbg !10392
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom3, !dbg !10391
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !10391
  store i32 %11, i32* %bin, align 4, !dbg !10393
  br label %for.cond, !dbg !10394

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %bin, align 4, !dbg !10395
  %13 = load i32, i32* %ch.addr, align 4, !dbg !10398
  %idxprom5 = sext i32 %13 to i64, !dbg !10399
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10399
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 84, !dbg !10400
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom5, !dbg !10399
  %15 = load i32, i32* %arrayidx6, align 4, !dbg !10399
  %cmp = icmp slt i32 %12, %15, !dbg !10401
  br i1 %cmp, label %for.body, label %for.end, !dbg !10402

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %blk.addr, align 4, !dbg !10403
  %idxprom7 = sext i32 %16 to i64, !dbg !10405
  %17 = load i32, i32* %bin, align 4, !dbg !10406
  %idxprom8 = sext i32 %17 to i64, !dbg !10405
  %18 = load i32, i32* %ch.addr, align 4, !dbg !10407
  %idxprom9 = sext i32 %18 to i64, !dbg !10405
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10405
  %pre_mantissa = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 69, !dbg !10408
  %arrayidx10 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa, i64 0, i64 %idxprom9, !dbg !10405
  %arrayidx11 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !10405
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx11, i64 0, i64 %idxprom7, !dbg !10405
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !10405
  %21 = load i32, i32* %bin, align 4, !dbg !10409
  %idxprom13 = sext i32 %21 to i64, !dbg !10410
  %22 = load i32, i32* %ch.addr, align 4, !dbg !10411
  %idxprom14 = sext i32 %22 to i64, !dbg !10410
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10410
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 89, !dbg !10412
  %arrayidx15 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom14, !dbg !10410
  %arrayidx16 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !10410
  %24 = load i8, i8* %arrayidx16, align 1, !dbg !10410
  %conv = sext i8 %24 to i32, !dbg !10410
  %shr = ashr i32 %20, %conv, !dbg !10413
  %25 = load i32, i32* %bin, align 4, !dbg !10414
  %idxprom17 = sext i32 %25 to i64, !dbg !10415
  %26 = load i32, i32* %ch.addr, align 4, !dbg !10416
  %idxprom18 = sext i32 %26 to i64, !dbg !10415
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10415
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 117, !dbg !10417
  %arrayidx19 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom18, !dbg !10415
  %arrayidx20 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !10415
  store i32 %shr, i32* %arrayidx20, align 4, !dbg !10418
  br label %for.inc, !dbg !10419

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %bin, align 4, !dbg !10420
  %inc = add nsw i32 %28, 1, !dbg !10420
  store i32 %inc, i32* %bin, align 4, !dbg !10420
  br label %for.cond, !dbg !10422, !llvm.loop !10423

for.end:                                          ; preds = %for.cond
  br label %if.end21

if.end21:                                         ; preds = %for.end, %if.then
  ret void, !dbg !10425
}

; Function Attrs: nounwind uwtable
define internal void @calc_transform_coeffs_cpl(%struct.AC3DecodeContext* %s) #1 !dbg !10426 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !10427, metadata !1849), !dbg !10429
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !10442, metadata !1849), !dbg !10443
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bin = alloca i32, align 4
  %band = alloca i32, align 4
  %ch = alloca i32, align 4
  %band_start = alloca i32, align 4
  %band_end = alloca i32, align 4
  %cpl_coord = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10444, metadata !1849), !dbg !10445
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !10446, metadata !1849), !dbg !10447
  call void @llvm.dbg.declare(metadata i32* %band, metadata !10448, metadata !1849), !dbg !10449
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10450, metadata !1849), !dbg !10451
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10452
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 83, !dbg !10453
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !10452
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10452
  store i32 %1, i32* %bin, align 4, !dbg !10454
  store i32 0, i32* %band, align 4, !dbg !10455
  br label %for.cond, !dbg !10456

for.cond:                                         ; preds = %for.inc49, %entry
  %2 = load i32, i32* %band, align 4, !dbg !10457
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10459
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 50, !dbg !10460
  %4 = load i32, i32* %num_cpl_bands, align 32, !dbg !10460
  %cmp = icmp slt i32 %2, %4, !dbg !10461
  br i1 %cmp, label %for.body, label %for.end51, !dbg !10462

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %band_start, metadata !10463, metadata !1849), !dbg !10464
  %5 = load i32, i32* %bin, align 4, !dbg !10465
  store i32 %5, i32* %band_start, align 4, !dbg !10464
  call void @llvm.dbg.declare(metadata i32* %band_end, metadata !10466, metadata !1849), !dbg !10467
  %6 = load i32, i32* %bin, align 4, !dbg !10468
  %7 = load i32, i32* %band, align 4, !dbg !10469
  %idxprom = sext i32 %7 to i64, !dbg !10470
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10470
  %cpl_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 52, !dbg !10471
  %arrayidx1 = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_sizes, i64 0, i64 %idxprom, !dbg !10470
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !10470
  %conv = zext i8 %9 to i32, !dbg !10470
  %add = add nsw i32 %6, %conv, !dbg !10472
  store i32 %add, i32* %band_end, align 4, !dbg !10467
  store i32 1, i32* %ch, align 4, !dbg !10473
  br label %for.cond2, !dbg !10474

for.cond2:                                        ; preds = %for.inc46, %for.body
  %10 = load i32, i32* %ch, align 4, !dbg !10475
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10477
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 70, !dbg !10478
  %12 = load i32, i32* %fbw_channels, align 4, !dbg !10478
  %cmp3 = icmp sle i32 %10, %12, !dbg !10479
  br i1 %cmp3, label %for.body5, label %for.end48, !dbg !10480

for.body5:                                        ; preds = %for.cond2
  %13 = load i32, i32* %ch, align 4, !dbg !10481
  %idxprom6 = sext i32 %13 to i64, !dbg !10482
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10482
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 47, !dbg !10483
  %arrayidx7 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom6, !dbg !10482
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !10482
  %tobool = icmp ne i32 %15, 0, !dbg !10482
  br i1 %tobool, label %if.then, label %if.end45, !dbg !10484

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata i32* %cpl_coord, metadata !10485, metadata !1849), !dbg !10486
  %16 = load i32, i32* %band, align 4, !dbg !10487
  %idxprom8 = sext i32 %16 to i64, !dbg !10488
  %17 = load i32, i32* %ch, align 4, !dbg !10489
  %idxprom9 = sext i32 %17 to i64, !dbg !10488
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10488
  %cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 55, !dbg !10490
  %arrayidx10 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords, i64 0, i64 %idxprom9, !dbg !10488
  %arrayidx11 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !10488
  %19 = load i32, i32* %arrayidx11, align 4, !dbg !10488
  %shl = shl i32 %19, 5, !dbg !10491
  store i32 %shl, i32* %cpl_coord, align 4, !dbg !10486
  %20 = load i32, i32* %band_start, align 4, !dbg !10492
  store i32 %20, i32* %bin, align 4, !dbg !10493
  br label %for.cond12, !dbg !10494

for.cond12:                                       ; preds = %for.inc, %if.then
  %21 = load i32, i32* %bin, align 4, !dbg !10495
  %22 = load i32, i32* %band_end, align 4, !dbg !10497
  %cmp13 = icmp slt i32 %21, %22, !dbg !10498
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !10499

for.body15:                                       ; preds = %for.cond12
  %23 = load i32, i32* %bin, align 4, !dbg !10500
  %idxprom16 = sext i32 %23 to i64, !dbg !10501
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10501
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 117, !dbg !10502
  %arrayidx17 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 0, !dbg !10501
  %arrayidx18 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx17, i64 0, i64 %idxprom16, !dbg !10501
  %25 = load i32, i32* %arrayidx18, align 4, !dbg !10501
  %mul = mul nsw i32 %25, 16, !dbg !10503
  %26 = load i32, i32* %cpl_coord, align 4, !dbg !10504
  store i32 %mul, i32* %a.addr.i, align 4, !dbg !10505
  store i32 %26, i32* %b.addr.i, align 4, !dbg !10505
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !10506
  %conv.i = sext i32 %27 to i64, !dbg !10507
  %28 = load i32, i32* %b.addr.i, align 4, !dbg !10508
  %conv1.i = sext i32 %28 to i64, !dbg !10509
  %mul.i = mul nsw i64 %conv.i, %conv1.i, !dbg !10510
  %shr.i = ashr i64 %mul.i, 32, !dbg !10511
  %conv2.i = trunc i64 %shr.i to i32, !dbg !10512
  %29 = load i32, i32* %bin, align 4, !dbg !10513
  %idxprom19 = sext i32 %29 to i64, !dbg !10514
  %30 = load i32, i32* %ch, align 4, !dbg !10515
  %idxprom20 = sext i32 %30 to i64, !dbg !10514
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10514
  %fixed_coeffs21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 117, !dbg !10516
  %arrayidx22 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs21, i64 0, i64 %idxprom20, !dbg !10514
  %arrayidx23 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !10514
  store i32 %conv2.i, i32* %arrayidx23, align 4, !dbg !10517
  br label %for.inc, !dbg !10518

for.inc:                                          ; preds = %for.body15
  %32 = load i32, i32* %bin, align 4, !dbg !10519
  %inc = add nsw i32 %32, 1, !dbg !10519
  store i32 %inc, i32* %bin, align 4, !dbg !10519
  br label %for.cond12, !dbg !10521, !llvm.loop !10522

for.end:                                          ; preds = %for.cond12
  %33 = load i32, i32* %ch, align 4, !dbg !10524
  %cmp24 = icmp eq i32 %33, 2, !dbg !10526
  br i1 %cmp24, label %land.lhs.true, label %if.end, !dbg !10527

land.lhs.true:                                    ; preds = %for.end
  %34 = load i32, i32* %band, align 4, !dbg !10528
  %idxprom26 = sext i32 %34 to i64, !dbg !10530
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10530
  %phase_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 49, !dbg !10531
  %arrayidx27 = getelementptr inbounds [18 x i32], [18 x i32]* %phase_flags, i64 0, i64 %idxprom26, !dbg !10530
  %36 = load i32, i32* %arrayidx27, align 4, !dbg !10530
  %tobool28 = icmp ne i32 %36, 0, !dbg !10530
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !10532

if.then29:                                        ; preds = %land.lhs.true
  %37 = load i32, i32* %band_start, align 4, !dbg !10533
  store i32 %37, i32* %bin, align 4, !dbg !10536
  br label %for.cond30, !dbg !10537

for.cond30:                                       ; preds = %for.inc42, %if.then29
  %38 = load i32, i32* %bin, align 4, !dbg !10538
  %39 = load i32, i32* %band_end, align 4, !dbg !10541
  %cmp31 = icmp slt i32 %38, %39, !dbg !10542
  br i1 %cmp31, label %for.body33, label %for.end44, !dbg !10543

for.body33:                                       ; preds = %for.cond30
  %40 = load i32, i32* %bin, align 4, !dbg !10544
  %idxprom34 = sext i32 %40 to i64, !dbg !10545
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10545
  %fixed_coeffs35 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 117, !dbg !10546
  %arrayidx36 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs35, i64 0, i64 2, !dbg !10545
  %arrayidx37 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx36, i64 0, i64 %idxprom34, !dbg !10545
  %42 = load i32, i32* %arrayidx37, align 4, !dbg !10545
  %sub = sub nsw i32 0, %42, !dbg !10547
  %43 = load i32, i32* %bin, align 4, !dbg !10548
  %idxprom38 = sext i32 %43 to i64, !dbg !10549
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10549
  %fixed_coeffs39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 117, !dbg !10550
  %arrayidx40 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs39, i64 0, i64 2, !dbg !10549
  %arrayidx41 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx40, i64 0, i64 %idxprom38, !dbg !10549
  store i32 %sub, i32* %arrayidx41, align 4, !dbg !10551
  br label %for.inc42, !dbg !10549

for.inc42:                                        ; preds = %for.body33
  %45 = load i32, i32* %bin, align 4, !dbg !10552
  %inc43 = add nsw i32 %45, 1, !dbg !10552
  store i32 %inc43, i32* %bin, align 4, !dbg !10552
  br label %for.cond30, !dbg !10554, !llvm.loop !10555

for.end44:                                        ; preds = %for.cond30
  br label %if.end, !dbg !10557

if.end:                                           ; preds = %for.end44, %land.lhs.true, %for.end
  br label %if.end45, !dbg !10558

if.end45:                                         ; preds = %if.end, %for.body5
  br label %for.inc46, !dbg !10559

for.inc46:                                        ; preds = %if.end45
  %46 = load i32, i32* %ch, align 4, !dbg !10560
  %inc47 = add nsw i32 %46, 1, !dbg !10560
  store i32 %inc47, i32* %ch, align 4, !dbg !10560
  br label %for.cond2, !dbg !10562, !llvm.loop !10563

for.end48:                                        ; preds = %for.cond2
  %47 = load i32, i32* %band_end, align 4, !dbg !10565
  store i32 %47, i32* %bin, align 4, !dbg !10566
  br label %for.inc49, !dbg !10567

for.inc49:                                        ; preds = %for.end48
  %48 = load i32, i32* %band, align 4, !dbg !10568
  %inc50 = add nsw i32 %48, 1, !dbg !10568
  store i32 %inc50, i32* %band, align 4, !dbg !10568
  br label %for.cond, !dbg !10570, !llvm.loop !10571

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !10573
}

; Function Attrs: nounwind uwtable
define internal void @remove_dithering(%struct.AC3DecodeContext* %s) #1 !dbg !10574 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10575, metadata !1849), !dbg !10576
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10577, metadata !1849), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10579, metadata !1849), !dbg !10580
  store i32 1, i32* %ch, align 4, !dbg !10581
  br label %for.cond, !dbg !10583

for.cond:                                         ; preds = %for.inc19, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !10584
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10587
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !10588
  %2 = load i32, i32* %fbw_channels, align 4, !dbg !10588
  %cmp = icmp sle i32 %0, %2, !dbg !10589
  br i1 %cmp, label %for.body, label %for.end21, !dbg !10590

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch, align 4, !dbg !10591
  %idxprom = sext i32 %3 to i64, !dbg !10594
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10594
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 104, !dbg !10595
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom, !dbg !10594
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10594
  %tobool = icmp ne i32 %5, 0, !dbg !10594
  br i1 %tobool, label %if.end18, label %land.lhs.true, !dbg !10596

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %ch, align 4, !dbg !10597
  %idxprom1 = sext i32 %6 to i64, !dbg !10599
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10599
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 47, !dbg !10600
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom1, !dbg !10599
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !10599
  %tobool3 = icmp ne i32 %8, 0, !dbg !10599
  br i1 %tobool3, label %if.then, label %if.end18, !dbg !10601

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10602
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 83, !dbg !10605
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !10602
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !10602
  store i32 %10, i32* %i, align 4, !dbg !10606
  br label %for.cond5, !dbg !10607

for.cond5:                                        ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !10608
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10611
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 84, !dbg !10612
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !10611
  %13 = load i32, i32* %arrayidx6, align 8, !dbg !10611
  %cmp7 = icmp slt i32 %11, %13, !dbg !10613
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !10614

for.body8:                                        ; preds = %for.cond5
  %14 = load i32, i32* %i, align 4, !dbg !10615
  %idxprom9 = sext i32 %14 to i64, !dbg !10618
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10618
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 95, !dbg !10619
  %arrayidx10 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 0, !dbg !10618
  %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx10, i64 0, i64 %idxprom9, !dbg !10618
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !10618
  %tobool12 = icmp ne i8 %16, 0, !dbg !10618
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !10620

if.then13:                                        ; preds = %for.body8
  %17 = load i32, i32* %i, align 4, !dbg !10621
  %idxprom14 = sext i32 %17 to i64, !dbg !10622
  %18 = load i32, i32* %ch, align 4, !dbg !10623
  %idxprom15 = sext i32 %18 to i64, !dbg !10622
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10622
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 117, !dbg !10624
  %arrayidx16 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom15, !dbg !10622
  %arrayidx17 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !10622
  store i32 0, i32* %arrayidx17, align 4, !dbg !10625
  br label %if.end, !dbg !10622

if.end:                                           ; preds = %if.then13, %for.body8
  br label %for.inc, !dbg !10626

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !10627
  %inc = add nsw i32 %20, 1, !dbg !10627
  store i32 %inc, i32* %i, align 4, !dbg !10627
  br label %for.cond5, !dbg !10629, !llvm.loop !10630

for.end:                                          ; preds = %for.cond5
  br label %if.end18, !dbg !10632

if.end18:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc19, !dbg !10633

for.inc19:                                        ; preds = %if.end18
  %21 = load i32, i32* %ch, align 4, !dbg !10634
  %inc20 = add nsw i32 %21, 1, !dbg !10634
  store i32 %inc20, i32* %ch, align 4, !dbg !10634
  br label %for.cond, !dbg !10636, !llvm.loop !10637

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !10639
}

; Function Attrs: nounwind uwtable
define internal void @ac3_decode_transform_coeffs_ch(%struct.AC3DecodeContext* %s, i32 %ch_index, %struct.mant_groups* %m) #1 !dbg !10640 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch_index.addr = alloca i32, align 4
  %m.addr = alloca %struct.mant_groups*, align 8
  %start_freq = alloca i32, align 4
  %end_freq = alloca i32, align 4
  %baps = alloca i8*, align 8
  %exps = alloca i8*, align 8
  %coeffs = alloca i32*, align 8
  %dither = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %freq = alloca i32, align 4
  %bap17 = alloca i32, align 4
  %mantissa = alloca i32, align 4
  %bits = alloca i32, align 4
  %bits55 = alloca i32, align 4
  %bits81 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10643, metadata !1849), !dbg !10644
  store i32 %ch_index, i32* %ch_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_index.addr, metadata !10645, metadata !1849), !dbg !10646
  store %struct.mant_groups* %m, %struct.mant_groups** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mant_groups** %m.addr, metadata !10647, metadata !1849), !dbg !10648
  call void @llvm.dbg.declare(metadata i32* %start_freq, metadata !10649, metadata !1849), !dbg !10650
  %0 = load i32, i32* %ch_index.addr, align 4, !dbg !10651
  %idxprom = sext i32 %0 to i64, !dbg !10652
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10652
  %start_freq1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 83, !dbg !10653
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq1, i64 0, i64 %idxprom, !dbg !10652
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10652
  store i32 %2, i32* %start_freq, align 4, !dbg !10650
  call void @llvm.dbg.declare(metadata i32* %end_freq, metadata !10654, metadata !1849), !dbg !10655
  %3 = load i32, i32* %ch_index.addr, align 4, !dbg !10656
  %idxprom2 = sext i32 %3 to i64, !dbg !10657
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10657
  %end_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 84, !dbg !10658
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq3, i64 0, i64 %idxprom2, !dbg !10657
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !10657
  store i32 %5, i32* %end_freq, align 4, !dbg !10655
  call void @llvm.dbg.declare(metadata i8** %baps, metadata !10659, metadata !1849), !dbg !10660
  %6 = load i32, i32* %ch_index.addr, align 4, !dbg !10661
  %idxprom5 = sext i32 %6 to i64, !dbg !10662
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10662
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 95, !dbg !10663
  %arrayidx6 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom5, !dbg !10662
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx6, i32 0, i32 0, !dbg !10662
  store i8* %arraydecay, i8** %baps, align 8, !dbg !10660
  call void @llvm.dbg.declare(metadata i8** %exps, metadata !10664, metadata !1849), !dbg !10665
  %8 = load i32, i32* %ch_index.addr, align 4, !dbg !10666
  %idxprom7 = sext i32 %8 to i64, !dbg !10667
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10667
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 89, !dbg !10668
  %arrayidx8 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom7, !dbg !10667
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx8, i32 0, i32 0, !dbg !10667
  store i8* %arraydecay9, i8** %exps, align 8, !dbg !10665
  call void @llvm.dbg.declare(metadata i32** %coeffs, metadata !10669, metadata !1849), !dbg !10670
  %10 = load i32, i32* %ch_index.addr, align 4, !dbg !10671
  %idxprom10 = sext i32 %10 to i64, !dbg !10672
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10672
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 117, !dbg !10673
  %arrayidx11 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom10, !dbg !10672
  %arraydecay12 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx11, i32 0, i32 0, !dbg !10672
  store i32* %arraydecay12, i32** %coeffs, align 8, !dbg !10670
  call void @llvm.dbg.declare(metadata i32* %dither, metadata !10674, metadata !1849), !dbg !10675
  %12 = load i32, i32* %ch_index.addr, align 4, !dbg !10676
  %cmp = icmp eq i32 %12, 0, !dbg !10677
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10678

lor.rhs:                                          ; preds = %entry
  %13 = load i32, i32* %ch_index.addr, align 4, !dbg !10679
  %idxprom13 = sext i32 %13 to i64, !dbg !10681
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10681
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 104, !dbg !10682
  %arrayidx14 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom13, !dbg !10681
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !10681
  %tobool = icmp ne i32 %15, 0, !dbg !10683
  br label %lor.end, !dbg !10683

lor.end:                                          ; preds = %lor.rhs, %entry
  %16 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32, !dbg !10684
  store i32 %lor.ext, i32* %dither, align 4, !dbg !10686
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !10687, metadata !1849), !dbg !10688
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10689
  %gbc15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 2, !dbg !10690
  store %struct.GetBitContext* %gbc15, %struct.GetBitContext** %gbc, align 8, !dbg !10688
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !10691, metadata !1849), !dbg !10692
  %18 = load i32, i32* %start_freq, align 4, !dbg !10693
  store i32 %18, i32* %freq, align 4, !dbg !10695
  br label %for.cond, !dbg !10696

for.cond:                                         ; preds = %for.inc, %lor.end
  %19 = load i32, i32* %freq, align 4, !dbg !10697
  %20 = load i32, i32* %end_freq, align 4, !dbg !10700
  %cmp16 = icmp slt i32 %19, %20, !dbg !10701
  br i1 %cmp16, label %for.body, label %for.end, !dbg !10702

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bap17, metadata !10703, metadata !1849), !dbg !10705
  %21 = load i32, i32* %freq, align 4, !dbg !10706
  %idxprom18 = sext i32 %21 to i64, !dbg !10707
  %22 = load i8*, i8** %baps, align 8, !dbg !10707
  %arrayidx19 = getelementptr inbounds i8, i8* %22, i64 %idxprom18, !dbg !10707
  %23 = load i8, i8* %arrayidx19, align 1, !dbg !10707
  %conv = zext i8 %23 to i32, !dbg !10707
  store i32 %conv, i32* %bap17, align 4, !dbg !10705
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !10708, metadata !1849), !dbg !10709
  %24 = load i32, i32* %bap17, align 4, !dbg !10710
  switch i32 %24, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb22
    i32 2, label %sw.bb46
    i32 3, label %sw.bb72
    i32 4, label %sw.bb76
    i32 5, label %sw.bb92
  ], !dbg !10711

sw.bb:                                            ; preds = %for.body
  %25 = load i32, i32* %dither, align 4, !dbg !10712
  %tobool20 = icmp ne i32 %25, 0, !dbg !10712
  br i1 %tobool20, label %if.then, label %if.else, !dbg !10715

if.then:                                          ; preds = %sw.bb
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10716
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 105, !dbg !10717
  %call = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !10718
  %shr = lshr i32 %call, 8, !dbg !10719
  %mul = mul i32 %shr, 181, !dbg !10720
  %shr21 = lshr i32 %mul, 8, !dbg !10721
  %sub = sub i32 %shr21, 5931008, !dbg !10722
  store i32 %sub, i32* %mantissa, align 4, !dbg !10723
  br label %if.end, !dbg !10724

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %mantissa, align 4, !dbg !10725
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !10726

sw.bb22:                                          ; preds = %for.body
  %27 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10727
  %b1 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %27, i32 0, i32 3, !dbg !10729
  %28 = load i32, i32* %b1, align 4, !dbg !10729
  %tobool23 = icmp ne i32 %28, 0, !dbg !10727
  br i1 %tobool23, label %if.then24, label %if.else29, !dbg !10730

if.then24:                                        ; preds = %sw.bb22
  %29 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10731
  %b125 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %29, i32 0, i32 3, !dbg !10733
  %30 = load i32, i32* %b125, align 4, !dbg !10734
  %dec = add nsw i32 %30, -1, !dbg !10734
  store i32 %dec, i32* %b125, align 4, !dbg !10734
  %31 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10735
  %b126 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %31, i32 0, i32 3, !dbg !10736
  %32 = load i32, i32* %b126, align 4, !dbg !10736
  %idxprom27 = sext i32 %32 to i64, !dbg !10737
  %33 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10737
  %b1_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %33, i32 0, i32 0, !dbg !10738
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant, i64 0, i64 %idxprom27, !dbg !10737
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !10737
  store i32 %34, i32* %mantissa, align 4, !dbg !10739
  br label %if.end45, !dbg !10740

if.else29:                                        ; preds = %sw.bb22
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !10741, metadata !1849), !dbg !10743
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10744
  %call30 = call i32 @get_bits(%struct.GetBitContext* %35, i32 5), !dbg !10745
  store i32 %call30, i32* %bits, align 4, !dbg !10743
  %36 = load i32, i32* %bits, align 4, !dbg !10746
  %idxprom31 = sext i32 %36 to i64, !dbg !10747
  %arrayidx32 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom31, !dbg !10747
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx32, i64 0, i64 0, !dbg !10747
  %37 = load i32, i32* %arrayidx33, align 4, !dbg !10747
  store i32 %37, i32* %mantissa, align 4, !dbg !10748
  %38 = load i32, i32* %bits, align 4, !dbg !10749
  %idxprom34 = sext i32 %38 to i64, !dbg !10750
  %arrayidx35 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom34, !dbg !10750
  %arrayidx36 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx35, i64 0, i64 1, !dbg !10750
  %39 = load i32, i32* %arrayidx36, align 4, !dbg !10750
  %40 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10751
  %b1_mant37 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %40, i32 0, i32 0, !dbg !10752
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant37, i64 0, i64 1, !dbg !10751
  store i32 %39, i32* %arrayidx38, align 4, !dbg !10753
  %41 = load i32, i32* %bits, align 4, !dbg !10754
  %idxprom39 = sext i32 %41 to i64, !dbg !10755
  %arrayidx40 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom39, !dbg !10755
  %arrayidx41 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx40, i64 0, i64 2, !dbg !10755
  %42 = load i32, i32* %arrayidx41, align 4, !dbg !10755
  %43 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10756
  %b1_mant42 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %43, i32 0, i32 0, !dbg !10757
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant42, i64 0, i64 0, !dbg !10756
  store i32 %42, i32* %arrayidx43, align 4, !dbg !10758
  %44 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10759
  %b144 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %44, i32 0, i32 3, !dbg !10760
  store i32 2, i32* %b144, align 4, !dbg !10761
  br label %if.end45

if.end45:                                         ; preds = %if.else29, %if.then24
  br label %sw.epilog, !dbg !10762

sw.bb46:                                          ; preds = %for.body
  %45 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10763
  %b2 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %45, i32 0, i32 4, !dbg !10765
  %46 = load i32, i32* %b2, align 4, !dbg !10765
  %tobool47 = icmp ne i32 %46, 0, !dbg !10763
  br i1 %tobool47, label %if.then48, label %if.else54, !dbg !10766

if.then48:                                        ; preds = %sw.bb46
  %47 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10767
  %b249 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %47, i32 0, i32 4, !dbg !10769
  %48 = load i32, i32* %b249, align 4, !dbg !10770
  %dec50 = add nsw i32 %48, -1, !dbg !10770
  store i32 %dec50, i32* %b249, align 4, !dbg !10770
  %49 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10771
  %b251 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %49, i32 0, i32 4, !dbg !10772
  %50 = load i32, i32* %b251, align 4, !dbg !10772
  %idxprom52 = sext i32 %50 to i64, !dbg !10773
  %51 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10773
  %b2_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %51, i32 0, i32 1, !dbg !10774
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant, i64 0, i64 %idxprom52, !dbg !10773
  %52 = load i32, i32* %arrayidx53, align 4, !dbg !10773
  store i32 %52, i32* %mantissa, align 4, !dbg !10775
  br label %if.end71, !dbg !10776

if.else54:                                        ; preds = %sw.bb46
  call void @llvm.dbg.declare(metadata i32* %bits55, metadata !10777, metadata !1849), !dbg !10779
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10780
  %call56 = call i32 @get_bits(%struct.GetBitContext* %53, i32 7), !dbg !10781
  store i32 %call56, i32* %bits55, align 4, !dbg !10779
  %54 = load i32, i32* %bits55, align 4, !dbg !10782
  %idxprom57 = sext i32 %54 to i64, !dbg !10783
  %arrayidx58 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom57, !dbg !10783
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx58, i64 0, i64 0, !dbg !10783
  %55 = load i32, i32* %arrayidx59, align 4, !dbg !10783
  store i32 %55, i32* %mantissa, align 4, !dbg !10784
  %56 = load i32, i32* %bits55, align 4, !dbg !10785
  %idxprom60 = sext i32 %56 to i64, !dbg !10786
  %arrayidx61 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom60, !dbg !10786
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx61, i64 0, i64 1, !dbg !10786
  %57 = load i32, i32* %arrayidx62, align 4, !dbg !10786
  %58 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10787
  %b2_mant63 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %58, i32 0, i32 1, !dbg !10788
  %arrayidx64 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant63, i64 0, i64 1, !dbg !10787
  store i32 %57, i32* %arrayidx64, align 4, !dbg !10789
  %59 = load i32, i32* %bits55, align 4, !dbg !10790
  %idxprom65 = sext i32 %59 to i64, !dbg !10791
  %arrayidx66 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom65, !dbg !10791
  %arrayidx67 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx66, i64 0, i64 2, !dbg !10791
  %60 = load i32, i32* %arrayidx67, align 4, !dbg !10791
  %61 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10792
  %b2_mant68 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %61, i32 0, i32 1, !dbg !10793
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant68, i64 0, i64 0, !dbg !10792
  store i32 %60, i32* %arrayidx69, align 4, !dbg !10794
  %62 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10795
  %b270 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %62, i32 0, i32 4, !dbg !10796
  store i32 2, i32* %b270, align 4, !dbg !10797
  br label %if.end71

if.end71:                                         ; preds = %if.else54, %if.then48
  br label %sw.epilog, !dbg !10798

sw.bb72:                                          ; preds = %for.body
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10799
  %call73 = call i32 @get_bits(%struct.GetBitContext* %63, i32 3), !dbg !10800
  %idxprom74 = zext i32 %call73 to i64, !dbg !10801
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* @b3_mantissas, i64 0, i64 %idxprom74, !dbg !10801
  %64 = load i32, i32* %arrayidx75, align 4, !dbg !10801
  store i32 %64, i32* %mantissa, align 4, !dbg !10802
  br label %sw.epilog, !dbg !10803

sw.bb76:                                          ; preds = %for.body
  %65 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10804
  %b4 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %65, i32 0, i32 5, !dbg !10806
  %66 = load i32, i32* %b4, align 4, !dbg !10806
  %tobool77 = icmp ne i32 %66, 0, !dbg !10804
  br i1 %tobool77, label %if.then78, label %if.else80, !dbg !10807

if.then78:                                        ; preds = %sw.bb76
  %67 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10808
  %b479 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %67, i32 0, i32 5, !dbg !10810
  store i32 0, i32* %b479, align 4, !dbg !10811
  %68 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10812
  %b4_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %68, i32 0, i32 2, !dbg !10813
  %69 = load i32, i32* %b4_mant, align 4, !dbg !10813
  store i32 %69, i32* %mantissa, align 4, !dbg !10814
  br label %if.end91, !dbg !10815

if.else80:                                        ; preds = %sw.bb76
  call void @llvm.dbg.declare(metadata i32* %bits81, metadata !10816, metadata !1849), !dbg !10818
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10819
  %call82 = call i32 @get_bits(%struct.GetBitContext* %70, i32 7), !dbg !10820
  store i32 %call82, i32* %bits81, align 4, !dbg !10818
  %71 = load i32, i32* %bits81, align 4, !dbg !10821
  %idxprom83 = sext i32 %71 to i64, !dbg !10822
  %arrayidx84 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom83, !dbg !10822
  %arrayidx85 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx84, i64 0, i64 0, !dbg !10822
  %72 = load i32, i32* %arrayidx85, align 8, !dbg !10822
  store i32 %72, i32* %mantissa, align 4, !dbg !10823
  %73 = load i32, i32* %bits81, align 4, !dbg !10824
  %idxprom86 = sext i32 %73 to i64, !dbg !10825
  %arrayidx87 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom86, !dbg !10825
  %arrayidx88 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx87, i64 0, i64 1, !dbg !10825
  %74 = load i32, i32* %arrayidx88, align 4, !dbg !10825
  %75 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10826
  %b4_mant89 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %75, i32 0, i32 2, !dbg !10827
  store i32 %74, i32* %b4_mant89, align 4, !dbg !10828
  %76 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10829
  %b490 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %76, i32 0, i32 5, !dbg !10830
  store i32 1, i32* %b490, align 4, !dbg !10831
  br label %if.end91

if.end91:                                         ; preds = %if.else80, %if.then78
  br label %sw.epilog, !dbg !10832

sw.bb92:                                          ; preds = %for.body
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10833
  %call93 = call i32 @get_bits(%struct.GetBitContext* %77, i32 4), !dbg !10834
  %idxprom94 = zext i32 %call93 to i64, !dbg !10835
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* @b5_mantissas, i64 0, i64 %idxprom94, !dbg !10835
  %78 = load i32, i32* %arrayidx95, align 4, !dbg !10835
  store i32 %78, i32* %mantissa, align 4, !dbg !10836
  br label %sw.epilog, !dbg !10837

sw.default:                                       ; preds = %for.body
  %79 = load i32, i32* %bap17, align 4, !dbg !10838
  %cmp96 = icmp sgt i32 %79, 15, !dbg !10840
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10841

if.then98:                                        ; preds = %sw.default
  %80 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10842
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %80, i32 0, i32 1, !dbg !10844
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10844
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !10842
  %83 = load i32, i32* %bap17, align 4, !dbg !10845
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i32 0, i32 0), i32 %83), !dbg !10846
  store i32 15, i32* %bap17, align 4, !dbg !10847
  br label %if.end99, !dbg !10848

if.end99:                                         ; preds = %if.then98, %sw.default
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10849
  %85 = load i32, i32* %bap17, align 4, !dbg !10850
  %idxprom100 = sext i32 %85 to i64, !dbg !10851
  %arrayidx101 = getelementptr inbounds [16 x i8], [16 x i8]* @quantization_tab, i64 0, i64 %idxprom100, !dbg !10851
  %86 = load i8, i8* %arrayidx101, align 1, !dbg !10851
  %conv102 = zext i8 %86 to i32, !dbg !10851
  %call103 = call i32 @get_sbits(%struct.GetBitContext* %84, i32 %conv102), !dbg !10852
  %87 = load i32, i32* %bap17, align 4, !dbg !10853
  %idxprom104 = sext i32 %87 to i64, !dbg !10854
  %arrayidx105 = getelementptr inbounds [16 x i8], [16 x i8]* @quantization_tab, i64 0, i64 %idxprom104, !dbg !10854
  %88 = load i8, i8* %arrayidx105, align 1, !dbg !10854
  %conv106 = zext i8 %88 to i32, !dbg !10854
  %sub107 = sub nsw i32 24, %conv106, !dbg !10855
  %shl = shl i32 %call103, %sub107, !dbg !10856
  store i32 %shl, i32* %mantissa, align 4, !dbg !10857
  br label %sw.epilog, !dbg !10858

sw.epilog:                                        ; preds = %if.end99, %sw.bb92, %if.end91, %sw.bb72, %if.end71, %if.end45, %if.end
  %89 = load i32, i32* %mantissa, align 4, !dbg !10859
  %90 = load i32, i32* %freq, align 4, !dbg !10860
  %idxprom108 = sext i32 %90 to i64, !dbg !10861
  %91 = load i8*, i8** %exps, align 8, !dbg !10861
  %arrayidx109 = getelementptr inbounds i8, i8* %91, i64 %idxprom108, !dbg !10861
  %92 = load i8, i8* %arrayidx109, align 1, !dbg !10861
  %conv110 = sext i8 %92 to i32, !dbg !10861
  %shr111 = ashr i32 %89, %conv110, !dbg !10862
  %93 = load i32, i32* %freq, align 4, !dbg !10863
  %idxprom112 = sext i32 %93 to i64, !dbg !10864
  %94 = load i32*, i32** %coeffs, align 8, !dbg !10864
  %arrayidx113 = getelementptr inbounds i32, i32* %94, i64 %idxprom112, !dbg !10864
  store i32 %shr111, i32* %arrayidx113, align 4, !dbg !10865
  br label %for.inc, !dbg !10866

for.inc:                                          ; preds = %sw.epilog
  %95 = load i32, i32* %freq, align 4, !dbg !10867
  %inc = add nsw i32 %95, 1, !dbg !10867
  store i32 %inc, i32* %freq, align 4, !dbg !10867
  br label %for.cond, !dbg !10869, !llvm.loop !10870

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10872
}

; Function Attrs: nounwind uwtable
define internal void @ff_eac3_decode_transform_coeffs_aht_ch(%struct.AC3DecodeContext* %s, i32 %ch) #1 !dbg !10873 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch.addr = alloca i32, align 4
  %bin = alloca i32, align 4
  %blk = alloca i32, align 4
  %gs = alloca i32, align 4
  %end_bap = alloca i32, align 4
  %gaq_mode = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %gaq_gain = alloca [256 x i32], align 16
  %gc = alloca i32, align 4
  %group_code = alloca i32, align 4
  %hebap = alloca i32, align 4
  %bits = alloca i32, align 4
  %v = alloca i32, align 4
  %gbits = alloca i32, align 4
  %log_gain = alloca i32, align 4
  %mant = alloca i32, align 4
  %b = alloca i32, align 4
  %mbits = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10874, metadata !1849), !dbg !10875
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !10876, metadata !1849), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !10878, metadata !1849), !dbg !10879
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !10880, metadata !1849), !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %gs, metadata !10882, metadata !1849), !dbg !10883
  call void @llvm.dbg.declare(metadata i32* %end_bap, metadata !10884, metadata !1849), !dbg !10885
  call void @llvm.dbg.declare(metadata i32* %gaq_mode, metadata !10886, metadata !1849), !dbg !10887
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !10888, metadata !1849), !dbg !10889
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10890
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !10891
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !10889
  call void @llvm.dbg.declare(metadata [256 x i32]* %gaq_gain, metadata !10892, metadata !1849), !dbg !10893
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10894
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 2), !dbg !10895
  store i32 %call, i32* %gaq_mode, align 4, !dbg !10896
  %2 = load i32, i32* %gaq_mode, align 4, !dbg !10897
  %cmp = icmp slt i32 %2, 2, !dbg !10898
  %cond = select i1 %cmp, i32 12, i32 17, !dbg !10899
  store i32 %cond, i32* %end_bap, align 4, !dbg !10900
  store i32 0, i32* %gs, align 4, !dbg !10901
  %3 = load i32, i32* %gaq_mode, align 4, !dbg !10902
  %cmp2 = icmp eq i32 %3, 1, !dbg !10904
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !10905

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %gaq_mode, align 4, !dbg !10906
  %cmp3 = icmp eq i32 %4, 2, !dbg !10908
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10909

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %ch.addr, align 4, !dbg !10910
  %idxprom = sext i32 %5 to i64, !dbg !10913
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10913
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 83, !dbg !10914
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom, !dbg !10913
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10913
  store i32 %7, i32* %bin, align 4, !dbg !10915
  br label %for.cond, !dbg !10916

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %bin, align 4, !dbg !10917
  %9 = load i32, i32* %ch.addr, align 4, !dbg !10920
  %idxprom4 = sext i32 %9 to i64, !dbg !10921
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10921
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 84, !dbg !10922
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom4, !dbg !10921
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !10921
  %cmp6 = icmp slt i32 %8, %11, !dbg !10923
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10924

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %bin, align 4, !dbg !10925
  %idxprom7 = sext i32 %12 to i64, !dbg !10928
  %13 = load i32, i32* %ch.addr, align 4, !dbg !10929
  %idxprom8 = sext i32 %13 to i64, !dbg !10928
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10928
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 95, !dbg !10930
  %arrayidx9 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom8, !dbg !10928
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx9, i64 0, i64 %idxprom7, !dbg !10928
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !10928
  %conv = zext i8 %15 to i32, !dbg !10928
  %cmp11 = icmp sgt i32 %conv, 7, !dbg !10931
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !10932

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* %bin, align 4, !dbg !10933
  %idxprom13 = sext i32 %16 to i64, !dbg !10935
  %17 = load i32, i32* %ch.addr, align 4, !dbg !10936
  %idxprom14 = sext i32 %17 to i64, !dbg !10935
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10935
  %bap15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 95, !dbg !10937
  %arrayidx16 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap15, i64 0, i64 %idxprom14, !dbg !10935
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx16, i64 0, i64 %idxprom13, !dbg !10935
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !10935
  %conv18 = zext i8 %19 to i32, !dbg !10935
  %20 = load i32, i32* %end_bap, align 4, !dbg !10938
  %cmp19 = icmp slt i32 %conv18, %20, !dbg !10939
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !10940

if.then21:                                        ; preds = %land.lhs.true
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10941
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %21), !dbg !10942
  %22 = load i32, i32* %gaq_mode, align 4, !dbg !10943
  %sub = sub nsw i32 %22, 1, !dbg !10944
  %shl = shl i32 %call22, %sub, !dbg !10945
  %23 = load i32, i32* %gs, align 4, !dbg !10946
  %inc = add nsw i32 %23, 1, !dbg !10946
  store i32 %inc, i32* %gs, align 4, !dbg !10946
  %idxprom23 = sext i32 %23 to i64, !dbg !10947
  %arrayidx24 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom23, !dbg !10947
  store i32 %shl, i32* %arrayidx24, align 4, !dbg !10948
  br label %if.end, !dbg !10947

if.end:                                           ; preds = %if.then21, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10949

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %bin, align 4, !dbg !10950
  %inc25 = add nsw i32 %24, 1, !dbg !10950
  store i32 %inc25, i32* %bin, align 4, !dbg !10950
  br label %for.cond, !dbg !10952, !llvm.loop !10953

for.end:                                          ; preds = %for.cond
  br label %if.end93, !dbg !10955

if.else:                                          ; preds = %lor.lhs.false
  %25 = load i32, i32* %gaq_mode, align 4, !dbg !10956
  %cmp26 = icmp eq i32 %25, 3, !dbg !10959
  br i1 %cmp26, label %if.then28, label %if.end92, !dbg !10956

if.then28:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %gc, metadata !10960, metadata !1849), !dbg !10962
  store i32 2, i32* %gc, align 4, !dbg !10962
  %26 = load i32, i32* %ch.addr, align 4, !dbg !10963
  %idxprom29 = sext i32 %26 to i64, !dbg !10965
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10965
  %start_freq30 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 83, !dbg !10966
  %arrayidx31 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq30, i64 0, i64 %idxprom29, !dbg !10965
  %28 = load i32, i32* %arrayidx31, align 4, !dbg !10965
  store i32 %28, i32* %bin, align 4, !dbg !10967
  br label %for.cond32, !dbg !10968

for.cond32:                                       ; preds = %for.inc89, %if.then28
  %29 = load i32, i32* %bin, align 4, !dbg !10969
  %30 = load i32, i32* %ch.addr, align 4, !dbg !10972
  %idxprom33 = sext i32 %30 to i64, !dbg !10973
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10973
  %end_freq34 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 84, !dbg !10974
  %arrayidx35 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq34, i64 0, i64 %idxprom33, !dbg !10973
  %32 = load i32, i32* %arrayidx35, align 4, !dbg !10973
  %cmp36 = icmp slt i32 %29, %32, !dbg !10975
  br i1 %cmp36, label %for.body38, label %for.end91, !dbg !10976

for.body38:                                       ; preds = %for.cond32
  %33 = load i32, i32* %bin, align 4, !dbg !10977
  %idxprom39 = sext i32 %33 to i64, !dbg !10980
  %34 = load i32, i32* %ch.addr, align 4, !dbg !10981
  %idxprom40 = sext i32 %34 to i64, !dbg !10980
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10980
  %bap41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 95, !dbg !10982
  %arrayidx42 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap41, i64 0, i64 %idxprom40, !dbg !10980
  %arrayidx43 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx42, i64 0, i64 %idxprom39, !dbg !10980
  %36 = load i8, i8* %arrayidx43, align 1, !dbg !10980
  %conv44 = zext i8 %36 to i32, !dbg !10980
  %cmp45 = icmp sgt i32 %conv44, 7, !dbg !10983
  br i1 %cmp45, label %land.lhs.true47, label %if.end88, !dbg !10984

land.lhs.true47:                                  ; preds = %for.body38
  %37 = load i32, i32* %bin, align 4, !dbg !10985
  %idxprom48 = sext i32 %37 to i64, !dbg !10987
  %38 = load i32, i32* %ch.addr, align 4, !dbg !10988
  %idxprom49 = sext i32 %38 to i64, !dbg !10987
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10987
  %bap50 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 95, !dbg !10989
  %arrayidx51 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap50, i64 0, i64 %idxprom49, !dbg !10987
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !10987
  %40 = load i8, i8* %arrayidx52, align 1, !dbg !10987
  %conv53 = zext i8 %40 to i32, !dbg !10987
  %cmp54 = icmp slt i32 %conv53, 17, !dbg !10990
  br i1 %cmp54, label %if.then56, label %if.end88, !dbg !10991

if.then56:                                        ; preds = %land.lhs.true47
  %41 = load i32, i32* %gc, align 4, !dbg !10992
  %inc57 = add nsw i32 %41, 1, !dbg !10992
  store i32 %inc57, i32* %gc, align 4, !dbg !10992
  %cmp58 = icmp eq i32 %41, 2, !dbg !10995
  br i1 %cmp58, label %if.then60, label %if.end87, !dbg !10996

if.then60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %group_code, metadata !10997, metadata !1849), !dbg !10999
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !11000
  %call61 = call i32 @get_bits(%struct.GetBitContext* %42, i32 5), !dbg !11001
  store i32 %call61, i32* %group_code, align 4, !dbg !10999
  %43 = load i32, i32* %group_code, align 4, !dbg !11002
  %cmp62 = icmp sgt i32 %43, 26, !dbg !11004
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !11005

if.then64:                                        ; preds = %if.then60
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11006
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 1, !dbg !11008
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !11008
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !11006
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i32 0, i32 0)), !dbg !11009
  store i32 26, i32* %group_code, align 4, !dbg !11010
  br label %if.end65, !dbg !11011

if.end65:                                         ; preds = %if.then64, %if.then60
  %47 = load i32, i32* %group_code, align 4, !dbg !11012
  %idxprom66 = sext i32 %47 to i64, !dbg !11013
  %arrayidx67 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom66, !dbg !11013
  %arrayidx68 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx67, i64 0, i64 0, !dbg !11013
  %48 = load i8, i8* %arrayidx68, align 1, !dbg !11013
  %conv69 = zext i8 %48 to i32, !dbg !11013
  %49 = load i32, i32* %gs, align 4, !dbg !11014
  %inc70 = add nsw i32 %49, 1, !dbg !11014
  store i32 %inc70, i32* %gs, align 4, !dbg !11014
  %idxprom71 = sext i32 %49 to i64, !dbg !11015
  %arrayidx72 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom71, !dbg !11015
  store i32 %conv69, i32* %arrayidx72, align 4, !dbg !11016
  %50 = load i32, i32* %group_code, align 4, !dbg !11017
  %idxprom73 = sext i32 %50 to i64, !dbg !11018
  %arrayidx74 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom73, !dbg !11018
  %arrayidx75 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx74, i64 0, i64 1, !dbg !11018
  %51 = load i8, i8* %arrayidx75, align 1, !dbg !11018
  %conv76 = zext i8 %51 to i32, !dbg !11018
  %52 = load i32, i32* %gs, align 4, !dbg !11019
  %inc77 = add nsw i32 %52, 1, !dbg !11019
  store i32 %inc77, i32* %gs, align 4, !dbg !11019
  %idxprom78 = sext i32 %52 to i64, !dbg !11020
  %arrayidx79 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom78, !dbg !11020
  store i32 %conv76, i32* %arrayidx79, align 4, !dbg !11021
  %53 = load i32, i32* %group_code, align 4, !dbg !11022
  %idxprom80 = sext i32 %53 to i64, !dbg !11023
  %arrayidx81 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom80, !dbg !11023
  %arrayidx82 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx81, i64 0, i64 2, !dbg !11023
  %54 = load i8, i8* %arrayidx82, align 1, !dbg !11023
  %conv83 = zext i8 %54 to i32, !dbg !11023
  %55 = load i32, i32* %gs, align 4, !dbg !11024
  %inc84 = add nsw i32 %55, 1, !dbg !11024
  store i32 %inc84, i32* %gs, align 4, !dbg !11024
  %idxprom85 = sext i32 %55 to i64, !dbg !11025
  %arrayidx86 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom85, !dbg !11025
  store i32 %conv83, i32* %arrayidx86, align 4, !dbg !11026
  store i32 0, i32* %gc, align 4, !dbg !11027
  br label %if.end87, !dbg !11028

if.end87:                                         ; preds = %if.end65, %if.then56
  br label %if.end88, !dbg !11029

if.end88:                                         ; preds = %if.end87, %land.lhs.true47, %for.body38
  br label %for.inc89, !dbg !11030

for.inc89:                                        ; preds = %if.end88
  %56 = load i32, i32* %bin, align 4, !dbg !11031
  %inc90 = add nsw i32 %56, 1, !dbg !11031
  store i32 %inc90, i32* %bin, align 4, !dbg !11031
  br label %for.cond32, !dbg !11033, !llvm.loop !11034

for.end91:                                        ; preds = %for.cond32
  br label %if.end92, !dbg !11036

if.end92:                                         ; preds = %for.end91, %if.else
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %for.end
  store i32 0, i32* %gs, align 4, !dbg !11037
  %57 = load i32, i32* %ch.addr, align 4, !dbg !11038
  %idxprom94 = sext i32 %57 to i64, !dbg !11040
  %58 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11040
  %start_freq95 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %58, i32 0, i32 83, !dbg !11041
  %arrayidx96 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq95, i64 0, i64 %idxprom94, !dbg !11040
  %59 = load i32, i32* %arrayidx96, align 4, !dbg !11040
  store i32 %59, i32* %bin, align 4, !dbg !11042
  br label %for.cond97, !dbg !11043

for.cond97:                                       ; preds = %for.inc250, %if.end93
  %60 = load i32, i32* %bin, align 4, !dbg !11044
  %61 = load i32, i32* %ch.addr, align 4, !dbg !11047
  %idxprom98 = sext i32 %61 to i64, !dbg !11048
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11048
  %end_freq99 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 84, !dbg !11049
  %arrayidx100 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq99, i64 0, i64 %idxprom98, !dbg !11048
  %63 = load i32, i32* %arrayidx100, align 4, !dbg !11048
  %cmp101 = icmp slt i32 %60, %63, !dbg !11050
  br i1 %cmp101, label %for.body103, label %for.end252, !dbg !11051

for.body103:                                      ; preds = %for.cond97
  call void @llvm.dbg.declare(metadata i32* %hebap, metadata !11052, metadata !1849), !dbg !11054
  %64 = load i32, i32* %bin, align 4, !dbg !11055
  %idxprom104 = sext i32 %64 to i64, !dbg !11056
  %65 = load i32, i32* %ch.addr, align 4, !dbg !11057
  %idxprom105 = sext i32 %65 to i64, !dbg !11056
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11056
  %bap106 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 95, !dbg !11058
  %arrayidx107 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap106, i64 0, i64 %idxprom105, !dbg !11056
  %arrayidx108 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx107, i64 0, i64 %idxprom104, !dbg !11056
  %67 = load i8, i8* %arrayidx108, align 1, !dbg !11056
  %conv109 = zext i8 %67 to i32, !dbg !11056
  store i32 %conv109, i32* %hebap, align 4, !dbg !11054
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11059, metadata !1849), !dbg !11060
  %68 = load i32, i32* %hebap, align 4, !dbg !11061
  %idxprom110 = sext i32 %68 to i64, !dbg !11062
  %arrayidx111 = getelementptr inbounds [20 x i8], [20 x i8]* @ff_eac3_bits_vs_hebap, i64 0, i64 %idxprom110, !dbg !11062
  %69 = load i8, i8* %arrayidx111, align 1, !dbg !11062
  %conv112 = zext i8 %69 to i32, !dbg !11062
  store i32 %conv112, i32* %bits, align 4, !dbg !11060
  %70 = load i32, i32* %hebap, align 4, !dbg !11063
  %tobool = icmp ne i32 %70, 0, !dbg !11063
  br i1 %tobool, label %if.else129, label %if.then113, !dbg !11065

if.then113:                                       ; preds = %for.body103
  store i32 0, i32* %blk, align 4, !dbg !11066
  br label %for.cond114, !dbg !11069

for.cond114:                                      ; preds = %for.inc126, %if.then113
  %71 = load i32, i32* %blk, align 4, !dbg !11070
  %cmp115 = icmp slt i32 %71, 6, !dbg !11073
  br i1 %cmp115, label %for.body117, label %for.end128, !dbg !11074

for.body117:                                      ; preds = %for.cond114
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11075
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 105, !dbg !11077
  %call118 = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !11078
  %and = and i32 %call118, 8388607, !dbg !11079
  %sub119 = sub i32 %and, 4194304, !dbg !11080
  %73 = load i32, i32* %blk, align 4, !dbg !11081
  %idxprom120 = sext i32 %73 to i64, !dbg !11082
  %74 = load i32, i32* %bin, align 4, !dbg !11083
  %idxprom121 = sext i32 %74 to i64, !dbg !11082
  %75 = load i32, i32* %ch.addr, align 4, !dbg !11084
  %idxprom122 = sext i32 %75 to i64, !dbg !11082
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11082
  %pre_mantissa = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 69, !dbg !11085
  %arrayidx123 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa, i64 0, i64 %idxprom122, !dbg !11082
  %arrayidx124 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx123, i64 0, i64 %idxprom121, !dbg !11082
  %arrayidx125 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx124, i64 0, i64 %idxprom120, !dbg !11082
  store i32 %sub119, i32* %arrayidx125, align 4, !dbg !11086
  br label %for.inc126, !dbg !11087

for.inc126:                                       ; preds = %for.body117
  %77 = load i32, i32* %blk, align 4, !dbg !11088
  %inc127 = add nsw i32 %77, 1, !dbg !11088
  store i32 %inc127, i32* %blk, align 4, !dbg !11088
  br label %for.cond114, !dbg !11090, !llvm.loop !11091

for.end128:                                       ; preds = %for.cond114
  br label %if.end244, !dbg !11093

if.else129:                                       ; preds = %for.body103
  %78 = load i32, i32* %hebap, align 4, !dbg !11094
  %cmp130 = icmp slt i32 %78, 8, !dbg !11097
  br i1 %cmp130, label %if.then132, label %if.else155, !dbg !11094

if.then132:                                       ; preds = %if.else129
  call void @llvm.dbg.declare(metadata i32* %v, metadata !11098, metadata !1849), !dbg !11100
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !11101
  %80 = load i32, i32* %bits, align 4, !dbg !11102
  %call133 = call i32 @get_bits(%struct.GetBitContext* %79, i32 %80), !dbg !11103
  store i32 %call133, i32* %v, align 4, !dbg !11100
  store i32 0, i32* %blk, align 4, !dbg !11104
  br label %for.cond134, !dbg !11106

for.cond134:                                      ; preds = %for.inc152, %if.then132
  %81 = load i32, i32* %blk, align 4, !dbg !11107
  %cmp135 = icmp slt i32 %81, 6, !dbg !11110
  br i1 %cmp135, label %for.body137, label %for.end154, !dbg !11111

for.body137:                                      ; preds = %for.cond134
  %82 = load i32, i32* %blk, align 4, !dbg !11112
  %idxprom138 = sext i32 %82 to i64, !dbg !11114
  %83 = load i32, i32* %v, align 4, !dbg !11115
  %idxprom139 = sext i32 %83 to i64, !dbg !11114
  %84 = load i32, i32* %hebap, align 4, !dbg !11116
  %idxprom140 = sext i32 %84 to i64, !dbg !11114
  %arrayidx141 = getelementptr inbounds [8 x [6 x i16]*], [8 x [6 x i16]*]* @ff_eac3_mantissa_vq, i64 0, i64 %idxprom140, !dbg !11114
  %85 = load [6 x i16]*, [6 x i16]** %arrayidx141, align 8, !dbg !11114
  %arrayidx142 = getelementptr inbounds [6 x i16], [6 x i16]* %85, i64 %idxprom139, !dbg !11114
  %arrayidx143 = getelementptr inbounds [6 x i16], [6 x i16]* %arrayidx142, i64 0, i64 %idxprom138, !dbg !11114
  %86 = load i16, i16* %arrayidx143, align 2, !dbg !11114
  %conv144 = sext i16 %86 to i32, !dbg !11114
  %mul = mul nsw i32 %conv144, 256, !dbg !11117
  %87 = load i32, i32* %blk, align 4, !dbg !11118
  %idxprom145 = sext i32 %87 to i64, !dbg !11119
  %88 = load i32, i32* %bin, align 4, !dbg !11120
  %idxprom146 = sext i32 %88 to i64, !dbg !11119
  %89 = load i32, i32* %ch.addr, align 4, !dbg !11121
  %idxprom147 = sext i32 %89 to i64, !dbg !11119
  %90 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11119
  %pre_mantissa148 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %90, i32 0, i32 69, !dbg !11122
  %arrayidx149 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa148, i64 0, i64 %idxprom147, !dbg !11119
  %arrayidx150 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx149, i64 0, i64 %idxprom146, !dbg !11119
  %arrayidx151 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx150, i64 0, i64 %idxprom145, !dbg !11119
  store i32 %mul, i32* %arrayidx151, align 4, !dbg !11123
  br label %for.inc152, !dbg !11124

for.inc152:                                       ; preds = %for.body137
  %91 = load i32, i32* %blk, align 4, !dbg !11125
  %inc153 = add nsw i32 %91, 1, !dbg !11125
  store i32 %inc153, i32* %blk, align 4, !dbg !11125
  br label %for.cond134, !dbg !11127, !llvm.loop !11128

for.end154:                                       ; preds = %for.cond134
  br label %if.end243, !dbg !11130

if.else155:                                       ; preds = %if.else129
  call void @llvm.dbg.declare(metadata i32* %gbits, metadata !11131, metadata !1849), !dbg !11133
  call void @llvm.dbg.declare(metadata i32* %log_gain, metadata !11134, metadata !1849), !dbg !11135
  %92 = load i32, i32* %gaq_mode, align 4, !dbg !11136
  %cmp156 = icmp ne i32 %92, 0, !dbg !11138
  br i1 %cmp156, label %land.lhs.true158, label %if.else165, !dbg !11139

land.lhs.true158:                                 ; preds = %if.else155
  %93 = load i32, i32* %hebap, align 4, !dbg !11140
  %94 = load i32, i32* %end_bap, align 4, !dbg !11142
  %cmp159 = icmp slt i32 %93, %94, !dbg !11143
  br i1 %cmp159, label %if.then161, label %if.else165, !dbg !11144

if.then161:                                       ; preds = %land.lhs.true158
  %95 = load i32, i32* %gs, align 4, !dbg !11145
  %inc162 = add nsw i32 %95, 1, !dbg !11145
  store i32 %inc162, i32* %gs, align 4, !dbg !11145
  %idxprom163 = sext i32 %95 to i64, !dbg !11147
  %arrayidx164 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom163, !dbg !11147
  %96 = load i32, i32* %arrayidx164, align 4, !dbg !11147
  store i32 %96, i32* %log_gain, align 4, !dbg !11148
  br label %if.end166, !dbg !11149

if.else165:                                       ; preds = %land.lhs.true158, %if.else155
  store i32 0, i32* %log_gain, align 4, !dbg !11150
  br label %if.end166

if.end166:                                        ; preds = %if.else165, %if.then161
  %97 = load i32, i32* %bits, align 4, !dbg !11152
  %98 = load i32, i32* %log_gain, align 4, !dbg !11153
  %sub167 = sub nsw i32 %97, %98, !dbg !11154
  store i32 %sub167, i32* %gbits, align 4, !dbg !11155
  store i32 0, i32* %blk, align 4, !dbg !11156
  br label %for.cond168, !dbg !11158

for.cond168:                                      ; preds = %for.inc240, %if.end166
  %99 = load i32, i32* %blk, align 4, !dbg !11159
  %cmp169 = icmp slt i32 %99, 6, !dbg !11162
  br i1 %cmp169, label %for.body171, label %for.end242, !dbg !11163

for.body171:                                      ; preds = %for.cond168
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !11164, metadata !1849), !dbg !11166
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !11167
  %101 = load i32, i32* %gbits, align 4, !dbg !11168
  %call172 = call i32 @get_sbits(%struct.GetBitContext* %100, i32 %101), !dbg !11169
  store i32 %call172, i32* %mant, align 4, !dbg !11166
  %102 = load i32, i32* %log_gain, align 4, !dbg !11170
  %tobool173 = icmp ne i32 %102, 0, !dbg !11170
  br i1 %tobool173, label %land.lhs.true174, label %if.else215, !dbg !11172

land.lhs.true174:                                 ; preds = %for.body171
  %103 = load i32, i32* %mant, align 4, !dbg !11173
  %104 = load i32, i32* %gbits, align 4, !dbg !11175
  %sub175 = sub nsw i32 %104, 1, !dbg !11176
  %shl176 = shl i32 1, %sub175, !dbg !11177
  %sub177 = sub nsw i32 0, %shl176, !dbg !11178
  %cmp178 = icmp eq i32 %103, %sub177, !dbg !11179
  br i1 %cmp178, label %if.then180, label %if.else215, !dbg !11180

if.then180:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11181, metadata !1849), !dbg !11183
  call void @llvm.dbg.declare(metadata i32* %mbits, metadata !11184, metadata !1849), !dbg !11185
  %105 = load i32, i32* %bits, align 4, !dbg !11186
  %106 = load i32, i32* %log_gain, align 4, !dbg !11187
  %sub181 = sub nsw i32 2, %106, !dbg !11188
  %sub182 = sub nsw i32 %105, %sub181, !dbg !11189
  store i32 %sub182, i32* %mbits, align 4, !dbg !11185
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !11190
  %108 = load i32, i32* %mbits, align 4, !dbg !11191
  %call183 = call i32 @get_sbits(%struct.GetBitContext* %107, i32 %108), !dbg !11192
  store i32 %call183, i32* %mant, align 4, !dbg !11193
  %109 = load i32, i32* %mant, align 4, !dbg !11194
  %110 = load i32, i32* %mbits, align 4, !dbg !11195
  %sub184 = sub nsw i32 %110, 1, !dbg !11196
  %sub185 = sub nsw i32 23, %sub184, !dbg !11197
  %shl186 = shl i32 %109, %sub185, !dbg !11198
  store i32 %shl186, i32* %mant, align 4, !dbg !11199
  %111 = load i32, i32* %mant, align 4, !dbg !11200
  %cmp187 = icmp sge i32 %111, 0, !dbg !11202
  br i1 %cmp187, label %if.then189, label %if.else192, !dbg !11203

if.then189:                                       ; preds = %if.then180
  %112 = load i32, i32* %log_gain, align 4, !dbg !11204
  %sub190 = sub nsw i32 23, %112, !dbg !11205
  %shl191 = shl i32 1, %sub190, !dbg !11206
  store i32 %shl191, i32* %b, align 4, !dbg !11207
  br label %if.end201, !dbg !11208

if.else192:                                       ; preds = %if.then180
  %113 = load i32, i32* %log_gain, align 4, !dbg !11209
  %sub193 = sub nsw i32 %113, 1, !dbg !11210
  %idxprom194 = sext i32 %sub193 to i64, !dbg !11211
  %114 = load i32, i32* %hebap, align 4, !dbg !11212
  %sub195 = sub nsw i32 %114, 8, !dbg !11213
  %idxprom196 = sext i32 %sub195 to i64, !dbg !11211
  %arrayidx197 = getelementptr inbounds [9 x [2 x i16]], [9 x [2 x i16]]* @ff_eac3_gaq_remap_2_4_b, i64 0, i64 %idxprom196, !dbg !11211
  %arrayidx198 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx197, i64 0, i64 %idxprom194, !dbg !11211
  %115 = load i16, i16* %arrayidx198, align 2, !dbg !11211
  %conv199 = sext i16 %115 to i32, !dbg !11211
  %mul200 = mul nsw i32 %conv199, 256, !dbg !11214
  store i32 %mul200, i32* %b, align 4, !dbg !11215
  br label %if.end201

if.end201:                                        ; preds = %if.else192, %if.then189
  %116 = load i32, i32* %log_gain, align 4, !dbg !11216
  %sub202 = sub nsw i32 %116, 1, !dbg !11217
  %idxprom203 = sext i32 %sub202 to i64, !dbg !11218
  %117 = load i32, i32* %hebap, align 4, !dbg !11219
  %sub204 = sub nsw i32 %117, 8, !dbg !11220
  %idxprom205 = sext i32 %sub204 to i64, !dbg !11218
  %arrayidx206 = getelementptr inbounds [9 x [2 x i16]], [9 x [2 x i16]]* @ff_eac3_gaq_remap_2_4_a, i64 0, i64 %idxprom205, !dbg !11218
  %arrayidx207 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx206, i64 0, i64 %idxprom203, !dbg !11218
  %118 = load i16, i16* %arrayidx207, align 2, !dbg !11218
  %conv208 = sext i16 %118 to i64, !dbg !11218
  %119 = load i32, i32* %mant, align 4, !dbg !11221
  %conv209 = sext i32 %119 to i64, !dbg !11222
  %mul210 = mul nsw i64 %conv208, %conv209, !dbg !11223
  %shr = ashr i64 %mul210, 15, !dbg !11224
  %120 = load i32, i32* %b, align 4, !dbg !11225
  %conv211 = sext i32 %120 to i64, !dbg !11225
  %add = add nsw i64 %shr, %conv211, !dbg !11226
  %121 = load i32, i32* %mant, align 4, !dbg !11227
  %conv212 = sext i32 %121 to i64, !dbg !11227
  %add213 = add nsw i64 %conv212, %add, !dbg !11227
  %conv214 = trunc i64 %add213 to i32, !dbg !11227
  store i32 %conv214, i32* %mant, align 4, !dbg !11227
  br label %if.end232, !dbg !11228

if.else215:                                       ; preds = %land.lhs.true174, %for.body171
  %122 = load i32, i32* %bits, align 4, !dbg !11229
  %sub216 = sub nsw i32 24, %122, !dbg !11231
  %shl217 = shl i32 1, %sub216, !dbg !11232
  %123 = load i32, i32* %mant, align 4, !dbg !11233
  %mul218 = mul nsw i32 %123, %shl217, !dbg !11233
  store i32 %mul218, i32* %mant, align 4, !dbg !11233
  %124 = load i32, i32* %log_gain, align 4, !dbg !11234
  %tobool219 = icmp ne i32 %124, 0, !dbg !11234
  br i1 %tobool219, label %if.end231, label %if.then220, !dbg !11236

if.then220:                                       ; preds = %if.else215
  %125 = load i32, i32* %hebap, align 4, !dbg !11237
  %sub221 = sub nsw i32 %125, 8, !dbg !11239
  %idxprom222 = sext i32 %sub221 to i64, !dbg !11240
  %arrayidx223 = getelementptr inbounds [12 x i16], [12 x i16]* @ff_eac3_gaq_remap_1, i64 0, i64 %idxprom222, !dbg !11240
  %126 = load i16, i16* %arrayidx223, align 2, !dbg !11240
  %conv224 = sext i16 %126 to i64, !dbg !11240
  %127 = load i32, i32* %mant, align 4, !dbg !11241
  %conv225 = sext i32 %127 to i64, !dbg !11242
  %mul226 = mul nsw i64 %conv224, %conv225, !dbg !11243
  %shr227 = ashr i64 %mul226, 15, !dbg !11244
  %128 = load i32, i32* %mant, align 4, !dbg !11245
  %conv228 = sext i32 %128 to i64, !dbg !11245
  %add229 = add nsw i64 %conv228, %shr227, !dbg !11245
  %conv230 = trunc i64 %add229 to i32, !dbg !11245
  store i32 %conv230, i32* %mant, align 4, !dbg !11245
  br label %if.end231, !dbg !11246

if.end231:                                        ; preds = %if.then220, %if.else215
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end201
  %129 = load i32, i32* %mant, align 4, !dbg !11247
  %130 = load i32, i32* %blk, align 4, !dbg !11248
  %idxprom233 = sext i32 %130 to i64, !dbg !11249
  %131 = load i32, i32* %bin, align 4, !dbg !11250
  %idxprom234 = sext i32 %131 to i64, !dbg !11249
  %132 = load i32, i32* %ch.addr, align 4, !dbg !11251
  %idxprom235 = sext i32 %132 to i64, !dbg !11249
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11249
  %pre_mantissa236 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 69, !dbg !11252
  %arrayidx237 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa236, i64 0, i64 %idxprom235, !dbg !11249
  %arrayidx238 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx237, i64 0, i64 %idxprom234, !dbg !11249
  %arrayidx239 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx238, i64 0, i64 %idxprom233, !dbg !11249
  store i32 %129, i32* %arrayidx239, align 4, !dbg !11253
  br label %for.inc240, !dbg !11254

for.inc240:                                       ; preds = %if.end232
  %134 = load i32, i32* %blk, align 4, !dbg !11255
  %inc241 = add nsw i32 %134, 1, !dbg !11255
  store i32 %inc241, i32* %blk, align 4, !dbg !11255
  br label %for.cond168, !dbg !11257, !llvm.loop !11258

for.end242:                                       ; preds = %for.cond168
  br label %if.end243

if.end243:                                        ; preds = %for.end242, %for.end154
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %for.end128
  %135 = load i32, i32* %bin, align 4, !dbg !11260
  %idxprom245 = sext i32 %135 to i64, !dbg !11261
  %136 = load i32, i32* %ch.addr, align 4, !dbg !11262
  %idxprom246 = sext i32 %136 to i64, !dbg !11261
  %137 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !11261
  %pre_mantissa247 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %137, i32 0, i32 69, !dbg !11263
  %arrayidx248 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa247, i64 0, i64 %idxprom246, !dbg !11261
  %arrayidx249 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx248, i64 0, i64 %idxprom245, !dbg !11261
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx249, i32 0, i32 0, !dbg !11261
  call void @idct6(i32* %arraydecay), !dbg !11264
  br label %for.inc250, !dbg !11265

for.inc250:                                       ; preds = %if.end244
  %138 = load i32, i32* %bin, align 4, !dbg !11266
  %inc251 = add nsw i32 %138, 1, !dbg !11266
  store i32 %inc251, i32* %bin, align 4, !dbg !11266
  br label %for.cond97, !dbg !11268, !llvm.loop !11269

for.end252:                                       ; preds = %for.cond97
  ret void, !dbg !11271
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_lfg_get(%struct.AVLFG* %c) #4 !dbg !11272 {
entry:
  %c.addr = alloca %struct.AVLFG*, align 8
  store %struct.AVLFG* %c, %struct.AVLFG** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVLFG** %c.addr, metadata !11276, metadata !1849), !dbg !11277
  %0 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11278
  %index = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i32 0, i32 1, !dbg !11279
  %1 = load i32, i32* %index, align 4, !dbg !11279
  %sub = sub nsw i32 %1, 24, !dbg !11280
  %and = and i32 %sub, 63, !dbg !11281
  %idxprom = sext i32 %and to i64, !dbg !11282
  %2 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11282
  %state = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %2, i32 0, i32 0, !dbg !11283
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %state, i64 0, i64 %idxprom, !dbg !11282
  %3 = load i32, i32* %arrayidx, align 4, !dbg !11282
  %4 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11284
  %index1 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %4, i32 0, i32 1, !dbg !11285
  %5 = load i32, i32* %index1, align 4, !dbg !11285
  %sub2 = sub nsw i32 %5, 55, !dbg !11286
  %and3 = and i32 %sub2, 63, !dbg !11287
  %idxprom4 = sext i32 %and3 to i64, !dbg !11288
  %6 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11288
  %state5 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %6, i32 0, i32 0, !dbg !11289
  %arrayidx6 = getelementptr inbounds [64 x i32], [64 x i32]* %state5, i64 0, i64 %idxprom4, !dbg !11288
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !11288
  %add = add i32 %3, %7, !dbg !11290
  %8 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11291
  %index7 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %8, i32 0, i32 1, !dbg !11292
  %9 = load i32, i32* %index7, align 4, !dbg !11292
  %and8 = and i32 %9, 63, !dbg !11293
  %idxprom9 = sext i32 %and8 to i64, !dbg !11294
  %10 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11294
  %state10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %10, i32 0, i32 0, !dbg !11295
  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %state10, i64 0, i64 %idxprom9, !dbg !11294
  store i32 %add, i32* %arrayidx11, align 4, !dbg !11296
  %11 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11297
  %index12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %11, i32 0, i32 1, !dbg !11298
  %12 = load i32, i32* %index12, align 4, !dbg !11299
  %inc = add nsw i32 %12, 1, !dbg !11299
  store i32 %inc, i32* %index12, align 4, !dbg !11299
  %and13 = and i32 %12, 63, !dbg !11300
  %idxprom14 = sext i32 %and13 to i64, !dbg !11301
  %13 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !11301
  %state15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %13, i32 0, i32 0, !dbg !11302
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %state15, i64 0, i64 %idxprom14, !dbg !11301
  %14 = load i32, i32* %arrayidx16, align 4, !dbg !11301
  ret i32 %14, !dbg !11303
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !11304 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7544, metadata !1849), !dbg !11307
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !11309, metadata !1849), !dbg !11310
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11311, metadata !1849), !dbg !11312
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11313, metadata !1849), !dbg !11314
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !11315, metadata !1849), !dbg !11316
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11317
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !11318
  %1 = load i32, i32* %index, align 8, !dbg !11318
  store i32 %1, i32* %re_index, align 4, !dbg !11316
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !11319, metadata !1849), !dbg !11320
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !11321, metadata !1849), !dbg !11322
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11323
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !11324
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !11324
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !11322
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11325
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !11326
  %5 = load i8*, i8** %buffer, align 8, !dbg !11326
  %6 = load i32, i32* %re_index, align 4, !dbg !11327
  %shr = lshr i32 %6, 3, !dbg !11328
  %idx.ext = zext i32 %shr to i64, !dbg !11329
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !11329
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !11330
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !11330
  %8 = load i32, i32* %l, align 1, !dbg !11330
  store i32 %8, i32* %x.addr.i, align 4, !dbg !11331
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !11332
  %shl.i = shl i32 %9, 8, !dbg !11333
  %and.i = and i32 %shl.i, 65280, !dbg !11334
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !11335
  %shr.i = lshr i32 %10, 8, !dbg !11336
  %and1.i = and i32 %shr.i, 255, !dbg !11337
  %or.i = or i32 %and.i, %and1.i, !dbg !11338
  %shl2.i = shl i32 %or.i, 16, !dbg !11339
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !11340
  %shr3.i = lshr i32 %11, 16, !dbg !11341
  %shl4.i = shl i32 %shr3.i, 8, !dbg !11342
  %and5.i = and i32 %shl4.i, 65280, !dbg !11343
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !11344
  %shr6.i = lshr i32 %12, 16, !dbg !11345
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !11346
  %and8.i = and i32 %shr7.i, 255, !dbg !11347
  %or9.i = or i32 %and5.i, %and8.i, !dbg !11348
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !11349
  %13 = load i32, i32* %re_index, align 4, !dbg !11350
  %and = and i32 %13, 7, !dbg !11351
  %shl = shl i32 %or10.i, %and, !dbg !11352
  store i32 %shl, i32* %re_cache, align 4, !dbg !11353
  %14 = load i32, i32* %re_cache, align 4, !dbg !11354
  %15 = load i32, i32* %n.addr, align 4, !dbg !11355
  %conv = trunc i32 %15 to i8, !dbg !11355
  %call4 = call i32 @NEG_SSR32(i32 %14, i8 signext %conv), !dbg !11356
  store i32 %call4, i32* %tmp, align 4, !dbg !11357
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !11358
  %17 = load i32, i32* %re_index, align 4, !dbg !11359
  %18 = load i32, i32* %n.addr, align 4, !dbg !11360
  %add = add i32 %17, %18, !dbg !11361
  %cmp = icmp ugt i32 %16, %add, !dbg !11362
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11363

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !11364
  %20 = load i32, i32* %n.addr, align 4, !dbg !11366
  %add6 = add i32 %19, %20, !dbg !11367
  br label %cond.end, !dbg !11368

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !11369
  br label %cond.end, !dbg !11371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !11372
  store i32 %cond, i32* %re_index, align 4, !dbg !11374
  %22 = load i32, i32* %re_index, align 4, !dbg !11375
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11376
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !11377
  store i32 %22, i32* %index7, align 8, !dbg !11378
  %24 = load i32, i32* %tmp, align 4, !dbg !11379
  ret i32 %24, !dbg !11380
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_SSR32(i32 %a, i8 signext %s) #4 !dbg !11381 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11384, metadata !1849), !dbg !11385
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !11386, metadata !1849), !dbg !11387
  %0 = load i32, i32* %a.addr, align 4, !dbg !11388
  %1 = load i8, i8* %s.addr, align 1, !dbg !11389
  %conv = sext i8 %1 to i32, !dbg !11389
  %sub = sub nsw i32 0, %conv, !dbg !11390
  %conv1 = trunc i32 %sub to i8, !dbg !11391
  %2 = call i32 asm "sarl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !11388, !srcloc !11392
  store i32 %2, i32* %a.addr, align 4, !dbg !11388
  %3 = load i32, i32* %a.addr, align 4, !dbg !11393
  ret i32 %3, !dbg !11394
}

; Function Attrs: nounwind uwtable
define internal void @idct6(i32* %pre_mant) #1 !dbg !11395 {
entry:
  %pre_mant.addr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %even0 = alloca i32, align 4
  %even1 = alloca i32, align 4
  %even2 = alloca i32, align 4
  %odd0 = alloca i32, align 4
  %odd1 = alloca i32, align 4
  %odd2 = alloca i32, align 4
  store i32* %pre_mant, i32** %pre_mant.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pre_mant.addr, metadata !11398, metadata !1849), !dbg !11399
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11400, metadata !1849), !dbg !11401
  call void @llvm.dbg.declare(metadata i32* %even0, metadata !11402, metadata !1849), !dbg !11403
  call void @llvm.dbg.declare(metadata i32* %even1, metadata !11404, metadata !1849), !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %even2, metadata !11406, metadata !1849), !dbg !11407
  call void @llvm.dbg.declare(metadata i32* %odd0, metadata !11408, metadata !1849), !dbg !11409
  call void @llvm.dbg.declare(metadata i32* %odd1, metadata !11410, metadata !1849), !dbg !11411
  call void @llvm.dbg.declare(metadata i32* %odd2, metadata !11412, metadata !1849), !dbg !11413
  %0 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11414
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 1, !dbg !11414
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11414
  %2 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11415
  %arrayidx7 = getelementptr inbounds i32, i32* %2, i64 3, !dbg !11415
  %3 = load i32, i32* %arrayidx7, align 4, !dbg !11415
  %sub = sub nsw i32 %1, %3, !dbg !11416
  %4 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11417
  %arrayidx8 = getelementptr inbounds i32, i32* %4, i64 5, !dbg !11417
  %5 = load i32, i32* %arrayidx8, align 4, !dbg !11417
  %sub9 = sub nsw i32 %sub, %5, !dbg !11418
  store i32 %sub9, i32* %odd1, align 4, !dbg !11419
  %6 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11420
  %arrayidx10 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !11420
  %7 = load i32, i32* %arrayidx10, align 4, !dbg !11420
  %conv = sext i32 %7 to i64, !dbg !11420
  %mul = mul nsw i64 %conv, 10273905, !dbg !11421
  %shr = ashr i64 %mul, 23, !dbg !11422
  %conv11 = trunc i64 %shr to i32, !dbg !11423
  store i32 %conv11, i32* %even2, align 4, !dbg !11424
  %8 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11425
  %arrayidx12 = getelementptr inbounds i32, i32* %8, i64 4, !dbg !11425
  %9 = load i32, i32* %arrayidx12, align 4, !dbg !11425
  %conv13 = sext i32 %9 to i64, !dbg !11425
  %mul14 = mul nsw i64 %conv13, 11863283, !dbg !11426
  %shr15 = ashr i64 %mul14, 23, !dbg !11427
  %conv16 = trunc i64 %shr15 to i32, !dbg !11428
  store i32 %conv16, i32* %tmp, align 4, !dbg !11429
  %10 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11430
  %arrayidx17 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !11430
  %11 = load i32, i32* %arrayidx17, align 4, !dbg !11430
  %12 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11431
  %arrayidx18 = getelementptr inbounds i32, i32* %12, i64 5, !dbg !11431
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !11431
  %add = add nsw i32 %11, %13, !dbg !11432
  %conv19 = sext i32 %add to i64, !dbg !11433
  %mul20 = mul nsw i64 %conv19, 3070444, !dbg !11434
  %shr21 = ashr i64 %mul20, 23, !dbg !11435
  %conv22 = trunc i64 %shr21 to i32, !dbg !11436
  store i32 %conv22, i32* %odd0, align 4, !dbg !11437
  %14 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11438
  %arrayidx23 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !11438
  %15 = load i32, i32* %arrayidx23, align 4, !dbg !11438
  %16 = load i32, i32* %tmp, align 4, !dbg !11439
  %shr24 = ashr i32 %16, 1, !dbg !11440
  %add25 = add nsw i32 %15, %shr24, !dbg !11441
  store i32 %add25, i32* %even0, align 4, !dbg !11442
  %17 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11443
  %arrayidx26 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !11443
  %18 = load i32, i32* %arrayidx26, align 4, !dbg !11443
  %19 = load i32, i32* %tmp, align 4, !dbg !11444
  %sub27 = sub nsw i32 %18, %19, !dbg !11445
  store i32 %sub27, i32* %even1, align 4, !dbg !11446
  %20 = load i32, i32* %even0, align 4, !dbg !11447
  store i32 %20, i32* %tmp, align 4, !dbg !11448
  %21 = load i32, i32* %tmp, align 4, !dbg !11449
  %22 = load i32, i32* %even2, align 4, !dbg !11450
  %add28 = add nsw i32 %21, %22, !dbg !11451
  store i32 %add28, i32* %even0, align 4, !dbg !11452
  %23 = load i32, i32* %tmp, align 4, !dbg !11453
  %24 = load i32, i32* %even2, align 4, !dbg !11454
  %sub29 = sub nsw i32 %23, %24, !dbg !11455
  store i32 %sub29, i32* %even2, align 4, !dbg !11456
  %25 = load i32, i32* %odd0, align 4, !dbg !11457
  store i32 %25, i32* %tmp, align 4, !dbg !11458
  %26 = load i32, i32* %tmp, align 4, !dbg !11459
  %27 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11460
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 1, !dbg !11460
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !11460
  %add31 = add nsw i32 %26, %28, !dbg !11461
  %29 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11462
  %arrayidx32 = getelementptr inbounds i32, i32* %29, i64 3, !dbg !11462
  %30 = load i32, i32* %arrayidx32, align 4, !dbg !11462
  %add33 = add nsw i32 %add31, %30, !dbg !11463
  store i32 %add33, i32* %odd0, align 4, !dbg !11464
  %31 = load i32, i32* %tmp, align 4, !dbg !11465
  %32 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11466
  %arrayidx34 = getelementptr inbounds i32, i32* %32, i64 5, !dbg !11466
  %33 = load i32, i32* %arrayidx34, align 4, !dbg !11466
  %add35 = add nsw i32 %31, %33, !dbg !11467
  %34 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11468
  %arrayidx36 = getelementptr inbounds i32, i32* %34, i64 3, !dbg !11468
  %35 = load i32, i32* %arrayidx36, align 4, !dbg !11468
  %sub37 = sub nsw i32 %add35, %35, !dbg !11469
  store i32 %sub37, i32* %odd2, align 4, !dbg !11470
  %36 = load i32, i32* %even0, align 4, !dbg !11471
  %37 = load i32, i32* %odd0, align 4, !dbg !11472
  %add38 = add nsw i32 %36, %37, !dbg !11473
  %38 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11474
  %arrayidx39 = getelementptr inbounds i32, i32* %38, i64 0, !dbg !11474
  store i32 %add38, i32* %arrayidx39, align 4, !dbg !11475
  %39 = load i32, i32* %even1, align 4, !dbg !11476
  %40 = load i32, i32* %odd1, align 4, !dbg !11477
  %add40 = add nsw i32 %39, %40, !dbg !11478
  %41 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11479
  %arrayidx41 = getelementptr inbounds i32, i32* %41, i64 1, !dbg !11479
  store i32 %add40, i32* %arrayidx41, align 4, !dbg !11480
  %42 = load i32, i32* %even2, align 4, !dbg !11481
  %43 = load i32, i32* %odd2, align 4, !dbg !11482
  %add42 = add nsw i32 %42, %43, !dbg !11483
  %44 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11484
  %arrayidx43 = getelementptr inbounds i32, i32* %44, i64 2, !dbg !11484
  store i32 %add42, i32* %arrayidx43, align 4, !dbg !11485
  %45 = load i32, i32* %even2, align 4, !dbg !11486
  %46 = load i32, i32* %odd2, align 4, !dbg !11487
  %sub44 = sub nsw i32 %45, %46, !dbg !11488
  %47 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11489
  %arrayidx45 = getelementptr inbounds i32, i32* %47, i64 3, !dbg !11489
  store i32 %sub44, i32* %arrayidx45, align 4, !dbg !11490
  %48 = load i32, i32* %even1, align 4, !dbg !11491
  %49 = load i32, i32* %odd1, align 4, !dbg !11492
  %sub46 = sub nsw i32 %48, %49, !dbg !11493
  %50 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11494
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 4, !dbg !11494
  store i32 %sub46, i32* %arrayidx47, align 4, !dbg !11495
  %51 = load i32, i32* %even0, align 4, !dbg !11496
  %52 = load i32, i32* %odd0, align 4, !dbg !11497
  %sub48 = sub nsw i32 %51, %52, !dbg !11498
  %53 = load i32*, i32** %pre_mant.addr, align 8, !dbg !11499
  %arrayidx49 = getelementptr inbounds i32, i32* %53, i64 5, !dbg !11499
  store i32 %sub48, i32* %arrayidx49, align 4, !dbg !11500
  ret void, !dbg !11501
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #9 !dbg !11502 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon.0, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11505, metadata !1849), !dbg !11506
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11507, metadata !1849), !dbg !11508
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !11509, metadata !1849), !dbg !11510
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11511
  %conv = zext i32 %0 to i64, !dbg !11511
  %sub = sub i64 32, %conv, !dbg !11512
  %conv1 = trunc i64 %sub to i32, !dbg !11513
  store i32 %conv1, i32* %shift, align 4, !dbg !11510
  call void @llvm.dbg.declare(metadata %union.anon.0* %v, metadata !11514, metadata !1849), !dbg !11519
  %u = bitcast %union.anon.0* %v to i32*, !dbg !11520
  %1 = load i32, i32* %val.addr, align 4, !dbg !11521
  %2 = load i32, i32* %shift, align 4, !dbg !11522
  %shl = shl i32 %1, %2, !dbg !11523
  store i32 %shl, i32* %u, align 4, !dbg !11520
  %s = bitcast %union.anon.0* %v to i32*, !dbg !11524
  %3 = load i32, i32* %s, align 4, !dbg !11524
  %4 = load i32, i32* %shift, align 4, !dbg !11525
  %shr = ashr i32 %3, %4, !dbg !11526
  ret i32 %shr, !dbg !11527
}

; Function Attrs: nounwind
declare float @sqrtf(float) #8

declare void @ff_mdct_end_fixed_32(%struct.FFTContext*) #2

declare void @av_freep(i8*) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1843, !1844}
!llvm.ident = !{!1845}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1014, globals: !1048)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_fixed.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !915, !919, !930, !938, !948, !960, !967, !977, !983, !989, !995, !1001, !1007}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !910, line: 77, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914}
!912 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!914 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !910, line: 83, size: 32, align: 32, elements: !916)
!916 = !{!917, !918}
!917 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!918 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMatrixEncoding", file: !920, line: 114, size: 32, align: 32, elements: !921)
!920 = !DIFile(filename: "./libavutil/channel_layout.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929}
!922 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NONE", value: 0)
!923 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBY", value: 1)
!924 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLII", value: 2)
!925 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIX", value: 3)
!926 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIZ", value: 4)
!927 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYEX", value: 5)
!928 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYHEADPHONE", value: 6)
!929 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NB", value: 7)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDownmixType", file: !931, line: 44, size: 32, align: 32, elements: !932)
!931 = !DIFile(filename: "./libavutil/downmix_info.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!932 = !{!933, !934, !935, !936, !937}
!933 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_UNKNOWN", value: 0)
!934 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_LORO", value: 1)
!935 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_LTRT", value: 2)
!936 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_DPLII", value: 3)
!937 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_NB", value: 4)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 30, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavcodec/aac_ac3_parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!940 = !{!941, !942, !943, !944, !945, !946, !947}
!941 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_SYNC", value: -16976906)
!942 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_BSID", value: -33754122)
!943 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_SAMPLE_RATE", value: -50531338)
!944 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_FRAME_SIZE", value: -67308554)
!945 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_FRAME_TYPE", value: -84085770)
!946 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_CRC", value: -100862986)
!947 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_CHANNEL_CFG", value: -117640202)
!948 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !949, line: 49, size: 32, align: 32, elements: !950)
!949 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959}
!951 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!952 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!953 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!954 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!955 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!956 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!957 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!958 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!959 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!960 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 209, size: 32, align: 32, elements: !962)
!961 = !DIFile(filename: "libavcodec/ac3.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!962 = !{!963, !964, !965, !966}
!963 = !DIEnumerator(name: "EAC3_FRAME_TYPE_INDEPENDENT", value: 0)
!964 = !DIEnumerator(name: "EAC3_FRAME_TYPE_DEPENDENT", value: 1)
!965 = !DIEnumerator(name: "EAC3_FRAME_TYPE_AC3_CONVERT", value: 2)
!966 = !DIEnumerator(name: "EAC3_FRAME_TYPE_RESERVED", value: 3)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 123, size: 32, align: 32, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976}
!969 = !DIEnumerator(name: "AC3_CHMODE_DUALMONO", value: 0)
!970 = !DIEnumerator(name: "AC3_CHMODE_MONO", value: 1)
!971 = !DIEnumerator(name: "AC3_CHMODE_STEREO", value: 2)
!972 = !DIEnumerator(name: "AC3_CHMODE_3F", value: 3)
!973 = !DIEnumerator(name: "AC3_CHMODE_2F1R", value: 4)
!974 = !DIEnumerator(name: "AC3_CHMODE_3F1R", value: 5)
!975 = !DIEnumerator(name: "AC3_CHMODE_2F2R", value: 6)
!976 = !DIEnumerator(name: "AC3_CHMODE_3F2R", value: 7)
!977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbySurroundMode", file: !961, line: 135, size: 32, align: 32, elements: !978)
!978 = !{!979, !980, !981, !982}
!979 = !DIEnumerator(name: "AC3_DSURMOD_NOTINDICATED", value: 0)
!980 = !DIEnumerator(name: "AC3_DSURMOD_OFF", value: 1)
!981 = !DIEnumerator(name: "AC3_DSURMOD_ON", value: 2)
!982 = !DIEnumerator(name: "AC3_DSURMOD_RESERVED", value: 3)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbyHeadphoneMode", file: !961, line: 151, size: 32, align: 32, elements: !984)
!984 = !{!985, !986, !987, !988}
!985 = !DIEnumerator(name: "AC3_DHEADPHONMOD_NOTINDICATED", value: 0)
!986 = !DIEnumerator(name: "AC3_DHEADPHONMOD_OFF", value: 1)
!987 = !DIEnumerator(name: "AC3_DHEADPHONMOD_ON", value: 2)
!988 = !DIEnumerator(name: "AC3_DHEADPHONMOD_RESERVED", value: 3)
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3PreferredStereoDownmixMode", file: !961, line: 159, size: 32, align: 32, elements: !990)
!990 = !{!991, !992, !993, !994}
!991 = !DIEnumerator(name: "AC3_DMIXMOD_NOTINDICATED", value: 0)
!992 = !DIEnumerator(name: "AC3_DMIXMOD_LTRT", value: 1)
!993 = !DIEnumerator(name: "AC3_DMIXMOD_LORO", value: 2)
!994 = !DIEnumerator(name: "AC3_DMIXMOD_DPLII", value: 3)
!995 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbySurroundEXMode", file: !961, line: 143, size: 32, align: 32, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "AC3_DSUREXMOD_NOTINDICATED", value: 0)
!998 = !DIEnumerator(name: "AC3_DSUREXMOD_OFF", value: 1)
!999 = !DIEnumerator(name: "AC3_DSUREXMOD_ON", value: 2)
!1000 = !DIEnumerator(name: "AC3_DSUREXMOD_PLIIZ", value: 3)
!1001 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 115, size: 32, align: 32, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006}
!1003 = !DIEnumerator(name: "DBA_REUSE", value: 0)
!1004 = !DIEnumerator(name: "DBA_NEW", value: 1)
!1005 = !DIEnumerator(name: "DBA_NONE", value: 2)
!1006 = !DIEnumerator(name: "DBA_RESERVED", value: 3)
!1007 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1008, line: 50, size: 32, align: 32, elements: !1009)
!1008 = !DIFile(filename: "libavcodec/eac3dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1009 = !{!1010, !1011, !1012, !1013}
!1010 = !DIEnumerator(name: "EAC3_GAQ_NO", value: 0)
!1011 = !DIEnumerator(name: "EAC3_GAQ_12", value: 1)
!1012 = !DIEnumerator(name: "EAC3_GAQ_14", value: 2)
!1013 = !DIEnumerator(name: "EAC3_GAQ_124", value: 3)
!1014 = !{!1015, !1016, !1017, !1026, !1027, !1029, !1030, !1034, !1035, !1041, !1040, !1043, !1045, !1047}
!1015 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1016 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1020, line: 222, size: 16, align: 8, elements: !1021)
!1020 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1019, file: !1020, line: 222, baseType: !1023, size: 16, align: 16)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1024, line: 49, baseType: !1025)
!1024 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1025 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHORTFLOAT", file: !961, line: 78, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1024, line: 37, baseType: !1033)
!1033 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1034 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1020, line: 221, size: 32, align: 8, elements: !1038)
!1038 = !{!1039}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1037, file: !1020, line: 221, baseType: !1040, size: 32, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1024, line: 51, baseType: !1016)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1024, line: 48, baseType: !1042)
!1042 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1024, line: 40, baseType: !1044)
!1044 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1024, line: 55, baseType: !1046)
!1046 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1024, line: 38, baseType: !1015)
!1048 = !{!1049, !1801, !1802, !1806, !1812, !1816, !1818, !1822, !1823, !1827, !1832, !1836, !1838, !1840}
!1049 = distinct !DIGlobalVariable(name: "ff_ac3_fixed_decoder", scope: !0, file: !1050, line: 184, type: !1051, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_ac3_fixed_decoder)
!1050 = !DIFile(filename: "libavcodec/ac3dec_fixed.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1053)
!1053 = !{!1054, !1058, !1059, !1060, !1061, !1062, !1071, !1074, !1077, !1080, !1083, !1084, !1157, !1165, !1166, !1167, !1169, !1716, !1722, !1730, !1734, !1735, !1772, !1776, !1780, !1781, !1785, !1789, !1790, !1794, !1795, !1796}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1052, file: !14, line: 3475, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1052, file: !14, line: 3480, baseType: !1055, size: 64, align: 64, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1052, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1052, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1052, file: !14, line: 3487, baseType: !1015, size: 32, align: 32, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1052, file: !14, line: 3488, baseType: !1063, size: 64, align: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1066, line: 61, baseType: !1067)
!1066 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1066, line: 58, size: 64, align: 32, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1067, file: !1066, line: 59, baseType: !1015, size: 32, align: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1067, file: !1066, line: 60, baseType: !1015, size: 32, align: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1052, file: !14, line: 3489, baseType: !1072, size: 64, align: 64, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1052, file: !14, line: 3490, baseType: !1075, size: 64, align: 64, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1052, file: !14, line: 3491, baseType: !1078, size: 64, align: 64, offset: 448)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1052, file: !14, line: 3492, baseType: !1081, size: 64, align: 64, offset: 512)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1052, file: !14, line: 3493, baseType: !1041, size: 8, align: 8, offset: 576)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1052, file: !14, line: 3494, baseType: !1085, size: 64, align: 64, offset: 640)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1089)
!1089 = !{!1090, !1091, !1095, !1116, !1117, !1118, !1119, !1123, !1129, !1131, !1135}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1088, file: !713, line: 72, baseType: !1055, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1088, file: !713, line: 78, baseType: !1092, size: 64, align: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64, align: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1055, !1029}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1088, file: !713, line: 85, baseType: !1096, size: 64, align: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1112, !1113, !1114, !1115}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1098, file: !691, line: 247, baseType: !1055, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1098, file: !691, line: 253, baseType: !1055, size: 64, align: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1098, file: !691, line: 259, baseType: !1015, size: 32, align: 32, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1098, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1098, file: !691, line: 271, baseType: !1105, size: 64, align: 64, offset: 192)
!1105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1098, file: !691, line: 265, size: 64, align: 64, elements: !1106)
!1106 = !{!1107, !1108, !1110, !1111}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1105, file: !691, line: 266, baseType: !1043, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1105, file: !691, line: 267, baseType: !1109, size: 64, align: 64)
!1109 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1105, file: !691, line: 268, baseType: !1055, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1105, file: !691, line: 270, baseType: !1065, size: 64, align: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1098, file: !691, line: 272, baseType: !1109, size: 64, align: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1098, file: !691, line: 273, baseType: !1109, size: 64, align: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1098, file: !691, line: 275, baseType: !1015, size: 32, align: 32, offset: 384)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1098, file: !691, line: 300, baseType: !1055, size: 64, align: 64, offset: 448)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1088, file: !713, line: 93, baseType: !1015, size: 32, align: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1088, file: !713, line: 99, baseType: !1015, size: 32, align: 32, offset: 224)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1088, file: !713, line: 108, baseType: !1015, size: 32, align: 32, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1088, file: !713, line: 113, baseType: !1120, size: 64, align: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!1029, !1029, !1029}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1088, file: !713, line: 123, baseType: !1124, size: 64, align: 64, offset: 384)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!1127, !1127}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1088, file: !713, line: 130, baseType: !1130, size: 32, align: 32, offset: 448)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1088, file: !713, line: 136, baseType: !1132, size: 64, align: 64, offset: 512)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!1130, !1029}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1088, file: !713, line: 142, baseType: !1136, size: 64, align: 64, offset: 576)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64, align: 64)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!1015, !1139, !1029, !1055, !1015}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1142)
!1142 = !{!1143, !1155, !1156}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1141, file: !691, line: 360, baseType: !1144, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153, !1154}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1147, file: !691, line: 307, baseType: !1055, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1147, file: !691, line: 313, baseType: !1109, size: 64, align: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1147, file: !691, line: 313, baseType: !1109, size: 64, align: 64, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1147, file: !691, line: 318, baseType: !1109, size: 64, align: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1147, file: !691, line: 318, baseType: !1109, size: 64, align: 64, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1147, file: !691, line: 323, baseType: !1015, size: 32, align: 32, offset: 320)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1141, file: !691, line: 364, baseType: !1015, size: 32, align: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1141, file: !691, line: 368, baseType: !1015, size: 32, align: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1052, file: !14, line: 3495, baseType: !1158, size: 64, align: 64, offset: 704)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1161, file: !14, line: 3402, baseType: !1015, size: 32, align: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1161, file: !14, line: 3403, baseType: !1055, size: 64, align: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1052, file: !14, line: 3507, baseType: !1055, size: 64, align: 64, offset: 768)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1052, file: !14, line: 3516, baseType: !1015, size: 32, align: 32, offset: 832)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1052, file: !14, line: 3517, baseType: !1168, size: 64, align: 64, offset: 896)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1052, file: !14, line: 3527, baseType: !1170, size: 64, align: 64, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1015, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1176)
!1176 = !{!1177, !1178, !1179, !1180, !1183, !1184, !1185, !1186, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1466, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1654, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1175, file: !14, line: 1561, baseType: !1085, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1175, file: !14, line: 1562, baseType: !1015, size: 32, align: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1175, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1175, file: !14, line: 1565, baseType: !1181, size: 64, align: 64, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64, align: 64)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1175, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1175, file: !14, line: 1581, baseType: !1016, size: 32, align: 32, offset: 224)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1175, file: !14, line: 1583, baseType: !1029, size: 64, align: 64, offset: 256)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1175, file: !14, line: 1591, baseType: !1187, size: 64, align: 64, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1189, line: 129, size: 1664, align: 64, elements: !1190)
!1189 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1190 = !{!1191, !1192, !1193, !1194, !1292, !1313, !1314, !1343, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1188, file: !1189, line: 136, baseType: !1015, size: 32, align: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1188, file: !1189, line: 151, baseType: !1015, size: 32, align: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1188, file: !1189, line: 157, baseType: !1015, size: 32, align: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1188, file: !1189, line: 159, baseType: !1195, size: 64, align: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1198)
!1198 = !{!1199, !1204, !1206, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1244, !1246, !1247, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1280, !1281, !1282, !1283, !1284, !1285, !1288, !1289, !1290, !1291}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1197, file: !744, line: 282, baseType: !1200, size: 512, align: 64)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 512, align: 64, elements: !1202)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1202 = !{!1203}
!1203 = !DISubrange(count: 8)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1197, file: !744, line: 299, baseType: !1205, size: 256, align: 32, offset: 512)
!1205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, align: 32, elements: !1202)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1197, file: !744, line: 315, baseType: !1207, size: 64, align: 64, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1197, file: !744, line: 326, baseType: !1015, size: 32, align: 32, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1197, file: !744, line: 326, baseType: !1015, size: 32, align: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1197, file: !744, line: 334, baseType: !1015, size: 32, align: 32, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1197, file: !744, line: 341, baseType: !1015, size: 32, align: 32, offset: 928)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1197, file: !744, line: 346, baseType: !1015, size: 32, align: 32, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1197, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1197, file: !744, line: 356, baseType: !1065, size: 64, align: 32, offset: 1024)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1197, file: !744, line: 361, baseType: !1043, size: 64, align: 64, offset: 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1197, file: !744, line: 369, baseType: !1043, size: 64, align: 64, offset: 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1197, file: !744, line: 377, baseType: !1043, size: 64, align: 64, offset: 1216)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1197, file: !744, line: 382, baseType: !1015, size: 32, align: 32, offset: 1280)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1197, file: !744, line: 386, baseType: !1015, size: 32, align: 32, offset: 1312)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1197, file: !744, line: 391, baseType: !1015, size: 32, align: 32, offset: 1344)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1197, file: !744, line: 396, baseType: !1029, size: 64, align: 64, offset: 1408)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1197, file: !744, line: 403, baseType: !1223, size: 512, align: 64, offset: 1472)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 512, align: 64, elements: !1202)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1197, file: !744, line: 410, baseType: !1015, size: 32, align: 32, offset: 1984)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1197, file: !744, line: 415, baseType: !1015, size: 32, align: 32, offset: 2016)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1197, file: !744, line: 420, baseType: !1015, size: 32, align: 32, offset: 2048)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1197, file: !744, line: 425, baseType: !1015, size: 32, align: 32, offset: 2080)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1197, file: !744, line: 435, baseType: !1043, size: 64, align: 64, offset: 2112)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1197, file: !744, line: 440, baseType: !1015, size: 32, align: 32, offset: 2176)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1197, file: !744, line: 445, baseType: !1045, size: 64, align: 64, offset: 2240)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1197, file: !744, line: 459, baseType: !1232, size: 512, align: 64, offset: 2304)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1233, size: 512, align: 64, elements: !1202)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1235, line: 94, baseType: !1236)
!1235 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1235, line: 81, size: 192, align: 64, elements: !1237)
!1237 = !{!1238, !1242, !1243}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1236, file: !1235, line: 82, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1235, line: 73, baseType: !1241)
!1241 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1235, line: 73, flags: DIFlagFwdDecl)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1236, file: !1235, line: 89, baseType: !1201, size: 64, align: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1236, file: !1235, line: 93, baseType: !1015, size: 32, align: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1197, file: !744, line: 473, baseType: !1245, size: 64, align: 64, offset: 2816)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1197, file: !744, line: 477, baseType: !1015, size: 32, align: 32, offset: 2880)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1197, file: !744, line: 479, baseType: !1248, size: 64, align: 64, offset: 2944)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1252)
!1252 = !{!1253, !1254, !1255, !1256, !1261}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1251, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1251, file: !744, line: 203, baseType: !1201, size: 64, align: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1251, file: !744, line: 204, baseType: !1015, size: 32, align: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1251, file: !744, line: 205, baseType: !1257, size: 64, align: 64, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1259, line: 86, baseType: !1260)
!1259 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1259, line: 86, flags: DIFlagFwdDecl)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1251, file: !744, line: 206, baseType: !1233, size: 64, align: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1197, file: !744, line: 480, baseType: !1015, size: 32, align: 32, offset: 3008)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1197, file: !744, line: 505, baseType: !1015, size: 32, align: 32, offset: 3040)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1197, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1197, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1197, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1197, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1197, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1197, file: !744, line: 532, baseType: !1043, size: 64, align: 64, offset: 3264)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1197, file: !744, line: 539, baseType: !1043, size: 64, align: 64, offset: 3328)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1197, file: !744, line: 547, baseType: !1043, size: 64, align: 64, offset: 3392)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1197, file: !744, line: 554, baseType: !1257, size: 64, align: 64, offset: 3456)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1197, file: !744, line: 563, baseType: !1015, size: 32, align: 32, offset: 3520)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1197, file: !744, line: 572, baseType: !1015, size: 32, align: 32, offset: 3552)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1197, file: !744, line: 581, baseType: !1015, size: 32, align: 32, offset: 3584)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1197, file: !744, line: 588, baseType: !1277, size: 64, align: 64, offset: 3648)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1024, line: 36, baseType: !1279)
!1279 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1197, file: !744, line: 593, baseType: !1015, size: 32, align: 32, offset: 3712)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1197, file: !744, line: 596, baseType: !1015, size: 32, align: 32, offset: 3744)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1197, file: !744, line: 599, baseType: !1233, size: 64, align: 64, offset: 3776)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1197, file: !744, line: 605, baseType: !1233, size: 64, align: 64, offset: 3840)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1197, file: !744, line: 616, baseType: !1233, size: 64, align: 64, offset: 3904)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1197, file: !744, line: 626, baseType: !1286, size: 64, align: 64, offset: 3968)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1287, line: 216, baseType: !1046)
!1287 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1197, file: !744, line: 627, baseType: !1286, size: 64, align: 64, offset: 4032)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1197, file: !744, line: 628, baseType: !1286, size: 64, align: 64, offset: 4096)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1197, file: !744, line: 629, baseType: !1286, size: 64, align: 64, offset: 4160)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1197, file: !744, line: 645, baseType: !1233, size: 64, align: 64, offset: 4224)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1188, file: !1189, line: 161, baseType: !1293, size: 64, align: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1189, line: 117, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1189, line: 100, size: 832, align: 64, elements: !1296)
!1296 = !{!1297, !1304, !1305, !1306, !1307, !1308, !1310, !1311, !1312}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1295, file: !1189, line: 105, baseType: !1298, size: 256, align: 64)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1299, size: 256, align: 64, elements: !1302)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64, align: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1235, line: 238, baseType: !1301)
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1235, line: 238, flags: DIFlagFwdDecl)
!1302 = !{!1303}
!1303 = !DISubrange(count: 4)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1295, file: !1189, line: 110, baseType: !1015, size: 32, align: 32, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1295, file: !1189, line: 111, baseType: !1015, size: 32, align: 32, offset: 288)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1295, file: !1189, line: 111, baseType: !1015, size: 32, align: 32, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1295, file: !1189, line: 112, baseType: !1205, size: 256, align: 32, offset: 352)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1295, file: !1189, line: 113, baseType: !1309, size: 128, align: 32, offset: 608)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 128, align: 32, elements: !1302)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1295, file: !1189, line: 114, baseType: !1015, size: 32, align: 32, offset: 736)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1295, file: !1189, line: 115, baseType: !1015, size: 32, align: 32, offset: 768)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1295, file: !1189, line: 116, baseType: !1015, size: 32, align: 32, offset: 800)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1188, file: !1189, line: 163, baseType: !1029, size: 64, align: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1188, file: !1189, line: 165, baseType: !1315, size: 128, align: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1189, line: 122, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1189, line: 119, size: 128, align: 64, elements: !1317)
!1317 = !{!1318, !1342}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1316, file: !1189, line: 120, baseType: !1319, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1338, !1339, !1340, !1341}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1321, file: !14, line: 1451, baseType: !1233, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1321, file: !14, line: 1461, baseType: !1043, size: 64, align: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1321, file: !14, line: 1467, baseType: !1043, size: 64, align: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1321, file: !14, line: 1468, baseType: !1201, size: 64, align: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1321, file: !14, line: 1469, baseType: !1015, size: 32, align: 32, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1321, file: !14, line: 1470, baseType: !1015, size: 32, align: 32, offset: 288)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1321, file: !14, line: 1474, baseType: !1015, size: 32, align: 32, offset: 320)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1321, file: !14, line: 1479, baseType: !1331, size: 64, align: 64, offset: 384)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64, align: 64)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1334)
!1334 = !{!1335, !1336, !1337}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1333, file: !14, line: 1412, baseType: !1201, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1333, file: !14, line: 1413, baseType: !1015, size: 32, align: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1333, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1321, file: !14, line: 1480, baseType: !1015, size: 32, align: 32, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1321, file: !14, line: 1486, baseType: !1043, size: 64, align: 64, offset: 512)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1321, file: !14, line: 1488, baseType: !1043, size: 64, align: 64, offset: 576)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1321, file: !14, line: 1497, baseType: !1043, size: 64, align: 64, offset: 640)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1316, file: !1189, line: 121, baseType: !1195, size: 64, align: 64, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1188, file: !1189, line: 166, baseType: !1344, size: 128, align: 64, offset: 448)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1189, line: 127, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1189, line: 124, size: 128, align: 64, elements: !1346)
!1346 = !{!1347, !1420}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1345, file: !1189, line: 125, baseType: !1348, size: 64, align: 64)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64, align: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1352)
!1352 = !{!1353, !1354, !1378, !1382, !1383, !1417, !1418, !1419}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1351, file: !14, line: 5751, baseType: !1085, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1351, file: !14, line: 5756, baseType: !1355, size: 64, align: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64, align: 64)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1358)
!1358 = !{!1359, !1360, !1363, !1364, !1365, !1369, !1373, !1377}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1357, file: !14, line: 5797, baseType: !1055, size: 64, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1357, file: !14, line: 5804, baseType: !1361, size: 64, align: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1357, file: !14, line: 5815, baseType: !1085, size: 64, align: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1357, file: !14, line: 5825, baseType: !1015, size: 32, align: 32, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1357, file: !14, line: 5826, baseType: !1366, size: 64, align: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1015, !1349}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1357, file: !14, line: 5827, baseType: !1370, size: 64, align: 64, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!1015, !1349, !1319}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1357, file: !14, line: 5828, baseType: !1374, size: 64, align: 64, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{null, !1349}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1357, file: !14, line: 5829, baseType: !1374, size: 64, align: 64, offset: 448)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1351, file: !14, line: 5762, baseType: !1379, size: 64, align: 64, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1381)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1351, file: !14, line: 5768, baseType: !1029, size: 64, align: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1351, file: !14, line: 5775, baseType: !1384, size: 64, align: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1386, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1386, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1386, file: !14, line: 3948, baseType: !1040, size: 32, align: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1386, file: !14, line: 3958, baseType: !1201, size: 64, align: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1386, file: !14, line: 3962, baseType: !1015, size: 32, align: 32, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1386, file: !14, line: 3968, baseType: !1015, size: 32, align: 32, offset: 224)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1386, file: !14, line: 3973, baseType: !1043, size: 64, align: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1386, file: !14, line: 3986, baseType: !1015, size: 32, align: 32, offset: 320)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1386, file: !14, line: 3999, baseType: !1015, size: 32, align: 32, offset: 352)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1386, file: !14, line: 4004, baseType: !1015, size: 32, align: 32, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1386, file: !14, line: 4005, baseType: !1015, size: 32, align: 32, offset: 416)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1386, file: !14, line: 4010, baseType: !1015, size: 32, align: 32, offset: 448)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1386, file: !14, line: 4011, baseType: !1015, size: 32, align: 32, offset: 480)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1386, file: !14, line: 4020, baseType: !1065, size: 64, align: 32, offset: 512)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1386, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1386, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1386, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1386, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1386, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1386, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1386, file: !14, line: 4039, baseType: !1015, size: 32, align: 32, offset: 768)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1386, file: !14, line: 4046, baseType: !1045, size: 64, align: 64, offset: 832)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1386, file: !14, line: 4050, baseType: !1015, size: 32, align: 32, offset: 896)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1386, file: !14, line: 4054, baseType: !1015, size: 32, align: 32, offset: 928)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1386, file: !14, line: 4061, baseType: !1015, size: 32, align: 32, offset: 960)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1386, file: !14, line: 4065, baseType: !1015, size: 32, align: 32, offset: 992)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1386, file: !14, line: 4073, baseType: !1015, size: 32, align: 32, offset: 1024)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1386, file: !14, line: 4080, baseType: !1015, size: 32, align: 32, offset: 1056)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1386, file: !14, line: 4084, baseType: !1015, size: 32, align: 32, offset: 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1351, file: !14, line: 5781, baseType: !1384, size: 64, align: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1351, file: !14, line: 5787, baseType: !1065, size: 64, align: 32, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1351, file: !14, line: 5793, baseType: !1065, size: 64, align: 32, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1345, file: !1189, line: 126, baseType: !1015, size: 32, align: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1188, file: !1189, line: 172, baseType: !1319, size: 64, align: 64, offset: 576)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1188, file: !1189, line: 177, baseType: !1201, size: 64, align: 64, offset: 640)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1188, file: !1189, line: 178, baseType: !1016, size: 32, align: 32, offset: 704)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1188, file: !1189, line: 180, baseType: !1029, size: 64, align: 64, offset: 768)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1188, file: !1189, line: 185, baseType: !1015, size: 32, align: 32, offset: 832)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1188, file: !1189, line: 190, baseType: !1029, size: 64, align: 64, offset: 896)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1188, file: !1189, line: 195, baseType: !1015, size: 32, align: 32, offset: 960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1188, file: !1189, line: 200, baseType: !1319, size: 64, align: 64, offset: 1024)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1188, file: !1189, line: 201, baseType: !1015, size: 32, align: 32, offset: 1088)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1188, file: !1189, line: 202, baseType: !1195, size: 64, align: 64, offset: 1152)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1188, file: !1189, line: 203, baseType: !1015, size: 32, align: 32, offset: 1216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1188, file: !1189, line: 205, baseType: !1015, size: 32, align: 32, offset: 1248)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1188, file: !1189, line: 206, baseType: !1015, size: 32, align: 32, offset: 1280)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1188, file: !1189, line: 209, baseType: !1286, size: 64, align: 64, offset: 1344)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1188, file: !1189, line: 212, baseType: !1286, size: 64, align: 64, offset: 1408)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1188, file: !1189, line: 213, baseType: !1195, size: 64, align: 64, offset: 1472)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1188, file: !1189, line: 215, baseType: !1015, size: 32, align: 32, offset: 1536)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1188, file: !1189, line: 217, baseType: !1015, size: 32, align: 32, offset: 1568)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1188, file: !1189, line: 220, baseType: !1015, size: 32, align: 32, offset: 1600)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1175, file: !14, line: 1598, baseType: !1029, size: 64, align: 64, offset: 384)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1175, file: !14, line: 1606, baseType: !1043, size: 64, align: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1175, file: !14, line: 1614, baseType: !1015, size: 32, align: 32, offset: 512)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1175, file: !14, line: 1622, baseType: !1015, size: 32, align: 32, offset: 544)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1175, file: !14, line: 1628, baseType: !1015, size: 32, align: 32, offset: 576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1175, file: !14, line: 1636, baseType: !1015, size: 32, align: 32, offset: 608)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1175, file: !14, line: 1643, baseType: !1015, size: 32, align: 32, offset: 640)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1175, file: !14, line: 1657, baseType: !1201, size: 64, align: 64, offset: 704)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1175, file: !14, line: 1658, baseType: !1015, size: 32, align: 32, offset: 768)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1175, file: !14, line: 1679, baseType: !1065, size: 64, align: 32, offset: 800)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1175, file: !14, line: 1688, baseType: !1015, size: 32, align: 32, offset: 864)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1175, file: !14, line: 1712, baseType: !1015, size: 32, align: 32, offset: 896)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1175, file: !14, line: 1729, baseType: !1015, size: 32, align: 32, offset: 928)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1175, file: !14, line: 1729, baseType: !1015, size: 32, align: 32, offset: 960)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1175, file: !14, line: 1744, baseType: !1015, size: 32, align: 32, offset: 992)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1175, file: !14, line: 1744, baseType: !1015, size: 32, align: 32, offset: 1024)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1175, file: !14, line: 1751, baseType: !1015, size: 32, align: 32, offset: 1056)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1175, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1175, file: !14, line: 1791, baseType: !1459, size: 64, align: 64, offset: 1152)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64, align: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{null, !1462, !1463, !1465, !1015, !1015, !1015}
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64, align: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1196)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1175, file: !14, line: 1808, baseType: !1467, size: 64, align: 64, offset: 1216)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!473, !1462, !1072}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1175, file: !14, line: 1816, baseType: !1015, size: 32, align: 32, offset: 1280)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1175, file: !14, line: 1825, baseType: !1034, size: 32, align: 32, offset: 1312)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1175, file: !14, line: 1830, baseType: !1015, size: 32, align: 32, offset: 1344)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1175, file: !14, line: 1838, baseType: !1034, size: 32, align: 32, offset: 1376)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1175, file: !14, line: 1846, baseType: !1015, size: 32, align: 32, offset: 1408)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1175, file: !14, line: 1851, baseType: !1015, size: 32, align: 32, offset: 1440)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1175, file: !14, line: 1861, baseType: !1034, size: 32, align: 32, offset: 1472)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1175, file: !14, line: 1868, baseType: !1034, size: 32, align: 32, offset: 1504)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1175, file: !14, line: 1875, baseType: !1034, size: 32, align: 32, offset: 1536)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1175, file: !14, line: 1882, baseType: !1034, size: 32, align: 32, offset: 1568)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1175, file: !14, line: 1889, baseType: !1034, size: 32, align: 32, offset: 1600)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1175, file: !14, line: 1896, baseType: !1034, size: 32, align: 32, offset: 1632)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1175, file: !14, line: 1903, baseType: !1034, size: 32, align: 32, offset: 1664)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1175, file: !14, line: 1910, baseType: !1015, size: 32, align: 32, offset: 1696)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1175, file: !14, line: 1915, baseType: !1015, size: 32, align: 32, offset: 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1175, file: !14, line: 1926, baseType: !1465, size: 64, align: 64, offset: 1792)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1175, file: !14, line: 1935, baseType: !1065, size: 64, align: 32, offset: 1856)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1175, file: !14, line: 1942, baseType: !1015, size: 32, align: 32, offset: 1920)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1175, file: !14, line: 1948, baseType: !1015, size: 32, align: 32, offset: 1952)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1175, file: !14, line: 1954, baseType: !1015, size: 32, align: 32, offset: 1984)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1175, file: !14, line: 1960, baseType: !1015, size: 32, align: 32, offset: 2016)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1175, file: !14, line: 1984, baseType: !1015, size: 32, align: 32, offset: 2048)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1175, file: !14, line: 1991, baseType: !1015, size: 32, align: 32, offset: 2080)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1175, file: !14, line: 1996, baseType: !1015, size: 32, align: 32, offset: 2112)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1175, file: !14, line: 2004, baseType: !1015, size: 32, align: 32, offset: 2144)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1175, file: !14, line: 2011, baseType: !1015, size: 32, align: 32, offset: 2176)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1175, file: !14, line: 2018, baseType: !1015, size: 32, align: 32, offset: 2208)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1175, file: !14, line: 2027, baseType: !1015, size: 32, align: 32, offset: 2240)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1175, file: !14, line: 2034, baseType: !1015, size: 32, align: 32, offset: 2272)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1175, file: !14, line: 2044, baseType: !1015, size: 32, align: 32, offset: 2304)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1175, file: !14, line: 2054, baseType: !1026, size: 64, align: 64, offset: 2368)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1175, file: !14, line: 2061, baseType: !1026, size: 64, align: 64, offset: 2432)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1175, file: !14, line: 2066, baseType: !1015, size: 32, align: 32, offset: 2496)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1175, file: !14, line: 2070, baseType: !1015, size: 32, align: 32, offset: 2528)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1175, file: !14, line: 2078, baseType: !1015, size: 32, align: 32, offset: 2560)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1175, file: !14, line: 2085, baseType: !1015, size: 32, align: 32, offset: 2592)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1175, file: !14, line: 2092, baseType: !1015, size: 32, align: 32, offset: 2624)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1175, file: !14, line: 2099, baseType: !1015, size: 32, align: 32, offset: 2656)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1175, file: !14, line: 2106, baseType: !1015, size: 32, align: 32, offset: 2688)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1175, file: !14, line: 2113, baseType: !1015, size: 32, align: 32, offset: 2720)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1175, file: !14, line: 2120, baseType: !1015, size: 32, align: 32, offset: 2752)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1175, file: !14, line: 2125, baseType: !1015, size: 32, align: 32, offset: 2784)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1175, file: !14, line: 2133, baseType: !1015, size: 32, align: 32, offset: 2816)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1175, file: !14, line: 2140, baseType: !1015, size: 32, align: 32, offset: 2848)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1175, file: !14, line: 2145, baseType: !1015, size: 32, align: 32, offset: 2880)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1175, file: !14, line: 2153, baseType: !1015, size: 32, align: 32, offset: 2912)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1175, file: !14, line: 2158, baseType: !1015, size: 32, align: 32, offset: 2944)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1175, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1175, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1175, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1175, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1175, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1175, file: !14, line: 2203, baseType: !1015, size: 32, align: 32, offset: 3136)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1175, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1175, file: !14, line: 2212, baseType: !1015, size: 32, align: 32, offset: 3200)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1175, file: !14, line: 2213, baseType: !1015, size: 32, align: 32, offset: 3232)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1175, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1175, file: !14, line: 2232, baseType: !1015, size: 32, align: 32, offset: 3296)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1175, file: !14, line: 2243, baseType: !1015, size: 32, align: 32, offset: 3328)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1175, file: !14, line: 2249, baseType: !1015, size: 32, align: 32, offset: 3360)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1175, file: !14, line: 2256, baseType: !1015, size: 32, align: 32, offset: 3392)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1175, file: !14, line: 2263, baseType: !1045, size: 64, align: 64, offset: 3456)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1175, file: !14, line: 2270, baseType: !1045, size: 64, align: 64, offset: 3520)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1175, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1175, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1175, file: !14, line: 2367, baseType: !1536, size: 64, align: 64, offset: 3648)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64, align: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!1015, !1462, !1195, !1015}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1175, file: !14, line: 2383, baseType: !1015, size: 32, align: 32, offset: 3712)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1175, file: !14, line: 2386, baseType: !1034, size: 32, align: 32, offset: 3744)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1175, file: !14, line: 2387, baseType: !1034, size: 32, align: 32, offset: 3776)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1175, file: !14, line: 2394, baseType: !1015, size: 32, align: 32, offset: 3808)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1175, file: !14, line: 2401, baseType: !1015, size: 32, align: 32, offset: 3840)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1175, file: !14, line: 2408, baseType: !1015, size: 32, align: 32, offset: 3872)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1175, file: !14, line: 2415, baseType: !1015, size: 32, align: 32, offset: 3904)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1175, file: !14, line: 2422, baseType: !1015, size: 32, align: 32, offset: 3936)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1175, file: !14, line: 2423, baseType: !1548, size: 64, align: 64, offset: 3968)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1550)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1550, file: !14, line: 827, baseType: !1015, size: 32, align: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1550, file: !14, line: 828, baseType: !1015, size: 32, align: 32, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1550, file: !14, line: 829, baseType: !1015, size: 32, align: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1550, file: !14, line: 830, baseType: !1034, size: 32, align: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1175, file: !14, line: 2430, baseType: !1043, size: 64, align: 64, offset: 4032)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1175, file: !14, line: 2437, baseType: !1043, size: 64, align: 64, offset: 4096)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1175, file: !14, line: 2444, baseType: !1034, size: 32, align: 32, offset: 4160)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1175, file: !14, line: 2451, baseType: !1034, size: 32, align: 32, offset: 4192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1175, file: !14, line: 2458, baseType: !1015, size: 32, align: 32, offset: 4224)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1175, file: !14, line: 2469, baseType: !1015, size: 32, align: 32, offset: 4256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1175, file: !14, line: 2475, baseType: !1015, size: 32, align: 32, offset: 4288)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1175, file: !14, line: 2481, baseType: !1015, size: 32, align: 32, offset: 4320)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1175, file: !14, line: 2485, baseType: !1015, size: 32, align: 32, offset: 4352)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1175, file: !14, line: 2489, baseType: !1015, size: 32, align: 32, offset: 4384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1175, file: !14, line: 2493, baseType: !1015, size: 32, align: 32, offset: 4416)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1175, file: !14, line: 2501, baseType: !1015, size: 32, align: 32, offset: 4448)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1175, file: !14, line: 2506, baseType: !1015, size: 32, align: 32, offset: 4480)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1175, file: !14, line: 2510, baseType: !1015, size: 32, align: 32, offset: 4512)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1175, file: !14, line: 2514, baseType: !1043, size: 64, align: 64, offset: 4544)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1175, file: !14, line: 2528, baseType: !1572, size: 64, align: 64, offset: 4608)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{null, !1462, !1029, !1015, !1015}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1175, file: !14, line: 2534, baseType: !1015, size: 32, align: 32, offset: 4672)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1175, file: !14, line: 2545, baseType: !1015, size: 32, align: 32, offset: 4704)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1175, file: !14, line: 2547, baseType: !1015, size: 32, align: 32, offset: 4736)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1175, file: !14, line: 2549, baseType: !1015, size: 32, align: 32, offset: 4768)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1175, file: !14, line: 2551, baseType: !1015, size: 32, align: 32, offset: 4800)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1175, file: !14, line: 2553, baseType: !1015, size: 32, align: 32, offset: 4832)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1175, file: !14, line: 2555, baseType: !1015, size: 32, align: 32, offset: 4864)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1175, file: !14, line: 2557, baseType: !1015, size: 32, align: 32, offset: 4896)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1175, file: !14, line: 2559, baseType: !1015, size: 32, align: 32, offset: 4928)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1175, file: !14, line: 2563, baseType: !1015, size: 32, align: 32, offset: 4960)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1175, file: !14, line: 2571, baseType: !1586, size: 64, align: 64, offset: 4992)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1175, file: !14, line: 2579, baseType: !1586, size: 64, align: 64, offset: 5056)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1175, file: !14, line: 2586, baseType: !1015, size: 32, align: 32, offset: 5120)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1175, file: !14, line: 2615, baseType: !1015, size: 32, align: 32, offset: 5152)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1175, file: !14, line: 2627, baseType: !1015, size: 32, align: 32, offset: 5184)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1175, file: !14, line: 2637, baseType: !1015, size: 32, align: 32, offset: 5216)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1175, file: !14, line: 2681, baseType: !1015, size: 32, align: 32, offset: 5248)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1175, file: !14, line: 2709, baseType: !1043, size: 64, align: 64, offset: 5312)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1175, file: !14, line: 2716, baseType: !1595, size: 64, align: 64, offset: 5376)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604, !1608, !1614, !1618, !1619, !1620, !1621, !1627, !1628, !1629, !1630, !1631}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1597, file: !14, line: 3642, baseType: !1055, size: 64, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1597, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1597, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1597, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1597, file: !14, line: 3669, baseType: !1015, size: 32, align: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1597, file: !14, line: 3682, baseType: !1605, size: 64, align: 64, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!1015, !1173, !1195}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1597, file: !14, line: 3698, baseType: !1609, size: 64, align: 64, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64, align: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!1015, !1173, !1612, !1040}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1597, file: !14, line: 3712, baseType: !1615, size: 64, align: 64, offset: 320)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!1015, !1173, !1015, !1612, !1040}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1597, file: !14, line: 3726, baseType: !1609, size: 64, align: 64, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1597, file: !14, line: 3737, baseType: !1170, size: 64, align: 64, offset: 448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1597, file: !14, line: 3746, baseType: !1015, size: 32, align: 32, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1597, file: !14, line: 3757, baseType: !1622, size: 64, align: 64, offset: 576)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{null, !1625}
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1597, file: !14, line: 3766, baseType: !1170, size: 64, align: 64, offset: 640)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1597, file: !14, line: 3774, baseType: !1170, size: 64, align: 64, offset: 704)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1597, file: !14, line: 3780, baseType: !1015, size: 32, align: 32, offset: 768)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1597, file: !14, line: 3785, baseType: !1015, size: 32, align: 32, offset: 800)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1597, file: !14, line: 3795, baseType: !1632, size: 64, align: 64, offset: 832)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64, align: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!1015, !1173, !1233}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1175, file: !14, line: 2728, baseType: !1029, size: 64, align: 64, offset: 5440)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1175, file: !14, line: 2735, baseType: !1223, size: 512, align: 64, offset: 5504)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1175, file: !14, line: 2742, baseType: !1015, size: 32, align: 32, offset: 6016)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1175, file: !14, line: 2755, baseType: !1015, size: 32, align: 32, offset: 6048)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1175, file: !14, line: 2776, baseType: !1015, size: 32, align: 32, offset: 6080)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1175, file: !14, line: 2783, baseType: !1015, size: 32, align: 32, offset: 6112)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1175, file: !14, line: 2791, baseType: !1015, size: 32, align: 32, offset: 6144)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1175, file: !14, line: 2802, baseType: !1195, size: 64, align: 64, offset: 6208)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1175, file: !14, line: 2811, baseType: !1015, size: 32, align: 32, offset: 6272)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1175, file: !14, line: 2821, baseType: !1015, size: 32, align: 32, offset: 6304)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1175, file: !14, line: 2830, baseType: !1015, size: 32, align: 32, offset: 6336)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1175, file: !14, line: 2840, baseType: !1015, size: 32, align: 32, offset: 6368)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1175, file: !14, line: 2851, baseType: !1648, size: 64, align: 64, offset: 6400)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!1015, !1462, !1651, !1029, !1465, !1015, !1015}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64, align: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1015, !1462, !1029}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1175, file: !14, line: 2871, baseType: !1655, size: 64, align: 64, offset: 6464)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!1015, !1462, !1658, !1029, !1465, !1015}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64, align: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1015, !1462, !1029, !1015, !1015}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1175, file: !14, line: 2878, baseType: !1015, size: 32, align: 32, offset: 6528)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1175, file: !14, line: 2885, baseType: !1015, size: 32, align: 32, offset: 6560)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1175, file: !14, line: 3005, baseType: !1015, size: 32, align: 32, offset: 6592)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1175, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1175, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1175, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1175, file: !14, line: 3037, baseType: !1201, size: 64, align: 64, offset: 6720)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1175, file: !14, line: 3038, baseType: !1015, size: 32, align: 32, offset: 6784)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1175, file: !14, line: 3050, baseType: !1045, size: 64, align: 64, offset: 6848)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1175, file: !14, line: 3065, baseType: !1015, size: 32, align: 32, offset: 6912)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1175, file: !14, line: 3083, baseType: !1015, size: 32, align: 32, offset: 6944)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1175, file: !14, line: 3092, baseType: !1065, size: 64, align: 32, offset: 6976)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1175, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1175, file: !14, line: 3106, baseType: !1065, size: 64, align: 32, offset: 7072)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1175, file: !14, line: 3113, baseType: !1676, size: 64, align: 64, offset: 7168)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1689}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1679, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1679, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1679, file: !14, line: 720, baseType: !1055, size: 64, align: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1679, file: !14, line: 724, baseType: !1055, size: 64, align: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1679, file: !14, line: 728, baseType: !1015, size: 32, align: 32, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1679, file: !14, line: 734, baseType: !1687, size: 64, align: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1679, file: !14, line: 739, baseType: !1690, size: 64, align: 64, offset: 320)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1175, file: !14, line: 3129, baseType: !1043, size: 64, align: 64, offset: 7232)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1175, file: !14, line: 3130, baseType: !1043, size: 64, align: 64, offset: 7296)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1175, file: !14, line: 3131, baseType: !1043, size: 64, align: 64, offset: 7360)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1175, file: !14, line: 3132, baseType: !1043, size: 64, align: 64, offset: 7424)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1175, file: !14, line: 3139, baseType: !1586, size: 64, align: 64, offset: 7488)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1175, file: !14, line: 3147, baseType: !1015, size: 32, align: 32, offset: 7552)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1175, file: !14, line: 3165, baseType: !1015, size: 32, align: 32, offset: 7584)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1175, file: !14, line: 3172, baseType: !1015, size: 32, align: 32, offset: 7616)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1175, file: !14, line: 3180, baseType: !1015, size: 32, align: 32, offset: 7648)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1175, file: !14, line: 3191, baseType: !1026, size: 64, align: 64, offset: 7680)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1175, file: !14, line: 3199, baseType: !1201, size: 64, align: 64, offset: 7744)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1175, file: !14, line: 3207, baseType: !1586, size: 64, align: 64, offset: 7808)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1175, file: !14, line: 3214, baseType: !1016, size: 32, align: 32, offset: 7872)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1175, file: !14, line: 3224, baseType: !1331, size: 64, align: 64, offset: 7936)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1175, file: !14, line: 3225, baseType: !1015, size: 32, align: 32, offset: 8000)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1175, file: !14, line: 3249, baseType: !1233, size: 64, align: 64, offset: 8064)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1175, file: !14, line: 3256, baseType: !1015, size: 32, align: 32, offset: 8128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1175, file: !14, line: 3271, baseType: !1015, size: 32, align: 32, offset: 8160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1175, file: !14, line: 3279, baseType: !1043, size: 64, align: 64, offset: 8192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1175, file: !14, line: 3301, baseType: !1233, size: 64, align: 64, offset: 8256)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1175, file: !14, line: 3310, baseType: !1015, size: 32, align: 32, offset: 8320)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1175, file: !14, line: 3337, baseType: !1015, size: 32, align: 32, offset: 8352)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1175, file: !14, line: 3351, baseType: !1015, size: 32, align: 32, offset: 8384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1175, file: !14, line: 3359, baseType: !1015, size: 32, align: 32, offset: 8416)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1052, file: !14, line: 3535, baseType: !1717, size: 64, align: 64, offset: 1024)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64, align: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!1015, !1173, !1720}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1052, file: !14, line: 3541, baseType: !1723, size: 64, align: 64, offset: 1088)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64, align: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1189, line: 223, size: 128, align: 64, elements: !1727)
!1727 = !{!1728, !1729}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1726, file: !1189, line: 224, baseType: !1612, size: 64, align: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1726, file: !1189, line: 225, baseType: !1612, size: 64, align: 64, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1052, file: !14, line: 3549, baseType: !1731, size: 64, align: 64, offset: 1152)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !1168}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1052, file: !14, line: 3551, baseType: !1170, size: 64, align: 64, offset: 1216)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1052, file: !14, line: 3552, baseType: !1736, size: 64, align: 64, offset: 1280)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64, align: 64)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!1015, !1173, !1201, !1015, !1739}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1771}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1741, file: !14, line: 3921, baseType: !1023, size: 16, align: 16)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1741, file: !14, line: 3922, baseType: !1040, size: 32, align: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1741, file: !14, line: 3923, baseType: !1040, size: 32, align: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1741, file: !14, line: 3924, baseType: !1016, size: 32, align: 32, offset: 96)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1741, file: !14, line: 3925, baseType: !1748, size: 64, align: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64, align: 64)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1764, !1766, !1767, !1768, !1769, !1770}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1751, file: !14, line: 3886, baseType: !1015, size: 32, align: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1751, file: !14, line: 3887, baseType: !1015, size: 32, align: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1751, file: !14, line: 3888, baseType: !1015, size: 32, align: 32, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1751, file: !14, line: 3889, baseType: !1015, size: 32, align: 32, offset: 96)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1751, file: !14, line: 3890, baseType: !1015, size: 32, align: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1751, file: !14, line: 3897, baseType: !1759, size: 768, align: 64, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1760, file: !14, line: 3855, baseType: !1200, size: 512, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1760, file: !14, line: 3857, baseType: !1205, size: 256, align: 32, offset: 512)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1751, file: !14, line: 3903, baseType: !1765, size: 256, align: 64, offset: 960)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 256, align: 64, elements: !1302)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1751, file: !14, line: 3904, baseType: !1309, size: 128, align: 32, offset: 1216)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1751, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1751, file: !14, line: 3908, baseType: !1586, size: 64, align: 64, offset: 1408)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1751, file: !14, line: 3915, baseType: !1586, size: 64, align: 64, offset: 1472)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1751, file: !14, line: 3917, baseType: !1015, size: 32, align: 32, offset: 1536)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1741, file: !14, line: 3926, baseType: !1043, size: 64, align: 64, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1052, file: !14, line: 3564, baseType: !1773, size: 64, align: 64, offset: 1344)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64, align: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!1015, !1173, !1319, !1463, !1465}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1052, file: !14, line: 3566, baseType: !1777, size: 64, align: 64, offset: 1408)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!1015, !1173, !1029, !1465, !1319}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1052, file: !14, line: 3567, baseType: !1170, size: 64, align: 64, offset: 1472)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1052, file: !14, line: 3576, baseType: !1782, size: 64, align: 64, offset: 1536)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64, align: 64)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!1015, !1173, !1463}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1052, file: !14, line: 3577, baseType: !1786, size: 64, align: 64, offset: 1600)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64, align: 64)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!1015, !1173, !1319}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1052, file: !14, line: 3584, baseType: !1605, size: 64, align: 64, offset: 1664)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1052, file: !14, line: 3589, baseType: !1791, size: 64, align: 64, offset: 1728)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !1173}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1052, file: !14, line: 3594, baseType: !1015, size: 32, align: 32, offset: 1792)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1052, file: !14, line: 3600, baseType: !1055, size: 64, align: 64, offset: 1856)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1052, file: !14, line: 3609, baseType: !1797, size: 64, align: 64, offset: 1920)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64, align: 64)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1801 = distinct !DIGlobalVariable(name: "ac3_decoder_class", scope: !0, file: !1050, line: 177, type: !1086, isLocal: true, isDefinition: true, variable: %struct.AVClass* @ac3_decoder_class)
!1802 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !1050, line: 170, type: !1803, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }>* @options)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1804, size: 2048, align: 64, elements: !1302)
!1804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1098)
!1806 = distinct !DIGlobalVariable(name: "ungroup_3_in_7_bits_tab", scope: !0, file: !1807, line: 48, type: !1808, isLocal: true, isDefinition: true, variable: [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab)
!1807 = !DIFile(filename: "libavcodec/ac3dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 3072, align: 8, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DISubrange(count: 128)
!1811 = !DISubrange(count: 3)
!1812 = distinct !DIGlobalVariable(name: "b1_mantissas", scope: !0, file: !1807, line: 51, type: !1813, isLocal: true, isDefinition: true, variable: [32 x [3 x i32]]* @b1_mantissas)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 3072, align: 32, elements: !1814)
!1814 = !{!1815, !1811}
!1815 = !DISubrange(count: 32)
!1816 = distinct !DIGlobalVariable(name: "b2_mantissas", scope: !0, file: !1807, line: 52, type: !1817, isLocal: true, isDefinition: true, variable: [128 x [3 x i32]]* @b2_mantissas)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 12288, align: 32, elements: !1809)
!1818 = distinct !DIGlobalVariable(name: "b4_mantissas", scope: !0, file: !1807, line: 54, type: !1819, isLocal: true, isDefinition: true, variable: [128 x [2 x i32]]* @b4_mantissas)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8192, align: 32, elements: !1820)
!1820 = !{!1810, !1821}
!1821 = !DISubrange(count: 2)
!1822 = distinct !DIGlobalVariable(name: "b3_mantissas", scope: !0, file: !1807, line: 53, type: !1205, isLocal: true, isDefinition: true, variable: [8 x i32]* @b3_mantissas)
!1823 = distinct !DIGlobalVariable(name: "b5_mantissas", scope: !0, file: !1807, line: 55, type: !1824, isLocal: true, isDefinition: true, variable: [16 x i32]* @b5_mantissas)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 512, align: 32, elements: !1825)
!1825 = !{!1826}
!1826 = !DISubrange(count: 16)
!1827 = distinct !DIGlobalVariable(name: "gain_levels", scope: !0, file: !1807, line: 73, type: !1828, isLocal: true, isDefinition: true, variable: [9 x float]* @gain_levels)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 288, align: 32, elements: !1830)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1830 = !{!1831}
!1831 = !DISubrange(count: 9)
!1832 = distinct !DIGlobalVariable(name: "ac3_default_coeffs", scope: !0, file: !1807, line: 98, type: !1833, isLocal: true, isDefinition: true, variable: [8 x [5 x [2 x i8]]]* @ac3_default_coeffs)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 640, align: 8, elements: !1834)
!1834 = !{!1203, !1835, !1821}
!1835 = !DISubrange(count: 5)
!1836 = distinct !DIGlobalVariable(name: "end_freq_inv_tab", scope: !0, file: !1050, line: 56, type: !1837, isLocal: true, isDefinition: true, variable: [8 x i32]* @end_freq_inv_tab)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 256, align: 32, elements: !1202)
!1838 = distinct !DIGlobalVariable(name: "quantization_tab", scope: !0, file: !1807, line: 61, type: !1839, isLocal: true, isDefinition: true, variable: [16 x i8]* @quantization_tab)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 128, align: 8, elements: !1825)
!1840 = distinct !DIGlobalVariable(name: "gain_levels_lfe", scope: !0, file: !1807, line: 86, type: !1841, isLocal: true, isDefinition: true, variable: [32 x float]* @gain_levels_lfe)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 1024, align: 32, elements: !1842)
!1842 = !{!1815}
!1843 = !{i32 2, !"Dwarf Version", i32 4}
!1844 = !{i32 2, !"Debug Info Version", i32 3}
!1845 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1846 = distinct !DISubprogram(name: "ac3_decode_init", scope: !1807, file: !1807, line: 184, type: !1171, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!1847 = !{}
!1848 = !DILocalVariable(name: "avctx", arg: 1, scope: !1846, file: !1807, line: 184, type: !1173)
!1849 = !DIExpression()
!1850 = !DILocation(line: 184, column: 66, scope: !1846)
!1851 = !DILocalVariable(name: "s", scope: !1846, file: !1807, line: 186, type: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3DecodeContext", file: !1854, line: 252, baseType: !1855)
!1854 = !DIFile(filename: "libavcodec/ac3dec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3DecodeContext", file: !1854, line: 70, size: 1424896, align: 256, elements: !1856)
!1856 = !{!1857, !1859, !1860, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1919, !1920, !1924, !1925, !1929, !1930, !1932, !1933, !1934, !1935, !1938, !1939, !1941, !1943, !1944, !1945, !1946, !1947, !1951, !1952, !1953, !1957, !1958, !1959, !1963, !1964, !1965, !1966, !1968, !1969, !1970, !1971, !1972, !1973, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1987, !1990, !2003, !2004, !2005, !2006, !2008, !2010, !2014, !2015, !2016, !2017, !2020, !2021, !2022, !2023, !2033, !2034, !2078, !2079, !2094, !2130, !2203, !2222, !2224, !2227, !2228, !2230, !2232, !2235, !2238, !2239, !2241, !2245}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1855, file: !1854, line: 71, baseType: !1858, size: 64, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1855, file: !1854, line: 72, baseType: !1173, size: 64, align: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "gbc", scope: !1855, file: !1854, line: 73, baseType: !1861, size: 256, align: 64, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1862, line: 70, baseType: !1863)
!1862 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1862, line: 61, size: 256, align: 64, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1868, !1869}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1863, file: !1862, line: 62, baseType: !1612, size: 64, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1863, file: !1862, line: 62, baseType: !1612, size: 64, align: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1863, file: !1862, line: 67, baseType: !1015, size: 32, align: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1863, file: !1862, line: 68, baseType: !1015, size: 32, align: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1863, file: !1862, line: 69, baseType: !1015, size: 32, align: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !1855, file: !1854, line: 77, baseType: !1015, size: 32, align: 32, offset: 384)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "substreamid", scope: !1855, file: !1854, line: 78, baseType: !1015, size: 32, align: 32, offset: 416)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "superframe_size", scope: !1855, file: !1854, line: 79, baseType: !1015, size: 32, align: 32, offset: 448)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1855, file: !1854, line: 80, baseType: !1015, size: 32, align: 32, offset: 480)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1855, file: !1854, line: 81, baseType: !1015, size: 32, align: 32, offset: 512)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1855, file: !1854, line: 82, baseType: !1015, size: 32, align: 32, offset: 544)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1855, file: !1854, line: 83, baseType: !1015, size: 32, align: 32, offset: 576)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_id", scope: !1855, file: !1854, line: 84, baseType: !1015, size: 32, align: 32, offset: 608)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !1855, file: !1854, line: 85, baseType: !1015, size: 32, align: 32, offset: 640)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "channel_mode", scope: !1855, file: !1854, line: 86, baseType: !1015, size: 32, align: 32, offset: 672)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_on", scope: !1855, file: !1854, line: 87, baseType: !1015, size: 32, align: 32, offset: 704)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "dialog_normalization", scope: !1855, file: !1854, line: 88, baseType: !1882, size: 64, align: 32, offset: 736)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 64, align: 32, elements: !1883)
!1883 = !{!1821}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "compression_exists", scope: !1855, file: !1854, line: 89, baseType: !1882, size: 64, align: 32, offset: 800)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "compression_gain", scope: !1855, file: !1854, line: 90, baseType: !1882, size: 64, align: 32, offset: 864)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !1855, file: !1854, line: 91, baseType: !1015, size: 32, align: 32, offset: 928)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_downmix", scope: !1855, file: !1854, line: 92, baseType: !1015, size: 32, align: 32, offset: 960)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !1855, file: !1854, line: 93, baseType: !1015, size: 32, align: 32, offset: 992)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level_ltrt", scope: !1855, file: !1854, line: 94, baseType: !1015, size: 32, align: 32, offset: 1024)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !1855, file: !1854, line: 95, baseType: !1015, size: 32, align: 32, offset: 1056)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level_ltrt", scope: !1855, file: !1854, line: 96, baseType: !1015, size: 32, align: 32, offset: 1088)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level_exists", scope: !1855, file: !1854, line: 97, baseType: !1015, size: 32, align: 32, offset: 1120)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level", scope: !1855, file: !1854, line: 98, baseType: !1015, size: 32, align: 32, offset: 1152)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "eac3", scope: !1855, file: !1854, line: 99, baseType: !1015, size: 32, align: 32, offset: 1184)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_frame_dependent_found", scope: !1855, file: !1854, line: 100, baseType: !1015, size: 32, align: 32, offset: 1216)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_subsbtreamid_found", scope: !1855, file: !1854, line: 101, baseType: !1015, size: 32, align: 32, offset: 1248)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_mode", scope: !1855, file: !1854, line: 102, baseType: !1015, size: 32, align: 32, offset: 1280)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_ex_mode", scope: !1855, file: !1854, line: 103, baseType: !1015, size: 32, align: 32, offset: 1312)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_headphone_mode", scope: !1855, file: !1854, line: 104, baseType: !1015, size: 32, align: 32, offset: 1344)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_stereo_downmix", scope: !1855, file: !1854, line: 107, baseType: !1015, size: 32, align: 32, offset: 1376)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_center_mix_level", scope: !1855, file: !1854, line: 108, baseType: !1034, size: 32, align: 32, offset: 1408)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_surround_mix_level", scope: !1855, file: !1854, line: 109, baseType: !1034, size: 32, align: 32, offset: 1440)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "loro_center_mix_level", scope: !1855, file: !1854, line: 110, baseType: !1034, size: 32, align: 32, offset: 1472)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "loro_surround_mix_level", scope: !1855, file: !1854, line: 111, baseType: !1034, size: 32, align: 32, offset: 1504)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "target_level", scope: !1855, file: !1854, line: 112, baseType: !1015, size: 32, align: 32, offset: 1536)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "level_gain", scope: !1855, file: !1854, line: 113, baseType: !1907, size: 64, align: 32, offset: 1568)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 64, align: 32, elements: !1883)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "snr_offset_strategy", scope: !1855, file: !1854, line: 116, baseType: !1015, size: 32, align: 32, offset: 1632)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "block_switch_syntax", scope: !1855, file: !1854, line: 117, baseType: !1015, size: 32, align: 32, offset: 1664)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "dither_flag_syntax", scope: !1855, file: !1854, line: 118, baseType: !1015, size: 32, align: 32, offset: 1696)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation_syntax", scope: !1855, file: !1854, line: 119, baseType: !1015, size: 32, align: 32, offset: 1728)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "fast_gain_syntax", scope: !1855, file: !1854, line: 120, baseType: !1015, size: 32, align: 32, offset: 1760)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "dba_syntax", scope: !1855, file: !1854, line: 121, baseType: !1015, size: 32, align: 32, offset: 1792)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "skip_syntax", scope: !1855, file: !1854, line: 122, baseType: !1015, size: 32, align: 32, offset: 1824)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_in_use", scope: !1855, file: !1854, line: 126, baseType: !1916, size: 192, align: 32, offset: 1856)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 192, align: 32, elements: !1917)
!1917 = !{!1918}
!1918 = !DISubrange(count: 6)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_strategy_exists", scope: !1855, file: !1854, line: 127, baseType: !1916, size: 192, align: 32, offset: 2048)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "channel_in_cpl", scope: !1855, file: !1854, line: 128, baseType: !1921, size: 224, align: 32, offset: 2240)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 224, align: 32, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 7)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "phase_flags_in_use", scope: !1855, file: !1854, line: 129, baseType: !1015, size: 32, align: 32, offset: 2464)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "phase_flags", scope: !1855, file: !1854, line: 130, baseType: !1926, size: 576, align: 32, offset: 2496)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 576, align: 32, elements: !1927)
!1927 = !{!1928}
!1928 = !DISubrange(count: 18)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "num_cpl_bands", scope: !1855, file: !1854, line: 131, baseType: !1015, size: 32, align: 32, offset: 3072)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_band_struct", scope: !1855, file: !1854, line: 132, baseType: !1931, size: 144, align: 8, offset: 3104)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 144, align: 8, elements: !1927)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_band_sizes", scope: !1855, file: !1854, line: 133, baseType: !1931, size: 144, align: 8, offset: 3248)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "firstchincpl", scope: !1855, file: !1854, line: 134, baseType: !1015, size: 32, align: 32, offset: 3392)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "first_cpl_coords", scope: !1855, file: !1854, line: 135, baseType: !1921, size: 224, align: 32, offset: 3424)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coords", scope: !1855, file: !1854, line: 136, baseType: !1936, size: 4032, align: 32, offset: 3648)
!1936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 4032, align: 32, elements: !1937)
!1937 = !{!1923, !1928}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "spx_in_use", scope: !1855, file: !1854, line: 141, baseType: !1015, size: 32, align: 32, offset: 7680)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "channel_uses_spx", scope: !1855, file: !1854, line: 142, baseType: !1940, size: 56, align: 8, offset: 7712)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 56, align: 8, elements: !1922)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "spx_atten_code", scope: !1855, file: !1854, line: 143, baseType: !1942, size: 56, align: 8, offset: 7768)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 56, align: 8, elements: !1922)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "spx_src_start_freq", scope: !1855, file: !1854, line: 144, baseType: !1015, size: 32, align: 32, offset: 7840)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "spx_dst_end_freq", scope: !1855, file: !1854, line: 145, baseType: !1015, size: 32, align: 32, offset: 7872)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "spx_dst_start_freq", scope: !1855, file: !1854, line: 146, baseType: !1015, size: 32, align: 32, offset: 7904)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "num_spx_bands", scope: !1855, file: !1854, line: 148, baseType: !1015, size: 32, align: 32, offset: 7936)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "spx_band_struct", scope: !1855, file: !1854, line: 149, baseType: !1948, size: 136, align: 8, offset: 7968)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 136, align: 8, elements: !1949)
!1949 = !{!1950}
!1950 = !DISubrange(count: 17)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "spx_band_sizes", scope: !1855, file: !1854, line: 150, baseType: !1948, size: 136, align: 8, offset: 8104)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "first_spx_coords", scope: !1855, file: !1854, line: 151, baseType: !1940, size: 56, align: 8, offset: 8240)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "spx_noise_blend", scope: !1855, file: !1854, line: 152, baseType: !1954, size: 3808, align: 32, offset: 8320)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 3808, align: 32, elements: !1956)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !961, line: 77, baseType: !1015)
!1956 = !{!1923, !1950}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "spx_signal_blend", scope: !1855, file: !1854, line: 153, baseType: !1954, size: 3808, align: 32, offset: 12128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "channel_uses_aht", scope: !1855, file: !1854, line: 157, baseType: !1921, size: 224, align: 32, offset: 15936)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pre_mantissa", scope: !1855, file: !1854, line: 158, baseType: !1960, size: 344064, align: 32, offset: 16160)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 344064, align: 32, elements: !1961)
!1961 = !{!1923, !1962, !1918}
!1962 = !DISubrange(count: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "fbw_channels", scope: !1855, file: !1854, line: 162, baseType: !1015, size: 32, align: 32, offset: 360224)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1855, file: !1854, line: 163, baseType: !1015, size: 32, align: 32, offset: 360256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_ch", scope: !1855, file: !1854, line: 164, baseType: !1015, size: 32, align: 32, offset: 360288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "downmix_coeffs", scope: !1855, file: !1854, line: 165, baseType: !1967, size: 128, align: 64, offset: 360320)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 128, align: 64, elements: !1883)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "downmixed", scope: !1855, file: !1854, line: 166, baseType: !1015, size: 32, align: 32, offset: 360448)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "output_mode", scope: !1855, file: !1854, line: 167, baseType: !1015, size: 32, align: 32, offset: 360480)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "prev_output_mode", scope: !1855, file: !1854, line: 168, baseType: !1015, size: 32, align: 32, offset: 360512)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "out_channels", scope: !1855, file: !1854, line: 169, baseType: !1015, size: 32, align: 32, offset: 360544)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bit_rate", scope: !1855, file: !1854, line: 170, baseType: !1015, size: 32, align: 32, offset: 360576)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_range", scope: !1855, file: !1854, line: 174, baseType: !1974, size: 64, align: 32, offset: 360608)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 64, align: 32, elements: !1883)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "drc_scale", scope: !1855, file: !1854, line: 175, baseType: !1955, size: 32, align: 32, offset: 360672)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "heavy_compression", scope: !1855, file: !1854, line: 176, baseType: !1015, size: 32, align: 32, offset: 360704)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "heavy_dynamic_range", scope: !1855, file: !1854, line: 177, baseType: !1974, size: 64, align: 32, offset: 360736)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "start_freq", scope: !1855, file: !1854, line: 181, baseType: !1921, size: 224, align: 32, offset: 360800)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "end_freq", scope: !1855, file: !1854, line: 182, baseType: !1921, size: 224, align: 32, offset: 361024)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "consistent_noise_generation", scope: !1855, file: !1854, line: 186, baseType: !1015, size: 32, align: 32, offset: 361248)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "num_rematrixing_bands", scope: !1855, file: !1854, line: 190, baseType: !1015, size: 32, align: 32, offset: 361280)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rematrixing_flags", scope: !1855, file: !1854, line: 191, baseType: !1309, size: 128, align: 32, offset: 361312)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "num_exp_groups", scope: !1855, file: !1854, line: 195, baseType: !1921, size: 224, align: 32, offset: 361440)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "dexps", scope: !1855, file: !1854, line: 196, baseType: !1985, size: 14336, align: 8, offset: 361664)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 14336, align: 8, elements: !1986)
!1986 = !{!1923, !1962}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "exp_strategy", scope: !1855, file: !1854, line: 197, baseType: !1988, size: 1344, align: 32, offset: 376000)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1344, align: 32, elements: !1989)
!1989 = !{!1918, !1923}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc_params", scope: !1855, file: !1854, line: 201, baseType: !1991, size: 288, align: 32, offset: 377344)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3BitAllocParameters", file: !961, line: 171, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3BitAllocParameters", file: !961, line: 166, size: 288, align: 32, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !1992, file: !961, line: 167, baseType: !1015, size: 32, align: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "sr_shift", scope: !1992, file: !961, line: 168, baseType: !1015, size: 32, align: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "slow_gain", scope: !1992, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "slow_decay", scope: !1992, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "fast_decay", scope: !1992, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "db_per_bit", scope: !1992, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "floor", scope: !1992, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_fast_leak", scope: !1992, file: !961, line: 170, baseType: !1015, size: 32, align: 32, offset: 224)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_slow_leak", scope: !1992, file: !961, line: 170, baseType: !1015, size: 32, align: 32, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "first_cpl_leak", scope: !1855, file: !1854, line: 202, baseType: !1015, size: 32, align: 32, offset: 377632)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "snr_offset", scope: !1855, file: !1854, line: 203, baseType: !1921, size: 224, align: 32, offset: 377664)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "fast_gain", scope: !1855, file: !1854, line: 204, baseType: !1921, size: 224, align: 32, offset: 377888)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "bap", scope: !1855, file: !1854, line: 205, baseType: !2007, size: 14336, align: 8, offset: 378112)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 14336, align: 8, elements: !1986)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "psd", scope: !1855, file: !1854, line: 206, baseType: !2009, size: 28672, align: 16, offset: 392448)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 28672, align: 16, elements: !1986)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "band_psd", scope: !1855, file: !1854, line: 207, baseType: !2011, size: 5600, align: 16, offset: 421120)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 5600, align: 16, elements: !2012)
!2012 = !{!1923, !2013}
!2013 = !DISubrange(count: 50)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1855, file: !1854, line: 208, baseType: !2011, size: 5600, align: 16, offset: 426720)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dba_mode", scope: !1855, file: !1854, line: 209, baseType: !1921, size: 224, align: 32, offset: 432320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "dba_nsegs", scope: !1855, file: !1854, line: 210, baseType: !1921, size: 224, align: 32, offset: 432544)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "dba_offsets", scope: !1855, file: !1854, line: 211, baseType: !2018, size: 448, align: 8, offset: 432768)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 448, align: 8, elements: !2019)
!2019 = !{!1923, !1203}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "dba_lengths", scope: !1855, file: !1854, line: 212, baseType: !2018, size: 448, align: 8, offset: 433216)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "dba_values", scope: !1855, file: !1854, line: 213, baseType: !2018, size: 448, align: 8, offset: 433664)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "dither_flag", scope: !1855, file: !1854, line: 217, baseType: !1921, size: 224, align: 32, offset: 434112)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "dith_state", scope: !1855, file: !1854, line: 218, baseType: !2024, size: 2080, align: 32, offset: 434336)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !2025, line: 30, baseType: !2026)
!2025 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !2025, line: 27, size: 2080, align: 32, elements: !2027)
!2027 = !{!2028, !2032}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2026, file: !2025, line: 28, baseType: !2029, size: 2048, align: 32)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1016, size: 2048, align: 32, elements: !2030)
!2030 = !{!2031}
!2031 = !DISubrange(count: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2026, file: !2025, line: 29, baseType: !1015, size: 32, align: 32, offset: 2048)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "block_switch", scope: !1855, file: !1854, line: 222, baseType: !1921, size: 224, align: 32, offset: 436416)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_512", scope: !1855, file: !1854, line: 223, baseType: !2035, size: 896, align: 64, offset: 436672)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !910, line: 67, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !910, line: 88, size: 896, align: 64, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041, !2049, !2050, !2051, !2053, !2054, !2059, !2060, !2066, !2067, !2068, !2074, !2075, !2076}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2036, file: !910, line: 89, baseType: !1015, size: 32, align: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2036, file: !910, line: 90, baseType: !1015, size: 32, align: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2036, file: !910, line: 91, baseType: !1026, size: 64, align: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2036, file: !910, line: 92, baseType: !2042, size: 64, align: 64, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64, align: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !910, line: 64, baseType: !2044)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !910, line: 62, size: 64, align: 32, elements: !2045)
!2045 = !{!2046, !2048}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2044, file: !910, line: 63, baseType: !2047, size: 32, align: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !910, line: 52, baseType: !1047)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2044, file: !910, line: 63, baseType: !2047, size: 32, align: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2036, file: !910, line: 93, baseType: !1015, size: 32, align: 32, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2036, file: !910, line: 94, baseType: !1015, size: 32, align: 32, offset: 224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2036, file: !910, line: 96, baseType: !2052, size: 64, align: 64, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64, align: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2036, file: !910, line: 97, baseType: !2052, size: 64, align: 64, offset: 320)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2036, file: !910, line: 101, baseType: !2055, size: 64, align: 64, offset: 384)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{null, !2058, !2042}
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64, align: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2036, file: !910, line: 106, baseType: !2055, size: 64, align: 64, offset: 448)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2036, file: !910, line: 107, baseType: !2061, size: 64, align: 64, offset: 512)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64, align: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !2058, !2052, !2064}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64, align: 64)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2036, file: !910, line: 108, baseType: !2061, size: 64, align: 64, offset: 576)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2036, file: !910, line: 109, baseType: !2061, size: 64, align: 64, offset: 640)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2036, file: !910, line: 110, baseType: !2069, size: 64, align: 64, offset: 704)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64, align: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !2058, !2072, !2064}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64, align: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !910, line: 66, baseType: !1015)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2036, file: !910, line: 111, baseType: !909, size: 32, align: 32, offset: 768)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2036, file: !910, line: 112, baseType: !915, size: 32, align: 32, offset: 800)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2036, file: !910, line: 113, baseType: !2077, size: 64, align: 64, offset: 832)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_256", scope: !1855, file: !1854, line: 224, baseType: !2035, size: 896, align: 64, offset: 437568)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1855, file: !1854, line: 228, baseType: !2080, size: 128, align: 64, offset: 438464)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !2081, line: 27, baseType: !2082)
!2081 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !2081, line: 24, size: 128, align: 64, elements: !2083)
!2083 = !{!2084, !2090}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !2082, file: !2081, line: 25, baseType: !2085, size: 64, align: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !2077, !2088, !1015}
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64, align: 64)
!2089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !2082, file: !2081, line: 26, baseType: !2091, size: 64, align: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64, align: 64)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !1026, !1027, !1015}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1855, file: !1854, line: 230, baseType: !2095, size: 64, align: 64, offset: 438592)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFixedDSPContext", file: !2097, line: 154, baseType: !2098)
!2097 = !DIFile(filename: "./libavutil/fixed_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFixedDSPContext", file: !2097, line: 56, size: 448, align: 64, elements: !2099)
!2099 = !{!2100, !2107, !2112, !2116, !2117, !2121, !2125}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window_scaled", scope: !2098, file: !2097, line: 80, baseType: !2101, size: 64, align: 64)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !2104, !2105, !2105, !2105, !1015, !1041}
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64, align: 64)
!2106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2098, file: !2097, line: 98, baseType: !2108, size: 64, align: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64, align: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !2111, !2105, !2105, !2105, !1015}
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2098, file: !2097, line: 113, baseType: !2113, size: 64, align: 64, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64, align: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !1465, !1075, !1075, !1015}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2098, file: !2097, line: 116, baseType: !2113, size: 64, align: 64, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2098, file: !2097, line: 132, baseType: !2118, size: 64, align: 64, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64, align: 64)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{null, !1465, !1075, !1075, !1075, !1015}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_fixed", scope: !2098, file: !2097, line: 144, baseType: !2122, size: 64, align: 64, offset: 320)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64, align: 64)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!1015, !1075, !1075, !1015}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_fixed", scope: !2098, file: !2097, line: 153, baseType: !2126, size: 64, align: 64, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64, align: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{null, !2129, !2129, !1015}
!2129 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1465)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "ac3dsp", scope: !1855, file: !1854, line: 234, baseType: !2131, size: 960, align: 64, offset: 438656)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3DSPContext", file: !2132, line: 153, baseType: !2133)
!2132 = !DIFile(filename: "libavcodec/ac3dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3DSPContext", file: !2132, line: 33, size: 960, align: 64, elements: !2134)
!2134 = !{!2135, !2139, !2145, !2149, !2153, !2158, !2162, !2166, !2172, !2176, !2181, !2186, !2187, !2188, !2193, !2199}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_exponent_min", scope: !2133, file: !2132, line: 43, baseType: !2136, size: 64, align: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64, align: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !1201, !1015, !1015}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_max_msb_abs_int16", scope: !2133, file: !2132, line: 54, baseType: !2140, size: 64, align: 64, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64, align: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!1015, !2143, !1015}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64, align: 64)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_lshift_int16", scope: !2133, file: !2132, line: 65, baseType: !2146, size: 64, align: 64, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64, align: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{null, !2104, !1016, !1016}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_rshift_int32", scope: !2133, file: !2132, line: 76, baseType: !2150, size: 64, align: 64, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64, align: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{null, !2111, !1016, !1016}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "float_to_fixed24", scope: !2133, file: !2132, line: 89, baseType: !2154, size: 64, align: 64, offset: 256)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64, align: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{null, !2111, !2157, !1016}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64, align: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc_calc_bap", scope: !2133, file: !2132, line: 106, baseType: !2159, size: 64, align: 64, offset: 320)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64, align: 64)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{null, !2104, !2104, !1015, !1015, !1015, !1015, !1612, !1201}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "update_bap_counts", scope: !2133, file: !2132, line: 117, baseType: !2163, size: 64, align: 64, offset: 384)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64, align: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !1026, !1201, !1015}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "compute_mantissa_size", scope: !2133, file: !2132, line: 125, baseType: !2167, size: 64, align: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64, align: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!1015, !2170}
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64, align: 64)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 256, align: 16, elements: !1825)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "extract_exponents", scope: !2133, file: !2132, line: 127, baseType: !2173, size: 64, align: 64, offset: 512)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64, align: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !1201, !2111, !1015}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_int32", scope: !2133, file: !2132, line: 129, baseType: !2177, size: 64, align: 64, offset: 576)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64, align: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !2180, !2105, !2105, !1015}
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_float", scope: !2133, file: !2132, line: 132, baseType: !2182, size: 64, align: 64, offset: 640)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64, align: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !2185, !2157, !2157, !1015}
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "out_channels", scope: !2133, file: !2132, line: 135, baseType: !1015, size: 32, align: 32, offset: 704)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "in_channels", scope: !2133, file: !2132, line: 136, baseType: !1015, size: 32, align: 32, offset: 736)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "downmix", scope: !2133, file: !2132, line: 137, baseType: !2189, size: 64, align: 64, offset: 768)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64, align: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !2192, !2192, !1015}
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64, align: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "downmix_fixed", scope: !2133, file: !2132, line: 138, baseType: !2194, size: 64, align: 64, offset: 832)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64, align: 64)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{null, !2197, !2198, !1015}
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64, align: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64, align: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_int16", scope: !2133, file: !2132, line: 151, baseType: !2200, size: 64, align: 64, offset: 896)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{null, !2104, !2143, !2143, !1016}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "fmt_conv", scope: !1855, file: !1854, line: 235, baseType: !2204, size: 192, align: 64, offset: 439616)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "FmtConvertContext", file: !2205, line: 67, baseType: !2206)
!2205 = !DIFile(filename: "libavcodec/fmtconvert.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FmtConvertContext", file: !2205, line: 28, size: 192, align: 64, elements: !2207)
!2207 = !{!2208, !2212, !2217}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float_fmul_scalar", scope: !2206, file: !2205, line: 38, baseType: !2209, size: 64, align: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64, align: 64)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !2185, !2105, !1034, !1015}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float", scope: !2206, file: !2205, line: 49, baseType: !2213, size: 64, align: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64, align: 64)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !2185, !2105, !2216}
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1024, line: 119, baseType: !1044)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float_fmul_array8", scope: !2206, file: !2205, line: 63, baseType: !2218, size: 64, align: 64, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64, align: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{null, !2221, !2185, !2105, !2157, !1015}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64, align: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "outptr", scope: !1855, file: !1854, line: 238, baseType: !2223, size: 448, align: 64, offset: 439808)
!2223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 448, align: 64, elements: !1922)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "xcfptr", scope: !1855, file: !1854, line: 239, baseType: !2225, size: 448, align: 64, offset: 440256)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2226, size: 448, align: 64, elements: !1922)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64, align: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dlyptr", scope: !1855, file: !1854, line: 240, baseType: !2225, size: 448, align: 64, offset: 440704)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_coeffs", scope: !1855, file: !1854, line: 243, baseType: !2229, size: 57344, align: 32, offset: 441216)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 57344, align: 32, elements: !1986)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "transform_coeffs", scope: !1855, file: !1854, line: 244, baseType: !2231, size: 57344, align: 32, offset: 498688)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 57344, align: 32, elements: !1986)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1855, file: !1854, line: 245, baseType: !2233, size: 131072, align: 32, offset: 556032)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 131072, align: 32, elements: !2234)
!2234 = !{!1826, !1962}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1855, file: !1854, line: 246, baseType: !2236, size: 8192, align: 32, offset: 687104)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 8192, align: 32, elements: !2237)
!2237 = !{!1962}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_output", scope: !1855, file: !1854, line: 247, baseType: !2236, size: 8192, align: 32, offset: 695296)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1855, file: !1854, line: 248, baseType: !2240, size: 65536, align: 16, offset: 703488)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 65536, align: 16, elements: !2234)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "input_buffer", scope: !1855, file: !1854, line: 249, baseType: !2242, size: 262656, align: 8, offset: 769024)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 262656, align: 8, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 32832)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "output_buffer", scope: !1855, file: !1854, line: 250, baseType: !2246, size: 393216, align: 16, offset: 1031680)
!2246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 393216, align: 16, elements: !2247)
!2247 = !{!1826, !2248}
!2248 = !DISubrange(count: 1536)
!2249 = !DILocation(line: 186, column: 23, scope: !1846)
!2250 = !DILocation(line: 186, column: 27, scope: !1846)
!2251 = !DILocation(line: 186, column: 34, scope: !1846)
!2252 = !DILocalVariable(name: "i", scope: !1846, file: !1807, line: 187, type: !1015)
!2253 = !DILocation(line: 187, column: 9, scope: !1846)
!2254 = !DILocation(line: 189, column: 16, scope: !1846)
!2255 = !DILocation(line: 189, column: 5, scope: !1846)
!2256 = !DILocation(line: 189, column: 8, scope: !1846)
!2257 = !DILocation(line: 189, column: 14, scope: !1846)
!2258 = !DILocation(line: 191, column: 5, scope: !1846)
!2259 = !DILocation(line: 192, column: 28, scope: !1846)
!2260 = !DILocation(line: 192, column: 31, scope: !1846)
!2261 = !DILocation(line: 192, column: 5, scope: !1846)
!2262 = !DILocation(line: 193, column: 28, scope: !1846)
!2263 = !DILocation(line: 193, column: 31, scope: !1846)
!2264 = !DILocation(line: 193, column: 5, scope: !1846)
!2265 = !DILocation(line: 194, column: 30, scope: !1846)
!2266 = !DILocation(line: 194, column: 33, scope: !1846)
!2267 = !DILocation(line: 194, column: 5, scope: !1846)
!2268 = !DILocation(line: 195, column: 23, scope: !1846)
!2269 = !DILocation(line: 195, column: 26, scope: !1846)
!2270 = !DILocation(line: 195, column: 5, scope: !1846)
!2271 = !DILocation(line: 198, column: 38, scope: !1846)
!2272 = !DILocation(line: 198, column: 45, scope: !1846)
!2273 = !DILocation(line: 198, column: 51, scope: !1846)
!2274 = !DILocation(line: 198, column: 15, scope: !1846)
!2275 = !DILocation(line: 198, column: 5, scope: !1846)
!2276 = !DILocation(line: 198, column: 8, scope: !1846)
!2277 = !DILocation(line: 198, column: 13, scope: !1846)
!2278 = !DILocation(line: 204, column: 21, scope: !1846)
!2279 = !DILocation(line: 204, column: 24, scope: !1846)
!2280 = !DILocation(line: 204, column: 32, scope: !1846)
!2281 = !DILocation(line: 204, column: 39, scope: !1846)
!2282 = !DILocation(line: 204, column: 45, scope: !1846)
!2283 = !DILocation(line: 204, column: 5, scope: !1846)
!2284 = !DILocation(line: 205, column: 18, scope: !1846)
!2285 = !DILocation(line: 205, column: 21, scope: !1846)
!2286 = !DILocation(line: 205, column: 5, scope: !1846)
!2287 = !DILocation(line: 208, column: 9, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !1846, file: !1807, line: 207, column: 9)
!2289 = !DILocation(line: 208, column: 16, scope: !2288)
!2290 = !DILocation(line: 208, column: 27, scope: !2288)
!2291 = !DILocation(line: 213, column: 9, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !1846, file: !1807, line: 213, column: 9)
!2293 = !DILocation(line: 213, column: 16, scope: !2292)
!2294 = !DILocation(line: 213, column: 25, scope: !2292)
!2295 = !DILocation(line: 213, column: 29, scope: !2292)
!2296 = !DILocation(line: 214, column: 9, scope: !2292)
!2297 = !DILocation(line: 214, column: 16, scope: !2292)
!2298 = !DILocation(line: 214, column: 39, scope: !2292)
!2299 = !DILocation(line: 213, column: 9, scope: !2300)
!2300 = !DILexicalBlockFile(scope: !1846, file: !1807, discriminator: 1)
!2301 = !DILocation(line: 215, column: 9, scope: !2292)
!2302 = !DILocation(line: 215, column: 16, scope: !2292)
!2303 = !DILocation(line: 215, column: 25, scope: !2292)
!2304 = !DILocation(line: 216, column: 14, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2292, file: !1807, line: 216, column: 14)
!2306 = !DILocation(line: 216, column: 21, scope: !2305)
!2307 = !DILocation(line: 216, column: 30, scope: !2305)
!2308 = !DILocation(line: 216, column: 34, scope: !2305)
!2309 = !DILocation(line: 217, column: 14, scope: !2305)
!2310 = !DILocation(line: 217, column: 21, scope: !2305)
!2311 = !DILocation(line: 217, column: 44, scope: !2305)
!2312 = !DILocation(line: 216, column: 14, scope: !2313)
!2313 = !DILexicalBlockFile(scope: !2292, file: !1807, discriminator: 1)
!2314 = !DILocation(line: 218, column: 9, scope: !2305)
!2315 = !DILocation(line: 218, column: 16, scope: !2305)
!2316 = !DILocation(line: 218, column: 25, scope: !2305)
!2317 = !DILocation(line: 219, column: 5, scope: !1846)
!2318 = !DILocation(line: 219, column: 8, scope: !1846)
!2319 = !DILocation(line: 219, column: 18, scope: !1846)
!2320 = !DILocation(line: 221, column: 12, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !1846, file: !1807, line: 221, column: 5)
!2322 = !DILocation(line: 221, column: 10, scope: !2321)
!2323 = !DILocation(line: 221, column: 17, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !2325, file: !1807, discriminator: 1)
!2325 = distinct !DILexicalBlock(scope: !2321, file: !1807, line: 221, column: 5)
!2326 = !DILocation(line: 221, column: 19, scope: !2324)
!2327 = !DILocation(line: 221, column: 5, scope: !2324)
!2328 = !DILocation(line: 222, column: 44, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2325, file: !1807, line: 221, column: 29)
!2330 = !DILocation(line: 222, column: 24, scope: !2329)
!2331 = !DILocation(line: 222, column: 27, scope: !2329)
!2332 = !DILocation(line: 222, column: 19, scope: !2329)
!2333 = !DILocation(line: 222, column: 9, scope: !2329)
!2334 = !DILocation(line: 222, column: 12, scope: !2329)
!2335 = !DILocation(line: 222, column: 22, scope: !2329)
!2336 = !DILocation(line: 223, column: 33, scope: !2329)
!2337 = !DILocation(line: 223, column: 24, scope: !2329)
!2338 = !DILocation(line: 223, column: 27, scope: !2329)
!2339 = !DILocation(line: 223, column: 19, scope: !2329)
!2340 = !DILocation(line: 223, column: 9, scope: !2329)
!2341 = !DILocation(line: 223, column: 12, scope: !2329)
!2342 = !DILocation(line: 223, column: 22, scope: !2329)
!2343 = !DILocation(line: 224, column: 5, scope: !2329)
!2344 = !DILocation(line: 221, column: 25, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2325, file: !1807, discriminator: 2)
!2346 = !DILocation(line: 221, column: 5, scope: !2345)
!2347 = distinct !{!2347, !2348}
!2348 = !DILocation(line: 221, column: 5, scope: !1846)
!2349 = !DILocation(line: 226, column: 5, scope: !1846)
!2350 = distinct !DISubprogram(name: "ac3_decode_frame", scope: !1807, file: !1807, line: 1462, type: !1778, isLocal: true, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!2351 = !DILocalVariable(name: "x", arg: 1, scope: !2352, file: !2353, line: 58, type: !1023)
!2352 = distinct !DISubprogram(name: "av_bswap16", scope: !2353, file: !2353, line: 58, type: !2354, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!2353 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!1023, !1023}
!2356 = !DILocation(line: 58, column: 98, scope: !2352, inlinedAt: !2357)
!2357 = distinct !DILocation(line: 1500, column: 26, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2359, file: !1807, discriminator: 1)
!2359 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1500, column: 9)
!2360 = !DILocalVariable(name: "avctx", arg: 1, scope: !2350, file: !1807, line: 1462, type: !1173)
!2361 = !DILocation(line: 1462, column: 46, scope: !2350)
!2362 = !DILocalVariable(name: "data", arg: 2, scope: !2350, file: !1807, line: 1462, type: !1029)
!2363 = !DILocation(line: 1462, column: 59, scope: !2350)
!2364 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2350, file: !1807, line: 1463, type: !1465)
!2365 = !DILocation(line: 1463, column: 34, scope: !2350)
!2366 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2350, file: !1807, line: 1463, type: !1319)
!2367 = !DILocation(line: 1463, column: 59, scope: !2350)
!2368 = !DILocalVariable(name: "frame", scope: !2350, file: !1807, line: 1465, type: !1195)
!2369 = !DILocation(line: 1465, column: 14, scope: !2350)
!2370 = !DILocation(line: 1465, column: 22, scope: !2350)
!2371 = !DILocalVariable(name: "buf", scope: !2350, file: !1807, line: 1466, type: !1612)
!2372 = !DILocation(line: 1466, column: 20, scope: !2350)
!2373 = !DILocation(line: 1466, column: 26, scope: !2350)
!2374 = !DILocation(line: 1466, column: 33, scope: !2350)
!2375 = !DILocalVariable(name: "buf_size", scope: !2350, file: !1807, line: 1467, type: !1015)
!2376 = !DILocation(line: 1467, column: 9, scope: !2350)
!2377 = !DILocalVariable(name: "full_buf_size", scope: !2350, file: !1807, line: 1467, type: !1015)
!2378 = !DILocation(line: 1467, column: 19, scope: !2350)
!2379 = !DILocation(line: 1467, column: 35, scope: !2350)
!2380 = !DILocation(line: 1467, column: 42, scope: !2350)
!2381 = !DILocalVariable(name: "s", scope: !2350, file: !1807, line: 1468, type: !1852)
!2382 = !DILocation(line: 1468, column: 23, scope: !2350)
!2383 = !DILocation(line: 1468, column: 27, scope: !2350)
!2384 = !DILocation(line: 1468, column: 34, scope: !2350)
!2385 = !DILocalVariable(name: "blk", scope: !2350, file: !1807, line: 1469, type: !1015)
!2386 = !DILocation(line: 1469, column: 9, scope: !2350)
!2387 = !DILocalVariable(name: "ch", scope: !2350, file: !1807, line: 1469, type: !1015)
!2388 = !DILocation(line: 1469, column: 14, scope: !2350)
!2389 = !DILocalVariable(name: "err", scope: !2350, file: !1807, line: 1469, type: !1015)
!2390 = !DILocation(line: 1469, column: 18, scope: !2350)
!2391 = !DILocalVariable(name: "offset", scope: !2350, file: !1807, line: 1469, type: !1015)
!2392 = !DILocation(line: 1469, column: 23, scope: !2350)
!2393 = !DILocalVariable(name: "ret", scope: !2350, file: !1807, line: 1469, type: !1015)
!2394 = !DILocation(line: 1469, column: 31, scope: !2350)
!2395 = !DILocalVariable(name: "i", scope: !2350, file: !1807, line: 1470, type: !1015)
!2396 = !DILocation(line: 1470, column: 9, scope: !2350)
!2397 = !DILocalVariable(name: "skip", scope: !2350, file: !1807, line: 1471, type: !1015)
!2398 = !DILocation(line: 1471, column: 9, scope: !2350)
!2399 = !DILocalVariable(name: "got_independent_frame", scope: !2350, file: !1807, line: 1471, type: !1015)
!2400 = !DILocation(line: 1471, column: 19, scope: !2350)
!2401 = !DILocalVariable(name: "channel_map", scope: !2350, file: !1807, line: 1472, type: !1612)
!2402 = !DILocation(line: 1472, column: 20, scope: !2350)
!2403 = !DILocalVariable(name: "extended_channel_map", scope: !2350, file: !1807, line: 1473, type: !2404)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 128, align: 8, elements: !1825)
!2405 = !DILocation(line: 1473, column: 13, scope: !2350)
!2406 = !DILocalVariable(name: "output", scope: !2350, file: !1807, line: 1474, type: !2407)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 448, align: 64, elements: !1922)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64, align: 64)
!2409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!2410 = !DILocation(line: 1474, column: 23, scope: !2350)
!2411 = !DILocalVariable(name: "matrix_encoding", scope: !2350, file: !1807, line: 1475, type: !919)
!2412 = !DILocation(line: 1475, column: 27, scope: !2350)
!2413 = !DILocalVariable(name: "downmix_info", scope: !2350, file: !1807, line: 1476, type: !2414)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64, align: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDownmixInfo", file: !931, line: 93, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDownmixInfo", file: !931, line: 58, size: 384, align: 64, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421, !2422, !2423}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_downmix_type", scope: !2416, file: !931, line: 62, baseType: !930, size: 32, align: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !2416, file: !931, line: 68, baseType: !1109, size: 64, align: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level_ltrt", scope: !2416, file: !931, line: 74, baseType: !1109, size: 64, align: 64, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !2416, file: !931, line: 80, baseType: !1109, size: 64, align: 64, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level_ltrt", scope: !2416, file: !931, line: 86, baseType: !1109, size: 64, align: 64, offset: 256)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level", scope: !2416, file: !931, line: 92, baseType: !1109, size: 64, align: 64, offset: 320)
!2424 = !DILocation(line: 1476, column: 20, scope: !2350)
!2425 = !DILocation(line: 1478, column: 5, scope: !2350)
!2426 = !DILocation(line: 1478, column: 8, scope: !2350)
!2427 = !DILocation(line: 1478, column: 24, scope: !2350)
!2428 = !DILocation(line: 1480, column: 16, scope: !2350)
!2429 = !DILocation(line: 1480, column: 14, scope: !2350)
!2430 = !DILocation(line: 1481, column: 12, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1481, column: 5)
!2432 = !DILocation(line: 1481, column: 10, scope: !2431)
!2433 = !DILocation(line: 1481, column: 17, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !2435, file: !1807, discriminator: 1)
!2435 = distinct !DILexicalBlock(scope: !2431, file: !1807, line: 1481, column: 5)
!2436 = !DILocation(line: 1481, column: 21, scope: !2434)
!2437 = !DILocation(line: 1481, column: 19, scope: !2434)
!2438 = !DILocation(line: 1481, column: 5, scope: !2434)
!2439 = !DILocation(line: 1482, column: 17, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2441, file: !1807, line: 1482, column: 13)
!2441 = distinct !DILexicalBlock(scope: !2435, file: !1807, line: 1481, column: 39)
!2442 = !DILocation(line: 1482, column: 13, scope: !2440)
!2443 = !DILocation(line: 1482, column: 20, scope: !2440)
!2444 = !DILocation(line: 1482, column: 28, scope: !2440)
!2445 = !DILocation(line: 1482, column: 35, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !2440, file: !1807, discriminator: 1)
!2447 = !DILocation(line: 1482, column: 31, scope: !2446)
!2448 = !DILocation(line: 1482, column: 38, scope: !2446)
!2449 = !DILocation(line: 1482, column: 13, scope: !2446)
!2450 = !DILocation(line: 1483, column: 22, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2452, file: !1807, line: 1483, column: 17)
!2452 = distinct !DILexicalBlock(scope: !2440, file: !1807, line: 1482, column: 47)
!2453 = !DILocation(line: 1483, column: 18, scope: !2451)
!2454 = !DILocation(line: 1483, column: 31, scope: !2451)
!2455 = !DILocation(line: 1483, column: 32, scope: !2451)
!2456 = !DILocation(line: 1483, column: 27, scope: !2451)
!2457 = !DILocation(line: 1483, column: 25, scope: !2451)
!2458 = !DILocation(line: 1483, column: 37, scope: !2451)
!2459 = !DILocation(line: 1483, column: 17, scope: !2452)
!2460 = !DILocation(line: 1484, column: 18, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2451, file: !1807, line: 1483, column: 55)
!2462 = !DILocation(line: 1485, column: 17, scope: !2461)
!2463 = !DILocation(line: 1486, column: 29, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2451, file: !1807, line: 1486, column: 24)
!2465 = !DILocation(line: 1486, column: 25, scope: !2464)
!2466 = !DILocation(line: 1486, column: 38, scope: !2464)
!2467 = !DILocation(line: 1486, column: 39, scope: !2464)
!2468 = !DILocation(line: 1486, column: 34, scope: !2464)
!2469 = !DILocation(line: 1486, column: 32, scope: !2464)
!2470 = !DILocation(line: 1486, column: 44, scope: !2464)
!2471 = !DILocation(line: 1486, column: 24, scope: !2451)
!2472 = !DILocation(line: 1487, column: 17, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2464, file: !1807, line: 1486, column: 62)
!2474 = !DILocation(line: 1489, column: 9, scope: !2452)
!2475 = !DILocation(line: 1490, column: 5, scope: !2441)
!2476 = !DILocation(line: 1481, column: 33, scope: !2477)
!2477 = !DILexicalBlockFile(scope: !2435, file: !1807, discriminator: 2)
!2478 = !DILocation(line: 1481, column: 5, scope: !2477)
!2479 = distinct !{!2479, !2480}
!2480 = !DILocation(line: 1481, column: 5, scope: !2350)
!2481 = !DILocation(line: 1491, column: 9, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1491, column: 9)
!2483 = !DILocation(line: 1491, column: 14, scope: !2482)
!2484 = !DILocation(line: 1491, column: 11, scope: !2482)
!2485 = !DILocation(line: 1491, column: 9, scope: !2350)
!2486 = !DILocation(line: 1492, column: 9, scope: !2482)
!2487 = !DILocation(line: 1493, column: 9, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1493, column: 9)
!2489 = !DILocation(line: 1493, column: 11, scope: !2488)
!2490 = !DILocation(line: 1493, column: 9, scope: !2350)
!2491 = !DILocation(line: 1494, column: 16, scope: !2488)
!2492 = !DILocation(line: 1494, column: 9, scope: !2488)
!2493 = !DILocation(line: 1495, column: 12, scope: !2350)
!2494 = !DILocation(line: 1495, column: 9, scope: !2350)
!2495 = !DILocation(line: 1496, column: 17, scope: !2350)
!2496 = !DILocation(line: 1496, column: 14, scope: !2350)
!2497 = !DILocation(line: 1500, column: 9, scope: !2359)
!2498 = !DILocation(line: 1500, column: 18, scope: !2359)
!2499 = !DILocation(line: 1500, column: 23, scope: !2359)
!2500 = !DILocation(line: 1500, column: 69, scope: !2358)
!2501 = !DILocation(line: 1500, column: 76, scope: !2358)
!2502 = !DILocation(line: 1500, column: 26, scope: !2358)
!2503 = !DILocation(line: 60, column: 9, scope: !2352, inlinedAt: !2357)
!2504 = !DILocation(line: 60, column: 10, scope: !2352, inlinedAt: !2357)
!2505 = !DILocation(line: 60, column: 18, scope: !2352, inlinedAt: !2357)
!2506 = !DILocation(line: 60, column: 19, scope: !2352, inlinedAt: !2357)
!2507 = !DILocation(line: 60, column: 15, scope: !2352, inlinedAt: !2357)
!2508 = !DILocation(line: 60, column: 8, scope: !2352, inlinedAt: !2357)
!2509 = !DILocation(line: 60, column: 6, scope: !2352, inlinedAt: !2357)
!2510 = !DILocation(line: 61, column: 12, scope: !2352, inlinedAt: !2357)
!2511 = !DILocation(line: 1500, column: 80, scope: !2358)
!2512 = !DILocation(line: 1500, column: 9, scope: !2358)
!2513 = !DILocalVariable(name: "cnt", scope: !2514, file: !1807, line: 1502, type: !1015)
!2514 = distinct !DILexicalBlock(scope: !2359, file: !1807, line: 1500, column: 91)
!2515 = !DILocation(line: 1502, column: 13, scope: !2514)
!2516 = !DILocation(line: 1502, column: 21, scope: !2514)
!2517 = !DILocation(line: 1502, column: 31, scope: !2514)
!2518 = !DILocation(line: 1502, column: 20, scope: !2514)
!2519 = !DILocation(line: 1502, column: 20, scope: !2520)
!2520 = !DILexicalBlockFile(scope: !2514, file: !1807, discriminator: 1)
!2521 = !DILocation(line: 1502, column: 54, scope: !2522)
!2522 = !DILexicalBlockFile(scope: !2514, file: !1807, discriminator: 2)
!2523 = !DILocation(line: 1502, column: 20, scope: !2522)
!2524 = !DILocation(line: 1502, column: 20, scope: !2525)
!2525 = !DILexicalBlockFile(scope: !2514, file: !1807, discriminator: 3)
!2526 = !DILocation(line: 1502, column: 65, scope: !2525)
!2527 = !DILocation(line: 1502, column: 13, scope: !2525)
!2528 = !DILocation(line: 1503, column: 9, scope: !2514)
!2529 = !DILocation(line: 1503, column: 12, scope: !2514)
!2530 = !DILocation(line: 1503, column: 17, scope: !2514)
!2531 = !DILocation(line: 1503, column: 42, scope: !2514)
!2532 = !DILocation(line: 1503, column: 45, scope: !2514)
!2533 = !DILocation(line: 1503, column: 29, scope: !2514)
!2534 = !DILocation(line: 1504, column: 48, scope: !2514)
!2535 = !DILocation(line: 1504, column: 29, scope: !2514)
!2536 = !DILocation(line: 1504, column: 53, scope: !2514)
!2537 = !DILocation(line: 1505, column: 5, scope: !2514)
!2538 = !DILocation(line: 1506, column: 16, scope: !2359)
!2539 = !DILocation(line: 1506, column: 19, scope: !2359)
!2540 = !DILocation(line: 1506, column: 9, scope: !2359)
!2541 = !DILocation(line: 1506, column: 33, scope: !2359)
!2542 = !DILocation(line: 1506, column: 40, scope: !2359)
!2543 = !DILocation(line: 1506, column: 50, scope: !2359)
!2544 = !DILocation(line: 1506, column: 39, scope: !2359)
!2545 = !DILocation(line: 1506, column: 39, scope: !2358)
!2546 = !DILocation(line: 1506, column: 73, scope: !2547)
!2547 = !DILexicalBlockFile(scope: !2359, file: !1807, discriminator: 2)
!2548 = !DILocation(line: 1506, column: 39, scope: !2547)
!2549 = !DILocation(line: 1506, column: 39, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2359, file: !1807, discriminator: 3)
!2551 = !DILocation(line: 1506, column: 38, scope: !2550)
!2552 = !DILocation(line: 1506, column: 9, scope: !2550)
!2553 = !DILocation(line: 1511, column: 9, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1511, column: 9)
!2555 = !DILocation(line: 1511, column: 12, scope: !2554)
!2556 = !DILocation(line: 1511, column: 9, scope: !2350)
!2557 = !DILocation(line: 1512, column: 32, scope: !2554)
!2558 = !DILocation(line: 1512, column: 35, scope: !2554)
!2559 = !DILocation(line: 1512, column: 47, scope: !2554)
!2560 = !DILocation(line: 1512, column: 50, scope: !2554)
!2561 = !DILocation(line: 1512, column: 66, scope: !2554)
!2562 = !DILocation(line: 1512, column: 76, scope: !2554)
!2563 = !DILocation(line: 1512, column: 65, scope: !2554)
!2564 = !DILocation(line: 1512, column: 65, scope: !2565)
!2565 = !DILexicalBlockFile(scope: !2554, file: !1807, discriminator: 1)
!2566 = !DILocation(line: 1512, column: 99, scope: !2567)
!2567 = !DILexicalBlockFile(scope: !2554, file: !1807, discriminator: 2)
!2568 = !DILocation(line: 1512, column: 65, scope: !2567)
!2569 = !DILocation(line: 1512, column: 65, scope: !2570)
!2570 = !DILexicalBlockFile(scope: !2554, file: !1807, discriminator: 3)
!2571 = !DILocation(line: 1512, column: 9, scope: !2570)
!2572 = !DILocation(line: 1514, column: 11, scope: !2350)
!2573 = !DILocation(line: 1514, column: 14, scope: !2350)
!2574 = !DILocation(line: 1514, column: 9, scope: !2350)
!2575 = !DILocation(line: 1514, column: 5, scope: !2350)
!2576 = !DILocation(line: 1517, column: 32, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1517, column: 9)
!2578 = !DILocation(line: 1517, column: 35, scope: !2577)
!2579 = !DILocation(line: 1517, column: 40, scope: !2577)
!2580 = !DILocation(line: 1517, column: 45, scope: !2577)
!2581 = !DILocation(line: 1517, column: 16, scope: !2577)
!2582 = !DILocation(line: 1517, column: 14, scope: !2577)
!2583 = !DILocation(line: 1517, column: 56, scope: !2577)
!2584 = !DILocation(line: 1517, column: 9, scope: !2350)
!2585 = !DILocation(line: 1518, column: 16, scope: !2577)
!2586 = !DILocation(line: 1518, column: 9, scope: !2577)
!2587 = !DILocation(line: 1521, column: 30, scope: !2350)
!2588 = !DILocation(line: 1521, column: 11, scope: !2350)
!2589 = !DILocation(line: 1521, column: 9, scope: !2350)
!2590 = !DILocation(line: 1523, column: 9, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1523, column: 9)
!2592 = !DILocation(line: 1523, column: 9, scope: !2350)
!2593 = !DILocation(line: 1524, column: 17, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2591, file: !1807, line: 1523, column: 14)
!2595 = !DILocation(line: 1524, column: 9, scope: !2594)
!2596 = !DILocation(line: 1526, column: 20, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2594, file: !1807, line: 1524, column: 22)
!2598 = !DILocation(line: 1526, column: 13, scope: !2597)
!2599 = !DILocation(line: 1527, column: 13, scope: !2597)
!2600 = !DILocation(line: 1529, column: 20, scope: !2597)
!2601 = !DILocation(line: 1529, column: 13, scope: !2597)
!2602 = !DILocation(line: 1530, column: 13, scope: !2597)
!2603 = !DILocation(line: 1532, column: 20, scope: !2597)
!2604 = !DILocation(line: 1532, column: 13, scope: !2597)
!2605 = !DILocation(line: 1533, column: 13, scope: !2597)
!2606 = !DILocation(line: 1535, column: 20, scope: !2597)
!2607 = !DILocation(line: 1535, column: 13, scope: !2597)
!2608 = !DILocation(line: 1536, column: 13, scope: !2597)
!2609 = !DILocation(line: 1540, column: 17, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2597, file: !1807, line: 1540, column: 17)
!2611 = !DILocation(line: 1540, column: 20, scope: !2610)
!2612 = !DILocation(line: 1540, column: 17, scope: !2597)
!2613 = !DILocation(line: 1541, column: 24, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2610, file: !1807, line: 1540, column: 33)
!2615 = !DILocation(line: 1543, column: 24, scope: !2614)
!2616 = !DILocation(line: 1543, column: 27, scope: !2614)
!2617 = !DILocation(line: 1541, column: 17, scope: !2614)
!2618 = !DILocation(line: 1544, column: 18, scope: !2614)
!2619 = !DILocation(line: 1544, column: 32, scope: !2614)
!2620 = !DILocation(line: 1545, column: 24, scope: !2614)
!2621 = !DILocation(line: 1545, column: 17, scope: !2614)
!2622 = !DILocation(line: 1547, column: 24, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2610, file: !1807, line: 1546, column: 20)
!2624 = !DILocation(line: 1547, column: 17, scope: !2623)
!2625 = !DILocation(line: 1549, column: 13, scope: !2597)
!2626 = !DILocation(line: 1552, column: 13, scope: !2597)
!2627 = !DILocation(line: 1554, column: 14, scope: !2597)
!2628 = !DILocation(line: 1554, column: 28, scope: !2597)
!2629 = !DILocation(line: 1555, column: 20, scope: !2597)
!2630 = !DILocation(line: 1555, column: 13, scope: !2597)
!2631 = !DILocation(line: 1557, column: 5, scope: !2594)
!2632 = !DILocation(line: 1559, column: 13, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2634, file: !1807, line: 1559, column: 13)
!2634 = distinct !DILexicalBlock(scope: !2591, file: !1807, line: 1557, column: 12)
!2635 = !DILocation(line: 1559, column: 16, scope: !2633)
!2636 = !DILocation(line: 1559, column: 29, scope: !2633)
!2637 = !DILocation(line: 1559, column: 27, scope: !2633)
!2638 = !DILocation(line: 1559, column: 13, scope: !2634)
!2639 = !DILocation(line: 1560, column: 20, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2633, file: !1807, line: 1559, column: 39)
!2641 = !DILocation(line: 1560, column: 13, scope: !2640)
!2642 = !DILocation(line: 1561, column: 17, scope: !2640)
!2643 = !DILocation(line: 1562, column: 9, scope: !2640)
!2644 = !DILocation(line: 1562, column: 20, scope: !2645)
!2645 = !DILexicalBlockFile(scope: !2646, file: !1807, discriminator: 1)
!2646 = distinct !DILexicalBlock(scope: !2633, file: !1807, line: 1562, column: 20)
!2647 = !DILocation(line: 1562, column: 27, scope: !2645)
!2648 = !DILocation(line: 1562, column: 43, scope: !2645)
!2649 = !DILocation(line: 1564, column: 24, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !1807, line: 1564, column: 17)
!2651 = distinct !DILexicalBlock(scope: !2646, file: !1807, line: 1562, column: 63)
!2652 = !DILocation(line: 1564, column: 62, scope: !2650)
!2653 = !DILocation(line: 1565, column: 24, scope: !2650)
!2654 = !DILocation(line: 1565, column: 27, scope: !2650)
!2655 = !DILocation(line: 1565, column: 38, scope: !2650)
!2656 = !DILocation(line: 1564, column: 17, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2650, file: !1807, discriminator: 1)
!2658 = !DILocation(line: 1564, column: 17, scope: !2650)
!2659 = !DILocation(line: 1564, column: 17, scope: !2651)
!2660 = !DILocation(line: 1566, column: 24, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2650, file: !1807, line: 1565, column: 44)
!2662 = !DILocation(line: 1566, column: 17, scope: !2661)
!2663 = !DILocation(line: 1567, column: 21, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !1807, line: 1567, column: 21)
!2665 = !DILocation(line: 1567, column: 28, scope: !2664)
!2666 = !DILocation(line: 1567, column: 44, scope: !2664)
!2667 = !DILocation(line: 1567, column: 21, scope: !2661)
!2668 = !DILocation(line: 1568, column: 21, scope: !2664)
!2669 = !DILocation(line: 1569, column: 21, scope: !2661)
!2670 = !DILocation(line: 1570, column: 13, scope: !2661)
!2671 = !DILocation(line: 1571, column: 9, scope: !2651)
!2672 = !DILocation(line: 1574, column: 9, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1574, column: 9)
!2674 = !DILocation(line: 1574, column: 12, scope: !2673)
!2675 = !DILocation(line: 1574, column: 23, scope: !2673)
!2676 = !DILocation(line: 1574, column: 52, scope: !2673)
!2677 = !DILocation(line: 1574, column: 56, scope: !2678)
!2678 = !DILexicalBlockFile(scope: !2673, file: !1807, discriminator: 1)
!2679 = !DILocation(line: 1574, column: 9, scope: !2678)
!2680 = !DILocation(line: 1575, column: 16, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2673, file: !1807, line: 1574, column: 79)
!2682 = !DILocation(line: 1575, column: 9, scope: !2681)
!2683 = !DILocation(line: 1576, column: 10, scope: !2681)
!2684 = !DILocation(line: 1576, column: 24, scope: !2681)
!2685 = !DILocation(line: 1577, column: 18, scope: !2681)
!2686 = !DILocation(line: 1577, column: 36, scope: !2681)
!2687 = !DILocation(line: 1577, column: 39, scope: !2681)
!2688 = !DILocation(line: 1577, column: 33, scope: !2681)
!2689 = !DILocation(line: 1577, column: 17, scope: !2681)
!2690 = !DILocation(line: 1577, column: 54, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2681, file: !1807, discriminator: 1)
!2692 = !DILocation(line: 1577, column: 57, scope: !2691)
!2693 = !DILocation(line: 1577, column: 17, scope: !2691)
!2694 = !DILocation(line: 1577, column: 72, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2681, file: !1807, discriminator: 2)
!2696 = !DILocation(line: 1577, column: 17, scope: !2695)
!2697 = !DILocation(line: 1577, column: 17, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2681, file: !1807, discriminator: 3)
!2699 = !DILocation(line: 1577, column: 9, scope: !2698)
!2700 = !DILocation(line: 1581, column: 10, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1581, column: 9)
!2702 = !DILocation(line: 1581, column: 14, scope: !2701)
!2703 = !DILocation(line: 1581, column: 18, scope: !2704)
!2704 = !DILexicalBlockFile(scope: !2701, file: !1807, discriminator: 1)
!2705 = !DILocation(line: 1581, column: 21, scope: !2704)
!2706 = !DILocation(line: 1581, column: 30, scope: !2704)
!2707 = !DILocation(line: 1581, column: 33, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2701, file: !1807, discriminator: 2)
!2709 = !DILocation(line: 1581, column: 36, scope: !2708)
!2710 = !DILocation(line: 1581, column: 52, scope: !2708)
!2711 = !DILocation(line: 1581, column: 55, scope: !2708)
!2712 = !DILocation(line: 1581, column: 49, scope: !2708)
!2713 = !DILocation(line: 1581, column: 9, scope: !2708)
!2714 = !DILocation(line: 1582, column: 27, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2701, file: !1807, line: 1581, column: 66)
!2716 = !DILocation(line: 1582, column: 30, scope: !2715)
!2717 = !DILocation(line: 1582, column: 9, scope: !2715)
!2718 = !DILocation(line: 1582, column: 12, scope: !2715)
!2719 = !DILocation(line: 1582, column: 25, scope: !2715)
!2720 = !DILocation(line: 1583, column: 26, scope: !2715)
!2721 = !DILocation(line: 1583, column: 29, scope: !2715)
!2722 = !DILocation(line: 1583, column: 9, scope: !2715)
!2723 = !DILocation(line: 1583, column: 12, scope: !2715)
!2724 = !DILocation(line: 1583, column: 24, scope: !2715)
!2725 = !DILocation(line: 1584, column: 13, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2715, file: !1807, line: 1584, column: 13)
!2727 = !DILocation(line: 1584, column: 16, scope: !2726)
!2728 = !DILocation(line: 1584, column: 13, scope: !2715)
!2729 = !DILocation(line: 1585, column: 13, scope: !2726)
!2730 = !DILocation(line: 1585, column: 16, scope: !2726)
!2731 = !DILocation(line: 1585, column: 28, scope: !2726)
!2732 = !DILocation(line: 1586, column: 13, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2715, file: !1807, line: 1586, column: 13)
!2734 = !DILocation(line: 1586, column: 16, scope: !2733)
!2735 = !DILocation(line: 1586, column: 25, scope: !2733)
!2736 = !DILocation(line: 1586, column: 29, scope: !2733)
!2737 = !DILocation(line: 1587, column: 13, scope: !2733)
!2738 = !DILocation(line: 1587, column: 20, scope: !2733)
!2739 = !DILocation(line: 1587, column: 43, scope: !2733)
!2740 = !DILocation(line: 1586, column: 13, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !2715, file: !1807, discriminator: 1)
!2742 = !DILocation(line: 1588, column: 13, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2733, file: !1807, line: 1587, column: 60)
!2744 = !DILocation(line: 1588, column: 16, scope: !2743)
!2745 = !DILocation(line: 1588, column: 29, scope: !2743)
!2746 = !DILocation(line: 1589, column: 13, scope: !2743)
!2747 = !DILocation(line: 1589, column: 16, scope: !2743)
!2748 = !DILocation(line: 1589, column: 28, scope: !2743)
!2749 = !DILocation(line: 1590, column: 9, scope: !2743)
!2750 = !DILocation(line: 1590, column: 20, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !2752, file: !1807, discriminator: 1)
!2752 = distinct !DILexicalBlock(scope: !2733, file: !1807, line: 1590, column: 20)
!2753 = !DILocation(line: 1590, column: 23, scope: !2751)
!2754 = !DILocation(line: 1590, column: 32, scope: !2751)
!2755 = !DILocation(line: 1590, column: 36, scope: !2751)
!2756 = !DILocation(line: 1591, column: 20, scope: !2752)
!2757 = !DILocation(line: 1591, column: 27, scope: !2752)
!2758 = !DILocation(line: 1591, column: 50, scope: !2752)
!2759 = !DILocation(line: 1590, column: 20, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2733, file: !1807, discriminator: 2)
!2761 = !DILocation(line: 1592, column: 13, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2752, file: !1807, line: 1591, column: 78)
!2763 = !DILocation(line: 1592, column: 16, scope: !2762)
!2764 = !DILocation(line: 1592, column: 29, scope: !2762)
!2765 = !DILocation(line: 1593, column: 13, scope: !2762)
!2766 = !DILocation(line: 1593, column: 16, scope: !2762)
!2767 = !DILocation(line: 1593, column: 28, scope: !2762)
!2768 = !DILocation(line: 1594, column: 9, scope: !2762)
!2769 = !DILocation(line: 1596, column: 48, scope: !2715)
!2770 = !DILocation(line: 1596, column: 52, scope: !2715)
!2771 = !DILocation(line: 1596, column: 36, scope: !2715)
!2772 = !DILocation(line: 1596, column: 9, scope: !2715)
!2773 = !DILocation(line: 1596, column: 12, scope: !2715)
!2774 = !DILocation(line: 1596, column: 34, scope: !2715)
!2775 = !DILocation(line: 1597, column: 50, scope: !2715)
!2776 = !DILocation(line: 1597, column: 53, scope: !2715)
!2777 = !DILocation(line: 1597, column: 38, scope: !2715)
!2778 = !DILocation(line: 1597, column: 9, scope: !2715)
!2779 = !DILocation(line: 1597, column: 12, scope: !2715)
!2780 = !DILocation(line: 1597, column: 36, scope: !2715)
!2781 = !DILocation(line: 1598, column: 9, scope: !2715)
!2782 = !DILocation(line: 1598, column: 12, scope: !2715)
!2783 = !DILocation(line: 1598, column: 34, scope: !2715)
!2784 = !DILocation(line: 1599, column: 9, scope: !2715)
!2785 = !DILocation(line: 1599, column: 12, scope: !2715)
!2786 = !DILocation(line: 1599, column: 36, scope: !2715)
!2787 = !DILocation(line: 1601, column: 13, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2715, file: !1807, line: 1601, column: 13)
!2789 = !DILocation(line: 1601, column: 16, scope: !2788)
!2790 = !DILocation(line: 1601, column: 28, scope: !2788)
!2791 = !DILocation(line: 1601, column: 31, scope: !2788)
!2792 = !DILocation(line: 1601, column: 25, scope: !2788)
!2793 = !DILocation(line: 1601, column: 44, scope: !2788)
!2794 = !DILocation(line: 1601, column: 50, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !2788, file: !1807, discriminator: 1)
!2796 = !DILocation(line: 1601, column: 53, scope: !2795)
!2797 = !DILocation(line: 1601, column: 65, scope: !2795)
!2798 = !DILocation(line: 1601, column: 70, scope: !2795)
!2799 = !DILocation(line: 1602, column: 17, scope: !2788)
!2800 = !DILocation(line: 1602, column: 20, scope: !2788)
!2801 = !DILocation(line: 1602, column: 36, scope: !2788)
!2802 = !DILocation(line: 1602, column: 39, scope: !2788)
!2803 = !DILocation(line: 1602, column: 33, scope: !2788)
!2804 = !DILocation(line: 1601, column: 13, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !2715, file: !1807, discriminator: 2)
!2806 = !DILocation(line: 1603, column: 43, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !1807, line: 1603, column: 17)
!2808 = distinct !DILexicalBlock(scope: !2788, file: !1807, line: 1602, column: 54)
!2809 = !DILocation(line: 1603, column: 24, scope: !2807)
!2810 = !DILocation(line: 1603, column: 22, scope: !2807)
!2811 = !DILocation(line: 1603, column: 47, scope: !2807)
!2812 = !DILocation(line: 1603, column: 17, scope: !2808)
!2813 = !DILocation(line: 1604, column: 24, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2807, file: !1807, line: 1603, column: 52)
!2815 = !DILocation(line: 1604, column: 17, scope: !2814)
!2816 = !DILocation(line: 1605, column: 24, scope: !2814)
!2817 = !DILocation(line: 1605, column: 17, scope: !2814)
!2818 = !DILocation(line: 1607, column: 9, scope: !2808)
!2819 = !DILocation(line: 1608, column: 5, scope: !2715)
!2820 = !DILocation(line: 1608, column: 17, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2822, file: !1807, discriminator: 1)
!2822 = distinct !DILexicalBlock(scope: !2701, file: !1807, line: 1608, column: 16)
!2823 = !DILocation(line: 1608, column: 20, scope: !2821)
!2824 = !DILocation(line: 1608, column: 16, scope: !2821)
!2825 = !DILocation(line: 1609, column: 16, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !1807, line: 1608, column: 30)
!2827 = !DILocation(line: 1609, column: 9, scope: !2826)
!2828 = !DILocation(line: 1610, column: 9, scope: !2826)
!2829 = !DILocation(line: 1612, column: 23, scope: !2350)
!2830 = !DILocation(line: 1612, column: 26, scope: !2350)
!2831 = !DILocation(line: 1612, column: 5, scope: !2350)
!2832 = !DILocation(line: 1612, column: 12, scope: !2350)
!2833 = !DILocation(line: 1612, column: 21, scope: !2350)
!2834 = !DILocation(line: 1613, column: 59, scope: !2350)
!2835 = !DILocation(line: 1613, column: 62, scope: !2350)
!2836 = !DILocation(line: 1613, column: 74, scope: !2350)
!2837 = !DILocation(line: 1613, column: 29, scope: !2350)
!2838 = !DILocation(line: 1613, column: 5, scope: !2350)
!2839 = !DILocation(line: 1613, column: 12, scope: !2350)
!2840 = !DILocation(line: 1613, column: 27, scope: !2350)
!2841 = !DILocation(line: 1614, column: 9, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1614, column: 9)
!2843 = !DILocation(line: 1614, column: 12, scope: !2842)
!2844 = !DILocation(line: 1614, column: 24, scope: !2842)
!2845 = !DILocation(line: 1614, column: 9, scope: !2350)
!2846 = !DILocation(line: 1615, column: 9, scope: !2842)
!2847 = !DILocation(line: 1615, column: 16, scope: !2842)
!2848 = !DILocation(line: 1615, column: 31, scope: !2842)
!2849 = !DILocation(line: 1618, column: 33, scope: !2350)
!2850 = !DILocation(line: 1618, column: 36, scope: !2350)
!2851 = !DILocation(line: 1618, column: 5, scope: !2350)
!2852 = !DILocation(line: 1618, column: 12, scope: !2350)
!2853 = !DILocation(line: 1618, column: 31, scope: !2350)
!2854 = !DILocation(line: 1619, column: 9, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1619, column: 9)
!2856 = !DILocation(line: 1619, column: 12, scope: !2855)
!2857 = !DILocation(line: 1619, column: 27, scope: !2855)
!2858 = !DILocation(line: 1619, column: 34, scope: !2855)
!2859 = !DILocation(line: 1619, column: 37, scope: !2860)
!2860 = !DILexicalBlockFile(scope: !2855, file: !1807, discriminator: 1)
!2861 = !DILocation(line: 1619, column: 40, scope: !2860)
!2862 = !DILocation(line: 1619, column: 49, scope: !2860)
!2863 = !DILocation(line: 1619, column: 9, scope: !2860)
!2864 = !DILocation(line: 1620, column: 9, scope: !2855)
!2865 = !DILocation(line: 1620, column: 16, scope: !2855)
!2866 = !DILocation(line: 1620, column: 35, scope: !2855)
!2867 = !DILocation(line: 1623, column: 63, scope: !2350)
!2868 = !DILocation(line: 1623, column: 66, scope: !2350)
!2869 = !DILocation(line: 1623, column: 19, scope: !2350)
!2870 = !DILocation(line: 1623, column: 42, scope: !2350)
!2871 = !DILocation(line: 1623, column: 45, scope: !2350)
!2872 = !DILocation(line: 1623, column: 57, scope: !2350)
!2873 = !DILocation(line: 1623, column: 17, scope: !2350)
!2874 = !DILocation(line: 1624, column: 14, scope: !2350)
!2875 = !DILocation(line: 1624, column: 17, scope: !2350)
!2876 = !DILocation(line: 1624, column: 28, scope: !2350)
!2877 = !DILocation(line: 1624, column: 12, scope: !2350)
!2878 = !DILocation(line: 1625, column: 13, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1625, column: 5)
!2880 = !DILocation(line: 1625, column: 10, scope: !2879)
!2881 = !DILocation(line: 1625, column: 18, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2883, file: !1807, discriminator: 1)
!2883 = distinct !DILexicalBlock(scope: !2879, file: !1807, line: 1625, column: 5)
!2884 = !DILocation(line: 1625, column: 21, scope: !2882)
!2885 = !DILocation(line: 1625, column: 5, scope: !2882)
!2886 = !DILocation(line: 1626, column: 32, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !1807, line: 1625, column: 32)
!2888 = !DILocation(line: 1626, column: 37, scope: !2887)
!2889 = !DILocation(line: 1626, column: 35, scope: !2887)
!2890 = !DILocation(line: 1626, column: 22, scope: !2887)
!2891 = !DILocation(line: 1626, column: 25, scope: !2887)
!2892 = !DILocation(line: 1626, column: 16, scope: !2887)
!2893 = !DILocation(line: 1626, column: 9, scope: !2887)
!2894 = !DILocation(line: 1626, column: 20, scope: !2887)
!2895 = !DILocation(line: 1627, column: 35, scope: !2887)
!2896 = !DILocation(line: 1627, column: 40, scope: !2887)
!2897 = !DILocation(line: 1627, column: 38, scope: !2887)
!2898 = !DILocation(line: 1627, column: 25, scope: !2887)
!2899 = !DILocation(line: 1627, column: 28, scope: !2887)
!2900 = !DILocation(line: 1627, column: 19, scope: !2887)
!2901 = !DILocation(line: 1627, column: 9, scope: !2887)
!2902 = !DILocation(line: 1627, column: 12, scope: !2887)
!2903 = !DILocation(line: 1627, column: 23, scope: !2887)
!2904 = !DILocation(line: 1628, column: 5, scope: !2887)
!2905 = !DILocation(line: 1625, column: 28, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2883, file: !1807, discriminator: 2)
!2907 = !DILocation(line: 1625, column: 5, scope: !2906)
!2908 = distinct !{!2908, !2909}
!2909 = !DILocation(line: 1625, column: 5, scope: !2350)
!2910 = !DILocation(line: 1629, column: 13, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1629, column: 5)
!2912 = !DILocation(line: 1629, column: 10, scope: !2911)
!2913 = !DILocation(line: 1629, column: 18, scope: !2914)
!2914 = !DILexicalBlockFile(scope: !2915, file: !1807, discriminator: 1)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !1807, line: 1629, column: 5)
!2916 = !DILocation(line: 1629, column: 23, scope: !2914)
!2917 = !DILocation(line: 1629, column: 26, scope: !2914)
!2918 = !DILocation(line: 1629, column: 21, scope: !2914)
!2919 = !DILocation(line: 1629, column: 5, scope: !2914)
!2920 = !DILocation(line: 1630, column: 13, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !1807, line: 1630, column: 13)
!2922 = distinct !DILexicalBlock(scope: !2915, file: !1807, line: 1629, column: 42)
!2923 = !DILocation(line: 1630, column: 18, scope: !2921)
!2924 = !DILocation(line: 1630, column: 21, scope: !2921)
!2925 = !DILocation(line: 1630, column: 16, scope: !2921)
!2926 = !DILocation(line: 1630, column: 13, scope: !2922)
!2927 = !DILocation(line: 1631, column: 59, scope: !2921)
!2928 = !DILocation(line: 1631, column: 64, scope: !2921)
!2929 = !DILocation(line: 1631, column: 62, scope: !2921)
!2930 = !DILocation(line: 1631, column: 42, scope: !2921)
!2931 = !DILocation(line: 1631, column: 45, scope: !2921)
!2932 = !DILocation(line: 1631, column: 35, scope: !2921)
!2933 = !DILocation(line: 1631, column: 23, scope: !2921)
!2934 = !DILocation(line: 1631, column: 13, scope: !2921)
!2935 = !DILocation(line: 1631, column: 16, scope: !2921)
!2936 = !DILocation(line: 1631, column: 40, scope: !2921)
!2937 = !DILocation(line: 1632, column: 5, scope: !2922)
!2938 = !DILocation(line: 1629, column: 38, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2915, file: !1807, discriminator: 2)
!2940 = !DILocation(line: 1629, column: 5, scope: !2939)
!2941 = distinct !{!2941, !2942}
!2942 = !DILocation(line: 1629, column: 5, scope: !2350)
!2943 = !DILocation(line: 1633, column: 14, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1633, column: 5)
!2945 = !DILocation(line: 1633, column: 10, scope: !2944)
!2946 = !DILocation(line: 1633, column: 19, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !2948, file: !1807, discriminator: 1)
!2948 = distinct !DILexicalBlock(scope: !2944, file: !1807, line: 1633, column: 5)
!2949 = !DILocation(line: 1633, column: 25, scope: !2947)
!2950 = !DILocation(line: 1633, column: 28, scope: !2947)
!2951 = !DILocation(line: 1633, column: 23, scope: !2947)
!2952 = !DILocation(line: 1633, column: 5, scope: !2947)
!2953 = !DILocation(line: 1634, column: 14, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !1807, line: 1634, column: 13)
!2955 = distinct !DILexicalBlock(scope: !2948, file: !1807, line: 1633, column: 47)
!2956 = !DILocation(line: 1634, column: 18, scope: !2954)
!2957 = !DILocation(line: 1634, column: 40, scope: !2958)
!2958 = !DILexicalBlockFile(scope: !2954, file: !1807, discriminator: 1)
!2959 = !DILocation(line: 1634, column: 43, scope: !2958)
!2960 = !DILocation(line: 1634, column: 48, scope: !2958)
!2961 = !DILocation(line: 1634, column: 21, scope: !2958)
!2962 = !DILocation(line: 1634, column: 13, scope: !2958)
!2963 = !DILocation(line: 1635, column: 20, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2954, file: !1807, line: 1634, column: 57)
!2965 = !DILocation(line: 1635, column: 13, scope: !2964)
!2966 = !DILocation(line: 1636, column: 17, scope: !2964)
!2967 = !DILocation(line: 1637, column: 9, scope: !2964)
!2968 = !DILocation(line: 1638, column: 13, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2955, file: !1807, line: 1638, column: 13)
!2970 = !DILocation(line: 1638, column: 13, scope: !2955)
!2971 = !DILocation(line: 1639, column: 21, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2969, file: !1807, line: 1639, column: 13)
!2973 = !DILocation(line: 1639, column: 18, scope: !2972)
!2974 = !DILocation(line: 1639, column: 26, scope: !2975)
!2975 = !DILexicalBlockFile(scope: !2976, file: !1807, discriminator: 1)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !1807, line: 1639, column: 13)
!2977 = !DILocation(line: 1639, column: 31, scope: !2975)
!2978 = !DILocation(line: 1639, column: 34, scope: !2975)
!2979 = !DILocation(line: 1639, column: 29, scope: !2975)
!2980 = !DILocation(line: 1639, column: 13, scope: !2975)
!2981 = !DILocation(line: 1640, column: 41, scope: !2976)
!2982 = !DILocation(line: 1640, column: 46, scope: !2976)
!2983 = !DILocation(line: 1640, column: 44, scope: !2976)
!2984 = !DILocation(line: 1640, column: 24, scope: !2976)
!2985 = !DILocation(line: 1640, column: 27, scope: !2976)
!2986 = !DILocation(line: 1640, column: 60, scope: !2976)
!2987 = !DILocation(line: 1640, column: 59, scope: !2976)
!2988 = !DILocation(line: 1640, column: 54, scope: !2976)
!2989 = !DILocation(line: 1640, column: 17, scope: !2976)
!2990 = !DILocation(line: 1640, column: 72, scope: !2976)
!2991 = !DILocation(line: 1640, column: 65, scope: !2976)
!2992 = !DILocation(line: 1639, column: 50, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2976, file: !1807, discriminator: 2)
!2994 = !DILocation(line: 1639, column: 13, scope: !2993)
!2995 = distinct !{!2995, !2996}
!2996 = !DILocation(line: 1639, column: 13, scope: !2969)
!2997 = !DILocation(line: 1640, column: 99, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !2972, file: !1807, discriminator: 1)
!2999 = !DILocation(line: 1641, column: 17, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2955, file: !1807, line: 1641, column: 9)
!3001 = !DILocation(line: 1641, column: 14, scope: !3000)
!3002 = !DILocation(line: 1641, column: 22, scope: !3003)
!3003 = !DILexicalBlockFile(scope: !3004, file: !1807, discriminator: 1)
!3004 = distinct !DILexicalBlock(scope: !3000, file: !1807, line: 1641, column: 9)
!3005 = !DILocation(line: 1641, column: 27, scope: !3003)
!3006 = !DILocation(line: 1641, column: 30, scope: !3003)
!3007 = !DILocation(line: 1641, column: 25, scope: !3003)
!3008 = !DILocation(line: 1641, column: 9, scope: !3003)
!3009 = !DILocation(line: 1642, column: 48, scope: !3004)
!3010 = !DILocation(line: 1642, column: 36, scope: !3004)
!3011 = !DILocation(line: 1642, column: 26, scope: !3004)
!3012 = !DILocation(line: 1642, column: 29, scope: !3004)
!3013 = !DILocation(line: 1642, column: 20, scope: !3004)
!3014 = !DILocation(line: 1642, column: 13, scope: !3004)
!3015 = !DILocation(line: 1642, column: 24, scope: !3004)
!3016 = !DILocation(line: 1641, column: 46, scope: !3017)
!3017 = !DILexicalBlockFile(scope: !3004, file: !1807, discriminator: 2)
!3018 = !DILocation(line: 1641, column: 9, scope: !3017)
!3019 = distinct !{!3019, !3020}
!3020 = !DILocation(line: 1641, column: 9, scope: !2955)
!3021 = !DILocation(line: 1643, column: 17, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2955, file: !1807, line: 1643, column: 9)
!3023 = !DILocation(line: 1643, column: 14, scope: !3022)
!3024 = !DILocation(line: 1643, column: 22, scope: !3025)
!3025 = !DILexicalBlockFile(scope: !3026, file: !1807, discriminator: 1)
!3026 = distinct !DILexicalBlock(scope: !3022, file: !1807, line: 1643, column: 9)
!3027 = !DILocation(line: 1643, column: 27, scope: !3025)
!3028 = !DILocation(line: 1643, column: 30, scope: !3025)
!3029 = !DILocation(line: 1643, column: 25, scope: !3025)
!3030 = !DILocation(line: 1643, column: 9, scope: !3025)
!3031 = !DILocation(line: 1644, column: 18, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !1807, line: 1644, column: 17)
!3033 = distinct !DILexicalBlock(scope: !3026, file: !1807, line: 1643, column: 50)
!3034 = !DILocation(line: 1644, column: 21, scope: !3032)
!3035 = !DILocation(line: 1644, column: 36, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3032, file: !1807, discriminator: 1)
!3037 = !DILocation(line: 1644, column: 24, scope: !3036)
!3038 = !DILocation(line: 1644, column: 17, scope: !3036)
!3039 = !DILocation(line: 1645, column: 39, scope: !3032)
!3040 = !DILocation(line: 1645, column: 27, scope: !3032)
!3041 = !DILocation(line: 1645, column: 17, scope: !3032)
!3042 = !DILocation(line: 1645, column: 20, scope: !3032)
!3043 = !DILocation(line: 1645, column: 44, scope: !3032)
!3044 = !DILocation(line: 1646, column: 9, scope: !3033)
!3045 = !DILocation(line: 1643, column: 46, scope: !3046)
!3046 = !DILexicalBlockFile(scope: !3026, file: !1807, discriminator: 2)
!3047 = !DILocation(line: 1643, column: 9, scope: !3046)
!3048 = distinct !{!3048, !3049}
!3049 = !DILocation(line: 1643, column: 9, scope: !2955)
!3050 = !DILocation(line: 1647, column: 5, scope: !2955)
!3051 = !DILocation(line: 1633, column: 43, scope: !3052)
!3052 = !DILexicalBlockFile(scope: !2948, file: !1807, discriminator: 2)
!3053 = !DILocation(line: 1633, column: 5, scope: !3052)
!3054 = distinct !{!3054, !3055}
!3055 = !DILocation(line: 1633, column: 5, scope: !2350)
!3056 = !DILocation(line: 1650, column: 13, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1650, column: 5)
!3058 = !DILocation(line: 1650, column: 10, scope: !3057)
!3059 = !DILocation(line: 1650, column: 18, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !3061, file: !1807, discriminator: 1)
!3061 = distinct !DILexicalBlock(scope: !3057, file: !1807, line: 1650, column: 5)
!3062 = !DILocation(line: 1650, column: 23, scope: !3060)
!3063 = !DILocation(line: 1650, column: 26, scope: !3060)
!3064 = !DILocation(line: 1650, column: 21, scope: !3060)
!3065 = !DILocation(line: 1650, column: 5, scope: !3060)
!3066 = !DILocation(line: 1651, column: 26, scope: !3061)
!3067 = !DILocation(line: 1651, column: 31, scope: !3061)
!3068 = !DILocation(line: 1651, column: 29, scope: !3061)
!3069 = !DILocation(line: 1651, column: 16, scope: !3061)
!3070 = !DILocation(line: 1651, column: 19, scope: !3061)
!3071 = !DILocation(line: 1651, column: 9, scope: !3061)
!3072 = !DILocation(line: 1651, column: 47, scope: !3061)
!3073 = !DILocation(line: 1651, column: 40, scope: !3061)
!3074 = !DILocation(line: 1650, column: 42, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !3061, file: !1807, discriminator: 2)
!3076 = !DILocation(line: 1650, column: 5, scope: !3075)
!3077 = distinct !{!3077, !3078}
!3078 = !DILocation(line: 1650, column: 5, scope: !2350)
!3079 = !DILocation(line: 1654, column: 9, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1654, column: 9)
!3081 = !DILocation(line: 1654, column: 20, scope: !3080)
!3082 = !DILocation(line: 1654, column: 23, scope: !3080)
!3083 = !DILocation(line: 1654, column: 18, scope: !3080)
!3084 = !DILocation(line: 1654, column: 9, scope: !2350)
!3085 = !DILocalVariable(name: "hdr", scope: !3086, file: !1807, line: 1655, type: !3087)
!3086 = distinct !DILexicalBlock(scope: !3080, file: !1807, line: 1654, column: 35)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3HeaderInfo", file: !961, line: 207, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3HeaderInfo", file: !961, line: 177, size: 448, align: 64, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "sync_word", scope: !3088, file: !961, line: 181, baseType: !1023, size: 16, align: 16)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "crc1", scope: !3088, file: !961, line: 182, baseType: !1023, size: 16, align: 16, offset: 16)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !3088, file: !961, line: 183, baseType: !1041, size: 8, align: 8, offset: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_id", scope: !3088, file: !961, line: 184, baseType: !1041, size: 8, align: 8, offset: 40)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !3088, file: !961, line: 185, baseType: !1041, size: 8, align: 8, offset: 48)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "channel_mode", scope: !3088, file: !961, line: 186, baseType: !1041, size: 8, align: 8, offset: 56)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_on", scope: !3088, file: !961, line: 187, baseType: !1041, size: 8, align: 8, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !3088, file: !961, line: 188, baseType: !1041, size: 8, align: 8, offset: 72)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "substreamid", scope: !3088, file: !961, line: 189, baseType: !1015, size: 32, align: 32, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !3088, file: !961, line: 190, baseType: !1015, size: 32, align: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !3088, file: !961, line: 191, baseType: !1015, size: 32, align: 32, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !3088, file: !961, line: 192, baseType: !1023, size: 16, align: 16, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !3088, file: !961, line: 193, baseType: !1015, size: 32, align: 32, offset: 224)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_mode", scope: !3088, file: !961, line: 194, baseType: !1015, size: 32, align: 32, offset: 256)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "sr_shift", scope: !3088, file: !961, line: 200, baseType: !1041, size: 8, align: 8, offset: 288)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !3088, file: !961, line: 201, baseType: !1023, size: 16, align: 16, offset: 304)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !3088, file: !961, line: 202, baseType: !1040, size: 32, align: 32, offset: 320)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3088, file: !961, line: 203, baseType: !1041, size: 8, align: 8, offset: 352)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !3088, file: !961, line: 204, baseType: !1023, size: 16, align: 16, offset: 368)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !3088, file: !961, line: 205, baseType: !1045, size: 64, align: 64, offset: 384)
!3110 = !DILocation(line: 1655, column: 23, scope: !3086)
!3111 = !DILocalVariable(name: "err", scope: !3086, file: !1807, line: 1656, type: !1015)
!3112 = !DILocation(line: 1656, column: 13, scope: !3086)
!3113 = !DILocation(line: 1658, column: 13, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3086, file: !1807, line: 1658, column: 13)
!3115 = !DILocation(line: 1658, column: 24, scope: !3114)
!3116 = !DILocation(line: 1658, column: 27, scope: !3114)
!3117 = !DILocation(line: 1658, column: 22, scope: !3114)
!3118 = !DILocation(line: 1658, column: 38, scope: !3114)
!3119 = !DILocation(line: 1658, column: 13, scope: !3086)
!3120 = !DILocation(line: 1659, column: 20, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3114, file: !1807, line: 1658, column: 45)
!3122 = !DILocation(line: 1659, column: 31, scope: !3121)
!3123 = !DILocation(line: 1659, column: 34, scope: !3121)
!3124 = !DILocation(line: 1659, column: 29, scope: !3121)
!3125 = !DILocation(line: 1659, column: 18, scope: !3121)
!3126 = !DILocation(line: 1660, column: 13, scope: !3121)
!3127 = !DILocation(line: 1663, column: 36, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3086, file: !1807, line: 1663, column: 13)
!3129 = !DILocation(line: 1663, column: 39, scope: !3128)
!3130 = !DILocation(line: 1663, column: 44, scope: !3128)
!3131 = !DILocation(line: 1663, column: 50, scope: !3128)
!3132 = !DILocation(line: 1663, column: 53, scope: !3128)
!3133 = !DILocation(line: 1663, column: 48, scope: !3128)
!3134 = !DILocation(line: 1663, column: 65, scope: !3128)
!3135 = !DILocation(line: 1663, column: 76, scope: !3128)
!3136 = !DILocation(line: 1663, column: 79, scope: !3128)
!3137 = !DILocation(line: 1663, column: 74, scope: !3128)
!3138 = !DILocation(line: 1663, column: 20, scope: !3128)
!3139 = !DILocation(line: 1663, column: 18, scope: !3128)
!3140 = !DILocation(line: 1663, column: 92, scope: !3128)
!3141 = !DILocation(line: 1663, column: 13, scope: !3086)
!3142 = !DILocation(line: 1664, column: 20, scope: !3128)
!3143 = !DILocation(line: 1664, column: 13, scope: !3128)
!3144 = !DILocation(line: 1666, column: 36, scope: !3086)
!3145 = !DILocation(line: 1666, column: 39, scope: !3086)
!3146 = !DILocation(line: 1666, column: 15, scope: !3086)
!3147 = !DILocation(line: 1666, column: 13, scope: !3086)
!3148 = !DILocation(line: 1667, column: 13, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3086, file: !1807, line: 1667, column: 13)
!3150 = !DILocation(line: 1667, column: 13, scope: !3086)
!3151 = !DILocation(line: 1668, column: 20, scope: !3149)
!3152 = !DILocation(line: 1668, column: 13, scope: !3149)
!3153 = !DILocation(line: 1670, column: 17, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3086, file: !1807, line: 1670, column: 13)
!3155 = !DILocation(line: 1670, column: 13, scope: !3154)
!3156 = !DILocation(line: 1670, column: 28, scope: !3154)
!3157 = !DILocation(line: 1670, column: 13, scope: !3086)
!3158 = !DILocation(line: 1671, column: 21, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !1807, line: 1671, column: 17)
!3160 = distinct !DILexicalBlock(scope: !3154, file: !1807, line: 1670, column: 58)
!3161 = !DILocation(line: 1671, column: 35, scope: !3159)
!3162 = !DILocation(line: 1671, column: 38, scope: !3159)
!3163 = !DILocation(line: 1671, column: 32, scope: !3159)
!3164 = !DILocation(line: 1671, column: 49, scope: !3159)
!3165 = !DILocation(line: 1671, column: 52, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3159, file: !1807, discriminator: 1)
!3167 = !DILocation(line: 1671, column: 55, scope: !3166)
!3168 = !DILocation(line: 1671, column: 74, scope: !3166)
!3169 = !DILocation(line: 1671, column: 70, scope: !3166)
!3170 = !DILocation(line: 1671, column: 67, scope: !3166)
!3171 = !DILocation(line: 1671, column: 17, scope: !3166)
!3172 = !DILocation(line: 1672, column: 24, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3159, file: !1807, line: 1671, column: 87)
!3174 = !DILocation(line: 1672, column: 17, scope: !3173)
!3175 = !DILocation(line: 1673, column: 13, scope: !3173)
!3176 = !DILocation(line: 1674, column: 24, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3159, file: !1807, line: 1673, column: 20)
!3178 = !DILocation(line: 1674, column: 27, scope: !3177)
!3179 = !DILocation(line: 1674, column: 21, scope: !3177)
!3180 = !DILocation(line: 1675, column: 29, scope: !3177)
!3181 = !DILocation(line: 1675, column: 32, scope: !3177)
!3182 = !DILocation(line: 1675, column: 26, scope: !3177)
!3183 = !DILocation(line: 1676, column: 39, scope: !3177)
!3184 = !DILocation(line: 1676, column: 42, scope: !3177)
!3185 = !DILocation(line: 1676, column: 17, scope: !3177)
!3186 = !DILocation(line: 1676, column: 20, scope: !3177)
!3187 = !DILocation(line: 1676, column: 37, scope: !3177)
!3188 = !DILocation(line: 1677, column: 36, scope: !3177)
!3189 = !DILocation(line: 1677, column: 39, scope: !3177)
!3190 = !DILocation(line: 1677, column: 17, scope: !3177)
!3191 = !DILocation(line: 1677, column: 20, scope: !3177)
!3192 = !DILocation(line: 1677, column: 34, scope: !3177)
!3193 = !DILocation(line: 1678, column: 39, scope: !3177)
!3194 = !DILocation(line: 1679, column: 17, scope: !3177)
!3195 = !DILocation(line: 1681, column: 9, scope: !3160)
!3196 = !DILocation(line: 1682, column: 5, scope: !3086)
!3197 = !DILocation(line: 1654, column: 23, scope: !3198)
!3198 = !DILexicalBlockFile(scope: !3080, file: !1807, discriminator: 1)
!3199 = !DILocation(line: 1685, column: 33, scope: !2350)
!3200 = !DILocation(line: 1685, column: 5, scope: !2350)
!3201 = !DILocation(line: 1685, column: 12, scope: !2350)
!3202 = !DILocation(line: 1685, column: 31, scope: !2350)
!3203 = !DILocation(line: 1688, column: 10, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1688, column: 9)
!3205 = !DILocation(line: 1688, column: 9, scope: !2350)
!3206 = !DILocation(line: 1689, column: 30, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3204, file: !1807, line: 1688, column: 15)
!3208 = !DILocation(line: 1689, column: 33, scope: !3207)
!3209 = !DILocation(line: 1689, column: 9, scope: !3207)
!3210 = !DILocation(line: 1689, column: 16, scope: !3207)
!3211 = !DILocation(line: 1689, column: 28, scope: !3207)
!3212 = !DILocation(line: 1690, column: 27, scope: !3207)
!3213 = !DILocation(line: 1690, column: 30, scope: !3207)
!3214 = !DILocation(line: 1690, column: 41, scope: !3207)
!3215 = !DILocation(line: 1690, column: 44, scope: !3207)
!3216 = !DILocation(line: 1690, column: 39, scope: !3207)
!3217 = !DILocation(line: 1690, column: 9, scope: !3207)
!3218 = !DILocation(line: 1690, column: 16, scope: !3207)
!3219 = !DILocation(line: 1690, column: 25, scope: !3207)
!3220 = !DILocation(line: 1691, column: 5, scope: !3207)
!3221 = !DILocation(line: 1693, column: 13, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1693, column: 5)
!3223 = !DILocation(line: 1693, column: 10, scope: !3222)
!3224 = !DILocation(line: 1693, column: 18, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3226, file: !1807, discriminator: 1)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !1807, line: 1693, column: 5)
!3227 = !DILocation(line: 1693, column: 21, scope: !3225)
!3228 = !DILocation(line: 1693, column: 5, scope: !3225)
!3229 = !DILocation(line: 1694, column: 36, scope: !3226)
!3230 = !DILocation(line: 1694, column: 30, scope: !3226)
!3231 = !DILocation(line: 1694, column: 9, scope: !3226)
!3232 = !DILocation(line: 1694, column: 34, scope: !3226)
!3233 = !DILocation(line: 1693, column: 29, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3226, file: !1807, discriminator: 2)
!3235 = !DILocation(line: 1693, column: 5, scope: !3234)
!3236 = distinct !{!3236, !3237}
!3237 = !DILocation(line: 1693, column: 5, scope: !2350)
!3238 = !DILocation(line: 1696, column: 9, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1696, column: 9)
!3240 = !DILocation(line: 1696, column: 12, scope: !3239)
!3241 = !DILocation(line: 1696, column: 23, scope: !3239)
!3242 = !DILocation(line: 1696, column: 9, scope: !2350)
!3243 = !DILocalVariable(name: "ich_layout", scope: !3244, file: !1807, line: 1697, type: !1045)
!3244 = distinct !DILexicalBlock(scope: !3239, file: !1807, line: 1696, column: 53)
!3245 = !DILocation(line: 1697, column: 18, scope: !3244)
!3246 = !DILocation(line: 1697, column: 61, scope: !3244)
!3247 = !DILocation(line: 1697, column: 64, scope: !3244)
!3248 = !DILocation(line: 1697, column: 81, scope: !3244)
!3249 = !DILocation(line: 1697, column: 31, scope: !3244)
!3250 = !DILocalVariable(name: "channel_map_size", scope: !3244, file: !1807, line: 1698, type: !1015)
!3251 = !DILocation(line: 1698, column: 13, scope: !3244)
!3252 = !DILocation(line: 1698, column: 52, scope: !3244)
!3253 = !DILocation(line: 1698, column: 55, scope: !3244)
!3254 = !DILocation(line: 1698, column: 67, scope: !3244)
!3255 = !DILocation(line: 1698, column: 32, scope: !3244)
!3256 = !DILocation(line: 1698, column: 75, scope: !3244)
!3257 = !DILocation(line: 1698, column: 78, scope: !3244)
!3258 = !DILocation(line: 1698, column: 73, scope: !3244)
!3259 = !DILocalVariable(name: "channel_layout", scope: !3244, file: !1807, line: 1699, type: !1045)
!3260 = !DILocation(line: 1699, column: 18, scope: !3244)
!3261 = !DILocalVariable(name: "extend", scope: !3244, file: !1807, line: 1700, type: !1015)
!3262 = !DILocation(line: 1700, column: 13, scope: !3244)
!3263 = !DILocation(line: 1702, column: 13, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3244, file: !1807, line: 1702, column: 13)
!3265 = !DILocation(line: 1702, column: 16, scope: !3264)
!3266 = !DILocation(line: 1702, column: 33, scope: !3264)
!3267 = !DILocation(line: 1702, column: 13, scope: !3244)
!3268 = !DILocation(line: 1703, column: 24, scope: !3264)
!3269 = !DILocation(line: 1703, column: 13, scope: !3264)
!3270 = !DILocation(line: 1705, column: 26, scope: !3244)
!3271 = !DILocation(line: 1705, column: 24, scope: !3244)
!3272 = !DILocation(line: 1706, column: 17, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3244, file: !1807, line: 1706, column: 9)
!3274 = !DILocation(line: 1706, column: 14, scope: !3273)
!3275 = !DILocation(line: 1706, column: 22, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3277, file: !1807, discriminator: 1)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !1807, line: 1706, column: 9)
!3278 = !DILocation(line: 1706, column: 25, scope: !3276)
!3279 = !DILocation(line: 1706, column: 9, scope: !3276)
!3280 = !DILocation(line: 1707, column: 17, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !1807, line: 1707, column: 17)
!3282 = distinct !DILexicalBlock(scope: !3277, file: !1807, line: 1706, column: 37)
!3283 = !DILocation(line: 1707, column: 20, scope: !3281)
!3284 = !DILocation(line: 1707, column: 46, scope: !3281)
!3285 = !DILocation(line: 1707, column: 44, scope: !3281)
!3286 = !DILocation(line: 1707, column: 49, scope: !3281)
!3287 = !DILocation(line: 1707, column: 37, scope: !3281)
!3288 = !DILocation(line: 1707, column: 32, scope: !3281)
!3289 = !DILocation(line: 1707, column: 17, scope: !3282)
!3290 = !DILocation(line: 1708, column: 72, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3281, file: !1807, line: 1707, column: 56)
!3292 = !DILocation(line: 1708, column: 35, scope: !3291)
!3293 = !DILocation(line: 1708, column: 32, scope: !3291)
!3294 = !DILocation(line: 1709, column: 13, scope: !3291)
!3295 = !DILocation(line: 1710, column: 9, scope: !3282)
!3296 = !DILocation(line: 1706, column: 33, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3277, file: !1807, discriminator: 2)
!3298 = !DILocation(line: 1706, column: 9, scope: !3297)
!3299 = distinct !{!3299, !3300}
!3300 = !DILocation(line: 1706, column: 9, scope: !3244)
!3301 = !DILocation(line: 1711, column: 47, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3244, file: !1807, line: 1711, column: 13)
!3303 = !DILocation(line: 1711, column: 13, scope: !3302)
!3304 = !DILocation(line: 1711, column: 63, scope: !3302)
!3305 = !DILocation(line: 1711, column: 13, scope: !3244)
!3306 = !DILocation(line: 1712, column: 20, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !1807, line: 1711, column: 69)
!3308 = !DILocation(line: 1713, column: 54, scope: !3307)
!3309 = !DILocation(line: 1713, column: 20, scope: !3307)
!3310 = !DILocation(line: 1712, column: 13, scope: !3307)
!3311 = !DILocation(line: 1714, column: 13, scope: !3307)
!3312 = !DILocation(line: 1717, column: 33, scope: !3244)
!3313 = !DILocation(line: 1717, column: 9, scope: !3244)
!3314 = !DILocation(line: 1717, column: 16, scope: !3244)
!3315 = !DILocation(line: 1717, column: 31, scope: !3244)
!3316 = !DILocation(line: 1718, column: 61, scope: !3244)
!3317 = !DILocation(line: 1718, column: 27, scope: !3244)
!3318 = !DILocation(line: 1718, column: 9, scope: !3244)
!3319 = !DILocation(line: 1718, column: 16, scope: !3244)
!3320 = !DILocation(line: 1718, column: 25, scope: !3244)
!3321 = !DILocation(line: 1720, column: 17, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3244, file: !1807, line: 1720, column: 9)
!3323 = !DILocation(line: 1720, column: 14, scope: !3322)
!3324 = !DILocation(line: 1720, column: 22, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3326, file: !1807, discriminator: 1)
!3326 = distinct !DILexicalBlock(scope: !3322, file: !1807, line: 1720, column: 9)
!3327 = !DILocation(line: 1720, column: 25, scope: !3325)
!3328 = !DILocation(line: 1720, column: 9, scope: !3325)
!3329 = !DILocation(line: 1721, column: 17, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !1807, line: 1721, column: 17)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !1807, line: 1720, column: 37)
!3332 = !DILocation(line: 1721, column: 20, scope: !3330)
!3333 = !DILocation(line: 1721, column: 46, scope: !3330)
!3334 = !DILocation(line: 1721, column: 44, scope: !3330)
!3335 = !DILocation(line: 1721, column: 49, scope: !3330)
!3336 = !DILocation(line: 1721, column: 37, scope: !3330)
!3337 = !DILocation(line: 1721, column: 32, scope: !3330)
!3338 = !DILocation(line: 1721, column: 17, scope: !3331)
!3339 = !DILocation(line: 1722, column: 58, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !1807, line: 1722, column: 21)
!3341 = distinct !DILexicalBlock(scope: !3330, file: !1807, line: 1721, column: 56)
!3342 = !DILocation(line: 1722, column: 21, scope: !3340)
!3343 = !DILocation(line: 1722, column: 21, scope: !3341)
!3344 = !DILocalVariable(name: "index", scope: !3345, file: !1807, line: 1723, type: !1015)
!3345 = distinct !DILexicalBlock(scope: !3340, file: !1807, line: 1722, column: 66)
!3346 = !DILocation(line: 1723, column: 25, scope: !3345)
!3347 = !DILocation(line: 1723, column: 69, scope: !3345)
!3348 = !DILocation(line: 1724, column: 106, scope: !3345)
!3349 = !DILocation(line: 1724, column: 69, scope: !3345)
!3350 = !DILocation(line: 1723, column: 33, scope: !3345)
!3351 = !DILocation(line: 1725, column: 25, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3345, file: !1807, line: 1725, column: 25)
!3353 = !DILocation(line: 1725, column: 31, scope: !3352)
!3354 = !DILocation(line: 1725, column: 25, scope: !3345)
!3355 = !DILocation(line: 1726, column: 25, scope: !3352)
!3356 = !DILocation(line: 1727, column: 25, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3345, file: !1807, line: 1727, column: 25)
!3358 = !DILocation(line: 1727, column: 35, scope: !3357)
!3359 = !DILocation(line: 1727, column: 32, scope: !3357)
!3360 = !DILocation(line: 1727, column: 25, scope: !3345)
!3361 = !DILocation(line: 1728, column: 25, scope: !3357)
!3362 = !DILocation(line: 1730, column: 51, scope: !3345)
!3363 = !DILocation(line: 1730, column: 78, scope: !3345)
!3364 = !DILocation(line: 1730, column: 60, scope: !3345)
!3365 = !DILocation(line: 1730, column: 58, scope: !3345)
!3366 = !DILocation(line: 1730, column: 42, scope: !3345)
!3367 = !DILocation(line: 1730, column: 21, scope: !3345)
!3368 = !DILocation(line: 1730, column: 49, scope: !3345)
!3369 = !DILocation(line: 1731, column: 17, scope: !3345)
!3370 = !DILocalVariable(name: "i", scope: !3371, file: !1807, line: 1732, type: !1015)
!3371 = distinct !DILexicalBlock(scope: !3340, file: !1807, line: 1731, column: 24)
!3372 = !DILocation(line: 1732, column: 25, scope: !3371)
!3373 = !DILocation(line: 1734, column: 28, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3371, file: !1807, line: 1734, column: 21)
!3375 = !DILocation(line: 1734, column: 26, scope: !3374)
!3376 = !DILocation(line: 1734, column: 33, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !3378, file: !1807, discriminator: 1)
!3378 = distinct !DILexicalBlock(scope: !3374, file: !1807, line: 1734, column: 21)
!3379 = !DILocation(line: 1734, column: 35, scope: !3377)
!3380 = !DILocation(line: 1734, column: 21, scope: !3377)
!3381 = !DILocation(line: 1735, column: 38, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !1807, line: 1735, column: 29)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !1807, line: 1734, column: 46)
!3384 = !DILocation(line: 1735, column: 35, scope: !3382)
!3385 = !DILocation(line: 1735, column: 80, scope: !3382)
!3386 = !DILocation(line: 1735, column: 43, scope: !3382)
!3387 = !DILocation(line: 1735, column: 41, scope: !3382)
!3388 = !DILocation(line: 1735, column: 29, scope: !3383)
!3389 = !DILocalVariable(name: "index", scope: !3390, file: !1807, line: 1736, type: !1015)
!3390 = distinct !DILexicalBlock(scope: !3382, file: !1807, line: 1735, column: 88)
!3391 = !DILocation(line: 1736, column: 33, scope: !3390)
!3392 = !DILocation(line: 1736, column: 77, scope: !3390)
!3393 = !DILocation(line: 1737, column: 85, scope: !3390)
!3394 = !DILocation(line: 1737, column: 82, scope: !3390)
!3395 = !DILocation(line: 1736, column: 41, scope: !3390)
!3396 = !DILocation(line: 1738, column: 33, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3390, file: !1807, line: 1738, column: 33)
!3398 = !DILocation(line: 1738, column: 39, scope: !3397)
!3399 = !DILocation(line: 1738, column: 33, scope: !3390)
!3400 = !DILocation(line: 1739, column: 33, scope: !3397)
!3401 = !DILocation(line: 1740, column: 33, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3390, file: !1807, line: 1740, column: 33)
!3403 = !DILocation(line: 1740, column: 43, scope: !3402)
!3404 = !DILocation(line: 1740, column: 40, scope: !3402)
!3405 = !DILocation(line: 1740, column: 33, scope: !3390)
!3406 = !DILocation(line: 1741, column: 33, scope: !3402)
!3407 = !DILocation(line: 1743, column: 59, scope: !3390)
!3408 = !DILocation(line: 1743, column: 86, scope: !3390)
!3409 = !DILocation(line: 1743, column: 68, scope: !3390)
!3410 = !DILocation(line: 1743, column: 66, scope: !3390)
!3411 = !DILocation(line: 1743, column: 50, scope: !3390)
!3412 = !DILocation(line: 1743, column: 29, scope: !3390)
!3413 = !DILocation(line: 1743, column: 57, scope: !3390)
!3414 = !DILocation(line: 1744, column: 25, scope: !3390)
!3415 = !DILocation(line: 1745, column: 21, scope: !3383)
!3416 = !DILocation(line: 1734, column: 42, scope: !3417)
!3417 = !DILexicalBlockFile(scope: !3378, file: !1807, discriminator: 2)
!3418 = !DILocation(line: 1734, column: 21, scope: !3417)
!3419 = distinct !{!3419, !3420}
!3420 = !DILocation(line: 1734, column: 21, scope: !3371)
!3421 = !DILocation(line: 1747, column: 13, scope: !3341)
!3422 = !DILocation(line: 1748, column: 9, scope: !3331)
!3423 = !DILocation(line: 1720, column: 33, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3326, file: !1807, discriminator: 2)
!3425 = !DILocation(line: 1720, column: 9, scope: !3424)
!3426 = distinct !{!3426, !3427}
!3427 = !DILocation(line: 1720, column: 9, scope: !3244)
!3428 = !DILocation(line: 1749, column: 5, scope: !3244)
!3429 = !DILocation(line: 1752, column: 25, scope: !2350)
!3430 = !DILocation(line: 1752, column: 28, scope: !2350)
!3431 = !DILocation(line: 1752, column: 39, scope: !2350)
!3432 = !DILocation(line: 1752, column: 5, scope: !2350)
!3433 = !DILocation(line: 1752, column: 12, scope: !2350)
!3434 = !DILocation(line: 1752, column: 23, scope: !2350)
!3435 = !DILocation(line: 1753, column: 30, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1753, column: 9)
!3437 = !DILocation(line: 1753, column: 37, scope: !3436)
!3438 = !DILocation(line: 1753, column: 16, scope: !3436)
!3439 = !DILocation(line: 1753, column: 14, scope: !3436)
!3440 = !DILocation(line: 1753, column: 48, scope: !3436)
!3441 = !DILocation(line: 1753, column: 9, scope: !2350)
!3442 = !DILocation(line: 1754, column: 16, scope: !3436)
!3443 = !DILocation(line: 1754, column: 9, scope: !3436)
!3444 = !DILocation(line: 1756, column: 13, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1756, column: 5)
!3446 = !DILocation(line: 1756, column: 10, scope: !3445)
!3447 = !DILocation(line: 1756, column: 18, scope: !3448)
!3448 = !DILexicalBlockFile(scope: !3449, file: !1807, discriminator: 1)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !1807, line: 1756, column: 5)
!3450 = !DILocation(line: 1756, column: 23, scope: !3448)
!3451 = !DILocation(line: 1756, column: 30, scope: !3448)
!3452 = !DILocation(line: 1756, column: 21, scope: !3448)
!3453 = !DILocation(line: 1756, column: 5, scope: !3448)
!3454 = !DILocalVariable(name: "map", scope: !3455, file: !1807, line: 1757, type: !1015)
!3455 = distinct !DILexicalBlock(scope: !3449, file: !1807, line: 1756, column: 46)
!3456 = !DILocation(line: 1757, column: 13, scope: !3455)
!3457 = !DILocation(line: 1757, column: 40, scope: !3455)
!3458 = !DILocation(line: 1757, column: 19, scope: !3455)
!3459 = !DILocation(line: 1758, column: 9, scope: !3455)
!3460 = distinct !{!3460, !3459}
!3461 = !DILocation(line: 1758, column: 20, scope: !3462)
!3462 = !DILexicalBlockFile(scope: !3463, file: !1807, discriminator: 1)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !1807, line: 1758, column: 18)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !1807, line: 1758, column: 12)
!3465 = !DILocation(line: 1758, column: 22, scope: !3462)
!3466 = !DILocation(line: 1758, column: 26, scope: !3462)
!3467 = !DILocation(line: 1758, column: 50, scope: !3468)
!3468 = !DILexicalBlockFile(scope: !3463, file: !1807, discriminator: 2)
!3469 = !DILocation(line: 1758, column: 29, scope: !3468)
!3470 = !DILocation(line: 1758, column: 36, scope: !3468)
!3471 = !DILocation(line: 1758, column: 69, scope: !3468)
!3472 = !DILocation(line: 1758, column: 57, scope: !3468)
!3473 = !DILocation(line: 1758, column: 64, scope: !3468)
!3474 = !DILocation(line: 1758, column: 54, scope: !3468)
!3475 = !DILocation(line: 1758, column: 18, scope: !3468)
!3476 = !DILocation(line: 1758, column: 77, scope: !3477)
!3477 = !DILexicalBlockFile(scope: !3478, file: !1807, discriminator: 3)
!3478 = distinct !DILexicalBlock(scope: !3463, file: !1807, line: 1758, column: 75)
!3479 = !DILocation(line: 1758, column: 133, scope: !3480)
!3480 = !DILexicalBlockFile(scope: !3477, file: !1807, discriminator: 5)
!3481 = !DILocation(line: 1758, column: 133, scope: !3477)
!3482 = !DILocation(line: 1758, column: 144, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !3464, file: !1807, discriminator: 4)
!3484 = !DILocation(line: 1759, column: 51, scope: !3455)
!3485 = !DILocation(line: 1759, column: 30, scope: !3455)
!3486 = !DILocation(line: 1759, column: 37, scope: !3455)
!3487 = !DILocation(line: 1759, column: 9, scope: !3455)
!3488 = !DILocation(line: 1760, column: 33, scope: !3455)
!3489 = !DILocation(line: 1760, column: 16, scope: !3455)
!3490 = !DILocation(line: 1760, column: 19, scope: !3455)
!3491 = !DILocation(line: 1761, column: 16, scope: !3455)
!3492 = !DILocation(line: 1761, column: 19, scope: !3455)
!3493 = !DILocation(line: 1761, column: 30, scope: !3455)
!3494 = !DILocation(line: 1761, column: 36, scope: !3455)
!3495 = !DILocation(line: 1762, column: 5, scope: !3455)
!3496 = !DILocation(line: 1756, column: 42, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3449, file: !1807, discriminator: 2)
!3498 = !DILocation(line: 1756, column: 5, scope: !3497)
!3499 = distinct !{!3499, !3500}
!3500 = !DILocation(line: 1756, column: 5, scope: !2350)
!3501 = !DILocation(line: 1770, column: 21, scope: !2350)
!3502 = !DILocation(line: 1771, column: 9, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1771, column: 9)
!3504 = !DILocation(line: 1771, column: 12, scope: !3503)
!3505 = !DILocation(line: 1771, column: 25, scope: !3503)
!3506 = !DILocation(line: 1771, column: 46, scope: !3503)
!3507 = !DILocation(line: 1772, column: 9, scope: !3503)
!3508 = !DILocation(line: 1772, column: 12, scope: !3503)
!3509 = !DILocation(line: 1772, column: 29, scope: !3503)
!3510 = !DILocation(line: 1772, column: 32, scope: !3503)
!3511 = !DILocation(line: 1772, column: 44, scope: !3503)
!3512 = !DILocation(line: 1772, column: 25, scope: !3503)
!3513 = !DILocation(line: 1771, column: 9, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !2350, file: !1807, discriminator: 1)
!3515 = !DILocation(line: 1773, column: 13, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !1807, line: 1773, column: 13)
!3517 = distinct !DILexicalBlock(scope: !3503, file: !1807, line: 1772, column: 51)
!3518 = !DILocation(line: 1773, column: 16, scope: !3516)
!3519 = !DILocation(line: 1773, column: 36, scope: !3516)
!3520 = !DILocation(line: 1773, column: 13, scope: !3517)
!3521 = !DILocation(line: 1774, column: 29, scope: !3516)
!3522 = !DILocation(line: 1774, column: 13, scope: !3516)
!3523 = !DILocation(line: 1775, column: 18, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3516, file: !1807, line: 1775, column: 18)
!3525 = !DILocation(line: 1775, column: 21, scope: !3524)
!3526 = !DILocation(line: 1775, column: 42, scope: !3524)
!3527 = !DILocation(line: 1775, column: 18, scope: !3516)
!3528 = !DILocation(line: 1776, column: 29, scope: !3524)
!3529 = !DILocation(line: 1776, column: 13, scope: !3524)
!3530 = !DILocation(line: 1777, column: 5, scope: !3517)
!3531 = !DILocation(line: 1777, column: 16, scope: !3532)
!3532 = !DILexicalBlockFile(scope: !3533, file: !1807, discriminator: 1)
!3533 = distinct !DILexicalBlock(scope: !3503, file: !1807, line: 1777, column: 16)
!3534 = !DILocation(line: 1777, column: 19, scope: !3532)
!3535 = !DILocation(line: 1777, column: 32, scope: !3532)
!3536 = !DILocation(line: 1777, column: 51, scope: !3532)
!3537 = !DILocation(line: 1778, column: 16, scope: !3533)
!3538 = !DILocation(line: 1778, column: 19, scope: !3533)
!3539 = !DILocation(line: 1778, column: 36, scope: !3533)
!3540 = !DILocation(line: 1778, column: 39, scope: !3533)
!3541 = !DILocation(line: 1778, column: 51, scope: !3533)
!3542 = !DILocation(line: 1778, column: 32, scope: !3533)
!3543 = !DILocation(line: 1777, column: 16, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !3503, file: !1807, discriminator: 2)
!3545 = !DILocation(line: 1779, column: 17, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3533, file: !1807, line: 1778, column: 58)
!3547 = !DILocation(line: 1779, column: 20, scope: !3546)
!3548 = !DILocation(line: 1779, column: 9, scope: !3546)
!3549 = !DILocation(line: 1781, column: 29, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !1807, line: 1779, column: 44)
!3551 = !DILocation(line: 1782, column: 13, scope: !3550)
!3552 = !DILocation(line: 1784, column: 29, scope: !3550)
!3553 = !DILocation(line: 1785, column: 13, scope: !3550)
!3554 = !DILocation(line: 1787, column: 13, scope: !3550)
!3555 = !DILocation(line: 1789, column: 5, scope: !3546)
!3556 = !DILocation(line: 1790, column: 52, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1790, column: 9)
!3558 = !DILocation(line: 1790, column: 59, scope: !3557)
!3559 = !DILocation(line: 1790, column: 16, scope: !3557)
!3560 = !DILocation(line: 1790, column: 14, scope: !3557)
!3561 = !DILocation(line: 1790, column: 77, scope: !3557)
!3562 = !DILocation(line: 1790, column: 9, scope: !2350)
!3563 = !DILocation(line: 1791, column: 16, scope: !3557)
!3564 = !DILocation(line: 1791, column: 9, scope: !3557)
!3565 = !DILocation(line: 1794, column: 58, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1794, column: 9)
!3567 = !DILocation(line: 1794, column: 25, scope: !3566)
!3568 = !DILocation(line: 1794, column: 23, scope: !3566)
!3569 = !DILocation(line: 1794, column: 9, scope: !2350)
!3570 = !DILocation(line: 1795, column: 17, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !1807, line: 1794, column: 67)
!3572 = !DILocation(line: 1795, column: 20, scope: !3571)
!3573 = !DILocation(line: 1795, column: 9, scope: !3571)
!3574 = !DILocation(line: 1797, column: 13, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !1807, line: 1795, column: 39)
!3576 = !DILocation(line: 1797, column: 27, scope: !3575)
!3577 = !DILocation(line: 1797, column: 50, scope: !3575)
!3578 = !DILocation(line: 1798, column: 13, scope: !3575)
!3579 = !DILocation(line: 1800, column: 13, scope: !3575)
!3580 = !DILocation(line: 1800, column: 27, scope: !3575)
!3581 = !DILocation(line: 1800, column: 50, scope: !3575)
!3582 = !DILocation(line: 1801, column: 13, scope: !3575)
!3583 = !DILocation(line: 1803, column: 13, scope: !3575)
!3584 = !DILocation(line: 1803, column: 27, scope: !3575)
!3585 = !DILocation(line: 1803, column: 50, scope: !3575)
!3586 = !DILocation(line: 1804, column: 13, scope: !3575)
!3587 = !DILocation(line: 1806, column: 13, scope: !3575)
!3588 = !DILocation(line: 1806, column: 27, scope: !3575)
!3589 = !DILocation(line: 1806, column: 50, scope: !3575)
!3590 = !DILocation(line: 1807, column: 13, scope: !3575)
!3591 = !DILocation(line: 1809, column: 54, scope: !3571)
!3592 = !DILocation(line: 1809, column: 58, scope: !3571)
!3593 = !DILocation(line: 1809, column: 42, scope: !3571)
!3594 = !DILocation(line: 1809, column: 9, scope: !3571)
!3595 = !DILocation(line: 1809, column: 23, scope: !3571)
!3596 = !DILocation(line: 1809, column: 40, scope: !3571)
!3597 = !DILocation(line: 1810, column: 59, scope: !3571)
!3598 = !DILocation(line: 1810, column: 63, scope: !3571)
!3599 = !DILocation(line: 1810, column: 47, scope: !3571)
!3600 = !DILocation(line: 1810, column: 9, scope: !3571)
!3601 = !DILocation(line: 1810, column: 23, scope: !3571)
!3602 = !DILocation(line: 1810, column: 45, scope: !3571)
!3603 = !DILocation(line: 1811, column: 56, scope: !3571)
!3604 = !DILocation(line: 1811, column: 60, scope: !3571)
!3605 = !DILocation(line: 1811, column: 44, scope: !3571)
!3606 = !DILocation(line: 1811, column: 9, scope: !3571)
!3607 = !DILocation(line: 1811, column: 23, scope: !3571)
!3608 = !DILocation(line: 1811, column: 42, scope: !3571)
!3609 = !DILocation(line: 1812, column: 61, scope: !3571)
!3610 = !DILocation(line: 1812, column: 64, scope: !3571)
!3611 = !DILocation(line: 1812, column: 49, scope: !3571)
!3612 = !DILocation(line: 1812, column: 9, scope: !3571)
!3613 = !DILocation(line: 1812, column: 23, scope: !3571)
!3614 = !DILocation(line: 1812, column: 47, scope: !3571)
!3615 = !DILocation(line: 1813, column: 13, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3571, file: !1807, line: 1813, column: 13)
!3617 = !DILocation(line: 1813, column: 16, scope: !3616)
!3618 = !DILocation(line: 1813, column: 13, scope: !3571)
!3619 = !DILocation(line: 1814, column: 59, scope: !3616)
!3620 = !DILocation(line: 1814, column: 62, scope: !3616)
!3621 = !DILocation(line: 1814, column: 43, scope: !3616)
!3622 = !DILocation(line: 1814, column: 13, scope: !3616)
!3623 = !DILocation(line: 1814, column: 27, scope: !3616)
!3624 = !DILocation(line: 1814, column: 41, scope: !3616)
!3625 = !DILocation(line: 1816, column: 13, scope: !3616)
!3626 = !DILocation(line: 1816, column: 27, scope: !3616)
!3627 = !DILocation(line: 1816, column: 41, scope: !3616)
!3628 = !DILocation(line: 1817, column: 5, scope: !3571)
!3629 = !DILocation(line: 1818, column: 9, scope: !3566)
!3630 = !DILocation(line: 1820, column: 6, scope: !2350)
!3631 = !DILocation(line: 1820, column: 20, scope: !2350)
!3632 = !DILocation(line: 1822, column: 10, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !2350, file: !1807, line: 1822, column: 9)
!3634 = !DILocation(line: 1822, column: 13, scope: !3633)
!3635 = !DILocation(line: 1822, column: 9, scope: !2350)
!3636 = !DILocation(line: 1823, column: 18, scope: !3633)
!3637 = !DILocation(line: 1823, column: 36, scope: !3633)
!3638 = !DILocation(line: 1823, column: 39, scope: !3633)
!3639 = !DILocation(line: 1823, column: 52, scope: !3633)
!3640 = !DILocation(line: 1823, column: 50, scope: !3633)
!3641 = !DILocation(line: 1823, column: 33, scope: !3633)
!3642 = !DILocation(line: 1823, column: 17, scope: !3633)
!3643 = !DILocation(line: 1823, column: 61, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3633, file: !1807, discriminator: 1)
!3645 = !DILocation(line: 1823, column: 64, scope: !3644)
!3646 = !DILocation(line: 1823, column: 77, scope: !3644)
!3647 = !DILocation(line: 1823, column: 75, scope: !3644)
!3648 = !DILocation(line: 1823, column: 17, scope: !3644)
!3649 = !DILocation(line: 1823, column: 86, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3633, file: !1807, discriminator: 2)
!3651 = !DILocation(line: 1823, column: 17, scope: !3650)
!3652 = !DILocation(line: 1823, column: 17, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3633, file: !1807, discriminator: 3)
!3654 = !DILocation(line: 1823, column: 9, scope: !3653)
!3655 = !DILocation(line: 1825, column: 14, scope: !2350)
!3656 = !DILocation(line: 1825, column: 32, scope: !2350)
!3657 = !DILocation(line: 1825, column: 35, scope: !2350)
!3658 = !DILocation(line: 1825, column: 53, scope: !2350)
!3659 = !DILocation(line: 1825, column: 51, scope: !2350)
!3660 = !DILocation(line: 1825, column: 29, scope: !2350)
!3661 = !DILocation(line: 1825, column: 13, scope: !2350)
!3662 = !DILocation(line: 1825, column: 62, scope: !3514)
!3663 = !DILocation(line: 1825, column: 65, scope: !3514)
!3664 = !DILocation(line: 1825, column: 83, scope: !3514)
!3665 = !DILocation(line: 1825, column: 81, scope: !3514)
!3666 = !DILocation(line: 1825, column: 13, scope: !3514)
!3667 = !DILocation(line: 1825, column: 92, scope: !3668)
!3668 = !DILexicalBlockFile(scope: !2350, file: !1807, discriminator: 2)
!3669 = !DILocation(line: 1825, column: 13, scope: !3668)
!3670 = !DILocation(line: 1825, column: 13, scope: !3671)
!3671 = !DILexicalBlockFile(scope: !2350, file: !1807, discriminator: 3)
!3672 = !DILocation(line: 1825, column: 5, scope: !3671)
!3673 = !DILocation(line: 1826, column: 1, scope: !2350)
!3674 = distinct !DISubprogram(name: "ac3_decode_end", scope: !1807, file: !1807, line: 1831, type: !1171, isLocal: true, isDefinition: true, scopeLine: 1832, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!3675 = !DILocalVariable(name: "avctx", arg: 1, scope: !3674, file: !1807, line: 1831, type: !1173)
!3676 = !DILocation(line: 1831, column: 65, scope: !3674)
!3677 = !DILocalVariable(name: "s", scope: !3674, file: !1807, line: 1833, type: !1852)
!3678 = !DILocation(line: 1833, column: 23, scope: !3674)
!3679 = !DILocation(line: 1833, column: 27, scope: !3674)
!3680 = !DILocation(line: 1833, column: 34, scope: !3674)
!3681 = !DILocation(line: 1834, column: 27, scope: !3674)
!3682 = !DILocation(line: 1834, column: 30, scope: !3674)
!3683 = !DILocation(line: 1834, column: 5, scope: !3674)
!3684 = !DILocation(line: 1835, column: 27, scope: !3674)
!3685 = !DILocation(line: 1835, column: 30, scope: !3674)
!3686 = !DILocation(line: 1835, column: 5, scope: !3674)
!3687 = !DILocation(line: 1836, column: 15, scope: !3674)
!3688 = !DILocation(line: 1836, column: 18, scope: !3674)
!3689 = !DILocation(line: 1836, column: 14, scope: !3674)
!3690 = !DILocation(line: 1836, column: 5, scope: !3674)
!3691 = !DILocation(line: 1837, column: 15, scope: !3674)
!3692 = !DILocation(line: 1837, column: 18, scope: !3674)
!3693 = !DILocation(line: 1837, column: 14, scope: !3674)
!3694 = !DILocation(line: 1837, column: 5, scope: !3674)
!3695 = !DILocation(line: 1839, column: 5, scope: !3674)
!3696 = distinct !DISubprogram(name: "ac3_tables_init", scope: !1807, file: !1807, line: 123, type: !3697, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null}
!3699 = !DILocalVariable(name: "i", scope: !3696, file: !1807, line: 125, type: !1015)
!3700 = !DILocation(line: 125, column: 9, scope: !3696)
!3701 = !DILocation(line: 129, column: 12, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3696, file: !1807, line: 129, column: 5)
!3703 = !DILocation(line: 129, column: 10, scope: !3702)
!3704 = !DILocation(line: 129, column: 17, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3706, file: !1807, discriminator: 1)
!3706 = distinct !DILexicalBlock(scope: !3702, file: !1807, line: 129, column: 5)
!3707 = !DILocation(line: 129, column: 19, scope: !3705)
!3708 = !DILocation(line: 129, column: 5, scope: !3705)
!3709 = !DILocation(line: 130, column: 41, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !1807, line: 129, column: 31)
!3711 = !DILocation(line: 130, column: 43, scope: !3710)
!3712 = !DILocation(line: 130, column: 33, scope: !3710)
!3713 = !DILocation(line: 130, column: 9, scope: !3710)
!3714 = !DILocation(line: 130, column: 39, scope: !3710)
!3715 = !DILocation(line: 131, column: 42, scope: !3710)
!3716 = !DILocation(line: 131, column: 44, scope: !3710)
!3717 = !DILocation(line: 131, column: 50, scope: !3710)
!3718 = !DILocation(line: 131, column: 41, scope: !3710)
!3719 = !DILocation(line: 131, column: 33, scope: !3710)
!3720 = !DILocation(line: 131, column: 9, scope: !3710)
!3721 = !DILocation(line: 131, column: 39, scope: !3710)
!3722 = !DILocation(line: 132, column: 42, scope: !3710)
!3723 = !DILocation(line: 132, column: 44, scope: !3710)
!3724 = !DILocation(line: 132, column: 50, scope: !3710)
!3725 = !DILocation(line: 132, column: 41, scope: !3710)
!3726 = !DILocation(line: 132, column: 33, scope: !3710)
!3727 = !DILocation(line: 132, column: 9, scope: !3710)
!3728 = !DILocation(line: 132, column: 39, scope: !3710)
!3729 = !DILocation(line: 133, column: 5, scope: !3710)
!3730 = !DILocation(line: 129, column: 27, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3706, file: !1807, discriminator: 2)
!3732 = !DILocation(line: 129, column: 5, scope: !3731)
!3733 = distinct !{!3733, !3734}
!3734 = !DILocation(line: 129, column: 5, scope: !3696)
!3735 = !DILocation(line: 137, column: 12, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3696, file: !1807, line: 137, column: 5)
!3737 = !DILocation(line: 137, column: 10, scope: !3736)
!3738 = !DILocation(line: 137, column: 17, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3740, file: !1807, discriminator: 1)
!3740 = distinct !DILexicalBlock(scope: !3736, file: !1807, line: 137, column: 5)
!3741 = !DILocation(line: 137, column: 19, scope: !3739)
!3742 = !DILocation(line: 137, column: 5, scope: !3739)
!3743 = !DILocation(line: 139, column: 79, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !1807, line: 137, column: 30)
!3745 = !DILocation(line: 139, column: 48, scope: !3744)
!3746 = !DILocation(line: 139, column: 30, scope: !3744)
!3747 = !DILocation(line: 139, column: 22, scope: !3744)
!3748 = !DILocation(line: 139, column: 9, scope: !3744)
!3749 = !DILocation(line: 139, column: 28, scope: !3744)
!3750 = !DILocation(line: 140, column: 79, scope: !3744)
!3751 = !DILocation(line: 140, column: 48, scope: !3744)
!3752 = !DILocation(line: 140, column: 30, scope: !3744)
!3753 = !DILocation(line: 140, column: 22, scope: !3744)
!3754 = !DILocation(line: 140, column: 9, scope: !3744)
!3755 = !DILocation(line: 140, column: 28, scope: !3744)
!3756 = !DILocation(line: 141, column: 79, scope: !3744)
!3757 = !DILocation(line: 141, column: 48, scope: !3744)
!3758 = !DILocation(line: 141, column: 30, scope: !3744)
!3759 = !DILocation(line: 141, column: 22, scope: !3744)
!3760 = !DILocation(line: 141, column: 9, scope: !3744)
!3761 = !DILocation(line: 141, column: 28, scope: !3744)
!3762 = !DILocation(line: 142, column: 5, scope: !3744)
!3763 = !DILocation(line: 137, column: 26, scope: !3764)
!3764 = !DILexicalBlockFile(scope: !3740, file: !1807, discriminator: 2)
!3765 = !DILocation(line: 137, column: 5, scope: !3764)
!3766 = distinct !{!3766, !3767}
!3767 = !DILocation(line: 137, column: 5, scope: !3696)
!3768 = !DILocation(line: 143, column: 12, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3696, file: !1807, line: 143, column: 5)
!3770 = !DILocation(line: 143, column: 10, scope: !3769)
!3771 = !DILocation(line: 143, column: 17, scope: !3772)
!3772 = !DILexicalBlockFile(scope: !3773, file: !1807, discriminator: 1)
!3773 = distinct !DILexicalBlock(scope: !3769, file: !1807, line: 143, column: 5)
!3774 = !DILocation(line: 143, column: 19, scope: !3772)
!3775 = !DILocation(line: 143, column: 5, scope: !3772)
!3776 = !DILocation(line: 145, column: 72, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !1807, line: 143, column: 31)
!3778 = !DILocation(line: 145, column: 48, scope: !3777)
!3779 = !DILocation(line: 145, column: 30, scope: !3777)
!3780 = !DILocation(line: 145, column: 22, scope: !3777)
!3781 = !DILocation(line: 145, column: 9, scope: !3777)
!3782 = !DILocation(line: 145, column: 28, scope: !3777)
!3783 = !DILocation(line: 146, column: 72, scope: !3777)
!3784 = !DILocation(line: 146, column: 48, scope: !3777)
!3785 = !DILocation(line: 146, column: 30, scope: !3777)
!3786 = !DILocation(line: 146, column: 22, scope: !3777)
!3787 = !DILocation(line: 146, column: 9, scope: !3777)
!3788 = !DILocation(line: 146, column: 28, scope: !3777)
!3789 = !DILocation(line: 147, column: 72, scope: !3777)
!3790 = !DILocation(line: 147, column: 48, scope: !3777)
!3791 = !DILocation(line: 147, column: 30, scope: !3777)
!3792 = !DILocation(line: 147, column: 22, scope: !3777)
!3793 = !DILocation(line: 147, column: 9, scope: !3777)
!3794 = !DILocation(line: 147, column: 28, scope: !3777)
!3795 = !DILocation(line: 150, column: 48, scope: !3777)
!3796 = !DILocation(line: 150, column: 50, scope: !3777)
!3797 = !DILocation(line: 150, column: 30, scope: !3777)
!3798 = !DILocation(line: 150, column: 22, scope: !3777)
!3799 = !DILocation(line: 150, column: 9, scope: !3777)
!3800 = !DILocation(line: 150, column: 28, scope: !3777)
!3801 = !DILocation(line: 151, column: 48, scope: !3777)
!3802 = !DILocation(line: 151, column: 50, scope: !3777)
!3803 = !DILocation(line: 151, column: 30, scope: !3777)
!3804 = !DILocation(line: 151, column: 22, scope: !3777)
!3805 = !DILocation(line: 151, column: 9, scope: !3777)
!3806 = !DILocation(line: 151, column: 28, scope: !3777)
!3807 = !DILocation(line: 152, column: 5, scope: !3777)
!3808 = !DILocation(line: 143, column: 27, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3773, file: !1807, discriminator: 2)
!3810 = !DILocation(line: 143, column: 5, scope: !3809)
!3811 = distinct !{!3811, !3812}
!3812 = !DILocation(line: 143, column: 5, scope: !3696)
!3813 = !DILocation(line: 155, column: 12, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3696, file: !1807, line: 155, column: 5)
!3815 = !DILocation(line: 155, column: 10, scope: !3814)
!3816 = !DILocation(line: 155, column: 17, scope: !3817)
!3817 = !DILexicalBlockFile(scope: !3818, file: !1807, discriminator: 1)
!3818 = distinct !DILexicalBlock(scope: !3814, file: !1807, line: 155, column: 5)
!3819 = !DILocation(line: 155, column: 19, scope: !3817)
!3820 = !DILocation(line: 155, column: 5, scope: !3817)
!3821 = !DILocation(line: 157, column: 45, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3818, file: !1807, line: 155, column: 29)
!3823 = !DILocation(line: 157, column: 27, scope: !3822)
!3824 = !DILocation(line: 157, column: 22, scope: !3822)
!3825 = !DILocation(line: 157, column: 9, scope: !3822)
!3826 = !DILocation(line: 157, column: 25, scope: !3822)
!3827 = !DILocation(line: 158, column: 5, scope: !3822)
!3828 = !DILocation(line: 155, column: 25, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3818, file: !1807, discriminator: 2)
!3830 = !DILocation(line: 155, column: 5, scope: !3829)
!3831 = distinct !{!3831, !3832}
!3832 = !DILocation(line: 155, column: 5, scope: !3696)
!3833 = !DILocation(line: 159, column: 12, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3696, file: !1807, line: 159, column: 5)
!3835 = !DILocation(line: 159, column: 10, scope: !3834)
!3836 = !DILocation(line: 159, column: 17, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !3838, file: !1807, discriminator: 1)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !1807, line: 159, column: 5)
!3839 = !DILocation(line: 159, column: 19, scope: !3837)
!3840 = !DILocation(line: 159, column: 5, scope: !3837)
!3841 = !DILocation(line: 161, column: 45, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !1807, line: 159, column: 30)
!3843 = !DILocation(line: 161, column: 27, scope: !3842)
!3844 = !DILocation(line: 161, column: 22, scope: !3842)
!3845 = !DILocation(line: 161, column: 9, scope: !3842)
!3846 = !DILocation(line: 161, column: 25, scope: !3842)
!3847 = !DILocation(line: 162, column: 5, scope: !3842)
!3848 = !DILocation(line: 159, column: 26, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3838, file: !1807, discriminator: 2)
!3850 = !DILocation(line: 159, column: 5, scope: !3849)
!3851 = distinct !{!3851, !3852}
!3852 = !DILocation(line: 159, column: 5, scope: !3696)
!3853 = !DILocation(line: 179, column: 1, scope: !3696)
!3854 = distinct !DISubprogram(name: "symmetric_dequant", scope: !1807, file: !1807, line: 115, type: !3855, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!1015, !1015, !1015}
!3857 = !DILocalVariable(name: "code", arg: 1, scope: !3854, file: !1807, line: 115, type: !1015)
!3858 = !DILocation(line: 115, column: 23, scope: !3854)
!3859 = !DILocalVariable(name: "levels", arg: 2, scope: !3854, file: !1807, line: 115, type: !1015)
!3860 = !DILocation(line: 115, column: 33, scope: !3854)
!3861 = !DILocation(line: 117, column: 14, scope: !3854)
!3862 = !DILocation(line: 117, column: 22, scope: !3854)
!3863 = !DILocation(line: 117, column: 29, scope: !3854)
!3864 = !DILocation(line: 117, column: 19, scope: !3854)
!3865 = !DILocation(line: 117, column: 36, scope: !3854)
!3866 = !DILocation(line: 117, column: 51, scope: !3854)
!3867 = !DILocation(line: 117, column: 49, scope: !3854)
!3868 = !DILocation(line: 117, column: 5, scope: !3854)
!3869 = distinct !DISubprogram(name: "init_get_bits8", scope: !1862, file: !1862, line: 650, type: !3870, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!1015, !3872, !1612, !1015}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!3873 = !DILocalVariable(name: "s", arg: 1, scope: !3869, file: !1862, line: 650, type: !3872)
!3874 = !DILocation(line: 650, column: 49, scope: !3869)
!3875 = !DILocalVariable(name: "buffer", arg: 2, scope: !3869, file: !1862, line: 650, type: !1612)
!3876 = !DILocation(line: 650, column: 67, scope: !3869)
!3877 = !DILocalVariable(name: "byte_size", arg: 3, scope: !3869, file: !1862, line: 651, type: !1015)
!3878 = !DILocation(line: 651, column: 38, scope: !3869)
!3879 = !DILocation(line: 653, column: 9, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3869, file: !1862, line: 653, column: 9)
!3881 = !DILocation(line: 653, column: 19, scope: !3880)
!3882 = !DILocation(line: 653, column: 36, scope: !3880)
!3883 = !DILocation(line: 653, column: 39, scope: !3884)
!3884 = !DILexicalBlockFile(scope: !3880, file: !1862, discriminator: 1)
!3885 = !DILocation(line: 653, column: 49, scope: !3884)
!3886 = !DILocation(line: 653, column: 9, scope: !3884)
!3887 = !DILocation(line: 654, column: 19, scope: !3880)
!3888 = !DILocation(line: 654, column: 9, scope: !3880)
!3889 = !DILocation(line: 655, column: 26, scope: !3869)
!3890 = !DILocation(line: 655, column: 29, scope: !3869)
!3891 = !DILocation(line: 655, column: 37, scope: !3869)
!3892 = !DILocation(line: 655, column: 47, scope: !3869)
!3893 = !DILocation(line: 655, column: 12, scope: !3869)
!3894 = !DILocation(line: 655, column: 5, scope: !3869)
!3895 = distinct !DISubprogram(name: "parse_frame_header", scope: !1807, file: !1807, line: 298, type: !3896, isLocal: true, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!1015, !1852}
!3898 = !DILocalVariable(name: "s", arg: 1, scope: !3895, file: !1807, line: 298, type: !1852)
!3899 = !DILocation(line: 298, column: 49, scope: !3895)
!3900 = !DILocalVariable(name: "hdr", scope: !3895, file: !1807, line: 300, type: !3087)
!3901 = !DILocation(line: 300, column: 19, scope: !3895)
!3902 = !DILocalVariable(name: "err", scope: !3895, file: !1807, line: 301, type: !1015)
!3903 = !DILocation(line: 301, column: 9, scope: !3895)
!3904 = !DILocation(line: 303, column: 32, scope: !3895)
!3905 = !DILocation(line: 303, column: 35, scope: !3895)
!3906 = !DILocation(line: 303, column: 11, scope: !3895)
!3907 = !DILocation(line: 303, column: 9, scope: !3895)
!3908 = !DILocation(line: 304, column: 9, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3895, file: !1807, line: 304, column: 9)
!3910 = !DILocation(line: 304, column: 9, scope: !3895)
!3911 = !DILocation(line: 305, column: 16, scope: !3909)
!3912 = !DILocation(line: 305, column: 9, scope: !3909)
!3913 = !DILocation(line: 308, column: 39, scope: !3895)
!3914 = !DILocation(line: 308, column: 35, scope: !3895)
!3915 = !DILocation(line: 308, column: 5, scope: !3895)
!3916 = !DILocation(line: 308, column: 8, scope: !3895)
!3917 = !DILocation(line: 308, column: 25, scope: !3895)
!3918 = !DILocation(line: 308, column: 33, scope: !3895)
!3919 = !DILocation(line: 309, column: 27, scope: !3895)
!3920 = !DILocation(line: 309, column: 23, scope: !3895)
!3921 = !DILocation(line: 309, column: 5, scope: !3895)
!3922 = !DILocation(line: 309, column: 8, scope: !3895)
!3923 = !DILocation(line: 309, column: 21, scope: !3895)
!3924 = !DILocation(line: 310, column: 29, scope: !3895)
!3925 = !DILocation(line: 310, column: 25, scope: !3895)
!3926 = !DILocation(line: 310, column: 5, scope: !3895)
!3927 = !DILocation(line: 310, column: 8, scope: !3895)
!3928 = !DILocation(line: 310, column: 23, scope: !3895)
!3929 = !DILocation(line: 311, column: 27, scope: !3895)
!3930 = !DILocation(line: 311, column: 23, scope: !3895)
!3931 = !DILocation(line: 311, column: 5, scope: !3895)
!3932 = !DILocation(line: 311, column: 8, scope: !3895)
!3933 = !DILocation(line: 311, column: 21, scope: !3895)
!3934 = !DILocation(line: 312, column: 21, scope: !3895)
!3935 = !DILocation(line: 312, column: 17, scope: !3895)
!3936 = !DILocation(line: 312, column: 5, scope: !3895)
!3937 = !DILocation(line: 312, column: 8, scope: !3895)
!3938 = !DILocation(line: 312, column: 15, scope: !3895)
!3939 = !DILocation(line: 313, column: 40, scope: !3895)
!3940 = !DILocation(line: 313, column: 36, scope: !3895)
!3941 = !DILocation(line: 313, column: 5, scope: !3895)
!3942 = !DILocation(line: 313, column: 8, scope: !3895)
!3943 = !DILocation(line: 313, column: 25, scope: !3895)
!3944 = !DILocation(line: 313, column: 34, scope: !3895)
!3945 = !DILocation(line: 314, column: 26, scope: !3895)
!3946 = !DILocation(line: 314, column: 22, scope: !3895)
!3947 = !DILocation(line: 314, column: 5, scope: !3895)
!3948 = !DILocation(line: 314, column: 8, scope: !3895)
!3949 = !DILocation(line: 314, column: 20, scope: !3895)
!3950 = !DILocation(line: 315, column: 23, scope: !3895)
!3951 = !DILocation(line: 315, column: 5, scope: !3895)
!3952 = !DILocation(line: 315, column: 8, scope: !3895)
!3953 = !DILocation(line: 315, column: 17, scope: !3895)
!3954 = !DILocation(line: 316, column: 23, scope: !3895)
!3955 = !DILocation(line: 316, column: 19, scope: !3895)
!3956 = !DILocation(line: 316, column: 5, scope: !3895)
!3957 = !DILocation(line: 316, column: 8, scope: !3895)
!3958 = !DILocation(line: 316, column: 17, scope: !3895)
!3959 = !DILocation(line: 317, column: 23, scope: !3895)
!3960 = !DILocation(line: 317, column: 26, scope: !3895)
!3961 = !DILocation(line: 317, column: 37, scope: !3895)
!3962 = !DILocation(line: 317, column: 40, scope: !3895)
!3963 = !DILocation(line: 317, column: 35, scope: !3895)
!3964 = !DILocation(line: 317, column: 5, scope: !3895)
!3965 = !DILocation(line: 317, column: 8, scope: !3895)
!3966 = !DILocation(line: 317, column: 21, scope: !3895)
!3967 = !DILocation(line: 318, column: 17, scope: !3895)
!3968 = !DILocation(line: 318, column: 20, scope: !3895)
!3969 = !DILocation(line: 318, column: 33, scope: !3895)
!3970 = !DILocation(line: 318, column: 5, scope: !3895)
!3971 = !DILocation(line: 318, column: 8, scope: !3895)
!3972 = !DILocation(line: 318, column: 15, scope: !3895)
!3973 = !DILocation(line: 319, column: 25, scope: !3895)
!3974 = !DILocation(line: 319, column: 21, scope: !3895)
!3975 = !DILocation(line: 319, column: 5, scope: !3895)
!3976 = !DILocation(line: 319, column: 8, scope: !3895)
!3977 = !DILocation(line: 319, column: 19, scope: !3895)
!3978 = !DILocation(line: 320, column: 31, scope: !3895)
!3979 = !DILocation(line: 320, column: 27, scope: !3895)
!3980 = !DILocation(line: 320, column: 5, scope: !3895)
!3981 = !DILocation(line: 320, column: 8, scope: !3895)
!3982 = !DILocation(line: 320, column: 24, scope: !3895)
!3983 = !DILocation(line: 321, column: 5, scope: !3895)
!3984 = !DILocation(line: 321, column: 8, scope: !3895)
!3985 = !DILocation(line: 321, column: 26, scope: !3895)
!3986 = !DILocation(line: 322, column: 31, scope: !3895)
!3987 = !DILocation(line: 322, column: 5, scope: !3895)
!3988 = !DILocation(line: 322, column: 8, scope: !3895)
!3989 = !DILocation(line: 322, column: 25, scope: !3895)
!3990 = !DILocation(line: 323, column: 5, scope: !3895)
!3991 = !DILocation(line: 323, column: 8, scope: !3895)
!3992 = !DILocation(line: 323, column: 30, scope: !3895)
!3993 = !DILocation(line: 324, column: 33, scope: !3895)
!3994 = !DILocation(line: 324, column: 5, scope: !3895)
!3995 = !DILocation(line: 324, column: 8, scope: !3895)
!3996 = !DILocation(line: 324, column: 27, scope: !3895)
!3997 = !DILocation(line: 325, column: 5, scope: !3895)
!3998 = !DILocation(line: 325, column: 8, scope: !3895)
!3999 = !DILocation(line: 325, column: 32, scope: !3895)
!4000 = !DILocation(line: 326, column: 5, scope: !3895)
!4001 = !DILocation(line: 326, column: 8, scope: !3895)
!4002 = !DILocation(line: 326, column: 29, scope: !3895)
!4003 = !DILocation(line: 327, column: 25, scope: !3895)
!4004 = !DILocation(line: 327, column: 5, scope: !3895)
!4005 = !DILocation(line: 327, column: 8, scope: !3895)
!4006 = !DILocation(line: 327, column: 19, scope: !3895)
!4007 = !DILocation(line: 328, column: 25, scope: !3895)
!4008 = !DILocation(line: 328, column: 21, scope: !3895)
!4009 = !DILocation(line: 328, column: 5, scope: !3895)
!4010 = !DILocation(line: 328, column: 8, scope: !3895)
!4011 = !DILocation(line: 328, column: 19, scope: !3895)
!4012 = !DILocation(line: 329, column: 26, scope: !3895)
!4013 = !DILocation(line: 329, column: 5, scope: !3895)
!4014 = !DILocation(line: 329, column: 8, scope: !3895)
!4015 = !DILocation(line: 329, column: 20, scope: !3895)
!4016 = !DILocation(line: 330, column: 34, scope: !3895)
!4017 = !DILocation(line: 330, column: 5, scope: !3895)
!4018 = !DILocation(line: 330, column: 8, scope: !3895)
!4019 = !DILocation(line: 330, column: 28, scope: !3895)
!4020 = !DILocation(line: 331, column: 5, scope: !3895)
!4021 = !DILocation(line: 331, column: 8, scope: !3895)
!4022 = !DILocation(line: 331, column: 31, scope: !3895)
!4023 = !DILocation(line: 332, column: 5, scope: !3895)
!4024 = !DILocation(line: 332, column: 8, scope: !3895)
!4025 = !DILocation(line: 332, column: 29, scope: !3895)
!4026 = !DILocation(line: 334, column: 9, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3895, file: !1807, line: 334, column: 9)
!4028 = !DILocation(line: 334, column: 12, scope: !4027)
!4029 = !DILocation(line: 334, column: 9, scope: !3895)
!4030 = !DILocation(line: 335, column: 23, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !1807, line: 334, column: 20)
!4032 = !DILocation(line: 335, column: 26, scope: !4031)
!4033 = !DILocation(line: 335, column: 9, scope: !4031)
!4034 = !DILocation(line: 335, column: 12, scope: !4031)
!4035 = !DILocation(line: 335, column: 34, scope: !4031)
!4036 = !DILocation(line: 336, column: 21, scope: !4031)
!4037 = !DILocation(line: 336, column: 24, scope: !4031)
!4038 = !DILocation(line: 336, column: 9, scope: !4031)
!4039 = !DILocation(line: 336, column: 12, scope: !4031)
!4040 = !DILocation(line: 336, column: 32, scope: !4031)
!4041 = !DILocation(line: 337, column: 27, scope: !4031)
!4042 = !DILocation(line: 337, column: 30, scope: !4031)
!4043 = !DILocation(line: 337, column: 9, scope: !4031)
!4044 = !DILocation(line: 337, column: 12, scope: !4031)
!4045 = !DILocation(line: 337, column: 38, scope: !4031)
!4046 = !DILocation(line: 338, column: 27, scope: !4031)
!4047 = !DILocation(line: 338, column: 30, scope: !4031)
!4048 = !DILocation(line: 338, column: 9, scope: !4031)
!4049 = !DILocation(line: 338, column: 12, scope: !4031)
!4050 = !DILocation(line: 338, column: 38, scope: !4031)
!4051 = !DILocation(line: 339, column: 5, scope: !4031)
!4052 = !DILocation(line: 341, column: 9, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !3895, file: !1807, line: 341, column: 9)
!4054 = !DILocation(line: 341, column: 12, scope: !4053)
!4055 = !DILocation(line: 341, column: 25, scope: !4053)
!4056 = !DILocation(line: 341, column: 9, scope: !3895)
!4057 = !DILocation(line: 342, column: 9, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4053, file: !1807, line: 341, column: 32)
!4059 = !DILocation(line: 342, column: 12, scope: !4058)
!4060 = !DILocation(line: 342, column: 17, scope: !4058)
!4061 = !DILocation(line: 343, column: 9, scope: !4058)
!4062 = !DILocation(line: 343, column: 12, scope: !4058)
!4063 = !DILocation(line: 343, column: 32, scope: !4058)
!4064 = !DILocation(line: 344, column: 9, scope: !4058)
!4065 = !DILocation(line: 344, column: 12, scope: !4058)
!4066 = !DILocation(line: 344, column: 32, scope: !4058)
!4067 = !DILocation(line: 345, column: 9, scope: !4058)
!4068 = !DILocation(line: 345, column: 12, scope: !4058)
!4069 = !DILocation(line: 345, column: 31, scope: !4058)
!4070 = !DILocation(line: 346, column: 9, scope: !4058)
!4071 = !DILocation(line: 346, column: 12, scope: !4058)
!4072 = !DILocation(line: 346, column: 34, scope: !4058)
!4073 = !DILocation(line: 347, column: 9, scope: !4058)
!4074 = !DILocation(line: 347, column: 12, scope: !4058)
!4075 = !DILocation(line: 347, column: 29, scope: !4058)
!4076 = !DILocation(line: 348, column: 9, scope: !4058)
!4077 = !DILocation(line: 348, column: 12, scope: !4058)
!4078 = !DILocation(line: 348, column: 27, scope: !4058)
!4079 = !DILocation(line: 349, column: 9, scope: !4058)
!4080 = !DILocation(line: 349, column: 12, scope: !4058)
!4081 = !DILocation(line: 349, column: 23, scope: !4058)
!4082 = !DILocation(line: 350, column: 9, scope: !4058)
!4083 = !DILocation(line: 350, column: 12, scope: !4058)
!4084 = !DILocation(line: 350, column: 24, scope: !4058)
!4085 = !DILocation(line: 351, column: 16, scope: !4058)
!4086 = !DILocation(line: 351, column: 19, scope: !4058)
!4087 = !DILocation(line: 351, column: 9, scope: !4058)
!4088 = !DILocation(line: 352, column: 33, scope: !4058)
!4089 = !DILocation(line: 352, column: 16, scope: !4058)
!4090 = !DILocation(line: 352, column: 9, scope: !4058)
!4091 = !DILocation(line: 354, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !1807, line: 353, column: 19)
!4093 = distinct !DILexicalBlock(scope: !4053, file: !1807, line: 353, column: 16)
!4094 = !DILocation(line: 354, column: 12, scope: !4092)
!4095 = !DILocation(line: 354, column: 17, scope: !4092)
!4096 = !DILocation(line: 355, column: 37, scope: !4092)
!4097 = !DILocation(line: 355, column: 16, scope: !4092)
!4098 = !DILocation(line: 355, column: 9, scope: !4092)
!4099 = !DILocation(line: 360, column: 1, scope: !3895)
!4100 = distinct !DISubprogram(name: "set_downmix_coeffs", scope: !1807, file: !1807, line: 366, type: !3896, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!4101 = !DILocalVariable(name: "s", arg: 1, scope: !4100, file: !1807, line: 366, type: !1852)
!4102 = !DILocation(line: 366, column: 49, scope: !4100)
!4103 = !DILocalVariable(name: "i", scope: !4100, file: !1807, line: 368, type: !1015)
!4104 = !DILocation(line: 368, column: 9, scope: !4100)
!4105 = !DILocalVariable(name: "cmix", scope: !4100, file: !1807, line: 369, type: !1034)
!4106 = !DILocation(line: 369, column: 11, scope: !4100)
!4107 = !DILocation(line: 369, column: 30, scope: !4100)
!4108 = !DILocation(line: 369, column: 34, scope: !4100)
!4109 = !DILocation(line: 369, column: 18, scope: !4100)
!4110 = !DILocalVariable(name: "smix", scope: !4100, file: !1807, line: 370, type: !1034)
!4111 = !DILocation(line: 370, column: 11, scope: !4100)
!4112 = !DILocation(line: 370, column: 30, scope: !4100)
!4113 = !DILocation(line: 370, column: 33, scope: !4100)
!4114 = !DILocation(line: 370, column: 18, scope: !4100)
!4115 = !DILocalVariable(name: "norm0", scope: !4100, file: !1807, line: 371, type: !1034)
!4116 = !DILocation(line: 371, column: 11, scope: !4100)
!4117 = !DILocalVariable(name: "norm1", scope: !4100, file: !1807, line: 371, type: !1034)
!4118 = !DILocation(line: 371, column: 18, scope: !4100)
!4119 = !DILocalVariable(name: "downmix_coeffs", scope: !4100, file: !1807, line: 372, type: !4120)
!4120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 448, align: 32, elements: !4121)
!4121 = !{!1821, !1923}
!4122 = !DILocation(line: 372, column: 11, scope: !4100)
!4123 = !DILocation(line: 374, column: 10, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 374, column: 9)
!4125 = !DILocation(line: 374, column: 13, scope: !4124)
!4126 = !DILocation(line: 374, column: 9, scope: !4100)
!4127 = !DILocation(line: 375, column: 32, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !1807, line: 374, column: 32)
!4129 = !DILocation(line: 375, column: 9, scope: !4128)
!4130 = !DILocation(line: 375, column: 12, scope: !4128)
!4131 = !DILocation(line: 375, column: 30, scope: !4128)
!4132 = !DILocation(line: 377, column: 14, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !1807, line: 377, column: 13)
!4134 = !DILocation(line: 377, column: 17, scope: !4133)
!4135 = !DILocation(line: 377, column: 13, scope: !4128)
!4136 = !DILocation(line: 378, column: 13, scope: !4133)
!4137 = !DILocation(line: 379, column: 32, scope: !4128)
!4138 = !DILocation(line: 379, column: 35, scope: !4128)
!4139 = !DILocation(line: 379, column: 53, scope: !4128)
!4140 = !DILocation(line: 379, column: 9, scope: !4128)
!4141 = !DILocation(line: 379, column: 12, scope: !4128)
!4142 = !DILocation(line: 379, column: 30, scope: !4128)
!4143 = !DILocation(line: 380, column: 5, scope: !4128)
!4144 = !DILocation(line: 382, column: 12, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 382, column: 5)
!4146 = !DILocation(line: 382, column: 10, scope: !4145)
!4147 = !DILocation(line: 382, column: 17, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4149, file: !1807, discriminator: 1)
!4149 = distinct !DILexicalBlock(scope: !4145, file: !1807, line: 382, column: 5)
!4150 = !DILocation(line: 382, column: 21, scope: !4148)
!4151 = !DILocation(line: 382, column: 24, scope: !4148)
!4152 = !DILocation(line: 382, column: 19, scope: !4148)
!4153 = !DILocation(line: 382, column: 5, scope: !4148)
!4154 = !DILocation(line: 383, column: 80, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4149, file: !1807, line: 382, column: 43)
!4156 = !DILocation(line: 383, column: 44, scope: !4155)
!4157 = !DILocation(line: 383, column: 63, scope: !4155)
!4158 = !DILocation(line: 383, column: 66, scope: !4155)
!4159 = !DILocation(line: 383, column: 32, scope: !4155)
!4160 = !DILocation(line: 383, column: 27, scope: !4155)
!4161 = !DILocation(line: 383, column: 9, scope: !4155)
!4162 = !DILocation(line: 383, column: 30, scope: !4155)
!4163 = !DILocation(line: 384, column: 80, scope: !4155)
!4164 = !DILocation(line: 384, column: 44, scope: !4155)
!4165 = !DILocation(line: 384, column: 63, scope: !4155)
!4166 = !DILocation(line: 384, column: 66, scope: !4155)
!4167 = !DILocation(line: 384, column: 32, scope: !4155)
!4168 = !DILocation(line: 384, column: 27, scope: !4155)
!4169 = !DILocation(line: 384, column: 9, scope: !4155)
!4170 = !DILocation(line: 384, column: 30, scope: !4155)
!4171 = !DILocation(line: 385, column: 5, scope: !4155)
!4172 = !DILocation(line: 382, column: 39, scope: !4173)
!4173 = !DILexicalBlockFile(scope: !4149, file: !1807, discriminator: 2)
!4174 = !DILocation(line: 382, column: 5, scope: !4173)
!4175 = distinct !{!4175, !4176}
!4176 = !DILocation(line: 382, column: 5, scope: !4100)
!4177 = !DILocation(line: 386, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 386, column: 9)
!4179 = !DILocation(line: 386, column: 12, scope: !4178)
!4180 = !DILocation(line: 386, column: 25, scope: !4178)
!4181 = !DILocation(line: 386, column: 29, scope: !4178)
!4182 = !DILocation(line: 386, column: 32, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4178, file: !1807, discriminator: 1)
!4184 = !DILocation(line: 386, column: 35, scope: !4183)
!4185 = !DILocation(line: 386, column: 48, scope: !4183)
!4186 = !DILocation(line: 386, column: 9, scope: !4183)
!4187 = !DILocation(line: 387, column: 55, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4178, file: !1807, line: 386, column: 53)
!4189 = !DILocation(line: 387, column: 32, scope: !4188)
!4190 = !DILocation(line: 387, column: 53, scope: !4188)
!4191 = !DILocation(line: 387, column: 9, scope: !4188)
!4192 = !DILocation(line: 387, column: 30, scope: !4188)
!4193 = !DILocation(line: 388, column: 5, scope: !4188)
!4194 = !DILocation(line: 389, column: 9, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 389, column: 9)
!4196 = !DILocation(line: 389, column: 12, scope: !4195)
!4197 = !DILocation(line: 389, column: 25, scope: !4195)
!4198 = !DILocation(line: 389, column: 44, scope: !4195)
!4199 = !DILocation(line: 389, column: 47, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !4195, file: !1807, discriminator: 1)
!4201 = !DILocation(line: 389, column: 50, scope: !4200)
!4202 = !DILocation(line: 389, column: 63, scope: !4200)
!4203 = !DILocation(line: 389, column: 9, scope: !4200)
!4204 = !DILocalVariable(name: "nf", scope: !4205, file: !1807, line: 390, type: !1015)
!4205 = distinct !DILexicalBlock(scope: !4195, file: !1807, line: 389, column: 83)
!4206 = !DILocation(line: 390, column: 13, scope: !4205)
!4207 = !DILocation(line: 390, column: 18, scope: !4205)
!4208 = !DILocation(line: 390, column: 21, scope: !4205)
!4209 = !DILocation(line: 390, column: 34, scope: !4205)
!4210 = !DILocation(line: 391, column: 57, scope: !4205)
!4211 = !DILocation(line: 391, column: 62, scope: !4205)
!4212 = !DILocation(line: 391, column: 51, scope: !4205)
!4213 = !DILocation(line: 391, column: 33, scope: !4205)
!4214 = !DILocation(line: 391, column: 55, scope: !4205)
!4215 = !DILocation(line: 391, column: 27, scope: !4205)
!4216 = !DILocation(line: 391, column: 9, scope: !4205)
!4217 = !DILocation(line: 391, column: 31, scope: !4205)
!4218 = !DILocation(line: 392, column: 5, scope: !4205)
!4219 = !DILocation(line: 393, column: 9, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 393, column: 9)
!4221 = !DILocation(line: 393, column: 12, scope: !4220)
!4222 = !DILocation(line: 393, column: 25, scope: !4220)
!4223 = !DILocation(line: 393, column: 44, scope: !4220)
!4224 = !DILocation(line: 393, column: 47, scope: !4225)
!4225 = !DILexicalBlockFile(scope: !4220, file: !1807, discriminator: 1)
!4226 = !DILocation(line: 393, column: 50, scope: !4225)
!4227 = !DILocation(line: 393, column: 63, scope: !4225)
!4228 = !DILocation(line: 393, column: 9, scope: !4225)
!4229 = !DILocalVariable(name: "nf", scope: !4230, file: !1807, line: 394, type: !1015)
!4230 = distinct !DILexicalBlock(scope: !4220, file: !1807, line: 393, column: 83)
!4231 = !DILocation(line: 394, column: 13, scope: !4230)
!4232 = !DILocation(line: 394, column: 18, scope: !4230)
!4233 = !DILocation(line: 394, column: 21, scope: !4230)
!4234 = !DILocation(line: 394, column: 34, scope: !4230)
!4235 = !DILocation(line: 395, column: 59, scope: !4230)
!4236 = !DILocation(line: 395, column: 51, scope: !4230)
!4237 = !DILocation(line: 395, column: 53, scope: !4230)
!4238 = !DILocation(line: 395, column: 33, scope: !4230)
!4239 = !DILocation(line: 395, column: 57, scope: !4230)
!4240 = !DILocation(line: 395, column: 27, scope: !4230)
!4241 = !DILocation(line: 395, column: 9, scope: !4230)
!4242 = !DILocation(line: 395, column: 31, scope: !4230)
!4243 = !DILocation(line: 396, column: 5, scope: !4230)
!4244 = !DILocation(line: 399, column: 19, scope: !4100)
!4245 = !DILocation(line: 399, column: 11, scope: !4100)
!4246 = !DILocation(line: 400, column: 12, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 400, column: 5)
!4248 = !DILocation(line: 400, column: 10, scope: !4247)
!4249 = !DILocation(line: 400, column: 17, scope: !4250)
!4250 = !DILexicalBlockFile(scope: !4251, file: !1807, discriminator: 1)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !1807, line: 400, column: 5)
!4252 = !DILocation(line: 400, column: 21, scope: !4250)
!4253 = !DILocation(line: 400, column: 24, scope: !4250)
!4254 = !DILocation(line: 400, column: 19, scope: !4250)
!4255 = !DILocation(line: 400, column: 5, scope: !4250)
!4256 = !DILocation(line: 401, column: 36, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4251, file: !1807, line: 400, column: 43)
!4258 = !DILocation(line: 401, column: 18, scope: !4257)
!4259 = !DILocation(line: 401, column: 15, scope: !4257)
!4260 = !DILocation(line: 402, column: 36, scope: !4257)
!4261 = !DILocation(line: 402, column: 18, scope: !4257)
!4262 = !DILocation(line: 402, column: 15, scope: !4257)
!4263 = !DILocation(line: 403, column: 5, scope: !4257)
!4264 = !DILocation(line: 400, column: 39, scope: !4265)
!4265 = !DILexicalBlockFile(scope: !4251, file: !1807, discriminator: 2)
!4266 = !DILocation(line: 400, column: 5, scope: !4265)
!4267 = distinct !{!4267, !4268}
!4268 = !DILocation(line: 400, column: 5, scope: !4100)
!4269 = !DILocation(line: 404, column: 20, scope: !4100)
!4270 = !DILocation(line: 404, column: 18, scope: !4100)
!4271 = !DILocation(line: 404, column: 11, scope: !4100)
!4272 = !DILocation(line: 405, column: 20, scope: !4100)
!4273 = !DILocation(line: 405, column: 18, scope: !4100)
!4274 = !DILocation(line: 405, column: 11, scope: !4100)
!4275 = !DILocation(line: 406, column: 12, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 406, column: 5)
!4277 = !DILocation(line: 406, column: 10, scope: !4276)
!4278 = !DILocation(line: 406, column: 17, scope: !4279)
!4279 = !DILexicalBlockFile(scope: !4280, file: !1807, discriminator: 1)
!4280 = distinct !DILexicalBlock(scope: !4276, file: !1807, line: 406, column: 5)
!4281 = !DILocation(line: 406, column: 21, scope: !4279)
!4282 = !DILocation(line: 406, column: 24, scope: !4279)
!4283 = !DILocation(line: 406, column: 19, scope: !4279)
!4284 = !DILocation(line: 406, column: 5, scope: !4279)
!4285 = !DILocation(line: 407, column: 33, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4280, file: !1807, line: 406, column: 43)
!4287 = !DILocation(line: 407, column: 27, scope: !4286)
!4288 = !DILocation(line: 407, column: 9, scope: !4286)
!4289 = !DILocation(line: 407, column: 30, scope: !4286)
!4290 = !DILocation(line: 408, column: 33, scope: !4286)
!4291 = !DILocation(line: 408, column: 27, scope: !4286)
!4292 = !DILocation(line: 408, column: 9, scope: !4286)
!4293 = !DILocation(line: 408, column: 30, scope: !4286)
!4294 = !DILocation(line: 409, column: 5, scope: !4286)
!4295 = !DILocation(line: 406, column: 39, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4280, file: !1807, discriminator: 2)
!4297 = !DILocation(line: 406, column: 5, scope: !4296)
!4298 = distinct !{!4298, !4299}
!4299 = !DILocation(line: 406, column: 5, scope: !4100)
!4300 = !DILocation(line: 411, column: 9, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 411, column: 9)
!4302 = !DILocation(line: 411, column: 12, scope: !4301)
!4303 = !DILocation(line: 411, column: 24, scope: !4301)
!4304 = !DILocation(line: 411, column: 9, scope: !4100)
!4305 = !DILocation(line: 412, column: 16, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !1807, line: 412, column: 9)
!4307 = distinct !DILexicalBlock(scope: !4301, file: !1807, line: 411, column: 44)
!4308 = !DILocation(line: 412, column: 14, scope: !4306)
!4309 = !DILocation(line: 412, column: 21, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4311, file: !1807, discriminator: 1)
!4311 = distinct !DILexicalBlock(scope: !4306, file: !1807, line: 412, column: 9)
!4312 = !DILocation(line: 412, column: 25, scope: !4310)
!4313 = !DILocation(line: 412, column: 28, scope: !4310)
!4314 = !DILocation(line: 412, column: 23, scope: !4310)
!4315 = !DILocation(line: 412, column: 9, scope: !4310)
!4316 = !DILocation(line: 413, column: 55, scope: !4311)
!4317 = !DILocation(line: 413, column: 37, scope: !4311)
!4318 = !DILocation(line: 414, column: 55, scope: !4311)
!4319 = !DILocation(line: 414, column: 37, scope: !4311)
!4320 = !DILocation(line: 413, column: 58, scope: !4311)
!4321 = !DILocation(line: 413, column: 36, scope: !4311)
!4322 = !DILocation(line: 414, column: 59, scope: !4311)
!4323 = !DILocation(line: 413, column: 31, scope: !4311)
!4324 = !DILocation(line: 413, column: 13, scope: !4311)
!4325 = !DILocation(line: 413, column: 34, scope: !4311)
!4326 = !DILocation(line: 412, column: 43, scope: !4327)
!4327 = !DILexicalBlockFile(scope: !4311, file: !1807, discriminator: 2)
!4328 = !DILocation(line: 412, column: 9, scope: !4327)
!4329 = distinct !{!4329, !4330}
!4330 = !DILocation(line: 412, column: 9, scope: !4307)
!4331 = !DILocation(line: 415, column: 5, scope: !4307)
!4332 = !DILocation(line: 416, column: 12, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4100, file: !1807, line: 416, column: 5)
!4334 = !DILocation(line: 416, column: 10, scope: !4333)
!4335 = !DILocation(line: 416, column: 17, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4337, file: !1807, discriminator: 1)
!4337 = distinct !DILexicalBlock(scope: !4333, file: !1807, line: 416, column: 5)
!4338 = !DILocation(line: 416, column: 21, scope: !4336)
!4339 = !DILocation(line: 416, column: 24, scope: !4336)
!4340 = !DILocation(line: 416, column: 19, scope: !4336)
!4341 = !DILocation(line: 416, column: 5, scope: !4336)
!4342 = !DILocation(line: 417, column: 61, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !1807, line: 416, column: 43)
!4344 = !DILocation(line: 417, column: 43, scope: !4343)
!4345 = !DILocation(line: 417, column: 65, scope: !4343)
!4346 = !DILocation(line: 417, column: 42, scope: !4343)
!4347 = !DILocation(line: 417, column: 72, scope: !4343)
!4348 = !DILocation(line: 417, column: 36, scope: !4343)
!4349 = !DILocation(line: 417, column: 35, scope: !4343)
!4350 = !DILocation(line: 417, column: 30, scope: !4343)
!4351 = !DILocation(line: 417, column: 9, scope: !4343)
!4352 = !DILocation(line: 417, column: 12, scope: !4343)
!4353 = !DILocation(line: 417, column: 33, scope: !4343)
!4354 = !DILocation(line: 418, column: 61, scope: !4343)
!4355 = !DILocation(line: 418, column: 43, scope: !4343)
!4356 = !DILocation(line: 418, column: 65, scope: !4343)
!4357 = !DILocation(line: 418, column: 42, scope: !4343)
!4358 = !DILocation(line: 418, column: 72, scope: !4343)
!4359 = !DILocation(line: 418, column: 36, scope: !4343)
!4360 = !DILocation(line: 418, column: 35, scope: !4343)
!4361 = !DILocation(line: 418, column: 30, scope: !4343)
!4362 = !DILocation(line: 418, column: 9, scope: !4343)
!4363 = !DILocation(line: 418, column: 12, scope: !4343)
!4364 = !DILocation(line: 418, column: 33, scope: !4343)
!4365 = !DILocation(line: 419, column: 5, scope: !4343)
!4366 = !DILocation(line: 416, column: 39, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4337, file: !1807, discriminator: 2)
!4368 = !DILocation(line: 416, column: 5, scope: !4367)
!4369 = distinct !{!4369, !4370}
!4370 = !DILocation(line: 416, column: 5, scope: !4100)
!4371 = !DILocation(line: 421, column: 5, scope: !4100)
!4372 = !DILocation(line: 422, column: 1, scope: !4100)
!4373 = distinct !DISubprogram(name: "decode_audio_block", scope: !1807, file: !1807, line: 1067, type: !4374, isLocal: true, isDefinition: true, scopeLine: 1068, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!1015, !1852, !1015, !1015}
!4376 = !DILocalVariable(name: "s", arg: 1, scope: !4373, file: !1807, line: 1067, type: !1852)
!4377 = !DILocation(line: 1067, column: 49, scope: !4373)
!4378 = !DILocalVariable(name: "blk", arg: 2, scope: !4373, file: !1807, line: 1067, type: !1015)
!4379 = !DILocation(line: 1067, column: 56, scope: !4373)
!4380 = !DILocalVariable(name: "offset", arg: 3, scope: !4373, file: !1807, line: 1067, type: !1015)
!4381 = !DILocation(line: 1067, column: 65, scope: !4373)
!4382 = !DILocalVariable(name: "fbw_channels", scope: !4373, file: !1807, line: 1069, type: !1015)
!4383 = !DILocation(line: 1069, column: 9, scope: !4373)
!4384 = !DILocation(line: 1069, column: 24, scope: !4373)
!4385 = !DILocation(line: 1069, column: 27, scope: !4373)
!4386 = !DILocalVariable(name: "channel_mode", scope: !4373, file: !1807, line: 1070, type: !1015)
!4387 = !DILocation(line: 1070, column: 9, scope: !4373)
!4388 = !DILocation(line: 1070, column: 24, scope: !4373)
!4389 = !DILocation(line: 1070, column: 27, scope: !4373)
!4390 = !DILocalVariable(name: "i", scope: !4373, file: !1807, line: 1071, type: !1015)
!4391 = !DILocation(line: 1071, column: 9, scope: !4373)
!4392 = !DILocalVariable(name: "bnd", scope: !4373, file: !1807, line: 1071, type: !1015)
!4393 = !DILocation(line: 1071, column: 12, scope: !4373)
!4394 = !DILocalVariable(name: "seg", scope: !4373, file: !1807, line: 1071, type: !1015)
!4395 = !DILocation(line: 1071, column: 17, scope: !4373)
!4396 = !DILocalVariable(name: "ch", scope: !4373, file: !1807, line: 1071, type: !1015)
!4397 = !DILocation(line: 1071, column: 22, scope: !4373)
!4398 = !DILocalVariable(name: "ret", scope: !4373, file: !1807, line: 1071, type: !1015)
!4399 = !DILocation(line: 1071, column: 26, scope: !4373)
!4400 = !DILocalVariable(name: "different_transforms", scope: !4373, file: !1807, line: 1072, type: !1015)
!4401 = !DILocation(line: 1072, column: 9, scope: !4373)
!4402 = !DILocalVariable(name: "downmix_output", scope: !4373, file: !1807, line: 1073, type: !1015)
!4403 = !DILocation(line: 1073, column: 9, scope: !4373)
!4404 = !DILocalVariable(name: "cpl_in_use", scope: !4373, file: !1807, line: 1074, type: !1015)
!4405 = !DILocation(line: 1074, column: 9, scope: !4373)
!4406 = !DILocalVariable(name: "gbc", scope: !4373, file: !1807, line: 1075, type: !3872)
!4407 = !DILocation(line: 1075, column: 20, scope: !4373)
!4408 = !DILocation(line: 1075, column: 27, scope: !4373)
!4409 = !DILocation(line: 1075, column: 30, scope: !4373)
!4410 = !DILocalVariable(name: "bit_alloc_stages", scope: !4373, file: !1807, line: 1076, type: !1940)
!4411 = !DILocation(line: 1076, column: 13, scope: !4373)
!4412 = !DILocation(line: 1079, column: 26, scope: !4373)
!4413 = !DILocation(line: 1080, column: 9, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1080, column: 9)
!4415 = !DILocation(line: 1080, column: 12, scope: !4414)
!4416 = !DILocation(line: 1080, column: 9, scope: !4373)
!4417 = !DILocation(line: 1081, column: 17, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !1807, line: 1081, column: 9)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !1807, line: 1080, column: 33)
!4420 = !DILocation(line: 1081, column: 14, scope: !4418)
!4421 = !DILocation(line: 1081, column: 22, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4423, file: !1807, discriminator: 1)
!4423 = distinct !DILexicalBlock(scope: !4418, file: !1807, line: 1081, column: 9)
!4424 = !DILocation(line: 1081, column: 28, scope: !4422)
!4425 = !DILocation(line: 1081, column: 25, scope: !4422)
!4426 = !DILocation(line: 1081, column: 9, scope: !4422)
!4427 = !DILocation(line: 1082, column: 45, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4423, file: !1807, line: 1081, column: 48)
!4429 = !DILocation(line: 1082, column: 35, scope: !4428)
!4430 = !DILocation(line: 1082, column: 29, scope: !4428)
!4431 = !DILocation(line: 1082, column: 13, scope: !4428)
!4432 = !DILocation(line: 1082, column: 16, scope: !4428)
!4433 = !DILocation(line: 1082, column: 33, scope: !4428)
!4434 = !DILocation(line: 1083, column: 17, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4428, file: !1807, line: 1083, column: 17)
!4436 = !DILocation(line: 1083, column: 20, scope: !4435)
!4437 = !DILocation(line: 1083, column: 24, scope: !4435)
!4438 = !DILocation(line: 1083, column: 43, scope: !4439)
!4439 = !DILexicalBlockFile(scope: !4435, file: !1807, discriminator: 1)
!4440 = !DILocation(line: 1083, column: 27, scope: !4439)
!4441 = !DILocation(line: 1083, column: 30, scope: !4439)
!4442 = !DILocation(line: 1083, column: 50, scope: !4439)
!4443 = !DILocation(line: 1083, column: 53, scope: !4439)
!4444 = !DILocation(line: 1083, column: 47, scope: !4439)
!4445 = !DILocation(line: 1083, column: 17, scope: !4439)
!4446 = !DILocation(line: 1084, column: 38, scope: !4435)
!4447 = !DILocation(line: 1084, column: 17, scope: !4435)
!4448 = !DILocation(line: 1085, column: 9, scope: !4428)
!4449 = !DILocation(line: 1081, column: 44, scope: !4450)
!4450 = !DILexicalBlockFile(scope: !4423, file: !1807, discriminator: 2)
!4451 = !DILocation(line: 1081, column: 9, scope: !4450)
!4452 = distinct !{!4452, !4453}
!4453 = !DILocation(line: 1081, column: 9, scope: !4419)
!4454 = !DILocation(line: 1086, column: 5, scope: !4419)
!4455 = !DILocation(line: 1089, column: 9, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1089, column: 9)
!4457 = !DILocation(line: 1089, column: 12, scope: !4456)
!4458 = !DILocation(line: 1089, column: 9, scope: !4373)
!4459 = !DILocation(line: 1090, column: 17, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !1807, line: 1090, column: 9)
!4461 = distinct !DILexicalBlock(scope: !4456, file: !1807, line: 1089, column: 32)
!4462 = !DILocation(line: 1090, column: 14, scope: !4460)
!4463 = !DILocation(line: 1090, column: 22, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4465, file: !1807, discriminator: 1)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !1807, line: 1090, column: 9)
!4466 = !DILocation(line: 1090, column: 28, scope: !4464)
!4467 = !DILocation(line: 1090, column: 25, scope: !4464)
!4468 = !DILocation(line: 1090, column: 9, scope: !4464)
!4469 = !DILocation(line: 1091, column: 44, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !1807, line: 1090, column: 48)
!4471 = !DILocation(line: 1091, column: 34, scope: !4470)
!4472 = !DILocation(line: 1091, column: 28, scope: !4470)
!4473 = !DILocation(line: 1091, column: 13, scope: !4470)
!4474 = !DILocation(line: 1091, column: 16, scope: !4470)
!4475 = !DILocation(line: 1091, column: 32, scope: !4470)
!4476 = !DILocation(line: 1092, column: 9, scope: !4470)
!4477 = !DILocation(line: 1090, column: 44, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !4465, file: !1807, discriminator: 2)
!4479 = !DILocation(line: 1090, column: 9, scope: !4478)
!4480 = distinct !{!4480, !4481}
!4481 = !DILocation(line: 1090, column: 9, scope: !4461)
!4482 = !DILocation(line: 1093, column: 5, scope: !4461)
!4483 = !DILocation(line: 1096, column: 10, scope: !4373)
!4484 = !DILocation(line: 1096, column: 13, scope: !4373)
!4485 = !DILocation(line: 1096, column: 9, scope: !4373)
!4486 = !DILocation(line: 1096, column: 7, scope: !4373)
!4487 = !DILocation(line: 1097, column: 5, scope: !4373)
!4488 = distinct !{!4488, !4487}
!4489 = !DILocation(line: 1098, column: 23, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !1807, line: 1098, column: 13)
!4491 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1097, column: 8)
!4492 = !DILocation(line: 1098, column: 13, scope: !4490)
!4493 = !DILocation(line: 1098, column: 13, scope: !4491)
!4494 = !DILocalVariable(name: "range_bits", scope: !4495, file: !1807, line: 1101, type: !1015)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !1807, line: 1098, column: 29)
!4496 = !DILocation(line: 1101, column: 17, scope: !4495)
!4497 = !DILocation(line: 1101, column: 39, scope: !4495)
!4498 = !DILocation(line: 1101, column: 30, scope: !4495)
!4499 = !DILocalVariable(name: "range", scope: !4495, file: !1807, line: 1102, type: !1955)
!4500 = !DILocation(line: 1102, column: 22, scope: !4495)
!4501 = !DILocation(line: 1102, column: 32, scope: !4495)
!4502 = !DILocation(line: 1102, column: 47, scope: !4495)
!4503 = !DILocation(line: 1102, column: 58, scope: !4495)
!4504 = !DILocation(line: 1102, column: 63, scope: !4495)
!4505 = !DILocation(line: 1102, column: 43, scope: !4495)
!4506 = !DILocation(line: 1103, column: 17, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4495, file: !1807, line: 1103, column: 17)
!4508 = !DILocation(line: 1103, column: 28, scope: !4507)
!4509 = !DILocation(line: 1103, column: 35, scope: !4507)
!4510 = !DILocation(line: 1103, column: 38, scope: !4511)
!4511 = !DILexicalBlockFile(scope: !4507, file: !1807, discriminator: 1)
!4512 = !DILocation(line: 1103, column: 41, scope: !4511)
!4513 = !DILocation(line: 1103, column: 51, scope: !4511)
!4514 = !DILocation(line: 1103, column: 17, scope: !4511)
!4515 = !DILocation(line: 1104, column: 40, scope: !4507)
!4516 = !DILocation(line: 1104, column: 34, scope: !4507)
!4517 = !DILocation(line: 1104, column: 17, scope: !4507)
!4518 = !DILocation(line: 1104, column: 20, scope: !4507)
!4519 = !DILocation(line: 1104, column: 37, scope: !4507)
!4520 = !DILocation(line: 1106, column: 39, scope: !4507)
!4521 = !DILocation(line: 1106, column: 34, scope: !4507)
!4522 = !DILocation(line: 1106, column: 17, scope: !4507)
!4523 = !DILocation(line: 1106, column: 20, scope: !4507)
!4524 = !DILocation(line: 1106, column: 37, scope: !4507)
!4525 = !DILocation(line: 1107, column: 9, scope: !4495)
!4526 = !DILocation(line: 1107, column: 20, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !4528, file: !1807, discriminator: 1)
!4528 = distinct !DILexicalBlock(scope: !4490, file: !1807, line: 1107, column: 20)
!4529 = !DILocation(line: 1107, column: 24, scope: !4527)
!4530 = !DILocation(line: 1108, column: 30, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !1807, line: 1107, column: 30)
!4532 = !DILocation(line: 1108, column: 13, scope: !4531)
!4533 = !DILocation(line: 1108, column: 16, scope: !4531)
!4534 = !DILocation(line: 1108, column: 33, scope: !4531)
!4535 = !DILocation(line: 1109, column: 9, scope: !4531)
!4536 = !DILocation(line: 1110, column: 5, scope: !4491)
!4537 = !DILocation(line: 1110, column: 15, scope: !4538)
!4538 = !DILexicalBlockFile(scope: !4373, file: !1807, discriminator: 1)
!4539 = !DILocation(line: 1110, column: 5, scope: !4538)
!4540 = !DILocation(line: 1113, column: 9, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1113, column: 9)
!4542 = !DILocation(line: 1113, column: 12, scope: !4541)
!4543 = !DILocation(line: 1113, column: 17, scope: !4541)
!4544 = !DILocation(line: 1113, column: 22, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !4541, file: !1807, discriminator: 1)
!4546 = !DILocation(line: 1113, column: 26, scope: !4545)
!4547 = !DILocation(line: 1113, column: 39, scope: !4548)
!4548 = !DILexicalBlockFile(scope: !4541, file: !1807, discriminator: 2)
!4549 = !DILocation(line: 1113, column: 29, scope: !4548)
!4550 = !DILocation(line: 1113, column: 9, scope: !4548)
!4551 = !DILocation(line: 1114, column: 35, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4541, file: !1807, line: 1113, column: 46)
!4553 = !DILocation(line: 1114, column: 25, scope: !4552)
!4554 = !DILocation(line: 1114, column: 9, scope: !4552)
!4555 = !DILocation(line: 1114, column: 12, scope: !4552)
!4556 = !DILocation(line: 1114, column: 23, scope: !4552)
!4557 = !DILocation(line: 1115, column: 13, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !1807, line: 1115, column: 13)
!4559 = !DILocation(line: 1115, column: 16, scope: !4558)
!4560 = !DILocation(line: 1115, column: 13, scope: !4552)
!4561 = !DILocation(line: 1116, column: 37, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !1807, line: 1116, column: 17)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !1807, line: 1115, column: 28)
!4564 = !DILocation(line: 1116, column: 40, scope: !4562)
!4565 = !DILocation(line: 1116, column: 24, scope: !4562)
!4566 = !DILocation(line: 1116, column: 22, scope: !4562)
!4567 = !DILocation(line: 1116, column: 46, scope: !4562)
!4568 = !DILocation(line: 1116, column: 17, scope: !4563)
!4569 = !DILocation(line: 1117, column: 24, scope: !4562)
!4570 = !DILocation(line: 1117, column: 17, scope: !4562)
!4571 = !DILocation(line: 1118, column: 9, scope: !4563)
!4572 = !DILocation(line: 1119, column: 5, scope: !4552)
!4573 = !DILocation(line: 1120, column: 10, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1120, column: 9)
!4575 = !DILocation(line: 1120, column: 13, scope: !4574)
!4576 = !DILocation(line: 1120, column: 18, scope: !4574)
!4577 = !DILocation(line: 1120, column: 22, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4574, file: !1807, discriminator: 1)
!4579 = !DILocation(line: 1120, column: 25, scope: !4578)
!4580 = !DILocation(line: 1120, column: 9, scope: !4578)
!4581 = !DILocation(line: 1121, column: 9, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4574, file: !1807, line: 1120, column: 37)
!4583 = !DILocation(line: 1121, column: 12, scope: !4582)
!4584 = !DILocation(line: 1121, column: 23, scope: !4582)
!4585 = !DILocation(line: 1122, column: 17, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !1807, line: 1122, column: 9)
!4587 = !DILocation(line: 1122, column: 14, scope: !4586)
!4588 = !DILocation(line: 1122, column: 22, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4590, file: !1807, discriminator: 1)
!4590 = distinct !DILexicalBlock(scope: !4586, file: !1807, line: 1122, column: 9)
!4591 = !DILocation(line: 1122, column: 28, scope: !4589)
!4592 = !DILocation(line: 1122, column: 25, scope: !4589)
!4593 = !DILocation(line: 1122, column: 9, scope: !4589)
!4594 = !DILocation(line: 1123, column: 33, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !1807, line: 1122, column: 48)
!4596 = !DILocation(line: 1123, column: 13, scope: !4595)
!4597 = !DILocation(line: 1123, column: 16, scope: !4595)
!4598 = !DILocation(line: 1123, column: 37, scope: !4595)
!4599 = !DILocation(line: 1124, column: 33, scope: !4595)
!4600 = !DILocation(line: 1124, column: 13, scope: !4595)
!4601 = !DILocation(line: 1124, column: 16, scope: !4595)
!4602 = !DILocation(line: 1124, column: 37, scope: !4595)
!4603 = !DILocation(line: 1125, column: 9, scope: !4595)
!4604 = !DILocation(line: 1122, column: 44, scope: !4605)
!4605 = !DILexicalBlockFile(scope: !4590, file: !1807, discriminator: 2)
!4606 = !DILocation(line: 1122, column: 9, scope: !4605)
!4607 = distinct !{!4607, !4608}
!4608 = !DILocation(line: 1122, column: 9, scope: !4582)
!4609 = !DILocation(line: 1126, column: 5, scope: !4582)
!4610 = !DILocation(line: 1129, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1129, column: 9)
!4612 = !DILocation(line: 1129, column: 12, scope: !4611)
!4613 = !DILocation(line: 1129, column: 9, scope: !4373)
!4614 = !DILocation(line: 1130, column: 25, scope: !4611)
!4615 = !DILocation(line: 1130, column: 9, scope: !4611)
!4616 = !DILocation(line: 1133, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1133, column: 9)
!4618 = !DILocation(line: 1133, column: 12, scope: !4617)
!4619 = !DILocation(line: 1133, column: 9, scope: !4373)
!4620 = !DILocation(line: 1133, column: 42, scope: !4621)
!4621 = !DILexicalBlockFile(scope: !4617, file: !1807, discriminator: 1)
!4622 = !DILocation(line: 1133, column: 19, scope: !4621)
!4623 = !DILocation(line: 1133, column: 22, scope: !4621)
!4624 = !DILocation(line: 1133, column: 9, scope: !4621)
!4625 = !DILocation(line: 1133, column: 59, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !4617, file: !1807, discriminator: 2)
!4627 = !DILocation(line: 1133, column: 49, scope: !4626)
!4628 = !DILocation(line: 1133, column: 9, scope: !4626)
!4629 = !DILocation(line: 1134, column: 38, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !1807, line: 1134, column: 13)
!4631 = distinct !DILexicalBlock(scope: !4617, file: !1807, line: 1133, column: 65)
!4632 = !DILocation(line: 1134, column: 41, scope: !4630)
!4633 = !DILocation(line: 1134, column: 46, scope: !4630)
!4634 = !DILocation(line: 1134, column: 20, scope: !4630)
!4635 = !DILocation(line: 1134, column: 18, scope: !4630)
!4636 = !DILocation(line: 1134, column: 65, scope: !4630)
!4637 = !DILocation(line: 1134, column: 13, scope: !4631)
!4638 = !DILocation(line: 1135, column: 20, scope: !4630)
!4639 = !DILocation(line: 1135, column: 13, scope: !4630)
!4640 = !DILocation(line: 1136, column: 5, scope: !4631)
!4641 = !DILocation(line: 1136, column: 17, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !4643, file: !1807, discriminator: 1)
!4643 = distinct !DILexicalBlock(scope: !4617, file: !1807, line: 1136, column: 16)
!4644 = !DILocation(line: 1136, column: 20, scope: !4642)
!4645 = !DILocation(line: 1136, column: 16, scope: !4642)
!4646 = !DILocation(line: 1137, column: 14, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !1807, line: 1137, column: 13)
!4648 = distinct !DILexicalBlock(scope: !4643, file: !1807, line: 1136, column: 26)
!4649 = !DILocation(line: 1137, column: 13, scope: !4648)
!4650 = !DILocation(line: 1138, column: 20, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4647, file: !1807, line: 1137, column: 19)
!4652 = !DILocation(line: 1138, column: 23, scope: !4651)
!4653 = !DILocation(line: 1138, column: 13, scope: !4651)
!4654 = !DILocation(line: 1140, column: 13, scope: !4651)
!4655 = !DILocation(line: 1142, column: 48, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4647, file: !1807, line: 1141, column: 16)
!4657 = !DILocation(line: 1142, column: 51, scope: !4656)
!4658 = !DILocation(line: 1142, column: 34, scope: !4656)
!4659 = !DILocation(line: 1142, column: 37, scope: !4656)
!4660 = !DILocation(line: 1142, column: 27, scope: !4656)
!4661 = !DILocation(line: 1142, column: 13, scope: !4656)
!4662 = !DILocation(line: 1142, column: 16, scope: !4656)
!4663 = !DILocation(line: 1142, column: 32, scope: !4656)
!4664 = !DILocation(line: 1144, column: 5, scope: !4648)
!4665 = !DILocation(line: 1145, column: 32, scope: !4373)
!4666 = !DILocation(line: 1145, column: 18, scope: !4373)
!4667 = !DILocation(line: 1145, column: 21, scope: !4373)
!4668 = !DILocation(line: 1145, column: 16, scope: !4373)
!4669 = !DILocation(line: 1148, column: 9, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1148, column: 9)
!4671 = !DILocation(line: 1148, column: 9, scope: !4373)
!4672 = !DILocation(line: 1149, column: 41, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !1807, line: 1149, column: 13)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !1807, line: 1148, column: 21)
!4675 = !DILocation(line: 1149, column: 44, scope: !4673)
!4676 = !DILocation(line: 1149, column: 20, scope: !4673)
!4677 = !DILocation(line: 1149, column: 18, scope: !4673)
!4678 = !DILocation(line: 1149, column: 50, scope: !4673)
!4679 = !DILocation(line: 1149, column: 13, scope: !4674)
!4680 = !DILocation(line: 1150, column: 20, scope: !4673)
!4681 = !DILocation(line: 1150, column: 13, scope: !4673)
!4682 = !DILocation(line: 1151, column: 5, scope: !4674)
!4683 = !DILocation(line: 1154, column: 9, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1154, column: 9)
!4685 = !DILocation(line: 1154, column: 22, scope: !4684)
!4686 = !DILocation(line: 1154, column: 9, scope: !4373)
!4687 = !DILocation(line: 1155, column: 14, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !1807, line: 1155, column: 13)
!4689 = distinct !DILexicalBlock(scope: !4684, file: !1807, line: 1154, column: 44)
!4690 = !DILocation(line: 1155, column: 17, scope: !4688)
!4691 = !DILocation(line: 1155, column: 22, scope: !4688)
!4692 = !DILocation(line: 1155, column: 26, scope: !4693)
!4693 = !DILexicalBlockFile(scope: !4688, file: !1807, discriminator: 1)
!4694 = !DILocation(line: 1155, column: 31, scope: !4693)
!4695 = !DILocation(line: 1155, column: 44, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4688, file: !1807, discriminator: 2)
!4697 = !DILocation(line: 1155, column: 34, scope: !4696)
!4698 = !DILocation(line: 1155, column: 13, scope: !4696)
!4699 = !DILocation(line: 1156, column: 13, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4688, file: !1807, line: 1155, column: 50)
!4701 = !DILocation(line: 1156, column: 16, scope: !4700)
!4702 = !DILocation(line: 1156, column: 38, scope: !4700)
!4703 = !DILocation(line: 1157, column: 17, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4700, file: !1807, line: 1157, column: 17)
!4705 = !DILocation(line: 1157, column: 28, scope: !4704)
!4706 = !DILocation(line: 1157, column: 31, scope: !4707)
!4707 = !DILexicalBlockFile(scope: !4704, file: !1807, discriminator: 1)
!4708 = !DILocation(line: 1157, column: 34, scope: !4707)
!4709 = !DILocation(line: 1157, column: 48, scope: !4707)
!4710 = !DILocation(line: 1157, column: 17, scope: !4707)
!4711 = !DILocation(line: 1158, column: 50, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4704, file: !1807, line: 1157, column: 55)
!4713 = !DILocation(line: 1158, column: 53, scope: !4712)
!4714 = !DILocation(line: 1158, column: 67, scope: !4712)
!4715 = !DILocation(line: 1158, column: 47, scope: !4712)
!4716 = !DILocation(line: 1158, column: 17, scope: !4712)
!4717 = !DILocation(line: 1158, column: 20, scope: !4712)
!4718 = !DILocation(line: 1158, column: 42, scope: !4712)
!4719 = !DILocation(line: 1159, column: 13, scope: !4712)
!4720 = !DILocation(line: 1159, column: 24, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !4722, file: !1807, discriminator: 1)
!4722 = distinct !DILexicalBlock(scope: !4704, file: !1807, line: 1159, column: 24)
!4723 = !DILocation(line: 1159, column: 27, scope: !4721)
!4724 = !DILocation(line: 1159, column: 38, scope: !4721)
!4725 = !DILocation(line: 1159, column: 41, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4722, file: !1807, discriminator: 2)
!4727 = !DILocation(line: 1159, column: 44, scope: !4726)
!4728 = !DILocation(line: 1159, column: 63, scope: !4726)
!4729 = !DILocation(line: 1159, column: 24, scope: !4726)
!4730 = !DILocation(line: 1160, column: 17, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4722, file: !1807, line: 1159, column: 70)
!4732 = !DILocation(line: 1160, column: 20, scope: !4731)
!4733 = !DILocation(line: 1160, column: 41, scope: !4731)
!4734 = !DILocation(line: 1161, column: 13, scope: !4731)
!4735 = !DILocation(line: 1162, column: 22, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4700, file: !1807, line: 1162, column: 13)
!4737 = !DILocation(line: 1162, column: 18, scope: !4736)
!4738 = !DILocation(line: 1162, column: 27, scope: !4739)
!4739 = !DILexicalBlockFile(scope: !4740, file: !1807, discriminator: 1)
!4740 = distinct !DILexicalBlock(scope: !4736, file: !1807, line: 1162, column: 13)
!4741 = !DILocation(line: 1162, column: 33, scope: !4739)
!4742 = !DILocation(line: 1162, column: 36, scope: !4739)
!4743 = !DILocation(line: 1162, column: 31, scope: !4739)
!4744 = !DILocation(line: 1162, column: 13, scope: !4739)
!4745 = !DILocation(line: 1163, column: 55, scope: !4740)
!4746 = !DILocation(line: 1163, column: 45, scope: !4740)
!4747 = !DILocation(line: 1163, column: 38, scope: !4740)
!4748 = !DILocation(line: 1163, column: 17, scope: !4740)
!4749 = !DILocation(line: 1163, column: 20, scope: !4740)
!4750 = !DILocation(line: 1163, column: 43, scope: !4740)
!4751 = !DILocation(line: 1162, column: 62, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4740, file: !1807, discriminator: 2)
!4753 = !DILocation(line: 1162, column: 13, scope: !4752)
!4754 = distinct !{!4754, !4755}
!4755 = !DILocation(line: 1162, column: 13, scope: !4700)
!4756 = !DILocation(line: 1164, column: 9, scope: !4700)
!4757 = !DILocation(line: 1164, column: 21, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !4759, file: !1807, discriminator: 1)
!4759 = distinct !DILexicalBlock(scope: !4688, file: !1807, line: 1164, column: 20)
!4760 = !DILocation(line: 1164, column: 20, scope: !4758)
!4761 = !DILocation(line: 1165, column: 20, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !1807, line: 1164, column: 26)
!4763 = !DILocation(line: 1165, column: 23, scope: !4762)
!4764 = !DILocation(line: 1165, column: 13, scope: !4762)
!4765 = !DILocation(line: 1167, column: 13, scope: !4762)
!4766 = !DILocation(line: 1167, column: 16, scope: !4762)
!4767 = !DILocation(line: 1167, column: 38, scope: !4762)
!4768 = !DILocation(line: 1168, column: 9, scope: !4762)
!4769 = !DILocation(line: 1169, column: 5, scope: !4689)
!4770 = !DILocation(line: 1172, column: 16, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1172, column: 5)
!4772 = !DILocation(line: 1172, column: 15, scope: !4771)
!4773 = !DILocation(line: 1172, column: 13, scope: !4771)
!4774 = !DILocation(line: 1172, column: 10, scope: !4771)
!4775 = !DILocation(line: 1172, column: 28, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4777, file: !1807, discriminator: 1)
!4777 = distinct !DILexicalBlock(scope: !4771, file: !1807, line: 1172, column: 5)
!4778 = !DILocation(line: 1172, column: 34, scope: !4776)
!4779 = !DILocation(line: 1172, column: 37, scope: !4776)
!4780 = !DILocation(line: 1172, column: 31, scope: !4776)
!4781 = !DILocation(line: 1172, column: 5, scope: !4776)
!4782 = !DILocation(line: 1173, column: 14, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !1807, line: 1173, column: 13)
!4784 = distinct !DILexicalBlock(scope: !4777, file: !1807, line: 1172, column: 53)
!4785 = !DILocation(line: 1173, column: 17, scope: !4783)
!4786 = !DILocation(line: 1173, column: 13, scope: !4784)
!4787 = !DILocation(line: 1174, column: 49, scope: !4783)
!4788 = !DILocation(line: 1174, column: 59, scope: !4783)
!4789 = !DILocation(line: 1174, column: 65, scope: !4783)
!4790 = !DILocation(line: 1174, column: 68, scope: !4783)
!4791 = !DILocation(line: 1174, column: 62, scope: !4783)
!4792 = !DILocation(line: 1174, column: 56, scope: !4783)
!4793 = !DILocation(line: 1174, column: 40, scope: !4783)
!4794 = !DILocation(line: 1174, column: 34, scope: !4783)
!4795 = !DILocation(line: 1174, column: 13, scope: !4783)
!4796 = !DILocation(line: 1174, column: 29, scope: !4783)
!4797 = !DILocation(line: 1174, column: 16, scope: !4783)
!4798 = !DILocation(line: 1174, column: 38, scope: !4783)
!4799 = !DILocation(line: 1175, column: 34, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4784, file: !1807, line: 1175, column: 13)
!4801 = !DILocation(line: 1175, column: 13, scope: !4800)
!4802 = !DILocation(line: 1175, column: 29, scope: !4800)
!4803 = !DILocation(line: 1175, column: 16, scope: !4800)
!4804 = !DILocation(line: 1175, column: 38, scope: !4800)
!4805 = !DILocation(line: 1175, column: 13, scope: !4784)
!4806 = !DILocation(line: 1176, column: 30, scope: !4800)
!4807 = !DILocation(line: 1176, column: 13, scope: !4800)
!4808 = !DILocation(line: 1176, column: 34, scope: !4800)
!4809 = !DILocation(line: 1177, column: 5, scope: !4784)
!4810 = !DILocation(line: 1172, column: 49, scope: !4811)
!4811 = !DILexicalBlockFile(scope: !4777, file: !1807, discriminator: 2)
!4812 = !DILocation(line: 1172, column: 5, scope: !4811)
!4813 = distinct !{!4813, !4814}
!4814 = !DILocation(line: 1172, column: 5, scope: !4373)
!4815 = !DILocation(line: 1180, column: 13, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1180, column: 5)
!4817 = !DILocation(line: 1180, column: 10, scope: !4816)
!4818 = !DILocation(line: 1180, column: 18, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !4820, file: !1807, discriminator: 1)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !1807, line: 1180, column: 5)
!4821 = !DILocation(line: 1180, column: 24, scope: !4819)
!4822 = !DILocation(line: 1180, column: 21, scope: !4819)
!4823 = !DILocation(line: 1180, column: 5, scope: !4819)
!4824 = !DILocation(line: 1181, column: 23, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4820, file: !1807, line: 1180, column: 44)
!4826 = !DILocation(line: 1181, column: 9, scope: !4825)
!4827 = !DILocation(line: 1181, column: 12, scope: !4825)
!4828 = !DILocation(line: 1181, column: 27, scope: !4825)
!4829 = !DILocation(line: 1182, column: 34, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !1807, line: 1182, column: 13)
!4831 = !DILocation(line: 1182, column: 13, scope: !4830)
!4832 = !DILocation(line: 1182, column: 29, scope: !4830)
!4833 = !DILocation(line: 1182, column: 16, scope: !4830)
!4834 = !DILocation(line: 1182, column: 38, scope: !4830)
!4835 = !DILocation(line: 1182, column: 13, scope: !4825)
!4836 = !DILocalVariable(name: "group_size", scope: !4837, file: !1807, line: 1183, type: !1015)
!4837 = distinct !DILexicalBlock(scope: !4830, file: !1807, line: 1182, column: 44)
!4838 = !DILocation(line: 1183, column: 17, scope: !4837)
!4839 = !DILocalVariable(name: "prev", scope: !4837, file: !1807, line: 1184, type: !1015)
!4840 = !DILocation(line: 1184, column: 17, scope: !4837)
!4841 = !DILocation(line: 1184, column: 36, scope: !4837)
!4842 = !DILocation(line: 1184, column: 24, scope: !4837)
!4843 = !DILocation(line: 1184, column: 27, scope: !4837)
!4844 = !DILocation(line: 1185, column: 35, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4837, file: !1807, line: 1185, column: 17)
!4846 = !DILocation(line: 1185, column: 17, scope: !4845)
!4847 = !DILocation(line: 1185, column: 20, scope: !4845)
!4848 = !DILocation(line: 1185, column: 17, scope: !4837)
!4849 = !DILocation(line: 1186, column: 35, scope: !4845)
!4850 = !DILocation(line: 1186, column: 38, scope: !4845)
!4851 = !DILocation(line: 1186, column: 29, scope: !4845)
!4852 = !DILocation(line: 1186, column: 17, scope: !4845)
!4853 = !DILocation(line: 1186, column: 20, scope: !4845)
!4854 = !DILocation(line: 1186, column: 33, scope: !4845)
!4855 = !DILocation(line: 1187, column: 42, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4845, file: !1807, line: 1187, column: 22)
!4857 = !DILocation(line: 1187, column: 22, scope: !4856)
!4858 = !DILocation(line: 1187, column: 25, scope: !4856)
!4859 = !DILocation(line: 1187, column: 22, scope: !4845)
!4860 = !DILocation(line: 1188, column: 35, scope: !4856)
!4861 = !DILocation(line: 1188, column: 38, scope: !4856)
!4862 = !DILocation(line: 1188, column: 29, scope: !4856)
!4863 = !DILocation(line: 1188, column: 17, scope: !4856)
!4864 = !DILocation(line: 1188, column: 20, scope: !4856)
!4865 = !DILocation(line: 1188, column: 33, scope: !4856)
!4866 = !DILocalVariable(name: "bandwidth_code", scope: !4867, file: !1807, line: 1190, type: !1015)
!4867 = distinct !DILexicalBlock(scope: !4856, file: !1807, line: 1189, column: 18)
!4868 = !DILocation(line: 1190, column: 21, scope: !4867)
!4869 = !DILocation(line: 1190, column: 47, scope: !4867)
!4870 = !DILocation(line: 1190, column: 38, scope: !4867)
!4871 = !DILocation(line: 1191, column: 21, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4867, file: !1807, line: 1191, column: 21)
!4873 = !DILocation(line: 1191, column: 36, scope: !4872)
!4874 = !DILocation(line: 1191, column: 21, scope: !4867)
!4875 = !DILocation(line: 1192, column: 28, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4872, file: !1807, line: 1191, column: 42)
!4877 = !DILocation(line: 1192, column: 31, scope: !4876)
!4878 = !DILocation(line: 1192, column: 72, scope: !4876)
!4879 = !DILocation(line: 1192, column: 21, scope: !4876)
!4880 = !DILocation(line: 1193, column: 21, scope: !4876)
!4881 = !DILocation(line: 1195, column: 35, scope: !4867)
!4882 = !DILocation(line: 1195, column: 50, scope: !4867)
!4883 = !DILocation(line: 1195, column: 54, scope: !4867)
!4884 = !DILocation(line: 1195, column: 29, scope: !4867)
!4885 = !DILocation(line: 1195, column: 17, scope: !4867)
!4886 = !DILocation(line: 1195, column: 20, scope: !4867)
!4887 = !DILocation(line: 1195, column: 33, scope: !4867)
!4888 = !DILocation(line: 1197, column: 53, scope: !4837)
!4889 = !DILocation(line: 1197, column: 32, scope: !4837)
!4890 = !DILocation(line: 1197, column: 48, scope: !4837)
!4891 = !DILocation(line: 1197, column: 35, scope: !4837)
!4892 = !DILocation(line: 1197, column: 57, scope: !4837)
!4893 = !DILocation(line: 1197, column: 28, scope: !4837)
!4894 = !DILocation(line: 1197, column: 24, scope: !4837)
!4895 = !DILocation(line: 1198, column: 50, scope: !4837)
!4896 = !DILocation(line: 1198, column: 38, scope: !4837)
!4897 = !DILocation(line: 1198, column: 41, scope: !4837)
!4898 = !DILocation(line: 1198, column: 56, scope: !4837)
!4899 = !DILocation(line: 1198, column: 54, scope: !4837)
!4900 = !DILocation(line: 1198, column: 66, scope: !4837)
!4901 = !DILocation(line: 1198, column: 72, scope: !4837)
!4902 = !DILocation(line: 1198, column: 70, scope: !4837)
!4903 = !DILocation(line: 1198, column: 31, scope: !4837)
!4904 = !DILocation(line: 1198, column: 13, scope: !4837)
!4905 = !DILocation(line: 1198, column: 16, scope: !4837)
!4906 = !DILocation(line: 1198, column: 35, scope: !4837)
!4907 = !DILocation(line: 1199, column: 17, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4837, file: !1807, line: 1199, column: 17)
!4909 = !DILocation(line: 1199, column: 21, scope: !4908)
!4910 = !DILocation(line: 1199, column: 25, scope: !4908)
!4911 = !DILocation(line: 1199, column: 40, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !4908, file: !1807, discriminator: 1)
!4913 = !DILocation(line: 1199, column: 28, scope: !4912)
!4914 = !DILocation(line: 1199, column: 31, scope: !4912)
!4915 = !DILocation(line: 1199, column: 47, scope: !4912)
!4916 = !DILocation(line: 1199, column: 44, scope: !4912)
!4917 = !DILocation(line: 1199, column: 17, scope: !4912)
!4918 = !DILocation(line: 1200, column: 17, scope: !4908)
!4919 = !DILocation(line: 1201, column: 9, scope: !4837)
!4920 = !DILocation(line: 1202, column: 5, scope: !4825)
!4921 = !DILocation(line: 1180, column: 40, scope: !4922)
!4922 = !DILexicalBlockFile(scope: !4820, file: !1807, discriminator: 2)
!4923 = !DILocation(line: 1180, column: 5, scope: !4922)
!4924 = distinct !{!4924, !4925}
!4925 = !DILocation(line: 1180, column: 5, scope: !4373)
!4926 = !DILocation(line: 1203, column: 9, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1203, column: 9)
!4928 = !DILocation(line: 1203, column: 20, scope: !4927)
!4929 = !DILocation(line: 1203, column: 39, scope: !4930)
!4930 = !DILexicalBlockFile(scope: !4927, file: !1807, discriminator: 1)
!4931 = !DILocation(line: 1203, column: 23, scope: !4930)
!4932 = !DILocation(line: 1203, column: 26, scope: !4930)
!4933 = !DILocation(line: 1203, column: 47, scope: !4930)
!4934 = !DILocation(line: 1203, column: 9, scope: !4930)
!4935 = !DILocation(line: 1204, column: 33, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4927, file: !1807, line: 1203, column: 53)
!4937 = !DILocation(line: 1204, column: 36, scope: !4936)
!4938 = !DILocation(line: 1204, column: 50, scope: !4936)
!4939 = !DILocation(line: 1204, column: 53, scope: !4936)
!4940 = !DILocation(line: 1204, column: 48, scope: !4936)
!4941 = !DILocation(line: 1205, column: 60, scope: !4936)
!4942 = !DILocation(line: 1205, column: 44, scope: !4936)
!4943 = !DILocation(line: 1205, column: 47, scope: !4936)
!4944 = !DILocation(line: 1205, column: 68, scope: !4936)
!4945 = !DILocation(line: 1205, column: 40, scope: !4936)
!4946 = !DILocation(line: 1204, column: 68, scope: !4936)
!4947 = !DILocation(line: 1204, column: 9, scope: !4936)
!4948 = !DILocation(line: 1204, column: 12, scope: !4936)
!4949 = !DILocation(line: 1204, column: 30, scope: !4936)
!4950 = !DILocation(line: 1206, column: 5, scope: !4936)
!4951 = !DILocation(line: 1209, column: 16, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1209, column: 5)
!4953 = !DILocation(line: 1209, column: 15, scope: !4952)
!4954 = !DILocation(line: 1209, column: 13, scope: !4952)
!4955 = !DILocation(line: 1209, column: 10, scope: !4952)
!4956 = !DILocation(line: 1209, column: 28, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !4958, file: !1807, discriminator: 1)
!4958 = distinct !DILexicalBlock(scope: !4952, file: !1807, line: 1209, column: 5)
!4959 = !DILocation(line: 1209, column: 34, scope: !4957)
!4960 = !DILocation(line: 1209, column: 37, scope: !4957)
!4961 = !DILocation(line: 1209, column: 31, scope: !4957)
!4962 = !DILocation(line: 1209, column: 5, scope: !4957)
!4963 = !DILocation(line: 1210, column: 34, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !1807, line: 1210, column: 13)
!4965 = distinct !DILexicalBlock(scope: !4958, file: !1807, line: 1209, column: 53)
!4966 = !DILocation(line: 1210, column: 13, scope: !4964)
!4967 = !DILocation(line: 1210, column: 29, scope: !4964)
!4968 = !DILocation(line: 1210, column: 16, scope: !4964)
!4969 = !DILocation(line: 1210, column: 38, scope: !4964)
!4970 = !DILocation(line: 1210, column: 13, scope: !4965)
!4971 = !DILocation(line: 1211, column: 40, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4964, file: !1807, line: 1210, column: 44)
!4973 = !DILocation(line: 1211, column: 31, scope: !4972)
!4974 = !DILocation(line: 1211, column: 52, scope: !4972)
!4975 = !DILocation(line: 1211, column: 51, scope: !4972)
!4976 = !DILocation(line: 1211, column: 48, scope: !4972)
!4977 = !DILocation(line: 1211, column: 22, scope: !4972)
!4978 = !DILocation(line: 1211, column: 13, scope: !4972)
!4979 = !DILocation(line: 1211, column: 16, scope: !4972)
!4980 = !DILocation(line: 1211, column: 29, scope: !4972)
!4981 = !DILocation(line: 1212, column: 34, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4972, file: !1807, line: 1212, column: 17)
!4983 = !DILocation(line: 1212, column: 37, scope: !4982)
!4984 = !DILocation(line: 1212, column: 63, scope: !4982)
!4985 = !DILocation(line: 1212, column: 42, scope: !4982)
!4986 = !DILocation(line: 1212, column: 58, scope: !4982)
!4987 = !DILocation(line: 1212, column: 45, scope: !4982)
!4988 = !DILocation(line: 1213, column: 52, scope: !4982)
!4989 = !DILocation(line: 1213, column: 34, scope: !4982)
!4990 = !DILocation(line: 1213, column: 37, scope: !4982)
!4991 = !DILocation(line: 1213, column: 66, scope: !4982)
!4992 = !DILocation(line: 1213, column: 57, scope: !4982)
!4993 = !DILocation(line: 1213, column: 60, scope: !4982)
!4994 = !DILocation(line: 1214, column: 62, scope: !4982)
!4995 = !DILocation(line: 1214, column: 48, scope: !4982)
!4996 = !DILocation(line: 1214, column: 51, scope: !4982)
!4997 = !DILocation(line: 1214, column: 68, scope: !4982)
!4998 = !DILocation(line: 1214, column: 67, scope: !4982)
!4999 = !DILocation(line: 1214, column: 66, scope: !4982)
!5000 = !DILocation(line: 1214, column: 65, scope: !4982)
!5001 = !DILocation(line: 1214, column: 35, scope: !4982)
!5002 = !DILocation(line: 1214, column: 44, scope: !4982)
!5003 = !DILocation(line: 1214, column: 38, scope: !4982)
!5004 = !DILocation(line: 1212, column: 17, scope: !4982)
!5005 = !DILocation(line: 1212, column: 17, scope: !4972)
!5006 = !DILocation(line: 1215, column: 17, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4982, file: !1807, line: 1214, column: 74)
!5008 = !DILocation(line: 1217, column: 17, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4972, file: !1807, line: 1217, column: 17)
!5010 = !DILocation(line: 1217, column: 20, scope: !5009)
!5011 = !DILocation(line: 1217, column: 25, scope: !5009)
!5012 = !DILocation(line: 1217, column: 28, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !5009, file: !1807, discriminator: 1)
!5014 = !DILocation(line: 1217, column: 34, scope: !5013)
!5015 = !DILocation(line: 1217, column: 37, scope: !5013)
!5016 = !DILocation(line: 1217, column: 31, scope: !5013)
!5017 = !DILocation(line: 1217, column: 17, scope: !5013)
!5018 = !DILocation(line: 1218, column: 27, scope: !5009)
!5019 = !DILocation(line: 1218, column: 17, scope: !5009)
!5020 = !DILocation(line: 1219, column: 9, scope: !4972)
!5021 = !DILocation(line: 1220, column: 5, scope: !4965)
!5022 = !DILocation(line: 1209, column: 49, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !4958, file: !1807, discriminator: 2)
!5024 = !DILocation(line: 1209, column: 5, scope: !5023)
!5025 = distinct !{!5025, !5026}
!5026 = !DILocation(line: 1209, column: 5, scope: !4373)
!5027 = !DILocation(line: 1223, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1223, column: 9)
!5029 = !DILocation(line: 1223, column: 12, scope: !5028)
!5030 = !DILocation(line: 1223, column: 9, scope: !4373)
!5031 = !DILocation(line: 1224, column: 23, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !1807, line: 1224, column: 13)
!5033 = distinct !DILexicalBlock(scope: !5028, file: !1807, line: 1223, column: 35)
!5034 = !DILocation(line: 1224, column: 13, scope: !5032)
!5035 = !DILocation(line: 1224, column: 13, scope: !5033)
!5036 = !DILocation(line: 1225, column: 77, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5032, file: !1807, line: 1224, column: 29)
!5038 = !DILocation(line: 1225, column: 68, scope: !5037)
!5039 = !DILocation(line: 1225, column: 46, scope: !5037)
!5040 = !DILocation(line: 1225, column: 89, scope: !5037)
!5041 = !DILocation(line: 1225, column: 92, scope: !5037)
!5042 = !DILocation(line: 1225, column: 109, scope: !5037)
!5043 = !DILocation(line: 1225, column: 86, scope: !5037)
!5044 = !DILocation(line: 1225, column: 13, scope: !5037)
!5045 = !DILocation(line: 1225, column: 16, scope: !5037)
!5046 = !DILocation(line: 1225, column: 33, scope: !5037)
!5047 = !DILocation(line: 1225, column: 44, scope: !5037)
!5048 = !DILocation(line: 1226, column: 77, scope: !5037)
!5049 = !DILocation(line: 1226, column: 68, scope: !5037)
!5050 = !DILocation(line: 1226, column: 46, scope: !5037)
!5051 = !DILocation(line: 1226, column: 89, scope: !5037)
!5052 = !DILocation(line: 1226, column: 92, scope: !5037)
!5053 = !DILocation(line: 1226, column: 109, scope: !5037)
!5054 = !DILocation(line: 1226, column: 86, scope: !5037)
!5055 = !DILocation(line: 1226, column: 13, scope: !5037)
!5056 = !DILocation(line: 1226, column: 16, scope: !5037)
!5057 = !DILocation(line: 1226, column: 33, scope: !5037)
!5058 = !DILocation(line: 1226, column: 44, scope: !5037)
!5059 = !DILocation(line: 1227, column: 75, scope: !5037)
!5060 = !DILocation(line: 1227, column: 66, scope: !5037)
!5061 = !DILocation(line: 1227, column: 45, scope: !5037)
!5062 = !DILocation(line: 1227, column: 13, scope: !5037)
!5063 = !DILocation(line: 1227, column: 16, scope: !5037)
!5064 = !DILocation(line: 1227, column: 33, scope: !5037)
!5065 = !DILocation(line: 1227, column: 43, scope: !5037)
!5066 = !DILocation(line: 1228, column: 77, scope: !5037)
!5067 = !DILocation(line: 1228, column: 68, scope: !5037)
!5068 = !DILocation(line: 1228, column: 46, scope: !5037)
!5069 = !DILocation(line: 1228, column: 13, scope: !5037)
!5070 = !DILocation(line: 1228, column: 16, scope: !5037)
!5071 = !DILocation(line: 1228, column: 33, scope: !5037)
!5072 = !DILocation(line: 1228, column: 44, scope: !5037)
!5073 = !DILocation(line: 1229, column: 67, scope: !5037)
!5074 = !DILocation(line: 1229, column: 58, scope: !5037)
!5075 = !DILocation(line: 1229, column: 41, scope: !5037)
!5076 = !DILocation(line: 1229, column: 13, scope: !5037)
!5077 = !DILocation(line: 1229, column: 16, scope: !5037)
!5078 = !DILocation(line: 1229, column: 33, scope: !5037)
!5079 = !DILocation(line: 1229, column: 39, scope: !5037)
!5080 = !DILocation(line: 1230, column: 24, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5037, file: !1807, line: 1230, column: 13)
!5082 = !DILocation(line: 1230, column: 23, scope: !5081)
!5083 = !DILocation(line: 1230, column: 21, scope: !5081)
!5084 = !DILocation(line: 1230, column: 18, scope: !5081)
!5085 = !DILocation(line: 1230, column: 36, scope: !5086)
!5086 = !DILexicalBlockFile(scope: !5087, file: !1807, discriminator: 1)
!5087 = distinct !DILexicalBlock(scope: !5081, file: !1807, line: 1230, column: 13)
!5088 = !DILocation(line: 1230, column: 42, scope: !5086)
!5089 = !DILocation(line: 1230, column: 45, scope: !5086)
!5090 = !DILocation(line: 1230, column: 39, scope: !5086)
!5091 = !DILocation(line: 1230, column: 13, scope: !5086)
!5092 = !DILocation(line: 1231, column: 59, scope: !5087)
!5093 = !DILocation(line: 1231, column: 42, scope: !5087)
!5094 = !DILocation(line: 1231, column: 41, scope: !5087)
!5095 = !DILocation(line: 1231, column: 64, scope: !5087)
!5096 = !DILocation(line: 1231, column: 90, scope: !5086)
!5097 = !DILocation(line: 1231, column: 73, scope: !5086)
!5098 = !DILocation(line: 1231, column: 72, scope: !5086)
!5099 = !DILocation(line: 1231, column: 41, scope: !5086)
!5100 = !DILocation(line: 1231, column: 41, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !5087, file: !1807, discriminator: 2)
!5102 = !DILocation(line: 1231, column: 41, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5087, file: !1807, discriminator: 3)
!5104 = !DILocation(line: 1231, column: 40, scope: !5103)
!5105 = !DILocation(line: 1231, column: 34, scope: !5103)
!5106 = !DILocation(line: 1231, column: 17, scope: !5103)
!5107 = !DILocation(line: 1231, column: 38, scope: !5103)
!5108 = !DILocation(line: 1230, column: 57, scope: !5101)
!5109 = !DILocation(line: 1230, column: 13, scope: !5101)
!5110 = distinct !{!5110, !5111}
!5111 = !DILocation(line: 1230, column: 13, scope: !5037)
!5112 = !DILocation(line: 1232, column: 9, scope: !5037)
!5113 = !DILocation(line: 1232, column: 21, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5115, file: !1807, discriminator: 1)
!5115 = distinct !DILexicalBlock(scope: !5032, file: !1807, line: 1232, column: 20)
!5116 = !DILocation(line: 1232, column: 20, scope: !5114)
!5117 = !DILocation(line: 1233, column: 20, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5115, file: !1807, line: 1232, column: 26)
!5119 = !DILocation(line: 1233, column: 23, scope: !5118)
!5120 = !DILocation(line: 1233, column: 13, scope: !5118)
!5121 = !DILocation(line: 1235, column: 13, scope: !5118)
!5122 = !DILocation(line: 1237, column: 5, scope: !5033)
!5123 = !DILocation(line: 1240, column: 10, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1240, column: 9)
!5125 = !DILocation(line: 1240, column: 13, scope: !5124)
!5126 = !DILocation(line: 1240, column: 18, scope: !5124)
!5127 = !DILocation(line: 1240, column: 22, scope: !5128)
!5128 = !DILexicalBlockFile(scope: !5124, file: !1807, discriminator: 1)
!5129 = !DILocation(line: 1240, column: 9, scope: !5128)
!5130 = !DILocation(line: 1241, column: 13, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !1807, line: 1241, column: 13)
!5132 = distinct !DILexicalBlock(scope: !5124, file: !1807, line: 1240, column: 27)
!5133 = !DILocation(line: 1241, column: 16, scope: !5131)
!5134 = !DILocation(line: 1241, column: 36, scope: !5131)
!5135 = !DILocation(line: 1241, column: 49, scope: !5136)
!5136 = !DILexicalBlockFile(scope: !5131, file: !1807, discriminator: 1)
!5137 = !DILocation(line: 1241, column: 39, scope: !5136)
!5138 = !DILocation(line: 1241, column: 13, scope: !5136)
!5139 = !DILocalVariable(name: "snr", scope: !5140, file: !1807, line: 1242, type: !1015)
!5140 = distinct !DILexicalBlock(scope: !5131, file: !1807, line: 1241, column: 55)
!5141 = !DILocation(line: 1242, column: 17, scope: !5140)
!5142 = !DILocalVariable(name: "csnr", scope: !5140, file: !1807, line: 1243, type: !1015)
!5143 = !DILocation(line: 1243, column: 17, scope: !5140)
!5144 = !DILocation(line: 1244, column: 30, scope: !5140)
!5145 = !DILocation(line: 1244, column: 21, scope: !5140)
!5146 = !DILocation(line: 1244, column: 38, scope: !5140)
!5147 = !DILocation(line: 1244, column: 44, scope: !5140)
!5148 = !DILocation(line: 1244, column: 18, scope: !5140)
!5149 = !DILocation(line: 1245, column: 28, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5140, file: !1807, line: 1245, column: 13)
!5151 = !DILocation(line: 1245, column: 27, scope: !5150)
!5152 = !DILocation(line: 1245, column: 25, scope: !5150)
!5153 = !DILocation(line: 1245, column: 20, scope: !5150)
!5154 = !DILocation(line: 1245, column: 18, scope: !5150)
!5155 = !DILocation(line: 1245, column: 40, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5157, file: !1807, discriminator: 1)
!5157 = distinct !DILexicalBlock(scope: !5150, file: !1807, line: 1245, column: 13)
!5158 = !DILocation(line: 1245, column: 46, scope: !5156)
!5159 = !DILocation(line: 1245, column: 49, scope: !5156)
!5160 = !DILocation(line: 1245, column: 43, scope: !5156)
!5161 = !DILocation(line: 1245, column: 13, scope: !5156)
!5162 = !DILocation(line: 1247, column: 21, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !1807, line: 1247, column: 21)
!5164 = distinct !DILexicalBlock(scope: !5157, file: !1807, line: 1245, column: 65)
!5165 = !DILocation(line: 1247, column: 27, scope: !5163)
!5166 = !DILocation(line: 1247, column: 24, scope: !5163)
!5167 = !DILocation(line: 1247, column: 29, scope: !5163)
!5168 = !DILocation(line: 1247, column: 32, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5163, file: !1807, discriminator: 1)
!5170 = !DILocation(line: 1247, column: 35, scope: !5169)
!5171 = !DILocation(line: 1247, column: 55, scope: !5169)
!5172 = !DILocation(line: 1247, column: 21, scope: !5169)
!5173 = !DILocation(line: 1248, column: 28, scope: !5163)
!5174 = !DILocation(line: 1248, column: 44, scope: !5163)
!5175 = !DILocation(line: 1248, column: 35, scope: !5163)
!5176 = !DILocation(line: 1248, column: 33, scope: !5163)
!5177 = !DILocation(line: 1248, column: 53, scope: !5163)
!5178 = !DILocation(line: 1248, column: 25, scope: !5163)
!5179 = !DILocation(line: 1248, column: 21, scope: !5163)
!5180 = !DILocation(line: 1250, column: 21, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5164, file: !1807, line: 1250, column: 21)
!5182 = !DILocation(line: 1250, column: 25, scope: !5181)
!5183 = !DILocation(line: 1250, column: 42, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !5181, file: !1807, discriminator: 1)
!5185 = !DILocation(line: 1250, column: 28, scope: !5184)
!5186 = !DILocation(line: 1250, column: 31, scope: !5184)
!5187 = !DILocation(line: 1250, column: 49, scope: !5184)
!5188 = !DILocation(line: 1250, column: 46, scope: !5184)
!5189 = !DILocation(line: 1250, column: 21, scope: !5184)
!5190 = !DILocation(line: 1251, column: 63, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5181, file: !1807, line: 1250, column: 54)
!5192 = !DILocation(line: 1251, column: 46, scope: !5191)
!5193 = !DILocation(line: 1251, column: 45, scope: !5191)
!5194 = !DILocation(line: 1251, column: 68, scope: !5191)
!5195 = !DILocation(line: 1251, column: 94, scope: !5196)
!5196 = !DILexicalBlockFile(scope: !5191, file: !1807, discriminator: 1)
!5197 = !DILocation(line: 1251, column: 77, scope: !5196)
!5198 = !DILocation(line: 1251, column: 76, scope: !5196)
!5199 = !DILocation(line: 1251, column: 45, scope: !5196)
!5200 = !DILocation(line: 1251, column: 45, scope: !5201)
!5201 = !DILexicalBlockFile(scope: !5191, file: !1807, discriminator: 2)
!5202 = !DILocation(line: 1251, column: 45, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5191, file: !1807, discriminator: 3)
!5204 = !DILocation(line: 1251, column: 44, scope: !5203)
!5205 = !DILocation(line: 1251, column: 38, scope: !5203)
!5206 = !DILocation(line: 1251, column: 21, scope: !5203)
!5207 = !DILocation(line: 1251, column: 42, scope: !5203)
!5208 = !DILocation(line: 1252, column: 17, scope: !5191)
!5209 = !DILocation(line: 1253, column: 37, scope: !5164)
!5210 = !DILocation(line: 1253, column: 31, scope: !5164)
!5211 = !DILocation(line: 1253, column: 17, scope: !5164)
!5212 = !DILocation(line: 1253, column: 20, scope: !5164)
!5213 = !DILocation(line: 1253, column: 35, scope: !5164)
!5214 = !DILocation(line: 1256, column: 22, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5164, file: !1807, line: 1256, column: 21)
!5216 = !DILocation(line: 1256, column: 25, scope: !5215)
!5217 = !DILocation(line: 1256, column: 21, scope: !5164)
!5218 = !DILocalVariable(name: "prev", scope: !5219, file: !1807, line: 1257, type: !1015)
!5219 = distinct !DILexicalBlock(scope: !5215, file: !1807, line: 1256, column: 31)
!5220 = !DILocation(line: 1257, column: 25, scope: !5219)
!5221 = !DILocation(line: 1257, column: 45, scope: !5219)
!5222 = !DILocation(line: 1257, column: 32, scope: !5219)
!5223 = !DILocation(line: 1257, column: 35, scope: !5219)
!5224 = !DILocation(line: 1258, column: 70, scope: !5219)
!5225 = !DILocation(line: 1258, column: 61, scope: !5219)
!5226 = !DILocation(line: 1258, column: 40, scope: !5219)
!5227 = !DILocation(line: 1258, column: 34, scope: !5219)
!5228 = !DILocation(line: 1258, column: 21, scope: !5219)
!5229 = !DILocation(line: 1258, column: 24, scope: !5219)
!5230 = !DILocation(line: 1258, column: 38, scope: !5219)
!5231 = !DILocation(line: 1260, column: 25, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5219, file: !1807, line: 1260, column: 25)
!5233 = !DILocation(line: 1260, column: 29, scope: !5232)
!5234 = !DILocation(line: 1260, column: 32, scope: !5235)
!5235 = !DILexicalBlockFile(scope: !5232, file: !1807, discriminator: 1)
!5236 = !DILocation(line: 1260, column: 53, scope: !5235)
!5237 = !DILocation(line: 1260, column: 40, scope: !5235)
!5238 = !DILocation(line: 1260, column: 43, scope: !5235)
!5239 = !DILocation(line: 1260, column: 37, scope: !5235)
!5240 = !DILocation(line: 1260, column: 25, scope: !5235)
!5241 = !DILocation(line: 1261, column: 67, scope: !5232)
!5242 = !DILocation(line: 1261, column: 50, scope: !5232)
!5243 = !DILocation(line: 1261, column: 49, scope: !5232)
!5244 = !DILocation(line: 1261, column: 72, scope: !5232)
!5245 = !DILocation(line: 1261, column: 98, scope: !5235)
!5246 = !DILocation(line: 1261, column: 81, scope: !5235)
!5247 = !DILocation(line: 1261, column: 80, scope: !5235)
!5248 = !DILocation(line: 1261, column: 49, scope: !5235)
!5249 = !DILocation(line: 1261, column: 49, scope: !5250)
!5250 = !DILexicalBlockFile(scope: !5232, file: !1807, discriminator: 2)
!5251 = !DILocation(line: 1261, column: 49, scope: !5252)
!5252 = !DILexicalBlockFile(scope: !5232, file: !1807, discriminator: 3)
!5253 = !DILocation(line: 1261, column: 48, scope: !5252)
!5254 = !DILocation(line: 1261, column: 42, scope: !5252)
!5255 = !DILocation(line: 1261, column: 25, scope: !5252)
!5256 = !DILocation(line: 1261, column: 46, scope: !5252)
!5257 = !DILocation(line: 1262, column: 17, scope: !5219)
!5258 = !DILocation(line: 1263, column: 13, scope: !5164)
!5259 = !DILocation(line: 1245, column: 61, scope: !5260)
!5260 = !DILexicalBlockFile(scope: !5157, file: !1807, discriminator: 2)
!5261 = !DILocation(line: 1245, column: 13, scope: !5260)
!5262 = distinct !{!5262, !5263}
!5263 = !DILocation(line: 1245, column: 13, scope: !5140)
!5264 = !DILocation(line: 1264, column: 9, scope: !5140)
!5265 = !DILocation(line: 1264, column: 21, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !5267, file: !1807, discriminator: 1)
!5267 = distinct !DILexicalBlock(scope: !5131, file: !1807, line: 1264, column: 20)
!5268 = !DILocation(line: 1264, column: 24, scope: !5266)
!5269 = !DILocation(line: 1264, column: 29, scope: !5266)
!5270 = !DILocation(line: 1264, column: 33, scope: !5271)
!5271 = !DILexicalBlockFile(scope: !5267, file: !1807, discriminator: 2)
!5272 = !DILocation(line: 1264, column: 20, scope: !5271)
!5273 = !DILocation(line: 1265, column: 20, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5267, file: !1807, line: 1264, column: 38)
!5275 = !DILocation(line: 1265, column: 23, scope: !5274)
!5276 = !DILocation(line: 1265, column: 13, scope: !5274)
!5277 = !DILocation(line: 1266, column: 13, scope: !5274)
!5278 = !DILocation(line: 1268, column: 5, scope: !5132)
!5279 = !DILocation(line: 1271, column: 9, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1271, column: 9)
!5281 = !DILocation(line: 1271, column: 12, scope: !5280)
!5282 = !DILocation(line: 1271, column: 29, scope: !5280)
!5283 = !DILocation(line: 1271, column: 42, scope: !5284)
!5284 = !DILexicalBlockFile(scope: !5280, file: !1807, discriminator: 1)
!5285 = !DILocation(line: 1271, column: 32, scope: !5284)
!5286 = !DILocation(line: 1271, column: 9, scope: !5284)
!5287 = !DILocation(line: 1272, column: 20, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !1807, line: 1272, column: 9)
!5289 = distinct !DILexicalBlock(scope: !5280, file: !1807, line: 1271, column: 48)
!5290 = !DILocation(line: 1272, column: 19, scope: !5288)
!5291 = !DILocation(line: 1272, column: 17, scope: !5288)
!5292 = !DILocation(line: 1272, column: 14, scope: !5288)
!5293 = !DILocation(line: 1272, column: 32, scope: !5294)
!5294 = !DILexicalBlockFile(scope: !5295, file: !1807, discriminator: 1)
!5295 = distinct !DILexicalBlock(scope: !5288, file: !1807, line: 1272, column: 9)
!5296 = !DILocation(line: 1272, column: 38, scope: !5294)
!5297 = !DILocation(line: 1272, column: 41, scope: !5294)
!5298 = !DILocation(line: 1272, column: 35, scope: !5294)
!5299 = !DILocation(line: 1272, column: 9, scope: !5294)
!5300 = !DILocalVariable(name: "prev", scope: !5301, file: !1807, line: 1273, type: !1015)
!5301 = distinct !DILexicalBlock(scope: !5295, file: !1807, line: 1272, column: 57)
!5302 = !DILocation(line: 1273, column: 17, scope: !5301)
!5303 = !DILocation(line: 1273, column: 37, scope: !5301)
!5304 = !DILocation(line: 1273, column: 24, scope: !5301)
!5305 = !DILocation(line: 1273, column: 27, scope: !5301)
!5306 = !DILocation(line: 1274, column: 62, scope: !5301)
!5307 = !DILocation(line: 1274, column: 53, scope: !5301)
!5308 = !DILocation(line: 1274, column: 32, scope: !5301)
!5309 = !DILocation(line: 1274, column: 26, scope: !5301)
!5310 = !DILocation(line: 1274, column: 13, scope: !5301)
!5311 = !DILocation(line: 1274, column: 16, scope: !5301)
!5312 = !DILocation(line: 1274, column: 30, scope: !5301)
!5313 = !DILocation(line: 1276, column: 17, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5301, file: !1807, line: 1276, column: 17)
!5315 = !DILocation(line: 1276, column: 21, scope: !5314)
!5316 = !DILocation(line: 1276, column: 24, scope: !5317)
!5317 = !DILexicalBlockFile(scope: !5314, file: !1807, discriminator: 1)
!5318 = !DILocation(line: 1276, column: 45, scope: !5317)
!5319 = !DILocation(line: 1276, column: 32, scope: !5317)
!5320 = !DILocation(line: 1276, column: 35, scope: !5317)
!5321 = !DILocation(line: 1276, column: 29, scope: !5317)
!5322 = !DILocation(line: 1276, column: 17, scope: !5317)
!5323 = !DILocation(line: 1277, column: 59, scope: !5314)
!5324 = !DILocation(line: 1277, column: 42, scope: !5314)
!5325 = !DILocation(line: 1277, column: 41, scope: !5314)
!5326 = !DILocation(line: 1277, column: 64, scope: !5314)
!5327 = !DILocation(line: 1277, column: 90, scope: !5317)
!5328 = !DILocation(line: 1277, column: 73, scope: !5317)
!5329 = !DILocation(line: 1277, column: 72, scope: !5317)
!5330 = !DILocation(line: 1277, column: 41, scope: !5317)
!5331 = !DILocation(line: 1277, column: 41, scope: !5332)
!5332 = !DILexicalBlockFile(scope: !5314, file: !1807, discriminator: 2)
!5333 = !DILocation(line: 1277, column: 41, scope: !5334)
!5334 = !DILexicalBlockFile(scope: !5314, file: !1807, discriminator: 3)
!5335 = !DILocation(line: 1277, column: 40, scope: !5334)
!5336 = !DILocation(line: 1277, column: 34, scope: !5334)
!5337 = !DILocation(line: 1277, column: 17, scope: !5334)
!5338 = !DILocation(line: 1277, column: 38, scope: !5334)
!5339 = !DILocation(line: 1278, column: 9, scope: !5301)
!5340 = !DILocation(line: 1272, column: 53, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5295, file: !1807, discriminator: 2)
!5342 = !DILocation(line: 1272, column: 9, scope: !5341)
!5343 = distinct !{!5343, !5344}
!5344 = !DILocation(line: 1272, column: 9, scope: !5289)
!5345 = !DILocation(line: 1279, column: 5, scope: !5289)
!5346 = !DILocation(line: 1279, column: 16, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5348, file: !1807, discriminator: 1)
!5348 = distinct !DILexicalBlock(scope: !5280, file: !1807, line: 1279, column: 16)
!5349 = !DILocation(line: 1279, column: 19, scope: !5347)
!5350 = !DILocation(line: 1279, column: 24, scope: !5347)
!5351 = !DILocation(line: 1279, column: 28, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !5348, file: !1807, discriminator: 2)
!5353 = !DILocation(line: 1279, column: 16, scope: !5352)
!5354 = !DILocation(line: 1280, column: 20, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !1807, line: 1280, column: 9)
!5356 = distinct !DILexicalBlock(scope: !5348, file: !1807, line: 1279, column: 33)
!5357 = !DILocation(line: 1280, column: 19, scope: !5355)
!5358 = !DILocation(line: 1280, column: 17, scope: !5355)
!5359 = !DILocation(line: 1280, column: 14, scope: !5355)
!5360 = !DILocation(line: 1280, column: 32, scope: !5361)
!5361 = !DILexicalBlockFile(scope: !5362, file: !1807, discriminator: 1)
!5362 = distinct !DILexicalBlock(scope: !5355, file: !1807, line: 1280, column: 9)
!5363 = !DILocation(line: 1280, column: 38, scope: !5361)
!5364 = !DILocation(line: 1280, column: 41, scope: !5361)
!5365 = !DILocation(line: 1280, column: 35, scope: !5361)
!5366 = !DILocation(line: 1280, column: 9, scope: !5361)
!5367 = !DILocation(line: 1281, column: 32, scope: !5362)
!5368 = !DILocation(line: 1281, column: 26, scope: !5362)
!5369 = !DILocation(line: 1281, column: 13, scope: !5362)
!5370 = !DILocation(line: 1281, column: 16, scope: !5362)
!5371 = !DILocation(line: 1281, column: 30, scope: !5362)
!5372 = !DILocation(line: 1280, column: 53, scope: !5373)
!5373 = !DILexicalBlockFile(scope: !5362, file: !1807, discriminator: 2)
!5374 = !DILocation(line: 1280, column: 9, scope: !5373)
!5375 = distinct !{!5375, !5376}
!5376 = !DILocation(line: 1280, column: 9, scope: !5356)
!5377 = !DILocation(line: 1282, column: 5, scope: !5356)
!5378 = !DILocation(line: 1285, column: 9, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1285, column: 9)
!5380 = !DILocation(line: 1285, column: 12, scope: !5379)
!5381 = !DILocation(line: 1285, column: 23, scope: !5379)
!5382 = !DILocation(line: 1285, column: 54, scope: !5379)
!5383 = !DILocation(line: 1285, column: 67, scope: !5384)
!5384 = !DILexicalBlockFile(scope: !5379, file: !1807, discriminator: 1)
!5385 = !DILocation(line: 1285, column: 57, scope: !5384)
!5386 = !DILocation(line: 1285, column: 9, scope: !5384)
!5387 = !DILocation(line: 1286, column: 19, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5379, file: !1807, line: 1285, column: 73)
!5389 = !DILocation(line: 1286, column: 9, scope: !5388)
!5390 = !DILocation(line: 1287, column: 5, scope: !5388)
!5391 = !DILocation(line: 1290, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1290, column: 9)
!5393 = !DILocation(line: 1290, column: 9, scope: !4373)
!5394 = !DILocation(line: 1291, column: 13, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !1807, line: 1291, column: 13)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !1807, line: 1290, column: 21)
!5397 = !DILocation(line: 1291, column: 16, scope: !5395)
!5398 = !DILocation(line: 1291, column: 31, scope: !5395)
!5399 = !DILocation(line: 1291, column: 44, scope: !5400)
!5400 = !DILexicalBlockFile(scope: !5395, file: !1807, discriminator: 1)
!5401 = !DILocation(line: 1291, column: 34, scope: !5400)
!5402 = !DILocation(line: 1291, column: 13, scope: !5400)
!5403 = !DILocalVariable(name: "fl", scope: !5404, file: !1807, line: 1292, type: !1015)
!5404 = distinct !DILexicalBlock(scope: !5395, file: !1807, line: 1291, column: 50)
!5405 = !DILocation(line: 1292, column: 17, scope: !5404)
!5406 = !DILocation(line: 1292, column: 31, scope: !5404)
!5407 = !DILocation(line: 1292, column: 22, scope: !5404)
!5408 = !DILocalVariable(name: "sl", scope: !5404, file: !1807, line: 1293, type: !1015)
!5409 = !DILocation(line: 1293, column: 17, scope: !5404)
!5410 = !DILocation(line: 1293, column: 31, scope: !5404)
!5411 = !DILocation(line: 1293, column: 22, scope: !5404)
!5412 = !DILocation(line: 1296, column: 17, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5404, file: !1807, line: 1296, column: 17)
!5414 = !DILocation(line: 1296, column: 21, scope: !5413)
!5415 = !DILocation(line: 1296, column: 25, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5413, file: !1807, discriminator: 1)
!5417 = !DILocation(line: 1296, column: 31, scope: !5416)
!5418 = !DILocation(line: 1296, column: 34, scope: !5416)
!5419 = !DILocation(line: 1296, column: 51, scope: !5416)
!5420 = !DILocation(line: 1296, column: 28, scope: !5416)
!5421 = !DILocation(line: 1296, column: 65, scope: !5416)
!5422 = !DILocation(line: 1297, column: 17, scope: !5413)
!5423 = !DILocation(line: 1297, column: 23, scope: !5413)
!5424 = !DILocation(line: 1297, column: 26, scope: !5413)
!5425 = !DILocation(line: 1297, column: 43, scope: !5413)
!5426 = !DILocation(line: 1297, column: 20, scope: !5413)
!5427 = !DILocation(line: 1296, column: 17, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5404, file: !1807, discriminator: 2)
!5429 = !DILocation(line: 1298, column: 41, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5413, file: !1807, line: 1297, column: 59)
!5431 = !DILocation(line: 1298, column: 40, scope: !5430)
!5432 = !DILocation(line: 1298, column: 62, scope: !5430)
!5433 = !DILocation(line: 1298, column: 71, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !5430, file: !1807, discriminator: 1)
!5435 = !DILocation(line: 1298, column: 70, scope: !5434)
!5436 = !DILocation(line: 1298, column: 40, scope: !5434)
!5437 = !DILocation(line: 1298, column: 40, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5430, file: !1807, discriminator: 2)
!5439 = !DILocation(line: 1298, column: 40, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !5430, file: !1807, discriminator: 3)
!5441 = !DILocation(line: 1298, column: 39, scope: !5440)
!5442 = !DILocation(line: 1298, column: 17, scope: !5440)
!5443 = !DILocation(line: 1298, column: 37, scope: !5440)
!5444 = !DILocation(line: 1299, column: 13, scope: !5430)
!5445 = !DILocation(line: 1300, column: 49, scope: !5404)
!5446 = !DILocation(line: 1300, column: 13, scope: !5404)
!5447 = !DILocation(line: 1300, column: 16, scope: !5404)
!5448 = !DILocation(line: 1300, column: 33, scope: !5404)
!5449 = !DILocation(line: 1300, column: 47, scope: !5404)
!5450 = !DILocation(line: 1301, column: 49, scope: !5404)
!5451 = !DILocation(line: 1301, column: 13, scope: !5404)
!5452 = !DILocation(line: 1301, column: 16, scope: !5404)
!5453 = !DILocation(line: 1301, column: 33, scope: !5404)
!5454 = !DILocation(line: 1301, column: 47, scope: !5404)
!5455 = !DILocation(line: 1302, column: 9, scope: !5404)
!5456 = !DILocation(line: 1302, column: 21, scope: !5457)
!5457 = !DILexicalBlockFile(scope: !5458, file: !1807, discriminator: 1)
!5458 = distinct !DILexicalBlock(scope: !5395, file: !1807, line: 1302, column: 20)
!5459 = !DILocation(line: 1302, column: 24, scope: !5457)
!5460 = !DILocation(line: 1302, column: 29, scope: !5457)
!5461 = !DILocation(line: 1302, column: 33, scope: !5462)
!5462 = !DILexicalBlockFile(scope: !5458, file: !1807, discriminator: 2)
!5463 = !DILocation(line: 1302, column: 20, scope: !5462)
!5464 = !DILocation(line: 1303, column: 20, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5458, file: !1807, line: 1302, column: 38)
!5466 = !DILocation(line: 1303, column: 23, scope: !5465)
!5467 = !DILocation(line: 1303, column: 13, scope: !5465)
!5468 = !DILocation(line: 1305, column: 13, scope: !5465)
!5469 = !DILocation(line: 1307, column: 9, scope: !5396)
!5470 = !DILocation(line: 1307, column: 12, scope: !5396)
!5471 = !DILocation(line: 1307, column: 27, scope: !5396)
!5472 = !DILocation(line: 1308, column: 5, scope: !5396)
!5473 = !DILocation(line: 1311, column: 9, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1311, column: 9)
!5475 = !DILocation(line: 1311, column: 12, scope: !5474)
!5476 = !DILocation(line: 1311, column: 23, scope: !5474)
!5477 = !DILocation(line: 1311, column: 36, scope: !5478)
!5478 = !DILexicalBlockFile(scope: !5474, file: !1807, discriminator: 1)
!5479 = !DILocation(line: 1311, column: 26, scope: !5478)
!5480 = !DILocation(line: 1311, column: 9, scope: !5478)
!5481 = !DILocation(line: 1313, column: 20, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !1807, line: 1313, column: 9)
!5483 = distinct !DILexicalBlock(scope: !5474, file: !1807, line: 1311, column: 42)
!5484 = !DILocation(line: 1313, column: 19, scope: !5482)
!5485 = !DILocation(line: 1313, column: 17, scope: !5482)
!5486 = !DILocation(line: 1313, column: 14, scope: !5482)
!5487 = !DILocation(line: 1313, column: 32, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5489, file: !1807, discriminator: 1)
!5489 = distinct !DILexicalBlock(scope: !5482, file: !1807, line: 1313, column: 9)
!5490 = !DILocation(line: 1313, column: 38, scope: !5488)
!5491 = !DILocation(line: 1313, column: 35, scope: !5488)
!5492 = !DILocation(line: 1313, column: 9, scope: !5488)
!5493 = !DILocation(line: 1314, column: 40, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5489, file: !1807, line: 1313, column: 58)
!5495 = !DILocation(line: 1314, column: 31, scope: !5494)
!5496 = !DILocation(line: 1314, column: 25, scope: !5494)
!5497 = !DILocation(line: 1314, column: 13, scope: !5494)
!5498 = !DILocation(line: 1314, column: 16, scope: !5494)
!5499 = !DILocation(line: 1314, column: 29, scope: !5494)
!5500 = !DILocation(line: 1315, column: 29, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5494, file: !1807, line: 1315, column: 17)
!5502 = !DILocation(line: 1315, column: 17, scope: !5501)
!5503 = !DILocation(line: 1315, column: 20, scope: !5501)
!5504 = !DILocation(line: 1315, column: 33, scope: !5501)
!5505 = !DILocation(line: 1315, column: 17, scope: !5494)
!5506 = !DILocation(line: 1316, column: 24, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5501, file: !1807, line: 1315, column: 50)
!5508 = !DILocation(line: 1316, column: 27, scope: !5507)
!5509 = !DILocation(line: 1316, column: 17, scope: !5507)
!5510 = !DILocation(line: 1317, column: 17, scope: !5507)
!5511 = !DILocation(line: 1319, column: 55, scope: !5494)
!5512 = !DILocation(line: 1319, column: 38, scope: !5494)
!5513 = !DILocation(line: 1319, column: 37, scope: !5494)
!5514 = !DILocation(line: 1319, column: 60, scope: !5494)
!5515 = !DILocation(line: 1319, column: 86, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !5494, file: !1807, discriminator: 1)
!5517 = !DILocation(line: 1319, column: 69, scope: !5516)
!5518 = !DILocation(line: 1319, column: 68, scope: !5516)
!5519 = !DILocation(line: 1319, column: 37, scope: !5516)
!5520 = !DILocation(line: 1319, column: 37, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5494, file: !1807, discriminator: 2)
!5522 = !DILocation(line: 1319, column: 37, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !5494, file: !1807, discriminator: 3)
!5524 = !DILocation(line: 1319, column: 36, scope: !5523)
!5525 = !DILocation(line: 1319, column: 30, scope: !5523)
!5526 = !DILocation(line: 1319, column: 13, scope: !5523)
!5527 = !DILocation(line: 1319, column: 34, scope: !5523)
!5528 = !DILocation(line: 1320, column: 9, scope: !5494)
!5529 = !DILocation(line: 1313, column: 54, scope: !5530)
!5530 = !DILexicalBlockFile(scope: !5489, file: !1807, discriminator: 2)
!5531 = !DILocation(line: 1313, column: 9, scope: !5530)
!5532 = distinct !{!5532, !5533}
!5533 = !DILocation(line: 1313, column: 9, scope: !5483)
!5534 = !DILocation(line: 1322, column: 20, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5483, file: !1807, line: 1322, column: 9)
!5536 = !DILocation(line: 1322, column: 19, scope: !5535)
!5537 = !DILocation(line: 1322, column: 17, scope: !5535)
!5538 = !DILocation(line: 1322, column: 14, scope: !5535)
!5539 = !DILocation(line: 1322, column: 32, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !5541, file: !1807, discriminator: 1)
!5541 = distinct !DILexicalBlock(scope: !5535, file: !1807, line: 1322, column: 9)
!5542 = !DILocation(line: 1322, column: 38, scope: !5540)
!5543 = !DILocation(line: 1322, column: 35, scope: !5540)
!5544 = !DILocation(line: 1322, column: 9, scope: !5540)
!5545 = !DILocation(line: 1323, column: 29, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !1807, line: 1323, column: 17)
!5547 = distinct !DILexicalBlock(scope: !5541, file: !1807, line: 1322, column: 58)
!5548 = !DILocation(line: 1323, column: 17, scope: !5546)
!5549 = !DILocation(line: 1323, column: 20, scope: !5546)
!5550 = !DILocation(line: 1323, column: 33, scope: !5546)
!5551 = !DILocation(line: 1323, column: 17, scope: !5547)
!5552 = !DILocation(line: 1324, column: 45, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5546, file: !1807, line: 1323, column: 45)
!5554 = !DILocation(line: 1324, column: 36, scope: !5553)
!5555 = !DILocation(line: 1324, column: 53, scope: !5553)
!5556 = !DILocation(line: 1324, column: 30, scope: !5553)
!5557 = !DILocation(line: 1324, column: 17, scope: !5553)
!5558 = !DILocation(line: 1324, column: 20, scope: !5553)
!5559 = !DILocation(line: 1324, column: 34, scope: !5553)
!5560 = !DILocation(line: 1325, column: 26, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5553, file: !1807, line: 1325, column: 17)
!5562 = !DILocation(line: 1325, column: 22, scope: !5561)
!5563 = !DILocation(line: 1325, column: 31, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5565, file: !1807, discriminator: 1)
!5565 = distinct !DILexicalBlock(scope: !5561, file: !1807, line: 1325, column: 17)
!5566 = !DILocation(line: 1325, column: 50, scope: !5564)
!5567 = !DILocation(line: 1325, column: 37, scope: !5564)
!5568 = !DILocation(line: 1325, column: 40, scope: !5564)
!5569 = !DILocation(line: 1325, column: 35, scope: !5564)
!5570 = !DILocation(line: 1325, column: 17, scope: !5564)
!5571 = !DILocation(line: 1326, column: 56, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5565, file: !1807, line: 1325, column: 62)
!5573 = !DILocation(line: 1326, column: 47, scope: !5572)
!5574 = !DILocation(line: 1326, column: 40, scope: !5572)
!5575 = !DILocation(line: 1326, column: 21, scope: !5572)
!5576 = !DILocation(line: 1326, column: 36, scope: !5572)
!5577 = !DILocation(line: 1326, column: 24, scope: !5572)
!5578 = !DILocation(line: 1326, column: 45, scope: !5572)
!5579 = !DILocation(line: 1327, column: 56, scope: !5572)
!5580 = !DILocation(line: 1327, column: 47, scope: !5572)
!5581 = !DILocation(line: 1327, column: 40, scope: !5572)
!5582 = !DILocation(line: 1327, column: 21, scope: !5572)
!5583 = !DILocation(line: 1327, column: 36, scope: !5572)
!5584 = !DILocation(line: 1327, column: 24, scope: !5572)
!5585 = !DILocation(line: 1327, column: 45, scope: !5572)
!5586 = !DILocation(line: 1328, column: 55, scope: !5572)
!5587 = !DILocation(line: 1328, column: 46, scope: !5572)
!5588 = !DILocation(line: 1328, column: 39, scope: !5572)
!5589 = !DILocation(line: 1328, column: 21, scope: !5572)
!5590 = !DILocation(line: 1328, column: 35, scope: !5572)
!5591 = !DILocation(line: 1328, column: 24, scope: !5572)
!5592 = !DILocation(line: 1328, column: 44, scope: !5572)
!5593 = !DILocation(line: 1329, column: 17, scope: !5572)
!5594 = !DILocation(line: 1325, column: 58, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !5565, file: !1807, discriminator: 2)
!5596 = !DILocation(line: 1325, column: 17, scope: !5595)
!5597 = distinct !{!5597, !5598}
!5598 = !DILocation(line: 1325, column: 17, scope: !5553)
!5599 = !DILocation(line: 1331, column: 59, scope: !5553)
!5600 = !DILocation(line: 1331, column: 42, scope: !5553)
!5601 = !DILocation(line: 1331, column: 41, scope: !5553)
!5602 = !DILocation(line: 1331, column: 64, scope: !5553)
!5603 = !DILocation(line: 1331, column: 90, scope: !5604)
!5604 = !DILexicalBlockFile(scope: !5553, file: !1807, discriminator: 1)
!5605 = !DILocation(line: 1331, column: 73, scope: !5604)
!5606 = !DILocation(line: 1331, column: 72, scope: !5604)
!5607 = !DILocation(line: 1331, column: 41, scope: !5604)
!5608 = !DILocation(line: 1331, column: 41, scope: !5609)
!5609 = !DILexicalBlockFile(scope: !5553, file: !1807, discriminator: 2)
!5610 = !DILocation(line: 1331, column: 41, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5553, file: !1807, discriminator: 3)
!5612 = !DILocation(line: 1331, column: 40, scope: !5611)
!5613 = !DILocation(line: 1331, column: 34, scope: !5611)
!5614 = !DILocation(line: 1331, column: 17, scope: !5611)
!5615 = !DILocation(line: 1331, column: 38, scope: !5611)
!5616 = !DILocation(line: 1332, column: 13, scope: !5553)
!5617 = !DILocation(line: 1333, column: 9, scope: !5547)
!5618 = !DILocation(line: 1322, column: 54, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !5541, file: !1807, discriminator: 2)
!5620 = !DILocation(line: 1322, column: 9, scope: !5619)
!5621 = distinct !{!5621, !5622}
!5622 = !DILocation(line: 1322, column: 9, scope: !5483)
!5623 = !DILocation(line: 1334, column: 5, scope: !5483)
!5624 = !DILocation(line: 1334, column: 16, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !5626, file: !1807, discriminator: 1)
!5626 = distinct !DILexicalBlock(scope: !5474, file: !1807, line: 1334, column: 16)
!5627 = !DILocation(line: 1334, column: 20, scope: !5625)
!5628 = !DILocation(line: 1335, column: 17, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !1807, line: 1335, column: 9)
!5630 = distinct !DILexicalBlock(scope: !5626, file: !1807, line: 1334, column: 26)
!5631 = !DILocation(line: 1335, column: 14, scope: !5629)
!5632 = !DILocation(line: 1335, column: 22, scope: !5633)
!5633 = !DILexicalBlockFile(scope: !5634, file: !1807, discriminator: 1)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !1807, line: 1335, column: 9)
!5635 = !DILocation(line: 1335, column: 28, scope: !5633)
!5636 = !DILocation(line: 1335, column: 31, scope: !5633)
!5637 = !DILocation(line: 1335, column: 25, scope: !5633)
!5638 = !DILocation(line: 1335, column: 9, scope: !5633)
!5639 = !DILocation(line: 1336, column: 25, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5634, file: !1807, line: 1335, column: 47)
!5641 = !DILocation(line: 1336, column: 13, scope: !5640)
!5642 = !DILocation(line: 1336, column: 16, scope: !5640)
!5643 = !DILocation(line: 1336, column: 29, scope: !5640)
!5644 = !DILocation(line: 1337, column: 9, scope: !5640)
!5645 = !DILocation(line: 1335, column: 43, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5634, file: !1807, discriminator: 2)
!5647 = !DILocation(line: 1335, column: 9, scope: !5646)
!5648 = distinct !{!5648, !5649}
!5649 = !DILocation(line: 1335, column: 9, scope: !5630)
!5650 = !DILocation(line: 1338, column: 5, scope: !5630)
!5651 = !DILocation(line: 1341, column: 16, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1341, column: 5)
!5653 = !DILocation(line: 1341, column: 15, scope: !5652)
!5654 = !DILocation(line: 1341, column: 13, scope: !5652)
!5655 = !DILocation(line: 1341, column: 10, scope: !5652)
!5656 = !DILocation(line: 1341, column: 28, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !5658, file: !1807, discriminator: 1)
!5658 = distinct !DILexicalBlock(scope: !5652, file: !1807, line: 1341, column: 5)
!5659 = !DILocation(line: 1341, column: 34, scope: !5657)
!5660 = !DILocation(line: 1341, column: 37, scope: !5657)
!5661 = !DILocation(line: 1341, column: 31, scope: !5657)
!5662 = !DILocation(line: 1341, column: 5, scope: !5657)
!5663 = !DILocation(line: 1342, column: 30, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !1807, line: 1342, column: 13)
!5665 = distinct !DILexicalBlock(scope: !5658, file: !1807, line: 1341, column: 53)
!5666 = !DILocation(line: 1342, column: 13, scope: !5664)
!5667 = !DILocation(line: 1342, column: 34, scope: !5664)
!5668 = !DILocation(line: 1342, column: 13, scope: !5665)
!5669 = !DILocation(line: 1344, column: 48, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5664, file: !1807, line: 1342, column: 39)
!5671 = !DILocation(line: 1344, column: 39, scope: !5670)
!5672 = !DILocation(line: 1344, column: 42, scope: !5670)
!5673 = !DILocation(line: 1345, column: 53, scope: !5670)
!5674 = !DILocation(line: 1345, column: 39, scope: !5670)
!5675 = !DILocation(line: 1345, column: 42, scope: !5670)
!5676 = !DILocation(line: 1345, column: 70, scope: !5670)
!5677 = !DILocation(line: 1345, column: 58, scope: !5670)
!5678 = !DILocation(line: 1345, column: 61, scope: !5670)
!5679 = !DILocation(line: 1346, column: 46, scope: !5670)
!5680 = !DILocation(line: 1346, column: 39, scope: !5670)
!5681 = !DILocation(line: 1346, column: 42, scope: !5670)
!5682 = !DILocation(line: 1346, column: 63, scope: !5670)
!5683 = !DILocation(line: 1346, column: 51, scope: !5670)
!5684 = !DILocation(line: 1346, column: 54, scope: !5670)
!5685 = !DILocation(line: 1344, column: 13, scope: !5670)
!5686 = !DILocation(line: 1347, column: 9, scope: !5670)
!5687 = !DILocation(line: 1348, column: 30, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5665, file: !1807, line: 1348, column: 13)
!5689 = !DILocation(line: 1348, column: 13, scope: !5688)
!5690 = !DILocation(line: 1348, column: 34, scope: !5688)
!5691 = !DILocation(line: 1348, column: 13, scope: !5665)
!5692 = !DILocation(line: 1351, column: 45, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !1807, line: 1351, column: 17)
!5694 = distinct !DILexicalBlock(scope: !5688, file: !1807, line: 1348, column: 39)
!5695 = !DILocation(line: 1351, column: 48, scope: !5693)
!5696 = !DILocation(line: 1351, column: 78, scope: !5693)
!5697 = !DILocation(line: 1351, column: 66, scope: !5693)
!5698 = !DILocation(line: 1351, column: 69, scope: !5693)
!5699 = !DILocation(line: 1352, column: 58, scope: !5693)
!5700 = !DILocation(line: 1352, column: 44, scope: !5693)
!5701 = !DILocation(line: 1352, column: 47, scope: !5693)
!5702 = !DILocation(line: 1352, column: 75, scope: !5693)
!5703 = !DILocation(line: 1352, column: 63, scope: !5693)
!5704 = !DILocation(line: 1352, column: 66, scope: !5693)
!5705 = !DILocation(line: 1353, column: 57, scope: !5693)
!5706 = !DILocation(line: 1353, column: 44, scope: !5693)
!5707 = !DILocation(line: 1353, column: 47, scope: !5693)
!5708 = !DILocation(line: 1353, column: 63, scope: !5693)
!5709 = !DILocation(line: 1353, column: 69, scope: !5693)
!5710 = !DILocation(line: 1353, column: 72, scope: !5693)
!5711 = !DILocation(line: 1353, column: 66, scope: !5693)
!5712 = !DILocation(line: 1354, column: 56, scope: !5693)
!5713 = !DILocation(line: 1354, column: 44, scope: !5693)
!5714 = !DILocation(line: 1354, column: 47, scope: !5693)
!5715 = !DILocation(line: 1354, column: 74, scope: !5693)
!5716 = !DILocation(line: 1354, column: 61, scope: !5693)
!5717 = !DILocation(line: 1354, column: 64, scope: !5693)
!5718 = !DILocation(line: 1355, column: 59, scope: !5693)
!5719 = !DILocation(line: 1355, column: 44, scope: !5693)
!5720 = !DILocation(line: 1355, column: 47, scope: !5693)
!5721 = !DILocation(line: 1355, column: 79, scope: !5693)
!5722 = !DILocation(line: 1355, column: 64, scope: !5693)
!5723 = !DILocation(line: 1355, column: 67, scope: !5693)
!5724 = !DILocation(line: 1356, column: 58, scope: !5693)
!5725 = !DILocation(line: 1356, column: 44, scope: !5693)
!5726 = !DILocation(line: 1356, column: 47, scope: !5693)
!5727 = !DILocation(line: 1356, column: 71, scope: !5693)
!5728 = !DILocation(line: 1356, column: 63, scope: !5693)
!5729 = !DILocation(line: 1356, column: 66, scope: !5693)
!5730 = !DILocation(line: 1351, column: 17, scope: !5693)
!5731 = !DILocation(line: 1351, column: 17, scope: !5694)
!5732 = !DILocation(line: 1357, column: 24, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5693, file: !1807, line: 1356, column: 77)
!5734 = !DILocation(line: 1357, column: 27, scope: !5733)
!5735 = !DILocation(line: 1357, column: 17, scope: !5733)
!5736 = !DILocation(line: 1358, column: 17, scope: !5733)
!5737 = !DILocation(line: 1360, column: 9, scope: !5694)
!5738 = !DILocation(line: 1361, column: 30, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5665, file: !1807, line: 1361, column: 13)
!5740 = !DILocation(line: 1361, column: 13, scope: !5739)
!5741 = !DILocation(line: 1361, column: 34, scope: !5739)
!5742 = !DILocation(line: 1361, column: 13, scope: !5665)
!5743 = !DILocalVariable(name: "bap_tab", scope: !5744, file: !1807, line: 1363, type: !1612)
!5744 = distinct !DILexicalBlock(scope: !5739, file: !1807, line: 1361, column: 39)
!5745 = !DILocation(line: 1363, column: 28, scope: !5744)
!5746 = !DILocation(line: 1363, column: 58, scope: !5744)
!5747 = !DILocation(line: 1363, column: 38, scope: !5744)
!5748 = !DILocation(line: 1363, column: 41, scope: !5744)
!5749 = !DILocation(line: 1365, column: 13, scope: !5744)
!5750 = !DILocation(line: 1365, column: 16, scope: !5744)
!5751 = !DILocation(line: 1365, column: 23, scope: !5744)
!5752 = !DILocation(line: 1365, column: 50, scope: !5744)
!5753 = !DILocation(line: 1365, column: 42, scope: !5744)
!5754 = !DILocation(line: 1365, column: 45, scope: !5744)
!5755 = !DILocation(line: 1365, column: 62, scope: !5744)
!5756 = !DILocation(line: 1365, column: 55, scope: !5744)
!5757 = !DILocation(line: 1365, column: 58, scope: !5744)
!5758 = !DILocation(line: 1366, column: 53, scope: !5744)
!5759 = !DILocation(line: 1366, column: 39, scope: !5744)
!5760 = !DILocation(line: 1366, column: 42, scope: !5744)
!5761 = !DILocation(line: 1366, column: 70, scope: !5744)
!5762 = !DILocation(line: 1366, column: 58, scope: !5744)
!5763 = !DILocation(line: 1366, column: 61, scope: !5744)
!5764 = !DILocation(line: 1367, column: 53, scope: !5744)
!5765 = !DILocation(line: 1367, column: 39, scope: !5744)
!5766 = !DILocation(line: 1367, column: 42, scope: !5744)
!5767 = !DILocation(line: 1368, column: 39, scope: !5744)
!5768 = !DILocation(line: 1368, column: 42, scope: !5744)
!5769 = !DILocation(line: 1368, column: 59, scope: !5744)
!5770 = !DILocation(line: 1369, column: 39, scope: !5744)
!5771 = !DILocation(line: 1369, column: 55, scope: !5744)
!5772 = !DILocation(line: 1369, column: 48, scope: !5744)
!5773 = !DILocation(line: 1369, column: 51, scope: !5744)
!5774 = !DILocation(line: 1370, column: 9, scope: !5744)
!5775 = !DILocation(line: 1371, column: 5, scope: !5665)
!5776 = !DILocation(line: 1341, column: 49, scope: !5777)
!5777 = !DILexicalBlockFile(scope: !5658, file: !1807, discriminator: 2)
!5778 = !DILocation(line: 1341, column: 5, scope: !5777)
!5779 = distinct !{!5779, !5780}
!5780 = !DILocation(line: 1341, column: 5, scope: !4373)
!5781 = !DILocation(line: 1374, column: 9, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1374, column: 9)
!5783 = !DILocation(line: 1374, column: 12, scope: !5782)
!5784 = !DILocation(line: 1374, column: 24, scope: !5782)
!5785 = !DILocation(line: 1374, column: 37, scope: !5786)
!5786 = !DILexicalBlockFile(scope: !5782, file: !1807, discriminator: 1)
!5787 = !DILocation(line: 1374, column: 27, scope: !5786)
!5788 = !DILocation(line: 1374, column: 9, scope: !5786)
!5789 = !DILocalVariable(name: "skipl", scope: !5790, file: !1807, line: 1375, type: !1015)
!5790 = distinct !DILexicalBlock(scope: !5782, file: !1807, line: 1374, column: 43)
!5791 = !DILocation(line: 1375, column: 13, scope: !5790)
!5792 = !DILocation(line: 1375, column: 30, scope: !5790)
!5793 = !DILocation(line: 1375, column: 21, scope: !5790)
!5794 = !DILocation(line: 1376, column: 24, scope: !5790)
!5795 = !DILocation(line: 1376, column: 33, scope: !5790)
!5796 = !DILocation(line: 1376, column: 31, scope: !5790)
!5797 = !DILocation(line: 1376, column: 9, scope: !5790)
!5798 = !DILocation(line: 1377, column: 5, scope: !5790)
!5799 = !DILocation(line: 1381, column: 29, scope: !4373)
!5800 = !DILocation(line: 1381, column: 32, scope: !4373)
!5801 = !DILocation(line: 1381, column: 5, scope: !4373)
!5802 = !DILocation(line: 1386, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1386, column: 9)
!5804 = !DILocation(line: 1386, column: 12, scope: !5803)
!5805 = !DILocation(line: 1386, column: 25, scope: !5803)
!5806 = !DILocation(line: 1386, column: 9, scope: !4373)
!5807 = !DILocation(line: 1387, column: 24, scope: !5803)
!5808 = !DILocation(line: 1387, column: 9, scope: !5803)
!5809 = !DILocation(line: 1390, column: 13, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1390, column: 5)
!5811 = !DILocation(line: 1390, column: 10, scope: !5810)
!5812 = !DILocation(line: 1390, column: 18, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !5814, file: !1807, discriminator: 1)
!5814 = distinct !DILexicalBlock(scope: !5810, file: !1807, line: 1390, column: 5)
!5815 = !DILocation(line: 1390, column: 24, scope: !5813)
!5816 = !DILocation(line: 1390, column: 27, scope: !5813)
!5817 = !DILocation(line: 1390, column: 21, scope: !5813)
!5818 = !DILocation(line: 1390, column: 5, scope: !5813)
!5819 = !DILocalVariable(name: "audio_channel", scope: !5820, file: !1807, line: 1391, type: !1015)
!5820 = distinct !DILexicalBlock(scope: !5814, file: !1807, line: 1390, column: 43)
!5821 = !DILocation(line: 1391, column: 13, scope: !5820)
!5822 = !DILocalVariable(name: "gain", scope: !5820, file: !1807, line: 1392, type: !1955)
!5823 = !DILocation(line: 1392, column: 18, scope: !5820)
!5824 = !DILocation(line: 1393, column: 13, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5820, file: !1807, line: 1393, column: 13)
!5826 = !DILocation(line: 1393, column: 16, scope: !5825)
!5827 = !DILocation(line: 1393, column: 29, scope: !5825)
!5828 = !DILocation(line: 1393, column: 52, scope: !5825)
!5829 = !DILocation(line: 1393, column: 55, scope: !5830)
!5830 = !DILexicalBlockFile(scope: !5825, file: !1807, discriminator: 1)
!5831 = !DILocation(line: 1393, column: 58, scope: !5830)
!5832 = !DILocation(line: 1393, column: 13, scope: !5830)
!5833 = !DILocation(line: 1394, column: 31, scope: !5825)
!5834 = !DILocation(line: 1394, column: 30, scope: !5825)
!5835 = !DILocation(line: 1394, column: 27, scope: !5825)
!5836 = !DILocation(line: 1394, column: 13, scope: !5825)
!5837 = !DILocation(line: 1395, column: 13, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5820, file: !1807, line: 1395, column: 13)
!5839 = !DILocation(line: 1395, column: 16, scope: !5838)
!5840 = !DILocation(line: 1395, column: 34, scope: !5838)
!5841 = !DILocation(line: 1395, column: 59, scope: !5842)
!5842 = !DILexicalBlockFile(scope: !5838, file: !1807, discriminator: 1)
!5843 = !DILocation(line: 1395, column: 37, scope: !5842)
!5844 = !DILocation(line: 1395, column: 40, scope: !5842)
!5845 = !DILocation(line: 1395, column: 13, scope: !5842)
!5846 = !DILocation(line: 1396, column: 43, scope: !5838)
!5847 = !DILocation(line: 1396, column: 20, scope: !5838)
!5848 = !DILocation(line: 1396, column: 23, scope: !5838)
!5849 = !DILocation(line: 1396, column: 18, scope: !5838)
!5850 = !DILocation(line: 1396, column: 13, scope: !5838)
!5851 = !DILocation(line: 1398, column: 37, scope: !5838)
!5852 = !DILocation(line: 1398, column: 20, scope: !5838)
!5853 = !DILocation(line: 1398, column: 23, scope: !5838)
!5854 = !DILocation(line: 1398, column: 18, scope: !5838)
!5855 = !DILocation(line: 1401, column: 41, scope: !5820)
!5856 = !DILocation(line: 1401, column: 21, scope: !5820)
!5857 = !DILocation(line: 1401, column: 24, scope: !5820)
!5858 = !DILocation(line: 1401, column: 62, scope: !5820)
!5859 = !DILocation(line: 1401, column: 46, scope: !5820)
!5860 = !DILocation(line: 1401, column: 49, scope: !5820)
!5861 = !DILocation(line: 1401, column: 67, scope: !5820)
!5862 = !DILocation(line: 1401, column: 9, scope: !5820)
!5863 = !DILocation(line: 1409, column: 5, scope: !5820)
!5864 = !DILocation(line: 1390, column: 39, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5814, file: !1807, discriminator: 2)
!5866 = !DILocation(line: 1390, column: 5, scope: !5865)
!5867 = distinct !{!5867, !5868}
!5868 = !DILocation(line: 1390, column: 5, scope: !4373)
!5869 = !DILocation(line: 1412, column: 14, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1412, column: 9)
!5871 = !DILocation(line: 1412, column: 17, scope: !5870)
!5872 = !DILocation(line: 1412, column: 9, scope: !4373)
!5873 = !DILocation(line: 1413, column: 42, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !1807, line: 1412, column: 29)
!5875 = !DILocation(line: 1413, column: 9, scope: !5874)
!5876 = !DILocation(line: 1414, column: 5, scope: !5874)
!5877 = !DILocation(line: 1419, column: 22, scope: !4373)
!5878 = !DILocation(line: 1419, column: 25, scope: !4373)
!5879 = !DILocation(line: 1419, column: 37, scope: !4373)
!5880 = !DILocation(line: 1419, column: 40, scope: !4373)
!5881 = !DILocation(line: 1419, column: 34, scope: !4373)
!5882 = !DILocation(line: 1419, column: 53, scope: !4373)
!5883 = !DILocation(line: 1420, column: 25, scope: !4373)
!5884 = !DILocation(line: 1420, column: 28, scope: !4373)
!5885 = !DILocation(line: 1420, column: 40, scope: !4373)
!5886 = !DILocation(line: 1420, column: 45, scope: !4373)
!5887 = !DILocation(line: 1421, column: 22, scope: !4373)
!5888 = !DILocation(line: 1421, column: 25, scope: !4373)
!5889 = !DILocation(line: 1421, column: 41, scope: !4373)
!5890 = !DILocation(line: 1421, column: 44, scope: !4373)
!5891 = !DILocation(line: 1421, column: 38, scope: !4373)
!5892 = !DILocation(line: 1420, column: 22, scope: !4538)
!5893 = !DILocation(line: 1419, column: 53, scope: !4538)
!5894 = !DILocation(line: 1419, column: 20, scope: !4538)
!5895 = !DILocation(line: 1422, column: 9, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !4373, file: !1807, line: 1422, column: 9)
!5897 = !DILocation(line: 1422, column: 9, scope: !4373)
!5898 = !DILocation(line: 1425, column: 13, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !1807, line: 1425, column: 13)
!5900 = distinct !DILexicalBlock(scope: !5896, file: !1807, line: 1422, column: 31)
!5901 = !DILocation(line: 1425, column: 16, scope: !5899)
!5902 = !DILocation(line: 1425, column: 13, scope: !5900)
!5903 = !DILocation(line: 1426, column: 13, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5899, file: !1807, line: 1425, column: 27)
!5905 = !DILocation(line: 1426, column: 16, scope: !5904)
!5906 = !DILocation(line: 1426, column: 26, scope: !5904)
!5907 = !DILocation(line: 1427, column: 29, scope: !5904)
!5908 = !DILocation(line: 1427, column: 13, scope: !5904)
!5909 = !DILocation(line: 1428, column: 9, scope: !5904)
!5910 = !DILocation(line: 1430, column: 18, scope: !5900)
!5911 = !DILocation(line: 1430, column: 21, scope: !5900)
!5912 = !DILocation(line: 1430, column: 24, scope: !5900)
!5913 = !DILocation(line: 1430, column: 34, scope: !5900)
!5914 = !DILocation(line: 1430, column: 9, scope: !5900)
!5915 = !DILocation(line: 1432, column: 13, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5900, file: !1807, line: 1432, column: 13)
!5917 = !DILocation(line: 1432, column: 13, scope: !5900)
!5918 = !DILocation(line: 1434, column: 35, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5916, file: !1807, line: 1432, column: 29)
!5920 = !DILocation(line: 1434, column: 38, scope: !5919)
!5921 = !DILocation(line: 1434, column: 46, scope: !5919)
!5922 = !DILocation(line: 1434, column: 49, scope: !5919)
!5923 = !DILocation(line: 1435, column: 31, scope: !5919)
!5924 = !DILocation(line: 1435, column: 34, scope: !5919)
!5925 = !DILocation(line: 1435, column: 48, scope: !5919)
!5926 = !DILocation(line: 1435, column: 51, scope: !5919)
!5927 = !DILocation(line: 1434, column: 13, scope: !5919)
!5928 = !DILocation(line: 1440, column: 9, scope: !5919)
!5929 = !DILocation(line: 1441, column: 5, scope: !5900)
!5930 = !DILocation(line: 1442, column: 13, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !1807, line: 1442, column: 13)
!5932 = distinct !DILexicalBlock(scope: !5896, file: !1807, line: 1441, column: 12)
!5933 = !DILocation(line: 1442, column: 13, scope: !5932)
!5934 = !DILocation(line: 1443, column: 38, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !1807, line: 1442, column: 29)
!5936 = !DILocation(line: 1443, column: 41, scope: !5935)
!5937 = !DILocation(line: 1443, column: 49, scope: !5935)
!5938 = !DILocation(line: 1443, column: 52, scope: !5935)
!5939 = !DILocation(line: 1443, column: 59, scope: !5935)
!5940 = !DILocation(line: 1443, column: 64, scope: !5935)
!5941 = !DILocation(line: 1443, column: 67, scope: !5935)
!5942 = !DILocation(line: 1444, column: 43, scope: !5935)
!5943 = !DILocation(line: 1444, column: 46, scope: !5935)
!5944 = !DILocation(line: 1444, column: 60, scope: !5935)
!5945 = !DILocation(line: 1444, column: 63, scope: !5935)
!5946 = !DILocation(line: 1443, column: 13, scope: !5935)
!5947 = !DILocation(line: 1445, column: 9, scope: !5935)
!5948 = !DILocation(line: 1447, column: 13, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5932, file: !1807, line: 1447, column: 13)
!5950 = !DILocation(line: 1447, column: 28, scope: !5949)
!5951 = !DILocation(line: 1447, column: 32, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5949, file: !1807, discriminator: 1)
!5953 = !DILocation(line: 1447, column: 35, scope: !5952)
!5954 = !DILocation(line: 1447, column: 13, scope: !5952)
!5955 = !DILocation(line: 1448, column: 13, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5949, file: !1807, line: 1447, column: 46)
!5957 = !DILocation(line: 1448, column: 16, scope: !5956)
!5958 = !DILocation(line: 1448, column: 26, scope: !5956)
!5959 = !DILocation(line: 1449, column: 38, scope: !5956)
!5960 = !DILocation(line: 1449, column: 41, scope: !5956)
!5961 = !DILocation(line: 1449, column: 49, scope: !5956)
!5962 = !DILocation(line: 1449, column: 52, scope: !5956)
!5963 = !DILocation(line: 1449, column: 60, scope: !5956)
!5964 = !DILocation(line: 1449, column: 63, scope: !5956)
!5965 = !DILocation(line: 1450, column: 43, scope: !5956)
!5966 = !DILocation(line: 1450, column: 46, scope: !5956)
!5967 = !DILocation(line: 1450, column: 60, scope: !5956)
!5968 = !DILocation(line: 1450, column: 63, scope: !5956)
!5969 = !DILocation(line: 1449, column: 13, scope: !5956)
!5970 = !DILocation(line: 1451, column: 9, scope: !5956)
!5971 = !DILocation(line: 1453, column: 18, scope: !5932)
!5972 = !DILocation(line: 1453, column: 21, scope: !5932)
!5973 = !DILocation(line: 1453, column: 24, scope: !5932)
!5974 = !DILocation(line: 1453, column: 38, scope: !5932)
!5975 = !DILocation(line: 1453, column: 9, scope: !5932)
!5976 = !DILocation(line: 1456, column: 5, scope: !4373)
!5977 = !DILocation(line: 1457, column: 1, scope: !4373)
!5978 = distinct !DISubprogram(name: "init_get_bits", scope: !1862, file: !1862, line: 615, type: !3870, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!5979 = !DILocalVariable(name: "s", arg: 1, scope: !5978, file: !1862, line: 615, type: !3872)
!5980 = !DILocation(line: 615, column: 48, scope: !5978)
!5981 = !DILocalVariable(name: "buffer", arg: 2, scope: !5978, file: !1862, line: 615, type: !1612)
!5982 = !DILocation(line: 615, column: 66, scope: !5978)
!5983 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5978, file: !1862, line: 616, type: !1015)
!5984 = !DILocation(line: 616, column: 37, scope: !5978)
!5985 = !DILocalVariable(name: "buffer_size", scope: !5978, file: !1862, line: 618, type: !1015)
!5986 = !DILocation(line: 618, column: 9, scope: !5978)
!5987 = !DILocalVariable(name: "ret", scope: !5978, file: !1862, line: 619, type: !1015)
!5988 = !DILocation(line: 619, column: 9, scope: !5978)
!5989 = !DILocation(line: 621, column: 9, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5978, file: !1862, line: 621, column: 9)
!5991 = !DILocation(line: 621, column: 18, scope: !5990)
!5992 = !DILocation(line: 621, column: 64, scope: !5990)
!5993 = !DILocation(line: 621, column: 67, scope: !5994)
!5994 = !DILexicalBlockFile(scope: !5990, file: !1862, discriminator: 1)
!5995 = !DILocation(line: 621, column: 76, scope: !5994)
!5996 = !DILocation(line: 621, column: 80, scope: !5994)
!5997 = !DILocation(line: 621, column: 84, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !5990, file: !1862, discriminator: 2)
!5999 = !DILocation(line: 621, column: 9, scope: !5998)
!6000 = !DILocation(line: 622, column: 18, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5990, file: !1862, line: 621, column: 92)
!6002 = !DILocation(line: 623, column: 16, scope: !6001)
!6003 = !DILocation(line: 624, column: 13, scope: !6001)
!6004 = !DILocation(line: 625, column: 5, scope: !6001)
!6005 = !DILocation(line: 627, column: 20, scope: !5978)
!6006 = !DILocation(line: 627, column: 29, scope: !5978)
!6007 = !DILocation(line: 627, column: 34, scope: !5978)
!6008 = !DILocation(line: 627, column: 17, scope: !5978)
!6009 = !DILocation(line: 629, column: 17, scope: !5978)
!6010 = !DILocation(line: 629, column: 5, scope: !5978)
!6011 = !DILocation(line: 629, column: 8, scope: !5978)
!6012 = !DILocation(line: 629, column: 15, scope: !5978)
!6013 = !DILocation(line: 630, column: 23, scope: !5978)
!6014 = !DILocation(line: 630, column: 5, scope: !5978)
!6015 = !DILocation(line: 630, column: 8, scope: !5978)
!6016 = !DILocation(line: 630, column: 21, scope: !5978)
!6017 = !DILocation(line: 631, column: 29, scope: !5978)
!6018 = !DILocation(line: 631, column: 38, scope: !5978)
!6019 = !DILocation(line: 631, column: 5, scope: !5978)
!6020 = !DILocation(line: 631, column: 8, scope: !5978)
!6021 = !DILocation(line: 631, column: 27, scope: !5978)
!6022 = !DILocation(line: 632, column: 21, scope: !5978)
!6023 = !DILocation(line: 632, column: 30, scope: !5978)
!6024 = !DILocation(line: 632, column: 28, scope: !5978)
!6025 = !DILocation(line: 632, column: 5, scope: !5978)
!6026 = !DILocation(line: 632, column: 8, scope: !5978)
!6027 = !DILocation(line: 632, column: 19, scope: !5978)
!6028 = !DILocation(line: 633, column: 5, scope: !5978)
!6029 = !DILocation(line: 633, column: 8, scope: !5978)
!6030 = !DILocation(line: 633, column: 14, scope: !5978)
!6031 = !DILocation(line: 639, column: 12, scope: !5978)
!6032 = !DILocation(line: 639, column: 5, scope: !5978)
!6033 = distinct !DISubprogram(name: "ac3_parse_header", scope: !1807, file: !1807, line: 234, type: !3896, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!6034 = !DILocalVariable(name: "a", arg: 1, scope: !6035, file: !6036, line: 127, type: !1015)
!6035 = distinct !DISubprogram(name: "av_clip_c", scope: !6036, file: !6036, line: 127, type: !6037, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!6036 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!1015, !1015, !1015, !1015}
!6039 = !DILocation(line: 127, column: 87, scope: !6035, inlinedAt: !6040)
!6040 = distinct !DILocation(line: 275, column: 37, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6042, file: !1807, discriminator: 1)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !1807, line: 270, column: 29)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !1807, line: 270, column: 13)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !1807, line: 269, column: 12)
!6045 = distinct !DILexicalBlock(scope: !6033, file: !1807, line: 264, column: 9)
!6046 = !DILocalVariable(name: "amin", arg: 2, scope: !6035, file: !6036, line: 127, type: !1015)
!6047 = !DILocation(line: 127, column: 94, scope: !6035, inlinedAt: !6040)
!6048 = !DILocalVariable(name: "amax", arg: 3, scope: !6035, file: !6036, line: 127, type: !1015)
!6049 = !DILocation(line: 127, column: 104, scope: !6035, inlinedAt: !6040)
!6050 = !DILocation(line: 127, column: 87, scope: !6035, inlinedAt: !6051)
!6051 = distinct !DILocation(line: 273, column: 42, scope: !6041)
!6052 = !DILocation(line: 127, column: 94, scope: !6035, inlinedAt: !6051)
!6053 = !DILocation(line: 127, column: 104, scope: !6035, inlinedAt: !6051)
!6054 = !DILocalVariable(name: "s", arg: 1, scope: !6033, file: !1807, line: 234, type: !1852)
!6055 = !DILocation(line: 234, column: 47, scope: !6033)
!6056 = !DILocalVariable(name: "gbc", scope: !6033, file: !1807, line: 236, type: !3872)
!6057 = !DILocation(line: 236, column: 20, scope: !6033)
!6058 = !DILocation(line: 236, column: 27, scope: !6033)
!6059 = !DILocation(line: 236, column: 30, scope: !6033)
!6060 = !DILocalVariable(name: "i", scope: !6033, file: !1807, line: 237, type: !1015)
!6061 = !DILocation(line: 237, column: 9, scope: !6033)
!6062 = !DILocation(line: 240, column: 10, scope: !6033)
!6063 = !DILocation(line: 240, column: 13, scope: !6033)
!6064 = !DILocation(line: 240, column: 9, scope: !6033)
!6065 = !DILocation(line: 240, column: 7, scope: !6033)
!6066 = !DILocation(line: 241, column: 5, scope: !6033)
!6067 = distinct !{!6067, !6066}
!6068 = !DILocation(line: 242, column: 67, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6033, file: !1807, line: 241, column: 8)
!6070 = !DILocation(line: 242, column: 58, scope: !6069)
!6071 = !DILocation(line: 242, column: 57, scope: !6069)
!6072 = !DILocation(line: 242, column: 35, scope: !6069)
!6073 = !DILocation(line: 242, column: 38, scope: !6069)
!6074 = !DILocation(line: 242, column: 34, scope: !6069)
!6075 = !DILocation(line: 242, column: 52, scope: !6069)
!6076 = !DILocation(line: 242, column: 51, scope: !6069)
!6077 = !DILocation(line: 242, column: 9, scope: !6069)
!6078 = !DILocation(line: 242, column: 12, scope: !6069)
!6079 = !DILocation(line: 242, column: 55, scope: !6069)
!6080 = !DILocation(line: 243, column: 39, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6069, file: !1807, line: 243, column: 13)
!6082 = !DILocation(line: 243, column: 42, scope: !6081)
!6083 = !DILocation(line: 243, column: 38, scope: !6081)
!6084 = !DILocation(line: 243, column: 56, scope: !6081)
!6085 = !DILocation(line: 243, column: 55, scope: !6081)
!6086 = !DILocation(line: 243, column: 13, scope: !6081)
!6087 = !DILocation(line: 243, column: 16, scope: !6081)
!6088 = !DILocation(line: 243, column: 59, scope: !6081)
!6089 = !DILocation(line: 243, column: 13, scope: !6069)
!6090 = !DILocation(line: 244, column: 39, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6081, file: !1807, line: 243, column: 65)
!6092 = !DILocation(line: 244, column: 42, scope: !6091)
!6093 = !DILocation(line: 244, column: 38, scope: !6091)
!6094 = !DILocation(line: 244, column: 56, scope: !6091)
!6095 = !DILocation(line: 244, column: 55, scope: !6091)
!6096 = !DILocation(line: 244, column: 13, scope: !6091)
!6097 = !DILocation(line: 244, column: 16, scope: !6091)
!6098 = !DILocation(line: 244, column: 59, scope: !6091)
!6099 = !DILocation(line: 245, column: 9, scope: !6091)
!6100 = !DILocation(line: 246, column: 13, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6069, file: !1807, line: 246, column: 13)
!6102 = !DILocation(line: 246, column: 16, scope: !6101)
!6103 = !DILocation(line: 246, column: 29, scope: !6101)
!6104 = !DILocation(line: 246, column: 13, scope: !6069)
!6105 = !DILocation(line: 248, column: 25, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !1807, line: 246, column: 35)
!6107 = !DILocation(line: 248, column: 28, scope: !6106)
!6108 = !DILocation(line: 249, column: 43, scope: !6106)
!6109 = !DILocation(line: 249, column: 46, scope: !6106)
!6110 = !DILocation(line: 249, column: 42, scope: !6106)
!6111 = !DILocation(line: 249, column: 60, scope: !6106)
!6112 = !DILocation(line: 249, column: 59, scope: !6106)
!6113 = !DILocation(line: 249, column: 17, scope: !6106)
!6114 = !DILocation(line: 249, column: 20, scope: !6106)
!6115 = !DILocation(line: 248, column: 41, scope: !6106)
!6116 = !DILocation(line: 248, column: 17, scope: !6106)
!6117 = !DILocation(line: 249, column: 63, scope: !6106)
!6118 = !DILocation(line: 247, column: 51, scope: !6106)
!6119 = !DILocation(line: 247, column: 29, scope: !6106)
!6120 = !DILocation(line: 247, column: 32, scope: !6106)
!6121 = !DILocation(line: 247, column: 28, scope: !6106)
!6122 = !DILocation(line: 247, column: 46, scope: !6106)
!6123 = !DILocation(line: 247, column: 45, scope: !6106)
!6124 = !DILocation(line: 247, column: 13, scope: !6106)
!6125 = !DILocation(line: 247, column: 16, scope: !6106)
!6126 = !DILocation(line: 247, column: 49, scope: !6106)
!6127 = !DILocation(line: 250, column: 9, scope: !6106)
!6128 = !DILocation(line: 251, column: 69, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6069, file: !1807, line: 251, column: 13)
!6130 = !DILocation(line: 251, column: 59, scope: !6129)
!6131 = !DILocation(line: 251, column: 37, scope: !6129)
!6132 = !DILocation(line: 251, column: 40, scope: !6129)
!6133 = !DILocation(line: 251, column: 36, scope: !6129)
!6134 = !DILocation(line: 251, column: 54, scope: !6129)
!6135 = !DILocation(line: 251, column: 53, scope: !6129)
!6136 = !DILocation(line: 251, column: 13, scope: !6129)
!6137 = !DILocation(line: 251, column: 16, scope: !6129)
!6138 = !DILocation(line: 251, column: 57, scope: !6129)
!6139 = !DILocation(line: 251, column: 13, scope: !6069)
!6140 = !DILocation(line: 253, column: 28, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6129, file: !1807, line: 251, column: 75)
!6142 = !DILocation(line: 253, column: 19, scope: !6141)
!6143 = !DILocation(line: 253, column: 36, scope: !6141)
!6144 = !DILocation(line: 252, column: 38, scope: !6141)
!6145 = !DILocation(line: 252, column: 41, scope: !6141)
!6146 = !DILocation(line: 252, column: 37, scope: !6141)
!6147 = !DILocation(line: 252, column: 55, scope: !6141)
!6148 = !DILocation(line: 252, column: 54, scope: !6141)
!6149 = !DILocation(line: 252, column: 13, scope: !6141)
!6150 = !DILocation(line: 252, column: 16, scope: !6141)
!6151 = !DILocation(line: 252, column: 58, scope: !6141)
!6152 = !DILocation(line: 254, column: 9, scope: !6141)
!6153 = !DILocation(line: 255, column: 23, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6069, file: !1807, line: 255, column: 13)
!6155 = !DILocation(line: 255, column: 13, scope: !6154)
!6156 = !DILocation(line: 255, column: 13, scope: !6069)
!6157 = !DILocation(line: 256, column: 23, scope: !6154)
!6158 = !DILocation(line: 256, column: 13, scope: !6154)
!6159 = !DILocation(line: 257, column: 23, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6069, file: !1807, line: 257, column: 13)
!6161 = !DILocation(line: 257, column: 13, scope: !6160)
!6162 = !DILocation(line: 257, column: 13, scope: !6069)
!6163 = !DILocation(line: 258, column: 23, scope: !6160)
!6164 = !DILocation(line: 258, column: 13, scope: !6160)
!6165 = !DILocation(line: 259, column: 5, scope: !6069)
!6166 = !DILocation(line: 259, column: 15, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !6033, file: !1807, discriminator: 1)
!6168 = !DILocation(line: 259, column: 5, scope: !6167)
!6169 = !DILocation(line: 261, column: 15, scope: !6033)
!6170 = !DILocation(line: 261, column: 5, scope: !6033)
!6171 = !DILocation(line: 264, column: 9, scope: !6045)
!6172 = !DILocation(line: 264, column: 12, scope: !6045)
!6173 = !DILocation(line: 264, column: 25, scope: !6045)
!6174 = !DILocation(line: 264, column: 9, scope: !6033)
!6175 = !DILocation(line: 265, column: 23, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !1807, line: 265, column: 13)
!6177 = distinct !DILexicalBlock(scope: !6045, file: !1807, line: 264, column: 31)
!6178 = !DILocation(line: 265, column: 13, scope: !6176)
!6179 = !DILocation(line: 265, column: 13, scope: !6177)
!6180 = !DILocation(line: 266, column: 23, scope: !6176)
!6181 = !DILocation(line: 266, column: 13, scope: !6176)
!6182 = !DILocation(line: 267, column: 23, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6177, file: !1807, line: 267, column: 13)
!6184 = !DILocation(line: 267, column: 13, scope: !6183)
!6185 = !DILocation(line: 267, column: 13, scope: !6177)
!6186 = !DILocation(line: 268, column: 23, scope: !6183)
!6187 = !DILocation(line: 268, column: 13, scope: !6183)
!6188 = !DILocation(line: 269, column: 5, scope: !6177)
!6189 = !DILocation(line: 270, column: 23, scope: !6043)
!6190 = !DILocation(line: 270, column: 13, scope: !6043)
!6191 = !DILocation(line: 270, column: 13, scope: !6044)
!6192 = !DILocation(line: 271, column: 45, scope: !6042)
!6193 = !DILocation(line: 271, column: 36, scope: !6042)
!6194 = !DILocation(line: 271, column: 13, scope: !6042)
!6195 = !DILocation(line: 271, column: 16, scope: !6042)
!6196 = !DILocation(line: 271, column: 34, scope: !6042)
!6197 = !DILocation(line: 272, column: 49, scope: !6042)
!6198 = !DILocation(line: 272, column: 40, scope: !6042)
!6199 = !DILocation(line: 272, column: 13, scope: !6042)
!6200 = !DILocation(line: 272, column: 16, scope: !6042)
!6201 = !DILocation(line: 272, column: 38, scope: !6042)
!6202 = !DILocation(line: 273, column: 61, scope: !6042)
!6203 = !DILocation(line: 273, column: 52, scope: !6042)
!6204 = !DILocation(line: 273, column: 42, scope: !6041)
!6205 = !DILocation(line: 132, column: 9, scope: !6206, inlinedAt: !6051)
!6206 = distinct !DILexicalBlock(scope: !6035, file: !6036, line: 132, column: 9)
!6207 = !DILocation(line: 132, column: 13, scope: !6206, inlinedAt: !6051)
!6208 = !DILocation(line: 132, column: 11, scope: !6206, inlinedAt: !6051)
!6209 = !DILocation(line: 132, column: 9, scope: !6035, inlinedAt: !6051)
!6210 = !DILocation(line: 132, column: 26, scope: !6211, inlinedAt: !6051)
!6211 = !DILexicalBlockFile(scope: !6206, file: !6036, discriminator: 1)
!6212 = !DILocation(line: 132, column: 19, scope: !6211, inlinedAt: !6051)
!6213 = !DILocation(line: 133, column: 14, scope: !6214, inlinedAt: !6051)
!6214 = distinct !DILexicalBlock(scope: !6206, file: !6036, line: 133, column: 14)
!6215 = !DILocation(line: 133, column: 18, scope: !6214, inlinedAt: !6051)
!6216 = !DILocation(line: 133, column: 16, scope: !6214, inlinedAt: !6051)
!6217 = !DILocation(line: 133, column: 14, scope: !6206, inlinedAt: !6051)
!6218 = !DILocation(line: 133, column: 31, scope: !6219, inlinedAt: !6051)
!6219 = !DILexicalBlockFile(scope: !6214, file: !6036, discriminator: 1)
!6220 = !DILocation(line: 133, column: 24, scope: !6219, inlinedAt: !6051)
!6221 = !DILocation(line: 134, column: 17, scope: !6214, inlinedAt: !6051)
!6222 = !DILocation(line: 134, column: 10, scope: !6214, inlinedAt: !6051)
!6223 = !DILocation(line: 135, column: 1, scope: !6035, inlinedAt: !6051)
!6224 = !DILocation(line: 273, column: 13, scope: !6042)
!6225 = !DILocation(line: 273, column: 16, scope: !6042)
!6226 = !DILocation(line: 273, column: 40, scope: !6042)
!6227 = !DILocation(line: 274, column: 44, scope: !6042)
!6228 = !DILocation(line: 274, column: 35, scope: !6042)
!6229 = !DILocation(line: 274, column: 13, scope: !6042)
!6230 = !DILocation(line: 274, column: 16, scope: !6042)
!6231 = !DILocation(line: 274, column: 33, scope: !6042)
!6232 = !DILocation(line: 275, column: 56, scope: !6042)
!6233 = !DILocation(line: 275, column: 47, scope: !6042)
!6234 = !DILocation(line: 275, column: 37, scope: !6041)
!6235 = !DILocation(line: 132, column: 9, scope: !6206, inlinedAt: !6040)
!6236 = !DILocation(line: 132, column: 13, scope: !6206, inlinedAt: !6040)
!6237 = !DILocation(line: 132, column: 11, scope: !6206, inlinedAt: !6040)
!6238 = !DILocation(line: 132, column: 9, scope: !6035, inlinedAt: !6040)
!6239 = !DILocation(line: 132, column: 26, scope: !6211, inlinedAt: !6040)
!6240 = !DILocation(line: 132, column: 19, scope: !6211, inlinedAt: !6040)
!6241 = !DILocation(line: 133, column: 14, scope: !6214, inlinedAt: !6040)
!6242 = !DILocation(line: 133, column: 18, scope: !6214, inlinedAt: !6040)
!6243 = !DILocation(line: 133, column: 16, scope: !6214, inlinedAt: !6040)
!6244 = !DILocation(line: 133, column: 14, scope: !6206, inlinedAt: !6040)
!6245 = !DILocation(line: 133, column: 31, scope: !6219, inlinedAt: !6040)
!6246 = !DILocation(line: 133, column: 24, scope: !6219, inlinedAt: !6040)
!6247 = !DILocation(line: 134, column: 17, scope: !6214, inlinedAt: !6040)
!6248 = !DILocation(line: 134, column: 10, scope: !6214, inlinedAt: !6040)
!6249 = !DILocation(line: 135, column: 1, scope: !6035, inlinedAt: !6040)
!6250 = !DILocation(line: 275, column: 13, scope: !6042)
!6251 = !DILocation(line: 275, column: 16, scope: !6042)
!6252 = !DILocation(line: 275, column: 35, scope: !6042)
!6253 = !DILocation(line: 276, column: 9, scope: !6042)
!6254 = !DILocation(line: 277, column: 23, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6044, file: !1807, line: 277, column: 13)
!6256 = !DILocation(line: 277, column: 13, scope: !6255)
!6257 = !DILocation(line: 277, column: 13, scope: !6044)
!6258 = !DILocation(line: 278, column: 50, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6255, file: !1807, line: 277, column: 29)
!6260 = !DILocation(line: 278, column: 41, scope: !6259)
!6261 = !DILocation(line: 278, column: 13, scope: !6259)
!6262 = !DILocation(line: 278, column: 16, scope: !6259)
!6263 = !DILocation(line: 278, column: 39, scope: !6259)
!6264 = !DILocation(line: 279, column: 48, scope: !6259)
!6265 = !DILocation(line: 279, column: 39, scope: !6259)
!6266 = !DILocation(line: 279, column: 13, scope: !6259)
!6267 = !DILocation(line: 279, column: 16, scope: !6259)
!6268 = !DILocation(line: 279, column: 37, scope: !6259)
!6269 = !DILocation(line: 280, column: 23, scope: !6259)
!6270 = !DILocation(line: 280, column: 13, scope: !6259)
!6271 = !DILocation(line: 281, column: 9, scope: !6259)
!6272 = !DILocation(line: 285, column: 19, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6033, file: !1807, line: 285, column: 9)
!6274 = !DILocation(line: 285, column: 9, scope: !6273)
!6275 = !DILocation(line: 285, column: 9, scope: !6033)
!6276 = !DILocation(line: 286, column: 22, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !1807, line: 285, column: 25)
!6278 = !DILocation(line: 286, column: 13, scope: !6277)
!6279 = !DILocation(line: 286, column: 11, scope: !6277)
!6280 = !DILocation(line: 287, column: 9, scope: !6277)
!6281 = distinct !{!6281, !6280}
!6282 = !DILocation(line: 288, column: 23, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !1807, line: 287, column: 12)
!6284 = !DILocation(line: 288, column: 13, scope: !6283)
!6285 = !DILocation(line: 289, column: 9, scope: !6283)
!6286 = !DILocation(line: 289, column: 19, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6277, file: !1807, discriminator: 1)
!6288 = !DILocation(line: 289, column: 9, scope: !6287)
!6289 = !DILocation(line: 290, column: 5, scope: !6277)
!6290 = !DILocation(line: 292, column: 5, scope: !6033)
!6291 = distinct !DISubprogram(name: "ff_eac3_parse_header", scope: !1008, file: !1008, line: 289, type: !3896, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!6292 = !DILocation(line: 127, column: 87, scope: !6035, inlinedAt: !6293)
!6293 = distinct !DILocation(line: 374, column: 41, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6295, file: !1008, discriminator: 1)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !1008, line: 371, column: 38)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !1008, line: 371, column: 17)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !1008, line: 364, column: 50)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !1008, line: 364, column: 13)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !1008, line: 362, column: 25)
!6300 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 362, column: 9)
!6301 = !DILocation(line: 127, column: 94, scope: !6035, inlinedAt: !6293)
!6302 = !DILocation(line: 127, column: 104, scope: !6035, inlinedAt: !6293)
!6303 = !DILocation(line: 127, column: 87, scope: !6035, inlinedAt: !6304)
!6304 = distinct !DILocation(line: 373, column: 46, scope: !6294)
!6305 = !DILocation(line: 127, column: 94, scope: !6035, inlinedAt: !6304)
!6306 = !DILocation(line: 127, column: 104, scope: !6035, inlinedAt: !6304)
!6307 = !DILocalVariable(name: "x", arg: 1, scope: !6308, file: !6036, line: 342, type: !1040)
!6308 = distinct !DISubprogram(name: "av_popcount_c", scope: !6036, file: !6036, line: 342, type: !6309, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!1015, !1040}
!6311 = !DILocation(line: 342, column: 96, scope: !6308, inlinedAt: !6312)
!6312 = distinct !DILocation(line: 358, column: 41, scope: !6313, inlinedAt: !6317)
!6313 = !DILexicalBlockFile(scope: !6314, file: !6036, discriminator: 1)
!6314 = distinct !DISubprogram(name: "av_popcount64_c", scope: !6036, file: !6036, line: 356, type: !6315, isLocal: true, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!1015, !1045}
!6317 = distinct !DILocation(line: 354, column: 17, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !1008, line: 354, column: 17)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !1008, line: 345, column: 29)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !1008, line: 345, column: 13)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !1008, line: 344, column: 53)
!6322 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 344, column: 9)
!6323 = !DILocation(line: 342, column: 96, scope: !6308, inlinedAt: !6324)
!6324 = distinct !DILocation(line: 358, column: 12, scope: !6314, inlinedAt: !6317)
!6325 = !DILocalVariable(name: "x", arg: 1, scope: !6314, file: !6036, line: 356, type: !1045)
!6326 = !DILocation(line: 356, column: 98, scope: !6314, inlinedAt: !6317)
!6327 = !DILocalVariable(name: "s", arg: 1, scope: !6291, file: !1008, line: 289, type: !1852)
!6328 = !DILocation(line: 289, column: 51, scope: !6291)
!6329 = !DILocalVariable(name: "i", scope: !6291, file: !1008, line: 291, type: !1015)
!6330 = !DILocation(line: 291, column: 9, scope: !6291)
!6331 = !DILocalVariable(name: "blk", scope: !6291, file: !1008, line: 291, type: !1015)
!6332 = !DILocation(line: 291, column: 12, scope: !6291)
!6333 = !DILocalVariable(name: "ch", scope: !6291, file: !1008, line: 291, type: !1015)
!6334 = !DILocation(line: 291, column: 17, scope: !6291)
!6335 = !DILocalVariable(name: "ac3_exponent_strategy", scope: !6291, file: !1008, line: 292, type: !1015)
!6336 = !DILocation(line: 292, column: 9, scope: !6291)
!6337 = !DILocalVariable(name: "parse_aht_info", scope: !6291, file: !1008, line: 292, type: !1015)
!6338 = !DILocation(line: 292, column: 32, scope: !6291)
!6339 = !DILocalVariable(name: "parse_spx_atten_data", scope: !6291, file: !1008, line: 292, type: !1015)
!6340 = !DILocation(line: 292, column: 48, scope: !6291)
!6341 = !DILocalVariable(name: "parse_transient_proc_info", scope: !6291, file: !1008, line: 293, type: !1015)
!6342 = !DILocation(line: 293, column: 9, scope: !6291)
!6343 = !DILocalVariable(name: "num_cpl_blocks", scope: !6291, file: !1008, line: 294, type: !1015)
!6344 = !DILocation(line: 294, column: 9, scope: !6291)
!6345 = !DILocalVariable(name: "gbc", scope: !6291, file: !1008, line: 295, type: !3872)
!6346 = !DILocation(line: 295, column: 20, scope: !6291)
!6347 = !DILocation(line: 295, column: 27, scope: !6291)
!6348 = !DILocation(line: 295, column: 30, scope: !6291)
!6349 = !DILocation(line: 300, column: 9, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 300, column: 9)
!6351 = !DILocation(line: 300, column: 12, scope: !6350)
!6352 = !DILocation(line: 300, column: 23, scope: !6350)
!6353 = !DILocation(line: 300, column: 9, scope: !6291)
!6354 = !DILocation(line: 301, column: 16, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6350, file: !1008, line: 300, column: 52)
!6356 = !DILocation(line: 301, column: 19, scope: !6355)
!6357 = !DILocation(line: 301, column: 9, scope: !6355)
!6358 = !DILocation(line: 302, column: 9, scope: !6355)
!6359 = !DILocation(line: 308, column: 9, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 308, column: 9)
!6361 = !DILocation(line: 308, column: 12, scope: !6360)
!6362 = !DILocation(line: 308, column: 9, scope: !6291)
!6363 = !DILocation(line: 310, column: 14, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !1008, line: 310, column: 13)
!6365 = distinct !DILexicalBlock(scope: !6360, file: !1008, line: 308, column: 25)
!6366 = !DILocation(line: 310, column: 17, scope: !6364)
!6367 = !DILocation(line: 310, column: 13, scope: !6365)
!6368 = !DILocation(line: 311, column: 13, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6364, file: !1008, line: 310, column: 42)
!6370 = !DILocation(line: 311, column: 16, scope: !6369)
!6371 = !DILocation(line: 311, column: 40, scope: !6369)
!6372 = !DILocation(line: 312, column: 35, scope: !6369)
!6373 = !DILocation(line: 312, column: 38, scope: !6369)
!6374 = !DILocation(line: 312, column: 13, scope: !6369)
!6375 = !DILocation(line: 313, column: 9, scope: !6369)
!6376 = !DILocation(line: 314, column: 9, scope: !6365)
!6377 = !DILocation(line: 317, column: 9, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 317, column: 9)
!6379 = !DILocation(line: 317, column: 12, scope: !6378)
!6380 = !DILocation(line: 317, column: 29, scope: !6378)
!6381 = !DILocation(line: 317, column: 37, scope: !6378)
!6382 = !DILocation(line: 317, column: 9, scope: !6291)
!6383 = !DILocation(line: 322, column: 31, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6378, file: !1008, line: 317, column: 43)
!6385 = !DILocation(line: 322, column: 34, scope: !6384)
!6386 = !DILocation(line: 322, column: 9, scope: !6384)
!6387 = !DILocation(line: 323, column: 9, scope: !6384)
!6388 = !DILocation(line: 325, column: 15, scope: !6291)
!6389 = !DILocation(line: 325, column: 5, scope: !6291)
!6390 = !DILocation(line: 328, column: 12, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 328, column: 5)
!6392 = !DILocation(line: 328, column: 10, scope: !6391)
!6393 = !DILocation(line: 328, column: 17, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !6395, file: !1008, discriminator: 1)
!6395 = distinct !DILexicalBlock(scope: !6391, file: !1008, line: 328, column: 5)
!6396 = !DILocation(line: 328, column: 22, scope: !6394)
!6397 = !DILocation(line: 328, column: 25, scope: !6394)
!6398 = !DILocation(line: 328, column: 19, scope: !6394)
!6399 = !DILocation(line: 328, column: 5, scope: !6394)
!6400 = !DILocation(line: 329, column: 48, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6395, file: !1008, line: 328, column: 53)
!6402 = !DILocation(line: 329, column: 39, scope: !6401)
!6403 = !DILocation(line: 329, column: 38, scope: !6401)
!6404 = !DILocation(line: 329, column: 33, scope: !6401)
!6405 = !DILocation(line: 329, column: 9, scope: !6401)
!6406 = !DILocation(line: 329, column: 12, scope: !6401)
!6407 = !DILocation(line: 329, column: 36, scope: !6401)
!6408 = !DILocation(line: 330, column: 37, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6401, file: !1008, line: 330, column: 13)
!6410 = !DILocation(line: 330, column: 13, scope: !6409)
!6411 = !DILocation(line: 330, column: 16, scope: !6409)
!6412 = !DILocation(line: 330, column: 40, scope: !6409)
!6413 = !DILocation(line: 330, column: 13, scope: !6401)
!6414 = !DILocation(line: 331, column: 37, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6409, file: !1008, line: 330, column: 46)
!6416 = !DILocation(line: 331, column: 13, scope: !6415)
!6417 = !DILocation(line: 331, column: 16, scope: !6415)
!6418 = !DILocation(line: 331, column: 40, scope: !6415)
!6419 = !DILocation(line: 332, column: 9, scope: !6415)
!6420 = !DILocation(line: 333, column: 13, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6401, file: !1008, line: 333, column: 13)
!6422 = !DILocation(line: 333, column: 16, scope: !6421)
!6423 = !DILocation(line: 333, column: 29, scope: !6421)
!6424 = !DILocation(line: 333, column: 13, scope: !6401)
!6425 = !DILocation(line: 335, column: 25, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !1008, line: 333, column: 35)
!6427 = !DILocation(line: 335, column: 28, scope: !6426)
!6428 = !DILocation(line: 335, column: 67, scope: !6426)
!6429 = !DILocation(line: 335, column: 43, scope: !6426)
!6430 = !DILocation(line: 335, column: 46, scope: !6426)
!6431 = !DILocation(line: 335, column: 41, scope: !6426)
!6432 = !DILocation(line: 335, column: 17, scope: !6426)
!6433 = !DILocation(line: 335, column: 70, scope: !6426)
!6434 = !DILocation(line: 334, column: 32, scope: !6426)
!6435 = !DILocation(line: 334, column: 27, scope: !6426)
!6436 = !DILocation(line: 334, column: 13, scope: !6426)
!6437 = !DILocation(line: 334, column: 16, scope: !6426)
!6438 = !DILocation(line: 334, column: 30, scope: !6426)
!6439 = !DILocation(line: 336, column: 9, scope: !6426)
!6440 = !DILocation(line: 337, column: 46, scope: !6401)
!6441 = !DILocation(line: 337, column: 36, scope: !6401)
!6442 = !DILocation(line: 337, column: 31, scope: !6401)
!6443 = !DILocation(line: 337, column: 9, scope: !6401)
!6444 = !DILocation(line: 337, column: 12, scope: !6401)
!6445 = !DILocation(line: 337, column: 34, scope: !6401)
!6446 = !DILocation(line: 338, column: 35, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6401, file: !1008, line: 338, column: 13)
!6448 = !DILocation(line: 338, column: 13, scope: !6447)
!6449 = !DILocation(line: 338, column: 16, scope: !6447)
!6450 = !DILocation(line: 338, column: 13, scope: !6401)
!6451 = !DILocation(line: 339, column: 52, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6447, file: !1008, line: 338, column: 39)
!6453 = !DILocation(line: 339, column: 43, scope: !6452)
!6454 = !DILocation(line: 339, column: 60, scope: !6452)
!6455 = !DILocation(line: 339, column: 36, scope: !6452)
!6456 = !DILocation(line: 339, column: 13, scope: !6452)
!6457 = !DILocation(line: 339, column: 16, scope: !6452)
!6458 = !DILocation(line: 339, column: 39, scope: !6452)
!6459 = !DILocation(line: 340, column: 9, scope: !6452)
!6460 = !DILocation(line: 341, column: 5, scope: !6401)
!6461 = !DILocation(line: 328, column: 49, scope: !6462)
!6462 = !DILexicalBlockFile(scope: !6395, file: !1008, discriminator: 2)
!6463 = !DILocation(line: 328, column: 5, scope: !6462)
!6464 = distinct !{!6464, !6465}
!6465 = !DILocation(line: 328, column: 5, scope: !6291)
!6466 = !DILocation(line: 344, column: 9, scope: !6322)
!6467 = !DILocation(line: 344, column: 12, scope: !6322)
!6468 = !DILocation(line: 344, column: 23, scope: !6322)
!6469 = !DILocation(line: 344, column: 9, scope: !6291)
!6470 = !DILocation(line: 345, column: 23, scope: !6320)
!6471 = !DILocation(line: 345, column: 13, scope: !6320)
!6472 = !DILocation(line: 345, column: 13, scope: !6321)
!6473 = !DILocalVariable(name: "channel_layout", scope: !6319, file: !1008, line: 346, type: !1043)
!6474 = !DILocation(line: 346, column: 21, scope: !6319)
!6475 = !DILocalVariable(name: "channel_map", scope: !6319, file: !1008, line: 347, type: !1015)
!6476 = !DILocation(line: 347, column: 17, scope: !6319)
!6477 = !DILocation(line: 347, column: 40, scope: !6319)
!6478 = !DILocation(line: 347, column: 31, scope: !6319)
!6479 = !DILocation(line: 348, column: 20, scope: !6319)
!6480 = !DILocation(line: 348, column: 23, scope: !6319)
!6481 = !DILocation(line: 348, column: 56, scope: !6319)
!6482 = !DILocation(line: 348, column: 13, scope: !6319)
!6483 = !DILocation(line: 350, column: 20, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6319, file: !1008, line: 350, column: 13)
!6485 = !DILocation(line: 350, column: 18, scope: !6484)
!6486 = !DILocation(line: 350, column: 25, scope: !6487)
!6487 = !DILexicalBlockFile(scope: !6488, file: !1008, discriminator: 1)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !1008, line: 350, column: 13)
!6489 = !DILocation(line: 350, column: 27, scope: !6487)
!6490 = !DILocation(line: 350, column: 13, scope: !6487)
!6491 = !DILocation(line: 351, column: 21, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !1008, line: 351, column: 21)
!6493 = !DILocation(line: 351, column: 47, scope: !6492)
!6494 = !DILocation(line: 351, column: 45, scope: !6492)
!6495 = !DILocation(line: 351, column: 49, scope: !6492)
!6496 = !DILocation(line: 351, column: 38, scope: !6492)
!6497 = !DILocation(line: 351, column: 33, scope: !6492)
!6498 = !DILocation(line: 351, column: 21, scope: !6488)
!6499 = !DILocation(line: 352, column: 76, scope: !6492)
!6500 = !DILocation(line: 352, column: 39, scope: !6492)
!6501 = !DILocation(line: 352, column: 36, scope: !6492)
!6502 = !DILocation(line: 352, column: 21, scope: !6492)
!6503 = !DILocation(line: 351, column: 53, scope: !6504)
!6504 = !DILexicalBlockFile(scope: !6492, file: !1008, discriminator: 1)
!6505 = !DILocation(line: 350, column: 34, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6488, file: !1008, discriminator: 2)
!6507 = !DILocation(line: 350, column: 13, scope: !6506)
!6508 = distinct !{!6508, !6509}
!6509 = !DILocation(line: 350, column: 13, scope: !6319)
!6510 = !DILocation(line: 354, column: 33, scope: !6318)
!6511 = !DILocation(line: 354, column: 17, scope: !6318)
!6512 = !DILocation(line: 358, column: 36, scope: !6314, inlinedAt: !6317)
!6513 = !DILocation(line: 358, column: 26, scope: !6314, inlinedAt: !6317)
!6514 = !DILocation(line: 358, column: 12, scope: !6314, inlinedAt: !6317)
!6515 = !DILocation(line: 344, column: 11, scope: !6308, inlinedAt: !6324)
!6516 = !DILocation(line: 344, column: 13, scope: !6308, inlinedAt: !6324)
!6517 = !DILocation(line: 344, column: 19, scope: !6308, inlinedAt: !6324)
!6518 = !DILocation(line: 344, column: 7, scope: !6308, inlinedAt: !6324)
!6519 = !DILocation(line: 345, column: 10, scope: !6308, inlinedAt: !6324)
!6520 = !DILocation(line: 345, column: 12, scope: !6308, inlinedAt: !6324)
!6521 = !DILocation(line: 345, column: 30, scope: !6308, inlinedAt: !6324)
!6522 = !DILocation(line: 345, column: 32, scope: !6308, inlinedAt: !6324)
!6523 = !DILocation(line: 345, column: 38, scope: !6308, inlinedAt: !6324)
!6524 = !DILocation(line: 345, column: 26, scope: !6308, inlinedAt: !6324)
!6525 = !DILocation(line: 345, column: 7, scope: !6308, inlinedAt: !6324)
!6526 = !DILocation(line: 346, column: 10, scope: !6308, inlinedAt: !6324)
!6527 = !DILocation(line: 346, column: 15, scope: !6308, inlinedAt: !6324)
!6528 = !DILocation(line: 346, column: 17, scope: !6308, inlinedAt: !6324)
!6529 = !DILocation(line: 346, column: 12, scope: !6308, inlinedAt: !6324)
!6530 = !DILocation(line: 346, column: 24, scope: !6308, inlinedAt: !6324)
!6531 = !DILocation(line: 346, column: 7, scope: !6308, inlinedAt: !6324)
!6532 = !DILocation(line: 347, column: 10, scope: !6308, inlinedAt: !6324)
!6533 = !DILocation(line: 347, column: 12, scope: !6308, inlinedAt: !6324)
!6534 = !DILocation(line: 347, column: 7, scope: !6308, inlinedAt: !6324)
!6535 = !DILocation(line: 348, column: 13, scope: !6308, inlinedAt: !6324)
!6536 = !DILocation(line: 348, column: 18, scope: !6308, inlinedAt: !6324)
!6537 = !DILocation(line: 348, column: 20, scope: !6308, inlinedAt: !6324)
!6538 = !DILocation(line: 348, column: 15, scope: !6308, inlinedAt: !6324)
!6539 = !DILocation(line: 348, column: 28, scope: !6308, inlinedAt: !6324)
!6540 = !DILocation(line: 358, column: 66, scope: !6314, inlinedAt: !6317)
!6541 = !DILocation(line: 358, column: 68, scope: !6314, inlinedAt: !6317)
!6542 = !DILocation(line: 358, column: 55, scope: !6314, inlinedAt: !6317)
!6543 = !DILocation(line: 358, column: 41, scope: !6313, inlinedAt: !6317)
!6544 = !DILocation(line: 344, column: 11, scope: !6308, inlinedAt: !6312)
!6545 = !DILocation(line: 344, column: 13, scope: !6308, inlinedAt: !6312)
!6546 = !DILocation(line: 344, column: 19, scope: !6308, inlinedAt: !6312)
!6547 = !DILocation(line: 344, column: 7, scope: !6308, inlinedAt: !6312)
!6548 = !DILocation(line: 345, column: 10, scope: !6308, inlinedAt: !6312)
!6549 = !DILocation(line: 345, column: 12, scope: !6308, inlinedAt: !6312)
!6550 = !DILocation(line: 345, column: 30, scope: !6308, inlinedAt: !6312)
!6551 = !DILocation(line: 345, column: 32, scope: !6308, inlinedAt: !6312)
!6552 = !DILocation(line: 345, column: 38, scope: !6308, inlinedAt: !6312)
!6553 = !DILocation(line: 345, column: 26, scope: !6308, inlinedAt: !6312)
!6554 = !DILocation(line: 345, column: 7, scope: !6308, inlinedAt: !6312)
!6555 = !DILocation(line: 346, column: 10, scope: !6308, inlinedAt: !6312)
!6556 = !DILocation(line: 346, column: 15, scope: !6308, inlinedAt: !6312)
!6557 = !DILocation(line: 346, column: 17, scope: !6308, inlinedAt: !6312)
!6558 = !DILocation(line: 346, column: 12, scope: !6308, inlinedAt: !6312)
!6559 = !DILocation(line: 346, column: 24, scope: !6308, inlinedAt: !6312)
!6560 = !DILocation(line: 346, column: 7, scope: !6308, inlinedAt: !6312)
!6561 = !DILocation(line: 347, column: 10, scope: !6308, inlinedAt: !6312)
!6562 = !DILocation(line: 347, column: 12, scope: !6308, inlinedAt: !6312)
!6563 = !DILocation(line: 347, column: 7, scope: !6308, inlinedAt: !6312)
!6564 = !DILocation(line: 348, column: 13, scope: !6308, inlinedAt: !6312)
!6565 = !DILocation(line: 348, column: 18, scope: !6308, inlinedAt: !6312)
!6566 = !DILocation(line: 348, column: 20, scope: !6308, inlinedAt: !6312)
!6567 = !DILocation(line: 348, column: 15, scope: !6308, inlinedAt: !6312)
!6568 = !DILocation(line: 348, column: 28, scope: !6308, inlinedAt: !6312)
!6569 = !DILocation(line: 358, column: 39, scope: !6314, inlinedAt: !6317)
!6570 = !DILocation(line: 354, column: 49, scope: !6318)
!6571 = !DILocation(line: 354, column: 17, scope: !6319)
!6572 = !DILocation(line: 355, column: 17, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6318, file: !1008, line: 354, column: 55)
!6574 = !DILocation(line: 357, column: 30, scope: !6319)
!6575 = !DILocation(line: 357, column: 13, scope: !6319)
!6576 = !DILocation(line: 357, column: 16, scope: !6319)
!6577 = !DILocation(line: 357, column: 28, scope: !6319)
!6578 = !DILocation(line: 358, column: 9, scope: !6319)
!6579 = !DILocation(line: 359, column: 5, scope: !6321)
!6580 = !DILocation(line: 362, column: 19, scope: !6300)
!6581 = !DILocation(line: 362, column: 9, scope: !6300)
!6582 = !DILocation(line: 362, column: 9, scope: !6291)
!6583 = !DILocation(line: 364, column: 13, scope: !6298)
!6584 = !DILocation(line: 364, column: 16, scope: !6298)
!6585 = !DILocation(line: 364, column: 29, scope: !6298)
!6586 = !DILocation(line: 364, column: 13, scope: !6299)
!6587 = !DILocation(line: 365, column: 45, scope: !6297)
!6588 = !DILocation(line: 365, column: 36, scope: !6297)
!6589 = !DILocation(line: 365, column: 13, scope: !6297)
!6590 = !DILocation(line: 365, column: 16, scope: !6297)
!6591 = !DILocation(line: 365, column: 34, scope: !6297)
!6592 = !DILocation(line: 366, column: 17, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6297, file: !1008, line: 366, column: 17)
!6594 = !DILocation(line: 366, column: 20, scope: !6593)
!6595 = !DILocation(line: 366, column: 33, scope: !6593)
!6596 = !DILocation(line: 366, column: 17, scope: !6297)
!6597 = !DILocation(line: 368, column: 53, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6593, file: !1008, line: 366, column: 38)
!6599 = !DILocation(line: 368, column: 44, scope: !6598)
!6600 = !DILocation(line: 368, column: 17, scope: !6598)
!6601 = !DILocation(line: 368, column: 20, scope: !6598)
!6602 = !DILocation(line: 368, column: 42, scope: !6598)
!6603 = !DILocation(line: 369, column: 48, scope: !6598)
!6604 = !DILocation(line: 369, column: 39, scope: !6598)
!6605 = !DILocation(line: 369, column: 17, scope: !6598)
!6606 = !DILocation(line: 369, column: 20, scope: !6598)
!6607 = !DILocation(line: 369, column: 37, scope: !6598)
!6608 = !DILocation(line: 370, column: 13, scope: !6598)
!6609 = !DILocation(line: 371, column: 17, scope: !6296)
!6610 = !DILocation(line: 371, column: 20, scope: !6296)
!6611 = !DILocation(line: 371, column: 33, scope: !6296)
!6612 = !DILocation(line: 371, column: 17, scope: !6297)
!6613 = !DILocation(line: 373, column: 65, scope: !6295)
!6614 = !DILocation(line: 373, column: 56, scope: !6295)
!6615 = !DILocation(line: 373, column: 46, scope: !6294)
!6616 = !DILocation(line: 132, column: 9, scope: !6206, inlinedAt: !6304)
!6617 = !DILocation(line: 132, column: 13, scope: !6206, inlinedAt: !6304)
!6618 = !DILocation(line: 132, column: 11, scope: !6206, inlinedAt: !6304)
!6619 = !DILocation(line: 132, column: 9, scope: !6035, inlinedAt: !6304)
!6620 = !DILocation(line: 132, column: 26, scope: !6211, inlinedAt: !6304)
!6621 = !DILocation(line: 132, column: 19, scope: !6211, inlinedAt: !6304)
!6622 = !DILocation(line: 133, column: 14, scope: !6214, inlinedAt: !6304)
!6623 = !DILocation(line: 133, column: 18, scope: !6214, inlinedAt: !6304)
!6624 = !DILocation(line: 133, column: 16, scope: !6214, inlinedAt: !6304)
!6625 = !DILocation(line: 133, column: 14, scope: !6206, inlinedAt: !6304)
!6626 = !DILocation(line: 133, column: 31, scope: !6219, inlinedAt: !6304)
!6627 = !DILocation(line: 133, column: 24, scope: !6219, inlinedAt: !6304)
!6628 = !DILocation(line: 134, column: 17, scope: !6214, inlinedAt: !6304)
!6629 = !DILocation(line: 134, column: 10, scope: !6214, inlinedAt: !6304)
!6630 = !DILocation(line: 135, column: 1, scope: !6035, inlinedAt: !6304)
!6631 = !DILocation(line: 373, column: 17, scope: !6295)
!6632 = !DILocation(line: 373, column: 20, scope: !6295)
!6633 = !DILocation(line: 373, column: 44, scope: !6295)
!6634 = !DILocation(line: 374, column: 60, scope: !6295)
!6635 = !DILocation(line: 374, column: 51, scope: !6295)
!6636 = !DILocation(line: 374, column: 41, scope: !6294)
!6637 = !DILocation(line: 132, column: 9, scope: !6206, inlinedAt: !6293)
!6638 = !DILocation(line: 132, column: 13, scope: !6206, inlinedAt: !6293)
!6639 = !DILocation(line: 132, column: 11, scope: !6206, inlinedAt: !6293)
!6640 = !DILocation(line: 132, column: 9, scope: !6035, inlinedAt: !6293)
!6641 = !DILocation(line: 132, column: 26, scope: !6211, inlinedAt: !6293)
!6642 = !DILocation(line: 132, column: 19, scope: !6211, inlinedAt: !6293)
!6643 = !DILocation(line: 133, column: 14, scope: !6214, inlinedAt: !6293)
!6644 = !DILocation(line: 133, column: 18, scope: !6214, inlinedAt: !6293)
!6645 = !DILocation(line: 133, column: 16, scope: !6214, inlinedAt: !6293)
!6646 = !DILocation(line: 133, column: 14, scope: !6206, inlinedAt: !6293)
!6647 = !DILocation(line: 133, column: 31, scope: !6219, inlinedAt: !6293)
!6648 = !DILocation(line: 133, column: 24, scope: !6219, inlinedAt: !6293)
!6649 = !DILocation(line: 134, column: 17, scope: !6214, inlinedAt: !6293)
!6650 = !DILocation(line: 134, column: 10, scope: !6214, inlinedAt: !6293)
!6651 = !DILocation(line: 135, column: 1, scope: !6035, inlinedAt: !6293)
!6652 = !DILocation(line: 374, column: 17, scope: !6295)
!6653 = !DILocation(line: 374, column: 20, scope: !6295)
!6654 = !DILocation(line: 374, column: 39, scope: !6295)
!6655 = !DILocation(line: 375, column: 13, scope: !6295)
!6656 = !DILocation(line: 376, column: 9, scope: !6297)
!6657 = !DILocation(line: 379, column: 13, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6299, file: !1008, line: 379, column: 13)
!6659 = !DILocation(line: 379, column: 16, scope: !6658)
!6660 = !DILocation(line: 379, column: 23, scope: !6658)
!6661 = !DILocation(line: 379, column: 63, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6658, file: !1008, discriminator: 1)
!6663 = !DILocation(line: 379, column: 53, scope: !6662)
!6664 = !DILocation(line: 379, column: 27, scope: !6662)
!6665 = !DILocation(line: 379, column: 30, scope: !6662)
!6666 = !DILocation(line: 379, column: 51, scope: !6662)
!6667 = !DILocation(line: 379, column: 13, scope: !6662)
!6668 = !DILocation(line: 380, column: 41, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6658, file: !1008, line: 379, column: 70)
!6670 = !DILocation(line: 380, column: 32, scope: !6669)
!6671 = !DILocation(line: 380, column: 13, scope: !6669)
!6672 = !DILocation(line: 380, column: 16, scope: !6669)
!6673 = !DILocation(line: 380, column: 30, scope: !6669)
!6674 = !DILocation(line: 381, column: 9, scope: !6669)
!6675 = !DILocation(line: 384, column: 13, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6299, file: !1008, line: 384, column: 13)
!6677 = !DILocation(line: 384, column: 16, scope: !6676)
!6678 = !DILocation(line: 384, column: 27, scope: !6676)
!6679 = !DILocation(line: 384, column: 13, scope: !6299)
!6680 = !DILocation(line: 385, column: 20, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !1008, line: 385, column: 13)
!6682 = distinct !DILexicalBlock(scope: !6676, file: !1008, line: 384, column: 59)
!6683 = !DILocation(line: 385, column: 18, scope: !6681)
!6684 = !DILocation(line: 385, column: 25, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6686, file: !1008, discriminator: 1)
!6686 = distinct !DILexicalBlock(scope: !6681, file: !1008, line: 385, column: 13)
!6687 = !DILocation(line: 385, column: 30, scope: !6685)
!6688 = !DILocation(line: 385, column: 33, scope: !6685)
!6689 = !DILocation(line: 385, column: 27, scope: !6685)
!6690 = !DILocation(line: 385, column: 13, scope: !6685)
!6691 = !DILocation(line: 387, column: 31, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !1008, line: 387, column: 21)
!6693 = distinct !DILexicalBlock(scope: !6686, file: !1008, line: 385, column: 61)
!6694 = !DILocation(line: 387, column: 21, scope: !6692)
!6695 = !DILocation(line: 387, column: 21, scope: !6693)
!6696 = !DILocation(line: 388, column: 31, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !1008, line: 387, column: 37)
!6698 = !DILocation(line: 388, column: 21, scope: !6697)
!6699 = !DILocation(line: 389, column: 17, scope: !6697)
!6700 = !DILocation(line: 390, column: 13, scope: !6693)
!6701 = !DILocation(line: 385, column: 57, scope: !6702)
!6702 = !DILexicalBlockFile(scope: !6686, file: !1008, discriminator: 2)
!6703 = !DILocation(line: 385, column: 13, scope: !6702)
!6704 = distinct !{!6704, !6705}
!6705 = !DILocation(line: 385, column: 13, scope: !6682)
!6706 = !DILocation(line: 391, column: 27, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6682, file: !1008, line: 391, column: 17)
!6708 = !DILocation(line: 391, column: 17, scope: !6707)
!6709 = !DILocation(line: 391, column: 17, scope: !6682)
!6710 = !DILocation(line: 392, column: 27, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6707, file: !1008, line: 391, column: 33)
!6712 = !DILocation(line: 392, column: 17, scope: !6711)
!6713 = !DILocation(line: 393, column: 13, scope: !6711)
!6714 = !DILocation(line: 395, column: 29, scope: !6682)
!6715 = !DILocation(line: 395, column: 20, scope: !6682)
!6716 = !DILocation(line: 395, column: 13, scope: !6682)
!6717 = !DILocation(line: 396, column: 35, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6682, file: !1008, line: 395, column: 38)
!6719 = !DILocation(line: 396, column: 25, scope: !6718)
!6720 = !DILocation(line: 396, column: 44, scope: !6718)
!6721 = !DILocation(line: 397, column: 35, scope: !6718)
!6722 = !DILocation(line: 397, column: 25, scope: !6718)
!6723 = !DILocation(line: 397, column: 45, scope: !6718)
!6724 = !DILocalVariable(name: "mix_data_size", scope: !6725, file: !1008, line: 399, type: !1015)
!6725 = distinct !DILexicalBlock(scope: !6718, file: !1008, line: 398, column: 25)
!6726 = !DILocation(line: 399, column: 25, scope: !6725)
!6727 = !DILocation(line: 399, column: 51, scope: !6725)
!6728 = !DILocation(line: 399, column: 42, scope: !6725)
!6729 = !DILocation(line: 399, column: 59, scope: !6725)
!6730 = !DILocation(line: 399, column: 64, scope: !6725)
!6731 = !DILocation(line: 400, column: 36, scope: !6725)
!6732 = !DILocation(line: 400, column: 41, scope: !6725)
!6733 = !DILocation(line: 400, column: 21, scope: !6725)
!6734 = !DILocation(line: 401, column: 21, scope: !6725)
!6735 = !DILocation(line: 405, column: 17, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6682, file: !1008, line: 405, column: 17)
!6737 = !DILocation(line: 405, column: 20, scope: !6736)
!6738 = !DILocation(line: 405, column: 33, scope: !6736)
!6739 = !DILocation(line: 405, column: 17, scope: !6682)
!6740 = !DILocation(line: 406, column: 24, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !1008, line: 406, column: 17)
!6742 = distinct !DILexicalBlock(scope: !6736, file: !1008, line: 405, column: 54)
!6743 = !DILocation(line: 406, column: 22, scope: !6741)
!6744 = !DILocation(line: 406, column: 29, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !6746, file: !1008, discriminator: 1)
!6746 = distinct !DILexicalBlock(scope: !6741, file: !1008, line: 406, column: 17)
!6747 = !DILocation(line: 406, column: 34, scope: !6745)
!6748 = !DILocation(line: 406, column: 37, scope: !6745)
!6749 = !DILocation(line: 406, column: 31, scope: !6745)
!6750 = !DILocation(line: 406, column: 17, scope: !6745)
!6751 = !DILocation(line: 407, column: 35, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !1008, line: 407, column: 25)
!6753 = distinct !DILexicalBlock(scope: !6746, file: !1008, line: 406, column: 65)
!6754 = !DILocation(line: 407, column: 25, scope: !6752)
!6755 = !DILocation(line: 407, column: 25, scope: !6753)
!6756 = !DILocation(line: 411, column: 35, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !1008, line: 407, column: 41)
!6758 = !DILocation(line: 411, column: 25, scope: !6757)
!6759 = !DILocation(line: 412, column: 35, scope: !6757)
!6760 = !DILocation(line: 412, column: 25, scope: !6757)
!6761 = !DILocation(line: 413, column: 21, scope: !6757)
!6762 = !DILocation(line: 414, column: 17, scope: !6753)
!6763 = !DILocation(line: 406, column: 61, scope: !6764)
!6764 = !DILexicalBlockFile(scope: !6746, file: !1008, discriminator: 2)
!6765 = !DILocation(line: 406, column: 17, scope: !6764)
!6766 = distinct !{!6766, !6767}
!6767 = !DILocation(line: 406, column: 17, scope: !6742)
!6768 = !DILocation(line: 415, column: 13, scope: !6742)
!6769 = !DILocation(line: 417, column: 27, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6682, file: !1008, line: 417, column: 17)
!6771 = !DILocation(line: 417, column: 17, scope: !6770)
!6772 = !DILocation(line: 417, column: 17, scope: !6682)
!6773 = !DILocation(line: 418, column: 26, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !1008, line: 418, column: 17)
!6775 = distinct !DILexicalBlock(scope: !6770, file: !1008, line: 417, column: 33)
!6776 = !DILocation(line: 418, column: 22, scope: !6774)
!6777 = !DILocation(line: 418, column: 31, scope: !6778)
!6778 = !DILexicalBlockFile(scope: !6779, file: !1008, discriminator: 1)
!6779 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 418, column: 17)
!6780 = !DILocation(line: 418, column: 37, scope: !6778)
!6781 = !DILocation(line: 418, column: 40, scope: !6778)
!6782 = !DILocation(line: 418, column: 35, scope: !6778)
!6783 = !DILocation(line: 418, column: 17, scope: !6778)
!6784 = !DILocation(line: 419, column: 25, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !1008, line: 419, column: 25)
!6786 = distinct !DILexicalBlock(scope: !6779, file: !1008, line: 418, column: 59)
!6787 = !DILocation(line: 419, column: 28, scope: !6785)
!6788 = !DILocation(line: 419, column: 39, scope: !6785)
!6789 = !DILocation(line: 419, column: 44, scope: !6785)
!6790 = !DILocation(line: 419, column: 57, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6785, file: !1008, discriminator: 1)
!6792 = !DILocation(line: 419, column: 47, scope: !6791)
!6793 = !DILocation(line: 419, column: 25, scope: !6791)
!6794 = !DILocation(line: 420, column: 35, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6785, file: !1008, line: 419, column: 63)
!6796 = !DILocation(line: 420, column: 25, scope: !6795)
!6797 = !DILocation(line: 421, column: 21, scope: !6795)
!6798 = !DILocation(line: 422, column: 17, scope: !6786)
!6799 = !DILocation(line: 418, column: 55, scope: !6800)
!6800 = !DILexicalBlockFile(scope: !6779, file: !1008, discriminator: 2)
!6801 = !DILocation(line: 418, column: 17, scope: !6800)
!6802 = distinct !{!6802, !6803}
!6803 = !DILocation(line: 418, column: 17, scope: !6775)
!6804 = !DILocation(line: 423, column: 13, scope: !6775)
!6805 = !DILocation(line: 424, column: 9, scope: !6682)
!6806 = !DILocation(line: 425, column: 5, scope: !6299)
!6807 = !DILocation(line: 428, column: 19, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 428, column: 9)
!6809 = !DILocation(line: 428, column: 9, scope: !6808)
!6810 = !DILocation(line: 428, column: 9, scope: !6291)
!6811 = !DILocation(line: 429, column: 38, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !1008, line: 428, column: 25)
!6813 = !DILocation(line: 429, column: 29, scope: !6812)
!6814 = !DILocation(line: 429, column: 9, scope: !6812)
!6815 = !DILocation(line: 429, column: 12, scope: !6812)
!6816 = !DILocation(line: 429, column: 27, scope: !6812)
!6817 = !DILocation(line: 430, column: 19, scope: !6812)
!6818 = !DILocation(line: 430, column: 9, scope: !6812)
!6819 = !DILocation(line: 431, column: 13, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6812, file: !1008, line: 431, column: 13)
!6821 = !DILocation(line: 431, column: 16, scope: !6820)
!6822 = !DILocation(line: 431, column: 29, scope: !6820)
!6823 = !DILocation(line: 431, column: 13, scope: !6812)
!6824 = !DILocation(line: 432, column: 47, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6820, file: !1008, line: 431, column: 51)
!6826 = !DILocation(line: 432, column: 38, scope: !6825)
!6827 = !DILocation(line: 432, column: 13, scope: !6825)
!6828 = !DILocation(line: 432, column: 16, scope: !6825)
!6829 = !DILocation(line: 432, column: 36, scope: !6825)
!6830 = !DILocation(line: 433, column: 48, scope: !6825)
!6831 = !DILocation(line: 433, column: 39, scope: !6825)
!6832 = !DILocation(line: 433, column: 13, scope: !6825)
!6833 = !DILocation(line: 433, column: 16, scope: !6825)
!6834 = !DILocation(line: 433, column: 37, scope: !6825)
!6835 = !DILocation(line: 434, column: 9, scope: !6825)
!6836 = !DILocation(line: 435, column: 13, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6812, file: !1008, line: 435, column: 13)
!6838 = !DILocation(line: 435, column: 16, scope: !6837)
!6839 = !DILocation(line: 435, column: 29, scope: !6837)
!6840 = !DILocation(line: 435, column: 13, scope: !6812)
!6841 = !DILocation(line: 436, column: 50, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !1008, line: 435, column: 49)
!6843 = !DILocation(line: 436, column: 41, scope: !6842)
!6844 = !DILocation(line: 436, column: 13, scope: !6842)
!6845 = !DILocation(line: 436, column: 16, scope: !6842)
!6846 = !DILocation(line: 436, column: 39, scope: !6842)
!6847 = !DILocation(line: 437, column: 9, scope: !6842)
!6848 = !DILocation(line: 438, column: 16, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6812, file: !1008, line: 438, column: 9)
!6850 = !DILocation(line: 438, column: 14, scope: !6849)
!6851 = !DILocation(line: 438, column: 21, scope: !6852)
!6852 = !DILexicalBlockFile(scope: !6853, file: !1008, discriminator: 1)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !1008, line: 438, column: 9)
!6854 = !DILocation(line: 438, column: 26, scope: !6852)
!6855 = !DILocation(line: 438, column: 29, scope: !6852)
!6856 = !DILocation(line: 438, column: 23, scope: !6852)
!6857 = !DILocation(line: 438, column: 9, scope: !6852)
!6858 = !DILocation(line: 439, column: 27, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !1008, line: 439, column: 17)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !1008, line: 438, column: 57)
!6861 = !DILocation(line: 439, column: 17, scope: !6859)
!6862 = !DILocation(line: 439, column: 17, scope: !6860)
!6863 = !DILocation(line: 440, column: 27, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6859, file: !1008, line: 439, column: 33)
!6865 = !DILocation(line: 440, column: 17, scope: !6864)
!6866 = !DILocation(line: 441, column: 13, scope: !6864)
!6867 = !DILocation(line: 442, column: 9, scope: !6860)
!6868 = !DILocation(line: 438, column: 53, scope: !6869)
!6869 = !DILexicalBlockFile(scope: !6853, file: !1008, discriminator: 2)
!6870 = !DILocation(line: 438, column: 9, scope: !6869)
!6871 = distinct !{!6871, !6872}
!6872 = !DILocation(line: 438, column: 9, scope: !6812)
!6873 = !DILocation(line: 443, column: 13, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6812, file: !1008, line: 443, column: 13)
!6875 = !DILocation(line: 443, column: 16, scope: !6874)
!6876 = !DILocation(line: 443, column: 33, scope: !6874)
!6877 = !DILocation(line: 443, column: 41, scope: !6874)
!6878 = !DILocation(line: 443, column: 13, scope: !6812)
!6879 = !DILocation(line: 444, column: 24, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6874, file: !1008, line: 443, column: 47)
!6881 = !DILocation(line: 444, column: 13, scope: !6880)
!6882 = !DILocation(line: 445, column: 9, scope: !6880)
!6883 = !DILocation(line: 446, column: 5, scope: !6812)
!6884 = !DILocation(line: 452, column: 9, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 452, column: 9)
!6886 = !DILocation(line: 452, column: 12, scope: !6885)
!6887 = !DILocation(line: 452, column: 23, scope: !6885)
!6888 = !DILocation(line: 452, column: 54, scope: !6885)
!6889 = !DILocation(line: 452, column: 57, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6885, file: !1008, discriminator: 1)
!6891 = !DILocation(line: 452, column: 60, scope: !6890)
!6892 = !DILocation(line: 452, column: 71, scope: !6890)
!6893 = !DILocation(line: 452, column: 9, scope: !6890)
!6894 = !DILocation(line: 453, column: 20, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6885, file: !1008, line: 452, column: 77)
!6896 = !DILocation(line: 453, column: 9, scope: !6895)
!6897 = !DILocation(line: 454, column: 5, scope: !6895)
!6898 = !DILocation(line: 457, column: 9, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 457, column: 9)
!6900 = !DILocation(line: 457, column: 12, scope: !6899)
!6901 = !DILocation(line: 457, column: 23, scope: !6899)
!6902 = !DILocation(line: 457, column: 54, scope: !6899)
!6903 = !DILocation(line: 458, column: 14, scope: !6899)
!6904 = !DILocation(line: 458, column: 17, scope: !6899)
!6905 = !DILocation(line: 458, column: 28, scope: !6899)
!6906 = !DILocation(line: 458, column: 33, scope: !6899)
!6907 = !DILocation(line: 458, column: 46, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !6899, file: !1008, discriminator: 1)
!6909 = !DILocation(line: 458, column: 36, scope: !6908)
!6910 = !DILocation(line: 457, column: 9, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !6291, file: !1008, discriminator: 1)
!6912 = !DILocation(line: 459, column: 19, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6899, file: !1008, line: 458, column: 53)
!6914 = !DILocation(line: 459, column: 9, scope: !6913)
!6915 = !DILocation(line: 460, column: 5, scope: !6913)
!6916 = !DILocation(line: 463, column: 19, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 463, column: 9)
!6918 = !DILocation(line: 463, column: 9, scope: !6917)
!6919 = !DILocation(line: 463, column: 9, scope: !6291)
!6920 = !DILocalVariable(name: "addbsil", scope: !6921, file: !1008, line: 464, type: !1015)
!6921 = distinct !DILexicalBlock(scope: !6917, file: !1008, line: 463, column: 25)
!6922 = !DILocation(line: 464, column: 13, scope: !6921)
!6923 = !DILocation(line: 464, column: 32, scope: !6921)
!6924 = !DILocation(line: 464, column: 23, scope: !6921)
!6925 = !DILocation(line: 465, column: 16, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6921, file: !1008, line: 465, column: 9)
!6927 = !DILocation(line: 465, column: 14, scope: !6926)
!6928 = !DILocation(line: 465, column: 21, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !6930, file: !1008, discriminator: 1)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !1008, line: 465, column: 9)
!6931 = !DILocation(line: 465, column: 25, scope: !6929)
!6932 = !DILocation(line: 465, column: 33, scope: !6929)
!6933 = !DILocation(line: 465, column: 23, scope: !6929)
!6934 = !DILocation(line: 465, column: 9, scope: !6929)
!6935 = !DILocation(line: 466, column: 23, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6930, file: !1008, line: 465, column: 43)
!6937 = !DILocation(line: 466, column: 13, scope: !6936)
!6938 = !DILocation(line: 467, column: 9, scope: !6936)
!6939 = !DILocation(line: 465, column: 39, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6930, file: !1008, discriminator: 2)
!6941 = !DILocation(line: 465, column: 9, scope: !6940)
!6942 = distinct !{!6942, !6943}
!6943 = !DILocation(line: 465, column: 9, scope: !6921)
!6944 = !DILocation(line: 468, column: 5, scope: !6921)
!6945 = !DILocation(line: 472, column: 9, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 472, column: 9)
!6947 = !DILocation(line: 472, column: 12, scope: !6946)
!6948 = !DILocation(line: 472, column: 23, scope: !6946)
!6949 = !DILocation(line: 472, column: 9, scope: !6291)
!6950 = !DILocation(line: 473, column: 43, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6946, file: !1008, line: 472, column: 29)
!6952 = !DILocation(line: 473, column: 33, scope: !6951)
!6953 = !DILocation(line: 473, column: 31, scope: !6951)
!6954 = !DILocation(line: 474, column: 36, scope: !6951)
!6955 = !DILocation(line: 474, column: 26, scope: !6951)
!6956 = !DILocation(line: 474, column: 24, scope: !6951)
!6957 = !DILocation(line: 475, column: 5, scope: !6951)
!6958 = !DILocation(line: 478, column: 31, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6946, file: !1008, line: 475, column: 12)
!6960 = !DILocation(line: 479, column: 24, scope: !6959)
!6961 = !DILocation(line: 482, column: 39, scope: !6291)
!6962 = !DILocation(line: 482, column: 30, scope: !6291)
!6963 = !DILocation(line: 482, column: 5, scope: !6291)
!6964 = !DILocation(line: 482, column: 8, scope: !6291)
!6965 = !DILocation(line: 482, column: 28, scope: !6291)
!6966 = !DILocation(line: 483, column: 43, scope: !6291)
!6967 = !DILocation(line: 483, column: 33, scope: !6291)
!6968 = !DILocation(line: 483, column: 31, scope: !6291)
!6969 = !DILocation(line: 485, column: 40, scope: !6291)
!6970 = !DILocation(line: 485, column: 30, scope: !6291)
!6971 = !DILocation(line: 485, column: 5, scope: !6291)
!6972 = !DILocation(line: 485, column: 8, scope: !6291)
!6973 = !DILocation(line: 485, column: 28, scope: !6291)
!6974 = !DILocation(line: 486, column: 10, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 486, column: 9)
!6976 = !DILocation(line: 486, column: 13, scope: !6975)
!6977 = !DILocation(line: 486, column: 9, scope: !6291)
!6978 = !DILocation(line: 487, column: 16, scope: !6975)
!6979 = !DILocation(line: 487, column: 19, scope: !6975)
!6980 = !DILocation(line: 487, column: 9, scope: !6975)
!6981 = !DILocation(line: 489, column: 39, scope: !6291)
!6982 = !DILocation(line: 489, column: 29, scope: !6291)
!6983 = !DILocation(line: 489, column: 5, scope: !6291)
!6984 = !DILocation(line: 489, column: 8, scope: !6291)
!6985 = !DILocation(line: 489, column: 27, scope: !6291)
!6986 = !DILocation(line: 490, column: 10, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 490, column: 9)
!6988 = !DILocation(line: 490, column: 13, scope: !6987)
!6989 = !DILocation(line: 490, column: 9, scope: !6291)
!6990 = !DILocation(line: 491, column: 17, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !1008, line: 491, column: 9)
!6992 = distinct !DILexicalBlock(scope: !6987, file: !1008, line: 490, column: 33)
!6993 = !DILocation(line: 491, column: 14, scope: !6991)
!6994 = !DILocation(line: 491, column: 22, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !6996, file: !1008, discriminator: 1)
!6996 = distinct !DILexicalBlock(scope: !6991, file: !1008, line: 491, column: 9)
!6997 = !DILocation(line: 491, column: 28, scope: !6995)
!6998 = !DILocation(line: 491, column: 31, scope: !6995)
!6999 = !DILocation(line: 491, column: 25, scope: !6995)
!7000 = !DILocation(line: 491, column: 9, scope: !6995)
!7001 = !DILocation(line: 492, column: 28, scope: !6996)
!7002 = !DILocation(line: 492, column: 13, scope: !6996)
!7003 = !DILocation(line: 492, column: 16, scope: !6996)
!7004 = !DILocation(line: 492, column: 32, scope: !6996)
!7005 = !DILocation(line: 491, column: 47, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !6996, file: !1008, discriminator: 2)
!7007 = !DILocation(line: 491, column: 9, scope: !7006)
!7008 = distinct !{!7008, !7009}
!7009 = !DILocation(line: 491, column: 9, scope: !6992)
!7010 = !DILocation(line: 493, column: 5, scope: !6992)
!7011 = !DILocation(line: 494, column: 40, scope: !6291)
!7012 = !DILocation(line: 494, column: 43, scope: !6291)
!7013 = !DILocation(line: 494, column: 25, scope: !6291)
!7014 = !DILocation(line: 494, column: 28, scope: !6291)
!7015 = !DILocation(line: 494, column: 51, scope: !6291)
!7016 = !DILocation(line: 494, column: 5, scope: !6291)
!7017 = !DILocation(line: 494, column: 8, scope: !6291)
!7018 = !DILocation(line: 494, column: 23, scope: !6291)
!7019 = !DILocation(line: 496, column: 42, scope: !6291)
!7020 = !DILocation(line: 496, column: 32, scope: !6291)
!7021 = !DILocation(line: 496, column: 5, scope: !6291)
!7022 = !DILocation(line: 496, column: 8, scope: !6291)
!7023 = !DILocation(line: 496, column: 30, scope: !6291)
!7024 = !DILocation(line: 497, column: 10, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 497, column: 9)
!7026 = !DILocation(line: 497, column: 13, scope: !7025)
!7027 = !DILocation(line: 497, column: 9, scope: !6291)
!7028 = !DILocation(line: 499, column: 42, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7025, file: !1008, line: 497, column: 36)
!7030 = !DILocation(line: 499, column: 9, scope: !7029)
!7031 = !DILocation(line: 499, column: 12, scope: !7029)
!7032 = !DILocation(line: 499, column: 29, scope: !7029)
!7033 = !DILocation(line: 499, column: 40, scope: !7029)
!7034 = !DILocation(line: 500, column: 42, scope: !7029)
!7035 = !DILocation(line: 500, column: 9, scope: !7029)
!7036 = !DILocation(line: 500, column: 12, scope: !7029)
!7037 = !DILocation(line: 500, column: 29, scope: !7029)
!7038 = !DILocation(line: 500, column: 40, scope: !7029)
!7039 = !DILocation(line: 501, column: 41, scope: !7029)
!7040 = !DILocation(line: 501, column: 9, scope: !7029)
!7041 = !DILocation(line: 501, column: 12, scope: !7029)
!7042 = !DILocation(line: 501, column: 29, scope: !7029)
!7043 = !DILocation(line: 501, column: 39, scope: !7029)
!7044 = !DILocation(line: 502, column: 42, scope: !7029)
!7045 = !DILocation(line: 502, column: 9, scope: !7029)
!7046 = !DILocation(line: 502, column: 12, scope: !7029)
!7047 = !DILocation(line: 502, column: 29, scope: !7029)
!7048 = !DILocation(line: 502, column: 40, scope: !7029)
!7049 = !DILocation(line: 503, column: 37, scope: !7029)
!7050 = !DILocation(line: 503, column: 9, scope: !7029)
!7051 = !DILocation(line: 503, column: 12, scope: !7029)
!7052 = !DILocation(line: 503, column: 29, scope: !7029)
!7053 = !DILocation(line: 503, column: 35, scope: !7029)
!7054 = !DILocation(line: 504, column: 5, scope: !7029)
!7055 = !DILocation(line: 506, column: 37, scope: !6291)
!7056 = !DILocation(line: 506, column: 27, scope: !6291)
!7057 = !DILocation(line: 506, column: 5, scope: !6291)
!7058 = !DILocation(line: 506, column: 8, scope: !6291)
!7059 = !DILocation(line: 506, column: 25, scope: !6291)
!7060 = !DILocation(line: 507, column: 31, scope: !6291)
!7061 = !DILocation(line: 507, column: 21, scope: !6291)
!7062 = !DILocation(line: 507, column: 5, scope: !6291)
!7063 = !DILocation(line: 507, column: 8, scope: !6291)
!7064 = !DILocation(line: 507, column: 19, scope: !6291)
!7065 = !DILocation(line: 508, column: 32, scope: !6291)
!7066 = !DILocation(line: 508, column: 22, scope: !6291)
!7067 = !DILocation(line: 508, column: 5, scope: !6291)
!7068 = !DILocation(line: 508, column: 8, scope: !6291)
!7069 = !DILocation(line: 508, column: 20, scope: !6291)
!7070 = !DILocation(line: 509, column: 38, scope: !6291)
!7071 = !DILocation(line: 509, column: 28, scope: !6291)
!7072 = !DILocation(line: 509, column: 26, scope: !6291)
!7073 = !DILocation(line: 512, column: 20, scope: !6291)
!7074 = !DILocation(line: 513, column: 9, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 513, column: 9)
!7076 = !DILocation(line: 513, column: 12, scope: !7075)
!7077 = !DILocation(line: 513, column: 25, scope: !7075)
!7078 = !DILocation(line: 513, column: 9, scope: !6291)
!7079 = !DILocation(line: 514, column: 18, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !1008, line: 514, column: 9)
!7081 = distinct !DILexicalBlock(scope: !7075, file: !1008, line: 513, column: 30)
!7082 = !DILocation(line: 514, column: 14, scope: !7080)
!7083 = !DILocation(line: 514, column: 23, scope: !7084)
!7084 = !DILexicalBlockFile(scope: !7085, file: !1008, discriminator: 1)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !1008, line: 514, column: 9)
!7086 = !DILocation(line: 514, column: 29, scope: !7084)
!7087 = !DILocation(line: 514, column: 32, scope: !7084)
!7088 = !DILocation(line: 514, column: 27, scope: !7084)
!7089 = !DILocation(line: 514, column: 9, scope: !7084)
!7090 = !DILocation(line: 515, column: 45, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7085, file: !1008, line: 514, column: 51)
!7092 = !DILocation(line: 515, column: 49, scope: !7091)
!7093 = !DILocation(line: 515, column: 62, scope: !7094)
!7094 = !DILexicalBlockFile(scope: !7091, file: !1008, discriminator: 1)
!7095 = !DILocation(line: 515, column: 52, scope: !7094)
!7096 = !DILocation(line: 515, column: 49, scope: !7094)
!7097 = !DILocation(line: 515, column: 49, scope: !7098)
!7098 = !DILexicalBlockFile(scope: !7091, file: !1008, discriminator: 2)
!7099 = !DILocation(line: 515, column: 36, scope: !7098)
!7100 = !DILocation(line: 515, column: 13, scope: !7098)
!7101 = !DILocation(line: 515, column: 16, scope: !7098)
!7102 = !DILocation(line: 515, column: 41, scope: !7098)
!7103 = !DILocation(line: 516, column: 40, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7091, file: !1008, line: 516, column: 17)
!7105 = !DILocation(line: 516, column: 17, scope: !7104)
!7106 = !DILocation(line: 516, column: 20, scope: !7104)
!7107 = !DILocation(line: 516, column: 17, scope: !7091)
!7108 = !DILocation(line: 517, column: 48, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7104, file: !1008, line: 516, column: 46)
!7110 = !DILocation(line: 517, column: 38, scope: !7109)
!7111 = !DILocation(line: 517, column: 31, scope: !7109)
!7112 = !DILocation(line: 517, column: 17, scope: !7109)
!7113 = !DILocation(line: 517, column: 20, scope: !7109)
!7114 = !DILocation(line: 517, column: 36, scope: !7109)
!7115 = !DILocation(line: 518, column: 13, scope: !7109)
!7116 = !DILocation(line: 519, column: 52, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7104, file: !1008, line: 518, column: 20)
!7118 = !DILocation(line: 519, column: 55, scope: !7117)
!7119 = !DILocation(line: 519, column: 38, scope: !7117)
!7120 = !DILocation(line: 519, column: 41, scope: !7117)
!7121 = !DILocation(line: 519, column: 31, scope: !7117)
!7122 = !DILocation(line: 519, column: 17, scope: !7117)
!7123 = !DILocation(line: 519, column: 20, scope: !7117)
!7124 = !DILocation(line: 519, column: 36, scope: !7117)
!7125 = !DILocation(line: 521, column: 45, scope: !7091)
!7126 = !DILocation(line: 521, column: 31, scope: !7091)
!7127 = !DILocation(line: 521, column: 34, scope: !7091)
!7128 = !DILocation(line: 521, column: 28, scope: !7091)
!7129 = !DILocation(line: 522, column: 9, scope: !7091)
!7130 = !DILocation(line: 514, column: 47, scope: !7131)
!7131 = !DILexicalBlockFile(scope: !7085, file: !1008, discriminator: 2)
!7132 = !DILocation(line: 514, column: 9, scope: !7131)
!7133 = distinct !{!7133, !7134}
!7134 = !DILocation(line: 514, column: 9, scope: !7081)
!7135 = !DILocation(line: 523, column: 5, scope: !7081)
!7136 = !DILocation(line: 524, column: 16, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7075, file: !1008, line: 523, column: 12)
!7138 = !DILocation(line: 524, column: 19, scope: !7137)
!7139 = !DILocation(line: 524, column: 9, scope: !7137)
!7140 = !DILocation(line: 528, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 528, column: 9)
!7142 = !DILocation(line: 528, column: 9, scope: !6291)
!7143 = !DILocation(line: 530, column: 18, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !1008, line: 530, column: 9)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !1008, line: 528, column: 32)
!7146 = !DILocation(line: 530, column: 14, scope: !7144)
!7147 = !DILocation(line: 530, column: 23, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !7149, file: !1008, discriminator: 1)
!7149 = distinct !DILexicalBlock(scope: !7144, file: !1008, line: 530, column: 9)
!7150 = !DILocation(line: 530, column: 29, scope: !7148)
!7151 = !DILocation(line: 530, column: 32, scope: !7148)
!7152 = !DILocation(line: 530, column: 27, scope: !7148)
!7153 = !DILocation(line: 530, column: 9, scope: !7148)
!7154 = !DILocation(line: 531, column: 38, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !1008, line: 531, column: 13)
!7156 = distinct !DILexicalBlock(scope: !7149, file: !1008, line: 530, column: 51)
!7157 = !DILocation(line: 531, column: 24, scope: !7155)
!7158 = !DILocation(line: 531, column: 27, scope: !7155)
!7159 = !DILocation(line: 531, column: 23, scope: !7155)
!7160 = !DILocation(line: 531, column: 21, scope: !7155)
!7161 = !DILocation(line: 531, column: 18, scope: !7155)
!7162 = !DILocation(line: 531, column: 44, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !7164, file: !1008, discriminator: 1)
!7164 = distinct !DILexicalBlock(scope: !7155, file: !1008, line: 531, column: 13)
!7165 = !DILocation(line: 531, column: 50, scope: !7163)
!7166 = !DILocation(line: 531, column: 53, scope: !7163)
!7167 = !DILocation(line: 531, column: 47, scope: !7163)
!7168 = !DILocation(line: 531, column: 13, scope: !7163)
!7169 = !DILocation(line: 532, column: 53, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7164, file: !1008, line: 531, column: 73)
!7171 = !DILocation(line: 532, column: 44, scope: !7170)
!7172 = !DILocation(line: 532, column: 38, scope: !7170)
!7173 = !DILocation(line: 532, column: 17, scope: !7170)
!7174 = !DILocation(line: 532, column: 33, scope: !7170)
!7175 = !DILocation(line: 532, column: 20, scope: !7170)
!7176 = !DILocation(line: 532, column: 42, scope: !7170)
!7177 = !DILocation(line: 533, column: 13, scope: !7170)
!7178 = !DILocation(line: 531, column: 69, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !7164, file: !1008, discriminator: 2)
!7180 = !DILocation(line: 531, column: 13, scope: !7179)
!7181 = distinct !{!7181, !7182}
!7182 = !DILocation(line: 531, column: 13, scope: !7156)
!7183 = !DILocation(line: 534, column: 9, scope: !7156)
!7184 = !DILocation(line: 530, column: 47, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !7149, file: !1008, discriminator: 2)
!7186 = !DILocation(line: 530, column: 9, scope: !7185)
!7187 = distinct !{!7187, !7188}
!7188 = !DILocation(line: 530, column: 9, scope: !7145)
!7189 = !DILocation(line: 535, column: 5, scope: !7145)
!7190 = !DILocation(line: 537, column: 22, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !1008, line: 537, column: 9)
!7192 = distinct !DILexicalBlock(scope: !7141, file: !1008, line: 535, column: 12)
!7193 = !DILocation(line: 537, column: 25, scope: !7191)
!7194 = !DILocation(line: 537, column: 38, scope: !7191)
!7195 = !DILocation(line: 537, column: 43, scope: !7191)
!7196 = !DILocation(line: 537, column: 46, scope: !7197)
!7197 = !DILexicalBlockFile(scope: !7191, file: !1008, discriminator: 1)
!7198 = !DILocation(line: 537, column: 43, scope: !7197)
!7199 = !DILocation(line: 537, column: 19, scope: !7200)
!7200 = !DILexicalBlockFile(scope: !7191, file: !1008, discriminator: 2)
!7201 = !DILocation(line: 537, column: 17, scope: !7200)
!7202 = !DILocation(line: 537, column: 14, scope: !7200)
!7203 = !DILocation(line: 537, column: 63, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !7205, file: !1008, discriminator: 3)
!7205 = distinct !DILexicalBlock(scope: !7191, file: !1008, line: 537, column: 9)
!7206 = !DILocation(line: 537, column: 69, scope: !7204)
!7207 = !DILocation(line: 537, column: 72, scope: !7204)
!7208 = !DILocation(line: 537, column: 66, scope: !7204)
!7209 = !DILocation(line: 537, column: 9, scope: !7204)
!7210 = !DILocalVariable(name: "frmchexpstr", scope: !7211, file: !1008, line: 538, type: !1015)
!7211 = distinct !DILexicalBlock(scope: !7205, file: !1008, line: 537, column: 92)
!7212 = !DILocation(line: 538, column: 17, scope: !7211)
!7213 = !DILocation(line: 538, column: 40, scope: !7211)
!7214 = !DILocation(line: 538, column: 31, scope: !7211)
!7215 = !DILocation(line: 539, column: 22, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7211, file: !1008, line: 539, column: 13)
!7217 = !DILocation(line: 539, column: 18, scope: !7216)
!7218 = !DILocation(line: 539, column: 27, scope: !7219)
!7219 = !DILexicalBlockFile(scope: !7220, file: !1008, discriminator: 1)
!7220 = distinct !DILexicalBlock(scope: !7216, file: !1008, line: 539, column: 13)
!7221 = !DILocation(line: 539, column: 31, scope: !7219)
!7222 = !DILocation(line: 539, column: 13, scope: !7219)
!7223 = !DILocation(line: 540, column: 76, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !1008, line: 539, column: 43)
!7225 = !DILocation(line: 540, column: 44, scope: !7224)
!7226 = !DILocation(line: 540, column: 63, scope: !7224)
!7227 = !DILocation(line: 540, column: 38, scope: !7224)
!7228 = !DILocation(line: 540, column: 17, scope: !7224)
!7229 = !DILocation(line: 540, column: 33, scope: !7224)
!7230 = !DILocation(line: 540, column: 20, scope: !7224)
!7231 = !DILocation(line: 540, column: 42, scope: !7224)
!7232 = !DILocation(line: 541, column: 13, scope: !7224)
!7233 = !DILocation(line: 539, column: 39, scope: !7234)
!7234 = !DILexicalBlockFile(scope: !7220, file: !1008, discriminator: 2)
!7235 = !DILocation(line: 539, column: 13, scope: !7234)
!7236 = distinct !{!7236, !7237}
!7237 = !DILocation(line: 539, column: 13, scope: !7211)
!7238 = !DILocation(line: 542, column: 9, scope: !7211)
!7239 = !DILocation(line: 537, column: 88, scope: !7240)
!7240 = !DILexicalBlockFile(scope: !7205, file: !1008, discriminator: 4)
!7241 = !DILocation(line: 537, column: 9, scope: !7240)
!7242 = distinct !{!7242, !7243}
!7243 = !DILocation(line: 537, column: 9, scope: !7192)
!7244 = !DILocation(line: 545, column: 9, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 545, column: 9)
!7246 = !DILocation(line: 545, column: 12, scope: !7245)
!7247 = !DILocation(line: 545, column: 9, scope: !6291)
!7248 = !DILocation(line: 546, column: 18, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !1008, line: 546, column: 9)
!7250 = distinct !DILexicalBlock(scope: !7245, file: !1008, line: 545, column: 20)
!7251 = !DILocation(line: 546, column: 14, scope: !7249)
!7252 = !DILocation(line: 546, column: 23, scope: !7253)
!7253 = !DILexicalBlockFile(scope: !7254, file: !1008, discriminator: 1)
!7254 = distinct !DILexicalBlock(scope: !7249, file: !1008, line: 546, column: 9)
!7255 = !DILocation(line: 546, column: 29, scope: !7253)
!7256 = !DILocation(line: 546, column: 32, scope: !7253)
!7257 = !DILocation(line: 546, column: 27, scope: !7253)
!7258 = !DILocation(line: 546, column: 9, scope: !7253)
!7259 = !DILocation(line: 547, column: 57, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7254, file: !1008, line: 546, column: 51)
!7261 = !DILocation(line: 547, column: 47, scope: !7260)
!7262 = !DILocation(line: 547, column: 34, scope: !7260)
!7263 = !DILocation(line: 547, column: 37, scope: !7260)
!7264 = !DILocation(line: 547, column: 13, scope: !7260)
!7265 = !DILocation(line: 547, column: 29, scope: !7260)
!7266 = !DILocation(line: 547, column: 16, scope: !7260)
!7267 = !DILocation(line: 547, column: 45, scope: !7260)
!7268 = !DILocation(line: 548, column: 9, scope: !7260)
!7269 = !DILocation(line: 546, column: 47, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !7254, file: !1008, discriminator: 2)
!7271 = !DILocation(line: 546, column: 9, scope: !7270)
!7272 = distinct !{!7272, !7273}
!7273 = !DILocation(line: 546, column: 9, scope: !7250)
!7274 = !DILocation(line: 549, column: 5, scope: !7250)
!7275 = !DILocation(line: 551, column: 9, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 551, column: 9)
!7277 = !DILocation(line: 551, column: 12, scope: !7276)
!7278 = !DILocation(line: 551, column: 23, scope: !7276)
!7279 = !DILocation(line: 551, column: 54, scope: !7276)
!7280 = !DILocation(line: 552, column: 14, scope: !7276)
!7281 = !DILocation(line: 552, column: 17, scope: !7276)
!7282 = !DILocation(line: 552, column: 28, scope: !7276)
!7283 = !DILocation(line: 552, column: 33, scope: !7276)
!7284 = !DILocation(line: 552, column: 46, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7276, file: !1008, discriminator: 1)
!7286 = !DILocation(line: 552, column: 36, scope: !7285)
!7287 = !DILocation(line: 551, column: 9, scope: !6911)
!7288 = !DILocation(line: 553, column: 19, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7276, file: !1008, line: 552, column: 53)
!7290 = !DILocation(line: 553, column: 28, scope: !7289)
!7291 = !DILocation(line: 553, column: 31, scope: !7289)
!7292 = !DILocation(line: 553, column: 26, scope: !7289)
!7293 = !DILocation(line: 553, column: 9, scope: !7289)
!7294 = !DILocation(line: 554, column: 5, scope: !7289)
!7295 = !DILocation(line: 557, column: 9, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 557, column: 9)
!7297 = !DILocation(line: 557, column: 9, scope: !6291)
!7298 = !DILocation(line: 562, column: 9, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !1008, line: 557, column: 25)
!7300 = !DILocation(line: 562, column: 12, scope: !7299)
!7301 = !DILocation(line: 562, column: 31, scope: !7299)
!7302 = !DILocation(line: 563, column: 20, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !1008, line: 563, column: 9)
!7304 = !DILocation(line: 563, column: 35, scope: !7303)
!7305 = !DILocation(line: 563, column: 17, scope: !7303)
!7306 = !DILocation(line: 563, column: 14, scope: !7303)
!7307 = !DILocation(line: 563, column: 42, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7309, file: !1008, discriminator: 1)
!7309 = distinct !DILexicalBlock(scope: !7303, file: !1008, line: 563, column: 9)
!7310 = !DILocation(line: 563, column: 48, scope: !7308)
!7311 = !DILocation(line: 563, column: 51, scope: !7308)
!7312 = !DILocation(line: 563, column: 45, scope: !7308)
!7313 = !DILocation(line: 563, column: 9, scope: !7308)
!7314 = !DILocalVariable(name: "use_aht", scope: !7315, file: !1008, line: 564, type: !1015)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !1008, line: 563, column: 67)
!7316 = !DILocation(line: 564, column: 17, scope: !7315)
!7317 = !DILocation(line: 565, column: 22, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7315, file: !1008, line: 565, column: 13)
!7319 = !DILocation(line: 565, column: 18, scope: !7318)
!7320 = !DILocation(line: 565, column: 27, scope: !7321)
!7321 = !DILexicalBlockFile(scope: !7322, file: !1008, discriminator: 1)
!7322 = distinct !DILexicalBlock(scope: !7318, file: !1008, line: 565, column: 13)
!7323 = !DILocation(line: 565, column: 31, scope: !7321)
!7324 = !DILocation(line: 565, column: 13, scope: !7321)
!7325 = !DILocation(line: 566, column: 43, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7327, file: !1008, line: 566, column: 21)
!7327 = distinct !DILexicalBlock(scope: !7322, file: !1008, line: 565, column: 43)
!7328 = !DILocation(line: 566, column: 22, scope: !7326)
!7329 = !DILocation(line: 566, column: 38, scope: !7326)
!7330 = !DILocation(line: 566, column: 25, scope: !7326)
!7331 = !DILocation(line: 566, column: 47, scope: !7326)
!7332 = !DILocation(line: 566, column: 53, scope: !7326)
!7333 = !DILocation(line: 567, column: 27, scope: !7326)
!7334 = !DILocation(line: 567, column: 30, scope: !7326)
!7335 = !DILocation(line: 567, column: 56, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !7326, file: !1008, discriminator: 1)
!7337 = !DILocation(line: 567, column: 33, scope: !7336)
!7338 = !DILocation(line: 567, column: 36, scope: !7336)
!7339 = !DILocation(line: 566, column: 21, scope: !7340)
!7340 = !DILexicalBlockFile(scope: !7327, file: !1008, discriminator: 1)
!7341 = !DILocation(line: 568, column: 29, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7326, file: !1008, line: 567, column: 63)
!7343 = !DILocation(line: 569, column: 21, scope: !7342)
!7344 = !DILocation(line: 571, column: 13, scope: !7327)
!7345 = !DILocation(line: 565, column: 39, scope: !7346)
!7346 = !DILexicalBlockFile(scope: !7322, file: !1008, discriminator: 2)
!7347 = !DILocation(line: 565, column: 13, scope: !7346)
!7348 = distinct !{!7348, !7349}
!7349 = !DILocation(line: 565, column: 13, scope: !7315)
!7350 = !DILocation(line: 572, column: 39, scope: !7315)
!7351 = !DILocation(line: 572, column: 47, scope: !7315)
!7352 = !DILocation(line: 572, column: 60, scope: !7353)
!7353 = !DILexicalBlockFile(scope: !7315, file: !1008, discriminator: 1)
!7354 = !DILocation(line: 572, column: 50, scope: !7353)
!7355 = !DILocation(line: 572, column: 47, scope: !7353)
!7356 = !DILocation(line: 572, column: 47, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7315, file: !1008, discriminator: 2)
!7358 = !DILocation(line: 572, column: 33, scope: !7357)
!7359 = !DILocation(line: 572, column: 13, scope: !7357)
!7360 = !DILocation(line: 572, column: 16, scope: !7357)
!7361 = !DILocation(line: 572, column: 37, scope: !7357)
!7362 = !DILocation(line: 573, column: 9, scope: !7315)
!7363 = !DILocation(line: 563, column: 63, scope: !7364)
!7364 = !DILexicalBlockFile(scope: !7309, file: !1008, discriminator: 2)
!7365 = !DILocation(line: 563, column: 9, scope: !7364)
!7366 = distinct !{!7366, !7367}
!7367 = !DILocation(line: 563, column: 9, scope: !7299)
!7368 = !DILocation(line: 574, column: 5, scope: !7299)
!7369 = !DILocation(line: 575, column: 16, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7296, file: !1008, line: 574, column: 12)
!7371 = !DILocation(line: 575, column: 19, scope: !7370)
!7372 = !DILocation(line: 575, column: 9, scope: !7370)
!7373 = !DILocation(line: 579, column: 10, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 579, column: 9)
!7375 = !DILocation(line: 579, column: 13, scope: !7374)
!7376 = !DILocation(line: 579, column: 9, scope: !6291)
!7377 = !DILocalVariable(name: "csnroffst", scope: !7378, file: !1008, line: 580, type: !1015)
!7378 = distinct !DILexicalBlock(scope: !7374, file: !1008, line: 579, column: 34)
!7379 = !DILocation(line: 580, column: 13, scope: !7378)
!7380 = !DILocation(line: 580, column: 35, scope: !7378)
!7381 = !DILocation(line: 580, column: 26, scope: !7378)
!7382 = !DILocation(line: 580, column: 43, scope: !7378)
!7383 = !DILocation(line: 580, column: 49, scope: !7378)
!7384 = !DILocalVariable(name: "snroffst", scope: !7378, file: !1008, line: 581, type: !1015)
!7385 = !DILocation(line: 581, column: 13, scope: !7378)
!7386 = !DILocation(line: 581, column: 25, scope: !7378)
!7387 = !DILocation(line: 581, column: 46, scope: !7378)
!7388 = !DILocation(line: 581, column: 37, scope: !7378)
!7389 = !DILocation(line: 581, column: 35, scope: !7378)
!7390 = !DILocation(line: 581, column: 55, scope: !7378)
!7391 = !DILocation(line: 582, column: 17, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7378, file: !1008, line: 582, column: 9)
!7393 = !DILocation(line: 582, column: 14, scope: !7392)
!7394 = !DILocation(line: 582, column: 22, scope: !7395)
!7395 = !DILexicalBlockFile(scope: !7396, file: !1008, discriminator: 1)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !1008, line: 582, column: 9)
!7397 = !DILocation(line: 582, column: 28, scope: !7395)
!7398 = !DILocation(line: 582, column: 31, scope: !7395)
!7399 = !DILocation(line: 582, column: 25, scope: !7395)
!7400 = !DILocation(line: 582, column: 9, scope: !7395)
!7401 = !DILocation(line: 583, column: 33, scope: !7396)
!7402 = !DILocation(line: 583, column: 27, scope: !7396)
!7403 = !DILocation(line: 583, column: 13, scope: !7396)
!7404 = !DILocation(line: 583, column: 16, scope: !7396)
!7405 = !DILocation(line: 583, column: 31, scope: !7396)
!7406 = !DILocation(line: 582, column: 43, scope: !7407)
!7407 = !DILexicalBlockFile(scope: !7396, file: !1008, discriminator: 2)
!7408 = !DILocation(line: 582, column: 9, scope: !7407)
!7409 = distinct !{!7409, !7410}
!7410 = !DILocation(line: 582, column: 9, scope: !7378)
!7411 = !DILocation(line: 584, column: 5, scope: !7378)
!7412 = !DILocation(line: 587, column: 9, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 587, column: 9)
!7414 = !DILocation(line: 587, column: 9, scope: !6291)
!7415 = !DILocation(line: 588, column: 17, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !1008, line: 588, column: 9)
!7417 = distinct !DILexicalBlock(scope: !7413, file: !1008, line: 587, column: 36)
!7418 = !DILocation(line: 588, column: 14, scope: !7416)
!7419 = !DILocation(line: 588, column: 22, scope: !7420)
!7420 = !DILexicalBlockFile(scope: !7421, file: !1008, discriminator: 1)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !1008, line: 588, column: 9)
!7422 = !DILocation(line: 588, column: 28, scope: !7420)
!7423 = !DILocation(line: 588, column: 31, scope: !7420)
!7424 = !DILocation(line: 588, column: 25, scope: !7420)
!7425 = !DILocation(line: 588, column: 9, scope: !7420)
!7426 = !DILocation(line: 589, column: 27, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !1008, line: 589, column: 17)
!7428 = distinct !DILexicalBlock(scope: !7421, file: !1008, line: 588, column: 51)
!7429 = !DILocation(line: 589, column: 17, scope: !7427)
!7430 = !DILocation(line: 589, column: 17, scope: !7428)
!7431 = !DILocation(line: 590, column: 27, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7427, file: !1008, line: 589, column: 33)
!7433 = !DILocation(line: 590, column: 17, scope: !7432)
!7434 = !DILocation(line: 591, column: 27, scope: !7432)
!7435 = !DILocation(line: 591, column: 17, scope: !7432)
!7436 = !DILocation(line: 592, column: 13, scope: !7432)
!7437 = !DILocation(line: 593, column: 9, scope: !7428)
!7438 = !DILocation(line: 588, column: 47, scope: !7439)
!7439 = !DILexicalBlockFile(scope: !7421, file: !1008, discriminator: 2)
!7440 = !DILocation(line: 588, column: 9, scope: !7439)
!7441 = distinct !{!7441, !7442}
!7442 = !DILocation(line: 588, column: 9, scope: !7417)
!7443 = !DILocation(line: 594, column: 5, scope: !7417)
!7444 = !DILocation(line: 597, column: 13, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 597, column: 5)
!7446 = !DILocation(line: 597, column: 10, scope: !7445)
!7447 = !DILocation(line: 597, column: 18, scope: !7448)
!7448 = !DILexicalBlockFile(scope: !7449, file: !1008, discriminator: 1)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !1008, line: 597, column: 5)
!7450 = !DILocation(line: 597, column: 24, scope: !7448)
!7451 = !DILocation(line: 597, column: 27, scope: !7448)
!7452 = !DILocation(line: 597, column: 21, scope: !7448)
!7453 = !DILocation(line: 597, column: 5, scope: !7448)
!7454 = !DILocation(line: 598, column: 13, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !1008, line: 598, column: 13)
!7456 = distinct !DILexicalBlock(scope: !7449, file: !1008, line: 597, column: 47)
!7457 = !DILocation(line: 598, column: 34, scope: !7455)
!7458 = !DILocation(line: 598, column: 47, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7455, file: !1008, discriminator: 1)
!7460 = !DILocation(line: 598, column: 37, scope: !7459)
!7461 = !DILocation(line: 598, column: 13, scope: !7459)
!7462 = !DILocation(line: 599, column: 46, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7455, file: !1008, line: 598, column: 53)
!7464 = !DILocation(line: 599, column: 37, scope: !7463)
!7465 = !DILocation(line: 599, column: 31, scope: !7463)
!7466 = !DILocation(line: 599, column: 13, scope: !7463)
!7467 = !DILocation(line: 599, column: 16, scope: !7463)
!7468 = !DILocation(line: 599, column: 35, scope: !7463)
!7469 = !DILocation(line: 600, column: 9, scope: !7463)
!7470 = !DILocation(line: 601, column: 31, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7455, file: !1008, line: 600, column: 16)
!7472 = !DILocation(line: 601, column: 13, scope: !7471)
!7473 = !DILocation(line: 601, column: 16, scope: !7471)
!7474 = !DILocation(line: 601, column: 35, scope: !7471)
!7475 = !DILocation(line: 603, column: 5, scope: !7456)
!7476 = !DILocation(line: 597, column: 43, scope: !7477)
!7477 = !DILexicalBlockFile(scope: !7449, file: !1008, discriminator: 2)
!7478 = !DILocation(line: 597, column: 5, scope: !7477)
!7479 = distinct !{!7479, !7480}
!7480 = !DILocation(line: 597, column: 5, scope: !6291)
!7481 = !DILocation(line: 606, column: 9, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 606, column: 9)
!7483 = !DILocation(line: 606, column: 12, scope: !7482)
!7484 = !DILocation(line: 606, column: 23, scope: !7482)
!7485 = !DILocation(line: 606, column: 27, scope: !7482)
!7486 = !DILocation(line: 606, column: 40, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7482, file: !1008, discriminator: 1)
!7488 = !DILocation(line: 606, column: 30, scope: !7487)
!7489 = !DILocation(line: 606, column: 9, scope: !7487)
!7490 = !DILocalVariable(name: "block_start_bits", scope: !7491, file: !1008, line: 611, type: !1015)
!7491 = distinct !DILexicalBlock(scope: !7482, file: !1008, line: 606, column: 46)
!7492 = !DILocation(line: 611, column: 13, scope: !7491)
!7493 = !DILocation(line: 611, column: 33, scope: !7491)
!7494 = !DILocation(line: 611, column: 36, scope: !7491)
!7495 = !DILocation(line: 611, column: 46, scope: !7491)
!7496 = !DILocation(line: 611, column: 78, scope: !7491)
!7497 = !DILocation(line: 611, column: 81, scope: !7491)
!7498 = !DILocation(line: 611, column: 91, scope: !7491)
!7499 = !DILocation(line: 611, column: 94, scope: !7491)
!7500 = !DILocation(line: 611, column: 63, scope: !7491)
!7501 = !DILocation(line: 611, column: 61, scope: !7491)
!7502 = !DILocation(line: 611, column: 55, scope: !7491)
!7503 = !DILocation(line: 611, column: 50, scope: !7491)
!7504 = !DILocation(line: 612, column: 24, scope: !7491)
!7505 = !DILocation(line: 612, column: 29, scope: !7491)
!7506 = !DILocation(line: 612, column: 9, scope: !7491)
!7507 = !DILocation(line: 613, column: 31, scope: !7491)
!7508 = !DILocation(line: 613, column: 34, scope: !7491)
!7509 = !DILocation(line: 613, column: 9, scope: !7491)
!7510 = !DILocation(line: 614, column: 5, scope: !7491)
!7511 = !DILocation(line: 617, column: 13, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !6291, file: !1008, line: 617, column: 5)
!7513 = !DILocation(line: 617, column: 10, scope: !7512)
!7514 = !DILocation(line: 617, column: 18, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7516, file: !1008, discriminator: 1)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !1008, line: 617, column: 5)
!7517 = !DILocation(line: 617, column: 24, scope: !7515)
!7518 = !DILocation(line: 617, column: 27, scope: !7515)
!7519 = !DILocation(line: 617, column: 21, scope: !7515)
!7520 = !DILocation(line: 617, column: 5, scope: !7515)
!7521 = !DILocation(line: 618, column: 29, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7516, file: !1008, line: 617, column: 47)
!7523 = !DILocation(line: 618, column: 9, scope: !7522)
!7524 = !DILocation(line: 618, column: 12, scope: !7522)
!7525 = !DILocation(line: 618, column: 33, scope: !7522)
!7526 = !DILocation(line: 619, column: 29, scope: !7522)
!7527 = !DILocation(line: 619, column: 9, scope: !7522)
!7528 = !DILocation(line: 619, column: 12, scope: !7522)
!7529 = !DILocation(line: 619, column: 33, scope: !7522)
!7530 = !DILocation(line: 620, column: 5, scope: !7522)
!7531 = !DILocation(line: 617, column: 43, scope: !7532)
!7532 = !DILexicalBlockFile(scope: !7516, file: !1008, discriminator: 2)
!7533 = !DILocation(line: 617, column: 5, scope: !7532)
!7534 = distinct !{!7534, !7535}
!7535 = !DILocation(line: 617, column: 5, scope: !6291)
!7536 = !DILocation(line: 621, column: 5, scope: !6291)
!7537 = !DILocation(line: 621, column: 8, scope: !6291)
!7538 = !DILocation(line: 621, column: 23, scope: !6291)
!7539 = !DILocation(line: 623, column: 5, scope: !6291)
!7540 = !DILocation(line: 624, column: 1, scope: !6291)
!7541 = distinct !DISubprogram(name: "get_bits", scope: !1862, file: !1862, line: 381, type: !7542, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7542 = !DISubroutineType(types: !7543)
!7543 = !{!1016, !3872, !1015}
!7544 = !DILocalVariable(name: "x", arg: 1, scope: !7545, file: !2353, line: 66, type: !1040)
!7545 = distinct !DISubprogram(name: "av_bswap32", scope: !2353, file: !2353, line: 66, type: !7546, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!1040, !1040}
!7548 = !DILocation(line: 66, column: 98, scope: !7545, inlinedAt: !7549)
!7549 = distinct !DILocation(line: 401, column: 16, scope: !7541)
!7550 = !DILocalVariable(name: "s", arg: 1, scope: !7541, file: !1862, line: 381, type: !3872)
!7551 = !DILocation(line: 381, column: 52, scope: !7541)
!7552 = !DILocalVariable(name: "n", arg: 2, scope: !7541, file: !1862, line: 381, type: !1015)
!7553 = !DILocation(line: 381, column: 59, scope: !7541)
!7554 = !DILocalVariable(name: "tmp", scope: !7541, file: !1862, line: 383, type: !1015)
!7555 = !DILocation(line: 383, column: 18, scope: !7541)
!7556 = !DILocalVariable(name: "re_index", scope: !7541, file: !1862, line: 399, type: !1016)
!7557 = !DILocation(line: 399, column: 18, scope: !7541)
!7558 = !DILocation(line: 399, column: 30, scope: !7541)
!7559 = !DILocation(line: 399, column: 34, scope: !7541)
!7560 = !DILocalVariable(name: "re_cache", scope: !7541, file: !1862, line: 399, type: !1016)
!7561 = !DILocation(line: 399, column: 78, scope: !7541)
!7562 = !DILocalVariable(name: "re_size_plus8", scope: !7541, file: !1862, line: 399, type: !1016)
!7563 = !DILocation(line: 399, column: 101, scope: !7541)
!7564 = !DILocation(line: 399, column: 118, scope: !7541)
!7565 = !DILocation(line: 399, column: 122, scope: !7541)
!7566 = !DILocation(line: 401, column: 60, scope: !7541)
!7567 = !DILocation(line: 401, column: 64, scope: !7541)
!7568 = !DILocation(line: 401, column: 74, scope: !7541)
!7569 = !DILocation(line: 401, column: 83, scope: !7541)
!7570 = !DILocation(line: 401, column: 71, scope: !7541)
!7571 = !DILocation(line: 401, column: 92, scope: !7541)
!7572 = !DILocation(line: 401, column: 16, scope: !7541)
!7573 = !DILocation(line: 68, column: 16, scope: !7545, inlinedAt: !7549)
!7574 = !DILocation(line: 68, column: 19, scope: !7545, inlinedAt: !7549)
!7575 = !DILocation(line: 68, column: 24, scope: !7545, inlinedAt: !7549)
!7576 = !DILocation(line: 68, column: 38, scope: !7545, inlinedAt: !7549)
!7577 = !DILocation(line: 68, column: 41, scope: !7545, inlinedAt: !7549)
!7578 = !DILocation(line: 68, column: 46, scope: !7545, inlinedAt: !7549)
!7579 = !DILocation(line: 68, column: 34, scope: !7545, inlinedAt: !7549)
!7580 = !DILocation(line: 68, column: 57, scope: !7545, inlinedAt: !7549)
!7581 = !DILocation(line: 68, column: 69, scope: !7545, inlinedAt: !7549)
!7582 = !DILocation(line: 68, column: 72, scope: !7545, inlinedAt: !7549)
!7583 = !DILocation(line: 68, column: 79, scope: !7545, inlinedAt: !7549)
!7584 = !DILocation(line: 68, column: 84, scope: !7545, inlinedAt: !7549)
!7585 = !DILocation(line: 68, column: 99, scope: !7545, inlinedAt: !7549)
!7586 = !DILocation(line: 68, column: 102, scope: !7545, inlinedAt: !7549)
!7587 = !DILocation(line: 68, column: 109, scope: !7545, inlinedAt: !7549)
!7588 = !DILocation(line: 68, column: 114, scope: !7545, inlinedAt: !7549)
!7589 = !DILocation(line: 68, column: 94, scope: !7545, inlinedAt: !7549)
!7590 = !DILocation(line: 68, column: 63, scope: !7545, inlinedAt: !7549)
!7591 = !DILocation(line: 401, column: 100, scope: !7541)
!7592 = !DILocation(line: 401, column: 109, scope: !7541)
!7593 = !DILocation(line: 401, column: 96, scope: !7541)
!7594 = !DILocation(line: 401, column: 14, scope: !7541)
!7595 = !DILocation(line: 402, column: 21, scope: !7541)
!7596 = !DILocation(line: 402, column: 31, scope: !7541)
!7597 = !DILocation(line: 402, column: 11, scope: !7541)
!7598 = !DILocation(line: 402, column: 9, scope: !7541)
!7599 = !DILocation(line: 403, column: 18, scope: !7541)
!7600 = !DILocation(line: 403, column: 36, scope: !7541)
!7601 = !DILocation(line: 403, column: 48, scope: !7541)
!7602 = !DILocation(line: 403, column: 45, scope: !7541)
!7603 = !DILocation(line: 403, column: 33, scope: !7541)
!7604 = !DILocation(line: 403, column: 17, scope: !7541)
!7605 = !DILocation(line: 403, column: 55, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7541, file: !1862, discriminator: 1)
!7607 = !DILocation(line: 403, column: 67, scope: !7606)
!7608 = !DILocation(line: 403, column: 64, scope: !7606)
!7609 = !DILocation(line: 403, column: 17, scope: !7606)
!7610 = !DILocation(line: 403, column: 74, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !7541, file: !1862, discriminator: 2)
!7612 = !DILocation(line: 403, column: 17, scope: !7611)
!7613 = !DILocation(line: 403, column: 17, scope: !7614)
!7614 = !DILexicalBlockFile(scope: !7541, file: !1862, discriminator: 3)
!7615 = !DILocation(line: 403, column: 14, scope: !7614)
!7616 = !DILocation(line: 404, column: 18, scope: !7541)
!7617 = !DILocation(line: 404, column: 6, scope: !7541)
!7618 = !DILocation(line: 404, column: 10, scope: !7541)
!7619 = !DILocation(line: 404, column: 16, scope: !7541)
!7620 = !DILocation(line: 406, column: 12, scope: !7541)
!7621 = !DILocation(line: 406, column: 5, scope: !7541)
!7622 = distinct !DISubprogram(name: "get_bits1", scope: !1862, file: !1862, line: 487, type: !7623, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!1016, !3872}
!7625 = !DILocalVariable(name: "s", arg: 1, scope: !7622, file: !1862, line: 487, type: !3872)
!7626 = !DILocation(line: 487, column: 53, scope: !7622)
!7627 = !DILocalVariable(name: "index", scope: !7622, file: !1862, line: 499, type: !1016)
!7628 = !DILocation(line: 499, column: 18, scope: !7622)
!7629 = !DILocation(line: 499, column: 26, scope: !7622)
!7630 = !DILocation(line: 499, column: 29, scope: !7622)
!7631 = !DILocalVariable(name: "result", scope: !7622, file: !1862, line: 500, type: !1041)
!7632 = !DILocation(line: 500, column: 13, scope: !7622)
!7633 = !DILocation(line: 500, column: 32, scope: !7622)
!7634 = !DILocation(line: 500, column: 38, scope: !7622)
!7635 = !DILocation(line: 500, column: 22, scope: !7622)
!7636 = !DILocation(line: 500, column: 25, scope: !7622)
!7637 = !DILocation(line: 505, column: 16, scope: !7622)
!7638 = !DILocation(line: 505, column: 22, scope: !7622)
!7639 = !DILocation(line: 505, column: 12, scope: !7622)
!7640 = !DILocation(line: 506, column: 12, scope: !7622)
!7641 = !DILocation(line: 509, column: 9, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7622, file: !1862, line: 509, column: 9)
!7643 = !DILocation(line: 509, column: 12, scope: !7642)
!7644 = !DILocation(line: 509, column: 20, scope: !7642)
!7645 = !DILocation(line: 509, column: 23, scope: !7642)
!7646 = !DILocation(line: 509, column: 18, scope: !7642)
!7647 = !DILocation(line: 509, column: 9, scope: !7622)
!7648 = !DILocation(line: 511, column: 14, scope: !7642)
!7649 = !DILocation(line: 511, column: 9, scope: !7642)
!7650 = !DILocation(line: 512, column: 16, scope: !7622)
!7651 = !DILocation(line: 512, column: 5, scope: !7622)
!7652 = !DILocation(line: 512, column: 8, scope: !7622)
!7653 = !DILocation(line: 512, column: 14, scope: !7622)
!7654 = !DILocation(line: 514, column: 12, scope: !7622)
!7655 = !DILocation(line: 514, column: 5, scope: !7622)
!7656 = distinct !DISubprogram(name: "skip_bits", scope: !1862, file: !1862, line: 460, type: !7657, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7657 = !DISubroutineType(types: !7658)
!7658 = !{null, !3872, !1015}
!7659 = !DILocalVariable(name: "s", arg: 1, scope: !7656, file: !1862, line: 460, type: !3872)
!7660 = !DILocation(line: 460, column: 45, scope: !7656)
!7661 = !DILocalVariable(name: "n", arg: 2, scope: !7656, file: !1862, line: 460, type: !1015)
!7662 = !DILocation(line: 460, column: 52, scope: !7656)
!7663 = !DILocalVariable(name: "re_index", scope: !7656, file: !1862, line: 481, type: !1016)
!7664 = !DILocation(line: 481, column: 18, scope: !7656)
!7665 = !DILocation(line: 481, column: 30, scope: !7656)
!7666 = !DILocation(line: 481, column: 34, scope: !7656)
!7667 = !DILocalVariable(name: "re_cache", scope: !7656, file: !1862, line: 481, type: !1016)
!7668 = !DILocation(line: 481, column: 78, scope: !7656)
!7669 = !DILocalVariable(name: "re_size_plus8", scope: !7656, file: !1862, line: 481, type: !1016)
!7670 = !DILocation(line: 481, column: 101, scope: !7656)
!7671 = !DILocation(line: 481, column: 118, scope: !7656)
!7672 = !DILocation(line: 481, column: 122, scope: !7656)
!7673 = !DILocation(line: 482, column: 18, scope: !7656)
!7674 = !DILocation(line: 482, column: 36, scope: !7656)
!7675 = !DILocation(line: 482, column: 48, scope: !7656)
!7676 = !DILocation(line: 482, column: 45, scope: !7656)
!7677 = !DILocation(line: 482, column: 33, scope: !7656)
!7678 = !DILocation(line: 482, column: 17, scope: !7656)
!7679 = !DILocation(line: 482, column: 55, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !7656, file: !1862, discriminator: 1)
!7681 = !DILocation(line: 482, column: 67, scope: !7680)
!7682 = !DILocation(line: 482, column: 64, scope: !7680)
!7683 = !DILocation(line: 482, column: 17, scope: !7680)
!7684 = !DILocation(line: 482, column: 74, scope: !7685)
!7685 = !DILexicalBlockFile(scope: !7656, file: !1862, discriminator: 2)
!7686 = !DILocation(line: 482, column: 17, scope: !7685)
!7687 = !DILocation(line: 482, column: 17, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !7656, file: !1862, discriminator: 3)
!7689 = !DILocation(line: 482, column: 14, scope: !7688)
!7690 = !DILocation(line: 483, column: 18, scope: !7656)
!7691 = !DILocation(line: 483, column: 6, scope: !7656)
!7692 = !DILocation(line: 483, column: 10, scope: !7656)
!7693 = !DILocation(line: 483, column: 16, scope: !7656)
!7694 = !DILocation(line: 485, column: 1, scope: !7656)
!7695 = distinct !DISubprogram(name: "NEG_USR32", scope: !7696, file: !7696, line: 124, type: !7697, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7696 = !DIFile(filename: "./libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!1040, !1040, !1278}
!7699 = !DILocalVariable(name: "a", arg: 1, scope: !7695, file: !7696, line: 124, type: !1040)
!7700 = !DILocation(line: 124, column: 43, scope: !7695)
!7701 = !DILocalVariable(name: "s", arg: 2, scope: !7695, file: !7696, line: 124, type: !1278)
!7702 = !DILocation(line: 124, column: 53, scope: !7695)
!7703 = !DILocation(line: 125, column: 5, scope: !7695)
!7704 = !DILocation(line: 127, column: 29, scope: !7695)
!7705 = !DILocation(line: 127, column: 28, scope: !7695)
!7706 = !DILocation(line: 127, column: 18, scope: !7695)
!7707 = !{i32 110569, i32 110583}
!7708 = !DILocation(line: 129, column: 12, scope: !7695)
!7709 = !DILocation(line: 129, column: 5, scope: !7695)
!7710 = distinct !DISubprogram(name: "skip_bits_long", scope: !1862, file: !1862, line: 293, type: !7657, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7711 = !DILocation(line: 127, column: 87, scope: !6035, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 301, column: 17, scope: !7710)
!7713 = !DILocation(line: 127, column: 94, scope: !6035, inlinedAt: !7712)
!7714 = !DILocation(line: 127, column: 104, scope: !6035, inlinedAt: !7712)
!7715 = !DILocalVariable(name: "s", arg: 1, scope: !7710, file: !1862, line: 293, type: !3872)
!7716 = !DILocation(line: 293, column: 50, scope: !7710)
!7717 = !DILocalVariable(name: "n", arg: 2, scope: !7710, file: !1862, line: 293, type: !1015)
!7718 = !DILocation(line: 293, column: 57, scope: !7710)
!7719 = !DILocation(line: 301, column: 27, scope: !7710)
!7720 = !DILocation(line: 301, column: 31, scope: !7710)
!7721 = !DILocation(line: 301, column: 34, scope: !7710)
!7722 = !DILocation(line: 301, column: 30, scope: !7710)
!7723 = !DILocation(line: 301, column: 41, scope: !7710)
!7724 = !DILocation(line: 301, column: 44, scope: !7710)
!7725 = !DILocation(line: 301, column: 65, scope: !7710)
!7726 = !DILocation(line: 301, column: 68, scope: !7710)
!7727 = !DILocation(line: 301, column: 63, scope: !7710)
!7728 = !DILocation(line: 301, column: 17, scope: !7710)
!7729 = !DILocation(line: 132, column: 9, scope: !6206, inlinedAt: !7712)
!7730 = !DILocation(line: 132, column: 13, scope: !6206, inlinedAt: !7712)
!7731 = !DILocation(line: 132, column: 11, scope: !6206, inlinedAt: !7712)
!7732 = !DILocation(line: 132, column: 9, scope: !6035, inlinedAt: !7712)
!7733 = !DILocation(line: 132, column: 26, scope: !6211, inlinedAt: !7712)
!7734 = !DILocation(line: 132, column: 19, scope: !6211, inlinedAt: !7712)
!7735 = !DILocation(line: 133, column: 14, scope: !6214, inlinedAt: !7712)
!7736 = !DILocation(line: 133, column: 18, scope: !6214, inlinedAt: !7712)
!7737 = !DILocation(line: 133, column: 16, scope: !6214, inlinedAt: !7712)
!7738 = !DILocation(line: 133, column: 14, scope: !6206, inlinedAt: !7712)
!7739 = !DILocation(line: 133, column: 31, scope: !6219, inlinedAt: !7712)
!7740 = !DILocation(line: 133, column: 24, scope: !6219, inlinedAt: !7712)
!7741 = !DILocation(line: 134, column: 17, scope: !6214, inlinedAt: !7712)
!7742 = !DILocation(line: 134, column: 10, scope: !6214, inlinedAt: !7712)
!7743 = !DILocation(line: 135, column: 1, scope: !6035, inlinedAt: !7712)
!7744 = !DILocation(line: 301, column: 5, scope: !7710)
!7745 = !DILocation(line: 301, column: 8, scope: !7710)
!7746 = !DILocation(line: 301, column: 14, scope: !7710)
!7747 = !DILocation(line: 304, column: 1, scope: !7710)
!7748 = distinct !DISubprogram(name: "skip_bits1", scope: !1862, file: !1862, line: 523, type: !7749, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{null, !3872}
!7751 = !DILocalVariable(name: "s", arg: 1, scope: !7748, file: !1862, line: 523, type: !3872)
!7752 = !DILocation(line: 523, column: 46, scope: !7748)
!7753 = !DILocation(line: 525, column: 15, scope: !7748)
!7754 = !DILocation(line: 525, column: 5, scope: !7748)
!7755 = !DILocation(line: 526, column: 1, scope: !7748)
!7756 = distinct !DISubprogram(name: "spx_strategy", scope: !1807, file: !1807, line: 816, type: !7757, isLocal: true, isDefinition: true, scopeLine: 817, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!1015, !1852, !1015}
!7759 = !DILocalVariable(name: "s", arg: 1, scope: !7756, file: !1807, line: 816, type: !1852)
!7760 = !DILocation(line: 816, column: 50, scope: !7756)
!7761 = !DILocalVariable(name: "blk", arg: 2, scope: !7756, file: !1807, line: 816, type: !1015)
!7762 = !DILocation(line: 816, column: 57, scope: !7756)
!7763 = !DILocalVariable(name: "bc", scope: !7756, file: !1807, line: 818, type: !3872)
!7764 = !DILocation(line: 818, column: 20, scope: !7756)
!7765 = !DILocation(line: 818, column: 26, scope: !7756)
!7766 = !DILocation(line: 818, column: 29, scope: !7756)
!7767 = !DILocalVariable(name: "fbw_channels", scope: !7756, file: !1807, line: 819, type: !1015)
!7768 = !DILocation(line: 819, column: 9, scope: !7756)
!7769 = !DILocation(line: 819, column: 24, scope: !7756)
!7770 = !DILocation(line: 819, column: 27, scope: !7756)
!7771 = !DILocalVariable(name: "dst_start_freq", scope: !7756, file: !1807, line: 820, type: !1015)
!7772 = !DILocation(line: 820, column: 9, scope: !7756)
!7773 = !DILocalVariable(name: "dst_end_freq", scope: !7756, file: !1807, line: 820, type: !1015)
!7774 = !DILocation(line: 820, column: 25, scope: !7756)
!7775 = !DILocalVariable(name: "src_start_freq", scope: !7756, file: !1807, line: 820, type: !1015)
!7776 = !DILocation(line: 820, column: 39, scope: !7756)
!7777 = !DILocalVariable(name: "start_subband", scope: !7756, file: !1807, line: 821, type: !1015)
!7778 = !DILocation(line: 821, column: 9, scope: !7756)
!7779 = !DILocalVariable(name: "end_subband", scope: !7756, file: !1807, line: 821, type: !1015)
!7780 = !DILocation(line: 821, column: 24, scope: !7756)
!7781 = !DILocalVariable(name: "ch", scope: !7756, file: !1807, line: 821, type: !1015)
!7782 = !DILocation(line: 821, column: 37, scope: !7756)
!7783 = !DILocation(line: 824, column: 9, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7756, file: !1807, line: 824, column: 9)
!7785 = !DILocation(line: 824, column: 12, scope: !7784)
!7786 = !DILocation(line: 824, column: 25, scope: !7784)
!7787 = !DILocation(line: 824, column: 9, scope: !7756)
!7788 = !DILocation(line: 825, column: 9, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7784, file: !1807, line: 824, column: 45)
!7790 = !DILocation(line: 825, column: 12, scope: !7789)
!7791 = !DILocation(line: 825, column: 32, scope: !7789)
!7792 = !DILocation(line: 826, column: 5, scope: !7789)
!7793 = !DILocation(line: 827, column: 17, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !1807, line: 827, column: 9)
!7795 = distinct !DILexicalBlock(scope: !7784, file: !1807, line: 826, column: 12)
!7796 = !DILocation(line: 827, column: 14, scope: !7794)
!7797 = !DILocation(line: 827, column: 22, scope: !7798)
!7798 = !DILexicalBlockFile(scope: !7799, file: !1807, discriminator: 1)
!7799 = distinct !DILexicalBlock(scope: !7794, file: !1807, line: 827, column: 9)
!7800 = !DILocation(line: 827, column: 28, scope: !7798)
!7801 = !DILocation(line: 827, column: 25, scope: !7798)
!7802 = !DILocation(line: 827, column: 9, scope: !7798)
!7803 = !DILocation(line: 828, column: 49, scope: !7799)
!7804 = !DILocation(line: 828, column: 39, scope: !7799)
!7805 = !DILocation(line: 828, column: 33, scope: !7799)
!7806 = !DILocation(line: 828, column: 13, scope: !7799)
!7807 = !DILocation(line: 828, column: 16, scope: !7799)
!7808 = !DILocation(line: 828, column: 37, scope: !7799)
!7809 = !DILocation(line: 827, column: 44, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !7799, file: !1807, discriminator: 2)
!7811 = !DILocation(line: 827, column: 9, scope: !7810)
!7812 = distinct !{!7812, !7813}
!7813 = !DILocation(line: 827, column: 9, scope: !7795)
!7814 = !DILocation(line: 833, column: 31, scope: !7756)
!7815 = !DILocation(line: 833, column: 22, scope: !7756)
!7816 = !DILocation(line: 833, column: 20, scope: !7756)
!7817 = !DILocation(line: 834, column: 30, scope: !7756)
!7818 = !DILocation(line: 834, column: 21, scope: !7756)
!7819 = !DILocation(line: 834, column: 37, scope: !7756)
!7820 = !DILocation(line: 834, column: 19, scope: !7756)
!7821 = !DILocation(line: 835, column: 9, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7756, file: !1807, line: 835, column: 9)
!7823 = !DILocation(line: 835, column: 23, scope: !7822)
!7824 = !DILocation(line: 835, column: 9, scope: !7756)
!7825 = !DILocation(line: 836, column: 26, scope: !7822)
!7826 = !DILocation(line: 836, column: 40, scope: !7822)
!7827 = !DILocation(line: 836, column: 23, scope: !7822)
!7828 = !DILocation(line: 836, column: 9, scope: !7822)
!7829 = !DILocation(line: 837, column: 28, scope: !7756)
!7830 = !DILocation(line: 837, column: 19, scope: !7756)
!7831 = !DILocation(line: 837, column: 35, scope: !7756)
!7832 = !DILocation(line: 837, column: 17, scope: !7756)
!7833 = !DILocation(line: 839, column: 44, scope: !7756)
!7834 = !DILocation(line: 839, column: 55, scope: !7756)
!7835 = !DILocation(line: 839, column: 27, scope: !7756)
!7836 = !DILocation(line: 839, column: 5, scope: !7756)
!7837 = !DILocation(line: 839, column: 8, scope: !7756)
!7838 = !DILocation(line: 839, column: 25, scope: !7756)
!7839 = !DILocation(line: 841, column: 9, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7756, file: !1807, line: 841, column: 9)
!7841 = !DILocation(line: 841, column: 21, scope: !7840)
!7842 = !DILocation(line: 841, column: 9, scope: !7756)
!7843 = !DILocation(line: 842, column: 24, scope: !7840)
!7844 = !DILocation(line: 842, column: 36, scope: !7840)
!7845 = !DILocation(line: 842, column: 21, scope: !7840)
!7846 = !DILocation(line: 842, column: 9, scope: !7840)
!7847 = !DILocation(line: 843, column: 22, scope: !7756)
!7848 = !DILocation(line: 843, column: 37, scope: !7756)
!7849 = !DILocation(line: 843, column: 42, scope: !7756)
!7850 = !DILocation(line: 843, column: 20, scope: !7756)
!7851 = !DILocation(line: 844, column: 22, scope: !7756)
!7852 = !DILocation(line: 844, column: 36, scope: !7756)
!7853 = !DILocation(line: 844, column: 41, scope: !7756)
!7854 = !DILocation(line: 844, column: 20, scope: !7756)
!7855 = !DILocation(line: 845, column: 20, scope: !7756)
!7856 = !DILocation(line: 845, column: 32, scope: !7756)
!7857 = !DILocation(line: 845, column: 37, scope: !7756)
!7858 = !DILocation(line: 845, column: 18, scope: !7756)
!7859 = !DILocation(line: 848, column: 9, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7756, file: !1807, line: 848, column: 9)
!7861 = !DILocation(line: 848, column: 26, scope: !7860)
!7862 = !DILocation(line: 848, column: 23, scope: !7860)
!7863 = !DILocation(line: 848, column: 9, scope: !7756)
!7864 = !DILocation(line: 849, column: 16, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7860, file: !1807, line: 848, column: 39)
!7866 = !DILocation(line: 849, column: 19, scope: !7865)
!7867 = !DILocation(line: 850, column: 38, scope: !7865)
!7868 = !DILocation(line: 850, column: 53, scope: !7865)
!7869 = !DILocation(line: 849, column: 9, scope: !7865)
!7870 = !DILocation(line: 851, column: 9, scope: !7865)
!7871 = !DILocation(line: 853, column: 9, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7756, file: !1807, line: 853, column: 9)
!7873 = !DILocation(line: 853, column: 27, scope: !7872)
!7874 = !DILocation(line: 853, column: 24, scope: !7872)
!7875 = !DILocation(line: 853, column: 9, scope: !7756)
!7876 = !DILocation(line: 854, column: 16, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7872, file: !1807, line: 853, column: 43)
!7878 = !DILocation(line: 854, column: 19, scope: !7877)
!7879 = !DILocation(line: 855, column: 47, scope: !7877)
!7880 = !DILocation(line: 855, column: 63, scope: !7877)
!7881 = !DILocation(line: 854, column: 9, scope: !7877)
!7882 = !DILocation(line: 856, column: 9, scope: !7877)
!7883 = !DILocation(line: 859, column: 29, scope: !7756)
!7884 = !DILocation(line: 859, column: 5, scope: !7756)
!7885 = !DILocation(line: 859, column: 8, scope: !7756)
!7886 = !DILocation(line: 859, column: 27, scope: !7756)
!7887 = !DILocation(line: 860, column: 29, scope: !7756)
!7888 = !DILocation(line: 860, column: 5, scope: !7756)
!7889 = !DILocation(line: 860, column: 8, scope: !7756)
!7890 = !DILocation(line: 860, column: 27, scope: !7756)
!7891 = !DILocation(line: 864, column: 27, scope: !7756)
!7892 = !DILocation(line: 864, column: 31, scope: !7756)
!7893 = !DILocation(line: 864, column: 36, scope: !7756)
!7894 = !DILocation(line: 864, column: 39, scope: !7756)
!7895 = !DILocation(line: 865, column: 27, scope: !7756)
!7896 = !DILocation(line: 865, column: 42, scope: !7756)
!7897 = !DILocation(line: 867, column: 28, scope: !7756)
!7898 = !DILocation(line: 867, column: 31, scope: !7756)
!7899 = !DILocation(line: 868, column: 27, scope: !7756)
!7900 = !DILocation(line: 868, column: 30, scope: !7756)
!7901 = !DILocation(line: 869, column: 27, scope: !7756)
!7902 = !DILocation(line: 869, column: 30, scope: !7756)
!7903 = !DILocation(line: 864, column: 5, scope: !7756)
!7904 = !DILocation(line: 870, column: 5, scope: !7756)
!7905 = !DILocation(line: 871, column: 1, scope: !7756)
!7906 = distinct !DISubprogram(name: "spx_coordinates", scope: !1807, file: !1807, line: 873, type: !7907, isLocal: true, isDefinition: true, scopeLine: 874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !1852}
!7909 = !DILocalVariable(name: "x", arg: 1, scope: !7910, file: !2097, line: 176, type: !1015)
!7910 = distinct !DISubprogram(name: "fixed_sqrt", scope: !2097, file: !2097, line: 176, type: !3855, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!7911 = !DILocation(line: 176, column: 65, scope: !7910, inlinedAt: !7912)
!7912 = distinct !DILocation(line: 911, column: 34, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !1807, line: 907, column: 28)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !1807, line: 904, column: 32)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !1807, line: 901, column: 25)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !1807, line: 890, column: 62)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !1807, line: 890, column: 17)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !1807, line: 890, column: 17)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !1807, line: 881, column: 59)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !1807, line: 881, column: 17)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !1807, line: 880, column: 38)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !1807, line: 880, column: 13)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !1807, line: 879, column: 44)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !1807, line: 879, column: 5)
!7925 = distinct !DILexicalBlock(scope: !7906, file: !1807, line: 879, column: 5)
!7926 = !DILocalVariable(name: "bits", arg: 2, scope: !7910, file: !2097, line: 176, type: !1015)
!7927 = !DILocation(line: 176, column: 72, scope: !7910, inlinedAt: !7912)
!7928 = !DILocalVariable(name: "retval", scope: !7910, file: !2097, line: 178, type: !1015)
!7929 = !DILocation(line: 178, column: 9, scope: !7910, inlinedAt: !7912)
!7930 = !DILocalVariable(name: "bit_mask", scope: !7910, file: !2097, line: 178, type: !1015)
!7931 = !DILocation(line: 178, column: 17, scope: !7910, inlinedAt: !7912)
!7932 = !DILocalVariable(name: "guess", scope: !7910, file: !2097, line: 178, type: !1015)
!7933 = !DILocation(line: 178, column: 27, scope: !7910, inlinedAt: !7912)
!7934 = !DILocalVariable(name: "square", scope: !7910, file: !2097, line: 178, type: !1015)
!7935 = !DILocation(line: 178, column: 34, scope: !7910, inlinedAt: !7912)
!7936 = !DILocalVariable(name: "i", scope: !7910, file: !2097, line: 178, type: !1015)
!7937 = !DILocation(line: 178, column: 42, scope: !7910, inlinedAt: !7912)
!7938 = !DILocalVariable(name: "accu", scope: !7910, file: !2097, line: 179, type: !1043)
!7939 = !DILocation(line: 179, column: 13, scope: !7910, inlinedAt: !7912)
!7940 = !DILocalVariable(name: "shift1", scope: !7910, file: !2097, line: 180, type: !1015)
!7941 = !DILocation(line: 180, column: 9, scope: !7910, inlinedAt: !7912)
!7942 = !DILocalVariable(name: "shift2", scope: !7910, file: !2097, line: 181, type: !1015)
!7943 = !DILocation(line: 181, column: 9, scope: !7910, inlinedAt: !7912)
!7944 = !DILocation(line: 176, column: 65, scope: !7910, inlinedAt: !7945)
!7945 = distinct !DILocation(line: 908, column: 34, scope: !7913)
!7946 = !DILocation(line: 176, column: 72, scope: !7910, inlinedAt: !7945)
!7947 = !DILocation(line: 178, column: 9, scope: !7910, inlinedAt: !7945)
!7948 = !DILocation(line: 178, column: 17, scope: !7910, inlinedAt: !7945)
!7949 = !DILocation(line: 178, column: 27, scope: !7910, inlinedAt: !7945)
!7950 = !DILocation(line: 178, column: 34, scope: !7910, inlinedAt: !7945)
!7951 = !DILocation(line: 178, column: 42, scope: !7910, inlinedAt: !7945)
!7952 = !DILocation(line: 179, column: 13, scope: !7910, inlinedAt: !7945)
!7953 = !DILocation(line: 180, column: 9, scope: !7910, inlinedAt: !7945)
!7954 = !DILocation(line: 181, column: 9, scope: !7910, inlinedAt: !7945)
!7955 = !DILocalVariable(name: "s", arg: 1, scope: !7906, file: !1807, line: 873, type: !1852)
!7956 = !DILocation(line: 873, column: 54, scope: !7906)
!7957 = !DILocalVariable(name: "bc", scope: !7906, file: !1807, line: 875, type: !3872)
!7958 = !DILocation(line: 875, column: 20, scope: !7906)
!7959 = !DILocation(line: 875, column: 26, scope: !7906)
!7960 = !DILocation(line: 875, column: 29, scope: !7906)
!7961 = !DILocalVariable(name: "fbw_channels", scope: !7906, file: !1807, line: 876, type: !1015)
!7962 = !DILocation(line: 876, column: 9, scope: !7906)
!7963 = !DILocation(line: 876, column: 24, scope: !7906)
!7964 = !DILocation(line: 876, column: 27, scope: !7906)
!7965 = !DILocalVariable(name: "ch", scope: !7906, file: !1807, line: 877, type: !1015)
!7966 = !DILocation(line: 877, column: 9, scope: !7906)
!7967 = !DILocalVariable(name: "bnd", scope: !7906, file: !1807, line: 877, type: !1015)
!7968 = !DILocation(line: 877, column: 13, scope: !7906)
!7969 = !DILocation(line: 879, column: 13, scope: !7925)
!7970 = !DILocation(line: 879, column: 10, scope: !7925)
!7971 = !DILocation(line: 879, column: 18, scope: !7972)
!7972 = !DILexicalBlockFile(scope: !7924, file: !1807, discriminator: 1)
!7973 = !DILocation(line: 879, column: 24, scope: !7972)
!7974 = !DILocation(line: 879, column: 21, scope: !7972)
!7975 = !DILocation(line: 879, column: 5, scope: !7972)
!7976 = !DILocation(line: 880, column: 33, scope: !7922)
!7977 = !DILocation(line: 880, column: 13, scope: !7922)
!7978 = !DILocation(line: 880, column: 16, scope: !7922)
!7979 = !DILocation(line: 880, column: 13, scope: !7923)
!7980 = !DILocation(line: 881, column: 37, scope: !7920)
!7981 = !DILocation(line: 881, column: 17, scope: !7920)
!7982 = !DILocation(line: 881, column: 20, scope: !7920)
!7983 = !DILocation(line: 881, column: 41, scope: !7920)
!7984 = !DILocation(line: 881, column: 54, scope: !7985)
!7985 = !DILexicalBlockFile(scope: !7920, file: !1807, discriminator: 1)
!7986 = !DILocation(line: 881, column: 44, scope: !7985)
!7987 = !DILocation(line: 881, column: 17, scope: !7985)
!7988 = !DILocalVariable(name: "spx_blend", scope: !7919, file: !1807, line: 882, type: !1955)
!7989 = !DILocation(line: 882, column: 26, scope: !7919)
!7990 = !DILocalVariable(name: "bin", scope: !7919, file: !1807, line: 883, type: !1015)
!7991 = !DILocation(line: 883, column: 21, scope: !7919)
!7992 = !DILocalVariable(name: "master_spx_coord", scope: !7919, file: !1807, line: 883, type: !1015)
!7993 = !DILocation(line: 883, column: 26, scope: !7919)
!7994 = !DILocation(line: 885, column: 37, scope: !7919)
!7995 = !DILocation(line: 885, column: 17, scope: !7919)
!7996 = !DILocation(line: 885, column: 20, scope: !7919)
!7997 = !DILocation(line: 885, column: 41, scope: !7919)
!7998 = !DILocation(line: 886, column: 39, scope: !7919)
!7999 = !DILocation(line: 886, column: 30, scope: !7919)
!8000 = !DILocation(line: 886, column: 27, scope: !7919)
!8001 = !DILocation(line: 887, column: 45, scope: !7919)
!8002 = !DILocation(line: 887, column: 36, scope: !7919)
!8003 = !DILocation(line: 887, column: 52, scope: !7919)
!8004 = !DILocation(line: 887, column: 34, scope: !7919)
!8005 = !DILocation(line: 889, column: 23, scope: !7919)
!8006 = !DILocation(line: 889, column: 26, scope: !7919)
!8007 = !DILocation(line: 889, column: 21, scope: !7919)
!8008 = !DILocation(line: 890, column: 26, scope: !7918)
!8009 = !DILocation(line: 890, column: 22, scope: !7918)
!8010 = !DILocation(line: 890, column: 31, scope: !8011)
!8011 = !DILexicalBlockFile(scope: !7917, file: !1807, discriminator: 1)
!8012 = !DILocation(line: 890, column: 37, scope: !8011)
!8013 = !DILocation(line: 890, column: 40, scope: !8011)
!8014 = !DILocation(line: 890, column: 35, scope: !8011)
!8015 = !DILocation(line: 890, column: 17, scope: !8011)
!8016 = !DILocalVariable(name: "bandsize", scope: !7916, file: !1807, line: 891, type: !1015)
!8017 = !DILocation(line: 891, column: 25, scope: !7916)
!8018 = !DILocation(line: 891, column: 54, scope: !7916)
!8019 = !DILocation(line: 891, column: 36, scope: !7916)
!8020 = !DILocation(line: 891, column: 39, scope: !7916)
!8021 = !DILocalVariable(name: "spx_coord_exp", scope: !7916, file: !1807, line: 892, type: !1015)
!8022 = !DILocation(line: 892, column: 25, scope: !7916)
!8023 = !DILocalVariable(name: "spx_coord_mant", scope: !7916, file: !1807, line: 892, type: !1015)
!8024 = !DILocation(line: 892, column: 40, scope: !7916)
!8025 = !DILocalVariable(name: "nratio", scope: !7916, file: !1807, line: 893, type: !1955)
!8026 = !DILocation(line: 893, column: 30, scope: !7916)
!8027 = !DILocalVariable(name: "sblend", scope: !7916, file: !1807, line: 893, type: !1955)
!8028 = !DILocation(line: 893, column: 38, scope: !7916)
!8029 = !DILocalVariable(name: "nblend", scope: !7916, file: !1807, line: 893, type: !1955)
!8030 = !DILocation(line: 893, column: 46, scope: !7916)
!8031 = !DILocalVariable(name: "accu", scope: !7916, file: !1807, line: 896, type: !1043)
!8032 = !DILocation(line: 896, column: 29, scope: !7916)
!8033 = !DILocation(line: 896, column: 38, scope: !7916)
!8034 = !DILocation(line: 896, column: 42, scope: !7916)
!8035 = !DILocation(line: 896, column: 52, scope: !7916)
!8036 = !DILocation(line: 896, column: 61, scope: !7916)
!8037 = !DILocation(line: 896, column: 49, scope: !7916)
!8038 = !DILocation(line: 896, column: 36, scope: !7916)
!8039 = !DILocation(line: 897, column: 45, scope: !7916)
!8040 = !DILocation(line: 897, column: 48, scope: !7916)
!8041 = !DILocation(line: 897, column: 36, scope: !7916)
!8042 = !DILocation(line: 897, column: 34, scope: !7916)
!8043 = !DILocation(line: 898, column: 36, scope: !7916)
!8044 = !DILocation(line: 898, column: 41, scope: !7916)
!8045 = !DILocation(line: 898, column: 30, scope: !7916)
!8046 = !DILocation(line: 898, column: 28, scope: !7916)
!8047 = !DILocation(line: 899, column: 31, scope: !7916)
!8048 = !DILocation(line: 899, column: 41, scope: !7916)
!8049 = !DILocation(line: 899, column: 28, scope: !7916)
!8050 = !DILocation(line: 901, column: 25, scope: !7915)
!8051 = !DILocation(line: 901, column: 32, scope: !7915)
!8052 = !DILocation(line: 901, column: 25, scope: !7916)
!8053 = !DILocation(line: 902, column: 32, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !7915, file: !1807, line: 901, column: 37)
!8055 = !DILocation(line: 903, column: 32, scope: !8054)
!8056 = !DILocation(line: 904, column: 21, scope: !8054)
!8057 = !DILocation(line: 904, column: 32, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !7914, file: !1807, discriminator: 1)
!8059 = !DILocation(line: 904, column: 39, scope: !8058)
!8060 = !DILocation(line: 905, column: 32, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !7914, file: !1807, line: 904, column: 51)
!8062 = !DILocation(line: 906, column: 32, scope: !8061)
!8063 = !DILocation(line: 907, column: 21, scope: !8061)
!8064 = !DILocation(line: 908, column: 45, scope: !7913)
!8065 = !DILocation(line: 908, column: 34, scope: !7913)
!8066 = !DILocation(line: 180, column: 23, scope: !7910, inlinedAt: !7945)
!8067 = !DILocation(line: 180, column: 21, scope: !7910, inlinedAt: !7945)
!8068 = !DILocation(line: 181, column: 18, scope: !7910, inlinedAt: !7945)
!8069 = !DILocation(line: 181, column: 23, scope: !7910, inlinedAt: !7945)
!8070 = !DILocation(line: 183, column: 9, scope: !8071, inlinedAt: !7945)
!8071 = distinct !DILexicalBlock(scope: !7910, file: !2097, line: 183, column: 9)
!8072 = !DILocation(line: 183, column: 16, scope: !8071, inlinedAt: !7945)
!8073 = !DILocation(line: 183, column: 9, scope: !7910, inlinedAt: !7945)
!8074 = !DILocation(line: 183, column: 38, scope: !8075, inlinedAt: !7945)
!8075 = !DILexicalBlockFile(scope: !8071, file: !2097, discriminator: 1)
!8076 = !DILocation(line: 183, column: 43, scope: !8075, inlinedAt: !7945)
!8077 = !DILocation(line: 183, column: 40, scope: !8075, inlinedAt: !7945)
!8078 = !DILocation(line: 183, column: 30, scope: !8075, inlinedAt: !7945)
!8079 = !DILocation(line: 183, column: 28, scope: !8075, inlinedAt: !7945)
!8080 = !DILocation(line: 183, column: 21, scope: !8075, inlinedAt: !7945)
!8081 = !DILocation(line: 184, column: 27, scope: !8071, inlinedAt: !7945)
!8082 = !DILocation(line: 184, column: 33, scope: !8071, inlinedAt: !7945)
!8083 = !DILocation(line: 184, column: 32, scope: !8071, inlinedAt: !7945)
!8084 = !DILocation(line: 184, column: 29, scope: !8071, inlinedAt: !7945)
!8085 = !DILocation(line: 184, column: 19, scope: !8071, inlinedAt: !7945)
!8086 = !DILocation(line: 184, column: 17, scope: !8071, inlinedAt: !7945)
!8087 = !DILocation(line: 186, column: 9, scope: !8088, inlinedAt: !7945)
!8088 = distinct !DILexicalBlock(scope: !7910, file: !2097, line: 186, column: 9)
!8089 = !DILocation(line: 186, column: 16, scope: !8088, inlinedAt: !7945)
!8090 = !DILocation(line: 186, column: 9, scope: !7910, inlinedAt: !7945)
!8091 = !DILocation(line: 187, column: 18, scope: !8092, inlinedAt: !7945)
!8092 = distinct !DILexicalBlock(scope: !8088, file: !2097, line: 186, column: 21)
!8093 = !DILocation(line: 187, column: 28, scope: !8092, inlinedAt: !7945)
!8094 = !DILocation(line: 187, column: 25, scope: !8092, inlinedAt: !7945)
!8095 = !DILocation(line: 187, column: 16, scope: !8092, inlinedAt: !7945)
!8096 = !DILocation(line: 188, column: 27, scope: !8092, inlinedAt: !7945)
!8097 = !DILocation(line: 188, column: 34, scope: !8092, inlinedAt: !7945)
!8098 = !DILocation(line: 188, column: 23, scope: !8092, inlinedAt: !7945)
!8099 = !DILocation(line: 188, column: 18, scope: !8092, inlinedAt: !7945)
!8100 = !DILocation(line: 190, column: 15, scope: !8101, inlinedAt: !7945)
!8101 = distinct !DILexicalBlock(scope: !8092, file: !2097, line: 190, column: 9)
!8102 = !DILocation(line: 190, column: 14, scope: !8101, inlinedAt: !7945)
!8103 = !DILocation(line: 190, column: 19, scope: !8104, inlinedAt: !7945)
!8104 = !DILexicalBlockFile(scope: !8105, file: !2097, discriminator: 1)
!8105 = distinct !DILexicalBlock(scope: !8101, file: !2097, line: 190, column: 9)
!8106 = !DILocation(line: 190, column: 21, scope: !8104, inlinedAt: !7945)
!8107 = !DILocation(line: 190, column: 20, scope: !8104, inlinedAt: !7945)
!8108 = !DILocation(line: 190, column: 9, scope: !8104, inlinedAt: !7945)
!8109 = !DILocation(line: 191, column: 21, scope: !8110, inlinedAt: !7945)
!8110 = distinct !DILexicalBlock(scope: !8105, file: !2097, line: 190, column: 33)
!8111 = !DILocation(line: 191, column: 30, scope: !8110, inlinedAt: !7945)
!8112 = !DILocation(line: 191, column: 28, scope: !8110, inlinedAt: !7945)
!8113 = !DILocation(line: 191, column: 19, scope: !8110, inlinedAt: !7945)
!8114 = !DILocation(line: 192, column: 29, scope: !8110, inlinedAt: !7945)
!8115 = !DILocation(line: 192, column: 20, scope: !8110, inlinedAt: !7945)
!8116 = !DILocation(line: 192, column: 37, scope: !8110, inlinedAt: !7945)
!8117 = !DILocation(line: 192, column: 35, scope: !8110, inlinedAt: !7945)
!8118 = !DILocation(line: 192, column: 18, scope: !8110, inlinedAt: !7945)
!8119 = !DILocation(line: 193, column: 29, scope: !8110, inlinedAt: !7945)
!8120 = !DILocation(line: 193, column: 36, scope: !8110, inlinedAt: !7945)
!8121 = !DILocation(line: 193, column: 34, scope: !8110, inlinedAt: !7945)
!8122 = !DILocation(line: 193, column: 49, scope: !8110, inlinedAt: !7945)
!8123 = !DILocation(line: 193, column: 46, scope: !8110, inlinedAt: !7945)
!8124 = !DILocation(line: 193, column: 22, scope: !8110, inlinedAt: !7945)
!8125 = !DILocation(line: 193, column: 20, scope: !8110, inlinedAt: !7945)
!8126 = !DILocation(line: 194, column: 17, scope: !8127, inlinedAt: !7945)
!8127 = distinct !DILexicalBlock(scope: !8110, file: !2097, line: 194, column: 17)
!8128 = !DILocation(line: 194, column: 22, scope: !8127, inlinedAt: !7945)
!8129 = !DILocation(line: 194, column: 19, scope: !8127, inlinedAt: !7945)
!8130 = !DILocation(line: 194, column: 17, scope: !8110, inlinedAt: !7945)
!8131 = !DILocation(line: 195, column: 27, scope: !8127, inlinedAt: !7945)
!8132 = !DILocation(line: 195, column: 24, scope: !8127, inlinedAt: !7945)
!8133 = !DILocation(line: 195, column: 17, scope: !8127, inlinedAt: !7945)
!8134 = !DILocation(line: 196, column: 22, scope: !8110, inlinedAt: !7945)
!8135 = !DILocation(line: 190, column: 30, scope: !8136, inlinedAt: !7945)
!8136 = !DILexicalBlockFile(scope: !8105, file: !2097, discriminator: 2)
!8137 = !DILocation(line: 190, column: 9, scope: !8136, inlinedAt: !7945)
!8138 = distinct !{!8138, !8139}
!8139 = !DILocation(line: 190, column: 9, scope: !8092)
!8140 = !DILocation(line: 199, column: 5, scope: !8092, inlinedAt: !7945)
!8141 = !DILocation(line: 200, column: 23, scope: !8088, inlinedAt: !7945)
!8142 = !DILocation(line: 200, column: 22, scope: !8088, inlinedAt: !7945)
!8143 = !DILocation(line: 200, column: 17, scope: !8088, inlinedAt: !7945)
!8144 = !DILocation(line: 202, column: 12, scope: !7910, inlinedAt: !7945)
!8145 = !DILocation(line: 908, column: 32, scope: !7913)
!8146 = !DILocation(line: 909, column: 41, scope: !7913)
!8147 = !DILocation(line: 909, column: 32, scope: !7913)
!8148 = !DILocation(line: 909, column: 48, scope: !7913)
!8149 = !DILocation(line: 909, column: 30, scope: !7913)
!8150 = !DILocation(line: 910, column: 41, scope: !7913)
!8151 = !DILocation(line: 910, column: 46, scope: !7913)
!8152 = !DILocation(line: 910, column: 57, scope: !7913)
!8153 = !DILocation(line: 910, column: 34, scope: !7913)
!8154 = !DILocation(line: 910, column: 32, scope: !7913)
!8155 = !DILocation(line: 911, column: 56, scope: !7913)
!8156 = !DILocation(line: 911, column: 54, scope: !7913)
!8157 = !DILocation(line: 911, column: 34, scope: !7913)
!8158 = !DILocation(line: 180, column: 23, scope: !7910, inlinedAt: !7912)
!8159 = !DILocation(line: 180, column: 21, scope: !7910, inlinedAt: !7912)
!8160 = !DILocation(line: 181, column: 18, scope: !7910, inlinedAt: !7912)
!8161 = !DILocation(line: 181, column: 23, scope: !7910, inlinedAt: !7912)
!8162 = !DILocation(line: 183, column: 9, scope: !8071, inlinedAt: !7912)
!8163 = !DILocation(line: 183, column: 16, scope: !8071, inlinedAt: !7912)
!8164 = !DILocation(line: 183, column: 9, scope: !7910, inlinedAt: !7912)
!8165 = !DILocation(line: 183, column: 38, scope: !8075, inlinedAt: !7912)
!8166 = !DILocation(line: 183, column: 43, scope: !8075, inlinedAt: !7912)
!8167 = !DILocation(line: 183, column: 40, scope: !8075, inlinedAt: !7912)
!8168 = !DILocation(line: 183, column: 30, scope: !8075, inlinedAt: !7912)
!8169 = !DILocation(line: 183, column: 28, scope: !8075, inlinedAt: !7912)
!8170 = !DILocation(line: 183, column: 21, scope: !8075, inlinedAt: !7912)
!8171 = !DILocation(line: 184, column: 27, scope: !8071, inlinedAt: !7912)
!8172 = !DILocation(line: 184, column: 33, scope: !8071, inlinedAt: !7912)
!8173 = !DILocation(line: 184, column: 32, scope: !8071, inlinedAt: !7912)
!8174 = !DILocation(line: 184, column: 29, scope: !8071, inlinedAt: !7912)
!8175 = !DILocation(line: 184, column: 19, scope: !8071, inlinedAt: !7912)
!8176 = !DILocation(line: 184, column: 17, scope: !8071, inlinedAt: !7912)
!8177 = !DILocation(line: 186, column: 9, scope: !8088, inlinedAt: !7912)
!8178 = !DILocation(line: 186, column: 16, scope: !8088, inlinedAt: !7912)
!8179 = !DILocation(line: 186, column: 9, scope: !7910, inlinedAt: !7912)
!8180 = !DILocation(line: 187, column: 18, scope: !8092, inlinedAt: !7912)
!8181 = !DILocation(line: 187, column: 28, scope: !8092, inlinedAt: !7912)
!8182 = !DILocation(line: 187, column: 25, scope: !8092, inlinedAt: !7912)
!8183 = !DILocation(line: 187, column: 16, scope: !8092, inlinedAt: !7912)
!8184 = !DILocation(line: 188, column: 27, scope: !8092, inlinedAt: !7912)
!8185 = !DILocation(line: 188, column: 34, scope: !8092, inlinedAt: !7912)
!8186 = !DILocation(line: 188, column: 23, scope: !8092, inlinedAt: !7912)
!8187 = !DILocation(line: 188, column: 18, scope: !8092, inlinedAt: !7912)
!8188 = !DILocation(line: 190, column: 15, scope: !8101, inlinedAt: !7912)
!8189 = !DILocation(line: 190, column: 14, scope: !8101, inlinedAt: !7912)
!8190 = !DILocation(line: 190, column: 19, scope: !8104, inlinedAt: !7912)
!8191 = !DILocation(line: 190, column: 21, scope: !8104, inlinedAt: !7912)
!8192 = !DILocation(line: 190, column: 20, scope: !8104, inlinedAt: !7912)
!8193 = !DILocation(line: 190, column: 9, scope: !8104, inlinedAt: !7912)
!8194 = !DILocation(line: 191, column: 21, scope: !8110, inlinedAt: !7912)
!8195 = !DILocation(line: 191, column: 30, scope: !8110, inlinedAt: !7912)
!8196 = !DILocation(line: 191, column: 28, scope: !8110, inlinedAt: !7912)
!8197 = !DILocation(line: 191, column: 19, scope: !8110, inlinedAt: !7912)
!8198 = !DILocation(line: 192, column: 29, scope: !8110, inlinedAt: !7912)
!8199 = !DILocation(line: 192, column: 20, scope: !8110, inlinedAt: !7912)
!8200 = !DILocation(line: 192, column: 37, scope: !8110, inlinedAt: !7912)
!8201 = !DILocation(line: 192, column: 35, scope: !8110, inlinedAt: !7912)
!8202 = !DILocation(line: 192, column: 18, scope: !8110, inlinedAt: !7912)
!8203 = !DILocation(line: 193, column: 29, scope: !8110, inlinedAt: !7912)
!8204 = !DILocation(line: 193, column: 36, scope: !8110, inlinedAt: !7912)
!8205 = !DILocation(line: 193, column: 34, scope: !8110, inlinedAt: !7912)
!8206 = !DILocation(line: 193, column: 49, scope: !8110, inlinedAt: !7912)
!8207 = !DILocation(line: 193, column: 46, scope: !8110, inlinedAt: !7912)
!8208 = !DILocation(line: 193, column: 22, scope: !8110, inlinedAt: !7912)
!8209 = !DILocation(line: 193, column: 20, scope: !8110, inlinedAt: !7912)
!8210 = !DILocation(line: 194, column: 17, scope: !8127, inlinedAt: !7912)
!8211 = !DILocation(line: 194, column: 22, scope: !8127, inlinedAt: !7912)
!8212 = !DILocation(line: 194, column: 19, scope: !8127, inlinedAt: !7912)
!8213 = !DILocation(line: 194, column: 17, scope: !8110, inlinedAt: !7912)
!8214 = !DILocation(line: 195, column: 27, scope: !8127, inlinedAt: !7912)
!8215 = !DILocation(line: 195, column: 24, scope: !8127, inlinedAt: !7912)
!8216 = !DILocation(line: 195, column: 17, scope: !8127, inlinedAt: !7912)
!8217 = !DILocation(line: 196, column: 22, scope: !8110, inlinedAt: !7912)
!8218 = !DILocation(line: 190, column: 30, scope: !8136, inlinedAt: !7912)
!8219 = !DILocation(line: 190, column: 9, scope: !8136, inlinedAt: !7912)
!8220 = !DILocation(line: 199, column: 5, scope: !8092, inlinedAt: !7912)
!8221 = !DILocation(line: 200, column: 23, scope: !8088, inlinedAt: !7912)
!8222 = !DILocation(line: 200, column: 22, scope: !8088, inlinedAt: !7912)
!8223 = !DILocation(line: 200, column: 17, scope: !8088, inlinedAt: !7912)
!8224 = !DILocation(line: 202, column: 12, scope: !7910, inlinedAt: !7912)
!8225 = !DILocation(line: 911, column: 32, scope: !7913)
!8226 = !DILocation(line: 923, column: 28, scope: !7916)
!8227 = !DILocation(line: 923, column: 25, scope: !7916)
!8228 = !DILocation(line: 926, column: 46, scope: !7916)
!8229 = !DILocation(line: 926, column: 37, scope: !7916)
!8230 = !DILocation(line: 926, column: 35, scope: !7916)
!8231 = !DILocation(line: 927, column: 47, scope: !7916)
!8232 = !DILocation(line: 927, column: 38, scope: !7916)
!8233 = !DILocation(line: 927, column: 36, scope: !7916)
!8234 = !DILocation(line: 928, column: 25, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !7916, file: !1807, line: 928, column: 25)
!8236 = !DILocation(line: 928, column: 39, scope: !8235)
!8237 = !DILocation(line: 928, column: 25, scope: !7916)
!8238 = !DILocation(line: 928, column: 61, scope: !8239)
!8239 = !DILexicalBlockFile(scope: !8235, file: !1807, discriminator: 1)
!8240 = !DILocation(line: 928, column: 46, scope: !8239)
!8241 = !DILocation(line: 929, column: 41, scope: !8235)
!8242 = !DILocation(line: 930, column: 46, scope: !7916)
!8243 = !DILocation(line: 930, column: 44, scope: !7916)
!8244 = !DILocation(line: 930, column: 62, scope: !7916)
!8245 = !DILocation(line: 930, column: 60, scope: !7916)
!8246 = !DILocation(line: 930, column: 36, scope: !7916)
!8247 = !DILocation(line: 934, column: 37, scope: !7916)
!8248 = !DILocation(line: 934, column: 28, scope: !7916)
!8249 = !DILocation(line: 934, column: 46, scope: !7916)
!8250 = !DILocation(line: 934, column: 44, scope: !7916)
!8251 = !DILocation(line: 934, column: 26, scope: !7916)
!8252 = !DILocation(line: 935, column: 58, scope: !7916)
!8253 = !DILocation(line: 935, column: 63, scope: !7916)
!8254 = !DILocation(line: 935, column: 74, scope: !7916)
!8255 = !DILocation(line: 935, column: 51, scope: !7916)
!8256 = !DILocation(line: 935, column: 44, scope: !7916)
!8257 = !DILocation(line: 935, column: 21, scope: !7916)
!8258 = !DILocation(line: 935, column: 40, scope: !7916)
!8259 = !DILocation(line: 935, column: 24, scope: !7916)
!8260 = !DILocation(line: 935, column: 49, scope: !7916)
!8261 = !DILocation(line: 936, column: 37, scope: !7916)
!8262 = !DILocation(line: 936, column: 28, scope: !7916)
!8263 = !DILocation(line: 936, column: 46, scope: !7916)
!8264 = !DILocation(line: 936, column: 44, scope: !7916)
!8265 = !DILocation(line: 936, column: 26, scope: !7916)
!8266 = !DILocation(line: 937, column: 59, scope: !7916)
!8267 = !DILocation(line: 937, column: 64, scope: !7916)
!8268 = !DILocation(line: 937, column: 75, scope: !7916)
!8269 = !DILocation(line: 937, column: 52, scope: !7916)
!8270 = !DILocation(line: 937, column: 45, scope: !7916)
!8271 = !DILocation(line: 937, column: 21, scope: !7916)
!8272 = !DILocation(line: 937, column: 41, scope: !7916)
!8273 = !DILocation(line: 937, column: 24, scope: !7916)
!8274 = !DILocation(line: 937, column: 50, scope: !7916)
!8275 = !DILocation(line: 943, column: 17, scope: !7916)
!8276 = !DILocation(line: 890, column: 58, scope: !8277)
!8277 = !DILexicalBlockFile(scope: !7917, file: !1807, discriminator: 2)
!8278 = !DILocation(line: 890, column: 17, scope: !8277)
!8279 = distinct !{!8279, !8280}
!8280 = !DILocation(line: 890, column: 17, scope: !7919)
!8281 = !DILocation(line: 944, column: 13, scope: !7919)
!8282 = !DILocation(line: 945, column: 9, scope: !7921)
!8283 = !DILocation(line: 946, column: 33, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !7922, file: !1807, line: 945, column: 16)
!8285 = !DILocation(line: 946, column: 13, scope: !8284)
!8286 = !DILocation(line: 946, column: 16, scope: !8284)
!8287 = !DILocation(line: 946, column: 37, scope: !8284)
!8288 = !DILocation(line: 948, column: 5, scope: !7923)
!8289 = !DILocation(line: 879, column: 40, scope: !8290)
!8290 = !DILexicalBlockFile(scope: !7924, file: !1807, discriminator: 2)
!8291 = !DILocation(line: 879, column: 5, scope: !8290)
!8292 = distinct !{!8292, !8293}
!8293 = !DILocation(line: 879, column: 5, scope: !7906)
!8294 = !DILocation(line: 949, column: 1, scope: !7906)
!8295 = distinct !DISubprogram(name: "coupling_strategy", scope: !1807, file: !1807, line: 951, type: !8296, isLocal: true, isDefinition: true, scopeLine: 953, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!8296 = !DISubroutineType(types: !8297)
!8297 = !{!1015, !1852, !1015, !1201}
!8298 = !DILocalVariable(name: "s", arg: 1, scope: !8295, file: !1807, line: 951, type: !1852)
!8299 = !DILocation(line: 951, column: 55, scope: !8295)
!8300 = !DILocalVariable(name: "blk", arg: 2, scope: !8295, file: !1807, line: 951, type: !1015)
!8301 = !DILocation(line: 951, column: 62, scope: !8295)
!8302 = !DILocalVariable(name: "bit_alloc_stages", arg: 3, scope: !8295, file: !1807, line: 952, type: !1201)
!8303 = !DILocation(line: 952, column: 46, scope: !8295)
!8304 = !DILocalVariable(name: "bc", scope: !8295, file: !1807, line: 954, type: !3872)
!8305 = !DILocation(line: 954, column: 20, scope: !8295)
!8306 = !DILocation(line: 954, column: 26, scope: !8295)
!8307 = !DILocation(line: 954, column: 29, scope: !8295)
!8308 = !DILocalVariable(name: "fbw_channels", scope: !8295, file: !1807, line: 955, type: !1015)
!8309 = !DILocation(line: 955, column: 9, scope: !8295)
!8310 = !DILocation(line: 955, column: 24, scope: !8295)
!8311 = !DILocation(line: 955, column: 27, scope: !8295)
!8312 = !DILocalVariable(name: "channel_mode", scope: !8295, file: !1807, line: 956, type: !1015)
!8313 = !DILocation(line: 956, column: 9, scope: !8295)
!8314 = !DILocation(line: 956, column: 24, scope: !8295)
!8315 = !DILocation(line: 956, column: 27, scope: !8295)
!8316 = !DILocalVariable(name: "ch", scope: !8295, file: !1807, line: 957, type: !1015)
!8317 = !DILocation(line: 957, column: 9, scope: !8295)
!8318 = !DILocation(line: 959, column: 12, scope: !8295)
!8319 = !DILocation(line: 959, column: 5, scope: !8295)
!8320 = !DILocation(line: 960, column: 10, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8295, file: !1807, line: 960, column: 9)
!8322 = !DILocation(line: 960, column: 13, scope: !8321)
!8323 = !DILocation(line: 960, column: 9, scope: !8295)
!8324 = !DILocation(line: 961, column: 40, scope: !8321)
!8325 = !DILocation(line: 961, column: 30, scope: !8321)
!8326 = !DILocation(line: 961, column: 23, scope: !8321)
!8327 = !DILocation(line: 961, column: 9, scope: !8321)
!8328 = !DILocation(line: 961, column: 12, scope: !8321)
!8329 = !DILocation(line: 961, column: 28, scope: !8321)
!8330 = !DILocation(line: 962, column: 23, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8295, file: !1807, line: 962, column: 9)
!8332 = !DILocation(line: 962, column: 9, scope: !8331)
!8333 = !DILocation(line: 962, column: 12, scope: !8331)
!8334 = !DILocation(line: 962, column: 9, scope: !8295)
!8335 = !DILocalVariable(name: "cpl_start_subband", scope: !8336, file: !1807, line: 964, type: !1015)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !1807, line: 962, column: 29)
!8337 = !DILocation(line: 964, column: 13, scope: !8336)
!8338 = !DILocalVariable(name: "cpl_end_subband", scope: !8336, file: !1807, line: 964, type: !1015)
!8339 = !DILocation(line: 964, column: 32, scope: !8336)
!8340 = !DILocation(line: 966, column: 13, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8336, file: !1807, line: 966, column: 13)
!8342 = !DILocation(line: 966, column: 26, scope: !8341)
!8343 = !DILocation(line: 966, column: 13, scope: !8336)
!8344 = !DILocation(line: 967, column: 20, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8341, file: !1807, line: 966, column: 47)
!8346 = !DILocation(line: 967, column: 23, scope: !8345)
!8347 = !DILocation(line: 967, column: 13, scope: !8345)
!8348 = !DILocation(line: 968, column: 13, scope: !8345)
!8349 = !DILocation(line: 972, column: 13, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8336, file: !1807, line: 972, column: 13)
!8351 = !DILocation(line: 972, column: 16, scope: !8350)
!8352 = !DILocation(line: 972, column: 21, scope: !8350)
!8353 = !DILocation(line: 972, column: 34, scope: !8354)
!8354 = !DILexicalBlockFile(scope: !8350, file: !1807, discriminator: 1)
!8355 = !DILocation(line: 972, column: 24, scope: !8354)
!8356 = !DILocation(line: 972, column: 13, scope: !8354)
!8357 = !DILocation(line: 974, column: 35, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8350, file: !1807, line: 972, column: 39)
!8359 = !DILocation(line: 974, column: 38, scope: !8358)
!8360 = !DILocation(line: 974, column: 13, scope: !8358)
!8361 = !DILocation(line: 975, column: 13, scope: !8358)
!8362 = !DILocation(line: 979, column: 13, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8336, file: !1807, line: 979, column: 13)
!8364 = !DILocation(line: 979, column: 16, scope: !8363)
!8365 = !DILocation(line: 979, column: 21, scope: !8363)
!8366 = !DILocation(line: 979, column: 24, scope: !8367)
!8367 = !DILexicalBlockFile(scope: !8363, file: !1807, discriminator: 1)
!8368 = !DILocation(line: 979, column: 27, scope: !8367)
!8369 = !DILocation(line: 979, column: 40, scope: !8367)
!8370 = !DILocation(line: 979, column: 13, scope: !8367)
!8371 = !DILocation(line: 980, column: 13, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8363, file: !1807, line: 979, column: 62)
!8373 = !DILocation(line: 980, column: 16, scope: !8372)
!8374 = !DILocation(line: 980, column: 34, scope: !8372)
!8375 = !DILocation(line: 981, column: 13, scope: !8372)
!8376 = !DILocation(line: 981, column: 16, scope: !8372)
!8377 = !DILocation(line: 981, column: 34, scope: !8372)
!8378 = !DILocation(line: 982, column: 9, scope: !8372)
!8379 = !DILocation(line: 983, column: 21, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !1807, line: 983, column: 13)
!8381 = distinct !DILexicalBlock(scope: !8363, file: !1807, line: 982, column: 16)
!8382 = !DILocation(line: 983, column: 18, scope: !8380)
!8383 = !DILocation(line: 983, column: 26, scope: !8384)
!8384 = !DILexicalBlockFile(scope: !8385, file: !1807, discriminator: 1)
!8385 = distinct !DILexicalBlock(scope: !8380, file: !1807, line: 983, column: 13)
!8386 = !DILocation(line: 983, column: 32, scope: !8384)
!8387 = !DILocation(line: 983, column: 29, scope: !8384)
!8388 = !DILocation(line: 983, column: 13, scope: !8384)
!8389 = !DILocation(line: 984, column: 51, scope: !8385)
!8390 = !DILocation(line: 984, column: 41, scope: !8385)
!8391 = !DILocation(line: 984, column: 35, scope: !8385)
!8392 = !DILocation(line: 984, column: 17, scope: !8385)
!8393 = !DILocation(line: 984, column: 20, scope: !8385)
!8394 = !DILocation(line: 984, column: 39, scope: !8385)
!8395 = !DILocation(line: 983, column: 48, scope: !8396)
!8396 = !DILexicalBlockFile(scope: !8385, file: !1807, discriminator: 2)
!8397 = !DILocation(line: 983, column: 13, scope: !8396)
!8398 = distinct !{!8398, !8399}
!8399 = !DILocation(line: 983, column: 13, scope: !8381)
!8400 = !DILocation(line: 988, column: 13, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8336, file: !1807, line: 988, column: 13)
!8402 = !DILocation(line: 988, column: 26, scope: !8401)
!8403 = !DILocation(line: 988, column: 13, scope: !8336)
!8404 = !DILocation(line: 989, column: 47, scope: !8401)
!8405 = !DILocation(line: 989, column: 37, scope: !8401)
!8406 = !DILocation(line: 989, column: 13, scope: !8401)
!8407 = !DILocation(line: 989, column: 16, scope: !8401)
!8408 = !DILocation(line: 989, column: 35, scope: !8401)
!8409 = !DILocation(line: 992, column: 38, scope: !8336)
!8410 = !DILocation(line: 992, column: 29, scope: !8336)
!8411 = !DILocation(line: 992, column: 27, scope: !8336)
!8412 = !DILocation(line: 993, column: 27, scope: !8336)
!8413 = !DILocation(line: 993, column: 30, scope: !8336)
!8414 = !DILocation(line: 993, column: 44, scope: !8415)
!8415 = !DILexicalBlockFile(scope: !8336, file: !1807, discriminator: 1)
!8416 = !DILocation(line: 993, column: 47, scope: !8415)
!8417 = !DILocation(line: 993, column: 66, scope: !8415)
!8418 = !DILocation(line: 993, column: 72, scope: !8415)
!8419 = !DILocation(line: 993, column: 27, scope: !8415)
!8420 = !DILocation(line: 994, column: 52, scope: !8336)
!8421 = !DILocation(line: 994, column: 43, scope: !8336)
!8422 = !DILocation(line: 994, column: 59, scope: !8336)
!8423 = !DILocation(line: 993, column: 27, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !8336, file: !1807, discriminator: 2)
!8425 = !DILocation(line: 993, column: 27, scope: !8426)
!8426 = !DILexicalBlockFile(scope: !8336, file: !1807, discriminator: 3)
!8427 = !DILocation(line: 993, column: 25, scope: !8426)
!8428 = !DILocation(line: 995, column: 13, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8336, file: !1807, line: 995, column: 13)
!8430 = !DILocation(line: 995, column: 34, scope: !8429)
!8431 = !DILocation(line: 995, column: 31, scope: !8429)
!8432 = !DILocation(line: 995, column: 13, scope: !8336)
!8433 = !DILocation(line: 996, column: 20, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !1807, line: 995, column: 51)
!8435 = !DILocation(line: 996, column: 23, scope: !8434)
!8436 = !DILocation(line: 997, column: 20, scope: !8434)
!8437 = !DILocation(line: 997, column: 39, scope: !8434)
!8438 = !DILocation(line: 996, column: 13, scope: !8434)
!8439 = !DILocation(line: 998, column: 13, scope: !8434)
!8440 = !DILocation(line: 1000, column: 28, scope: !8336)
!8441 = !DILocation(line: 1000, column: 46, scope: !8336)
!8442 = !DILocation(line: 1000, column: 51, scope: !8336)
!8443 = !DILocation(line: 1000, column: 9, scope: !8336)
!8444 = !DILocation(line: 1000, column: 12, scope: !8336)
!8445 = !DILocation(line: 1000, column: 26, scope: !8336)
!8446 = !DILocation(line: 1001, column: 26, scope: !8336)
!8447 = !DILocation(line: 1001, column: 42, scope: !8336)
!8448 = !DILocation(line: 1001, column: 47, scope: !8336)
!8449 = !DILocation(line: 1001, column: 9, scope: !8336)
!8450 = !DILocation(line: 1001, column: 12, scope: !8336)
!8451 = !DILocation(line: 1001, column: 24, scope: !8336)
!8452 = !DILocation(line: 1003, column: 31, scope: !8336)
!8453 = !DILocation(line: 1003, column: 35, scope: !8336)
!8454 = !DILocation(line: 1003, column: 40, scope: !8336)
!8455 = !DILocation(line: 1003, column: 43, scope: !8336)
!8456 = !DILocation(line: 1003, column: 52, scope: !8336)
!8457 = !DILocation(line: 1004, column: 31, scope: !8336)
!8458 = !DILocation(line: 1006, column: 32, scope: !8336)
!8459 = !DILocation(line: 1006, column: 35, scope: !8336)
!8460 = !DILocation(line: 1006, column: 50, scope: !8336)
!8461 = !DILocation(line: 1006, column: 53, scope: !8336)
!8462 = !DILocation(line: 1007, column: 31, scope: !8336)
!8463 = !DILocation(line: 1007, column: 34, scope: !8336)
!8464 = !DILocation(line: 1003, column: 9, scope: !8336)
!8465 = !DILocation(line: 1008, column: 5, scope: !8336)
!8466 = !DILocation(line: 1010, column: 17, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !1807, line: 1010, column: 9)
!8468 = distinct !DILexicalBlock(scope: !8331, file: !1807, line: 1008, column: 12)
!8469 = !DILocation(line: 1010, column: 14, scope: !8467)
!8470 = !DILocation(line: 1010, column: 22, scope: !8471)
!8471 = !DILexicalBlockFile(scope: !8472, file: !1807, discriminator: 1)
!8472 = distinct !DILexicalBlock(scope: !8467, file: !1807, line: 1010, column: 9)
!8473 = !DILocation(line: 1010, column: 28, scope: !8471)
!8474 = !DILocation(line: 1010, column: 25, scope: !8471)
!8475 = !DILocation(line: 1010, column: 9, scope: !8471)
!8476 = !DILocation(line: 1011, column: 31, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8472, file: !1807, line: 1010, column: 48)
!8478 = !DILocation(line: 1011, column: 13, scope: !8477)
!8479 = !DILocation(line: 1011, column: 16, scope: !8477)
!8480 = !DILocation(line: 1011, column: 35, scope: !8477)
!8481 = !DILocation(line: 1012, column: 33, scope: !8477)
!8482 = !DILocation(line: 1012, column: 13, scope: !8477)
!8483 = !DILocation(line: 1012, column: 16, scope: !8477)
!8484 = !DILocation(line: 1012, column: 37, scope: !8477)
!8485 = !DILocation(line: 1013, column: 9, scope: !8477)
!8486 = !DILocation(line: 1010, column: 44, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8472, file: !1807, discriminator: 2)
!8488 = !DILocation(line: 1010, column: 9, scope: !8487)
!8489 = distinct !{!8489, !8490}
!8490 = !DILocation(line: 1010, column: 9, scope: !8468)
!8491 = !DILocation(line: 1014, column: 29, scope: !8468)
!8492 = !DILocation(line: 1014, column: 32, scope: !8468)
!8493 = !DILocation(line: 1014, column: 9, scope: !8468)
!8494 = !DILocation(line: 1014, column: 12, scope: !8468)
!8495 = !DILocation(line: 1014, column: 27, scope: !8468)
!8496 = !DILocation(line: 1015, column: 9, scope: !8468)
!8497 = !DILocation(line: 1015, column: 12, scope: !8468)
!8498 = !DILocation(line: 1015, column: 31, scope: !8468)
!8499 = !DILocation(line: 1018, column: 5, scope: !8295)
!8500 = !DILocation(line: 1019, column: 1, scope: !8295)
!8501 = distinct !DISubprogram(name: "coupling_coordinates", scope: !1807, file: !1807, line: 1021, type: !7757, isLocal: true, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!8502 = !DILocalVariable(name: "s", arg: 1, scope: !8501, file: !1807, line: 1021, type: !1852)
!8503 = !DILocation(line: 1021, column: 58, scope: !8501)
!8504 = !DILocalVariable(name: "blk", arg: 2, scope: !8501, file: !1807, line: 1021, type: !1015)
!8505 = !DILocation(line: 1021, column: 65, scope: !8501)
!8506 = !DILocalVariable(name: "bc", scope: !8501, file: !1807, line: 1023, type: !3872)
!8507 = !DILocation(line: 1023, column: 20, scope: !8501)
!8508 = !DILocation(line: 1023, column: 26, scope: !8501)
!8509 = !DILocation(line: 1023, column: 29, scope: !8501)
!8510 = !DILocalVariable(name: "fbw_channels", scope: !8501, file: !1807, line: 1024, type: !1015)
!8511 = !DILocation(line: 1024, column: 9, scope: !8501)
!8512 = !DILocation(line: 1024, column: 24, scope: !8501)
!8513 = !DILocation(line: 1024, column: 27, scope: !8501)
!8514 = !DILocalVariable(name: "ch", scope: !8501, file: !1807, line: 1025, type: !1015)
!8515 = !DILocation(line: 1025, column: 9, scope: !8501)
!8516 = !DILocalVariable(name: "bnd", scope: !8501, file: !1807, line: 1025, type: !1015)
!8517 = !DILocation(line: 1025, column: 13, scope: !8501)
!8518 = !DILocalVariable(name: "cpl_coords_exist", scope: !8501, file: !1807, line: 1026, type: !1015)
!8519 = !DILocation(line: 1026, column: 9, scope: !8501)
!8520 = !DILocation(line: 1028, column: 13, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8501, file: !1807, line: 1028, column: 5)
!8522 = !DILocation(line: 1028, column: 10, scope: !8521)
!8523 = !DILocation(line: 1028, column: 18, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8525, file: !1807, discriminator: 1)
!8525 = distinct !DILexicalBlock(scope: !8521, file: !1807, line: 1028, column: 5)
!8526 = !DILocation(line: 1028, column: 24, scope: !8524)
!8527 = !DILocation(line: 1028, column: 21, scope: !8524)
!8528 = !DILocation(line: 1028, column: 5, scope: !8524)
!8529 = !DILocation(line: 1029, column: 31, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !1807, line: 1029, column: 13)
!8531 = distinct !DILexicalBlock(scope: !8525, file: !1807, line: 1028, column: 44)
!8532 = !DILocation(line: 1029, column: 13, scope: !8530)
!8533 = !DILocation(line: 1029, column: 16, scope: !8530)
!8534 = !DILocation(line: 1029, column: 13, scope: !8531)
!8535 = !DILocation(line: 1030, column: 18, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !1807, line: 1030, column: 17)
!8537 = distinct !DILexicalBlock(scope: !8530, file: !1807, line: 1029, column: 36)
!8538 = !DILocation(line: 1030, column: 21, scope: !8536)
!8539 = !DILocation(line: 1030, column: 26, scope: !8536)
!8540 = !DILocation(line: 1030, column: 49, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !8536, file: !1807, discriminator: 1)
!8542 = !DILocation(line: 1030, column: 29, scope: !8541)
!8543 = !DILocation(line: 1030, column: 32, scope: !8541)
!8544 = !DILocation(line: 1030, column: 54, scope: !8541)
!8545 = !DILocation(line: 1030, column: 67, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !8536, file: !1807, discriminator: 2)
!8547 = !DILocation(line: 1030, column: 57, scope: !8546)
!8548 = !DILocation(line: 1030, column: 17, scope: !8546)
!8549 = !DILocalVariable(name: "master_cpl_coord", scope: !8550, file: !1807, line: 1031, type: !1015)
!8550 = distinct !DILexicalBlock(scope: !8536, file: !1807, line: 1030, column: 72)
!8551 = !DILocation(line: 1031, column: 21, scope: !8550)
!8552 = !DILocalVariable(name: "cpl_coord_exp", scope: !8550, file: !1807, line: 1031, type: !1015)
!8553 = !DILocation(line: 1031, column: 39, scope: !8550)
!8554 = !DILocalVariable(name: "cpl_coord_mant", scope: !8550, file: !1807, line: 1031, type: !1015)
!8555 = !DILocation(line: 1031, column: 54, scope: !8550)
!8556 = !DILocation(line: 1032, column: 37, scope: !8550)
!8557 = !DILocation(line: 1032, column: 17, scope: !8550)
!8558 = !DILocation(line: 1032, column: 20, scope: !8550)
!8559 = !DILocation(line: 1032, column: 41, scope: !8550)
!8560 = !DILocation(line: 1033, column: 34, scope: !8550)
!8561 = !DILocation(line: 1034, column: 49, scope: !8550)
!8562 = !DILocation(line: 1034, column: 40, scope: !8550)
!8563 = !DILocation(line: 1034, column: 38, scope: !8550)
!8564 = !DILocation(line: 1034, column: 34, scope: !8550)
!8565 = !DILocation(line: 1035, column: 26, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8550, file: !1807, line: 1035, column: 17)
!8567 = !DILocation(line: 1035, column: 22, scope: !8566)
!8568 = !DILocation(line: 1035, column: 31, scope: !8569)
!8569 = !DILexicalBlockFile(scope: !8570, file: !1807, discriminator: 1)
!8570 = distinct !DILexicalBlock(scope: !8566, file: !1807, line: 1035, column: 17)
!8571 = !DILocation(line: 1035, column: 37, scope: !8569)
!8572 = !DILocation(line: 1035, column: 40, scope: !8569)
!8573 = !DILocation(line: 1035, column: 35, scope: !8569)
!8574 = !DILocation(line: 1035, column: 17, scope: !8569)
!8575 = !DILocation(line: 1036, column: 46, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8570, file: !1807, line: 1035, column: 62)
!8577 = !DILocation(line: 1036, column: 37, scope: !8576)
!8578 = !DILocation(line: 1036, column: 35, scope: !8576)
!8579 = !DILocation(line: 1037, column: 47, scope: !8576)
!8580 = !DILocation(line: 1037, column: 38, scope: !8576)
!8581 = !DILocation(line: 1037, column: 36, scope: !8576)
!8582 = !DILocation(line: 1038, column: 25, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8576, file: !1807, line: 1038, column: 25)
!8584 = !DILocation(line: 1038, column: 39, scope: !8583)
!8585 = !DILocation(line: 1038, column: 25, scope: !8576)
!8586 = !DILocation(line: 1039, column: 50, scope: !8583)
!8587 = !DILocation(line: 1039, column: 65, scope: !8583)
!8588 = !DILocation(line: 1039, column: 43, scope: !8583)
!8589 = !DILocation(line: 1039, column: 25, scope: !8583)
!8590 = !DILocation(line: 1039, column: 39, scope: !8583)
!8591 = !DILocation(line: 1039, column: 28, scope: !8583)
!8592 = !DILocation(line: 1039, column: 48, scope: !8583)
!8593 = !DILocation(line: 1041, column: 51, scope: !8583)
!8594 = !DILocation(line: 1041, column: 66, scope: !8583)
!8595 = !DILocation(line: 1041, column: 72, scope: !8583)
!8596 = !DILocation(line: 1041, column: 43, scope: !8583)
!8597 = !DILocation(line: 1041, column: 25, scope: !8583)
!8598 = !DILocation(line: 1041, column: 39, scope: !8583)
!8599 = !DILocation(line: 1041, column: 28, scope: !8583)
!8600 = !DILocation(line: 1041, column: 48, scope: !8583)
!8601 = !DILocation(line: 1042, column: 49, scope: !8576)
!8602 = !DILocation(line: 1042, column: 65, scope: !8576)
!8603 = !DILocation(line: 1042, column: 63, scope: !8576)
!8604 = !DILocation(line: 1042, column: 39, scope: !8576)
!8605 = !DILocation(line: 1042, column: 21, scope: !8576)
!8606 = !DILocation(line: 1042, column: 35, scope: !8576)
!8607 = !DILocation(line: 1042, column: 24, scope: !8576)
!8608 = !DILocation(line: 1042, column: 44, scope: !8576)
!8609 = !DILocation(line: 1043, column: 17, scope: !8576)
!8610 = !DILocation(line: 1035, column: 58, scope: !8611)
!8611 = !DILexicalBlockFile(scope: !8570, file: !1807, discriminator: 2)
!8612 = !DILocation(line: 1035, column: 17, scope: !8611)
!8613 = distinct !{!8613, !8614}
!8614 = !DILocation(line: 1035, column: 17, scope: !8550)
!8615 = !DILocation(line: 1044, column: 13, scope: !8550)
!8616 = !DILocation(line: 1044, column: 25, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8618, file: !1807, discriminator: 1)
!8618 = distinct !DILexicalBlock(scope: !8536, file: !1807, line: 1044, column: 24)
!8619 = !DILocation(line: 1044, column: 24, scope: !8617)
!8620 = !DILocation(line: 1045, column: 24, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8618, file: !1807, line: 1044, column: 30)
!8622 = !DILocation(line: 1045, column: 27, scope: !8621)
!8623 = !DILocation(line: 1045, column: 17, scope: !8621)
!8624 = !DILocation(line: 1047, column: 17, scope: !8621)
!8625 = !DILocation(line: 1049, column: 9, scope: !8537)
!8626 = !DILocation(line: 1051, column: 33, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8530, file: !1807, line: 1049, column: 16)
!8628 = !DILocation(line: 1051, column: 13, scope: !8627)
!8629 = !DILocation(line: 1051, column: 16, scope: !8627)
!8630 = !DILocation(line: 1051, column: 37, scope: !8627)
!8631 = !DILocation(line: 1053, column: 5, scope: !8531)
!8632 = !DILocation(line: 1028, column: 40, scope: !8633)
!8633 = !DILexicalBlockFile(scope: !8525, file: !1807, discriminator: 2)
!8634 = !DILocation(line: 1028, column: 5, scope: !8633)
!8635 = distinct !{!8635, !8636}
!8636 = !DILocation(line: 1028, column: 5, scope: !8501)
!8637 = !DILocation(line: 1055, column: 9, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8501, file: !1807, line: 1055, column: 9)
!8639 = !DILocation(line: 1055, column: 12, scope: !8638)
!8640 = !DILocation(line: 1055, column: 25, scope: !8638)
!8641 = !DILocation(line: 1055, column: 46, scope: !8638)
!8642 = !DILocation(line: 1055, column: 49, scope: !8643)
!8643 = !DILexicalBlockFile(scope: !8638, file: !1807, discriminator: 1)
!8644 = !DILocation(line: 1055, column: 9, scope: !8643)
!8645 = !DILocation(line: 1056, column: 18, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !1807, line: 1056, column: 9)
!8647 = distinct !DILexicalBlock(scope: !8638, file: !1807, line: 1055, column: 67)
!8648 = !DILocation(line: 1056, column: 14, scope: !8646)
!8649 = !DILocation(line: 1056, column: 23, scope: !8650)
!8650 = !DILexicalBlockFile(scope: !8651, file: !1807, discriminator: 1)
!8651 = distinct !DILexicalBlock(scope: !8646, file: !1807, line: 1056, column: 9)
!8652 = !DILocation(line: 1056, column: 29, scope: !8650)
!8653 = !DILocation(line: 1056, column: 32, scope: !8650)
!8654 = !DILocation(line: 1056, column: 27, scope: !8650)
!8655 = !DILocation(line: 1056, column: 9, scope: !8650)
!8656 = !DILocation(line: 1057, column: 35, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8651, file: !1807, line: 1056, column: 54)
!8658 = !DILocation(line: 1057, column: 38, scope: !8657)
!8659 = !DILocation(line: 1057, column: 69, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !8657, file: !1807, discriminator: 1)
!8661 = !DILocation(line: 1057, column: 59, scope: !8660)
!8662 = !DILocation(line: 1057, column: 35, scope: !8660)
!8663 = !DILocation(line: 1057, column: 35, scope: !8664)
!8664 = !DILexicalBlockFile(scope: !8657, file: !1807, discriminator: 2)
!8665 = !DILocation(line: 1057, column: 35, scope: !8666)
!8666 = !DILexicalBlockFile(scope: !8657, file: !1807, discriminator: 3)
!8667 = !DILocation(line: 1057, column: 28, scope: !8666)
!8668 = !DILocation(line: 1057, column: 13, scope: !8666)
!8669 = !DILocation(line: 1057, column: 16, scope: !8666)
!8670 = !DILocation(line: 1057, column: 33, scope: !8666)
!8671 = !DILocation(line: 1058, column: 9, scope: !8657)
!8672 = !DILocation(line: 1056, column: 50, scope: !8673)
!8673 = !DILexicalBlockFile(scope: !8651, file: !1807, discriminator: 2)
!8674 = !DILocation(line: 1056, column: 9, scope: !8673)
!8675 = distinct !{!8675, !8676}
!8676 = !DILocation(line: 1056, column: 9, scope: !8647)
!8677 = !DILocation(line: 1059, column: 5, scope: !8647)
!8678 = !DILocation(line: 1061, column: 5, scope: !8501)
!8679 = !DILocation(line: 1062, column: 1, scope: !8501)
!8680 = distinct !DISubprogram(name: "decode_exponents", scope: !1807, file: !1807, line: 428, type: !8681, isLocal: true, isDefinition: true, scopeLine: 431, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!1015, !1852, !3872, !1015, !1015, !1041, !1277}
!8683 = !DILocalVariable(name: "s", arg: 1, scope: !8680, file: !1807, line: 428, type: !1852)
!8684 = !DILocation(line: 428, column: 47, scope: !8680)
!8685 = !DILocalVariable(name: "gbc", arg: 2, scope: !8680, file: !1807, line: 429, type: !3872)
!8686 = !DILocation(line: 429, column: 44, scope: !8680)
!8687 = !DILocalVariable(name: "exp_strategy", arg: 3, scope: !8680, file: !1807, line: 429, type: !1015)
!8688 = !DILocation(line: 429, column: 53, scope: !8680)
!8689 = !DILocalVariable(name: "ngrps", arg: 4, scope: !8680, file: !1807, line: 429, type: !1015)
!8690 = !DILocation(line: 429, column: 71, scope: !8680)
!8691 = !DILocalVariable(name: "absexp", arg: 5, scope: !8680, file: !1807, line: 430, type: !1041)
!8692 = !DILocation(line: 430, column: 37, scope: !8680)
!8693 = !DILocalVariable(name: "dexps", arg: 6, scope: !8680, file: !1807, line: 430, type: !1277)
!8694 = !DILocation(line: 430, column: 53, scope: !8680)
!8695 = !DILocalVariable(name: "i", scope: !8680, file: !1807, line: 432, type: !1015)
!8696 = !DILocation(line: 432, column: 9, scope: !8680)
!8697 = !DILocalVariable(name: "j", scope: !8680, file: !1807, line: 432, type: !1015)
!8698 = !DILocation(line: 432, column: 12, scope: !8680)
!8699 = !DILocalVariable(name: "grp", scope: !8680, file: !1807, line: 432, type: !1015)
!8700 = !DILocation(line: 432, column: 15, scope: !8680)
!8701 = !DILocalVariable(name: "group_size", scope: !8680, file: !1807, line: 432, type: !1015)
!8702 = !DILocation(line: 432, column: 20, scope: !8680)
!8703 = !DILocalVariable(name: "dexp", scope: !8680, file: !1807, line: 433, type: !8704)
!8704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8192, align: 32, elements: !2237)
!8705 = !DILocation(line: 433, column: 9, scope: !8680)
!8706 = !DILocalVariable(name: "expacc", scope: !8680, file: !1807, line: 434, type: !1015)
!8707 = !DILocation(line: 434, column: 9, scope: !8680)
!8708 = !DILocalVariable(name: "prevexp", scope: !8680, file: !1807, line: 434, type: !1015)
!8709 = !DILocation(line: 434, column: 17, scope: !8680)
!8710 = !DILocation(line: 437, column: 18, scope: !8680)
!8711 = !DILocation(line: 437, column: 34, scope: !8680)
!8712 = !DILocation(line: 437, column: 47, scope: !8680)
!8713 = !DILocation(line: 437, column: 31, scope: !8680)
!8714 = !DILocation(line: 437, column: 16, scope: !8680)
!8715 = !DILocation(line: 438, column: 14, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8680, file: !1807, line: 438, column: 5)
!8717 = !DILocation(line: 438, column: 21, scope: !8716)
!8718 = !DILocation(line: 438, column: 10, scope: !8716)
!8719 = !DILocation(line: 438, column: 26, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8721, file: !1807, discriminator: 1)
!8721 = distinct !DILexicalBlock(scope: !8716, file: !1807, line: 438, column: 5)
!8722 = !DILocation(line: 438, column: 32, scope: !8720)
!8723 = !DILocation(line: 438, column: 30, scope: !8720)
!8724 = !DILocation(line: 438, column: 5, scope: !8720)
!8725 = !DILocation(line: 439, column: 27, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8721, file: !1807, line: 438, column: 46)
!8727 = !DILocation(line: 439, column: 18, scope: !8726)
!8728 = !DILocation(line: 439, column: 16, scope: !8726)
!8729 = !DILocation(line: 440, column: 13, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8726, file: !1807, line: 440, column: 13)
!8731 = !DILocation(line: 440, column: 20, scope: !8730)
!8732 = !DILocation(line: 440, column: 13, scope: !8726)
!8733 = !DILocation(line: 441, column: 20, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8730, file: !1807, line: 440, column: 28)
!8735 = !DILocation(line: 441, column: 23, scope: !8734)
!8736 = !DILocation(line: 441, column: 65, scope: !8734)
!8737 = !DILocation(line: 441, column: 13, scope: !8734)
!8738 = !DILocation(line: 442, column: 13, scope: !8734)
!8739 = !DILocation(line: 444, column: 45, scope: !8726)
!8740 = !DILocation(line: 444, column: 21, scope: !8726)
!8741 = !DILocation(line: 444, column: 15, scope: !8726)
!8742 = !DILocation(line: 444, column: 9, scope: !8726)
!8743 = !DILocation(line: 444, column: 19, scope: !8726)
!8744 = !DILocation(line: 445, column: 45, scope: !8726)
!8745 = !DILocation(line: 445, column: 21, scope: !8726)
!8746 = !DILocation(line: 445, column: 15, scope: !8726)
!8747 = !DILocation(line: 445, column: 9, scope: !8726)
!8748 = !DILocation(line: 445, column: 19, scope: !8726)
!8749 = !DILocation(line: 446, column: 45, scope: !8726)
!8750 = !DILocation(line: 446, column: 21, scope: !8726)
!8751 = !DILocation(line: 446, column: 15, scope: !8726)
!8752 = !DILocation(line: 446, column: 9, scope: !8726)
!8753 = !DILocation(line: 446, column: 19, scope: !8726)
!8754 = !DILocation(line: 447, column: 5, scope: !8726)
!8755 = !DILocation(line: 438, column: 42, scope: !8756)
!8756 = !DILexicalBlockFile(scope: !8721, file: !1807, discriminator: 2)
!8757 = !DILocation(line: 438, column: 5, scope: !8756)
!8758 = distinct !{!8758, !8759}
!8759 = !DILocation(line: 438, column: 5, scope: !8680)
!8760 = !DILocation(line: 450, column: 15, scope: !8680)
!8761 = !DILocation(line: 450, column: 13, scope: !8680)
!8762 = !DILocation(line: 451, column: 12, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8680, file: !1807, line: 451, column: 5)
!8764 = !DILocation(line: 451, column: 19, scope: !8763)
!8765 = !DILocation(line: 451, column: 10, scope: !8763)
!8766 = !DILocation(line: 451, column: 24, scope: !8767)
!8767 = !DILexicalBlockFile(scope: !8768, file: !1807, discriminator: 1)
!8768 = distinct !DILexicalBlock(scope: !8763, file: !1807, line: 451, column: 5)
!8769 = !DILocation(line: 451, column: 28, scope: !8767)
!8770 = !DILocation(line: 451, column: 34, scope: !8767)
!8771 = !DILocation(line: 451, column: 26, scope: !8767)
!8772 = !DILocation(line: 451, column: 5, scope: !8767)
!8773 = !DILocation(line: 452, column: 25, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8768, file: !1807, line: 451, column: 44)
!8775 = !DILocation(line: 452, column: 20, scope: !8774)
!8776 = !DILocation(line: 452, column: 28, scope: !8774)
!8777 = !DILocation(line: 452, column: 17, scope: !8774)
!8778 = !DILocation(line: 453, column: 13, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !1807, line: 453, column: 13)
!8780 = !DILocation(line: 453, column: 21, scope: !8779)
!8781 = !DILocation(line: 453, column: 13, scope: !8774)
!8782 = !DILocation(line: 454, column: 20, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8779, file: !1807, line: 453, column: 28)
!8784 = !DILocation(line: 454, column: 23, scope: !8783)
!8785 = !DILocation(line: 454, column: 67, scope: !8783)
!8786 = !DILocation(line: 454, column: 13, scope: !8783)
!8787 = !DILocation(line: 455, column: 13, scope: !8783)
!8788 = !DILocation(line: 457, column: 17, scope: !8774)
!8789 = !DILocation(line: 457, column: 9, scope: !8774)
!8790 = !DILocation(line: 458, column: 30, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8774, file: !1807, line: 457, column: 29)
!8792 = !DILocation(line: 458, column: 24, scope: !8791)
!8793 = !DILocation(line: 458, column: 17, scope: !8791)
!8794 = !DILocation(line: 458, column: 28, scope: !8791)
!8795 = !DILocation(line: 459, column: 30, scope: !8791)
!8796 = !DILocation(line: 459, column: 24, scope: !8791)
!8797 = !DILocation(line: 459, column: 17, scope: !8791)
!8798 = !DILocation(line: 459, column: 28, scope: !8791)
!8799 = !DILocation(line: 460, column: 30, scope: !8791)
!8800 = !DILocation(line: 460, column: 24, scope: !8791)
!8801 = !DILocation(line: 460, column: 17, scope: !8791)
!8802 = !DILocation(line: 460, column: 28, scope: !8791)
!8803 = !DILocation(line: 461, column: 30, scope: !8791)
!8804 = !DILocation(line: 461, column: 24, scope: !8791)
!8805 = !DILocation(line: 461, column: 17, scope: !8791)
!8806 = !DILocation(line: 461, column: 28, scope: !8791)
!8807 = !DILocation(line: 462, column: 9, scope: !8791)
!8808 = !DILocation(line: 463, column: 5, scope: !8774)
!8809 = !DILocation(line: 451, column: 40, scope: !8810)
!8810 = !DILexicalBlockFile(scope: !8768, file: !1807, discriminator: 2)
!8811 = !DILocation(line: 451, column: 5, scope: !8810)
!8812 = distinct !{!8812, !8813}
!8813 = !DILocation(line: 451, column: 5, scope: !8680)
!8814 = !DILocation(line: 464, column: 5, scope: !8680)
!8815 = !DILocation(line: 465, column: 1, scope: !8680)
!8816 = distinct !DISubprogram(name: "decode_transform_coeffs", scope: !1807, file: !1807, line: 627, type: !8817, isLocal: true, isDefinition: true, scopeLine: 628, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!8817 = !DISubroutineType(types: !8818)
!8818 = !{null, !1852, !1015}
!8819 = !DILocalVariable(name: "s", arg: 1, scope: !8816, file: !1807, line: 627, type: !1852)
!8820 = !DILocation(line: 627, column: 62, scope: !8816)
!8821 = !DILocalVariable(name: "blk", arg: 2, scope: !8816, file: !1807, line: 627, type: !1015)
!8822 = !DILocation(line: 627, column: 69, scope: !8816)
!8823 = !DILocalVariable(name: "ch", scope: !8816, file: !1807, line: 629, type: !1015)
!8824 = !DILocation(line: 629, column: 9, scope: !8816)
!8825 = !DILocalVariable(name: "end", scope: !8816, file: !1807, line: 629, type: !1015)
!8826 = !DILocation(line: 629, column: 13, scope: !8816)
!8827 = !DILocalVariable(name: "got_cplchan", scope: !8816, file: !1807, line: 630, type: !1015)
!8828 = !DILocation(line: 630, column: 9, scope: !8816)
!8829 = !DILocalVariable(name: "m", scope: !8816, file: !1807, line: 631, type: !8830)
!8830 = !DIDerivedType(tag: DW_TAG_typedef, name: "mant_groups", file: !1807, line: 507, baseType: !8831)
!8831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mant_groups", file: !1807, line: 500, size: 256, align: 32, elements: !8832)
!8832 = !{!8833, !8834, !8835, !8836, !8837, !8838}
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "b1_mant", scope: !8831, file: !1807, line: 501, baseType: !1882, size: 64, align: 32)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "b2_mant", scope: !8831, file: !1807, line: 502, baseType: !1882, size: 64, align: 32, offset: 64)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "b4_mant", scope: !8831, file: !1807, line: 503, baseType: !1015, size: 32, align: 32, offset: 128)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "b1", scope: !8831, file: !1807, line: 504, baseType: !1015, size: 32, align: 32, offset: 160)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "b2", scope: !8831, file: !1807, line: 505, baseType: !1015, size: 32, align: 32, offset: 192)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "b4", scope: !8831, file: !1807, line: 506, baseType: !1015, size: 32, align: 32, offset: 224)
!8839 = !DILocation(line: 631, column: 17, scope: !8816)
!8840 = !DILocation(line: 633, column: 21, scope: !8816)
!8841 = !DILocation(line: 633, column: 24, scope: !8816)
!8842 = !DILocation(line: 633, column: 14, scope: !8816)
!8843 = !DILocation(line: 633, column: 17, scope: !8816)
!8844 = !DILocation(line: 633, column: 7, scope: !8816)
!8845 = !DILocation(line: 633, column: 10, scope: !8816)
!8846 = !DILocation(line: 635, column: 13, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8816, file: !1807, line: 635, column: 5)
!8848 = !DILocation(line: 635, column: 10, scope: !8847)
!8849 = !DILocation(line: 635, column: 18, scope: !8850)
!8850 = !DILexicalBlockFile(scope: !8851, file: !1807, discriminator: 1)
!8851 = distinct !DILexicalBlock(scope: !8847, file: !1807, line: 635, column: 5)
!8852 = !DILocation(line: 635, column: 24, scope: !8850)
!8853 = !DILocation(line: 635, column: 27, scope: !8850)
!8854 = !DILocation(line: 635, column: 21, scope: !8850)
!8855 = !DILocation(line: 635, column: 5, scope: !8850)
!8856 = !DILocation(line: 637, column: 36, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8851, file: !1807, line: 635, column: 43)
!8858 = !DILocation(line: 637, column: 39, scope: !8857)
!8859 = !DILocation(line: 637, column: 44, scope: !8857)
!8860 = !DILocation(line: 637, column: 9, scope: !8857)
!8861 = !DILocation(line: 640, column: 31, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8857, file: !1807, line: 640, column: 13)
!8863 = !DILocation(line: 640, column: 13, scope: !8862)
!8864 = !DILocation(line: 640, column: 16, scope: !8862)
!8865 = !DILocation(line: 640, column: 13, scope: !8857)
!8866 = !DILocation(line: 641, column: 18, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !1807, line: 641, column: 17)
!8868 = distinct !DILexicalBlock(scope: !8862, file: !1807, line: 640, column: 36)
!8869 = !DILocation(line: 641, column: 17, scope: !8868)
!8870 = !DILocation(line: 642, column: 44, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !1807, line: 641, column: 31)
!8872 = !DILocation(line: 642, column: 47, scope: !8871)
!8873 = !DILocation(line: 642, column: 17, scope: !8871)
!8874 = !DILocation(line: 643, column: 43, scope: !8871)
!8875 = !DILocation(line: 643, column: 17, scope: !8871)
!8876 = !DILocation(line: 644, column: 29, scope: !8871)
!8877 = !DILocation(line: 645, column: 13, scope: !8871)
!8878 = !DILocation(line: 646, column: 19, scope: !8868)
!8879 = !DILocation(line: 646, column: 22, scope: !8868)
!8880 = !DILocation(line: 646, column: 17, scope: !8868)
!8881 = !DILocation(line: 647, column: 9, scope: !8868)
!8882 = !DILocation(line: 648, column: 31, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8862, file: !1807, line: 647, column: 16)
!8884 = !DILocation(line: 648, column: 19, scope: !8883)
!8885 = !DILocation(line: 648, column: 22, scope: !8883)
!8886 = !DILocation(line: 648, column: 17, scope: !8883)
!8887 = !DILocation(line: 650, column: 9, scope: !8857)
!8888 = distinct !{!8888, !8887}
!8889 = !DILocation(line: 651, column: 33, scope: !8857)
!8890 = !DILocation(line: 651, column: 13, scope: !8857)
!8891 = !DILocation(line: 651, column: 29, scope: !8857)
!8892 = !DILocation(line: 651, column: 16, scope: !8857)
!8893 = !DILocation(line: 651, column: 38, scope: !8857)
!8894 = !DILocation(line: 652, column: 16, scope: !8857)
!8895 = !DILocation(line: 652, column: 22, scope: !8857)
!8896 = !DILocation(line: 651, column: 13, scope: !8897)
!8897 = !DILexicalBlockFile(scope: !8857, file: !1807, discriminator: 1)
!8898 = !DILocation(line: 653, column: 5, scope: !8857)
!8899 = !DILocation(line: 635, column: 39, scope: !8900)
!8900 = !DILexicalBlockFile(scope: !8851, file: !1807, discriminator: 2)
!8901 = !DILocation(line: 635, column: 5, scope: !8900)
!8902 = distinct !{!8902, !8903}
!8903 = !DILocation(line: 635, column: 5, scope: !8816)
!8904 = !DILocation(line: 656, column: 22, scope: !8816)
!8905 = !DILocation(line: 656, column: 5, scope: !8816)
!8906 = !DILocation(line: 657, column: 1, scope: !8816)
!8907 = distinct !DISubprogram(name: "do_rematrixing", scope: !1807, file: !1807, line: 663, type: !7907, isLocal: true, isDefinition: true, scopeLine: 664, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!8908 = !DILocalVariable(name: "s", arg: 1, scope: !8907, file: !1807, line: 663, type: !1852)
!8909 = !DILocation(line: 663, column: 46, scope: !8907)
!8910 = !DILocalVariable(name: "bnd", scope: !8907, file: !1807, line: 665, type: !1015)
!8911 = !DILocation(line: 665, column: 9, scope: !8907)
!8912 = !DILocalVariable(name: "i", scope: !8907, file: !1807, line: 665, type: !1015)
!8913 = !DILocation(line: 665, column: 14, scope: !8907)
!8914 = !DILocalVariable(name: "end", scope: !8907, file: !1807, line: 666, type: !1015)
!8915 = !DILocation(line: 666, column: 9, scope: !8907)
!8916 = !DILocalVariable(name: "bndend", scope: !8907, file: !1807, line: 666, type: !1015)
!8917 = !DILocation(line: 666, column: 14, scope: !8907)
!8918 = !DILocation(line: 668, column: 13, scope: !8907)
!8919 = !DILocation(line: 668, column: 16, scope: !8907)
!8920 = !DILocation(line: 668, column: 32, scope: !8907)
!8921 = !DILocation(line: 668, column: 35, scope: !8907)
!8922 = !DILocation(line: 668, column: 29, scope: !8907)
!8923 = !DILocation(line: 668, column: 12, scope: !8907)
!8924 = !DILocation(line: 668, column: 51, scope: !8925)
!8925 = !DILexicalBlockFile(scope: !8907, file: !1807, discriminator: 1)
!8926 = !DILocation(line: 668, column: 54, scope: !8925)
!8927 = !DILocation(line: 668, column: 12, scope: !8925)
!8928 = !DILocation(line: 668, column: 70, scope: !8929)
!8929 = !DILexicalBlockFile(scope: !8907, file: !1807, discriminator: 2)
!8930 = !DILocation(line: 668, column: 73, scope: !8929)
!8931 = !DILocation(line: 668, column: 12, scope: !8929)
!8932 = !DILocation(line: 668, column: 12, scope: !8933)
!8933 = !DILexicalBlockFile(scope: !8907, file: !1807, discriminator: 3)
!8934 = !DILocation(line: 668, column: 9, scope: !8933)
!8935 = !DILocation(line: 670, column: 14, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8907, file: !1807, line: 670, column: 5)
!8937 = !DILocation(line: 670, column: 10, scope: !8936)
!8938 = !DILocation(line: 670, column: 19, scope: !8939)
!8939 = !DILexicalBlockFile(scope: !8940, file: !1807, discriminator: 1)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !1807, line: 670, column: 5)
!8941 = !DILocation(line: 670, column: 25, scope: !8939)
!8942 = !DILocation(line: 670, column: 28, scope: !8939)
!8943 = !DILocation(line: 670, column: 23, scope: !8939)
!8944 = !DILocation(line: 670, column: 5, scope: !8939)
!8945 = !DILocation(line: 671, column: 34, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !1807, line: 671, column: 13)
!8947 = distinct !DILexicalBlock(scope: !8940, file: !1807, line: 670, column: 58)
!8948 = !DILocation(line: 671, column: 13, scope: !8946)
!8949 = !DILocation(line: 671, column: 16, scope: !8946)
!8950 = !DILocation(line: 671, column: 13, scope: !8947)
!8951 = !DILocation(line: 672, column: 24, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8946, file: !1807, line: 671, column: 40)
!8953 = !DILocation(line: 672, column: 57, scope: !8952)
!8954 = !DILocation(line: 672, column: 61, scope: !8952)
!8955 = !DILocation(line: 672, column: 32, scope: !8952)
!8956 = !DILocation(line: 672, column: 31, scope: !8952)
!8957 = !DILocation(line: 672, column: 29, scope: !8952)
!8958 = !DILocation(line: 672, column: 23, scope: !8952)
!8959 = !DILocation(line: 672, column: 95, scope: !8960)
!8960 = !DILexicalBlockFile(scope: !8952, file: !1807, discriminator: 1)
!8961 = !DILocation(line: 672, column: 99, scope: !8960)
!8962 = !DILocation(line: 672, column: 70, scope: !8960)
!8963 = !DILocation(line: 672, column: 69, scope: !8960)
!8964 = !DILocation(line: 672, column: 23, scope: !8960)
!8965 = !DILocation(line: 672, column: 108, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !8952, file: !1807, discriminator: 2)
!8967 = !DILocation(line: 672, column: 23, scope: !8966)
!8968 = !DILocation(line: 672, column: 23, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !8952, file: !1807, discriminator: 3)
!8970 = !DILocation(line: 672, column: 20, scope: !8969)
!8971 = !DILocation(line: 673, column: 47, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8952, file: !1807, line: 673, column: 13)
!8973 = !DILocation(line: 673, column: 22, scope: !8972)
!8974 = !DILocation(line: 673, column: 20, scope: !8972)
!8975 = !DILocation(line: 673, column: 18, scope: !8972)
!8976 = !DILocation(line: 673, column: 53, scope: !8977)
!8977 = !DILexicalBlockFile(scope: !8978, file: !1807, discriminator: 1)
!8978 = distinct !DILexicalBlock(scope: !8972, file: !1807, line: 673, column: 13)
!8979 = !DILocation(line: 673, column: 57, scope: !8977)
!8980 = !DILocation(line: 673, column: 55, scope: !8977)
!8981 = !DILocation(line: 673, column: 13, scope: !8977)
!8982 = !DILocalVariable(name: "tmp0", scope: !8983, file: !1807, line: 674, type: !1015)
!8983 = distinct !DILexicalBlock(scope: !8978, file: !1807, line: 673, column: 70)
!8984 = !DILocation(line: 674, column: 21, scope: !8983)
!8985 = !DILocation(line: 674, column: 47, scope: !8983)
!8986 = !DILocation(line: 674, column: 28, scope: !8983)
!8987 = !DILocation(line: 674, column: 31, scope: !8983)
!8988 = !DILocation(line: 675, column: 61, scope: !8983)
!8989 = !DILocation(line: 675, column: 42, scope: !8983)
!8990 = !DILocation(line: 675, column: 45, scope: !8983)
!8991 = !DILocation(line: 675, column: 36, scope: !8983)
!8992 = !DILocation(line: 675, column: 17, scope: !8983)
!8993 = !DILocation(line: 675, column: 20, scope: !8983)
!8994 = !DILocation(line: 675, column: 39, scope: !8983)
!8995 = !DILocation(line: 676, column: 41, scope: !8983)
!8996 = !DILocation(line: 676, column: 67, scope: !8983)
!8997 = !DILocation(line: 676, column: 48, scope: !8983)
!8998 = !DILocation(line: 676, column: 51, scope: !8983)
!8999 = !DILocation(line: 676, column: 46, scope: !8983)
!9000 = !DILocation(line: 676, column: 36, scope: !8983)
!9001 = !DILocation(line: 676, column: 17, scope: !8983)
!9002 = !DILocation(line: 676, column: 20, scope: !8983)
!9003 = !DILocation(line: 676, column: 39, scope: !8983)
!9004 = !DILocation(line: 677, column: 13, scope: !8983)
!9005 = !DILocation(line: 673, column: 66, scope: !9006)
!9006 = !DILexicalBlockFile(scope: !8978, file: !1807, discriminator: 2)
!9007 = !DILocation(line: 673, column: 13, scope: !9006)
!9008 = distinct !{!9008, !9009}
!9009 = !DILocation(line: 673, column: 13, scope: !8952)
!9010 = !DILocation(line: 678, column: 9, scope: !8952)
!9011 = !DILocation(line: 679, column: 5, scope: !8947)
!9012 = !DILocation(line: 670, column: 54, scope: !9013)
!9013 = !DILexicalBlockFile(scope: !8940, file: !1807, discriminator: 2)
!9014 = !DILocation(line: 670, column: 5, scope: !9013)
!9015 = distinct !{!9015, !9016}
!9016 = !DILocation(line: 670, column: 5, scope: !8907)
!9017 = !DILocation(line: 680, column: 1, scope: !8907)
!9018 = distinct !DISubprogram(name: "scale_coefs", scope: !1050, file: !1050, line: 61, type: !9019, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{null, !2111, !2105, !1015, !1015}
!9021 = !DILocalVariable(name: "dst", arg: 1, scope: !9018, file: !1050, line: 62, type: !2111)
!9022 = !DILocation(line: 62, column: 14, scope: !9018)
!9023 = !DILocalVariable(name: "src", arg: 2, scope: !9018, file: !1050, line: 63, type: !2105)
!9024 = !DILocation(line: 63, column: 20, scope: !9018)
!9025 = !DILocalVariable(name: "dynrng", arg: 3, scope: !9018, file: !1050, line: 64, type: !1015)
!9026 = !DILocation(line: 64, column: 9, scope: !9018)
!9027 = !DILocalVariable(name: "len", arg: 4, scope: !9018, file: !1050, line: 65, type: !1015)
!9028 = !DILocation(line: 65, column: 9, scope: !9018)
!9029 = !DILocalVariable(name: "i", scope: !9018, file: !1050, line: 67, type: !1015)
!9030 = !DILocation(line: 67, column: 9, scope: !9018)
!9031 = !DILocalVariable(name: "shift", scope: !9018, file: !1050, line: 67, type: !1015)
!9032 = !DILocation(line: 67, column: 12, scope: !9018)
!9033 = !DILocalVariable(name: "mul", scope: !9018, file: !1050, line: 68, type: !1016)
!9034 = !DILocation(line: 68, column: 14, scope: !9018)
!9035 = !DILocalVariable(name: "round", scope: !9018, file: !1050, line: 68, type: !1016)
!9036 = !DILocation(line: 68, column: 19, scope: !9018)
!9037 = !DILocalVariable(name: "temp", scope: !9018, file: !1050, line: 69, type: !1015)
!9038 = !DILocation(line: 69, column: 9, scope: !9018)
!9039 = !DILocalVariable(name: "temp1", scope: !9018, file: !1050, line: 69, type: !1015)
!9040 = !DILocation(line: 69, column: 15, scope: !9018)
!9041 = !DILocalVariable(name: "temp2", scope: !9018, file: !1050, line: 69, type: !1015)
!9042 = !DILocation(line: 69, column: 22, scope: !9018)
!9043 = !DILocalVariable(name: "temp3", scope: !9018, file: !1050, line: 69, type: !1015)
!9044 = !DILocation(line: 69, column: 29, scope: !9018)
!9045 = !DILocalVariable(name: "temp4", scope: !9018, file: !1050, line: 69, type: !1015)
!9046 = !DILocation(line: 69, column: 36, scope: !9018)
!9047 = !DILocalVariable(name: "temp5", scope: !9018, file: !1050, line: 69, type: !1015)
!9048 = !DILocation(line: 69, column: 43, scope: !9018)
!9049 = !DILocalVariable(name: "temp6", scope: !9018, file: !1050, line: 69, type: !1015)
!9050 = !DILocation(line: 69, column: 50, scope: !9018)
!9051 = !DILocalVariable(name: "temp7", scope: !9018, file: !1050, line: 69, type: !1015)
!9052 = !DILocation(line: 69, column: 57, scope: !9018)
!9053 = !DILocation(line: 71, column: 12, scope: !9018)
!9054 = !DILocation(line: 71, column: 19, scope: !9018)
!9055 = !DILocation(line: 71, column: 27, scope: !9018)
!9056 = !DILocation(line: 71, column: 9, scope: !9018)
!9057 = !DILocation(line: 72, column: 30, scope: !9018)
!9058 = !DILocation(line: 72, column: 18, scope: !9018)
!9059 = !DILocation(line: 72, column: 41, scope: !9018)
!9060 = !DILocation(line: 72, column: 15, scope: !9018)
!9061 = !DILocation(line: 72, column: 11, scope: !9018)
!9062 = !DILocation(line: 73, column: 9, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9018, file: !1050, line: 73, column: 9)
!9064 = !DILocation(line: 73, column: 15, scope: !9063)
!9065 = !DILocation(line: 73, column: 9, scope: !9018)
!9066 = !DILocation(line: 74, column: 21, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9063, file: !1050, line: 73, column: 21)
!9068 = !DILocation(line: 74, column: 26, scope: !9067)
!9069 = !DILocation(line: 74, column: 17, scope: !9067)
!9070 = !DILocation(line: 74, column: 13, scope: !9067)
!9071 = !DILocation(line: 75, column: 13, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9067, file: !1050, line: 75, column: 7)
!9073 = !DILocation(line: 75, column: 12, scope: !9072)
!9074 = !DILocation(line: 75, column: 17, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !9076, file: !1050, discriminator: 1)
!9076 = distinct !DILexicalBlock(scope: !9072, file: !1050, line: 75, column: 7)
!9077 = !DILocation(line: 75, column: 19, scope: !9075)
!9078 = !DILocation(line: 75, column: 18, scope: !9075)
!9079 = !DILocation(line: 75, column: 7, scope: !9075)
!9080 = !DILocation(line: 77, column: 22, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !1050, line: 75, column: 30)
!9082 = !DILocation(line: 77, column: 18, scope: !9081)
!9083 = !DILocation(line: 77, column: 27, scope: !9081)
!9084 = !DILocation(line: 77, column: 25, scope: !9081)
!9085 = !DILocation(line: 77, column: 16, scope: !9081)
!9086 = !DILocation(line: 78, column: 23, scope: !9081)
!9087 = !DILocation(line: 78, column: 24, scope: !9081)
!9088 = !DILocation(line: 78, column: 19, scope: !9081)
!9089 = !DILocation(line: 78, column: 30, scope: !9081)
!9090 = !DILocation(line: 78, column: 28, scope: !9081)
!9091 = !DILocation(line: 78, column: 17, scope: !9081)
!9092 = !DILocation(line: 79, column: 18, scope: !9081)
!9093 = !DILocation(line: 79, column: 25, scope: !9081)
!9094 = !DILocation(line: 79, column: 23, scope: !9081)
!9095 = !DILocation(line: 79, column: 16, scope: !9081)
!9096 = !DILocation(line: 80, column: 23, scope: !9081)
!9097 = !DILocation(line: 80, column: 24, scope: !9081)
!9098 = !DILocation(line: 80, column: 19, scope: !9081)
!9099 = !DILocation(line: 80, column: 30, scope: !9081)
!9100 = !DILocation(line: 80, column: 28, scope: !9081)
!9101 = !DILocation(line: 80, column: 17, scope: !9081)
!9102 = !DILocation(line: 82, column: 19, scope: !9081)
!9103 = !DILocation(line: 82, column: 27, scope: !9081)
!9104 = !DILocation(line: 82, column: 25, scope: !9081)
!9105 = !DILocation(line: 82, column: 17, scope: !9081)
!9106 = !DILocation(line: 83, column: 20, scope: !9081)
!9107 = !DILocation(line: 83, column: 28, scope: !9081)
!9108 = !DILocation(line: 83, column: 25, scope: !9081)
!9109 = !DILocation(line: 83, column: 15, scope: !9081)
!9110 = !DILocation(line: 83, column: 11, scope: !9081)
!9111 = !DILocation(line: 83, column: 18, scope: !9081)
!9112 = !DILocation(line: 84, column: 23, scope: !9081)
!9113 = !DILocation(line: 84, column: 24, scope: !9081)
!9114 = !DILocation(line: 84, column: 19, scope: !9081)
!9115 = !DILocation(line: 84, column: 30, scope: !9081)
!9116 = !DILocation(line: 84, column: 28, scope: !9081)
!9117 = !DILocation(line: 84, column: 17, scope: !9081)
!9118 = !DILocation(line: 85, column: 19, scope: !9081)
!9119 = !DILocation(line: 85, column: 27, scope: !9081)
!9120 = !DILocation(line: 85, column: 25, scope: !9081)
!9121 = !DILocation(line: 85, column: 17, scope: !9081)
!9122 = !DILocation(line: 87, column: 22, scope: !9081)
!9123 = !DILocation(line: 87, column: 31, scope: !9081)
!9124 = !DILocation(line: 87, column: 28, scope: !9081)
!9125 = !DILocation(line: 87, column: 15, scope: !9081)
!9126 = !DILocation(line: 87, column: 16, scope: !9081)
!9127 = !DILocation(line: 87, column: 11, scope: !9081)
!9128 = !DILocation(line: 87, column: 20, scope: !9081)
!9129 = !DILocation(line: 88, column: 23, scope: !9081)
!9130 = !DILocation(line: 88, column: 25, scope: !9081)
!9131 = !DILocation(line: 88, column: 19, scope: !9081)
!9132 = !DILocation(line: 88, column: 32, scope: !9081)
!9133 = !DILocation(line: 88, column: 30, scope: !9081)
!9134 = !DILocation(line: 88, column: 17, scope: !9081)
!9135 = !DILocation(line: 89, column: 19, scope: !9081)
!9136 = !DILocation(line: 89, column: 27, scope: !9081)
!9137 = !DILocation(line: 89, column: 25, scope: !9081)
!9138 = !DILocation(line: 89, column: 17, scope: !9081)
!9139 = !DILocation(line: 90, column: 22, scope: !9081)
!9140 = !DILocation(line: 90, column: 31, scope: !9081)
!9141 = !DILocation(line: 90, column: 28, scope: !9081)
!9142 = !DILocation(line: 90, column: 15, scope: !9081)
!9143 = !DILocation(line: 90, column: 16, scope: !9081)
!9144 = !DILocation(line: 90, column: 11, scope: !9081)
!9145 = !DILocation(line: 90, column: 20, scope: !9081)
!9146 = !DILocation(line: 92, column: 23, scope: !9081)
!9147 = !DILocation(line: 92, column: 24, scope: !9081)
!9148 = !DILocation(line: 92, column: 19, scope: !9081)
!9149 = !DILocation(line: 92, column: 30, scope: !9081)
!9150 = !DILocation(line: 92, column: 28, scope: !9081)
!9151 = !DILocation(line: 92, column: 17, scope: !9081)
!9152 = !DILocation(line: 93, column: 19, scope: !9081)
!9153 = !DILocation(line: 93, column: 27, scope: !9081)
!9154 = !DILocation(line: 93, column: 25, scope: !9081)
!9155 = !DILocation(line: 93, column: 17, scope: !9081)
!9156 = !DILocation(line: 94, column: 22, scope: !9081)
!9157 = !DILocation(line: 94, column: 31, scope: !9081)
!9158 = !DILocation(line: 94, column: 28, scope: !9081)
!9159 = !DILocation(line: 94, column: 15, scope: !9081)
!9160 = !DILocation(line: 94, column: 16, scope: !9081)
!9161 = !DILocation(line: 94, column: 11, scope: !9081)
!9162 = !DILocation(line: 94, column: 20, scope: !9081)
!9163 = !DILocation(line: 95, column: 23, scope: !9081)
!9164 = !DILocation(line: 95, column: 24, scope: !9081)
!9165 = !DILocation(line: 95, column: 19, scope: !9081)
!9166 = !DILocation(line: 95, column: 30, scope: !9081)
!9167 = !DILocation(line: 95, column: 28, scope: !9081)
!9168 = !DILocation(line: 95, column: 17, scope: !9081)
!9169 = !DILocation(line: 97, column: 22, scope: !9081)
!9170 = !DILocation(line: 97, column: 31, scope: !9081)
!9171 = !DILocation(line: 97, column: 28, scope: !9081)
!9172 = !DILocation(line: 97, column: 15, scope: !9081)
!9173 = !DILocation(line: 97, column: 16, scope: !9081)
!9174 = !DILocation(line: 97, column: 11, scope: !9081)
!9175 = !DILocation(line: 97, column: 20, scope: !9081)
!9176 = !DILocation(line: 98, column: 19, scope: !9081)
!9177 = !DILocation(line: 98, column: 27, scope: !9081)
!9178 = !DILocation(line: 98, column: 25, scope: !9081)
!9179 = !DILocation(line: 98, column: 17, scope: !9081)
!9180 = !DILocation(line: 99, column: 23, scope: !9081)
!9181 = !DILocation(line: 99, column: 24, scope: !9081)
!9182 = !DILocation(line: 99, column: 19, scope: !9081)
!9183 = !DILocation(line: 99, column: 30, scope: !9081)
!9184 = !DILocation(line: 99, column: 28, scope: !9081)
!9185 = !DILocation(line: 99, column: 17, scope: !9081)
!9186 = !DILocation(line: 100, column: 19, scope: !9081)
!9187 = !DILocation(line: 100, column: 27, scope: !9081)
!9188 = !DILocation(line: 100, column: 25, scope: !9081)
!9189 = !DILocation(line: 100, column: 17, scope: !9081)
!9190 = !DILocation(line: 102, column: 22, scope: !9081)
!9191 = !DILocation(line: 102, column: 31, scope: !9081)
!9192 = !DILocation(line: 102, column: 28, scope: !9081)
!9193 = !DILocation(line: 102, column: 15, scope: !9081)
!9194 = !DILocation(line: 102, column: 16, scope: !9081)
!9195 = !DILocation(line: 102, column: 11, scope: !9081)
!9196 = !DILocation(line: 102, column: 20, scope: !9081)
!9197 = !DILocation(line: 103, column: 19, scope: !9081)
!9198 = !DILocation(line: 103, column: 27, scope: !9081)
!9199 = !DILocation(line: 103, column: 25, scope: !9081)
!9200 = !DILocation(line: 103, column: 17, scope: !9081)
!9201 = !DILocation(line: 104, column: 22, scope: !9081)
!9202 = !DILocation(line: 104, column: 31, scope: !9081)
!9203 = !DILocation(line: 104, column: 28, scope: !9081)
!9204 = !DILocation(line: 104, column: 15, scope: !9081)
!9205 = !DILocation(line: 104, column: 16, scope: !9081)
!9206 = !DILocation(line: 104, column: 11, scope: !9081)
!9207 = !DILocation(line: 104, column: 20, scope: !9081)
!9208 = !DILocation(line: 105, column: 22, scope: !9081)
!9209 = !DILocation(line: 105, column: 31, scope: !9081)
!9210 = !DILocation(line: 105, column: 28, scope: !9081)
!9211 = !DILocation(line: 105, column: 15, scope: !9081)
!9212 = !DILocation(line: 105, column: 16, scope: !9081)
!9213 = !DILocation(line: 105, column: 11, scope: !9081)
!9214 = !DILocation(line: 105, column: 20, scope: !9081)
!9215 = !DILocation(line: 107, column: 7, scope: !9081)
!9216 = !DILocation(line: 75, column: 25, scope: !9217)
!9217 = !DILexicalBlockFile(scope: !9076, file: !1050, discriminator: 2)
!9218 = !DILocation(line: 75, column: 7, scope: !9217)
!9219 = distinct !{!9219, !9220}
!9220 = !DILocation(line: 75, column: 7, scope: !9067)
!9221 = !DILocation(line: 108, column: 5, scope: !9067)
!9222 = !DILocation(line: 109, column: 16, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9063, file: !1050, line: 108, column: 12)
!9224 = !DILocation(line: 109, column: 15, scope: !9223)
!9225 = !DILocation(line: 109, column: 13, scope: !9223)
!9226 = !DILocation(line: 110, column: 13, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9223, file: !1050, line: 110, column: 7)
!9228 = !DILocation(line: 110, column: 12, scope: !9227)
!9229 = !DILocation(line: 110, column: 17, scope: !9230)
!9230 = !DILexicalBlockFile(scope: !9231, file: !1050, discriminator: 1)
!9231 = distinct !DILexicalBlock(scope: !9227, file: !1050, line: 110, column: 7)
!9232 = !DILocation(line: 110, column: 19, scope: !9230)
!9233 = !DILocation(line: 110, column: 18, scope: !9230)
!9234 = !DILocation(line: 110, column: 7, scope: !9230)
!9235 = !DILocation(line: 112, column: 22, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9231, file: !1050, line: 110, column: 30)
!9237 = !DILocation(line: 112, column: 18, scope: !9236)
!9238 = !DILocation(line: 112, column: 27, scope: !9236)
!9239 = !DILocation(line: 112, column: 25, scope: !9236)
!9240 = !DILocation(line: 112, column: 16, scope: !9236)
!9241 = !DILocation(line: 113, column: 23, scope: !9236)
!9242 = !DILocation(line: 113, column: 24, scope: !9236)
!9243 = !DILocation(line: 113, column: 19, scope: !9236)
!9244 = !DILocation(line: 113, column: 30, scope: !9236)
!9245 = !DILocation(line: 113, column: 28, scope: !9236)
!9246 = !DILocation(line: 113, column: 17, scope: !9236)
!9247 = !DILocation(line: 114, column: 23, scope: !9236)
!9248 = !DILocation(line: 114, column: 24, scope: !9236)
!9249 = !DILocation(line: 114, column: 19, scope: !9236)
!9250 = !DILocation(line: 114, column: 30, scope: !9236)
!9251 = !DILocation(line: 114, column: 28, scope: !9236)
!9252 = !DILocation(line: 114, column: 17, scope: !9236)
!9253 = !DILocation(line: 116, column: 20, scope: !9236)
!9254 = !DILocation(line: 116, column: 28, scope: !9236)
!9255 = !DILocation(line: 116, column: 25, scope: !9236)
!9256 = !DILocation(line: 116, column: 15, scope: !9236)
!9257 = !DILocation(line: 116, column: 11, scope: !9236)
!9258 = !DILocation(line: 116, column: 18, scope: !9236)
!9259 = !DILocation(line: 117, column: 23, scope: !9236)
!9260 = !DILocation(line: 117, column: 24, scope: !9236)
!9261 = !DILocation(line: 117, column: 19, scope: !9236)
!9262 = !DILocation(line: 117, column: 30, scope: !9236)
!9263 = !DILocation(line: 117, column: 28, scope: !9236)
!9264 = !DILocation(line: 117, column: 17, scope: !9236)
!9265 = !DILocation(line: 119, column: 22, scope: !9236)
!9266 = !DILocation(line: 119, column: 31, scope: !9236)
!9267 = !DILocation(line: 119, column: 28, scope: !9236)
!9268 = !DILocation(line: 119, column: 15, scope: !9236)
!9269 = !DILocation(line: 119, column: 16, scope: !9236)
!9270 = !DILocation(line: 119, column: 11, scope: !9236)
!9271 = !DILocation(line: 119, column: 20, scope: !9236)
!9272 = !DILocation(line: 120, column: 23, scope: !9236)
!9273 = !DILocation(line: 120, column: 25, scope: !9236)
!9274 = !DILocation(line: 120, column: 19, scope: !9236)
!9275 = !DILocation(line: 120, column: 32, scope: !9236)
!9276 = !DILocation(line: 120, column: 30, scope: !9236)
!9277 = !DILocation(line: 120, column: 17, scope: !9236)
!9278 = !DILocation(line: 121, column: 22, scope: !9236)
!9279 = !DILocation(line: 121, column: 31, scope: !9236)
!9280 = !DILocation(line: 121, column: 28, scope: !9236)
!9281 = !DILocation(line: 121, column: 15, scope: !9236)
!9282 = !DILocation(line: 121, column: 16, scope: !9236)
!9283 = !DILocation(line: 121, column: 11, scope: !9236)
!9284 = !DILocation(line: 121, column: 20, scope: !9236)
!9285 = !DILocation(line: 123, column: 23, scope: !9236)
!9286 = !DILocation(line: 123, column: 24, scope: !9236)
!9287 = !DILocation(line: 123, column: 19, scope: !9236)
!9288 = !DILocation(line: 123, column: 30, scope: !9236)
!9289 = !DILocation(line: 123, column: 28, scope: !9236)
!9290 = !DILocation(line: 123, column: 17, scope: !9236)
!9291 = !DILocation(line: 124, column: 22, scope: !9236)
!9292 = !DILocation(line: 124, column: 31, scope: !9236)
!9293 = !DILocation(line: 124, column: 28, scope: !9236)
!9294 = !DILocation(line: 124, column: 15, scope: !9236)
!9295 = !DILocation(line: 124, column: 16, scope: !9236)
!9296 = !DILocation(line: 124, column: 11, scope: !9236)
!9297 = !DILocation(line: 124, column: 20, scope: !9236)
!9298 = !DILocation(line: 125, column: 23, scope: !9236)
!9299 = !DILocation(line: 125, column: 24, scope: !9236)
!9300 = !DILocation(line: 125, column: 19, scope: !9236)
!9301 = !DILocation(line: 125, column: 30, scope: !9236)
!9302 = !DILocation(line: 125, column: 28, scope: !9236)
!9303 = !DILocation(line: 125, column: 17, scope: !9236)
!9304 = !DILocation(line: 127, column: 22, scope: !9236)
!9305 = !DILocation(line: 127, column: 31, scope: !9236)
!9306 = !DILocation(line: 127, column: 28, scope: !9236)
!9307 = !DILocation(line: 127, column: 15, scope: !9236)
!9308 = !DILocation(line: 127, column: 16, scope: !9236)
!9309 = !DILocation(line: 127, column: 11, scope: !9236)
!9310 = !DILocation(line: 127, column: 20, scope: !9236)
!9311 = !DILocation(line: 128, column: 23, scope: !9236)
!9312 = !DILocation(line: 128, column: 24, scope: !9236)
!9313 = !DILocation(line: 128, column: 19, scope: !9236)
!9314 = !DILocation(line: 128, column: 30, scope: !9236)
!9315 = !DILocation(line: 128, column: 28, scope: !9236)
!9316 = !DILocation(line: 128, column: 17, scope: !9236)
!9317 = !DILocation(line: 130, column: 22, scope: !9236)
!9318 = !DILocation(line: 130, column: 31, scope: !9236)
!9319 = !DILocation(line: 130, column: 28, scope: !9236)
!9320 = !DILocation(line: 130, column: 15, scope: !9236)
!9321 = !DILocation(line: 130, column: 16, scope: !9236)
!9322 = !DILocation(line: 130, column: 11, scope: !9236)
!9323 = !DILocation(line: 130, column: 20, scope: !9236)
!9324 = !DILocation(line: 131, column: 22, scope: !9236)
!9325 = !DILocation(line: 131, column: 31, scope: !9236)
!9326 = !DILocation(line: 131, column: 28, scope: !9236)
!9327 = !DILocation(line: 131, column: 15, scope: !9236)
!9328 = !DILocation(line: 131, column: 16, scope: !9236)
!9329 = !DILocation(line: 131, column: 11, scope: !9236)
!9330 = !DILocation(line: 131, column: 20, scope: !9236)
!9331 = !DILocation(line: 132, column: 22, scope: !9236)
!9332 = !DILocation(line: 132, column: 31, scope: !9236)
!9333 = !DILocation(line: 132, column: 28, scope: !9236)
!9334 = !DILocation(line: 132, column: 15, scope: !9236)
!9335 = !DILocation(line: 132, column: 16, scope: !9236)
!9336 = !DILocation(line: 132, column: 11, scope: !9236)
!9337 = !DILocation(line: 132, column: 20, scope: !9236)
!9338 = !DILocation(line: 134, column: 7, scope: !9236)
!9339 = !DILocation(line: 110, column: 25, scope: !9340)
!9340 = !DILexicalBlockFile(scope: !9231, file: !1050, discriminator: 2)
!9341 = !DILocation(line: 110, column: 7, scope: !9340)
!9342 = distinct !{!9342, !9343}
!9343 = !DILocation(line: 110, column: 7, scope: !9223)
!9344 = !DILocation(line: 136, column: 1, scope: !9018)
!9345 = distinct !DISubprogram(name: "ff_eac3_apply_spectral_extension", scope: !1008, file: !1008, line: 59, type: !7907, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!9346 = !DILocalVariable(name: "s", arg: 1, scope: !9345, file: !1008, line: 59, type: !1852)
!9347 = !DILocation(line: 59, column: 64, scope: !9345)
!9348 = !DILocalVariable(name: "bin", scope: !9345, file: !1008, line: 61, type: !1015)
!9349 = !DILocation(line: 61, column: 9, scope: !9345)
!9350 = !DILocalVariable(name: "bnd", scope: !9345, file: !1008, line: 61, type: !1015)
!9351 = !DILocation(line: 61, column: 14, scope: !9345)
!9352 = !DILocalVariable(name: "ch", scope: !9345, file: !1008, line: 61, type: !1015)
!9353 = !DILocation(line: 61, column: 19, scope: !9345)
!9354 = !DILocalVariable(name: "i", scope: !9345, file: !1008, line: 61, type: !1015)
!9355 = !DILocation(line: 61, column: 23, scope: !9345)
!9356 = !DILocalVariable(name: "wrapflag", scope: !9345, file: !1008, line: 62, type: !1948)
!9357 = !DILocation(line: 62, column: 13, scope: !9345)
!9358 = !DILocalVariable(name: "num_copy_sections", scope: !9345, file: !1008, line: 62, type: !1041)
!9359 = !DILocation(line: 62, column: 34, scope: !9345)
!9360 = !DILocalVariable(name: "copy_sizes", scope: !9345, file: !1008, line: 62, type: !1948)
!9361 = !DILocation(line: 62, column: 53, scope: !9345)
!9362 = !DILocalVariable(name: "rms_energy", scope: !9345, file: !1008, line: 63, type: !9363)
!9363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 544, align: 32, elements: !1949)
!9364 = !DILocation(line: 63, column: 11, scope: !9345)
!9365 = !DILocation(line: 67, column: 11, scope: !9345)
!9366 = !DILocation(line: 67, column: 14, scope: !9345)
!9367 = !DILocation(line: 67, column: 9, scope: !9345)
!9368 = !DILocation(line: 68, column: 23, scope: !9345)
!9369 = !DILocation(line: 69, column: 14, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9345, file: !1008, line: 69, column: 5)
!9371 = !DILocation(line: 69, column: 10, scope: !9370)
!9372 = !DILocation(line: 69, column: 19, scope: !9373)
!9373 = !DILexicalBlockFile(scope: !9374, file: !1008, discriminator: 1)
!9374 = distinct !DILexicalBlock(scope: !9370, file: !1008, line: 69, column: 5)
!9375 = !DILocation(line: 69, column: 25, scope: !9373)
!9376 = !DILocation(line: 69, column: 28, scope: !9373)
!9377 = !DILocation(line: 69, column: 23, scope: !9373)
!9378 = !DILocation(line: 69, column: 5, scope: !9373)
!9379 = !DILocalVariable(name: "copysize", scope: !9380, file: !1008, line: 70, type: !1015)
!9380 = distinct !DILexicalBlock(scope: !9374, file: !1008, line: 69, column: 50)
!9381 = !DILocation(line: 70, column: 13, scope: !9380)
!9382 = !DILocalVariable(name: "bandsize", scope: !9380, file: !1008, line: 71, type: !1015)
!9383 = !DILocation(line: 71, column: 13, scope: !9380)
!9384 = !DILocation(line: 71, column: 42, scope: !9380)
!9385 = !DILocation(line: 71, column: 24, scope: !9380)
!9386 = !DILocation(line: 71, column: 27, scope: !9380)
!9387 = !DILocation(line: 72, column: 13, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9380, file: !1008, line: 72, column: 13)
!9389 = !DILocation(line: 72, column: 19, scope: !9388)
!9390 = !DILocation(line: 72, column: 17, scope: !9388)
!9391 = !DILocation(line: 72, column: 30, scope: !9388)
!9392 = !DILocation(line: 72, column: 33, scope: !9388)
!9393 = !DILocation(line: 72, column: 28, scope: !9388)
!9394 = !DILocation(line: 72, column: 13, scope: !9380)
!9395 = !DILocation(line: 73, column: 47, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9388, file: !1008, line: 72, column: 53)
!9397 = !DILocation(line: 73, column: 53, scope: !9396)
!9398 = !DILocation(line: 73, column: 56, scope: !9396)
!9399 = !DILocation(line: 73, column: 51, scope: !9396)
!9400 = !DILocation(line: 73, column: 41, scope: !9396)
!9401 = !DILocation(line: 73, column: 13, scope: !9396)
!9402 = !DILocation(line: 73, column: 45, scope: !9396)
!9403 = !DILocation(line: 74, column: 19, scope: !9396)
!9404 = !DILocation(line: 74, column: 22, scope: !9396)
!9405 = !DILocation(line: 74, column: 17, scope: !9396)
!9406 = !DILocation(line: 75, column: 22, scope: !9396)
!9407 = !DILocation(line: 75, column: 13, scope: !9396)
!9408 = !DILocation(line: 75, column: 27, scope: !9396)
!9409 = !DILocation(line: 76, column: 9, scope: !9396)
!9410 = !DILocation(line: 77, column: 16, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9380, file: !1008, line: 77, column: 9)
!9412 = !DILocation(line: 77, column: 14, scope: !9411)
!9413 = !DILocation(line: 77, column: 21, scope: !9414)
!9414 = !DILexicalBlockFile(scope: !9415, file: !1008, discriminator: 1)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !1008, line: 77, column: 9)
!9416 = !DILocation(line: 77, column: 25, scope: !9414)
!9417 = !DILocation(line: 77, column: 23, scope: !9414)
!9418 = !DILocation(line: 77, column: 9, scope: !9414)
!9419 = !DILocation(line: 78, column: 17, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !1008, line: 78, column: 17)
!9421 = distinct !DILexicalBlock(scope: !9415, file: !1008, line: 77, column: 50)
!9422 = !DILocation(line: 78, column: 24, scope: !9420)
!9423 = !DILocation(line: 78, column: 27, scope: !9420)
!9424 = !DILocation(line: 78, column: 21, scope: !9420)
!9425 = !DILocation(line: 78, column: 17, scope: !9421)
!9426 = !DILocation(line: 79, column: 51, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9420, file: !1008, line: 78, column: 47)
!9428 = !DILocation(line: 79, column: 57, scope: !9427)
!9429 = !DILocation(line: 79, column: 60, scope: !9427)
!9430 = !DILocation(line: 79, column: 55, scope: !9427)
!9431 = !DILocation(line: 79, column: 45, scope: !9427)
!9432 = !DILocation(line: 79, column: 17, scope: !9427)
!9433 = !DILocation(line: 79, column: 49, scope: !9427)
!9434 = !DILocation(line: 80, column: 23, scope: !9427)
!9435 = !DILocation(line: 80, column: 26, scope: !9427)
!9436 = !DILocation(line: 80, column: 21, scope: !9427)
!9437 = !DILocation(line: 81, column: 13, scope: !9427)
!9438 = !DILocation(line: 82, column: 26, scope: !9421)
!9439 = !DILocation(line: 82, column: 37, scope: !9421)
!9440 = !DILocation(line: 82, column: 35, scope: !9421)
!9441 = !DILocation(line: 82, column: 43, scope: !9421)
!9442 = !DILocation(line: 82, column: 46, scope: !9421)
!9443 = !DILocation(line: 82, column: 67, scope: !9421)
!9444 = !DILocation(line: 82, column: 65, scope: !9421)
!9445 = !DILocation(line: 82, column: 40, scope: !9421)
!9446 = !DILocation(line: 82, column: 25, scope: !9421)
!9447 = !DILocation(line: 82, column: 75, scope: !9448)
!9448 = !DILexicalBlockFile(scope: !9421, file: !1008, discriminator: 1)
!9449 = !DILocation(line: 82, column: 78, scope: !9448)
!9450 = !DILocation(line: 82, column: 99, scope: !9448)
!9451 = !DILocation(line: 82, column: 97, scope: !9448)
!9452 = !DILocation(line: 82, column: 25, scope: !9448)
!9453 = !DILocation(line: 82, column: 107, scope: !9454)
!9454 = !DILexicalBlockFile(scope: !9421, file: !1008, discriminator: 2)
!9455 = !DILocation(line: 82, column: 118, scope: !9454)
!9456 = !DILocation(line: 82, column: 116, scope: !9454)
!9457 = !DILocation(line: 82, column: 25, scope: !9454)
!9458 = !DILocation(line: 82, column: 25, scope: !9459)
!9459 = !DILexicalBlockFile(scope: !9421, file: !1008, discriminator: 3)
!9460 = !DILocation(line: 82, column: 22, scope: !9459)
!9461 = !DILocation(line: 83, column: 20, scope: !9421)
!9462 = !DILocation(line: 83, column: 17, scope: !9421)
!9463 = !DILocation(line: 84, column: 9, scope: !9421)
!9464 = !DILocation(line: 77, column: 40, scope: !9465)
!9465 = !DILexicalBlockFile(scope: !9415, file: !1008, discriminator: 2)
!9466 = !DILocation(line: 77, column: 37, scope: !9465)
!9467 = !DILocation(line: 77, column: 9, scope: !9465)
!9468 = distinct !{!9468, !9469}
!9469 = !DILocation(line: 77, column: 9, scope: !9380)
!9470 = !DILocation(line: 85, column: 5, scope: !9380)
!9471 = !DILocation(line: 69, column: 46, scope: !9472)
!9472 = !DILexicalBlockFile(scope: !9374, file: !1008, discriminator: 2)
!9473 = !DILocation(line: 69, column: 5, scope: !9472)
!9474 = distinct !{!9474, !9475}
!9475 = !DILocation(line: 69, column: 5, scope: !9345)
!9476 = !DILocation(line: 86, column: 39, scope: !9345)
!9477 = !DILocation(line: 86, column: 45, scope: !9345)
!9478 = !DILocation(line: 86, column: 48, scope: !9345)
!9479 = !DILocation(line: 86, column: 43, scope: !9345)
!9480 = !DILocation(line: 86, column: 33, scope: !9345)
!9481 = !DILocation(line: 86, column: 5, scope: !9345)
!9482 = !DILocation(line: 86, column: 37, scope: !9345)
!9483 = !DILocation(line: 88, column: 13, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9345, file: !1008, line: 88, column: 5)
!9485 = !DILocation(line: 88, column: 10, scope: !9484)
!9486 = !DILocation(line: 88, column: 18, scope: !9487)
!9487 = !DILexicalBlockFile(scope: !9488, file: !1008, discriminator: 1)
!9488 = distinct !DILexicalBlock(scope: !9484, file: !1008, line: 88, column: 5)
!9489 = !DILocation(line: 88, column: 24, scope: !9487)
!9490 = !DILocation(line: 88, column: 27, scope: !9487)
!9491 = !DILocation(line: 88, column: 21, scope: !9487)
!9492 = !DILocation(line: 88, column: 5, scope: !9487)
!9493 = !DILocation(line: 89, column: 34, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9495, file: !1008, line: 89, column: 13)
!9495 = distinct !DILexicalBlock(scope: !9488, file: !1008, line: 88, column: 47)
!9496 = !DILocation(line: 89, column: 14, scope: !9494)
!9497 = !DILocation(line: 89, column: 17, scope: !9494)
!9498 = !DILocation(line: 89, column: 13, scope: !9495)
!9499 = !DILocation(line: 90, column: 13, scope: !9494)
!9500 = !DILocation(line: 93, column: 15, scope: !9495)
!9501 = !DILocation(line: 93, column: 18, scope: !9495)
!9502 = !DILocation(line: 93, column: 13, scope: !9495)
!9503 = !DILocation(line: 94, column: 16, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9495, file: !1008, line: 94, column: 9)
!9505 = !DILocation(line: 94, column: 14, scope: !9504)
!9506 = !DILocation(line: 94, column: 21, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !9508, file: !1008, discriminator: 1)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !1008, line: 94, column: 9)
!9509 = !DILocation(line: 94, column: 25, scope: !9507)
!9510 = !DILocation(line: 94, column: 23, scope: !9507)
!9511 = !DILocation(line: 94, column: 9, scope: !9507)
!9512 = !DILocation(line: 95, column: 45, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9508, file: !1008, line: 94, column: 49)
!9514 = !DILocation(line: 95, column: 21, scope: !9513)
!9515 = !DILocation(line: 95, column: 41, scope: !9513)
!9516 = !DILocation(line: 95, column: 24, scope: !9513)
!9517 = !DILocation(line: 95, column: 13, scope: !9513)
!9518 = !DILocation(line: 96, column: 45, scope: !9513)
!9519 = !DILocation(line: 96, column: 48, scope: !9513)
!9520 = !DILocation(line: 96, column: 21, scope: !9513)
!9521 = !DILocation(line: 96, column: 41, scope: !9513)
!9522 = !DILocation(line: 96, column: 24, scope: !9513)
!9523 = !DILocation(line: 97, column: 31, scope: !9513)
!9524 = !DILocation(line: 97, column: 20, scope: !9513)
!9525 = !DILocation(line: 97, column: 33, scope: !9513)
!9526 = !DILocation(line: 98, column: 31, scope: !9513)
!9527 = !DILocation(line: 98, column: 20, scope: !9513)
!9528 = !DILocation(line: 98, column: 17, scope: !9513)
!9529 = !DILocation(line: 99, column: 9, scope: !9513)
!9530 = !DILocation(line: 94, column: 45, scope: !9531)
!9531 = !DILexicalBlockFile(scope: !9508, file: !1008, discriminator: 2)
!9532 = !DILocation(line: 94, column: 9, scope: !9531)
!9533 = distinct !{!9533, !9534}
!9534 = !DILocation(line: 94, column: 9, scope: !9495)
!9535 = !DILocation(line: 102, column: 15, scope: !9495)
!9536 = !DILocation(line: 102, column: 18, scope: !9495)
!9537 = !DILocation(line: 102, column: 13, scope: !9495)
!9538 = !DILocation(line: 103, column: 18, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9495, file: !1008, line: 103, column: 9)
!9540 = !DILocation(line: 103, column: 14, scope: !9539)
!9541 = !DILocation(line: 103, column: 23, scope: !9542)
!9542 = !DILexicalBlockFile(scope: !9543, file: !1008, discriminator: 1)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !1008, line: 103, column: 9)
!9544 = !DILocation(line: 103, column: 29, scope: !9542)
!9545 = !DILocation(line: 103, column: 32, scope: !9542)
!9546 = !DILocation(line: 103, column: 27, scope: !9542)
!9547 = !DILocation(line: 103, column: 9, scope: !9542)
!9548 = !DILocalVariable(name: "bandsize", scope: !9549, file: !1008, line: 104, type: !1015)
!9549 = distinct !DILexicalBlock(scope: !9543, file: !1008, line: 103, column: 54)
!9550 = !DILocation(line: 104, column: 17, scope: !9549)
!9551 = !DILocation(line: 104, column: 46, scope: !9549)
!9552 = !DILocation(line: 104, column: 28, scope: !9549)
!9553 = !DILocation(line: 104, column: 31, scope: !9549)
!9554 = !DILocalVariable(name: "accum", scope: !9549, file: !1008, line: 105, type: !1034)
!9555 = !DILocation(line: 105, column: 19, scope: !9549)
!9556 = !DILocation(line: 106, column: 20, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9549, file: !1008, line: 106, column: 13)
!9558 = !DILocation(line: 106, column: 18, scope: !9557)
!9559 = !DILocation(line: 106, column: 25, scope: !9560)
!9560 = !DILexicalBlockFile(scope: !9561, file: !1008, discriminator: 1)
!9561 = distinct !DILexicalBlock(scope: !9557, file: !1008, line: 106, column: 13)
!9562 = !DILocation(line: 106, column: 29, scope: !9560)
!9563 = !DILocation(line: 106, column: 27, scope: !9560)
!9564 = !DILocation(line: 106, column: 13, scope: !9560)
!9565 = !DILocalVariable(name: "coeff", scope: !9566, file: !1008, line: 107, type: !1034)
!9566 = distinct !DILexicalBlock(scope: !9561, file: !1008, line: 106, column: 44)
!9567 = !DILocation(line: 107, column: 23, scope: !9566)
!9568 = !DILocation(line: 107, column: 58, scope: !9566)
!9569 = !DILocation(line: 107, column: 31, scope: !9566)
!9570 = !DILocation(line: 107, column: 51, scope: !9566)
!9571 = !DILocation(line: 107, column: 34, scope: !9566)
!9572 = !DILocation(line: 108, column: 26, scope: !9566)
!9573 = !DILocation(line: 108, column: 34, scope: !9566)
!9574 = !DILocation(line: 108, column: 32, scope: !9566)
!9575 = !DILocation(line: 108, column: 23, scope: !9566)
!9576 = !DILocation(line: 109, column: 13, scope: !9566)
!9577 = !DILocation(line: 106, column: 40, scope: !9578)
!9578 = !DILexicalBlockFile(scope: !9561, file: !1008, discriminator: 2)
!9579 = !DILocation(line: 106, column: 13, scope: !9578)
!9580 = distinct !{!9580, !9581}
!9581 = !DILocation(line: 106, column: 13, scope: !9549)
!9582 = !DILocation(line: 110, column: 37, scope: !9549)
!9583 = !DILocation(line: 110, column: 45, scope: !9549)
!9584 = !DILocation(line: 110, column: 43, scope: !9549)
!9585 = !DILocation(line: 110, column: 31, scope: !9549)
!9586 = !DILocation(line: 110, column: 24, scope: !9549)
!9587 = !DILocation(line: 110, column: 13, scope: !9549)
!9588 = !DILocation(line: 110, column: 29, scope: !9549)
!9589 = !DILocation(line: 111, column: 9, scope: !9549)
!9590 = !DILocation(line: 103, column: 50, scope: !9591)
!9591 = !DILexicalBlockFile(scope: !9543, file: !1008, discriminator: 2)
!9592 = !DILocation(line: 103, column: 9, scope: !9591)
!9593 = distinct !{!9593, !9594}
!9594 = !DILocation(line: 103, column: 9, scope: !9495)
!9595 = !DILocation(line: 115, column: 31, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9495, file: !1008, line: 115, column: 13)
!9597 = !DILocation(line: 115, column: 13, scope: !9596)
!9598 = !DILocation(line: 115, column: 16, scope: !9596)
!9599 = !DILocation(line: 115, column: 35, scope: !9596)
!9600 = !DILocation(line: 115, column: 13, scope: !9495)
!9601 = !DILocalVariable(name: "atten_tab", scope: !9602, file: !1008, line: 116, type: !2157)
!9602 = distinct !DILexicalBlock(scope: !9596, file: !1008, line: 115, column: 41)
!9603 = !DILocation(line: 116, column: 26, scope: !9602)
!9604 = !DILocation(line: 116, column: 78, scope: !9602)
!9605 = !DILocation(line: 116, column: 60, scope: !9602)
!9606 = !DILocation(line: 116, column: 63, scope: !9602)
!9607 = !DILocation(line: 116, column: 38, scope: !9602)
!9608 = !DILocation(line: 117, column: 19, scope: !9602)
!9609 = !DILocation(line: 117, column: 22, scope: !9602)
!9610 = !DILocation(line: 117, column: 41, scope: !9602)
!9611 = !DILocation(line: 117, column: 17, scope: !9602)
!9612 = !DILocation(line: 118, column: 22, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9602, file: !1008, line: 118, column: 13)
!9614 = !DILocation(line: 118, column: 18, scope: !9613)
!9615 = !DILocation(line: 118, column: 27, scope: !9616)
!9616 = !DILexicalBlockFile(scope: !9617, file: !1008, discriminator: 1)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !1008, line: 118, column: 13)
!9618 = !DILocation(line: 118, column: 33, scope: !9616)
!9619 = !DILocation(line: 118, column: 36, scope: !9616)
!9620 = !DILocation(line: 118, column: 31, scope: !9616)
!9621 = !DILocation(line: 118, column: 13, scope: !9616)
!9622 = !DILocation(line: 119, column: 30, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !1008, line: 119, column: 21)
!9624 = distinct !DILexicalBlock(scope: !9617, file: !1008, line: 118, column: 58)
!9625 = !DILocation(line: 119, column: 21, scope: !9623)
!9626 = !DILocation(line: 119, column: 21, scope: !9624)
!9627 = !DILocalVariable(name: "coeffs", scope: !9628, file: !1008, line: 120, type: !2226)
!9628 = distinct !DILexicalBlock(scope: !9623, file: !1008, line: 119, column: 36)
!9629 = !DILocation(line: 120, column: 31, scope: !9628)
!9630 = !DILocation(line: 120, column: 65, scope: !9628)
!9631 = !DILocation(line: 120, column: 41, scope: !9628)
!9632 = !DILocation(line: 120, column: 61, scope: !9628)
!9633 = !DILocation(line: 120, column: 44, scope: !9628)
!9634 = !DILocation(line: 121, column: 34, scope: !9628)
!9635 = !DILocation(line: 121, column: 21, scope: !9628)
!9636 = !DILocation(line: 121, column: 31, scope: !9628)
!9637 = !DILocation(line: 122, column: 34, scope: !9628)
!9638 = !DILocation(line: 122, column: 21, scope: !9628)
!9639 = !DILocation(line: 122, column: 31, scope: !9628)
!9640 = !DILocation(line: 123, column: 34, scope: !9628)
!9641 = !DILocation(line: 123, column: 21, scope: !9628)
!9642 = !DILocation(line: 123, column: 31, scope: !9628)
!9643 = !DILocation(line: 124, column: 34, scope: !9628)
!9644 = !DILocation(line: 124, column: 21, scope: !9628)
!9645 = !DILocation(line: 124, column: 31, scope: !9628)
!9646 = !DILocation(line: 125, column: 34, scope: !9628)
!9647 = !DILocation(line: 125, column: 21, scope: !9628)
!9648 = !DILocation(line: 125, column: 31, scope: !9628)
!9649 = !DILocation(line: 126, column: 17, scope: !9628)
!9650 = !DILocation(line: 127, column: 42, scope: !9624)
!9651 = !DILocation(line: 127, column: 24, scope: !9624)
!9652 = !DILocation(line: 127, column: 27, scope: !9624)
!9653 = !DILocation(line: 127, column: 21, scope: !9624)
!9654 = !DILocation(line: 128, column: 13, scope: !9624)
!9655 = !DILocation(line: 118, column: 54, scope: !9656)
!9656 = !DILexicalBlockFile(scope: !9617, file: !1008, discriminator: 2)
!9657 = !DILocation(line: 118, column: 13, scope: !9656)
!9658 = distinct !{!9658, !9659}
!9659 = !DILocation(line: 118, column: 13, scope: !9602)
!9660 = !DILocation(line: 129, column: 9, scope: !9602)
!9661 = !DILocation(line: 134, column: 15, scope: !9495)
!9662 = !DILocation(line: 134, column: 18, scope: !9495)
!9663 = !DILocation(line: 134, column: 13, scope: !9495)
!9664 = !DILocation(line: 135, column: 18, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9495, file: !1008, line: 135, column: 9)
!9666 = !DILocation(line: 135, column: 14, scope: !9665)
!9667 = !DILocation(line: 135, column: 23, scope: !9668)
!9668 = !DILexicalBlockFile(scope: !9669, file: !1008, discriminator: 1)
!9669 = distinct !DILexicalBlock(scope: !9665, file: !1008, line: 135, column: 9)
!9670 = !DILocation(line: 135, column: 29, scope: !9668)
!9671 = !DILocation(line: 135, column: 32, scope: !9668)
!9672 = !DILocation(line: 135, column: 27, scope: !9668)
!9673 = !DILocation(line: 135, column: 9, scope: !9668)
!9674 = !DILocalVariable(name: "nscale", scope: !9675, file: !1008, line: 136, type: !1034)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !1008, line: 135, column: 54)
!9676 = !DILocation(line: 136, column: 19, scope: !9675)
!9677 = !DILocation(line: 136, column: 51, scope: !9675)
!9678 = !DILocation(line: 136, column: 28, scope: !9675)
!9679 = !DILocation(line: 136, column: 47, scope: !9675)
!9680 = !DILocation(line: 136, column: 31, scope: !9675)
!9681 = !DILocation(line: 136, column: 69, scope: !9675)
!9682 = !DILocation(line: 136, column: 58, scope: !9675)
!9683 = !DILocation(line: 136, column: 56, scope: !9675)
!9684 = !DILocation(line: 136, column: 74, scope: !9675)
!9685 = !DILocalVariable(name: "sscale", scope: !9675, file: !1008, line: 137, type: !1034)
!9686 = !DILocation(line: 137, column: 19, scope: !9675)
!9687 = !DILocation(line: 137, column: 52, scope: !9675)
!9688 = !DILocation(line: 137, column: 28, scope: !9675)
!9689 = !DILocation(line: 137, column: 48, scope: !9675)
!9690 = !DILocation(line: 137, column: 31, scope: !9675)
!9691 = !DILocation(line: 140, column: 20, scope: !9675)
!9692 = !DILocation(line: 141, column: 20, scope: !9675)
!9693 = !DILocation(line: 143, column: 20, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9675, file: !1008, line: 143, column: 13)
!9695 = !DILocation(line: 143, column: 18, scope: !9694)
!9696 = !DILocation(line: 143, column: 25, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !9698, file: !1008, discriminator: 1)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !1008, line: 143, column: 13)
!9699 = !DILocation(line: 143, column: 47, scope: !9697)
!9700 = !DILocation(line: 143, column: 29, scope: !9697)
!9701 = !DILocation(line: 143, column: 32, scope: !9697)
!9702 = !DILocation(line: 143, column: 27, scope: !9697)
!9703 = !DILocation(line: 143, column: 13, scope: !9697)
!9704 = !DILocalVariable(name: "noise", scope: !9705, file: !1008, line: 144, type: !1034)
!9705 = distinct !DILexicalBlock(scope: !9698, file: !1008, line: 143, column: 58)
!9706 = !DILocation(line: 144, column: 23, scope: !9705)
!9707 = !DILocation(line: 144, column: 31, scope: !9705)
!9708 = !DILocation(line: 144, column: 61, scope: !9705)
!9709 = !DILocation(line: 144, column: 64, scope: !9705)
!9710 = !DILocation(line: 144, column: 49, scope: !9705)
!9711 = !DILocation(line: 144, column: 40, scope: !9705)
!9712 = !DILocation(line: 144, column: 38, scope: !9705)
!9713 = !DILocation(line: 145, column: 49, scope: !9705)
!9714 = !DILocation(line: 145, column: 41, scope: !9705)
!9715 = !DILocation(line: 145, column: 17, scope: !9705)
!9716 = !DILocation(line: 145, column: 37, scope: !9705)
!9717 = !DILocation(line: 145, column: 20, scope: !9705)
!9718 = !DILocation(line: 145, column: 46, scope: !9705)
!9719 = !DILocation(line: 146, column: 51, scope: !9705)
!9720 = !DILocation(line: 146, column: 44, scope: !9705)
!9721 = !DILocation(line: 146, column: 17, scope: !9705)
!9722 = !DILocation(line: 146, column: 37, scope: !9705)
!9723 = !DILocation(line: 146, column: 20, scope: !9705)
!9724 = !DILocation(line: 146, column: 48, scope: !9705)
!9725 = !DILocation(line: 147, column: 13, scope: !9705)
!9726 = !DILocation(line: 143, column: 54, scope: !9727)
!9727 = !DILexicalBlockFile(scope: !9698, file: !1008, discriminator: 2)
!9728 = !DILocation(line: 143, column: 13, scope: !9727)
!9729 = distinct !{!9729, !9730}
!9730 = !DILocation(line: 143, column: 13, scope: !9675)
!9731 = !DILocation(line: 148, column: 9, scope: !9675)
!9732 = !DILocation(line: 135, column: 50, scope: !9733)
!9733 = !DILexicalBlockFile(scope: !9669, file: !1008, discriminator: 2)
!9734 = !DILocation(line: 135, column: 9, scope: !9733)
!9735 = distinct !{!9735, !9736}
!9736 = !DILocation(line: 135, column: 9, scope: !9495)
!9737 = !DILocation(line: 149, column: 5, scope: !9495)
!9738 = !DILocation(line: 88, column: 43, scope: !9739)
!9739 = !DILexicalBlockFile(scope: !9488, file: !1008, discriminator: 2)
!9740 = !DILocation(line: 88, column: 5, scope: !9739)
!9741 = distinct !{!9741, !9742}
!9742 = !DILocation(line: 88, column: 5, scope: !9345)
!9743 = !DILocation(line: 150, column: 1, scope: !9345)
!9744 = distinct !DISubprogram(name: "ac3_upmix_delay", scope: !1807, file: !1807, line: 725, type: !7907, isLocal: true, isDefinition: true, scopeLine: 726, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!9745 = !DILocalVariable(name: "s", arg: 1, scope: !9744, file: !1807, line: 725, type: !1852)
!9746 = !DILocation(line: 725, column: 47, scope: !9744)
!9747 = !DILocalVariable(name: "channel_data_size", scope: !9744, file: !1807, line: 727, type: !1015)
!9748 = !DILocation(line: 727, column: 9, scope: !9744)
!9749 = !DILocation(line: 728, column: 13, scope: !9744)
!9750 = !DILocation(line: 728, column: 16, scope: !9744)
!9751 = !DILocation(line: 728, column: 5, scope: !9744)
!9752 = !DILocation(line: 732, column: 16, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9744, file: !1807, line: 728, column: 30)
!9754 = !DILocation(line: 732, column: 19, scope: !9753)
!9755 = !DILocation(line: 732, column: 9, scope: !9753)
!9756 = !DILocation(line: 732, column: 29, scope: !9753)
!9757 = !DILocation(line: 732, column: 32, scope: !9753)
!9758 = !DILocation(line: 732, column: 42, scope: !9753)
!9759 = !DILocation(line: 733, column: 9, scope: !9753)
!9760 = !DILocation(line: 735, column: 16, scope: !9753)
!9761 = !DILocation(line: 735, column: 19, scope: !9753)
!9762 = !DILocation(line: 735, column: 9, scope: !9753)
!9763 = !DILocation(line: 735, column: 32, scope: !9753)
!9764 = !DILocation(line: 737, column: 16, scope: !9753)
!9765 = !DILocation(line: 737, column: 19, scope: !9753)
!9766 = !DILocation(line: 737, column: 9, scope: !9753)
!9767 = !DILocation(line: 737, column: 32, scope: !9753)
!9768 = !DILocation(line: 738, column: 9, scope: !9753)
!9769 = !DILocation(line: 740, column: 16, scope: !9753)
!9770 = !DILocation(line: 740, column: 19, scope: !9753)
!9771 = !DILocation(line: 740, column: 9, scope: !9753)
!9772 = !DILocation(line: 740, column: 32, scope: !9753)
!9773 = !DILocation(line: 742, column: 16, scope: !9753)
!9774 = !DILocation(line: 742, column: 19, scope: !9753)
!9775 = !DILocation(line: 742, column: 9, scope: !9753)
!9776 = !DILocation(line: 742, column: 32, scope: !9753)
!9777 = !DILocation(line: 744, column: 16, scope: !9753)
!9778 = !DILocation(line: 744, column: 19, scope: !9753)
!9779 = !DILocation(line: 744, column: 9, scope: !9753)
!9780 = !DILocation(line: 744, column: 29, scope: !9753)
!9781 = !DILocation(line: 744, column: 32, scope: !9753)
!9782 = !DILocation(line: 744, column: 42, scope: !9753)
!9783 = !DILocation(line: 745, column: 16, scope: !9753)
!9784 = !DILocation(line: 745, column: 19, scope: !9753)
!9785 = !DILocation(line: 745, column: 9, scope: !9753)
!9786 = !DILocation(line: 745, column: 32, scope: !9753)
!9787 = !DILocation(line: 746, column: 9, scope: !9753)
!9788 = !DILocation(line: 748, column: 1, scope: !9744)
!9789 = distinct !DISubprogram(name: "do_imdct", scope: !1807, file: !1807, line: 687, type: !9790, isLocal: true, isDefinition: true, scopeLine: 688, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{null, !1852, !1015, !1015}
!9792 = !DILocalVariable(name: "s", arg: 1, scope: !9789, file: !1807, line: 687, type: !1852)
!9793 = !DILocation(line: 687, column: 47, scope: !9789)
!9794 = !DILocalVariable(name: "channels", arg: 2, scope: !9789, file: !1807, line: 687, type: !1015)
!9795 = !DILocation(line: 687, column: 54, scope: !9789)
!9796 = !DILocalVariable(name: "offset", arg: 3, scope: !9789, file: !1807, line: 687, type: !1015)
!9797 = !DILocation(line: 687, column: 68, scope: !9789)
!9798 = !DILocalVariable(name: "ch", scope: !9789, file: !1807, line: 689, type: !1015)
!9799 = !DILocation(line: 689, column: 9, scope: !9789)
!9800 = !DILocation(line: 691, column: 13, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9789, file: !1807, line: 691, column: 5)
!9802 = !DILocation(line: 691, column: 10, scope: !9801)
!9803 = !DILocation(line: 691, column: 18, scope: !9804)
!9804 = !DILexicalBlockFile(scope: !9805, file: !1807, discriminator: 1)
!9805 = distinct !DILexicalBlock(scope: !9801, file: !1807, line: 691, column: 5)
!9806 = !DILocation(line: 691, column: 24, scope: !9804)
!9807 = !DILocation(line: 691, column: 21, scope: !9804)
!9808 = !DILocation(line: 691, column: 5, scope: !9804)
!9809 = !DILocation(line: 692, column: 29, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !1807, line: 692, column: 13)
!9811 = distinct !DILexicalBlock(scope: !9805, file: !1807, line: 691, column: 40)
!9812 = !DILocation(line: 692, column: 13, scope: !9810)
!9813 = !DILocation(line: 692, column: 16, scope: !9810)
!9814 = !DILocation(line: 692, column: 13, scope: !9811)
!9815 = !DILocalVariable(name: "i", scope: !9816, file: !1807, line: 693, type: !1015)
!9816 = distinct !DILexicalBlock(scope: !9810, file: !1807, line: 692, column: 34)
!9817 = !DILocation(line: 693, column: 17, scope: !9816)
!9818 = !DILocalVariable(name: "x", scope: !9816, file: !1807, line: 694, type: !2052)
!9819 = !DILocation(line: 694, column: 24, scope: !9816)
!9820 = !DILocation(line: 694, column: 28, scope: !9816)
!9821 = !DILocation(line: 694, column: 31, scope: !9816)
!9822 = !DILocation(line: 694, column: 42, scope: !9816)
!9823 = !DILocation(line: 695, column: 20, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9816, file: !1807, line: 695, column: 13)
!9825 = !DILocation(line: 695, column: 18, scope: !9824)
!9826 = !DILocation(line: 695, column: 25, scope: !9827)
!9827 = !DILexicalBlockFile(scope: !9828, file: !1807, discriminator: 1)
!9828 = distinct !DILexicalBlock(scope: !9824, file: !1807, line: 695, column: 13)
!9829 = !DILocation(line: 695, column: 27, scope: !9827)
!9830 = !DILocation(line: 695, column: 13, scope: !9827)
!9831 = !DILocation(line: 696, column: 52, scope: !9828)
!9832 = !DILocation(line: 696, column: 50, scope: !9828)
!9833 = !DILocation(line: 696, column: 24, scope: !9828)
!9834 = !DILocation(line: 696, column: 44, scope: !9828)
!9835 = !DILocation(line: 696, column: 27, scope: !9828)
!9836 = !DILocation(line: 696, column: 19, scope: !9828)
!9837 = !DILocation(line: 696, column: 17, scope: !9828)
!9838 = !DILocation(line: 696, column: 22, scope: !9828)
!9839 = !DILocation(line: 695, column: 35, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !9828, file: !1807, discriminator: 2)
!9841 = !DILocation(line: 695, column: 13, scope: !9840)
!9842 = distinct !{!9842, !9843}
!9843 = !DILocation(line: 695, column: 13, scope: !9816)
!9844 = !DILocation(line: 697, column: 13, scope: !9816)
!9845 = !DILocation(line: 697, column: 16, scope: !9816)
!9846 = !DILocation(line: 697, column: 26, scope: !9816)
!9847 = !DILocation(line: 697, column: 38, scope: !9816)
!9848 = !DILocation(line: 697, column: 41, scope: !9816)
!9849 = !DILocation(line: 697, column: 52, scope: !9816)
!9850 = !DILocation(line: 697, column: 55, scope: !9816)
!9851 = !DILocation(line: 697, column: 67, scope: !9816)
!9852 = !DILocation(line: 699, column: 13, scope: !9816)
!9853 = !DILocation(line: 699, column: 16, scope: !9816)
!9854 = !DILocation(line: 699, column: 22, scope: !9816)
!9855 = !DILocation(line: 699, column: 58, scope: !9816)
!9856 = !DILocation(line: 699, column: 61, scope: !9816)
!9857 = !DILocation(line: 699, column: 48, scope: !9816)
!9858 = !DILocation(line: 699, column: 51, scope: !9816)
!9859 = !DILocation(line: 699, column: 76, scope: !9816)
!9860 = !DILocation(line: 699, column: 79, scope: !9816)
!9861 = !DILocation(line: 699, column: 85, scope: !9816)
!9862 = !DILocation(line: 699, column: 83, scope: !9816)
!9863 = !DILocation(line: 699, column: 67, scope: !9816)
!9864 = !DILocation(line: 699, column: 70, scope: !9816)
!9865 = !DILocation(line: 700, column: 40, scope: !9816)
!9866 = !DILocation(line: 700, column: 43, scope: !9816)
!9867 = !DILocation(line: 700, column: 55, scope: !9816)
!9868 = !DILocation(line: 700, column: 58, scope: !9816)
!9869 = !DILocation(line: 705, column: 20, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9816, file: !1807, line: 705, column: 13)
!9871 = !DILocation(line: 705, column: 18, scope: !9870)
!9872 = !DILocation(line: 705, column: 25, scope: !9873)
!9873 = !DILexicalBlockFile(scope: !9874, file: !1807, discriminator: 1)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !1807, line: 705, column: 13)
!9875 = !DILocation(line: 705, column: 27, scope: !9873)
!9876 = !DILocation(line: 705, column: 13, scope: !9873)
!9877 = !DILocation(line: 706, column: 52, scope: !9874)
!9878 = !DILocation(line: 706, column: 50, scope: !9874)
!9879 = !DILocation(line: 706, column: 54, scope: !9874)
!9880 = !DILocation(line: 706, column: 24, scope: !9874)
!9881 = !DILocation(line: 706, column: 44, scope: !9874)
!9882 = !DILocation(line: 706, column: 27, scope: !9874)
!9883 = !DILocation(line: 706, column: 19, scope: !9874)
!9884 = !DILocation(line: 706, column: 17, scope: !9874)
!9885 = !DILocation(line: 706, column: 22, scope: !9874)
!9886 = !DILocation(line: 705, column: 35, scope: !9887)
!9887 = !DILexicalBlockFile(scope: !9874, file: !1807, discriminator: 2)
!9888 = !DILocation(line: 705, column: 13, scope: !9887)
!9889 = distinct !{!9889, !9890}
!9890 = !DILocation(line: 705, column: 13, scope: !9816)
!9891 = !DILocation(line: 707, column: 13, scope: !9816)
!9892 = !DILocation(line: 707, column: 16, scope: !9816)
!9893 = !DILocation(line: 707, column: 26, scope: !9816)
!9894 = !DILocation(line: 707, column: 38, scope: !9816)
!9895 = !DILocation(line: 707, column: 41, scope: !9816)
!9896 = !DILocation(line: 707, column: 61, scope: !9816)
!9897 = !DILocation(line: 707, column: 64, scope: !9816)
!9898 = !DILocation(line: 707, column: 70, scope: !9816)
!9899 = !DILocation(line: 707, column: 68, scope: !9816)
!9900 = !DILocation(line: 707, column: 52, scope: !9816)
!9901 = !DILocation(line: 707, column: 55, scope: !9816)
!9902 = !DILocation(line: 707, column: 79, scope: !9816)
!9903 = !DILocation(line: 708, column: 9, scope: !9816)
!9904 = !DILocation(line: 709, column: 13, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9810, file: !1807, line: 708, column: 16)
!9906 = !DILocation(line: 709, column: 16, scope: !9905)
!9907 = !DILocation(line: 709, column: 26, scope: !9905)
!9908 = !DILocation(line: 709, column: 38, scope: !9905)
!9909 = !DILocation(line: 709, column: 41, scope: !9905)
!9910 = !DILocation(line: 709, column: 52, scope: !9905)
!9911 = !DILocation(line: 709, column: 55, scope: !9905)
!9912 = !DILocation(line: 709, column: 87, scope: !9905)
!9913 = !DILocation(line: 709, column: 67, scope: !9905)
!9914 = !DILocation(line: 709, column: 70, scope: !9905)
!9915 = !DILocation(line: 711, column: 13, scope: !9905)
!9916 = !DILocation(line: 711, column: 16, scope: !9905)
!9917 = !DILocation(line: 711, column: 22, scope: !9905)
!9918 = !DILocation(line: 711, column: 58, scope: !9905)
!9919 = !DILocation(line: 711, column: 61, scope: !9905)
!9920 = !DILocation(line: 711, column: 48, scope: !9905)
!9921 = !DILocation(line: 711, column: 51, scope: !9905)
!9922 = !DILocation(line: 711, column: 76, scope: !9905)
!9923 = !DILocation(line: 711, column: 79, scope: !9905)
!9924 = !DILocation(line: 711, column: 85, scope: !9905)
!9925 = !DILocation(line: 711, column: 83, scope: !9905)
!9926 = !DILocation(line: 711, column: 67, scope: !9905)
!9927 = !DILocation(line: 711, column: 70, scope: !9905)
!9928 = !DILocation(line: 712, column: 40, scope: !9905)
!9929 = !DILocation(line: 712, column: 43, scope: !9905)
!9930 = !DILocation(line: 712, column: 55, scope: !9905)
!9931 = !DILocation(line: 712, column: 58, scope: !9905)
!9932 = !DILocation(line: 717, column: 29, scope: !9905)
!9933 = !DILocation(line: 717, column: 32, scope: !9905)
!9934 = !DILocation(line: 717, column: 38, scope: !9905)
!9935 = !DILocation(line: 717, column: 36, scope: !9905)
!9936 = !DILocation(line: 717, column: 20, scope: !9905)
!9937 = !DILocation(line: 717, column: 23, scope: !9905)
!9938 = !DILocation(line: 717, column: 13, scope: !9905)
!9939 = !DILocation(line: 717, column: 47, scope: !9905)
!9940 = !DILocation(line: 717, column: 50, scope: !9905)
!9941 = !DILocation(line: 717, column: 61, scope: !9905)
!9942 = !DILocation(line: 719, column: 5, scope: !9811)
!9943 = !DILocation(line: 691, column: 36, scope: !9944)
!9944 = !DILexicalBlockFile(scope: !9805, file: !1807, discriminator: 2)
!9945 = !DILocation(line: 691, column: 5, scope: !9944)
!9946 = distinct !{!9946, !9947}
!9947 = !DILocation(line: 691, column: 5, scope: !9789)
!9948 = !DILocation(line: 720, column: 1, scope: !9789)
!9949 = distinct !DISubprogram(name: "ac3_downmix_c_fixed16", scope: !1050, file: !1050, line: 142, type: !9950, isLocal: true, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!9950 = !DISubroutineType(types: !9951)
!9951 = !{null, !2198, !2198, !1015, !1015, !1015}
!9952 = !DILocalVariable(name: "samples", arg: 1, scope: !9949, file: !1050, line: 142, type: !2198)
!9953 = !DILocation(line: 142, column: 45, scope: !9949)
!9954 = !DILocalVariable(name: "matrix", arg: 2, scope: !9949, file: !1050, line: 142, type: !2198)
!9955 = !DILocation(line: 142, column: 64, scope: !9949)
!9956 = !DILocalVariable(name: "out_ch", arg: 3, scope: !9949, file: !1050, line: 143, type: !1015)
!9957 = !DILocation(line: 143, column: 39, scope: !9949)
!9958 = !DILocalVariable(name: "in_ch", arg: 4, scope: !9949, file: !1050, line: 143, type: !1015)
!9959 = !DILocation(line: 143, column: 51, scope: !9949)
!9960 = !DILocalVariable(name: "len", arg: 5, scope: !9949, file: !1050, line: 143, type: !1015)
!9961 = !DILocation(line: 143, column: 62, scope: !9949)
!9962 = !DILocalVariable(name: "i", scope: !9949, file: !1050, line: 145, type: !1015)
!9963 = !DILocation(line: 145, column: 9, scope: !9949)
!9964 = !DILocalVariable(name: "j", scope: !9949, file: !1050, line: 145, type: !1015)
!9965 = !DILocation(line: 145, column: 12, scope: !9949)
!9966 = !DILocalVariable(name: "v0", scope: !9949, file: !1050, line: 146, type: !1015)
!9967 = !DILocation(line: 146, column: 9, scope: !9949)
!9968 = !DILocalVariable(name: "v1", scope: !9949, file: !1050, line: 146, type: !1015)
!9969 = !DILocation(line: 146, column: 13, scope: !9949)
!9970 = !DILocation(line: 147, column: 9, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9949, file: !1050, line: 147, column: 9)
!9972 = !DILocation(line: 147, column: 16, scope: !9971)
!9973 = !DILocation(line: 147, column: 9, scope: !9949)
!9974 = !DILocation(line: 148, column: 16, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !1050, line: 148, column: 9)
!9976 = distinct !DILexicalBlock(scope: !9971, file: !1050, line: 147, column: 22)
!9977 = !DILocation(line: 148, column: 14, scope: !9975)
!9978 = !DILocation(line: 148, column: 21, scope: !9979)
!9979 = !DILexicalBlockFile(scope: !9980, file: !1050, discriminator: 1)
!9980 = distinct !DILexicalBlock(scope: !9975, file: !1050, line: 148, column: 9)
!9981 = !DILocation(line: 148, column: 25, scope: !9979)
!9982 = !DILocation(line: 148, column: 23, scope: !9979)
!9983 = !DILocation(line: 148, column: 9, scope: !9979)
!9984 = !DILocation(line: 149, column: 21, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9980, file: !1050, line: 148, column: 35)
!9986 = !DILocation(line: 149, column: 16, scope: !9985)
!9987 = !DILocation(line: 150, column: 20, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9985, file: !1050, line: 150, column: 13)
!9989 = !DILocation(line: 150, column: 18, scope: !9988)
!9990 = !DILocation(line: 150, column: 25, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !9992, file: !1050, discriminator: 1)
!9992 = distinct !DILexicalBlock(scope: !9988, file: !1050, line: 150, column: 13)
!9993 = !DILocation(line: 150, column: 29, scope: !9991)
!9994 = !DILocation(line: 150, column: 27, scope: !9991)
!9995 = !DILocation(line: 150, column: 13, scope: !9991)
!9996 = !DILocation(line: 151, column: 34, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !1050, line: 150, column: 41)
!9998 = !DILocation(line: 151, column: 23, scope: !9997)
!9999 = !DILocation(line: 151, column: 31, scope: !9997)
!10000 = !DILocation(line: 151, column: 49, scope: !9997)
!10001 = !DILocation(line: 151, column: 39, scope: !9997)
!10002 = !DILocation(line: 151, column: 37, scope: !9997)
!10003 = !DILocation(line: 151, column: 20, scope: !9997)
!10004 = !DILocation(line: 152, column: 34, scope: !9997)
!10005 = !DILocation(line: 152, column: 23, scope: !9997)
!10006 = !DILocation(line: 152, column: 31, scope: !9997)
!10007 = !DILocation(line: 152, column: 49, scope: !9997)
!10008 = !DILocation(line: 152, column: 39, scope: !9997)
!10009 = !DILocation(line: 152, column: 37, scope: !9997)
!10010 = !DILocation(line: 152, column: 20, scope: !9997)
!10011 = !DILocation(line: 153, column: 13, scope: !9997)
!10012 = !DILocation(line: 150, column: 37, scope: !10013)
!10013 = !DILexicalBlockFile(scope: !9992, file: !1050, discriminator: 2)
!10014 = !DILocation(line: 150, column: 13, scope: !10013)
!10015 = distinct !{!10015, !10016}
!10016 = !DILocation(line: 150, column: 13, scope: !9985)
!10017 = !DILocation(line: 154, column: 30, scope: !9985)
!10018 = !DILocation(line: 154, column: 32, scope: !9985)
!10019 = !DILocation(line: 154, column: 38, scope: !9985)
!10020 = !DILocation(line: 154, column: 29, scope: !9985)
!10021 = !DILocation(line: 154, column: 24, scope: !9985)
!10022 = !DILocation(line: 154, column: 13, scope: !9985)
!10023 = !DILocation(line: 154, column: 27, scope: !9985)
!10024 = !DILocation(line: 155, column: 30, scope: !9985)
!10025 = !DILocation(line: 155, column: 32, scope: !9985)
!10026 = !DILocation(line: 155, column: 38, scope: !9985)
!10027 = !DILocation(line: 155, column: 29, scope: !9985)
!10028 = !DILocation(line: 155, column: 24, scope: !9985)
!10029 = !DILocation(line: 155, column: 13, scope: !9985)
!10030 = !DILocation(line: 155, column: 27, scope: !9985)
!10031 = !DILocation(line: 156, column: 9, scope: !9985)
!10032 = !DILocation(line: 148, column: 31, scope: !10033)
!10033 = !DILexicalBlockFile(scope: !9980, file: !1050, discriminator: 2)
!10034 = !DILocation(line: 148, column: 9, scope: !10033)
!10035 = distinct !{!10035, !10036}
!10036 = !DILocation(line: 148, column: 9, scope: !9976)
!10037 = !DILocation(line: 157, column: 5, scope: !9976)
!10038 = !DILocation(line: 157, column: 16, scope: !10039)
!10039 = !DILexicalBlockFile(scope: !10040, file: !1050, discriminator: 1)
!10040 = distinct !DILexicalBlock(scope: !9971, file: !1050, line: 157, column: 16)
!10041 = !DILocation(line: 157, column: 23, scope: !10039)
!10042 = !DILocation(line: 158, column: 16, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !1050, line: 158, column: 9)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !1050, line: 157, column: 29)
!10045 = !DILocation(line: 158, column: 14, scope: !10043)
!10046 = !DILocation(line: 158, column: 21, scope: !10047)
!10047 = !DILexicalBlockFile(scope: !10048, file: !1050, discriminator: 1)
!10048 = distinct !DILexicalBlock(scope: !10043, file: !1050, line: 158, column: 9)
!10049 = !DILocation(line: 158, column: 25, scope: !10047)
!10050 = !DILocation(line: 158, column: 23, scope: !10047)
!10051 = !DILocation(line: 158, column: 9, scope: !10047)
!10052 = !DILocation(line: 159, column: 16, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !1050, line: 158, column: 35)
!10054 = !DILocation(line: 160, column: 20, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10053, file: !1050, line: 160, column: 13)
!10056 = !DILocation(line: 160, column: 18, scope: !10055)
!10057 = !DILocation(line: 160, column: 25, scope: !10058)
!10058 = !DILexicalBlockFile(scope: !10059, file: !1050, discriminator: 1)
!10059 = distinct !DILexicalBlock(scope: !10055, file: !1050, line: 160, column: 13)
!10060 = !DILocation(line: 160, column: 29, scope: !10058)
!10061 = !DILocation(line: 160, column: 27, scope: !10058)
!10062 = !DILocation(line: 160, column: 13, scope: !10058)
!10063 = !DILocation(line: 161, column: 34, scope: !10059)
!10064 = !DILocation(line: 161, column: 23, scope: !10059)
!10065 = !DILocation(line: 161, column: 31, scope: !10059)
!10066 = !DILocation(line: 161, column: 49, scope: !10059)
!10067 = !DILocation(line: 161, column: 39, scope: !10059)
!10068 = !DILocation(line: 161, column: 37, scope: !10059)
!10069 = !DILocation(line: 161, column: 20, scope: !10059)
!10070 = !DILocation(line: 161, column: 17, scope: !10059)
!10071 = !DILocation(line: 160, column: 37, scope: !10072)
!10072 = !DILexicalBlockFile(scope: !10059, file: !1050, discriminator: 2)
!10073 = !DILocation(line: 160, column: 13, scope: !10072)
!10074 = distinct !{!10074, !10075}
!10075 = !DILocation(line: 160, column: 13, scope: !10053)
!10076 = !DILocation(line: 162, column: 30, scope: !10053)
!10077 = !DILocation(line: 162, column: 32, scope: !10053)
!10078 = !DILocation(line: 162, column: 38, scope: !10053)
!10079 = !DILocation(line: 162, column: 29, scope: !10053)
!10080 = !DILocation(line: 162, column: 24, scope: !10053)
!10081 = !DILocation(line: 162, column: 13, scope: !10053)
!10082 = !DILocation(line: 162, column: 27, scope: !10053)
!10083 = !DILocation(line: 163, column: 9, scope: !10053)
!10084 = !DILocation(line: 158, column: 31, scope: !10085)
!10085 = !DILexicalBlockFile(scope: !10048, file: !1050, discriminator: 2)
!10086 = !DILocation(line: 158, column: 9, scope: !10085)
!10087 = distinct !{!10087, !10088}
!10088 = !DILocation(line: 158, column: 9, scope: !10044)
!10089 = !DILocation(line: 164, column: 5, scope: !10044)
!10090 = !DILocation(line: 165, column: 1, scope: !9949)
!10091 = distinct !DISubprogram(name: "decode_band_structure", scope: !1807, file: !1807, line: 767, type: !10092, isLocal: true, isDefinition: true, scopeLine: 772, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{null, !3872, !1015, !1015, !1015, !1015, !1015, !1612, !1465, !1201, !1201, !1015}
!10094 = !DILocalVariable(name: "gbc", arg: 1, scope: !10091, file: !1807, line: 767, type: !3872)
!10095 = !DILocation(line: 767, column: 50, scope: !10091)
!10096 = !DILocalVariable(name: "blk", arg: 2, scope: !10091, file: !1807, line: 767, type: !1015)
!10097 = !DILocation(line: 767, column: 59, scope: !10091)
!10098 = !DILocalVariable(name: "eac3", arg: 3, scope: !10091, file: !1807, line: 767, type: !1015)
!10099 = !DILocation(line: 767, column: 68, scope: !10091)
!10100 = !DILocalVariable(name: "ecpl", arg: 4, scope: !10091, file: !1807, line: 768, type: !1015)
!10101 = !DILocation(line: 768, column: 39, scope: !10091)
!10102 = !DILocalVariable(name: "start_subband", arg: 5, scope: !10091, file: !1807, line: 768, type: !1015)
!10103 = !DILocation(line: 768, column: 49, scope: !10091)
!10104 = !DILocalVariable(name: "end_subband", arg: 6, scope: !10091, file: !1807, line: 768, type: !1015)
!10105 = !DILocation(line: 768, column: 68, scope: !10091)
!10106 = !DILocalVariable(name: "default_band_struct", arg: 7, scope: !10091, file: !1807, line: 769, type: !1612)
!10107 = !DILocation(line: 769, column: 50, scope: !10091)
!10108 = !DILocalVariable(name: "num_bands", arg: 8, scope: !10091, file: !1807, line: 770, type: !1465)
!10109 = !DILocation(line: 770, column: 40, scope: !10091)
!10110 = !DILocalVariable(name: "band_sizes", arg: 9, scope: !10091, file: !1807, line: 770, type: !1201)
!10111 = !DILocation(line: 770, column: 60, scope: !10091)
!10112 = !DILocalVariable(name: "band_struct", arg: 10, scope: !10091, file: !1807, line: 771, type: !1201)
!10113 = !DILocation(line: 771, column: 44, scope: !10091)
!10114 = !DILocalVariable(name: "band_struct_size", arg: 11, scope: !10091, file: !1807, line: 771, type: !1015)
!10115 = !DILocation(line: 771, column: 61, scope: !10091)
!10116 = !DILocalVariable(name: "subbnd", scope: !10091, file: !1807, line: 773, type: !1015)
!10117 = !DILocation(line: 773, column: 9, scope: !10091)
!10118 = !DILocalVariable(name: "bnd", scope: !10091, file: !1807, line: 773, type: !1015)
!10119 = !DILocation(line: 773, column: 17, scope: !10091)
!10120 = !DILocalVariable(name: "n_subbands", scope: !10091, file: !1807, line: 773, type: !1015)
!10121 = !DILocation(line: 773, column: 22, scope: !10091)
!10122 = !DILocalVariable(name: "n_bands", scope: !10091, file: !1807, line: 773, type: !1015)
!10123 = !DILocation(line: 773, column: 34, scope: !10091)
!10124 = !DILocalVariable(name: "bnd_sz", scope: !10091, file: !1807, line: 774, type: !10125)
!10125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 176, align: 8, elements: !10126)
!10126 = !{!10127}
!10127 = !DISubrange(count: 22)
!10128 = !DILocation(line: 774, column: 13, scope: !10091)
!10129 = !DILocation(line: 776, column: 18, scope: !10091)
!10130 = !DILocation(line: 776, column: 32, scope: !10091)
!10131 = !DILocation(line: 776, column: 30, scope: !10091)
!10132 = !DILocation(line: 776, column: 16, scope: !10091)
!10133 = !DILocation(line: 778, column: 10, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 778, column: 9)
!10135 = !DILocation(line: 778, column: 9, scope: !10091)
!10136 = !DILocation(line: 779, column: 16, scope: !10134)
!10137 = !DILocation(line: 779, column: 29, scope: !10134)
!10138 = !DILocation(line: 779, column: 50, scope: !10134)
!10139 = !DILocation(line: 779, column: 9, scope: !10134)
!10140 = !DILocation(line: 781, column: 5, scope: !10091)
!10141 = distinct !{!10141, !10140}
!10142 = !DILocation(line: 781, column: 16, scope: !10143)
!10143 = !DILexicalBlockFile(scope: !10144, file: !1807, discriminator: 1)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !1807, line: 781, column: 14)
!10145 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 781, column: 8)
!10146 = !DILocation(line: 781, column: 36, scope: !10143)
!10147 = !DILocation(line: 781, column: 52, scope: !10143)
!10148 = !DILocation(line: 781, column: 50, scope: !10143)
!10149 = !DILocation(line: 781, column: 33, scope: !10143)
!10150 = !DILocation(line: 781, column: 14, scope: !10143)
!10151 = !DILocation(line: 781, column: 67, scope: !10152)
!10152 = !DILexicalBlockFile(scope: !10153, file: !1807, discriminator: 2)
!10153 = distinct !DILexicalBlock(scope: !10144, file: !1807, line: 781, column: 65)
!10154 = !DILocation(line: 781, column: 122, scope: !10155)
!10155 = !DILexicalBlockFile(scope: !10152, file: !1807, discriminator: 4)
!10156 = !DILocation(line: 781, column: 122, scope: !10152)
!10157 = !DILocation(line: 781, column: 133, scope: !10158)
!10158 = !DILexicalBlockFile(scope: !10145, file: !1807, discriminator: 3)
!10159 = !DILocation(line: 783, column: 20, scope: !10091)
!10160 = !DILocation(line: 783, column: 34, scope: !10091)
!10161 = !DILocation(line: 783, column: 17, scope: !10091)
!10162 = !DILocation(line: 786, column: 10, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 786, column: 9)
!10164 = !DILocation(line: 786, column: 15, scope: !10163)
!10165 = !DILocation(line: 786, column: 28, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !10163, file: !1807, discriminator: 1)
!10167 = !DILocation(line: 786, column: 18, scope: !10166)
!10168 = !DILocation(line: 786, column: 9, scope: !10166)
!10169 = !DILocation(line: 787, column: 21, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !1807, line: 787, column: 9)
!10171 = distinct !DILexicalBlock(scope: !10163, file: !1807, line: 786, column: 34)
!10172 = !DILocation(line: 787, column: 14, scope: !10170)
!10173 = !DILocation(line: 787, column: 26, scope: !10174)
!10174 = !DILexicalBlockFile(scope: !10175, file: !1807, discriminator: 1)
!10175 = distinct !DILexicalBlock(scope: !10170, file: !1807, line: 787, column: 9)
!10176 = !DILocation(line: 787, column: 35, scope: !10174)
!10177 = !DILocation(line: 787, column: 46, scope: !10174)
!10178 = !DILocation(line: 787, column: 33, scope: !10174)
!10179 = !DILocation(line: 787, column: 9, scope: !10174)
!10180 = !DILocation(line: 788, column: 45, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10175, file: !1807, line: 787, column: 61)
!10182 = !DILocation(line: 788, column: 35, scope: !10181)
!10183 = !DILocation(line: 788, column: 25, scope: !10181)
!10184 = !DILocation(line: 788, column: 13, scope: !10181)
!10185 = !DILocation(line: 788, column: 33, scope: !10181)
!10186 = !DILocation(line: 789, column: 9, scope: !10181)
!10187 = !DILocation(line: 787, column: 57, scope: !10188)
!10188 = !DILexicalBlockFile(scope: !10175, file: !1807, discriminator: 2)
!10189 = !DILocation(line: 787, column: 9, scope: !10188)
!10190 = distinct !{!10190, !10191}
!10191 = !DILocation(line: 787, column: 9, scope: !10171)
!10192 = !DILocation(line: 790, column: 5, scope: !10171)
!10193 = !DILocation(line: 795, column: 9, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 795, column: 9)
!10195 = !DILocation(line: 795, column: 19, scope: !10194)
!10196 = !DILocation(line: 795, column: 22, scope: !10197)
!10197 = !DILexicalBlockFile(scope: !10194, file: !1807, discriminator: 1)
!10198 = !DILocation(line: 795, column: 9, scope: !10197)
!10199 = !DILocation(line: 796, column: 19, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10194, file: !1807, line: 795, column: 35)
!10201 = !DILocation(line: 796, column: 17, scope: !10200)
!10202 = !DILocation(line: 797, column: 21, scope: !10200)
!10203 = !DILocation(line: 797, column: 9, scope: !10200)
!10204 = !DILocation(line: 797, column: 19, scope: !10200)
!10205 = !DILocation(line: 798, column: 18, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10200, file: !1807, line: 798, column: 9)
!10207 = !DILocation(line: 798, column: 30, scope: !10206)
!10208 = !DILocation(line: 798, column: 14, scope: !10206)
!10209 = !DILocation(line: 798, column: 35, scope: !10210)
!10210 = !DILexicalBlockFile(scope: !10211, file: !1807, discriminator: 1)
!10211 = distinct !DILexicalBlock(scope: !10206, file: !1807, line: 798, column: 9)
!10212 = !DILocation(line: 798, column: 44, scope: !10210)
!10213 = !DILocation(line: 798, column: 42, scope: !10210)
!10214 = !DILocation(line: 798, column: 9, scope: !10210)
!10215 = !DILocalVariable(name: "subbnd_size", scope: !10216, file: !1807, line: 799, type: !1015)
!10216 = distinct !DILexicalBlock(scope: !10211, file: !1807, line: 798, column: 66)
!10217 = !DILocation(line: 799, column: 17, scope: !10216)
!10218 = !DILocation(line: 799, column: 32, scope: !10216)
!10219 = !DILocation(line: 799, column: 37, scope: !10216)
!10220 = !DILocation(line: 799, column: 40, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !10216, file: !1807, discriminator: 1)
!10222 = !DILocation(line: 799, column: 47, scope: !10221)
!10223 = !DILocation(line: 799, column: 31, scope: !10224)
!10224 = !DILexicalBlockFile(scope: !10216, file: !1807, discriminator: 2)
!10225 = !DILocation(line: 799, column: 17, scope: !10224)
!10226 = !DILocation(line: 800, column: 29, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10216, file: !1807, line: 800, column: 17)
!10228 = !DILocation(line: 800, column: 36, scope: !10227)
!10229 = !DILocation(line: 800, column: 17, scope: !10227)
!10230 = !DILocation(line: 800, column: 17, scope: !10216)
!10231 = !DILocation(line: 801, column: 24, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10227, file: !1807, line: 800, column: 42)
!10233 = !DILocation(line: 802, column: 32, scope: !10232)
!10234 = !DILocation(line: 802, column: 24, scope: !10232)
!10235 = !DILocation(line: 802, column: 17, scope: !10232)
!10236 = !DILocation(line: 802, column: 29, scope: !10232)
!10237 = !DILocation(line: 803, column: 13, scope: !10232)
!10238 = !DILocation(line: 804, column: 33, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10227, file: !1807, line: 803, column: 20)
!10240 = !DILocation(line: 804, column: 24, scope: !10239)
!10241 = !DILocation(line: 804, column: 17, scope: !10239)
!10242 = !DILocation(line: 804, column: 31, scope: !10239)
!10243 = !DILocation(line: 806, column: 9, scope: !10216)
!10244 = !DILocation(line: 798, column: 62, scope: !10245)
!10245 = !DILexicalBlockFile(scope: !10211, file: !1807, discriminator: 2)
!10246 = !DILocation(line: 798, column: 9, scope: !10245)
!10247 = distinct !{!10247, !10248}
!10248 = !DILocation(line: 798, column: 9, scope: !10200)
!10249 = !DILocation(line: 807, column: 5, scope: !10200)
!10250 = !DILocation(line: 810, column: 9, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 810, column: 9)
!10252 = !DILocation(line: 810, column: 9, scope: !10091)
!10253 = !DILocation(line: 811, column: 22, scope: !10251)
!10254 = !DILocation(line: 811, column: 10, scope: !10251)
!10255 = !DILocation(line: 811, column: 20, scope: !10251)
!10256 = !DILocation(line: 811, column: 9, scope: !10251)
!10257 = !DILocation(line: 812, column: 9, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10091, file: !1807, line: 812, column: 9)
!10259 = !DILocation(line: 812, column: 9, scope: !10091)
!10260 = !DILocation(line: 813, column: 16, scope: !10258)
!10261 = !DILocation(line: 813, column: 9, scope: !10258)
!10262 = !DILocation(line: 813, column: 36, scope: !10258)
!10263 = !DILocation(line: 814, column: 1, scope: !10091)
!10264 = distinct !DISubprogram(name: "ff_sqrt", scope: !10265, file: !10265, line: 207, type: !10266, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10265 = !DIFile(filename: "./libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!10266 = !DISubroutineType(types: !10267)
!10267 = !{!1016, !1016}
!10268 = !DILocalVariable(name: "a", arg: 1, scope: !10264, file: !10265, line: 207, type: !1016)
!10269 = !DILocation(line: 207, column: 72, scope: !10264)
!10270 = !DILocalVariable(name: "b", scope: !10264, file: !10265, line: 209, type: !1016)
!10271 = !DILocation(line: 209, column: 18, scope: !10264)
!10272 = !DILocation(line: 211, column: 9, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10264, file: !10265, line: 211, column: 9)
!10274 = !DILocation(line: 211, column: 11, scope: !10273)
!10275 = !DILocation(line: 211, column: 9, scope: !10264)
!10276 = !DILocation(line: 211, column: 38, scope: !10277)
!10277 = !DILexicalBlockFile(scope: !10273, file: !10265, discriminator: 1)
!10278 = !DILocation(line: 211, column: 40, scope: !10277)
!10279 = !DILocation(line: 211, column: 26, scope: !10277)
!10280 = !DILocation(line: 211, column: 45, scope: !10277)
!10281 = !DILocation(line: 211, column: 50, scope: !10277)
!10282 = !DILocation(line: 211, column: 18, scope: !10277)
!10283 = !DILocation(line: 212, column: 14, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10273, file: !10265, line: 212, column: 14)
!10285 = !DILocation(line: 212, column: 16, scope: !10284)
!10286 = !DILocation(line: 212, column: 14, scope: !10273)
!10287 = !DILocation(line: 212, column: 45, scope: !10288)
!10288 = !DILexicalBlockFile(scope: !10284, file: !10265, discriminator: 1)
!10289 = !DILocation(line: 212, column: 47, scope: !10288)
!10290 = !DILocation(line: 212, column: 33, scope: !10288)
!10291 = !DILocation(line: 212, column: 53, scope: !10288)
!10292 = !DILocation(line: 212, column: 31, scope: !10288)
!10293 = !DILocation(line: 212, column: 29, scope: !10288)
!10294 = !DILocation(line: 214, column: 14, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10284, file: !10265, line: 214, column: 14)
!10296 = !DILocation(line: 214, column: 16, scope: !10295)
!10297 = !DILocation(line: 214, column: 14, scope: !10284)
!10298 = !DILocation(line: 214, column: 45, scope: !10299)
!10299 = !DILexicalBlockFile(scope: !10295, file: !10265, discriminator: 1)
!10300 = !DILocation(line: 214, column: 47, scope: !10299)
!10301 = !DILocation(line: 214, column: 33, scope: !10299)
!10302 = !DILocation(line: 214, column: 53, scope: !10299)
!10303 = !DILocation(line: 214, column: 31, scope: !10299)
!10304 = !DILocation(line: 214, column: 29, scope: !10299)
!10305 = !DILocation(line: 215, column: 14, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10295, file: !10265, line: 215, column: 14)
!10307 = !DILocation(line: 215, column: 16, scope: !10306)
!10308 = !DILocation(line: 215, column: 14, scope: !10295)
!10309 = !DILocation(line: 215, column: 45, scope: !10310)
!10310 = !DILexicalBlockFile(scope: !10306, file: !10265, discriminator: 1)
!10311 = !DILocation(line: 215, column: 47, scope: !10310)
!10312 = !DILocation(line: 215, column: 33, scope: !10310)
!10313 = !DILocation(line: 215, column: 31, scope: !10310)
!10314 = !DILocation(line: 215, column: 29, scope: !10310)
!10315 = !DILocalVariable(name: "s", scope: !10316, file: !10265, line: 218, type: !1015)
!10316 = distinct !DILexicalBlock(scope: !10306, file: !10265, line: 217, column: 10)
!10317 = !DILocation(line: 218, column: 13, scope: !10316)
!10318 = !DILocation(line: 218, column: 38, scope: !10316)
!10319 = !DILocation(line: 218, column: 40, scope: !10316)
!10320 = !DILocation(line: 218, column: 46, scope: !10316)
!10321 = !DILocation(line: 218, column: 23, scope: !10316)
!10322 = !DILocation(line: 218, column: 21, scope: !10316)
!10323 = !DILocation(line: 218, column: 51, scope: !10316)
!10324 = !DILocalVariable(name: "c", scope: !10316, file: !10265, line: 219, type: !1016)
!10325 = !DILocation(line: 219, column: 22, scope: !10316)
!10326 = !DILocation(line: 219, column: 26, scope: !10316)
!10327 = !DILocation(line: 219, column: 32, scope: !10316)
!10328 = !DILocation(line: 219, column: 34, scope: !10316)
!10329 = !DILocation(line: 219, column: 28, scope: !10316)
!10330 = !DILocation(line: 220, column: 25, scope: !10316)
!10331 = !DILocation(line: 220, column: 31, scope: !10316)
!10332 = !DILocation(line: 220, column: 33, scope: !10316)
!10333 = !DILocation(line: 220, column: 27, scope: !10316)
!10334 = !DILocation(line: 220, column: 13, scope: !10316)
!10335 = !DILocation(line: 220, column: 11, scope: !10316)
!10336 = !DILocation(line: 221, column: 37, scope: !10316)
!10337 = !DILocation(line: 221, column: 27, scope: !10316)
!10338 = !DILocation(line: 221, column: 53, scope: !10316)
!10339 = !DILocation(line: 221, column: 42, scope: !10316)
!10340 = !DILocation(line: 221, column: 40, scope: !10316)
!10341 = !DILocation(line: 221, column: 57, scope: !10316)
!10342 = !DILocation(line: 221, column: 14, scope: !10316)
!10343 = !DILocation(line: 221, column: 68, scope: !10316)
!10344 = !DILocation(line: 221, column: 73, scope: !10316)
!10345 = !DILocation(line: 221, column: 70, scope: !10316)
!10346 = !DILocation(line: 221, column: 65, scope: !10316)
!10347 = !DILocation(line: 221, column: 11, scope: !10316)
!10348 = !DILocation(line: 224, column: 12, scope: !10264)
!10349 = !DILocation(line: 224, column: 17, scope: !10264)
!10350 = !DILocation(line: 224, column: 21, scope: !10264)
!10351 = !DILocation(line: 224, column: 25, scope: !10264)
!10352 = !DILocation(line: 224, column: 23, scope: !10264)
!10353 = !DILocation(line: 224, column: 19, scope: !10264)
!10354 = !DILocation(line: 224, column: 14, scope: !10264)
!10355 = !DILocation(line: 224, column: 5, scope: !10264)
!10356 = !DILocation(line: 225, column: 1, scope: !10264)
!10357 = distinct !DISubprogram(name: "decode_transform_coeffs_ch", scope: !1807, file: !1807, line: 607, type: !10358, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10358 = !DISubroutineType(types: !10359)
!10359 = !{null, !1852, !1015, !1015, !10360}
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8830, size: 64, align: 64)
!10361 = !DILocalVariable(name: "s", arg: 1, scope: !10357, file: !1807, line: 607, type: !1852)
!10362 = !DILocation(line: 607, column: 65, scope: !10357)
!10363 = !DILocalVariable(name: "blk", arg: 2, scope: !10357, file: !1807, line: 607, type: !1015)
!10364 = !DILocation(line: 607, column: 72, scope: !10357)
!10365 = !DILocalVariable(name: "ch", arg: 3, scope: !10357, file: !1807, line: 608, type: !1015)
!10366 = !DILocation(line: 608, column: 51, scope: !10357)
!10367 = !DILocalVariable(name: "m", arg: 4, scope: !10357, file: !1807, line: 608, type: !10360)
!10368 = !DILocation(line: 608, column: 68, scope: !10357)
!10369 = !DILocation(line: 610, column: 30, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10357, file: !1807, line: 610, column: 9)
!10371 = !DILocation(line: 610, column: 10, scope: !10370)
!10372 = !DILocation(line: 610, column: 13, scope: !10370)
!10373 = !DILocation(line: 610, column: 9, scope: !10357)
!10374 = !DILocation(line: 611, column: 40, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10370, file: !1807, line: 610, column: 35)
!10376 = !DILocation(line: 611, column: 43, scope: !10375)
!10377 = !DILocation(line: 611, column: 47, scope: !10375)
!10378 = !DILocation(line: 611, column: 9, scope: !10375)
!10379 = !DILocation(line: 612, column: 5, scope: !10375)
!10380 = !DILocalVariable(name: "bin", scope: !10381, file: !1807, line: 615, type: !1015)
!10381 = distinct !DILexicalBlock(scope: !10370, file: !1807, line: 612, column: 12)
!10382 = !DILocation(line: 615, column: 13, scope: !10381)
!10383 = !DILocation(line: 616, column: 19, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10381, file: !1807, line: 616, column: 13)
!10385 = !DILocation(line: 616, column: 13, scope: !10381)
!10386 = !DILocation(line: 617, column: 52, scope: !10384)
!10387 = !DILocation(line: 617, column: 55, scope: !10384)
!10388 = !DILocation(line: 617, column: 13, scope: !10384)
!10389 = !DILocation(line: 618, column: 34, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10381, file: !1807, line: 618, column: 9)
!10391 = !DILocation(line: 618, column: 20, scope: !10390)
!10392 = !DILocation(line: 618, column: 23, scope: !10390)
!10393 = !DILocation(line: 618, column: 18, scope: !10390)
!10394 = !DILocation(line: 618, column: 14, scope: !10390)
!10395 = !DILocation(line: 618, column: 39, scope: !10396)
!10396 = !DILexicalBlockFile(scope: !10397, file: !1807, discriminator: 1)
!10397 = distinct !DILexicalBlock(scope: !10390, file: !1807, line: 618, column: 9)
!10398 = !DILocation(line: 618, column: 57, scope: !10396)
!10399 = !DILocation(line: 618, column: 45, scope: !10396)
!10400 = !DILocation(line: 618, column: 48, scope: !10396)
!10401 = !DILocation(line: 618, column: 43, scope: !10396)
!10402 = !DILocation(line: 618, column: 9, scope: !10396)
!10403 = !DILocation(line: 619, column: 65, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10397, file: !1807, line: 618, column: 69)
!10405 = !DILocation(line: 619, column: 40, scope: !10404)
!10406 = !DILocation(line: 619, column: 60, scope: !10404)
!10407 = !DILocation(line: 619, column: 56, scope: !10404)
!10408 = !DILocation(line: 619, column: 43, scope: !10404)
!10409 = !DILocation(line: 619, column: 86, scope: !10404)
!10410 = !DILocation(line: 619, column: 73, scope: !10404)
!10411 = !DILocation(line: 619, column: 82, scope: !10404)
!10412 = !DILocation(line: 619, column: 76, scope: !10404)
!10413 = !DILocation(line: 619, column: 70, scope: !10404)
!10414 = !DILocation(line: 619, column: 33, scope: !10404)
!10415 = !DILocation(line: 619, column: 13, scope: !10404)
!10416 = !DILocation(line: 619, column: 29, scope: !10404)
!10417 = !DILocation(line: 619, column: 16, scope: !10404)
!10418 = !DILocation(line: 619, column: 38, scope: !10404)
!10419 = !DILocation(line: 620, column: 9, scope: !10404)
!10420 = !DILocation(line: 618, column: 65, scope: !10421)
!10421 = !DILexicalBlockFile(scope: !10397, file: !1807, discriminator: 2)
!10422 = !DILocation(line: 618, column: 9, scope: !10421)
!10423 = distinct !{!10423, !10424}
!10424 = !DILocation(line: 618, column: 9, scope: !10381)
!10425 = !DILocation(line: 622, column: 1, scope: !10357)
!10426 = distinct !DISubprogram(name: "calc_transform_coeffs_cpl", scope: !1807, file: !1807, line: 472, type: !7907, isLocal: true, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10427 = !DILocalVariable(name: "a", arg: 1, scope: !10428, file: !10265, line: 62, type: !1015)
!10428 = distinct !DISubprogram(name: "MULH", scope: !10265, file: !10265, line: 62, type: !3855, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10429 = !DILocation(line: 62, column: 59, scope: !10428, inlinedAt: !10430)
!10430 = distinct !DILocation(line: 485, column: 25, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10432, file: !1807, line: 483, column: 63)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !1807, line: 483, column: 17)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !1807, line: 483, column: 17)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !1807, line: 481, column: 40)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !1807, line: 481, column: 17)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1807, line: 480, column: 51)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !1807, line: 480, column: 9)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !1807, line: 480, column: 9)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !1807, line: 477, column: 53)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !1807, line: 477, column: 5)
!10441 = distinct !DILexicalBlock(scope: !10426, file: !1807, line: 477, column: 5)
!10442 = !DILocalVariable(name: "b", arg: 2, scope: !10428, file: !10265, line: 62, type: !1015)
!10443 = !DILocation(line: 62, column: 66, scope: !10428, inlinedAt: !10430)
!10444 = !DILocalVariable(name: "s", arg: 1, scope: !10426, file: !1807, line: 472, type: !1852)
!10445 = !DILocation(line: 472, column: 57, scope: !10426)
!10446 = !DILocalVariable(name: "bin", scope: !10426, file: !1807, line: 474, type: !1015)
!10447 = !DILocation(line: 474, column: 9, scope: !10426)
!10448 = !DILocalVariable(name: "band", scope: !10426, file: !1807, line: 474, type: !1015)
!10449 = !DILocation(line: 474, column: 14, scope: !10426)
!10450 = !DILocalVariable(name: "ch", scope: !10426, file: !1807, line: 474, type: !1015)
!10451 = !DILocation(line: 474, column: 20, scope: !10426)
!10452 = !DILocation(line: 476, column: 11, scope: !10426)
!10453 = !DILocation(line: 476, column: 14, scope: !10426)
!10454 = !DILocation(line: 476, column: 9, scope: !10426)
!10455 = !DILocation(line: 477, column: 15, scope: !10441)
!10456 = !DILocation(line: 477, column: 10, scope: !10441)
!10457 = !DILocation(line: 477, column: 20, scope: !10458)
!10458 = !DILexicalBlockFile(scope: !10440, file: !1807, discriminator: 1)
!10459 = !DILocation(line: 477, column: 27, scope: !10458)
!10460 = !DILocation(line: 477, column: 30, scope: !10458)
!10461 = !DILocation(line: 477, column: 25, scope: !10458)
!10462 = !DILocation(line: 477, column: 5, scope: !10458)
!10463 = !DILocalVariable(name: "band_start", scope: !10439, file: !1807, line: 478, type: !1015)
!10464 = !DILocation(line: 478, column: 13, scope: !10439)
!10465 = !DILocation(line: 478, column: 26, scope: !10439)
!10466 = !DILocalVariable(name: "band_end", scope: !10439, file: !1807, line: 479, type: !1015)
!10467 = !DILocation(line: 479, column: 13, scope: !10439)
!10468 = !DILocation(line: 479, column: 24, scope: !10439)
!10469 = !DILocation(line: 479, column: 48, scope: !10439)
!10470 = !DILocation(line: 479, column: 30, scope: !10439)
!10471 = !DILocation(line: 479, column: 33, scope: !10439)
!10472 = !DILocation(line: 479, column: 28, scope: !10439)
!10473 = !DILocation(line: 480, column: 17, scope: !10438)
!10474 = !DILocation(line: 480, column: 14, scope: !10438)
!10475 = !DILocation(line: 480, column: 22, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10437, file: !1807, discriminator: 1)
!10477 = !DILocation(line: 480, column: 28, scope: !10476)
!10478 = !DILocation(line: 480, column: 31, scope: !10476)
!10479 = !DILocation(line: 480, column: 25, scope: !10476)
!10480 = !DILocation(line: 480, column: 9, scope: !10476)
!10481 = !DILocation(line: 481, column: 35, scope: !10435)
!10482 = !DILocation(line: 481, column: 17, scope: !10435)
!10483 = !DILocation(line: 481, column: 20, scope: !10435)
!10484 = !DILocation(line: 481, column: 17, scope: !10436)
!10485 = !DILocalVariable(name: "cpl_coord", scope: !10434, file: !1807, line: 482, type: !1015)
!10486 = !DILocation(line: 482, column: 21, scope: !10434)
!10487 = !DILocation(line: 482, column: 51, scope: !10434)
!10488 = !DILocation(line: 482, column: 33, scope: !10434)
!10489 = !DILocation(line: 482, column: 47, scope: !10434)
!10490 = !DILocation(line: 482, column: 36, scope: !10434)
!10491 = !DILocation(line: 482, column: 57, scope: !10434)
!10492 = !DILocation(line: 483, column: 28, scope: !10433)
!10493 = !DILocation(line: 483, column: 26, scope: !10433)
!10494 = !DILocation(line: 483, column: 22, scope: !10433)
!10495 = !DILocation(line: 483, column: 40, scope: !10496)
!10496 = !DILexicalBlockFile(scope: !10432, file: !1807, discriminator: 1)
!10497 = !DILocation(line: 483, column: 46, scope: !10496)
!10498 = !DILocation(line: 483, column: 44, scope: !10496)
!10499 = !DILocation(line: 483, column: 17, scope: !10496)
!10500 = !DILocation(line: 485, column: 49, scope: !10431)
!10501 = !DILocation(line: 485, column: 30, scope: !10431)
!10502 = !DILocation(line: 485, column: 33, scope: !10431)
!10503 = !DILocation(line: 485, column: 54, scope: !10431)
!10504 = !DILocation(line: 485, column: 66, scope: !10431)
!10505 = !DILocation(line: 485, column: 25, scope: !10431)
!10506 = !DILocation(line: 63, column: 23, scope: !10428, inlinedAt: !10430)
!10507 = !DILocation(line: 63, column: 13, scope: !10428, inlinedAt: !10430)
!10508 = !DILocation(line: 63, column: 38, scope: !10428, inlinedAt: !10430)
!10509 = !DILocation(line: 63, column: 28, scope: !10428, inlinedAt: !10430)
!10510 = !DILocation(line: 63, column: 26, scope: !10428, inlinedAt: !10430)
!10511 = !DILocation(line: 63, column: 42, scope: !10428, inlinedAt: !10430)
!10512 = !DILocation(line: 63, column: 12, scope: !10428, inlinedAt: !10430)
!10513 = !DILocation(line: 484, column: 41, scope: !10431)
!10514 = !DILocation(line: 484, column: 21, scope: !10431)
!10515 = !DILocation(line: 484, column: 37, scope: !10431)
!10516 = !DILocation(line: 484, column: 24, scope: !10431)
!10517 = !DILocation(line: 484, column: 46, scope: !10431)
!10518 = !DILocation(line: 486, column: 17, scope: !10431)
!10519 = !DILocation(line: 483, column: 59, scope: !10520)
!10520 = !DILexicalBlockFile(scope: !10432, file: !1807, discriminator: 2)
!10521 = !DILocation(line: 483, column: 17, scope: !10520)
!10522 = distinct !{!10522, !10523}
!10523 = !DILocation(line: 483, column: 17, scope: !10434)
!10524 = !DILocation(line: 487, column: 21, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10434, file: !1807, line: 487, column: 21)
!10526 = !DILocation(line: 487, column: 24, scope: !10525)
!10527 = !DILocation(line: 487, column: 29, scope: !10525)
!10528 = !DILocation(line: 487, column: 47, scope: !10529)
!10529 = !DILexicalBlockFile(scope: !10525, file: !1807, discriminator: 1)
!10530 = !DILocation(line: 487, column: 32, scope: !10529)
!10531 = !DILocation(line: 487, column: 35, scope: !10529)
!10532 = !DILocation(line: 487, column: 21, scope: !10529)
!10533 = !DILocation(line: 488, column: 32, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !1807, line: 488, column: 21)
!10535 = distinct !DILexicalBlock(scope: !10525, file: !1807, line: 487, column: 54)
!10536 = !DILocation(line: 488, column: 30, scope: !10534)
!10537 = !DILocation(line: 488, column: 26, scope: !10534)
!10538 = !DILocation(line: 488, column: 44, scope: !10539)
!10539 = !DILexicalBlockFile(scope: !10540, file: !1807, discriminator: 1)
!10540 = distinct !DILexicalBlock(scope: !10534, file: !1807, line: 488, column: 21)
!10541 = !DILocation(line: 488, column: 50, scope: !10539)
!10542 = !DILocation(line: 488, column: 48, scope: !10539)
!10543 = !DILocation(line: 488, column: 21, scope: !10539)
!10544 = !DILocation(line: 489, column: 71, scope: !10540)
!10545 = !DILocation(line: 489, column: 52, scope: !10540)
!10546 = !DILocation(line: 489, column: 55, scope: !10540)
!10547 = !DILocation(line: 489, column: 51, scope: !10540)
!10548 = !DILocation(line: 489, column: 44, scope: !10540)
!10549 = !DILocation(line: 489, column: 25, scope: !10540)
!10550 = !DILocation(line: 489, column: 28, scope: !10540)
!10551 = !DILocation(line: 489, column: 49, scope: !10540)
!10552 = !DILocation(line: 488, column: 63, scope: !10553)
!10553 = !DILexicalBlockFile(scope: !10540, file: !1807, discriminator: 2)
!10554 = !DILocation(line: 488, column: 21, scope: !10553)
!10555 = distinct !{!10555, !10556}
!10556 = !DILocation(line: 488, column: 21, scope: !10535)
!10557 = !DILocation(line: 490, column: 17, scope: !10535)
!10558 = !DILocation(line: 491, column: 13, scope: !10434)
!10559 = !DILocation(line: 492, column: 9, scope: !10436)
!10560 = !DILocation(line: 480, column: 47, scope: !10561)
!10561 = !DILexicalBlockFile(scope: !10437, file: !1807, discriminator: 2)
!10562 = !DILocation(line: 480, column: 9, scope: !10561)
!10563 = distinct !{!10563, !10564}
!10564 = !DILocation(line: 480, column: 9, scope: !10439)
!10565 = !DILocation(line: 493, column: 15, scope: !10439)
!10566 = !DILocation(line: 493, column: 13, scope: !10439)
!10567 = !DILocation(line: 494, column: 5, scope: !10439)
!10568 = !DILocation(line: 477, column: 49, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !10440, file: !1807, discriminator: 2)
!10570 = !DILocation(line: 477, column: 5, scope: !10569)
!10571 = distinct !{!10571, !10572}
!10572 = !DILocation(line: 477, column: 5, scope: !10426)
!10573 = !DILocation(line: 495, column: 1, scope: !10426)
!10574 = distinct !DISubprogram(name: "remove_dithering", scope: !1807, file: !1807, line: 594, type: !7907, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10575 = !DILocalVariable(name: "s", arg: 1, scope: !10574, file: !1807, line: 594, type: !1852)
!10576 = !DILocation(line: 594, column: 48, scope: !10574)
!10577 = !DILocalVariable(name: "ch", scope: !10574, file: !1807, line: 595, type: !1015)
!10578 = !DILocation(line: 595, column: 9, scope: !10574)
!10579 = !DILocalVariable(name: "i", scope: !10574, file: !1807, line: 595, type: !1015)
!10580 = !DILocation(line: 595, column: 13, scope: !10574)
!10581 = !DILocation(line: 597, column: 13, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10574, file: !1807, line: 597, column: 5)
!10583 = !DILocation(line: 597, column: 10, scope: !10582)
!10584 = !DILocation(line: 597, column: 18, scope: !10585)
!10585 = !DILexicalBlockFile(scope: !10586, file: !1807, discriminator: 1)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !1807, line: 597, column: 5)
!10587 = !DILocation(line: 597, column: 24, scope: !10585)
!10588 = !DILocation(line: 597, column: 27, scope: !10585)
!10589 = !DILocation(line: 597, column: 21, scope: !10585)
!10590 = !DILocation(line: 597, column: 5, scope: !10585)
!10591 = !DILocation(line: 598, column: 29, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10593, file: !1807, line: 598, column: 13)
!10593 = distinct !DILexicalBlock(scope: !10586, file: !1807, line: 597, column: 47)
!10594 = !DILocation(line: 598, column: 14, scope: !10592)
!10595 = !DILocation(line: 598, column: 17, scope: !10592)
!10596 = !DILocation(line: 598, column: 33, scope: !10592)
!10597 = !DILocation(line: 598, column: 54, scope: !10598)
!10598 = !DILexicalBlockFile(scope: !10592, file: !1807, discriminator: 1)
!10599 = !DILocation(line: 598, column: 36, scope: !10598)
!10600 = !DILocation(line: 598, column: 39, scope: !10598)
!10601 = !DILocation(line: 598, column: 13, scope: !10598)
!10602 = !DILocation(line: 599, column: 22, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !1807, line: 599, column: 13)
!10604 = distinct !DILexicalBlock(scope: !10592, file: !1807, line: 598, column: 59)
!10605 = !DILocation(line: 599, column: 25, scope: !10603)
!10606 = !DILocation(line: 599, column: 20, scope: !10603)
!10607 = !DILocation(line: 599, column: 18, scope: !10603)
!10608 = !DILocation(line: 599, column: 40, scope: !10609)
!10609 = !DILexicalBlockFile(scope: !10610, file: !1807, discriminator: 1)
!10610 = distinct !DILexicalBlock(scope: !10603, file: !1807, line: 599, column: 13)
!10611 = !DILocation(line: 599, column: 44, scope: !10609)
!10612 = !DILocation(line: 599, column: 47, scope: !10609)
!10613 = !DILocation(line: 599, column: 42, scope: !10609)
!10614 = !DILocation(line: 599, column: 13, scope: !10609)
!10615 = !DILocation(line: 600, column: 32, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !1807, line: 600, column: 21)
!10617 = distinct !DILexicalBlock(scope: !10610, file: !1807, line: 599, column: 65)
!10618 = !DILocation(line: 600, column: 22, scope: !10616)
!10619 = !DILocation(line: 600, column: 25, scope: !10616)
!10620 = !DILocation(line: 600, column: 21, scope: !10617)
!10621 = !DILocation(line: 601, column: 41, scope: !10616)
!10622 = !DILocation(line: 601, column: 21, scope: !10616)
!10623 = !DILocation(line: 601, column: 37, scope: !10616)
!10624 = !DILocation(line: 601, column: 24, scope: !10616)
!10625 = !DILocation(line: 601, column: 44, scope: !10616)
!10626 = !DILocation(line: 602, column: 13, scope: !10617)
!10627 = !DILocation(line: 599, column: 61, scope: !10628)
!10628 = !DILexicalBlockFile(scope: !10610, file: !1807, discriminator: 2)
!10629 = !DILocation(line: 599, column: 13, scope: !10628)
!10630 = distinct !{!10630, !10631}
!10631 = !DILocation(line: 599, column: 13, scope: !10604)
!10632 = !DILocation(line: 603, column: 9, scope: !10604)
!10633 = !DILocation(line: 604, column: 5, scope: !10593)
!10634 = !DILocation(line: 597, column: 43, scope: !10635)
!10635 = !DILexicalBlockFile(scope: !10586, file: !1807, discriminator: 2)
!10636 = !DILocation(line: 597, column: 5, scope: !10635)
!10637 = distinct !{!10637, !10638}
!10638 = !DILocation(line: 597, column: 5, scope: !10574)
!10639 = !DILocation(line: 605, column: 1, scope: !10574)
!10640 = distinct !DISubprogram(name: "ac3_decode_transform_coeffs_ch", scope: !1807, file: !1807, line: 513, type: !10641, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10641 = !DISubroutineType(types: !10642)
!10642 = !{null, !1852, !1015, !10360}
!10643 = !DILocalVariable(name: "s", arg: 1, scope: !10640, file: !1807, line: 513, type: !1852)
!10644 = !DILocation(line: 513, column: 62, scope: !10640)
!10645 = !DILocalVariable(name: "ch_index", arg: 2, scope: !10640, file: !1807, line: 513, type: !1015)
!10646 = !DILocation(line: 513, column: 69, scope: !10640)
!10647 = !DILocalVariable(name: "m", arg: 3, scope: !10640, file: !1807, line: 513, type: !10360)
!10648 = !DILocation(line: 513, column: 92, scope: !10640)
!10649 = !DILocalVariable(name: "start_freq", scope: !10640, file: !1807, line: 515, type: !1015)
!10650 = !DILocation(line: 515, column: 9, scope: !10640)
!10651 = !DILocation(line: 515, column: 36, scope: !10640)
!10652 = !DILocation(line: 515, column: 22, scope: !10640)
!10653 = !DILocation(line: 515, column: 25, scope: !10640)
!10654 = !DILocalVariable(name: "end_freq", scope: !10640, file: !1807, line: 516, type: !1015)
!10655 = !DILocation(line: 516, column: 9, scope: !10640)
!10656 = !DILocation(line: 516, column: 32, scope: !10640)
!10657 = !DILocation(line: 516, column: 20, scope: !10640)
!10658 = !DILocation(line: 516, column: 23, scope: !10640)
!10659 = !DILocalVariable(name: "baps", scope: !10640, file: !1807, line: 517, type: !1201)
!10660 = !DILocation(line: 517, column: 14, scope: !10640)
!10661 = !DILocation(line: 517, column: 28, scope: !10640)
!10662 = !DILocation(line: 517, column: 21, scope: !10640)
!10663 = !DILocation(line: 517, column: 24, scope: !10640)
!10664 = !DILocalVariable(name: "exps", scope: !10640, file: !1807, line: 518, type: !1277)
!10665 = !DILocation(line: 518, column: 13, scope: !10640)
!10666 = !DILocation(line: 518, column: 29, scope: !10640)
!10667 = !DILocation(line: 518, column: 20, scope: !10640)
!10668 = !DILocation(line: 518, column: 23, scope: !10640)
!10669 = !DILocalVariable(name: "coeffs", scope: !10640, file: !1807, line: 519, type: !2111)
!10670 = !DILocation(line: 519, column: 14, scope: !10640)
!10671 = !DILocation(line: 519, column: 39, scope: !10640)
!10672 = !DILocation(line: 519, column: 23, scope: !10640)
!10673 = !DILocation(line: 519, column: 26, scope: !10640)
!10674 = !DILocalVariable(name: "dither", scope: !10640, file: !1807, line: 520, type: !1015)
!10675 = !DILocation(line: 520, column: 9, scope: !10640)
!10676 = !DILocation(line: 520, column: 19, scope: !10640)
!10677 = !DILocation(line: 520, column: 28, scope: !10640)
!10678 = !DILocation(line: 520, column: 34, scope: !10640)
!10679 = !DILocation(line: 520, column: 52, scope: !10680)
!10680 = !DILexicalBlockFile(scope: !10640, file: !1807, discriminator: 1)
!10681 = !DILocation(line: 520, column: 37, scope: !10680)
!10682 = !DILocation(line: 520, column: 40, scope: !10680)
!10683 = !DILocation(line: 520, column: 34, scope: !10680)
!10684 = !DILocation(line: 520, column: 34, scope: !10685)
!10685 = !DILexicalBlockFile(scope: !10640, file: !1807, discriminator: 2)
!10686 = !DILocation(line: 520, column: 9, scope: !10685)
!10687 = !DILocalVariable(name: "gbc", scope: !10640, file: !1807, line: 521, type: !3872)
!10688 = !DILocation(line: 521, column: 20, scope: !10640)
!10689 = !DILocation(line: 521, column: 27, scope: !10640)
!10690 = !DILocation(line: 521, column: 30, scope: !10640)
!10691 = !DILocalVariable(name: "freq", scope: !10640, file: !1807, line: 522, type: !1015)
!10692 = !DILocation(line: 522, column: 9, scope: !10640)
!10693 = !DILocation(line: 524, column: 17, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10640, file: !1807, line: 524, column: 5)
!10695 = !DILocation(line: 524, column: 15, scope: !10694)
!10696 = !DILocation(line: 524, column: 10, scope: !10694)
!10697 = !DILocation(line: 524, column: 29, scope: !10698)
!10698 = !DILexicalBlockFile(scope: !10699, file: !1807, discriminator: 1)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !1807, line: 524, column: 5)
!10700 = !DILocation(line: 524, column: 36, scope: !10698)
!10701 = !DILocation(line: 524, column: 34, scope: !10698)
!10702 = !DILocation(line: 524, column: 5, scope: !10698)
!10703 = !DILocalVariable(name: "bap", scope: !10704, file: !1807, line: 525, type: !1015)
!10704 = distinct !DILexicalBlock(scope: !10699, file: !1807, line: 524, column: 54)
!10705 = !DILocation(line: 525, column: 13, scope: !10704)
!10706 = !DILocation(line: 525, column: 24, scope: !10704)
!10707 = !DILocation(line: 525, column: 19, scope: !10704)
!10708 = !DILocalVariable(name: "mantissa", scope: !10704, file: !1807, line: 526, type: !1015)
!10709 = !DILocation(line: 526, column: 13, scope: !10704)
!10710 = !DILocation(line: 527, column: 17, scope: !10704)
!10711 = !DILocation(line: 527, column: 9, scope: !10704)
!10712 = !DILocation(line: 530, column: 17, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !1807, line: 530, column: 17)
!10714 = distinct !DILexicalBlock(scope: !10704, file: !1807, line: 527, column: 22)
!10715 = !DILocation(line: 530, column: 17, scope: !10714)
!10716 = !DILocation(line: 531, column: 43, scope: !10713)
!10717 = !DILocation(line: 531, column: 46, scope: !10713)
!10718 = !DILocation(line: 531, column: 31, scope: !10713)
!10719 = !DILocation(line: 531, column: 57, scope: !10713)
!10720 = !DILocation(line: 531, column: 61, scope: !10713)
!10721 = !DILocation(line: 531, column: 66, scope: !10713)
!10722 = !DILocation(line: 531, column: 71, scope: !10713)
!10723 = !DILocation(line: 531, column: 26, scope: !10713)
!10724 = !DILocation(line: 531, column: 17, scope: !10713)
!10725 = !DILocation(line: 533, column: 26, scope: !10713)
!10726 = !DILocation(line: 534, column: 13, scope: !10714)
!10727 = !DILocation(line: 536, column: 17, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10714, file: !1807, line: 536, column: 17)
!10729 = !DILocation(line: 536, column: 20, scope: !10728)
!10730 = !DILocation(line: 536, column: 17, scope: !10714)
!10731 = !DILocation(line: 537, column: 17, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10728, file: !1807, line: 536, column: 24)
!10733 = !DILocation(line: 537, column: 20, scope: !10732)
!10734 = !DILocation(line: 537, column: 22, scope: !10732)
!10735 = !DILocation(line: 538, column: 39, scope: !10732)
!10736 = !DILocation(line: 538, column: 42, scope: !10732)
!10737 = !DILocation(line: 538, column: 28, scope: !10732)
!10738 = !DILocation(line: 538, column: 31, scope: !10732)
!10739 = !DILocation(line: 538, column: 26, scope: !10732)
!10740 = !DILocation(line: 539, column: 13, scope: !10732)
!10741 = !DILocalVariable(name: "bits", scope: !10742, file: !1807, line: 540, type: !1015)
!10742 = distinct !DILexicalBlock(scope: !10728, file: !1807, line: 539, column: 20)
!10743 = !DILocation(line: 540, column: 21, scope: !10742)
!10744 = !DILocation(line: 540, column: 37, scope: !10742)
!10745 = !DILocation(line: 540, column: 28, scope: !10742)
!10746 = !DILocation(line: 541, column: 41, scope: !10742)
!10747 = !DILocation(line: 541, column: 28, scope: !10742)
!10748 = !DILocation(line: 541, column: 26, scope: !10742)
!10749 = !DILocation(line: 542, column: 46, scope: !10742)
!10750 = !DILocation(line: 542, column: 33, scope: !10742)
!10751 = !DILocation(line: 542, column: 17, scope: !10742)
!10752 = !DILocation(line: 542, column: 20, scope: !10742)
!10753 = !DILocation(line: 542, column: 31, scope: !10742)
!10754 = !DILocation(line: 543, column: 46, scope: !10742)
!10755 = !DILocation(line: 543, column: 33, scope: !10742)
!10756 = !DILocation(line: 543, column: 17, scope: !10742)
!10757 = !DILocation(line: 543, column: 20, scope: !10742)
!10758 = !DILocation(line: 543, column: 31, scope: !10742)
!10759 = !DILocation(line: 544, column: 17, scope: !10742)
!10760 = !DILocation(line: 544, column: 20, scope: !10742)
!10761 = !DILocation(line: 544, column: 23, scope: !10742)
!10762 = !DILocation(line: 546, column: 13, scope: !10714)
!10763 = !DILocation(line: 548, column: 17, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10714, file: !1807, line: 548, column: 17)
!10765 = !DILocation(line: 548, column: 20, scope: !10764)
!10766 = !DILocation(line: 548, column: 17, scope: !10714)
!10767 = !DILocation(line: 549, column: 17, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10764, file: !1807, line: 548, column: 24)
!10769 = !DILocation(line: 549, column: 20, scope: !10768)
!10770 = !DILocation(line: 549, column: 22, scope: !10768)
!10771 = !DILocation(line: 550, column: 39, scope: !10768)
!10772 = !DILocation(line: 550, column: 42, scope: !10768)
!10773 = !DILocation(line: 550, column: 28, scope: !10768)
!10774 = !DILocation(line: 550, column: 31, scope: !10768)
!10775 = !DILocation(line: 550, column: 26, scope: !10768)
!10776 = !DILocation(line: 551, column: 13, scope: !10768)
!10777 = !DILocalVariable(name: "bits", scope: !10778, file: !1807, line: 552, type: !1015)
!10778 = distinct !DILexicalBlock(scope: !10764, file: !1807, line: 551, column: 20)
!10779 = !DILocation(line: 552, column: 21, scope: !10778)
!10780 = !DILocation(line: 552, column: 37, scope: !10778)
!10781 = !DILocation(line: 552, column: 28, scope: !10778)
!10782 = !DILocation(line: 553, column: 41, scope: !10778)
!10783 = !DILocation(line: 553, column: 28, scope: !10778)
!10784 = !DILocation(line: 553, column: 26, scope: !10778)
!10785 = !DILocation(line: 554, column: 46, scope: !10778)
!10786 = !DILocation(line: 554, column: 33, scope: !10778)
!10787 = !DILocation(line: 554, column: 17, scope: !10778)
!10788 = !DILocation(line: 554, column: 20, scope: !10778)
!10789 = !DILocation(line: 554, column: 31, scope: !10778)
!10790 = !DILocation(line: 555, column: 46, scope: !10778)
!10791 = !DILocation(line: 555, column: 33, scope: !10778)
!10792 = !DILocation(line: 555, column: 17, scope: !10778)
!10793 = !DILocation(line: 555, column: 20, scope: !10778)
!10794 = !DILocation(line: 555, column: 31, scope: !10778)
!10795 = !DILocation(line: 556, column: 17, scope: !10778)
!10796 = !DILocation(line: 556, column: 20, scope: !10778)
!10797 = !DILocation(line: 556, column: 23, scope: !10778)
!10798 = !DILocation(line: 558, column: 13, scope: !10714)
!10799 = !DILocation(line: 560, column: 46, scope: !10714)
!10800 = !DILocation(line: 560, column: 37, scope: !10714)
!10801 = !DILocation(line: 560, column: 24, scope: !10714)
!10802 = !DILocation(line: 560, column: 22, scope: !10714)
!10803 = !DILocation(line: 561, column: 13, scope: !10714)
!10804 = !DILocation(line: 563, column: 17, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10714, file: !1807, line: 563, column: 17)
!10806 = !DILocation(line: 563, column: 20, scope: !10805)
!10807 = !DILocation(line: 563, column: 17, scope: !10714)
!10808 = !DILocation(line: 564, column: 17, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !1807, line: 563, column: 24)
!10810 = !DILocation(line: 564, column: 20, scope: !10809)
!10811 = !DILocation(line: 564, column: 23, scope: !10809)
!10812 = !DILocation(line: 565, column: 28, scope: !10809)
!10813 = !DILocation(line: 565, column: 31, scope: !10809)
!10814 = !DILocation(line: 565, column: 26, scope: !10809)
!10815 = !DILocation(line: 566, column: 13, scope: !10809)
!10816 = !DILocalVariable(name: "bits", scope: !10817, file: !1807, line: 567, type: !1015)
!10817 = distinct !DILexicalBlock(scope: !10805, file: !1807, line: 566, column: 20)
!10818 = !DILocation(line: 567, column: 21, scope: !10817)
!10819 = !DILocation(line: 567, column: 37, scope: !10817)
!10820 = !DILocation(line: 567, column: 28, scope: !10817)
!10821 = !DILocation(line: 568, column: 41, scope: !10817)
!10822 = !DILocation(line: 568, column: 28, scope: !10817)
!10823 = !DILocation(line: 568, column: 26, scope: !10817)
!10824 = !DILocation(line: 569, column: 43, scope: !10817)
!10825 = !DILocation(line: 569, column: 30, scope: !10817)
!10826 = !DILocation(line: 569, column: 17, scope: !10817)
!10827 = !DILocation(line: 569, column: 20, scope: !10817)
!10828 = !DILocation(line: 569, column: 28, scope: !10817)
!10829 = !DILocation(line: 570, column: 17, scope: !10817)
!10830 = !DILocation(line: 570, column: 20, scope: !10817)
!10831 = !DILocation(line: 570, column: 23, scope: !10817)
!10832 = !DILocation(line: 572, column: 13, scope: !10714)
!10833 = !DILocation(line: 574, column: 46, scope: !10714)
!10834 = !DILocation(line: 574, column: 37, scope: !10714)
!10835 = !DILocation(line: 574, column: 24, scope: !10714)
!10836 = !DILocation(line: 574, column: 22, scope: !10714)
!10837 = !DILocation(line: 575, column: 13, scope: !10714)
!10838 = !DILocation(line: 578, column: 17, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10714, file: !1807, line: 578, column: 17)
!10840 = !DILocation(line: 578, column: 21, scope: !10839)
!10841 = !DILocation(line: 578, column: 17, scope: !10714)
!10842 = !DILocation(line: 579, column: 24, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10839, file: !1807, line: 578, column: 27)
!10844 = !DILocation(line: 579, column: 27, scope: !10843)
!10845 = !DILocation(line: 579, column: 75, scope: !10843)
!10846 = !DILocation(line: 579, column: 17, scope: !10843)
!10847 = !DILocation(line: 580, column: 21, scope: !10843)
!10848 = !DILocation(line: 581, column: 13, scope: !10843)
!10849 = !DILocation(line: 582, column: 44, scope: !10714)
!10850 = !DILocation(line: 582, column: 66, scope: !10714)
!10851 = !DILocation(line: 582, column: 49, scope: !10714)
!10852 = !DILocation(line: 582, column: 34, scope: !10714)
!10853 = !DILocation(line: 582, column: 98, scope: !10714)
!10854 = !DILocation(line: 582, column: 81, scope: !10714)
!10855 = !DILocation(line: 582, column: 79, scope: !10714)
!10856 = !DILocation(line: 582, column: 72, scope: !10714)
!10857 = !DILocation(line: 582, column: 22, scope: !10714)
!10858 = !DILocation(line: 583, column: 13, scope: !10714)
!10859 = !DILocation(line: 585, column: 24, scope: !10704)
!10860 = !DILocation(line: 585, column: 41, scope: !10704)
!10861 = !DILocation(line: 585, column: 36, scope: !10704)
!10862 = !DILocation(line: 585, column: 33, scope: !10704)
!10863 = !DILocation(line: 585, column: 16, scope: !10704)
!10864 = !DILocation(line: 585, column: 9, scope: !10704)
!10865 = !DILocation(line: 585, column: 22, scope: !10704)
!10866 = !DILocation(line: 586, column: 5, scope: !10704)
!10867 = !DILocation(line: 524, column: 50, scope: !10868)
!10868 = !DILexicalBlockFile(scope: !10699, file: !1807, discriminator: 2)
!10869 = !DILocation(line: 524, column: 5, scope: !10868)
!10870 = distinct !{!10870, !10871}
!10871 = !DILocation(line: 524, column: 5, scope: !10640)
!10872 = !DILocation(line: 587, column: 1, scope: !10640)
!10873 = distinct !DISubprogram(name: "ff_eac3_decode_transform_coeffs_aht_ch", scope: !1008, file: !1008, line: 196, type: !8817, isLocal: true, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!10874 = !DILocalVariable(name: "s", arg: 1, scope: !10873, file: !1008, line: 196, type: !1852)
!10875 = !DILocation(line: 196, column: 70, scope: !10873)
!10876 = !DILocalVariable(name: "ch", arg: 2, scope: !10873, file: !1008, line: 196, type: !1015)
!10877 = !DILocation(line: 196, column: 77, scope: !10873)
!10878 = !DILocalVariable(name: "bin", scope: !10873, file: !1008, line: 198, type: !1015)
!10879 = !DILocation(line: 198, column: 9, scope: !10873)
!10880 = !DILocalVariable(name: "blk", scope: !10873, file: !1008, line: 198, type: !1015)
!10881 = !DILocation(line: 198, column: 14, scope: !10873)
!10882 = !DILocalVariable(name: "gs", scope: !10873, file: !1008, line: 198, type: !1015)
!10883 = !DILocation(line: 198, column: 19, scope: !10873)
!10884 = !DILocalVariable(name: "end_bap", scope: !10873, file: !1008, line: 199, type: !1015)
!10885 = !DILocation(line: 199, column: 9, scope: !10873)
!10886 = !DILocalVariable(name: "gaq_mode", scope: !10873, file: !1008, line: 199, type: !1015)
!10887 = !DILocation(line: 199, column: 18, scope: !10873)
!10888 = !DILocalVariable(name: "gbc", scope: !10873, file: !1008, line: 200, type: !3872)
!10889 = !DILocation(line: 200, column: 20, scope: !10873)
!10890 = !DILocation(line: 200, column: 27, scope: !10873)
!10891 = !DILocation(line: 200, column: 30, scope: !10873)
!10892 = !DILocalVariable(name: "gaq_gain", scope: !10873, file: !1008, line: 201, type: !8704)
!10893 = !DILocation(line: 201, column: 9, scope: !10873)
!10894 = !DILocation(line: 203, column: 25, scope: !10873)
!10895 = !DILocation(line: 203, column: 16, scope: !10873)
!10896 = !DILocation(line: 203, column: 14, scope: !10873)
!10897 = !DILocation(line: 204, column: 16, scope: !10873)
!10898 = !DILocation(line: 204, column: 25, scope: !10873)
!10899 = !DILocation(line: 204, column: 15, scope: !10873)
!10900 = !DILocation(line: 204, column: 13, scope: !10873)
!10901 = !DILocation(line: 208, column: 8, scope: !10873)
!10902 = !DILocation(line: 209, column: 9, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10873, file: !1008, line: 209, column: 9)
!10904 = !DILocation(line: 209, column: 18, scope: !10903)
!10905 = !DILocation(line: 209, column: 33, scope: !10903)
!10906 = !DILocation(line: 209, column: 36, scope: !10907)
!10907 = !DILexicalBlockFile(scope: !10903, file: !1008, discriminator: 1)
!10908 = !DILocation(line: 209, column: 45, scope: !10907)
!10909 = !DILocation(line: 209, column: 9, scope: !10907)
!10910 = !DILocation(line: 211, column: 34, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1008, line: 211, column: 9)
!10912 = distinct !DILexicalBlock(scope: !10903, file: !1008, line: 209, column: 61)
!10913 = !DILocation(line: 211, column: 20, scope: !10911)
!10914 = !DILocation(line: 211, column: 23, scope: !10911)
!10915 = !DILocation(line: 211, column: 18, scope: !10911)
!10916 = !DILocation(line: 211, column: 14, scope: !10911)
!10917 = !DILocation(line: 211, column: 39, scope: !10918)
!10918 = !DILexicalBlockFile(scope: !10919, file: !1008, discriminator: 1)
!10919 = distinct !DILexicalBlock(scope: !10911, file: !1008, line: 211, column: 9)
!10920 = !DILocation(line: 211, column: 57, scope: !10918)
!10921 = !DILocation(line: 211, column: 45, scope: !10918)
!10922 = !DILocation(line: 211, column: 48, scope: !10918)
!10923 = !DILocation(line: 211, column: 43, scope: !10918)
!10924 = !DILocation(line: 211, column: 9, scope: !10918)
!10925 = !DILocation(line: 212, column: 28, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1008, line: 212, column: 17)
!10927 = distinct !DILexicalBlock(scope: !10919, file: !1008, line: 211, column: 69)
!10928 = !DILocation(line: 212, column: 17, scope: !10926)
!10929 = !DILocation(line: 212, column: 24, scope: !10926)
!10930 = !DILocation(line: 212, column: 20, scope: !10926)
!10931 = !DILocation(line: 212, column: 33, scope: !10926)
!10932 = !DILocation(line: 212, column: 37, scope: !10926)
!10933 = !DILocation(line: 212, column: 51, scope: !10934)
!10934 = !DILexicalBlockFile(scope: !10926, file: !1008, discriminator: 1)
!10935 = !DILocation(line: 212, column: 40, scope: !10934)
!10936 = !DILocation(line: 212, column: 47, scope: !10934)
!10937 = !DILocation(line: 212, column: 43, scope: !10934)
!10938 = !DILocation(line: 212, column: 58, scope: !10934)
!10939 = !DILocation(line: 212, column: 56, scope: !10934)
!10940 = !DILocation(line: 212, column: 17, scope: !10934)
!10941 = !DILocation(line: 213, column: 44, scope: !10926)
!10942 = !DILocation(line: 213, column: 34, scope: !10926)
!10943 = !DILocation(line: 213, column: 53, scope: !10926)
!10944 = !DILocation(line: 213, column: 61, scope: !10926)
!10945 = !DILocation(line: 213, column: 49, scope: !10926)
!10946 = !DILocation(line: 213, column: 28, scope: !10926)
!10947 = !DILocation(line: 213, column: 17, scope: !10926)
!10948 = !DILocation(line: 213, column: 32, scope: !10926)
!10949 = !DILocation(line: 214, column: 9, scope: !10927)
!10950 = !DILocation(line: 211, column: 65, scope: !10951)
!10951 = !DILexicalBlockFile(scope: !10919, file: !1008, discriminator: 2)
!10952 = !DILocation(line: 211, column: 9, scope: !10951)
!10953 = distinct !{!10953, !10954}
!10954 = !DILocation(line: 211, column: 9, scope: !10912)
!10955 = !DILocation(line: 215, column: 5, scope: !10912)
!10956 = !DILocation(line: 215, column: 16, scope: !10957)
!10957 = !DILexicalBlockFile(scope: !10958, file: !1008, discriminator: 1)
!10958 = distinct !DILexicalBlock(scope: !10903, file: !1008, line: 215, column: 16)
!10959 = !DILocation(line: 215, column: 25, scope: !10957)
!10960 = !DILocalVariable(name: "gc", scope: !10961, file: !1008, line: 217, type: !1015)
!10961 = distinct !DILexicalBlock(scope: !10958, file: !1008, line: 215, column: 42)
!10962 = !DILocation(line: 217, column: 13, scope: !10961)
!10963 = !DILocation(line: 218, column: 34, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !1008, line: 218, column: 9)
!10965 = !DILocation(line: 218, column: 20, scope: !10964)
!10966 = !DILocation(line: 218, column: 23, scope: !10964)
!10967 = !DILocation(line: 218, column: 18, scope: !10964)
!10968 = !DILocation(line: 218, column: 14, scope: !10964)
!10969 = !DILocation(line: 218, column: 39, scope: !10970)
!10970 = !DILexicalBlockFile(scope: !10971, file: !1008, discriminator: 1)
!10971 = distinct !DILexicalBlock(scope: !10964, file: !1008, line: 218, column: 9)
!10972 = !DILocation(line: 218, column: 57, scope: !10970)
!10973 = !DILocation(line: 218, column: 45, scope: !10970)
!10974 = !DILocation(line: 218, column: 48, scope: !10970)
!10975 = !DILocation(line: 218, column: 43, scope: !10970)
!10976 = !DILocation(line: 218, column: 9, scope: !10970)
!10977 = !DILocation(line: 219, column: 28, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !1008, line: 219, column: 17)
!10979 = distinct !DILexicalBlock(scope: !10971, file: !1008, line: 218, column: 69)
!10980 = !DILocation(line: 219, column: 17, scope: !10978)
!10981 = !DILocation(line: 219, column: 24, scope: !10978)
!10982 = !DILocation(line: 219, column: 20, scope: !10978)
!10983 = !DILocation(line: 219, column: 33, scope: !10978)
!10984 = !DILocation(line: 219, column: 37, scope: !10978)
!10985 = !DILocation(line: 219, column: 51, scope: !10986)
!10986 = !DILexicalBlockFile(scope: !10978, file: !1008, discriminator: 1)
!10987 = !DILocation(line: 219, column: 40, scope: !10986)
!10988 = !DILocation(line: 219, column: 47, scope: !10986)
!10989 = !DILocation(line: 219, column: 43, scope: !10986)
!10990 = !DILocation(line: 219, column: 56, scope: !10986)
!10991 = !DILocation(line: 219, column: 17, scope: !10986)
!10992 = !DILocation(line: 220, column: 23, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !1008, line: 220, column: 21)
!10994 = distinct !DILexicalBlock(scope: !10978, file: !1008, line: 219, column: 62)
!10995 = !DILocation(line: 220, column: 26, scope: !10993)
!10996 = !DILocation(line: 220, column: 21, scope: !10994)
!10997 = !DILocalVariable(name: "group_code", scope: !10998, file: !1008, line: 221, type: !1015)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !1008, line: 220, column: 32)
!10999 = !DILocation(line: 221, column: 25, scope: !10998)
!11000 = !DILocation(line: 221, column: 47, scope: !10998)
!11001 = !DILocation(line: 221, column: 38, scope: !10998)
!11002 = !DILocation(line: 222, column: 25, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10998, file: !1008, line: 222, column: 25)
!11004 = !DILocation(line: 222, column: 36, scope: !11003)
!11005 = !DILocation(line: 222, column: 25, scope: !10998)
!11006 = !DILocation(line: 223, column: 32, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !1008, line: 222, column: 42)
!11008 = !DILocation(line: 223, column: 35, scope: !11007)
!11009 = !DILocation(line: 223, column: 25, scope: !11007)
!11010 = !DILocation(line: 224, column: 36, scope: !11007)
!11011 = !DILocation(line: 225, column: 21, scope: !11007)
!11012 = !DILocation(line: 226, column: 69, scope: !10998)
!11013 = !DILocation(line: 226, column: 38, scope: !10998)
!11014 = !DILocation(line: 226, column: 32, scope: !10998)
!11015 = !DILocation(line: 226, column: 21, scope: !10998)
!11016 = !DILocation(line: 226, column: 36, scope: !10998)
!11017 = !DILocation(line: 227, column: 69, scope: !10998)
!11018 = !DILocation(line: 227, column: 38, scope: !10998)
!11019 = !DILocation(line: 227, column: 32, scope: !10998)
!11020 = !DILocation(line: 227, column: 21, scope: !10998)
!11021 = !DILocation(line: 227, column: 36, scope: !10998)
!11022 = !DILocation(line: 228, column: 69, scope: !10998)
!11023 = !DILocation(line: 228, column: 38, scope: !10998)
!11024 = !DILocation(line: 228, column: 32, scope: !10998)
!11025 = !DILocation(line: 228, column: 21, scope: !10998)
!11026 = !DILocation(line: 228, column: 36, scope: !10998)
!11027 = !DILocation(line: 229, column: 24, scope: !10998)
!11028 = !DILocation(line: 230, column: 17, scope: !10998)
!11029 = !DILocation(line: 231, column: 13, scope: !10994)
!11030 = !DILocation(line: 232, column: 9, scope: !10979)
!11031 = !DILocation(line: 218, column: 65, scope: !11032)
!11032 = !DILexicalBlockFile(scope: !10971, file: !1008, discriminator: 2)
!11033 = !DILocation(line: 218, column: 9, scope: !11032)
!11034 = distinct !{!11034, !11035}
!11035 = !DILocation(line: 218, column: 9, scope: !10961)
!11036 = !DILocation(line: 233, column: 5, scope: !10961)
!11037 = !DILocation(line: 235, column: 7, scope: !10873)
!11038 = !DILocation(line: 236, column: 30, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10873, file: !1008, line: 236, column: 5)
!11040 = !DILocation(line: 236, column: 16, scope: !11039)
!11041 = !DILocation(line: 236, column: 19, scope: !11039)
!11042 = !DILocation(line: 236, column: 14, scope: !11039)
!11043 = !DILocation(line: 236, column: 10, scope: !11039)
!11044 = !DILocation(line: 236, column: 35, scope: !11045)
!11045 = !DILexicalBlockFile(scope: !11046, file: !1008, discriminator: 1)
!11046 = distinct !DILexicalBlock(scope: !11039, file: !1008, line: 236, column: 5)
!11047 = !DILocation(line: 236, column: 53, scope: !11045)
!11048 = !DILocation(line: 236, column: 41, scope: !11045)
!11049 = !DILocation(line: 236, column: 44, scope: !11045)
!11050 = !DILocation(line: 236, column: 39, scope: !11045)
!11051 = !DILocation(line: 236, column: 5, scope: !11045)
!11052 = !DILocalVariable(name: "hebap", scope: !11053, file: !1008, line: 237, type: !1015)
!11053 = distinct !DILexicalBlock(scope: !11046, file: !1008, line: 236, column: 65)
!11054 = !DILocation(line: 237, column: 13, scope: !11053)
!11055 = !DILocation(line: 237, column: 32, scope: !11053)
!11056 = !DILocation(line: 237, column: 21, scope: !11053)
!11057 = !DILocation(line: 237, column: 28, scope: !11053)
!11058 = !DILocation(line: 237, column: 24, scope: !11053)
!11059 = !DILocalVariable(name: "bits", scope: !11053, file: !1008, line: 238, type: !1015)
!11060 = !DILocation(line: 238, column: 13, scope: !11053)
!11061 = !DILocation(line: 238, column: 42, scope: !11053)
!11062 = !DILocation(line: 238, column: 20, scope: !11053)
!11063 = !DILocation(line: 239, column: 14, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11053, file: !1008, line: 239, column: 13)
!11065 = !DILocation(line: 239, column: 13, scope: !11053)
!11066 = !DILocation(line: 241, column: 22, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1008, line: 241, column: 13)
!11068 = distinct !DILexicalBlock(scope: !11064, file: !1008, line: 239, column: 21)
!11069 = !DILocation(line: 241, column: 18, scope: !11067)
!11070 = !DILocation(line: 241, column: 27, scope: !11071)
!11071 = !DILexicalBlockFile(scope: !11072, file: !1008, discriminator: 1)
!11072 = distinct !DILexicalBlock(scope: !11067, file: !1008, line: 241, column: 13)
!11073 = !DILocation(line: 241, column: 31, scope: !11071)
!11074 = !DILocation(line: 241, column: 13, scope: !11071)
!11075 = !DILocation(line: 242, column: 62, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11072, file: !1008, line: 241, column: 43)
!11077 = !DILocation(line: 242, column: 65, scope: !11076)
!11078 = !DILocation(line: 242, column: 50, scope: !11076)
!11079 = !DILocation(line: 242, column: 77, scope: !11076)
!11080 = !DILocation(line: 242, column: 89, scope: !11076)
!11081 = !DILocation(line: 242, column: 42, scope: !11076)
!11082 = !DILocation(line: 242, column: 17, scope: !11076)
!11083 = !DILocation(line: 242, column: 37, scope: !11076)
!11084 = !DILocation(line: 242, column: 33, scope: !11076)
!11085 = !DILocation(line: 242, column: 20, scope: !11076)
!11086 = !DILocation(line: 242, column: 47, scope: !11076)
!11087 = !DILocation(line: 243, column: 13, scope: !11076)
!11088 = !DILocation(line: 241, column: 39, scope: !11089)
!11089 = !DILexicalBlockFile(scope: !11072, file: !1008, discriminator: 2)
!11090 = !DILocation(line: 241, column: 13, scope: !11089)
!11091 = distinct !{!11091, !11092}
!11092 = !DILocation(line: 241, column: 13, scope: !11068)
!11093 = !DILocation(line: 244, column: 9, scope: !11068)
!11094 = !DILocation(line: 244, column: 20, scope: !11095)
!11095 = !DILexicalBlockFile(scope: !11096, file: !1008, discriminator: 1)
!11096 = distinct !DILexicalBlock(scope: !11064, file: !1008, line: 244, column: 20)
!11097 = !DILocation(line: 244, column: 26, scope: !11095)
!11098 = !DILocalVariable(name: "v", scope: !11099, file: !1008, line: 246, type: !1015)
!11099 = distinct !DILexicalBlock(scope: !11096, file: !1008, line: 244, column: 31)
!11100 = !DILocation(line: 246, column: 17, scope: !11099)
!11101 = !DILocation(line: 246, column: 30, scope: !11099)
!11102 = !DILocation(line: 246, column: 35, scope: !11099)
!11103 = !DILocation(line: 246, column: 21, scope: !11099)
!11104 = !DILocation(line: 247, column: 22, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11099, file: !1008, line: 247, column: 13)
!11106 = !DILocation(line: 247, column: 18, scope: !11105)
!11107 = !DILocation(line: 247, column: 27, scope: !11108)
!11108 = !DILexicalBlockFile(scope: !11109, file: !1008, discriminator: 1)
!11109 = distinct !DILexicalBlock(scope: !11105, file: !1008, line: 247, column: 13)
!11110 = !DILocation(line: 247, column: 31, scope: !11108)
!11111 = !DILocation(line: 247, column: 13, scope: !11108)
!11112 = !DILocation(line: 248, column: 79, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !1008, line: 247, column: 43)
!11114 = !DILocation(line: 248, column: 49, scope: !11113)
!11115 = !DILocation(line: 248, column: 76, scope: !11113)
!11116 = !DILocation(line: 248, column: 69, scope: !11113)
!11117 = !DILocation(line: 248, column: 84, scope: !11113)
!11118 = !DILocation(line: 248, column: 42, scope: !11113)
!11119 = !DILocation(line: 248, column: 17, scope: !11113)
!11120 = !DILocation(line: 248, column: 37, scope: !11113)
!11121 = !DILocation(line: 248, column: 33, scope: !11113)
!11122 = !DILocation(line: 248, column: 20, scope: !11113)
!11123 = !DILocation(line: 248, column: 47, scope: !11113)
!11124 = !DILocation(line: 249, column: 13, scope: !11113)
!11125 = !DILocation(line: 247, column: 39, scope: !11126)
!11126 = !DILexicalBlockFile(scope: !11109, file: !1008, discriminator: 2)
!11127 = !DILocation(line: 247, column: 13, scope: !11126)
!11128 = distinct !{!11128, !11129}
!11129 = !DILocation(line: 247, column: 13, scope: !11099)
!11130 = !DILocation(line: 250, column: 9, scope: !11099)
!11131 = !DILocalVariable(name: "gbits", scope: !11132, file: !1008, line: 252, type: !1015)
!11132 = distinct !DILexicalBlock(scope: !11096, file: !1008, line: 250, column: 16)
!11133 = !DILocation(line: 252, column: 17, scope: !11132)
!11134 = !DILocalVariable(name: "log_gain", scope: !11132, file: !1008, line: 252, type: !1015)
!11135 = !DILocation(line: 252, column: 24, scope: !11132)
!11136 = !DILocation(line: 253, column: 17, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11132, file: !1008, line: 253, column: 17)
!11138 = !DILocation(line: 253, column: 26, scope: !11137)
!11139 = !DILocation(line: 253, column: 41, scope: !11137)
!11140 = !DILocation(line: 253, column: 44, scope: !11141)
!11141 = !DILexicalBlockFile(scope: !11137, file: !1008, discriminator: 1)
!11142 = !DILocation(line: 253, column: 52, scope: !11141)
!11143 = !DILocation(line: 253, column: 50, scope: !11141)
!11144 = !DILocation(line: 253, column: 17, scope: !11141)
!11145 = !DILocation(line: 254, column: 39, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11137, file: !1008, line: 253, column: 61)
!11147 = !DILocation(line: 254, column: 28, scope: !11146)
!11148 = !DILocation(line: 254, column: 26, scope: !11146)
!11149 = !DILocation(line: 255, column: 13, scope: !11146)
!11150 = !DILocation(line: 256, column: 26, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11137, file: !1008, line: 255, column: 20)
!11152 = !DILocation(line: 258, column: 21, scope: !11132)
!11153 = !DILocation(line: 258, column: 28, scope: !11132)
!11154 = !DILocation(line: 258, column: 26, scope: !11132)
!11155 = !DILocation(line: 258, column: 19, scope: !11132)
!11156 = !DILocation(line: 260, column: 22, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11132, file: !1008, line: 260, column: 13)
!11158 = !DILocation(line: 260, column: 18, scope: !11157)
!11159 = !DILocation(line: 260, column: 27, scope: !11160)
!11160 = !DILexicalBlockFile(scope: !11161, file: !1008, discriminator: 1)
!11161 = distinct !DILexicalBlock(scope: !11157, file: !1008, line: 260, column: 13)
!11162 = !DILocation(line: 260, column: 31, scope: !11160)
!11163 = !DILocation(line: 260, column: 13, scope: !11160)
!11164 = !DILocalVariable(name: "mant", scope: !11165, file: !1008, line: 261, type: !1015)
!11165 = distinct !DILexicalBlock(scope: !11161, file: !1008, line: 260, column: 43)
!11166 = !DILocation(line: 261, column: 21, scope: !11165)
!11167 = !DILocation(line: 261, column: 38, scope: !11165)
!11168 = !DILocation(line: 261, column: 43, scope: !11165)
!11169 = !DILocation(line: 261, column: 28, scope: !11165)
!11170 = !DILocation(line: 262, column: 21, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11165, file: !1008, line: 262, column: 21)
!11172 = !DILocation(line: 262, column: 30, scope: !11171)
!11173 = !DILocation(line: 262, column: 33, scope: !11174)
!11174 = !DILexicalBlockFile(scope: !11171, file: !1008, discriminator: 1)
!11175 = !DILocation(line: 262, column: 49, scope: !11174)
!11176 = !DILocation(line: 262, column: 54, scope: !11174)
!11177 = !DILocation(line: 262, column: 45, scope: !11174)
!11178 = !DILocation(line: 262, column: 41, scope: !11174)
!11179 = !DILocation(line: 262, column: 38, scope: !11174)
!11180 = !DILocation(line: 262, column: 21, scope: !11174)
!11181 = !DILocalVariable(name: "b", scope: !11182, file: !1008, line: 264, type: !1015)
!11182 = distinct !DILexicalBlock(scope: !11171, file: !1008, line: 262, column: 60)
!11183 = !DILocation(line: 264, column: 25, scope: !11182)
!11184 = !DILocalVariable(name: "mbits", scope: !11182, file: !1008, line: 265, type: !1015)
!11185 = !DILocation(line: 265, column: 25, scope: !11182)
!11186 = !DILocation(line: 265, column: 33, scope: !11182)
!11187 = !DILocation(line: 265, column: 45, scope: !11182)
!11188 = !DILocation(line: 265, column: 43, scope: !11182)
!11189 = !DILocation(line: 265, column: 38, scope: !11182)
!11190 = !DILocation(line: 266, column: 38, scope: !11182)
!11191 = !DILocation(line: 266, column: 43, scope: !11182)
!11192 = !DILocation(line: 266, column: 28, scope: !11182)
!11193 = !DILocation(line: 266, column: 26, scope: !11182)
!11194 = !DILocation(line: 267, column: 39, scope: !11182)
!11195 = !DILocation(line: 267, column: 55, scope: !11182)
!11196 = !DILocation(line: 267, column: 61, scope: !11182)
!11197 = !DILocation(line: 267, column: 52, scope: !11182)
!11198 = !DILocation(line: 267, column: 45, scope: !11182)
!11199 = !DILocation(line: 267, column: 26, scope: !11182)
!11200 = !DILocation(line: 269, column: 25, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11182, file: !1008, line: 269, column: 25)
!11202 = !DILocation(line: 269, column: 30, scope: !11201)
!11203 = !DILocation(line: 269, column: 25, scope: !11182)
!11204 = !DILocation(line: 270, column: 40, scope: !11201)
!11205 = !DILocation(line: 270, column: 38, scope: !11201)
!11206 = !DILocation(line: 270, column: 31, scope: !11201)
!11207 = !DILocation(line: 270, column: 27, scope: !11201)
!11208 = !DILocation(line: 270, column: 25, scope: !11201)
!11209 = !DILocation(line: 272, column: 62, scope: !11201)
!11210 = !DILocation(line: 272, column: 70, scope: !11201)
!11211 = !DILocation(line: 272, column: 29, scope: !11201)
!11212 = !DILocation(line: 272, column: 53, scope: !11201)
!11213 = !DILocation(line: 272, column: 58, scope: !11201)
!11214 = !DILocation(line: 272, column: 74, scope: !11201)
!11215 = !DILocation(line: 272, column: 27, scope: !11201)
!11216 = !DILocation(line: 273, column: 64, scope: !11182)
!11217 = !DILocation(line: 273, column: 72, scope: !11182)
!11218 = !DILocation(line: 273, column: 31, scope: !11182)
!11219 = !DILocation(line: 273, column: 55, scope: !11182)
!11220 = !DILocation(line: 273, column: 60, scope: !11182)
!11221 = !DILocation(line: 273, column: 87, scope: !11182)
!11222 = !DILocation(line: 273, column: 78, scope: !11182)
!11223 = !DILocation(line: 273, column: 76, scope: !11182)
!11224 = !DILocation(line: 273, column: 93, scope: !11182)
!11225 = !DILocation(line: 273, column: 102, scope: !11182)
!11226 = !DILocation(line: 273, column: 100, scope: !11182)
!11227 = !DILocation(line: 273, column: 26, scope: !11182)
!11228 = !DILocation(line: 274, column: 17, scope: !11182)
!11229 = !DILocation(line: 276, column: 40, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11171, file: !1008, line: 274, column: 24)
!11231 = !DILocation(line: 276, column: 38, scope: !11230)
!11232 = !DILocation(line: 276, column: 32, scope: !11230)
!11233 = !DILocation(line: 276, column: 26, scope: !11230)
!11234 = !DILocation(line: 277, column: 26, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11230, file: !1008, line: 277, column: 25)
!11236 = !DILocation(line: 277, column: 25, scope: !11230)
!11237 = !DILocation(line: 279, column: 54, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11235, file: !1008, line: 277, column: 36)
!11239 = !DILocation(line: 279, column: 59, scope: !11238)
!11240 = !DILocation(line: 279, column: 34, scope: !11238)
!11241 = !DILocation(line: 279, column: 74, scope: !11238)
!11242 = !DILocation(line: 279, column: 65, scope: !11238)
!11243 = !DILocation(line: 279, column: 63, scope: !11238)
!11244 = !DILocation(line: 279, column: 80, scope: !11238)
!11245 = !DILocation(line: 279, column: 30, scope: !11238)
!11246 = !DILocation(line: 280, column: 21, scope: !11238)
!11247 = !DILocation(line: 282, column: 49, scope: !11165)
!11248 = !DILocation(line: 282, column: 42, scope: !11165)
!11249 = !DILocation(line: 282, column: 17, scope: !11165)
!11250 = !DILocation(line: 282, column: 37, scope: !11165)
!11251 = !DILocation(line: 282, column: 33, scope: !11165)
!11252 = !DILocation(line: 282, column: 20, scope: !11165)
!11253 = !DILocation(line: 282, column: 47, scope: !11165)
!11254 = !DILocation(line: 283, column: 13, scope: !11165)
!11255 = !DILocation(line: 260, column: 39, scope: !11256)
!11256 = !DILexicalBlockFile(scope: !11161, file: !1008, discriminator: 2)
!11257 = !DILocation(line: 260, column: 13, scope: !11256)
!11258 = distinct !{!11258, !11259}
!11259 = !DILocation(line: 260, column: 13, scope: !11132)
!11260 = !DILocation(line: 285, column: 35, scope: !11053)
!11261 = !DILocation(line: 285, column: 15, scope: !11053)
!11262 = !DILocation(line: 285, column: 31, scope: !11053)
!11263 = !DILocation(line: 285, column: 18, scope: !11053)
!11264 = !DILocation(line: 285, column: 9, scope: !11053)
!11265 = !DILocation(line: 286, column: 5, scope: !11053)
!11266 = !DILocation(line: 236, column: 61, scope: !11267)
!11267 = !DILexicalBlockFile(scope: !11046, file: !1008, discriminator: 2)
!11268 = !DILocation(line: 236, column: 5, scope: !11267)
!11269 = distinct !{!11269, !11270}
!11270 = !DILocation(line: 236, column: 5, scope: !10873)
!11271 = !DILocation(line: 287, column: 1, scope: !10873)
!11272 = distinct !DISubprogram(name: "av_lfg_get", scope: !2025, file: !2025, line: 47, type: !11273, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{!1016, !11275}
!11275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64, align: 64)
!11276 = !DILocalVariable(name: "c", arg: 1, scope: !11272, file: !2025, line: 47, type: !11275)
!11277 = !DILocation(line: 47, column: 46, scope: !11272)
!11278 = !DILocation(line: 48, column: 41, scope: !11272)
!11279 = !DILocation(line: 48, column: 44, scope: !11272)
!11280 = !DILocation(line: 48, column: 49, scope: !11272)
!11281 = !DILocation(line: 48, column: 54, scope: !11272)
!11282 = !DILocation(line: 48, column: 31, scope: !11272)
!11283 = !DILocation(line: 48, column: 34, scope: !11272)
!11284 = !DILocation(line: 48, column: 72, scope: !11272)
!11285 = !DILocation(line: 48, column: 75, scope: !11272)
!11286 = !DILocation(line: 48, column: 80, scope: !11272)
!11287 = !DILocation(line: 48, column: 85, scope: !11272)
!11288 = !DILocation(line: 48, column: 62, scope: !11272)
!11289 = !DILocation(line: 48, column: 65, scope: !11272)
!11290 = !DILocation(line: 48, column: 60, scope: !11272)
!11291 = !DILocation(line: 48, column: 14, scope: !11272)
!11292 = !DILocation(line: 48, column: 17, scope: !11272)
!11293 = !DILocation(line: 48, column: 23, scope: !11272)
!11294 = !DILocation(line: 48, column: 5, scope: !11272)
!11295 = !DILocation(line: 48, column: 8, scope: !11272)
!11296 = !DILocation(line: 48, column: 29, scope: !11272)
!11297 = !DILocation(line: 49, column: 21, scope: !11272)
!11298 = !DILocation(line: 49, column: 24, scope: !11272)
!11299 = !DILocation(line: 49, column: 29, scope: !11272)
!11300 = !DILocation(line: 49, column: 32, scope: !11272)
!11301 = !DILocation(line: 49, column: 12, scope: !11272)
!11302 = !DILocation(line: 49, column: 15, scope: !11272)
!11303 = !DILocation(line: 49, column: 5, scope: !11272)
!11304 = distinct !DISubprogram(name: "get_sbits", scope: !1862, file: !1862, line: 361, type: !11305, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!1015, !3872, !1015}
!11307 = !DILocation(line: 66, column: 98, scope: !7545, inlinedAt: !11308)
!11308 = distinct !DILocation(line: 370, column: 16, scope: !11304)
!11309 = !DILocalVariable(name: "s", arg: 1, scope: !11304, file: !1862, line: 361, type: !3872)
!11310 = !DILocation(line: 361, column: 44, scope: !11304)
!11311 = !DILocalVariable(name: "n", arg: 2, scope: !11304, file: !1862, line: 361, type: !1015)
!11312 = !DILocation(line: 361, column: 51, scope: !11304)
!11313 = !DILocalVariable(name: "tmp", scope: !11304, file: !1862, line: 363, type: !1015)
!11314 = !DILocation(line: 363, column: 18, scope: !11304)
!11315 = !DILocalVariable(name: "re_index", scope: !11304, file: !1862, line: 368, type: !1016)
!11316 = !DILocation(line: 368, column: 18, scope: !11304)
!11317 = !DILocation(line: 368, column: 30, scope: !11304)
!11318 = !DILocation(line: 368, column: 34, scope: !11304)
!11319 = !DILocalVariable(name: "re_cache", scope: !11304, file: !1862, line: 368, type: !1016)
!11320 = !DILocation(line: 368, column: 78, scope: !11304)
!11321 = !DILocalVariable(name: "re_size_plus8", scope: !11304, file: !1862, line: 368, type: !1016)
!11322 = !DILocation(line: 368, column: 101, scope: !11304)
!11323 = !DILocation(line: 368, column: 118, scope: !11304)
!11324 = !DILocation(line: 368, column: 122, scope: !11304)
!11325 = !DILocation(line: 370, column: 60, scope: !11304)
!11326 = !DILocation(line: 370, column: 64, scope: !11304)
!11327 = !DILocation(line: 370, column: 74, scope: !11304)
!11328 = !DILocation(line: 370, column: 83, scope: !11304)
!11329 = !DILocation(line: 370, column: 71, scope: !11304)
!11330 = !DILocation(line: 370, column: 92, scope: !11304)
!11331 = !DILocation(line: 370, column: 16, scope: !11304)
!11332 = !DILocation(line: 68, column: 16, scope: !7545, inlinedAt: !11308)
!11333 = !DILocation(line: 68, column: 19, scope: !7545, inlinedAt: !11308)
!11334 = !DILocation(line: 68, column: 24, scope: !7545, inlinedAt: !11308)
!11335 = !DILocation(line: 68, column: 38, scope: !7545, inlinedAt: !11308)
!11336 = !DILocation(line: 68, column: 41, scope: !7545, inlinedAt: !11308)
!11337 = !DILocation(line: 68, column: 46, scope: !7545, inlinedAt: !11308)
!11338 = !DILocation(line: 68, column: 34, scope: !7545, inlinedAt: !11308)
!11339 = !DILocation(line: 68, column: 57, scope: !7545, inlinedAt: !11308)
!11340 = !DILocation(line: 68, column: 69, scope: !7545, inlinedAt: !11308)
!11341 = !DILocation(line: 68, column: 72, scope: !7545, inlinedAt: !11308)
!11342 = !DILocation(line: 68, column: 79, scope: !7545, inlinedAt: !11308)
!11343 = !DILocation(line: 68, column: 84, scope: !7545, inlinedAt: !11308)
!11344 = !DILocation(line: 68, column: 99, scope: !7545, inlinedAt: !11308)
!11345 = !DILocation(line: 68, column: 102, scope: !7545, inlinedAt: !11308)
!11346 = !DILocation(line: 68, column: 109, scope: !7545, inlinedAt: !11308)
!11347 = !DILocation(line: 68, column: 114, scope: !7545, inlinedAt: !11308)
!11348 = !DILocation(line: 68, column: 94, scope: !7545, inlinedAt: !11308)
!11349 = !DILocation(line: 68, column: 63, scope: !7545, inlinedAt: !11308)
!11350 = !DILocation(line: 370, column: 100, scope: !11304)
!11351 = !DILocation(line: 370, column: 109, scope: !11304)
!11352 = !DILocation(line: 370, column: 96, scope: !11304)
!11353 = !DILocation(line: 370, column: 14, scope: !11304)
!11354 = !DILocation(line: 371, column: 21, scope: !11304)
!11355 = !DILocation(line: 371, column: 31, scope: !11304)
!11356 = !DILocation(line: 371, column: 11, scope: !11304)
!11357 = !DILocation(line: 371, column: 9, scope: !11304)
!11358 = !DILocation(line: 372, column: 18, scope: !11304)
!11359 = !DILocation(line: 372, column: 36, scope: !11304)
!11360 = !DILocation(line: 372, column: 48, scope: !11304)
!11361 = !DILocation(line: 372, column: 45, scope: !11304)
!11362 = !DILocation(line: 372, column: 33, scope: !11304)
!11363 = !DILocation(line: 372, column: 17, scope: !11304)
!11364 = !DILocation(line: 372, column: 55, scope: !11365)
!11365 = !DILexicalBlockFile(scope: !11304, file: !1862, discriminator: 1)
!11366 = !DILocation(line: 372, column: 67, scope: !11365)
!11367 = !DILocation(line: 372, column: 64, scope: !11365)
!11368 = !DILocation(line: 372, column: 17, scope: !11365)
!11369 = !DILocation(line: 372, column: 74, scope: !11370)
!11370 = !DILexicalBlockFile(scope: !11304, file: !1862, discriminator: 2)
!11371 = !DILocation(line: 372, column: 17, scope: !11370)
!11372 = !DILocation(line: 372, column: 17, scope: !11373)
!11373 = !DILexicalBlockFile(scope: !11304, file: !1862, discriminator: 3)
!11374 = !DILocation(line: 372, column: 14, scope: !11373)
!11375 = !DILocation(line: 373, column: 18, scope: !11304)
!11376 = !DILocation(line: 373, column: 6, scope: !11304)
!11377 = !DILocation(line: 373, column: 10, scope: !11304)
!11378 = !DILocation(line: 373, column: 16, scope: !11304)
!11379 = !DILocation(line: 375, column: 12, scope: !11304)
!11380 = !DILocation(line: 375, column: 5, scope: !11304)
!11381 = distinct !DISubprogram(name: "NEG_SSR32", scope: !7696, file: !7696, line: 115, type: !11382, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!1047, !1047, !1278}
!11384 = !DILocalVariable(name: "a", arg: 1, scope: !11381, file: !7696, line: 115, type: !1047)
!11385 = !DILocation(line: 115, column: 42, scope: !11381)
!11386 = !DILocalVariable(name: "s", arg: 2, scope: !11381, file: !7696, line: 115, type: !1278)
!11387 = !DILocation(line: 115, column: 52, scope: !11381)
!11388 = !DILocation(line: 116, column: 5, scope: !11381)
!11389 = !DILocation(line: 118, column: 29, scope: !11381)
!11390 = !DILocation(line: 118, column: 28, scope: !11381)
!11391 = !DILocation(line: 118, column: 18, scope: !11381)
!11392 = !{i32 110405, i32 110419}
!11393 = !DILocation(line: 120, column: 12, scope: !11381)
!11394 = !DILocation(line: 120, column: 5, scope: !11381)
!11395 = distinct !DISubprogram(name: "idct6", scope: !1008, file: !1008, line: 166, type: !11396, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!11396 = !DISubroutineType(types: !11397)
!11397 = !{null, !1465}
!11398 = !DILocalVariable(name: "pre_mant", arg: 1, scope: !11395, file: !1008, line: 166, type: !1465)
!11399 = !DILocation(line: 166, column: 23, scope: !11395)
!11400 = !DILocalVariable(name: "tmp", scope: !11395, file: !1008, line: 168, type: !1015)
!11401 = !DILocation(line: 168, column: 9, scope: !11395)
!11402 = !DILocalVariable(name: "even0", scope: !11395, file: !1008, line: 169, type: !1015)
!11403 = !DILocation(line: 169, column: 9, scope: !11395)
!11404 = !DILocalVariable(name: "even1", scope: !11395, file: !1008, line: 169, type: !1015)
!11405 = !DILocation(line: 169, column: 16, scope: !11395)
!11406 = !DILocalVariable(name: "even2", scope: !11395, file: !1008, line: 169, type: !1015)
!11407 = !DILocation(line: 169, column: 23, scope: !11395)
!11408 = !DILocalVariable(name: "odd0", scope: !11395, file: !1008, line: 169, type: !1015)
!11409 = !DILocation(line: 169, column: 30, scope: !11395)
!11410 = !DILocalVariable(name: "odd1", scope: !11395, file: !1008, line: 169, type: !1015)
!11411 = !DILocation(line: 169, column: 36, scope: !11395)
!11412 = !DILocalVariable(name: "odd2", scope: !11395, file: !1008, line: 169, type: !1015)
!11413 = !DILocation(line: 169, column: 42, scope: !11395)
!11414 = !DILocation(line: 171, column: 12, scope: !11395)
!11415 = !DILocation(line: 171, column: 26, scope: !11395)
!11416 = !DILocation(line: 171, column: 24, scope: !11395)
!11417 = !DILocation(line: 171, column: 40, scope: !11395)
!11418 = !DILocation(line: 171, column: 38, scope: !11395)
!11419 = !DILocation(line: 171, column: 10, scope: !11395)
!11420 = !DILocation(line: 173, column: 15, scope: !11395)
!11421 = !DILocation(line: 173, column: 27, scope: !11395)
!11422 = !DILocation(line: 173, column: 41, scope: !11395)
!11423 = !DILocation(line: 173, column: 13, scope: !11395)
!11424 = !DILocation(line: 173, column: 11, scope: !11395)
!11425 = !DILocation(line: 174, column: 13, scope: !11395)
!11426 = !DILocation(line: 174, column: 25, scope: !11395)
!11427 = !DILocation(line: 174, column: 39, scope: !11395)
!11428 = !DILocation(line: 174, column: 11, scope: !11395)
!11429 = !DILocation(line: 174, column: 9, scope: !11395)
!11430 = !DILocation(line: 175, column: 14, scope: !11395)
!11431 = !DILocation(line: 175, column: 28, scope: !11395)
!11432 = !DILocation(line: 175, column: 26, scope: !11395)
!11433 = !DILocation(line: 175, column: 13, scope: !11395)
!11434 = !DILocation(line: 175, column: 41, scope: !11395)
!11435 = !DILocation(line: 175, column: 54, scope: !11395)
!11436 = !DILocation(line: 175, column: 12, scope: !11395)
!11437 = !DILocation(line: 175, column: 10, scope: !11395)
!11438 = !DILocation(line: 177, column: 13, scope: !11395)
!11439 = !DILocation(line: 177, column: 28, scope: !11395)
!11440 = !DILocation(line: 177, column: 32, scope: !11395)
!11441 = !DILocation(line: 177, column: 25, scope: !11395)
!11442 = !DILocation(line: 177, column: 11, scope: !11395)
!11443 = !DILocation(line: 178, column: 13, scope: !11395)
!11444 = !DILocation(line: 178, column: 27, scope: !11395)
!11445 = !DILocation(line: 178, column: 25, scope: !11395)
!11446 = !DILocation(line: 178, column: 11, scope: !11395)
!11447 = !DILocation(line: 180, column: 11, scope: !11395)
!11448 = !DILocation(line: 180, column: 9, scope: !11395)
!11449 = !DILocation(line: 181, column: 13, scope: !11395)
!11450 = !DILocation(line: 181, column: 19, scope: !11395)
!11451 = !DILocation(line: 181, column: 17, scope: !11395)
!11452 = !DILocation(line: 181, column: 11, scope: !11395)
!11453 = !DILocation(line: 182, column: 13, scope: !11395)
!11454 = !DILocation(line: 182, column: 19, scope: !11395)
!11455 = !DILocation(line: 182, column: 17, scope: !11395)
!11456 = !DILocation(line: 182, column: 11, scope: !11395)
!11457 = !DILocation(line: 184, column: 11, scope: !11395)
!11458 = !DILocation(line: 184, column: 9, scope: !11395)
!11459 = !DILocation(line: 185, column: 12, scope: !11395)
!11460 = !DILocation(line: 185, column: 18, scope: !11395)
!11461 = !DILocation(line: 185, column: 16, scope: !11395)
!11462 = !DILocation(line: 185, column: 32, scope: !11395)
!11463 = !DILocation(line: 185, column: 30, scope: !11395)
!11464 = !DILocation(line: 185, column: 10, scope: !11395)
!11465 = !DILocation(line: 186, column: 12, scope: !11395)
!11466 = !DILocation(line: 186, column: 18, scope: !11395)
!11467 = !DILocation(line: 186, column: 16, scope: !11395)
!11468 = !DILocation(line: 186, column: 32, scope: !11395)
!11469 = !DILocation(line: 186, column: 30, scope: !11395)
!11470 = !DILocation(line: 186, column: 10, scope: !11395)
!11471 = !DILocation(line: 188, column: 19, scope: !11395)
!11472 = !DILocation(line: 188, column: 27, scope: !11395)
!11473 = !DILocation(line: 188, column: 25, scope: !11395)
!11474 = !DILocation(line: 188, column: 5, scope: !11395)
!11475 = !DILocation(line: 188, column: 17, scope: !11395)
!11476 = !DILocation(line: 189, column: 19, scope: !11395)
!11477 = !DILocation(line: 189, column: 27, scope: !11395)
!11478 = !DILocation(line: 189, column: 25, scope: !11395)
!11479 = !DILocation(line: 189, column: 5, scope: !11395)
!11480 = !DILocation(line: 189, column: 17, scope: !11395)
!11481 = !DILocation(line: 190, column: 19, scope: !11395)
!11482 = !DILocation(line: 190, column: 27, scope: !11395)
!11483 = !DILocation(line: 190, column: 25, scope: !11395)
!11484 = !DILocation(line: 190, column: 5, scope: !11395)
!11485 = !DILocation(line: 190, column: 17, scope: !11395)
!11486 = !DILocation(line: 191, column: 19, scope: !11395)
!11487 = !DILocation(line: 191, column: 27, scope: !11395)
!11488 = !DILocation(line: 191, column: 25, scope: !11395)
!11489 = !DILocation(line: 191, column: 5, scope: !11395)
!11490 = !DILocation(line: 191, column: 17, scope: !11395)
!11491 = !DILocation(line: 192, column: 19, scope: !11395)
!11492 = !DILocation(line: 192, column: 27, scope: !11395)
!11493 = !DILocation(line: 192, column: 25, scope: !11395)
!11494 = !DILocation(line: 192, column: 5, scope: !11395)
!11495 = !DILocation(line: 192, column: 17, scope: !11395)
!11496 = !DILocation(line: 193, column: 19, scope: !11395)
!11497 = !DILocation(line: 193, column: 27, scope: !11395)
!11498 = !DILocation(line: 193, column: 25, scope: !11395)
!11499 = !DILocation(line: 193, column: 5, scope: !11395)
!11500 = !DILocation(line: 193, column: 17, scope: !11395)
!11501 = !DILocation(line: 194, column: 1, scope: !11395)
!11502 = distinct !DISubprogram(name: "sign_extend", scope: !10265, file: !10265, line: 130, type: !11503, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1847)
!11503 = !DISubroutineType(types: !11504)
!11504 = !{!1015, !1015, !1016}
!11505 = !DILocalVariable(name: "val", arg: 1, scope: !11502, file: !10265, line: 130, type: !1015)
!11506 = !DILocation(line: 130, column: 58, scope: !11502)
!11507 = !DILocalVariable(name: "bits", arg: 2, scope: !11502, file: !10265, line: 130, type: !1016)
!11508 = !DILocation(line: 130, column: 72, scope: !11502)
!11509 = !DILocalVariable(name: "shift", scope: !11502, file: !10265, line: 132, type: !1016)
!11510 = !DILocation(line: 132, column: 14, scope: !11502)
!11511 = !DILocation(line: 132, column: 40, scope: !11502)
!11512 = !DILocation(line: 132, column: 38, scope: !11502)
!11513 = !DILocation(line: 132, column: 22, scope: !11502)
!11514 = !DILocalVariable(name: "v", scope: !11502, file: !10265, line: 133, type: !11515)
!11515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11502, file: !10265, line: 133, size: 32, align: 32, elements: !11516)
!11516 = !{!11517, !11518}
!11517 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !11515, file: !10265, line: 133, baseType: !1016, size: 32, align: 32)
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !11515, file: !10265, line: 133, baseType: !1015, size: 32, align: 32)
!11519 = !DILocation(line: 133, column: 34, scope: !11502)
!11520 = !DILocation(line: 133, column: 38, scope: !11502)
!11521 = !DILocation(line: 133, column: 51, scope: !11502)
!11522 = !DILocation(line: 133, column: 58, scope: !11502)
!11523 = !DILocation(line: 133, column: 55, scope: !11502)
!11524 = !DILocation(line: 134, column: 14, scope: !11502)
!11525 = !DILocation(line: 134, column: 19, scope: !11502)
!11526 = !DILocation(line: 134, column: 16, scope: !11502)
!11527 = !DILocation(line: 134, column: 5, scope: !11502)
