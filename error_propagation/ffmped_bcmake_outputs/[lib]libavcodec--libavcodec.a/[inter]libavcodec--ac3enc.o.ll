; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3enc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3enc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AC3EncodeContext = type { %struct.AVClass*, %struct.AC3EncOptions, %struct.AVCodecContext*, %struct.PutBitContext, %struct.AudioDSPContext, %struct.AVFloatDSPContext*, %struct.MECmpContext, %struct.AC3DSPContext, %struct.FFTContext, i16*, [6 x %struct.AC3Block], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i16], i64, i64, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, [18 x i8], i32, i32, i32, i32, i32, i32, %struct.AC3BitAllocParameters, i32, [7 x i32], [7 x i32], i32, i32, i32, i16*, i16**, i8*, i8*, i32*, i32*, i8*, i8*, i16*, i16*, i16*, i16*, i8*, i8*, [7 x [6 x i8]], [7 x i8], i32, [7 x [6 x i8]], [7 x [6 x i8*]], i32, {}*, i32 (%struct.AC3EncodeContext*)*, i32 (%struct.AC3EncodeContext*)*, {}* }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AC3EncOptions = type { i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.AudioDSPContext = type { i32 (i16*, i16*, i32)*, void (i32*, i32*, i32, i32, i32)*, void (float*, float*, i32, float, float)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.AC3DSPContext = type { void (i8*, i32, i32)*, i32 (i16*, i32)*, void (i16*, i32, i32)*, void (i32*, i32, i32)*, void (i32*, float*, i32)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i8*, i32)*, i32 ([16 x i16]*)*, void (i8*, i32*, i32)*, void (i64*, i32*, i32*, i32)*, void (float*, float*, float*, i32)*, i32, i32, void (float**, float**, i32)*, void (i32**, i16**, i32)*, void (i16*, i16*, i16*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AC3Block = type { i32**, i32**, i8**, i8**, i16**, i16**, i16**, i16**, i8**, i8**, [7 x i8], i8, i32, [4 x i8], i32, i32, [7 x i8], i32, [7 x i8], [7 x i8], i32, i32, [7 x i32] }
%struct.AC3BitAllocParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AC3Mant = type { i16*, i16*, i16*, i32, i32, i32 }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }

@ff_ac3_channel_layouts = constant [19 x i64] [i64 4, i64 3, i64 259, i64 7, i64 1539, i64 51, i64 263, i64 1543, i64 55, i64 12, i64 11, i64 267, i64 15, i64 1547, i64 59, i64 271, i64 1551, i64 63, i64 0], align 16
@ff_ac3_rematrix_band_tab = external constant [5 x i8], align 1
@exponent_group_tab = internal global [2 x [3 x [256 x i8]]] zeroinitializer, align 16
@.str = private unnamed_addr constant [17 x i8] c"center_mix_level\00", align 1
@cmixlev_options = internal constant [3 x float] [float 0x3FE6A09E60000000, float 0x3FE306FE00000000, float 5.000000e-01], align 4
@.str.1 = private unnamed_addr constant [19 x i8] c"surround_mix_level\00", align 1
@surmixlev_options = internal constant [3 x float] [float 0x3FE6A09E60000000, float 5.000000e-01, float 0.000000e+00], align 4
@.str.2 = private unnamed_addr constant [22 x i8] c"ltrt_center_mix_level\00", align 1
@extmixlev_options = internal constant [8 x float] [float 0x3FF6A09E60000000, float 0x3FF306FE00000000, float 1.000000e+00, float 0x3FE306FE00000000, float 0x3FE6A09E60000000, float 0x3FE306FE00000000, float 5.000000e-01, float 0.000000e+00], align 16
@.str.3 = private unnamed_addr constant [22 x i8] c"loro_center_mix_level\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"ltrt_surround_mix_level\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"loro_surround_mix_level\00", align 1
@.str.6 = private unnamed_addr constant [65 x i8] c"invalid audio service type for the specified number of channels\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"mixing_level must be set if room_type is set\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"invalid mixing level. must be between 80dB and 111dB\0A\00", align 1
@ff_ac3_validate_metadata.warn_once = internal global i32 1, align 4
@.str.9 = private unnamed_addr constant [132 x i8] c"alternate bitstream syntax is not compatible with reduced samplerates. writing of extended bitstream information will be disabled.\0A\00", align 1
@exp_strategy_reuse_tab = internal constant [4 x [6 x i8]] [[6 x i8] c"\01\01\01\01\01\01", [6 x i8] c"\01\01\01\01\01\01", [6 x i8] c"\02\02\01\01\01\01", [6 x i8] c"\03\02\02\01\01\01"], align 16
@ff_ac3_fast_gain_tab = external constant [8 x i16], align 16
@ff_ac3_bap_tab = external constant [64 x i8], align 16
@ff_eac3_default_cpl_band_struct = external constant [18 x i8], align 16
@.str.10 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"requested %s is not valid. using default value: %0.3f\0A\00", align 1
@.str.15 = private unnamed_addr constant [92 x i8] c"No channel layout specified. The encoder will guess the layout, but it might be incorrect.\0A\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"invalid channel layout\0A\00", align 1
@ff_ac3_sample_rate_tab = external constant [3 x i16], align 2
@.str.17 = private unnamed_addr constant [21 x i8] c"invalid sample rate\0A\00", align 1
@.str.18 = private unnamed_addr constant [57 x i8] c"invalid bit rate. must be %d to %d for this sample rate\0A\00", align 1
@ff_ac3_bitrate_tab = external constant [19 x i16], align 16
@ff_ac3_frame_size_tab = external constant [38 x [3 x i16]], align 16
@.str.19 = private unnamed_addr constant [26 x i8] c"invalid cutoff frequency\0A\00", align 1
@ff_ac3_enc_channel_map = external constant [8 x [2 x [6 x i8]]], align 16
@ac3_bandwidth_tab = internal constant [5 x [3 x [19 x i8]]] [[3 x [19 x i8]] [[19 x i8] c"\00\00\00\0C\10 0000000000000", [19 x i8] c"\00\00\00\10\14$8888888888888", [19 x i8] c"\00\00\00 (<<<<<<<<<<<<<<"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\14\18 000000000", [19 x i8] c"\00\00\00\00\00\00\04\18\1C$888888888", [19 x i8] c"\00\00\00\00\00\00\14,4<<<<<<<<<<"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\10\18 (000000", [19 x i8] c"\00\00\00\00\00\00\00\00\04\14\1C$,888888", [19 x i8] c"\00\00\00\00\00\00\00\00\14(0<<<<<<<<"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\00\0C\18 000000", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\10\1C$888888", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00 0<<<<<<<"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\08\14 (0000", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\0C\18$,8888", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\1C,<<<<<<"]], align 16
@ac3_coupling_start_tab = internal constant [6 x [3 x [19 x i8]]] [[3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\01\01\07\08\0B\0C\FF\FF\FF\FF\FF\FF", [19 x i8] c"\00\00\00\00\00\00\01\03\05\07\0A\0C\0D\FF\FF\FF\FF\FF\FF", [19 x i8] c"\00\00\00\00\01\02\02\09\0D\0F\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\02\02\06\09\0B\0C\0D\FF\FF\FF\FF", [19 x i8] c"\00\00\00\00\00\00\00\00\02\02\06\09\0B\0C\0D\FF\FF\FF\FF", [19 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\02\02\06\09\0B\0C\0D\FF\FF\FF\FF", [19 x i8] c"\00\00\00\00\00\00\00\00\02\02\06\09\0B\0C\0D\FF\FF\FF\FF", [19 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\00\03\02\0A\0B\0B\0C\0C\0E\FF", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\03\02\0A\0B\0B\0C\0C\0E\FF", [19 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\00\03\02\0A\0B\0B\0C\0C\0E\FF", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\03\02\0A\0B\0B\0C\0C\0E\FF", [19 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [3 x [19 x i8]] [[19 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\01\06\08\0B\0C\0C\FF\FF", [19 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\01\06\08\0B\0C\0C\FF\FF", [19 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"]], align 16
@ff_ac3_slow_decay_tab = external constant [4 x i8], align 1
@ff_ac3_fast_decay_tab = external constant [4 x i8], align 1
@ff_ac3_slow_gain_tab = external constant [4 x i16], align 2
@ff_ac3_db_per_bit_tab = external constant [4 x i16], align 2
@ff_ac3_floor_tab = external constant [8 x i16], align 16
@count_frame_bits_fixed.frame_bits_inc = internal constant [8 x i32] [i32 0, i32 0, i32 2, i32 2, i32 2, i32 4, i32 2, i32 4], align 16
@.str.20 = private unnamed_addr constant [25 x i8] c"Cannot allocate memory.\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @ff_ac3_adjust_frame_size(%struct.AC3EncodeContext* %s) #0 !dbg !2182 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2183, metadata !2184), !dbg !2185
  br label %while.cond, !dbg !2186

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2187
  %bits_written = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 23, !dbg !2189
  %1 = load i64, i64* %bits_written, align 8, !dbg !2189
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2190
  %bit_rate = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 15, !dbg !2191
  %3 = load i32, i32* %bit_rate, align 8, !dbg !2191
  %conv = sext i32 %3 to i64, !dbg !2190
  %cmp = icmp sge i64 %1, %conv, !dbg !2192
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2193

land.rhs:                                         ; preds = %while.cond
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2194
  %samples_written = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 24, !dbg !2196
  %5 = load i64, i64* %samples_written, align 8, !dbg !2196
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2197
  %sample_rate = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 16, !dbg !2198
  %7 = load i32, i32* %sample_rate, align 4, !dbg !2198
  %conv2 = sext i32 %7 to i64, !dbg !2197
  %cmp3 = icmp sge i64 %5, %conv2, !dbg !2199
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !2200

while.body:                                       ; preds = %land.end
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2202
  %bit_rate5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 15, !dbg !2204
  %10 = load i32, i32* %bit_rate5, align 8, !dbg !2204
  %conv6 = sext i32 %10 to i64, !dbg !2202
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2205
  %bits_written7 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 23, !dbg !2206
  %12 = load i64, i64* %bits_written7, align 8, !dbg !2207
  %sub = sub nsw i64 %12, %conv6, !dbg !2207
  store i64 %sub, i64* %bits_written7, align 8, !dbg !2207
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2208
  %sample_rate8 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 16, !dbg !2209
  %14 = load i32, i32* %sample_rate8, align 4, !dbg !2209
  %conv9 = sext i32 %14 to i64, !dbg !2208
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2210
  %samples_written10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %15, i32 0, i32 24, !dbg !2211
  %16 = load i64, i64* %samples_written10, align 8, !dbg !2212
  %sub11 = sub nsw i64 %16, %conv9, !dbg !2212
  store i64 %sub11, i64* %samples_written10, align 8, !dbg !2212
  br label %while.cond, !dbg !2213, !llvm.loop !2215

while.end:                                        ; preds = %land.end
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2216
  %frame_size_min = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 19, !dbg !2217
  %18 = load i32, i32* %frame_size_min, align 8, !dbg !2217
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2218
  %bits_written12 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 23, !dbg !2219
  %20 = load i64, i64* %bits_written12, align 8, !dbg !2219
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2220
  %sample_rate13 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 16, !dbg !2221
  %22 = load i32, i32* %sample_rate13, align 4, !dbg !2221
  %conv14 = sext i32 %22 to i64, !dbg !2220
  %mul = mul nsw i64 %20, %conv14, !dbg !2222
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2223
  %samples_written15 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 24, !dbg !2224
  %24 = load i64, i64* %samples_written15, align 8, !dbg !2224
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2225
  %bit_rate16 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 15, !dbg !2226
  %26 = load i32, i32* %bit_rate16, align 8, !dbg !2226
  %conv17 = sext i32 %26 to i64, !dbg !2225
  %mul18 = mul nsw i64 %24, %conv17, !dbg !2227
  %cmp19 = icmp slt i64 %mul, %mul18, !dbg !2228
  %conv20 = zext i1 %cmp19 to i32, !dbg !2228
  %mul21 = mul nsw i32 2, %conv20, !dbg !2229
  %add = add nsw i32 %18, %mul21, !dbg !2230
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2231
  %frame_size = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 20, !dbg !2232
  store i32 %add, i32* %frame_size, align 4, !dbg !2233
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2234
  %frame_size22 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 20, !dbg !2235
  %29 = load i32, i32* %frame_size22, align 4, !dbg !2235
  %mul23 = mul nsw i32 %29, 8, !dbg !2236
  %conv24 = sext i32 %mul23 to i64, !dbg !2234
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2237
  %bits_written25 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 23, !dbg !2238
  %31 = load i64, i64* %bits_written25, align 8, !dbg !2239
  %add26 = add nsw i64 %31, %conv24, !dbg !2239
  store i64 %add26, i64* %bits_written25, align 8, !dbg !2239
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2240
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 18, !dbg !2241
  %33 = load i32, i32* %num_blocks, align 4, !dbg !2241
  %mul27 = mul nsw i32 256, %33, !dbg !2242
  %conv28 = sext i32 %mul27 to i64, !dbg !2243
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2244
  %samples_written29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 24, !dbg !2245
  %35 = load i64, i64* %samples_written29, align 8, !dbg !2246
  %add30 = add nsw i64 %35, %conv28, !dbg !2246
  store i64 %add30, i64* %samples_written29, align 8, !dbg !2246
  ret void, !dbg !2247
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @ff_ac3_compute_coupling_strategy(%struct.AC3EncodeContext* %s) #0 !dbg !2248 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %got_cpl_snr = alloca i32, align 4
  %num_cpl_blocks = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %block14 = alloca %struct.AC3Block*, align 8
  %block101 = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2249, metadata !2184), !dbg !2250
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2251, metadata !2184), !dbg !2252
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2253, metadata !2184), !dbg !2254
  call void @llvm.dbg.declare(metadata i32* %got_cpl_snr, metadata !2255, metadata !2184), !dbg !2256
  call void @llvm.dbg.declare(metadata i32* %num_cpl_blocks, metadata !2257, metadata !2184), !dbg !2258
  store i32 0, i32* %blk, align 4, !dbg !2259
  br label %for.cond, !dbg !2261

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !2262
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2265
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !2266
  %2 = load i32, i32* %num_blocks, align 4, !dbg !2266
  %cmp = icmp slt i32 %0, %2, !dbg !2267
  br i1 %cmp, label %for.body, label %for.end8, !dbg !2268

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !2269, metadata !2184), !dbg !2272
  %3 = load i32, i32* %blk, align 4, !dbg !2273
  %idxprom = sext i32 %3 to i64, !dbg !2274
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2274
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !2275
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !2274
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !2272
  store i32 1, i32* %ch, align 4, !dbg !2276
  br label %for.cond1, !dbg !2278

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %ch, align 4, !dbg !2279
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2282
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 25, !dbg !2283
  %7 = load i32, i32* %fbw_channels, align 8, !dbg !2283
  %cmp2 = icmp sle i32 %5, %7, !dbg !2284
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !2285

for.body3:                                        ; preds = %for.cond1
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2286
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 43, !dbg !2287
  %9 = load i32, i32* %cpl_on, align 8, !dbg !2287
  %conv = trunc i32 %9 to i8, !dbg !2286
  %10 = load i32, i32* %ch, align 4, !dbg !2288
  %idxprom4 = sext i32 %10 to i64, !dbg !2289
  %11 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2289
  %channel_in_cpl = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %11, i32 0, i32 16, !dbg !2290
  %arrayidx5 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl, i64 0, i64 %idxprom4, !dbg !2289
  store i8 %conv, i8* %arrayidx5, align 1, !dbg !2291
  br label %for.inc, !dbg !2289

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %ch, align 4, !dbg !2292
  %inc = add nsw i32 %12, 1, !dbg !2292
  store i32 %inc, i32* %ch, align 4, !dbg !2292
  br label %for.cond1, !dbg !2294, !llvm.loop !2295

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !2297

for.inc6:                                         ; preds = %for.end
  %13 = load i32, i32* %blk, align 4, !dbg !2298
  %inc7 = add nsw i32 %13, 1, !dbg !2298
  store i32 %inc7, i32* %blk, align 4, !dbg !2298
  br label %for.cond, !dbg !2300, !llvm.loop !2301

for.end8:                                         ; preds = %for.cond
  store i32 0, i32* %got_cpl_snr, align 4, !dbg !2303
  store i32 0, i32* %num_cpl_blocks, align 4, !dbg !2304
  store i32 0, i32* %blk, align 4, !dbg !2305
  br label %for.cond9, !dbg !2307

for.cond9:                                        ; preds = %for.inc89, %for.end8
  %14 = load i32, i32* %blk, align 4, !dbg !2308
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2311
  %num_blocks10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %15, i32 0, i32 18, !dbg !2312
  %16 = load i32, i32* %num_blocks10, align 4, !dbg !2312
  %cmp11 = icmp slt i32 %14, %16, !dbg !2313
  br i1 %cmp11, label %for.body13, label %for.end91, !dbg !2314

for.body13:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block14, metadata !2315, metadata !2184), !dbg !2317
  %17 = load i32, i32* %blk, align 4, !dbg !2318
  %idxprom15 = sext i32 %17 to i64, !dbg !2319
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2319
  %blocks16 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 10, !dbg !2320
  %arrayidx17 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks16, i64 0, i64 %idxprom15, !dbg !2319
  store %struct.AC3Block* %arrayidx17, %struct.AC3Block** %block14, align 8, !dbg !2317
  %19 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2321
  %num_cpl_channels = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %19, i32 0, i32 17, !dbg !2322
  store i32 0, i32* %num_cpl_channels, align 8, !dbg !2323
  store i32 1, i32* %ch, align 4, !dbg !2324
  br label %for.cond18, !dbg !2326

for.cond18:                                       ; preds = %for.inc28, %for.body13
  %20 = load i32, i32* %ch, align 4, !dbg !2327
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2330
  %fbw_channels19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 25, !dbg !2331
  %22 = load i32, i32* %fbw_channels19, align 8, !dbg !2331
  %cmp20 = icmp sle i32 %20, %22, !dbg !2332
  br i1 %cmp20, label %for.body22, label %for.end30, !dbg !2333

for.body22:                                       ; preds = %for.cond18
  %23 = load i32, i32* %ch, align 4, !dbg !2334
  %idxprom23 = sext i32 %23 to i64, !dbg !2335
  %24 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2335
  %channel_in_cpl24 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %24, i32 0, i32 16, !dbg !2336
  %arrayidx25 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl24, i64 0, i64 %idxprom23, !dbg !2335
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !2335
  %conv26 = zext i8 %25 to i32, !dbg !2335
  %26 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2337
  %num_cpl_channels27 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %26, i32 0, i32 17, !dbg !2338
  %27 = load i32, i32* %num_cpl_channels27, align 8, !dbg !2339
  %add = add nsw i32 %27, %conv26, !dbg !2339
  store i32 %add, i32* %num_cpl_channels27, align 8, !dbg !2339
  br label %for.inc28, !dbg !2337

for.inc28:                                        ; preds = %for.body22
  %28 = load i32, i32* %ch, align 4, !dbg !2340
  %inc29 = add nsw i32 %28, 1, !dbg !2340
  store i32 %inc29, i32* %ch, align 4, !dbg !2340
  br label %for.cond18, !dbg !2342, !llvm.loop !2343

for.end30:                                        ; preds = %for.cond18
  %29 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2345
  %num_cpl_channels31 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %29, i32 0, i32 17, !dbg !2346
  %30 = load i32, i32* %num_cpl_channels31, align 8, !dbg !2346
  %cmp32 = icmp sgt i32 %30, 1, !dbg !2347
  %conv33 = zext i1 %cmp32 to i32, !dbg !2347
  %31 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2348
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %31, i32 0, i32 15, !dbg !2349
  store i32 %conv33, i32* %cpl_in_use, align 4, !dbg !2350
  %32 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2351
  %cpl_in_use34 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %32, i32 0, i32 15, !dbg !2352
  %33 = load i32, i32* %cpl_in_use34, align 4, !dbg !2352
  %34 = load i32, i32* %num_cpl_blocks, align 4, !dbg !2353
  %add35 = add nsw i32 %34, %33, !dbg !2353
  store i32 %add35, i32* %num_cpl_blocks, align 4, !dbg !2353
  %35 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2354
  %cpl_in_use36 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %35, i32 0, i32 15, !dbg !2356
  %36 = load i32, i32* %cpl_in_use36, align 4, !dbg !2356
  %tobool = icmp ne i32 %36, 0, !dbg !2354
  br i1 %tobool, label %if.end, label %if.then, !dbg !2357

if.then:                                          ; preds = %for.end30
  %37 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2358
  %num_cpl_channels37 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %37, i32 0, i32 17, !dbg !2360
  store i32 0, i32* %num_cpl_channels37, align 8, !dbg !2361
  store i32 1, i32* %ch, align 4, !dbg !2362
  br label %for.cond38, !dbg !2364

for.cond38:                                       ; preds = %for.inc46, %if.then
  %38 = load i32, i32* %ch, align 4, !dbg !2365
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2368
  %fbw_channels39 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 25, !dbg !2369
  %40 = load i32, i32* %fbw_channels39, align 8, !dbg !2369
  %cmp40 = icmp sle i32 %38, %40, !dbg !2370
  br i1 %cmp40, label %for.body42, label %for.end48, !dbg !2371

for.body42:                                       ; preds = %for.cond38
  %41 = load i32, i32* %ch, align 4, !dbg !2372
  %idxprom43 = sext i32 %41 to i64, !dbg !2373
  %42 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2373
  %channel_in_cpl44 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %42, i32 0, i32 16, !dbg !2374
  %arrayidx45 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl44, i64 0, i64 %idxprom43, !dbg !2373
  store i8 0, i8* %arrayidx45, align 1, !dbg !2375
  br label %for.inc46, !dbg !2373

for.inc46:                                        ; preds = %for.body42
  %43 = load i32, i32* %ch, align 4, !dbg !2376
  %inc47 = add nsw i32 %43, 1, !dbg !2376
  store i32 %inc47, i32* %ch, align 4, !dbg !2376
  br label %for.cond38, !dbg !2378, !llvm.loop !2379

for.end48:                                        ; preds = %for.cond38
  br label %if.end, !dbg !2381

if.end:                                           ; preds = %for.end48, %for.end30
  %44 = load i32, i32* %blk, align 4, !dbg !2382
  %tobool49 = icmp ne i32 %44, 0, !dbg !2383
  %lnot = xor i1 %tobool49, true, !dbg !2383
  %lnot.ext = zext i1 %lnot to i32, !dbg !2383
  %45 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2384
  %new_cpl_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %45, i32 0, i32 14, !dbg !2385
  store i32 %lnot.ext, i32* %new_cpl_strategy, align 8, !dbg !2386
  %46 = load i32, i32* %blk, align 4, !dbg !2387
  %tobool50 = icmp ne i32 %46, 0, !dbg !2387
  br i1 %tobool50, label %if.then51, label %if.end76, !dbg !2389

if.then51:                                        ; preds = %if.end
  store i32 1, i32* %ch, align 4, !dbg !2390
  br label %for.cond52, !dbg !2393

for.cond52:                                       ; preds = %for.inc73, %if.then51
  %47 = load i32, i32* %ch, align 4, !dbg !2394
  %48 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2397
  %fbw_channels53 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %48, i32 0, i32 25, !dbg !2398
  %49 = load i32, i32* %fbw_channels53, align 8, !dbg !2398
  %cmp54 = icmp sle i32 %47, %49, !dbg !2399
  br i1 %cmp54, label %for.body56, label %for.end75, !dbg !2400

for.body56:                                       ; preds = %for.cond52
  %50 = load i32, i32* %ch, align 4, !dbg !2401
  %idxprom57 = sext i32 %50 to i64, !dbg !2404
  %51 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2404
  %channel_in_cpl58 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %51, i32 0, i32 16, !dbg !2405
  %arrayidx59 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl58, i64 0, i64 %idxprom57, !dbg !2404
  %52 = load i8, i8* %arrayidx59, align 1, !dbg !2404
  %conv60 = zext i8 %52 to i32, !dbg !2404
  %53 = load i32, i32* %ch, align 4, !dbg !2406
  %idxprom61 = sext i32 %53 to i64, !dbg !2407
  %54 = load i32, i32* %blk, align 4, !dbg !2408
  %sub = sub nsw i32 %54, 1, !dbg !2409
  %idxprom62 = sext i32 %sub to i64, !dbg !2407
  %55 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2407
  %blocks63 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %55, i32 0, i32 10, !dbg !2410
  %arrayidx64 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks63, i64 0, i64 %idxprom62, !dbg !2407
  %channel_in_cpl65 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx64, i32 0, i32 16, !dbg !2411
  %arrayidx66 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl65, i64 0, i64 %idxprom61, !dbg !2407
  %56 = load i8, i8* %arrayidx66, align 1, !dbg !2407
  %conv67 = zext i8 %56 to i32, !dbg !2407
  %cmp68 = icmp ne i32 %conv60, %conv67, !dbg !2412
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !2413

if.then70:                                        ; preds = %for.body56
  %57 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2414
  %new_cpl_strategy71 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %57, i32 0, i32 14, !dbg !2416
  store i32 1, i32* %new_cpl_strategy71, align 8, !dbg !2417
  br label %for.end75, !dbg !2418

if.end72:                                         ; preds = %for.body56
  br label %for.inc73, !dbg !2419

for.inc73:                                        ; preds = %if.end72
  %58 = load i32, i32* %ch, align 4, !dbg !2420
  %inc74 = add nsw i32 %58, 1, !dbg !2420
  store i32 %inc74, i32* %ch, align 4, !dbg !2420
  br label %for.cond52, !dbg !2422, !llvm.loop !2423

for.end75:                                        ; preds = %if.then70, %for.cond52
  br label %if.end76, !dbg !2425

if.end76:                                         ; preds = %for.end75, %if.end
  %59 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2426
  %new_cpl_strategy77 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %59, i32 0, i32 14, !dbg !2427
  %60 = load i32, i32* %new_cpl_strategy77, align 8, !dbg !2427
  %61 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2428
  %new_cpl_leak = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %61, i32 0, i32 21, !dbg !2429
  store i32 %60, i32* %new_cpl_leak, align 8, !dbg !2430
  %62 = load i32, i32* %blk, align 4, !dbg !2431
  %tobool78 = icmp ne i32 %62, 0, !dbg !2431
  br i1 %tobool78, label %lor.lhs.false, label %if.then82, !dbg !2433

lor.lhs.false:                                    ; preds = %if.end76
  %63 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2434
  %cpl_in_use79 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %63, i32 0, i32 15, !dbg !2436
  %64 = load i32, i32* %cpl_in_use79, align 4, !dbg !2436
  %tobool80 = icmp ne i32 %64, 0, !dbg !2434
  br i1 %tobool80, label %land.lhs.true, label %if.else, !dbg !2437

land.lhs.true:                                    ; preds = %lor.lhs.false
  %65 = load i32, i32* %got_cpl_snr, align 4, !dbg !2438
  %tobool81 = icmp ne i32 %65, 0, !dbg !2438
  br i1 %tobool81, label %if.else, label %if.then82, !dbg !2440

if.then82:                                        ; preds = %land.lhs.true, %if.end76
  %66 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2441
  %new_snr_offsets = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %66, i32 0, i32 20, !dbg !2443
  store i32 1, i32* %new_snr_offsets, align 4, !dbg !2444
  %67 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2445
  %cpl_in_use83 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %67, i32 0, i32 15, !dbg !2447
  %68 = load i32, i32* %cpl_in_use83, align 4, !dbg !2447
  %tobool84 = icmp ne i32 %68, 0, !dbg !2445
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !2448

if.then85:                                        ; preds = %if.then82
  store i32 1, i32* %got_cpl_snr, align 4, !dbg !2449
  br label %if.end86, !dbg !2450

if.end86:                                         ; preds = %if.then85, %if.then82
  br label %if.end88, !dbg !2451

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %69 = load %struct.AC3Block*, %struct.AC3Block** %block14, align 8, !dbg !2452
  %new_snr_offsets87 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %69, i32 0, i32 20, !dbg !2454
  store i32 0, i32* %new_snr_offsets87, align 4, !dbg !2455
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.end86
  br label %for.inc89, !dbg !2456

for.inc89:                                        ; preds = %if.end88
  %70 = load i32, i32* %blk, align 4, !dbg !2457
  %inc90 = add nsw i32 %70, 1, !dbg !2457
  store i32 %inc90, i32* %blk, align 4, !dbg !2457
  br label %for.cond9, !dbg !2459, !llvm.loop !2460

for.end91:                                        ; preds = %for.cond9
  %71 = load i32, i32* %num_cpl_blocks, align 4, !dbg !2462
  %tobool92 = icmp ne i32 %71, 0, !dbg !2462
  br i1 %tobool92, label %if.end95, label %if.then93, !dbg !2464

if.then93:                                        ; preds = %for.end91
  %72 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2465
  %cpl_on94 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %72, i32 0, i32 43, !dbg !2466
  store i32 0, i32* %cpl_on94, align 8, !dbg !2467
  br label %if.end95, !dbg !2465

if.end95:                                         ; preds = %if.then93, %for.end91
  store i32 0, i32* %blk, align 4, !dbg !2468
  br label %for.cond96, !dbg !2470

for.cond96:                                       ; preds = %for.inc127, %if.end95
  %73 = load i32, i32* %blk, align 4, !dbg !2471
  %74 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2474
  %num_blocks97 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %74, i32 0, i32 18, !dbg !2475
  %75 = load i32, i32* %num_blocks97, align 4, !dbg !2475
  %cmp98 = icmp slt i32 %73, %75, !dbg !2476
  br i1 %cmp98, label %for.body100, label %for.end129, !dbg !2477

for.body100:                                      ; preds = %for.cond96
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block101, metadata !2478, metadata !2184), !dbg !2480
  %76 = load i32, i32* %blk, align 4, !dbg !2481
  %idxprom102 = sext i32 %76 to i64, !dbg !2482
  %77 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2482
  %blocks103 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %77, i32 0, i32 10, !dbg !2483
  %arrayidx104 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks103, i64 0, i64 %idxprom102, !dbg !2482
  store %struct.AC3Block* %arrayidx104, %struct.AC3Block** %block101, align 8, !dbg !2480
  store i32 1, i32* %ch, align 4, !dbg !2484
  br label %for.cond105, !dbg !2486

for.cond105:                                      ; preds = %for.inc124, %for.body100
  %78 = load i32, i32* %ch, align 4, !dbg !2487
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2490
  %fbw_channels106 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 25, !dbg !2491
  %80 = load i32, i32* %fbw_channels106, align 8, !dbg !2491
  %cmp107 = icmp sle i32 %78, %80, !dbg !2492
  br i1 %cmp107, label %for.body109, label %for.end126, !dbg !2493

for.body109:                                      ; preds = %for.cond105
  %81 = load i32, i32* %ch, align 4, !dbg !2494
  %idxprom110 = sext i32 %81 to i64, !dbg !2497
  %82 = load %struct.AC3Block*, %struct.AC3Block** %block101, align 8, !dbg !2497
  %channel_in_cpl111 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %82, i32 0, i32 16, !dbg !2498
  %arrayidx112 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl111, i64 0, i64 %idxprom110, !dbg !2497
  %83 = load i8, i8* %arrayidx112, align 1, !dbg !2497
  %tobool113 = icmp ne i8 %83, 0, !dbg !2497
  br i1 %tobool113, label %if.then114, label %if.else118, !dbg !2499

if.then114:                                       ; preds = %for.body109
  %84 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2500
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %84, i32 0, i32 41, !dbg !2501
  %arrayidx115 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !2500
  %85 = load i32, i32* %arrayidx115, align 8, !dbg !2500
  %86 = load i32, i32* %ch, align 4, !dbg !2502
  %idxprom116 = sext i32 %86 to i64, !dbg !2503
  %87 = load %struct.AC3Block*, %struct.AC3Block** %block101, align 8, !dbg !2503
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %87, i32 0, i32 22, !dbg !2504
  %arrayidx117 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom116, !dbg !2503
  store i32 %85, i32* %arrayidx117, align 4, !dbg !2505
  br label %if.end123, !dbg !2503

if.else118:                                       ; preds = %for.body109
  %88 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2506
  %bandwidth_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %88, i32 0, i32 40, !dbg !2507
  %89 = load i32, i32* %bandwidth_code, align 4, !dbg !2507
  %mul = mul nsw i32 %89, 3, !dbg !2508
  %add119 = add nsw i32 %mul, 73, !dbg !2509
  %90 = load i32, i32* %ch, align 4, !dbg !2510
  %idxprom120 = sext i32 %90 to i64, !dbg !2511
  %91 = load %struct.AC3Block*, %struct.AC3Block** %block101, align 8, !dbg !2511
  %end_freq121 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %91, i32 0, i32 22, !dbg !2512
  %arrayidx122 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq121, i64 0, i64 %idxprom120, !dbg !2511
  store i32 %add119, i32* %arrayidx122, align 4, !dbg !2513
  br label %if.end123

if.end123:                                        ; preds = %if.else118, %if.then114
  br label %for.inc124, !dbg !2514

for.inc124:                                       ; preds = %if.end123
  %92 = load i32, i32* %ch, align 4, !dbg !2515
  %inc125 = add nsw i32 %92, 1, !dbg !2515
  store i32 %inc125, i32* %ch, align 4, !dbg !2515
  br label %for.cond105, !dbg !2517, !llvm.loop !2518

for.end126:                                       ; preds = %for.cond105
  br label %for.inc127, !dbg !2520

for.inc127:                                       ; preds = %for.end126
  %93 = load i32, i32* %blk, align 4, !dbg !2521
  %inc128 = add nsw i32 %93, 1, !dbg !2521
  store i32 %inc128, i32* %blk, align 4, !dbg !2521
  br label %for.cond96, !dbg !2523, !llvm.loop !2524

for.end129:                                       ; preds = %for.cond96
  ret void, !dbg !2526
}

; Function Attrs: nounwind uwtable
define void @ff_ac3_apply_rematrixing(%struct.AC3EncodeContext* %s) #0 !dbg !2527 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %nb_coefs = alloca i32, align 4
  %blk = alloca i32, align 4
  %bnd = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %flags = alloca i8*, align 8
  %block = alloca %struct.AC3Block*, align 8
  %lt = alloca i32, align 4
  %rt = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2528, metadata !2184), !dbg !2529
  call void @llvm.dbg.declare(metadata i32* %nb_coefs, metadata !2530, metadata !2184), !dbg !2531
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2532, metadata !2184), !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !2534, metadata !2184), !dbg !2535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2536, metadata !2184), !dbg !2537
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2538, metadata !2184), !dbg !2539
  call void @llvm.dbg.declare(metadata i32* %end, metadata !2540, metadata !2184), !dbg !2541
  call void @llvm.dbg.declare(metadata i8** %flags, metadata !2542, metadata !2184), !dbg !2543
  store i8* null, i8** %flags, align 8, !dbg !2543
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2544
  %rematrixing_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 48, !dbg !2546
  %1 = load i32, i32* %rematrixing_enabled, align 4, !dbg !2546
  %tobool = icmp ne i32 %1, 0, !dbg !2544
  br i1 %tobool, label %if.end, label %if.then, !dbg !2547

if.then:                                          ; preds = %entry
  br label %for.end61, !dbg !2548

if.end:                                           ; preds = %entry
  store i32 0, i32* %blk, align 4, !dbg !2549
  br label %for.cond, !dbg !2551

for.cond:                                         ; preds = %for.inc59, %if.end
  %2 = load i32, i32* %blk, align 4, !dbg !2552
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2555
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 18, !dbg !2556
  %4 = load i32, i32* %num_blocks, align 4, !dbg !2556
  %cmp = icmp slt i32 %2, %4, !dbg !2557
  br i1 %cmp, label %for.body, label %for.end61, !dbg !2558

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !2559, metadata !2184), !dbg !2561
  %5 = load i32, i32* %blk, align 4, !dbg !2562
  %idxprom = sext i32 %5 to i64, !dbg !2563
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2563
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 10, !dbg !2564
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !2563
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !2561
  %7 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2565
  %new_rematrixing_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %7, i32 0, i32 11, !dbg !2567
  %8 = load i8, i8* %new_rematrixing_strategy, align 1, !dbg !2567
  %tobool1 = icmp ne i8 %8, 0, !dbg !2565
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !2568

if.then2:                                         ; preds = %for.body
  %9 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2569
  %rematrixing_flags = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %9, i32 0, i32 13, !dbg !2570
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rematrixing_flags, i32 0, i32 0, !dbg !2569
  store i8* %arraydecay, i8** %flags, align 8, !dbg !2571
  br label %if.end3, !dbg !2572

if.end3:                                          ; preds = %if.then2, %for.body
  %10 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2573
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %10, i32 0, i32 22, !dbg !2574
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 1, !dbg !2573
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !2573
  %12 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2575
  %end_freq5 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %12, i32 0, i32 22, !dbg !2576
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq5, i64 0, i64 2, !dbg !2575
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !2575
  %cmp7 = icmp sgt i32 %11, %13, !dbg !2577
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2578

cond.true:                                        ; preds = %if.end3
  %14 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2579
  %end_freq8 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %14, i32 0, i32 22, !dbg !2581
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq8, i64 0, i64 2, !dbg !2579
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !2579
  br label %cond.end, !dbg !2582

cond.false:                                       ; preds = %if.end3
  %16 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2583
  %end_freq10 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %16, i32 0, i32 22, !dbg !2585
  %arrayidx11 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq10, i64 0, i64 1, !dbg !2583
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !2583
  br label %cond.end, !dbg !2586

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %17, %cond.false ], !dbg !2587
  store i32 %cond, i32* %nb_coefs, align 4, !dbg !2589
  store i32 0, i32* %bnd, align 4, !dbg !2590
  br label %for.cond12, !dbg !2592

for.cond12:                                       ; preds = %for.inc56, %cond.end
  %18 = load i32, i32* %bnd, align 4, !dbg !2593
  %19 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2596
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %19, i32 0, i32 12, !dbg !2597
  %20 = load i32, i32* %num_rematrixing_bands, align 8, !dbg !2597
  %cmp13 = icmp slt i32 %18, %20, !dbg !2598
  br i1 %cmp13, label %for.body14, label %for.end58, !dbg !2599

for.body14:                                       ; preds = %for.cond12
  %21 = load i32, i32* %bnd, align 4, !dbg !2600
  %idxprom15 = sext i32 %21 to i64, !dbg !2603
  %22 = load i8*, i8** %flags, align 8, !dbg !2603
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 %idxprom15, !dbg !2603
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !2603
  %tobool17 = icmp ne i8 %23, 0, !dbg !2603
  br i1 %tobool17, label %if.then18, label %if.end55, !dbg !2604

if.then18:                                        ; preds = %for.body14
  %24 = load i32, i32* %bnd, align 4, !dbg !2605
  %idxprom19 = sext i32 %24 to i64, !dbg !2607
  %arrayidx20 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom19, !dbg !2607
  %25 = load i8, i8* %arrayidx20, align 1, !dbg !2607
  %conv = zext i8 %25 to i32, !dbg !2607
  store i32 %conv, i32* %start, align 4, !dbg !2608
  %26 = load i32, i32* %nb_coefs, align 4, !dbg !2609
  %27 = load i32, i32* %bnd, align 4, !dbg !2610
  %add = add nsw i32 %27, 1, !dbg !2611
  %idxprom21 = sext i32 %add to i64, !dbg !2612
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom21, !dbg !2612
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !2612
  %conv23 = zext i8 %28 to i32, !dbg !2613
  %cmp24 = icmp sgt i32 %26, %conv23, !dbg !2614
  br i1 %cmp24, label %cond.true26, label %cond.false31, !dbg !2615

cond.true26:                                      ; preds = %if.then18
  %29 = load i32, i32* %bnd, align 4, !dbg !2616
  %add27 = add nsw i32 %29, 1, !dbg !2618
  %idxprom28 = sext i32 %add27 to i64, !dbg !2619
  %arrayidx29 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom28, !dbg !2619
  %30 = load i8, i8* %arrayidx29, align 1, !dbg !2619
  %conv30 = zext i8 %30 to i32, !dbg !2620
  br label %cond.end32, !dbg !2621

cond.false31:                                     ; preds = %if.then18
  %31 = load i32, i32* %nb_coefs, align 4, !dbg !2622
  br label %cond.end32, !dbg !2624

cond.end32:                                       ; preds = %cond.false31, %cond.true26
  %cond33 = phi i32 [ %conv30, %cond.true26 ], [ %31, %cond.false31 ], !dbg !2625
  store i32 %cond33, i32* %end, align 4, !dbg !2627
  %32 = load i32, i32* %start, align 4, !dbg !2628
  store i32 %32, i32* %i, align 4, !dbg !2630
  br label %for.cond34, !dbg !2631

for.cond34:                                       ; preds = %for.inc, %cond.end32
  %33 = load i32, i32* %i, align 4, !dbg !2632
  %34 = load i32, i32* %end, align 4, !dbg !2635
  %cmp35 = icmp slt i32 %33, %34, !dbg !2636
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !2637

for.body37:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata i32* %lt, metadata !2638, metadata !2184), !dbg !2640
  %35 = load i32, i32* %i, align 4, !dbg !2641
  %idxprom38 = sext i32 %35 to i64, !dbg !2642
  %36 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2642
  %fixed_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %36, i32 0, i32 1, !dbg !2643
  %37 = load i32**, i32*** %fixed_coef, align 8, !dbg !2643
  %arrayidx39 = getelementptr inbounds i32*, i32** %37, i64 1, !dbg !2642
  %38 = load i32*, i32** %arrayidx39, align 8, !dbg !2642
  %arrayidx40 = getelementptr inbounds i32, i32* %38, i64 %idxprom38, !dbg !2642
  %39 = load i32, i32* %arrayidx40, align 4, !dbg !2642
  store i32 %39, i32* %lt, align 4, !dbg !2640
  call void @llvm.dbg.declare(metadata i32* %rt, metadata !2644, metadata !2184), !dbg !2645
  %40 = load i32, i32* %i, align 4, !dbg !2646
  %idxprom41 = sext i32 %40 to i64, !dbg !2647
  %41 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2647
  %fixed_coef42 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %41, i32 0, i32 1, !dbg !2648
  %42 = load i32**, i32*** %fixed_coef42, align 8, !dbg !2648
  %arrayidx43 = getelementptr inbounds i32*, i32** %42, i64 2, !dbg !2647
  %43 = load i32*, i32** %arrayidx43, align 8, !dbg !2647
  %arrayidx44 = getelementptr inbounds i32, i32* %43, i64 %idxprom41, !dbg !2647
  %44 = load i32, i32* %arrayidx44, align 4, !dbg !2647
  store i32 %44, i32* %rt, align 4, !dbg !2645
  %45 = load i32, i32* %lt, align 4, !dbg !2649
  %46 = load i32, i32* %rt, align 4, !dbg !2650
  %add45 = add nsw i32 %45, %46, !dbg !2651
  %shr = ashr i32 %add45, 1, !dbg !2652
  %47 = load i32, i32* %i, align 4, !dbg !2653
  %idxprom46 = sext i32 %47 to i64, !dbg !2654
  %48 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2654
  %fixed_coef47 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %48, i32 0, i32 1, !dbg !2655
  %49 = load i32**, i32*** %fixed_coef47, align 8, !dbg !2655
  %arrayidx48 = getelementptr inbounds i32*, i32** %49, i64 1, !dbg !2654
  %50 = load i32*, i32** %arrayidx48, align 8, !dbg !2654
  %arrayidx49 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !2654
  store i32 %shr, i32* %arrayidx49, align 4, !dbg !2656
  %51 = load i32, i32* %lt, align 4, !dbg !2657
  %52 = load i32, i32* %rt, align 4, !dbg !2658
  %sub = sub nsw i32 %51, %52, !dbg !2659
  %shr50 = ashr i32 %sub, 1, !dbg !2660
  %53 = load i32, i32* %i, align 4, !dbg !2661
  %idxprom51 = sext i32 %53 to i64, !dbg !2662
  %54 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2662
  %fixed_coef52 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %54, i32 0, i32 1, !dbg !2663
  %55 = load i32**, i32*** %fixed_coef52, align 8, !dbg !2663
  %arrayidx53 = getelementptr inbounds i32*, i32** %55, i64 2, !dbg !2662
  %56 = load i32*, i32** %arrayidx53, align 8, !dbg !2662
  %arrayidx54 = getelementptr inbounds i32, i32* %56, i64 %idxprom51, !dbg !2662
  store i32 %shr50, i32* %arrayidx54, align 4, !dbg !2664
  br label %for.inc, !dbg !2665

for.inc:                                          ; preds = %for.body37
  %57 = load i32, i32* %i, align 4, !dbg !2666
  %inc = add nsw i32 %57, 1, !dbg !2666
  store i32 %inc, i32* %i, align 4, !dbg !2666
  br label %for.cond34, !dbg !2668, !llvm.loop !2669

for.end:                                          ; preds = %for.cond34
  br label %if.end55, !dbg !2671

if.end55:                                         ; preds = %for.end, %for.body14
  br label %for.inc56, !dbg !2672

for.inc56:                                        ; preds = %if.end55
  %58 = load i32, i32* %bnd, align 4, !dbg !2673
  %inc57 = add nsw i32 %58, 1, !dbg !2673
  store i32 %inc57, i32* %bnd, align 4, !dbg !2673
  br label %for.cond12, !dbg !2675, !llvm.loop !2676

for.end58:                                        ; preds = %for.cond12
  br label %for.inc59, !dbg !2678

for.inc59:                                        ; preds = %for.end58
  %59 = load i32, i32* %blk, align 4, !dbg !2679
  %inc60 = add nsw i32 %59, 1, !dbg !2679
  store i32 %inc60, i32* %blk, align 4, !dbg !2679
  br label %for.cond, !dbg !2681, !llvm.loop !2682

for.end61:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !2684
}

; Function Attrs: nounwind uwtable
define void @ff_ac3_group_exponents(%struct.AC3EncodeContext* %s) #0 !dbg !2685 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %cpl = alloca i32, align 4
  %group_size = alloca i32, align 4
  %nb_groups = alloca i32, align 4
  %p = alloca i8*, align 8
  %delta0 = alloca i32, align 4
  %delta1 = alloca i32, align 4
  %delta2 = alloca i32, align 4
  %exp0 = alloca i32, align 4
  %exp1 = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %exp_strategy = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2686, metadata !2184), !dbg !2687
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2688, metadata !2184), !dbg !2689
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2690, metadata !2184), !dbg !2691
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2692, metadata !2184), !dbg !2693
  call void @llvm.dbg.declare(metadata i32* %cpl, metadata !2694, metadata !2184), !dbg !2695
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !2696, metadata !2184), !dbg !2697
  call void @llvm.dbg.declare(metadata i32* %nb_groups, metadata !2698, metadata !2184), !dbg !2699
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2700, metadata !2184), !dbg !2701
  call void @llvm.dbg.declare(metadata i32* %delta0, metadata !2702, metadata !2184), !dbg !2703
  call void @llvm.dbg.declare(metadata i32* %delta1, metadata !2704, metadata !2184), !dbg !2705
  call void @llvm.dbg.declare(metadata i32* %delta2, metadata !2706, metadata !2184), !dbg !2707
  call void @llvm.dbg.declare(metadata i32* %exp0, metadata !2708, metadata !2184), !dbg !2709
  call void @llvm.dbg.declare(metadata i32* %exp1, metadata !2710, metadata !2184), !dbg !2711
  store i32 0, i32* %blk, align 4, !dbg !2712
  br label %for.cond, !dbg !2714

for.cond:                                         ; preds = %for.inc73, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !2715
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2718
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !2719
  %2 = load i32, i32* %num_blocks, align 4, !dbg !2719
  %cmp = icmp slt i32 %0, %2, !dbg !2720
  br i1 %cmp, label %for.body, label %for.end75, !dbg !2721

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !2722, metadata !2184), !dbg !2724
  %3 = load i32, i32* %blk, align 4, !dbg !2725
  %idxprom = sext i32 %3 to i64, !dbg !2726
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2726
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !2727
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !2726
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !2724
  %5 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2728
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %5, i32 0, i32 15, !dbg !2730
  %6 = load i32, i32* %cpl_in_use, align 4, !dbg !2730
  %tobool = icmp ne i32 %6, 0, !dbg !2731
  %lnot = xor i1 %tobool, true, !dbg !2731
  %lnot.ext = zext i1 %lnot to i32, !dbg !2731
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !2732
  br label %for.cond1, !dbg !2733

for.cond1:                                        ; preds = %for.inc70, %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !2734
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2737
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 26, !dbg !2738
  %9 = load i32, i32* %channels, align 4, !dbg !2738
  %cmp2 = icmp sle i32 %7, %9, !dbg !2739
  br i1 %cmp2, label %for.body3, label %for.end72, !dbg !2740

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %exp_strategy, metadata !2741, metadata !2184), !dbg !2743
  %10 = load i32, i32* %blk, align 4, !dbg !2744
  %idxprom4 = sext i32 %10 to i64, !dbg !2745
  %11 = load i32, i32* %ch, align 4, !dbg !2746
  %idxprom5 = sext i32 %11 to i64, !dbg !2745
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2745
  %exp_strategy6 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 75, !dbg !2747
  %arrayidx7 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy6, i64 0, i64 %idxprom5, !dbg !2745
  %arrayidx8 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx7, i64 0, i64 %idxprom4, !dbg !2745
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !2745
  %conv = zext i8 %13 to i32, !dbg !2745
  store i32 %conv, i32* %exp_strategy, align 4, !dbg !2743
  %14 = load i32, i32* %exp_strategy, align 4, !dbg !2748
  %cmp9 = icmp eq i32 %14, 0, !dbg !2750
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2751

if.then:                                          ; preds = %for.body3
  br label %for.inc70, !dbg !2752

if.end:                                           ; preds = %for.body3
  %15 = load i32, i32* %ch, align 4, !dbg !2753
  %cmp11 = icmp eq i32 %15, 0, !dbg !2754
  %conv12 = zext i1 %cmp11 to i32, !dbg !2754
  store i32 %conv12, i32* %cpl, align 4, !dbg !2755
  %16 = load i32, i32* %exp_strategy, align 4, !dbg !2756
  %17 = load i32, i32* %exp_strategy, align 4, !dbg !2757
  %cmp13 = icmp eq i32 %17, 3, !dbg !2758
  %conv14 = zext i1 %cmp13 to i32, !dbg !2758
  %add = add nsw i32 %16, %conv14, !dbg !2759
  store i32 %add, i32* %group_size, align 4, !dbg !2760
  %18 = load i32, i32* %ch, align 4, !dbg !2761
  %idxprom15 = sext i32 %18 to i64, !dbg !2762
  %19 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2762
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %19, i32 0, i32 22, !dbg !2763
  %arrayidx16 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom15, !dbg !2762
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !2762
  %21 = load i32, i32* %ch, align 4, !dbg !2764
  %idxprom17 = sext i32 %21 to i64, !dbg !2765
  %22 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2765
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %22, i32 0, i32 41, !dbg !2766
  %arrayidx18 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom17, !dbg !2765
  %23 = load i32, i32* %arrayidx18, align 4, !dbg !2765
  %sub = sub nsw i32 %20, %23, !dbg !2767
  %idxprom19 = sext i32 %sub to i64, !dbg !2768
  %24 = load i32, i32* %exp_strategy, align 4, !dbg !2769
  %sub20 = sub nsw i32 %24, 1, !dbg !2770
  %idxprom21 = sext i32 %sub20 to i64, !dbg !2768
  %25 = load i32, i32* %cpl, align 4, !dbg !2771
  %idxprom22 = sext i32 %25 to i64, !dbg !2768
  %arrayidx23 = getelementptr inbounds [2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 %idxprom22, !dbg !2768
  %arrayidx24 = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* %arrayidx23, i64 0, i64 %idxprom21, !dbg !2768
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx24, i64 0, i64 %idxprom19, !dbg !2768
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !2768
  %conv26 = zext i8 %26 to i32, !dbg !2768
  store i32 %conv26, i32* %nb_groups, align 4, !dbg !2772
  %27 = load i32, i32* %ch, align 4, !dbg !2773
  %idxprom27 = sext i32 %27 to i64, !dbg !2774
  %28 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2774
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %28, i32 0, i32 2, !dbg !2775
  %29 = load i8**, i8*** %exp, align 8, !dbg !2775
  %arrayidx28 = getelementptr inbounds i8*, i8** %29, i64 %idxprom27, !dbg !2774
  %30 = load i8*, i8** %arrayidx28, align 8, !dbg !2774
  %31 = load i32, i32* %ch, align 4, !dbg !2776
  %idxprom29 = sext i32 %31 to i64, !dbg !2777
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2777
  %start_freq30 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 41, !dbg !2778
  %arrayidx31 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq30, i64 0, i64 %idxprom29, !dbg !2777
  %33 = load i32, i32* %arrayidx31, align 4, !dbg !2777
  %idx.ext = sext i32 %33 to i64, !dbg !2779
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !2779
  %34 = load i32, i32* %cpl, align 4, !dbg !2780
  %idx.ext32 = sext i32 %34 to i64, !dbg !2781
  %idx.neg = sub i64 0, %idx.ext32, !dbg !2781
  %add.ptr33 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !2781
  store i8* %add.ptr33, i8** %p, align 8, !dbg !2782
  %35 = load i8*, i8** %p, align 8, !dbg !2783
  %incdec.ptr = getelementptr inbounds i8, i8* %35, i32 1, !dbg !2783
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2783
  %36 = load i8, i8* %35, align 1, !dbg !2784
  %conv34 = zext i8 %36 to i32, !dbg !2784
  store i32 %conv34, i32* %exp1, align 4, !dbg !2785
  %37 = load i32, i32* %exp1, align 4, !dbg !2786
  %conv35 = trunc i32 %37 to i8, !dbg !2786
  %38 = load i32, i32* %ch, align 4, !dbg !2787
  %idxprom36 = sext i32 %38 to i64, !dbg !2788
  %39 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2788
  %grouped_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %39, i32 0, i32 3, !dbg !2789
  %40 = load i8**, i8*** %grouped_exp, align 8, !dbg !2789
  %arrayidx37 = getelementptr inbounds i8*, i8** %40, i64 %idxprom36, !dbg !2788
  %41 = load i8*, i8** %arrayidx37, align 8, !dbg !2788
  %arrayidx38 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !2788
  store i8 %conv35, i8* %arrayidx38, align 1, !dbg !2790
  store i32 1, i32* %i, align 4, !dbg !2791
  br label %for.cond39, !dbg !2793

for.cond39:                                       ; preds = %for.inc, %if.end
  %42 = load i32, i32* %i, align 4, !dbg !2794
  %43 = load i32, i32* %nb_groups, align 4, !dbg !2797
  %cmp40 = icmp sle i32 %42, %43, !dbg !2798
  br i1 %cmp40, label %for.body42, label %for.end, !dbg !2799

for.body42:                                       ; preds = %for.cond39
  %44 = load i32, i32* %exp1, align 4, !dbg !2800
  store i32 %44, i32* %exp0, align 4, !dbg !2802
  %45 = load i8*, i8** %p, align 8, !dbg !2803
  %arrayidx43 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !2803
  %46 = load i8, i8* %arrayidx43, align 1, !dbg !2803
  %conv44 = zext i8 %46 to i32, !dbg !2803
  store i32 %conv44, i32* %exp1, align 4, !dbg !2804
  %47 = load i32, i32* %group_size, align 4, !dbg !2805
  %48 = load i8*, i8** %p, align 8, !dbg !2806
  %idx.ext45 = sext i32 %47 to i64, !dbg !2806
  %add.ptr46 = getelementptr inbounds i8, i8* %48, i64 %idx.ext45, !dbg !2806
  store i8* %add.ptr46, i8** %p, align 8, !dbg !2806
  %49 = load i32, i32* %exp1, align 4, !dbg !2807
  %50 = load i32, i32* %exp0, align 4, !dbg !2808
  %sub47 = sub nsw i32 %49, %50, !dbg !2809
  %add48 = add nsw i32 %sub47, 2, !dbg !2810
  store i32 %add48, i32* %delta0, align 4, !dbg !2811
  %51 = load i32, i32* %exp1, align 4, !dbg !2812
  store i32 %51, i32* %exp0, align 4, !dbg !2813
  %52 = load i8*, i8** %p, align 8, !dbg !2814
  %arrayidx49 = getelementptr inbounds i8, i8* %52, i64 0, !dbg !2814
  %53 = load i8, i8* %arrayidx49, align 1, !dbg !2814
  %conv50 = zext i8 %53 to i32, !dbg !2814
  store i32 %conv50, i32* %exp1, align 4, !dbg !2815
  %54 = load i32, i32* %group_size, align 4, !dbg !2816
  %55 = load i8*, i8** %p, align 8, !dbg !2817
  %idx.ext51 = sext i32 %54 to i64, !dbg !2817
  %add.ptr52 = getelementptr inbounds i8, i8* %55, i64 %idx.ext51, !dbg !2817
  store i8* %add.ptr52, i8** %p, align 8, !dbg !2817
  %56 = load i32, i32* %exp1, align 4, !dbg !2818
  %57 = load i32, i32* %exp0, align 4, !dbg !2819
  %sub53 = sub nsw i32 %56, %57, !dbg !2820
  %add54 = add nsw i32 %sub53, 2, !dbg !2821
  store i32 %add54, i32* %delta1, align 4, !dbg !2822
  %58 = load i32, i32* %exp1, align 4, !dbg !2823
  store i32 %58, i32* %exp0, align 4, !dbg !2824
  %59 = load i8*, i8** %p, align 8, !dbg !2825
  %arrayidx55 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !2825
  %60 = load i8, i8* %arrayidx55, align 1, !dbg !2825
  %conv56 = zext i8 %60 to i32, !dbg !2825
  store i32 %conv56, i32* %exp1, align 4, !dbg !2826
  %61 = load i32, i32* %group_size, align 4, !dbg !2827
  %62 = load i8*, i8** %p, align 8, !dbg !2828
  %idx.ext57 = sext i32 %61 to i64, !dbg !2828
  %add.ptr58 = getelementptr inbounds i8, i8* %62, i64 %idx.ext57, !dbg !2828
  store i8* %add.ptr58, i8** %p, align 8, !dbg !2828
  %63 = load i32, i32* %exp1, align 4, !dbg !2829
  %64 = load i32, i32* %exp0, align 4, !dbg !2830
  %sub59 = sub nsw i32 %63, %64, !dbg !2831
  %add60 = add nsw i32 %sub59, 2, !dbg !2832
  store i32 %add60, i32* %delta2, align 4, !dbg !2833
  %65 = load i32, i32* %delta0, align 4, !dbg !2834
  %mul = mul nsw i32 %65, 5, !dbg !2835
  %66 = load i32, i32* %delta1, align 4, !dbg !2836
  %add61 = add nsw i32 %mul, %66, !dbg !2837
  %mul62 = mul nsw i32 %add61, 5, !dbg !2838
  %67 = load i32, i32* %delta2, align 4, !dbg !2839
  %add63 = add nsw i32 %mul62, %67, !dbg !2840
  %conv64 = trunc i32 %add63 to i8, !dbg !2841
  %68 = load i32, i32* %i, align 4, !dbg !2842
  %idxprom65 = sext i32 %68 to i64, !dbg !2843
  %69 = load i32, i32* %ch, align 4, !dbg !2844
  %idxprom66 = sext i32 %69 to i64, !dbg !2843
  %70 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2843
  %grouped_exp67 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %70, i32 0, i32 3, !dbg !2845
  %71 = load i8**, i8*** %grouped_exp67, align 8, !dbg !2845
  %arrayidx68 = getelementptr inbounds i8*, i8** %71, i64 %idxprom66, !dbg !2843
  %72 = load i8*, i8** %arrayidx68, align 8, !dbg !2843
  %arrayidx69 = getelementptr inbounds i8, i8* %72, i64 %idxprom65, !dbg !2843
  store i8 %conv64, i8* %arrayidx69, align 1, !dbg !2846
  br label %for.inc, !dbg !2847

for.inc:                                          ; preds = %for.body42
  %73 = load i32, i32* %i, align 4, !dbg !2848
  %inc = add nsw i32 %73, 1, !dbg !2848
  store i32 %inc, i32* %i, align 4, !dbg !2848
  br label %for.cond39, !dbg !2850, !llvm.loop !2851

for.end:                                          ; preds = %for.cond39
  br label %for.inc70, !dbg !2853

for.inc70:                                        ; preds = %for.end, %if.then
  %74 = load i32, i32* %ch, align 4, !dbg !2854
  %inc71 = add nsw i32 %74, 1, !dbg !2854
  store i32 %inc71, i32* %ch, align 4, !dbg !2854
  br label %for.cond1, !dbg !2856, !llvm.loop !2857

for.end72:                                        ; preds = %for.cond1
  br label %for.inc73, !dbg !2859

for.inc73:                                        ; preds = %for.end72
  %75 = load i32, i32* %blk, align 4, !dbg !2860
  %inc74 = add nsw i32 %75, 1, !dbg !2860
  store i32 %inc74, i32* %blk, align 4, !dbg !2860
  br label %for.cond, !dbg !2862, !llvm.loop !2863

for.end75:                                        ; preds = %for.cond
  ret void, !dbg !2865
}

; Function Attrs: nounwind uwtable
define void @ff_ac3_process_exponents(%struct.AC3EncodeContext* %s) #0 !dbg !2866 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2867, metadata !2184), !dbg !2868
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2869
  call void @extract_exponents(%struct.AC3EncodeContext* %0), !dbg !2870
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2871
  call void @compute_exp_strategy(%struct.AC3EncodeContext* %1), !dbg !2872
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2873
  call void @encode_exponents(%struct.AC3EncodeContext* %2), !dbg !2874
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !2875, !srcloc !2881
  ret void, !dbg !2882
}

; Function Attrs: nounwind uwtable
define internal void @extract_exponents(%struct.AC3EncodeContext* %s) #0 !dbg !2883 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch = alloca i32, align 4
  %chan_size = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2884, metadata !2184), !dbg !2885
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2886, metadata !2184), !dbg !2887
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2888
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 43, !dbg !2889
  %1 = load i32, i32* %cpl_on, align 8, !dbg !2889
  %tobool = icmp ne i32 %1, 0, !dbg !2890
  %lnot = xor i1 %tobool, true, !dbg !2890
  %lnot.ext = zext i1 %lnot to i32, !dbg !2890
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !2887
  call void @llvm.dbg.declare(metadata i32* %chan_size, metadata !2891, metadata !2184), !dbg !2892
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2893
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 18, !dbg !2894
  %3 = load i32, i32* %num_blocks, align 4, !dbg !2894
  %mul = mul nsw i32 256, %3, !dbg !2895
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2896
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 26, !dbg !2897
  %5 = load i32, i32* %channels, align 4, !dbg !2897
  %6 = load i32, i32* %ch, align 4, !dbg !2898
  %sub = sub nsw i32 %5, %6, !dbg !2899
  %add = add nsw i32 %sub, 1, !dbg !2900
  %mul1 = mul nsw i32 %mul, %add, !dbg !2901
  store i32 %mul1, i32* %chan_size, align 4, !dbg !2892
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !2902, metadata !2184), !dbg !2903
  %7 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2904
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %7, i32 0, i32 10, !dbg !2905
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 0, !dbg !2904
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !2903
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2906
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 7, !dbg !2907
  %extract_exponents = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 8, !dbg !2908
  %9 = load void (i8*, i32*, i32)*, void (i8*, i32*, i32)** %extract_exponents, align 8, !dbg !2908
  %10 = load i32, i32* %ch, align 4, !dbg !2909
  %idxprom = sext i32 %10 to i64, !dbg !2910
  %11 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2910
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %11, i32 0, i32 2, !dbg !2911
  %12 = load i8**, i8*** %exp, align 8, !dbg !2911
  %arrayidx2 = getelementptr inbounds i8*, i8** %12, i64 %idxprom, !dbg !2910
  %13 = load i8*, i8** %arrayidx2, align 8, !dbg !2910
  %14 = load i32, i32* %ch, align 4, !dbg !2912
  %idxprom3 = sext i32 %14 to i64, !dbg !2913
  %15 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !2913
  %fixed_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %15, i32 0, i32 1, !dbg !2914
  %16 = load i32**, i32*** %fixed_coef, align 8, !dbg !2914
  %arrayidx4 = getelementptr inbounds i32*, i32** %16, i64 %idxprom3, !dbg !2913
  %17 = load i32*, i32** %arrayidx4, align 8, !dbg !2913
  %18 = load i32, i32* %chan_size, align 4, !dbg !2915
  call void %9(i8* %13, i32* %17, i32 %18), !dbg !2906
  ret void, !dbg !2916
}

; Function Attrs: nounwind uwtable
define internal void @compute_exp_strategy(%struct.AC3EncodeContext* %s) #0 !dbg !2917 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch = alloca i32, align 4
  %blk = alloca i32, align 4
  %blk1 = alloca i32, align 4
  %exp_strategy = alloca i8*, align 8
  %exp = alloca i8*, align 8
  %exp_diff = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !2918, metadata !2184), !dbg !2919
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2920, metadata !2184), !dbg !2921
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2922, metadata !2184), !dbg !2923
  call void @llvm.dbg.declare(metadata i32* %blk1, metadata !2924, metadata !2184), !dbg !2925
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2926
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 43, !dbg !2928
  %1 = load i32, i32* %cpl_on, align 8, !dbg !2928
  %tobool = icmp ne i32 %1, 0, !dbg !2929
  %lnot = xor i1 %tobool, true, !dbg !2929
  %lnot.ext = zext i1 %lnot to i32, !dbg !2929
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !2930
  br label %for.cond, !dbg !2931

for.cond:                                         ; preds = %for.inc102, %entry
  %2 = load i32, i32* %ch, align 4, !dbg !2932
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2935
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 25, !dbg !2936
  %4 = load i32, i32* %fbw_channels, align 8, !dbg !2936
  %cmp = icmp sle i32 %2, %4, !dbg !2937
  br i1 %cmp, label %for.body, label %for.end104, !dbg !2938

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %exp_strategy, metadata !2939, metadata !2184), !dbg !2941
  %5 = load i32, i32* %ch, align 4, !dbg !2942
  %idxprom = sext i32 %5 to i64, !dbg !2943
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2943
  %exp_strategy1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 75, !dbg !2944
  %arrayidx = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy1, i64 0, i64 %idxprom, !dbg !2943
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i32 0, i32 0, !dbg !2943
  store i8* %arraydecay, i8** %exp_strategy, align 8, !dbg !2941
  call void @llvm.dbg.declare(metadata i8** %exp, metadata !2945, metadata !2184), !dbg !2946
  %7 = load i32, i32* %ch, align 4, !dbg !2947
  %idxprom2 = sext i32 %7 to i64, !dbg !2948
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2948
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 10, !dbg !2949
  %arrayidx3 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 0, !dbg !2948
  %exp4 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx3, i32 0, i32 2, !dbg !2950
  %9 = load i8**, i8*** %exp4, align 8, !dbg !2950
  %arrayidx5 = getelementptr inbounds i8*, i8** %9, i64 %idxprom2, !dbg !2948
  %10 = load i8*, i8** %arrayidx5, align 8, !dbg !2948
  store i8* %10, i8** %exp, align 8, !dbg !2946
  call void @llvm.dbg.declare(metadata i32* %exp_diff, metadata !2951, metadata !2184), !dbg !2952
  %11 = load i8*, i8** %exp_strategy, align 8, !dbg !2953
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !2953
  store i8 1, i8* %arrayidx6, align 1, !dbg !2954
  %12 = load i8*, i8** %exp, align 8, !dbg !2955
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 256, !dbg !2955
  store i8* %add.ptr, i8** %exp, align 8, !dbg !2955
  store i32 1, i32* %blk, align 4, !dbg !2956
  br label %for.cond7, !dbg !2958

for.cond7:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %blk, align 4, !dbg !2959
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2962
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 18, !dbg !2963
  %15 = load i32, i32* %num_blocks, align 4, !dbg !2963
  %cmp8 = icmp slt i32 %13, %15, !dbg !2964
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !2965

for.body9:                                        ; preds = %for.cond7
  %16 = load i32, i32* %ch, align 4, !dbg !2966
  %cmp10 = icmp eq i32 %16, 0, !dbg !2969
  br i1 %cmp10, label %if.then, label %if.else27, !dbg !2970

if.then:                                          ; preds = %for.body9
  %17 = load i32, i32* %blk, align 4, !dbg !2971
  %sub = sub nsw i32 %17, 1, !dbg !2974
  %idxprom11 = sext i32 %sub to i64, !dbg !2975
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2975
  %blocks12 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 10, !dbg !2976
  %arrayidx13 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks12, i64 0, i64 %idxprom11, !dbg !2975
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx13, i32 0, i32 15, !dbg !2977
  %19 = load i32, i32* %cpl_in_use, align 4, !dbg !2977
  %tobool14 = icmp ne i32 %19, 0, !dbg !2975
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !2978

if.then15:                                        ; preds = %if.then
  %20 = load i32, i32* %blk, align 4, !dbg !2979
  %idxprom16 = sext i32 %20 to i64, !dbg !2981
  %21 = load i8*, i8** %exp_strategy, align 8, !dbg !2981
  %arrayidx17 = getelementptr inbounds i8, i8* %21, i64 %idxprom16, !dbg !2981
  store i8 1, i8* %arrayidx17, align 1, !dbg !2982
  br label %for.inc, !dbg !2983

if.else:                                          ; preds = %if.then
  %22 = load i32, i32* %blk, align 4, !dbg !2984
  %idxprom18 = sext i32 %22 to i64, !dbg !2986
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2986
  %blocks19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 10, !dbg !2987
  %arrayidx20 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks19, i64 0, i64 %idxprom18, !dbg !2986
  %cpl_in_use21 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx20, i32 0, i32 15, !dbg !2988
  %24 = load i32, i32* %cpl_in_use21, align 4, !dbg !2988
  %tobool22 = icmp ne i32 %24, 0, !dbg !2986
  br i1 %tobool22, label %if.end, label %if.then23, !dbg !2989

if.then23:                                        ; preds = %if.else
  %25 = load i32, i32* %blk, align 4, !dbg !2990
  %idxprom24 = sext i32 %25 to i64, !dbg !2992
  %26 = load i8*, i8** %exp_strategy, align 8, !dbg !2992
  %arrayidx25 = getelementptr inbounds i8, i8* %26, i64 %idxprom24, !dbg !2992
  store i8 0, i8* %arrayidx25, align 1, !dbg !2993
  br label %for.inc, !dbg !2994

if.end:                                           ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end
  br label %if.end47, !dbg !2995

if.else27:                                        ; preds = %for.body9
  %27 = load i32, i32* %ch, align 4, !dbg !2996
  %idxprom28 = sext i32 %27 to i64, !dbg !2999
  %28 = load i32, i32* %blk, align 4, !dbg !3000
  %idxprom29 = sext i32 %28 to i64, !dbg !2999
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !2999
  %blocks30 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 10, !dbg !3001
  %arrayidx31 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks30, i64 0, i64 %idxprom29, !dbg !2999
  %channel_in_cpl = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx31, i32 0, i32 16, !dbg !3002
  %arrayidx32 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl, i64 0, i64 %idxprom28, !dbg !2999
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !2999
  %conv = zext i8 %30 to i32, !dbg !2999
  %31 = load i32, i32* %ch, align 4, !dbg !3003
  %idxprom33 = sext i32 %31 to i64, !dbg !3004
  %32 = load i32, i32* %blk, align 4, !dbg !3005
  %sub34 = sub nsw i32 %32, 1, !dbg !3006
  %idxprom35 = sext i32 %sub34 to i64, !dbg !3004
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3004
  %blocks36 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 10, !dbg !3007
  %arrayidx37 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks36, i64 0, i64 %idxprom35, !dbg !3004
  %channel_in_cpl38 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx37, i32 0, i32 16, !dbg !3008
  %arrayidx39 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl38, i64 0, i64 %idxprom33, !dbg !3004
  %34 = load i8, i8* %arrayidx39, align 1, !dbg !3004
  %conv40 = zext i8 %34 to i32, !dbg !3004
  %cmp41 = icmp ne i32 %conv, %conv40, !dbg !3009
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !2999

if.then43:                                        ; preds = %if.else27
  %35 = load i32, i32* %blk, align 4, !dbg !3010
  %idxprom44 = sext i32 %35 to i64, !dbg !3012
  %36 = load i8*, i8** %exp_strategy, align 8, !dbg !3012
  %arrayidx45 = getelementptr inbounds i8, i8* %36, i64 %idxprom44, !dbg !3012
  store i8 1, i8* %arrayidx45, align 1, !dbg !3013
  br label %for.inc, !dbg !3014

if.end46:                                         ; preds = %if.else27
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end26
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3015
  %mecc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 6, !dbg !3016
  %sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %mecc, i32 0, i32 1, !dbg !3017
  %arrayidx48 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sad, i64 0, i64 0, !dbg !3015
  %38 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx48, align 8, !dbg !3015
  %39 = load i8*, i8** %exp, align 8, !dbg !3018
  %40 = load i8*, i8** %exp, align 8, !dbg !3019
  %add.ptr49 = getelementptr inbounds i8, i8* %40, i64 -256, !dbg !3020
  %call = call i32 %38(%struct.MpegEncContext* null, i8* %39, i8* %add.ptr49, i64 16, i32 16), !dbg !3015
  store i32 %call, i32* %exp_diff, align 4, !dbg !3021
  %41 = load i32, i32* %blk, align 4, !dbg !3022
  %idxprom50 = sext i32 %41 to i64, !dbg !3023
  %42 = load i8*, i8** %exp_strategy, align 8, !dbg !3023
  %arrayidx51 = getelementptr inbounds i8, i8* %42, i64 %idxprom50, !dbg !3023
  store i8 0, i8* %arrayidx51, align 1, !dbg !3024
  %43 = load i32, i32* %ch, align 4, !dbg !3025
  %cmp52 = icmp eq i32 %43, 0, !dbg !3027
  br i1 %cmp52, label %land.lhs.true, label %if.else67, !dbg !3028

land.lhs.true:                                    ; preds = %if.end47
  %44 = load i32, i32* %exp_diff, align 4, !dbg !3029
  %45 = load i32, i32* %ch, align 4, !dbg !3031
  %idxprom54 = sext i32 %45 to i64, !dbg !3032
  %46 = load i32, i32* %blk, align 4, !dbg !3033
  %idxprom55 = sext i32 %46 to i64, !dbg !3032
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3032
  %blocks56 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 10, !dbg !3034
  %arrayidx57 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks56, i64 0, i64 %idxprom55, !dbg !3032
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx57, i32 0, i32 22, !dbg !3035
  %arrayidx58 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom54, !dbg !3032
  %48 = load i32, i32* %arrayidx58, align 4, !dbg !3032
  %49 = load i32, i32* %ch, align 4, !dbg !3036
  %idxprom59 = sext i32 %49 to i64, !dbg !3037
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3037
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 41, !dbg !3038
  %arrayidx60 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom59, !dbg !3037
  %51 = load i32, i32* %arrayidx60, align 4, !dbg !3037
  %sub61 = sub nsw i32 %48, %51, !dbg !3039
  %mul = mul nsw i32 500, %sub61, !dbg !3040
  %div = sdiv i32 %mul, 256, !dbg !3041
  %cmp62 = icmp sgt i32 %44, %div, !dbg !3042
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !3043

if.then64:                                        ; preds = %land.lhs.true
  %52 = load i32, i32* %blk, align 4, !dbg !3044
  %idxprom65 = sext i32 %52 to i64, !dbg !3045
  %53 = load i8*, i8** %exp_strategy, align 8, !dbg !3045
  %arrayidx66 = getelementptr inbounds i8, i8* %53, i64 %idxprom65, !dbg !3045
  store i8 1, i8* %arrayidx66, align 1, !dbg !3046
  br label %if.end77, !dbg !3045

if.else67:                                        ; preds = %land.lhs.true, %if.end47
  %54 = load i32, i32* %ch, align 4, !dbg !3047
  %cmp68 = icmp sgt i32 %54, 0, !dbg !3049
  br i1 %cmp68, label %land.lhs.true70, label %if.end76, !dbg !3050

land.lhs.true70:                                  ; preds = %if.else67
  %55 = load i32, i32* %exp_diff, align 4, !dbg !3051
  %cmp71 = icmp sgt i32 %55, 500, !dbg !3053
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !3054

if.then73:                                        ; preds = %land.lhs.true70
  %56 = load i32, i32* %blk, align 4, !dbg !3055
  %idxprom74 = sext i32 %56 to i64, !dbg !3056
  %57 = load i8*, i8** %exp_strategy, align 8, !dbg !3056
  %arrayidx75 = getelementptr inbounds i8, i8* %57, i64 %idxprom74, !dbg !3056
  store i8 1, i8* %arrayidx75, align 1, !dbg !3057
  br label %if.end76, !dbg !3056

if.end76:                                         ; preds = %if.then73, %land.lhs.true70, %if.else67
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then64
  br label %for.inc, !dbg !3058

for.inc:                                          ; preds = %if.end77, %if.then43, %if.then23, %if.then15
  %58 = load i32, i32* %blk, align 4, !dbg !3059
  %inc = add nsw i32 %58, 1, !dbg !3059
  store i32 %inc, i32* %blk, align 4, !dbg !3059
  %59 = load i8*, i8** %exp, align 8, !dbg !3061
  %add.ptr78 = getelementptr inbounds i8, i8* %59, i64 256, !dbg !3061
  store i8* %add.ptr78, i8** %exp, align 8, !dbg !3061
  br label %for.cond7, !dbg !3062, !llvm.loop !3063

for.end:                                          ; preds = %for.cond7
  store i32 0, i32* %blk, align 4, !dbg !3065
  br label %while.cond, !dbg !3066

while.cond:                                       ; preds = %while.end, %for.end
  %60 = load i32, i32* %blk, align 4, !dbg !3067
  %61 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3069
  %num_blocks79 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %61, i32 0, i32 18, !dbg !3070
  %62 = load i32, i32* %num_blocks79, align 4, !dbg !3070
  %cmp80 = icmp slt i32 %60, %62, !dbg !3071
  br i1 %cmp80, label %while.body, label %while.end101, !dbg !3072

while.body:                                       ; preds = %while.cond
  %63 = load i32, i32* %blk, align 4, !dbg !3073
  %add = add nsw i32 %63, 1, !dbg !3075
  store i32 %add, i32* %blk1, align 4, !dbg !3076
  br label %while.cond82, !dbg !3077

while.cond82:                                     ; preds = %while.body91, %while.body
  %64 = load i32, i32* %blk1, align 4, !dbg !3078
  %65 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3080
  %num_blocks83 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %65, i32 0, i32 18, !dbg !3081
  %66 = load i32, i32* %num_blocks83, align 4, !dbg !3081
  %cmp84 = icmp slt i32 %64, %66, !dbg !3082
  br i1 %cmp84, label %land.rhs, label %land.end, !dbg !3083

land.rhs:                                         ; preds = %while.cond82
  %67 = load i32, i32* %blk1, align 4, !dbg !3084
  %idxprom86 = sext i32 %67 to i64, !dbg !3086
  %68 = load i8*, i8** %exp_strategy, align 8, !dbg !3086
  %arrayidx87 = getelementptr inbounds i8, i8* %68, i64 %idxprom86, !dbg !3086
  %69 = load i8, i8* %arrayidx87, align 1, !dbg !3086
  %conv88 = zext i8 %69 to i32, !dbg !3086
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !3087
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond82
  %70 = phi i1 [ false, %while.cond82 ], [ %cmp89, %land.rhs ]
  br i1 %70, label %while.body91, label %while.end, !dbg !3088

while.body91:                                     ; preds = %land.end
  %71 = load i32, i32* %blk1, align 4, !dbg !3090
  %inc92 = add nsw i32 %71, 1, !dbg !3090
  store i32 %inc92, i32* %blk1, align 4, !dbg !3090
  br label %while.cond82, !dbg !3091, !llvm.loop !3093

while.end:                                        ; preds = %land.end
  %72 = load i32, i32* %blk1, align 4, !dbg !3094
  %73 = load i32, i32* %blk, align 4, !dbg !3095
  %sub93 = sub nsw i32 %72, %73, !dbg !3096
  %sub94 = sub nsw i32 %sub93, 1, !dbg !3097
  %idxprom95 = sext i32 %sub94 to i64, !dbg !3098
  %74 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3099
  %num_blks_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %74, i32 0, i32 17, !dbg !3100
  %75 = load i32, i32* %num_blks_code, align 8, !dbg !3100
  %idxprom96 = sext i32 %75 to i64, !dbg !3098
  %arrayidx97 = getelementptr inbounds [4 x [6 x i8]], [4 x [6 x i8]]* @exp_strategy_reuse_tab, i64 0, i64 %idxprom96, !dbg !3098
  %arrayidx98 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx97, i64 0, i64 %idxprom95, !dbg !3098
  %76 = load i8, i8* %arrayidx98, align 1, !dbg !3098
  %77 = load i32, i32* %blk, align 4, !dbg !3101
  %idxprom99 = sext i32 %77 to i64, !dbg !3102
  %78 = load i8*, i8** %exp_strategy, align 8, !dbg !3102
  %arrayidx100 = getelementptr inbounds i8, i8* %78, i64 %idxprom99, !dbg !3102
  store i8 %76, i8* %arrayidx100, align 1, !dbg !3103
  %79 = load i32, i32* %blk1, align 4, !dbg !3104
  store i32 %79, i32* %blk, align 4, !dbg !3105
  br label %while.cond, !dbg !3106, !llvm.loop !3108

while.end101:                                     ; preds = %while.cond
  br label %for.inc102, !dbg !3109

for.inc102:                                       ; preds = %while.end101
  %80 = load i32, i32* %ch, align 4, !dbg !3110
  %inc103 = add nsw i32 %80, 1, !dbg !3110
  store i32 %inc103, i32* %ch, align 4, !dbg !3110
  br label %for.cond, !dbg !3112, !llvm.loop !3113

for.end104:                                       ; preds = %for.cond
  %81 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3115
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %81, i32 0, i32 27, !dbg !3117
  %82 = load i32, i32* %lfe_on, align 8, !dbg !3117
  %tobool105 = icmp ne i32 %82, 0, !dbg !3115
  br i1 %tobool105, label %if.then106, label %if.end124, !dbg !3118

if.then106:                                       ; preds = %for.end104
  %83 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3119
  %lfe_channel = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %83, i32 0, i32 28, !dbg !3121
  %84 = load i32, i32* %lfe_channel, align 4, !dbg !3121
  store i32 %84, i32* %ch, align 4, !dbg !3122
  %85 = load i32, i32* %ch, align 4, !dbg !3123
  %idxprom107 = sext i32 %85 to i64, !dbg !3124
  %86 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3124
  %exp_strategy108 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %86, i32 0, i32 75, !dbg !3125
  %arrayidx109 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy108, i64 0, i64 %idxprom107, !dbg !3124
  %arrayidx110 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx109, i64 0, i64 0, !dbg !3124
  store i8 1, i8* %arrayidx110, align 2, !dbg !3126
  store i32 1, i32* %blk, align 4, !dbg !3127
  br label %for.cond111, !dbg !3129

for.cond111:                                      ; preds = %for.inc121, %if.then106
  %87 = load i32, i32* %blk, align 4, !dbg !3130
  %88 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3133
  %num_blocks112 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %88, i32 0, i32 18, !dbg !3134
  %89 = load i32, i32* %num_blocks112, align 4, !dbg !3134
  %cmp113 = icmp slt i32 %87, %89, !dbg !3135
  br i1 %cmp113, label %for.body115, label %for.end123, !dbg !3136

for.body115:                                      ; preds = %for.cond111
  %90 = load i32, i32* %blk, align 4, !dbg !3137
  %idxprom116 = sext i32 %90 to i64, !dbg !3138
  %91 = load i32, i32* %ch, align 4, !dbg !3139
  %idxprom117 = sext i32 %91 to i64, !dbg !3138
  %92 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3138
  %exp_strategy118 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %92, i32 0, i32 75, !dbg !3140
  %arrayidx119 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy118, i64 0, i64 %idxprom117, !dbg !3138
  %arrayidx120 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx119, i64 0, i64 %idxprom116, !dbg !3138
  store i8 0, i8* %arrayidx120, align 1, !dbg !3141
  br label %for.inc121, !dbg !3138

for.inc121:                                       ; preds = %for.body115
  %93 = load i32, i32* %blk, align 4, !dbg !3142
  %inc122 = add nsw i32 %93, 1, !dbg !3142
  store i32 %inc122, i32* %blk, align 4, !dbg !3142
  br label %for.cond111, !dbg !3144, !llvm.loop !3145

for.end123:                                       ; preds = %for.cond111
  br label %if.end124, !dbg !3147

if.end124:                                        ; preds = %for.end123, %for.end104
  %94 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3148
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %94, i32 0, i32 12, !dbg !3150
  %95 = load i32, i32* %eac3, align 4, !dbg !3150
  %tobool125 = icmp ne i32 %95, 0, !dbg !3148
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !3151

if.then126:                                       ; preds = %if.end124
  %96 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3152
  call void @ff_eac3_get_frame_exp_strategy(%struct.AC3EncodeContext* %96), !dbg !3153
  br label %if.end127, !dbg !3153

if.end127:                                        ; preds = %if.then126, %if.end124
  ret void, !dbg !3154
}

; Function Attrs: nounwind uwtable
define internal void @encode_exponents(%struct.AC3EncodeContext* %s) #0 !dbg !3155 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %blk1 = alloca i32, align 4
  %ch = alloca i32, align 4
  %cpl = alloca i32, align 4
  %exp = alloca i8*, align 8
  %exp_strategy = alloca i8*, align 8
  %nb_coefs = alloca i32, align 4
  %num_reuse_blocks = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3156, metadata !2184), !dbg !3157
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !3158, metadata !2184), !dbg !3159
  call void @llvm.dbg.declare(metadata i32* %blk1, metadata !3160, metadata !2184), !dbg !3161
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3162, metadata !2184), !dbg !3163
  call void @llvm.dbg.declare(metadata i32* %cpl, metadata !3164, metadata !2184), !dbg !3165
  call void @llvm.dbg.declare(metadata i8** %exp, metadata !3166, metadata !2184), !dbg !3167
  call void @llvm.dbg.declare(metadata i8** %exp_strategy, metadata !3168, metadata !2184), !dbg !3169
  call void @llvm.dbg.declare(metadata i32* %nb_coefs, metadata !3170, metadata !2184), !dbg !3171
  call void @llvm.dbg.declare(metadata i32* %num_reuse_blocks, metadata !3172, metadata !2184), !dbg !3173
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3174
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 43, !dbg !3176
  %1 = load i32, i32* %cpl_on, align 8, !dbg !3176
  %tobool = icmp ne i32 %1, 0, !dbg !3177
  %lnot = xor i1 %tobool, true, !dbg !3177
  %lnot.ext = zext i1 %lnot to i32, !dbg !3177
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !3178
  br label %for.cond, !dbg !3179

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %ch, align 4, !dbg !3180
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3183
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 26, !dbg !3184
  %4 = load i32, i32* %channels, align 4, !dbg !3184
  %cmp = icmp sle i32 %2, %4, !dbg !3185
  br i1 %cmp, label %for.body, label %for.end, !dbg !3186

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %ch, align 4, !dbg !3187
  %idxprom = sext i32 %5 to i64, !dbg !3189
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3189
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 10, !dbg !3190
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 0, !dbg !3189
  %exp1 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx, i32 0, i32 2, !dbg !3191
  %7 = load i8**, i8*** %exp1, align 8, !dbg !3191
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 %idxprom, !dbg !3189
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !3189
  %9 = load i32, i32* %ch, align 4, !dbg !3192
  %idxprom3 = sext i32 %9 to i64, !dbg !3193
  %10 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3193
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %10, i32 0, i32 41, !dbg !3194
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom3, !dbg !3193
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !3193
  %idx.ext = sext i32 %11 to i64, !dbg !3195
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !3195
  store i8* %add.ptr, i8** %exp, align 8, !dbg !3196
  %12 = load i32, i32* %ch, align 4, !dbg !3197
  %idxprom5 = sext i32 %12 to i64, !dbg !3198
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3198
  %exp_strategy6 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 75, !dbg !3199
  %arrayidx7 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy6, i64 0, i64 %idxprom5, !dbg !3198
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx7, i32 0, i32 0, !dbg !3198
  store i8* %arraydecay, i8** %exp_strategy, align 8, !dbg !3200
  %14 = load i32, i32* %ch, align 4, !dbg !3201
  %cmp8 = icmp eq i32 %14, 0, !dbg !3202
  %conv = zext i1 %cmp8 to i32, !dbg !3202
  store i32 %conv, i32* %cpl, align 4, !dbg !3203
  store i32 0, i32* %blk, align 4, !dbg !3204
  br label %while.cond, !dbg !3205

while.cond:                                       ; preds = %while.end, %if.then, %for.body
  %15 = load i32, i32* %blk, align 4, !dbg !3206
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3208
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 18, !dbg !3209
  %17 = load i32, i32* %num_blocks, align 4, !dbg !3209
  %cmp9 = icmp slt i32 %15, %17, !dbg !3210
  br i1 %cmp9, label %while.body, label %while.end57, !dbg !3211

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !3212, metadata !2184), !dbg !3214
  %18 = load i32, i32* %blk, align 4, !dbg !3215
  %idxprom11 = sext i32 %18 to i64, !dbg !3216
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3216
  %blocks12 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 10, !dbg !3217
  %arrayidx13 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks12, i64 0, i64 %idxprom11, !dbg !3216
  store %struct.AC3Block* %arrayidx13, %struct.AC3Block** %block, align 8, !dbg !3214
  %20 = load i32, i32* %cpl, align 4, !dbg !3218
  %tobool14 = icmp ne i32 %20, 0, !dbg !3218
  br i1 %tobool14, label %land.lhs.true, label %if.end, !dbg !3220

land.lhs.true:                                    ; preds = %while.body
  %21 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3221
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %21, i32 0, i32 15, !dbg !3223
  %22 = load i32, i32* %cpl_in_use, align 4, !dbg !3223
  %tobool15 = icmp ne i32 %22, 0, !dbg !3221
  br i1 %tobool15, label %if.end, label %if.then, !dbg !3224

if.then:                                          ; preds = %land.lhs.true
  %23 = load i8*, i8** %exp, align 8, !dbg !3225
  %add.ptr16 = getelementptr inbounds i8, i8* %23, i64 256, !dbg !3225
  store i8* %add.ptr16, i8** %exp, align 8, !dbg !3225
  %24 = load i32, i32* %blk, align 4, !dbg !3227
  %inc = add nsw i32 %24, 1, !dbg !3227
  store i32 %inc, i32* %blk, align 4, !dbg !3227
  br label %while.cond, !dbg !3228, !llvm.loop !3229

if.end:                                           ; preds = %land.lhs.true, %while.body
  %25 = load i32, i32* %ch, align 4, !dbg !3230
  %idxprom17 = sext i32 %25 to i64, !dbg !3231
  %26 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3231
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %26, i32 0, i32 22, !dbg !3232
  %arrayidx18 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom17, !dbg !3231
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !3231
  %28 = load i32, i32* %ch, align 4, !dbg !3233
  %idxprom19 = sext i32 %28 to i64, !dbg !3234
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3234
  %start_freq20 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 41, !dbg !3235
  %arrayidx21 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq20, i64 0, i64 %idxprom19, !dbg !3234
  %30 = load i32, i32* %arrayidx21, align 4, !dbg !3234
  %sub = sub nsw i32 %27, %30, !dbg !3236
  store i32 %sub, i32* %nb_coefs, align 4, !dbg !3237
  %31 = load i32, i32* %blk, align 4, !dbg !3238
  %add = add nsw i32 %31, 1, !dbg !3239
  store i32 %add, i32* %blk1, align 4, !dbg !3240
  %32 = load i32, i32* %blk, align 4, !dbg !3241
  %conv22 = trunc i32 %32 to i8, !dbg !3241
  %33 = load i32, i32* %blk, align 4, !dbg !3242
  %idxprom23 = sext i32 %33 to i64, !dbg !3243
  %34 = load i32, i32* %ch, align 4, !dbg !3244
  %idxprom24 = sext i32 %34 to i64, !dbg !3243
  %35 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3243
  %exp_ref_block = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %35, i32 0, i32 78, !dbg !3245
  %arrayidx25 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_ref_block, i64 0, i64 %idxprom24, !dbg !3243
  %arrayidx26 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !3243
  store i8 %conv22, i8* %arrayidx26, align 1, !dbg !3246
  br label %while.cond27, !dbg !3247

while.cond27:                                     ; preds = %while.body36, %if.end
  %36 = load i32, i32* %blk1, align 4, !dbg !3248
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3250
  %num_blocks28 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 18, !dbg !3251
  %38 = load i32, i32* %num_blocks28, align 4, !dbg !3251
  %cmp29 = icmp slt i32 %36, %38, !dbg !3252
  br i1 %cmp29, label %land.rhs, label %land.end, !dbg !3253

land.rhs:                                         ; preds = %while.cond27
  %39 = load i32, i32* %blk1, align 4, !dbg !3254
  %idxprom31 = sext i32 %39 to i64, !dbg !3256
  %40 = load i8*, i8** %exp_strategy, align 8, !dbg !3256
  %arrayidx32 = getelementptr inbounds i8, i8* %40, i64 %idxprom31, !dbg !3256
  %41 = load i8, i8* %arrayidx32, align 1, !dbg !3256
  %conv33 = zext i8 %41 to i32, !dbg !3256
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !3257
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond27
  %42 = phi i1 [ false, %while.cond27 ], [ %cmp34, %land.rhs ]
  br i1 %42, label %while.body36, label %while.end, !dbg !3258

while.body36:                                     ; preds = %land.end
  %43 = load i32, i32* %blk, align 4, !dbg !3260
  %conv37 = trunc i32 %43 to i8, !dbg !3260
  %44 = load i32, i32* %blk1, align 4, !dbg !3262
  %idxprom38 = sext i32 %44 to i64, !dbg !3263
  %45 = load i32, i32* %ch, align 4, !dbg !3264
  %idxprom39 = sext i32 %45 to i64, !dbg !3263
  %46 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3263
  %exp_ref_block40 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %46, i32 0, i32 78, !dbg !3265
  %arrayidx41 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_ref_block40, i64 0, i64 %idxprom39, !dbg !3263
  %arrayidx42 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx41, i64 0, i64 %idxprom38, !dbg !3263
  store i8 %conv37, i8* %arrayidx42, align 1, !dbg !3266
  %47 = load i32, i32* %blk1, align 4, !dbg !3267
  %inc43 = add nsw i32 %47, 1, !dbg !3267
  store i32 %inc43, i32* %blk1, align 4, !dbg !3267
  br label %while.cond27, !dbg !3268, !llvm.loop !3270

while.end:                                        ; preds = %land.end
  %48 = load i32, i32* %blk1, align 4, !dbg !3271
  %49 = load i32, i32* %blk, align 4, !dbg !3272
  %sub44 = sub nsw i32 %48, %49, !dbg !3273
  %sub45 = sub nsw i32 %sub44, 1, !dbg !3274
  store i32 %sub45, i32* %num_reuse_blocks, align 4, !dbg !3275
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3276
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 7, !dbg !3277
  %ac3_exponent_min = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 0, !dbg !3278
  %51 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %ac3_exponent_min, align 8, !dbg !3278
  %52 = load i8*, i8** %exp, align 8, !dbg !3279
  %53 = load i32, i32* %ch, align 4, !dbg !3280
  %idxprom46 = sext i32 %53 to i64, !dbg !3281
  %54 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3281
  %start_freq47 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %54, i32 0, i32 41, !dbg !3282
  %arrayidx48 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq47, i64 0, i64 %idxprom46, !dbg !3281
  %55 = load i32, i32* %arrayidx48, align 4, !dbg !3281
  %idx.ext49 = sext i32 %55 to i64, !dbg !3283
  %idx.neg = sub i64 0, %idx.ext49, !dbg !3283
  %add.ptr50 = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !3283
  %56 = load i32, i32* %num_reuse_blocks, align 4, !dbg !3284
  call void %51(i8* %add.ptr50, i32 %56, i32 256), !dbg !3276
  %57 = load i8*, i8** %exp, align 8, !dbg !3285
  %58 = load i32, i32* %nb_coefs, align 4, !dbg !3286
  %59 = load i32, i32* %blk, align 4, !dbg !3287
  %idxprom51 = sext i32 %59 to i64, !dbg !3288
  %60 = load i8*, i8** %exp_strategy, align 8, !dbg !3288
  %arrayidx52 = getelementptr inbounds i8, i8* %60, i64 %idxprom51, !dbg !3288
  %61 = load i8, i8* %arrayidx52, align 1, !dbg !3288
  %conv53 = zext i8 %61 to i32, !dbg !3288
  %62 = load i32, i32* %cpl, align 4, !dbg !3289
  call void @encode_exponents_blk_ch(i8* %57, i32 %58, i32 %conv53, i32 %62), !dbg !3290
  %63 = load i32, i32* %num_reuse_blocks, align 4, !dbg !3291
  %add54 = add nsw i32 %63, 1, !dbg !3292
  %mul = mul nsw i32 256, %add54, !dbg !3293
  %64 = load i8*, i8** %exp, align 8, !dbg !3294
  %idx.ext55 = sext i32 %mul to i64, !dbg !3294
  %add.ptr56 = getelementptr inbounds i8, i8* %64, i64 %idx.ext55, !dbg !3294
  store i8* %add.ptr56, i8** %exp, align 8, !dbg !3294
  %65 = load i32, i32* %blk1, align 4, !dbg !3295
  store i32 %65, i32* %blk, align 4, !dbg !3296
  br label %while.cond, !dbg !3297, !llvm.loop !3229

while.end57:                                      ; preds = %while.cond
  br label %for.inc, !dbg !3299

for.inc:                                          ; preds = %while.end57
  %66 = load i32, i32* %ch, align 4, !dbg !3300
  %inc58 = add nsw i32 %66, 1, !dbg !3300
  store i32 %inc58, i32* %ch, align 4, !dbg !3300
  br label %for.cond, !dbg !3302, !llvm.loop !3303

for.end:                                          ; preds = %for.cond
  %67 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3305
  %ref_bap_set = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %67, i32 0, i32 80, !dbg !3306
  store i32 0, i32* %ref_bap_set, align 8, !dbg !3307
  ret void, !dbg !3308
}

; Function Attrs: nounwind uwtable
define i32 @ff_ac3_compute_bit_allocation(%struct.AC3EncodeContext* %s) #0 !dbg !3309 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3310, metadata !2184), !dbg !3311
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3312
  call void @count_frame_bits(%struct.AC3EncodeContext* %0), !dbg !3313
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3314
  %call = call i32 @count_exponent_bits(%struct.AC3EncodeContext* %1), !dbg !3315
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3316
  %exponent_bits = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 60, !dbg !3317
  store i32 %call, i32* %exponent_bits, align 4, !dbg !3318
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3319
  call void @bit_alloc_masking(%struct.AC3EncodeContext* %3), !dbg !3320
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3321
  %call1 = call i32 @cbr_bit_allocation(%struct.AC3EncodeContext* %4), !dbg !3322
  ret i32 %call1, !dbg !3323
}

; Function Attrs: nounwind uwtable
define internal void @count_frame_bits(%struct.AC3EncodeContext* %s) #0 !dbg !3324 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %opt = alloca %struct.AC3EncOptions*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %frame_bits = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %block94 = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3325, metadata !2184), !dbg !3326
  call void @llvm.dbg.declare(metadata %struct.AC3EncOptions** %opt, metadata !3327, metadata !2184), !dbg !3329
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3330
  %options = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 1, !dbg !3331
  store %struct.AC3EncOptions* %options, %struct.AC3EncOptions** %opt, align 8, !dbg !3329
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !3332, metadata !2184), !dbg !3333
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3334, metadata !2184), !dbg !3335
  call void @llvm.dbg.declare(metadata i32* %frame_bits, metadata !3336, metadata !2184), !dbg !3337
  store i32 0, i32* %frame_bits, align 4, !dbg !3337
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3338
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 12, !dbg !3340
  %2 = load i32, i32* %eac3, align 4, !dbg !3340
  %tobool = icmp ne i32 %2, 0, !dbg !3338
  br i1 %tobool, label %if.then, label %if.else72, !dbg !3341

if.then:                                          ; preds = %entry
  %3 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3342
  %eac3_mixing_metadata = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %3, i32 0, i32 20, !dbg !3345
  %4 = load i32, i32* %eac3_mixing_metadata, align 4, !dbg !3345
  %tobool1 = icmp ne i32 %4, 0, !dbg !3342
  br i1 %tobool1, label %if.then2, label %if.end19, !dbg !3346

if.then2:                                         ; preds = %if.then
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3347
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 31, !dbg !3350
  %6 = load i32, i32* %channel_mode, align 8, !dbg !3350
  %cmp = icmp sgt i32 %6, 2, !dbg !3351
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3352

if.then3:                                         ; preds = %if.then2
  %7 = load i32, i32* %frame_bits, align 4, !dbg !3353
  %add = add nsw i32 %7, 2, !dbg !3353
  store i32 %add, i32* %frame_bits, align 4, !dbg !3353
  br label %if.end, !dbg !3354

if.end:                                           ; preds = %if.then3, %if.then2
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3355
  %has_center = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 29, !dbg !3357
  %9 = load i32, i32* %has_center, align 8, !dbg !3357
  %tobool4 = icmp ne i32 %9, 0, !dbg !3355
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !3358

if.then5:                                         ; preds = %if.end
  %10 = load i32, i32* %frame_bits, align 4, !dbg !3359
  %add6 = add nsw i32 %10, 6, !dbg !3359
  store i32 %add6, i32* %frame_bits, align 4, !dbg !3359
  br label %if.end7, !dbg !3360

if.end7:                                          ; preds = %if.then5, %if.end
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3361
  %has_surround = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 30, !dbg !3363
  %12 = load i32, i32* %has_surround, align 4, !dbg !3363
  %tobool8 = icmp ne i32 %12, 0, !dbg !3361
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3364

if.then9:                                         ; preds = %if.end7
  %13 = load i32, i32* %frame_bits, align 4, !dbg !3365
  %add10 = add nsw i32 %13, 6, !dbg !3365
  store i32 %add10, i32* %frame_bits, align 4, !dbg !3365
  br label %if.end11, !dbg !3366

if.end11:                                         ; preds = %if.then9, %if.end7
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3367
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 27, !dbg !3368
  %15 = load i32, i32* %lfe_on, align 8, !dbg !3368
  %16 = load i32, i32* %frame_bits, align 4, !dbg !3369
  %add12 = add nsw i32 %16, %15, !dbg !3369
  store i32 %add12, i32* %frame_bits, align 4, !dbg !3369
  %17 = load i32, i32* %frame_bits, align 4, !dbg !3370
  %add13 = add nsw i32 %17, 4, !dbg !3370
  store i32 %add13, i32* %frame_bits, align 4, !dbg !3370
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3371
  %channel_mode14 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 31, !dbg !3373
  %19 = load i32, i32* %channel_mode14, align 8, !dbg !3373
  %cmp15 = icmp slt i32 %19, 2, !dbg !3374
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3375

if.then16:                                        ; preds = %if.end11
  %20 = load i32, i32* %frame_bits, align 4, !dbg !3376
  %inc = add nsw i32 %20, 1, !dbg !3376
  store i32 %inc, i32* %frame_bits, align 4, !dbg !3376
  br label %if.end17, !dbg !3377

if.end17:                                         ; preds = %if.then16, %if.end11
  %21 = load i32, i32* %frame_bits, align 4, !dbg !3378
  %inc18 = add nsw i32 %21, 1, !dbg !3378
  store i32 %inc18, i32* %frame_bits, align 4, !dbg !3378
  br label %if.end19, !dbg !3379

if.end19:                                         ; preds = %if.end17, %if.then
  %22 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3380
  %eac3_info_metadata = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %22, i32 0, i32 21, !dbg !3382
  %23 = load i32, i32* %eac3_info_metadata, align 4, !dbg !3382
  %tobool20 = icmp ne i32 %23, 0, !dbg !3380
  br i1 %tobool20, label %if.then21, label %if.end39, !dbg !3383

if.then21:                                        ; preds = %if.end19
  %24 = load i32, i32* %frame_bits, align 4, !dbg !3384
  %add22 = add nsw i32 %24, 5, !dbg !3384
  store i32 %add22, i32* %frame_bits, align 4, !dbg !3384
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3386
  %channel_mode23 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 31, !dbg !3388
  %26 = load i32, i32* %channel_mode23, align 8, !dbg !3388
  %cmp24 = icmp eq i32 %26, 2, !dbg !3389
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !3390

if.then25:                                        ; preds = %if.then21
  %27 = load i32, i32* %frame_bits, align 4, !dbg !3391
  %add26 = add nsw i32 %27, 4, !dbg !3391
  store i32 %add26, i32* %frame_bits, align 4, !dbg !3391
  br label %if.end27, !dbg !3392

if.end27:                                         ; preds = %if.then25, %if.then21
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3393
  %channel_mode28 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 31, !dbg !3395
  %29 = load i32, i32* %channel_mode28, align 8, !dbg !3395
  %cmp29 = icmp sge i32 %29, 6, !dbg !3396
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !3397

if.then30:                                        ; preds = %if.end27
  %30 = load i32, i32* %frame_bits, align 4, !dbg !3398
  %add31 = add nsw i32 %30, 2, !dbg !3398
  store i32 %add31, i32* %frame_bits, align 4, !dbg !3398
  br label %if.end32, !dbg !3399

if.end32:                                         ; preds = %if.then30, %if.end27
  %31 = load i32, i32* %frame_bits, align 4, !dbg !3400
  %inc33 = add nsw i32 %31, 1, !dbg !3400
  store i32 %inc33, i32* %frame_bits, align 4, !dbg !3400
  %32 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3401
  %audio_production_info = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %32, i32 0, i32 5, !dbg !3403
  %33 = load i32, i32* %audio_production_info, align 4, !dbg !3403
  %tobool34 = icmp ne i32 %33, 0, !dbg !3401
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !3404

if.then35:                                        ; preds = %if.end32
  %34 = load i32, i32* %frame_bits, align 4, !dbg !3405
  %add36 = add nsw i32 %34, 8, !dbg !3405
  store i32 %add36, i32* %frame_bits, align 4, !dbg !3405
  br label %if.end37, !dbg !3406

if.end37:                                         ; preds = %if.then35, %if.end32
  %35 = load i32, i32* %frame_bits, align 4, !dbg !3407
  %inc38 = add nsw i32 %35, 1, !dbg !3407
  store i32 %inc38, i32* %frame_bits, align 4, !dbg !3407
  br label %if.end39, !dbg !3408

if.end39:                                         ; preds = %if.end37, %if.end19
  %36 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3409
  %channel_mode40 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %36, i32 0, i32 31, !dbg !3411
  %37 = load i32, i32* %channel_mode40, align 8, !dbg !3411
  %cmp41 = icmp sgt i32 %37, 1, !dbg !3412
  br i1 %cmp41, label %if.then42, label %if.end51, !dbg !3413

if.then42:                                        ; preds = %if.end39
  %38 = load i32, i32* %frame_bits, align 4, !dbg !3414
  %inc43 = add nsw i32 %38, 1, !dbg !3414
  store i32 %inc43, i32* %frame_bits, align 4, !dbg !3414
  store i32 1, i32* %blk, align 4, !dbg !3416
  br label %for.cond, !dbg !3418

for.cond:                                         ; preds = %for.inc, %if.then42
  %39 = load i32, i32* %blk, align 4, !dbg !3419
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3422
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 18, !dbg !3423
  %41 = load i32, i32* %num_blocks, align 4, !dbg !3423
  %cmp44 = icmp slt i32 %39, %41, !dbg !3424
  br i1 %cmp44, label %for.body, label %for.end, !dbg !3425

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !3426, metadata !2184), !dbg !3428
  %42 = load i32, i32* %blk, align 4, !dbg !3429
  %idxprom = sext i32 %42 to i64, !dbg !3430
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3430
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 10, !dbg !3431
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !3430
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !3428
  %44 = load i32, i32* %frame_bits, align 4, !dbg !3432
  %inc45 = add nsw i32 %44, 1, !dbg !3432
  store i32 %inc45, i32* %frame_bits, align 4, !dbg !3432
  %45 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3433
  %new_cpl_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %45, i32 0, i32 14, !dbg !3435
  %46 = load i32, i32* %new_cpl_strategy, align 8, !dbg !3435
  %tobool46 = icmp ne i32 %46, 0, !dbg !3433
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !3436

if.then47:                                        ; preds = %for.body
  %47 = load i32, i32* %frame_bits, align 4, !dbg !3437
  %inc48 = add nsw i32 %47, 1, !dbg !3437
  store i32 %inc48, i32* %frame_bits, align 4, !dbg !3437
  br label %if.end49, !dbg !3438

if.end49:                                         ; preds = %if.then47, %for.body
  br label %for.inc, !dbg !3439

for.inc:                                          ; preds = %if.end49
  %48 = load i32, i32* %blk, align 4, !dbg !3440
  %inc50 = add nsw i32 %48, 1, !dbg !3440
  store i32 %inc50, i32* %blk, align 4, !dbg !3440
  br label %for.cond, !dbg !3442, !llvm.loop !3443

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !3445

if.end51:                                         ; preds = %for.end, %if.end39
  %49 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3446
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %49, i32 0, i32 43, !dbg !3448
  %50 = load i32, i32* %cpl_on, align 8, !dbg !3448
  %tobool52 = icmp ne i32 %50, 0, !dbg !3446
  br i1 %tobool52, label %if.then53, label %if.end71, !dbg !3449

if.then53:                                        ; preds = %if.end51
  %51 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3450
  %use_frame_exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %51, i32 0, i32 77, !dbg !3453
  %52 = load i32, i32* %use_frame_exp_strategy, align 4, !dbg !3453
  %tobool54 = icmp ne i32 %52, 0, !dbg !3450
  br i1 %tobool54, label %if.then55, label %if.else, !dbg !3454

if.then55:                                        ; preds = %if.then53
  %53 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3455
  %cpl_on56 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %53, i32 0, i32 43, !dbg !3457
  %54 = load i32, i32* %cpl_on56, align 8, !dbg !3457
  %mul = mul nsw i32 5, %54, !dbg !3458
  %55 = load i32, i32* %frame_bits, align 4, !dbg !3459
  %add57 = add nsw i32 %55, %mul, !dbg !3459
  store i32 %add57, i32* %frame_bits, align 4, !dbg !3459
  br label %if.end70, !dbg !3460

if.else:                                          ; preds = %if.then53
  store i32 0, i32* %blk, align 4, !dbg !3461
  br label %for.cond58, !dbg !3464

for.cond58:                                       ; preds = %for.inc67, %if.else
  %56 = load i32, i32* %blk, align 4, !dbg !3465
  %57 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3468
  %num_blocks59 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %57, i32 0, i32 18, !dbg !3469
  %58 = load i32, i32* %num_blocks59, align 4, !dbg !3469
  %cmp60 = icmp slt i32 %56, %58, !dbg !3470
  br i1 %cmp60, label %for.body61, label %for.end69, !dbg !3471

for.body61:                                       ; preds = %for.cond58
  %59 = load i32, i32* %blk, align 4, !dbg !3472
  %idxprom62 = sext i32 %59 to i64, !dbg !3473
  %60 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3473
  %blocks63 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %60, i32 0, i32 10, !dbg !3474
  %arrayidx64 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks63, i64 0, i64 %idxprom62, !dbg !3473
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx64, i32 0, i32 15, !dbg !3475
  %61 = load i32, i32* %cpl_in_use, align 4, !dbg !3475
  %mul65 = mul nsw i32 2, %61, !dbg !3476
  %62 = load i32, i32* %frame_bits, align 4, !dbg !3477
  %add66 = add nsw i32 %62, %mul65, !dbg !3477
  store i32 %add66, i32* %frame_bits, align 4, !dbg !3477
  br label %for.inc67, !dbg !3478

for.inc67:                                        ; preds = %for.body61
  %63 = load i32, i32* %blk, align 4, !dbg !3479
  %inc68 = add nsw i32 %63, 1, !dbg !3479
  store i32 %inc68, i32* %blk, align 4, !dbg !3479
  br label %for.cond58, !dbg !3481, !llvm.loop !3482

for.end69:                                        ; preds = %for.cond58
  br label %if.end70

if.end70:                                         ; preds = %for.end69, %if.then55
  br label %if.end71, !dbg !3484

if.end71:                                         ; preds = %if.end70, %if.end51
  br label %if.end89, !dbg !3485

if.else72:                                        ; preds = %entry
  %64 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3486
  %audio_production_info73 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %64, i32 0, i32 5, !dbg !3489
  %65 = load i32, i32* %audio_production_info73, align 4, !dbg !3489
  %tobool74 = icmp ne i32 %65, 0, !dbg !3486
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !3490

if.then75:                                        ; preds = %if.else72
  %66 = load i32, i32* %frame_bits, align 4, !dbg !3491
  %add76 = add nsw i32 %66, 7, !dbg !3491
  store i32 %add76, i32* %frame_bits, align 4, !dbg !3491
  br label %if.end77, !dbg !3492

if.end77:                                         ; preds = %if.then75, %if.else72
  %67 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3493
  %bitstream_id = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %67, i32 0, i32 13, !dbg !3495
  %68 = load i32, i32* %bitstream_id, align 8, !dbg !3495
  %cmp78 = icmp eq i32 %68, 6, !dbg !3496
  br i1 %cmp78, label %if.then79, label %if.end88, !dbg !3497

if.then79:                                        ; preds = %if.end77
  %69 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3498
  %extended_bsi_1 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %69, i32 0, i32 10, !dbg !3501
  %70 = load i32, i32* %extended_bsi_1, align 4, !dbg !3501
  %tobool80 = icmp ne i32 %70, 0, !dbg !3498
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !3502

if.then81:                                        ; preds = %if.then79
  %71 = load i32, i32* %frame_bits, align 4, !dbg !3503
  %add82 = add nsw i32 %71, 14, !dbg !3503
  store i32 %add82, i32* %frame_bits, align 4, !dbg !3503
  br label %if.end83, !dbg !3504

if.end83:                                         ; preds = %if.then81, %if.then79
  %72 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !3505
  %extended_bsi_2 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %72, i32 0, i32 16, !dbg !3507
  %73 = load i32, i32* %extended_bsi_2, align 4, !dbg !3507
  %tobool84 = icmp ne i32 %73, 0, !dbg !3505
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !3508

if.then85:                                        ; preds = %if.end83
  %74 = load i32, i32* %frame_bits, align 4, !dbg !3509
  %add86 = add nsw i32 %74, 14, !dbg !3509
  store i32 %add86, i32* %frame_bits, align 4, !dbg !3509
  br label %if.end87, !dbg !3510

if.end87:                                         ; preds = %if.then85, %if.end83
  br label %if.end88, !dbg !3511

if.end88:                                         ; preds = %if.end87, %if.end77
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end71
  store i32 0, i32* %blk, align 4, !dbg !3512
  br label %for.cond90, !dbg !3514

for.cond90:                                       ; preds = %for.inc258, %if.end89
  %75 = load i32, i32* %blk, align 4, !dbg !3515
  %76 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3518
  %num_blocks91 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %76, i32 0, i32 18, !dbg !3519
  %77 = load i32, i32* %num_blocks91, align 4, !dbg !3519
  %cmp92 = icmp slt i32 %75, %77, !dbg !3520
  br i1 %cmp92, label %for.body93, label %for.end260, !dbg !3521

for.body93:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block94, metadata !3522, metadata !2184), !dbg !3524
  %78 = load i32, i32* %blk, align 4, !dbg !3525
  %idxprom95 = sext i32 %78 to i64, !dbg !3526
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3526
  %blocks96 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 10, !dbg !3527
  %arrayidx97 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks96, i64 0, i64 %idxprom95, !dbg !3526
  store %struct.AC3Block* %arrayidx97, %struct.AC3Block** %block94, align 8, !dbg !3524
  %80 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3528
  %eac398 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %80, i32 0, i32 12, !dbg !3530
  %81 = load i32, i32* %eac398, align 4, !dbg !3530
  %tobool99 = icmp ne i32 %81, 0, !dbg !3528
  br i1 %tobool99, label %if.end102, label %if.then100, !dbg !3531

if.then100:                                       ; preds = %for.body93
  %82 = load i32, i32* %frame_bits, align 4, !dbg !3532
  %inc101 = add nsw i32 %82, 1, !dbg !3532
  store i32 %inc101, i32* %frame_bits, align 4, !dbg !3532
  br label %if.end102, !dbg !3533

if.end102:                                        ; preds = %if.then100, %for.body93
  %83 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3534
  %new_cpl_strategy103 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %83, i32 0, i32 14, !dbg !3536
  %84 = load i32, i32* %new_cpl_strategy103, align 8, !dbg !3536
  %tobool104 = icmp ne i32 %84, 0, !dbg !3534
  br i1 %tobool104, label %if.then105, label %if.end140, !dbg !3537

if.then105:                                       ; preds = %if.end102
  %85 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3538
  %eac3106 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %85, i32 0, i32 12, !dbg !3541
  %86 = load i32, i32* %eac3106, align 4, !dbg !3541
  %tobool107 = icmp ne i32 %86, 0, !dbg !3538
  br i1 %tobool107, label %if.end110, label %if.then108, !dbg !3542

if.then108:                                       ; preds = %if.then105
  %87 = load i32, i32* %frame_bits, align 4, !dbg !3543
  %inc109 = add nsw i32 %87, 1, !dbg !3543
  store i32 %inc109, i32* %frame_bits, align 4, !dbg !3543
  br label %if.end110, !dbg !3544

if.end110:                                        ; preds = %if.then108, %if.then105
  %88 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3545
  %cpl_in_use111 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %88, i32 0, i32 15, !dbg !3547
  %89 = load i32, i32* %cpl_in_use111, align 4, !dbg !3547
  %tobool112 = icmp ne i32 %89, 0, !dbg !3545
  br i1 %tobool112, label %if.then113, label %if.end139, !dbg !3548

if.then113:                                       ; preds = %if.end110
  %90 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3549
  %eac3114 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %90, i32 0, i32 12, !dbg !3552
  %91 = load i32, i32* %eac3114, align 4, !dbg !3552
  %tobool115 = icmp ne i32 %91, 0, !dbg !3549
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !3553

if.then116:                                       ; preds = %if.then113
  %92 = load i32, i32* %frame_bits, align 4, !dbg !3554
  %inc117 = add nsw i32 %92, 1, !dbg !3554
  store i32 %inc117, i32* %frame_bits, align 4, !dbg !3554
  br label %if.end118, !dbg !3555

if.end118:                                        ; preds = %if.then116, %if.then113
  %93 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3556
  %eac3119 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %93, i32 0, i32 12, !dbg !3558
  %94 = load i32, i32* %eac3119, align 4, !dbg !3558
  %tobool120 = icmp ne i32 %94, 0, !dbg !3556
  br i1 %tobool120, label %lor.lhs.false, label %if.then123, !dbg !3559

lor.lhs.false:                                    ; preds = %if.end118
  %95 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3560
  %channel_mode121 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %95, i32 0, i32 31, !dbg !3562
  %96 = load i32, i32* %channel_mode121, align 8, !dbg !3562
  %cmp122 = icmp ne i32 %96, 2, !dbg !3563
  br i1 %cmp122, label %if.then123, label %if.end125, !dbg !3564

if.then123:                                       ; preds = %lor.lhs.false, %if.end118
  %97 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3565
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %97, i32 0, i32 25, !dbg !3566
  %98 = load i32, i32* %fbw_channels, align 8, !dbg !3566
  %99 = load i32, i32* %frame_bits, align 4, !dbg !3567
  %add124 = add nsw i32 %99, %98, !dbg !3567
  store i32 %add124, i32* %frame_bits, align 4, !dbg !3567
  br label %if.end125, !dbg !3568

if.end125:                                        ; preds = %if.then123, %lor.lhs.false
  %100 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3569
  %channel_mode126 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %100, i32 0, i32 31, !dbg !3571
  %101 = load i32, i32* %channel_mode126, align 8, !dbg !3571
  %cmp127 = icmp eq i32 %101, 2, !dbg !3572
  br i1 %cmp127, label %if.then128, label %if.end130, !dbg !3573

if.then128:                                       ; preds = %if.end125
  %102 = load i32, i32* %frame_bits, align 4, !dbg !3574
  %inc129 = add nsw i32 %102, 1, !dbg !3574
  store i32 %inc129, i32* %frame_bits, align 4, !dbg !3574
  br label %if.end130, !dbg !3575

if.end130:                                        ; preds = %if.then128, %if.end125
  %103 = load i32, i32* %frame_bits, align 4, !dbg !3576
  %add131 = add nsw i32 %103, 8, !dbg !3576
  store i32 %add131, i32* %frame_bits, align 4, !dbg !3576
  %104 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3577
  %eac3132 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %104, i32 0, i32 12, !dbg !3579
  %105 = load i32, i32* %eac3132, align 4, !dbg !3579
  %tobool133 = icmp ne i32 %105, 0, !dbg !3577
  br i1 %tobool133, label %if.then134, label %if.else136, !dbg !3580

if.then134:                                       ; preds = %if.end130
  %106 = load i32, i32* %frame_bits, align 4, !dbg !3581
  %inc135 = add nsw i32 %106, 1, !dbg !3581
  store i32 %inc135, i32* %frame_bits, align 4, !dbg !3581
  br label %if.end138, !dbg !3582

if.else136:                                       ; preds = %if.end130
  %107 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3583
  %num_cpl_subbands = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %107, i32 0, i32 45, !dbg !3584
  %108 = load i32, i32* %num_cpl_subbands, align 8, !dbg !3584
  %sub = sub nsw i32 %108, 1, !dbg !3585
  %109 = load i32, i32* %frame_bits, align 4, !dbg !3586
  %add137 = add nsw i32 %109, %sub, !dbg !3586
  store i32 %add137, i32* %frame_bits, align 4, !dbg !3586
  br label %if.end138

if.end138:                                        ; preds = %if.else136, %if.then134
  br label %if.end139, !dbg !3587

if.end139:                                        ; preds = %if.end138, %if.end110
  br label %if.end140, !dbg !3588

if.end140:                                        ; preds = %if.end139, %if.end102
  %110 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3589
  %cpl_in_use141 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %110, i32 0, i32 15, !dbg !3591
  %111 = load i32, i32* %cpl_in_use141, align 4, !dbg !3591
  %tobool142 = icmp ne i32 %111, 0, !dbg !3589
  br i1 %tobool142, label %if.then143, label %if.end175, !dbg !3592

if.then143:                                       ; preds = %if.end140
  store i32 1, i32* %ch, align 4, !dbg !3593
  br label %for.cond144, !dbg !3596

for.cond144:                                      ; preds = %for.inc172, %if.then143
  %112 = load i32, i32* %ch, align 4, !dbg !3597
  %113 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3600
  %fbw_channels145 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %113, i32 0, i32 25, !dbg !3601
  %114 = load i32, i32* %fbw_channels145, align 8, !dbg !3601
  %cmp146 = icmp sle i32 %112, %114, !dbg !3602
  br i1 %cmp146, label %for.body147, label %for.end174, !dbg !3603

for.body147:                                      ; preds = %for.cond144
  %115 = load i32, i32* %ch, align 4, !dbg !3604
  %idxprom148 = sext i32 %115 to i64, !dbg !3607
  %116 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3607
  %channel_in_cpl = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %116, i32 0, i32 16, !dbg !3608
  %arrayidx149 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl, i64 0, i64 %idxprom148, !dbg !3607
  %117 = load i8, i8* %arrayidx149, align 1, !dbg !3607
  %tobool150 = icmp ne i8 %117, 0, !dbg !3607
  br i1 %tobool150, label %if.then151, label %if.end171, !dbg !3609

if.then151:                                       ; preds = %for.body147
  %118 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3610
  %eac3152 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %118, i32 0, i32 12, !dbg !3613
  %119 = load i32, i32* %eac3152, align 4, !dbg !3613
  %tobool153 = icmp ne i32 %119, 0, !dbg !3610
  br i1 %tobool153, label %lor.lhs.false154, label %if.then159, !dbg !3614

lor.lhs.false154:                                 ; preds = %if.then151
  %120 = load i32, i32* %ch, align 4, !dbg !3615
  %idxprom155 = sext i32 %120 to i64, !dbg !3617
  %121 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3617
  %new_cpl_coords = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %121, i32 0, i32 18, !dbg !3618
  %arrayidx156 = getelementptr inbounds [7 x i8], [7 x i8]* %new_cpl_coords, i64 0, i64 %idxprom155, !dbg !3617
  %122 = load i8, i8* %arrayidx156, align 1, !dbg !3617
  %conv = zext i8 %122 to i32, !dbg !3617
  %cmp157 = icmp ne i32 %conv, 2, !dbg !3619
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !3620

if.then159:                                       ; preds = %lor.lhs.false154, %if.then151
  %123 = load i32, i32* %frame_bits, align 4, !dbg !3621
  %inc160 = add nsw i32 %123, 1, !dbg !3621
  store i32 %inc160, i32* %frame_bits, align 4, !dbg !3621
  br label %if.end161, !dbg !3622

if.end161:                                        ; preds = %if.then159, %lor.lhs.false154
  %124 = load i32, i32* %ch, align 4, !dbg !3623
  %idxprom162 = sext i32 %124 to i64, !dbg !3625
  %125 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3625
  %new_cpl_coords163 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %125, i32 0, i32 18, !dbg !3626
  %arrayidx164 = getelementptr inbounds [7 x i8], [7 x i8]* %new_cpl_coords163, i64 0, i64 %idxprom162, !dbg !3625
  %126 = load i8, i8* %arrayidx164, align 1, !dbg !3625
  %tobool165 = icmp ne i8 %126, 0, !dbg !3625
  br i1 %tobool165, label %if.then166, label %if.end170, !dbg !3627

if.then166:                                       ; preds = %if.end161
  %127 = load i32, i32* %frame_bits, align 4, !dbg !3628
  %add167 = add nsw i32 %127, 2, !dbg !3628
  store i32 %add167, i32* %frame_bits, align 4, !dbg !3628
  %128 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3630
  %num_cpl_bands = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %128, i32 0, i32 46, !dbg !3631
  %129 = load i32, i32* %num_cpl_bands, align 4, !dbg !3631
  %mul168 = mul nsw i32 8, %129, !dbg !3632
  %130 = load i32, i32* %frame_bits, align 4, !dbg !3633
  %add169 = add nsw i32 %130, %mul168, !dbg !3633
  store i32 %add169, i32* %frame_bits, align 4, !dbg !3633
  br label %if.end170, !dbg !3634

if.end170:                                        ; preds = %if.then166, %if.end161
  br label %if.end171, !dbg !3635

if.end171:                                        ; preds = %if.end170, %for.body147
  br label %for.inc172, !dbg !3636

for.inc172:                                       ; preds = %if.end171
  %131 = load i32, i32* %ch, align 4, !dbg !3637
  %inc173 = add nsw i32 %131, 1, !dbg !3637
  store i32 %inc173, i32* %ch, align 4, !dbg !3637
  br label %for.cond144, !dbg !3639, !llvm.loop !3640

for.end174:                                       ; preds = %for.cond144
  br label %if.end175, !dbg !3642

if.end175:                                        ; preds = %for.end174, %if.end140
  %132 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3643
  %channel_mode176 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %132, i32 0, i32 31, !dbg !3645
  %133 = load i32, i32* %channel_mode176, align 8, !dbg !3645
  %cmp177 = icmp eq i32 %133, 2, !dbg !3646
  br i1 %cmp177, label %if.then179, label %if.end195, !dbg !3647

if.then179:                                       ; preds = %if.end175
  %134 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3648
  %eac3180 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %134, i32 0, i32 12, !dbg !3651
  %135 = load i32, i32* %eac3180, align 4, !dbg !3651
  %tobool181 = icmp ne i32 %135, 0, !dbg !3648
  br i1 %tobool181, label %lor.lhs.false182, label %if.then185, !dbg !3652

lor.lhs.false182:                                 ; preds = %if.then179
  %136 = load i32, i32* %blk, align 4, !dbg !3653
  %cmp183 = icmp sgt i32 %136, 0, !dbg !3655
  br i1 %cmp183, label %if.then185, label %if.end187, !dbg !3656

if.then185:                                       ; preds = %lor.lhs.false182, %if.then179
  %137 = load i32, i32* %frame_bits, align 4, !dbg !3657
  %inc186 = add nsw i32 %137, 1, !dbg !3657
  store i32 %inc186, i32* %frame_bits, align 4, !dbg !3657
  br label %if.end187, !dbg !3658

if.end187:                                        ; preds = %if.then185, %lor.lhs.false182
  %138 = load i32, i32* %blk, align 4, !dbg !3659
  %idxprom188 = sext i32 %138 to i64, !dbg !3661
  %139 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3661
  %blocks189 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %139, i32 0, i32 10, !dbg !3662
  %arrayidx190 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks189, i64 0, i64 %idxprom188, !dbg !3661
  %new_rematrixing_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx190, i32 0, i32 11, !dbg !3663
  %140 = load i8, i8* %new_rematrixing_strategy, align 1, !dbg !3663
  %tobool191 = icmp ne i8 %140, 0, !dbg !3661
  br i1 %tobool191, label %if.then192, label %if.end194, !dbg !3664

if.then192:                                       ; preds = %if.end187
  %141 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3665
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %141, i32 0, i32 12, !dbg !3666
  %142 = load i32, i32* %num_rematrixing_bands, align 8, !dbg !3666
  %143 = load i32, i32* %frame_bits, align 4, !dbg !3667
  %add193 = add nsw i32 %143, %142, !dbg !3667
  store i32 %add193, i32* %frame_bits, align 4, !dbg !3667
  br label %if.end194, !dbg !3668

if.end194:                                        ; preds = %if.then192, %if.end187
  br label %if.end195, !dbg !3669

if.end195:                                        ; preds = %if.end194, %if.end175
  store i32 1, i32* %ch, align 4, !dbg !3670
  br label %for.cond196, !dbg !3672

for.cond196:                                      ; preds = %for.inc218, %if.end195
  %144 = load i32, i32* %ch, align 4, !dbg !3673
  %145 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3676
  %fbw_channels197 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %145, i32 0, i32 25, !dbg !3677
  %146 = load i32, i32* %fbw_channels197, align 8, !dbg !3677
  %cmp198 = icmp sle i32 %144, %146, !dbg !3678
  br i1 %cmp198, label %for.body200, label %for.end220, !dbg !3679

for.body200:                                      ; preds = %for.cond196
  %147 = load i32, i32* %blk, align 4, !dbg !3680
  %idxprom201 = sext i32 %147 to i64, !dbg !3683
  %148 = load i32, i32* %ch, align 4, !dbg !3684
  %idxprom202 = sext i32 %148 to i64, !dbg !3683
  %149 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3683
  %exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %149, i32 0, i32 75, !dbg !3685
  %arrayidx203 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy, i64 0, i64 %idxprom202, !dbg !3683
  %arrayidx204 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx203, i64 0, i64 %idxprom201, !dbg !3683
  %150 = load i8, i8* %arrayidx204, align 1, !dbg !3683
  %conv205 = zext i8 %150 to i32, !dbg !3683
  %cmp206 = icmp ne i32 %conv205, 0, !dbg !3686
  br i1 %cmp206, label %if.then208, label %if.end217, !dbg !3687

if.then208:                                       ; preds = %for.body200
  %151 = load i32, i32* %ch, align 4, !dbg !3688
  %idxprom209 = sext i32 %151 to i64, !dbg !3691
  %152 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3691
  %channel_in_cpl210 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %152, i32 0, i32 16, !dbg !3692
  %arrayidx211 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl210, i64 0, i64 %idxprom209, !dbg !3691
  %153 = load i8, i8* %arrayidx211, align 1, !dbg !3691
  %tobool212 = icmp ne i8 %153, 0, !dbg !3691
  br i1 %tobool212, label %if.end215, label %if.then213, !dbg !3693

if.then213:                                       ; preds = %if.then208
  %154 = load i32, i32* %frame_bits, align 4, !dbg !3694
  %add214 = add nsw i32 %154, 6, !dbg !3694
  store i32 %add214, i32* %frame_bits, align 4, !dbg !3694
  br label %if.end215, !dbg !3695

if.end215:                                        ; preds = %if.then213, %if.then208
  %155 = load i32, i32* %frame_bits, align 4, !dbg !3696
  %add216 = add nsw i32 %155, 2, !dbg !3696
  store i32 %add216, i32* %frame_bits, align 4, !dbg !3696
  br label %if.end217, !dbg !3697

if.end217:                                        ; preds = %if.end215, %for.body200
  br label %for.inc218, !dbg !3698

for.inc218:                                       ; preds = %if.end217
  %156 = load i32, i32* %ch, align 4, !dbg !3699
  %inc219 = add nsw i32 %156, 1, !dbg !3699
  store i32 %inc219, i32* %ch, align 4, !dbg !3699
  br label %for.cond196, !dbg !3701, !llvm.loop !3702

for.end220:                                       ; preds = %for.cond196
  %157 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3704
  %eac3221 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %157, i32 0, i32 12, !dbg !3706
  %158 = load i32, i32* %eac3221, align 4, !dbg !3706
  %tobool222 = icmp ne i32 %158, 0, !dbg !3704
  br i1 %tobool222, label %if.end227, label %land.lhs.true, !dbg !3707

land.lhs.true:                                    ; preds = %for.end220
  %159 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3708
  %cpl_in_use223 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %159, i32 0, i32 15, !dbg !3710
  %160 = load i32, i32* %cpl_in_use223, align 4, !dbg !3710
  %tobool224 = icmp ne i32 %160, 0, !dbg !3708
  br i1 %tobool224, label %if.then225, label %if.end227, !dbg !3711

if.then225:                                       ; preds = %land.lhs.true
  %161 = load i32, i32* %frame_bits, align 4, !dbg !3712
  %add226 = add nsw i32 %161, 2, !dbg !3712
  store i32 %add226, i32* %frame_bits, align 4, !dbg !3712
  br label %if.end227, !dbg !3713

if.end227:                                        ; preds = %if.then225, %land.lhs.true, %for.end220
  %162 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3714
  %eac3228 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %162, i32 0, i32 12, !dbg !3716
  %163 = load i32, i32* %eac3228, align 4, !dbg !3716
  %tobool229 = icmp ne i32 %163, 0, !dbg !3714
  br i1 %tobool229, label %if.end240, label %if.then230, !dbg !3717

if.then230:                                       ; preds = %if.end227
  %164 = load i32, i32* %frame_bits, align 4, !dbg !3718
  %inc231 = add nsw i32 %164, 1, !dbg !3718
  store i32 %inc231, i32* %frame_bits, align 4, !dbg !3718
  %165 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3720
  %new_snr_offsets = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %165, i32 0, i32 20, !dbg !3722
  %166 = load i32, i32* %new_snr_offsets, align 4, !dbg !3722
  %tobool232 = icmp ne i32 %166, 0, !dbg !3720
  br i1 %tobool232, label %if.then233, label %if.end239, !dbg !3723

if.then233:                                       ; preds = %if.then230
  %167 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3724
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %167, i32 0, i32 26, !dbg !3725
  %168 = load i32, i32* %channels, align 4, !dbg !3725
  %169 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3726
  %cpl_in_use234 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %169, i32 0, i32 15, !dbg !3727
  %170 = load i32, i32* %cpl_in_use234, align 4, !dbg !3727
  %add235 = add nsw i32 %168, %170, !dbg !3728
  %mul236 = mul nsw i32 %add235, 7, !dbg !3729
  %add237 = add nsw i32 6, %mul236, !dbg !3730
  %171 = load i32, i32* %frame_bits, align 4, !dbg !3731
  %add238 = add nsw i32 %171, %add237, !dbg !3731
  store i32 %add238, i32* %frame_bits, align 4, !dbg !3731
  br label %if.end239, !dbg !3732

if.end239:                                        ; preds = %if.then233, %if.then230
  br label %if.end240, !dbg !3733

if.end240:                                        ; preds = %if.end239, %if.end227
  %172 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3734
  %cpl_in_use241 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %172, i32 0, i32 15, !dbg !3736
  %173 = load i32, i32* %cpl_in_use241, align 4, !dbg !3736
  %tobool242 = icmp ne i32 %173, 0, !dbg !3734
  br i1 %tobool242, label %if.then243, label %if.end257, !dbg !3737

if.then243:                                       ; preds = %if.end240
  %174 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3738
  %eac3244 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %174, i32 0, i32 12, !dbg !3741
  %175 = load i32, i32* %eac3244, align 4, !dbg !3741
  %tobool245 = icmp ne i32 %175, 0, !dbg !3738
  br i1 %tobool245, label %lor.lhs.false246, label %if.then249, !dbg !3742

lor.lhs.false246:                                 ; preds = %if.then243
  %176 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3743
  %new_cpl_leak = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %176, i32 0, i32 21, !dbg !3745
  %177 = load i32, i32* %new_cpl_leak, align 8, !dbg !3745
  %cmp247 = icmp ne i32 %177, 2, !dbg !3746
  br i1 %cmp247, label %if.then249, label %if.end251, !dbg !3747

if.then249:                                       ; preds = %lor.lhs.false246, %if.then243
  %178 = load i32, i32* %frame_bits, align 4, !dbg !3748
  %inc250 = add nsw i32 %178, 1, !dbg !3748
  store i32 %inc250, i32* %frame_bits, align 4, !dbg !3748
  br label %if.end251, !dbg !3749

if.end251:                                        ; preds = %if.then249, %lor.lhs.false246
  %179 = load %struct.AC3Block*, %struct.AC3Block** %block94, align 8, !dbg !3750
  %new_cpl_leak252 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %179, i32 0, i32 21, !dbg !3752
  %180 = load i32, i32* %new_cpl_leak252, align 8, !dbg !3752
  %tobool253 = icmp ne i32 %180, 0, !dbg !3750
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !3753

if.then254:                                       ; preds = %if.end251
  %181 = load i32, i32* %frame_bits, align 4, !dbg !3754
  %add255 = add nsw i32 %181, 6, !dbg !3754
  store i32 %add255, i32* %frame_bits, align 4, !dbg !3754
  br label %if.end256, !dbg !3755

if.end256:                                        ; preds = %if.then254, %if.end251
  br label %if.end257, !dbg !3756

if.end257:                                        ; preds = %if.end256, %if.end240
  br label %for.inc258, !dbg !3757

for.inc258:                                       ; preds = %if.end257
  %182 = load i32, i32* %blk, align 4, !dbg !3758
  %inc259 = add nsw i32 %182, 1, !dbg !3758
  store i32 %inc259, i32* %blk, align 4, !dbg !3758
  br label %for.cond90, !dbg !3760, !llvm.loop !3761

for.end260:                                       ; preds = %for.cond90
  %183 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3763
  %frame_bits_fixed = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %183, i32 0, i32 58, !dbg !3764
  %184 = load i32, i32* %frame_bits_fixed, align 4, !dbg !3764
  %185 = load i32, i32* %frame_bits, align 4, !dbg !3765
  %add261 = add nsw i32 %184, %185, !dbg !3766
  %186 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3767
  %frame_bits262 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %186, i32 0, i32 59, !dbg !3768
  store i32 %add261, i32* %frame_bits262, align 8, !dbg !3769
  ret void, !dbg !3770
}

; Function Attrs: nounwind uwtable
define internal i32 @count_exponent_bits(%struct.AC3EncodeContext* %s) #0 !dbg !3771 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %nb_groups = alloca i32, align 4
  %bit_count = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %exp_strategy = alloca i32, align 4
  %cpl = alloca i32, align 4
  %nb_coefs = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3772, metadata !2184), !dbg !3773
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !3774, metadata !2184), !dbg !3775
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3776, metadata !2184), !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %nb_groups, metadata !3778, metadata !2184), !dbg !3779
  call void @llvm.dbg.declare(metadata i32* %bit_count, metadata !3780, metadata !2184), !dbg !3781
  store i32 0, i32* %bit_count, align 4, !dbg !3782
  store i32 0, i32* %blk, align 4, !dbg !3783
  br label %for.cond, !dbg !3785

for.cond:                                         ; preds = %for.inc26, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !3786
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3789
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !3790
  %2 = load i32, i32* %num_blocks, align 4, !dbg !3790
  %cmp = icmp slt i32 %0, %2, !dbg !3791
  br i1 %cmp, label %for.body, label %for.end28, !dbg !3792

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !3793, metadata !2184), !dbg !3795
  %3 = load i32, i32* %blk, align 4, !dbg !3796
  %idxprom = sext i32 %3 to i64, !dbg !3797
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3797
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !3798
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !3797
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !3795
  %5 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3799
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %5, i32 0, i32 15, !dbg !3801
  %6 = load i32, i32* %cpl_in_use, align 4, !dbg !3801
  %tobool = icmp ne i32 %6, 0, !dbg !3802
  %lnot = xor i1 %tobool, true, !dbg !3802
  %lnot.ext = zext i1 %lnot to i32, !dbg !3802
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !3803
  br label %for.cond1, !dbg !3804

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !3805
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3808
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 26, !dbg !3809
  %9 = load i32, i32* %channels, align 4, !dbg !3809
  %cmp2 = icmp sle i32 %7, %9, !dbg !3810
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3811

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %exp_strategy, metadata !3812, metadata !2184), !dbg !3814
  %10 = load i32, i32* %blk, align 4, !dbg !3815
  %idxprom4 = sext i32 %10 to i64, !dbg !3816
  %11 = load i32, i32* %ch, align 4, !dbg !3817
  %idxprom5 = sext i32 %11 to i64, !dbg !3816
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3816
  %exp_strategy6 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 75, !dbg !3818
  %arrayidx7 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy6, i64 0, i64 %idxprom5, !dbg !3816
  %arrayidx8 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx7, i64 0, i64 %idxprom4, !dbg !3816
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !3816
  %conv = zext i8 %13 to i32, !dbg !3816
  store i32 %conv, i32* %exp_strategy, align 4, !dbg !3814
  call void @llvm.dbg.declare(metadata i32* %cpl, metadata !3819, metadata !2184), !dbg !3820
  %14 = load i32, i32* %ch, align 4, !dbg !3821
  %cmp9 = icmp eq i32 %14, 0, !dbg !3822
  %conv10 = zext i1 %cmp9 to i32, !dbg !3822
  store i32 %conv10, i32* %cpl, align 4, !dbg !3820
  call void @llvm.dbg.declare(metadata i32* %nb_coefs, metadata !3823, metadata !2184), !dbg !3824
  %15 = load i32, i32* %ch, align 4, !dbg !3825
  %idxprom11 = sext i32 %15 to i64, !dbg !3826
  %16 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3826
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %16, i32 0, i32 22, !dbg !3827
  %arrayidx12 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom11, !dbg !3826
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !3826
  %18 = load i32, i32* %ch, align 4, !dbg !3828
  %idxprom13 = sext i32 %18 to i64, !dbg !3829
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3829
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 41, !dbg !3830
  %arrayidx14 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom13, !dbg !3829
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !3829
  %sub = sub nsw i32 %17, %20, !dbg !3831
  store i32 %sub, i32* %nb_coefs, align 4, !dbg !3824
  %21 = load i32, i32* %exp_strategy, align 4, !dbg !3832
  %cmp15 = icmp eq i32 %21, 0, !dbg !3834
  br i1 %cmp15, label %if.then, label %if.end, !dbg !3835

if.then:                                          ; preds = %for.body3
  br label %for.inc, !dbg !3836

if.end:                                           ; preds = %for.body3
  %22 = load i32, i32* %nb_coefs, align 4, !dbg !3837
  %idxprom17 = sext i32 %22 to i64, !dbg !3838
  %23 = load i32, i32* %exp_strategy, align 4, !dbg !3839
  %sub18 = sub nsw i32 %23, 1, !dbg !3840
  %idxprom19 = sext i32 %sub18 to i64, !dbg !3838
  %24 = load i32, i32* %cpl, align 4, !dbg !3841
  %idxprom20 = sext i32 %24 to i64, !dbg !3838
  %arrayidx21 = getelementptr inbounds [2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 %idxprom20, !dbg !3838
  %arrayidx22 = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !3838
  %arrayidx23 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx22, i64 0, i64 %idxprom17, !dbg !3838
  %25 = load i8, i8* %arrayidx23, align 1, !dbg !3838
  %conv24 = zext i8 %25 to i32, !dbg !3838
  store i32 %conv24, i32* %nb_groups, align 4, !dbg !3842
  %26 = load i32, i32* %nb_groups, align 4, !dbg !3843
  %mul = mul nsw i32 %26, 7, !dbg !3844
  %add = add nsw i32 4, %mul, !dbg !3845
  %27 = load i32, i32* %bit_count, align 4, !dbg !3846
  %add25 = add nsw i32 %27, %add, !dbg !3846
  store i32 %add25, i32* %bit_count, align 4, !dbg !3846
  br label %for.inc, !dbg !3847

for.inc:                                          ; preds = %if.end, %if.then
  %28 = load i32, i32* %ch, align 4, !dbg !3848
  %inc = add nsw i32 %28, 1, !dbg !3848
  store i32 %inc, i32* %ch, align 4, !dbg !3848
  br label %for.cond1, !dbg !3850, !llvm.loop !3851

for.end:                                          ; preds = %for.cond1
  br label %for.inc26, !dbg !3853

for.inc26:                                        ; preds = %for.end
  %29 = load i32, i32* %blk, align 4, !dbg !3854
  %inc27 = add nsw i32 %29, 1, !dbg !3854
  store i32 %inc27, i32* %blk, align 4, !dbg !3854
  br label %for.cond, !dbg !3856, !llvm.loop !3857

for.end28:                                        ; preds = %for.cond
  %30 = load i32, i32* %bit_count, align 4, !dbg !3859
  ret i32 %30, !dbg !3860
}

; Function Attrs: nounwind uwtable
define internal void @bit_alloc_masking(%struct.AC3EncodeContext* %s) #0 !dbg !3861 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3862, metadata !2184), !dbg !3863
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !3864, metadata !2184), !dbg !3865
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3866, metadata !2184), !dbg !3867
  store i32 0, i32* %blk, align 4, !dbg !3868
  br label %for.cond, !dbg !3870

for.cond:                                         ; preds = %for.inc38, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !3871
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3874
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !3875
  %2 = load i32, i32* %num_blocks, align 4, !dbg !3875
  %cmp = icmp slt i32 %0, %2, !dbg !3876
  br i1 %cmp, label %for.body, label %for.end40, !dbg !3877

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !3878, metadata !2184), !dbg !3880
  %3 = load i32, i32* %blk, align 4, !dbg !3881
  %idxprom = sext i32 %3 to i64, !dbg !3882
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3882
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !3883
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !3882
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !3880
  %5 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3884
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %5, i32 0, i32 15, !dbg !3886
  %6 = load i32, i32* %cpl_in_use, align 4, !dbg !3886
  %tobool = icmp ne i32 %6, 0, !dbg !3887
  %lnot = xor i1 %tobool, true, !dbg !3887
  %lnot.ext = zext i1 %lnot to i32, !dbg !3887
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !3888
  br label %for.cond1, !dbg !3889

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !3890
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3893
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 26, !dbg !3894
  %9 = load i32, i32* %channels, align 4, !dbg !3894
  %cmp2 = icmp sle i32 %7, %9, !dbg !3895
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3896

for.body3:                                        ; preds = %for.cond1
  %10 = load i32, i32* %blk, align 4, !dbg !3897
  %idxprom4 = sext i32 %10 to i64, !dbg !3900
  %11 = load i32, i32* %ch, align 4, !dbg !3901
  %idxprom5 = sext i32 %11 to i64, !dbg !3900
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3900
  %exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 75, !dbg !3902
  %arrayidx6 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy, i64 0, i64 %idxprom5, !dbg !3900
  %arrayidx7 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !3900
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !3900
  %conv = zext i8 %13 to i32, !dbg !3900
  %cmp8 = icmp ne i32 %conv, 0, !dbg !3903
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3904

if.then:                                          ; preds = %for.body3
  %14 = load i32, i32* %ch, align 4, !dbg !3905
  %idxprom10 = sext i32 %14 to i64, !dbg !3907
  %15 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3907
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %15, i32 0, i32 2, !dbg !3908
  %16 = load i8**, i8*** %exp, align 8, !dbg !3908
  %arrayidx11 = getelementptr inbounds i8*, i8** %16, i64 %idxprom10, !dbg !3907
  %17 = load i8*, i8** %arrayidx11, align 8, !dbg !3907
  %18 = load i32, i32* %ch, align 4, !dbg !3909
  %idxprom12 = sext i32 %18 to i64, !dbg !3910
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3910
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 41, !dbg !3911
  %arrayidx13 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom12, !dbg !3910
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !3910
  %21 = load i32, i32* %ch, align 4, !dbg !3912
  %idxprom14 = sext i32 %21 to i64, !dbg !3913
  %22 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3913
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %22, i32 0, i32 22, !dbg !3914
  %arrayidx15 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom14, !dbg !3913
  %23 = load i32, i32* %arrayidx15, align 4, !dbg !3913
  %24 = load i32, i32* %ch, align 4, !dbg !3915
  %idxprom16 = sext i32 %24 to i64, !dbg !3916
  %25 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3916
  %psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %25, i32 0, i32 4, !dbg !3917
  %26 = load i16**, i16*** %psd, align 8, !dbg !3917
  %arrayidx17 = getelementptr inbounds i16*, i16** %26, i64 %idxprom16, !dbg !3916
  %27 = load i16*, i16** %arrayidx17, align 8, !dbg !3916
  %28 = load i32, i32* %ch, align 4, !dbg !3918
  %idxprom18 = sext i32 %28 to i64, !dbg !3919
  %29 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3919
  %band_psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %29, i32 0, i32 5, !dbg !3920
  %30 = load i16**, i16*** %band_psd, align 8, !dbg !3920
  %arrayidx19 = getelementptr inbounds i16*, i16** %30, i64 %idxprom18, !dbg !3919
  %31 = load i16*, i16** %arrayidx19, align 8, !dbg !3919
  call void @ff_ac3_bit_alloc_calc_psd(i8* %17, i32 %20, i32 %23, i16* %27, i16* %31), !dbg !3921
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3922
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 54, !dbg !3923
  %33 = load i32, i32* %ch, align 4, !dbg !3924
  %idxprom20 = sext i32 %33 to i64, !dbg !3925
  %34 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3925
  %band_psd21 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %34, i32 0, i32 5, !dbg !3926
  %35 = load i16**, i16*** %band_psd21, align 8, !dbg !3926
  %arrayidx22 = getelementptr inbounds i16*, i16** %35, i64 %idxprom20, !dbg !3925
  %36 = load i16*, i16** %arrayidx22, align 8, !dbg !3925
  %37 = load i32, i32* %ch, align 4, !dbg !3927
  %idxprom23 = sext i32 %37 to i64, !dbg !3928
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3928
  %start_freq24 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 41, !dbg !3929
  %arrayidx25 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq24, i64 0, i64 %idxprom23, !dbg !3928
  %39 = load i32, i32* %arrayidx25, align 4, !dbg !3928
  %40 = load i32, i32* %ch, align 4, !dbg !3930
  %idxprom26 = sext i32 %40 to i64, !dbg !3931
  %41 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3931
  %end_freq27 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %41, i32 0, i32 22, !dbg !3932
  %arrayidx28 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq27, i64 0, i64 %idxprom26, !dbg !3931
  %42 = load i32, i32* %arrayidx28, align 4, !dbg !3931
  %43 = load i32, i32* %ch, align 4, !dbg !3933
  %idxprom29 = sext i32 %43 to i64, !dbg !3934
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3934
  %fast_gain_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 56, !dbg !3935
  %arrayidx30 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain_code, i64 0, i64 %idxprom29, !dbg !3934
  %45 = load i32, i32* %arrayidx30, align 4, !dbg !3934
  %idxprom31 = sext i32 %45 to i64, !dbg !3936
  %arrayidx32 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 %idxprom31, !dbg !3936
  %46 = load i16, i16* %arrayidx32, align 2, !dbg !3936
  %conv33 = zext i16 %46 to i32, !dbg !3936
  %47 = load i32, i32* %ch, align 4, !dbg !3937
  %48 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3938
  %lfe_channel = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %48, i32 0, i32 28, !dbg !3939
  %49 = load i32, i32* %lfe_channel, align 4, !dbg !3939
  %cmp34 = icmp eq i32 %47, %49, !dbg !3940
  %conv35 = zext i1 %cmp34 to i32, !dbg !3940
  %50 = load i32, i32* %ch, align 4, !dbg !3941
  %idxprom36 = sext i32 %50 to i64, !dbg !3942
  %51 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !3942
  %mask = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %51, i32 0, i32 6, !dbg !3943
  %52 = load i16**, i16*** %mask, align 8, !dbg !3943
  %arrayidx37 = getelementptr inbounds i16*, i16** %52, i64 %idxprom36, !dbg !3942
  %53 = load i16*, i16** %arrayidx37, align 8, !dbg !3942
  %call = call i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters* %bit_alloc, i16* %36, i32 %39, i32 %42, i32 %conv33, i32 %conv35, i32 2, i32 0, i8* null, i8* null, i8* null, i16* %53), !dbg !3944
  br label %if.end, !dbg !3945

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !3946

for.inc:                                          ; preds = %if.end
  %54 = load i32, i32* %ch, align 4, !dbg !3947
  %inc = add nsw i32 %54, 1, !dbg !3947
  store i32 %inc, i32* %ch, align 4, !dbg !3947
  br label %for.cond1, !dbg !3949, !llvm.loop !3950

for.end:                                          ; preds = %for.cond1
  br label %for.inc38, !dbg !3952

for.inc38:                                        ; preds = %for.end
  %55 = load i32, i32* %blk, align 4, !dbg !3953
  %inc39 = add nsw i32 %55, 1, !dbg !3953
  store i32 %inc39, i32* %blk, align 4, !dbg !3953
  br label %for.cond, !dbg !3955, !llvm.loop !3956

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !3958
}

; Function Attrs: nounwind uwtable
define internal i32 @cbr_bit_allocation(%struct.AC3EncodeContext* %s) #0 !dbg !3959 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch = alloca i32, align 4
  %bits_left = alloca i32, align 4
  %snr_offset = alloca i32, align 4
  %snr_incr = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  %SWAP_tmp28 = alloca i8*, align 8
  %SWAP_tmp36 = alloca i8*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !3960, metadata !2184), !dbg !3961
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3962, metadata !2184), !dbg !3963
  call void @llvm.dbg.declare(metadata i32* %bits_left, metadata !3964, metadata !2184), !dbg !3965
  call void @llvm.dbg.declare(metadata i32* %snr_offset, metadata !3966, metadata !2184), !dbg !3967
  call void @llvm.dbg.declare(metadata i32* %snr_incr, metadata !3968, metadata !2184), !dbg !3969
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3970
  %frame_size = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 20, !dbg !3971
  %1 = load i32, i32* %frame_size, align 4, !dbg !3971
  %mul = mul nsw i32 8, %1, !dbg !3972
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3973
  %frame_bits = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 59, !dbg !3974
  %3 = load i32, i32* %frame_bits, align 8, !dbg !3974
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3975
  %exponent_bits = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 60, !dbg !3976
  %5 = load i32, i32* %exponent_bits, align 4, !dbg !3976
  %add = add nsw i32 %3, %5, !dbg !3977
  %sub = sub nsw i32 %mul, %add, !dbg !3978
  store i32 %sub, i32* %bits_left, align 4, !dbg !3979
  %6 = load i32, i32* %bits_left, align 4, !dbg !3980
  %cmp = icmp slt i32 %6, 0, !dbg !3982
  br i1 %cmp, label %if.then, label %if.end, !dbg !3983

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !3984
  br label %return, !dbg !3984

if.end:                                           ; preds = %entry
  %7 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3985
  %coarse_snr_offset = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %7, i32 0, i32 55, !dbg !3986
  %8 = load i32, i32* %coarse_snr_offset, align 8, !dbg !3986
  %shl = shl i32 %8, 4, !dbg !3987
  store i32 %shl, i32* %snr_offset, align 4, !dbg !3988
  %9 = load i32, i32* %snr_offset, align 4, !dbg !3989
  %10 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3991
  %fine_snr_offset = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %10, i32 0, i32 57, !dbg !3992
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %fine_snr_offset, i64 0, i64 1, !dbg !3991
  %11 = load i32, i32* %arrayidx, align 4, !dbg !3991
  %or = or i32 %9, %11, !dbg !3993
  %cmp1 = icmp eq i32 %or, 1023, !dbg !3994
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3995

if.then2:                                         ; preds = %if.end
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !3996
  %call = call i32 @bit_alloc(%struct.AC3EncodeContext* %12, i32 1023), !dbg !3999
  %13 = load i32, i32* %bits_left, align 4, !dbg !4000
  %cmp3 = icmp sle i32 %call, %13, !dbg !4001
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4002

if.then4:                                         ; preds = %if.then2
  store i32 0, i32* %retval, align 4, !dbg !4003
  br label %return, !dbg !4003

if.end5:                                          ; preds = %if.then2
  br label %if.end6, !dbg !4004

if.end6:                                          ; preds = %if.end5, %if.end
  br label %while.cond, !dbg !4005

while.cond:                                       ; preds = %while.body, %if.end6
  %14 = load i32, i32* %snr_offset, align 4, !dbg !4006
  %cmp7 = icmp sge i32 %14, 0, !dbg !4008
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !4009

land.rhs:                                         ; preds = %while.cond
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4010
  %16 = load i32, i32* %snr_offset, align 4, !dbg !4011
  %call8 = call i32 @bit_alloc(%struct.AC3EncodeContext* %15, i32 %16), !dbg !4012
  %17 = load i32, i32* %bits_left, align 4, !dbg !4013
  %cmp9 = icmp sgt i32 %call8, %17, !dbg !4014
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp9, %land.rhs ]
  br i1 %18, label %while.body, label %while.end, !dbg !4015

while.body:                                       ; preds = %land.end
  %19 = load i32, i32* %snr_offset, align 4, !dbg !4017
  %sub10 = sub nsw i32 %19, 64, !dbg !4017
  store i32 %sub10, i32* %snr_offset, align 4, !dbg !4017
  br label %while.cond, !dbg !4019, !llvm.loop !4021

while.end:                                        ; preds = %land.end
  %20 = load i32, i32* %snr_offset, align 4, !dbg !4022
  %cmp11 = icmp slt i32 %20, 0, !dbg !4024
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4025

if.then12:                                        ; preds = %while.end
  store i32 -22, i32* %retval, align 4, !dbg !4026
  br label %return, !dbg !4026

if.end13:                                         ; preds = %while.end
  br label %do.body, !dbg !4027, !llvm.loop !4028

do.body:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !4029, metadata !2184), !dbg !4031
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4032
  %bap1_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 64, !dbg !4034
  %22 = load i8*, i8** %bap1_buffer, align 8, !dbg !4034
  store i8* %22, i8** %SWAP_tmp, align 8, !dbg !4035
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4036
  %bap_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 63, !dbg !4037
  %24 = load i8*, i8** %bap_buffer, align 8, !dbg !4037
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4038
  %bap1_buffer14 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 64, !dbg !4039
  store i8* %24, i8** %bap1_buffer14, align 8, !dbg !4040
  %26 = load i8*, i8** %SWAP_tmp, align 8, !dbg !4041
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4042
  %bap_buffer15 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 63, !dbg !4043
  store i8* %26, i8** %bap_buffer15, align 8, !dbg !4044
  br label %do.end, !dbg !4045

do.end:                                           ; preds = %do.body
  store i32 64, i32* %snr_incr, align 4, !dbg !4046
  br label %for.cond, !dbg !4048

for.cond:                                         ; preds = %for.inc, %do.end
  %28 = load i32, i32* %snr_incr, align 4, !dbg !4049
  %cmp16 = icmp sgt i32 %28, 0, !dbg !4052
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4053

for.body:                                         ; preds = %for.cond
  br label %while.cond17, !dbg !4054

while.cond17:                                     ; preds = %do.end33, %for.body
  %29 = load i32, i32* %snr_offset, align 4, !dbg !4056
  %30 = load i32, i32* %snr_incr, align 4, !dbg !4058
  %add18 = add nsw i32 %29, %30, !dbg !4059
  %cmp19 = icmp sle i32 %add18, 1023, !dbg !4060
  br i1 %cmp19, label %land.rhs20, label %land.end24, !dbg !4061

land.rhs20:                                       ; preds = %while.cond17
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4062
  %32 = load i32, i32* %snr_offset, align 4, !dbg !4063
  %33 = load i32, i32* %snr_incr, align 4, !dbg !4064
  %add21 = add nsw i32 %32, %33, !dbg !4065
  %call22 = call i32 @bit_alloc(%struct.AC3EncodeContext* %31, i32 %add21), !dbg !4066
  %34 = load i32, i32* %bits_left, align 4, !dbg !4067
  %cmp23 = icmp sle i32 %call22, %34, !dbg !4068
  br label %land.end24

land.end24:                                       ; preds = %land.rhs20, %while.cond17
  %35 = phi i1 [ false, %while.cond17 ], [ %cmp23, %land.rhs20 ]
  br i1 %35, label %while.body25, label %while.end34, !dbg !4069

while.body25:                                     ; preds = %land.end24
  %36 = load i32, i32* %snr_incr, align 4, !dbg !4071
  %37 = load i32, i32* %snr_offset, align 4, !dbg !4073
  %add26 = add nsw i32 %37, %36, !dbg !4073
  store i32 %add26, i32* %snr_offset, align 4, !dbg !4073
  br label %do.body27, !dbg !4074, !llvm.loop !4075

do.body27:                                        ; preds = %while.body25
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp28, metadata !4076, metadata !2184), !dbg !4078
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4079
  %bap1_buffer29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 64, !dbg !4081
  %39 = load i8*, i8** %bap1_buffer29, align 8, !dbg !4081
  store i8* %39, i8** %SWAP_tmp28, align 8, !dbg !4082
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4083
  %bap_buffer30 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 63, !dbg !4084
  %41 = load i8*, i8** %bap_buffer30, align 8, !dbg !4084
  %42 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4085
  %bap1_buffer31 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %42, i32 0, i32 64, !dbg !4086
  store i8* %41, i8** %bap1_buffer31, align 8, !dbg !4087
  %43 = load i8*, i8** %SWAP_tmp28, align 8, !dbg !4088
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4089
  %bap_buffer32 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 63, !dbg !4090
  store i8* %43, i8** %bap_buffer32, align 8, !dbg !4091
  br label %do.end33, !dbg !4092

do.end33:                                         ; preds = %do.body27
  br label %while.cond17, !dbg !4093, !llvm.loop !4095

while.end34:                                      ; preds = %land.end24
  br label %for.inc, !dbg !4096

for.inc:                                          ; preds = %while.end34
  %45 = load i32, i32* %snr_incr, align 4, !dbg !4097
  %shr = ashr i32 %45, 2, !dbg !4097
  store i32 %shr, i32* %snr_incr, align 4, !dbg !4097
  br label %for.cond, !dbg !4099, !llvm.loop !4100

for.end:                                          ; preds = %for.cond
  br label %do.body35, !dbg !4102, !llvm.loop !4103

do.body35:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp36, metadata !4104, metadata !2184), !dbg !4106
  %46 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4107
  %bap1_buffer37 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %46, i32 0, i32 64, !dbg !4109
  %47 = load i8*, i8** %bap1_buffer37, align 8, !dbg !4109
  store i8* %47, i8** %SWAP_tmp36, align 8, !dbg !4110
  %48 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4111
  %bap_buffer38 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %48, i32 0, i32 63, !dbg !4112
  %49 = load i8*, i8** %bap_buffer38, align 8, !dbg !4112
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4113
  %bap1_buffer39 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 64, !dbg !4114
  store i8* %49, i8** %bap1_buffer39, align 8, !dbg !4115
  %51 = load i8*, i8** %SWAP_tmp36, align 8, !dbg !4116
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4117
  %bap_buffer40 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 63, !dbg !4118
  store i8* %51, i8** %bap_buffer40, align 8, !dbg !4119
  br label %do.end41, !dbg !4120

do.end41:                                         ; preds = %do.body35
  %53 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4121
  call void @reset_block_bap(%struct.AC3EncodeContext* %53), !dbg !4122
  %54 = load i32, i32* %snr_offset, align 4, !dbg !4123
  %shr42 = ashr i32 %54, 4, !dbg !4124
  %55 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4125
  %coarse_snr_offset43 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %55, i32 0, i32 55, !dbg !4126
  store i32 %shr42, i32* %coarse_snr_offset43, align 8, !dbg !4127
  %56 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4128
  %cpl_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %56, i32 0, i32 43, !dbg !4130
  %57 = load i32, i32* %cpl_on, align 8, !dbg !4130
  %tobool = icmp ne i32 %57, 0, !dbg !4131
  %lnot = xor i1 %tobool, true, !dbg !4131
  %lnot.ext = zext i1 %lnot to i32, !dbg !4131
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !4132
  br label %for.cond44, !dbg !4133

for.cond44:                                       ; preds = %for.inc49, %do.end41
  %58 = load i32, i32* %ch, align 4, !dbg !4134
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4137
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 26, !dbg !4138
  %60 = load i32, i32* %channels, align 4, !dbg !4138
  %cmp45 = icmp sle i32 %58, %60, !dbg !4139
  br i1 %cmp45, label %for.body46, label %for.end50, !dbg !4140

for.body46:                                       ; preds = %for.cond44
  %61 = load i32, i32* %snr_offset, align 4, !dbg !4141
  %and = and i32 %61, 15, !dbg !4142
  %62 = load i32, i32* %ch, align 4, !dbg !4143
  %idxprom = sext i32 %62 to i64, !dbg !4144
  %63 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4144
  %fine_snr_offset47 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %63, i32 0, i32 57, !dbg !4145
  %arrayidx48 = getelementptr inbounds [7 x i32], [7 x i32]* %fine_snr_offset47, i64 0, i64 %idxprom, !dbg !4144
  store i32 %and, i32* %arrayidx48, align 4, !dbg !4146
  br label %for.inc49, !dbg !4144

for.inc49:                                        ; preds = %for.body46
  %64 = load i32, i32* %ch, align 4, !dbg !4147
  %inc = add nsw i32 %64, 1, !dbg !4147
  store i32 %inc, i32* %ch, align 4, !dbg !4147
  br label %for.cond44, !dbg !4149, !llvm.loop !4150

for.end50:                                        ; preds = %for.cond44
  store i32 0, i32* %retval, align 4, !dbg !4152
  br label %return, !dbg !4152

return:                                           ; preds = %for.end50, %if.then12, %if.then4, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !4153
  ret i32 %65, !dbg !4153
}

; Function Attrs: nounwind uwtable
define void @ff_ac3_quantize_mantissas(%struct.AC3EncodeContext* %s) #0 !dbg !4154 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %ch0 = alloca i32, align 4
  %got_cpl = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %m = alloca %struct.AC3Mant, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !4155, metadata !2184), !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !4157, metadata !2184), !dbg !4158
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4159, metadata !2184), !dbg !4160
  call void @llvm.dbg.declare(metadata i32* %ch0, metadata !4161, metadata !2184), !dbg !4162
  store i32 0, i32* %ch0, align 4, !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %got_cpl, metadata !4163, metadata !2184), !dbg !4164
  store i32 0, i32* %blk, align 4, !dbg !4165
  br label %for.cond, !dbg !4167

for.cond:                                         ; preds = %for.inc36, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !4168
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4171
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !4172
  %2 = load i32, i32* %num_blocks, align 4, !dbg !4172
  %cmp = icmp slt i32 %0, %2, !dbg !4173
  br i1 %cmp, label %for.body, label %for.end38, !dbg !4174

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !4175, metadata !2184), !dbg !4177
  %3 = load i32, i32* %blk, align 4, !dbg !4178
  %idxprom = sext i32 %3 to i64, !dbg !4179
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4179
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !4180
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !4179
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !4177
  call void @llvm.dbg.declare(metadata %struct.AC3Mant* %m, metadata !4181, metadata !2184), !dbg !4191
  %5 = bitcast %struct.AC3Mant* %m to i8*, !dbg !4191
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 40, i32 8, i1 false), !dbg !4191
  %6 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4192
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %6, i32 0, i32 15, !dbg !4193
  %7 = load i32, i32* %cpl_in_use, align 4, !dbg !4193
  %tobool = icmp ne i32 %7, 0, !dbg !4194
  %lnot = xor i1 %tobool, true, !dbg !4194
  %lnot.ext = zext i1 %lnot to i32, !dbg !4194
  store i32 %lnot.ext, i32* %got_cpl, align 4, !dbg !4195
  store i32 1, i32* %ch, align 4, !dbg !4196
  br label %for.cond1, !dbg !4198

for.cond1:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %ch, align 4, !dbg !4199
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4202
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 26, !dbg !4203
  %10 = load i32, i32* %channels, align 4, !dbg !4203
  %cmp2 = icmp sle i32 %8, %10, !dbg !4204
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !4205

for.body3:                                        ; preds = %for.cond1
  %11 = load i32, i32* %got_cpl, align 4, !dbg !4206
  %tobool4 = icmp ne i32 %11, 0, !dbg !4206
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !4209

land.lhs.true:                                    ; preds = %for.body3
  %12 = load i32, i32* %ch, align 4, !dbg !4210
  %cmp5 = icmp sgt i32 %12, 1, !dbg !4212
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !4213

land.lhs.true6:                                   ; preds = %land.lhs.true
  %13 = load i32, i32* %ch, align 4, !dbg !4214
  %sub = sub nsw i32 %13, 1, !dbg !4216
  %idxprom7 = sext i32 %sub to i64, !dbg !4217
  %14 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4217
  %channel_in_cpl = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %14, i32 0, i32 16, !dbg !4218
  %arrayidx8 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl, i64 0, i64 %idxprom7, !dbg !4217
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !4217
  %conv = zext i8 %15 to i32, !dbg !4217
  %tobool9 = icmp ne i32 %conv, 0, !dbg !4217
  br i1 %tobool9, label %if.then, label %if.end, !dbg !4219

if.then:                                          ; preds = %land.lhs.true6
  %16 = load i32, i32* %ch, align 4, !dbg !4220
  %sub10 = sub nsw i32 %16, 1, !dbg !4222
  store i32 %sub10, i32* %ch0, align 4, !dbg !4223
  store i32 0, i32* %ch, align 4, !dbg !4224
  store i32 1, i32* %got_cpl, align 4, !dbg !4225
  br label %if.end, !dbg !4226

if.end:                                           ; preds = %if.then, %land.lhs.true6, %land.lhs.true, %for.body3
  %17 = load i32, i32* %ch, align 4, !dbg !4227
  %idxprom11 = sext i32 %17 to i64, !dbg !4228
  %18 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4228
  %fixed_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %18, i32 0, i32 1, !dbg !4229
  %19 = load i32**, i32*** %fixed_coef, align 8, !dbg !4229
  %arrayidx12 = getelementptr inbounds i32*, i32** %19, i64 %idxprom11, !dbg !4228
  %20 = load i32*, i32** %arrayidx12, align 8, !dbg !4228
  %21 = load i32, i32* %ch, align 4, !dbg !4230
  %idxprom13 = sext i32 %21 to i64, !dbg !4231
  %22 = load i32, i32* %blk, align 4, !dbg !4232
  %idxprom14 = sext i32 %22 to i64, !dbg !4233
  %23 = load i32, i32* %ch, align 4, !dbg !4234
  %idxprom15 = sext i32 %23 to i64, !dbg !4233
  %24 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4233
  %exp_ref_block = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %24, i32 0, i32 78, !dbg !4235
  %arrayidx16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_ref_block, i64 0, i64 %idxprom15, !dbg !4233
  %arrayidx17 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !4233
  %25 = load i8, i8* %arrayidx17, align 1, !dbg !4233
  %idxprom18 = zext i8 %25 to i64, !dbg !4231
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4231
  %blocks19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 10, !dbg !4236
  %arrayidx20 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks19, i64 0, i64 %idxprom18, !dbg !4231
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx20, i32 0, i32 2, !dbg !4237
  %27 = load i8**, i8*** %exp, align 8, !dbg !4237
  %arrayidx21 = getelementptr inbounds i8*, i8** %27, i64 %idxprom13, !dbg !4231
  %28 = load i8*, i8** %arrayidx21, align 8, !dbg !4231
  %29 = load i32, i32* %blk, align 4, !dbg !4238
  %idxprom22 = sext i32 %29 to i64, !dbg !4239
  %30 = load i32, i32* %ch, align 4, !dbg !4240
  %idxprom23 = sext i32 %30 to i64, !dbg !4239
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4239
  %ref_bap = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 79, !dbg !4241
  %arrayidx24 = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap, i64 0, i64 %idxprom23, !dbg !4239
  %arrayidx25 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx24, i64 0, i64 %idxprom22, !dbg !4239
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !4239
  %33 = load i32, i32* %ch, align 4, !dbg !4242
  %idxprom26 = sext i32 %33 to i64, !dbg !4243
  %34 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4243
  %qmant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %34, i32 0, i32 7, !dbg !4244
  %35 = load i16**, i16*** %qmant, align 8, !dbg !4244
  %arrayidx27 = getelementptr inbounds i16*, i16** %35, i64 %idxprom26, !dbg !4243
  %36 = load i16*, i16** %arrayidx27, align 8, !dbg !4243
  %37 = load i32, i32* %ch, align 4, !dbg !4245
  %idxprom28 = sext i32 %37 to i64, !dbg !4246
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4246
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 41, !dbg !4247
  %arrayidx29 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom28, !dbg !4246
  %39 = load i32, i32* %arrayidx29, align 4, !dbg !4246
  %40 = load i32, i32* %ch, align 4, !dbg !4248
  %idxprom30 = sext i32 %40 to i64, !dbg !4249
  %41 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4249
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %41, i32 0, i32 22, !dbg !4250
  %arrayidx31 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom30, !dbg !4249
  %42 = load i32, i32* %arrayidx31, align 4, !dbg !4249
  call void @quantize_mantissas_blk_ch(%struct.AC3Mant* %m, i32* %20, i8* %28, i8* %32, i16* %36, i32 %39, i32 %42), !dbg !4251
  %43 = load i32, i32* %ch, align 4, !dbg !4252
  %cmp32 = icmp eq i32 %43, 0, !dbg !4254
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !4255

if.then34:                                        ; preds = %if.end
  %44 = load i32, i32* %ch0, align 4, !dbg !4256
  store i32 %44, i32* %ch, align 4, !dbg !4257
  br label %if.end35, !dbg !4258

if.end35:                                         ; preds = %if.then34, %if.end
  br label %for.inc, !dbg !4259

for.inc:                                          ; preds = %if.end35
  %45 = load i32, i32* %ch, align 4, !dbg !4260
  %inc = add nsw i32 %45, 1, !dbg !4260
  store i32 %inc, i32* %ch, align 4, !dbg !4260
  br label %for.cond1, !dbg !4262, !llvm.loop !4263

for.end:                                          ; preds = %for.cond1
  br label %for.inc36, !dbg !4265

for.inc36:                                        ; preds = %for.end
  %46 = load i32, i32* %blk, align 4, !dbg !4266
  %inc37 = add nsw i32 %46, 1, !dbg !4266
  store i32 %inc37, i32* %blk, align 4, !dbg !4266
  br label %for.cond, !dbg !4268, !llvm.loop !4269

for.end38:                                        ; preds = %for.cond
  ret void, !dbg !4271
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @quantize_mantissas_blk_ch(%struct.AC3Mant* %s, i32* %fixed_coef, i8* %exp, i8* %bap, i16* %qmant, i32 %start_freq, i32 %end_freq) #0 !dbg !4272 {
entry:
  %s.addr = alloca %struct.AC3Mant*, align 8
  %fixed_coef.addr = alloca i32*, align 8
  %exp.addr = alloca i8*, align 8
  %bap.addr = alloca i8*, align 8
  %qmant.addr = alloca i16*, align 8
  %start_freq.addr = alloca i32, align 4
  %end_freq.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %e = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.AC3Mant* %s, %struct.AC3Mant** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3Mant** %s.addr, metadata !4276, metadata !2184), !dbg !4277
  store i32* %fixed_coef, i32** %fixed_coef.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fixed_coef.addr, metadata !4278, metadata !2184), !dbg !4279
  store i8* %exp, i8** %exp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %exp.addr, metadata !4280, metadata !2184), !dbg !4281
  store i8* %bap, i8** %bap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bap.addr, metadata !4282, metadata !2184), !dbg !4283
  store i16* %qmant, i16** %qmant.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %qmant.addr, metadata !4284, metadata !2184), !dbg !4285
  store i32 %start_freq, i32* %start_freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_freq.addr, metadata !4286, metadata !2184), !dbg !4287
  store i32 %end_freq, i32* %end_freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_freq.addr, metadata !4288, metadata !2184), !dbg !4289
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4290, metadata !2184), !dbg !4291
  %0 = load i32, i32* %start_freq.addr, align 4, !dbg !4292
  store i32 %0, i32* %i, align 4, !dbg !4294
  br label %for.cond, !dbg !4295

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !4296
  %2 = load i32, i32* %end_freq.addr, align 4, !dbg !4299
  %cmp = icmp slt i32 %1, %2, !dbg !4300
  br i1 %cmp, label %for.body, label %for.end, !dbg !4301

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4302, metadata !2184), !dbg !4304
  %3 = load i32, i32* %i, align 4, !dbg !4305
  %idxprom = sext i32 %3 to i64, !dbg !4306
  %4 = load i32*, i32** %fixed_coef.addr, align 8, !dbg !4306
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !4306
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4306
  store i32 %5, i32* %c, align 4, !dbg !4304
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4307, metadata !2184), !dbg !4308
  %6 = load i32, i32* %i, align 4, !dbg !4309
  %idxprom1 = sext i32 %6 to i64, !dbg !4310
  %7 = load i8*, i8** %exp.addr, align 8, !dbg !4310
  %arrayidx2 = getelementptr inbounds i8, i8* %7, i64 %idxprom1, !dbg !4310
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !4310
  %conv = zext i8 %8 to i32, !dbg !4310
  store i32 %conv, i32* %e, align 4, !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4311, metadata !2184), !dbg !4312
  %9 = load i32, i32* %i, align 4, !dbg !4313
  %idxprom3 = sext i32 %9 to i64, !dbg !4314
  %10 = load i8*, i8** %bap.addr, align 8, !dbg !4314
  %arrayidx4 = getelementptr inbounds i8, i8* %10, i64 %idxprom3, !dbg !4314
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !4314
  %conv5 = zext i8 %11 to i32, !dbg !4314
  store i32 %conv5, i32* %v, align 4, !dbg !4312
  %12 = load i32, i32* %v, align 4, !dbg !4315
  %tobool = icmp ne i32 %12, 0, !dbg !4315
  br i1 %tobool, label %if.then, label %if.end, !dbg !4317

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %v, align 4, !dbg !4318
  switch i32 %13, label %sw.default64 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb21
    i32 3, label %sw.bb42
    i32 4, label %sw.bb44
    i32 5, label %sw.bb58
    i32 14, label %sw.bb60
    i32 15, label %sw.bb62
  ], !dbg !4319

sw.bb:                                            ; preds = %if.then
  %14 = load i32, i32* %c, align 4, !dbg !4320
  %15 = load i32, i32* %e, align 4, !dbg !4322
  %call = call i32 @sym_quant(i32 %14, i32 %15, i32 3), !dbg !4323
  store i32 %call, i32* %v, align 4, !dbg !4324
  %16 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4325
  %mant1_cnt = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %16, i32 0, i32 3, !dbg !4326
  %17 = load i32, i32* %mant1_cnt, align 8, !dbg !4326
  switch i32 %17, label %sw.default [
    i32 0, label %sw.bb6
    i32 1, label %sw.bb10
  ], !dbg !4327

sw.bb6:                                           ; preds = %sw.bb
  %18 = load i32, i32* %i, align 4, !dbg !4328
  %idxprom7 = sext i32 %18 to i64, !dbg !4330
  %19 = load i16*, i16** %qmant.addr, align 8, !dbg !4330
  %arrayidx8 = getelementptr inbounds i16, i16* %19, i64 %idxprom7, !dbg !4330
  %20 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4331
  %qmant1_ptr = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %20, i32 0, i32 0, !dbg !4332
  store i16* %arrayidx8, i16** %qmant1_ptr, align 8, !dbg !4333
  %21 = load i32, i32* %v, align 4, !dbg !4334
  %mul = mul nsw i32 9, %21, !dbg !4335
  store i32 %mul, i32* %v, align 4, !dbg !4336
  %22 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4337
  %mant1_cnt9 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %22, i32 0, i32 3, !dbg !4338
  store i32 1, i32* %mant1_cnt9, align 8, !dbg !4339
  br label %sw.epilog, !dbg !4340

sw.bb10:                                          ; preds = %sw.bb
  %23 = load i32, i32* %v, align 4, !dbg !4341
  %mul11 = mul nsw i32 3, %23, !dbg !4342
  %24 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4343
  %qmant1_ptr12 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %24, i32 0, i32 0, !dbg !4344
  %25 = load i16*, i16** %qmant1_ptr12, align 8, !dbg !4344
  %26 = load i16, i16* %25, align 2, !dbg !4345
  %conv13 = sext i16 %26 to i32, !dbg !4345
  %add = add nsw i32 %conv13, %mul11, !dbg !4345
  %conv14 = trunc i32 %add to i16, !dbg !4345
  store i16 %conv14, i16* %25, align 2, !dbg !4345
  %27 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4346
  %mant1_cnt15 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %27, i32 0, i32 3, !dbg !4347
  store i32 2, i32* %mant1_cnt15, align 8, !dbg !4348
  store i32 128, i32* %v, align 4, !dbg !4349
  br label %sw.epilog, !dbg !4350

sw.default:                                       ; preds = %sw.bb
  %28 = load i32, i32* %v, align 4, !dbg !4351
  %29 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4352
  %qmant1_ptr16 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %29, i32 0, i32 0, !dbg !4353
  %30 = load i16*, i16** %qmant1_ptr16, align 8, !dbg !4353
  %31 = load i16, i16* %30, align 2, !dbg !4354
  %conv17 = sext i16 %31 to i32, !dbg !4354
  %add18 = add nsw i32 %conv17, %28, !dbg !4354
  %conv19 = trunc i32 %add18 to i16, !dbg !4354
  store i16 %conv19, i16* %30, align 2, !dbg !4354
  %32 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4355
  %mant1_cnt20 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %32, i32 0, i32 3, !dbg !4356
  store i32 0, i32* %mant1_cnt20, align 8, !dbg !4357
  store i32 128, i32* %v, align 4, !dbg !4358
  br label %sw.epilog, !dbg !4359

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb6
  br label %sw.epilog66, !dbg !4360

sw.bb21:                                          ; preds = %if.then
  %33 = load i32, i32* %c, align 4, !dbg !4361
  %34 = load i32, i32* %e, align 4, !dbg !4362
  %call22 = call i32 @sym_quant(i32 %33, i32 %34, i32 5), !dbg !4363
  store i32 %call22, i32* %v, align 4, !dbg !4364
  %35 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4365
  %mant2_cnt = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %35, i32 0, i32 4, !dbg !4366
  %36 = load i32, i32* %mant2_cnt, align 4, !dbg !4366
  switch i32 %36, label %sw.default35 [
    i32 0, label %sw.bb23
    i32 1, label %sw.bb28
  ], !dbg !4367

sw.bb23:                                          ; preds = %sw.bb21
  %37 = load i32, i32* %i, align 4, !dbg !4368
  %idxprom24 = sext i32 %37 to i64, !dbg !4370
  %38 = load i16*, i16** %qmant.addr, align 8, !dbg !4370
  %arrayidx25 = getelementptr inbounds i16, i16* %38, i64 %idxprom24, !dbg !4370
  %39 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4371
  %qmant2_ptr = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %39, i32 0, i32 1, !dbg !4372
  store i16* %arrayidx25, i16** %qmant2_ptr, align 8, !dbg !4373
  %40 = load i32, i32* %v, align 4, !dbg !4374
  %mul26 = mul nsw i32 25, %40, !dbg !4375
  store i32 %mul26, i32* %v, align 4, !dbg !4376
  %41 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4377
  %mant2_cnt27 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %41, i32 0, i32 4, !dbg !4378
  store i32 1, i32* %mant2_cnt27, align 4, !dbg !4379
  br label %sw.epilog41, !dbg !4380

sw.bb28:                                          ; preds = %sw.bb21
  %42 = load i32, i32* %v, align 4, !dbg !4381
  %mul29 = mul nsw i32 5, %42, !dbg !4382
  %43 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4383
  %qmant2_ptr30 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %43, i32 0, i32 1, !dbg !4384
  %44 = load i16*, i16** %qmant2_ptr30, align 8, !dbg !4384
  %45 = load i16, i16* %44, align 2, !dbg !4385
  %conv31 = sext i16 %45 to i32, !dbg !4385
  %add32 = add nsw i32 %conv31, %mul29, !dbg !4385
  %conv33 = trunc i32 %add32 to i16, !dbg !4385
  store i16 %conv33, i16* %44, align 2, !dbg !4385
  %46 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4386
  %mant2_cnt34 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %46, i32 0, i32 4, !dbg !4387
  store i32 2, i32* %mant2_cnt34, align 4, !dbg !4388
  store i32 128, i32* %v, align 4, !dbg !4389
  br label %sw.epilog41, !dbg !4390

sw.default35:                                     ; preds = %sw.bb21
  %47 = load i32, i32* %v, align 4, !dbg !4391
  %48 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4392
  %qmant2_ptr36 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %48, i32 0, i32 1, !dbg !4393
  %49 = load i16*, i16** %qmant2_ptr36, align 8, !dbg !4393
  %50 = load i16, i16* %49, align 2, !dbg !4394
  %conv37 = sext i16 %50 to i32, !dbg !4394
  %add38 = add nsw i32 %conv37, %47, !dbg !4394
  %conv39 = trunc i32 %add38 to i16, !dbg !4394
  store i16 %conv39, i16* %49, align 2, !dbg !4394
  %51 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4395
  %mant2_cnt40 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %51, i32 0, i32 4, !dbg !4396
  store i32 0, i32* %mant2_cnt40, align 4, !dbg !4397
  store i32 128, i32* %v, align 4, !dbg !4398
  br label %sw.epilog41, !dbg !4399

sw.epilog41:                                      ; preds = %sw.default35, %sw.bb28, %sw.bb23
  br label %sw.epilog66, !dbg !4400

sw.bb42:                                          ; preds = %if.then
  %52 = load i32, i32* %c, align 4, !dbg !4401
  %53 = load i32, i32* %e, align 4, !dbg !4402
  %call43 = call i32 @sym_quant(i32 %52, i32 %53, i32 7), !dbg !4403
  store i32 %call43, i32* %v, align 4, !dbg !4404
  br label %sw.epilog66, !dbg !4405

sw.bb44:                                          ; preds = %if.then
  %54 = load i32, i32* %c, align 4, !dbg !4406
  %55 = load i32, i32* %e, align 4, !dbg !4407
  %call45 = call i32 @sym_quant(i32 %54, i32 %55, i32 11), !dbg !4408
  store i32 %call45, i32* %v, align 4, !dbg !4409
  %56 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4410
  %mant4_cnt = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %56, i32 0, i32 5, !dbg !4411
  %57 = load i32, i32* %mant4_cnt, align 8, !dbg !4411
  switch i32 %57, label %sw.default51 [
    i32 0, label %sw.bb46
  ], !dbg !4412

sw.bb46:                                          ; preds = %sw.bb44
  %58 = load i32, i32* %i, align 4, !dbg !4413
  %idxprom47 = sext i32 %58 to i64, !dbg !4415
  %59 = load i16*, i16** %qmant.addr, align 8, !dbg !4415
  %arrayidx48 = getelementptr inbounds i16, i16* %59, i64 %idxprom47, !dbg !4415
  %60 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4416
  %qmant4_ptr = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %60, i32 0, i32 2, !dbg !4417
  store i16* %arrayidx48, i16** %qmant4_ptr, align 8, !dbg !4418
  %61 = load i32, i32* %v, align 4, !dbg !4419
  %mul49 = mul nsw i32 11, %61, !dbg !4420
  store i32 %mul49, i32* %v, align 4, !dbg !4421
  %62 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4422
  %mant4_cnt50 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %62, i32 0, i32 5, !dbg !4423
  store i32 1, i32* %mant4_cnt50, align 8, !dbg !4424
  br label %sw.epilog57, !dbg !4425

sw.default51:                                     ; preds = %sw.bb44
  %63 = load i32, i32* %v, align 4, !dbg !4426
  %64 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4427
  %qmant4_ptr52 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %64, i32 0, i32 2, !dbg !4428
  %65 = load i16*, i16** %qmant4_ptr52, align 8, !dbg !4428
  %66 = load i16, i16* %65, align 2, !dbg !4429
  %conv53 = sext i16 %66 to i32, !dbg !4429
  %add54 = add nsw i32 %conv53, %63, !dbg !4429
  %conv55 = trunc i32 %add54 to i16, !dbg !4429
  store i16 %conv55, i16* %65, align 2, !dbg !4429
  %67 = load %struct.AC3Mant*, %struct.AC3Mant** %s.addr, align 8, !dbg !4430
  %mant4_cnt56 = getelementptr inbounds %struct.AC3Mant, %struct.AC3Mant* %67, i32 0, i32 5, !dbg !4431
  store i32 0, i32* %mant4_cnt56, align 8, !dbg !4432
  store i32 128, i32* %v, align 4, !dbg !4433
  br label %sw.epilog57, !dbg !4434

sw.epilog57:                                      ; preds = %sw.default51, %sw.bb46
  br label %sw.epilog66, !dbg !4435

sw.bb58:                                          ; preds = %if.then
  %68 = load i32, i32* %c, align 4, !dbg !4436
  %69 = load i32, i32* %e, align 4, !dbg !4437
  %call59 = call i32 @sym_quant(i32 %68, i32 %69, i32 15), !dbg !4438
  store i32 %call59, i32* %v, align 4, !dbg !4439
  br label %sw.epilog66, !dbg !4440

sw.bb60:                                          ; preds = %if.then
  %70 = load i32, i32* %c, align 4, !dbg !4441
  %71 = load i32, i32* %e, align 4, !dbg !4442
  %call61 = call i32 @asym_quant(i32 %70, i32 %71, i32 14), !dbg !4443
  store i32 %call61, i32* %v, align 4, !dbg !4444
  br label %sw.epilog66, !dbg !4445

sw.bb62:                                          ; preds = %if.then
  %72 = load i32, i32* %c, align 4, !dbg !4446
  %73 = load i32, i32* %e, align 4, !dbg !4447
  %call63 = call i32 @asym_quant(i32 %72, i32 %73, i32 16), !dbg !4448
  store i32 %call63, i32* %v, align 4, !dbg !4449
  br label %sw.epilog66, !dbg !4450

sw.default64:                                     ; preds = %if.then
  %74 = load i32, i32* %c, align 4, !dbg !4451
  %75 = load i32, i32* %e, align 4, !dbg !4452
  %76 = load i32, i32* %v, align 4, !dbg !4453
  %sub = sub nsw i32 %76, 1, !dbg !4454
  %call65 = call i32 @asym_quant(i32 %74, i32 %75, i32 %sub), !dbg !4455
  store i32 %call65, i32* %v, align 4, !dbg !4456
  br label %sw.epilog66, !dbg !4457

sw.epilog66:                                      ; preds = %sw.default64, %sw.bb62, %sw.bb60, %sw.bb58, %sw.epilog57, %sw.bb42, %sw.epilog41, %sw.epilog
  br label %if.end, !dbg !4458

if.end:                                           ; preds = %sw.epilog66, %for.body
  %77 = load i32, i32* %v, align 4, !dbg !4459
  %conv67 = trunc i32 %77 to i16, !dbg !4459
  %78 = load i32, i32* %i, align 4, !dbg !4460
  %idxprom68 = sext i32 %78 to i64, !dbg !4461
  %79 = load i16*, i16** %qmant.addr, align 8, !dbg !4461
  %arrayidx69 = getelementptr inbounds i16, i16* %79, i64 %idxprom68, !dbg !4461
  store i16 %conv67, i16* %arrayidx69, align 2, !dbg !4462
  br label %for.inc, !dbg !4463

for.inc:                                          ; preds = %if.end
  %80 = load i32, i32* %i, align 4, !dbg !4464
  %inc = add nsw i32 %80, 1, !dbg !4464
  store i32 %inc, i32* %i, align 4, !dbg !4464
  br label %for.cond, !dbg !4466, !llvm.loop !4467

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4469
}

; Function Attrs: nounwind uwtable
define void @ff_ac3_output_frame(%struct.AC3EncodeContext* %s, i8* %frame) #0 !dbg !4470 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %frame.addr = alloca i8*, align 8
  %blk = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !4474, metadata !2184), !dbg !4475
  store i8* %frame, i8** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %frame.addr, metadata !4476, metadata !2184), !dbg !4477
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !4478, metadata !2184), !dbg !4479
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4480
  %pb = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 3, !dbg !4481
  %1 = load i8*, i8** %frame.addr, align 8, !dbg !4482
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %1, i32 3840), !dbg !4483
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4484
  %output_frame_header = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 84, !dbg !4485
  %output_frame_header1 = bitcast {}** %output_frame_header to void (%struct.AC3EncodeContext*)**, !dbg !4485
  %3 = load void (%struct.AC3EncodeContext*)*, void (%struct.AC3EncodeContext*)** %output_frame_header1, align 8, !dbg !4485
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4486
  call void %3(%struct.AC3EncodeContext* %4), !dbg !4484
  store i32 0, i32* %blk, align 4, !dbg !4487
  br label %for.cond, !dbg !4489

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %blk, align 4, !dbg !4490
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4493
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 18, !dbg !4494
  %7 = load i32, i32* %num_blocks, align 4, !dbg !4494
  %cmp = icmp slt i32 %5, %7, !dbg !4495
  br i1 %cmp, label %for.body, label %for.end, !dbg !4496

for.body:                                         ; preds = %for.cond
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4497
  %9 = load i32, i32* %blk, align 4, !dbg !4498
  call void @output_audio_block(%struct.AC3EncodeContext* %8, i32 %9), !dbg !4499
  br label %for.inc, !dbg !4499

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %blk, align 4, !dbg !4500
  %inc = add nsw i32 %10, 1, !dbg !4500
  store i32 %inc, i32* %blk, align 4, !dbg !4500
  br label %for.cond, !dbg !4502, !llvm.loop !4503

for.end:                                          ; preds = %for.cond
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4505
  call void @output_frame_end(%struct.AC3EncodeContext* %11), !dbg !4506
  ret void, !dbg !4507
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #3 !dbg !4508 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4512, metadata !2184), !dbg !4513
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4514, metadata !2184), !dbg !4515
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !4516, metadata !2184), !dbg !4517
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !4518
  %cmp = icmp slt i32 %0, 0, !dbg !4520
  br i1 %cmp, label %if.then, label %if.end, !dbg !4521

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !4522
  store i8* null, i8** %buffer.addr, align 8, !dbg !4524
  br label %if.end, !dbg !4525

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !4526
  %mul = mul nsw i32 8, %1, !dbg !4527
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4528
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !4529
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !4530
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !4531
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4532
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !4533
  store i8* %3, i8** %buf, align 8, !dbg !4534
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4535
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !4536
  %6 = load i8*, i8** %buf1, align 8, !dbg !4536
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !4537
  %idx.ext = sext i32 %7 to i64, !dbg !4538
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !4538
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4539
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !4540
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !4541
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4542
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !4543
  %10 = load i8*, i8** %buf2, align 8, !dbg !4543
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4544
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !4545
  store i8* %10, i8** %buf_ptr, align 8, !dbg !4546
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4547
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !4548
  store i32 32, i32* %bit_left, align 4, !dbg !4549
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4550
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !4551
  store i32 0, i32* %bit_buf, align 8, !dbg !4552
  ret void, !dbg !4553
}

; Function Attrs: nounwind uwtable
define internal void @output_audio_block(%struct.AC3EncodeContext* %s, i32 %blk) #0 !dbg !4554 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %baie = alloca i32, align 4
  %bnd = alloca i32, align 4
  %got_cpl = alloca i32, align 4
  %ch0 = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %start_sub = alloca i32, align 4
  %end_sub = alloca i32, align 4
  %nb_groups = alloca i32, align 4
  %cpl = alloca i32, align 4
  %b = alloca i32, align 4
  %q = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !4557, metadata !2184), !dbg !4558
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !4559, metadata !2184), !dbg !4560
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4561, metadata !2184), !dbg !4562
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4563, metadata !2184), !dbg !4564
  call void @llvm.dbg.declare(metadata i32* %baie, metadata !4565, metadata !2184), !dbg !4566
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !4567, metadata !2184), !dbg !4568
  call void @llvm.dbg.declare(metadata i32* %got_cpl, metadata !4569, metadata !2184), !dbg !4570
  call void @llvm.dbg.declare(metadata i32* %ch0, metadata !4571, metadata !2184), !dbg !4572
  %0 = load i32, i32* %ch0, align 4, !dbg !4573
  store i32 %0, i32* %ch0, align 4, !dbg !4572
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !4574, metadata !2184), !dbg !4575
  %1 = load i32, i32* %blk.addr, align 4, !dbg !4576
  %idxprom = sext i32 %1 to i64, !dbg !4577
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4577
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 10, !dbg !4578
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !4577
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !4575
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4579
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 12, !dbg !4581
  %4 = load i32, i32* %eac3, align 4, !dbg !4581
  %tobool = icmp ne i32 %4, 0, !dbg !4579
  br i1 %tobool, label %if.end, label %if.then, !dbg !4582

if.then:                                          ; preds = %entry
  store i32 0, i32* %ch, align 4, !dbg !4583
  br label %for.cond, !dbg !4586

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %ch, align 4, !dbg !4587
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4590
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 25, !dbg !4591
  %7 = load i32, i32* %fbw_channels, align 8, !dbg !4591
  %cmp = icmp slt i32 %5, %7, !dbg !4592
  br i1 %cmp, label %for.body, label %for.end, !dbg !4593

for.body:                                         ; preds = %for.cond
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4594
  %pb = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 3, !dbg !4595
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !4596
  br label %for.inc, !dbg !4596

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %ch, align 4, !dbg !4597
  %inc = add nsw i32 %9, 1, !dbg !4597
  store i32 %inc, i32* %ch, align 4, !dbg !4597
  br label %for.cond, !dbg !4599, !llvm.loop !4600

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !4602

if.end:                                           ; preds = %for.end, %entry
  %10 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4603
  %eac31 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %10, i32 0, i32 12, !dbg !4605
  %11 = load i32, i32* %eac31, align 4, !dbg !4605
  %tobool2 = icmp ne i32 %11, 0, !dbg !4603
  br i1 %tobool2, label %if.end12, label %if.then3, !dbg !4606

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !4607
  br label %for.cond4, !dbg !4610

for.cond4:                                        ; preds = %for.inc9, %if.then3
  %12 = load i32, i32* %ch, align 4, !dbg !4611
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4614
  %fbw_channels5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 25, !dbg !4615
  %14 = load i32, i32* %fbw_channels5, align 8, !dbg !4615
  %cmp6 = icmp slt i32 %12, %14, !dbg !4616
  br i1 %cmp6, label %for.body7, label %for.end11, !dbg !4617

for.body7:                                        ; preds = %for.cond4
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4618
  %pb8 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %15, i32 0, i32 3, !dbg !4619
  call void @put_bits(%struct.PutBitContext* %pb8, i32 1, i32 1), !dbg !4620
  br label %for.inc9, !dbg !4620

for.inc9:                                         ; preds = %for.body7
  %16 = load i32, i32* %ch, align 4, !dbg !4621
  %inc10 = add nsw i32 %16, 1, !dbg !4621
  store i32 %inc10, i32* %ch, align 4, !dbg !4621
  br label %for.cond4, !dbg !4623, !llvm.loop !4624

for.end11:                                        ; preds = %for.cond4
  br label %if.end12, !dbg !4626

if.end12:                                         ; preds = %for.end11, %if.end
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4627
  %pb13 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 3, !dbg !4628
  call void @put_bits(%struct.PutBitContext* %pb13, i32 1, i32 0), !dbg !4629
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4630
  %eac314 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 12, !dbg !4632
  %19 = load i32, i32* %eac314, align 4, !dbg !4632
  %tobool15 = icmp ne i32 %19, 0, !dbg !4630
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !4633

if.then16:                                        ; preds = %if.end12
  %20 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4634
  %pb17 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %20, i32 0, i32 3, !dbg !4635
  call void @put_bits(%struct.PutBitContext* %pb17, i32 1, i32 0), !dbg !4636
  br label %if.end18, !dbg !4636

if.end18:                                         ; preds = %if.then16, %if.end12
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4637
  %eac319 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 12, !dbg !4639
  %22 = load i32, i32* %eac319, align 4, !dbg !4639
  %tobool20 = icmp ne i32 %22, 0, !dbg !4637
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !4640

if.then21:                                        ; preds = %if.end18
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4641
  %pb22 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 3, !dbg !4642
  %24 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4643
  %new_cpl_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %24, i32 0, i32 14, !dbg !4644
  %25 = load i32, i32* %new_cpl_strategy, align 8, !dbg !4644
  call void @put_bits(%struct.PutBitContext* %pb22, i32 1, i32 %25), !dbg !4645
  br label %if.end23, !dbg !4645

if.end23:                                         ; preds = %if.then21, %if.end18
  %26 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4646
  %new_cpl_strategy24 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %26, i32 0, i32 14, !dbg !4648
  %27 = load i32, i32* %new_cpl_strategy24, align 8, !dbg !4648
  %tobool25 = icmp ne i32 %27, 0, !dbg !4646
  br i1 %tobool25, label %if.then26, label %if.end84, !dbg !4649

if.then26:                                        ; preds = %if.end23
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4650
  %eac327 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 12, !dbg !4653
  %29 = load i32, i32* %eac327, align 4, !dbg !4653
  %tobool28 = icmp ne i32 %29, 0, !dbg !4650
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !4654

if.then29:                                        ; preds = %if.then26
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4655
  %pb30 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 3, !dbg !4656
  %31 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4657
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %31, i32 0, i32 15, !dbg !4658
  %32 = load i32, i32* %cpl_in_use, align 4, !dbg !4658
  call void @put_bits(%struct.PutBitContext* %pb30, i32 1, i32 %32), !dbg !4659
  br label %if.end31, !dbg !4659

if.end31:                                         ; preds = %if.then29, %if.then26
  %33 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4660
  %cpl_in_use32 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %33, i32 0, i32 15, !dbg !4662
  %34 = load i32, i32* %cpl_in_use32, align 4, !dbg !4662
  %tobool33 = icmp ne i32 %34, 0, !dbg !4660
  br i1 %tobool33, label %if.then34, label %if.end83, !dbg !4663

if.then34:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %start_sub, metadata !4664, metadata !2184), !dbg !4666
  call void @llvm.dbg.declare(metadata i32* %end_sub, metadata !4667, metadata !2184), !dbg !4668
  %35 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4669
  %eac335 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %35, i32 0, i32 12, !dbg !4671
  %36 = load i32, i32* %eac335, align 4, !dbg !4671
  %tobool36 = icmp ne i32 %36, 0, !dbg !4669
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !4672

if.then37:                                        ; preds = %if.then34
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4673
  %pb38 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 3, !dbg !4674
  call void @put_bits(%struct.PutBitContext* %pb38, i32 1, i32 0), !dbg !4675
  br label %if.end39, !dbg !4675

if.end39:                                         ; preds = %if.then37, %if.then34
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4676
  %eac340 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 12, !dbg !4678
  %39 = load i32, i32* %eac340, align 4, !dbg !4678
  %tobool41 = icmp ne i32 %39, 0, !dbg !4676
  br i1 %tobool41, label %lor.lhs.false, label %if.then43, !dbg !4679

lor.lhs.false:                                    ; preds = %if.end39
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4680
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 31, !dbg !4682
  %41 = load i32, i32* %channel_mode, align 8, !dbg !4682
  %cmp42 = icmp ne i32 %41, 2, !dbg !4683
  br i1 %cmp42, label %if.then43, label %if.end54, !dbg !4684

if.then43:                                        ; preds = %lor.lhs.false, %if.end39
  store i32 1, i32* %ch, align 4, !dbg !4685
  br label %for.cond44, !dbg !4688

for.cond44:                                       ; preds = %for.inc51, %if.then43
  %42 = load i32, i32* %ch, align 4, !dbg !4689
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4692
  %fbw_channels45 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 25, !dbg !4693
  %44 = load i32, i32* %fbw_channels45, align 8, !dbg !4693
  %cmp46 = icmp sle i32 %42, %44, !dbg !4694
  br i1 %cmp46, label %for.body47, label %for.end53, !dbg !4695

for.body47:                                       ; preds = %for.cond44
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4696
  %pb48 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 3, !dbg !4697
  %46 = load i32, i32* %ch, align 4, !dbg !4698
  %idxprom49 = sext i32 %46 to i64, !dbg !4699
  %47 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4699
  %channel_in_cpl = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %47, i32 0, i32 16, !dbg !4700
  %arrayidx50 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl, i64 0, i64 %idxprom49, !dbg !4699
  %48 = load i8, i8* %arrayidx50, align 1, !dbg !4699
  %conv = zext i8 %48 to i32, !dbg !4699
  call void @put_bits(%struct.PutBitContext* %pb48, i32 1, i32 %conv), !dbg !4701
  br label %for.inc51, !dbg !4701

for.inc51:                                        ; preds = %for.body47
  %49 = load i32, i32* %ch, align 4, !dbg !4702
  %inc52 = add nsw i32 %49, 1, !dbg !4702
  store i32 %inc52, i32* %ch, align 4, !dbg !4702
  br label %for.cond44, !dbg !4704, !llvm.loop !4705

for.end53:                                        ; preds = %for.cond44
  br label %if.end54, !dbg !4707

if.end54:                                         ; preds = %for.end53, %lor.lhs.false
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4708
  %channel_mode55 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 31, !dbg !4710
  %51 = load i32, i32* %channel_mode55, align 8, !dbg !4710
  %cmp56 = icmp eq i32 %51, 2, !dbg !4711
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !4712

if.then58:                                        ; preds = %if.end54
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4713
  %pb59 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 3, !dbg !4714
  call void @put_bits(%struct.PutBitContext* %pb59, i32 1, i32 0), !dbg !4715
  br label %if.end60, !dbg !4715

if.end60:                                         ; preds = %if.then58, %if.end54
  %53 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4716
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %53, i32 0, i32 41, !dbg !4717
  %arrayidx61 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !4716
  %54 = load i32, i32* %arrayidx61, align 8, !dbg !4716
  %sub = sub nsw i32 %54, 37, !dbg !4718
  %div = sdiv i32 %sub, 12, !dbg !4719
  store i32 %div, i32* %start_sub, align 4, !dbg !4720
  %55 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4721
  %cpl_end_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %55, i32 0, i32 42, !dbg !4722
  %56 = load i32, i32* %cpl_end_freq, align 4, !dbg !4722
  %sub62 = sub nsw i32 %56, 37, !dbg !4723
  %div63 = sdiv i32 %sub62, 12, !dbg !4724
  store i32 %div63, i32* %end_sub, align 4, !dbg !4725
  %57 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4726
  %pb64 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %57, i32 0, i32 3, !dbg !4727
  %58 = load i32, i32* %start_sub, align 4, !dbg !4728
  call void @put_bits(%struct.PutBitContext* %pb64, i32 4, i32 %58), !dbg !4729
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4730
  %pb65 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 3, !dbg !4731
  %60 = load i32, i32* %end_sub, align 4, !dbg !4732
  %sub66 = sub nsw i32 %60, 3, !dbg !4733
  call void @put_bits(%struct.PutBitContext* %pb65, i32 4, i32 %sub66), !dbg !4734
  %61 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4735
  %eac367 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %61, i32 0, i32 12, !dbg !4737
  %62 = load i32, i32* %eac367, align 4, !dbg !4737
  %tobool68 = icmp ne i32 %62, 0, !dbg !4735
  br i1 %tobool68, label %if.then69, label %if.else, !dbg !4738

if.then69:                                        ; preds = %if.end60
  %63 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4739
  %pb70 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %63, i32 0, i32 3, !dbg !4741
  call void @put_bits(%struct.PutBitContext* %pb70, i32 1, i32 0), !dbg !4742
  br label %if.end82, !dbg !4743

if.else:                                          ; preds = %if.end60
  %64 = load i32, i32* %start_sub, align 4, !dbg !4744
  %add = add nsw i32 %64, 1, !dbg !4747
  store i32 %add, i32* %bnd, align 4, !dbg !4748
  br label %for.cond71, !dbg !4749

for.cond71:                                       ; preds = %for.inc79, %if.else
  %65 = load i32, i32* %bnd, align 4, !dbg !4750
  %66 = load i32, i32* %end_sub, align 4, !dbg !4753
  %cmp72 = icmp slt i32 %65, %66, !dbg !4754
  br i1 %cmp72, label %for.body74, label %for.end81, !dbg !4755

for.body74:                                       ; preds = %for.cond71
  %67 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4756
  %pb75 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %67, i32 0, i32 3, !dbg !4757
  %68 = load i32, i32* %bnd, align 4, !dbg !4758
  %idxprom76 = sext i32 %68 to i64, !dbg !4759
  %arrayidx77 = getelementptr inbounds [18 x i8], [18 x i8]* @ff_eac3_default_cpl_band_struct, i64 0, i64 %idxprom76, !dbg !4759
  %69 = load i8, i8* %arrayidx77, align 1, !dbg !4759
  %conv78 = zext i8 %69 to i32, !dbg !4759
  call void @put_bits(%struct.PutBitContext* %pb75, i32 1, i32 %conv78), !dbg !4760
  br label %for.inc79, !dbg !4760

for.inc79:                                        ; preds = %for.body74
  %70 = load i32, i32* %bnd, align 4, !dbg !4761
  %inc80 = add nsw i32 %70, 1, !dbg !4761
  store i32 %inc80, i32* %bnd, align 4, !dbg !4761
  br label %for.cond71, !dbg !4763, !llvm.loop !4764

for.end81:                                        ; preds = %for.cond71
  br label %if.end82

if.end82:                                         ; preds = %for.end81, %if.then69
  br label %if.end83, !dbg !4766

if.end83:                                         ; preds = %if.end82, %if.end31
  br label %if.end84, !dbg !4767

if.end84:                                         ; preds = %if.end83, %if.end23
  %71 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4768
  %cpl_in_use85 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %71, i32 0, i32 15, !dbg !4770
  %72 = load i32, i32* %cpl_in_use85, align 4, !dbg !4770
  %tobool86 = icmp ne i32 %72, 0, !dbg !4768
  br i1 %tobool86, label %if.then87, label %if.end146, !dbg !4771

if.then87:                                        ; preds = %if.end84
  store i32 1, i32* %ch, align 4, !dbg !4772
  br label %for.cond88, !dbg !4775

for.cond88:                                       ; preds = %for.inc143, %if.then87
  %73 = load i32, i32* %ch, align 4, !dbg !4776
  %74 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4779
  %fbw_channels89 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %74, i32 0, i32 25, !dbg !4780
  %75 = load i32, i32* %fbw_channels89, align 8, !dbg !4780
  %cmp90 = icmp sle i32 %73, %75, !dbg !4781
  br i1 %cmp90, label %for.body92, label %for.end145, !dbg !4782

for.body92:                                       ; preds = %for.cond88
  %76 = load i32, i32* %ch, align 4, !dbg !4783
  %idxprom93 = sext i32 %76 to i64, !dbg !4786
  %77 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4786
  %channel_in_cpl94 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %77, i32 0, i32 16, !dbg !4787
  %arrayidx95 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl94, i64 0, i64 %idxprom93, !dbg !4786
  %78 = load i8, i8* %arrayidx95, align 1, !dbg !4786
  %tobool96 = icmp ne i8 %78, 0, !dbg !4786
  br i1 %tobool96, label %if.then97, label %if.end142, !dbg !4788

if.then97:                                        ; preds = %for.body92
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4789
  %eac398 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 12, !dbg !4792
  %80 = load i32, i32* %eac398, align 4, !dbg !4792
  %tobool99 = icmp ne i32 %80, 0, !dbg !4789
  br i1 %tobool99, label %lor.lhs.false100, label %if.then106, !dbg !4793

lor.lhs.false100:                                 ; preds = %if.then97
  %81 = load i32, i32* %ch, align 4, !dbg !4794
  %idxprom101 = sext i32 %81 to i64, !dbg !4796
  %82 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4796
  %new_cpl_coords = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %82, i32 0, i32 18, !dbg !4797
  %arrayidx102 = getelementptr inbounds [7 x i8], [7 x i8]* %new_cpl_coords, i64 0, i64 %idxprom101, !dbg !4796
  %83 = load i8, i8* %arrayidx102, align 1, !dbg !4796
  %conv103 = zext i8 %83 to i32, !dbg !4796
  %cmp104 = icmp ne i32 %conv103, 2, !dbg !4798
  br i1 %cmp104, label %if.then106, label %if.end112, !dbg !4799

if.then106:                                       ; preds = %lor.lhs.false100, %if.then97
  %84 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4800
  %pb107 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %84, i32 0, i32 3, !dbg !4801
  %85 = load i32, i32* %ch, align 4, !dbg !4802
  %idxprom108 = sext i32 %85 to i64, !dbg !4803
  %86 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4803
  %new_cpl_coords109 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %86, i32 0, i32 18, !dbg !4804
  %arrayidx110 = getelementptr inbounds [7 x i8], [7 x i8]* %new_cpl_coords109, i64 0, i64 %idxprom108, !dbg !4803
  %87 = load i8, i8* %arrayidx110, align 1, !dbg !4803
  %conv111 = zext i8 %87 to i32, !dbg !4803
  call void @put_bits(%struct.PutBitContext* %pb107, i32 1, i32 %conv111), !dbg !4805
  br label %if.end112, !dbg !4805

if.end112:                                        ; preds = %if.then106, %lor.lhs.false100
  %88 = load i32, i32* %ch, align 4, !dbg !4806
  %idxprom113 = sext i32 %88 to i64, !dbg !4808
  %89 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4808
  %new_cpl_coords114 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %89, i32 0, i32 18, !dbg !4809
  %arrayidx115 = getelementptr inbounds [7 x i8], [7 x i8]* %new_cpl_coords114, i64 0, i64 %idxprom113, !dbg !4808
  %90 = load i8, i8* %arrayidx115, align 1, !dbg !4808
  %tobool116 = icmp ne i8 %90, 0, !dbg !4808
  br i1 %tobool116, label %if.then117, label %if.end141, !dbg !4810

if.then117:                                       ; preds = %if.end112
  %91 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4811
  %pb118 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %91, i32 0, i32 3, !dbg !4813
  %92 = load i32, i32* %ch, align 4, !dbg !4814
  %idxprom119 = sext i32 %92 to i64, !dbg !4815
  %93 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4815
  %cpl_master_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %93, i32 0, i32 19, !dbg !4816
  %arrayidx120 = getelementptr inbounds [7 x i8], [7 x i8]* %cpl_master_exp, i64 0, i64 %idxprom119, !dbg !4815
  %94 = load i8, i8* %arrayidx120, align 1, !dbg !4815
  %conv121 = zext i8 %94 to i32, !dbg !4815
  call void @put_bits(%struct.PutBitContext* %pb118, i32 2, i32 %conv121), !dbg !4817
  store i32 0, i32* %bnd, align 4, !dbg !4818
  br label %for.cond122, !dbg !4820

for.cond122:                                      ; preds = %for.inc138, %if.then117
  %95 = load i32, i32* %bnd, align 4, !dbg !4821
  %96 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4824
  %num_cpl_bands = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %96, i32 0, i32 46, !dbg !4825
  %97 = load i32, i32* %num_cpl_bands, align 4, !dbg !4825
  %cmp123 = icmp slt i32 %95, %97, !dbg !4826
  br i1 %cmp123, label %for.body125, label %for.end140, !dbg !4827

for.body125:                                      ; preds = %for.cond122
  %98 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4828
  %pb126 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %98, i32 0, i32 3, !dbg !4830
  %99 = load i32, i32* %bnd, align 4, !dbg !4831
  %idxprom127 = sext i32 %99 to i64, !dbg !4832
  %100 = load i32, i32* %ch, align 4, !dbg !4833
  %idxprom128 = sext i32 %100 to i64, !dbg !4832
  %101 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4832
  %cpl_coord_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %101, i32 0, i32 8, !dbg !4834
  %102 = load i8**, i8*** %cpl_coord_exp, align 8, !dbg !4834
  %arrayidx129 = getelementptr inbounds i8*, i8** %102, i64 %idxprom128, !dbg !4832
  %103 = load i8*, i8** %arrayidx129, align 8, !dbg !4832
  %arrayidx130 = getelementptr inbounds i8, i8* %103, i64 %idxprom127, !dbg !4832
  %104 = load i8, i8* %arrayidx130, align 1, !dbg !4832
  %conv131 = zext i8 %104 to i32, !dbg !4832
  call void @put_bits(%struct.PutBitContext* %pb126, i32 4, i32 %conv131), !dbg !4835
  %105 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4836
  %pb132 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %105, i32 0, i32 3, !dbg !4837
  %106 = load i32, i32* %bnd, align 4, !dbg !4838
  %idxprom133 = sext i32 %106 to i64, !dbg !4839
  %107 = load i32, i32* %ch, align 4, !dbg !4840
  %idxprom134 = sext i32 %107 to i64, !dbg !4839
  %108 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4839
  %cpl_coord_mant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %108, i32 0, i32 9, !dbg !4841
  %109 = load i8**, i8*** %cpl_coord_mant, align 8, !dbg !4841
  %arrayidx135 = getelementptr inbounds i8*, i8** %109, i64 %idxprom134, !dbg !4839
  %110 = load i8*, i8** %arrayidx135, align 8, !dbg !4839
  %arrayidx136 = getelementptr inbounds i8, i8* %110, i64 %idxprom133, !dbg !4839
  %111 = load i8, i8* %arrayidx136, align 1, !dbg !4839
  %conv137 = zext i8 %111 to i32, !dbg !4839
  call void @put_bits(%struct.PutBitContext* %pb132, i32 4, i32 %conv137), !dbg !4842
  br label %for.inc138, !dbg !4843

for.inc138:                                       ; preds = %for.body125
  %112 = load i32, i32* %bnd, align 4, !dbg !4844
  %inc139 = add nsw i32 %112, 1, !dbg !4844
  store i32 %inc139, i32* %bnd, align 4, !dbg !4844
  br label %for.cond122, !dbg !4846, !llvm.loop !4847

for.end140:                                       ; preds = %for.cond122
  br label %if.end141, !dbg !4849

if.end141:                                        ; preds = %for.end140, %if.end112
  br label %if.end142, !dbg !4850

if.end142:                                        ; preds = %if.end141, %for.body92
  br label %for.inc143, !dbg !4851

for.inc143:                                       ; preds = %if.end142
  %113 = load i32, i32* %ch, align 4, !dbg !4852
  %inc144 = add nsw i32 %113, 1, !dbg !4852
  store i32 %inc144, i32* %ch, align 4, !dbg !4852
  br label %for.cond88, !dbg !4854, !llvm.loop !4855

for.end145:                                       ; preds = %for.cond88
  br label %if.end146, !dbg !4857

if.end146:                                        ; preds = %for.end145, %if.end84
  %114 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4858
  %channel_mode147 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %114, i32 0, i32 31, !dbg !4860
  %115 = load i32, i32* %channel_mode147, align 8, !dbg !4860
  %cmp148 = icmp eq i32 %115, 2, !dbg !4861
  br i1 %cmp148, label %if.then150, label %if.end175, !dbg !4862

if.then150:                                       ; preds = %if.end146
  %116 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4863
  %eac3151 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %116, i32 0, i32 12, !dbg !4866
  %117 = load i32, i32* %eac3151, align 4, !dbg !4866
  %tobool152 = icmp ne i32 %117, 0, !dbg !4863
  br i1 %tobool152, label %lor.lhs.false153, label %if.then156, !dbg !4867

lor.lhs.false153:                                 ; preds = %if.then150
  %118 = load i32, i32* %blk.addr, align 4, !dbg !4868
  %cmp154 = icmp sgt i32 %118, 0, !dbg !4870
  br i1 %cmp154, label %if.then156, label %if.end159, !dbg !4871

if.then156:                                       ; preds = %lor.lhs.false153, %if.then150
  %119 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4872
  %pb157 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %119, i32 0, i32 3, !dbg !4873
  %120 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4874
  %new_rematrixing_strategy = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %120, i32 0, i32 11, !dbg !4875
  %121 = load i8, i8* %new_rematrixing_strategy, align 1, !dbg !4875
  %conv158 = zext i8 %121 to i32, !dbg !4874
  call void @put_bits(%struct.PutBitContext* %pb157, i32 1, i32 %conv158), !dbg !4876
  br label %if.end159, !dbg !4876

if.end159:                                        ; preds = %if.then156, %lor.lhs.false153
  %122 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4877
  %new_rematrixing_strategy160 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %122, i32 0, i32 11, !dbg !4879
  %123 = load i8, i8* %new_rematrixing_strategy160, align 1, !dbg !4879
  %tobool161 = icmp ne i8 %123, 0, !dbg !4877
  br i1 %tobool161, label %if.then162, label %if.end174, !dbg !4880

if.then162:                                       ; preds = %if.end159
  store i32 0, i32* %bnd, align 4, !dbg !4881
  br label %for.cond163, !dbg !4884

for.cond163:                                      ; preds = %for.inc171, %if.then162
  %124 = load i32, i32* %bnd, align 4, !dbg !4885
  %125 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4888
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %125, i32 0, i32 12, !dbg !4889
  %126 = load i32, i32* %num_rematrixing_bands, align 8, !dbg !4889
  %cmp164 = icmp slt i32 %124, %126, !dbg !4890
  br i1 %cmp164, label %for.body166, label %for.end173, !dbg !4891

for.body166:                                      ; preds = %for.cond163
  %127 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4892
  %pb167 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %127, i32 0, i32 3, !dbg !4893
  %128 = load i32, i32* %bnd, align 4, !dbg !4894
  %idxprom168 = sext i32 %128 to i64, !dbg !4895
  %129 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4895
  %rematrixing_flags = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %129, i32 0, i32 13, !dbg !4896
  %arrayidx169 = getelementptr inbounds [4 x i8], [4 x i8]* %rematrixing_flags, i64 0, i64 %idxprom168, !dbg !4895
  %130 = load i8, i8* %arrayidx169, align 1, !dbg !4895
  %conv170 = zext i8 %130 to i32, !dbg !4895
  call void @put_bits(%struct.PutBitContext* %pb167, i32 1, i32 %conv170), !dbg !4897
  br label %for.inc171, !dbg !4897

for.inc171:                                       ; preds = %for.body166
  %131 = load i32, i32* %bnd, align 4, !dbg !4898
  %inc172 = add nsw i32 %131, 1, !dbg !4898
  store i32 %inc172, i32* %bnd, align 4, !dbg !4898
  br label %for.cond163, !dbg !4900, !llvm.loop !4901

for.end173:                                       ; preds = %for.cond163
  br label %if.end174, !dbg !4903

if.end174:                                        ; preds = %for.end173, %if.end159
  br label %if.end175, !dbg !4904

if.end175:                                        ; preds = %if.end174, %if.end146
  %132 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4905
  %eac3176 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %132, i32 0, i32 12, !dbg !4907
  %133 = load i32, i32* %eac3176, align 4, !dbg !4907
  %tobool177 = icmp ne i32 %133, 0, !dbg !4905
  br i1 %tobool177, label %if.end205, label %if.then178, !dbg !4908

if.then178:                                       ; preds = %if.end175
  %134 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4909
  %cpl_in_use179 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %134, i32 0, i32 15, !dbg !4912
  %135 = load i32, i32* %cpl_in_use179, align 4, !dbg !4912
  %tobool180 = icmp ne i32 %135, 0, !dbg !4913
  %lnot = xor i1 %tobool180, true, !dbg !4913
  %lnot.ext = zext i1 %lnot to i32, !dbg !4913
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !4914
  br label %for.cond181, !dbg !4915

for.cond181:                                      ; preds = %for.inc192, %if.then178
  %136 = load i32, i32* %ch, align 4, !dbg !4916
  %137 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4919
  %fbw_channels182 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %137, i32 0, i32 25, !dbg !4920
  %138 = load i32, i32* %fbw_channels182, align 8, !dbg !4920
  %cmp183 = icmp sle i32 %136, %138, !dbg !4921
  br i1 %cmp183, label %for.body185, label %for.end194, !dbg !4922

for.body185:                                      ; preds = %for.cond181
  %139 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4923
  %pb186 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %139, i32 0, i32 3, !dbg !4924
  %140 = load i32, i32* %blk.addr, align 4, !dbg !4925
  %idxprom187 = sext i32 %140 to i64, !dbg !4926
  %141 = load i32, i32* %ch, align 4, !dbg !4927
  %idxprom188 = sext i32 %141 to i64, !dbg !4926
  %142 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4926
  %exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %142, i32 0, i32 75, !dbg !4928
  %arrayidx189 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy, i64 0, i64 %idxprom188, !dbg !4926
  %arrayidx190 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx189, i64 0, i64 %idxprom187, !dbg !4926
  %143 = load i8, i8* %arrayidx190, align 1, !dbg !4926
  %conv191 = zext i8 %143 to i32, !dbg !4926
  call void @put_bits(%struct.PutBitContext* %pb186, i32 2, i32 %conv191), !dbg !4929
  br label %for.inc192, !dbg !4929

for.inc192:                                       ; preds = %for.body185
  %144 = load i32, i32* %ch, align 4, !dbg !4930
  %inc193 = add nsw i32 %144, 1, !dbg !4930
  store i32 %inc193, i32* %ch, align 4, !dbg !4930
  br label %for.cond181, !dbg !4932, !llvm.loop !4933

for.end194:                                       ; preds = %for.cond181
  %145 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4935
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %145, i32 0, i32 27, !dbg !4937
  %146 = load i32, i32* %lfe_on, align 8, !dbg !4937
  %tobool195 = icmp ne i32 %146, 0, !dbg !4935
  br i1 %tobool195, label %if.then196, label %if.end204, !dbg !4938

if.then196:                                       ; preds = %for.end194
  %147 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4939
  %pb197 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %147, i32 0, i32 3, !dbg !4940
  %148 = load i32, i32* %blk.addr, align 4, !dbg !4941
  %idxprom198 = sext i32 %148 to i64, !dbg !4942
  %149 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4943
  %lfe_channel = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %149, i32 0, i32 28, !dbg !4944
  %150 = load i32, i32* %lfe_channel, align 4, !dbg !4944
  %idxprom199 = sext i32 %150 to i64, !dbg !4942
  %151 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4942
  %exp_strategy200 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %151, i32 0, i32 75, !dbg !4945
  %arrayidx201 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy200, i64 0, i64 %idxprom199, !dbg !4942
  %arrayidx202 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx201, i64 0, i64 %idxprom198, !dbg !4942
  %152 = load i8, i8* %arrayidx202, align 1, !dbg !4942
  %conv203 = zext i8 %152 to i32, !dbg !4942
  call void @put_bits(%struct.PutBitContext* %pb197, i32 1, i32 %conv203), !dbg !4946
  br label %if.end204, !dbg !4946

if.end204:                                        ; preds = %if.then196, %for.end194
  br label %if.end205, !dbg !4947

if.end205:                                        ; preds = %if.end204, %if.end175
  store i32 1, i32* %ch, align 4, !dbg !4948
  br label %for.cond206, !dbg !4950

for.cond206:                                      ; preds = %for.inc226, %if.end205
  %153 = load i32, i32* %ch, align 4, !dbg !4951
  %154 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4954
  %fbw_channels207 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %154, i32 0, i32 25, !dbg !4955
  %155 = load i32, i32* %fbw_channels207, align 8, !dbg !4955
  %cmp208 = icmp sle i32 %153, %155, !dbg !4956
  br i1 %cmp208, label %for.body210, label %for.end228, !dbg !4957

for.body210:                                      ; preds = %for.cond206
  %156 = load i32, i32* %blk.addr, align 4, !dbg !4958
  %idxprom211 = sext i32 %156 to i64, !dbg !4961
  %157 = load i32, i32* %ch, align 4, !dbg !4962
  %idxprom212 = sext i32 %157 to i64, !dbg !4961
  %158 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4961
  %exp_strategy213 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %158, i32 0, i32 75, !dbg !4963
  %arrayidx214 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy213, i64 0, i64 %idxprom212, !dbg !4961
  %arrayidx215 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx214, i64 0, i64 %idxprom211, !dbg !4961
  %159 = load i8, i8* %arrayidx215, align 1, !dbg !4961
  %conv216 = zext i8 %159 to i32, !dbg !4961
  %cmp217 = icmp ne i32 %conv216, 0, !dbg !4964
  br i1 %cmp217, label %land.lhs.true, label %if.end225, !dbg !4965

land.lhs.true:                                    ; preds = %for.body210
  %160 = load i32, i32* %ch, align 4, !dbg !4966
  %idxprom219 = sext i32 %160 to i64, !dbg !4968
  %161 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4968
  %channel_in_cpl220 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %161, i32 0, i32 16, !dbg !4969
  %arrayidx221 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl220, i64 0, i64 %idxprom219, !dbg !4968
  %162 = load i8, i8* %arrayidx221, align 1, !dbg !4968
  %tobool222 = icmp ne i8 %162, 0, !dbg !4968
  br i1 %tobool222, label %if.end225, label %if.then223, !dbg !4970

if.then223:                                       ; preds = %land.lhs.true
  %163 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4971
  %pb224 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %163, i32 0, i32 3, !dbg !4972
  %164 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4973
  %bandwidth_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %164, i32 0, i32 40, !dbg !4974
  %165 = load i32, i32* %bandwidth_code, align 4, !dbg !4974
  call void @put_bits(%struct.PutBitContext* %pb224, i32 6, i32 %165), !dbg !4975
  br label %if.end225, !dbg !4975

if.end225:                                        ; preds = %if.then223, %land.lhs.true, %for.body210
  br label %for.inc226, !dbg !4976

for.inc226:                                       ; preds = %if.end225
  %166 = load i32, i32* %ch, align 4, !dbg !4977
  %inc227 = add nsw i32 %166, 1, !dbg !4977
  store i32 %inc227, i32* %ch, align 4, !dbg !4977
  br label %for.cond206, !dbg !4979, !llvm.loop !4980

for.end228:                                       ; preds = %for.cond206
  %167 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !4982
  %cpl_in_use229 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %167, i32 0, i32 15, !dbg !4984
  %168 = load i32, i32* %cpl_in_use229, align 4, !dbg !4984
  %tobool230 = icmp ne i32 %168, 0, !dbg !4985
  %lnot231 = xor i1 %tobool230, true, !dbg !4985
  %lnot.ext232 = zext i1 %lnot231 to i32, !dbg !4985
  store i32 %lnot.ext232, i32* %ch, align 4, !dbg !4986
  br label %for.cond233, !dbg !4987

for.cond233:                                      ; preds = %for.inc296, %for.end228
  %169 = load i32, i32* %ch, align 4, !dbg !4988
  %170 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !4991
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %170, i32 0, i32 26, !dbg !4992
  %171 = load i32, i32* %channels, align 4, !dbg !4992
  %cmp234 = icmp sle i32 %169, %171, !dbg !4993
  br i1 %cmp234, label %for.body236, label %for.end298, !dbg !4994

for.body236:                                      ; preds = %for.cond233
  call void @llvm.dbg.declare(metadata i32* %nb_groups, metadata !4995, metadata !2184), !dbg !4997
  call void @llvm.dbg.declare(metadata i32* %cpl, metadata !4998, metadata !2184), !dbg !4999
  %172 = load i32, i32* %ch, align 4, !dbg !5000
  %cmp237 = icmp eq i32 %172, 0, !dbg !5001
  %conv238 = zext i1 %cmp237 to i32, !dbg !5001
  store i32 %conv238, i32* %cpl, align 4, !dbg !4999
  %173 = load i32, i32* %blk.addr, align 4, !dbg !5002
  %idxprom239 = sext i32 %173 to i64, !dbg !5004
  %174 = load i32, i32* %ch, align 4, !dbg !5005
  %idxprom240 = sext i32 %174 to i64, !dbg !5004
  %175 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5004
  %exp_strategy241 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %175, i32 0, i32 75, !dbg !5006
  %arrayidx242 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy241, i64 0, i64 %idxprom240, !dbg !5004
  %arrayidx243 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx242, i64 0, i64 %idxprom239, !dbg !5004
  %176 = load i8, i8* %arrayidx243, align 1, !dbg !5004
  %conv244 = zext i8 %176 to i32, !dbg !5004
  %cmp245 = icmp eq i32 %conv244, 0, !dbg !5007
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !5008

if.then247:                                       ; preds = %for.body236
  br label %for.inc296, !dbg !5009

if.end248:                                        ; preds = %for.body236
  %177 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5010
  %pb249 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %177, i32 0, i32 3, !dbg !5011
  %178 = load i32, i32* %ch, align 4, !dbg !5012
  %idxprom250 = sext i32 %178 to i64, !dbg !5013
  %179 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5013
  %grouped_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %179, i32 0, i32 3, !dbg !5014
  %180 = load i8**, i8*** %grouped_exp, align 8, !dbg !5014
  %arrayidx251 = getelementptr inbounds i8*, i8** %180, i64 %idxprom250, !dbg !5013
  %181 = load i8*, i8** %arrayidx251, align 8, !dbg !5013
  %arrayidx252 = getelementptr inbounds i8, i8* %181, i64 0, !dbg !5013
  %182 = load i8, i8* %arrayidx252, align 1, !dbg !5013
  %conv253 = zext i8 %182 to i32, !dbg !5013
  %183 = load i32, i32* %cpl, align 4, !dbg !5015
  %shr = ashr i32 %conv253, %183, !dbg !5016
  call void @put_bits(%struct.PutBitContext* %pb249, i32 4, i32 %shr), !dbg !5017
  %184 = load i32, i32* %ch, align 4, !dbg !5018
  %idxprom254 = sext i32 %184 to i64, !dbg !5019
  %185 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5019
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %185, i32 0, i32 22, !dbg !5020
  %arrayidx255 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom254, !dbg !5019
  %186 = load i32, i32* %arrayidx255, align 4, !dbg !5019
  %187 = load i32, i32* %ch, align 4, !dbg !5021
  %idxprom256 = sext i32 %187 to i64, !dbg !5022
  %188 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5022
  %start_freq257 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %188, i32 0, i32 41, !dbg !5023
  %arrayidx258 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq257, i64 0, i64 %idxprom256, !dbg !5022
  %189 = load i32, i32* %arrayidx258, align 4, !dbg !5022
  %sub259 = sub nsw i32 %186, %189, !dbg !5024
  %idxprom260 = sext i32 %sub259 to i64, !dbg !5025
  %190 = load i32, i32* %blk.addr, align 4, !dbg !5026
  %idxprom261 = sext i32 %190 to i64, !dbg !5027
  %191 = load i32, i32* %ch, align 4, !dbg !5028
  %idxprom262 = sext i32 %191 to i64, !dbg !5027
  %192 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5027
  %exp_strategy263 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %192, i32 0, i32 75, !dbg !5029
  %arrayidx264 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy263, i64 0, i64 %idxprom262, !dbg !5027
  %arrayidx265 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx264, i64 0, i64 %idxprom261, !dbg !5027
  %193 = load i8, i8* %arrayidx265, align 1, !dbg !5027
  %conv266 = zext i8 %193 to i32, !dbg !5027
  %sub267 = sub nsw i32 %conv266, 1, !dbg !5030
  %idxprom268 = sext i32 %sub267 to i64, !dbg !5025
  %194 = load i32, i32* %cpl, align 4, !dbg !5031
  %idxprom269 = sext i32 %194 to i64, !dbg !5025
  %arrayidx270 = getelementptr inbounds [2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 %idxprom269, !dbg !5025
  %arrayidx271 = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* %arrayidx270, i64 0, i64 %idxprom268, !dbg !5025
  %arrayidx272 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx271, i64 0, i64 %idxprom260, !dbg !5025
  %195 = load i8, i8* %arrayidx272, align 1, !dbg !5025
  %conv273 = zext i8 %195 to i32, !dbg !5025
  store i32 %conv273, i32* %nb_groups, align 4, !dbg !5032
  store i32 1, i32* %i, align 4, !dbg !5033
  br label %for.cond274, !dbg !5035

for.cond274:                                      ; preds = %for.inc285, %if.end248
  %196 = load i32, i32* %i, align 4, !dbg !5036
  %197 = load i32, i32* %nb_groups, align 4, !dbg !5039
  %cmp275 = icmp sle i32 %196, %197, !dbg !5040
  br i1 %cmp275, label %for.body277, label %for.end287, !dbg !5041

for.body277:                                      ; preds = %for.cond274
  %198 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5042
  %pb278 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %198, i32 0, i32 3, !dbg !5043
  %199 = load i32, i32* %i, align 4, !dbg !5044
  %idxprom279 = sext i32 %199 to i64, !dbg !5045
  %200 = load i32, i32* %ch, align 4, !dbg !5046
  %idxprom280 = sext i32 %200 to i64, !dbg !5045
  %201 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5045
  %grouped_exp281 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %201, i32 0, i32 3, !dbg !5047
  %202 = load i8**, i8*** %grouped_exp281, align 8, !dbg !5047
  %arrayidx282 = getelementptr inbounds i8*, i8** %202, i64 %idxprom280, !dbg !5045
  %203 = load i8*, i8** %arrayidx282, align 8, !dbg !5045
  %arrayidx283 = getelementptr inbounds i8, i8* %203, i64 %idxprom279, !dbg !5045
  %204 = load i8, i8* %arrayidx283, align 1, !dbg !5045
  %conv284 = zext i8 %204 to i32, !dbg !5045
  call void @put_bits(%struct.PutBitContext* %pb278, i32 7, i32 %conv284), !dbg !5048
  br label %for.inc285, !dbg !5048

for.inc285:                                       ; preds = %for.body277
  %205 = load i32, i32* %i, align 4, !dbg !5049
  %inc286 = add nsw i32 %205, 1, !dbg !5049
  store i32 %inc286, i32* %i, align 4, !dbg !5049
  br label %for.cond274, !dbg !5051, !llvm.loop !5052

for.end287:                                       ; preds = %for.cond274
  %206 = load i32, i32* %ch, align 4, !dbg !5054
  %207 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5056
  %lfe_channel288 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %207, i32 0, i32 28, !dbg !5057
  %208 = load i32, i32* %lfe_channel288, align 4, !dbg !5057
  %cmp289 = icmp ne i32 %206, %208, !dbg !5058
  br i1 %cmp289, label %land.lhs.true291, label %if.end295, !dbg !5059

land.lhs.true291:                                 ; preds = %for.end287
  %209 = load i32, i32* %cpl, align 4, !dbg !5060
  %tobool292 = icmp ne i32 %209, 0, !dbg !5060
  br i1 %tobool292, label %if.end295, label %if.then293, !dbg !5062

if.then293:                                       ; preds = %land.lhs.true291
  %210 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5063
  %pb294 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %210, i32 0, i32 3, !dbg !5064
  call void @put_bits(%struct.PutBitContext* %pb294, i32 2, i32 0), !dbg !5065
  br label %if.end295, !dbg !5065

if.end295:                                        ; preds = %if.then293, %land.lhs.true291, %for.end287
  br label %for.inc296, !dbg !5066

for.inc296:                                       ; preds = %if.end295, %if.then247
  %211 = load i32, i32* %ch, align 4, !dbg !5067
  %inc297 = add nsw i32 %211, 1, !dbg !5067
  store i32 %inc297, i32* %ch, align 4, !dbg !5067
  br label %for.cond233, !dbg !5069, !llvm.loop !5070

for.end298:                                       ; preds = %for.cond233
  %212 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5072
  %eac3299 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %212, i32 0, i32 12, !dbg !5074
  %213 = load i32, i32* %eac3299, align 4, !dbg !5074
  %tobool300 = icmp ne i32 %213, 0, !dbg !5072
  br i1 %tobool300, label %if.end313, label %if.then301, !dbg !5075

if.then301:                                       ; preds = %for.end298
  %214 = load i32, i32* %blk.addr, align 4, !dbg !5076
  %cmp302 = icmp eq i32 %214, 0, !dbg !5078
  %conv303 = zext i1 %cmp302 to i32, !dbg !5078
  store i32 %conv303, i32* %baie, align 4, !dbg !5079
  %215 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5080
  %pb304 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %215, i32 0, i32 3, !dbg !5081
  %216 = load i32, i32* %baie, align 4, !dbg !5082
  call void @put_bits(%struct.PutBitContext* %pb304, i32 1, i32 %216), !dbg !5083
  %217 = load i32, i32* %baie, align 4, !dbg !5084
  %tobool305 = icmp ne i32 %217, 0, !dbg !5084
  br i1 %tobool305, label %if.then306, label %if.end312, !dbg !5086

if.then306:                                       ; preds = %if.then301
  %218 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5087
  %pb307 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %218, i32 0, i32 3, !dbg !5089
  %219 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5090
  %slow_decay_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %219, i32 0, i32 50, !dbg !5091
  %220 = load i32, i32* %slow_decay_code, align 4, !dbg !5091
  call void @put_bits(%struct.PutBitContext* %pb307, i32 2, i32 %220), !dbg !5092
  %221 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5093
  %pb308 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %221, i32 0, i32 3, !dbg !5094
  %222 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5095
  %fast_decay_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %222, i32 0, i32 51, !dbg !5096
  %223 = load i32, i32* %fast_decay_code, align 8, !dbg !5096
  call void @put_bits(%struct.PutBitContext* %pb308, i32 2, i32 %223), !dbg !5097
  %224 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5098
  %pb309 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %224, i32 0, i32 3, !dbg !5099
  %225 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5100
  %slow_gain_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %225, i32 0, i32 49, !dbg !5101
  %226 = load i32, i32* %slow_gain_code, align 8, !dbg !5101
  call void @put_bits(%struct.PutBitContext* %pb309, i32 2, i32 %226), !dbg !5102
  %227 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5103
  %pb310 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %227, i32 0, i32 3, !dbg !5104
  %228 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5105
  %db_per_bit_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %228, i32 0, i32 52, !dbg !5106
  %229 = load i32, i32* %db_per_bit_code, align 4, !dbg !5106
  call void @put_bits(%struct.PutBitContext* %pb310, i32 2, i32 %229), !dbg !5107
  %230 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5108
  %pb311 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %230, i32 0, i32 3, !dbg !5109
  %231 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5110
  %floor_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %231, i32 0, i32 53, !dbg !5111
  %232 = load i32, i32* %floor_code, align 8, !dbg !5111
  call void @put_bits(%struct.PutBitContext* %pb311, i32 3, i32 %232), !dbg !5112
  br label %if.end312, !dbg !5113

if.end312:                                        ; preds = %if.then306, %if.then301
  br label %if.end313, !dbg !5114

if.end313:                                        ; preds = %if.end312, %for.end298
  %233 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5115
  %eac3314 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %233, i32 0, i32 12, !dbg !5117
  %234 = load i32, i32* %eac3314, align 4, !dbg !5117
  %tobool315 = icmp ne i32 %234, 0, !dbg !5115
  br i1 %tobool315, label %if.else341, label %if.then316, !dbg !5118

if.then316:                                       ; preds = %if.end313
  %235 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5119
  %pb317 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %235, i32 0, i32 3, !dbg !5121
  %236 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5122
  %new_snr_offsets = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %236, i32 0, i32 20, !dbg !5123
  %237 = load i32, i32* %new_snr_offsets, align 4, !dbg !5123
  call void @put_bits(%struct.PutBitContext* %pb317, i32 1, i32 %237), !dbg !5124
  %238 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5125
  %new_snr_offsets318 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %238, i32 0, i32 20, !dbg !5127
  %239 = load i32, i32* %new_snr_offsets318, align 4, !dbg !5127
  %tobool319 = icmp ne i32 %239, 0, !dbg !5125
  br i1 %tobool319, label %if.then320, label %if.end340, !dbg !5128

if.then320:                                       ; preds = %if.then316
  %240 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5129
  %pb321 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %240, i32 0, i32 3, !dbg !5131
  %241 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5132
  %coarse_snr_offset = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %241, i32 0, i32 55, !dbg !5133
  %242 = load i32, i32* %coarse_snr_offset, align 8, !dbg !5133
  call void @put_bits(%struct.PutBitContext* %pb321, i32 6, i32 %242), !dbg !5134
  %243 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5135
  %cpl_in_use322 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %243, i32 0, i32 15, !dbg !5137
  %244 = load i32, i32* %cpl_in_use322, align 4, !dbg !5137
  %tobool323 = icmp ne i32 %244, 0, !dbg !5138
  %lnot324 = xor i1 %tobool323, true, !dbg !5138
  %lnot.ext325 = zext i1 %lnot324 to i32, !dbg !5138
  store i32 %lnot.ext325, i32* %ch, align 4, !dbg !5139
  br label %for.cond326, !dbg !5140

for.cond326:                                      ; preds = %for.inc337, %if.then320
  %245 = load i32, i32* %ch, align 4, !dbg !5141
  %246 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5144
  %channels327 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %246, i32 0, i32 26, !dbg !5145
  %247 = load i32, i32* %channels327, align 4, !dbg !5145
  %cmp328 = icmp sle i32 %245, %247, !dbg !5146
  br i1 %cmp328, label %for.body330, label %for.end339, !dbg !5147

for.body330:                                      ; preds = %for.cond326
  %248 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5148
  %pb331 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %248, i32 0, i32 3, !dbg !5150
  %249 = load i32, i32* %ch, align 4, !dbg !5151
  %idxprom332 = sext i32 %249 to i64, !dbg !5152
  %250 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5152
  %fine_snr_offset = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %250, i32 0, i32 57, !dbg !5153
  %arrayidx333 = getelementptr inbounds [7 x i32], [7 x i32]* %fine_snr_offset, i64 0, i64 %idxprom332, !dbg !5152
  %251 = load i32, i32* %arrayidx333, align 4, !dbg !5152
  call void @put_bits(%struct.PutBitContext* %pb331, i32 4, i32 %251), !dbg !5154
  %252 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5155
  %pb334 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %252, i32 0, i32 3, !dbg !5156
  %253 = load i32, i32* %ch, align 4, !dbg !5157
  %idxprom335 = sext i32 %253 to i64, !dbg !5158
  %254 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5158
  %fast_gain_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %254, i32 0, i32 56, !dbg !5159
  %arrayidx336 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain_code, i64 0, i64 %idxprom335, !dbg !5158
  %255 = load i32, i32* %arrayidx336, align 4, !dbg !5158
  call void @put_bits(%struct.PutBitContext* %pb334, i32 3, i32 %255), !dbg !5160
  br label %for.inc337, !dbg !5161

for.inc337:                                       ; preds = %for.body330
  %256 = load i32, i32* %ch, align 4, !dbg !5162
  %inc338 = add nsw i32 %256, 1, !dbg !5162
  store i32 %inc338, i32* %ch, align 4, !dbg !5162
  br label %for.cond326, !dbg !5164, !llvm.loop !5165

for.end339:                                       ; preds = %for.cond326
  br label %if.end340, !dbg !5167

if.end340:                                        ; preds = %for.end339, %if.then316
  br label %if.end343, !dbg !5168

if.else341:                                       ; preds = %if.end313
  %257 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5169
  %pb342 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %257, i32 0, i32 3, !dbg !5171
  call void @put_bits(%struct.PutBitContext* %pb342, i32 1, i32 0), !dbg !5172
  br label %if.end343

if.end343:                                        ; preds = %if.else341, %if.end340
  %258 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5173
  %cpl_in_use344 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %258, i32 0, i32 15, !dbg !5175
  %259 = load i32, i32* %cpl_in_use344, align 4, !dbg !5175
  %tobool345 = icmp ne i32 %259, 0, !dbg !5173
  br i1 %tobool345, label %if.then346, label %if.end363, !dbg !5176

if.then346:                                       ; preds = %if.end343
  %260 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5177
  %eac3347 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %260, i32 0, i32 12, !dbg !5180
  %261 = load i32, i32* %eac3347, align 4, !dbg !5180
  %tobool348 = icmp ne i32 %261, 0, !dbg !5177
  br i1 %tobool348, label %lor.lhs.false349, label %if.then352, !dbg !5181

lor.lhs.false349:                                 ; preds = %if.then346
  %262 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5182
  %new_cpl_leak = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %262, i32 0, i32 21, !dbg !5184
  %263 = load i32, i32* %new_cpl_leak, align 8, !dbg !5184
  %cmp350 = icmp ne i32 %263, 2, !dbg !5185
  br i1 %cmp350, label %if.then352, label %if.end355, !dbg !5186

if.then352:                                       ; preds = %lor.lhs.false349, %if.then346
  %264 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5187
  %pb353 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %264, i32 0, i32 3, !dbg !5188
  %265 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5189
  %new_cpl_leak354 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %265, i32 0, i32 21, !dbg !5190
  %266 = load i32, i32* %new_cpl_leak354, align 8, !dbg !5190
  call void @put_bits(%struct.PutBitContext* %pb353, i32 1, i32 %266), !dbg !5191
  br label %if.end355, !dbg !5191

if.end355:                                        ; preds = %if.then352, %lor.lhs.false349
  %267 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5192
  %new_cpl_leak356 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %267, i32 0, i32 21, !dbg !5194
  %268 = load i32, i32* %new_cpl_leak356, align 8, !dbg !5194
  %tobool357 = icmp ne i32 %268, 0, !dbg !5192
  br i1 %tobool357, label %if.then358, label %if.end362, !dbg !5195

if.then358:                                       ; preds = %if.end355
  %269 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5196
  %pb359 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %269, i32 0, i32 3, !dbg !5198
  %270 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5199
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %270, i32 0, i32 54, !dbg !5200
  %cpl_fast_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 7, !dbg !5201
  %271 = load i32, i32* %cpl_fast_leak, align 4, !dbg !5201
  call void @put_bits(%struct.PutBitContext* %pb359, i32 3, i32 %271), !dbg !5202
  %272 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5203
  %pb360 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %272, i32 0, i32 3, !dbg !5204
  %273 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5205
  %bit_alloc361 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %273, i32 0, i32 54, !dbg !5206
  %cpl_slow_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc361, i32 0, i32 8, !dbg !5207
  %274 = load i32, i32* %cpl_slow_leak, align 4, !dbg !5207
  call void @put_bits(%struct.PutBitContext* %pb360, i32 3, i32 %274), !dbg !5208
  br label %if.end362, !dbg !5209

if.end362:                                        ; preds = %if.then358, %if.end355
  br label %if.end363, !dbg !5210

if.end363:                                        ; preds = %if.end362, %if.end343
  %275 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5211
  %eac3364 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %275, i32 0, i32 12, !dbg !5213
  %276 = load i32, i32* %eac3364, align 4, !dbg !5213
  %tobool365 = icmp ne i32 %276, 0, !dbg !5211
  br i1 %tobool365, label %if.end369, label %if.then366, !dbg !5214

if.then366:                                       ; preds = %if.end363
  %277 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5215
  %pb367 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %277, i32 0, i32 3, !dbg !5217
  call void @put_bits(%struct.PutBitContext* %pb367, i32 1, i32 0), !dbg !5218
  %278 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5219
  %pb368 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %278, i32 0, i32 3, !dbg !5220
  call void @put_bits(%struct.PutBitContext* %pb368, i32 1, i32 0), !dbg !5221
  br label %if.end369, !dbg !5222

if.end369:                                        ; preds = %if.then366, %if.end363
  %279 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5223
  %cpl_in_use370 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %279, i32 0, i32 15, !dbg !5224
  %280 = load i32, i32* %cpl_in_use370, align 4, !dbg !5224
  %tobool371 = icmp ne i32 %280, 0, !dbg !5225
  %lnot372 = xor i1 %tobool371, true, !dbg !5225
  %lnot.ext373 = zext i1 %lnot372 to i32, !dbg !5225
  store i32 %lnot.ext373, i32* %got_cpl, align 4, !dbg !5226
  store i32 1, i32* %ch, align 4, !dbg !5227
  br label %for.cond374, !dbg !5229

for.cond374:                                      ; preds = %for.inc448, %if.end369
  %281 = load i32, i32* %ch, align 4, !dbg !5230
  %282 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5233
  %channels375 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %282, i32 0, i32 26, !dbg !5234
  %283 = load i32, i32* %channels375, align 4, !dbg !5234
  %cmp376 = icmp sle i32 %281, %283, !dbg !5235
  br i1 %cmp376, label %for.body378, label %for.end450, !dbg !5236

for.body378:                                      ; preds = %for.cond374
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5237, metadata !2184), !dbg !5239
  call void @llvm.dbg.declare(metadata i32* %q, metadata !5240, metadata !2184), !dbg !5241
  %284 = load i32, i32* %got_cpl, align 4, !dbg !5242
  %tobool379 = icmp ne i32 %284, 0, !dbg !5242
  br i1 %tobool379, label %if.end392, label %land.lhs.true380, !dbg !5244

land.lhs.true380:                                 ; preds = %for.body378
  %285 = load i32, i32* %ch, align 4, !dbg !5245
  %cmp381 = icmp sgt i32 %285, 1, !dbg !5247
  br i1 %cmp381, label %land.lhs.true383, label %if.end392, !dbg !5248

land.lhs.true383:                                 ; preds = %land.lhs.true380
  %286 = load i32, i32* %ch, align 4, !dbg !5249
  %sub384 = sub nsw i32 %286, 1, !dbg !5251
  %idxprom385 = sext i32 %sub384 to i64, !dbg !5252
  %287 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5252
  %channel_in_cpl386 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %287, i32 0, i32 16, !dbg !5253
  %arrayidx387 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_in_cpl386, i64 0, i64 %idxprom385, !dbg !5252
  %288 = load i8, i8* %arrayidx387, align 1, !dbg !5252
  %conv388 = zext i8 %288 to i32, !dbg !5252
  %tobool389 = icmp ne i32 %conv388, 0, !dbg !5252
  br i1 %tobool389, label %if.then390, label %if.end392, !dbg !5254

if.then390:                                       ; preds = %land.lhs.true383
  %289 = load i32, i32* %ch, align 4, !dbg !5255
  %sub391 = sub nsw i32 %289, 1, !dbg !5257
  store i32 %sub391, i32* %ch0, align 4, !dbg !5258
  store i32 0, i32* %ch, align 4, !dbg !5259
  store i32 1, i32* %got_cpl, align 4, !dbg !5260
  br label %if.end392, !dbg !5261

if.end392:                                        ; preds = %if.then390, %land.lhs.true383, %land.lhs.true380, %for.body378
  %290 = load i32, i32* %ch, align 4, !dbg !5262
  %idxprom393 = sext i32 %290 to i64, !dbg !5264
  %291 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5264
  %start_freq394 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %291, i32 0, i32 41, !dbg !5265
  %arrayidx395 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq394, i64 0, i64 %idxprom393, !dbg !5264
  %292 = load i32, i32* %arrayidx395, align 4, !dbg !5264
  store i32 %292, i32* %i, align 4, !dbg !5266
  br label %for.cond396, !dbg !5267

for.cond396:                                      ; preds = %for.inc441, %if.end392
  %293 = load i32, i32* %i, align 4, !dbg !5268
  %294 = load i32, i32* %ch, align 4, !dbg !5271
  %idxprom397 = sext i32 %294 to i64, !dbg !5272
  %295 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5272
  %end_freq398 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %295, i32 0, i32 22, !dbg !5273
  %arrayidx399 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq398, i64 0, i64 %idxprom397, !dbg !5272
  %296 = load i32, i32* %arrayidx399, align 4, !dbg !5272
  %cmp400 = icmp slt i32 %293, %296, !dbg !5274
  br i1 %cmp400, label %for.body402, label %for.end443, !dbg !5275

for.body402:                                      ; preds = %for.cond396
  %297 = load i32, i32* %i, align 4, !dbg !5276
  %idxprom403 = sext i32 %297 to i64, !dbg !5278
  %298 = load i32, i32* %ch, align 4, !dbg !5279
  %idxprom404 = sext i32 %298 to i64, !dbg !5278
  %299 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !5278
  %qmant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %299, i32 0, i32 7, !dbg !5280
  %300 = load i16**, i16*** %qmant, align 8, !dbg !5280
  %arrayidx405 = getelementptr inbounds i16*, i16** %300, i64 %idxprom404, !dbg !5278
  %301 = load i16*, i16** %arrayidx405, align 8, !dbg !5278
  %arrayidx406 = getelementptr inbounds i16, i16* %301, i64 %idxprom403, !dbg !5278
  %302 = load i16, i16* %arrayidx406, align 2, !dbg !5278
  %conv407 = zext i16 %302 to i32, !dbg !5278
  store i32 %conv407, i32* %q, align 4, !dbg !5281
  %303 = load i32, i32* %i, align 4, !dbg !5282
  %idxprom408 = sext i32 %303 to i64, !dbg !5283
  %304 = load i32, i32* %blk.addr, align 4, !dbg !5284
  %idxprom409 = sext i32 %304 to i64, !dbg !5283
  %305 = load i32, i32* %ch, align 4, !dbg !5285
  %idxprom410 = sext i32 %305 to i64, !dbg !5283
  %306 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5283
  %ref_bap = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %306, i32 0, i32 79, !dbg !5286
  %arrayidx411 = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap, i64 0, i64 %idxprom410, !dbg !5283
  %arrayidx412 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx411, i64 0, i64 %idxprom409, !dbg !5283
  %307 = load i8*, i8** %arrayidx412, align 8, !dbg !5283
  %arrayidx413 = getelementptr inbounds i8, i8* %307, i64 %idxprom408, !dbg !5283
  %308 = load i8, i8* %arrayidx413, align 1, !dbg !5283
  %conv414 = zext i8 %308 to i32, !dbg !5283
  store i32 %conv414, i32* %b, align 4, !dbg !5287
  %309 = load i32, i32* %b, align 4, !dbg !5288
  switch i32 %309, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb415
    i32 2, label %sw.bb421
    i32 3, label %sw.bb427
    i32 4, label %sw.bb429
    i32 14, label %sw.bb435
    i32 15, label %sw.bb437
  ], !dbg !5289

sw.bb:                                            ; preds = %for.body402
  br label %sw.epilog, !dbg !5290

sw.bb415:                                         ; preds = %for.body402
  %310 = load i32, i32* %q, align 4, !dbg !5292
  %cmp416 = icmp ne i32 %310, 128, !dbg !5294
  br i1 %cmp416, label %if.then418, label %if.end420, !dbg !5295

if.then418:                                       ; preds = %sw.bb415
  %311 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5296
  %pb419 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %311, i32 0, i32 3, !dbg !5298
  %312 = load i32, i32* %q, align 4, !dbg !5299
  call void @put_bits(%struct.PutBitContext* %pb419, i32 5, i32 %312), !dbg !5300
  br label %if.end420, !dbg !5300

if.end420:                                        ; preds = %if.then418, %sw.bb415
  br label %sw.epilog, !dbg !5301

sw.bb421:                                         ; preds = %for.body402
  %313 = load i32, i32* %q, align 4, !dbg !5303
  %cmp422 = icmp ne i32 %313, 128, !dbg !5305
  br i1 %cmp422, label %if.then424, label %if.end426, !dbg !5306

if.then424:                                       ; preds = %sw.bb421
  %314 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5307
  %pb425 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %314, i32 0, i32 3, !dbg !5309
  %315 = load i32, i32* %q, align 4, !dbg !5310
  call void @put_bits(%struct.PutBitContext* %pb425, i32 7, i32 %315), !dbg !5311
  br label %if.end426, !dbg !5311

if.end426:                                        ; preds = %if.then424, %sw.bb421
  br label %sw.epilog, !dbg !5312

sw.bb427:                                         ; preds = %for.body402
  %316 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5313
  %pb428 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %316, i32 0, i32 3, !dbg !5314
  %317 = load i32, i32* %q, align 4, !dbg !5315
  call void @put_sbits(%struct.PutBitContext* %pb428, i32 3, i32 %317), !dbg !5316
  br label %sw.epilog, !dbg !5317

sw.bb429:                                         ; preds = %for.body402
  %318 = load i32, i32* %q, align 4, !dbg !5318
  %cmp430 = icmp ne i32 %318, 128, !dbg !5320
  br i1 %cmp430, label %if.then432, label %if.end434, !dbg !5321

if.then432:                                       ; preds = %sw.bb429
  %319 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5322
  %pb433 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %319, i32 0, i32 3, !dbg !5324
  %320 = load i32, i32* %q, align 4, !dbg !5325
  call void @put_bits(%struct.PutBitContext* %pb433, i32 7, i32 %320), !dbg !5326
  br label %if.end434, !dbg !5326

if.end434:                                        ; preds = %if.then432, %sw.bb429
  br label %sw.epilog, !dbg !5327

sw.bb435:                                         ; preds = %for.body402
  %321 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5328
  %pb436 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %321, i32 0, i32 3, !dbg !5329
  %322 = load i32, i32* %q, align 4, !dbg !5330
  call void @put_sbits(%struct.PutBitContext* %pb436, i32 14, i32 %322), !dbg !5331
  br label %sw.epilog, !dbg !5332

sw.bb437:                                         ; preds = %for.body402
  %323 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5333
  %pb438 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %323, i32 0, i32 3, !dbg !5334
  %324 = load i32, i32* %q, align 4, !dbg !5335
  call void @put_sbits(%struct.PutBitContext* %pb438, i32 16, i32 %324), !dbg !5336
  br label %sw.epilog, !dbg !5337

sw.default:                                       ; preds = %for.body402
  %325 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5338
  %pb439 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %325, i32 0, i32 3, !dbg !5339
  %326 = load i32, i32* %b, align 4, !dbg !5340
  %sub440 = sub nsw i32 %326, 1, !dbg !5341
  %327 = load i32, i32* %q, align 4, !dbg !5342
  call void @put_sbits(%struct.PutBitContext* %pb439, i32 %sub440, i32 %327), !dbg !5343
  br label %sw.epilog, !dbg !5344

sw.epilog:                                        ; preds = %sw.default, %sw.bb437, %sw.bb435, %if.end434, %sw.bb427, %if.end426, %if.end420, %sw.bb
  br label %for.inc441, !dbg !5345

for.inc441:                                       ; preds = %sw.epilog
  %328 = load i32, i32* %i, align 4, !dbg !5346
  %inc442 = add nsw i32 %328, 1, !dbg !5346
  store i32 %inc442, i32* %i, align 4, !dbg !5346
  br label %for.cond396, !dbg !5348, !llvm.loop !5349

for.end443:                                       ; preds = %for.cond396
  %329 = load i32, i32* %ch, align 4, !dbg !5351
  %cmp444 = icmp eq i32 %329, 0, !dbg !5353
  br i1 %cmp444, label %if.then446, label %if.end447, !dbg !5354

if.then446:                                       ; preds = %for.end443
  %330 = load i32, i32* %ch0, align 4, !dbg !5355
  store i32 %330, i32* %ch, align 4, !dbg !5356
  br label %if.end447, !dbg !5357

if.end447:                                        ; preds = %if.then446, %for.end443
  br label %for.inc448, !dbg !5358

for.inc448:                                       ; preds = %if.end447
  %331 = load i32, i32* %ch, align 4, !dbg !5359
  %inc449 = add nsw i32 %331, 1, !dbg !5359
  store i32 %inc449, i32* %ch, align 4, !dbg !5359
  br label %for.cond374, !dbg !5361, !llvm.loop !5362

for.end450:                                       ; preds = %for.cond374
  ret void, !dbg !5364
}

; Function Attrs: nounwind uwtable
define internal void @output_frame_end(%struct.AC3EncodeContext* %s) #0 !dbg !5365 {
entry:
  %x.addr.i85 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i85, metadata !5366, metadata !2184), !dbg !5371
  %x.addr.i78 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i78, metadata !5366, metadata !2184), !dbg !5375
  %x.addr.i71 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i71, metadata !5366, metadata !2184), !dbg !5377
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !5366, metadata !2184), !dbg !5379
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %crc_ctx = alloca i32*, align 8
  %frame_size_58 = alloca i32, align 4
  %pad_bytes = alloca i32, align 4
  %crc1 = alloca i32, align 4
  %crc2_partial = alloca i32, align 4
  %crc2 = alloca i32, align 4
  %crc_inv = alloca i32, align 4
  %frame = alloca i8*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !5382, metadata !2184), !dbg !5383
  call void @llvm.dbg.declare(metadata i32** %crc_ctx, metadata !5384, metadata !2184), !dbg !5388
  %call = call i32* @av_crc_get_table(i32 1), !dbg !5389
  store i32* %call, i32** %crc_ctx, align 8, !dbg !5388
  call void @llvm.dbg.declare(metadata i32* %frame_size_58, metadata !5390, metadata !2184), !dbg !5391
  call void @llvm.dbg.declare(metadata i32* %pad_bytes, metadata !5392, metadata !2184), !dbg !5393
  call void @llvm.dbg.declare(metadata i32* %crc1, metadata !5394, metadata !2184), !dbg !5395
  call void @llvm.dbg.declare(metadata i32* %crc2_partial, metadata !5396, metadata !2184), !dbg !5397
  call void @llvm.dbg.declare(metadata i32* %crc2, metadata !5398, metadata !2184), !dbg !5399
  call void @llvm.dbg.declare(metadata i32* %crc_inv, metadata !5400, metadata !2184), !dbg !5401
  call void @llvm.dbg.declare(metadata i8** %frame, metadata !5402, metadata !2184), !dbg !5403
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5404
  %frame_size = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 20, !dbg !5405
  %1 = load i32, i32* %frame_size, align 4, !dbg !5405
  %shr = ashr i32 %1, 2, !dbg !5406
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5407
  %frame_size1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 20, !dbg !5408
  %3 = load i32, i32* %frame_size1, align 4, !dbg !5408
  %shr2 = ashr i32 %3, 4, !dbg !5409
  %add = add nsw i32 %shr, %shr2, !dbg !5410
  %shl = shl i32 %add, 1, !dbg !5411
  store i32 %shl, i32* %frame_size_58, align 4, !dbg !5412
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5413
  %pb = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 3, !dbg !5414
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !5415
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5416
  %pb3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 3, !dbg !5417
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %pb3, i32 0, i32 2, !dbg !5418
  %6 = load i8*, i8** %buf, align 8, !dbg !5418
  store i8* %6, i8** %frame, align 8, !dbg !5419
  %7 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5420
  %frame_size4 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %7, i32 0, i32 20, !dbg !5421
  %8 = load i32, i32* %frame_size4, align 4, !dbg !5421
  %conv = sext i32 %8 to i64, !dbg !5420
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5422
  %pb5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 3, !dbg !5423
  %call6 = call i8* @put_bits_ptr(%struct.PutBitContext* %pb5), !dbg !5424
  %10 = load i8*, i8** %frame, align 8, !dbg !5425
  %sub.ptr.lhs.cast = ptrtoint i8* %call6 to i64, !dbg !5426
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !5426
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5426
  %sub = sub nsw i64 %conv, %sub.ptr.sub, !dbg !5427
  %sub7 = sub nsw i64 %sub, 2, !dbg !5428
  %conv8 = trunc i64 %sub7 to i32, !dbg !5420
  store i32 %conv8, i32* %pad_bytes, align 4, !dbg !5429
  %11 = load i32, i32* %pad_bytes, align 4, !dbg !5430
  %cmp = icmp sgt i32 %11, 0, !dbg !5432
  br i1 %cmp, label %if.then, label %if.end, !dbg !5433

if.then:                                          ; preds = %entry
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5434
  %pb10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 3, !dbg !5435
  %call11 = call i8* @put_bits_ptr(%struct.PutBitContext* %pb10), !dbg !5436
  %13 = load i32, i32* %pad_bytes, align 4, !dbg !5437
  %conv12 = sext i32 %13 to i64, !dbg !5437
  call void @llvm.memset.p0i8.i64(i8* %call11, i8 0, i64 %conv12, i32 1, i1 false), !dbg !5438
  br label %if.end, !dbg !5440

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5441
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 12, !dbg !5442
  %15 = load i32, i32* %eac3, align 4, !dbg !5442
  %tobool = icmp ne i32 %15, 0, !dbg !5441
  br i1 %tobool, label %if.then13, label %if.else, !dbg !5443

if.then13:                                        ; preds = %if.end
  %16 = load i32*, i32** %crc_ctx, align 8, !dbg !5444
  %17 = load i8*, i8** %frame, align 8, !dbg !5446
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 2, !dbg !5447
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5448
  %frame_size14 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 20, !dbg !5449
  %19 = load i32, i32* %frame_size14, align 4, !dbg !5449
  %sub15 = sub nsw i32 %19, 5, !dbg !5450
  %conv16 = sext i32 %sub15 to i64, !dbg !5448
  %call17 = call i32 @av_crc(i32* %16, i32 0, i8* %add.ptr, i64 %conv16) #10, !dbg !5451
  store i32 %call17, i32* %crc2_partial, align 4, !dbg !5452
  br label %if.end40, !dbg !5453

if.else:                                          ; preds = %if.end
  %20 = load i32*, i32** %crc_ctx, align 8, !dbg !5454
  %21 = load i8*, i8** %frame, align 8, !dbg !5455
  %add.ptr18 = getelementptr inbounds i8, i8* %21, i64 4, !dbg !5456
  %22 = load i32, i32* %frame_size_58, align 4, !dbg !5457
  %sub19 = sub nsw i32 %22, 4, !dbg !5458
  %conv20 = sext i32 %sub19 to i64, !dbg !5457
  %call21 = call i32 @av_crc(i32* %20, i32 0, i8* %add.ptr18, i64 %conv20) #10, !dbg !5459
  %conv22 = trunc i32 %call21 to i16, !dbg !5459
  store i16 %conv22, i16* %x.addr.i, align 2, !dbg !5460
  %23 = load i16, i16* %x.addr.i, align 2, !dbg !5461
  %conv.i = zext i16 %23 to i32, !dbg !5461
  %shr.i = ashr i32 %conv.i, 8, !dbg !5462
  %24 = load i16, i16* %x.addr.i, align 2, !dbg !5463
  %conv1.i = zext i16 %24 to i32, !dbg !5463
  %shl.i = shl i32 %conv1.i, 8, !dbg !5464
  %or.i = or i32 %shr.i, %shl.i, !dbg !5465
  %conv2.i = trunc i32 %or.i to i16, !dbg !5466
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !5467
  %25 = load i16, i16* %x.addr.i, align 2, !dbg !5468
  %conv24 = zext i16 %25 to i32, !dbg !5469
  store i32 %conv24, i32* %crc1, align 4, !dbg !5470
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5471
  %frame_size25 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 20, !dbg !5472
  %27 = load i32, i32* %frame_size25, align 4, !dbg !5472
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5473
  %frame_size_min = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 19, !dbg !5474
  %29 = load i32, i32* %frame_size_min, align 8, !dbg !5474
  %cmp26 = icmp sgt i32 %27, %29, !dbg !5475
  %conv27 = zext i1 %cmp26 to i32, !dbg !5475
  %idxprom = sext i32 %conv27 to i64, !dbg !5476
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5476
  %crc_inv28 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 22, !dbg !5477
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %crc_inv28, i64 0, i64 %idxprom, !dbg !5476
  %31 = load i16, i16* %arrayidx, align 2, !dbg !5476
  %conv29 = zext i16 %31 to i32, !dbg !5476
  store i32 %conv29, i32* %crc_inv, align 4, !dbg !5478
  %32 = load i32, i32* %crc_inv, align 4, !dbg !5479
  %33 = load i32, i32* %crc1, align 4, !dbg !5480
  %call30 = call i32 @mul_poly(i32 %32, i32 %33, i32 98309), !dbg !5481
  store i32 %call30, i32* %crc1, align 4, !dbg !5482
  %34 = load i32, i32* %crc1, align 4, !dbg !5483
  %conv31 = trunc i32 %34 to i16, !dbg !5483
  store i16 %conv31, i16* %x.addr.i85, align 2, !dbg !5484
  %35 = load i16, i16* %x.addr.i85, align 2, !dbg !5485
  %conv.i86 = zext i16 %35 to i32, !dbg !5485
  %shr.i87 = ashr i32 %conv.i86, 8, !dbg !5486
  %36 = load i16, i16* %x.addr.i85, align 2, !dbg !5487
  %conv1.i88 = zext i16 %36 to i32, !dbg !5487
  %shl.i89 = shl i32 %conv1.i88, 8, !dbg !5488
  %or.i90 = or i32 %shr.i87, %shl.i89, !dbg !5489
  %conv2.i91 = trunc i32 %or.i90 to i16, !dbg !5490
  store i16 %conv2.i91, i16* %x.addr.i85, align 2, !dbg !5491
  %37 = load i16, i16* %x.addr.i85, align 2, !dbg !5492
  %38 = load i8*, i8** %frame, align 8, !dbg !5493
  %add.ptr33 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !5494
  %39 = bitcast i8* %add.ptr33 to %union.unaligned_16*, !dbg !5495
  %l = bitcast %union.unaligned_16* %39 to i16*, !dbg !5495
  store i16 %37, i16* %l, align 1, !dbg !5496
  %40 = load i32*, i32** %crc_ctx, align 8, !dbg !5497
  %41 = load i8*, i8** %frame, align 8, !dbg !5498
  %42 = load i32, i32* %frame_size_58, align 4, !dbg !5499
  %idx.ext = sext i32 %42 to i64, !dbg !5500
  %add.ptr34 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !5500
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5501
  %frame_size35 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 20, !dbg !5502
  %44 = load i32, i32* %frame_size35, align 4, !dbg !5502
  %45 = load i32, i32* %frame_size_58, align 4, !dbg !5503
  %sub36 = sub nsw i32 %44, %45, !dbg !5504
  %sub37 = sub nsw i32 %sub36, 3, !dbg !5505
  %conv38 = sext i32 %sub37 to i64, !dbg !5501
  %call39 = call i32 @av_crc(i32* %40, i32 0, i8* %add.ptr34, i64 %conv38) #10, !dbg !5506
  store i32 %call39, i32* %crc2_partial, align 4, !dbg !5507
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then13
  %46 = load i32*, i32** %crc_ctx, align 8, !dbg !5508
  %47 = load i32, i32* %crc2_partial, align 4, !dbg !5509
  %48 = load i8*, i8** %frame, align 8, !dbg !5510
  %49 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5511
  %frame_size41 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %49, i32 0, i32 20, !dbg !5512
  %50 = load i32, i32* %frame_size41, align 4, !dbg !5512
  %idx.ext42 = sext i32 %50 to i64, !dbg !5513
  %add.ptr43 = getelementptr inbounds i8, i8* %48, i64 %idx.ext42, !dbg !5513
  %add.ptr44 = getelementptr inbounds i8, i8* %add.ptr43, i64 -3, !dbg !5514
  %call45 = call i32 @av_crc(i32* %46, i32 %47, i8* %add.ptr44, i64 1) #10, !dbg !5515
  store i32 %call45, i32* %crc2, align 4, !dbg !5516
  %51 = load i32, i32* %crc2, align 4, !dbg !5517
  %cmp46 = icmp eq i32 %51, 30475, !dbg !5519
  br i1 %cmp46, label %if.then48, label %if.end60, !dbg !5520

if.then48:                                        ; preds = %if.end40
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5521
  %frame_size49 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 20, !dbg !5523
  %53 = load i32, i32* %frame_size49, align 4, !dbg !5523
  %sub50 = sub nsw i32 %53, 3, !dbg !5524
  %idxprom51 = sext i32 %sub50 to i64, !dbg !5525
  %54 = load i8*, i8** %frame, align 8, !dbg !5525
  %arrayidx52 = getelementptr inbounds i8, i8* %54, i64 %idxprom51, !dbg !5525
  %55 = load i8, i8* %arrayidx52, align 1, !dbg !5526
  %conv53 = zext i8 %55 to i32, !dbg !5526
  %xor = xor i32 %conv53, 1, !dbg !5526
  %conv54 = trunc i32 %xor to i8, !dbg !5526
  store i8 %conv54, i8* %arrayidx52, align 1, !dbg !5526
  %56 = load i32*, i32** %crc_ctx, align 8, !dbg !5527
  %57 = load i32, i32* %crc2_partial, align 4, !dbg !5528
  %58 = load i8*, i8** %frame, align 8, !dbg !5529
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5530
  %frame_size55 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 20, !dbg !5531
  %60 = load i32, i32* %frame_size55, align 4, !dbg !5531
  %idx.ext56 = sext i32 %60 to i64, !dbg !5532
  %add.ptr57 = getelementptr inbounds i8, i8* %58, i64 %idx.ext56, !dbg !5532
  %add.ptr58 = getelementptr inbounds i8, i8* %add.ptr57, i64 -3, !dbg !5533
  %call59 = call i32 @av_crc(i32* %56, i32 %57, i8* %add.ptr58, i64 1) #10, !dbg !5534
  store i32 %call59, i32* %crc2, align 4, !dbg !5535
  br label %if.end60, !dbg !5536

if.end60:                                         ; preds = %if.then48, %if.end40
  %61 = load i32, i32* %crc2, align 4, !dbg !5537
  %conv61 = trunc i32 %61 to i16, !dbg !5537
  store i16 %conv61, i16* %x.addr.i78, align 2, !dbg !5538
  %62 = load i16, i16* %x.addr.i78, align 2, !dbg !5539
  %conv.i79 = zext i16 %62 to i32, !dbg !5539
  %shr.i80 = ashr i32 %conv.i79, 8, !dbg !5540
  %63 = load i16, i16* %x.addr.i78, align 2, !dbg !5541
  %conv1.i81 = zext i16 %63 to i32, !dbg !5541
  %shl.i82 = shl i32 %conv1.i81, 8, !dbg !5542
  %or.i83 = or i32 %shr.i80, %shl.i82, !dbg !5543
  %conv2.i84 = trunc i32 %or.i83 to i16, !dbg !5544
  store i16 %conv2.i84, i16* %x.addr.i78, align 2, !dbg !5545
  %64 = load i16, i16* %x.addr.i78, align 2, !dbg !5546
  %conv63 = zext i16 %64 to i32, !dbg !5538
  store i32 %conv63, i32* %crc2, align 4, !dbg !5547
  %65 = load i32, i32* %crc2, align 4, !dbg !5548
  %conv64 = trunc i32 %65 to i16, !dbg !5548
  store i16 %conv64, i16* %x.addr.i71, align 2, !dbg !5549
  %66 = load i16, i16* %x.addr.i71, align 2, !dbg !5550
  %conv.i72 = zext i16 %66 to i32, !dbg !5550
  %shr.i73 = ashr i32 %conv.i72, 8, !dbg !5551
  %67 = load i16, i16* %x.addr.i71, align 2, !dbg !5552
  %conv1.i74 = zext i16 %67 to i32, !dbg !5552
  %shl.i75 = shl i32 %conv1.i74, 8, !dbg !5553
  %or.i76 = or i32 %shr.i73, %shl.i75, !dbg !5554
  %conv2.i77 = trunc i32 %or.i76 to i16, !dbg !5555
  store i16 %conv2.i77, i16* %x.addr.i71, align 2, !dbg !5556
  %68 = load i16, i16* %x.addr.i71, align 2, !dbg !5557
  %69 = load i8*, i8** %frame, align 8, !dbg !5558
  %70 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5559
  %frame_size66 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %70, i32 0, i32 20, !dbg !5560
  %71 = load i32, i32* %frame_size66, align 4, !dbg !5560
  %idx.ext67 = sext i32 %71 to i64, !dbg !5561
  %add.ptr68 = getelementptr inbounds i8, i8* %69, i64 %idx.ext67, !dbg !5561
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 -2, !dbg !5562
  %72 = bitcast i8* %add.ptr69 to %union.unaligned_16*, !dbg !5563
  %l70 = bitcast %union.unaligned_16* %72 to i16*, !dbg !5563
  store i16 %68, i16* %l70, align 1, !dbg !5564
  ret void, !dbg !5565
}

; Function Attrs: nounwind uwtable
define i32 @ff_ac3_validate_metadata(%struct.AC3EncodeContext* %s) #0 !dbg !977 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %opt = alloca %struct.AC3EncOptions*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !5566, metadata !2184), !dbg !5567
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5568, metadata !2184), !dbg !5569
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5570
  %avctx1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 2, !dbg !5571
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !5571
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !5569
  call void @llvm.dbg.declare(metadata %struct.AC3EncOptions** %opt, metadata !5572, metadata !2184), !dbg !5573
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5574
  %options = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 1, !dbg !5575
  store %struct.AC3EncOptions* %options, %struct.AC3EncOptions** %opt, align 8, !dbg !5573
  %3 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5576
  %audio_production_info = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %3, i32 0, i32 5, !dbg !5577
  store i32 0, i32* %audio_production_info, align 4, !dbg !5578
  %4 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5579
  %extended_bsi_1 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %4, i32 0, i32 10, !dbg !5580
  store i32 0, i32* %extended_bsi_1, align 4, !dbg !5581
  %5 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5582
  %extended_bsi_2 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %5, i32 0, i32 16, !dbg !5583
  store i32 0, i32* %extended_bsi_2, align 4, !dbg !5584
  %6 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5585
  %eac3_mixing_metadata = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %6, i32 0, i32 20, !dbg !5586
  store i32 0, i32* %eac3_mixing_metadata, align 4, !dbg !5587
  %7 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5588
  %eac3_info_metadata = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %7, i32 0, i32 21, !dbg !5589
  store i32 0, i32* %eac3_info_metadata, align 4, !dbg !5590
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5591
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 31, !dbg !5593
  %9 = load i32, i32* %channel_mode, align 8, !dbg !5593
  %cmp = icmp sgt i32 %9, 2, !dbg !5594
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5595

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5596
  %preferred_stereo_downmix = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %10, i32 0, i32 11, !dbg !5598
  %11 = load i32, i32* %preferred_stereo_downmix, align 4, !dbg !5598
  %cmp2 = icmp ne i32 %11, -1, !dbg !5599
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5600

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5601
  %extended_bsi_13 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %12, i32 0, i32 10, !dbg !5603
  store i32 1, i32* %extended_bsi_13, align 4, !dbg !5604
  %13 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5605
  %eac3_mixing_metadata4 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %13, i32 0, i32 20, !dbg !5606
  store i32 1, i32* %eac3_mixing_metadata4, align 4, !dbg !5607
  br label %if.end, !dbg !5608

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5609
  %has_center = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 29, !dbg !5611
  %15 = load i32, i32* %has_center, align 8, !dbg !5611
  %tobool = icmp ne i32 %15, 0, !dbg !5609
  br i1 %tobool, label %land.lhs.true5, label %if.end11, !dbg !5612

land.lhs.true5:                                   ; preds = %if.end
  %16 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5613
  %ltrt_center_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %16, i32 0, i32 12, !dbg !5614
  %17 = load float, float* %ltrt_center_mix_level, align 4, !dbg !5614
  %cmp6 = fcmp oge float %17, 0.000000e+00, !dbg !5615
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !5616

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %18 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5617
  %loro_center_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %18, i32 0, i32 14, !dbg !5619
  %19 = load float, float* %loro_center_mix_level, align 4, !dbg !5619
  %cmp7 = fcmp oge float %19, 0.000000e+00, !dbg !5620
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !5621

if.then8:                                         ; preds = %lor.lhs.false, %land.lhs.true5
  %20 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5623
  %extended_bsi_19 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %20, i32 0, i32 10, !dbg !5625
  store i32 1, i32* %extended_bsi_19, align 4, !dbg !5626
  %21 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5627
  %eac3_mixing_metadata10 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %21, i32 0, i32 20, !dbg !5628
  store i32 1, i32* %eac3_mixing_metadata10, align 4, !dbg !5629
  br label %if.end11, !dbg !5630

if.end11:                                         ; preds = %if.then8, %lor.lhs.false, %if.end
  %22 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5631
  %has_surround = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %22, i32 0, i32 30, !dbg !5633
  %23 = load i32, i32* %has_surround, align 4, !dbg !5633
  %tobool12 = icmp ne i32 %23, 0, !dbg !5631
  br i1 %tobool12, label %land.lhs.true13, label %if.end20, !dbg !5634

land.lhs.true13:                                  ; preds = %if.end11
  %24 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5635
  %ltrt_surround_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %24, i32 0, i32 13, !dbg !5636
  %25 = load float, float* %ltrt_surround_mix_level, align 4, !dbg !5636
  %cmp14 = fcmp oge float %25, 0.000000e+00, !dbg !5637
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !5638

lor.lhs.false15:                                  ; preds = %land.lhs.true13
  %26 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5639
  %loro_surround_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %26, i32 0, i32 15, !dbg !5641
  %27 = load float, float* %loro_surround_mix_level, align 4, !dbg !5641
  %cmp16 = fcmp oge float %27, 0.000000e+00, !dbg !5642
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !5643

if.then17:                                        ; preds = %lor.lhs.false15, %land.lhs.true13
  %28 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5644
  %extended_bsi_118 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %28, i32 0, i32 10, !dbg !5646
  store i32 1, i32* %extended_bsi_118, align 4, !dbg !5647
  %29 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5648
  %eac3_mixing_metadata19 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %29, i32 0, i32 20, !dbg !5649
  store i32 1, i32* %eac3_mixing_metadata19, align 4, !dbg !5650
  br label %if.end20, !dbg !5651

if.end20:                                         ; preds = %if.then17, %lor.lhs.false15, %if.end11
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5652
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 12, !dbg !5654
  %31 = load i32, i32* %eac3, align 4, !dbg !5654
  %tobool21 = icmp ne i32 %31, 0, !dbg !5652
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !5655

if.then22:                                        ; preds = %if.end20
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5656
  %audio_service_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 91, !dbg !5659
  %33 = load i32, i32* %audio_service_type, align 8, !dbg !5659
  %cmp23 = icmp ne i32 %33, 0, !dbg !5660
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !5661

if.then24:                                        ; preds = %if.then22
  %34 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5662
  %eac3_info_metadata25 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %34, i32 0, i32 21, !dbg !5663
  store i32 1, i32* %eac3_info_metadata25, align 4, !dbg !5664
  br label %if.end26, !dbg !5662

if.end26:                                         ; preds = %if.then24, %if.then22
  %35 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5665
  %copyright = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %35, i32 0, i32 8, !dbg !5667
  %36 = load i32, i32* %copyright, align 4, !dbg !5667
  %cmp27 = icmp ne i32 %36, -1, !dbg !5668
  br i1 %cmp27, label %if.then30, label %lor.lhs.false28, !dbg !5669

lor.lhs.false28:                                  ; preds = %if.end26
  %37 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5670
  %original = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %37, i32 0, i32 9, !dbg !5672
  %38 = load i32, i32* %original, align 4, !dbg !5672
  %cmp29 = icmp ne i32 %38, -1, !dbg !5673
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !5674

if.then30:                                        ; preds = %lor.lhs.false28, %if.end26
  %39 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5675
  %eac3_info_metadata31 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %39, i32 0, i32 21, !dbg !5676
  store i32 1, i32* %eac3_info_metadata31, align 4, !dbg !5677
  br label %if.end32, !dbg !5675

if.end32:                                         ; preds = %if.then30, %lor.lhs.false28
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5678
  %channel_mode33 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 31, !dbg !5680
  %41 = load i32, i32* %channel_mode33, align 8, !dbg !5680
  %cmp34 = icmp eq i32 %41, 2, !dbg !5681
  br i1 %cmp34, label %land.lhs.true35, label %if.end41, !dbg !5682

land.lhs.true35:                                  ; preds = %if.end32
  %42 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5683
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %42, i32 0, i32 18, !dbg !5684
  %43 = load i32, i32* %dolby_headphone_mode, align 4, !dbg !5684
  %cmp36 = icmp ne i32 %43, -1, !dbg !5685
  br i1 %cmp36, label %if.then39, label %lor.lhs.false37, !dbg !5686

lor.lhs.false37:                                  ; preds = %land.lhs.true35
  %44 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5687
  %dolby_surround_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %44, i32 0, i32 4, !dbg !5689
  %45 = load i32, i32* %dolby_surround_mode, align 4, !dbg !5689
  %cmp38 = icmp ne i32 %45, -1, !dbg !5690
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !5691

if.then39:                                        ; preds = %lor.lhs.false37, %land.lhs.true35
  %46 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5693
  %eac3_info_metadata40 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %46, i32 0, i32 21, !dbg !5694
  store i32 1, i32* %eac3_info_metadata40, align 4, !dbg !5695
  br label %if.end41, !dbg !5693

if.end41:                                         ; preds = %if.then39, %lor.lhs.false37, %if.end32
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5696
  %channel_mode42 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 31, !dbg !5698
  %48 = load i32, i32* %channel_mode42, align 8, !dbg !5698
  %cmp43 = icmp sge i32 %48, 6, !dbg !5699
  br i1 %cmp43, label %land.lhs.true44, label %if.end48, !dbg !5700

land.lhs.true44:                                  ; preds = %if.end41
  %49 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5701
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %49, i32 0, i32 17, !dbg !5703
  %50 = load i32, i32* %dolby_surround_ex_mode, align 4, !dbg !5703
  %cmp45 = icmp ne i32 %50, -1, !dbg !5704
  br i1 %cmp45, label %if.then46, label %if.end48, !dbg !5705

if.then46:                                        ; preds = %land.lhs.true44
  %51 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5706
  %eac3_info_metadata47 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %51, i32 0, i32 21, !dbg !5707
  store i32 1, i32* %eac3_info_metadata47, align 4, !dbg !5708
  br label %if.end48, !dbg !5706

if.end48:                                         ; preds = %if.then46, %land.lhs.true44, %if.end41
  %52 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5709
  %mixing_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %52, i32 0, i32 6, !dbg !5711
  %53 = load i32, i32* %mixing_level, align 4, !dbg !5711
  %cmp49 = icmp ne i32 %53, -1, !dbg !5712
  br i1 %cmp49, label %if.then54, label %lor.lhs.false50, !dbg !5713

lor.lhs.false50:                                  ; preds = %if.end48
  %54 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5714
  %room_type = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %54, i32 0, i32 7, !dbg !5716
  %55 = load i32, i32* %room_type, align 4, !dbg !5716
  %cmp51 = icmp ne i32 %55, -1, !dbg !5717
  br i1 %cmp51, label %if.then54, label %lor.lhs.false52, !dbg !5718

lor.lhs.false52:                                  ; preds = %lor.lhs.false50
  %56 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5719
  %ad_converter_type = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %56, i32 0, i32 19, !dbg !5720
  %57 = load i32, i32* %ad_converter_type, align 4, !dbg !5720
  %cmp53 = icmp ne i32 %57, -1, !dbg !5721
  br i1 %cmp53, label %if.then54, label %if.end57, !dbg !5722

if.then54:                                        ; preds = %lor.lhs.false52, %lor.lhs.false50, %if.end48
  %58 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5724
  %audio_production_info55 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %58, i32 0, i32 5, !dbg !5726
  store i32 1, i32* %audio_production_info55, align 4, !dbg !5727
  %59 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5728
  %eac3_info_metadata56 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %59, i32 0, i32 21, !dbg !5729
  store i32 1, i32* %eac3_info_metadata56, align 4, !dbg !5730
  br label %if.end57, !dbg !5731

if.end57:                                         ; preds = %if.then54, %lor.lhs.false52
  br label %if.end87, !dbg !5732

if.else:                                          ; preds = %if.end20
  %60 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5733
  %mixing_level58 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %60, i32 0, i32 6, !dbg !5736
  %61 = load i32, i32* %mixing_level58, align 4, !dbg !5736
  %cmp59 = icmp ne i32 %61, -1, !dbg !5737
  br i1 %cmp59, label %if.then63, label %lor.lhs.false60, !dbg !5738

lor.lhs.false60:                                  ; preds = %if.else
  %62 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5739
  %room_type61 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %62, i32 0, i32 7, !dbg !5741
  %63 = load i32, i32* %room_type61, align 4, !dbg !5741
  %cmp62 = icmp ne i32 %63, -1, !dbg !5742
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !5743

if.then63:                                        ; preds = %lor.lhs.false60, %if.else
  %64 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5744
  %audio_production_info64 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %64, i32 0, i32 5, !dbg !5745
  store i32 1, i32* %audio_production_info64, align 4, !dbg !5746
  br label %if.end65, !dbg !5744

if.end65:                                         ; preds = %if.then63, %lor.lhs.false60
  %65 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5747
  %channel_mode66 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %65, i32 0, i32 31, !dbg !5749
  %66 = load i32, i32* %channel_mode66, align 8, !dbg !5749
  %cmp67 = icmp sge i32 %66, 6, !dbg !5750
  br i1 %cmp67, label %land.lhs.true68, label %if.end73, !dbg !5751

land.lhs.true68:                                  ; preds = %if.end65
  %67 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5752
  %dolby_surround_ex_mode69 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %67, i32 0, i32 17, !dbg !5754
  %68 = load i32, i32* %dolby_surround_ex_mode69, align 4, !dbg !5754
  %cmp70 = icmp ne i32 %68, -1, !dbg !5755
  br i1 %cmp70, label %if.then71, label %if.end73, !dbg !5756

if.then71:                                        ; preds = %land.lhs.true68
  %69 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5757
  %extended_bsi_272 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %69, i32 0, i32 16, !dbg !5758
  store i32 1, i32* %extended_bsi_272, align 4, !dbg !5759
  br label %if.end73, !dbg !5757

if.end73:                                         ; preds = %if.then71, %land.lhs.true68, %if.end65
  %70 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5760
  %channel_mode74 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %70, i32 0, i32 31, !dbg !5762
  %71 = load i32, i32* %channel_mode74, align 8, !dbg !5762
  %cmp75 = icmp eq i32 %71, 2, !dbg !5763
  br i1 %cmp75, label %land.lhs.true76, label %if.end81, !dbg !5764

land.lhs.true76:                                  ; preds = %if.end73
  %72 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5765
  %dolby_headphone_mode77 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %72, i32 0, i32 18, !dbg !5767
  %73 = load i32, i32* %dolby_headphone_mode77, align 4, !dbg !5767
  %cmp78 = icmp ne i32 %73, -1, !dbg !5768
  br i1 %cmp78, label %if.then79, label %if.end81, !dbg !5769

if.then79:                                        ; preds = %land.lhs.true76
  %74 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5770
  %extended_bsi_280 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %74, i32 0, i32 16, !dbg !5771
  store i32 1, i32* %extended_bsi_280, align 4, !dbg !5772
  br label %if.end81, !dbg !5770

if.end81:                                         ; preds = %if.then79, %land.lhs.true76, %if.end73
  %75 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5773
  %ad_converter_type82 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %75, i32 0, i32 19, !dbg !5775
  %76 = load i32, i32* %ad_converter_type82, align 4, !dbg !5775
  %cmp83 = icmp ne i32 %76, -1, !dbg !5776
  br i1 %cmp83, label %if.then84, label %if.end86, !dbg !5777

if.then84:                                        ; preds = %if.end81
  %77 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5778
  %extended_bsi_285 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %77, i32 0, i32 16, !dbg !5779
  store i32 1, i32* %extended_bsi_285, align 4, !dbg !5780
  br label %if.end86, !dbg !5778

if.end86:                                         ; preds = %if.then84, %if.end81
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end57
  %78 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5781
  %eac388 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %78, i32 0, i32 12, !dbg !5783
  %79 = load i32, i32* %eac388, align 4, !dbg !5783
  %tobool89 = icmp ne i32 %79, 0, !dbg !5781
  br i1 %tobool89, label %if.end101, label %if.then90, !dbg !5784

if.then90:                                        ; preds = %if.end87
  %80 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5785
  %has_center91 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %80, i32 0, i32 29, !dbg !5788
  %81 = load i32, i32* %has_center91, align 8, !dbg !5788
  %tobool92 = icmp ne i32 %81, 0, !dbg !5785
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !5789

if.then93:                                        ; preds = %if.then90
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5790
  %83 = bitcast %struct.AVCodecContext* %82 to i8*, !dbg !5790
  %84 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5792
  %center_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %84, i32 0, i32 2, !dbg !5793
  %85 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5794
  %center_mix_level94 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %85, i32 0, i32 33, !dbg !5795
  call void @validate_mix_level(i8* %83, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), float* %center_mix_level, float* getelementptr inbounds ([3 x float], [3 x float]* @cmixlev_options, i32 0, i32 0), i32 3, i32 1, i32 0, i32* %center_mix_level94), !dbg !5796
  br label %if.end95, !dbg !5797

if.end95:                                         ; preds = %if.then93, %if.then90
  %86 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5798
  %has_surround96 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %86, i32 0, i32 30, !dbg !5800
  %87 = load i32, i32* %has_surround96, align 4, !dbg !5800
  %tobool97 = icmp ne i32 %87, 0, !dbg !5798
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !5801

if.then98:                                        ; preds = %if.end95
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5802
  %89 = bitcast %struct.AVCodecContext* %88 to i8*, !dbg !5802
  %90 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5804
  %surround_mix_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %90, i32 0, i32 3, !dbg !5805
  %91 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5806
  %surround_mix_level99 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %91, i32 0, i32 34, !dbg !5807
  call void @validate_mix_level(i8* %89, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), float* %surround_mix_level, float* getelementptr inbounds ([3 x float], [3 x float]* @surmixlev_options, i32 0, i32 0), i32 3, i32 1, i32 0, i32* %surround_mix_level99), !dbg !5808
  br label %if.end100, !dbg !5809

if.end100:                                        ; preds = %if.then98, %if.end95
  br label %if.end101, !dbg !5810

if.end101:                                        ; preds = %if.end100, %if.end87
  %92 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5811
  %extended_bsi_1102 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %92, i32 0, i32 10, !dbg !5813
  %93 = load i32, i32* %extended_bsi_1102, align 4, !dbg !5813
  %tobool103 = icmp ne i32 %93, 0, !dbg !5811
  br i1 %tobool103, label %if.then107, label %lor.lhs.false104, !dbg !5814

lor.lhs.false104:                                 ; preds = %if.end101
  %94 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5815
  %eac3_mixing_metadata105 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %94, i32 0, i32 20, !dbg !5817
  %95 = load i32, i32* %eac3_mixing_metadata105, align 4, !dbg !5817
  %tobool106 = icmp ne i32 %95, 0, !dbg !5815
  br i1 %tobool106, label %if.then107, label %if.end135, !dbg !5818

if.then107:                                       ; preds = %lor.lhs.false104, %if.end101
  %96 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5819
  %preferred_stereo_downmix108 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %96, i32 0, i32 11, !dbg !5822
  %97 = load i32, i32* %preferred_stereo_downmix108, align 4, !dbg !5822
  %cmp109 = icmp eq i32 %97, -1, !dbg !5823
  br i1 %cmp109, label %if.then110, label %if.end112, !dbg !5824

if.then110:                                       ; preds = %if.then107
  %98 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5825
  %preferred_stereo_downmix111 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %98, i32 0, i32 11, !dbg !5826
  store i32 0, i32* %preferred_stereo_downmix111, align 4, !dbg !5827
  br label %if.end112, !dbg !5825

if.end112:                                        ; preds = %if.then110, %if.then107
  %99 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5828
  %eac3113 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %99, i32 0, i32 12, !dbg !5830
  %100 = load i32, i32* %eac3113, align 4, !dbg !5830
  %tobool114 = icmp ne i32 %100, 0, !dbg !5828
  br i1 %tobool114, label %lor.lhs.false115, label %if.then118, !dbg !5831

lor.lhs.false115:                                 ; preds = %if.end112
  %101 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5832
  %has_center116 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %101, i32 0, i32 29, !dbg !5834
  %102 = load i32, i32* %has_center116, align 8, !dbg !5834
  %tobool117 = icmp ne i32 %102, 0, !dbg !5832
  br i1 %tobool117, label %if.then118, label %if.end123, !dbg !5835

if.then118:                                       ; preds = %lor.lhs.false115, %if.end112
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5836
  %104 = bitcast %struct.AVCodecContext* %103 to i8*, !dbg !5836
  %105 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5838
  %ltrt_center_mix_level119 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %105, i32 0, i32 12, !dbg !5839
  %106 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5840
  %ltrt_center_mix_level120 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %106, i32 0, i32 35, !dbg !5841
  call void @validate_mix_level(i8* %104, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), float* %ltrt_center_mix_level119, float* getelementptr inbounds ([8 x float], [8 x float]* @extmixlev_options, i32 0, i32 0), i32 8, i32 5, i32 0, i32* %ltrt_center_mix_level120), !dbg !5842
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5843
  %108 = bitcast %struct.AVCodecContext* %107 to i8*, !dbg !5843
  %109 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5844
  %loro_center_mix_level121 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %109, i32 0, i32 14, !dbg !5845
  %110 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5846
  %loro_center_mix_level122 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %110, i32 0, i32 37, !dbg !5847
  call void @validate_mix_level(i8* %108, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), float* %loro_center_mix_level121, float* getelementptr inbounds ([8 x float], [8 x float]* @extmixlev_options, i32 0, i32 0), i32 8, i32 5, i32 0, i32* %loro_center_mix_level122), !dbg !5848
  br label %if.end123, !dbg !5849

if.end123:                                        ; preds = %if.then118, %lor.lhs.false115
  %111 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5850
  %eac3124 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %111, i32 0, i32 12, !dbg !5852
  %112 = load i32, i32* %eac3124, align 4, !dbg !5852
  %tobool125 = icmp ne i32 %112, 0, !dbg !5850
  br i1 %tobool125, label %lor.lhs.false126, label %if.then129, !dbg !5853

lor.lhs.false126:                                 ; preds = %if.end123
  %113 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5854
  %has_surround127 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %113, i32 0, i32 30, !dbg !5856
  %114 = load i32, i32* %has_surround127, align 4, !dbg !5856
  %tobool128 = icmp ne i32 %114, 0, !dbg !5854
  br i1 %tobool128, label %if.then129, label %if.end134, !dbg !5857

if.then129:                                       ; preds = %lor.lhs.false126, %if.end123
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5858
  %116 = bitcast %struct.AVCodecContext* %115 to i8*, !dbg !5858
  %117 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5860
  %ltrt_surround_mix_level130 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %117, i32 0, i32 13, !dbg !5861
  %118 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5862
  %ltrt_surround_mix_level131 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %118, i32 0, i32 36, !dbg !5863
  call void @validate_mix_level(i8* %116, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i32 0, i32 0), float* %ltrt_surround_mix_level130, float* getelementptr inbounds ([8 x float], [8 x float]* @extmixlev_options, i32 0, i32 0), i32 8, i32 6, i32 3, i32* %ltrt_surround_mix_level131), !dbg !5864
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5865
  %120 = bitcast %struct.AVCodecContext* %119 to i8*, !dbg !5865
  %121 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5866
  %loro_surround_mix_level132 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %121, i32 0, i32 15, !dbg !5867
  %122 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5868
  %loro_surround_mix_level133 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %122, i32 0, i32 38, !dbg !5869
  call void @validate_mix_level(i8* %120, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0), float* %loro_surround_mix_level132, float* getelementptr inbounds ([8 x float], [8 x float]* @extmixlev_options, i32 0, i32 0), i32 8, i32 6, i32 3, i32* %loro_surround_mix_level133), !dbg !5870
  br label %if.end134, !dbg !5871

if.end134:                                        ; preds = %if.then129, %lor.lhs.false126
  br label %if.end135, !dbg !5872

if.end135:                                        ; preds = %if.end134, %lor.lhs.false104
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5873
  %audio_service_type136 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 91, !dbg !5875
  %124 = load i32, i32* %audio_service_type136, align 8, !dbg !5875
  %cmp137 = icmp eq i32 %124, 8, !dbg !5876
  br i1 %cmp137, label %land.lhs.true138, label %lor.lhs.false140, !dbg !5877

land.lhs.true138:                                 ; preds = %if.end135
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5878
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %125, i32 0, i32 83, !dbg !5879
  %126 = load i32, i32* %channels, align 4, !dbg !5879
  %cmp139 = icmp eq i32 %126, 1, !dbg !5880
  br i1 %cmp139, label %if.then152, label %lor.lhs.false140, !dbg !5881

lor.lhs.false140:                                 ; preds = %land.lhs.true138, %if.end135
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5882
  %audio_service_type141 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 91, !dbg !5883
  %128 = load i32, i32* %audio_service_type141, align 8, !dbg !5883
  %cmp142 = icmp eq i32 %128, 5, !dbg !5884
  br i1 %cmp142, label %land.lhs.true149, label %lor.lhs.false143, !dbg !5885

lor.lhs.false143:                                 ; preds = %lor.lhs.false140
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5886
  %audio_service_type144 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 91, !dbg !5887
  %130 = load i32, i32* %audio_service_type144, align 8, !dbg !5887
  %cmp145 = icmp eq i32 %130, 6, !dbg !5888
  br i1 %cmp145, label %land.lhs.true149, label %lor.lhs.false146, !dbg !5889

lor.lhs.false146:                                 ; preds = %lor.lhs.false143
  %131 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5890
  %audio_service_type147 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %131, i32 0, i32 91, !dbg !5891
  %132 = load i32, i32* %audio_service_type147, align 8, !dbg !5891
  %cmp148 = icmp eq i32 %132, 7, !dbg !5892
  br i1 %cmp148, label %land.lhs.true149, label %if.end153, !dbg !5893

land.lhs.true149:                                 ; preds = %lor.lhs.false146, %lor.lhs.false143, %lor.lhs.false140
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5894
  %channels150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %133, i32 0, i32 83, !dbg !5896
  %134 = load i32, i32* %channels150, align 4, !dbg !5896
  %cmp151 = icmp sgt i32 %134, 1, !dbg !5897
  br i1 %cmp151, label %if.then152, label %if.end153, !dbg !5898

if.then152:                                       ; preds = %land.lhs.true149, %land.lhs.true138
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5899
  %136 = bitcast %struct.AVCodecContext* %135 to i8*, !dbg !5899
  call void (i8*, i32, i8*, ...) @av_log(i8* %136, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.6, i32 0, i32 0)), !dbg !5901
  store i32 -22, i32* %retval, align 4, !dbg !5902
  br label %return, !dbg !5902

if.end153:                                        ; preds = %land.lhs.true149, %lor.lhs.false146
  %137 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5903
  %extended_bsi_2154 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %137, i32 0, i32 16, !dbg !5905
  %138 = load i32, i32* %extended_bsi_2154, align 4, !dbg !5905
  %tobool155 = icmp ne i32 %138, 0, !dbg !5903
  br i1 %tobool155, label %if.then159, label %lor.lhs.false156, !dbg !5906

lor.lhs.false156:                                 ; preds = %if.end153
  %139 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5907
  %eac3_info_metadata157 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %139, i32 0, i32 21, !dbg !5909
  %140 = load i32, i32* %eac3_info_metadata157, align 4, !dbg !5909
  %tobool158 = icmp ne i32 %140, 0, !dbg !5907
  br i1 %tobool158, label %if.then159, label %if.end175, !dbg !5910

if.then159:                                       ; preds = %lor.lhs.false156, %if.end153
  %141 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5911
  %dolby_headphone_mode160 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %141, i32 0, i32 18, !dbg !5914
  %142 = load i32, i32* %dolby_headphone_mode160, align 4, !dbg !5914
  %cmp161 = icmp eq i32 %142, -1, !dbg !5915
  br i1 %cmp161, label %if.then162, label %if.end164, !dbg !5916

if.then162:                                       ; preds = %if.then159
  %143 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5917
  %dolby_headphone_mode163 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %143, i32 0, i32 18, !dbg !5918
  store i32 0, i32* %dolby_headphone_mode163, align 4, !dbg !5919
  br label %if.end164, !dbg !5917

if.end164:                                        ; preds = %if.then162, %if.then159
  %144 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5920
  %dolby_surround_ex_mode165 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %144, i32 0, i32 17, !dbg !5922
  %145 = load i32, i32* %dolby_surround_ex_mode165, align 4, !dbg !5922
  %cmp166 = icmp eq i32 %145, -1, !dbg !5923
  br i1 %cmp166, label %if.then167, label %if.end169, !dbg !5924

if.then167:                                       ; preds = %if.end164
  %146 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5925
  %dolby_surround_ex_mode168 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %146, i32 0, i32 17, !dbg !5926
  store i32 0, i32* %dolby_surround_ex_mode168, align 4, !dbg !5927
  br label %if.end169, !dbg !5925

if.end169:                                        ; preds = %if.then167, %if.end164
  %147 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5928
  %ad_converter_type170 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %147, i32 0, i32 19, !dbg !5930
  %148 = load i32, i32* %ad_converter_type170, align 4, !dbg !5930
  %cmp171 = icmp eq i32 %148, -1, !dbg !5931
  br i1 %cmp171, label %if.then172, label %if.end174, !dbg !5932

if.then172:                                       ; preds = %if.end169
  %149 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5933
  %ad_converter_type173 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %149, i32 0, i32 19, !dbg !5934
  store i32 0, i32* %ad_converter_type173, align 4, !dbg !5935
  br label %if.end174, !dbg !5933

if.end174:                                        ; preds = %if.then172, %if.end169
  br label %if.end175, !dbg !5936

if.end175:                                        ; preds = %if.end174, %lor.lhs.false156
  %150 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5937
  %eac3176 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %150, i32 0, i32 12, !dbg !5939
  %151 = load i32, i32* %eac3176, align 4, !dbg !5939
  %tobool177 = icmp ne i32 %151, 0, !dbg !5937
  br i1 %tobool177, label %lor.lhs.false178, label %if.then181, !dbg !5940

lor.lhs.false178:                                 ; preds = %if.end175
  %152 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5941
  %eac3_info_metadata179 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %152, i32 0, i32 21, !dbg !5943
  %153 = load i32, i32* %eac3_info_metadata179, align 4, !dbg !5943
  %tobool180 = icmp ne i32 %153, 0, !dbg !5941
  br i1 %tobool180, label %if.then181, label %if.end192, !dbg !5944

if.then181:                                       ; preds = %lor.lhs.false178, %if.end175
  %154 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5945
  %copyright182 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %154, i32 0, i32 8, !dbg !5948
  %155 = load i32, i32* %copyright182, align 4, !dbg !5948
  %cmp183 = icmp eq i32 %155, -1, !dbg !5949
  br i1 %cmp183, label %if.then184, label %if.end186, !dbg !5950

if.then184:                                       ; preds = %if.then181
  %156 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5951
  %copyright185 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %156, i32 0, i32 8, !dbg !5952
  store i32 0, i32* %copyright185, align 4, !dbg !5953
  br label %if.end186, !dbg !5951

if.end186:                                        ; preds = %if.then184, %if.then181
  %157 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5954
  %original187 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %157, i32 0, i32 9, !dbg !5956
  %158 = load i32, i32* %original187, align 4, !dbg !5956
  %cmp188 = icmp eq i32 %158, -1, !dbg !5957
  br i1 %cmp188, label %if.then189, label %if.end191, !dbg !5958

if.then189:                                       ; preds = %if.end186
  %159 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5959
  %original190 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %159, i32 0, i32 9, !dbg !5960
  store i32 1, i32* %original190, align 4, !dbg !5961
  br label %if.end191, !dbg !5959

if.end191:                                        ; preds = %if.then189, %if.end186
  br label %if.end192, !dbg !5962

if.end192:                                        ; preds = %if.end191, %lor.lhs.false178
  %160 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !5963
  %eac3193 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %160, i32 0, i32 12, !dbg !5965
  %161 = load i32, i32* %eac3193, align 4, !dbg !5965
  %tobool194 = icmp ne i32 %161, 0, !dbg !5963
  br i1 %tobool194, label %lor.lhs.false195, label %if.then198, !dbg !5966

lor.lhs.false195:                                 ; preds = %if.end192
  %162 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5967
  %eac3_info_metadata196 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %162, i32 0, i32 21, !dbg !5969
  %163 = load i32, i32* %eac3_info_metadata196, align 4, !dbg !5969
  %tobool197 = icmp ne i32 %163, 0, !dbg !5967
  br i1 %tobool197, label %if.then198, label %if.end204, !dbg !5970

if.then198:                                       ; preds = %lor.lhs.false195, %if.end192
  %164 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5971
  %dolby_surround_mode199 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %164, i32 0, i32 4, !dbg !5974
  %165 = load i32, i32* %dolby_surround_mode199, align 4, !dbg !5974
  %cmp200 = icmp eq i32 %165, -1, !dbg !5975
  br i1 %cmp200, label %if.then201, label %if.end203, !dbg !5976

if.then201:                                       ; preds = %if.then198
  %166 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5977
  %dolby_surround_mode202 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %166, i32 0, i32 4, !dbg !5978
  store i32 0, i32* %dolby_surround_mode202, align 4, !dbg !5979
  br label %if.end203, !dbg !5977

if.end203:                                        ; preds = %if.then201, %if.then198
  br label %if.end204, !dbg !5980

if.end204:                                        ; preds = %if.end203, %lor.lhs.false195
  %167 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5981
  %audio_production_info205 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %167, i32 0, i32 5, !dbg !5983
  %168 = load i32, i32* %audio_production_info205, align 4, !dbg !5983
  %tobool206 = icmp ne i32 %168, 0, !dbg !5981
  br i1 %tobool206, label %if.then207, label %if.end221, !dbg !5984

if.then207:                                       ; preds = %if.end204
  %169 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5985
  %mixing_level208 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %169, i32 0, i32 6, !dbg !5988
  %170 = load i32, i32* %mixing_level208, align 4, !dbg !5988
  %cmp209 = icmp eq i32 %170, -1, !dbg !5989
  br i1 %cmp209, label %if.then210, label %if.end211, !dbg !5990

if.then210:                                       ; preds = %if.then207
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5991
  %172 = bitcast %struct.AVCodecContext* %171 to i8*, !dbg !5991
  call void (i8*, i32, i8*, ...) @av_log(i8* %172, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i32 0, i32 0)), !dbg !5993
  store i32 -22, i32* %retval, align 4, !dbg !5994
  br label %return, !dbg !5994

if.end211:                                        ; preds = %if.then207
  %173 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !5995
  %mixing_level212 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %173, i32 0, i32 6, !dbg !5997
  %174 = load i32, i32* %mixing_level212, align 4, !dbg !5997
  %cmp213 = icmp slt i32 %174, 80, !dbg !5998
  br i1 %cmp213, label %if.then214, label %if.end215, !dbg !5999

if.then214:                                       ; preds = %if.end211
  %175 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6000
  %176 = bitcast %struct.AVCodecContext* %175 to i8*, !dbg !6000
  call void (i8*, i32, i8*, ...) @av_log(i8* %176, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i32 0, i32 0)), !dbg !6002
  store i32 -22, i32* %retval, align 4, !dbg !6003
  br label %return, !dbg !6003

if.end215:                                        ; preds = %if.end211
  %177 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !6004
  %room_type216 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %177, i32 0, i32 7, !dbg !6006
  %178 = load i32, i32* %room_type216, align 4, !dbg !6006
  %cmp217 = icmp eq i32 %178, -1, !dbg !6007
  br i1 %cmp217, label %if.then218, label %if.end220, !dbg !6008

if.then218:                                       ; preds = %if.end215
  %179 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !6009
  %room_type219 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %179, i32 0, i32 7, !dbg !6010
  store i32 0, i32* %room_type219, align 4, !dbg !6011
  br label %if.end220, !dbg !6009

if.end220:                                        ; preds = %if.then218, %if.end215
  br label %if.end221, !dbg !6012

if.end221:                                        ; preds = %if.end220, %if.end204
  %180 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6013
  %eac3222 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %180, i32 0, i32 12, !dbg !6015
  %181 = load i32, i32* %eac3222, align 4, !dbg !6015
  %tobool223 = icmp ne i32 %181, 0, !dbg !6013
  br i1 %tobool223, label %if.end242, label %land.lhs.true224, !dbg !6016

land.lhs.true224:                                 ; preds = %if.end221
  %182 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !6017
  %extended_bsi_1225 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %182, i32 0, i32 10, !dbg !6019
  %183 = load i32, i32* %extended_bsi_1225, align 4, !dbg !6019
  %tobool226 = icmp ne i32 %183, 0, !dbg !6017
  br i1 %tobool226, label %if.then230, label %lor.lhs.false227, !dbg !6020

lor.lhs.false227:                                 ; preds = %land.lhs.true224
  %184 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !6021
  %extended_bsi_2228 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %184, i32 0, i32 16, !dbg !6023
  %185 = load i32, i32* %extended_bsi_2228, align 4, !dbg !6023
  %tobool229 = icmp ne i32 %185, 0, !dbg !6021
  br i1 %tobool229, label %if.then230, label %if.end242, !dbg !6024

if.then230:                                       ; preds = %lor.lhs.false227, %land.lhs.true224
  %186 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6025
  %bitstream_id = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %186, i32 0, i32 13, !dbg !6028
  %187 = load i32, i32* %bitstream_id, align 8, !dbg !6028
  %cmp231 = icmp sgt i32 %187, 8, !dbg !6029
  br i1 %cmp231, label %land.lhs.true232, label %if.else239, !dbg !6030

land.lhs.true232:                                 ; preds = %if.then230
  %188 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6031
  %bitstream_id233 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %188, i32 0, i32 13, !dbg !6033
  %189 = load i32, i32* %bitstream_id233, align 8, !dbg !6033
  %cmp234 = icmp slt i32 %189, 11, !dbg !6034
  br i1 %cmp234, label %if.then235, label %if.else239, !dbg !6035

if.then235:                                       ; preds = %land.lhs.true232
  %190 = load i32, i32* @ff_ac3_validate_metadata.warn_once, align 4, !dbg !6036
  %tobool236 = icmp ne i32 %190, 0, !dbg !6036
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !6039

if.then237:                                       ; preds = %if.then235
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6040
  %192 = bitcast %struct.AVCodecContext* %191 to i8*, !dbg !6040
  call void (i8*, i32, i8*, ...) @av_log(i8* %192, i32 24, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.9, i32 0, i32 0)), !dbg !6042
  store i32 0, i32* @ff_ac3_validate_metadata.warn_once, align 4, !dbg !6043
  br label %if.end238, !dbg !6044

if.end238:                                        ; preds = %if.then237, %if.then235
  br label %if.end241, !dbg !6045

if.else239:                                       ; preds = %land.lhs.true232, %if.then230
  %193 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6046
  %bitstream_id240 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %193, i32 0, i32 13, !dbg !6048
  store i32 6, i32* %bitstream_id240, align 8, !dbg !6049
  br label %if.end241

if.end241:                                        ; preds = %if.else239, %if.end238
  br label %if.end242, !dbg !6050

if.end242:                                        ; preds = %if.end241, %lor.lhs.false227, %if.end221
  store i32 0, i32* %retval, align 4, !dbg !6051
  br label %return, !dbg !6051

return:                                           ; preds = %if.end242, %if.then214, %if.then210, %if.then152
  %194 = load i32, i32* %retval, align 4, !dbg !6052
  ret i32 %194, !dbg !6052
}

; Function Attrs: nounwind uwtable
define internal void @validate_mix_level(i8* %log_ctx, i8* %opt_name, float* %opt_param, float* %list, i32 %list_size, i32 %default_value, i32 %min_value, i32* %ctx_param) #0 !dbg !6053 {
entry:
  %log_ctx.addr = alloca i8*, align 8
  %opt_name.addr = alloca i8*, align 8
  %opt_param.addr = alloca float*, align 8
  %list.addr = alloca float*, align 8
  %list_size.addr = alloca i32, align 4
  %default_value.addr = alloca i32, align 4
  %min_value.addr = alloca i32, align 4
  %ctx_param.addr = alloca i32*, align 8
  %mixlev = alloca i32, align 4
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !6056, metadata !2184), !dbg !6057
  store i8* %opt_name, i8** %opt_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt_name.addr, metadata !6058, metadata !2184), !dbg !6059
  store float* %opt_param, float** %opt_param.addr, align 8
  call void @llvm.dbg.declare(metadata float** %opt_param.addr, metadata !6060, metadata !2184), !dbg !6061
  store float* %list, float** %list.addr, align 8
  call void @llvm.dbg.declare(metadata float** %list.addr, metadata !6062, metadata !2184), !dbg !6063
  store i32 %list_size, i32* %list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_size.addr, metadata !6064, metadata !2184), !dbg !6065
  store i32 %default_value, i32* %default_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_value.addr, metadata !6066, metadata !2184), !dbg !6067
  store i32 %min_value, i32* %min_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_value.addr, metadata !6068, metadata !2184), !dbg !6069
  store i32* %ctx_param, i32** %ctx_param.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ctx_param.addr, metadata !6070, metadata !2184), !dbg !6071
  call void @llvm.dbg.declare(metadata i32* %mixlev, metadata !6072, metadata !2184), !dbg !6073
  %0 = load float*, float** %opt_param.addr, align 8, !dbg !6074
  %1 = load float, float* %0, align 4, !dbg !6075
  %2 = load float*, float** %list.addr, align 8, !dbg !6076
  %3 = load i32, i32* %list_size.addr, align 4, !dbg !6077
  %call = call i32 @validate_float_option(float %1, float* %2, i32 %3), !dbg !6078
  store i32 %call, i32* %mixlev, align 4, !dbg !6073
  %4 = load i32, i32* %mixlev, align 4, !dbg !6079
  %5 = load i32, i32* %min_value.addr, align 4, !dbg !6081
  %cmp = icmp slt i32 %4, %5, !dbg !6082
  br i1 %cmp, label %if.then, label %if.end5, !dbg !6083

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %default_value.addr, align 4, !dbg !6084
  store i32 %6, i32* %mixlev, align 4, !dbg !6086
  %7 = load float*, float** %opt_param.addr, align 8, !dbg !6087
  %8 = load float, float* %7, align 4, !dbg !6089
  %conv = fpext float %8 to double, !dbg !6089
  %cmp1 = fcmp oge double %conv, 0.000000e+00, !dbg !6090
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !6091

if.then3:                                         ; preds = %if.then
  %9 = load i8*, i8** %log_ctx.addr, align 8, !dbg !6092
  %10 = load i8*, i8** %opt_name.addr, align 8, !dbg !6094
  %11 = load i32, i32* %mixlev, align 4, !dbg !6095
  %idxprom = sext i32 %11 to i64, !dbg !6096
  %12 = load float*, float** %list.addr, align 8, !dbg !6096
  %arrayidx = getelementptr inbounds float, float* %12, i64 %idxprom, !dbg !6096
  %13 = load float, float* %arrayidx, align 4, !dbg !6096
  %conv4 = fpext float %13 to double, !dbg !6096
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i32 0, i32 0), i8* %10, double %conv4), !dbg !6097
  br label %if.end, !dbg !6098

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !6099

if.end5:                                          ; preds = %if.end, %entry
  %14 = load i32, i32* %mixlev, align 4, !dbg !6100
  %idxprom6 = sext i32 %14 to i64, !dbg !6101
  %15 = load float*, float** %list.addr, align 8, !dbg !6101
  %arrayidx7 = getelementptr inbounds float, float* %15, i64 %idxprom6, !dbg !6101
  %16 = load float, float* %arrayidx7, align 4, !dbg !6101
  %17 = load float*, float** %opt_param.addr, align 8, !dbg !6102
  store float %16, float* %17, align 4, !dbg !6103
  %18 = load i32, i32* %mixlev, align 4, !dbg !6104
  %19 = load i32*, i32** %ctx_param.addr, align 8, !dbg !6105
  store i32 %18, i32* %19, align 4, !dbg !6106
  ret void, !dbg !6107
}

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_ac3_encode_close(%struct.AVCodecContext* %avctx) #5 !dbg !6108 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %s = alloca %struct.AC3EncodeContext*, align 8
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6109, metadata !2184), !dbg !6110
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !6111, metadata !2184), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6113, metadata !2184), !dbg !6114
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s, metadata !6115, metadata !2184), !dbg !6116
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6117
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !6118
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6118
  %2 = bitcast i8* %1 to %struct.AC3EncodeContext*, !dbg !6117
  store %struct.AC3EncodeContext* %2, %struct.AC3EncodeContext** %s, align 8, !dbg !6116
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6119
  %windowed_samples = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 61, !dbg !6120
  %4 = bitcast i16** %windowed_samples to i8*, !dbg !6121
  call void @av_freep(i8* %4), !dbg !6122
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6123
  %planar_samples = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 62, !dbg !6125
  %6 = load i16**, i16*** %planar_samples, align 8, !dbg !6125
  %tobool = icmp ne i16** %6, null, !dbg !6123
  br i1 %tobool, label %if.then, label %if.end, !dbg !6126

if.then:                                          ; preds = %entry
  store i32 0, i32* %ch, align 4, !dbg !6127
  br label %for.cond, !dbg !6129

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %ch, align 4, !dbg !6130
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6133
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 26, !dbg !6134
  %9 = load i32, i32* %channels, align 4, !dbg !6134
  %cmp = icmp slt i32 %7, %9, !dbg !6135
  br i1 %cmp, label %for.body, label %for.end, !dbg !6136

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %ch, align 4, !dbg !6137
  %idxprom = sext i32 %10 to i64, !dbg !6138
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6138
  %planar_samples1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 62, !dbg !6139
  %12 = load i16**, i16*** %planar_samples1, align 8, !dbg !6139
  %arrayidx = getelementptr inbounds i16*, i16** %12, i64 %idxprom, !dbg !6138
  %13 = bitcast i16** %arrayidx to i8*, !dbg !6140
  call void @av_freep(i8* %13), !dbg !6141
  br label %for.inc, !dbg !6141

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %ch, align 4, !dbg !6142
  %inc = add nsw i32 %14, 1, !dbg !6142
  store i32 %inc, i32* %ch, align 4, !dbg !6142
  br label %for.cond, !dbg !6144, !llvm.loop !6145

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6147

if.end:                                           ; preds = %for.end, %entry
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6149
  %planar_samples2 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %15, i32 0, i32 62, !dbg !6150
  %16 = bitcast i16*** %planar_samples2 to i8*, !dbg !6151
  call void @av_freep(i8* %16), !dbg !6152
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6153
  %bap_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 63, !dbg !6154
  %18 = bitcast i8** %bap_buffer to i8*, !dbg !6155
  call void @av_freep(i8* %18), !dbg !6156
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6157
  %bap1_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 64, !dbg !6158
  %20 = bitcast i8** %bap1_buffer to i8*, !dbg !6159
  call void @av_freep(i8* %20), !dbg !6160
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6161
  %mdct_coef_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 65, !dbg !6162
  %22 = bitcast i32** %mdct_coef_buffer to i8*, !dbg !6163
  call void @av_freep(i8* %22), !dbg !6164
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6165
  %fixed_coef_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 66, !dbg !6166
  %24 = bitcast i32** %fixed_coef_buffer to i8*, !dbg !6167
  call void @av_freep(i8* %24), !dbg !6168
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6169
  %exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 67, !dbg !6170
  %26 = bitcast i8** %exp_buffer to i8*, !dbg !6171
  call void @av_freep(i8* %26), !dbg !6172
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6173
  %grouped_exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 68, !dbg !6174
  %28 = bitcast i8** %grouped_exp_buffer to i8*, !dbg !6175
  call void @av_freep(i8* %28), !dbg !6176
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6177
  %psd_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 69, !dbg !6178
  %30 = bitcast i16** %psd_buffer to i8*, !dbg !6179
  call void @av_freep(i8* %30), !dbg !6180
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6181
  %band_psd_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 70, !dbg !6182
  %32 = bitcast i16** %band_psd_buffer to i8*, !dbg !6183
  call void @av_freep(i8* %32), !dbg !6184
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6185
  %mask_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 71, !dbg !6186
  %34 = bitcast i16** %mask_buffer to i8*, !dbg !6187
  call void @av_freep(i8* %34), !dbg !6188
  %35 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6189
  %qmant_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %35, i32 0, i32 72, !dbg !6190
  %36 = bitcast i16** %qmant_buffer to i8*, !dbg !6191
  call void @av_freep(i8* %36), !dbg !6192
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6193
  %cpl_coord_exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 73, !dbg !6194
  %38 = bitcast i8** %cpl_coord_exp_buffer to i8*, !dbg !6195
  call void @av_freep(i8* %38), !dbg !6196
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6197
  %cpl_coord_mant_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 74, !dbg !6198
  %40 = bitcast i8** %cpl_coord_mant_buffer to i8*, !dbg !6199
  call void @av_freep(i8* %40), !dbg !6200
  %41 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6201
  %fdsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %41, i32 0, i32 5, !dbg !6202
  %42 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !6203
  call void @av_freep(i8* %42), !dbg !6204
  store i32 0, i32* %blk, align 4, !dbg !6205
  br label %for.cond3, !dbg !6207

for.cond3:                                        ; preds = %for.inc8, %if.end
  %43 = load i32, i32* %blk, align 4, !dbg !6208
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6211
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 18, !dbg !6212
  %45 = load i32, i32* %num_blocks, align 4, !dbg !6212
  %cmp4 = icmp slt i32 %43, %45, !dbg !6213
  br i1 %cmp4, label %for.body5, label %for.end10, !dbg !6214

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !6215, metadata !2184), !dbg !6217
  %46 = load i32, i32* %blk, align 4, !dbg !6218
  %idxprom6 = sext i32 %46 to i64, !dbg !6219
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6219
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 10, !dbg !6220
  %arrayidx7 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom6, !dbg !6219
  store %struct.AC3Block* %arrayidx7, %struct.AC3Block** %block, align 8, !dbg !6217
  %48 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6221
  %mdct_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %48, i32 0, i32 0, !dbg !6222
  %49 = bitcast i32*** %mdct_coef to i8*, !dbg !6223
  call void @av_freep(i8* %49), !dbg !6224
  %50 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6225
  %fixed_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %50, i32 0, i32 1, !dbg !6226
  %51 = bitcast i32*** %fixed_coef to i8*, !dbg !6227
  call void @av_freep(i8* %51), !dbg !6228
  %52 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6229
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %52, i32 0, i32 2, !dbg !6230
  %53 = bitcast i8*** %exp to i8*, !dbg !6231
  call void @av_freep(i8* %53), !dbg !6232
  %54 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6233
  %grouped_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %54, i32 0, i32 3, !dbg !6234
  %55 = bitcast i8*** %grouped_exp to i8*, !dbg !6235
  call void @av_freep(i8* %55), !dbg !6236
  %56 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6237
  %psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %56, i32 0, i32 4, !dbg !6238
  %57 = bitcast i16*** %psd to i8*, !dbg !6239
  call void @av_freep(i8* %57), !dbg !6240
  %58 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6241
  %band_psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %58, i32 0, i32 5, !dbg !6242
  %59 = bitcast i16*** %band_psd to i8*, !dbg !6243
  call void @av_freep(i8* %59), !dbg !6244
  %60 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6245
  %mask = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %60, i32 0, i32 6, !dbg !6246
  %61 = bitcast i16*** %mask to i8*, !dbg !6247
  call void @av_freep(i8* %61), !dbg !6248
  %62 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6249
  %qmant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %62, i32 0, i32 7, !dbg !6250
  %63 = bitcast i16*** %qmant to i8*, !dbg !6251
  call void @av_freep(i8* %63), !dbg !6252
  %64 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6253
  %cpl_coord_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %64, i32 0, i32 8, !dbg !6254
  %65 = bitcast i8*** %cpl_coord_exp to i8*, !dbg !6255
  call void @av_freep(i8* %65), !dbg !6256
  %66 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !6257
  %cpl_coord_mant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %66, i32 0, i32 9, !dbg !6258
  %67 = bitcast i8*** %cpl_coord_mant to i8*, !dbg !6259
  call void @av_freep(i8* %67), !dbg !6260
  br label %for.inc8, !dbg !6261

for.inc8:                                         ; preds = %for.body5
  %68 = load i32, i32* %blk, align 4, !dbg !6262
  %inc9 = add nsw i32 %68, 1, !dbg !6262
  store i32 %inc9, i32* %blk, align 4, !dbg !6262
  br label %for.cond3, !dbg !6264, !llvm.loop !6265

for.end10:                                        ; preds = %for.cond3
  %69 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6267
  %mdct_end = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %69, i32 0, i32 81, !dbg !6268
  %mdct_end11 = bitcast {}** %mdct_end to void (%struct.AC3EncodeContext*)**, !dbg !6268
  %70 = load void (%struct.AC3EncodeContext*)*, void (%struct.AC3EncodeContext*)** %mdct_end11, align 8, !dbg !6268
  %71 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6269
  call void %70(%struct.AC3EncodeContext* %71), !dbg !6267
  ret i32 0, !dbg !6270
}

declare void @av_freep(i8*) #4

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_ac3_encode_init(%struct.AVCodecContext* %avctx) #5 !dbg !6271 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AC3EncodeContext*, align 8
  %ret = alloca i32, align 4
  %frame_size_58 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6272, metadata !2184), !dbg !6273
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s, metadata !6274, metadata !2184), !dbg !6275
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6276
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !6277
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6277
  %2 = bitcast i8* %1 to %struct.AC3EncodeContext*, !dbg !6276
  store %struct.AC3EncodeContext* %2, %struct.AC3EncodeContext** %s, align 8, !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6278, metadata !2184), !dbg !6279
  call void @llvm.dbg.declare(metadata i32* %frame_size_58, metadata !6280, metadata !2184), !dbg !6281
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6282
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6283
  %avctx1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 2, !dbg !6284
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 8, !dbg !6285
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6286
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 4, !dbg !6287
  %6 = load i32, i32* %codec_id, align 8, !dbg !6287
  %cmp = icmp eq i32 %6, 86056, !dbg !6288
  %conv = zext i1 %cmp to i32, !dbg !6288
  %7 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6289
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %7, i32 0, i32 12, !dbg !6290
  store i32 %conv, i32* %eac3, align 4, !dbg !6291
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6292
  %call = call i32 @validate_options(%struct.AC3EncodeContext* %8), !dbg !6293
  store i32 %call, i32* %ret, align 4, !dbg !6294
  %9 = load i32, i32* %ret, align 4, !dbg !6295
  %tobool = icmp ne i32 %9, 0, !dbg !6295
  br i1 %tobool, label %if.then, label %if.end, !dbg !6297

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !6298
  store i32 %10, i32* %retval, align 4, !dbg !6299
  br label %return, !dbg !6299

if.end:                                           ; preds = %entry
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6300
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 18, !dbg !6301
  %12 = load i32, i32* %num_blocks, align 4, !dbg !6301
  %mul = mul nsw i32 256, %12, !dbg !6302
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6303
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 85, !dbg !6304
  store i32 %mul, i32* %frame_size, align 4, !dbg !6305
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6306
  %initial_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 162, !dbg !6307
  store i32 256, i32* %initial_padding, align 4, !dbg !6308
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6309
  %audio_service_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 91, !dbg !6310
  %16 = load i32, i32* %audio_service_type, align 8, !dbg !6310
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6311
  %bitstream_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 14, !dbg !6312
  store i32 %16, i32* %bitstream_mode, align 4, !dbg !6313
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6314
  %bitstream_mode2 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 14, !dbg !6316
  %19 = load i32, i32* %bitstream_mode2, align 4, !dbg !6316
  %cmp3 = icmp eq i32 %19, 8, !dbg !6317
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !6318

if.then5:                                         ; preds = %if.end
  %20 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6319
  %bitstream_mode6 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %20, i32 0, i32 14, !dbg !6320
  store i32 7, i32* %bitstream_mode6, align 4, !dbg !6321
  br label %if.end7, !dbg !6319

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6322
  %bits_written = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 23, !dbg !6323
  store i64 0, i64* %bits_written, align 8, !dbg !6324
  %22 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6325
  %samples_written = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %22, i32 0, i32 24, !dbg !6326
  store i64 0, i64* %samples_written, align 8, !dbg !6327
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6328
  %frame_size8 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 20, !dbg !6329
  %24 = load i32, i32* %frame_size8, align 4, !dbg !6329
  %shr = ashr i32 %24, 2, !dbg !6330
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6331
  %frame_size9 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 20, !dbg !6332
  %26 = load i32, i32* %frame_size9, align 4, !dbg !6332
  %shr10 = ashr i32 %26, 4, !dbg !6333
  %add = add nsw i32 %shr, %shr10, !dbg !6334
  %shl = shl i32 %add, 1, !dbg !6335
  store i32 %shl, i32* %frame_size_58, align 4, !dbg !6336
  %27 = load i32, i32* %frame_size_58, align 4, !dbg !6337
  %mul11 = mul nsw i32 8, %27, !dbg !6338
  %sub = sub nsw i32 %mul11, 16, !dbg !6339
  %call12 = call i32 @pow_poly(i32 49154, i32 %sub, i32 98309), !dbg !6340
  %conv13 = trunc i32 %call12 to i16, !dbg !6340
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6341
  %crc_inv = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 22, !dbg !6342
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %crc_inv, i64 0, i64 0, !dbg !6341
  store i16 %conv13, i16* %arrayidx, align 4, !dbg !6343
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6344
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 54, !dbg !6346
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 0, !dbg !6347
  %30 = load i32, i32* %sr_code, align 4, !dbg !6347
  %cmp14 = icmp eq i32 %30, 1, !dbg !6348
  br i1 %cmp14, label %if.then16, label %if.end31, !dbg !6349

if.then16:                                        ; preds = %if.end7
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6350
  %frame_size17 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 20, !dbg !6352
  %32 = load i32, i32* %frame_size17, align 4, !dbg !6352
  %add18 = add nsw i32 %32, 2, !dbg !6353
  %shr19 = ashr i32 %add18, 2, !dbg !6354
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6355
  %frame_size20 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 20, !dbg !6356
  %34 = load i32, i32* %frame_size20, align 4, !dbg !6356
  %add21 = add nsw i32 %34, 2, !dbg !6357
  %shr22 = ashr i32 %add21, 4, !dbg !6358
  %add23 = add nsw i32 %shr19, %shr22, !dbg !6359
  %shl24 = shl i32 %add23, 1, !dbg !6360
  store i32 %shl24, i32* %frame_size_58, align 4, !dbg !6361
  %35 = load i32, i32* %frame_size_58, align 4, !dbg !6362
  %mul25 = mul nsw i32 8, %35, !dbg !6363
  %sub26 = sub nsw i32 %mul25, 16, !dbg !6364
  %call27 = call i32 @pow_poly(i32 49154, i32 %sub26, i32 98309), !dbg !6365
  %conv28 = trunc i32 %call27 to i16, !dbg !6365
  %36 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6366
  %crc_inv29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %36, i32 0, i32 22, !dbg !6367
  %arrayidx30 = getelementptr inbounds [2 x i16], [2 x i16]* %crc_inv29, i64 0, i64 1, !dbg !6366
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !6368
  br label %if.end31, !dbg !6369

if.end31:                                         ; preds = %if.then16, %if.end7
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6370
  %fixed_point = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 11, !dbg !6372
  %38 = load i32, i32* %fixed_point, align 8, !dbg !6372
  %tobool32 = icmp ne i32 %38, 0, !dbg !6370
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !6373

if.then33:                                        ; preds = %if.end31
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6374
  %mdct_end = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 81, !dbg !6376
  %mdct_end34 = bitcast {}** %mdct_end to void (%struct.AC3EncodeContext*)**, !dbg !6376
  store void (%struct.AC3EncodeContext*)* @ff_ac3_fixed_mdct_end, void (%struct.AC3EncodeContext*)** %mdct_end34, align 8, !dbg !6377
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6378
  %mdct_init = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 82, !dbg !6379
  store i32 (%struct.AC3EncodeContext*)* @ff_ac3_fixed_mdct_init, i32 (%struct.AC3EncodeContext*)** %mdct_init, align 8, !dbg !6380
  %41 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6381
  %allocate_sample_buffers = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %41, i32 0, i32 83, !dbg !6382
  store i32 (%struct.AC3EncodeContext*)* @ff_ac3_fixed_allocate_sample_buffers, i32 (%struct.AC3EncodeContext*)** %allocate_sample_buffers, align 8, !dbg !6383
  br label %if.end39, !dbg !6384

if.else:                                          ; preds = %if.end31
  %42 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6385
  %mdct_end35 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %42, i32 0, i32 81, !dbg !6388
  %mdct_end36 = bitcast {}** %mdct_end35 to void (%struct.AC3EncodeContext*)**, !dbg !6388
  store void (%struct.AC3EncodeContext*)* @ff_ac3_float_mdct_end, void (%struct.AC3EncodeContext*)** %mdct_end36, align 8, !dbg !6389
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6390
  %mdct_init37 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 82, !dbg !6391
  store i32 (%struct.AC3EncodeContext*)* @ff_ac3_float_mdct_init, i32 (%struct.AC3EncodeContext*)** %mdct_init37, align 8, !dbg !6392
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6393
  %allocate_sample_buffers38 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 83, !dbg !6394
  store i32 (%struct.AC3EncodeContext*)* @ff_ac3_float_allocate_sample_buffers, i32 (%struct.AC3EncodeContext*)** %allocate_sample_buffers38, align 8, !dbg !6395
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then33
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6396
  %eac340 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 12, !dbg !6398
  %46 = load i32, i32* %eac340, align 4, !dbg !6398
  %tobool41 = icmp ne i32 %46, 0, !dbg !6396
  br i1 %tobool41, label %if.then42, label %if.else44, !dbg !6399

if.then42:                                        ; preds = %if.end39
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6400
  %output_frame_header = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 84, !dbg !6401
  %output_frame_header43 = bitcast {}** %output_frame_header to void (%struct.AC3EncodeContext*)**, !dbg !6401
  store void (%struct.AC3EncodeContext*)* @ff_eac3_output_frame_header, void (%struct.AC3EncodeContext*)** %output_frame_header43, align 8, !dbg !6402
  br label %if.end47, !dbg !6400

if.else44:                                        ; preds = %if.end39
  %48 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6403
  %output_frame_header45 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %48, i32 0, i32 84, !dbg !6404
  %output_frame_header46 = bitcast {}** %output_frame_header45 to void (%struct.AC3EncodeContext*)**, !dbg !6404
  store void (%struct.AC3EncodeContext*)* @ac3_output_frame_header, void (%struct.AC3EncodeContext*)** %output_frame_header46, align 8, !dbg !6405
  br label %if.end47

if.end47:                                         ; preds = %if.else44, %if.then42
  %49 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6406
  call void @set_bandwidth(%struct.AC3EncodeContext* %49), !dbg !6407
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6408
  call void @exponent_init(%struct.AC3EncodeContext* %50), !dbg !6409
  %51 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6410
  call void @bit_alloc_init(%struct.AC3EncodeContext* %51), !dbg !6411
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6412
  %mdct_init48 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 82, !dbg !6413
  %53 = load i32 (%struct.AC3EncodeContext*)*, i32 (%struct.AC3EncodeContext*)** %mdct_init48, align 8, !dbg !6413
  %54 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6414
  %call49 = call i32 %53(%struct.AC3EncodeContext* %54), !dbg !6412
  store i32 %call49, i32* %ret, align 4, !dbg !6415
  %55 = load i32, i32* %ret, align 4, !dbg !6416
  %tobool50 = icmp ne i32 %55, 0, !dbg !6416
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !6418

if.then51:                                        ; preds = %if.end47
  br label %init_fail, !dbg !6419

if.end52:                                         ; preds = %if.end47
  %56 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6420
  %call53 = call i32 @allocate_buffers(%struct.AC3EncodeContext* %56), !dbg !6421
  store i32 %call53, i32* %ret, align 4, !dbg !6422
  %57 = load i32, i32* %ret, align 4, !dbg !6423
  %tobool54 = icmp ne i32 %57, 0, !dbg !6423
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !6425

if.then55:                                        ; preds = %if.end52
  br label %init_fail, !dbg !6426

if.end56:                                         ; preds = %if.end52
  %58 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6427
  %adsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %58, i32 0, i32 4, !dbg !6428
  call void @ff_audiodsp_init(%struct.AudioDSPContext* %adsp), !dbg !6429
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6430
  %mecc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 6, !dbg !6431
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6432
  call void @ff_me_cmp_init(%struct.MECmpContext* %mecc, %struct.AVCodecContext* %60), !dbg !6433
  %61 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6434
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %61, i32 0, i32 7, !dbg !6435
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6436
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 13, !dbg !6437
  %63 = load i32, i32* %flags, align 4, !dbg !6437
  %and = and i32 %63, 8388608, !dbg !6438
  call void @ff_ac3dsp_init(%struct.AC3DSPContext* %ac3dsp, i32 %and), !dbg !6439
  %64 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s, align 8, !dbg !6440
  call void @dprint_options(%struct.AC3EncodeContext* %64), !dbg !6441
  store i32 0, i32* %retval, align 4, !dbg !6442
  br label %return, !dbg !6442

init_fail:                                        ; preds = %if.then55, %if.then51
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6443
  %call57 = call i32 @ff_ac3_encode_close(%struct.AVCodecContext* %65), !dbg !6444
  %66 = load i32, i32* %ret, align 4, !dbg !6445
  store i32 %66, i32* %retval, align 4, !dbg !6446
  br label %return, !dbg !6446

return:                                           ; preds = %init_fail, %if.end56, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !6447
  ret i32 %67, !dbg !6447
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @validate_options(%struct.AC3EncodeContext* %s) #5 !dbg !6448 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %max_sr = alloca i32, align 4
  %max_br = alloca i32, align 4
  %min_br = alloca i32, align 4
  %wpf = alloca i32, align 4
  %min_br_code = alloca i32, align 4
  %num_blks_code = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %frame_samples = alloca i32, align 4
  %min_br_dist = alloca i64, align 8
  %.compoundliteral = alloca [4 x i32], align 4
  %br_dist = alloca i64, align 8
  %best_br = alloca i32, align 4
  %best_code = alloca i32, align 4
  %best_diff = alloca i64, align 8
  %br = alloca i32, align 4
  %diff = alloca i64, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !6449, metadata !2184), !dbg !6450
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !6451, metadata !2184), !dbg !6452
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6453
  %avctx1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 2, !dbg !6454
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !6454
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6455, metadata !2184), !dbg !6456
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6457, metadata !2184), !dbg !6458
  call void @llvm.dbg.declare(metadata i32* %max_sr, metadata !6459, metadata !2184), !dbg !6460
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6461
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 89, !dbg !6463
  %3 = load i64, i64* %channel_layout, align 8, !dbg !6463
  %tobool = icmp ne i64 %3, 0, !dbg !6461
  br i1 %tobool, label %if.end, label %if.then, !dbg !6464

if.then:                                          ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6465
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !6465
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 24, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15, i32 0, i32 0)), !dbg !6467
  br label %if.end, !dbg !6468

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6469
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6470
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 83, !dbg !6471
  %8 = load i32, i32* %channels, align 4, !dbg !6471
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6472
  %channel_layout2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 89, !dbg !6473
  %call = call i32 @set_channel_info(%struct.AC3EncodeContext* %6, i32 %8, i64* %channel_layout2), !dbg !6474
  store i32 %call, i32* %ret, align 4, !dbg !6475
  %10 = load i32, i32* %ret, align 4, !dbg !6476
  %tobool3 = icmp ne i32 %10, 0, !dbg !6476
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6478

if.then4:                                         ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6479
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !6479
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i32 0, i32 0)), !dbg !6481
  %13 = load i32, i32* %ret, align 4, !dbg !6482
  store i32 %13, i32* %retval, align 4, !dbg !6483
  br label %return, !dbg !6483

if.end5:                                          ; preds = %if.end
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6484
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 12, !dbg !6485
  %15 = load i32, i32* %eac3, align 4, !dbg !6485
  %tobool6 = icmp ne i32 %15, 0, !dbg !6484
  %cond = select i1 %tobool6, i32 2, i32 8, !dbg !6484
  store i32 %cond, i32* %max_sr, align 4, !dbg !6486
  store i32 0, i32* %i, align 4, !dbg !6487
  br label %for.cond, !dbg !6489

for.cond:                                         ; preds = %for.inc, %if.end5
  %16 = load i32, i32* %i, align 4, !dbg !6490
  %17 = load i32, i32* %max_sr, align 4, !dbg !6493
  %cmp = icmp sle i32 %16, %17, !dbg !6494
  br i1 %cmp, label %for.body, label %for.end, !dbg !6495

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !6496
  %rem = srem i32 %18, 3, !dbg !6499
  %idxprom = sext i32 %rem to i64, !dbg !6500
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* @ff_ac3_sample_rate_tab, i64 0, i64 %idxprom, !dbg !6500
  %19 = load i16, i16* %arrayidx, align 2, !dbg !6500
  %conv = zext i16 %19 to i32, !dbg !6500
  %20 = load i32, i32* %i, align 4, !dbg !6501
  %div = sdiv i32 %20, 3, !dbg !6502
  %shr = ashr i32 %conv, %div, !dbg !6503
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6504
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 82, !dbg !6505
  %22 = load i32, i32* %sample_rate, align 8, !dbg !6505
  %cmp7 = icmp eq i32 %shr, %22, !dbg !6506
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6507

if.then9:                                         ; preds = %for.body
  br label %for.end, !dbg !6508

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !6509

for.inc:                                          ; preds = %if.end10
  %23 = load i32, i32* %i, align 4, !dbg !6510
  %inc = add nsw i32 %23, 1, !dbg !6510
  store i32 %inc, i32* %i, align 4, !dbg !6510
  br label %for.cond, !dbg !6512, !llvm.loop !6513

for.end:                                          ; preds = %if.then9, %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !6515
  %25 = load i32, i32* %max_sr, align 4, !dbg !6517
  %cmp11 = icmp sgt i32 %24, %25, !dbg !6518
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6519

if.then13:                                        ; preds = %for.end
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6520
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !6520
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0)), !dbg !6522
  store i32 -22, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

if.end14:                                         ; preds = %for.end
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6524
  %sample_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 82, !dbg !6525
  %29 = load i32, i32* %sample_rate15, align 8, !dbg !6525
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6526
  %sample_rate16 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 16, !dbg !6527
  store i32 %29, i32* %sample_rate16, align 4, !dbg !6528
  %31 = load i32, i32* %i, align 4, !dbg !6529
  %div17 = sdiv i32 %31, 3, !dbg !6530
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6531
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 54, !dbg !6532
  %sr_shift = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 1, !dbg !6533
  store i32 %div17, i32* %sr_shift, align 4, !dbg !6534
  %33 = load i32, i32* %i, align 4, !dbg !6535
  %rem18 = srem i32 %33, 3, !dbg !6536
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6537
  %bit_alloc19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 54, !dbg !6538
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc19, i32 0, i32 0, !dbg !6539
  store i32 %rem18, i32* %sr_code, align 4, !dbg !6540
  %35 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6541
  %eac320 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %35, i32 0, i32 12, !dbg !6542
  %36 = load i32, i32* %eac320, align 4, !dbg !6542
  %tobool21 = icmp ne i32 %36, 0, !dbg !6541
  br i1 %tobool21, label %cond.true, label %cond.false, !dbg !6541

cond.true:                                        ; preds = %if.end14
  br label %cond.end, !dbg !6543

cond.false:                                       ; preds = %if.end14
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6545
  %bit_alloc22 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 54, !dbg !6547
  %sr_shift23 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc22, i32 0, i32 1, !dbg !6548
  %38 = load i32, i32* %sr_shift23, align 4, !dbg !6548
  %add = add nsw i32 8, %38, !dbg !6549
  br label %cond.end, !dbg !6550

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond24 = phi i32 [ 16, %cond.true ], [ %add, %cond.false ], !dbg !6551
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6553
  %bitstream_id = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 13, !dbg !6554
  store i32 %cond24, i32* %bitstream_id, align 8, !dbg !6555
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6556
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 9, !dbg !6558
  %41 = load i64, i64* %bit_rate, align 8, !dbg !6558
  %tobool25 = icmp ne i64 %41, 0, !dbg !6556
  br i1 %tobool25, label %if.end36, label %if.then26, !dbg !6559

if.then26:                                        ; preds = %cond.end
  %42 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6560
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %42, i32 0, i32 25, !dbg !6562
  %43 = load i32, i32* %fbw_channels, align 8, !dbg !6562
  switch i32 %43, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb28
    i32 3, label %sw.bb30
    i32 4, label %sw.bb32
    i32 5, label %sw.bb34
  ], !dbg !6563

sw.bb:                                            ; preds = %if.then26
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6564
  %bit_rate27 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 9, !dbg !6566
  store i64 96000, i64* %bit_rate27, align 8, !dbg !6567
  br label %sw.epilog, !dbg !6568

sw.bb28:                                          ; preds = %if.then26
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6569
  %bit_rate29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 9, !dbg !6570
  store i64 192000, i64* %bit_rate29, align 8, !dbg !6571
  br label %sw.epilog, !dbg !6572

sw.bb30:                                          ; preds = %if.then26
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6573
  %bit_rate31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 9, !dbg !6574
  store i64 320000, i64* %bit_rate31, align 8, !dbg !6575
  br label %sw.epilog, !dbg !6576

sw.bb32:                                          ; preds = %if.then26
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6577
  %bit_rate33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 9, !dbg !6578
  store i64 384000, i64* %bit_rate33, align 8, !dbg !6579
  br label %sw.epilog, !dbg !6580

sw.bb34:                                          ; preds = %if.then26
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6581
  %bit_rate35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 9, !dbg !6582
  store i64 448000, i64* %bit_rate35, align 8, !dbg !6583
  br label %sw.epilog, !dbg !6584

sw.epilog:                                        ; preds = %if.then26, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb28, %sw.bb
  br label %if.end36, !dbg !6585

if.end36:                                         ; preds = %sw.epilog, %cond.end
  %49 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6586
  %eac337 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %49, i32 0, i32 12, !dbg !6588
  %50 = load i32, i32* %eac337, align 4, !dbg !6588
  %tobool38 = icmp ne i32 %50, 0, !dbg !6586
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !6589

if.then39:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %max_br, metadata !6590, metadata !2184), !dbg !6592
  call void @llvm.dbg.declare(metadata i32* %min_br, metadata !6593, metadata !2184), !dbg !6594
  call void @llvm.dbg.declare(metadata i32* %wpf, metadata !6595, metadata !2184), !dbg !6596
  call void @llvm.dbg.declare(metadata i32* %min_br_code, metadata !6597, metadata !2184), !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %num_blks_code, metadata !6599, metadata !2184), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %num_blocks, metadata !6601, metadata !2184), !dbg !6602
  call void @llvm.dbg.declare(metadata i32* %frame_samples, metadata !6603, metadata !2184), !dbg !6604
  call void @llvm.dbg.declare(metadata i64* %min_br_dist, metadata !6605, metadata !2184), !dbg !6607
  store i32 3, i32* %num_blks_code, align 4, !dbg !6608
  br label %for.cond40, !dbg !6610

for.cond40:                                       ; preds = %for.inc62, %if.then39
  %51 = load i32, i32* %num_blks_code, align 4, !dbg !6611
  %cmp41 = icmp sge i32 %51, 0, !dbg !6614
  br i1 %cmp41, label %for.body43, label %for.end63, !dbg !6615

for.body43:                                       ; preds = %for.cond40
  %52 = load i32, i32* %num_blks_code, align 4, !dbg !6616
  %idxprom44 = sext i32 %52 to i64, !dbg !6618
  %arrayinit.begin = getelementptr inbounds [4 x i32], [4 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !6619
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !6619
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !6619
  store i32 2, i32* %arrayinit.element, align 4, !dbg !6619
  %arrayinit.element45 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !6619
  store i32 3, i32* %arrayinit.element45, align 4, !dbg !6619
  %arrayinit.element46 = getelementptr inbounds i32, i32* %arrayinit.element45, i64 1, !dbg !6619
  store i32 6, i32* %arrayinit.element46, align 4, !dbg !6619
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %.compoundliteral, i64 0, i64 %idxprom44, !dbg !6618
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !6618
  store i32 %53, i32* %num_blocks, align 4, !dbg !6620
  %54 = load i32, i32* %num_blocks, align 4, !dbg !6621
  %mul = mul nsw i32 256, %54, !dbg !6622
  store i32 %mul, i32* %frame_samples, align 4, !dbg !6623
  %55 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6624
  %sample_rate48 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %55, i32 0, i32 16, !dbg !6625
  %56 = load i32, i32* %sample_rate48, align 4, !dbg !6625
  %mul49 = mul nsw i32 2048, %56, !dbg !6626
  %57 = load i32, i32* %frame_samples, align 4, !dbg !6627
  %div50 = sdiv i32 %mul49, %57, !dbg !6628
  %mul51 = mul nsw i32 %div50, 16, !dbg !6629
  store i32 %mul51, i32* %max_br, align 4, !dbg !6630
  %58 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6631
  %sample_rate52 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %58, i32 0, i32 16, !dbg !6632
  %59 = load i32, i32* %sample_rate52, align 4, !dbg !6632
  %60 = load i32, i32* %frame_samples, align 4, !dbg !6633
  %sub = sub nsw i32 %60, 1, !dbg !6634
  %add53 = add nsw i32 %59, %sub, !dbg !6635
  %61 = load i32, i32* %frame_samples, align 4, !dbg !6636
  %div54 = sdiv i32 %add53, %61, !dbg !6637
  %mul55 = mul nsw i32 %div54, 16, !dbg !6638
  store i32 %mul55, i32* %min_br, align 4, !dbg !6639
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6640
  %bit_rate56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 9, !dbg !6642
  %63 = load i64, i64* %bit_rate56, align 8, !dbg !6642
  %64 = load i32, i32* %max_br, align 4, !dbg !6643
  %conv57 = sext i32 %64 to i64, !dbg !6643
  %cmp58 = icmp sle i64 %63, %conv57, !dbg !6644
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !6645

if.then60:                                        ; preds = %for.body43
  br label %for.end63, !dbg !6646

if.end61:                                         ; preds = %for.body43
  br label %for.inc62, !dbg !6647

for.inc62:                                        ; preds = %if.end61
  %65 = load i32, i32* %num_blks_code, align 4, !dbg !6648
  %dec = add nsw i32 %65, -1, !dbg !6648
  store i32 %dec, i32* %num_blks_code, align 4, !dbg !6648
  br label %for.cond40, !dbg !6650, !llvm.loop !6651

for.end63:                                        ; preds = %if.then60, %for.cond40
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6653
  %bit_rate64 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i32 0, i32 9, !dbg !6655
  %67 = load i64, i64* %bit_rate64, align 8, !dbg !6655
  %68 = load i32, i32* %min_br, align 4, !dbg !6656
  %conv65 = sext i32 %68 to i64, !dbg !6656
  %cmp66 = icmp slt i64 %67, %conv65, !dbg !6657
  br i1 %cmp66, label %if.then72, label %lor.lhs.false, !dbg !6658

lor.lhs.false:                                    ; preds = %for.end63
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6659
  %bit_rate68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 9, !dbg !6661
  %70 = load i64, i64* %bit_rate68, align 8, !dbg !6661
  %71 = load i32, i32* %max_br, align 4, !dbg !6662
  %conv69 = sext i32 %71 to i64, !dbg !6662
  %cmp70 = icmp sgt i64 %70, %conv69, !dbg !6663
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !6664

if.then72:                                        ; preds = %lor.lhs.false, %for.end63
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6665
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !6665
  %74 = load i32, i32* %min_br, align 4, !dbg !6667
  %75 = load i32, i32* %max_br, align 4, !dbg !6668
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.18, i32 0, i32 0), i32 %74, i32 %75), !dbg !6669
  store i32 -22, i32* %retval, align 4, !dbg !6670
  br label %return, !dbg !6670

if.end73:                                         ; preds = %lor.lhs.false
  %76 = load i32, i32* %num_blks_code, align 4, !dbg !6671
  %77 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6672
  %num_blks_code74 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %77, i32 0, i32 17, !dbg !6673
  store i32 %76, i32* %num_blks_code74, align 8, !dbg !6674
  %78 = load i32, i32* %num_blocks, align 4, !dbg !6675
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6676
  %num_blocks75 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 18, !dbg !6677
  store i32 %78, i32* %num_blocks75, align 4, !dbg !6678
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6679
  %bit_rate76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 9, !dbg !6680
  %81 = load i64, i64* %bit_rate76, align 8, !dbg !6680
  %div77 = sdiv i64 %81, 16, !dbg !6681
  %82 = load i32, i32* %frame_samples, align 4, !dbg !6682
  %conv78 = sext i32 %82 to i64, !dbg !6682
  %mul79 = mul nsw i64 %div77, %conv78, !dbg !6683
  %83 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6684
  %sample_rate80 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %83, i32 0, i32 16, !dbg !6685
  %84 = load i32, i32* %sample_rate80, align 4, !dbg !6685
  %conv81 = sext i32 %84 to i64, !dbg !6684
  %div82 = sdiv i64 %mul79, %conv81, !dbg !6686
  %conv83 = trunc i64 %div82 to i32, !dbg !6687
  store i32 %conv83, i32* %wpf, align 4, !dbg !6688
  store i32 -1, i32* %min_br_code, align 4, !dbg !6689
  store i64 9223372036854775807, i64* %min_br_dist, align 8, !dbg !6690
  store i32 0, i32* %i, align 4, !dbg !6691
  br label %for.cond84, !dbg !6693

for.cond84:                                       ; preds = %for.inc100, %if.end73
  %85 = load i32, i32* %i, align 4, !dbg !6694
  %cmp85 = icmp slt i32 %85, 19, !dbg !6697
  br i1 %cmp85, label %for.body87, label %for.end102, !dbg !6698

for.body87:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata i64* %br_dist, metadata !6699, metadata !2184), !dbg !6701
  %86 = load i32, i32* %i, align 4, !dbg !6702
  %idxprom88 = sext i32 %86 to i64, !dbg !6703
  %arrayidx89 = getelementptr inbounds [19 x i16], [19 x i16]* @ff_ac3_bitrate_tab, i64 0, i64 %idxprom88, !dbg !6703
  %87 = load i16, i16* %arrayidx89, align 2, !dbg !6703
  %conv90 = zext i16 %87 to i32, !dbg !6703
  %mul91 = mul nsw i32 %conv90, 1000, !dbg !6704
  %conv92 = sext i32 %mul91 to i64, !dbg !6703
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6705
  %bit_rate93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 9, !dbg !6706
  %89 = load i64, i64* %bit_rate93, align 8, !dbg !6706
  %sub94 = sub nsw i64 %conv92, %89, !dbg !6707
  %call95 = call i64 @llabs(i64 %sub94) #1, !dbg !6708
  store i64 %call95, i64* %br_dist, align 8, !dbg !6701
  %90 = load i64, i64* %br_dist, align 8, !dbg !6709
  %91 = load i64, i64* %min_br_dist, align 8, !dbg !6711
  %cmp96 = icmp slt i64 %90, %91, !dbg !6712
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !6713

if.then98:                                        ; preds = %for.body87
  %92 = load i64, i64* %br_dist, align 8, !dbg !6714
  store i64 %92, i64* %min_br_dist, align 8, !dbg !6716
  %93 = load i32, i32* %i, align 4, !dbg !6717
  store i32 %93, i32* %min_br_code, align 4, !dbg !6718
  br label %if.end99, !dbg !6719

if.end99:                                         ; preds = %if.then98, %for.body87
  br label %for.inc100, !dbg !6720

for.inc100:                                       ; preds = %if.end99
  %94 = load i32, i32* %i, align 4, !dbg !6721
  %inc101 = add nsw i32 %94, 1, !dbg !6721
  store i32 %inc101, i32* %i, align 4, !dbg !6721
  br label %for.cond84, !dbg !6723, !llvm.loop !6724

for.end102:                                       ; preds = %for.cond84
  %95 = load i32, i32* %min_br_code, align 4, !dbg !6726
  %shl = shl i32 %95, 1, !dbg !6727
  %96 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6728
  %frame_size_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %96, i32 0, i32 21, !dbg !6729
  store i32 %shl, i32* %frame_size_code, align 8, !dbg !6730
  br label %while.cond, !dbg !6731

while.cond:                                       ; preds = %while.body, %for.end102
  %97 = load i32, i32* %wpf, align 4, !dbg !6732
  %cmp103 = icmp sgt i32 %97, 1, !dbg !6734
  br i1 %cmp103, label %land.rhs, label %land.end, !dbg !6735

land.rhs:                                         ; preds = %while.cond
  %98 = load i32, i32* %wpf, align 4, !dbg !6736
  %99 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6738
  %sample_rate105 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %99, i32 0, i32 16, !dbg !6739
  %100 = load i32, i32* %sample_rate105, align 4, !dbg !6739
  %mul106 = mul nsw i32 %98, %100, !dbg !6740
  %div107 = sdiv i32 %mul106, 1536, !dbg !6741
  %mul108 = mul nsw i32 %div107, 16, !dbg !6742
  %conv109 = sext i32 %mul108 to i64, !dbg !6736
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6743
  %bit_rate110 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 9, !dbg !6744
  %102 = load i64, i64* %bit_rate110, align 8, !dbg !6744
  %cmp111 = icmp sgt i64 %conv109, %102, !dbg !6745
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %103 = phi i1 [ false, %while.cond ], [ %cmp111, %land.rhs ]
  br i1 %103, label %while.body, label %while.end, !dbg !6746

while.body:                                       ; preds = %land.end
  %104 = load i32, i32* %wpf, align 4, !dbg !6748
  %dec113 = add nsw i32 %104, -1, !dbg !6748
  store i32 %dec113, i32* %wpf, align 4, !dbg !6748
  br label %while.cond, !dbg !6749, !llvm.loop !6751

while.end:                                        ; preds = %land.end
  %105 = load i32, i32* %wpf, align 4, !dbg !6752
  %mul114 = mul nsw i32 2, %105, !dbg !6753
  %106 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6754
  %frame_size_min = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %106, i32 0, i32 19, !dbg !6755
  store i32 %mul114, i32* %frame_size_min, align 8, !dbg !6756
  br label %if.end156, !dbg !6757

if.else:                                          ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %best_br, metadata !6758, metadata !2184), !dbg !6760
  store i32 0, i32* %best_br, align 4, !dbg !6760
  call void @llvm.dbg.declare(metadata i32* %best_code, metadata !6761, metadata !2184), !dbg !6762
  store i32 0, i32* %best_code, align 4, !dbg !6762
  call void @llvm.dbg.declare(metadata i64* %best_diff, metadata !6763, metadata !2184), !dbg !6764
  store i64 9223372036854775807, i64* %best_diff, align 8, !dbg !6764
  store i32 0, i32* %i, align 4, !dbg !6765
  br label %for.cond115, !dbg !6767

for.cond115:                                      ; preds = %for.inc137, %if.else
  %107 = load i32, i32* %i, align 4, !dbg !6768
  %cmp116 = icmp slt i32 %107, 19, !dbg !6771
  br i1 %cmp116, label %for.body118, label %for.end139, !dbg !6772

for.body118:                                      ; preds = %for.cond115
  call void @llvm.dbg.declare(metadata i32* %br, metadata !6773, metadata !2184), !dbg !6775
  %108 = load i32, i32* %i, align 4, !dbg !6776
  %idxprom119 = sext i32 %108 to i64, !dbg !6777
  %arrayidx120 = getelementptr inbounds [19 x i16], [19 x i16]* @ff_ac3_bitrate_tab, i64 0, i64 %idxprom119, !dbg !6777
  %109 = load i16, i16* %arrayidx120, align 2, !dbg !6777
  %conv121 = zext i16 %109 to i32, !dbg !6777
  %110 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6778
  %bit_alloc122 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %110, i32 0, i32 54, !dbg !6779
  %sr_shift123 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc122, i32 0, i32 1, !dbg !6780
  %111 = load i32, i32* %sr_shift123, align 4, !dbg !6780
  %shr124 = ashr i32 %conv121, %111, !dbg !6781
  %mul125 = mul nsw i32 %shr124, 1000, !dbg !6782
  store i32 %mul125, i32* %br, align 4, !dbg !6775
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !6783, metadata !2184), !dbg !6784
  %112 = load i32, i32* %br, align 4, !dbg !6785
  %conv126 = sext i32 %112 to i64, !dbg !6785
  %113 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6786
  %bit_rate127 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %113, i32 0, i32 9, !dbg !6787
  %114 = load i64, i64* %bit_rate127, align 8, !dbg !6787
  %sub128 = sub nsw i64 %conv126, %114, !dbg !6788
  %call129 = call i64 @llabs(i64 %sub128) #1, !dbg !6789
  store i64 %call129, i64* %diff, align 8, !dbg !6784
  %115 = load i64, i64* %diff, align 8, !dbg !6790
  %116 = load i64, i64* %best_diff, align 8, !dbg !6792
  %cmp130 = icmp slt i64 %115, %116, !dbg !6793
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !6794

if.then132:                                       ; preds = %for.body118
  %117 = load i32, i32* %br, align 4, !dbg !6795
  store i32 %117, i32* %best_br, align 4, !dbg !6797
  %118 = load i32, i32* %i, align 4, !dbg !6798
  store i32 %118, i32* %best_code, align 4, !dbg !6799
  %119 = load i64, i64* %diff, align 8, !dbg !6800
  store i64 %119, i64* %best_diff, align 8, !dbg !6801
  br label %if.end133, !dbg !6802

if.end133:                                        ; preds = %if.then132, %for.body118
  %120 = load i64, i64* %best_diff, align 8, !dbg !6803
  %tobool134 = icmp ne i64 %120, 0, !dbg !6803
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !6805

if.then135:                                       ; preds = %if.end133
  br label %for.end139, !dbg !6806

if.end136:                                        ; preds = %if.end133
  br label %for.inc137, !dbg !6807

for.inc137:                                       ; preds = %if.end136
  %121 = load i32, i32* %i, align 4, !dbg !6808
  %inc138 = add nsw i32 %121, 1, !dbg !6808
  store i32 %inc138, i32* %i, align 4, !dbg !6808
  br label %for.cond115, !dbg !6810, !llvm.loop !6811

for.end139:                                       ; preds = %if.then135, %for.cond115
  %122 = load i32, i32* %best_br, align 4, !dbg !6813
  %conv140 = sext i32 %122 to i64, !dbg !6813
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6814
  %bit_rate141 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 9, !dbg !6815
  store i64 %conv140, i64* %bit_rate141, align 8, !dbg !6816
  %124 = load i32, i32* %best_code, align 4, !dbg !6817
  %shl142 = shl i32 %124, 1, !dbg !6818
  %125 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6819
  %frame_size_code143 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %125, i32 0, i32 21, !dbg !6820
  store i32 %shl142, i32* %frame_size_code143, align 8, !dbg !6821
  %126 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6822
  %bit_alloc144 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %126, i32 0, i32 54, !dbg !6823
  %sr_code145 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc144, i32 0, i32 0, !dbg !6824
  %127 = load i32, i32* %sr_code145, align 4, !dbg !6824
  %idxprom146 = sext i32 %127 to i64, !dbg !6825
  %128 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6826
  %frame_size_code147 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %128, i32 0, i32 21, !dbg !6827
  %129 = load i32, i32* %frame_size_code147, align 8, !dbg !6827
  %idxprom148 = sext i32 %129 to i64, !dbg !6825
  %arrayidx149 = getelementptr inbounds [38 x [3 x i16]], [38 x [3 x i16]]* @ff_ac3_frame_size_tab, i64 0, i64 %idxprom148, !dbg !6825
  %arrayidx150 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx149, i64 0, i64 %idxprom146, !dbg !6825
  %130 = load i16, i16* %arrayidx150, align 2, !dbg !6825
  %conv151 = zext i16 %130 to i32, !dbg !6825
  %mul152 = mul nsw i32 2, %conv151, !dbg !6828
  %131 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6829
  %frame_size_min153 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %131, i32 0, i32 19, !dbg !6830
  store i32 %mul152, i32* %frame_size_min153, align 8, !dbg !6831
  %132 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6832
  %num_blks_code154 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %132, i32 0, i32 17, !dbg !6833
  store i32 3, i32* %num_blks_code154, align 8, !dbg !6834
  %133 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6835
  %num_blocks155 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %133, i32 0, i32 18, !dbg !6836
  store i32 6, i32* %num_blocks155, align 4, !dbg !6837
  br label %if.end156

if.end156:                                        ; preds = %for.end139, %while.end
  %134 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6838
  %bit_rate157 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %134, i32 0, i32 9, !dbg !6839
  %135 = load i64, i64* %bit_rate157, align 8, !dbg !6839
  %conv158 = trunc i64 %135 to i32, !dbg !6838
  %136 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6840
  %bit_rate159 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %136, i32 0, i32 15, !dbg !6841
  store i32 %conv158, i32* %bit_rate159, align 8, !dbg !6842
  %137 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6843
  %frame_size_min160 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %137, i32 0, i32 19, !dbg !6844
  %138 = load i32, i32* %frame_size_min160, align 8, !dbg !6844
  %139 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6845
  %frame_size = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %139, i32 0, i32 20, !dbg !6846
  store i32 %138, i32* %frame_size, align 4, !dbg !6847
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6848
  %cutoff = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 88, !dbg !6850
  %141 = load i32, i32* %cutoff, align 8, !dbg !6850
  %cmp161 = icmp slt i32 %141, 0, !dbg !6851
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !6852

if.then163:                                       ; preds = %if.end156
  %142 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6853
  %143 = bitcast %struct.AVCodecContext* %142 to i8*, !dbg !6853
  call void (i8*, i32, i8*, ...) @av_log(i8* %143, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i32 0, i32 0)), !dbg !6855
  store i32 -22, i32* %retval, align 4, !dbg !6856
  br label %return, !dbg !6856

if.end164:                                        ; preds = %if.end156
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6857
  %cutoff165 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %144, i32 0, i32 88, !dbg !6858
  %145 = load i32, i32* %cutoff165, align 8, !dbg !6858
  %146 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6859
  %cutoff166 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %146, i32 0, i32 39, !dbg !6860
  store i32 %145, i32* %cutoff166, align 8, !dbg !6861
  %147 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6862
  %cutoff167 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %147, i32 0, i32 39, !dbg !6864
  %148 = load i32, i32* %cutoff167, align 8, !dbg !6864
  %149 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6865
  %sample_rate168 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %149, i32 0, i32 16, !dbg !6866
  %150 = load i32, i32* %sample_rate168, align 4, !dbg !6866
  %shr169 = ashr i32 %150, 1, !dbg !6867
  %cmp170 = icmp sgt i32 %148, %shr169, !dbg !6868
  br i1 %cmp170, label %if.then172, label %if.end176, !dbg !6869

if.then172:                                       ; preds = %if.end164
  %151 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6870
  %sample_rate173 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %151, i32 0, i32 16, !dbg !6871
  %152 = load i32, i32* %sample_rate173, align 4, !dbg !6871
  %shr174 = ashr i32 %152, 1, !dbg !6872
  %153 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6873
  %cutoff175 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %153, i32 0, i32 39, !dbg !6874
  store i32 %shr174, i32* %cutoff175, align 8, !dbg !6875
  br label %if.end176, !dbg !6873

if.end176:                                        ; preds = %if.then172, %if.end164
  %154 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6876
  %call177 = call i32 @ff_ac3_validate_metadata(%struct.AC3EncodeContext* %154), !dbg !6877
  store i32 %call177, i32* %ret, align 4, !dbg !6878
  %155 = load i32, i32* %ret, align 4, !dbg !6879
  %tobool178 = icmp ne i32 %155, 0, !dbg !6879
  br i1 %tobool178, label %if.then179, label %if.end180, !dbg !6881

if.then179:                                       ; preds = %if.end176
  %156 = load i32, i32* %ret, align 4, !dbg !6882
  store i32 %156, i32* %retval, align 4, !dbg !6883
  br label %return, !dbg !6883

if.end180:                                        ; preds = %if.end176
  %157 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6884
  %options = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %157, i32 0, i32 1, !dbg !6885
  %stereo_rematrixing = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %options, i32 0, i32 23, !dbg !6886
  %158 = load i32, i32* %stereo_rematrixing, align 4, !dbg !6886
  %tobool181 = icmp ne i32 %158, 0, !dbg !6884
  br i1 %tobool181, label %land.rhs182, label %land.end185, !dbg !6887

land.rhs182:                                      ; preds = %if.end180
  %159 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6888
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %159, i32 0, i32 31, !dbg !6889
  %160 = load i32, i32* %channel_mode, align 8, !dbg !6889
  %cmp183 = icmp eq i32 %160, 2, !dbg !6890
  br label %land.end185

land.end185:                                      ; preds = %land.rhs182, %if.end180
  %161 = phi i1 [ false, %if.end180 ], [ %cmp183, %land.rhs182 ]
  %land.ext = zext i1 %161 to i32, !dbg !6891
  %162 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6892
  %rematrixing_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %162, i32 0, i32 48, !dbg !6893
  store i32 %land.ext, i32* %rematrixing_enabled, align 4, !dbg !6894
  %163 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6895
  %options186 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %163, i32 0, i32 1, !dbg !6896
  %channel_coupling = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %options186, i32 0, i32 24, !dbg !6897
  %164 = load i32, i32* %channel_coupling, align 8, !dbg !6897
  %tobool187 = icmp ne i32 %164, 0, !dbg !6895
  br i1 %tobool187, label %land.rhs188, label %land.end192, !dbg !6898

land.rhs188:                                      ; preds = %land.end185
  %165 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6899
  %channel_mode189 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %165, i32 0, i32 31, !dbg !6900
  %166 = load i32, i32* %channel_mode189, align 8, !dbg !6900
  %cmp190 = icmp sge i32 %166, 2, !dbg !6901
  br label %land.end192

land.end192:                                      ; preds = %land.rhs188, %land.end185
  %167 = phi i1 [ false, %land.end185 ], [ %cmp190, %land.rhs188 ]
  %land.ext193 = zext i1 %167 to i32, !dbg !6902
  %168 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6903
  %cpl_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %168, i32 0, i32 44, !dbg !6904
  store i32 %land.ext193, i32* %cpl_enabled, align 4, !dbg !6905
  store i32 0, i32* %retval, align 4, !dbg !6906
  br label %return, !dbg !6906

return:                                           ; preds = %land.end192, %if.then179, %if.then163, %if.then72, %if.then13, %if.then4
  %169 = load i32, i32* %retval, align 4, !dbg !6907
  ret i32 %169, !dbg !6907
}

; Function Attrs: nounwind uwtable
define internal i32 @pow_poly(i32 %a, i32 %n, i32 %poly) #0 !dbg !6908 {
entry:
  %a.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %poly.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6911, metadata !2184), !dbg !6912
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6913, metadata !2184), !dbg !6914
  store i32 %poly, i32* %poly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %poly.addr, metadata !6915, metadata !2184), !dbg !6916
  call void @llvm.dbg.declare(metadata i32* %r, metadata !6917, metadata !2184), !dbg !6918
  store i32 1, i32* %r, align 4, !dbg !6919
  br label %while.cond, !dbg !6920

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %n.addr, align 4, !dbg !6921
  %tobool = icmp ne i32 %0, 0, !dbg !6923
  br i1 %tobool, label %while.body, label %while.end, !dbg !6923

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %n.addr, align 4, !dbg !6924
  %and = and i32 %1, 1, !dbg !6927
  %tobool1 = icmp ne i32 %and, 0, !dbg !6927
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6928

if.then:                                          ; preds = %while.body
  %2 = load i32, i32* %r, align 4, !dbg !6929
  %3 = load i32, i32* %a.addr, align 4, !dbg !6930
  %4 = load i32, i32* %poly.addr, align 4, !dbg !6931
  %call = call i32 @mul_poly(i32 %2, i32 %3, i32 %4), !dbg !6932
  store i32 %call, i32* %r, align 4, !dbg !6933
  br label %if.end, !dbg !6934

if.end:                                           ; preds = %if.then, %while.body
  %5 = load i32, i32* %a.addr, align 4, !dbg !6935
  %6 = load i32, i32* %a.addr, align 4, !dbg !6936
  %7 = load i32, i32* %poly.addr, align 4, !dbg !6937
  %call2 = call i32 @mul_poly(i32 %5, i32 %6, i32 %7), !dbg !6938
  store i32 %call2, i32* %a.addr, align 4, !dbg !6939
  %8 = load i32, i32* %n.addr, align 4, !dbg !6940
  %shr = lshr i32 %8, 1, !dbg !6940
  store i32 %shr, i32* %n.addr, align 4, !dbg !6940
  br label %while.cond, !dbg !6941, !llvm.loop !6943

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %r, align 4, !dbg !6944
  ret i32 %9, !dbg !6945
}

declare void @ff_ac3_fixed_mdct_end(%struct.AC3EncodeContext*) #4

declare i32 @ff_ac3_fixed_mdct_init(%struct.AC3EncodeContext*) #4

declare i32 @ff_ac3_fixed_allocate_sample_buffers(%struct.AC3EncodeContext*) #4

declare void @ff_ac3_float_mdct_end(%struct.AC3EncodeContext*) #4

declare i32 @ff_ac3_float_mdct_init(%struct.AC3EncodeContext*) #4

declare i32 @ff_ac3_float_allocate_sample_buffers(%struct.AC3EncodeContext*) #4

declare void @ff_eac3_output_frame_header(%struct.AC3EncodeContext*) #4

; Function Attrs: nounwind uwtable
define internal void @ac3_output_frame_header(%struct.AC3EncodeContext* %s) #0 !dbg !6946 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %opt = alloca %struct.AC3EncOptions*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !6947, metadata !2184), !dbg !6948
  call void @llvm.dbg.declare(metadata %struct.AC3EncOptions** %opt, metadata !6949, metadata !2184), !dbg !6950
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6951
  %options = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 1, !dbg !6952
  store %struct.AC3EncOptions* %options, %struct.AC3EncOptions** %opt, align 8, !dbg !6950
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6953
  %pb = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 3, !dbg !6954
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 2935), !dbg !6955
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6956
  %pb1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 3, !dbg !6957
  call void @put_bits(%struct.PutBitContext* %pb1, i32 16, i32 0), !dbg !6958
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6959
  %pb2 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 3, !dbg !6960
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6961
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 54, !dbg !6962
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 0, !dbg !6963
  %5 = load i32, i32* %sr_code, align 4, !dbg !6963
  call void @put_bits(%struct.PutBitContext* %pb2, i32 2, i32 %5), !dbg !6964
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6965
  %pb3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 3, !dbg !6966
  %7 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6967
  %frame_size_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %7, i32 0, i32 21, !dbg !6968
  %8 = load i32, i32* %frame_size_code, align 8, !dbg !6968
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6969
  %frame_size = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 20, !dbg !6970
  %10 = load i32, i32* %frame_size, align 4, !dbg !6970
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6971
  %frame_size_min = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 19, !dbg !6972
  %12 = load i32, i32* %frame_size_min, align 8, !dbg !6972
  %sub = sub nsw i32 %10, %12, !dbg !6973
  %div = sdiv i32 %sub, 2, !dbg !6974
  %add = add nsw i32 %8, %div, !dbg !6975
  call void @put_bits(%struct.PutBitContext* %pb3, i32 6, i32 %add), !dbg !6976
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6977
  %pb4 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 3, !dbg !6978
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6979
  %bitstream_id = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 13, !dbg !6980
  %15 = load i32, i32* %bitstream_id, align 8, !dbg !6980
  call void @put_bits(%struct.PutBitContext* %pb4, i32 5, i32 %15), !dbg !6981
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6982
  %pb5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 3, !dbg !6983
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6984
  %bitstream_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 14, !dbg !6985
  %18 = load i32, i32* %bitstream_mode, align 4, !dbg !6985
  call void @put_bits(%struct.PutBitContext* %pb5, i32 3, i32 %18), !dbg !6986
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6987
  %pb6 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 3, !dbg !6988
  %20 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6989
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %20, i32 0, i32 31, !dbg !6990
  %21 = load i32, i32* %channel_mode, align 8, !dbg !6990
  call void @put_bits(%struct.PutBitContext* %pb6, i32 3, i32 %21), !dbg !6991
  %22 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6992
  %channel_mode7 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %22, i32 0, i32 31, !dbg !6994
  %23 = load i32, i32* %channel_mode7, align 8, !dbg !6994
  %and = and i32 %23, 1, !dbg !6995
  %tobool = icmp ne i32 %and, 0, !dbg !6995
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6996

land.lhs.true:                                    ; preds = %entry
  %24 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !6997
  %channel_mode8 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %24, i32 0, i32 31, !dbg !6999
  %25 = load i32, i32* %channel_mode8, align 8, !dbg !6999
  %cmp = icmp ne i32 %25, 1, !dbg !7000
  br i1 %cmp, label %if.then, label %if.end, !dbg !7001

if.then:                                          ; preds = %land.lhs.true
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7002
  %pb9 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 3, !dbg !7003
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7004
  %center_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 33, !dbg !7005
  %28 = load i32, i32* %center_mix_level, align 8, !dbg !7005
  call void @put_bits(%struct.PutBitContext* %pb9, i32 2, i32 %28), !dbg !7006
  br label %if.end, !dbg !7006

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7007
  %channel_mode10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 31, !dbg !7009
  %30 = load i32, i32* %channel_mode10, align 8, !dbg !7009
  %and11 = and i32 %30, 4, !dbg !7010
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7010
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7011

if.then13:                                        ; preds = %if.end
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7012
  %pb14 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 3, !dbg !7013
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7014
  %surround_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 34, !dbg !7015
  %33 = load i32, i32* %surround_mix_level, align 4, !dbg !7015
  call void @put_bits(%struct.PutBitContext* %pb14, i32 2, i32 %33), !dbg !7016
  br label %if.end15, !dbg !7016

if.end15:                                         ; preds = %if.then13, %if.end
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7017
  %channel_mode16 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 31, !dbg !7019
  %35 = load i32, i32* %channel_mode16, align 8, !dbg !7019
  %cmp17 = icmp eq i32 %35, 2, !dbg !7020
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !7021

if.then18:                                        ; preds = %if.end15
  %36 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7022
  %pb19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %36, i32 0, i32 3, !dbg !7023
  %37 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7024
  %dolby_surround_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %37, i32 0, i32 4, !dbg !7025
  %38 = load i32, i32* %dolby_surround_mode, align 4, !dbg !7025
  call void @put_bits(%struct.PutBitContext* %pb19, i32 2, i32 %38), !dbg !7026
  br label %if.end20, !dbg !7026

if.end20:                                         ; preds = %if.then18, %if.end15
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7027
  %pb21 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 3, !dbg !7028
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7029
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 27, !dbg !7030
  %41 = load i32, i32* %lfe_on, align 8, !dbg !7030
  call void @put_bits(%struct.PutBitContext* %pb21, i32 1, i32 %41), !dbg !7031
  %42 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7032
  %pb22 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %42, i32 0, i32 3, !dbg !7033
  %43 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7034
  %dialogue_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %43, i32 0, i32 0, !dbg !7035
  %44 = load i32, i32* %dialogue_level, align 4, !dbg !7035
  %sub23 = sub nsw i32 0, %44, !dbg !7036
  call void @put_bits(%struct.PutBitContext* %pb22, i32 5, i32 %sub23), !dbg !7037
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7038
  %pb24 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 3, !dbg !7039
  call void @put_bits(%struct.PutBitContext* %pb24, i32 1, i32 0), !dbg !7040
  %46 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7041
  %pb25 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %46, i32 0, i32 3, !dbg !7042
  call void @put_bits(%struct.PutBitContext* %pb25, i32 1, i32 0), !dbg !7043
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7044
  %pb26 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 3, !dbg !7045
  %48 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7046
  %audio_production_info = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %48, i32 0, i32 5, !dbg !7047
  %49 = load i32, i32* %audio_production_info, align 4, !dbg !7047
  call void @put_bits(%struct.PutBitContext* %pb26, i32 1, i32 %49), !dbg !7048
  %50 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7049
  %audio_production_info27 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %50, i32 0, i32 5, !dbg !7051
  %51 = load i32, i32* %audio_production_info27, align 4, !dbg !7051
  %tobool28 = icmp ne i32 %51, 0, !dbg !7049
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !7052

if.then29:                                        ; preds = %if.end20
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7053
  %pb30 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 3, !dbg !7055
  %53 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7056
  %mixing_level = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %53, i32 0, i32 6, !dbg !7057
  %54 = load i32, i32* %mixing_level, align 4, !dbg !7057
  %sub31 = sub nsw i32 %54, 80, !dbg !7058
  call void @put_bits(%struct.PutBitContext* %pb30, i32 5, i32 %sub31), !dbg !7059
  %55 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7060
  %pb32 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %55, i32 0, i32 3, !dbg !7061
  %56 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7062
  %room_type = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %56, i32 0, i32 7, !dbg !7063
  %57 = load i32, i32* %room_type, align 4, !dbg !7063
  call void @put_bits(%struct.PutBitContext* %pb32, i32 2, i32 %57), !dbg !7064
  br label %if.end33, !dbg !7065

if.end33:                                         ; preds = %if.then29, %if.end20
  %58 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7066
  %pb34 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %58, i32 0, i32 3, !dbg !7067
  %59 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7068
  %copyright = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %59, i32 0, i32 8, !dbg !7069
  %60 = load i32, i32* %copyright, align 4, !dbg !7069
  call void @put_bits(%struct.PutBitContext* %pb34, i32 1, i32 %60), !dbg !7070
  %61 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7071
  %pb35 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %61, i32 0, i32 3, !dbg !7072
  %62 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7073
  %original = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %62, i32 0, i32 9, !dbg !7074
  %63 = load i32, i32* %original, align 4, !dbg !7074
  call void @put_bits(%struct.PutBitContext* %pb35, i32 1, i32 %63), !dbg !7075
  %64 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7076
  %bitstream_id36 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %64, i32 0, i32 13, !dbg !7078
  %65 = load i32, i32* %bitstream_id36, align 8, !dbg !7078
  %cmp37 = icmp eq i32 %65, 6, !dbg !7079
  br i1 %cmp37, label %if.then38, label %if.else, !dbg !7080

if.then38:                                        ; preds = %if.end33
  %66 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7081
  %pb39 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %66, i32 0, i32 3, !dbg !7083
  %67 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7084
  %extended_bsi_1 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %67, i32 0, i32 10, !dbg !7085
  %68 = load i32, i32* %extended_bsi_1, align 4, !dbg !7085
  call void @put_bits(%struct.PutBitContext* %pb39, i32 1, i32 %68), !dbg !7086
  %69 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7087
  %extended_bsi_140 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %69, i32 0, i32 10, !dbg !7089
  %70 = load i32, i32* %extended_bsi_140, align 4, !dbg !7089
  %tobool41 = icmp ne i32 %70, 0, !dbg !7087
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !7090

if.then42:                                        ; preds = %if.then38
  %71 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7091
  %pb43 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %71, i32 0, i32 3, !dbg !7093
  %72 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7094
  %preferred_stereo_downmix = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %72, i32 0, i32 11, !dbg !7095
  %73 = load i32, i32* %preferred_stereo_downmix, align 4, !dbg !7095
  call void @put_bits(%struct.PutBitContext* %pb43, i32 2, i32 %73), !dbg !7096
  %74 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7097
  %pb44 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %74, i32 0, i32 3, !dbg !7098
  %75 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7099
  %ltrt_center_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %75, i32 0, i32 35, !dbg !7100
  %76 = load i32, i32* %ltrt_center_mix_level, align 8, !dbg !7100
  call void @put_bits(%struct.PutBitContext* %pb44, i32 3, i32 %76), !dbg !7101
  %77 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7102
  %pb45 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %77, i32 0, i32 3, !dbg !7103
  %78 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7104
  %ltrt_surround_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %78, i32 0, i32 36, !dbg !7105
  %79 = load i32, i32* %ltrt_surround_mix_level, align 4, !dbg !7105
  call void @put_bits(%struct.PutBitContext* %pb45, i32 3, i32 %79), !dbg !7106
  %80 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7107
  %pb46 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %80, i32 0, i32 3, !dbg !7108
  %81 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7109
  %loro_center_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %81, i32 0, i32 37, !dbg !7110
  %82 = load i32, i32* %loro_center_mix_level, align 8, !dbg !7110
  call void @put_bits(%struct.PutBitContext* %pb46, i32 3, i32 %82), !dbg !7111
  %83 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7112
  %pb47 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %83, i32 0, i32 3, !dbg !7113
  %84 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7114
  %loro_surround_mix_level = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %84, i32 0, i32 38, !dbg !7115
  %85 = load i32, i32* %loro_surround_mix_level, align 4, !dbg !7115
  call void @put_bits(%struct.PutBitContext* %pb47, i32 3, i32 %85), !dbg !7116
  br label %if.end48, !dbg !7117

if.end48:                                         ; preds = %if.then42, %if.then38
  %86 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7118
  %pb49 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %86, i32 0, i32 3, !dbg !7119
  %87 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7120
  %extended_bsi_2 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %87, i32 0, i32 16, !dbg !7121
  %88 = load i32, i32* %extended_bsi_2, align 4, !dbg !7121
  call void @put_bits(%struct.PutBitContext* %pb49, i32 1, i32 %88), !dbg !7122
  %89 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7123
  %extended_bsi_250 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %89, i32 0, i32 16, !dbg !7125
  %90 = load i32, i32* %extended_bsi_250, align 4, !dbg !7125
  %tobool51 = icmp ne i32 %90, 0, !dbg !7123
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !7126

if.then52:                                        ; preds = %if.end48
  %91 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7127
  %pb53 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %91, i32 0, i32 3, !dbg !7129
  %92 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7130
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %92, i32 0, i32 17, !dbg !7131
  %93 = load i32, i32* %dolby_surround_ex_mode, align 4, !dbg !7131
  call void @put_bits(%struct.PutBitContext* %pb53, i32 2, i32 %93), !dbg !7132
  %94 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7133
  %pb54 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %94, i32 0, i32 3, !dbg !7134
  %95 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7135
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %95, i32 0, i32 18, !dbg !7136
  %96 = load i32, i32* %dolby_headphone_mode, align 4, !dbg !7136
  call void @put_bits(%struct.PutBitContext* %pb54, i32 2, i32 %96), !dbg !7137
  %97 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7138
  %pb55 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %97, i32 0, i32 3, !dbg !7139
  %98 = load %struct.AC3EncOptions*, %struct.AC3EncOptions** %opt, align 8, !dbg !7140
  %ad_converter_type = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %98, i32 0, i32 19, !dbg !7141
  %99 = load i32, i32* %ad_converter_type, align 4, !dbg !7141
  call void @put_bits(%struct.PutBitContext* %pb55, i32 1, i32 %99), !dbg !7142
  %100 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7143
  %pb56 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %100, i32 0, i32 3, !dbg !7144
  call void @put_bits(%struct.PutBitContext* %pb56, i32 9, i32 0), !dbg !7145
  br label %if.end57, !dbg !7146

if.end57:                                         ; preds = %if.then52, %if.end48
  br label %if.end60, !dbg !7147

if.else:                                          ; preds = %if.end33
  %101 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7148
  %pb58 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %101, i32 0, i32 3, !dbg !7150
  call void @put_bits(%struct.PutBitContext* %pb58, i32 1, i32 0), !dbg !7151
  %102 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7152
  %pb59 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %102, i32 0, i32 3, !dbg !7153
  call void @put_bits(%struct.PutBitContext* %pb59, i32 1, i32 0), !dbg !7154
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.end57
  %103 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7155
  %pb61 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %103, i32 0, i32 3, !dbg !7156
  call void @put_bits(%struct.PutBitContext* %pb61, i32 1, i32 0), !dbg !7157
  ret void, !dbg !7158
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @set_bandwidth(%struct.AC3EncodeContext* %s) #5 !dbg !7159 {
entry:
  %retval.i135 = alloca i32, align 4
  %a.addr.i136 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i136, metadata !7160, metadata !2184), !dbg !7165
  %amin.addr.i137 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i137, metadata !7170, metadata !2184), !dbg !7171
  %amax.addr.i138 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i138, metadata !7172, metadata !2184), !dbg !7173
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7160, metadata !2184), !dbg !7174
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !7170, metadata !2184), !dbg !7178
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !7172, metadata !2184), !dbg !7179
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %cpl_start = alloca i32, align 4
  %fbw_coeffs = alloca i32, align 4
  %i = alloca i32, align 4
  %cpl_start_band = alloca i32, align 4
  %cpl_end_band = alloca i32, align 4
  %cpl_band_sizes = alloca i8*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !7180, metadata !2184), !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !7182, metadata !2184), !dbg !7183
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7184, metadata !2184), !dbg !7185
  call void @llvm.dbg.declare(metadata i32* %cpl_start, metadata !7186, metadata !2184), !dbg !7187
  %0 = load i32, i32* %cpl_start, align 4, !dbg !7188
  store i32 %0, i32* %cpl_start, align 4, !dbg !7187
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7189
  %cutoff = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 39, !dbg !7190
  %2 = load i32, i32* %cutoff, align 8, !dbg !7190
  %tobool = icmp ne i32 %2, 0, !dbg !7189
  br i1 %tobool, label %if.then, label %if.else, !dbg !7191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fbw_coeffs, metadata !7192, metadata !2184), !dbg !7193
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7194
  %cutoff1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 39, !dbg !7195
  %4 = load i32, i32* %cutoff1, align 8, !dbg !7195
  %mul = mul nsw i32 %4, 2, !dbg !7196
  %mul2 = mul nsw i32 %mul, 256, !dbg !7197
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7198
  %sample_rate = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 16, !dbg !7199
  %6 = load i32, i32* %sample_rate, align 4, !dbg !7199
  %div = sdiv i32 %mul2, %6, !dbg !7200
  store i32 %div, i32* %fbw_coeffs, align 4, !dbg !7201
  %7 = load i32, i32* %fbw_coeffs, align 4, !dbg !7202
  %sub = sub nsw i32 %7, 73, !dbg !7203
  %div3 = sdiv i32 %sub, 3, !dbg !7204
  store i32 %div3, i32* %a.addr.i, align 4, !dbg !7205
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7205
  store i32 60, i32* %amax.addr.i, align 4, !dbg !7205
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !7206
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !7208
  %cmp.i = icmp slt i32 %8, %9, !dbg !7209
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7210

if.then.i:                                        ; preds = %if.then
  %10 = load i32, i32* %amin.addr.i, align 4, !dbg !7211
  store i32 %10, i32* %retval.i, align 4, !dbg !7213
  br label %av_clip_c.exit, !dbg !7213

if.else.i:                                        ; preds = %if.then
  %11 = load i32, i32* %a.addr.i, align 4, !dbg !7214
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !7216
  %cmp1.i = icmp sgt i32 %11, %12, !dbg !7217
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7218

if.then2.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %amax.addr.i, align 4, !dbg !7219
  store i32 %13, i32* %retval.i, align 4, !dbg !7221
  br label %av_clip_c.exit, !dbg !7221

if.else3.i:                                       ; preds = %if.else.i
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !7222
  store i32 %14, i32* %retval.i, align 4, !dbg !7223
  br label %av_clip_c.exit, !dbg !7223

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %15 = load i32, i32* %retval.i, align 4, !dbg !7224
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7225
  %bandwidth_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 40, !dbg !7226
  store i32 %15, i32* %bandwidth_code, align 4, !dbg !7227
  br label %if.end, !dbg !7228

if.else:                                          ; preds = %entry
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7229
  %frame_size_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 21, !dbg !7231
  %18 = load i32, i32* %frame_size_code, align 8, !dbg !7231
  %div4 = sdiv i32 %18, 2, !dbg !7232
  %idxprom = sext i32 %div4 to i64, !dbg !7233
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7234
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 54, !dbg !7235
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 0, !dbg !7236
  %20 = load i32, i32* %sr_code, align 4, !dbg !7236
  %idxprom5 = sext i32 %20 to i64, !dbg !7233
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7237
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 25, !dbg !7238
  %22 = load i32, i32* %fbw_channels, align 8, !dbg !7238
  %sub6 = sub nsw i32 %22, 1, !dbg !7239
  %idxprom7 = sext i32 %sub6 to i64, !dbg !7233
  %arrayidx = getelementptr inbounds [5 x [3 x [19 x i8]]], [5 x [3 x [19 x i8]]]* @ac3_bandwidth_tab, i64 0, i64 %idxprom7, !dbg !7233
  %arrayidx8 = getelementptr inbounds [3 x [19 x i8]], [3 x [19 x i8]]* %arrayidx, i64 0, i64 %idxprom5, !dbg !7233
  %arrayidx9 = getelementptr inbounds [19 x i8], [19 x i8]* %arrayidx8, i64 0, i64 %idxprom, !dbg !7233
  %23 = load i8, i8* %arrayidx9, align 1, !dbg !7233
  %conv = zext i8 %23 to i32, !dbg !7233
  %24 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7240
  %bandwidth_code10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %24, i32 0, i32 40, !dbg !7241
  store i32 %conv, i32* %bandwidth_code10, align 4, !dbg !7242
  br label %if.end

if.end:                                           ; preds = %if.else, %av_clip_c.exit
  store i32 1, i32* %ch, align 4, !dbg !7243
  br label %for.cond, !dbg !7245

for.cond:                                         ; preds = %for.inc25, %if.end
  %25 = load i32, i32* %ch, align 4, !dbg !7246
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7249
  %fbw_channels11 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 25, !dbg !7250
  %27 = load i32, i32* %fbw_channels11, align 8, !dbg !7250
  %cmp = icmp sle i32 %25, %27, !dbg !7251
  br i1 %cmp, label %for.body, label %for.end27, !dbg !7252

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %ch, align 4, !dbg !7253
  %idxprom13 = sext i32 %28 to i64, !dbg !7255
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7255
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 41, !dbg !7256
  %arrayidx14 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom13, !dbg !7255
  store i32 0, i32* %arrayidx14, align 4, !dbg !7257
  store i32 0, i32* %blk, align 4, !dbg !7258
  br label %for.cond15, !dbg !7260

for.cond15:                                       ; preds = %for.inc, %for.body
  %30 = load i32, i32* %blk, align 4, !dbg !7261
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7264
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 18, !dbg !7265
  %32 = load i32, i32* %num_blocks, align 4, !dbg !7265
  %cmp16 = icmp slt i32 %30, %32, !dbg !7266
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !7267

for.body18:                                       ; preds = %for.cond15
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7268
  %bandwidth_code19 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 40, !dbg !7269
  %34 = load i32, i32* %bandwidth_code19, align 4, !dbg !7269
  %mul20 = mul nsw i32 %34, 3, !dbg !7270
  %add = add nsw i32 %mul20, 73, !dbg !7271
  %35 = load i32, i32* %ch, align 4, !dbg !7272
  %idxprom21 = sext i32 %35 to i64, !dbg !7273
  %36 = load i32, i32* %blk, align 4, !dbg !7274
  %idxprom22 = sext i32 %36 to i64, !dbg !7273
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7273
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 10, !dbg !7275
  %arrayidx23 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom22, !dbg !7273
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx23, i32 0, i32 22, !dbg !7276
  %arrayidx24 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom21, !dbg !7273
  store i32 %add, i32* %arrayidx24, align 4, !dbg !7277
  br label %for.inc, !dbg !7273

for.inc:                                          ; preds = %for.body18
  %38 = load i32, i32* %blk, align 4, !dbg !7278
  %inc = add nsw i32 %38, 1, !dbg !7278
  store i32 %inc, i32* %blk, align 4, !dbg !7278
  br label %for.cond15, !dbg !7280, !llvm.loop !7281

for.end:                                          ; preds = %for.cond15
  br label %for.inc25, !dbg !7283

for.inc25:                                        ; preds = %for.end
  %39 = load i32, i32* %ch, align 4, !dbg !7284
  %inc26 = add nsw i32 %39, 1, !dbg !7284
  store i32 %inc26, i32* %ch, align 4, !dbg !7284
  br label %for.cond, !dbg !7286, !llvm.loop !7287

for.end27:                                        ; preds = %for.cond
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7289
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 27, !dbg !7291
  %41 = load i32, i32* %lfe_on, align 8, !dbg !7291
  %tobool28 = icmp ne i32 %41, 0, !dbg !7289
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !7292

if.then29:                                        ; preds = %for.end27
  %42 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7293
  %lfe_channel = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %42, i32 0, i32 28, !dbg !7295
  %43 = load i32, i32* %lfe_channel, align 4, !dbg !7295
  %idxprom30 = sext i32 %43 to i64, !dbg !7296
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7296
  %start_freq31 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 41, !dbg !7297
  %arrayidx32 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq31, i64 0, i64 %idxprom30, !dbg !7296
  store i32 0, i32* %arrayidx32, align 4, !dbg !7298
  store i32 0, i32* %blk, align 4, !dbg !7299
  br label %for.cond33, !dbg !7301

for.cond33:                                       ; preds = %for.inc44, %if.then29
  %45 = load i32, i32* %blk, align 4, !dbg !7302
  %46 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7305
  %num_blocks34 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %46, i32 0, i32 18, !dbg !7306
  %47 = load i32, i32* %num_blocks34, align 4, !dbg !7306
  %cmp35 = icmp slt i32 %45, %47, !dbg !7307
  br i1 %cmp35, label %for.body37, label %for.end46, !dbg !7308

for.body37:                                       ; preds = %for.cond33
  %48 = load i32, i32* %ch, align 4, !dbg !7309
  %idxprom38 = sext i32 %48 to i64, !dbg !7310
  %49 = load i32, i32* %blk, align 4, !dbg !7311
  %idxprom39 = sext i32 %49 to i64, !dbg !7310
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7310
  %blocks40 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 10, !dbg !7312
  %arrayidx41 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks40, i64 0, i64 %idxprom39, !dbg !7310
  %end_freq42 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx41, i32 0, i32 22, !dbg !7313
  %arrayidx43 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq42, i64 0, i64 %idxprom38, !dbg !7310
  store i32 7, i32* %arrayidx43, align 4, !dbg !7314
  br label %for.inc44, !dbg !7310

for.inc44:                                        ; preds = %for.body37
  %51 = load i32, i32* %blk, align 4, !dbg !7315
  %inc45 = add nsw i32 %51, 1, !dbg !7315
  store i32 %inc45, i32* %blk, align 4, !dbg !7315
  br label %for.cond33, !dbg !7317, !llvm.loop !7318

for.end46:                                        ; preds = %for.cond33
  br label %if.end47, !dbg !7320

if.end47:                                         ; preds = %for.end46, %for.end27
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7321
  %cpl_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 44, !dbg !7323
  %53 = load i32, i32* %cpl_enabled, align 4, !dbg !7323
  %tobool48 = icmp ne i32 %53, 0, !dbg !7321
  br i1 %tobool48, label %if.then49, label %if.end81, !dbg !7324

if.then49:                                        ; preds = %if.end47
  %54 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7325
  %options = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %54, i32 0, i32 1, !dbg !7328
  %cpl_start50 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %options, i32 0, i32 25, !dbg !7329
  %55 = load i32, i32* %cpl_start50, align 4, !dbg !7329
  %cmp51 = icmp ne i32 %55, -1, !dbg !7330
  br i1 %cmp51, label %if.then53, label %if.else56, !dbg !7331

if.then53:                                        ; preds = %if.then49
  %56 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7332
  %options54 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %56, i32 0, i32 1, !dbg !7334
  %cpl_start55 = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %options54, i32 0, i32 25, !dbg !7335
  %57 = load i32, i32* %cpl_start55, align 4, !dbg !7335
  store i32 %57, i32* %cpl_start, align 4, !dbg !7336
  br label %if.end80, !dbg !7337

if.else56:                                        ; preds = %if.then49
  %58 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7338
  %frame_size_code57 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %58, i32 0, i32 21, !dbg !7340
  %59 = load i32, i32* %frame_size_code57, align 8, !dbg !7340
  %div58 = sdiv i32 %59, 2, !dbg !7341
  %idxprom59 = sext i32 %div58 to i64, !dbg !7342
  %60 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7343
  %bit_alloc60 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %60, i32 0, i32 54, !dbg !7344
  %sr_code61 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc60, i32 0, i32 0, !dbg !7345
  %61 = load i32, i32* %sr_code61, align 4, !dbg !7345
  %idxprom62 = sext i32 %61 to i64, !dbg !7342
  %62 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7346
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %62, i32 0, i32 31, !dbg !7347
  %63 = load i32, i32* %channel_mode, align 8, !dbg !7347
  %sub63 = sub nsw i32 %63, 2, !dbg !7348
  %idxprom64 = sext i32 %sub63 to i64, !dbg !7342
  %arrayidx65 = getelementptr inbounds [6 x [3 x [19 x i8]]], [6 x [3 x [19 x i8]]]* @ac3_coupling_start_tab, i64 0, i64 %idxprom64, !dbg !7342
  %arrayidx66 = getelementptr inbounds [3 x [19 x i8]], [3 x [19 x i8]]* %arrayidx65, i64 0, i64 %idxprom62, !dbg !7342
  %arrayidx67 = getelementptr inbounds [19 x i8], [19 x i8]* %arrayidx66, i64 0, i64 %idxprom59, !dbg !7342
  %64 = load i8, i8* %arrayidx67, align 1, !dbg !7342
  %conv68 = sext i8 %64 to i32, !dbg !7342
  store i32 %conv68, i32* %cpl_start, align 4, !dbg !7349
  %65 = load i32, i32* %cpl_start, align 4, !dbg !7350
  %cmp69 = icmp slt i32 %65, 0, !dbg !7352
  br i1 %cmp69, label %if.then71, label %if.end79, !dbg !7353

if.then71:                                        ; preds = %if.else56
  %66 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7354
  %options72 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %66, i32 0, i32 1, !dbg !7357
  %channel_coupling = getelementptr inbounds %struct.AC3EncOptions, %struct.AC3EncOptions* %options72, i32 0, i32 24, !dbg !7358
  %67 = load i32, i32* %channel_coupling, align 8, !dbg !7358
  %cmp73 = icmp eq i32 %67, -1, !dbg !7359
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !7360

if.then75:                                        ; preds = %if.then71
  %68 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7361
  %cpl_enabled76 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %68, i32 0, i32 44, !dbg !7362
  store i32 0, i32* %cpl_enabled76, align 4, !dbg !7363
  br label %if.end78, !dbg !7361

if.else77:                                        ; preds = %if.then71
  store i32 15, i32* %cpl_start, align 4, !dbg !7364
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then75
  br label %if.end79, !dbg !7365

if.end79:                                         ; preds = %if.end78, %if.else56
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then53
  br label %if.end81, !dbg !7366

if.end81:                                         ; preds = %if.end80, %if.end47
  %69 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7367
  %cpl_enabled82 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %69, i32 0, i32 44, !dbg !7368
  %70 = load i32, i32* %cpl_enabled82, align 4, !dbg !7368
  %tobool83 = icmp ne i32 %70, 0, !dbg !7367
  br i1 %tobool83, label %if.then84, label %if.end134, !dbg !7369

if.then84:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7370, metadata !2184), !dbg !7371
  call void @llvm.dbg.declare(metadata i32* %cpl_start_band, metadata !7372, metadata !2184), !dbg !7373
  call void @llvm.dbg.declare(metadata i32* %cpl_end_band, metadata !7374, metadata !2184), !dbg !7375
  call void @llvm.dbg.declare(metadata i8** %cpl_band_sizes, metadata !7376, metadata !2184), !dbg !7377
  %71 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7378
  %cpl_band_sizes85 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %71, i32 0, i32 47, !dbg !7379
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_sizes85, i32 0, i32 0, !dbg !7378
  store i8* %arraydecay, i8** %cpl_band_sizes, align 8, !dbg !7377
  %72 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7380
  %bandwidth_code86 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %72, i32 0, i32 40, !dbg !7381
  %73 = load i32, i32* %bandwidth_code86, align 4, !dbg !7381
  %div87 = sdiv i32 %73, 4, !dbg !7382
  %add88 = add nsw i32 %div87, 3, !dbg !7383
  store i32 %add88, i32* %cpl_end_band, align 4, !dbg !7384
  %74 = load i32, i32* %cpl_start, align 4, !dbg !7385
  %75 = load i32, i32* %cpl_end_band, align 4, !dbg !7386
  %sub89 = sub nsw i32 %75, 1, !dbg !7387
  %cmp90 = icmp sgt i32 %sub89, 15, !dbg !7388
  br i1 %cmp90, label %cond.true, label %cond.false, !dbg !7389

cond.true:                                        ; preds = %if.then84
  br label %cond.end, !dbg !7390

cond.false:                                       ; preds = %if.then84
  %76 = load i32, i32* %cpl_end_band, align 4, !dbg !7392
  %sub92 = sub nsw i32 %76, 1, !dbg !7394
  br label %cond.end, !dbg !7395

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 15, %cond.true ], [ %sub92, %cond.false ], !dbg !7396
  store i32 %74, i32* %a.addr.i136, align 4, !dbg !7397
  store i32 0, i32* %amin.addr.i137, align 4, !dbg !7397
  store i32 %cond, i32* %amax.addr.i138, align 4, !dbg !7397
  %77 = load i32, i32* %a.addr.i136, align 4, !dbg !7398
  %78 = load i32, i32* %amin.addr.i137, align 4, !dbg !7399
  %cmp.i139 = icmp slt i32 %77, %78, !dbg !7400
  br i1 %cmp.i139, label %if.then.i140, label %if.else.i142, !dbg !7401

if.then.i140:                                     ; preds = %cond.end
  %79 = load i32, i32* %amin.addr.i137, align 4, !dbg !7402
  store i32 %79, i32* %retval.i135, align 4, !dbg !7403
  br label %av_clip_c.exit145, !dbg !7403

if.else.i142:                                     ; preds = %cond.end
  %80 = load i32, i32* %a.addr.i136, align 4, !dbg !7404
  %81 = load i32, i32* %amax.addr.i138, align 4, !dbg !7405
  %cmp1.i141 = icmp sgt i32 %80, %81, !dbg !7406
  br i1 %cmp1.i141, label %if.then2.i143, label %if.else3.i144, !dbg !7407

if.then2.i143:                                    ; preds = %if.else.i142
  %82 = load i32, i32* %amax.addr.i138, align 4, !dbg !7408
  store i32 %82, i32* %retval.i135, align 4, !dbg !7409
  br label %av_clip_c.exit145, !dbg !7409

if.else3.i144:                                    ; preds = %if.else.i142
  %83 = load i32, i32* %a.addr.i136, align 4, !dbg !7410
  store i32 %83, i32* %retval.i135, align 4, !dbg !7411
  br label %av_clip_c.exit145, !dbg !7411

av_clip_c.exit145:                                ; preds = %if.then.i140, %if.then2.i143, %if.else3.i144
  %84 = load i32, i32* %retval.i135, align 4, !dbg !7412
  store i32 %84, i32* %cpl_start_band, align 4, !dbg !7413
  %85 = load i32, i32* %cpl_end_band, align 4, !dbg !7414
  %86 = load i32, i32* %cpl_start_band, align 4, !dbg !7415
  %sub94 = sub nsw i32 %85, %86, !dbg !7416
  %87 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7417
  %num_cpl_subbands = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %87, i32 0, i32 45, !dbg !7418
  store i32 %sub94, i32* %num_cpl_subbands, align 8, !dbg !7419
  %88 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7420
  %num_cpl_bands = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %88, i32 0, i32 46, !dbg !7421
  store i32 1, i32* %num_cpl_bands, align 4, !dbg !7422
  %89 = load i8*, i8** %cpl_band_sizes, align 8, !dbg !7423
  store i8 12, i8* %89, align 1, !dbg !7424
  %90 = load i32, i32* %cpl_start_band, align 4, !dbg !7425
  %add95 = add nsw i32 %90, 1, !dbg !7427
  store i32 %add95, i32* %i, align 4, !dbg !7428
  br label %for.cond96, !dbg !7429

for.cond96:                                       ; preds = %for.inc111, %av_clip_c.exit145
  %91 = load i32, i32* %i, align 4, !dbg !7430
  %92 = load i32, i32* %cpl_end_band, align 4, !dbg !7433
  %cmp97 = icmp slt i32 %91, %92, !dbg !7434
  br i1 %cmp97, label %for.body99, label %for.end113, !dbg !7435

for.body99:                                       ; preds = %for.cond96
  %93 = load i32, i32* %i, align 4, !dbg !7436
  %idxprom100 = sext i32 %93 to i64, !dbg !7439
  %arrayidx101 = getelementptr inbounds [18 x i8], [18 x i8]* @ff_eac3_default_cpl_band_struct, i64 0, i64 %idxprom100, !dbg !7439
  %94 = load i8, i8* %arrayidx101, align 1, !dbg !7439
  %tobool102 = icmp ne i8 %94, 0, !dbg !7439
  br i1 %tobool102, label %if.then103, label %if.else107, !dbg !7440

if.then103:                                       ; preds = %for.body99
  %95 = load i8*, i8** %cpl_band_sizes, align 8, !dbg !7441
  %96 = load i8, i8* %95, align 1, !dbg !7443
  %conv104 = zext i8 %96 to i32, !dbg !7443
  %add105 = add nsw i32 %conv104, 12, !dbg !7443
  %conv106 = trunc i32 %add105 to i8, !dbg !7443
  store i8 %conv106, i8* %95, align 1, !dbg !7443
  br label %if.end110, !dbg !7444

if.else107:                                       ; preds = %for.body99
  %97 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7445
  %num_cpl_bands108 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %97, i32 0, i32 46, !dbg !7447
  %98 = load i32, i32* %num_cpl_bands108, align 4, !dbg !7448
  %inc109 = add nsw i32 %98, 1, !dbg !7448
  store i32 %inc109, i32* %num_cpl_bands108, align 4, !dbg !7448
  %99 = load i8*, i8** %cpl_band_sizes, align 8, !dbg !7449
  %incdec.ptr = getelementptr inbounds i8, i8* %99, i32 1, !dbg !7449
  store i8* %incdec.ptr, i8** %cpl_band_sizes, align 8, !dbg !7449
  %100 = load i8*, i8** %cpl_band_sizes, align 8, !dbg !7450
  store i8 12, i8* %100, align 1, !dbg !7451
  br label %if.end110

if.end110:                                        ; preds = %if.else107, %if.then103
  br label %for.inc111, !dbg !7452

for.inc111:                                       ; preds = %if.end110
  %101 = load i32, i32* %i, align 4, !dbg !7453
  %inc112 = add nsw i32 %101, 1, !dbg !7453
  store i32 %inc112, i32* %i, align 4, !dbg !7453
  br label %for.cond96, !dbg !7455, !llvm.loop !7456

for.end113:                                       ; preds = %for.cond96
  %102 = load i32, i32* %cpl_start_band, align 4, !dbg !7458
  %mul114 = mul nsw i32 %102, 12, !dbg !7459
  %add115 = add nsw i32 %mul114, 37, !dbg !7460
  %103 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7461
  %start_freq116 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %103, i32 0, i32 41, !dbg !7462
  %arrayidx117 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq116, i64 0, i64 0, !dbg !7461
  store i32 %add115, i32* %arrayidx117, align 8, !dbg !7463
  %104 = load i32, i32* %cpl_end_band, align 4, !dbg !7464
  %mul118 = mul nsw i32 %104, 12, !dbg !7465
  %add119 = add nsw i32 %mul118, 37, !dbg !7466
  %105 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7467
  %cpl_end_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %105, i32 0, i32 42, !dbg !7468
  store i32 %add119, i32* %cpl_end_freq, align 4, !dbg !7469
  store i32 0, i32* %blk, align 4, !dbg !7470
  br label %for.cond120, !dbg !7472

for.cond120:                                      ; preds = %for.inc131, %for.end113
  %106 = load i32, i32* %blk, align 4, !dbg !7473
  %107 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7476
  %num_blocks121 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %107, i32 0, i32 18, !dbg !7477
  %108 = load i32, i32* %num_blocks121, align 4, !dbg !7477
  %cmp122 = icmp slt i32 %106, %108, !dbg !7478
  br i1 %cmp122, label %for.body124, label %for.end133, !dbg !7479

for.body124:                                      ; preds = %for.cond120
  %109 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7480
  %cpl_end_freq125 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %109, i32 0, i32 42, !dbg !7481
  %110 = load i32, i32* %cpl_end_freq125, align 4, !dbg !7481
  %111 = load i32, i32* %blk, align 4, !dbg !7482
  %idxprom126 = sext i32 %111 to i64, !dbg !7483
  %112 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7483
  %blocks127 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %112, i32 0, i32 10, !dbg !7484
  %arrayidx128 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks127, i64 0, i64 %idxprom126, !dbg !7483
  %end_freq129 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %arrayidx128, i32 0, i32 22, !dbg !7485
  %arrayidx130 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq129, i64 0, i64 0, !dbg !7483
  store i32 %110, i32* %arrayidx130, align 4, !dbg !7486
  br label %for.inc131, !dbg !7483

for.inc131:                                       ; preds = %for.body124
  %113 = load i32, i32* %blk, align 4, !dbg !7487
  %inc132 = add nsw i32 %113, 1, !dbg !7487
  store i32 %inc132, i32* %blk, align 4, !dbg !7487
  br label %for.cond120, !dbg !7489, !llvm.loop !7490

for.end133:                                       ; preds = %for.cond120
  br label %if.end134, !dbg !7492

if.end134:                                        ; preds = %for.end133, %if.end81
  ret void, !dbg !7493
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @exponent_init(%struct.AC3EncodeContext* %s) #5 !dbg !7494 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %expstr = alloca i32, align 4
  %i = alloca i32, align 4
  %grpsize = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !7495, metadata !2184), !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %expstr, metadata !7497, metadata !2184), !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7499, metadata !2184), !dbg !7500
  call void @llvm.dbg.declare(metadata i32* %grpsize, metadata !7501, metadata !2184), !dbg !7502
  store i32 0, i32* %expstr, align 4, !dbg !7503
  br label %for.cond, !dbg !7505

for.cond:                                         ; preds = %for.inc12, %entry
  %0 = load i32, i32* %expstr, align 4, !dbg !7506
  %cmp = icmp sle i32 %0, 2, !dbg !7509
  br i1 %cmp, label %for.body, label %for.end14, !dbg !7510

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %expstr, align 4, !dbg !7511
  %shl = shl i32 3, %1, !dbg !7513
  store i32 %shl, i32* %grpsize, align 4, !dbg !7514
  store i32 12, i32* %i, align 4, !dbg !7515
  br label %for.cond1, !dbg !7517

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !7518
  %cmp2 = icmp slt i32 %2, 256, !dbg !7521
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7522

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %i, align 4, !dbg !7523
  %4 = load i32, i32* %grpsize, align 4, !dbg !7525
  %add = add nsw i32 %3, %4, !dbg !7526
  %sub = sub nsw i32 %add, 4, !dbg !7527
  %5 = load i32, i32* %grpsize, align 4, !dbg !7528
  %div = sdiv i32 %sub, %5, !dbg !7529
  %conv = trunc i32 %div to i8, !dbg !7530
  %6 = load i32, i32* %i, align 4, !dbg !7531
  %idxprom = sext i32 %6 to i64, !dbg !7532
  %7 = load i32, i32* %expstr, align 4, !dbg !7533
  %idxprom4 = sext i32 %7 to i64, !dbg !7532
  %arrayidx = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* getelementptr inbounds ([2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 0), i64 0, i64 %idxprom4, !dbg !7532
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !7532
  store i8 %conv, i8* %arrayidx5, align 1, !dbg !7534
  %8 = load i32, i32* %i, align 4, !dbg !7535
  %9 = load i32, i32* %grpsize, align 4, !dbg !7536
  %div6 = sdiv i32 %8, %9, !dbg !7537
  %conv7 = trunc i32 %div6 to i8, !dbg !7538
  %10 = load i32, i32* %i, align 4, !dbg !7539
  %idxprom8 = sext i32 %10 to i64, !dbg !7540
  %11 = load i32, i32* %expstr, align 4, !dbg !7541
  %idxprom9 = sext i32 %11 to i64, !dbg !7540
  %arrayidx10 = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* getelementptr inbounds ([2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 1), i64 0, i64 %idxprom9, !dbg !7540
  %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !7540
  store i8 %conv7, i8* %arrayidx11, align 1, !dbg !7542
  br label %for.inc, !dbg !7543

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !7544
  %inc = add nsw i32 %12, 1, !dbg !7544
  store i32 %inc, i32* %i, align 4, !dbg !7544
  br label %for.cond1, !dbg !7546, !llvm.loop !7547

for.end:                                          ; preds = %for.cond1
  br label %for.inc12, !dbg !7549

for.inc12:                                        ; preds = %for.end
  %13 = load i32, i32* %expstr, align 4, !dbg !7550
  %inc13 = add nsw i32 %13, 1, !dbg !7550
  store i32 %inc13, i32* %expstr, align 4, !dbg !7550
  br label %for.cond, !dbg !7552, !llvm.loop !7553

for.end14:                                        ; preds = %for.cond
  store i8 2, i8* getelementptr inbounds ([2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 0, i64 0, i64 7), align 1, !dbg !7555
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7556
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 12, !dbg !7558
  %15 = load i32, i32* %eac3, align 4, !dbg !7558
  %tobool = icmp ne i32 %15, 0, !dbg !7556
  br i1 %tobool, label %if.then, label %if.end, !dbg !7559

if.then:                                          ; preds = %for.end14
  call void @ff_eac3_exponent_init(), !dbg !7560
  br label %if.end, !dbg !7560

if.end:                                           ; preds = %if.then, %for.end14
  ret void, !dbg !7561
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @bit_alloc_init(%struct.AC3EncodeContext* %s) #5 !dbg !7562 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !7563, metadata !2184), !dbg !7564
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7565, metadata !2184), !dbg !7566
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7567
  %slow_decay_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 50, !dbg !7568
  store i32 2, i32* %slow_decay_code, align 4, !dbg !7569
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7570
  %fast_decay_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 51, !dbg !7571
  store i32 1, i32* %fast_decay_code, align 8, !dbg !7572
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7573
  %slow_gain_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 49, !dbg !7574
  store i32 1, i32* %slow_gain_code, align 8, !dbg !7575
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7576
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 12, !dbg !7577
  %4 = load i32, i32* %eac3, align 4, !dbg !7577
  %tobool = icmp ne i32 %4, 0, !dbg !7576
  %cond = select i1 %tobool, i32 2, i32 3, !dbg !7576
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7578
  %db_per_bit_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 52, !dbg !7579
  store i32 %cond, i32* %db_per_bit_code, align 4, !dbg !7580
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7581
  %floor_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 53, !dbg !7582
  store i32 7, i32* %floor_code, align 8, !dbg !7583
  store i32 0, i32* %ch, align 4, !dbg !7584
  br label %for.cond, !dbg !7586

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %ch, align 4, !dbg !7587
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7590
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 26, !dbg !7591
  %9 = load i32, i32* %channels, align 4, !dbg !7591
  %cmp = icmp sle i32 %7, %9, !dbg !7592
  br i1 %cmp, label %for.body, label %for.end, !dbg !7593

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %ch, align 4, !dbg !7594
  %idxprom = sext i32 %10 to i64, !dbg !7595
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7595
  %fast_gain_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 56, !dbg !7596
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain_code, i64 0, i64 %idxprom, !dbg !7595
  store i32 4, i32* %arrayidx, align 4, !dbg !7597
  br label %for.inc, !dbg !7595

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %ch, align 4, !dbg !7598
  %inc = add nsw i32 %12, 1, !dbg !7598
  store i32 %inc, i32* %ch, align 4, !dbg !7598
  br label %for.cond, !dbg !7600, !llvm.loop !7601

for.end:                                          ; preds = %for.cond
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7603
  %coarse_snr_offset = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 55, !dbg !7604
  store i32 40, i32* %coarse_snr_offset, align 8, !dbg !7605
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7606
  %slow_decay_code1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 50, !dbg !7607
  %15 = load i32, i32* %slow_decay_code1, align 4, !dbg !7607
  %idxprom2 = sext i32 %15 to i64, !dbg !7608
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_slow_decay_tab, i64 0, i64 %idxprom2, !dbg !7608
  %16 = load i8, i8* %arrayidx3, align 1, !dbg !7608
  %conv = zext i8 %16 to i32, !dbg !7608
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7609
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 54, !dbg !7610
  %sr_shift = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 1, !dbg !7611
  %18 = load i32, i32* %sr_shift, align 4, !dbg !7611
  %shr = ashr i32 %conv, %18, !dbg !7612
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7613
  %bit_alloc4 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 54, !dbg !7614
  %slow_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc4, i32 0, i32 3, !dbg !7615
  store i32 %shr, i32* %slow_decay, align 4, !dbg !7616
  %20 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7617
  %fast_decay_code5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %20, i32 0, i32 51, !dbg !7618
  %21 = load i32, i32* %fast_decay_code5, align 8, !dbg !7618
  %idxprom6 = sext i32 %21 to i64, !dbg !7619
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_fast_decay_tab, i64 0, i64 %idxprom6, !dbg !7619
  %22 = load i8, i8* %arrayidx7, align 1, !dbg !7619
  %conv8 = zext i8 %22 to i32, !dbg !7619
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7620
  %bit_alloc9 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 54, !dbg !7621
  %sr_shift10 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc9, i32 0, i32 1, !dbg !7622
  %24 = load i32, i32* %sr_shift10, align 4, !dbg !7622
  %shr11 = ashr i32 %conv8, %24, !dbg !7623
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7624
  %bit_alloc12 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 54, !dbg !7625
  %fast_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc12, i32 0, i32 4, !dbg !7626
  store i32 %shr11, i32* %fast_decay, align 4, !dbg !7627
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7628
  %slow_gain_code13 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 49, !dbg !7629
  %27 = load i32, i32* %slow_gain_code13, align 8, !dbg !7629
  %idxprom14 = sext i32 %27 to i64, !dbg !7630
  %arrayidx15 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_slow_gain_tab, i64 0, i64 %idxprom14, !dbg !7630
  %28 = load i16, i16* %arrayidx15, align 2, !dbg !7630
  %conv16 = zext i16 %28 to i32, !dbg !7630
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7631
  %bit_alloc17 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 54, !dbg !7632
  %slow_gain = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc17, i32 0, i32 2, !dbg !7633
  store i32 %conv16, i32* %slow_gain, align 4, !dbg !7634
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7635
  %db_per_bit_code18 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 52, !dbg !7636
  %31 = load i32, i32* %db_per_bit_code18, align 4, !dbg !7636
  %idxprom19 = sext i32 %31 to i64, !dbg !7637
  %arrayidx20 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_db_per_bit_tab, i64 0, i64 %idxprom19, !dbg !7637
  %32 = load i16, i16* %arrayidx20, align 2, !dbg !7637
  %conv21 = zext i16 %32 to i32, !dbg !7637
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7638
  %bit_alloc22 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 54, !dbg !7639
  %db_per_bit = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc22, i32 0, i32 5, !dbg !7640
  store i32 %conv21, i32* %db_per_bit, align 4, !dbg !7641
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7642
  %floor_code23 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 53, !dbg !7643
  %35 = load i32, i32* %floor_code23, align 8, !dbg !7643
  %idxprom24 = sext i32 %35 to i64, !dbg !7644
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_floor_tab, i64 0, i64 %idxprom24, !dbg !7644
  %36 = load i16, i16* %arrayidx25, align 2, !dbg !7644
  %conv26 = sext i16 %36 to i32, !dbg !7644
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7645
  %bit_alloc27 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 54, !dbg !7646
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc27, i32 0, i32 6, !dbg !7647
  store i32 %conv26, i32* %floor, align 4, !dbg !7648
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7649
  %bit_alloc28 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 54, !dbg !7650
  %cpl_fast_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc28, i32 0, i32 7, !dbg !7651
  store i32 0, i32* %cpl_fast_leak, align 4, !dbg !7652
  %39 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7653
  %bit_alloc29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %39, i32 0, i32 54, !dbg !7654
  %cpl_slow_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc29, i32 0, i32 8, !dbg !7655
  store i32 0, i32* %cpl_slow_leak, align 4, !dbg !7656
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7657
  call void @count_frame_bits_fixed(%struct.AC3EncodeContext* %40), !dbg !7658
  ret void, !dbg !7659
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @allocate_buffers(%struct.AC3EncodeContext* %s) #5 !dbg !7660 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %channels = alloca i32, align 4
  %channel_blocks = alloca i32, align 4
  %total_coefs = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  %block239 = alloca %struct.AC3Block*, align 8
  %block274 = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !7661, metadata !2184), !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !7663, metadata !2184), !dbg !7664
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7665
  %avctx1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 2, !dbg !7666
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !7666
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !7664
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !7667, metadata !2184), !dbg !7668
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7669, metadata !2184), !dbg !7670
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !7671, metadata !2184), !dbg !7672
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7673
  %channels2 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 26, !dbg !7674
  %3 = load i32, i32* %channels2, align 4, !dbg !7674
  %add = add nsw i32 %3, 1, !dbg !7675
  store i32 %add, i32* %channels, align 4, !dbg !7672
  call void @llvm.dbg.declare(metadata i32* %channel_blocks, metadata !7676, metadata !2184), !dbg !7677
  %4 = load i32, i32* %channels, align 4, !dbg !7678
  %5 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7679
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %5, i32 0, i32 18, !dbg !7680
  %6 = load i32, i32* %num_blocks, align 4, !dbg !7680
  %mul = mul nsw i32 %4, %6, !dbg !7681
  store i32 %mul, i32* %channel_blocks, align 4, !dbg !7677
  call void @llvm.dbg.declare(metadata i32* %total_coefs, metadata !7682, metadata !2184), !dbg !7683
  %7 = load i32, i32* %channel_blocks, align 4, !dbg !7684
  %mul3 = mul nsw i32 256, %7, !dbg !7685
  store i32 %mul3, i32* %total_coefs, align 4, !dbg !7683
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7686
  %allocate_sample_buffers = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 83, !dbg !7688
  %9 = load i32 (%struct.AC3EncodeContext*)*, i32 (%struct.AC3EncodeContext*)** %allocate_sample_buffers, align 8, !dbg !7688
  %10 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7689
  %call = call i32 %9(%struct.AC3EncodeContext* %10), !dbg !7686
  %tobool = icmp ne i32 %call, 0, !dbg !7686
  br i1 %tobool, label %if.then, label %if.end, !dbg !7690

if.then:                                          ; preds = %entry
  br label %alloc_fail, !dbg !7691

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %total_coefs, align 4, !dbg !7692
  %conv = sext i32 %11 to i64, !dbg !7692
  %call4 = call i8* @av_malloc_array(i64 %conv, i64 1), !dbg !7694
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7695
  %bap_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 63, !dbg !7696
  store i8* %call4, i8** %bap_buffer, align 8, !dbg !7697
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7698
  %bap_buffer5 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 63, !dbg !7700
  %14 = load i8*, i8** %bap_buffer5, align 8, !dbg !7700
  %tobool6 = icmp ne i8* %14, null, !dbg !7698
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7701

if.then7:                                         ; preds = %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7702
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !7702
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7705
  br label %alloc_fail, !dbg !7706

if.end8:                                          ; preds = %if.end
  %17 = load i32, i32* %total_coefs, align 4, !dbg !7707
  %conv9 = sext i32 %17 to i64, !dbg !7707
  %call10 = call i8* @av_malloc_array(i64 %conv9, i64 1), !dbg !7709
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7710
  %bap1_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 64, !dbg !7711
  store i8* %call10, i8** %bap1_buffer, align 8, !dbg !7712
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7713
  %bap1_buffer11 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 64, !dbg !7715
  %20 = load i8*, i8** %bap1_buffer11, align 8, !dbg !7715
  %tobool12 = icmp ne i8* %20, null, !dbg !7713
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7716

if.then13:                                        ; preds = %if.end8
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7717
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !7717
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7720
  br label %alloc_fail, !dbg !7721

if.end14:                                         ; preds = %if.end8
  %23 = load i32, i32* %total_coefs, align 4, !dbg !7722
  %conv15 = sext i32 %23 to i64, !dbg !7722
  %call16 = call i8* @av_mallocz_array(i64 %conv15, i64 4), !dbg !7724
  %24 = bitcast i8* %call16 to i32*, !dbg !7724
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7725
  %mdct_coef_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 65, !dbg !7726
  store i32* %24, i32** %mdct_coef_buffer, align 8, !dbg !7727
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7728
  %mdct_coef_buffer17 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 65, !dbg !7730
  %27 = load i32*, i32** %mdct_coef_buffer17, align 8, !dbg !7730
  %tobool18 = icmp ne i32* %27, null, !dbg !7728
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7731

if.then19:                                        ; preds = %if.end14
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7732
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !7732
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7735
  br label %alloc_fail, !dbg !7736

if.end20:                                         ; preds = %if.end14
  %30 = load i32, i32* %total_coefs, align 4, !dbg !7737
  %conv21 = sext i32 %30 to i64, !dbg !7737
  %call22 = call i8* @av_malloc_array(i64 %conv21, i64 1), !dbg !7739
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7740
  %exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 67, !dbg !7741
  store i8* %call22, i8** %exp_buffer, align 8, !dbg !7742
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7743
  %exp_buffer23 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 67, !dbg !7745
  %33 = load i8*, i8** %exp_buffer23, align 8, !dbg !7745
  %tobool24 = icmp ne i8* %33, null, !dbg !7743
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !7746

if.then25:                                        ; preds = %if.end20
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7747
  %35 = bitcast %struct.AVCodecContext* %34 to i8*, !dbg !7747
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7750
  br label %alloc_fail, !dbg !7751

if.end26:                                         ; preds = %if.end20
  %36 = load i32, i32* %channel_blocks, align 4, !dbg !7752
  %conv27 = sext i32 %36 to i64, !dbg !7752
  %call28 = call i8* @av_malloc_array(i64 %conv27, i64 128), !dbg !7754
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7755
  %grouped_exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 68, !dbg !7756
  store i8* %call28, i8** %grouped_exp_buffer, align 8, !dbg !7757
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7758
  %grouped_exp_buffer29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 68, !dbg !7760
  %39 = load i8*, i8** %grouped_exp_buffer29, align 8, !dbg !7760
  %tobool30 = icmp ne i8* %39, null, !dbg !7758
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !7761

if.then31:                                        ; preds = %if.end26
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7762
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !7762
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7765
  br label %alloc_fail, !dbg !7766

if.end32:                                         ; preds = %if.end26
  %42 = load i32, i32* %total_coefs, align 4, !dbg !7767
  %conv33 = sext i32 %42 to i64, !dbg !7767
  %call34 = call i8* @av_malloc_array(i64 %conv33, i64 2), !dbg !7769
  %43 = bitcast i8* %call34 to i16*, !dbg !7769
  %44 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7770
  %psd_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %44, i32 0, i32 69, !dbg !7771
  store i16* %43, i16** %psd_buffer, align 8, !dbg !7772
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7773
  %psd_buffer35 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 69, !dbg !7775
  %46 = load i16*, i16** %psd_buffer35, align 8, !dbg !7775
  %tobool36 = icmp ne i16* %46, null, !dbg !7773
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !7776

if.then37:                                        ; preds = %if.end32
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7777
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !7777
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7780
  br label %alloc_fail, !dbg !7781

if.end38:                                         ; preds = %if.end32
  %49 = load i32, i32* %channel_blocks, align 4, !dbg !7782
  %conv39 = sext i32 %49 to i64, !dbg !7782
  %call40 = call i8* @av_malloc_array(i64 %conv39, i64 128), !dbg !7784
  %50 = bitcast i8* %call40 to i16*, !dbg !7784
  %51 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7785
  %band_psd_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %51, i32 0, i32 70, !dbg !7786
  store i16* %50, i16** %band_psd_buffer, align 8, !dbg !7787
  %52 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7788
  %band_psd_buffer41 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %52, i32 0, i32 70, !dbg !7790
  %53 = load i16*, i16** %band_psd_buffer41, align 8, !dbg !7790
  %tobool42 = icmp ne i16* %53, null, !dbg !7788
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !7791

if.then43:                                        ; preds = %if.end38
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7792
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !7792
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7795
  br label %alloc_fail, !dbg !7796

if.end44:                                         ; preds = %if.end38
  %56 = load i32, i32* %channel_blocks, align 4, !dbg !7797
  %conv45 = sext i32 %56 to i64, !dbg !7797
  %call46 = call i8* @av_malloc_array(i64 %conv45, i64 128), !dbg !7799
  %57 = bitcast i8* %call46 to i16*, !dbg !7799
  %58 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7800
  %mask_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %58, i32 0, i32 71, !dbg !7801
  store i16* %57, i16** %mask_buffer, align 8, !dbg !7802
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7803
  %mask_buffer47 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 71, !dbg !7805
  %60 = load i16*, i16** %mask_buffer47, align 8, !dbg !7805
  %tobool48 = icmp ne i16* %60, null, !dbg !7803
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !7806

if.then49:                                        ; preds = %if.end44
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7807
  %62 = bitcast %struct.AVCodecContext* %61 to i8*, !dbg !7807
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7810
  br label %alloc_fail, !dbg !7811

if.end50:                                         ; preds = %if.end44
  %63 = load i32, i32* %total_coefs, align 4, !dbg !7812
  %conv51 = sext i32 %63 to i64, !dbg !7812
  %call52 = call i8* @av_malloc_array(i64 %conv51, i64 2), !dbg !7814
  %64 = bitcast i8* %call52 to i16*, !dbg !7814
  %65 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7815
  %qmant_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %65, i32 0, i32 72, !dbg !7816
  store i16* %64, i16** %qmant_buffer, align 8, !dbg !7817
  %66 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7818
  %qmant_buffer53 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %66, i32 0, i32 72, !dbg !7820
  %67 = load i16*, i16** %qmant_buffer53, align 8, !dbg !7820
  %tobool54 = icmp ne i16* %67, null, !dbg !7818
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !7821

if.then55:                                        ; preds = %if.end50
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7822
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !7822
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7825
  br label %alloc_fail, !dbg !7826

if.end56:                                         ; preds = %if.end50
  %70 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7827
  %cpl_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %70, i32 0, i32 44, !dbg !7829
  %71 = load i32, i32* %cpl_enabled, align 4, !dbg !7829
  %tobool57 = icmp ne i32 %71, 0, !dbg !7827
  br i1 %tobool57, label %if.then58, label %if.end71, !dbg !7830

if.then58:                                        ; preds = %if.end56
  %72 = load i32, i32* %channel_blocks, align 4, !dbg !7831
  %conv59 = sext i32 %72 to i64, !dbg !7831
  %call60 = call i8* @av_malloc_array(i64 %conv59, i64 16), !dbg !7834
  %73 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7835
  %cpl_coord_exp_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %73, i32 0, i32 73, !dbg !7836
  store i8* %call60, i8** %cpl_coord_exp_buffer, align 8, !dbg !7837
  %74 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7838
  %cpl_coord_exp_buffer61 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %74, i32 0, i32 73, !dbg !7840
  %75 = load i8*, i8** %cpl_coord_exp_buffer61, align 8, !dbg !7840
  %tobool62 = icmp ne i8* %75, null, !dbg !7838
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !7841

if.then63:                                        ; preds = %if.then58
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7842
  %77 = bitcast %struct.AVCodecContext* %76 to i8*, !dbg !7842
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7845
  br label %alloc_fail, !dbg !7846

if.end64:                                         ; preds = %if.then58
  %78 = load i32, i32* %channel_blocks, align 4, !dbg !7847
  %conv65 = sext i32 %78 to i64, !dbg !7847
  %call66 = call i8* @av_malloc_array(i64 %conv65, i64 16), !dbg !7849
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7850
  %cpl_coord_mant_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 74, !dbg !7851
  store i8* %call66, i8** %cpl_coord_mant_buffer, align 8, !dbg !7852
  %80 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7853
  %cpl_coord_mant_buffer67 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %80, i32 0, i32 74, !dbg !7855
  %81 = load i8*, i8** %cpl_coord_mant_buffer67, align 8, !dbg !7855
  %tobool68 = icmp ne i8* %81, null, !dbg !7853
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !7856

if.then69:                                        ; preds = %if.end64
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7857
  %83 = bitcast %struct.AVCodecContext* %82 to i8*, !dbg !7857
  call void (i8*, i32, i8*, ...) @av_log(i8* %83, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7860
  br label %alloc_fail, !dbg !7861

if.end70:                                         ; preds = %if.end64
  br label %if.end71, !dbg !7862

if.end71:                                         ; preds = %if.end70, %if.end56
  store i32 0, i32* %blk, align 4, !dbg !7863
  br label %for.cond, !dbg !7865

for.cond:                                         ; preds = %for.inc223, %if.end71
  %84 = load i32, i32* %blk, align 4, !dbg !7866
  %85 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7869
  %num_blocks72 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %85, i32 0, i32 18, !dbg !7870
  %86 = load i32, i32* %num_blocks72, align 4, !dbg !7870
  %cmp = icmp slt i32 %84, %86, !dbg !7871
  br i1 %cmp, label %for.body, label %for.end225, !dbg !7872

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !7873, metadata !2184), !dbg !7875
  %87 = load i32, i32* %blk, align 4, !dbg !7876
  %idxprom = sext i32 %87 to i64, !dbg !7877
  %88 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7877
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %88, i32 0, i32 10, !dbg !7878
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !7877
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !7875
  %89 = load i32, i32* %channels, align 4, !dbg !7879
  %conv74 = sext i32 %89 to i64, !dbg !7879
  %call75 = call i8* @av_mallocz_array(i64 %conv74, i64 8), !dbg !7881
  %90 = bitcast i8* %call75 to i32**, !dbg !7881
  %91 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7882
  %mdct_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %91, i32 0, i32 0, !dbg !7883
  store i32** %90, i32*** %mdct_coef, align 8, !dbg !7884
  %92 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7885
  %mdct_coef76 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %92, i32 0, i32 0, !dbg !7887
  %93 = load i32**, i32*** %mdct_coef76, align 8, !dbg !7887
  %tobool77 = icmp ne i32** %93, null, !dbg !7885
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !7888

if.then78:                                        ; preds = %for.body
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7889
  %95 = bitcast %struct.AVCodecContext* %94 to i8*, !dbg !7889
  call void (i8*, i32, i8*, ...) @av_log(i8* %95, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7892
  br label %alloc_fail, !dbg !7893

if.end79:                                         ; preds = %for.body
  %96 = load i32, i32* %channels, align 4, !dbg !7894
  %conv80 = sext i32 %96 to i64, !dbg !7894
  %call81 = call i8* @av_mallocz_array(i64 %conv80, i64 8), !dbg !7896
  %97 = bitcast i8* %call81 to i8**, !dbg !7896
  %98 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7897
  %exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %98, i32 0, i32 2, !dbg !7898
  store i8** %97, i8*** %exp, align 8, !dbg !7899
  %99 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7900
  %exp82 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %99, i32 0, i32 2, !dbg !7902
  %100 = load i8**, i8*** %exp82, align 8, !dbg !7902
  %tobool83 = icmp ne i8** %100, null, !dbg !7900
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !7903

if.then84:                                        ; preds = %if.end79
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7904
  %102 = bitcast %struct.AVCodecContext* %101 to i8*, !dbg !7904
  call void (i8*, i32, i8*, ...) @av_log(i8* %102, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7907
  br label %alloc_fail, !dbg !7908

if.end85:                                         ; preds = %if.end79
  %103 = load i32, i32* %channels, align 4, !dbg !7909
  %conv86 = sext i32 %103 to i64, !dbg !7909
  %call87 = call i8* @av_mallocz_array(i64 %conv86, i64 8), !dbg !7911
  %104 = bitcast i8* %call87 to i8**, !dbg !7911
  %105 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7912
  %grouped_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %105, i32 0, i32 3, !dbg !7913
  store i8** %104, i8*** %grouped_exp, align 8, !dbg !7914
  %106 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7915
  %grouped_exp88 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %106, i32 0, i32 3, !dbg !7917
  %107 = load i8**, i8*** %grouped_exp88, align 8, !dbg !7917
  %tobool89 = icmp ne i8** %107, null, !dbg !7915
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !7918

if.then90:                                        ; preds = %if.end85
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7919
  %109 = bitcast %struct.AVCodecContext* %108 to i8*, !dbg !7919
  call void (i8*, i32, i8*, ...) @av_log(i8* %109, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7922
  br label %alloc_fail, !dbg !7923

if.end91:                                         ; preds = %if.end85
  %110 = load i32, i32* %channels, align 4, !dbg !7924
  %conv92 = sext i32 %110 to i64, !dbg !7924
  %call93 = call i8* @av_mallocz_array(i64 %conv92, i64 8), !dbg !7926
  %111 = bitcast i8* %call93 to i16**, !dbg !7926
  %112 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7927
  %psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %112, i32 0, i32 4, !dbg !7928
  store i16** %111, i16*** %psd, align 8, !dbg !7929
  %113 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7930
  %psd94 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %113, i32 0, i32 4, !dbg !7932
  %114 = load i16**, i16*** %psd94, align 8, !dbg !7932
  %tobool95 = icmp ne i16** %114, null, !dbg !7930
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !7933

if.then96:                                        ; preds = %if.end91
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7934
  %116 = bitcast %struct.AVCodecContext* %115 to i8*, !dbg !7934
  call void (i8*, i32, i8*, ...) @av_log(i8* %116, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7937
  br label %alloc_fail, !dbg !7938

if.end97:                                         ; preds = %if.end91
  %117 = load i32, i32* %channels, align 4, !dbg !7939
  %conv98 = sext i32 %117 to i64, !dbg !7939
  %call99 = call i8* @av_mallocz_array(i64 %conv98, i64 8), !dbg !7941
  %118 = bitcast i8* %call99 to i16**, !dbg !7941
  %119 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7942
  %band_psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %119, i32 0, i32 5, !dbg !7943
  store i16** %118, i16*** %band_psd, align 8, !dbg !7944
  %120 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7945
  %band_psd100 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %120, i32 0, i32 5, !dbg !7947
  %121 = load i16**, i16*** %band_psd100, align 8, !dbg !7947
  %tobool101 = icmp ne i16** %121, null, !dbg !7945
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !7948

if.then102:                                       ; preds = %if.end97
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7949
  %123 = bitcast %struct.AVCodecContext* %122 to i8*, !dbg !7949
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7952
  br label %alloc_fail, !dbg !7953

if.end103:                                        ; preds = %if.end97
  %124 = load i32, i32* %channels, align 4, !dbg !7954
  %conv104 = sext i32 %124 to i64, !dbg !7954
  %call105 = call i8* @av_mallocz_array(i64 %conv104, i64 8), !dbg !7956
  %125 = bitcast i8* %call105 to i16**, !dbg !7956
  %126 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7957
  %mask = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %126, i32 0, i32 6, !dbg !7958
  store i16** %125, i16*** %mask, align 8, !dbg !7959
  %127 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7960
  %mask106 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %127, i32 0, i32 6, !dbg !7962
  %128 = load i16**, i16*** %mask106, align 8, !dbg !7962
  %tobool107 = icmp ne i16** %128, null, !dbg !7960
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !7963

if.then108:                                       ; preds = %if.end103
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7964
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !7964
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7967
  br label %alloc_fail, !dbg !7968

if.end109:                                        ; preds = %if.end103
  %131 = load i32, i32* %channels, align 4, !dbg !7969
  %conv110 = sext i32 %131 to i64, !dbg !7969
  %call111 = call i8* @av_mallocz_array(i64 %conv110, i64 8), !dbg !7971
  %132 = bitcast i8* %call111 to i16**, !dbg !7971
  %133 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7972
  %qmant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %133, i32 0, i32 7, !dbg !7973
  store i16** %132, i16*** %qmant, align 8, !dbg !7974
  %134 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7975
  %qmant112 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %134, i32 0, i32 7, !dbg !7977
  %135 = load i16**, i16*** %qmant112, align 8, !dbg !7977
  %tobool113 = icmp ne i16** %135, null, !dbg !7975
  br i1 %tobool113, label %if.end115, label %if.then114, !dbg !7978

if.then114:                                       ; preds = %if.end109
  %136 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7979
  %137 = bitcast %struct.AVCodecContext* %136 to i8*, !dbg !7979
  call void (i8*, i32, i8*, ...) @av_log(i8* %137, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !7982
  br label %alloc_fail, !dbg !7983

if.end115:                                        ; preds = %if.end109
  %138 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !7984
  %cpl_enabled116 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %138, i32 0, i32 44, !dbg !7986
  %139 = load i32, i32* %cpl_enabled116, align 4, !dbg !7986
  %tobool117 = icmp ne i32 %139, 0, !dbg !7984
  br i1 %tobool117, label %if.then118, label %if.end131, !dbg !7987

if.then118:                                       ; preds = %if.end115
  %140 = load i32, i32* %channels, align 4, !dbg !7988
  %conv119 = sext i32 %140 to i64, !dbg !7988
  %call120 = call i8* @av_mallocz_array(i64 %conv119, i64 8), !dbg !7991
  %141 = bitcast i8* %call120 to i8**, !dbg !7991
  %142 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7992
  %cpl_coord_exp = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %142, i32 0, i32 8, !dbg !7993
  store i8** %141, i8*** %cpl_coord_exp, align 8, !dbg !7994
  %143 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !7995
  %cpl_coord_exp121 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %143, i32 0, i32 8, !dbg !7997
  %144 = load i8**, i8*** %cpl_coord_exp121, align 8, !dbg !7997
  %tobool122 = icmp ne i8** %144, null, !dbg !7995
  br i1 %tobool122, label %if.end124, label %if.then123, !dbg !7998

if.then123:                                       ; preds = %if.then118
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7999
  %146 = bitcast %struct.AVCodecContext* %145 to i8*, !dbg !7999
  call void (i8*, i32, i8*, ...) @av_log(i8* %146, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !8002
  br label %alloc_fail, !dbg !8003

if.end124:                                        ; preds = %if.then118
  %147 = load i32, i32* %channels, align 4, !dbg !8004
  %conv125 = sext i32 %147 to i64, !dbg !8004
  %call126 = call i8* @av_mallocz_array(i64 %conv125, i64 8), !dbg !8006
  %148 = bitcast i8* %call126 to i8**, !dbg !8006
  %149 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8007
  %cpl_coord_mant = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %149, i32 0, i32 9, !dbg !8008
  store i8** %148, i8*** %cpl_coord_mant, align 8, !dbg !8009
  %150 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8010
  %cpl_coord_mant127 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %150, i32 0, i32 9, !dbg !8012
  %151 = load i8**, i8*** %cpl_coord_mant127, align 8, !dbg !8012
  %tobool128 = icmp ne i8** %151, null, !dbg !8010
  br i1 %tobool128, label %if.end130, label %if.then129, !dbg !8013

if.then129:                                       ; preds = %if.end124
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8014
  %153 = bitcast %struct.AVCodecContext* %152 to i8*, !dbg !8014
  call void (i8*, i32, i8*, ...) @av_log(i8* %153, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !8017
  br label %alloc_fail, !dbg !8018

if.end130:                                        ; preds = %if.end124
  br label %if.end131, !dbg !8019

if.end131:                                        ; preds = %if.end130, %if.end115
  store i32 0, i32* %ch, align 4, !dbg !8020
  br label %for.cond132, !dbg !8022

for.cond132:                                      ; preds = %for.inc, %if.end131
  %154 = load i32, i32* %ch, align 4, !dbg !8023
  %155 = load i32, i32* %channels, align 4, !dbg !8026
  %cmp133 = icmp slt i32 %154, %155, !dbg !8027
  br i1 %cmp133, label %for.body135, label %for.end, !dbg !8028

for.body135:                                      ; preds = %for.cond132
  %156 = load i32, i32* %blk, align 4, !dbg !8029
  %157 = load i32, i32* %channels, align 4, !dbg !8031
  %mul136 = mul nsw i32 %156, %157, !dbg !8032
  %158 = load i32, i32* %ch, align 4, !dbg !8033
  %add137 = add nsw i32 %mul136, %158, !dbg !8034
  %mul138 = mul nsw i32 128, %add137, !dbg !8035
  %idxprom139 = sext i32 %mul138 to i64, !dbg !8036
  %159 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8036
  %grouped_exp_buffer140 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %159, i32 0, i32 68, !dbg !8037
  %160 = load i8*, i8** %grouped_exp_buffer140, align 8, !dbg !8037
  %arrayidx141 = getelementptr inbounds i8, i8* %160, i64 %idxprom139, !dbg !8036
  %161 = load i32, i32* %ch, align 4, !dbg !8038
  %idxprom142 = sext i32 %161 to i64, !dbg !8039
  %162 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8039
  %grouped_exp143 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %162, i32 0, i32 3, !dbg !8040
  %163 = load i8**, i8*** %grouped_exp143, align 8, !dbg !8040
  %arrayidx144 = getelementptr inbounds i8*, i8** %163, i64 %idxprom142, !dbg !8039
  store i8* %arrayidx141, i8** %arrayidx144, align 8, !dbg !8041
  %164 = load i32, i32* %blk, align 4, !dbg !8042
  %165 = load i32, i32* %channels, align 4, !dbg !8043
  %mul145 = mul nsw i32 %164, %165, !dbg !8044
  %166 = load i32, i32* %ch, align 4, !dbg !8045
  %add146 = add nsw i32 %mul145, %166, !dbg !8046
  %mul147 = mul nsw i32 256, %add146, !dbg !8047
  %idxprom148 = sext i32 %mul147 to i64, !dbg !8048
  %167 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8048
  %psd_buffer149 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %167, i32 0, i32 69, !dbg !8049
  %168 = load i16*, i16** %psd_buffer149, align 8, !dbg !8049
  %arrayidx150 = getelementptr inbounds i16, i16* %168, i64 %idxprom148, !dbg !8048
  %169 = load i32, i32* %ch, align 4, !dbg !8050
  %idxprom151 = sext i32 %169 to i64, !dbg !8051
  %170 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8051
  %psd152 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %170, i32 0, i32 4, !dbg !8052
  %171 = load i16**, i16*** %psd152, align 8, !dbg !8052
  %arrayidx153 = getelementptr inbounds i16*, i16** %171, i64 %idxprom151, !dbg !8051
  store i16* %arrayidx150, i16** %arrayidx153, align 8, !dbg !8053
  %172 = load i32, i32* %blk, align 4, !dbg !8054
  %173 = load i32, i32* %channels, align 4, !dbg !8055
  %mul154 = mul nsw i32 %172, %173, !dbg !8056
  %174 = load i32, i32* %ch, align 4, !dbg !8057
  %add155 = add nsw i32 %mul154, %174, !dbg !8058
  %mul156 = mul nsw i32 64, %add155, !dbg !8059
  %idxprom157 = sext i32 %mul156 to i64, !dbg !8060
  %175 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8060
  %band_psd_buffer158 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %175, i32 0, i32 70, !dbg !8061
  %176 = load i16*, i16** %band_psd_buffer158, align 8, !dbg !8061
  %arrayidx159 = getelementptr inbounds i16, i16* %176, i64 %idxprom157, !dbg !8060
  %177 = load i32, i32* %ch, align 4, !dbg !8062
  %idxprom160 = sext i32 %177 to i64, !dbg !8063
  %178 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8063
  %band_psd161 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %178, i32 0, i32 5, !dbg !8064
  %179 = load i16**, i16*** %band_psd161, align 8, !dbg !8064
  %arrayidx162 = getelementptr inbounds i16*, i16** %179, i64 %idxprom160, !dbg !8063
  store i16* %arrayidx159, i16** %arrayidx162, align 8, !dbg !8065
  %180 = load i32, i32* %blk, align 4, !dbg !8066
  %181 = load i32, i32* %channels, align 4, !dbg !8067
  %mul163 = mul nsw i32 %180, %181, !dbg !8068
  %182 = load i32, i32* %ch, align 4, !dbg !8069
  %add164 = add nsw i32 %mul163, %182, !dbg !8070
  %mul165 = mul nsw i32 64, %add164, !dbg !8071
  %idxprom166 = sext i32 %mul165 to i64, !dbg !8072
  %183 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8072
  %mask_buffer167 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %183, i32 0, i32 71, !dbg !8073
  %184 = load i16*, i16** %mask_buffer167, align 8, !dbg !8073
  %arrayidx168 = getelementptr inbounds i16, i16* %184, i64 %idxprom166, !dbg !8072
  %185 = load i32, i32* %ch, align 4, !dbg !8074
  %idxprom169 = sext i32 %185 to i64, !dbg !8075
  %186 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8075
  %mask170 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %186, i32 0, i32 6, !dbg !8076
  %187 = load i16**, i16*** %mask170, align 8, !dbg !8076
  %arrayidx171 = getelementptr inbounds i16*, i16** %187, i64 %idxprom169, !dbg !8075
  store i16* %arrayidx168, i16** %arrayidx171, align 8, !dbg !8077
  %188 = load i32, i32* %blk, align 4, !dbg !8078
  %189 = load i32, i32* %channels, align 4, !dbg !8079
  %mul172 = mul nsw i32 %188, %189, !dbg !8080
  %190 = load i32, i32* %ch, align 4, !dbg !8081
  %add173 = add nsw i32 %mul172, %190, !dbg !8082
  %mul174 = mul nsw i32 256, %add173, !dbg !8083
  %idxprom175 = sext i32 %mul174 to i64, !dbg !8084
  %191 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8084
  %qmant_buffer176 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %191, i32 0, i32 72, !dbg !8085
  %192 = load i16*, i16** %qmant_buffer176, align 8, !dbg !8085
  %arrayidx177 = getelementptr inbounds i16, i16* %192, i64 %idxprom175, !dbg !8084
  %193 = load i32, i32* %ch, align 4, !dbg !8086
  %idxprom178 = sext i32 %193 to i64, !dbg !8087
  %194 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8087
  %qmant179 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %194, i32 0, i32 7, !dbg !8088
  %195 = load i16**, i16*** %qmant179, align 8, !dbg !8088
  %arrayidx180 = getelementptr inbounds i16*, i16** %195, i64 %idxprom178, !dbg !8087
  store i16* %arrayidx177, i16** %arrayidx180, align 8, !dbg !8089
  %196 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8090
  %cpl_enabled181 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %196, i32 0, i32 44, !dbg !8092
  %197 = load i32, i32* %cpl_enabled181, align 4, !dbg !8092
  %tobool182 = icmp ne i32 %197, 0, !dbg !8090
  br i1 %tobool182, label %if.then183, label %if.end202, !dbg !8093

if.then183:                                       ; preds = %for.body135
  %198 = load i32, i32* %blk, align 4, !dbg !8094
  %199 = load i32, i32* %channels, align 4, !dbg !8096
  %mul184 = mul nsw i32 %198, %199, !dbg !8097
  %200 = load i32, i32* %ch, align 4, !dbg !8098
  %add185 = add nsw i32 %mul184, %200, !dbg !8099
  %mul186 = mul nsw i32 16, %add185, !dbg !8100
  %idxprom187 = sext i32 %mul186 to i64, !dbg !8101
  %201 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8101
  %cpl_coord_exp_buffer188 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %201, i32 0, i32 73, !dbg !8102
  %202 = load i8*, i8** %cpl_coord_exp_buffer188, align 8, !dbg !8102
  %arrayidx189 = getelementptr inbounds i8, i8* %202, i64 %idxprom187, !dbg !8101
  %203 = load i32, i32* %ch, align 4, !dbg !8103
  %idxprom190 = sext i32 %203 to i64, !dbg !8104
  %204 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8104
  %cpl_coord_exp191 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %204, i32 0, i32 8, !dbg !8105
  %205 = load i8**, i8*** %cpl_coord_exp191, align 8, !dbg !8105
  %arrayidx192 = getelementptr inbounds i8*, i8** %205, i64 %idxprom190, !dbg !8104
  store i8* %arrayidx189, i8** %arrayidx192, align 8, !dbg !8106
  %206 = load i32, i32* %blk, align 4, !dbg !8107
  %207 = load i32, i32* %channels, align 4, !dbg !8108
  %mul193 = mul nsw i32 %206, %207, !dbg !8109
  %208 = load i32, i32* %ch, align 4, !dbg !8110
  %add194 = add nsw i32 %mul193, %208, !dbg !8111
  %mul195 = mul nsw i32 16, %add194, !dbg !8112
  %idxprom196 = sext i32 %mul195 to i64, !dbg !8113
  %209 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8113
  %cpl_coord_mant_buffer197 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %209, i32 0, i32 74, !dbg !8114
  %210 = load i8*, i8** %cpl_coord_mant_buffer197, align 8, !dbg !8114
  %arrayidx198 = getelementptr inbounds i8, i8* %210, i64 %idxprom196, !dbg !8113
  %211 = load i32, i32* %ch, align 4, !dbg !8115
  %idxprom199 = sext i32 %211 to i64, !dbg !8116
  %212 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8116
  %cpl_coord_mant200 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %212, i32 0, i32 9, !dbg !8117
  %213 = load i8**, i8*** %cpl_coord_mant200, align 8, !dbg !8117
  %arrayidx201 = getelementptr inbounds i8*, i8** %213, i64 %idxprom199, !dbg !8116
  store i8* %arrayidx198, i8** %arrayidx201, align 8, !dbg !8118
  br label %if.end202, !dbg !8119

if.end202:                                        ; preds = %if.then183, %for.body135
  %214 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8120
  %num_blocks203 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %214, i32 0, i32 18, !dbg !8121
  %215 = load i32, i32* %num_blocks203, align 4, !dbg !8121
  %216 = load i32, i32* %ch, align 4, !dbg !8122
  %mul204 = mul nsw i32 %215, %216, !dbg !8123
  %217 = load i32, i32* %blk, align 4, !dbg !8124
  %add205 = add nsw i32 %mul204, %217, !dbg !8125
  %mul206 = mul nsw i32 256, %add205, !dbg !8126
  %idxprom207 = sext i32 %mul206 to i64, !dbg !8127
  %218 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8127
  %exp_buffer208 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %218, i32 0, i32 67, !dbg !8128
  %219 = load i8*, i8** %exp_buffer208, align 8, !dbg !8128
  %arrayidx209 = getelementptr inbounds i8, i8* %219, i64 %idxprom207, !dbg !8127
  %220 = load i32, i32* %ch, align 4, !dbg !8129
  %idxprom210 = sext i32 %220 to i64, !dbg !8130
  %221 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8130
  %exp211 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %221, i32 0, i32 2, !dbg !8131
  %222 = load i8**, i8*** %exp211, align 8, !dbg !8131
  %arrayidx212 = getelementptr inbounds i8*, i8** %222, i64 %idxprom210, !dbg !8130
  store i8* %arrayidx209, i8** %arrayidx212, align 8, !dbg !8132
  %223 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8133
  %num_blocks213 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %223, i32 0, i32 18, !dbg !8134
  %224 = load i32, i32* %num_blocks213, align 4, !dbg !8134
  %225 = load i32, i32* %ch, align 4, !dbg !8135
  %mul214 = mul nsw i32 %224, %225, !dbg !8136
  %226 = load i32, i32* %blk, align 4, !dbg !8137
  %add215 = add nsw i32 %mul214, %226, !dbg !8138
  %mul216 = mul nsw i32 256, %add215, !dbg !8139
  %idxprom217 = sext i32 %mul216 to i64, !dbg !8140
  %227 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8140
  %mdct_coef_buffer218 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %227, i32 0, i32 65, !dbg !8141
  %228 = load i32*, i32** %mdct_coef_buffer218, align 8, !dbg !8141
  %arrayidx219 = getelementptr inbounds i32, i32* %228, i64 %idxprom217, !dbg !8140
  %229 = load i32, i32* %ch, align 4, !dbg !8142
  %idxprom220 = sext i32 %229 to i64, !dbg !8143
  %230 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8143
  %mdct_coef221 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %230, i32 0, i32 0, !dbg !8144
  %231 = load i32**, i32*** %mdct_coef221, align 8, !dbg !8144
  %arrayidx222 = getelementptr inbounds i32*, i32** %231, i64 %idxprom220, !dbg !8143
  store i32* %arrayidx219, i32** %arrayidx222, align 8, !dbg !8145
  br label %for.inc, !dbg !8146

for.inc:                                          ; preds = %if.end202
  %232 = load i32, i32* %ch, align 4, !dbg !8147
  %inc = add nsw i32 %232, 1, !dbg !8147
  store i32 %inc, i32* %ch, align 4, !dbg !8147
  br label %for.cond132, !dbg !8149, !llvm.loop !8150

for.end:                                          ; preds = %for.cond132
  br label %for.inc223, !dbg !8152

for.inc223:                                       ; preds = %for.end
  %233 = load i32, i32* %blk, align 4, !dbg !8153
  %inc224 = add nsw i32 %233, 1, !dbg !8153
  store i32 %inc224, i32* %blk, align 4, !dbg !8153
  br label %for.cond, !dbg !8155, !llvm.loop !8156

for.end225:                                       ; preds = %for.cond
  %234 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8158
  %fixed_point = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %234, i32 0, i32 11, !dbg !8160
  %235 = load i32, i32* %fixed_point, align 8, !dbg !8160
  %tobool226 = icmp ne i32 %235, 0, !dbg !8158
  br i1 %tobool226, label %if.else, label %if.then227, !dbg !8161

if.then227:                                       ; preds = %for.end225
  %236 = load i32, i32* %total_coefs, align 4, !dbg !8162
  %conv228 = sext i32 %236 to i64, !dbg !8162
  %call229 = call i8* @av_mallocz_array(i64 %conv228, i64 4), !dbg !8165
  %237 = bitcast i8* %call229 to i32*, !dbg !8165
  %238 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8166
  %fixed_coef_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %238, i32 0, i32 66, !dbg !8167
  store i32* %237, i32** %fixed_coef_buffer, align 8, !dbg !8168
  %239 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8169
  %fixed_coef_buffer230 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %239, i32 0, i32 66, !dbg !8171
  %240 = load i32*, i32** %fixed_coef_buffer230, align 8, !dbg !8171
  %tobool231 = icmp ne i32* %240, null, !dbg !8169
  br i1 %tobool231, label %if.end233, label %if.then232, !dbg !8172

if.then232:                                       ; preds = %if.then227
  %241 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8173
  %242 = bitcast %struct.AVCodecContext* %241 to i8*, !dbg !8173
  call void (i8*, i32, i8*, ...) @av_log(i8* %242, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !8176
  br label %alloc_fail, !dbg !8177

if.end233:                                        ; preds = %if.then227
  store i32 0, i32* %blk, align 4, !dbg !8178
  br label %for.cond234, !dbg !8180

for.cond234:                                      ; preds = %for.inc266, %if.end233
  %243 = load i32, i32* %blk, align 4, !dbg !8181
  %244 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8184
  %num_blocks235 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %244, i32 0, i32 18, !dbg !8185
  %245 = load i32, i32* %num_blocks235, align 4, !dbg !8185
  %cmp236 = icmp slt i32 %243, %245, !dbg !8186
  br i1 %cmp236, label %for.body238, label %for.end268, !dbg !8187

for.body238:                                      ; preds = %for.cond234
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block239, metadata !8188, metadata !2184), !dbg !8190
  %246 = load i32, i32* %blk, align 4, !dbg !8191
  %idxprom240 = sext i32 %246 to i64, !dbg !8192
  %247 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8192
  %blocks241 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %247, i32 0, i32 10, !dbg !8193
  %arrayidx242 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks241, i64 0, i64 %idxprom240, !dbg !8192
  store %struct.AC3Block* %arrayidx242, %struct.AC3Block** %block239, align 8, !dbg !8190
  %248 = load i32, i32* %channels, align 4, !dbg !8194
  %conv243 = sext i32 %248 to i64, !dbg !8194
  %call244 = call i8* @av_mallocz_array(i64 %conv243, i64 8), !dbg !8196
  %249 = bitcast i8* %call244 to i32**, !dbg !8196
  %250 = load %struct.AC3Block*, %struct.AC3Block** %block239, align 8, !dbg !8197
  %fixed_coef = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %250, i32 0, i32 1, !dbg !8198
  store i32** %249, i32*** %fixed_coef, align 8, !dbg !8199
  %251 = load %struct.AC3Block*, %struct.AC3Block** %block239, align 8, !dbg !8200
  %fixed_coef245 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %251, i32 0, i32 1, !dbg !8202
  %252 = load i32**, i32*** %fixed_coef245, align 8, !dbg !8202
  %tobool246 = icmp ne i32** %252, null, !dbg !8200
  br i1 %tobool246, label %if.end248, label %if.then247, !dbg !8203

if.then247:                                       ; preds = %for.body238
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8204
  %254 = bitcast %struct.AVCodecContext* %253 to i8*, !dbg !8204
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !8207
  br label %alloc_fail, !dbg !8208

if.end248:                                        ; preds = %for.body238
  store i32 0, i32* %ch, align 4, !dbg !8209
  br label %for.cond249, !dbg !8211

for.cond249:                                      ; preds = %for.inc263, %if.end248
  %255 = load i32, i32* %ch, align 4, !dbg !8212
  %256 = load i32, i32* %channels, align 4, !dbg !8215
  %cmp250 = icmp slt i32 %255, %256, !dbg !8216
  br i1 %cmp250, label %for.body252, label %for.end265, !dbg !8217

for.body252:                                      ; preds = %for.cond249
  %257 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8218
  %num_blocks253 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %257, i32 0, i32 18, !dbg !8219
  %258 = load i32, i32* %num_blocks253, align 4, !dbg !8219
  %259 = load i32, i32* %ch, align 4, !dbg !8220
  %mul254 = mul nsw i32 %258, %259, !dbg !8221
  %260 = load i32, i32* %blk, align 4, !dbg !8222
  %add255 = add nsw i32 %mul254, %260, !dbg !8223
  %mul256 = mul nsw i32 256, %add255, !dbg !8224
  %idxprom257 = sext i32 %mul256 to i64, !dbg !8225
  %261 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8225
  %fixed_coef_buffer258 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %261, i32 0, i32 66, !dbg !8226
  %262 = load i32*, i32** %fixed_coef_buffer258, align 8, !dbg !8226
  %arrayidx259 = getelementptr inbounds i32, i32* %262, i64 %idxprom257, !dbg !8225
  %263 = load i32, i32* %ch, align 4, !dbg !8227
  %idxprom260 = sext i32 %263 to i64, !dbg !8228
  %264 = load %struct.AC3Block*, %struct.AC3Block** %block239, align 8, !dbg !8228
  %fixed_coef261 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %264, i32 0, i32 1, !dbg !8229
  %265 = load i32**, i32*** %fixed_coef261, align 8, !dbg !8229
  %arrayidx262 = getelementptr inbounds i32*, i32** %265, i64 %idxprom260, !dbg !8228
  store i32* %arrayidx259, i32** %arrayidx262, align 8, !dbg !8230
  br label %for.inc263, !dbg !8228

for.inc263:                                       ; preds = %for.body252
  %266 = load i32, i32* %ch, align 4, !dbg !8231
  %inc264 = add nsw i32 %266, 1, !dbg !8231
  store i32 %inc264, i32* %ch, align 4, !dbg !8231
  br label %for.cond249, !dbg !8233, !llvm.loop !8234

for.end265:                                       ; preds = %for.cond249
  br label %for.inc266, !dbg !8236

for.inc266:                                       ; preds = %for.end265
  %267 = load i32, i32* %blk, align 4, !dbg !8237
  %inc267 = add nsw i32 %267, 1, !dbg !8237
  store i32 %inc267, i32* %blk, align 4, !dbg !8237
  br label %for.cond234, !dbg !8239, !llvm.loop !8240

for.end268:                                       ; preds = %for.cond234
  br label %if.end301, !dbg !8242

if.else:                                          ; preds = %for.end225
  store i32 0, i32* %blk, align 4, !dbg !8243
  br label %for.cond269, !dbg !8246

for.cond269:                                      ; preds = %for.inc298, %if.else
  %268 = load i32, i32* %blk, align 4, !dbg !8247
  %269 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8250
  %num_blocks270 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %269, i32 0, i32 18, !dbg !8251
  %270 = load i32, i32* %num_blocks270, align 4, !dbg !8251
  %cmp271 = icmp slt i32 %268, %270, !dbg !8252
  br i1 %cmp271, label %for.body273, label %for.end300, !dbg !8253

for.body273:                                      ; preds = %for.cond269
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block274, metadata !8254, metadata !2184), !dbg !8256
  %271 = load i32, i32* %blk, align 4, !dbg !8257
  %idxprom275 = sext i32 %271 to i64, !dbg !8258
  %272 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8258
  %blocks276 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %272, i32 0, i32 10, !dbg !8259
  %arrayidx277 = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks276, i64 0, i64 %idxprom275, !dbg !8258
  store %struct.AC3Block* %arrayidx277, %struct.AC3Block** %block274, align 8, !dbg !8256
  %273 = load i32, i32* %channels, align 4, !dbg !8260
  %conv278 = sext i32 %273 to i64, !dbg !8260
  %call279 = call i8* @av_mallocz_array(i64 %conv278, i64 8), !dbg !8262
  %274 = bitcast i8* %call279 to i32**, !dbg !8262
  %275 = load %struct.AC3Block*, %struct.AC3Block** %block274, align 8, !dbg !8263
  %fixed_coef280 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %275, i32 0, i32 1, !dbg !8264
  store i32** %274, i32*** %fixed_coef280, align 8, !dbg !8265
  %276 = load %struct.AC3Block*, %struct.AC3Block** %block274, align 8, !dbg !8266
  %fixed_coef281 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %276, i32 0, i32 1, !dbg !8268
  %277 = load i32**, i32*** %fixed_coef281, align 8, !dbg !8268
  %tobool282 = icmp ne i32** %277, null, !dbg !8266
  br i1 %tobool282, label %if.end284, label %if.then283, !dbg !8269

if.then283:                                       ; preds = %for.body273
  %278 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8270
  %279 = bitcast %struct.AVCodecContext* %278 to i8*, !dbg !8270
  call void (i8*, i32, i8*, ...) @av_log(i8* %279, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !8273
  br label %alloc_fail, !dbg !8274

if.end284:                                        ; preds = %for.body273
  store i32 0, i32* %ch, align 4, !dbg !8275
  br label %for.cond285, !dbg !8277

for.cond285:                                      ; preds = %for.inc295, %if.end284
  %280 = load i32, i32* %ch, align 4, !dbg !8278
  %281 = load i32, i32* %channels, align 4, !dbg !8281
  %cmp286 = icmp slt i32 %280, %281, !dbg !8282
  br i1 %cmp286, label %for.body288, label %for.end297, !dbg !8283

for.body288:                                      ; preds = %for.cond285
  %282 = load i32, i32* %ch, align 4, !dbg !8284
  %idxprom289 = sext i32 %282 to i64, !dbg !8285
  %283 = load %struct.AC3Block*, %struct.AC3Block** %block274, align 8, !dbg !8285
  %mdct_coef290 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %283, i32 0, i32 0, !dbg !8286
  %284 = load i32**, i32*** %mdct_coef290, align 8, !dbg !8286
  %arrayidx291 = getelementptr inbounds i32*, i32** %284, i64 %idxprom289, !dbg !8285
  %285 = load i32*, i32** %arrayidx291, align 8, !dbg !8285
  %286 = load i32, i32* %ch, align 4, !dbg !8287
  %idxprom292 = sext i32 %286 to i64, !dbg !8288
  %287 = load %struct.AC3Block*, %struct.AC3Block** %block274, align 8, !dbg !8288
  %fixed_coef293 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %287, i32 0, i32 1, !dbg !8289
  %288 = load i32**, i32*** %fixed_coef293, align 8, !dbg !8289
  %arrayidx294 = getelementptr inbounds i32*, i32** %288, i64 %idxprom292, !dbg !8288
  store i32* %285, i32** %arrayidx294, align 8, !dbg !8290
  br label %for.inc295, !dbg !8288

for.inc295:                                       ; preds = %for.body288
  %289 = load i32, i32* %ch, align 4, !dbg !8291
  %inc296 = add nsw i32 %289, 1, !dbg !8291
  store i32 %inc296, i32* %ch, align 4, !dbg !8291
  br label %for.cond285, !dbg !8293, !llvm.loop !8294

for.end297:                                       ; preds = %for.cond285
  br label %for.inc298, !dbg !8296

for.inc298:                                       ; preds = %for.end297
  %290 = load i32, i32* %blk, align 4, !dbg !8297
  %inc299 = add nsw i32 %290, 1, !dbg !8297
  store i32 %inc299, i32* %blk, align 4, !dbg !8297
  br label %for.cond269, !dbg !8299, !llvm.loop !8300

for.end300:                                       ; preds = %for.cond269
  br label %if.end301

if.end301:                                        ; preds = %for.end300, %for.end268
  store i32 0, i32* %retval, align 4, !dbg !8302
  br label %return, !dbg !8302

alloc_fail:                                       ; preds = %if.then283, %if.then247, %if.then232, %if.then129, %if.then123, %if.then114, %if.then108, %if.then102, %if.then96, %if.then90, %if.then84, %if.then78, %if.then69, %if.then63, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then25, %if.then19, %if.then13, %if.then7, %if.then
  store i32 -12, i32* %retval, align 4, !dbg !8303
  br label %return, !dbg !8303

return:                                           ; preds = %alloc_fail, %if.end301
  %291 = load i32, i32* %retval, align 4, !dbg !8304
  ret i32 %291, !dbg !8304
}

declare void @ff_audiodsp_init(%struct.AudioDSPContext*) #4

declare void @ff_me_cmp_init(%struct.MECmpContext*, %struct.AVCodecContext*) #4

declare void @ff_ac3dsp_init(%struct.AC3DSPContext*, i32) #4

; Function Attrs: nounwind uwtable
define internal void @dprint_options(%struct.AC3EncodeContext* %s) #0 !dbg !8305 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !8306, metadata !2184), !dbg !8307
  ret void, !dbg !8308
}

declare void @ff_eac3_get_frame_exp_strategy(%struct.AC3EncodeContext*) #4

; Function Attrs: nounwind uwtable
define internal void @encode_exponents_blk_ch(i8* %exp, i32 %nb_exps, i32 %exp_strategy, i32 %cpl) #0 !dbg !8309 {
entry:
  %exp.addr = alloca i8*, align 8
  %nb_exps.addr = alloca i32, align 4
  %exp_strategy.addr = alloca i32, align 4
  %cpl.addr = alloca i32, align 4
  %nb_groups = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %exp_min = alloca i8, align 1
  %exp_min28 = alloca i8, align 1
  %exp1 = alloca i8, align 1
  store i8* %exp, i8** %exp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %exp.addr, metadata !8312, metadata !2184), !dbg !8313
  store i32 %nb_exps, i32* %nb_exps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_exps.addr, metadata !8314, metadata !2184), !dbg !8315
  store i32 %exp_strategy, i32* %exp_strategy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exp_strategy.addr, metadata !8316, metadata !2184), !dbg !8317
  store i32 %cpl, i32* %cpl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpl.addr, metadata !8318, metadata !2184), !dbg !8319
  call void @llvm.dbg.declare(metadata i32* %nb_groups, metadata !8320, metadata !2184), !dbg !8321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8322, metadata !2184), !dbg !8323
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8324, metadata !2184), !dbg !8325
  %0 = load i32, i32* %nb_exps.addr, align 4, !dbg !8326
  %idxprom = sext i32 %0 to i64, !dbg !8327
  %1 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8328
  %sub = sub nsw i32 %1, 1, !dbg !8329
  %idxprom1 = sext i32 %sub to i64, !dbg !8327
  %2 = load i32, i32* %cpl.addr, align 4, !dbg !8330
  %idxprom2 = sext i32 %2 to i64, !dbg !8327
  %arrayidx = getelementptr inbounds [2 x [3 x [256 x i8]]], [2 x [3 x [256 x i8]]]* @exponent_group_tab, i64 0, i64 %idxprom2, !dbg !8327
  %arrayidx3 = getelementptr inbounds [3 x [256 x i8]], [3 x [256 x i8]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !8327
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx3, i64 0, i64 %idxprom, !dbg !8327
  %3 = load i8, i8* %arrayidx4, align 1, !dbg !8327
  %conv = zext i8 %3 to i32, !dbg !8327
  %mul = mul nsw i32 %conv, 3, !dbg !8331
  store i32 %mul, i32* %nb_groups, align 4, !dbg !8332
  %4 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8333
  switch i32 %4, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb22
  ], !dbg !8334

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !8335
  %5 = load i32, i32* %cpl.addr, align 4, !dbg !8338
  %sub5 = sub nsw i32 1, %5, !dbg !8339
  store i32 %sub5, i32* %k, align 4, !dbg !8340
  br label %for.cond, !dbg !8341

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i32, i32* %i, align 4, !dbg !8342
  %7 = load i32, i32* %nb_groups, align 4, !dbg !8345
  %cmp = icmp sle i32 %6, %7, !dbg !8346
  br i1 %cmp, label %for.body, label %for.end, !dbg !8347

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %exp_min, metadata !8348, metadata !2184), !dbg !8350
  %8 = load i32, i32* %k, align 4, !dbg !8351
  %idxprom7 = sext i32 %8 to i64, !dbg !8352
  %9 = load i8*, i8** %exp.addr, align 8, !dbg !8352
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 %idxprom7, !dbg !8352
  %10 = load i8, i8* %arrayidx8, align 1, !dbg !8352
  store i8 %10, i8* %exp_min, align 1, !dbg !8350
  %11 = load i32, i32* %k, align 4, !dbg !8353
  %add = add nsw i32 %11, 1, !dbg !8355
  %idxprom9 = sext i32 %add to i64, !dbg !8356
  %12 = load i8*, i8** %exp.addr, align 8, !dbg !8356
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 %idxprom9, !dbg !8356
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !8356
  %conv11 = zext i8 %13 to i32, !dbg !8356
  %14 = load i8, i8* %exp_min, align 1, !dbg !8357
  %conv12 = zext i8 %14 to i32, !dbg !8357
  %cmp13 = icmp slt i32 %conv11, %conv12, !dbg !8358
  br i1 %cmp13, label %if.then, label %if.end, !dbg !8359

if.then:                                          ; preds = %for.body
  %15 = load i32, i32* %k, align 4, !dbg !8360
  %add15 = add nsw i32 %15, 1, !dbg !8361
  %idxprom16 = sext i32 %add15 to i64, !dbg !8362
  %16 = load i8*, i8** %exp.addr, align 8, !dbg !8362
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !8362
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !8362
  store i8 %17, i8* %exp_min, align 1, !dbg !8363
  br label %if.end, !dbg !8364

if.end:                                           ; preds = %if.then, %for.body
  %18 = load i8, i8* %exp_min, align 1, !dbg !8365
  %19 = load i32, i32* %i, align 4, !dbg !8366
  %20 = load i32, i32* %cpl.addr, align 4, !dbg !8367
  %sub18 = sub nsw i32 %19, %20, !dbg !8368
  %idxprom19 = sext i32 %sub18 to i64, !dbg !8369
  %21 = load i8*, i8** %exp.addr, align 8, !dbg !8369
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 %idxprom19, !dbg !8369
  store i8 %18, i8* %arrayidx20, align 1, !dbg !8370
  %22 = load i32, i32* %k, align 4, !dbg !8371
  %add21 = add nsw i32 %22, 2, !dbg !8371
  store i32 %add21, i32* %k, align 4, !dbg !8371
  br label %for.inc, !dbg !8372

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !8373
  %inc = add nsw i32 %23, 1, !dbg !8373
  store i32 %inc, i32* %i, align 4, !dbg !8373
  br label %for.cond, !dbg !8375, !llvm.loop !8376

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !8378

sw.bb22:                                          ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !8379
  %24 = load i32, i32* %cpl.addr, align 4, !dbg !8381
  %sub23 = sub nsw i32 1, %24, !dbg !8382
  store i32 %sub23, i32* %k, align 4, !dbg !8383
  br label %for.cond24, !dbg !8384

for.cond24:                                       ; preds = %for.inc71, %sw.bb22
  %25 = load i32, i32* %i, align 4, !dbg !8385
  %26 = load i32, i32* %nb_groups, align 4, !dbg !8388
  %cmp25 = icmp sle i32 %25, %26, !dbg !8389
  br i1 %cmp25, label %for.body27, label %for.end73, !dbg !8390

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i8* %exp_min28, metadata !8391, metadata !2184), !dbg !8393
  %27 = load i32, i32* %k, align 4, !dbg !8394
  %idxprom29 = sext i32 %27 to i64, !dbg !8395
  %28 = load i8*, i8** %exp.addr, align 8, !dbg !8395
  %arrayidx30 = getelementptr inbounds i8, i8* %28, i64 %idxprom29, !dbg !8395
  %29 = load i8, i8* %arrayidx30, align 1, !dbg !8395
  store i8 %29, i8* %exp_min28, align 1, !dbg !8393
  %30 = load i32, i32* %k, align 4, !dbg !8396
  %add31 = add nsw i32 %30, 1, !dbg !8398
  %idxprom32 = sext i32 %add31 to i64, !dbg !8399
  %31 = load i8*, i8** %exp.addr, align 8, !dbg !8399
  %arrayidx33 = getelementptr inbounds i8, i8* %31, i64 %idxprom32, !dbg !8399
  %32 = load i8, i8* %arrayidx33, align 1, !dbg !8399
  %conv34 = zext i8 %32 to i32, !dbg !8399
  %33 = load i8, i8* %exp_min28, align 1, !dbg !8400
  %conv35 = zext i8 %33 to i32, !dbg !8400
  %cmp36 = icmp slt i32 %conv34, %conv35, !dbg !8401
  br i1 %cmp36, label %if.then38, label %if.end42, !dbg !8402

if.then38:                                        ; preds = %for.body27
  %34 = load i32, i32* %k, align 4, !dbg !8403
  %add39 = add nsw i32 %34, 1, !dbg !8404
  %idxprom40 = sext i32 %add39 to i64, !dbg !8405
  %35 = load i8*, i8** %exp.addr, align 8, !dbg !8405
  %arrayidx41 = getelementptr inbounds i8, i8* %35, i64 %idxprom40, !dbg !8405
  %36 = load i8, i8* %arrayidx41, align 1, !dbg !8405
  store i8 %36, i8* %exp_min28, align 1, !dbg !8406
  br label %if.end42, !dbg !8407

if.end42:                                         ; preds = %if.then38, %for.body27
  %37 = load i32, i32* %k, align 4, !dbg !8408
  %add43 = add nsw i32 %37, 2, !dbg !8410
  %idxprom44 = sext i32 %add43 to i64, !dbg !8411
  %38 = load i8*, i8** %exp.addr, align 8, !dbg !8411
  %arrayidx45 = getelementptr inbounds i8, i8* %38, i64 %idxprom44, !dbg !8411
  %39 = load i8, i8* %arrayidx45, align 1, !dbg !8411
  %conv46 = zext i8 %39 to i32, !dbg !8411
  %40 = load i8, i8* %exp_min28, align 1, !dbg !8412
  %conv47 = zext i8 %40 to i32, !dbg !8412
  %cmp48 = icmp slt i32 %conv46, %conv47, !dbg !8413
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !8414

if.then50:                                        ; preds = %if.end42
  %41 = load i32, i32* %k, align 4, !dbg !8415
  %add51 = add nsw i32 %41, 2, !dbg !8416
  %idxprom52 = sext i32 %add51 to i64, !dbg !8417
  %42 = load i8*, i8** %exp.addr, align 8, !dbg !8417
  %arrayidx53 = getelementptr inbounds i8, i8* %42, i64 %idxprom52, !dbg !8417
  %43 = load i8, i8* %arrayidx53, align 1, !dbg !8417
  store i8 %43, i8* %exp_min28, align 1, !dbg !8418
  br label %if.end54, !dbg !8419

if.end54:                                         ; preds = %if.then50, %if.end42
  %44 = load i32, i32* %k, align 4, !dbg !8420
  %add55 = add nsw i32 %44, 3, !dbg !8422
  %idxprom56 = sext i32 %add55 to i64, !dbg !8423
  %45 = load i8*, i8** %exp.addr, align 8, !dbg !8423
  %arrayidx57 = getelementptr inbounds i8, i8* %45, i64 %idxprom56, !dbg !8423
  %46 = load i8, i8* %arrayidx57, align 1, !dbg !8423
  %conv58 = zext i8 %46 to i32, !dbg !8423
  %47 = load i8, i8* %exp_min28, align 1, !dbg !8424
  %conv59 = zext i8 %47 to i32, !dbg !8424
  %cmp60 = icmp slt i32 %conv58, %conv59, !dbg !8425
  br i1 %cmp60, label %if.then62, label %if.end66, !dbg !8426

if.then62:                                        ; preds = %if.end54
  %48 = load i32, i32* %k, align 4, !dbg !8427
  %add63 = add nsw i32 %48, 3, !dbg !8428
  %idxprom64 = sext i32 %add63 to i64, !dbg !8429
  %49 = load i8*, i8** %exp.addr, align 8, !dbg !8429
  %arrayidx65 = getelementptr inbounds i8, i8* %49, i64 %idxprom64, !dbg !8429
  %50 = load i8, i8* %arrayidx65, align 1, !dbg !8429
  store i8 %50, i8* %exp_min28, align 1, !dbg !8430
  br label %if.end66, !dbg !8431

if.end66:                                         ; preds = %if.then62, %if.end54
  %51 = load i8, i8* %exp_min28, align 1, !dbg !8432
  %52 = load i32, i32* %i, align 4, !dbg !8433
  %53 = load i32, i32* %cpl.addr, align 4, !dbg !8434
  %sub67 = sub nsw i32 %52, %53, !dbg !8435
  %idxprom68 = sext i32 %sub67 to i64, !dbg !8436
  %54 = load i8*, i8** %exp.addr, align 8, !dbg !8436
  %arrayidx69 = getelementptr inbounds i8, i8* %54, i64 %idxprom68, !dbg !8436
  store i8 %51, i8* %arrayidx69, align 1, !dbg !8437
  %55 = load i32, i32* %k, align 4, !dbg !8438
  %add70 = add nsw i32 %55, 4, !dbg !8438
  store i32 %add70, i32* %k, align 4, !dbg !8438
  br label %for.inc71, !dbg !8439

for.inc71:                                        ; preds = %if.end66
  %56 = load i32, i32* %i, align 4, !dbg !8440
  %inc72 = add nsw i32 %56, 1, !dbg !8440
  store i32 %inc72, i32* %i, align 4, !dbg !8440
  br label %for.cond24, !dbg !8442, !llvm.loop !8443

for.end73:                                        ; preds = %for.cond24
  br label %sw.epilog, !dbg !8445

sw.epilog:                                        ; preds = %entry, %for.end73, %for.end
  %57 = load i32, i32* %cpl.addr, align 4, !dbg !8446
  %tobool = icmp ne i32 %57, 0, !dbg !8446
  br i1 %tobool, label %if.end80, label %land.lhs.true, !dbg !8448

land.lhs.true:                                    ; preds = %sw.epilog
  %58 = load i8*, i8** %exp.addr, align 8, !dbg !8449
  %arrayidx74 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !8449
  %59 = load i8, i8* %arrayidx74, align 1, !dbg !8449
  %conv75 = zext i8 %59 to i32, !dbg !8449
  %cmp76 = icmp sgt i32 %conv75, 15, !dbg !8451
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !8452

if.then78:                                        ; preds = %land.lhs.true
  %60 = load i8*, i8** %exp.addr, align 8, !dbg !8453
  %arrayidx79 = getelementptr inbounds i8, i8* %60, i64 0, !dbg !8453
  store i8 15, i8* %arrayidx79, align 1, !dbg !8454
  br label %if.end80, !dbg !8453

if.end80:                                         ; preds = %if.then78, %land.lhs.true, %sw.epilog
  store i32 1, i32* %i, align 4, !dbg !8455
  br label %for.cond81, !dbg !8457

for.cond81:                                       ; preds = %for.inc106, %if.end80
  %61 = load i32, i32* %i, align 4, !dbg !8458
  %62 = load i32, i32* %nb_groups, align 4, !dbg !8461
  %cmp82 = icmp sle i32 %61, %62, !dbg !8462
  br i1 %cmp82, label %for.body84, label %for.end108, !dbg !8463

for.body84:                                       ; preds = %for.cond81
  %63 = load i32, i32* %i, align 4, !dbg !8464
  %idxprom85 = sext i32 %63 to i64, !dbg !8465
  %64 = load i8*, i8** %exp.addr, align 8, !dbg !8465
  %arrayidx86 = getelementptr inbounds i8, i8* %64, i64 %idxprom85, !dbg !8465
  %65 = load i8, i8* %arrayidx86, align 1, !dbg !8465
  %conv87 = zext i8 %65 to i32, !dbg !8466
  %66 = load i32, i32* %i, align 4, !dbg !8467
  %sub88 = sub nsw i32 %66, 1, !dbg !8468
  %idxprom89 = sext i32 %sub88 to i64, !dbg !8469
  %67 = load i8*, i8** %exp.addr, align 8, !dbg !8469
  %arrayidx90 = getelementptr inbounds i8, i8* %67, i64 %idxprom89, !dbg !8469
  %68 = load i8, i8* %arrayidx90, align 1, !dbg !8469
  %conv91 = zext i8 %68 to i32, !dbg !8469
  %add92 = add nsw i32 %conv91, 2, !dbg !8470
  %cmp93 = icmp sgt i32 %conv87, %add92, !dbg !8471
  br i1 %cmp93, label %cond.true, label %cond.false, !dbg !8466

cond.true:                                        ; preds = %for.body84
  %69 = load i32, i32* %i, align 4, !dbg !8472
  %sub95 = sub nsw i32 %69, 1, !dbg !8473
  %idxprom96 = sext i32 %sub95 to i64, !dbg !8474
  %70 = load i8*, i8** %exp.addr, align 8, !dbg !8474
  %arrayidx97 = getelementptr inbounds i8, i8* %70, i64 %idxprom96, !dbg !8474
  %71 = load i8, i8* %arrayidx97, align 1, !dbg !8474
  %conv98 = zext i8 %71 to i32, !dbg !8474
  %add99 = add nsw i32 %conv98, 2, !dbg !8475
  br label %cond.end, !dbg !8476

cond.false:                                       ; preds = %for.body84
  %72 = load i32, i32* %i, align 4, !dbg !8477
  %idxprom100 = sext i32 %72 to i64, !dbg !8479
  %73 = load i8*, i8** %exp.addr, align 8, !dbg !8479
  %arrayidx101 = getelementptr inbounds i8, i8* %73, i64 %idxprom100, !dbg !8479
  %74 = load i8, i8* %arrayidx101, align 1, !dbg !8479
  %conv102 = zext i8 %74 to i32, !dbg !8480
  br label %cond.end, !dbg !8481

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add99, %cond.true ], [ %conv102, %cond.false ], !dbg !8482
  %conv103 = trunc i32 %cond to i8, !dbg !8484
  %75 = load i32, i32* %i, align 4, !dbg !8485
  %idxprom104 = sext i32 %75 to i64, !dbg !8486
  %76 = load i8*, i8** %exp.addr, align 8, !dbg !8486
  %arrayidx105 = getelementptr inbounds i8, i8* %76, i64 %idxprom104, !dbg !8486
  store i8 %conv103, i8* %arrayidx105, align 1, !dbg !8487
  br label %for.inc106, !dbg !8486

for.inc106:                                       ; preds = %cond.end
  %77 = load i32, i32* %i, align 4, !dbg !8488
  %inc107 = add nsw i32 %77, 1, !dbg !8488
  store i32 %inc107, i32* %i, align 4, !dbg !8488
  br label %for.cond81, !dbg !8489, !llvm.loop !8490

for.end108:                                       ; preds = %for.cond81
  %78 = load i32, i32* %i, align 4, !dbg !8492
  %dec = add nsw i32 %78, -1, !dbg !8492
  store i32 %dec, i32* %i, align 4, !dbg !8492
  br label %while.cond, !dbg !8493

while.cond:                                       ; preds = %cond.end132, %for.end108
  %79 = load i32, i32* %i, align 4, !dbg !8494
  %dec109 = add nsw i32 %79, -1, !dbg !8494
  store i32 %dec109, i32* %i, align 4, !dbg !8494
  %cmp110 = icmp sge i32 %dec109, 0, !dbg !8496
  br i1 %cmp110, label %while.body, label %while.end, !dbg !8497

while.body:                                       ; preds = %while.cond
  %80 = load i32, i32* %i, align 4, !dbg !8498
  %idxprom112 = sext i32 %80 to i64, !dbg !8499
  %81 = load i8*, i8** %exp.addr, align 8, !dbg !8499
  %arrayidx113 = getelementptr inbounds i8, i8* %81, i64 %idxprom112, !dbg !8499
  %82 = load i8, i8* %arrayidx113, align 1, !dbg !8499
  %conv114 = zext i8 %82 to i32, !dbg !8500
  %83 = load i32, i32* %i, align 4, !dbg !8501
  %add115 = add nsw i32 %83, 1, !dbg !8502
  %idxprom116 = sext i32 %add115 to i64, !dbg !8503
  %84 = load i8*, i8** %exp.addr, align 8, !dbg !8503
  %arrayidx117 = getelementptr inbounds i8, i8* %84, i64 %idxprom116, !dbg !8503
  %85 = load i8, i8* %arrayidx117, align 1, !dbg !8503
  %conv118 = zext i8 %85 to i32, !dbg !8503
  %add119 = add nsw i32 %conv118, 2, !dbg !8504
  %cmp120 = icmp sgt i32 %conv114, %add119, !dbg !8505
  br i1 %cmp120, label %cond.true122, label %cond.false128, !dbg !8500

cond.true122:                                     ; preds = %while.body
  %86 = load i32, i32* %i, align 4, !dbg !8506
  %add123 = add nsw i32 %86, 1, !dbg !8507
  %idxprom124 = sext i32 %add123 to i64, !dbg !8508
  %87 = load i8*, i8** %exp.addr, align 8, !dbg !8508
  %arrayidx125 = getelementptr inbounds i8, i8* %87, i64 %idxprom124, !dbg !8508
  %88 = load i8, i8* %arrayidx125, align 1, !dbg !8508
  %conv126 = zext i8 %88 to i32, !dbg !8508
  %add127 = add nsw i32 %conv126, 2, !dbg !8509
  br label %cond.end132, !dbg !8510

cond.false128:                                    ; preds = %while.body
  %89 = load i32, i32* %i, align 4, !dbg !8511
  %idxprom129 = sext i32 %89 to i64, !dbg !8513
  %90 = load i8*, i8** %exp.addr, align 8, !dbg !8513
  %arrayidx130 = getelementptr inbounds i8, i8* %90, i64 %idxprom129, !dbg !8513
  %91 = load i8, i8* %arrayidx130, align 1, !dbg !8513
  %conv131 = zext i8 %91 to i32, !dbg !8514
  br label %cond.end132, !dbg !8515

cond.end132:                                      ; preds = %cond.false128, %cond.true122
  %cond133 = phi i32 [ %add127, %cond.true122 ], [ %conv131, %cond.false128 ], !dbg !8516
  %conv134 = trunc i32 %cond133 to i8, !dbg !8518
  %92 = load i32, i32* %i, align 4, !dbg !8519
  %idxprom135 = sext i32 %92 to i64, !dbg !8520
  %93 = load i8*, i8** %exp.addr, align 8, !dbg !8520
  %arrayidx136 = getelementptr inbounds i8, i8* %93, i64 %idxprom135, !dbg !8520
  store i8 %conv134, i8* %arrayidx136, align 1, !dbg !8521
  br label %while.cond, !dbg !8522, !llvm.loop !8523

while.end:                                        ; preds = %while.cond
  %94 = load i32, i32* %cpl.addr, align 4, !dbg !8524
  %tobool137 = icmp ne i32 %94, 0, !dbg !8524
  br i1 %tobool137, label %if.then138, label %if.end143, !dbg !8526

if.then138:                                       ; preds = %while.end
  %95 = load i8*, i8** %exp.addr, align 8, !dbg !8527
  %arrayidx139 = getelementptr inbounds i8, i8* %95, i64 0, !dbg !8527
  %96 = load i8, i8* %arrayidx139, align 1, !dbg !8527
  %conv140 = zext i8 %96 to i32, !dbg !8527
  %and = and i32 %conv140, -2, !dbg !8528
  %conv141 = trunc i32 %and to i8, !dbg !8527
  %97 = load i8*, i8** %exp.addr, align 8, !dbg !8529
  %arrayidx142 = getelementptr inbounds i8, i8* %97, i64 -1, !dbg !8529
  store i8 %conv141, i8* %arrayidx142, align 1, !dbg !8530
  br label %if.end143, !dbg !8529

if.end143:                                        ; preds = %if.then138, %while.end
  %98 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8531
  switch i32 %98, label %sw.epilog188 [
    i32 2, label %sw.bb144
    i32 3, label %sw.bb163
  ], !dbg !8532

sw.bb144:                                         ; preds = %if.end143
  %99 = load i32, i32* %nb_groups, align 4, !dbg !8533
  store i32 %99, i32* %i, align 4, !dbg !8536
  %100 = load i32, i32* %nb_groups, align 4, !dbg !8537
  %mul145 = mul nsw i32 %100, 2, !dbg !8538
  %101 = load i32, i32* %cpl.addr, align 4, !dbg !8539
  %sub146 = sub nsw i32 %mul145, %101, !dbg !8540
  store i32 %sub146, i32* %k, align 4, !dbg !8541
  br label %for.cond147, !dbg !8542

for.cond147:                                      ; preds = %for.inc160, %sw.bb144
  %102 = load i32, i32* %i, align 4, !dbg !8543
  %cmp148 = icmp sgt i32 %102, 0, !dbg !8546
  br i1 %cmp148, label %for.body150, label %for.end162, !dbg !8547

for.body150:                                      ; preds = %for.cond147
  call void @llvm.dbg.declare(metadata i8* %exp1, metadata !8548, metadata !2184), !dbg !8550
  %103 = load i32, i32* %i, align 4, !dbg !8551
  %104 = load i32, i32* %cpl.addr, align 4, !dbg !8552
  %sub151 = sub nsw i32 %103, %104, !dbg !8553
  %idxprom152 = sext i32 %sub151 to i64, !dbg !8554
  %105 = load i8*, i8** %exp.addr, align 8, !dbg !8554
  %arrayidx153 = getelementptr inbounds i8, i8* %105, i64 %idxprom152, !dbg !8554
  %106 = load i8, i8* %arrayidx153, align 1, !dbg !8554
  store i8 %106, i8* %exp1, align 1, !dbg !8550
  %107 = load i8, i8* %exp1, align 1, !dbg !8555
  %108 = load i32, i32* %k, align 4, !dbg !8556
  %dec154 = add nsw i32 %108, -1, !dbg !8556
  store i32 %dec154, i32* %k, align 4, !dbg !8556
  %idxprom155 = sext i32 %108 to i64, !dbg !8557
  %109 = load i8*, i8** %exp.addr, align 8, !dbg !8557
  %arrayidx156 = getelementptr inbounds i8, i8* %109, i64 %idxprom155, !dbg !8557
  store i8 %107, i8* %arrayidx156, align 1, !dbg !8558
  %110 = load i8, i8* %exp1, align 1, !dbg !8559
  %111 = load i32, i32* %k, align 4, !dbg !8560
  %dec157 = add nsw i32 %111, -1, !dbg !8560
  store i32 %dec157, i32* %k, align 4, !dbg !8560
  %idxprom158 = sext i32 %111 to i64, !dbg !8561
  %112 = load i8*, i8** %exp.addr, align 8, !dbg !8561
  %arrayidx159 = getelementptr inbounds i8, i8* %112, i64 %idxprom158, !dbg !8561
  store i8 %110, i8* %arrayidx159, align 1, !dbg !8562
  br label %for.inc160, !dbg !8563

for.inc160:                                       ; preds = %for.body150
  %113 = load i32, i32* %i, align 4, !dbg !8564
  %dec161 = add nsw i32 %113, -1, !dbg !8564
  store i32 %dec161, i32* %i, align 4, !dbg !8564
  br label %for.cond147, !dbg !8566, !llvm.loop !8567

for.end162:                                       ; preds = %for.cond147
  br label %sw.epilog188, !dbg !8569

sw.bb163:                                         ; preds = %if.end143
  %114 = load i32, i32* %nb_groups, align 4, !dbg !8570
  store i32 %114, i32* %i, align 4, !dbg !8572
  %115 = load i32, i32* %nb_groups, align 4, !dbg !8573
  %mul164 = mul nsw i32 %115, 4, !dbg !8574
  %116 = load i32, i32* %cpl.addr, align 4, !dbg !8575
  %sub165 = sub nsw i32 %mul164, %116, !dbg !8576
  store i32 %sub165, i32* %k, align 4, !dbg !8577
  br label %for.cond166, !dbg !8578

for.cond166:                                      ; preds = %for.inc185, %sw.bb163
  %117 = load i32, i32* %i, align 4, !dbg !8579
  %cmp167 = icmp sgt i32 %117, 0, !dbg !8582
  br i1 %cmp167, label %for.body169, label %for.end187, !dbg !8583

for.body169:                                      ; preds = %for.cond166
  %118 = load i32, i32* %i, align 4, !dbg !8584
  %119 = load i32, i32* %cpl.addr, align 4, !dbg !8586
  %sub170 = sub nsw i32 %118, %119, !dbg !8587
  %idxprom171 = sext i32 %sub170 to i64, !dbg !8588
  %120 = load i8*, i8** %exp.addr, align 8, !dbg !8588
  %arrayidx172 = getelementptr inbounds i8, i8* %120, i64 %idxprom171, !dbg !8588
  %121 = load i8, i8* %arrayidx172, align 1, !dbg !8588
  %122 = load i32, i32* %k, align 4, !dbg !8589
  %sub173 = sub nsw i32 %122, 3, !dbg !8590
  %idxprom174 = sext i32 %sub173 to i64, !dbg !8591
  %123 = load i8*, i8** %exp.addr, align 8, !dbg !8591
  %arrayidx175 = getelementptr inbounds i8, i8* %123, i64 %idxprom174, !dbg !8591
  store i8 %121, i8* %arrayidx175, align 1, !dbg !8592
  %124 = load i32, i32* %k, align 4, !dbg !8593
  %sub176 = sub nsw i32 %124, 2, !dbg !8594
  %idxprom177 = sext i32 %sub176 to i64, !dbg !8595
  %125 = load i8*, i8** %exp.addr, align 8, !dbg !8595
  %arrayidx178 = getelementptr inbounds i8, i8* %125, i64 %idxprom177, !dbg !8595
  store i8 %121, i8* %arrayidx178, align 1, !dbg !8596
  %126 = load i32, i32* %k, align 4, !dbg !8597
  %sub179 = sub nsw i32 %126, 1, !dbg !8598
  %idxprom180 = sext i32 %sub179 to i64, !dbg !8599
  %127 = load i8*, i8** %exp.addr, align 8, !dbg !8599
  %arrayidx181 = getelementptr inbounds i8, i8* %127, i64 %idxprom180, !dbg !8599
  store i8 %121, i8* %arrayidx181, align 1, !dbg !8600
  %128 = load i32, i32* %k, align 4, !dbg !8601
  %idxprom182 = sext i32 %128 to i64, !dbg !8602
  %129 = load i8*, i8** %exp.addr, align 8, !dbg !8602
  %arrayidx183 = getelementptr inbounds i8, i8* %129, i64 %idxprom182, !dbg !8602
  store i8 %121, i8* %arrayidx183, align 1, !dbg !8603
  %130 = load i32, i32* %k, align 4, !dbg !8604
  %sub184 = sub nsw i32 %130, 4, !dbg !8604
  store i32 %sub184, i32* %k, align 4, !dbg !8604
  br label %for.inc185, !dbg !8605

for.inc185:                                       ; preds = %for.body169
  %131 = load i32, i32* %i, align 4, !dbg !8606
  %dec186 = add nsw i32 %131, -1, !dbg !8606
  store i32 %dec186, i32* %i, align 4, !dbg !8606
  br label %for.cond166, !dbg !8608, !llvm.loop !8609

for.end187:                                       ; preds = %for.cond166
  br label %sw.epilog188, !dbg !8611

sw.epilog188:                                     ; preds = %if.end143, %for.end187, %for.end162
  ret void, !dbg !8612
}

declare void @ff_ac3_bit_alloc_calc_psd(i8*, i32, i32, i16*, i16*) #4

declare i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters*, i16*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i16*) #4

; Function Attrs: nounwind uwtable
define internal i32 @bit_alloc(%struct.AC3EncodeContext* %s, i32 %snr_offset) #0 !dbg !8613 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %snr_offset.addr = alloca i32, align 4
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !8616, metadata !2184), !dbg !8617
  store i32 %snr_offset, i32* %snr_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %snr_offset.addr, metadata !8618, metadata !2184), !dbg !8619
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !8620, metadata !2184), !dbg !8621
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8622, metadata !2184), !dbg !8623
  %0 = load i32, i32* %snr_offset.addr, align 4, !dbg !8624
  %sub = sub nsw i32 %0, 240, !dbg !8625
  %shl = shl i32 %sub, 2, !dbg !8626
  store i32 %shl, i32* %snr_offset.addr, align 4, !dbg !8627
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8628
  call void @reset_block_bap(%struct.AC3EncodeContext* %1), !dbg !8629
  store i32 0, i32* %blk, align 4, !dbg !8630
  br label %for.cond, !dbg !8632

for.cond:                                         ; preds = %for.inc22, %entry
  %2 = load i32, i32* %blk, align 4, !dbg !8633
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8636
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 18, !dbg !8637
  %4 = load i32, i32* %num_blocks, align 4, !dbg !8637
  %cmp = icmp slt i32 %2, %4, !dbg !8638
  br i1 %cmp, label %for.body, label %for.end24, !dbg !8639

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !8640, metadata !2184), !dbg !8642
  %5 = load i32, i32* %blk, align 4, !dbg !8643
  %idxprom = sext i32 %5 to i64, !dbg !8644
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8644
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 10, !dbg !8645
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !8644
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !8642
  %7 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8646
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %7, i32 0, i32 15, !dbg !8648
  %8 = load i32, i32* %cpl_in_use, align 4, !dbg !8648
  %tobool = icmp ne i32 %8, 0, !dbg !8649
  %lnot = xor i1 %tobool, true, !dbg !8649
  %lnot.ext = zext i1 %lnot to i32, !dbg !8649
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !8650
  br label %for.cond1, !dbg !8651

for.cond1:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %ch, align 4, !dbg !8652
  %10 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8655
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %10, i32 0, i32 26, !dbg !8656
  %11 = load i32, i32* %channels, align 4, !dbg !8656
  %cmp2 = icmp sle i32 %9, %11, !dbg !8657
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8658

for.body3:                                        ; preds = %for.cond1
  %12 = load i32, i32* %blk, align 4, !dbg !8659
  %idxprom4 = sext i32 %12 to i64, !dbg !8662
  %13 = load i32, i32* %ch, align 4, !dbg !8663
  %idxprom5 = sext i32 %13 to i64, !dbg !8662
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8662
  %exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 75, !dbg !8664
  %arrayidx6 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_strategy, i64 0, i64 %idxprom5, !dbg !8662
  %arrayidx7 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !8662
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !8662
  %conv = zext i8 %15 to i32, !dbg !8662
  %cmp8 = icmp ne i32 %conv, 0, !dbg !8665
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8666

if.then:                                          ; preds = %for.body3
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8667
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 7, !dbg !8669
  %bit_alloc_calc_bap = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 5, !dbg !8670
  %17 = load void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)** %bit_alloc_calc_bap, align 8, !dbg !8670
  %18 = load i32, i32* %ch, align 4, !dbg !8671
  %idxprom10 = sext i32 %18 to i64, !dbg !8672
  %19 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8672
  %mask = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %19, i32 0, i32 6, !dbg !8673
  %20 = load i16**, i16*** %mask, align 8, !dbg !8673
  %arrayidx11 = getelementptr inbounds i16*, i16** %20, i64 %idxprom10, !dbg !8672
  %21 = load i16*, i16** %arrayidx11, align 8, !dbg !8672
  %22 = load i32, i32* %ch, align 4, !dbg !8674
  %idxprom12 = sext i32 %22 to i64, !dbg !8675
  %23 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8675
  %psd = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %23, i32 0, i32 4, !dbg !8676
  %24 = load i16**, i16*** %psd, align 8, !dbg !8676
  %arrayidx13 = getelementptr inbounds i16*, i16** %24, i64 %idxprom12, !dbg !8675
  %25 = load i16*, i16** %arrayidx13, align 8, !dbg !8675
  %26 = load i32, i32* %ch, align 4, !dbg !8677
  %idxprom14 = sext i32 %26 to i64, !dbg !8678
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8678
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 41, !dbg !8679
  %arrayidx15 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom14, !dbg !8678
  %28 = load i32, i32* %arrayidx15, align 4, !dbg !8678
  %29 = load i32, i32* %ch, align 4, !dbg !8680
  %idxprom16 = sext i32 %29 to i64, !dbg !8681
  %30 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8681
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %30, i32 0, i32 22, !dbg !8682
  %arrayidx17 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom16, !dbg !8681
  %31 = load i32, i32* %arrayidx17, align 4, !dbg !8681
  %32 = load i32, i32* %snr_offset.addr, align 4, !dbg !8683
  %33 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8684
  %bit_alloc = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %33, i32 0, i32 54, !dbg !8685
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc, i32 0, i32 6, !dbg !8686
  %34 = load i32, i32* %floor, align 4, !dbg !8686
  %35 = load i32, i32* %blk, align 4, !dbg !8687
  %idxprom18 = sext i32 %35 to i64, !dbg !8688
  %36 = load i32, i32* %ch, align 4, !dbg !8689
  %idxprom19 = sext i32 %36 to i64, !dbg !8688
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8688
  %ref_bap = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 79, !dbg !8690
  %arrayidx20 = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap, i64 0, i64 %idxprom19, !dbg !8688
  %arrayidx21 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !8688
  %38 = load i8*, i8** %arrayidx21, align 8, !dbg !8688
  call void %17(i16* %21, i16* %25, i32 %28, i32 %31, i32 %32, i32 %34, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_ac3_bap_tab, i32 0, i32 0), i8* %38), !dbg !8667
  br label %if.end, !dbg !8691

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !8692

for.inc:                                          ; preds = %if.end
  %39 = load i32, i32* %ch, align 4, !dbg !8693
  %inc = add nsw i32 %39, 1, !dbg !8693
  store i32 %inc, i32* %ch, align 4, !dbg !8693
  br label %for.cond1, !dbg !8695, !llvm.loop !8696

for.end:                                          ; preds = %for.cond1
  br label %for.inc22, !dbg !8698

for.inc22:                                        ; preds = %for.end
  %40 = load i32, i32* %blk, align 4, !dbg !8699
  %inc23 = add nsw i32 %40, 1, !dbg !8699
  store i32 %inc23, i32* %blk, align 4, !dbg !8699
  br label %for.cond, !dbg !8701, !llvm.loop !8702

for.end24:                                        ; preds = %for.cond
  %41 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8704
  %call = call i32 @count_mantissa_bits(%struct.AC3EncodeContext* %41), !dbg !8705
  ret i32 %call, !dbg !8706
}

; Function Attrs: nounwind uwtable
define internal void @reset_block_bap(%struct.AC3EncodeContext* %s) #0 !dbg !8707 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %ref_bap = alloca i8*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !8708, metadata !2184), !dbg !8709
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !8710, metadata !2184), !dbg !8711
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8712, metadata !2184), !dbg !8713
  call void @llvm.dbg.declare(metadata i8** %ref_bap, metadata !8714, metadata !2184), !dbg !8715
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8716
  %ref_bap1 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 79, !dbg !8718
  %arrayidx = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap1, i64 0, i64 0, !dbg !8716
  %arrayidx2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx, i64 0, i64 0, !dbg !8716
  %1 = load i8*, i8** %arrayidx2, align 8, !dbg !8716
  %2 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8719
  %bap_buffer = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %2, i32 0, i32 63, !dbg !8720
  %3 = load i8*, i8** %bap_buffer, align 8, !dbg !8720
  %cmp = icmp eq i8* %1, %3, !dbg !8721
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8722

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8723
  %ref_bap_set = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 80, !dbg !8725
  %5 = load i32, i32* %ref_bap_set, align 8, !dbg !8725
  %tobool = icmp ne i32 %5, 0, !dbg !8723
  br i1 %tobool, label %if.then, label %if.end, !dbg !8726

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !8727

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8728
  %bap_buffer3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 63, !dbg !8729
  %7 = load i8*, i8** %bap_buffer3, align 8, !dbg !8729
  store i8* %7, i8** %ref_bap, align 8, !dbg !8730
  store i32 0, i32* %ch, align 4, !dbg !8731
  br label %for.cond, !dbg !8733

for.cond:                                         ; preds = %for.inc20, %if.end
  %8 = load i32, i32* %ch, align 4, !dbg !8734
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8737
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 26, !dbg !8738
  %10 = load i32, i32* %channels, align 4, !dbg !8738
  %cmp4 = icmp sle i32 %8, %10, !dbg !8739
  br i1 %cmp4, label %for.body, label %for.end22, !dbg !8740

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %blk, align 4, !dbg !8741
  br label %for.cond5, !dbg !8744

for.cond5:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %blk, align 4, !dbg !8745
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8748
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 18, !dbg !8749
  %13 = load i32, i32* %num_blocks, align 4, !dbg !8749
  %cmp6 = icmp slt i32 %11, %13, !dbg !8750
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !8751

for.body7:                                        ; preds = %for.cond5
  %14 = load i8*, i8** %ref_bap, align 8, !dbg !8752
  %15 = load i32, i32* %blk, align 4, !dbg !8753
  %idxprom = sext i32 %15 to i64, !dbg !8754
  %16 = load i32, i32* %ch, align 4, !dbg !8755
  %idxprom8 = sext i32 %16 to i64, !dbg !8754
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8754
  %exp_ref_block = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 78, !dbg !8756
  %arrayidx9 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* %exp_ref_block, i64 0, i64 %idxprom8, !dbg !8754
  %arrayidx10 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx9, i64 0, i64 %idxprom, !dbg !8754
  %18 = load i8, i8* %arrayidx10, align 1, !dbg !8754
  %conv = zext i8 %18 to i32, !dbg !8754
  %mul = mul nsw i32 256, %conv, !dbg !8757
  %idx.ext = sext i32 %mul to i64, !dbg !8758
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !8758
  %19 = load i32, i32* %blk, align 4, !dbg !8759
  %idxprom11 = sext i32 %19 to i64, !dbg !8760
  %20 = load i32, i32* %ch, align 4, !dbg !8761
  %idxprom12 = sext i32 %20 to i64, !dbg !8760
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8760
  %ref_bap13 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 79, !dbg !8762
  %arrayidx14 = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap13, i64 0, i64 %idxprom12, !dbg !8760
  %arrayidx15 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !8760
  store i8* %add.ptr, i8** %arrayidx15, align 8, !dbg !8763
  br label %for.inc, !dbg !8760

for.inc:                                          ; preds = %for.body7
  %22 = load i32, i32* %blk, align 4, !dbg !8764
  %inc = add nsw i32 %22, 1, !dbg !8764
  store i32 %inc, i32* %blk, align 4, !dbg !8764
  br label %for.cond5, !dbg !8766, !llvm.loop !8767

for.end:                                          ; preds = %for.cond5
  %23 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8769
  %num_blocks16 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %23, i32 0, i32 18, !dbg !8770
  %24 = load i32, i32* %num_blocks16, align 4, !dbg !8770
  %mul17 = mul nsw i32 256, %24, !dbg !8771
  %25 = load i8*, i8** %ref_bap, align 8, !dbg !8772
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !8772
  %add.ptr19 = getelementptr inbounds i8, i8* %25, i64 %idx.ext18, !dbg !8772
  store i8* %add.ptr19, i8** %ref_bap, align 8, !dbg !8772
  br label %for.inc20, !dbg !8773

for.inc20:                                        ; preds = %for.end
  %26 = load i32, i32* %ch, align 4, !dbg !8774
  %inc21 = add nsw i32 %26, 1, !dbg !8774
  store i32 %inc21, i32* %ch, align 4, !dbg !8774
  br label %for.cond, !dbg !8776, !llvm.loop !8777

for.end22:                                        ; preds = %for.cond
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8779
  %ref_bap_set23 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 80, !dbg !8780
  store i32 1, i32* %ref_bap_set23, align 8, !dbg !8781
  br label %return, !dbg !8782

return:                                           ; preds = %for.end22, %if.then
  ret void, !dbg !8783
}

; Function Attrs: nounwind uwtable
define internal i32 @count_mantissa_bits(%struct.AC3EncodeContext* %s) #0 !dbg !8785 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch = alloca i32, align 4
  %max_end_freq = alloca i32, align 4
  %la_mant_cnt = alloca [6 x [16 x i16]], align 16
  %mant_cnt = alloca [16 x i16]*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !8786, metadata !2184), !dbg !8787
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8788, metadata !2184), !dbg !8789
  call void @llvm.dbg.declare(metadata i32* %max_end_freq, metadata !8790, metadata !2184), !dbg !8791
  call void @llvm.dbg.declare(metadata [6 x [16 x i16]]* %la_mant_cnt, metadata !8792, metadata !2184), !dbg !8795
  call void @llvm.dbg.declare(metadata [16 x i16]** %mant_cnt, metadata !8796, metadata !2184), !dbg !8797
  %arraydecay = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* %la_mant_cnt, i32 0, i32 0, !dbg !8798
  store [16 x i16]* %arraydecay, [16 x i16]** %mant_cnt, align 8, !dbg !8797
  %0 = load [16 x i16]*, [16 x i16]** %mant_cnt, align 8, !dbg !8799
  call void @count_mantissa_bits_init([16 x i16]* %0), !dbg !8800
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8801
  %bandwidth_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 40, !dbg !8802
  %2 = load i32, i32* %bandwidth_code, align 4, !dbg !8802
  %mul = mul nsw i32 %2, 3, !dbg !8803
  %add = add nsw i32 %mul, 73, !dbg !8804
  store i32 %add, i32* %max_end_freq, align 4, !dbg !8805
  %3 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8806
  %cpl_enabled = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %3, i32 0, i32 44, !dbg !8808
  %4 = load i32, i32* %cpl_enabled, align 4, !dbg !8808
  %tobool = icmp ne i32 %4, 0, !dbg !8809
  %lnot = xor i1 %tobool, true, !dbg !8809
  %lnot.ext = zext i1 %lnot to i32, !dbg !8809
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !8810
  br label %for.cond, !dbg !8811

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %ch, align 4, !dbg !8812
  %6 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8815
  %channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %6, i32 0, i32 26, !dbg !8816
  %7 = load i32, i32* %channels, align 4, !dbg !8816
  %cmp = icmp sle i32 %5, %7, !dbg !8817
  br i1 %cmp, label %for.body, label %for.end, !dbg !8818

for.body:                                         ; preds = %for.cond
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8819
  %9 = load i32, i32* %ch, align 4, !dbg !8820
  %10 = load [16 x i16]*, [16 x i16]** %mant_cnt, align 8, !dbg !8821
  %11 = load i32, i32* %ch, align 4, !dbg !8822
  %idxprom = sext i32 %11 to i64, !dbg !8823
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8823
  %start_freq = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 41, !dbg !8824
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom, !dbg !8823
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8823
  %14 = load i32, i32* %max_end_freq, align 4, !dbg !8825
  call void @count_mantissa_bits_update_ch(%struct.AC3EncodeContext* %8, i32 %9, [16 x i16]* %10, i32 %13, i32 %14), !dbg !8826
  br label %for.inc, !dbg !8826

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %ch, align 4, !dbg !8827
  %inc = add nsw i32 %15, 1, !dbg !8827
  store i32 %inc, i32* %ch, align 4, !dbg !8827
  br label %for.cond, !dbg !8829, !llvm.loop !8830

for.end:                                          ; preds = %for.cond
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8832
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 7, !dbg !8833
  %compute_mantissa_size = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 7, !dbg !8834
  %17 = load i32 ([16 x i16]*)*, i32 ([16 x i16]*)** %compute_mantissa_size, align 8, !dbg !8834
  %18 = load [16 x i16]*, [16 x i16]** %mant_cnt, align 8, !dbg !8835
  %call = call i32 %17([16 x i16]* %18), !dbg !8832
  ret i32 %call, !dbg !8836
}

; Function Attrs: nounwind uwtable
define internal void @count_mantissa_bits_init([16 x i16]* %mant_cnt) #0 !dbg !8837 {
entry:
  %mant_cnt.addr = alloca [16 x i16]*, align 8
  %blk = alloca i32, align 4
  store [16 x i16]* %mant_cnt, [16 x i16]** %mant_cnt.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i16]** %mant_cnt.addr, metadata !8840, metadata !2184), !dbg !8841
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !8842, metadata !2184), !dbg !8843
  store i32 0, i32* %blk, align 4, !dbg !8844
  br label %for.cond, !dbg !8846

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !8847
  %cmp = icmp slt i32 %0, 6, !dbg !8850
  br i1 %cmp, label %for.body, label %for.end, !dbg !8851

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %blk, align 4, !dbg !8852
  %idxprom = sext i32 %1 to i64, !dbg !8854
  %2 = load [16 x i16]*, [16 x i16]** %mant_cnt.addr, align 8, !dbg !8854
  %arrayidx = getelementptr inbounds [16 x i16], [16 x i16]* %2, i64 %idxprom, !dbg !8854
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx, i32 0, i32 0, !dbg !8855
  %3 = bitcast i16* %arraydecay to i8*, !dbg !8855
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 2, i1 false), !dbg !8855
  %4 = load i32, i32* %blk, align 4, !dbg !8856
  %idxprom1 = sext i32 %4 to i64, !dbg !8857
  %5 = load [16 x i16]*, [16 x i16]** %mant_cnt.addr, align 8, !dbg !8857
  %arrayidx2 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 %idxprom1, !dbg !8857
  %arrayidx3 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 2, !dbg !8857
  store i16 2, i16* %arrayidx3, align 2, !dbg !8858
  %6 = load i32, i32* %blk, align 4, !dbg !8859
  %idxprom4 = sext i32 %6 to i64, !dbg !8860
  %7 = load [16 x i16]*, [16 x i16]** %mant_cnt.addr, align 8, !dbg !8860
  %arrayidx5 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 %idxprom4, !dbg !8860
  %arrayidx6 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx5, i64 0, i64 1, !dbg !8860
  store i16 2, i16* %arrayidx6, align 2, !dbg !8861
  %8 = load i32, i32* %blk, align 4, !dbg !8862
  %idxprom7 = sext i32 %8 to i64, !dbg !8863
  %9 = load [16 x i16]*, [16 x i16]** %mant_cnt.addr, align 8, !dbg !8863
  %arrayidx8 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 %idxprom7, !dbg !8863
  %arrayidx9 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx8, i64 0, i64 4, !dbg !8863
  store i16 1, i16* %arrayidx9, align 2, !dbg !8864
  br label %for.inc, !dbg !8865

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %blk, align 4, !dbg !8866
  %inc = add nsw i32 %10, 1, !dbg !8866
  store i32 %inc, i32* %blk, align 4, !dbg !8866
  br label %for.cond, !dbg !8868, !llvm.loop !8869

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8871
}

; Function Attrs: nounwind uwtable
define internal void @count_mantissa_bits_update_ch(%struct.AC3EncodeContext* %s, i32 %ch, [16 x i16]* %mant_cnt, i32 %start, i32 %end) #0 !dbg !8872 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %ch.addr = alloca i32, align 4
  %mant_cnt.addr = alloca [16 x i16]*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %blk = alloca i32, align 4
  %block = alloca %struct.AC3Block*, align 8
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !8875, metadata !2184), !dbg !8876
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !8877, metadata !2184), !dbg !8878
  store [16 x i16]* %mant_cnt, [16 x i16]** %mant_cnt.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i16]** %mant_cnt.addr, metadata !8879, metadata !2184), !dbg !8880
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !8881, metadata !2184), !dbg !8882
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !8883, metadata !2184), !dbg !8884
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !8885, metadata !2184), !dbg !8886
  store i32 0, i32* %blk, align 4, !dbg !8887
  br label %for.cond, !dbg !8889

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %blk, align 4, !dbg !8890
  %1 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8893
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %1, i32 0, i32 18, !dbg !8894
  %2 = load i32, i32* %num_blocks, align 4, !dbg !8894
  %cmp = icmp slt i32 %0, %2, !dbg !8895
  br i1 %cmp, label %for.body, label %for.end, !dbg !8896

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AC3Block** %block, metadata !8897, metadata !2184), !dbg !8899
  %3 = load i32, i32* %blk, align 4, !dbg !8900
  %idxprom = sext i32 %3 to i64, !dbg !8901
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8901
  %blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 10, !dbg !8902
  %arrayidx = getelementptr inbounds [6 x %struct.AC3Block], [6 x %struct.AC3Block]* %blocks, i64 0, i64 %idxprom, !dbg !8901
  store %struct.AC3Block* %arrayidx, %struct.AC3Block** %block, align 8, !dbg !8899
  %5 = load i32, i32* %ch.addr, align 4, !dbg !8903
  %cmp1 = icmp eq i32 %5, 0, !dbg !8905
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !8906

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8907
  %cpl_in_use = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %6, i32 0, i32 15, !dbg !8909
  %7 = load i32, i32* %cpl_in_use, align 4, !dbg !8909
  %tobool = icmp ne i32 %7, 0, !dbg !8907
  br i1 %tobool, label %if.end, label %if.then, !dbg !8910

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !8911

if.end:                                           ; preds = %land.lhs.true, %for.body
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8912
  %ac3dsp = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 7, !dbg !8913
  %update_bap_counts = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 6, !dbg !8914
  %9 = load void (i16*, i8*, i32)*, void (i16*, i8*, i32)** %update_bap_counts, align 8, !dbg !8914
  %10 = load i32, i32* %blk, align 4, !dbg !8915
  %idxprom2 = sext i32 %10 to i64, !dbg !8916
  %11 = load [16 x i16]*, [16 x i16]** %mant_cnt.addr, align 8, !dbg !8916
  %arrayidx3 = getelementptr inbounds [16 x i16], [16 x i16]* %11, i64 %idxprom2, !dbg !8916
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx3, i32 0, i32 0, !dbg !8916
  %12 = load i32, i32* %blk, align 4, !dbg !8917
  %idxprom4 = sext i32 %12 to i64, !dbg !8918
  %13 = load i32, i32* %ch.addr, align 4, !dbg !8919
  %idxprom5 = sext i32 %13 to i64, !dbg !8918
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !8918
  %ref_bap = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 79, !dbg !8920
  %arrayidx6 = getelementptr inbounds [7 x [6 x i8*]], [7 x [6 x i8*]]* %ref_bap, i64 0, i64 %idxprom5, !dbg !8918
  %arrayidx7 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !8918
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !8918
  %16 = load i32, i32* %start.addr, align 4, !dbg !8921
  %idx.ext = sext i32 %16 to i64, !dbg !8922
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !8922
  %17 = load i32, i32* %end.addr, align 4, !dbg !8923
  %18 = load i32, i32* %ch.addr, align 4, !dbg !8924
  %idxprom8 = sext i32 %18 to i64, !dbg !8925
  %19 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8925
  %end_freq = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %19, i32 0, i32 22, !dbg !8926
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom8, !dbg !8925
  %20 = load i32, i32* %arrayidx9, align 4, !dbg !8925
  %cmp10 = icmp sgt i32 %17, %20, !dbg !8927
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !8928

cond.true:                                        ; preds = %if.end
  %21 = load i32, i32* %ch.addr, align 4, !dbg !8929
  %idxprom11 = sext i32 %21 to i64, !dbg !8931
  %22 = load %struct.AC3Block*, %struct.AC3Block** %block, align 8, !dbg !8931
  %end_freq12 = getelementptr inbounds %struct.AC3Block, %struct.AC3Block* %22, i32 0, i32 22, !dbg !8932
  %arrayidx13 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq12, i64 0, i64 %idxprom11, !dbg !8931
  %23 = load i32, i32* %arrayidx13, align 4, !dbg !8931
  br label %cond.end, !dbg !8933

cond.false:                                       ; preds = %if.end
  %24 = load i32, i32* %end.addr, align 4, !dbg !8934
  br label %cond.end, !dbg !8936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %24, %cond.false ], !dbg !8937
  %25 = load i32, i32* %start.addr, align 4, !dbg !8939
  %sub = sub nsw i32 %cond, %25, !dbg !8940
  call void %9(i16* %arraydecay, i8* %add.ptr, i32 %sub), !dbg !8941
  br label %for.inc, !dbg !8942

for.inc:                                          ; preds = %cond.end, %if.then
  %26 = load i32, i32* %blk, align 4, !dbg !8943
  %inc = add nsw i32 %26, 1, !dbg !8943
  store i32 %inc, i32* %blk, align 4, !dbg !8943
  br label %for.cond, !dbg !8945, !llvm.loop !8946

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8948
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sym_quant(i32 %c, i32 %e, i32 %levels) #3 !dbg !8949 {
entry:
  %c.addr = alloca i32, align 4
  %e.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !8950, metadata !2184), !dbg !8951
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !8952, metadata !2184), !dbg !8953
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !8954, metadata !2184), !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8956, metadata !2184), !dbg !8957
  %0 = load i32, i32* %levels.addr, align 4, !dbg !8958
  %1 = load i32, i32* %c.addr, align 4, !dbg !8959
  %mul = mul nsw i32 %0, %1, !dbg !8960
  %2 = load i32, i32* %e.addr, align 4, !dbg !8961
  %sub = sub nsw i32 24, %2, !dbg !8962
  %shr = ashr i32 %mul, %sub, !dbg !8963
  %3 = load i32, i32* %levels.addr, align 4, !dbg !8964
  %add = add nsw i32 %shr, %3, !dbg !8965
  %shr1 = ashr i32 %add, 1, !dbg !8966
  store i32 %shr1, i32* %v, align 4, !dbg !8957
  %4 = load i32, i32* %v, align 4, !dbg !8967
  ret i32 %4, !dbg !8968
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @asym_quant(i32 %c, i32 %e, i32 %qbits) #3 !dbg !8969 {
entry:
  %c.addr = alloca i32, align 4
  %e.addr = alloca i32, align 4
  %qbits.addr = alloca i32, align 4
  %m = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !8970, metadata !2184), !dbg !8971
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !8972, metadata !2184), !dbg !8973
  store i32 %qbits, i32* %qbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qbits.addr, metadata !8974, metadata !2184), !dbg !8975
  call void @llvm.dbg.declare(metadata i32* %m, metadata !8976, metadata !2184), !dbg !8977
  %0 = load i32, i32* %c.addr, align 4, !dbg !8978
  %1 = load i32, i32* %e.addr, align 4, !dbg !8979
  %shl = shl i32 1, %1, !dbg !8980
  %mul = mul nsw i32 %0, %shl, !dbg !8981
  %2 = load i32, i32* %qbits.addr, align 4, !dbg !8982
  %sub = sub nsw i32 24, %2, !dbg !8983
  %shr = ashr i32 %mul, %sub, !dbg !8984
  %add = add nsw i32 %shr, 1, !dbg !8985
  %shr1 = ashr i32 %add, 1, !dbg !8986
  store i32 %shr1, i32* %c.addr, align 4, !dbg !8987
  %3 = load i32, i32* %qbits.addr, align 4, !dbg !8988
  %sub2 = sub nsw i32 %3, 1, !dbg !8989
  %shl3 = shl i32 1, %sub2, !dbg !8990
  store i32 %shl3, i32* %m, align 4, !dbg !8991
  %4 = load i32, i32* %c.addr, align 4, !dbg !8992
  %5 = load i32, i32* %m, align 4, !dbg !8994
  %cmp = icmp sge i32 %4, %5, !dbg !8995
  br i1 %cmp, label %if.then, label %if.end, !dbg !8996

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %m, align 4, !dbg !8997
  %sub4 = sub nsw i32 %6, 1, !dbg !8998
  store i32 %sub4, i32* %c.addr, align 4, !dbg !8999
  br label %if.end, !dbg !9000

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %c.addr, align 4, !dbg !9001
  ret i32 %7, !dbg !9002
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #3 !dbg !9003 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !9006, metadata !2184), !dbg !9010
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9016, metadata !2184), !dbg !9017
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9018, metadata !2184), !dbg !9019
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9020, metadata !2184), !dbg !9021
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !9022, metadata !2184), !dbg !9023
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !9024, metadata !2184), !dbg !9025
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9026
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !9027
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !9027
  store i32 %1, i32* %bit_buf, align 4, !dbg !9028
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9029
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !9030
  %3 = load i32, i32* %bit_left2, align 4, !dbg !9030
  store i32 %3, i32* %bit_left, align 4, !dbg !9031
  %4 = load i32, i32* %n.addr, align 4, !dbg !9032
  %5 = load i32, i32* %bit_left, align 4, !dbg !9033
  %cmp = icmp slt i32 %4, %5, !dbg !9034
  br i1 %cmp, label %if.then, label %if.else, !dbg !9035

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !9036
  %7 = load i32, i32* %n.addr, align 4, !dbg !9038
  %shl = shl i32 %6, %7, !dbg !9039
  %8 = load i32, i32* %value.addr, align 4, !dbg !9040
  %or = or i32 %shl, %8, !dbg !9041
  store i32 %or, i32* %bit_buf, align 4, !dbg !9042
  %9 = load i32, i32* %n.addr, align 4, !dbg !9043
  %10 = load i32, i32* %bit_left, align 4, !dbg !9044
  %sub = sub nsw i32 %10, %9, !dbg !9044
  store i32 %sub, i32* %bit_left, align 4, !dbg !9044
  br label %if.end12, !dbg !9045

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !9046
  %12 = load i32, i32* %bit_buf, align 4, !dbg !9047
  %shl3 = shl i32 %12, %11, !dbg !9047
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !9047
  %13 = load i32, i32* %value.addr, align 4, !dbg !9048
  %14 = load i32, i32* %n.addr, align 4, !dbg !9049
  %15 = load i32, i32* %bit_left, align 4, !dbg !9050
  %sub4 = sub nsw i32 %14, %15, !dbg !9051
  %shr = lshr i32 %13, %sub4, !dbg !9052
  %16 = load i32, i32* %bit_buf, align 4, !dbg !9053
  %or5 = or i32 %16, %shr, !dbg !9053
  store i32 %or5, i32* %bit_buf, align 4, !dbg !9053
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9054
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !9055
  %18 = load i8*, i8** %buf_end, align 8, !dbg !9055
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9056
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !9057
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !9057
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9058
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !9058
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9058
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !9059
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !9060

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !9061
  store i32 %21, i32* %x.addr.i, align 4, !dbg !9062
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !9063
  %shl.i = shl i32 %22, 8, !dbg !9064
  %and.i = and i32 %shl.i, 65280, !dbg !9065
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !9066
  %shr.i = lshr i32 %23, 8, !dbg !9067
  %and1.i = and i32 %shr.i, 255, !dbg !9068
  %or.i = or i32 %and.i, %and1.i, !dbg !9069
  %shl2.i = shl i32 %or.i, 16, !dbg !9070
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !9071
  %shr3.i = lshr i32 %24, 16, !dbg !9072
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9073
  %and5.i = and i32 %shl4.i, 65280, !dbg !9074
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !9075
  %shr6.i = lshr i32 %25, 16, !dbg !9076
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9077
  %and8.i = and i32 %shr7.i, 255, !dbg !9078
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9079
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9080
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9081
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !9082
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !9082
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !9083
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !9083
  store i32 %or10.i, i32* %l, align 1, !dbg !9084
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9085
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !9086
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !9087
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !9087
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !9087
  br label %if.end, !dbg !9088

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)), !dbg !9089
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !9091
  %sub11 = sub nsw i32 32, %31, !dbg !9092
  %32 = load i32, i32* %bit_left, align 4, !dbg !9093
  %add = add nsw i32 %32, %sub11, !dbg !9093
  store i32 %add, i32* %bit_left, align 4, !dbg !9093
  %33 = load i32, i32* %value.addr, align 4, !dbg !9094
  store i32 %33, i32* %bit_buf, align 4, !dbg !9095
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !9096
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9097
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !9098
  store i32 %34, i32* %bit_buf13, align 8, !dbg !9099
  %36 = load i32, i32* %bit_left, align 4, !dbg !9100
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9101
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !9102
  store i32 %36, i32* %bit_left14, align 4, !dbg !9103
  ret void, !dbg !9104
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_sbits(%struct.PutBitContext* %pb, i32 %n, i32 %value) #3 !dbg !9105 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !9108, metadata !2184), !dbg !9112
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !9114, metadata !2184), !dbg !9115
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !9116, metadata !2184), !dbg !9117
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9118, metadata !2184), !dbg !9119
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9120, metadata !2184), !dbg !9121
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !9122
  %1 = load i32, i32* %n.addr, align 4, !dbg !9123
  %2 = load i32, i32* %value.addr, align 4, !dbg !9124
  %3 = load i32, i32* %n.addr, align 4, !dbg !9125
  store i32 %2, i32* %a.addr.i, align 4, !dbg !9126
  store i32 %3, i32* %p.addr.i, align 4, !dbg !9126
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !9127
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !9128
  %shl.i = shl i32 1, %5, !dbg !9129
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9130
  %and.i = and i32 %4, %sub.i, !dbg !9131
  call void @put_bits(%struct.PutBitContext* %0, i32 %1, i32 %and.i), !dbg !9132
  ret void, !dbg !9134
}

declare i32* @av_crc_get_table(i32) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #3 !dbg !9135 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9138, metadata !2184), !dbg !9139
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9140
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !9142
  %1 = load i32, i32* %bit_left, align 4, !dbg !9142
  %cmp = icmp slt i32 %1, 32, !dbg !9143
  br i1 %cmp, label %if.then, label %if.end, !dbg !9144

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9145
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !9146
  %3 = load i32, i32* %bit_left1, align 4, !dbg !9146
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9147
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !9148
  %5 = load i32, i32* %bit_buf, align 8, !dbg !9149
  %shl = shl i32 %5, %3, !dbg !9149
  store i32 %shl, i32* %bit_buf, align 8, !dbg !9149
  br label %if.end, !dbg !9147

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !9150

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9151
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !9153
  %7 = load i32, i32* %bit_left2, align 4, !dbg !9153
  %cmp3 = icmp slt i32 %7, 32, !dbg !9154
  br i1 %cmp3, label %while.body, label %while.end, !dbg !9155

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !9156, !llvm.loop !9158

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9159
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !9163
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !9163
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9164
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !9165
  %11 = load i8*, i8** %buf_end, align 8, !dbg !9165
  %cmp4 = icmp ult i8* %9, %11, !dbg !9166
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !9167

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 108), !dbg !9168
  call void @abort() #11, !dbg !9171
  unreachable, !dbg !9173

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !9174

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9176
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !9177
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !9177
  %shr = lshr i32 %13, 24, !dbg !9178
  %conv = trunc i32 %shr to i8, !dbg !9176
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9179
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !9180
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !9181
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !9181
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !9181
  store i8 %conv, i8* %15, align 1, !dbg !9182
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9183
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !9184
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !9185
  %shl10 = shl i32 %17, 8, !dbg !9185
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !9185
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9186
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !9187
  %19 = load i32, i32* %bit_left11, align 4, !dbg !9188
  %add = add nsw i32 %19, 8, !dbg !9188
  store i32 %add, i32* %bit_left11, align 4, !dbg !9188
  br label %while.cond, !dbg !9189, !llvm.loop !9191

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9192
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !9193
  store i32 32, i32* %bit_left12, align 4, !dbg !9194
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9195
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !9196
  store i32 0, i32* %bit_buf13, align 8, !dbg !9197
  ret void, !dbg !9198
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @put_bits_ptr(%struct.PutBitContext* %s) #3 !dbg !9199 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9202, metadata !2184), !dbg !9203
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9204
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !9205
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !9205
  ret i8* %1, !dbg !9206
}

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #6

; Function Attrs: nounwind uwtable
define internal i32 @mul_poly(i32 %a, i32 %b, i32 %poly) #0 !dbg !9207 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %poly.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9208, metadata !2184), !dbg !9209
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9210, metadata !2184), !dbg !9211
  store i32 %poly, i32* %poly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %poly.addr, metadata !9212, metadata !2184), !dbg !9213
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9214, metadata !2184), !dbg !9215
  store i32 0, i32* %c, align 4, !dbg !9216
  br label %while.cond, !dbg !9217

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a.addr, align 4, !dbg !9218
  %tobool = icmp ne i32 %0, 0, !dbg !9220
  br i1 %tobool, label %while.body, label %while.end, !dbg !9220

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %a.addr, align 4, !dbg !9221
  %and = and i32 %1, 1, !dbg !9224
  %tobool1 = icmp ne i32 %and, 0, !dbg !9224
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9225

if.then:                                          ; preds = %while.body
  %2 = load i32, i32* %b.addr, align 4, !dbg !9226
  %3 = load i32, i32* %c, align 4, !dbg !9227
  %xor = xor i32 %3, %2, !dbg !9227
  store i32 %xor, i32* %c, align 4, !dbg !9227
  br label %if.end, !dbg !9228

if.end:                                           ; preds = %if.then, %while.body
  %4 = load i32, i32* %a.addr, align 4, !dbg !9229
  %shr = lshr i32 %4, 1, !dbg !9230
  store i32 %shr, i32* %a.addr, align 4, !dbg !9231
  %5 = load i32, i32* %b.addr, align 4, !dbg !9232
  %shl = shl i32 %5, 1, !dbg !9233
  store i32 %shl, i32* %b.addr, align 4, !dbg !9234
  %6 = load i32, i32* %b.addr, align 4, !dbg !9235
  %and2 = and i32 %6, 65536, !dbg !9237
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9237
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9238

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %poly.addr, align 4, !dbg !9239
  %8 = load i32, i32* %b.addr, align 4, !dbg !9240
  %xor5 = xor i32 %8, %7, !dbg !9240
  store i32 %xor5, i32* %b.addr, align 4, !dbg !9240
  br label %if.end6, !dbg !9241

if.end6:                                          ; preds = %if.then4, %if.end
  br label %while.cond, !dbg !9242, !llvm.loop !9244

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %c, align 4, !dbg !9245
  ret i32 %9, !dbg !9246
}

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: nounwind uwtable
define internal i32 @validate_float_option(float %v, float* %v_list, i32 %v_list_size) #0 !dbg !9247 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca float, align 4
  %v_list.addr = alloca float*, align 8
  %v_list_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !9250, metadata !2184), !dbg !9251
  store float* %v_list, float** %v_list.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v_list.addr, metadata !9252, metadata !2184), !dbg !9253
  store i32 %v_list_size, i32* %v_list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v_list_size.addr, metadata !9254, metadata !2184), !dbg !9255
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9256, metadata !2184), !dbg !9257
  store i32 0, i32* %i, align 4, !dbg !9258
  br label %for.cond, !dbg !9260

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9261
  %1 = load i32, i32* %v_list_size.addr, align 4, !dbg !9264
  %cmp = icmp slt i32 %0, %1, !dbg !9265
  br i1 %cmp, label %for.body, label %for.end, !dbg !9266

for.body:                                         ; preds = %for.cond
  %2 = load float, float* %v.addr, align 4, !dbg !9267
  %conv = fpext float %2 to double, !dbg !9267
  %3 = load i32, i32* %i, align 4, !dbg !9270
  %idxprom = sext i32 %3 to i64, !dbg !9271
  %4 = load float*, float** %v_list.addr, align 8, !dbg !9271
  %arrayidx = getelementptr inbounds float, float* %4, i64 %idxprom, !dbg !9271
  %5 = load float, float* %arrayidx, align 4, !dbg !9271
  %conv1 = fpext float %5 to double, !dbg !9271
  %add = fadd double %conv1, 1.000000e-02, !dbg !9272
  %cmp2 = fcmp olt double %conv, %add, !dbg !9273
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !9274

land.lhs.true:                                    ; preds = %for.body
  %6 = load float, float* %v.addr, align 4, !dbg !9275
  %conv4 = fpext float %6 to double, !dbg !9275
  %7 = load i32, i32* %i, align 4, !dbg !9276
  %idxprom5 = sext i32 %7 to i64, !dbg !9277
  %8 = load float*, float** %v_list.addr, align 8, !dbg !9277
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idxprom5, !dbg !9277
  %9 = load float, float* %arrayidx6, align 4, !dbg !9277
  %conv7 = fpext float %9 to double, !dbg !9277
  %sub = fsub double %conv7, 1.000000e-02, !dbg !9278
  %cmp8 = fcmp ogt double %conv4, %sub, !dbg !9279
  br i1 %cmp8, label %if.then, label %if.end, !dbg !9280

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !9282

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !9283

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !9284
  %inc = add nsw i32 %10, 1, !dbg !9284
  store i32 %inc, i32* %i, align 4, !dbg !9284
  br label %for.cond, !dbg !9286, !llvm.loop !9287

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !9289
  %12 = load i32, i32* %v_list_size.addr, align 4, !dbg !9291
  %cmp10 = icmp eq i32 %11, %12, !dbg !9292
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9293

if.then12:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !9294
  br label %return, !dbg !9294

if.end13:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !9295
  store i32 %13, i32* %retval, align 4, !dbg !9296
  br label %return, !dbg !9296

return:                                           ; preds = %if.end13, %if.then12
  %14 = load i32, i32* %retval, align 4, !dbg !9297
  ret i32 %14, !dbg !9297
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @set_channel_info(%struct.AC3EncodeContext* %s, i32 %channels, i64* %channel_layout) #5 !dbg !9298 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %channels.addr = alloca i32, align 4
  %channel_layout.addr = alloca i64*, align 8
  %ch_layout = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !9302, metadata !2184), !dbg !9303
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !9304, metadata !2184), !dbg !9305
  store i64* %channel_layout, i64** %channel_layout.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %channel_layout.addr, metadata !9306, metadata !2184), !dbg !9307
  call void @llvm.dbg.declare(metadata i32* %ch_layout, metadata !9308, metadata !2184), !dbg !9309
  %0 = load i32, i32* %channels.addr, align 4, !dbg !9310
  %cmp = icmp slt i32 %0, 1, !dbg !9312
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9313

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %channels.addr, align 4, !dbg !9314
  %cmp1 = icmp sgt i32 %1, 7, !dbg !9316
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9317

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9318
  br label %return, !dbg !9318

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i64*, i64** %channel_layout.addr, align 8, !dbg !9319
  %3 = load i64, i64* %2, align 8, !dbg !9321
  %cmp2 = icmp ugt i64 %3, 2047, !dbg !9322
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9323

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9324
  br label %return, !dbg !9324

if.end4:                                          ; preds = %if.end
  %4 = load i64*, i64** %channel_layout.addr, align 8, !dbg !9325
  %5 = load i64, i64* %4, align 8, !dbg !9326
  %conv = trunc i64 %5 to i32, !dbg !9326
  store i32 %conv, i32* %ch_layout, align 4, !dbg !9327
  %6 = load i32, i32* %ch_layout, align 4, !dbg !9328
  %tobool = icmp ne i32 %6, 0, !dbg !9328
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !9330

if.then5:                                         ; preds = %if.end4
  %7 = load i32, i32* %channels.addr, align 4, !dbg !9331
  %call = call i64 @av_get_default_channel_layout(i32 %7), !dbg !9332
  %conv6 = trunc i64 %call to i32, !dbg !9332
  store i32 %conv6, i32* %ch_layout, align 4, !dbg !9333
  br label %if.end7, !dbg !9334

if.end7:                                          ; preds = %if.then5, %if.end4
  %8 = load i32, i32* %ch_layout, align 4, !dbg !9335
  %and = and i32 %8, 8, !dbg !9336
  %tobool8 = icmp ne i32 %and, 0, !dbg !9337
  %lnot = xor i1 %tobool8, true, !dbg !9337
  %lnot9 = xor i1 %lnot, true, !dbg !9338
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !9338
  %9 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9339
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %9, i32 0, i32 27, !dbg !9340
  store i32 %lnot.ext, i32* %lfe_on, align 8, !dbg !9341
  %10 = load i32, i32* %channels.addr, align 4, !dbg !9342
  %11 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9343
  %channels10 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %11, i32 0, i32 26, !dbg !9344
  store i32 %10, i32* %channels10, align 4, !dbg !9345
  %12 = load i32, i32* %channels.addr, align 4, !dbg !9346
  %13 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9347
  %lfe_on11 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %13, i32 0, i32 27, !dbg !9348
  %14 = load i32, i32* %lfe_on11, align 8, !dbg !9348
  %sub = sub nsw i32 %12, %14, !dbg !9349
  %15 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9350
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %15, i32 0, i32 25, !dbg !9351
  store i32 %sub, i32* %fbw_channels, align 8, !dbg !9352
  %16 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9353
  %lfe_on12 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %16, i32 0, i32 27, !dbg !9354
  %17 = load i32, i32* %lfe_on12, align 8, !dbg !9354
  %tobool13 = icmp ne i32 %17, 0, !dbg !9353
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !9353

cond.true:                                        ; preds = %if.end7
  %18 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9355
  %fbw_channels14 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %18, i32 0, i32 25, !dbg !9357
  %19 = load i32, i32* %fbw_channels14, align 8, !dbg !9357
  %add = add nsw i32 %19, 1, !dbg !9358
  br label %cond.end, !dbg !9359

cond.false:                                       ; preds = %if.end7
  br label %cond.end, !dbg !9360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ -1, %cond.false ], !dbg !9362
  %20 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9364
  %lfe_channel = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %20, i32 0, i32 28, !dbg !9365
  store i32 %cond, i32* %lfe_channel, align 4, !dbg !9366
  %21 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9367
  %lfe_on15 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %21, i32 0, i32 27, !dbg !9369
  %22 = load i32, i32* %lfe_on15, align 8, !dbg !9369
  %tobool16 = icmp ne i32 %22, 0, !dbg !9367
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !9370

if.then17:                                        ; preds = %cond.end
  %23 = load i32, i32* %ch_layout, align 4, !dbg !9371
  %sub18 = sub nsw i32 %23, 8, !dbg !9371
  store i32 %sub18, i32* %ch_layout, align 4, !dbg !9371
  br label %if.end19, !dbg !9372

if.end19:                                         ; preds = %if.then17, %cond.end
  %24 = load i32, i32* %ch_layout, align 4, !dbg !9373
  switch i32 %24, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb20
    i32 7, label %sw.bb22
    i32 259, label %sw.bb24
    i32 263, label %sw.bb26
    i32 51, label %sw.bb28
    i32 1539, label %sw.bb28
    i32 1543, label %sw.bb30
    i32 55, label %sw.bb30
  ], !dbg !9374

sw.bb:                                            ; preds = %if.end19
  %25 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9375
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %25, i32 0, i32 31, !dbg !9377
  store i32 1, i32* %channel_mode, align 8, !dbg !9378
  br label %sw.epilog, !dbg !9379

sw.bb20:                                          ; preds = %if.end19
  %26 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9380
  %channel_mode21 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %26, i32 0, i32 31, !dbg !9381
  store i32 2, i32* %channel_mode21, align 8, !dbg !9382
  br label %sw.epilog, !dbg !9383

sw.bb22:                                          ; preds = %if.end19
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9384
  %channel_mode23 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 31, !dbg !9385
  store i32 3, i32* %channel_mode23, align 8, !dbg !9386
  br label %sw.epilog, !dbg !9387

sw.bb24:                                          ; preds = %if.end19
  %28 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9388
  %channel_mode25 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %28, i32 0, i32 31, !dbg !9389
  store i32 4, i32* %channel_mode25, align 8, !dbg !9390
  br label %sw.epilog, !dbg !9391

sw.bb26:                                          ; preds = %if.end19
  %29 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9392
  %channel_mode27 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %29, i32 0, i32 31, !dbg !9393
  store i32 5, i32* %channel_mode27, align 8, !dbg !9394
  br label %sw.epilog, !dbg !9395

sw.bb28:                                          ; preds = %if.end19, %if.end19
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9396
  %channel_mode29 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 31, !dbg !9397
  store i32 6, i32* %channel_mode29, align 8, !dbg !9398
  br label %sw.epilog, !dbg !9399

sw.bb30:                                          ; preds = %if.end19, %if.end19
  %31 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9400
  %channel_mode31 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %31, i32 0, i32 31, !dbg !9401
  store i32 7, i32* %channel_mode31, align 8, !dbg !9402
  br label %sw.epilog, !dbg !9403

sw.default:                                       ; preds = %if.end19
  store i32 -22, i32* %retval, align 4, !dbg !9404
  br label %return, !dbg !9404

sw.epilog:                                        ; preds = %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb
  %32 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9405
  %channel_mode32 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %32, i32 0, i32 31, !dbg !9406
  %33 = load i32, i32* %channel_mode32, align 8, !dbg !9406
  %and33 = and i32 %33, 1, !dbg !9407
  %tobool34 = icmp ne i32 %and33, 0, !dbg !9407
  br i1 %tobool34, label %land.rhs, label %land.end, !dbg !9408

land.rhs:                                         ; preds = %sw.epilog
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9409
  %channel_mode35 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 31, !dbg !9410
  %35 = load i32, i32* %channel_mode35, align 8, !dbg !9410
  %cmp36 = icmp ne i32 %35, 1, !dbg !9411
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.epilog
  %36 = phi i1 [ false, %sw.epilog ], [ %cmp36, %land.rhs ]
  %land.ext = zext i1 %36 to i32, !dbg !9412
  %37 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9413
  %has_center = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %37, i32 0, i32 29, !dbg !9414
  store i32 %land.ext, i32* %has_center, align 8, !dbg !9415
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9416
  %channel_mode38 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 31, !dbg !9417
  %39 = load i32, i32* %channel_mode38, align 8, !dbg !9417
  %and39 = and i32 %39, 4, !dbg !9418
  %40 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9419
  %has_surround = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %40, i32 0, i32 30, !dbg !9420
  store i32 %and39, i32* %has_surround, align 4, !dbg !9421
  %41 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9422
  %lfe_on40 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %41, i32 0, i32 27, !dbg !9423
  %42 = load i32, i32* %lfe_on40, align 8, !dbg !9423
  %idxprom = sext i32 %42 to i64, !dbg !9424
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9425
  %channel_mode41 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 31, !dbg !9426
  %44 = load i32, i32* %channel_mode41, align 8, !dbg !9426
  %idxprom42 = sext i32 %44 to i64, !dbg !9424
  %arrayidx = getelementptr inbounds [8 x [2 x [6 x i8]]], [8 x [2 x [6 x i8]]]* @ff_ac3_enc_channel_map, i64 0, i64 %idxprom42, !dbg !9424
  %arrayidx43 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %arrayidx, i64 0, i64 %idxprom, !dbg !9424
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx43, i32 0, i32 0, !dbg !9424
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9427
  %channel_map = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 32, !dbg !9428
  store i8* %arraydecay, i8** %channel_map, align 8, !dbg !9429
  %46 = load i32, i32* %ch_layout, align 4, !dbg !9430
  %conv44 = sext i32 %46 to i64, !dbg !9430
  %47 = load i64*, i64** %channel_layout.addr, align 8, !dbg !9431
  store i64 %conv44, i64* %47, align 8, !dbg !9432
  %48 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9433
  %lfe_on45 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %48, i32 0, i32 27, !dbg !9435
  %49 = load i32, i32* %lfe_on45, align 8, !dbg !9435
  %tobool46 = icmp ne i32 %49, 0, !dbg !9433
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9436

if.then47:                                        ; preds = %land.end
  %50 = load i64*, i64** %channel_layout.addr, align 8, !dbg !9437
  %51 = load i64, i64* %50, align 8, !dbg !9438
  %or = or i64 %51, 8, !dbg !9438
  store i64 %or, i64* %50, align 8, !dbg !9438
  br label %if.end48, !dbg !9439

if.end48:                                         ; preds = %if.then47, %land.end
  store i32 0, i32* %retval, align 4, !dbg !9440
  br label %return, !dbg !9440

return:                                           ; preds = %if.end48, %sw.default, %if.then3, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !9441
  ret i32 %52, !dbg !9441
}

; Function Attrs: nounwind readnone
declare i64 @llabs(i64) #8

declare i64 @av_get_default_channel_layout(i32) #4

declare void @ff_eac3_exponent_init() #4

; Function Attrs: nounwind uwtable
define internal void @count_frame_bits_fixed(%struct.AC3EncodeContext* %s) #0 !dbg !2175 {
entry:
  %s.addr = alloca %struct.AC3EncodeContext*, align 8
  %blk = alloca i32, align 4
  %frame_bits = alloca i32, align 4
  store %struct.AC3EncodeContext* %s, %struct.AC3EncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3EncodeContext** %s.addr, metadata !9442, metadata !2184), !dbg !9443
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !9444, metadata !2184), !dbg !9445
  call void @llvm.dbg.declare(metadata i32* %frame_bits, metadata !9446, metadata !2184), !dbg !9447
  store i32 16, i32* %frame_bits, align 4, !dbg !9448
  %0 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9449
  %eac3 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %0, i32 0, i32 12, !dbg !9451
  %1 = load i32, i32* %eac3, align 4, !dbg !9451
  %tobool = icmp ne i32 %1, 0, !dbg !9449
  br i1 %tobool, label %if.then, label %if.else38, !dbg !9452

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %frame_bits, align 4, !dbg !9453
  %add = add nsw i32 %2, 35, !dbg !9453
  store i32 %add, i32* %frame_bits, align 4, !dbg !9453
  %3 = load i32, i32* %frame_bits, align 4, !dbg !9455
  %add1 = add nsw i32 %3, 2, !dbg !9455
  store i32 %add1, i32* %frame_bits, align 4, !dbg !9455
  %4 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9456
  %num_blocks = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %4, i32 0, i32 18, !dbg !9458
  %5 = load i32, i32* %num_blocks, align 4, !dbg !9458
  %cmp = icmp ne i32 %5, 6, !dbg !9459
  br i1 %cmp, label %if.then2, label %if.end, !dbg !9460

if.then2:                                         ; preds = %if.then
  %6 = load i32, i32* %frame_bits, align 4, !dbg !9461
  %inc = add nsw i32 %6, 1, !dbg !9461
  store i32 %inc, i32* %frame_bits, align 4, !dbg !9461
  br label %if.end, !dbg !9462

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i32, i32* %frame_bits, align 4, !dbg !9463
  %inc3 = add nsw i32 %7, 1, !dbg !9463
  store i32 %inc3, i32* %frame_bits, align 4, !dbg !9463
  %8 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9464
  %num_blocks4 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %8, i32 0, i32 18, !dbg !9466
  %9 = load i32, i32* %num_blocks4, align 4, !dbg !9466
  %cmp5 = icmp eq i32 %9, 6, !dbg !9467
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !9468

if.then6:                                         ; preds = %if.end
  %10 = load i32, i32* %frame_bits, align 4, !dbg !9469
  %add7 = add nsw i32 %10, 2, !dbg !9469
  store i32 %add7, i32* %frame_bits, align 4, !dbg !9469
  br label %if.end8, !dbg !9470

if.end8:                                          ; preds = %if.then6, %if.end
  %11 = load i32, i32* %frame_bits, align 4, !dbg !9471
  %add9 = add nsw i32 %11, 10, !dbg !9471
  store i32 %add9, i32* %frame_bits, align 4, !dbg !9471
  %12 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9472
  %use_frame_exp_strategy = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %12, i32 0, i32 77, !dbg !9474
  %13 = load i32, i32* %use_frame_exp_strategy, align 4, !dbg !9474
  %tobool10 = icmp ne i32 %13, 0, !dbg !9472
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !9475

if.then11:                                        ; preds = %if.end8
  %14 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9476
  %fbw_channels = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %14, i32 0, i32 25, !dbg !9477
  %15 = load i32, i32* %fbw_channels, align 8, !dbg !9477
  %mul = mul nsw i32 5, %15, !dbg !9478
  %16 = load i32, i32* %frame_bits, align 4, !dbg !9479
  %add12 = add nsw i32 %16, %mul, !dbg !9479
  store i32 %add12, i32* %frame_bits, align 4, !dbg !9479
  br label %if.end18, !dbg !9480

if.else:                                          ; preds = %if.end8
  %17 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9481
  %num_blocks13 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %17, i32 0, i32 18, !dbg !9482
  %18 = load i32, i32* %num_blocks13, align 4, !dbg !9482
  %mul14 = mul nsw i32 %18, 2, !dbg !9483
  %19 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9484
  %fbw_channels15 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %19, i32 0, i32 25, !dbg !9485
  %20 = load i32, i32* %fbw_channels15, align 8, !dbg !9485
  %mul16 = mul nsw i32 %mul14, %20, !dbg !9486
  %21 = load i32, i32* %frame_bits, align 4, !dbg !9487
  %add17 = add nsw i32 %21, %mul16, !dbg !9487
  store i32 %add17, i32* %frame_bits, align 4, !dbg !9487
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then11
  %22 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9488
  %lfe_on = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %22, i32 0, i32 27, !dbg !9490
  %23 = load i32, i32* %lfe_on, align 8, !dbg !9490
  %tobool19 = icmp ne i32 %23, 0, !dbg !9488
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9491

if.then20:                                        ; preds = %if.end18
  %24 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9492
  %num_blocks21 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %24, i32 0, i32 18, !dbg !9493
  %25 = load i32, i32* %num_blocks21, align 4, !dbg !9493
  %26 = load i32, i32* %frame_bits, align 4, !dbg !9494
  %add22 = add nsw i32 %26, %25, !dbg !9494
  store i32 %add22, i32* %frame_bits, align 4, !dbg !9494
  br label %if.end23, !dbg !9495

if.end23:                                         ; preds = %if.then20, %if.end18
  %27 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9496
  %num_blks_code = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %27, i32 0, i32 17, !dbg !9498
  %28 = load i32, i32* %num_blks_code, align 8, !dbg !9498
  %cmp24 = icmp ne i32 %28, 3, !dbg !9499
  br i1 %cmp24, label %if.then25, label %if.else27, !dbg !9500

if.then25:                                        ; preds = %if.end23
  %29 = load i32, i32* %frame_bits, align 4, !dbg !9501
  %inc26 = add nsw i32 %29, 1, !dbg !9501
  store i32 %inc26, i32* %frame_bits, align 4, !dbg !9501
  br label %if.end31, !dbg !9502

if.else27:                                        ; preds = %if.end23
  %30 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9503
  %fbw_channels28 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %30, i32 0, i32 25, !dbg !9504
  %31 = load i32, i32* %fbw_channels28, align 8, !dbg !9504
  %mul29 = mul nsw i32 %31, 5, !dbg !9505
  %32 = load i32, i32* %frame_bits, align 4, !dbg !9506
  %add30 = add nsw i32 %32, %mul29, !dbg !9506
  store i32 %add30, i32* %frame_bits, align 4, !dbg !9506
  br label %if.end31

if.end31:                                         ; preds = %if.else27, %if.then25
  %33 = load i32, i32* %frame_bits, align 4, !dbg !9507
  %add32 = add nsw i32 %33, 10, !dbg !9507
  store i32 %add32, i32* %frame_bits, align 4, !dbg !9507
  %34 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9508
  %num_blocks33 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %34, i32 0, i32 18, !dbg !9510
  %35 = load i32, i32* %num_blocks33, align 4, !dbg !9510
  %cmp34 = icmp ne i32 %35, 1, !dbg !9511
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !9512

if.then35:                                        ; preds = %if.end31
  %36 = load i32, i32* %frame_bits, align 4, !dbg !9513
  %inc36 = add nsw i32 %36, 1, !dbg !9513
  store i32 %inc36, i32* %frame_bits, align 4, !dbg !9513
  br label %if.end37, !dbg !9514

if.end37:                                         ; preds = %if.then35, %if.end31
  br label %if.end41, !dbg !9515

if.else38:                                        ; preds = %entry
  %37 = load i32, i32* %frame_bits, align 4, !dbg !9516
  %add39 = add nsw i32 %37, 49, !dbg !9516
  store i32 %add39, i32* %frame_bits, align 4, !dbg !9516
  %38 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9518
  %channel_mode = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %38, i32 0, i32 31, !dbg !9519
  %39 = load i32, i32* %channel_mode, align 8, !dbg !9519
  %idxprom = sext i32 %39 to i64, !dbg !9520
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @count_frame_bits_fixed.frame_bits_inc, i64 0, i64 %idxprom, !dbg !9520
  %40 = load i32, i32* %arrayidx, align 4, !dbg !9520
  %41 = load i32, i32* %frame_bits, align 4, !dbg !9521
  %add40 = add nsw i32 %41, %40, !dbg !9521
  store i32 %add40, i32* %frame_bits, align 4, !dbg !9521
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.end37
  store i32 0, i32* %blk, align 4, !dbg !9522
  br label %for.cond, !dbg !9524

for.cond:                                         ; preds = %for.inc, %if.end41
  %42 = load i32, i32* %blk, align 4, !dbg !9525
  %43 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9528
  %num_blocks42 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %43, i32 0, i32 18, !dbg !9529
  %44 = load i32, i32* %num_blocks42, align 4, !dbg !9529
  %cmp43 = icmp slt i32 %42, %44, !dbg !9530
  br i1 %cmp43, label %for.body, label %for.end, !dbg !9531

for.body:                                         ; preds = %for.cond
  %45 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9532
  %eac344 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %45, i32 0, i32 12, !dbg !9535
  %46 = load i32, i32* %eac344, align 4, !dbg !9535
  %tobool45 = icmp ne i32 %46, 0, !dbg !9532
  br i1 %tobool45, label %if.end51, label %if.then46, !dbg !9536

if.then46:                                        ; preds = %for.body
  %47 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9537
  %fbw_channels47 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %47, i32 0, i32 25, !dbg !9539
  %48 = load i32, i32* %fbw_channels47, align 8, !dbg !9539
  %49 = load i32, i32* %frame_bits, align 4, !dbg !9540
  %add48 = add nsw i32 %49, %48, !dbg !9540
  store i32 %add48, i32* %frame_bits, align 4, !dbg !9540
  %50 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9541
  %fbw_channels49 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %50, i32 0, i32 25, !dbg !9542
  %51 = load i32, i32* %fbw_channels49, align 8, !dbg !9542
  %52 = load i32, i32* %frame_bits, align 4, !dbg !9543
  %add50 = add nsw i32 %52, %51, !dbg !9543
  store i32 %add50, i32* %frame_bits, align 4, !dbg !9543
  br label %if.end51, !dbg !9544

if.end51:                                         ; preds = %if.then46, %for.body
  %53 = load i32, i32* %frame_bits, align 4, !dbg !9545
  %inc52 = add nsw i32 %53, 1, !dbg !9545
  store i32 %inc52, i32* %frame_bits, align 4, !dbg !9545
  %54 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9546
  %eac353 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %54, i32 0, i32 12, !dbg !9548
  %55 = load i32, i32* %eac353, align 4, !dbg !9548
  %tobool54 = icmp ne i32 %55, 0, !dbg !9546
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !9549

if.then55:                                        ; preds = %if.end51
  %56 = load i32, i32* %frame_bits, align 4, !dbg !9550
  %inc56 = add nsw i32 %56, 1, !dbg !9550
  store i32 %inc56, i32* %frame_bits, align 4, !dbg !9550
  br label %if.end57, !dbg !9551

if.end57:                                         ; preds = %if.then55, %if.end51
  %57 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9552
  %eac358 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %57, i32 0, i32 12, !dbg !9554
  %58 = load i32, i32* %eac358, align 4, !dbg !9554
  %tobool59 = icmp ne i32 %58, 0, !dbg !9552
  br i1 %tobool59, label %if.end74, label %if.then60, !dbg !9555

if.then60:                                        ; preds = %if.end57
  %59 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9556
  %fbw_channels61 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %59, i32 0, i32 25, !dbg !9558
  %60 = load i32, i32* %fbw_channels61, align 8, !dbg !9558
  %mul62 = mul nsw i32 2, %60, !dbg !9559
  %61 = load i32, i32* %frame_bits, align 4, !dbg !9560
  %add63 = add nsw i32 %61, %mul62, !dbg !9560
  store i32 %add63, i32* %frame_bits, align 4, !dbg !9560
  %62 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9561
  %lfe_on64 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %62, i32 0, i32 27, !dbg !9563
  %63 = load i32, i32* %lfe_on64, align 8, !dbg !9563
  %tobool65 = icmp ne i32 %63, 0, !dbg !9561
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !9564

if.then66:                                        ; preds = %if.then60
  %64 = load i32, i32* %frame_bits, align 4, !dbg !9565
  %inc67 = add nsw i32 %64, 1, !dbg !9565
  store i32 %inc67, i32* %frame_bits, align 4, !dbg !9565
  br label %if.end68, !dbg !9566

if.end68:                                         ; preds = %if.then66, %if.then60
  %65 = load i32, i32* %frame_bits, align 4, !dbg !9567
  %inc69 = add nsw i32 %65, 1, !dbg !9567
  store i32 %inc69, i32* %frame_bits, align 4, !dbg !9567
  %66 = load i32, i32* %blk, align 4, !dbg !9568
  %tobool70 = icmp ne i32 %66, 0, !dbg !9568
  br i1 %tobool70, label %if.end73, label %if.then71, !dbg !9570

if.then71:                                        ; preds = %if.end68
  %67 = load i32, i32* %frame_bits, align 4, !dbg !9571
  %add72 = add nsw i32 %67, 11, !dbg !9571
  store i32 %add72, i32* %frame_bits, align 4, !dbg !9571
  br label %if.end73, !dbg !9572

if.end73:                                         ; preds = %if.then71, %if.end68
  br label %if.end74, !dbg !9573

if.end74:                                         ; preds = %if.end73, %if.end57
  %68 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9574
  %eac375 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %68, i32 0, i32 12, !dbg !9576
  %69 = load i32, i32* %eac375, align 4, !dbg !9576
  %tobool76 = icmp ne i32 %69, 0, !dbg !9574
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !9577

if.then77:                                        ; preds = %if.end74
  %70 = load i32, i32* %frame_bits, align 4, !dbg !9578
  %inc78 = add nsw i32 %70, 1, !dbg !9578
  store i32 %inc78, i32* %frame_bits, align 4, !dbg !9578
  br label %if.end79, !dbg !9579

if.end79:                                         ; preds = %if.then77, %if.end74
  %71 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9580
  %eac380 = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %71, i32 0, i32 12, !dbg !9582
  %72 = load i32, i32* %eac380, align 4, !dbg !9582
  %tobool81 = icmp ne i32 %72, 0, !dbg !9580
  br i1 %tobool81, label %if.end85, label %if.then82, !dbg !9583

if.then82:                                        ; preds = %if.end79
  %73 = load i32, i32* %frame_bits, align 4, !dbg !9584
  %inc83 = add nsw i32 %73, 1, !dbg !9584
  store i32 %inc83, i32* %frame_bits, align 4, !dbg !9584
  %74 = load i32, i32* %frame_bits, align 4, !dbg !9586
  %inc84 = add nsw i32 %74, 1, !dbg !9586
  store i32 %inc84, i32* %frame_bits, align 4, !dbg !9586
  br label %if.end85, !dbg !9587

if.end85:                                         ; preds = %if.then82, %if.end79
  br label %for.inc, !dbg !9588

for.inc:                                          ; preds = %if.end85
  %75 = load i32, i32* %blk, align 4, !dbg !9589
  %inc86 = add nsw i32 %75, 1, !dbg !9589
  store i32 %inc86, i32* %blk, align 4, !dbg !9589
  br label %for.cond, !dbg !9591, !llvm.loop !9592

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* %frame_bits, align 4, !dbg !9594
  %inc87 = add nsw i32 %76, 1, !dbg !9594
  store i32 %inc87, i32* %frame_bits, align 4, !dbg !9594
  %77 = load i32, i32* %frame_bits, align 4, !dbg !9595
  %add88 = add nsw i32 %77, 17, !dbg !9595
  store i32 %add88, i32* %frame_bits, align 4, !dbg !9595
  %78 = load i32, i32* %frame_bits, align 4, !dbg !9596
  %79 = load %struct.AC3EncodeContext*, %struct.AC3EncodeContext** %s.addr, align 8, !dbg !9597
  %frame_bits_fixed = getelementptr inbounds %struct.AC3EncodeContext, %struct.AC3EncodeContext* %79, i32 0, i32 58, !dbg !9598
  store i32 %78, i32* %frame_bits_fixed, align 4, !dbg !9599
  ret void, !dbg !9600
}

declare i8* @av_malloc_array(i64, i64) #4

declare i8* @av_mallocz_array(i64, i64) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2179, !2180}
!llvm.ident = !{!2181}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !948, globals: !967)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3enc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !888, !900, !909, !915, !919, !930, !936}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887}
!882 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!883 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!884 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!885 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!886 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!887 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !889)
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899}
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!894 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!895 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!896 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!897 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!898 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !901)
!901 = !{!902, !903, !904, !905, !906, !907, !908}
!902 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!903 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!904 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!905 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!906 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!907 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!908 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !910, line: 77, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914}
!912 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!914 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !910, line: 83, size: 32, align: 32, elements: !916)
!916 = !{!917, !918}
!917 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!918 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 123, size: 32, align: 32, elements: !921)
!920 = !DIFile(filename: "libavcodec/ac3.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929}
!922 = !DIEnumerator(name: "AC3_CHMODE_DUALMONO", value: 0)
!923 = !DIEnumerator(name: "AC3_CHMODE_MONO", value: 1)
!924 = !DIEnumerator(name: "AC3_CHMODE_STEREO", value: 2)
!925 = !DIEnumerator(name: "AC3_CHMODE_3F", value: 3)
!926 = !DIEnumerator(name: "AC3_CHMODE_2F1R", value: 4)
!927 = !DIEnumerator(name: "AC3_CHMODE_3F1R", value: 5)
!928 = !DIEnumerator(name: "AC3_CHMODE_2F2R", value: 6)
!929 = !DIEnumerator(name: "AC3_CHMODE_3F2R", value: 7)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 115, size: 32, align: 32, elements: !931)
!931 = !{!932, !933, !934, !935}
!932 = !DIEnumerator(name: "DBA_REUSE", value: 0)
!933 = !DIEnumerator(name: "DBA_NEW", value: 1)
!934 = !DIEnumerator(name: "DBA_NONE", value: 2)
!935 = !DIEnumerator(name: "DBA_RESERVED", value: 3)
!936 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !937, line: 49, size: 32, align: 32, elements: !938)
!937 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!938 = !{!939, !940, !941, !942, !943, !944, !945, !946, !947}
!939 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!940 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!941 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!942 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!943 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!944 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!945 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!946 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!947 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!948 = !{!949, !957, !958, !964}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !951, line: 221, size: 32, align: 8, elements: !952)
!951 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !950, file: !951, line: 221, baseType: !954, size: 32, align: 32)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !955, line: 51, baseType: !956)
!955 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!956 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !951, line: 222, size: 16, align: 8, elements: !960)
!960 = !{!961}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !959, file: !951, line: 222, baseType: !962, size: 16, align: 16)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !955, line: 49, baseType: !963)
!963 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !955, line: 38, baseType: !966)
!966 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!967 = !{!968, !976, !2152, !2157, !2160, !2163, !2164, !2166, !2170, !2174}
!968 = distinct !DIGlobalVariable(name: "ff_ac3_channel_layouts", scope: !0, file: !969, line: 81, type: !970, isLocal: false, isDefinition: true, variable: [19 x i64]* @ff_ac3_channel_layouts)
!969 = !DIFile(filename: "libavcodec/ac3enc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 1216, align: 64, elements: !974)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !955, line: 55, baseType: !973)
!973 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!974 = !{!975}
!975 = !DISubrange(count: 19)
!976 = distinct !DIGlobalVariable(name: "warn_once", scope: !977, file: !969, line: 1996, type: !966, isLocal: true, isDefinition: true, variable: i32* @ff_ac3_validate_metadata.warn_once)
!977 = distinct !DISubprogram(name: "ff_ac3_validate_metadata", scope: !969, file: !969, line: 1833, type: !978, isLocal: false, isDefinition: true, scopeLine: 1834, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!978 = !DISubroutineType(types: !979)
!979 = !{!966, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3EncodeContext", file: !982, line: 267, baseType: !983)
!982 = !DIFile(filename: "libavcodec/ac3enc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3EncodeContext", file: !982, line: 162, size: 27584, align: 64, elements: !984)
!984 = !{!985, !1068, !1099, !1772, !1783, !1809, !1851, !1894, !1962, !2007, !2011, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2117, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2134, !2135, !2136, !2137, !2139, !2140, !2145, !2149, !2150}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !983, file: !982, line: 163, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !989)
!989 = !{!990, !994, !998, !1027, !1028, !1029, !1030, !1034, !1040, !1042, !1046}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !988, file: !26, line: 72, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !988, file: !26, line: 78, baseType: !995, size: 64, align: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!991, !957}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !988, file: !26, line: 85, baseType: !999, size: 64, align: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006, !1007, !1023, !1024, !1025, !1026}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1001, file: !4, line: 247, baseType: !991, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1001, file: !4, line: 253, baseType: !991, size: 64, align: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1001, file: !4, line: 259, baseType: !966, size: 32, align: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1001, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1001, file: !4, line: 271, baseType: !1008, size: 64, align: 64, offset: 192)
!1008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1001, file: !4, line: 265, size: 64, align: 64, elements: !1009)
!1009 = !{!1010, !1013, !1015, !1016}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1008, file: !4, line: 266, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !955, line: 40, baseType: !1012)
!1012 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1008, file: !4, line: 267, baseType: !1014, size: 64, align: 64)
!1014 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1008, file: !4, line: 268, baseType: !991, size: 64, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1008, file: !4, line: 270, baseType: !1017, size: 64, align: 32)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1018, line: 61, baseType: !1019)
!1018 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1018, line: 58, size: 64, align: 32, elements: !1020)
!1020 = !{!1021, !1022}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1019, file: !1018, line: 59, baseType: !966, size: 32, align: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1019, file: !1018, line: 60, baseType: !966, size: 32, align: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1001, file: !4, line: 272, baseType: !1014, size: 64, align: 64, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1001, file: !4, line: 273, baseType: !1014, size: 64, align: 64, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1001, file: !4, line: 275, baseType: !966, size: 32, align: 32, offset: 384)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1001, file: !4, line: 300, baseType: !991, size: 64, align: 64, offset: 448)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !988, file: !26, line: 93, baseType: !966, size: 32, align: 32, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !988, file: !26, line: 99, baseType: !966, size: 32, align: 32, offset: 224)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !988, file: !26, line: 108, baseType: !966, size: 32, align: 32, offset: 256)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !988, file: !26, line: 113, baseType: !1031, size: 64, align: 64, offset: 320)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!957, !957, !957}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !988, file: !26, line: 123, baseType: !1035, size: 64, align: 64, offset: 384)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!1038, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !988, file: !26, line: 130, baseType: !1041, size: 32, align: 32, offset: 448)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !988, file: !26, line: 136, baseType: !1043, size: 64, align: 64, offset: 512)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!1041, !957}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !988, file: !26, line: 142, baseType: !1047, size: 64, align: 64, offset: 576)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!966, !1050, !957, !991, !966}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1053)
!1053 = !{!1054, !1066, !1067}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1052, file: !4, line: 360, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064, !1065}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1058, file: !4, line: 307, baseType: !991, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1058, file: !4, line: 313, baseType: !1014, size: 64, align: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1058, file: !4, line: 313, baseType: !1014, size: 64, align: 64, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1058, file: !4, line: 318, baseType: !1014, size: 64, align: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1058, file: !4, line: 318, baseType: !1014, size: 64, align: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1058, file: !4, line: 323, baseType: !966, size: 32, align: 32, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1052, file: !4, line: 364, baseType: !966, size: 32, align: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1052, file: !4, line: 368, baseType: !966, size: 32, align: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !983, file: !982, line: 164, baseType: !1069, size: 832, align: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3EncOptions", file: !982, line: 128, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3EncOptions", file: !982, line: 98, size: 832, align: 32, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "dialogue_level", scope: !1070, file: !982, line: 100, baseType: !966, size: 32, align: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !1070, file: !982, line: 101, baseType: !966, size: 32, align: 32, offset: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !1070, file: !982, line: 102, baseType: !1075, size: 32, align: 32, offset: 64)
!1075 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !1070, file: !982, line: 103, baseType: !1075, size: 32, align: 32, offset: 96)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_mode", scope: !1070, file: !982, line: 104, baseType: !966, size: 32, align: 32, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "audio_production_info", scope: !1070, file: !982, line: 105, baseType: !966, size: 32, align: 32, offset: 160)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "mixing_level", scope: !1070, file: !982, line: 106, baseType: !966, size: 32, align: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "room_type", scope: !1070, file: !982, line: 107, baseType: !966, size: 32, align: 32, offset: 224)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "copyright", scope: !1070, file: !982, line: 108, baseType: !966, size: 32, align: 32, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !1070, file: !982, line: 109, baseType: !966, size: 32, align: 32, offset: 288)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "extended_bsi_1", scope: !1070, file: !982, line: 110, baseType: !966, size: 32, align: 32, offset: 320)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_stereo_downmix", scope: !1070, file: !982, line: 111, baseType: !966, size: 32, align: 32, offset: 352)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_center_mix_level", scope: !1070, file: !982, line: 112, baseType: !1075, size: 32, align: 32, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_surround_mix_level", scope: !1070, file: !982, line: 113, baseType: !1075, size: 32, align: 32, offset: 416)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "loro_center_mix_level", scope: !1070, file: !982, line: 114, baseType: !1075, size: 32, align: 32, offset: 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "loro_surround_mix_level", scope: !1070, file: !982, line: 115, baseType: !1075, size: 32, align: 32, offset: 480)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "extended_bsi_2", scope: !1070, file: !982, line: 116, baseType: !966, size: 32, align: 32, offset: 512)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_ex_mode", scope: !1070, file: !982, line: 117, baseType: !966, size: 32, align: 32, offset: 544)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_headphone_mode", scope: !1070, file: !982, line: 118, baseType: !966, size: 32, align: 32, offset: 576)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "ad_converter_type", scope: !1070, file: !982, line: 119, baseType: !966, size: 32, align: 32, offset: 608)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_mixing_metadata", scope: !1070, file: !982, line: 120, baseType: !966, size: 32, align: 32, offset: 640)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_info_metadata", scope: !1070, file: !982, line: 121, baseType: !966, size: 32, align: 32, offset: 672)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "allow_per_frame_metadata", scope: !1070, file: !982, line: 124, baseType: !966, size: 32, align: 32, offset: 704)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_rematrixing", scope: !1070, file: !982, line: 125, baseType: !966, size: 32, align: 32, offset: 736)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "channel_coupling", scope: !1070, file: !982, line: 126, baseType: !966, size: 32, align: 32, offset: 768)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_start", scope: !1070, file: !982, line: 127, baseType: !966, size: 32, align: 32, offset: 800)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !983, file: !982, line: 165, baseType: !1100, size: 64, align: 64, offset: 896)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1103)
!1103 = !{!1104, !1107, !1108, !1109, !1371, !1372, !1373, !1374, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1527, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1710, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1102, file: !57, line: 1561, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1102, file: !57, line: 1562, baseType: !966, size: 32, align: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1102, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1102, file: !57, line: 1565, baseType: !1110, size: 64, align: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1118, !1119, !1122, !1125, !1128, !1131, !1133, !1136, !1137, !1145, !1146, !1147, !1149, !1153, !1159, !1170, !1174, !1175, !1221, !1342, !1346, !1347, !1351, !1355, !1360, !1364, !1365, !1366}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1112, file: !57, line: 3475, baseType: !991, size: 64, align: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1112, file: !57, line: 3480, baseType: !991, size: 64, align: 64, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1112, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1112, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1112, file: !57, line: 3487, baseType: !966, size: 32, align: 32, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1112, file: !57, line: 3488, baseType: !1120, size: 64, align: 64, offset: 256)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1112, file: !57, line: 3489, baseType: !1123, size: 64, align: 64, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1112, file: !57, line: 3490, baseType: !1126, size: 64, align: 64, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1112, file: !57, line: 3491, baseType: !1129, size: 64, align: 64, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1112, file: !57, line: 3492, baseType: !1132, size: 64, align: 64, offset: 512)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1112, file: !57, line: 3493, baseType: !1134, size: 8, align: 8, offset: 576)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !955, line: 48, baseType: !1135)
!1135 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1112, file: !57, line: 3494, baseType: !1105, size: 64, align: 64, offset: 640)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1112, file: !57, line: 3495, baseType: !1138, size: 64, align: 64, offset: 704)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1142)
!1142 = !{!1143, !1144}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1141, file: !57, line: 3402, baseType: !966, size: 32, align: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1141, file: !57, line: 3403, baseType: !991, size: 64, align: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1112, file: !57, line: 3507, baseType: !991, size: 64, align: 64, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1112, file: !57, line: 3516, baseType: !966, size: 32, align: 32, offset: 832)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1112, file: !57, line: 3517, baseType: !1148, size: 64, align: 64, offset: 896)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1112, file: !57, line: 3527, baseType: !1150, size: 64, align: 64, offset: 960)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!966, !1100}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1112, file: !57, line: 3535, baseType: !1154, size: 64, align: 64, offset: 1024)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!966, !1100, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1112, file: !57, line: 3541, baseType: !1160, size: 64, align: 64, offset: 1088)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1164, line: 223, size: 128, align: 64, elements: !1165)
!1164 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1165 = !{!1166, !1169}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1163, file: !1164, line: 224, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1163, file: !1164, line: 225, baseType: !1167, size: 64, align: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1112, file: !57, line: 3549, baseType: !1171, size: 64, align: 64, offset: 1152)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !1148}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1112, file: !57, line: 3551, baseType: !1150, size: 64, align: 64, offset: 1216)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1112, file: !57, line: 3552, baseType: !1176, size: 64, align: 64, offset: 1280)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!966, !1100, !1179, !966, !1180}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188, !1220}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1182, file: !57, line: 3921, baseType: !962, size: 16, align: 16)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1182, file: !57, line: 3922, baseType: !954, size: 32, align: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1182, file: !57, line: 3923, baseType: !954, size: 32, align: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1182, file: !57, line: 3924, baseType: !956, size: 32, align: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1182, file: !57, line: 3925, baseType: !1189, size: 64, align: 64, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64, align: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197, !1198, !1199, !1209, !1213, !1215, !1216, !1218, !1219}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1192, file: !57, line: 3886, baseType: !966, size: 32, align: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1192, file: !57, line: 3887, baseType: !966, size: 32, align: 32, offset: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1192, file: !57, line: 3888, baseType: !966, size: 32, align: 32, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1192, file: !57, line: 3889, baseType: !966, size: 32, align: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1192, file: !57, line: 3890, baseType: !966, size: 32, align: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1192, file: !57, line: 3897, baseType: !1200, size: 768, align: 64, offset: 192)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !1202)
!1202 = !{!1203, !1207}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1201, file: !57, line: 3855, baseType: !1204, size: 512, align: 64)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 512, align: 64, elements: !1205)
!1205 = !{!1206}
!1206 = !DISubrange(count: 8)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1201, file: !57, line: 3857, baseType: !1208, size: 256, align: 32, offset: 512)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 256, align: 32, elements: !1205)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1192, file: !57, line: 3903, baseType: !1210, size: 256, align: 64, offset: 960)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 256, align: 64, elements: !1211)
!1211 = !{!1212}
!1212 = !DISubrange(count: 4)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1192, file: !57, line: 3904, baseType: !1214, size: 128, align: 32, offset: 1216)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 128, align: 32, elements: !1211)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1192, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1192, file: !57, line: 3908, baseType: !1217, size: 64, align: 64, offset: 1408)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1192, file: !57, line: 3915, baseType: !1217, size: 64, align: 64, offset: 1472)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1192, file: !57, line: 3917, baseType: !966, size: 32, align: 32, offset: 1536)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1182, file: !57, line: 3926, baseType: !1011, size: 64, align: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1112, file: !57, line: 3564, baseType: !1222, size: 64, align: 64, offset: 1344)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!966, !1100, !1225, !1259, !1341}
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1228)
!1228 = !{!1229, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1255, !1256, !1257, !1258}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1227, file: !57, line: 1451, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1232, line: 94, baseType: !1233)
!1232 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1232, line: 81, size: 192, align: 64, elements: !1234)
!1234 = !{!1235, !1239, !1240}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1233, file: !1232, line: 82, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1232, line: 73, baseType: !1238)
!1238 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1232, line: 73, flags: DIFlagFwdDecl)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1233, file: !1232, line: 89, baseType: !1179, size: 64, align: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1233, file: !1232, line: 93, baseType: !966, size: 32, align: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1227, file: !57, line: 1461, baseType: !1011, size: 64, align: 64, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1227, file: !57, line: 1467, baseType: !1011, size: 64, align: 64, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1227, file: !57, line: 1468, baseType: !1179, size: 64, align: 64, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1227, file: !57, line: 1469, baseType: !966, size: 32, align: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1227, file: !57, line: 1470, baseType: !966, size: 32, align: 32, offset: 288)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1227, file: !57, line: 1474, baseType: !966, size: 32, align: 32, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1227, file: !57, line: 1479, baseType: !1248, size: 64, align: 64, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1251)
!1251 = !{!1252, !1253, !1254}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1250, file: !57, line: 1412, baseType: !1179, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1250, file: !57, line: 1413, baseType: !966, size: 32, align: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1250, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1227, file: !57, line: 1480, baseType: !966, size: 32, align: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1227, file: !57, line: 1486, baseType: !1011, size: 64, align: 64, offset: 512)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1227, file: !57, line: 1488, baseType: !1011, size: 64, align: 64, offset: 576)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1227, file: !57, line: 1497, baseType: !1011, size: 64, align: 64, offset: 640)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1293, !1295, !1296, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1329, !1330, !1331, !1332, !1333, !1334, !1337, !1338, !1339, !1340}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1262, file: !780, line: 282, baseType: !1204, size: 512, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1262, file: !780, line: 299, baseType: !1208, size: 256, align: 32, offset: 512)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1262, file: !780, line: 315, baseType: !1267, size: 64, align: 64, offset: 768)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1262, file: !780, line: 326, baseType: !966, size: 32, align: 32, offset: 832)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1262, file: !780, line: 326, baseType: !966, size: 32, align: 32, offset: 864)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1262, file: !780, line: 334, baseType: !966, size: 32, align: 32, offset: 896)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1262, file: !780, line: 341, baseType: !966, size: 32, align: 32, offset: 928)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1262, file: !780, line: 346, baseType: !966, size: 32, align: 32, offset: 960)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1262, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1262, file: !780, line: 356, baseType: !1017, size: 64, align: 32, offset: 1024)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1262, file: !780, line: 361, baseType: !1011, size: 64, align: 64, offset: 1088)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1262, file: !780, line: 369, baseType: !1011, size: 64, align: 64, offset: 1152)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1262, file: !780, line: 377, baseType: !1011, size: 64, align: 64, offset: 1216)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1262, file: !780, line: 382, baseType: !966, size: 32, align: 32, offset: 1280)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1262, file: !780, line: 386, baseType: !966, size: 32, align: 32, offset: 1312)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1262, file: !780, line: 391, baseType: !966, size: 32, align: 32, offset: 1344)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1262, file: !780, line: 396, baseType: !957, size: 64, align: 64, offset: 1408)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1262, file: !780, line: 403, baseType: !1283, size: 512, align: 64, offset: 1472)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 512, align: 64, elements: !1205)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1262, file: !780, line: 410, baseType: !966, size: 32, align: 32, offset: 1984)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1262, file: !780, line: 415, baseType: !966, size: 32, align: 32, offset: 2016)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1262, file: !780, line: 420, baseType: !966, size: 32, align: 32, offset: 2048)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1262, file: !780, line: 425, baseType: !966, size: 32, align: 32, offset: 2080)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1262, file: !780, line: 435, baseType: !1011, size: 64, align: 64, offset: 2112)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1262, file: !780, line: 440, baseType: !966, size: 32, align: 32, offset: 2176)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1262, file: !780, line: 445, baseType: !972, size: 64, align: 64, offset: 2240)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1262, file: !780, line: 459, baseType: !1292, size: 512, align: 64, offset: 2304)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 512, align: 64, elements: !1205)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1262, file: !780, line: 473, baseType: !1294, size: 64, align: 64, offset: 2816)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1262, file: !780, line: 477, baseType: !966, size: 32, align: 32, offset: 2880)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1262, file: !780, line: 479, baseType: !1297, size: 64, align: 64, offset: 2944)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1310}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1300, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1300, file: !780, line: 203, baseType: !1179, size: 64, align: 64, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1300, file: !780, line: 204, baseType: !966, size: 32, align: 32, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1300, file: !780, line: 205, baseType: !1306, size: 64, align: 64, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1308, line: 86, baseType: !1309)
!1308 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1308, line: 86, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1300, file: !780, line: 206, baseType: !1230, size: 64, align: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1262, file: !780, line: 480, baseType: !966, size: 32, align: 32, offset: 3008)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1262, file: !780, line: 505, baseType: !966, size: 32, align: 32, offset: 3040)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1262, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1262, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1262, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1262, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1262, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1262, file: !780, line: 532, baseType: !1011, size: 64, align: 64, offset: 3264)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1262, file: !780, line: 539, baseType: !1011, size: 64, align: 64, offset: 3328)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1262, file: !780, line: 547, baseType: !1011, size: 64, align: 64, offset: 3392)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1262, file: !780, line: 554, baseType: !1306, size: 64, align: 64, offset: 3456)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1262, file: !780, line: 563, baseType: !966, size: 32, align: 32, offset: 3520)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1262, file: !780, line: 572, baseType: !966, size: 32, align: 32, offset: 3552)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1262, file: !780, line: 581, baseType: !966, size: 32, align: 32, offset: 3584)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1262, file: !780, line: 588, baseType: !1326, size: 64, align: 64, offset: 3648)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !955, line: 36, baseType: !1328)
!1328 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1262, file: !780, line: 593, baseType: !966, size: 32, align: 32, offset: 3712)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1262, file: !780, line: 596, baseType: !966, size: 32, align: 32, offset: 3744)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1262, file: !780, line: 599, baseType: !1230, size: 64, align: 64, offset: 3776)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1262, file: !780, line: 605, baseType: !1230, size: 64, align: 64, offset: 3840)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1262, file: !780, line: 616, baseType: !1230, size: 64, align: 64, offset: 3904)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1262, file: !780, line: 626, baseType: !1335, size: 64, align: 64, offset: 3968)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1336, line: 216, baseType: !973)
!1336 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1262, file: !780, line: 627, baseType: !1335, size: 64, align: 64, offset: 4032)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1262, file: !780, line: 628, baseType: !1335, size: 64, align: 64, offset: 4096)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1262, file: !780, line: 629, baseType: !1335, size: 64, align: 64, offset: 4160)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1262, file: !780, line: 645, baseType: !1230, size: 64, align: 64, offset: 4224)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1112, file: !57, line: 3566, baseType: !1343, size: 64, align: 64, offset: 1408)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!966, !1100, !957, !1341, !1225}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1112, file: !57, line: 3567, baseType: !1150, size: 64, align: 64, offset: 1472)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1112, file: !57, line: 3576, baseType: !1348, size: 64, align: 64, offset: 1536)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!966, !1100, !1259}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1112, file: !57, line: 3577, baseType: !1352, size: 64, align: 64, offset: 1600)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!966, !1100, !1225}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1112, file: !57, line: 3584, baseType: !1356, size: 64, align: 64, offset: 1664)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64, align: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!966, !1100, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1112, file: !57, line: 3589, baseType: !1361, size: 64, align: 64, offset: 1728)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !1100}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1112, file: !57, line: 3594, baseType: !966, size: 32, align: 32, offset: 1792)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1112, file: !57, line: 3600, baseType: !991, size: 64, align: 64, offset: 1856)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1112, file: !57, line: 3609, baseType: !1367, size: 64, align: 64, offset: 1920)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !57, line: 3609, flags: DIFlagFwdDecl)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1102, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1102, file: !57, line: 1581, baseType: !956, size: 32, align: 32, offset: 224)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1102, file: !57, line: 1583, baseType: !957, size: 64, align: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1102, file: !57, line: 1591, baseType: !1375, size: 64, align: 64, offset: 320)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1164, line: 129, size: 1664, align: 64, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382, !1400, !1401, !1407, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1376, file: !1164, line: 136, baseType: !966, size: 32, align: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1376, file: !1164, line: 151, baseType: !966, size: 32, align: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1376, file: !1164, line: 157, baseType: !966, size: 32, align: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1376, file: !1164, line: 159, baseType: !1359, size: 64, align: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1376, file: !1164, line: 161, baseType: !1383, size: 64, align: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1164, line: 117, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1164, line: 100, size: 832, align: 64, elements: !1386)
!1386 = !{!1387, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1385, file: !1164, line: 105, baseType: !1388, size: 256, align: 64)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1389, size: 256, align: 64, elements: !1211)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64, align: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1232, line: 238, baseType: !1391)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1232, line: 238, flags: DIFlagFwdDecl)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1385, file: !1164, line: 110, baseType: !966, size: 32, align: 32, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1385, file: !1164, line: 111, baseType: !966, size: 32, align: 32, offset: 288)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1385, file: !1164, line: 111, baseType: !966, size: 32, align: 32, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1385, file: !1164, line: 112, baseType: !1208, size: 256, align: 32, offset: 352)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1385, file: !1164, line: 113, baseType: !1214, size: 128, align: 32, offset: 608)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1385, file: !1164, line: 114, baseType: !966, size: 32, align: 32, offset: 736)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1385, file: !1164, line: 115, baseType: !966, size: 32, align: 32, offset: 768)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1385, file: !1164, line: 116, baseType: !966, size: 32, align: 32, offset: 800)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1376, file: !1164, line: 163, baseType: !957, size: 64, align: 64, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1376, file: !1164, line: 165, baseType: !1402, size: 128, align: 64, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1164, line: 122, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1164, line: 119, size: 128, align: 64, elements: !1404)
!1404 = !{!1405, !1406}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1403, file: !1164, line: 120, baseType: !1225, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1403, file: !1164, line: 121, baseType: !1359, size: 64, align: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1376, file: !1164, line: 166, baseType: !1408, size: 128, align: 64, offset: 448)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1164, line: 127, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1164, line: 124, size: 128, align: 64, elements: !1410)
!1410 = !{!1411, !1484}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1409, file: !1164, line: 125, baseType: !1412, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64, align: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !1416)
!1416 = !{!1417, !1418, !1442, !1446, !1447, !1481, !1482, !1483}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1415, file: !57, line: 5751, baseType: !1105, size: 64, align: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1415, file: !57, line: 5756, baseType: !1419, size: 64, align: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64, align: 64)
!1420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !1422)
!1422 = !{!1423, !1424, !1427, !1428, !1429, !1433, !1437, !1441}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1421, file: !57, line: 5797, baseType: !991, size: 64, align: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1421, file: !57, line: 5804, baseType: !1425, size: 64, align: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1421, file: !57, line: 5815, baseType: !1105, size: 64, align: 64, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1421, file: !57, line: 5825, baseType: !966, size: 32, align: 32, offset: 192)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1421, file: !57, line: 5826, baseType: !1430, size: 64, align: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64, align: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!966, !1413}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1421, file: !57, line: 5827, baseType: !1434, size: 64, align: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!966, !1413, !1225}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1421, file: !57, line: 5828, baseType: !1438, size: 64, align: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64, align: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1413}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1421, file: !57, line: 5829, baseType: !1438, size: 64, align: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1415, file: !57, line: 5762, baseType: !1443, size: 64, align: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !1445)
!1445 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1415, file: !57, line: 5768, baseType: !957, size: 64, align: 64, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1415, file: !57, line: 5775, baseType: !1448, size: 64, align: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1450, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1450, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1450, file: !57, line: 3948, baseType: !954, size: 32, align: 32, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1450, file: !57, line: 3958, baseType: !1179, size: 64, align: 64, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1450, file: !57, line: 3962, baseType: !966, size: 32, align: 32, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1450, file: !57, line: 3968, baseType: !966, size: 32, align: 32, offset: 224)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1450, file: !57, line: 3973, baseType: !1011, size: 64, align: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1450, file: !57, line: 3986, baseType: !966, size: 32, align: 32, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1450, file: !57, line: 3999, baseType: !966, size: 32, align: 32, offset: 352)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1450, file: !57, line: 4004, baseType: !966, size: 32, align: 32, offset: 384)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1450, file: !57, line: 4005, baseType: !966, size: 32, align: 32, offset: 416)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1450, file: !57, line: 4010, baseType: !966, size: 32, align: 32, offset: 448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1450, file: !57, line: 4011, baseType: !966, size: 32, align: 32, offset: 480)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1450, file: !57, line: 4020, baseType: !1017, size: 64, align: 32, offset: 512)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1450, file: !57, line: 4025, baseType: !880, size: 32, align: 32, offset: 576)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1450, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1450, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1450, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1450, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1450, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1450, file: !57, line: 4039, baseType: !966, size: 32, align: 32, offset: 768)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1450, file: !57, line: 4046, baseType: !972, size: 64, align: 64, offset: 832)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1450, file: !57, line: 4050, baseType: !966, size: 32, align: 32, offset: 896)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1450, file: !57, line: 4054, baseType: !966, size: 32, align: 32, offset: 928)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1450, file: !57, line: 4061, baseType: !966, size: 32, align: 32, offset: 960)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1450, file: !57, line: 4065, baseType: !966, size: 32, align: 32, offset: 992)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1450, file: !57, line: 4073, baseType: !966, size: 32, align: 32, offset: 1024)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1450, file: !57, line: 4080, baseType: !966, size: 32, align: 32, offset: 1056)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1450, file: !57, line: 4084, baseType: !966, size: 32, align: 32, offset: 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1415, file: !57, line: 5781, baseType: !1448, size: 64, align: 64, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1415, file: !57, line: 5787, baseType: !1017, size: 64, align: 32, offset: 384)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1415, file: !57, line: 5793, baseType: !1017, size: 64, align: 32, offset: 448)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1409, file: !1164, line: 126, baseType: !966, size: 32, align: 32, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1376, file: !1164, line: 172, baseType: !1225, size: 64, align: 64, offset: 576)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1376, file: !1164, line: 177, baseType: !1179, size: 64, align: 64, offset: 640)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1376, file: !1164, line: 178, baseType: !956, size: 32, align: 32, offset: 704)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1376, file: !1164, line: 180, baseType: !957, size: 64, align: 64, offset: 768)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1376, file: !1164, line: 185, baseType: !966, size: 32, align: 32, offset: 832)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1376, file: !1164, line: 190, baseType: !957, size: 64, align: 64, offset: 896)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1376, file: !1164, line: 195, baseType: !966, size: 32, align: 32, offset: 960)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1376, file: !1164, line: 200, baseType: !1225, size: 64, align: 64, offset: 1024)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1376, file: !1164, line: 201, baseType: !966, size: 32, align: 32, offset: 1088)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1376, file: !1164, line: 202, baseType: !1359, size: 64, align: 64, offset: 1152)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1376, file: !1164, line: 203, baseType: !966, size: 32, align: 32, offset: 1216)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1376, file: !1164, line: 205, baseType: !966, size: 32, align: 32, offset: 1248)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1376, file: !1164, line: 206, baseType: !966, size: 32, align: 32, offset: 1280)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1376, file: !1164, line: 209, baseType: !1335, size: 64, align: 64, offset: 1344)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1376, file: !1164, line: 212, baseType: !1335, size: 64, align: 64, offset: 1408)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1376, file: !1164, line: 213, baseType: !1359, size: 64, align: 64, offset: 1472)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1376, file: !1164, line: 215, baseType: !966, size: 32, align: 32, offset: 1536)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1376, file: !1164, line: 217, baseType: !966, size: 32, align: 32, offset: 1568)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1376, file: !1164, line: 220, baseType: !966, size: 32, align: 32, offset: 1600)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1102, file: !57, line: 1598, baseType: !957, size: 64, align: 64, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1102, file: !57, line: 1606, baseType: !1011, size: 64, align: 64, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1102, file: !57, line: 1614, baseType: !966, size: 32, align: 32, offset: 512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1102, file: !57, line: 1622, baseType: !966, size: 32, align: 32, offset: 544)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1102, file: !57, line: 1628, baseType: !966, size: 32, align: 32, offset: 576)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1102, file: !57, line: 1636, baseType: !966, size: 32, align: 32, offset: 608)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1102, file: !57, line: 1643, baseType: !966, size: 32, align: 32, offset: 640)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1102, file: !57, line: 1657, baseType: !1179, size: 64, align: 64, offset: 704)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1102, file: !57, line: 1658, baseType: !966, size: 32, align: 32, offset: 768)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1102, file: !57, line: 1679, baseType: !1017, size: 64, align: 32, offset: 800)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1102, file: !57, line: 1688, baseType: !966, size: 32, align: 32, offset: 864)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1102, file: !57, line: 1712, baseType: !966, size: 32, align: 32, offset: 896)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1102, file: !57, line: 1729, baseType: !966, size: 32, align: 32, offset: 928)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1102, file: !57, line: 1729, baseType: !966, size: 32, align: 32, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1102, file: !57, line: 1744, baseType: !966, size: 32, align: 32, offset: 992)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1102, file: !57, line: 1744, baseType: !966, size: 32, align: 32, offset: 1024)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1102, file: !57, line: 1751, baseType: !966, size: 32, align: 32, offset: 1056)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1102, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1102, file: !57, line: 1791, baseType: !1523, size: 64, align: 64, offset: 1152)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{null, !1526, !1259, !1341, !966, !966, !966}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1102, file: !57, line: 1808, baseType: !1528, size: 64, align: 64, offset: 1216)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!516, !1526, !1123}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1102, file: !57, line: 1816, baseType: !966, size: 32, align: 32, offset: 1280)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1102, file: !57, line: 1825, baseType: !1075, size: 32, align: 32, offset: 1312)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1102, file: !57, line: 1830, baseType: !966, size: 32, align: 32, offset: 1344)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1102, file: !57, line: 1838, baseType: !1075, size: 32, align: 32, offset: 1376)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1102, file: !57, line: 1846, baseType: !966, size: 32, align: 32, offset: 1408)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1102, file: !57, line: 1851, baseType: !966, size: 32, align: 32, offset: 1440)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1102, file: !57, line: 1861, baseType: !1075, size: 32, align: 32, offset: 1472)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1102, file: !57, line: 1868, baseType: !1075, size: 32, align: 32, offset: 1504)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1102, file: !57, line: 1875, baseType: !1075, size: 32, align: 32, offset: 1536)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1102, file: !57, line: 1882, baseType: !1075, size: 32, align: 32, offset: 1568)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1102, file: !57, line: 1889, baseType: !1075, size: 32, align: 32, offset: 1600)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1102, file: !57, line: 1896, baseType: !1075, size: 32, align: 32, offset: 1632)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1102, file: !57, line: 1903, baseType: !1075, size: 32, align: 32, offset: 1664)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1102, file: !57, line: 1910, baseType: !966, size: 32, align: 32, offset: 1696)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1102, file: !57, line: 1915, baseType: !966, size: 32, align: 32, offset: 1728)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1102, file: !57, line: 1926, baseType: !1341, size: 64, align: 64, offset: 1792)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1102, file: !57, line: 1935, baseType: !1017, size: 64, align: 32, offset: 1856)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1102, file: !57, line: 1942, baseType: !966, size: 32, align: 32, offset: 1920)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1102, file: !57, line: 1948, baseType: !966, size: 32, align: 32, offset: 1952)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1102, file: !57, line: 1954, baseType: !966, size: 32, align: 32, offset: 1984)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1102, file: !57, line: 1960, baseType: !966, size: 32, align: 32, offset: 2016)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1102, file: !57, line: 1984, baseType: !966, size: 32, align: 32, offset: 2048)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1102, file: !57, line: 1991, baseType: !966, size: 32, align: 32, offset: 2080)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1102, file: !57, line: 1996, baseType: !966, size: 32, align: 32, offset: 2112)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1102, file: !57, line: 2004, baseType: !966, size: 32, align: 32, offset: 2144)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1102, file: !57, line: 2011, baseType: !966, size: 32, align: 32, offset: 2176)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1102, file: !57, line: 2018, baseType: !966, size: 32, align: 32, offset: 2208)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1102, file: !57, line: 2027, baseType: !966, size: 32, align: 32, offset: 2240)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1102, file: !57, line: 2034, baseType: !966, size: 32, align: 32, offset: 2272)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1102, file: !57, line: 2044, baseType: !966, size: 32, align: 32, offset: 2304)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1102, file: !57, line: 2054, baseType: !1562, size: 64, align: 64, offset: 2368)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1102, file: !57, line: 2061, baseType: !1562, size: 64, align: 64, offset: 2432)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1102, file: !57, line: 2066, baseType: !966, size: 32, align: 32, offset: 2496)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1102, file: !57, line: 2070, baseType: !966, size: 32, align: 32, offset: 2528)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1102, file: !57, line: 2078, baseType: !966, size: 32, align: 32, offset: 2560)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1102, file: !57, line: 2085, baseType: !966, size: 32, align: 32, offset: 2592)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1102, file: !57, line: 2092, baseType: !966, size: 32, align: 32, offset: 2624)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1102, file: !57, line: 2099, baseType: !966, size: 32, align: 32, offset: 2656)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1102, file: !57, line: 2106, baseType: !966, size: 32, align: 32, offset: 2688)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1102, file: !57, line: 2113, baseType: !966, size: 32, align: 32, offset: 2720)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1102, file: !57, line: 2120, baseType: !966, size: 32, align: 32, offset: 2752)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1102, file: !57, line: 2125, baseType: !966, size: 32, align: 32, offset: 2784)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1102, file: !57, line: 2133, baseType: !966, size: 32, align: 32, offset: 2816)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1102, file: !57, line: 2140, baseType: !966, size: 32, align: 32, offset: 2848)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1102, file: !57, line: 2145, baseType: !966, size: 32, align: 32, offset: 2880)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1102, file: !57, line: 2153, baseType: !966, size: 32, align: 32, offset: 2912)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1102, file: !57, line: 2158, baseType: !966, size: 32, align: 32, offset: 2944)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1102, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1102, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1102, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1102, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1102, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1102, file: !57, line: 2203, baseType: !966, size: 32, align: 32, offset: 3136)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1102, file: !57, line: 2209, baseType: !880, size: 32, align: 32, offset: 3168)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1102, file: !57, line: 2212, baseType: !966, size: 32, align: 32, offset: 3200)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1102, file: !57, line: 2213, baseType: !966, size: 32, align: 32, offset: 3232)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1102, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1102, file: !57, line: 2232, baseType: !966, size: 32, align: 32, offset: 3296)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1102, file: !57, line: 2243, baseType: !966, size: 32, align: 32, offset: 3328)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1102, file: !57, line: 2249, baseType: !966, size: 32, align: 32, offset: 3360)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1102, file: !57, line: 2256, baseType: !966, size: 32, align: 32, offset: 3392)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1102, file: !57, line: 2263, baseType: !972, size: 64, align: 64, offset: 3456)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1102, file: !57, line: 2270, baseType: !972, size: 64, align: 64, offset: 3520)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1102, file: !57, line: 2277, baseType: !888, size: 32, align: 32, offset: 3584)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1102, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1102, file: !57, line: 2367, baseType: !1598, size: 64, align: 64, offset: 3648)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!966, !1526, !1359, !966}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1102, file: !57, line: 2383, baseType: !966, size: 32, align: 32, offset: 3712)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1102, file: !57, line: 2386, baseType: !1075, size: 32, align: 32, offset: 3744)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1102, file: !57, line: 2387, baseType: !1075, size: 32, align: 32, offset: 3776)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1102, file: !57, line: 2394, baseType: !966, size: 32, align: 32, offset: 3808)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1102, file: !57, line: 2401, baseType: !966, size: 32, align: 32, offset: 3840)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1102, file: !57, line: 2408, baseType: !966, size: 32, align: 32, offset: 3872)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1102, file: !57, line: 2415, baseType: !966, size: 32, align: 32, offset: 3904)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1102, file: !57, line: 2422, baseType: !966, size: 32, align: 32, offset: 3936)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1102, file: !57, line: 2423, baseType: !1610, size: 64, align: 64, offset: 3968)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1612, file: !57, line: 827, baseType: !966, size: 32, align: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1612, file: !57, line: 828, baseType: !966, size: 32, align: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1612, file: !57, line: 829, baseType: !966, size: 32, align: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1612, file: !57, line: 830, baseType: !1075, size: 32, align: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1102, file: !57, line: 2430, baseType: !1011, size: 64, align: 64, offset: 4032)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1102, file: !57, line: 2437, baseType: !1011, size: 64, align: 64, offset: 4096)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1102, file: !57, line: 2444, baseType: !1075, size: 32, align: 32, offset: 4160)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1102, file: !57, line: 2451, baseType: !1075, size: 32, align: 32, offset: 4192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1102, file: !57, line: 2458, baseType: !966, size: 32, align: 32, offset: 4224)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1102, file: !57, line: 2469, baseType: !966, size: 32, align: 32, offset: 4256)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1102, file: !57, line: 2475, baseType: !966, size: 32, align: 32, offset: 4288)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1102, file: !57, line: 2481, baseType: !966, size: 32, align: 32, offset: 4320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1102, file: !57, line: 2485, baseType: !966, size: 32, align: 32, offset: 4352)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1102, file: !57, line: 2489, baseType: !966, size: 32, align: 32, offset: 4384)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1102, file: !57, line: 2493, baseType: !966, size: 32, align: 32, offset: 4416)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1102, file: !57, line: 2501, baseType: !966, size: 32, align: 32, offset: 4448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1102, file: !57, line: 2506, baseType: !966, size: 32, align: 32, offset: 4480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1102, file: !57, line: 2510, baseType: !966, size: 32, align: 32, offset: 4512)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1102, file: !57, line: 2514, baseType: !1011, size: 64, align: 64, offset: 4544)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1102, file: !57, line: 2528, baseType: !1634, size: 64, align: 64, offset: 4608)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{null, !1526, !957, !966, !966}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1102, file: !57, line: 2534, baseType: !966, size: 32, align: 32, offset: 4672)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1102, file: !57, line: 2545, baseType: !966, size: 32, align: 32, offset: 4704)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1102, file: !57, line: 2547, baseType: !966, size: 32, align: 32, offset: 4736)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1102, file: !57, line: 2549, baseType: !966, size: 32, align: 32, offset: 4768)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1102, file: !57, line: 2551, baseType: !966, size: 32, align: 32, offset: 4800)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1102, file: !57, line: 2553, baseType: !966, size: 32, align: 32, offset: 4832)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1102, file: !57, line: 2555, baseType: !966, size: 32, align: 32, offset: 4864)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1102, file: !57, line: 2557, baseType: !966, size: 32, align: 32, offset: 4896)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1102, file: !57, line: 2559, baseType: !966, size: 32, align: 32, offset: 4928)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1102, file: !57, line: 2563, baseType: !966, size: 32, align: 32, offset: 4960)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1102, file: !57, line: 2571, baseType: !1217, size: 64, align: 64, offset: 4992)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1102, file: !57, line: 2579, baseType: !1217, size: 64, align: 64, offset: 5056)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1102, file: !57, line: 2586, baseType: !966, size: 32, align: 32, offset: 5120)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1102, file: !57, line: 2615, baseType: !966, size: 32, align: 32, offset: 5152)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1102, file: !57, line: 2627, baseType: !966, size: 32, align: 32, offset: 5184)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1102, file: !57, line: 2637, baseType: !966, size: 32, align: 32, offset: 5216)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1102, file: !57, line: 2681, baseType: !966, size: 32, align: 32, offset: 5248)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1102, file: !57, line: 2709, baseType: !1011, size: 64, align: 64, offset: 5312)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1102, file: !57, line: 2716, baseType: !1656, size: 64, align: 64, offset: 5376)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664, !1665, !1666, !1670, !1674, !1675, !1676, !1677, !1683, !1684, !1685, !1686, !1687}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1658, file: !57, line: 3642, baseType: !991, size: 64, align: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1658, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1658, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1658, file: !57, line: 3669, baseType: !966, size: 32, align: 32, offset: 160)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1658, file: !57, line: 3682, baseType: !1356, size: 64, align: 64, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1658, file: !57, line: 3698, baseType: !1667, size: 64, align: 64, offset: 256)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64, align: 64)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!966, !1100, !1167, !954}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1658, file: !57, line: 3712, baseType: !1671, size: 64, align: 64, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64, align: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!966, !1100, !966, !1167, !954}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1658, file: !57, line: 3726, baseType: !1667, size: 64, align: 64, offset: 384)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1658, file: !57, line: 3737, baseType: !1150, size: 64, align: 64, offset: 448)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1658, file: !57, line: 3746, baseType: !966, size: 32, align: 32, offset: 512)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1658, file: !57, line: 3757, baseType: !1678, size: 64, align: 64, offset: 576)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{null, !1681}
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !57, line: 3617, flags: DIFlagFwdDecl)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1658, file: !57, line: 3766, baseType: !1150, size: 64, align: 64, offset: 640)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1658, file: !57, line: 3774, baseType: !1150, size: 64, align: 64, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1658, file: !57, line: 3780, baseType: !966, size: 32, align: 32, offset: 768)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1658, file: !57, line: 3785, baseType: !966, size: 32, align: 32, offset: 800)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1658, file: !57, line: 3795, baseType: !1688, size: 64, align: 64, offset: 832)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!966, !1100, !1230}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1102, file: !57, line: 2728, baseType: !957, size: 64, align: 64, offset: 5440)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1102, file: !57, line: 2735, baseType: !1283, size: 512, align: 64, offset: 5504)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1102, file: !57, line: 2742, baseType: !966, size: 32, align: 32, offset: 6016)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1102, file: !57, line: 2755, baseType: !966, size: 32, align: 32, offset: 6048)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1102, file: !57, line: 2776, baseType: !966, size: 32, align: 32, offset: 6080)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1102, file: !57, line: 2783, baseType: !966, size: 32, align: 32, offset: 6112)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1102, file: !57, line: 2791, baseType: !966, size: 32, align: 32, offset: 6144)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1102, file: !57, line: 2802, baseType: !1359, size: 64, align: 64, offset: 6208)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1102, file: !57, line: 2811, baseType: !966, size: 32, align: 32, offset: 6272)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1102, file: !57, line: 2821, baseType: !966, size: 32, align: 32, offset: 6304)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1102, file: !57, line: 2830, baseType: !966, size: 32, align: 32, offset: 6336)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1102, file: !57, line: 2840, baseType: !966, size: 32, align: 32, offset: 6368)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1102, file: !57, line: 2851, baseType: !1704, size: 64, align: 64, offset: 6400)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!966, !1526, !1707, !957, !1341, !966, !966}
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!966, !1526, !957}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1102, file: !57, line: 2871, baseType: !1711, size: 64, align: 64, offset: 6464)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!966, !1526, !1714, !957, !1341, !966}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!966, !1526, !957, !966, !966}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1102, file: !57, line: 2878, baseType: !966, size: 32, align: 32, offset: 6528)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1102, file: !57, line: 2885, baseType: !966, size: 32, align: 32, offset: 6560)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1102, file: !57, line: 3005, baseType: !966, size: 32, align: 32, offset: 6592)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1102, file: !57, line: 3013, baseType: !900, size: 32, align: 32, offset: 6624)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1102, file: !57, line: 3020, baseType: !900, size: 32, align: 32, offset: 6656)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1102, file: !57, line: 3027, baseType: !900, size: 32, align: 32, offset: 6688)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1102, file: !57, line: 3037, baseType: !1179, size: 64, align: 64, offset: 6720)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1102, file: !57, line: 3038, baseType: !966, size: 32, align: 32, offset: 6784)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1102, file: !57, line: 3050, baseType: !972, size: 64, align: 64, offset: 6848)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1102, file: !57, line: 3065, baseType: !966, size: 32, align: 32, offset: 6912)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1102, file: !57, line: 3083, baseType: !966, size: 32, align: 32, offset: 6944)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1102, file: !57, line: 3092, baseType: !1017, size: 64, align: 32, offset: 6976)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1102, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1102, file: !57, line: 3106, baseType: !1017, size: 64, align: 32, offset: 7072)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1102, file: !57, line: 3113, baseType: !1732, size: 64, align: 64, offset: 7168)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1735, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1735, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1735, file: !57, line: 720, baseType: !991, size: 64, align: 64, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1735, file: !57, line: 724, baseType: !991, size: 64, align: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1735, file: !57, line: 728, baseType: !966, size: 32, align: 32, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1735, file: !57, line: 734, baseType: !1743, size: 64, align: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1735, file: !57, line: 739, baseType: !1746, size: 64, align: 64, offset: 320)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64, align: 64)
!1747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1102, file: !57, line: 3129, baseType: !1011, size: 64, align: 64, offset: 7232)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1102, file: !57, line: 3130, baseType: !1011, size: 64, align: 64, offset: 7296)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1102, file: !57, line: 3131, baseType: !1011, size: 64, align: 64, offset: 7360)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1102, file: !57, line: 3132, baseType: !1011, size: 64, align: 64, offset: 7424)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1102, file: !57, line: 3139, baseType: !1217, size: 64, align: 64, offset: 7488)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1102, file: !57, line: 3147, baseType: !966, size: 32, align: 32, offset: 7552)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1102, file: !57, line: 3165, baseType: !966, size: 32, align: 32, offset: 7584)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1102, file: !57, line: 3172, baseType: !966, size: 32, align: 32, offset: 7616)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1102, file: !57, line: 3180, baseType: !966, size: 32, align: 32, offset: 7648)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1102, file: !57, line: 3191, baseType: !1562, size: 64, align: 64, offset: 7680)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1102, file: !57, line: 3199, baseType: !1179, size: 64, align: 64, offset: 7744)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1102, file: !57, line: 3207, baseType: !1217, size: 64, align: 64, offset: 7808)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1102, file: !57, line: 3214, baseType: !956, size: 32, align: 32, offset: 7872)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1102, file: !57, line: 3224, baseType: !1248, size: 64, align: 64, offset: 7936)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1102, file: !57, line: 3225, baseType: !966, size: 32, align: 32, offset: 8000)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1102, file: !57, line: 3249, baseType: !1230, size: 64, align: 64, offset: 8064)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1102, file: !57, line: 3256, baseType: !966, size: 32, align: 32, offset: 8128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1102, file: !57, line: 3271, baseType: !966, size: 32, align: 32, offset: 8160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1102, file: !57, line: 3279, baseType: !1011, size: 64, align: 64, offset: 8192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1102, file: !57, line: 3301, baseType: !1230, size: 64, align: 64, offset: 8256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1102, file: !57, line: 3310, baseType: !966, size: 32, align: 32, offset: 8320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1102, file: !57, line: 3337, baseType: !966, size: 32, align: 32, offset: 8352)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1102, file: !57, line: 3351, baseType: !966, size: 32, align: 32, offset: 8384)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1102, file: !57, line: 3359, baseType: !966, size: 32, align: 32, offset: 8416)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !983, file: !982, line: 166, baseType: !1773, size: 320, align: 64, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1774, line: 40, baseType: !1775)
!1774 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1774, line: 35, size: 320, align: 64, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1775, file: !1774, line: 36, baseType: !954, size: 32, align: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1775, file: !1774, line: 37, baseType: !966, size: 32, align: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1775, file: !1774, line: 38, baseType: !1179, size: 64, align: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1775, file: !1774, line: 38, baseType: !1179, size: 64, align: 64, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1775, file: !1774, line: 38, baseType: !1179, size: 64, align: 64, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1775, file: !1774, line: 39, baseType: !966, size: 32, align: 32, offset: 256)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "adsp", scope: !983, file: !982, line: 167, baseType: !1784, size: 192, align: 64, offset: 1280)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioDSPContext", file: !1785, line: 53, baseType: !1786)
!1785 = !DIFile(filename: "libavcodec/audiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioDSPContext", file: !1785, line: 24, size: 192, align: 64, elements: !1787)
!1787 = !{!1788, !1796, !1802}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_int16", scope: !1786, file: !1785, line: 29, baseType: !1789, size: 64, align: 64)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64, align: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!965, !1792, !1792, !966}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64, align: 64)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !955, line: 37, baseType: !1795)
!1795 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "vector_clip_int32", scope: !1786, file: !1785, line: 46, baseType: !1797, size: 64, align: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{null, !964, !1800, !965, !965, !956}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "vector_clipf", scope: !1786, file: !1785, line: 49, baseType: !1803, size: 64, align: 64, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64, align: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1806, !1807, !966, !1075, !1075}
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64, align: 64)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !983, file: !982, line: 168, baseType: !1810, size: 64, align: 64, offset: 1472)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64, align: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1812, line: 192, baseType: !1813)
!1812 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1812, line: 24, size: 704, align: 64, elements: !1814)
!1814 = !{!1815, !1819, !1823, !1830, !1831, !1832, !1836, !1837, !1838, !1843, !1847}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1813, file: !1812, line: 38, baseType: !1816, size: 64, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !1806, !1807, !1807, !966}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1813, file: !1812, line: 54, baseType: !1820, size: 64, align: 64, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64, align: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !1806, !1807, !1075, !966}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1813, file: !1812, line: 70, baseType: !1824, size: 64, align: 64, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{null, !1827, !1828, !1014, !966}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64, align: 64)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1813, file: !1812, line: 85, baseType: !1820, size: 64, align: 64, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1813, file: !1812, line: 100, baseType: !1824, size: 64, align: 64, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1813, file: !1812, line: 119, baseType: !1833, size: 64, align: 64, offset: 320)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64, align: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !1806, !1807, !1807, !1807, !966}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1813, file: !1812, line: 137, baseType: !1833, size: 64, align: 64, offset: 384)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1813, file: !1812, line: 154, baseType: !1816, size: 64, align: 64, offset: 448)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1813, file: !1812, line: 164, baseType: !1839, size: 64, align: 64, offset: 512)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64, align: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{null, !1842, !1842, !966}
!1842 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1806)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1813, file: !1812, line: 175, baseType: !1844, size: 64, align: 64, offset: 576)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64, align: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!1075, !1807, !1807, !966}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1813, file: !1812, line: 190, baseType: !1848, size: 64, align: 64, offset: 640)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64, align: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !1827, !1828, !1828, !966}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !983, file: !982, line: 169, baseType: !1852, size: 8640, align: 64, offset: 1536)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "MECmpContext", file: !1853, line: 80, baseType: !1854)
!1853 = !DIFile(filename: "libavcodec/me_cmp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MECmpContext", file: !1853, line: 53, size: 8640, align: 64, elements: !1855)
!1855 = !{!1856, !1861, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1893}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sum_abs_dctelem", scope: !1854, file: !1853, line: 54, baseType: !1857, size: 64, align: 64)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!966, !1860}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !1854, file: !1853, line: 56, baseType: !1862, size: 384, align: 64, offset: 64)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 384, align: 64, elements: !1868)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "me_cmp_func", file: !1853, line: 48, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!966, !1681, !1179, !1179, !1867, !966}
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1336, line: 149, baseType: !1012)
!1868 = !{!1869}
!1869 = !DISubrange(count: 6)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "sse", scope: !1854, file: !1853, line: 57, baseType: !1862, size: 384, align: 64, offset: 448)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard8_diff", scope: !1854, file: !1853, line: 58, baseType: !1862, size: 384, align: 64, offset: 832)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "dct_sad", scope: !1854, file: !1853, line: 59, baseType: !1862, size: 384, align: 64, offset: 1216)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "quant_psnr", scope: !1854, file: !1853, line: 60, baseType: !1862, size: 384, align: 64, offset: 1600)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1854, file: !1853, line: 61, baseType: !1862, size: 384, align: 64, offset: 1984)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1854, file: !1853, line: 62, baseType: !1862, size: 384, align: 64, offset: 2368)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "vsad", scope: !1854, file: !1853, line: 63, baseType: !1862, size: 384, align: 64, offset: 2752)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "vsse", scope: !1854, file: !1853, line: 64, baseType: !1862, size: 384, align: 64, offset: 3136)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "nsse", scope: !1854, file: !1853, line: 65, baseType: !1862, size: 384, align: 64, offset: 3520)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "w53", scope: !1854, file: !1853, line: 66, baseType: !1862, size: 384, align: 64, offset: 3904)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "w97", scope: !1854, file: !1853, line: 67, baseType: !1862, size: 384, align: 64, offset: 4288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "dct_max", scope: !1854, file: !1853, line: 68, baseType: !1862, size: 384, align: 64, offset: 4672)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "dct264_sad", scope: !1854, file: !1853, line: 69, baseType: !1862, size: 384, align: 64, offset: 5056)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1854, file: !1853, line: 71, baseType: !1862, size: 384, align: 64, offset: 5440)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1854, file: !1853, line: 72, baseType: !1862, size: 384, align: 64, offset: 5824)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1854, file: !1853, line: 73, baseType: !1862, size: 384, align: 64, offset: 6208)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1854, file: !1853, line: 74, baseType: !1862, size: 384, align: 64, offset: 6592)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1854, file: !1853, line: 75, baseType: !1862, size: 384, align: 64, offset: 6976)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1854, file: !1853, line: 76, baseType: !1862, size: 384, align: 64, offset: 7360)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pix_abs", scope: !1854, file: !1853, line: 78, baseType: !1890, size: 512, align: 64, offset: 7744)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 512, align: 64, elements: !1891)
!1891 = !{!1892, !1212}
!1892 = !DISubrange(count: 2)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "median_sad", scope: !1854, file: !1853, line: 79, baseType: !1862, size: 384, align: 64, offset: 8256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ac3dsp", scope: !983, file: !982, line: 170, baseType: !1895, size: 960, align: 64, offset: 10176)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3DSPContext", file: !1896, line: 153, baseType: !1897)
!1896 = !DIFile(filename: "libavcodec/ac3dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3DSPContext", file: !1896, line: 33, size: 960, align: 64, elements: !1898)
!1898 = !{!1899, !1903, !1907, !1911, !1915, !1919, !1923, !1927, !1935, !1939, !1944, !1945, !1946, !1947, !1952, !1958}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_exponent_min", scope: !1897, file: !1896, line: 43, baseType: !1900, size: 64, align: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1179, !966, !966}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_max_msb_abs_int16", scope: !1897, file: !1896, line: 54, baseType: !1904, size: 64, align: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64, align: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!966, !1792, !966}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_lshift_int16", scope: !1897, file: !1896, line: 65, baseType: !1908, size: 64, align: 64, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64, align: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !1860, !956, !956}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_rshift_int32", scope: !1897, file: !1896, line: 76, baseType: !1912, size: 64, align: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64, align: 64)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{null, !964, !956, !956}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "float_to_fixed24", scope: !1897, file: !1896, line: 89, baseType: !1916, size: 64, align: 64, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64, align: 64)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{null, !964, !1807, !956}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc_calc_bap", scope: !1897, file: !1896, line: 106, baseType: !1920, size: 64, align: 64, offset: 320)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64, align: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{null, !1860, !1860, !966, !966, !966, !966, !1167, !1179}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "update_bap_counts", scope: !1897, file: !1896, line: 117, baseType: !1924, size: 64, align: 64, offset: 384)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64, align: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null, !1562, !1179, !966}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "compute_mantissa_size", scope: !1897, file: !1896, line: 125, baseType: !1928, size: 64, align: 64, offset: 448)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64, align: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!966, !1931}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64, align: 64)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 256, align: 16, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 16)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "extract_exponents", scope: !1897, file: !1896, line: 127, baseType: !1936, size: 64, align: 64, offset: 512)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64, align: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1179, !964, !966}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_int32", scope: !1897, file: !1896, line: 129, baseType: !1940, size: 64, align: 64, offset: 576)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64, align: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1943, !1800, !1800, !966}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_float", scope: !1897, file: !1896, line: 132, baseType: !1816, size: 64, align: 64, offset: 640)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "out_channels", scope: !1897, file: !1896, line: 135, baseType: !966, size: 32, align: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "in_channels", scope: !1897, file: !1896, line: 136, baseType: !966, size: 32, align: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "downmix", scope: !1897, file: !1896, line: 137, baseType: !1948, size: 64, align: 64, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64, align: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{null, !1951, !1951, !966}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64, align: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "downmix_fixed", scope: !1897, file: !1896, line: 138, baseType: !1953, size: 64, align: 64, offset: 832)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64, align: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1956, !1957, !966}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64, align: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_int16", scope: !1897, file: !1896, line: 151, baseType: !1959, size: 64, align: 64, offset: 896)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64, align: 64)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{null, !1860, !1792, !1792, !956}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !983, file: !982, line: 171, baseType: !1963, size: 896, align: 64, offset: 11136)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1964, line: 41, baseType: !1965)
!1964 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !910, line: 88, size: 896, align: 64, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970, !1978, !1979, !1980, !1982, !1983, !1988, !1989, !1995, !1996, !1997, !2003, !2004, !2005}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1965, file: !910, line: 89, baseType: !966, size: 32, align: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1965, file: !910, line: 90, baseType: !966, size: 32, align: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1965, file: !910, line: 91, baseType: !1562, size: 64, align: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1965, file: !910, line: 92, baseType: !1971, size: 64, align: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64, align: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1964, line: 39, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1964, line: 37, size: 64, align: 32, elements: !1974)
!1974 = !{!1975, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1973, file: !1964, line: 38, baseType: !1976, size: 32, align: 32)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1964, line: 35, baseType: !1075)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1973, file: !1964, line: 38, baseType: !1976, size: 32, align: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1965, file: !910, line: 93, baseType: !966, size: 32, align: 32, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1965, file: !910, line: 94, baseType: !966, size: 32, align: 32, offset: 224)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1965, file: !910, line: 96, baseType: !1981, size: 64, align: 64, offset: 256)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64, align: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1965, file: !910, line: 97, baseType: !1981, size: 64, align: 64, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1965, file: !910, line: 101, baseType: !1984, size: 64, align: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64, align: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1987, !1971}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1965, file: !910, line: 106, baseType: !1984, size: 64, align: 64, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1965, file: !910, line: 107, baseType: !1990, size: 64, align: 64, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64, align: 64)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{null, !1987, !1981, !1993}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64, align: 64)
!1994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1976)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1965, file: !910, line: 108, baseType: !1990, size: 64, align: 64, offset: 576)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1965, file: !910, line: 109, baseType: !1990, size: 64, align: 64, offset: 640)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1965, file: !910, line: 110, baseType: !1998, size: 64, align: 64, offset: 704)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !1987, !2001, !1993}
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64, align: 64)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !910, line: 43, baseType: !1075)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1965, file: !910, line: 111, baseType: !909, size: 32, align: 32, offset: 768)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1965, file: !910, line: 112, baseType: !915, size: 32, align: 32, offset: 800)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1965, file: !910, line: 113, baseType: !2006, size: 64, align: 64, offset: 832)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_window", scope: !983, file: !982, line: 172, baseType: !2008, size: 64, align: 64, offset: 12032)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64, align: 64)
!2009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleType", file: !982, line: 70, baseType: !1794)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !983, file: !982, line: 174, baseType: !2012, size: 8064, align: 64, offset: 12096)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 8064, align: 64, elements: !1868)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3Block", file: !982, line: 157, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3Block", file: !982, line: 133, size: 1344, align: 64, elements: !2015)
!2015 = !{!2016, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2028, !2029, !2030, !2034, !2035, !2036, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_coef", scope: !2014, file: !982, line: 134, baseType: !2017, size: 64, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64, align: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64, align: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoefType", file: !982, line: 71, baseType: !965)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_coef", scope: !2014, file: !982, line: 135, baseType: !1956, size: 64, align: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2014, file: !982, line: 136, baseType: !1267, size: 64, align: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "grouped_exp", scope: !2014, file: !982, line: 137, baseType: !1267, size: 64, align: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "psd", scope: !2014, file: !982, line: 138, baseType: !1957, size: 64, align: 64, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "band_psd", scope: !2014, file: !982, line: 139, baseType: !1957, size: 64, align: 64, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2014, file: !982, line: 140, baseType: !1957, size: 64, align: 64, offset: 384)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "qmant", scope: !2014, file: !982, line: 141, baseType: !2027, size: 64, align: 64, offset: 448)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coord_exp", scope: !2014, file: !982, line: 142, baseType: !1267, size: 64, align: 64, offset: 512)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coord_mant", scope: !2014, file: !982, line: 143, baseType: !1267, size: 64, align: 64, offset: 576)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_shift", scope: !2014, file: !982, line: 144, baseType: !2031, size: 56, align: 8, offset: 640)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 56, align: 8, elements: !2032)
!2032 = !{!2033}
!2033 = !DISubrange(count: 7)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "new_rematrixing_strategy", scope: !2014, file: !982, line: 145, baseType: !1134, size: 8, align: 8, offset: 696)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "num_rematrixing_bands", scope: !2014, file: !982, line: 146, baseType: !966, size: 32, align: 32, offset: 704)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "rematrixing_flags", scope: !2014, file: !982, line: 147, baseType: !2037, size: 32, align: 8, offset: 736)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 32, align: 8, elements: !1211)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "new_cpl_strategy", scope: !2014, file: !982, line: 148, baseType: !966, size: 32, align: 32, offset: 768)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_in_use", scope: !2014, file: !982, line: 149, baseType: !966, size: 32, align: 32, offset: 800)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "channel_in_cpl", scope: !2014, file: !982, line: 150, baseType: !2031, size: 56, align: 8, offset: 832)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "num_cpl_channels", scope: !2014, file: !982, line: 151, baseType: !966, size: 32, align: 32, offset: 896)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "new_cpl_coords", scope: !2014, file: !982, line: 152, baseType: !2031, size: 56, align: 8, offset: 928)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_master_exp", scope: !2014, file: !982, line: 153, baseType: !2031, size: 56, align: 8, offset: 984)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "new_snr_offsets", scope: !2014, file: !982, line: 154, baseType: !966, size: 32, align: 32, offset: 1056)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "new_cpl_leak", scope: !2014, file: !982, line: 155, baseType: !966, size: 32, align: 32, offset: 1088)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "end_freq", scope: !2014, file: !982, line: 156, baseType: !2047, size: 224, align: 32, offset: 1120)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 224, align: 32, elements: !2032)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_point", scope: !983, file: !982, line: 176, baseType: !966, size: 32, align: 32, offset: 20160)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "eac3", scope: !983, file: !982, line: 177, baseType: !966, size: 32, align: 32, offset: 20192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_id", scope: !983, file: !982, line: 178, baseType: !966, size: 32, align: 32, offset: 20224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !983, file: !982, line: 179, baseType: !966, size: 32, align: 32, offset: 20256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !983, file: !982, line: 181, baseType: !966, size: 32, align: 32, offset: 20288)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !983, file: !982, line: 182, baseType: !966, size: 32, align: 32, offset: 20320)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "num_blks_code", scope: !983, file: !982, line: 184, baseType: !966, size: 32, align: 32, offset: 20352)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !983, file: !982, line: 185, baseType: !966, size: 32, align: 32, offset: 20384)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size_min", scope: !983, file: !982, line: 186, baseType: !966, size: 32, align: 32, offset: 20416)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !983, file: !982, line: 187, baseType: !966, size: 32, align: 32, offset: 20448)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size_code", scope: !983, file: !982, line: 188, baseType: !966, size: 32, align: 32, offset: 20480)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "crc_inv", scope: !983, file: !982, line: 189, baseType: !2060, size: 32, align: 16, offset: 20512)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 32, align: 16, elements: !2061)
!2061 = !{!1892}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "bits_written", scope: !983, file: !982, line: 190, baseType: !1011, size: 64, align: 64, offset: 20544)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "samples_written", scope: !983, file: !982, line: 191, baseType: !1011, size: 64, align: 64, offset: 20608)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fbw_channels", scope: !983, file: !982, line: 193, baseType: !966, size: 32, align: 32, offset: 20672)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !983, file: !982, line: 194, baseType: !966, size: 32, align: 32, offset: 20704)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_on", scope: !983, file: !982, line: 195, baseType: !966, size: 32, align: 32, offset: 20736)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_channel", scope: !983, file: !982, line: 196, baseType: !966, size: 32, align: 32, offset: 20768)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "has_center", scope: !983, file: !982, line: 197, baseType: !966, size: 32, align: 32, offset: 20800)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "has_surround", scope: !983, file: !982, line: 198, baseType: !966, size: 32, align: 32, offset: 20832)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "channel_mode", scope: !983, file: !982, line: 199, baseType: !966, size: 32, align: 32, offset: 20864)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !983, file: !982, line: 200, baseType: !1167, size: 64, align: 64, offset: 20928)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !983, file: !982, line: 202, baseType: !966, size: 32, align: 32, offset: 20992)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !983, file: !982, line: 203, baseType: !966, size: 32, align: 32, offset: 21024)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_center_mix_level", scope: !983, file: !982, line: 204, baseType: !966, size: 32, align: 32, offset: 21056)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_surround_mix_level", scope: !983, file: !982, line: 205, baseType: !966, size: 32, align: 32, offset: 21088)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "loro_center_mix_level", scope: !983, file: !982, line: 206, baseType: !966, size: 32, align: 32, offset: 21120)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "loro_surround_mix_level", scope: !983, file: !982, line: 207, baseType: !966, size: 32, align: 32, offset: 21152)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !983, file: !982, line: 209, baseType: !966, size: 32, align: 32, offset: 21184)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_code", scope: !983, file: !982, line: 210, baseType: !966, size: 32, align: 32, offset: 21216)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "start_freq", scope: !983, file: !982, line: 211, baseType: !2047, size: 224, align: 32, offset: 21248)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_end_freq", scope: !983, file: !982, line: 212, baseType: !966, size: 32, align: 32, offset: 21472)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_on", scope: !983, file: !982, line: 214, baseType: !966, size: 32, align: 32, offset: 21504)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_enabled", scope: !983, file: !982, line: 215, baseType: !966, size: 32, align: 32, offset: 21536)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "num_cpl_subbands", scope: !983, file: !982, line: 216, baseType: !966, size: 32, align: 32, offset: 21568)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "num_cpl_bands", scope: !983, file: !982, line: 217, baseType: !966, size: 32, align: 32, offset: 21600)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_band_sizes", scope: !983, file: !982, line: 218, baseType: !2087, size: 144, align: 8, offset: 21632)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 144, align: 8, elements: !2088)
!2088 = !{!2089}
!2089 = !DISubrange(count: 18)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "rematrixing_enabled", scope: !983, file: !982, line: 220, baseType: !966, size: 32, align: 32, offset: 21792)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "slow_gain_code", scope: !983, file: !982, line: 223, baseType: !966, size: 32, align: 32, offset: 21824)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "slow_decay_code", scope: !983, file: !982, line: 224, baseType: !966, size: 32, align: 32, offset: 21856)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "fast_decay_code", scope: !983, file: !982, line: 225, baseType: !966, size: 32, align: 32, offset: 21888)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "db_per_bit_code", scope: !983, file: !982, line: 226, baseType: !966, size: 32, align: 32, offset: 21920)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "floor_code", scope: !983, file: !982, line: 227, baseType: !966, size: 32, align: 32, offset: 21952)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc", scope: !983, file: !982, line: 228, baseType: !2097, size: 288, align: 32, offset: 21984)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3BitAllocParameters", file: !920, line: 171, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3BitAllocParameters", file: !920, line: 166, size: 288, align: 32, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !2098, file: !920, line: 167, baseType: !966, size: 32, align: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sr_shift", scope: !2098, file: !920, line: 168, baseType: !966, size: 32, align: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "slow_gain", scope: !2098, file: !920, line: 169, baseType: !966, size: 32, align: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "slow_decay", scope: !2098, file: !920, line: 169, baseType: !966, size: 32, align: 32, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fast_decay", scope: !2098, file: !920, line: 169, baseType: !966, size: 32, align: 32, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "db_per_bit", scope: !2098, file: !920, line: 169, baseType: !966, size: 32, align: 32, offset: 160)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "floor", scope: !2098, file: !920, line: 169, baseType: !966, size: 32, align: 32, offset: 192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_fast_leak", scope: !2098, file: !920, line: 170, baseType: !966, size: 32, align: 32, offset: 224)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_slow_leak", scope: !2098, file: !920, line: 170, baseType: !966, size: 32, align: 32, offset: 256)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "coarse_snr_offset", scope: !983, file: !982, line: 229, baseType: !966, size: 32, align: 32, offset: 22272)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "fast_gain_code", scope: !983, file: !982, line: 230, baseType: !2047, size: 224, align: 32, offset: 22304)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fine_snr_offset", scope: !983, file: !982, line: 231, baseType: !2047, size: 224, align: 32, offset: 22528)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits_fixed", scope: !983, file: !982, line: 232, baseType: !966, size: 32, align: 32, offset: 22752)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !983, file: !982, line: 233, baseType: !966, size: 32, align: 32, offset: 22784)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "exponent_bits", scope: !983, file: !982, line: 234, baseType: !966, size: 32, align: 32, offset: 22816)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !983, file: !982, line: 236, baseType: !2116, size: 64, align: 64, offset: 22848)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "planar_samples", scope: !983, file: !982, line: 237, baseType: !2118, size: 64, align: 64, offset: 22912)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64, align: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "bap_buffer", scope: !983, file: !982, line: 238, baseType: !1179, size: 64, align: 64, offset: 22976)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "bap1_buffer", scope: !983, file: !982, line: 239, baseType: !1179, size: 64, align: 64, offset: 23040)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_coef_buffer", scope: !983, file: !982, line: 240, baseType: !2018, size: 64, align: 64, offset: 23104)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_coef_buffer", scope: !983, file: !982, line: 241, baseType: !964, size: 64, align: 64, offset: 23168)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "exp_buffer", scope: !983, file: !982, line: 242, baseType: !1179, size: 64, align: 64, offset: 23232)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "grouped_exp_buffer", scope: !983, file: !982, line: 243, baseType: !1179, size: 64, align: 64, offset: 23296)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "psd_buffer", scope: !983, file: !982, line: 244, baseType: !1860, size: 64, align: 64, offset: 23360)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "band_psd_buffer", scope: !983, file: !982, line: 245, baseType: !1860, size: 64, align: 64, offset: 23424)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mask_buffer", scope: !983, file: !982, line: 246, baseType: !1860, size: 64, align: 64, offset: 23488)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "qmant_buffer", scope: !983, file: !982, line: 247, baseType: !1860, size: 64, align: 64, offset: 23552)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coord_exp_buffer", scope: !983, file: !982, line: 248, baseType: !1179, size: 64, align: 64, offset: 23616)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coord_mant_buffer", scope: !983, file: !982, line: 249, baseType: !1179, size: 64, align: 64, offset: 23680)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "exp_strategy", scope: !983, file: !982, line: 251, baseType: !2132, size: 336, align: 8, offset: 23744)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 336, align: 8, elements: !2133)
!2133 = !{!2033, !1869}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "frame_exp_strategy", scope: !983, file: !982, line: 252, baseType: !2031, size: 56, align: 8, offset: 24080)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "use_frame_exp_strategy", scope: !983, file: !982, line: 253, baseType: !966, size: 32, align: 32, offset: 24160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "exp_ref_block", scope: !983, file: !982, line: 254, baseType: !2132, size: 336, align: 8, offset: 24192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ref_bap", scope: !983, file: !982, line: 255, baseType: !2138, size: 2688, align: 64, offset: 24576)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 2688, align: 64, elements: !2133)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ref_bap_set", scope: !983, file: !982, line: 256, baseType: !966, size: 32, align: 32, offset: 27264)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_end", scope: !983, file: !982, line: 259, baseType: !2141, size: 64, align: 64, offset: 27328)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64, align: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_init", scope: !983, file: !982, line: 260, baseType: !2146, size: 64, align: 64, offset: 27392)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64, align: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!966, !2144}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_sample_buffers", scope: !983, file: !982, line: 263, baseType: !2146, size: 64, align: 64, offset: 27456)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "output_frame_header", scope: !983, file: !982, line: 266, baseType: !2141, size: 64, align: 64, offset: 27520)
!2151 = !{}
!2152 = distinct !DIGlobalVariable(name: "exponent_group_tab", scope: !0, file: !969, line: 75, type: !2153, isLocal: true, isDefinition: true, variable: [2 x [3 x [256 x i8]]]* @exponent_group_tab)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 12288, align: 8, elements: !2154)
!2154 = !{!1892, !2155, !2156}
!2155 = !DISubrange(count: 3)
!2156 = !DISubrange(count: 256)
!2157 = distinct !DIGlobalVariable(name: "exp_strategy_reuse_tab", scope: !0, file: !969, line: 347, type: !2158, isLocal: true, isDefinition: true, variable: [4 x [6 x i8]]* @exp_strategy_reuse_tab)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 192, align: 8, elements: !2159)
!2159 = !{!1212, !1869}
!2160 = distinct !DIGlobalVariable(name: "cmixlev_options", scope: !0, file: !969, line: 55, type: !2161, isLocal: true, isDefinition: true, variable: [3 x float]* @cmixlev_options)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 96, align: 32, elements: !2162)
!2162 = !{!2155}
!2163 = distinct !DIGlobalVariable(name: "surmixlev_options", scope: !0, file: !969, line: 60, type: !2161, isLocal: true, isDefinition: true, variable: [3 x float]* @surmixlev_options)
!2164 = distinct !DIGlobalVariable(name: "extmixlev_options", scope: !0, file: !969, line: 65, type: !2165, isLocal: true, isDefinition: true, variable: [8 x float]* @extmixlev_options)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 256, align: 32, elements: !1205)
!2166 = distinct !DIGlobalVariable(name: "ac3_bandwidth_tab", scope: !0, file: !969, line: 109, type: !2167, isLocal: true, isDefinition: true, variable: [5 x [3 x [19 x i8]]]* @ac3_bandwidth_tab)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 2280, align: 8, elements: !2168)
!2168 = !{!2169, !2155, !975}
!2169 = !DISubrange(count: 5)
!2170 = distinct !DIGlobalVariable(name: "ac3_coupling_start_tab", scope: !0, file: !969, line: 142, type: !2171, isLocal: true, isDefinition: true, variable: [6 x [3 x [19 x i8]]]* @ac3_coupling_start_tab)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 2736, align: 8, elements: !2173)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!2173 = !{!1869, !2155, !975}
!2174 = distinct !DIGlobalVariable(name: "frame_bits_inc", scope: !2175, file: !969, line: 655, type: !2178, isLocal: true, isDefinition: true, variable: [8 x i32]* @count_frame_bits_fixed.frame_bits_inc)
!2175 = distinct !DISubprogram(name: "count_frame_bits_fixed", scope: !969, file: !969, line: 653, type: !2176, isLocal: true, isDefinition: true, scopeLine: 654, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{null, !980}
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 256, align: 32, elements: !1205)
!2179 = !{i32 2, !"Dwarf Version", i32 4}
!2180 = !{i32 2, !"Debug Info Version", i32 3}
!2181 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2182 = distinct !DISubprogram(name: "ff_ac3_adjust_frame_size", scope: !969, file: !969, line: 183, type: !2176, isLocal: false, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2183 = !DILocalVariable(name: "s", arg: 1, scope: !2182, file: !969, line: 183, type: !980)
!2184 = !DIExpression()
!2185 = !DILocation(line: 183, column: 49, scope: !2182)
!2186 = !DILocation(line: 185, column: 5, scope: !2182)
!2187 = !DILocation(line: 185, column: 12, scope: !2188)
!2188 = !DILexicalBlockFile(scope: !2182, file: !969, discriminator: 1)
!2189 = !DILocation(line: 185, column: 15, scope: !2188)
!2190 = !DILocation(line: 185, column: 31, scope: !2188)
!2191 = !DILocation(line: 185, column: 34, scope: !2188)
!2192 = !DILocation(line: 185, column: 28, scope: !2188)
!2193 = !DILocation(line: 185, column: 43, scope: !2188)
!2194 = !DILocation(line: 185, column: 46, scope: !2195)
!2195 = !DILexicalBlockFile(scope: !2182, file: !969, discriminator: 2)
!2196 = !DILocation(line: 185, column: 49, scope: !2195)
!2197 = !DILocation(line: 185, column: 68, scope: !2195)
!2198 = !DILocation(line: 185, column: 71, scope: !2195)
!2199 = !DILocation(line: 185, column: 65, scope: !2195)
!2200 = !DILocation(line: 185, column: 5, scope: !2201)
!2201 = !DILexicalBlockFile(scope: !2182, file: !969, discriminator: 3)
!2202 = !DILocation(line: 186, column: 28, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2182, file: !969, line: 185, column: 84)
!2204 = !DILocation(line: 186, column: 31, scope: !2203)
!2205 = !DILocation(line: 186, column: 9, scope: !2203)
!2206 = !DILocation(line: 186, column: 12, scope: !2203)
!2207 = !DILocation(line: 186, column: 25, scope: !2203)
!2208 = !DILocation(line: 187, column: 31, scope: !2203)
!2209 = !DILocation(line: 187, column: 34, scope: !2203)
!2210 = !DILocation(line: 187, column: 9, scope: !2203)
!2211 = !DILocation(line: 187, column: 12, scope: !2203)
!2212 = !DILocation(line: 187, column: 28, scope: !2203)
!2213 = !DILocation(line: 185, column: 5, scope: !2214)
!2214 = !DILexicalBlockFile(scope: !2182, file: !969, discriminator: 4)
!2215 = distinct !{!2215, !2186}
!2216 = !DILocation(line: 189, column: 21, scope: !2182)
!2217 = !DILocation(line: 189, column: 24, scope: !2182)
!2218 = !DILocation(line: 190, column: 26, scope: !2182)
!2219 = !DILocation(line: 190, column: 29, scope: !2182)
!2220 = !DILocation(line: 190, column: 44, scope: !2182)
!2221 = !DILocation(line: 190, column: 47, scope: !2182)
!2222 = !DILocation(line: 190, column: 42, scope: !2182)
!2223 = !DILocation(line: 190, column: 61, scope: !2182)
!2224 = !DILocation(line: 190, column: 64, scope: !2182)
!2225 = !DILocation(line: 190, column: 82, scope: !2182)
!2226 = !DILocation(line: 190, column: 85, scope: !2182)
!2227 = !DILocation(line: 190, column: 80, scope: !2182)
!2228 = !DILocation(line: 190, column: 59, scope: !2182)
!2229 = !DILocation(line: 190, column: 23, scope: !2182)
!2230 = !DILocation(line: 189, column: 39, scope: !2182)
!2231 = !DILocation(line: 189, column: 5, scope: !2182)
!2232 = !DILocation(line: 189, column: 8, scope: !2182)
!2233 = !DILocation(line: 189, column: 19, scope: !2182)
!2234 = !DILocation(line: 191, column: 24, scope: !2182)
!2235 = !DILocation(line: 191, column: 27, scope: !2182)
!2236 = !DILocation(line: 191, column: 38, scope: !2182)
!2237 = !DILocation(line: 191, column: 5, scope: !2182)
!2238 = !DILocation(line: 191, column: 8, scope: !2182)
!2239 = !DILocation(line: 191, column: 21, scope: !2182)
!2240 = !DILocation(line: 192, column: 33, scope: !2182)
!2241 = !DILocation(line: 192, column: 36, scope: !2182)
!2242 = !DILocation(line: 192, column: 31, scope: !2182)
!2243 = !DILocation(line: 192, column: 27, scope: !2182)
!2244 = !DILocation(line: 192, column: 5, scope: !2182)
!2245 = !DILocation(line: 192, column: 8, scope: !2182)
!2246 = !DILocation(line: 192, column: 24, scope: !2182)
!2247 = !DILocation(line: 193, column: 1, scope: !2182)
!2248 = distinct !DISubprogram(name: "ff_ac3_compute_coupling_strategy", scope: !969, file: !969, line: 201, type: !2176, isLocal: false, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2249 = !DILocalVariable(name: "s", arg: 1, scope: !2248, file: !969, line: 201, type: !980)
!2250 = !DILocation(line: 201, column: 57, scope: !2248)
!2251 = !DILocalVariable(name: "blk", scope: !2248, file: !969, line: 203, type: !966)
!2252 = !DILocation(line: 203, column: 9, scope: !2248)
!2253 = !DILocalVariable(name: "ch", scope: !2248, file: !969, line: 203, type: !966)
!2254 = !DILocation(line: 203, column: 14, scope: !2248)
!2255 = !DILocalVariable(name: "got_cpl_snr", scope: !2248, file: !969, line: 204, type: !966)
!2256 = !DILocation(line: 204, column: 9, scope: !2248)
!2257 = !DILocalVariable(name: "num_cpl_blocks", scope: !2248, file: !969, line: 205, type: !966)
!2258 = !DILocation(line: 205, column: 9, scope: !2248)
!2259 = !DILocation(line: 209, column: 14, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2248, file: !969, line: 209, column: 5)
!2261 = !DILocation(line: 209, column: 10, scope: !2260)
!2262 = !DILocation(line: 209, column: 19, scope: !2263)
!2263 = !DILexicalBlockFile(scope: !2264, file: !969, discriminator: 1)
!2264 = distinct !DILexicalBlock(scope: !2260, file: !969, line: 209, column: 5)
!2265 = !DILocation(line: 209, column: 25, scope: !2263)
!2266 = !DILocation(line: 209, column: 28, scope: !2263)
!2267 = !DILocation(line: 209, column: 23, scope: !2263)
!2268 = !DILocation(line: 209, column: 5, scope: !2263)
!2269 = !DILocalVariable(name: "block", scope: !2270, file: !969, line: 210, type: !2271)
!2270 = distinct !DILexicalBlock(scope: !2264, file: !969, line: 209, column: 47)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64, align: 64)
!2272 = !DILocation(line: 210, column: 19, scope: !2270)
!2273 = !DILocation(line: 210, column: 38, scope: !2270)
!2274 = !DILocation(line: 210, column: 28, scope: !2270)
!2275 = !DILocation(line: 210, column: 31, scope: !2270)
!2276 = !DILocation(line: 211, column: 17, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2270, file: !969, line: 211, column: 9)
!2278 = !DILocation(line: 211, column: 14, scope: !2277)
!2279 = !DILocation(line: 211, column: 22, scope: !2280)
!2280 = !DILexicalBlockFile(scope: !2281, file: !969, discriminator: 1)
!2281 = distinct !DILexicalBlock(scope: !2277, file: !969, line: 211, column: 9)
!2282 = !DILocation(line: 211, column: 28, scope: !2280)
!2283 = !DILocation(line: 211, column: 31, scope: !2280)
!2284 = !DILocation(line: 211, column: 25, scope: !2280)
!2285 = !DILocation(line: 211, column: 9, scope: !2280)
!2286 = !DILocation(line: 212, column: 41, scope: !2281)
!2287 = !DILocation(line: 212, column: 44, scope: !2281)
!2288 = !DILocation(line: 212, column: 35, scope: !2281)
!2289 = !DILocation(line: 212, column: 13, scope: !2281)
!2290 = !DILocation(line: 212, column: 20, scope: !2281)
!2291 = !DILocation(line: 212, column: 39, scope: !2281)
!2292 = !DILocation(line: 211, column: 47, scope: !2293)
!2293 = !DILexicalBlockFile(scope: !2281, file: !969, discriminator: 2)
!2294 = !DILocation(line: 211, column: 9, scope: !2293)
!2295 = distinct !{!2295, !2296}
!2296 = !DILocation(line: 211, column: 9, scope: !2270)
!2297 = !DILocation(line: 213, column: 5, scope: !2270)
!2298 = !DILocation(line: 209, column: 43, scope: !2299)
!2299 = !DILexicalBlockFile(scope: !2264, file: !969, discriminator: 2)
!2300 = !DILocation(line: 209, column: 5, scope: !2299)
!2301 = distinct !{!2301, !2302}
!2302 = !DILocation(line: 209, column: 5, scope: !2248)
!2303 = !DILocation(line: 217, column: 17, scope: !2248)
!2304 = !DILocation(line: 218, column: 20, scope: !2248)
!2305 = !DILocation(line: 219, column: 14, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2248, file: !969, line: 219, column: 5)
!2307 = !DILocation(line: 219, column: 10, scope: !2306)
!2308 = !DILocation(line: 219, column: 19, scope: !2309)
!2309 = !DILexicalBlockFile(scope: !2310, file: !969, discriminator: 1)
!2310 = distinct !DILexicalBlock(scope: !2306, file: !969, line: 219, column: 5)
!2311 = !DILocation(line: 219, column: 25, scope: !2309)
!2312 = !DILocation(line: 219, column: 28, scope: !2309)
!2313 = !DILocation(line: 219, column: 23, scope: !2309)
!2314 = !DILocation(line: 219, column: 5, scope: !2309)
!2315 = !DILocalVariable(name: "block", scope: !2316, file: !969, line: 220, type: !2271)
!2316 = distinct !DILexicalBlock(scope: !2310, file: !969, line: 219, column: 47)
!2317 = !DILocation(line: 220, column: 19, scope: !2316)
!2318 = !DILocation(line: 220, column: 38, scope: !2316)
!2319 = !DILocation(line: 220, column: 28, scope: !2316)
!2320 = !DILocation(line: 220, column: 31, scope: !2316)
!2321 = !DILocation(line: 221, column: 9, scope: !2316)
!2322 = !DILocation(line: 221, column: 16, scope: !2316)
!2323 = !DILocation(line: 221, column: 33, scope: !2316)
!2324 = !DILocation(line: 222, column: 17, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2316, file: !969, line: 222, column: 9)
!2326 = !DILocation(line: 222, column: 14, scope: !2325)
!2327 = !DILocation(line: 222, column: 22, scope: !2328)
!2328 = !DILexicalBlockFile(scope: !2329, file: !969, discriminator: 1)
!2329 = distinct !DILexicalBlock(scope: !2325, file: !969, line: 222, column: 9)
!2330 = !DILocation(line: 222, column: 28, scope: !2328)
!2331 = !DILocation(line: 222, column: 31, scope: !2328)
!2332 = !DILocation(line: 222, column: 25, scope: !2328)
!2333 = !DILocation(line: 222, column: 9, scope: !2328)
!2334 = !DILocation(line: 223, column: 62, scope: !2329)
!2335 = !DILocation(line: 223, column: 40, scope: !2329)
!2336 = !DILocation(line: 223, column: 47, scope: !2329)
!2337 = !DILocation(line: 223, column: 13, scope: !2329)
!2338 = !DILocation(line: 223, column: 20, scope: !2329)
!2339 = !DILocation(line: 223, column: 37, scope: !2329)
!2340 = !DILocation(line: 222, column: 47, scope: !2341)
!2341 = !DILexicalBlockFile(scope: !2329, file: !969, discriminator: 2)
!2342 = !DILocation(line: 222, column: 9, scope: !2341)
!2343 = distinct !{!2343, !2344}
!2344 = !DILocation(line: 222, column: 9, scope: !2316)
!2345 = !DILocation(line: 224, column: 29, scope: !2316)
!2346 = !DILocation(line: 224, column: 36, scope: !2316)
!2347 = !DILocation(line: 224, column: 53, scope: !2316)
!2348 = !DILocation(line: 224, column: 9, scope: !2316)
!2349 = !DILocation(line: 224, column: 16, scope: !2316)
!2350 = !DILocation(line: 224, column: 27, scope: !2316)
!2351 = !DILocation(line: 225, column: 27, scope: !2316)
!2352 = !DILocation(line: 225, column: 34, scope: !2316)
!2353 = !DILocation(line: 225, column: 24, scope: !2316)
!2354 = !DILocation(line: 226, column: 14, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2316, file: !969, line: 226, column: 13)
!2356 = !DILocation(line: 226, column: 21, scope: !2355)
!2357 = !DILocation(line: 226, column: 13, scope: !2316)
!2358 = !DILocation(line: 227, column: 13, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2355, file: !969, line: 226, column: 33)
!2360 = !DILocation(line: 227, column: 20, scope: !2359)
!2361 = !DILocation(line: 227, column: 37, scope: !2359)
!2362 = !DILocation(line: 228, column: 21, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !969, line: 228, column: 13)
!2364 = !DILocation(line: 228, column: 18, scope: !2363)
!2365 = !DILocation(line: 228, column: 26, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !2367, file: !969, discriminator: 1)
!2367 = distinct !DILexicalBlock(scope: !2363, file: !969, line: 228, column: 13)
!2368 = !DILocation(line: 228, column: 32, scope: !2366)
!2369 = !DILocation(line: 228, column: 35, scope: !2366)
!2370 = !DILocation(line: 228, column: 29, scope: !2366)
!2371 = !DILocation(line: 228, column: 13, scope: !2366)
!2372 = !DILocation(line: 229, column: 39, scope: !2367)
!2373 = !DILocation(line: 229, column: 17, scope: !2367)
!2374 = !DILocation(line: 229, column: 24, scope: !2367)
!2375 = !DILocation(line: 229, column: 43, scope: !2367)
!2376 = !DILocation(line: 228, column: 51, scope: !2377)
!2377 = !DILexicalBlockFile(scope: !2367, file: !969, discriminator: 2)
!2378 = !DILocation(line: 228, column: 13, scope: !2377)
!2379 = distinct !{!2379, !2380}
!2380 = !DILocation(line: 228, column: 13, scope: !2359)
!2381 = !DILocation(line: 230, column: 9, scope: !2359)
!2382 = !DILocation(line: 232, column: 36, scope: !2316)
!2383 = !DILocation(line: 232, column: 35, scope: !2316)
!2384 = !DILocation(line: 232, column: 9, scope: !2316)
!2385 = !DILocation(line: 232, column: 16, scope: !2316)
!2386 = !DILocation(line: 232, column: 33, scope: !2316)
!2387 = !DILocation(line: 233, column: 13, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2316, file: !969, line: 233, column: 13)
!2389 = !DILocation(line: 233, column: 13, scope: !2316)
!2390 = !DILocation(line: 234, column: 21, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !969, line: 234, column: 13)
!2392 = distinct !DILexicalBlock(scope: !2388, file: !969, line: 233, column: 18)
!2393 = !DILocation(line: 234, column: 18, scope: !2391)
!2394 = !DILocation(line: 234, column: 26, scope: !2395)
!2395 = !DILexicalBlockFile(scope: !2396, file: !969, discriminator: 1)
!2396 = distinct !DILexicalBlock(scope: !2391, file: !969, line: 234, column: 13)
!2397 = !DILocation(line: 234, column: 32, scope: !2395)
!2398 = !DILocation(line: 234, column: 35, scope: !2395)
!2399 = !DILocation(line: 234, column: 29, scope: !2395)
!2400 = !DILocation(line: 234, column: 13, scope: !2395)
!2401 = !DILocation(line: 235, column: 43, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !969, line: 235, column: 21)
!2403 = distinct !DILexicalBlock(scope: !2396, file: !969, line: 234, column: 55)
!2404 = !DILocation(line: 235, column: 21, scope: !2402)
!2405 = !DILocation(line: 235, column: 28, scope: !2402)
!2406 = !DILocation(line: 235, column: 82, scope: !2402)
!2407 = !DILocation(line: 235, column: 50, scope: !2402)
!2408 = !DILocation(line: 235, column: 60, scope: !2402)
!2409 = !DILocation(line: 235, column: 63, scope: !2402)
!2410 = !DILocation(line: 235, column: 53, scope: !2402)
!2411 = !DILocation(line: 235, column: 67, scope: !2402)
!2412 = !DILocation(line: 235, column: 47, scope: !2402)
!2413 = !DILocation(line: 235, column: 21, scope: !2403)
!2414 = !DILocation(line: 236, column: 21, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2402, file: !969, line: 235, column: 87)
!2416 = !DILocation(line: 236, column: 28, scope: !2415)
!2417 = !DILocation(line: 236, column: 45, scope: !2415)
!2418 = !DILocation(line: 237, column: 21, scope: !2415)
!2419 = !DILocation(line: 239, column: 13, scope: !2403)
!2420 = !DILocation(line: 234, column: 51, scope: !2421)
!2421 = !DILexicalBlockFile(scope: !2396, file: !969, discriminator: 2)
!2422 = !DILocation(line: 234, column: 13, scope: !2421)
!2423 = distinct !{!2423, !2424}
!2424 = !DILocation(line: 234, column: 13, scope: !2392)
!2425 = !DILocation(line: 240, column: 9, scope: !2392)
!2426 = !DILocation(line: 241, column: 31, scope: !2316)
!2427 = !DILocation(line: 241, column: 38, scope: !2316)
!2428 = !DILocation(line: 241, column: 9, scope: !2316)
!2429 = !DILocation(line: 241, column: 16, scope: !2316)
!2430 = !DILocation(line: 241, column: 29, scope: !2316)
!2431 = !DILocation(line: 243, column: 14, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2316, file: !969, line: 243, column: 13)
!2433 = !DILocation(line: 243, column: 18, scope: !2432)
!2434 = !DILocation(line: 243, column: 22, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !2432, file: !969, discriminator: 1)
!2436 = !DILocation(line: 243, column: 29, scope: !2435)
!2437 = !DILocation(line: 243, column: 40, scope: !2435)
!2438 = !DILocation(line: 243, column: 44, scope: !2439)
!2439 = !DILexicalBlockFile(scope: !2432, file: !969, discriminator: 2)
!2440 = !DILocation(line: 243, column: 13, scope: !2439)
!2441 = !DILocation(line: 244, column: 13, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2432, file: !969, line: 243, column: 58)
!2443 = !DILocation(line: 244, column: 20, scope: !2442)
!2444 = !DILocation(line: 244, column: 36, scope: !2442)
!2445 = !DILocation(line: 245, column: 17, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2442, file: !969, line: 245, column: 17)
!2447 = !DILocation(line: 245, column: 24, scope: !2446)
!2448 = !DILocation(line: 245, column: 17, scope: !2442)
!2449 = !DILocation(line: 246, column: 29, scope: !2446)
!2450 = !DILocation(line: 246, column: 17, scope: !2446)
!2451 = !DILocation(line: 247, column: 9, scope: !2442)
!2452 = !DILocation(line: 248, column: 13, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2432, file: !969, line: 247, column: 16)
!2454 = !DILocation(line: 248, column: 20, scope: !2453)
!2455 = !DILocation(line: 248, column: 36, scope: !2453)
!2456 = !DILocation(line: 250, column: 5, scope: !2316)
!2457 = !DILocation(line: 219, column: 43, scope: !2458)
!2458 = !DILexicalBlockFile(scope: !2310, file: !969, discriminator: 2)
!2459 = !DILocation(line: 219, column: 5, scope: !2458)
!2460 = distinct !{!2460, !2461}
!2461 = !DILocation(line: 219, column: 5, scope: !2248)
!2462 = !DILocation(line: 251, column: 10, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2248, file: !969, line: 251, column: 9)
!2464 = !DILocation(line: 251, column: 9, scope: !2248)
!2465 = !DILocation(line: 252, column: 9, scope: !2463)
!2466 = !DILocation(line: 252, column: 12, scope: !2463)
!2467 = !DILocation(line: 252, column: 19, scope: !2463)
!2468 = !DILocation(line: 255, column: 14, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2248, file: !969, line: 255, column: 5)
!2470 = !DILocation(line: 255, column: 10, scope: !2469)
!2471 = !DILocation(line: 255, column: 19, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !2473, file: !969, discriminator: 1)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !969, line: 255, column: 5)
!2474 = !DILocation(line: 255, column: 25, scope: !2472)
!2475 = !DILocation(line: 255, column: 28, scope: !2472)
!2476 = !DILocation(line: 255, column: 23, scope: !2472)
!2477 = !DILocation(line: 255, column: 5, scope: !2472)
!2478 = !DILocalVariable(name: "block", scope: !2479, file: !969, line: 256, type: !2271)
!2479 = distinct !DILexicalBlock(scope: !2473, file: !969, line: 255, column: 47)
!2480 = !DILocation(line: 256, column: 19, scope: !2479)
!2481 = !DILocation(line: 256, column: 38, scope: !2479)
!2482 = !DILocation(line: 256, column: 28, scope: !2479)
!2483 = !DILocation(line: 256, column: 31, scope: !2479)
!2484 = !DILocation(line: 257, column: 17, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2479, file: !969, line: 257, column: 9)
!2486 = !DILocation(line: 257, column: 14, scope: !2485)
!2487 = !DILocation(line: 257, column: 22, scope: !2488)
!2488 = !DILexicalBlockFile(scope: !2489, file: !969, discriminator: 1)
!2489 = distinct !DILexicalBlock(scope: !2485, file: !969, line: 257, column: 9)
!2490 = !DILocation(line: 257, column: 28, scope: !2488)
!2491 = !DILocation(line: 257, column: 31, scope: !2488)
!2492 = !DILocation(line: 257, column: 25, scope: !2488)
!2493 = !DILocation(line: 257, column: 9, scope: !2488)
!2494 = !DILocation(line: 258, column: 39, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2496, file: !969, line: 258, column: 17)
!2496 = distinct !DILexicalBlock(scope: !2489, file: !969, line: 257, column: 51)
!2497 = !DILocation(line: 258, column: 17, scope: !2495)
!2498 = !DILocation(line: 258, column: 24, scope: !2495)
!2499 = !DILocation(line: 258, column: 17, scope: !2496)
!2500 = !DILocation(line: 259, column: 39, scope: !2495)
!2501 = !DILocation(line: 259, column: 42, scope: !2495)
!2502 = !DILocation(line: 259, column: 33, scope: !2495)
!2503 = !DILocation(line: 259, column: 17, scope: !2495)
!2504 = !DILocation(line: 259, column: 24, scope: !2495)
!2505 = !DILocation(line: 259, column: 37, scope: !2495)
!2506 = !DILocation(line: 261, column: 39, scope: !2495)
!2507 = !DILocation(line: 261, column: 42, scope: !2495)
!2508 = !DILocation(line: 261, column: 57, scope: !2495)
!2509 = !DILocation(line: 261, column: 61, scope: !2495)
!2510 = !DILocation(line: 261, column: 33, scope: !2495)
!2511 = !DILocation(line: 261, column: 17, scope: !2495)
!2512 = !DILocation(line: 261, column: 24, scope: !2495)
!2513 = !DILocation(line: 261, column: 37, scope: !2495)
!2514 = !DILocation(line: 262, column: 9, scope: !2496)
!2515 = !DILocation(line: 257, column: 47, scope: !2516)
!2516 = !DILexicalBlockFile(scope: !2489, file: !969, discriminator: 2)
!2517 = !DILocation(line: 257, column: 9, scope: !2516)
!2518 = distinct !{!2518, !2519}
!2519 = !DILocation(line: 257, column: 9, scope: !2479)
!2520 = !DILocation(line: 263, column: 5, scope: !2479)
!2521 = !DILocation(line: 255, column: 43, scope: !2522)
!2522 = !DILexicalBlockFile(scope: !2473, file: !969, discriminator: 2)
!2523 = !DILocation(line: 255, column: 5, scope: !2522)
!2524 = distinct !{!2524, !2525}
!2525 = !DILocation(line: 255, column: 5, scope: !2248)
!2526 = !DILocation(line: 264, column: 1, scope: !2248)
!2527 = distinct !DISubprogram(name: "ff_ac3_apply_rematrixing", scope: !969, file: !969, line: 272, type: !2176, isLocal: false, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2528 = !DILocalVariable(name: "s", arg: 1, scope: !2527, file: !969, line: 272, type: !980)
!2529 = !DILocation(line: 272, column: 49, scope: !2527)
!2530 = !DILocalVariable(name: "nb_coefs", scope: !2527, file: !969, line: 274, type: !966)
!2531 = !DILocation(line: 274, column: 9, scope: !2527)
!2532 = !DILocalVariable(name: "blk", scope: !2527, file: !969, line: 275, type: !966)
!2533 = !DILocation(line: 275, column: 9, scope: !2527)
!2534 = !DILocalVariable(name: "bnd", scope: !2527, file: !969, line: 275, type: !966)
!2535 = !DILocation(line: 275, column: 14, scope: !2527)
!2536 = !DILocalVariable(name: "i", scope: !2527, file: !969, line: 275, type: !966)
!2537 = !DILocation(line: 275, column: 19, scope: !2527)
!2538 = !DILocalVariable(name: "start", scope: !2527, file: !969, line: 276, type: !966)
!2539 = !DILocation(line: 276, column: 9, scope: !2527)
!2540 = !DILocalVariable(name: "end", scope: !2527, file: !969, line: 276, type: !966)
!2541 = !DILocation(line: 276, column: 16, scope: !2527)
!2542 = !DILocalVariable(name: "flags", scope: !2527, file: !969, line: 277, type: !1179)
!2543 = !DILocation(line: 277, column: 14, scope: !2527)
!2544 = !DILocation(line: 279, column: 10, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2527, file: !969, line: 279, column: 9)
!2546 = !DILocation(line: 279, column: 13, scope: !2545)
!2547 = !DILocation(line: 279, column: 9, scope: !2527)
!2548 = !DILocation(line: 280, column: 9, scope: !2545)
!2549 = !DILocation(line: 282, column: 14, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2527, file: !969, line: 282, column: 5)
!2551 = !DILocation(line: 282, column: 10, scope: !2550)
!2552 = !DILocation(line: 282, column: 19, scope: !2553)
!2553 = !DILexicalBlockFile(scope: !2554, file: !969, discriminator: 1)
!2554 = distinct !DILexicalBlock(scope: !2550, file: !969, line: 282, column: 5)
!2555 = !DILocation(line: 282, column: 25, scope: !2553)
!2556 = !DILocation(line: 282, column: 28, scope: !2553)
!2557 = !DILocation(line: 282, column: 23, scope: !2553)
!2558 = !DILocation(line: 282, column: 5, scope: !2553)
!2559 = !DILocalVariable(name: "block", scope: !2560, file: !969, line: 283, type: !2271)
!2560 = distinct !DILexicalBlock(scope: !2554, file: !969, line: 282, column: 47)
!2561 = !DILocation(line: 283, column: 19, scope: !2560)
!2562 = !DILocation(line: 283, column: 38, scope: !2560)
!2563 = !DILocation(line: 283, column: 28, scope: !2560)
!2564 = !DILocation(line: 283, column: 31, scope: !2560)
!2565 = !DILocation(line: 284, column: 13, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2560, file: !969, line: 284, column: 13)
!2567 = !DILocation(line: 284, column: 20, scope: !2566)
!2568 = !DILocation(line: 284, column: 13, scope: !2560)
!2569 = !DILocation(line: 285, column: 21, scope: !2566)
!2570 = !DILocation(line: 285, column: 28, scope: !2566)
!2571 = !DILocation(line: 285, column: 19, scope: !2566)
!2572 = !DILocation(line: 285, column: 13, scope: !2566)
!2573 = !DILocation(line: 286, column: 22, scope: !2560)
!2574 = !DILocation(line: 286, column: 29, scope: !2560)
!2575 = !DILocation(line: 286, column: 45, scope: !2560)
!2576 = !DILocation(line: 286, column: 52, scope: !2560)
!2577 = !DILocation(line: 286, column: 42, scope: !2560)
!2578 = !DILocation(line: 286, column: 21, scope: !2560)
!2579 = !DILocation(line: 286, column: 68, scope: !2580)
!2580 = !DILexicalBlockFile(scope: !2560, file: !969, discriminator: 1)
!2581 = !DILocation(line: 286, column: 75, scope: !2580)
!2582 = !DILocation(line: 286, column: 21, scope: !2580)
!2583 = !DILocation(line: 286, column: 91, scope: !2584)
!2584 = !DILexicalBlockFile(scope: !2560, file: !969, discriminator: 2)
!2585 = !DILocation(line: 286, column: 98, scope: !2584)
!2586 = !DILocation(line: 286, column: 21, scope: !2584)
!2587 = !DILocation(line: 286, column: 21, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !2560, file: !969, discriminator: 3)
!2589 = !DILocation(line: 286, column: 18, scope: !2588)
!2590 = !DILocation(line: 287, column: 18, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2560, file: !969, line: 287, column: 9)
!2592 = !DILocation(line: 287, column: 14, scope: !2591)
!2593 = !DILocation(line: 287, column: 23, scope: !2594)
!2594 = !DILexicalBlockFile(scope: !2595, file: !969, discriminator: 1)
!2595 = distinct !DILexicalBlock(scope: !2591, file: !969, line: 287, column: 9)
!2596 = !DILocation(line: 287, column: 29, scope: !2594)
!2597 = !DILocation(line: 287, column: 36, scope: !2594)
!2598 = !DILocation(line: 287, column: 27, scope: !2594)
!2599 = !DILocation(line: 287, column: 9, scope: !2594)
!2600 = !DILocation(line: 288, column: 23, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2602, file: !969, line: 288, column: 17)
!2602 = distinct !DILexicalBlock(scope: !2595, file: !969, line: 287, column: 66)
!2603 = !DILocation(line: 288, column: 17, scope: !2601)
!2604 = !DILocation(line: 288, column: 17, scope: !2602)
!2605 = !DILocation(line: 289, column: 50, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2601, file: !969, line: 288, column: 29)
!2607 = !DILocation(line: 289, column: 25, scope: !2606)
!2608 = !DILocation(line: 289, column: 23, scope: !2606)
!2609 = !DILocation(line: 290, column: 25, scope: !2606)
!2610 = !DILocation(line: 290, column: 63, scope: !2606)
!2611 = !DILocation(line: 290, column: 66, scope: !2606)
!2612 = !DILocation(line: 290, column: 38, scope: !2606)
!2613 = !DILocation(line: 290, column: 37, scope: !2606)
!2614 = !DILocation(line: 290, column: 35, scope: !2606)
!2615 = !DILocation(line: 290, column: 24, scope: !2606)
!2616 = !DILocation(line: 290, column: 99, scope: !2617)
!2617 = !DILexicalBlockFile(scope: !2606, file: !969, discriminator: 1)
!2618 = !DILocation(line: 290, column: 102, scope: !2617)
!2619 = !DILocation(line: 290, column: 74, scope: !2617)
!2620 = !DILocation(line: 290, column: 73, scope: !2617)
!2621 = !DILocation(line: 290, column: 24, scope: !2617)
!2622 = !DILocation(line: 290, column: 110, scope: !2623)
!2623 = !DILexicalBlockFile(scope: !2606, file: !969, discriminator: 2)
!2624 = !DILocation(line: 290, column: 24, scope: !2623)
!2625 = !DILocation(line: 290, column: 24, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2606, file: !969, discriminator: 3)
!2627 = !DILocation(line: 290, column: 21, scope: !2626)
!2628 = !DILocation(line: 291, column: 26, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2606, file: !969, line: 291, column: 17)
!2630 = !DILocation(line: 291, column: 24, scope: !2629)
!2631 = !DILocation(line: 291, column: 22, scope: !2629)
!2632 = !DILocation(line: 291, column: 33, scope: !2633)
!2633 = !DILexicalBlockFile(scope: !2634, file: !969, discriminator: 1)
!2634 = distinct !DILexicalBlock(scope: !2629, file: !969, line: 291, column: 17)
!2635 = !DILocation(line: 291, column: 37, scope: !2633)
!2636 = !DILocation(line: 291, column: 35, scope: !2633)
!2637 = !DILocation(line: 291, column: 17, scope: !2633)
!2638 = !DILocalVariable(name: "lt", scope: !2639, file: !969, line: 292, type: !965)
!2639 = distinct !DILexicalBlock(scope: !2634, file: !969, line: 291, column: 47)
!2640 = !DILocation(line: 292, column: 29, scope: !2639)
!2641 = !DILocation(line: 292, column: 55, scope: !2639)
!2642 = !DILocation(line: 292, column: 34, scope: !2639)
!2643 = !DILocation(line: 292, column: 41, scope: !2639)
!2644 = !DILocalVariable(name: "rt", scope: !2639, file: !969, line: 293, type: !965)
!2645 = !DILocation(line: 293, column: 29, scope: !2639)
!2646 = !DILocation(line: 293, column: 55, scope: !2639)
!2647 = !DILocation(line: 293, column: 34, scope: !2639)
!2648 = !DILocation(line: 293, column: 41, scope: !2639)
!2649 = !DILocation(line: 294, column: 48, scope: !2639)
!2650 = !DILocation(line: 294, column: 53, scope: !2639)
!2651 = !DILocation(line: 294, column: 51, scope: !2639)
!2652 = !DILocation(line: 294, column: 57, scope: !2639)
!2653 = !DILocation(line: 294, column: 42, scope: !2639)
!2654 = !DILocation(line: 294, column: 21, scope: !2639)
!2655 = !DILocation(line: 294, column: 28, scope: !2639)
!2656 = !DILocation(line: 294, column: 45, scope: !2639)
!2657 = !DILocation(line: 295, column: 48, scope: !2639)
!2658 = !DILocation(line: 295, column: 53, scope: !2639)
!2659 = !DILocation(line: 295, column: 51, scope: !2639)
!2660 = !DILocation(line: 295, column: 57, scope: !2639)
!2661 = !DILocation(line: 295, column: 42, scope: !2639)
!2662 = !DILocation(line: 295, column: 21, scope: !2639)
!2663 = !DILocation(line: 295, column: 28, scope: !2639)
!2664 = !DILocation(line: 295, column: 45, scope: !2639)
!2665 = !DILocation(line: 296, column: 17, scope: !2639)
!2666 = !DILocation(line: 291, column: 43, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !2634, file: !969, discriminator: 2)
!2668 = !DILocation(line: 291, column: 17, scope: !2667)
!2669 = distinct !{!2669, !2670}
!2670 = !DILocation(line: 291, column: 17, scope: !2606)
!2671 = !DILocation(line: 297, column: 13, scope: !2606)
!2672 = !DILocation(line: 298, column: 9, scope: !2602)
!2673 = !DILocation(line: 287, column: 62, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !2595, file: !969, discriminator: 2)
!2675 = !DILocation(line: 287, column: 9, scope: !2674)
!2676 = distinct !{!2676, !2677}
!2677 = !DILocation(line: 287, column: 9, scope: !2560)
!2678 = !DILocation(line: 299, column: 5, scope: !2560)
!2679 = !DILocation(line: 282, column: 43, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2554, file: !969, discriminator: 2)
!2681 = !DILocation(line: 282, column: 5, scope: !2680)
!2682 = distinct !{!2682, !2683}
!2683 = !DILocation(line: 282, column: 5, scope: !2527)
!2684 = !DILocation(line: 300, column: 1, scope: !2527)
!2685 = distinct !DISubprogram(name: "ff_ac3_group_exponents", scope: !969, file: !969, line: 579, type: !2176, isLocal: false, isDefinition: true, scopeLine: 580, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2686 = !DILocalVariable(name: "s", arg: 1, scope: !2685, file: !969, line: 579, type: !980)
!2687 = !DILocation(line: 579, column: 47, scope: !2685)
!2688 = !DILocalVariable(name: "blk", scope: !2685, file: !969, line: 581, type: !966)
!2689 = !DILocation(line: 581, column: 9, scope: !2685)
!2690 = !DILocalVariable(name: "ch", scope: !2685, file: !969, line: 581, type: !966)
!2691 = !DILocation(line: 581, column: 14, scope: !2685)
!2692 = !DILocalVariable(name: "i", scope: !2685, file: !969, line: 581, type: !966)
!2693 = !DILocation(line: 581, column: 18, scope: !2685)
!2694 = !DILocalVariable(name: "cpl", scope: !2685, file: !969, line: 581, type: !966)
!2695 = !DILocation(line: 581, column: 21, scope: !2685)
!2696 = !DILocalVariable(name: "group_size", scope: !2685, file: !969, line: 582, type: !966)
!2697 = !DILocation(line: 582, column: 9, scope: !2685)
!2698 = !DILocalVariable(name: "nb_groups", scope: !2685, file: !969, line: 582, type: !966)
!2699 = !DILocation(line: 582, column: 21, scope: !2685)
!2700 = !DILocalVariable(name: "p", scope: !2685, file: !969, line: 583, type: !1179)
!2701 = !DILocation(line: 583, column: 14, scope: !2685)
!2702 = !DILocalVariable(name: "delta0", scope: !2685, file: !969, line: 584, type: !966)
!2703 = !DILocation(line: 584, column: 9, scope: !2685)
!2704 = !DILocalVariable(name: "delta1", scope: !2685, file: !969, line: 584, type: !966)
!2705 = !DILocation(line: 584, column: 17, scope: !2685)
!2706 = !DILocalVariable(name: "delta2", scope: !2685, file: !969, line: 584, type: !966)
!2707 = !DILocation(line: 584, column: 25, scope: !2685)
!2708 = !DILocalVariable(name: "exp0", scope: !2685, file: !969, line: 585, type: !966)
!2709 = !DILocation(line: 585, column: 9, scope: !2685)
!2710 = !DILocalVariable(name: "exp1", scope: !2685, file: !969, line: 585, type: !966)
!2711 = !DILocation(line: 585, column: 15, scope: !2685)
!2712 = !DILocation(line: 587, column: 14, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2685, file: !969, line: 587, column: 5)
!2714 = !DILocation(line: 587, column: 10, scope: !2713)
!2715 = !DILocation(line: 587, column: 19, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2717, file: !969, discriminator: 1)
!2717 = distinct !DILexicalBlock(scope: !2713, file: !969, line: 587, column: 5)
!2718 = !DILocation(line: 587, column: 25, scope: !2716)
!2719 = !DILocation(line: 587, column: 28, scope: !2716)
!2720 = !DILocation(line: 587, column: 23, scope: !2716)
!2721 = !DILocation(line: 587, column: 5, scope: !2716)
!2722 = !DILocalVariable(name: "block", scope: !2723, file: !969, line: 588, type: !2271)
!2723 = distinct !DILexicalBlock(scope: !2717, file: !969, line: 587, column: 47)
!2724 = !DILocation(line: 588, column: 19, scope: !2723)
!2725 = !DILocation(line: 588, column: 38, scope: !2723)
!2726 = !DILocation(line: 588, column: 28, scope: !2723)
!2727 = !DILocation(line: 588, column: 31, scope: !2723)
!2728 = !DILocation(line: 589, column: 20, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2723, file: !969, line: 589, column: 9)
!2730 = !DILocation(line: 589, column: 27, scope: !2729)
!2731 = !DILocation(line: 589, column: 19, scope: !2729)
!2732 = !DILocation(line: 589, column: 17, scope: !2729)
!2733 = !DILocation(line: 589, column: 14, scope: !2729)
!2734 = !DILocation(line: 589, column: 39, scope: !2735)
!2735 = !DILexicalBlockFile(scope: !2736, file: !969, discriminator: 1)
!2736 = distinct !DILexicalBlock(scope: !2729, file: !969, line: 589, column: 9)
!2737 = !DILocation(line: 589, column: 45, scope: !2735)
!2738 = !DILocation(line: 589, column: 48, scope: !2735)
!2739 = !DILocation(line: 589, column: 42, scope: !2735)
!2740 = !DILocation(line: 589, column: 9, scope: !2735)
!2741 = !DILocalVariable(name: "exp_strategy", scope: !2742, file: !969, line: 590, type: !966)
!2742 = distinct !DILexicalBlock(scope: !2736, file: !969, line: 589, column: 64)
!2743 = !DILocation(line: 590, column: 17, scope: !2742)
!2744 = !DILocation(line: 590, column: 52, scope: !2742)
!2745 = !DILocation(line: 590, column: 32, scope: !2742)
!2746 = !DILocation(line: 590, column: 48, scope: !2742)
!2747 = !DILocation(line: 590, column: 35, scope: !2742)
!2748 = !DILocation(line: 591, column: 17, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2742, file: !969, line: 591, column: 17)
!2750 = !DILocation(line: 591, column: 30, scope: !2749)
!2751 = !DILocation(line: 591, column: 17, scope: !2742)
!2752 = !DILocation(line: 592, column: 17, scope: !2749)
!2753 = !DILocation(line: 593, column: 20, scope: !2742)
!2754 = !DILocation(line: 593, column: 23, scope: !2742)
!2755 = !DILocation(line: 593, column: 17, scope: !2742)
!2756 = !DILocation(line: 594, column: 26, scope: !2742)
!2757 = !DILocation(line: 594, column: 42, scope: !2742)
!2758 = !DILocation(line: 594, column: 55, scope: !2742)
!2759 = !DILocation(line: 594, column: 39, scope: !2742)
!2760 = !DILocation(line: 594, column: 24, scope: !2742)
!2761 = !DILocation(line: 595, column: 81, scope: !2742)
!2762 = !DILocation(line: 595, column: 65, scope: !2742)
!2763 = !DILocation(line: 595, column: 72, scope: !2742)
!2764 = !DILocation(line: 595, column: 99, scope: !2742)
!2765 = !DILocation(line: 595, column: 85, scope: !2742)
!2766 = !DILocation(line: 595, column: 88, scope: !2742)
!2767 = !DILocation(line: 595, column: 84, scope: !2742)
!2768 = !DILocation(line: 595, column: 25, scope: !2742)
!2769 = !DILocation(line: 595, column: 49, scope: !2742)
!2770 = !DILocation(line: 595, column: 61, scope: !2742)
!2771 = !DILocation(line: 595, column: 44, scope: !2742)
!2772 = !DILocation(line: 595, column: 23, scope: !2742)
!2773 = !DILocation(line: 596, column: 28, scope: !2742)
!2774 = !DILocation(line: 596, column: 17, scope: !2742)
!2775 = !DILocation(line: 596, column: 24, scope: !2742)
!2776 = !DILocation(line: 596, column: 48, scope: !2742)
!2777 = !DILocation(line: 596, column: 34, scope: !2742)
!2778 = !DILocation(line: 596, column: 37, scope: !2742)
!2779 = !DILocation(line: 596, column: 32, scope: !2742)
!2780 = !DILocation(line: 596, column: 54, scope: !2742)
!2781 = !DILocation(line: 596, column: 52, scope: !2742)
!2782 = !DILocation(line: 596, column: 15, scope: !2742)
!2783 = !DILocation(line: 599, column: 22, scope: !2742)
!2784 = !DILocation(line: 599, column: 20, scope: !2742)
!2785 = !DILocation(line: 599, column: 18, scope: !2742)
!2786 = !DILocation(line: 600, column: 41, scope: !2742)
!2787 = !DILocation(line: 600, column: 32, scope: !2742)
!2788 = !DILocation(line: 600, column: 13, scope: !2742)
!2789 = !DILocation(line: 600, column: 20, scope: !2742)
!2790 = !DILocation(line: 600, column: 39, scope: !2742)
!2791 = !DILocation(line: 603, column: 20, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2742, file: !969, line: 603, column: 13)
!2793 = !DILocation(line: 603, column: 18, scope: !2792)
!2794 = !DILocation(line: 603, column: 25, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !2796, file: !969, discriminator: 1)
!2796 = distinct !DILexicalBlock(scope: !2792, file: !969, line: 603, column: 13)
!2797 = !DILocation(line: 603, column: 30, scope: !2795)
!2798 = !DILocation(line: 603, column: 27, scope: !2795)
!2799 = !DILocation(line: 603, column: 13, scope: !2795)
!2800 = !DILocation(line: 605, column: 24, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2796, file: !969, line: 603, column: 46)
!2802 = !DILocation(line: 605, column: 22, scope: !2801)
!2803 = !DILocation(line: 606, column: 24, scope: !2801)
!2804 = !DILocation(line: 606, column: 22, scope: !2801)
!2805 = !DILocation(line: 607, column: 22, scope: !2801)
!2806 = !DILocation(line: 607, column: 19, scope: !2801)
!2807 = !DILocation(line: 608, column: 26, scope: !2801)
!2808 = !DILocation(line: 608, column: 33, scope: !2801)
!2809 = !DILocation(line: 608, column: 31, scope: !2801)
!2810 = !DILocation(line: 608, column: 38, scope: !2801)
!2811 = !DILocation(line: 608, column: 24, scope: !2801)
!2812 = !DILocation(line: 611, column: 24, scope: !2801)
!2813 = !DILocation(line: 611, column: 22, scope: !2801)
!2814 = !DILocation(line: 612, column: 24, scope: !2801)
!2815 = !DILocation(line: 612, column: 22, scope: !2801)
!2816 = !DILocation(line: 613, column: 22, scope: !2801)
!2817 = !DILocation(line: 613, column: 19, scope: !2801)
!2818 = !DILocation(line: 614, column: 26, scope: !2801)
!2819 = !DILocation(line: 614, column: 33, scope: !2801)
!2820 = !DILocation(line: 614, column: 31, scope: !2801)
!2821 = !DILocation(line: 614, column: 38, scope: !2801)
!2822 = !DILocation(line: 614, column: 24, scope: !2801)
!2823 = !DILocation(line: 617, column: 24, scope: !2801)
!2824 = !DILocation(line: 617, column: 22, scope: !2801)
!2825 = !DILocation(line: 618, column: 24, scope: !2801)
!2826 = !DILocation(line: 618, column: 22, scope: !2801)
!2827 = !DILocation(line: 619, column: 22, scope: !2801)
!2828 = !DILocation(line: 619, column: 19, scope: !2801)
!2829 = !DILocation(line: 620, column: 26, scope: !2801)
!2830 = !DILocation(line: 620, column: 33, scope: !2801)
!2831 = !DILocation(line: 620, column: 31, scope: !2801)
!2832 = !DILocation(line: 620, column: 38, scope: !2801)
!2833 = !DILocation(line: 620, column: 24, scope: !2801)
!2834 = !DILocation(line: 623, column: 47, scope: !2801)
!2835 = !DILocation(line: 623, column: 54, scope: !2801)
!2836 = !DILocation(line: 623, column: 60, scope: !2801)
!2837 = !DILocation(line: 623, column: 58, scope: !2801)
!2838 = !DILocation(line: 623, column: 68, scope: !2801)
!2839 = !DILocation(line: 623, column: 75, scope: !2801)
!2840 = !DILocation(line: 623, column: 73, scope: !2801)
!2841 = !DILocation(line: 623, column: 45, scope: !2801)
!2842 = !DILocation(line: 623, column: 40, scope: !2801)
!2843 = !DILocation(line: 623, column: 17, scope: !2801)
!2844 = !DILocation(line: 623, column: 36, scope: !2801)
!2845 = !DILocation(line: 623, column: 24, scope: !2801)
!2846 = !DILocation(line: 623, column: 43, scope: !2801)
!2847 = !DILocation(line: 624, column: 13, scope: !2801)
!2848 = !DILocation(line: 603, column: 42, scope: !2849)
!2849 = !DILexicalBlockFile(scope: !2796, file: !969, discriminator: 2)
!2850 = !DILocation(line: 603, column: 13, scope: !2849)
!2851 = distinct !{!2851, !2852}
!2852 = !DILocation(line: 603, column: 13, scope: !2742)
!2853 = !DILocation(line: 625, column: 9, scope: !2742)
!2854 = !DILocation(line: 589, column: 60, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !2736, file: !969, discriminator: 2)
!2856 = !DILocation(line: 589, column: 9, scope: !2855)
!2857 = distinct !{!2857, !2858}
!2858 = !DILocation(line: 589, column: 9, scope: !2723)
!2859 = !DILocation(line: 626, column: 5, scope: !2723)
!2860 = !DILocation(line: 587, column: 43, scope: !2861)
!2861 = !DILexicalBlockFile(scope: !2717, file: !969, discriminator: 2)
!2862 = !DILocation(line: 587, column: 5, scope: !2861)
!2863 = distinct !{!2863, !2864}
!2864 = !DILocation(line: 587, column: 5, scope: !2685)
!2865 = !DILocation(line: 627, column: 1, scope: !2685)
!2866 = distinct !DISubprogram(name: "ff_ac3_process_exponents", scope: !969, file: !969, line: 637, type: !2176, isLocal: false, isDefinition: true, scopeLine: 638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2867 = !DILocalVariable(name: "s", arg: 1, scope: !2866, file: !969, line: 637, type: !980)
!2868 = !DILocation(line: 637, column: 49, scope: !2866)
!2869 = !DILocation(line: 639, column: 23, scope: !2866)
!2870 = !DILocation(line: 639, column: 5, scope: !2866)
!2871 = !DILocation(line: 641, column: 26, scope: !2866)
!2872 = !DILocation(line: 641, column: 5, scope: !2866)
!2873 = !DILocation(line: 643, column: 22, scope: !2866)
!2874 = !DILocation(line: 643, column: 5, scope: !2866)
!2875 = !DILocation(line: 46, column: 9, scope: !2876, inlinedAt: !2880)
!2876 = distinct !DISubprogram(name: "emms_c", scope: !2877, file: !2877, line: 37, type: !2878, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2877 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2878 = !DISubroutineType(types: !2879)
!2879 = !{null}
!2880 = distinct !DILocation(line: 645, column: 5, scope: !2866)
!2881 = !{i32 100437}
!2882 = !DILocation(line: 646, column: 1, scope: !2866)
!2883 = distinct !DISubprogram(name: "extract_exponents", scope: !969, file: !969, line: 328, type: !2176, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2884 = !DILocalVariable(name: "s", arg: 1, scope: !2883, file: !969, line: 328, type: !980)
!2885 = !DILocation(line: 328, column: 49, scope: !2883)
!2886 = !DILocalVariable(name: "ch", scope: !2883, file: !969, line: 330, type: !966)
!2887 = !DILocation(line: 330, column: 9, scope: !2883)
!2888 = !DILocation(line: 330, column: 15, scope: !2883)
!2889 = !DILocation(line: 330, column: 18, scope: !2883)
!2890 = !DILocation(line: 330, column: 14, scope: !2883)
!2891 = !DILocalVariable(name: "chan_size", scope: !2883, file: !969, line: 331, type: !966)
!2892 = !DILocation(line: 331, column: 9, scope: !2883)
!2893 = !DILocation(line: 331, column: 27, scope: !2883)
!2894 = !DILocation(line: 331, column: 30, scope: !2883)
!2895 = !DILocation(line: 331, column: 25, scope: !2883)
!2896 = !DILocation(line: 331, column: 44, scope: !2883)
!2897 = !DILocation(line: 331, column: 47, scope: !2883)
!2898 = !DILocation(line: 331, column: 58, scope: !2883)
!2899 = !DILocation(line: 331, column: 56, scope: !2883)
!2900 = !DILocation(line: 331, column: 61, scope: !2883)
!2901 = !DILocation(line: 331, column: 41, scope: !2883)
!2902 = !DILocalVariable(name: "block", scope: !2883, file: !969, line: 332, type: !2271)
!2903 = !DILocation(line: 332, column: 15, scope: !2883)
!2904 = !DILocation(line: 332, column: 24, scope: !2883)
!2905 = !DILocation(line: 332, column: 27, scope: !2883)
!2906 = !DILocation(line: 334, column: 5, scope: !2883)
!2907 = !DILocation(line: 334, column: 8, scope: !2883)
!2908 = !DILocation(line: 334, column: 15, scope: !2883)
!2909 = !DILocation(line: 334, column: 44, scope: !2883)
!2910 = !DILocation(line: 334, column: 33, scope: !2883)
!2911 = !DILocation(line: 334, column: 40, scope: !2883)
!2912 = !DILocation(line: 334, column: 67, scope: !2883)
!2913 = !DILocation(line: 334, column: 49, scope: !2883)
!2914 = !DILocation(line: 334, column: 56, scope: !2883)
!2915 = !DILocation(line: 334, column: 72, scope: !2883)
!2916 = !DILocation(line: 335, column: 1, scope: !2883)
!2917 = distinct !DISubprogram(name: "compute_exp_strategy", scope: !969, file: !969, line: 358, type: !2176, isLocal: true, isDefinition: true, scopeLine: 359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!2918 = !DILocalVariable(name: "s", arg: 1, scope: !2917, file: !969, line: 358, type: !980)
!2919 = !DILocation(line: 358, column: 52, scope: !2917)
!2920 = !DILocalVariable(name: "ch", scope: !2917, file: !969, line: 360, type: !966)
!2921 = !DILocation(line: 360, column: 9, scope: !2917)
!2922 = !DILocalVariable(name: "blk", scope: !2917, file: !969, line: 360, type: !966)
!2923 = !DILocation(line: 360, column: 13, scope: !2917)
!2924 = !DILocalVariable(name: "blk1", scope: !2917, file: !969, line: 360, type: !966)
!2925 = !DILocation(line: 360, column: 18, scope: !2917)
!2926 = !DILocation(line: 362, column: 16, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2917, file: !969, line: 362, column: 5)
!2928 = !DILocation(line: 362, column: 19, scope: !2927)
!2929 = !DILocation(line: 362, column: 15, scope: !2927)
!2930 = !DILocation(line: 362, column: 13, scope: !2927)
!2931 = !DILocation(line: 362, column: 10, scope: !2927)
!2932 = !DILocation(line: 362, column: 27, scope: !2933)
!2933 = !DILexicalBlockFile(scope: !2934, file: !969, discriminator: 1)
!2934 = distinct !DILexicalBlock(scope: !2927, file: !969, line: 362, column: 5)
!2935 = !DILocation(line: 362, column: 33, scope: !2933)
!2936 = !DILocation(line: 362, column: 36, scope: !2933)
!2937 = !DILocation(line: 362, column: 30, scope: !2933)
!2938 = !DILocation(line: 362, column: 5, scope: !2933)
!2939 = !DILocalVariable(name: "exp_strategy", scope: !2940, file: !969, line: 363, type: !1179)
!2940 = distinct !DILexicalBlock(scope: !2934, file: !969, line: 362, column: 56)
!2941 = !DILocation(line: 363, column: 18, scope: !2940)
!2942 = !DILocation(line: 363, column: 49, scope: !2940)
!2943 = !DILocation(line: 363, column: 33, scope: !2940)
!2944 = !DILocation(line: 363, column: 36, scope: !2940)
!2945 = !DILocalVariable(name: "exp", scope: !2940, file: !969, line: 364, type: !1179)
!2946 = !DILocation(line: 364, column: 18, scope: !2940)
!2947 = !DILocation(line: 364, column: 41, scope: !2940)
!2948 = !DILocation(line: 364, column: 24, scope: !2940)
!2949 = !DILocation(line: 364, column: 27, scope: !2940)
!2950 = !DILocation(line: 364, column: 37, scope: !2940)
!2951 = !DILocalVariable(name: "exp_diff", scope: !2940, file: !969, line: 365, type: !966)
!2952 = !DILocation(line: 365, column: 13, scope: !2940)
!2953 = !DILocation(line: 369, column: 9, scope: !2940)
!2954 = !DILocation(line: 369, column: 25, scope: !2940)
!2955 = !DILocation(line: 370, column: 13, scope: !2940)
!2956 = !DILocation(line: 371, column: 18, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2940, file: !969, line: 371, column: 9)
!2958 = !DILocation(line: 371, column: 14, scope: !2957)
!2959 = !DILocation(line: 371, column: 23, scope: !2960)
!2960 = !DILexicalBlockFile(scope: !2961, file: !969, discriminator: 1)
!2961 = distinct !DILexicalBlock(scope: !2957, file: !969, line: 371, column: 9)
!2962 = !DILocation(line: 371, column: 29, scope: !2960)
!2963 = !DILocation(line: 371, column: 32, scope: !2960)
!2964 = !DILocation(line: 371, column: 27, scope: !2960)
!2965 = !DILocation(line: 371, column: 9, scope: !2960)
!2966 = !DILocation(line: 372, column: 17, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !969, line: 372, column: 17)
!2968 = distinct !DILexicalBlock(scope: !2961, file: !969, line: 371, column: 63)
!2969 = !DILocation(line: 372, column: 20, scope: !2967)
!2970 = !DILocation(line: 372, column: 17, scope: !2968)
!2971 = !DILocation(line: 373, column: 32, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !969, line: 373, column: 21)
!2973 = distinct !DILexicalBlock(scope: !2967, file: !969, line: 372, column: 26)
!2974 = !DILocation(line: 373, column: 35, scope: !2972)
!2975 = !DILocation(line: 373, column: 22, scope: !2972)
!2976 = !DILocation(line: 373, column: 25, scope: !2972)
!2977 = !DILocation(line: 373, column: 39, scope: !2972)
!2978 = !DILocation(line: 373, column: 21, scope: !2973)
!2979 = !DILocation(line: 374, column: 34, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2972, file: !969, line: 373, column: 51)
!2981 = !DILocation(line: 374, column: 21, scope: !2980)
!2982 = !DILocation(line: 374, column: 39, scope: !2980)
!2983 = !DILocation(line: 375, column: 21, scope: !2980)
!2984 = !DILocation(line: 376, column: 39, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2972, file: !969, line: 376, column: 28)
!2986 = !DILocation(line: 376, column: 29, scope: !2985)
!2987 = !DILocation(line: 376, column: 32, scope: !2985)
!2988 = !DILocation(line: 376, column: 44, scope: !2985)
!2989 = !DILocation(line: 376, column: 28, scope: !2972)
!2990 = !DILocation(line: 377, column: 34, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2985, file: !969, line: 376, column: 56)
!2992 = !DILocation(line: 377, column: 21, scope: !2991)
!2993 = !DILocation(line: 377, column: 39, scope: !2991)
!2994 = !DILocation(line: 378, column: 21, scope: !2991)
!2995 = !DILocation(line: 380, column: 13, scope: !2973)
!2996 = !DILocation(line: 380, column: 54, scope: !2997)
!2997 = !DILexicalBlockFile(scope: !2998, file: !969, discriminator: 1)
!2998 = distinct !DILexicalBlock(scope: !2967, file: !969, line: 380, column: 24)
!2999 = !DILocation(line: 380, column: 24, scope: !2997)
!3000 = !DILocation(line: 380, column: 34, scope: !2997)
!3001 = !DILocation(line: 380, column: 27, scope: !2997)
!3002 = !DILocation(line: 380, column: 39, scope: !2997)
!3003 = !DILocation(line: 380, column: 93, scope: !2997)
!3004 = !DILocation(line: 380, column: 61, scope: !2997)
!3005 = !DILocation(line: 380, column: 71, scope: !2997)
!3006 = !DILocation(line: 380, column: 74, scope: !2997)
!3007 = !DILocation(line: 380, column: 64, scope: !2997)
!3008 = !DILocation(line: 380, column: 78, scope: !2997)
!3009 = !DILocation(line: 380, column: 58, scope: !2997)
!3010 = !DILocation(line: 381, column: 30, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !2998, file: !969, line: 380, column: 98)
!3012 = !DILocation(line: 381, column: 17, scope: !3011)
!3013 = !DILocation(line: 381, column: 35, scope: !3011)
!3014 = !DILocation(line: 382, column: 17, scope: !3011)
!3015 = !DILocation(line: 384, column: 24, scope: !2968)
!3016 = !DILocation(line: 384, column: 27, scope: !2968)
!3017 = !DILocation(line: 384, column: 32, scope: !2968)
!3018 = !DILocation(line: 384, column: 44, scope: !2968)
!3019 = !DILocation(line: 384, column: 49, scope: !2968)
!3020 = !DILocation(line: 384, column: 53, scope: !2968)
!3021 = !DILocation(line: 384, column: 22, scope: !2968)
!3022 = !DILocation(line: 385, column: 26, scope: !2968)
!3023 = !DILocation(line: 385, column: 13, scope: !2968)
!3024 = !DILocation(line: 385, column: 31, scope: !2968)
!3025 = !DILocation(line: 386, column: 17, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !2968, file: !969, line: 386, column: 17)
!3027 = !DILocation(line: 386, column: 20, scope: !3026)
!3028 = !DILocation(line: 386, column: 25, scope: !3026)
!3029 = !DILocation(line: 386, column: 28, scope: !3030)
!3030 = !DILexicalBlockFile(scope: !3026, file: !969, discriminator: 1)
!3031 = !DILocation(line: 386, column: 71, scope: !3030)
!3032 = !DILocation(line: 386, column: 47, scope: !3030)
!3033 = !DILocation(line: 386, column: 57, scope: !3030)
!3034 = !DILocation(line: 386, column: 50, scope: !3030)
!3035 = !DILocation(line: 386, column: 62, scope: !3030)
!3036 = !DILocation(line: 386, column: 91, scope: !3030)
!3037 = !DILocation(line: 386, column: 77, scope: !3030)
!3038 = !DILocation(line: 386, column: 80, scope: !3030)
!3039 = !DILocation(line: 386, column: 75, scope: !3030)
!3040 = !DILocation(line: 386, column: 44, scope: !3030)
!3041 = !DILocation(line: 386, column: 96, scope: !3030)
!3042 = !DILocation(line: 386, column: 37, scope: !3030)
!3043 = !DILocation(line: 386, column: 17, scope: !3030)
!3044 = !DILocation(line: 387, column: 30, scope: !3026)
!3045 = !DILocation(line: 387, column: 17, scope: !3026)
!3046 = !DILocation(line: 387, column: 35, scope: !3026)
!3047 = !DILocation(line: 388, column: 22, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3026, file: !969, line: 388, column: 22)
!3049 = !DILocation(line: 388, column: 25, scope: !3048)
!3050 = !DILocation(line: 388, column: 29, scope: !3048)
!3051 = !DILocation(line: 388, column: 32, scope: !3052)
!3052 = !DILexicalBlockFile(scope: !3048, file: !969, discriminator: 1)
!3053 = !DILocation(line: 388, column: 41, scope: !3052)
!3054 = !DILocation(line: 388, column: 22, scope: !3052)
!3055 = !DILocation(line: 389, column: 30, scope: !3048)
!3056 = !DILocation(line: 389, column: 17, scope: !3048)
!3057 = !DILocation(line: 389, column: 35, scope: !3048)
!3058 = !DILocation(line: 390, column: 9, scope: !2968)
!3059 = !DILocation(line: 371, column: 47, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !2961, file: !969, discriminator: 2)
!3061 = !DILocation(line: 371, column: 55, scope: !3060)
!3062 = !DILocation(line: 371, column: 9, scope: !3060)
!3063 = distinct !{!3063, !3064}
!3064 = !DILocation(line: 371, column: 9, scope: !2940)
!3065 = !DILocation(line: 394, column: 13, scope: !2940)
!3066 = !DILocation(line: 395, column: 9, scope: !2940)
!3067 = !DILocation(line: 395, column: 16, scope: !3068)
!3068 = !DILexicalBlockFile(scope: !2940, file: !969, discriminator: 1)
!3069 = !DILocation(line: 395, column: 22, scope: !3068)
!3070 = !DILocation(line: 395, column: 25, scope: !3068)
!3071 = !DILocation(line: 395, column: 20, scope: !3068)
!3072 = !DILocation(line: 395, column: 9, scope: !3068)
!3073 = !DILocation(line: 396, column: 20, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !2940, file: !969, line: 395, column: 37)
!3075 = !DILocation(line: 396, column: 24, scope: !3074)
!3076 = !DILocation(line: 396, column: 18, scope: !3074)
!3077 = !DILocation(line: 397, column: 13, scope: !3074)
!3078 = !DILocation(line: 397, column: 20, scope: !3079)
!3079 = !DILexicalBlockFile(scope: !3074, file: !969, discriminator: 1)
!3080 = !DILocation(line: 397, column: 27, scope: !3079)
!3081 = !DILocation(line: 397, column: 30, scope: !3079)
!3082 = !DILocation(line: 397, column: 25, scope: !3079)
!3083 = !DILocation(line: 397, column: 41, scope: !3079)
!3084 = !DILocation(line: 397, column: 57, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3074, file: !969, discriminator: 2)
!3086 = !DILocation(line: 397, column: 44, scope: !3085)
!3087 = !DILocation(line: 397, column: 63, scope: !3085)
!3088 = !DILocation(line: 397, column: 13, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3074, file: !969, discriminator: 3)
!3090 = !DILocation(line: 398, column: 21, scope: !3074)
!3091 = !DILocation(line: 397, column: 13, scope: !3092)
!3092 = !DILexicalBlockFile(scope: !3074, file: !969, discriminator: 4)
!3093 = distinct !{!3093, !3077}
!3094 = !DILocation(line: 399, column: 74, scope: !3074)
!3095 = !DILocation(line: 399, column: 79, scope: !3074)
!3096 = !DILocation(line: 399, column: 78, scope: !3074)
!3097 = !DILocation(line: 399, column: 82, scope: !3074)
!3098 = !DILocation(line: 399, column: 33, scope: !3074)
!3099 = !DILocation(line: 399, column: 56, scope: !3074)
!3100 = !DILocation(line: 399, column: 59, scope: !3074)
!3101 = !DILocation(line: 399, column: 26, scope: !3074)
!3102 = !DILocation(line: 399, column: 13, scope: !3074)
!3103 = !DILocation(line: 399, column: 31, scope: !3074)
!3104 = !DILocation(line: 400, column: 19, scope: !3074)
!3105 = !DILocation(line: 400, column: 17, scope: !3074)
!3106 = !DILocation(line: 395, column: 9, scope: !3107)
!3107 = !DILexicalBlockFile(scope: !2940, file: !969, discriminator: 2)
!3108 = distinct !{!3108, !3066}
!3109 = !DILocation(line: 402, column: 5, scope: !2940)
!3110 = !DILocation(line: 362, column: 52, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !2934, file: !969, discriminator: 2)
!3112 = !DILocation(line: 362, column: 5, scope: !3111)
!3113 = distinct !{!3113, !3114}
!3114 = !DILocation(line: 362, column: 5, scope: !2917)
!3115 = !DILocation(line: 403, column: 9, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !2917, file: !969, line: 403, column: 9)
!3117 = !DILocation(line: 403, column: 12, scope: !3116)
!3118 = !DILocation(line: 403, column: 9, scope: !2917)
!3119 = !DILocation(line: 404, column: 14, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3116, file: !969, line: 403, column: 20)
!3121 = !DILocation(line: 404, column: 17, scope: !3120)
!3122 = !DILocation(line: 404, column: 12, scope: !3120)
!3123 = !DILocation(line: 405, column: 25, scope: !3120)
!3124 = !DILocation(line: 405, column: 9, scope: !3120)
!3125 = !DILocation(line: 405, column: 12, scope: !3120)
!3126 = !DILocation(line: 405, column: 32, scope: !3120)
!3127 = !DILocation(line: 406, column: 18, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3120, file: !969, line: 406, column: 9)
!3129 = !DILocation(line: 406, column: 14, scope: !3128)
!3130 = !DILocation(line: 406, column: 23, scope: !3131)
!3131 = !DILexicalBlockFile(scope: !3132, file: !969, discriminator: 1)
!3132 = distinct !DILexicalBlock(scope: !3128, file: !969, line: 406, column: 9)
!3133 = !DILocation(line: 406, column: 29, scope: !3131)
!3134 = !DILocation(line: 406, column: 32, scope: !3131)
!3135 = !DILocation(line: 406, column: 27, scope: !3131)
!3136 = !DILocation(line: 406, column: 9, scope: !3131)
!3137 = !DILocation(line: 407, column: 33, scope: !3132)
!3138 = !DILocation(line: 407, column: 13, scope: !3132)
!3139 = !DILocation(line: 407, column: 29, scope: !3132)
!3140 = !DILocation(line: 407, column: 16, scope: !3132)
!3141 = !DILocation(line: 407, column: 38, scope: !3132)
!3142 = !DILocation(line: 406, column: 47, scope: !3143)
!3143 = !DILexicalBlockFile(scope: !3132, file: !969, discriminator: 2)
!3144 = !DILocation(line: 406, column: 9, scope: !3143)
!3145 = distinct !{!3145, !3146}
!3146 = !DILocation(line: 406, column: 9, scope: !3120)
!3147 = !DILocation(line: 408, column: 5, scope: !3120)
!3148 = !DILocation(line: 411, column: 14, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !2917, file: !969, line: 411, column: 9)
!3150 = !DILocation(line: 411, column: 17, scope: !3149)
!3151 = !DILocation(line: 411, column: 9, scope: !2917)
!3152 = !DILocation(line: 412, column: 40, scope: !3149)
!3153 = !DILocation(line: 412, column: 9, scope: !3149)
!3154 = !DILocation(line: 413, column: 1, scope: !2917)
!3155 = distinct !DISubprogram(name: "encode_exponents", scope: !969, file: !969, line: 497, type: !2176, isLocal: true, isDefinition: true, scopeLine: 498, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3156 = !DILocalVariable(name: "s", arg: 1, scope: !3155, file: !969, line: 497, type: !980)
!3157 = !DILocation(line: 497, column: 48, scope: !3155)
!3158 = !DILocalVariable(name: "blk", scope: !3155, file: !969, line: 499, type: !966)
!3159 = !DILocation(line: 499, column: 9, scope: !3155)
!3160 = !DILocalVariable(name: "blk1", scope: !3155, file: !969, line: 499, type: !966)
!3161 = !DILocation(line: 499, column: 14, scope: !3155)
!3162 = !DILocalVariable(name: "ch", scope: !3155, file: !969, line: 499, type: !966)
!3163 = !DILocation(line: 499, column: 20, scope: !3155)
!3164 = !DILocalVariable(name: "cpl", scope: !3155, file: !969, line: 499, type: !966)
!3165 = !DILocation(line: 499, column: 24, scope: !3155)
!3166 = !DILocalVariable(name: "exp", scope: !3155, file: !969, line: 500, type: !1179)
!3167 = !DILocation(line: 500, column: 14, scope: !3155)
!3168 = !DILocalVariable(name: "exp_strategy", scope: !3155, file: !969, line: 500, type: !1179)
!3169 = !DILocation(line: 500, column: 20, scope: !3155)
!3170 = !DILocalVariable(name: "nb_coefs", scope: !3155, file: !969, line: 501, type: !966)
!3171 = !DILocation(line: 501, column: 9, scope: !3155)
!3172 = !DILocalVariable(name: "num_reuse_blocks", scope: !3155, file: !969, line: 501, type: !966)
!3173 = !DILocation(line: 501, column: 19, scope: !3155)
!3174 = !DILocation(line: 503, column: 16, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3155, file: !969, line: 503, column: 5)
!3176 = !DILocation(line: 503, column: 19, scope: !3175)
!3177 = !DILocation(line: 503, column: 15, scope: !3175)
!3178 = !DILocation(line: 503, column: 13, scope: !3175)
!3179 = !DILocation(line: 503, column: 10, scope: !3175)
!3180 = !DILocation(line: 503, column: 27, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3182, file: !969, discriminator: 1)
!3182 = distinct !DILexicalBlock(scope: !3175, file: !969, line: 503, column: 5)
!3183 = !DILocation(line: 503, column: 33, scope: !3181)
!3184 = !DILocation(line: 503, column: 36, scope: !3181)
!3185 = !DILocation(line: 503, column: 30, scope: !3181)
!3186 = !DILocation(line: 503, column: 5, scope: !3181)
!3187 = !DILocation(line: 504, column: 32, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3182, file: !969, line: 503, column: 52)
!3189 = !DILocation(line: 504, column: 15, scope: !3188)
!3190 = !DILocation(line: 504, column: 18, scope: !3188)
!3191 = !DILocation(line: 504, column: 28, scope: !3188)
!3192 = !DILocation(line: 504, column: 52, scope: !3188)
!3193 = !DILocation(line: 504, column: 38, scope: !3188)
!3194 = !DILocation(line: 504, column: 41, scope: !3188)
!3195 = !DILocation(line: 504, column: 36, scope: !3188)
!3196 = !DILocation(line: 504, column: 13, scope: !3188)
!3197 = !DILocation(line: 505, column: 40, scope: !3188)
!3198 = !DILocation(line: 505, column: 24, scope: !3188)
!3199 = !DILocation(line: 505, column: 27, scope: !3188)
!3200 = !DILocation(line: 505, column: 22, scope: !3188)
!3201 = !DILocation(line: 507, column: 16, scope: !3188)
!3202 = !DILocation(line: 507, column: 19, scope: !3188)
!3203 = !DILocation(line: 507, column: 13, scope: !3188)
!3204 = !DILocation(line: 508, column: 13, scope: !3188)
!3205 = !DILocation(line: 509, column: 9, scope: !3188)
!3206 = !DILocation(line: 509, column: 16, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !3188, file: !969, discriminator: 1)
!3208 = !DILocation(line: 509, column: 22, scope: !3207)
!3209 = !DILocation(line: 509, column: 25, scope: !3207)
!3210 = !DILocation(line: 509, column: 20, scope: !3207)
!3211 = !DILocation(line: 509, column: 9, scope: !3207)
!3212 = !DILocalVariable(name: "block", scope: !3213, file: !969, line: 510, type: !2271)
!3213 = distinct !DILexicalBlock(scope: !3188, file: !969, line: 509, column: 37)
!3214 = !DILocation(line: 510, column: 23, scope: !3213)
!3215 = !DILocation(line: 510, column: 42, scope: !3213)
!3216 = !DILocation(line: 510, column: 32, scope: !3213)
!3217 = !DILocation(line: 510, column: 35, scope: !3213)
!3218 = !DILocation(line: 511, column: 17, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !969, line: 511, column: 17)
!3220 = !DILocation(line: 511, column: 21, scope: !3219)
!3221 = !DILocation(line: 511, column: 25, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !3219, file: !969, discriminator: 1)
!3223 = !DILocation(line: 511, column: 32, scope: !3222)
!3224 = !DILocation(line: 511, column: 17, scope: !3222)
!3225 = !DILocation(line: 512, column: 21, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3219, file: !969, line: 511, column: 44)
!3227 = !DILocation(line: 513, column: 20, scope: !3226)
!3228 = !DILocation(line: 514, column: 17, scope: !3226)
!3229 = distinct !{!3229, !3205}
!3230 = !DILocation(line: 516, column: 40, scope: !3213)
!3231 = !DILocation(line: 516, column: 24, scope: !3213)
!3232 = !DILocation(line: 516, column: 31, scope: !3213)
!3233 = !DILocation(line: 516, column: 60, scope: !3213)
!3234 = !DILocation(line: 516, column: 46, scope: !3213)
!3235 = !DILocation(line: 516, column: 49, scope: !3213)
!3236 = !DILocation(line: 516, column: 44, scope: !3213)
!3237 = !DILocation(line: 516, column: 22, scope: !3213)
!3238 = !DILocation(line: 517, column: 20, scope: !3213)
!3239 = !DILocation(line: 517, column: 24, scope: !3213)
!3240 = !DILocation(line: 517, column: 18, scope: !3213)
!3241 = !DILocation(line: 521, column: 41, scope: !3213)
!3242 = !DILocation(line: 521, column: 34, scope: !3213)
!3243 = !DILocation(line: 521, column: 13, scope: !3213)
!3244 = !DILocation(line: 521, column: 30, scope: !3213)
!3245 = !DILocation(line: 521, column: 16, scope: !3213)
!3246 = !DILocation(line: 521, column: 39, scope: !3213)
!3247 = !DILocation(line: 522, column: 13, scope: !3213)
!3248 = !DILocation(line: 522, column: 20, scope: !3249)
!3249 = !DILexicalBlockFile(scope: !3213, file: !969, discriminator: 1)
!3250 = !DILocation(line: 522, column: 27, scope: !3249)
!3251 = !DILocation(line: 522, column: 30, scope: !3249)
!3252 = !DILocation(line: 522, column: 25, scope: !3249)
!3253 = !DILocation(line: 522, column: 41, scope: !3249)
!3254 = !DILocation(line: 522, column: 57, scope: !3255)
!3255 = !DILexicalBlockFile(scope: !3213, file: !969, discriminator: 2)
!3256 = !DILocation(line: 522, column: 44, scope: !3255)
!3257 = !DILocation(line: 522, column: 63, scope: !3255)
!3258 = !DILocation(line: 522, column: 13, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3213, file: !969, discriminator: 3)
!3260 = !DILocation(line: 523, column: 46, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3213, file: !969, line: 522, column: 69)
!3262 = !DILocation(line: 523, column: 38, scope: !3261)
!3263 = !DILocation(line: 523, column: 17, scope: !3261)
!3264 = !DILocation(line: 523, column: 34, scope: !3261)
!3265 = !DILocation(line: 523, column: 20, scope: !3261)
!3266 = !DILocation(line: 523, column: 44, scope: !3261)
!3267 = !DILocation(line: 524, column: 21, scope: !3261)
!3268 = !DILocation(line: 522, column: 13, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3213, file: !969, discriminator: 4)
!3270 = distinct !{!3270, !3247}
!3271 = !DILocation(line: 526, column: 32, scope: !3213)
!3272 = !DILocation(line: 526, column: 39, scope: !3213)
!3273 = !DILocation(line: 526, column: 37, scope: !3213)
!3274 = !DILocation(line: 526, column: 43, scope: !3213)
!3275 = !DILocation(line: 526, column: 30, scope: !3213)
!3276 = !DILocation(line: 529, column: 13, scope: !3213)
!3277 = !DILocation(line: 529, column: 16, scope: !3213)
!3278 = !DILocation(line: 529, column: 23, scope: !3213)
!3279 = !DILocation(line: 529, column: 40, scope: !3213)
!3280 = !DILocation(line: 529, column: 58, scope: !3213)
!3281 = !DILocation(line: 529, column: 44, scope: !3213)
!3282 = !DILocation(line: 529, column: 47, scope: !3213)
!3283 = !DILocation(line: 529, column: 43, scope: !3213)
!3284 = !DILocation(line: 529, column: 63, scope: !3213)
!3285 = !DILocation(line: 532, column: 37, scope: !3213)
!3286 = !DILocation(line: 532, column: 42, scope: !3213)
!3287 = !DILocation(line: 532, column: 65, scope: !3213)
!3288 = !DILocation(line: 532, column: 52, scope: !3213)
!3289 = !DILocation(line: 532, column: 71, scope: !3213)
!3290 = !DILocation(line: 532, column: 13, scope: !3213)
!3291 = !DILocation(line: 534, column: 27, scope: !3213)
!3292 = !DILocation(line: 534, column: 44, scope: !3213)
!3293 = !DILocation(line: 534, column: 24, scope: !3213)
!3294 = !DILocation(line: 534, column: 17, scope: !3213)
!3295 = !DILocation(line: 535, column: 19, scope: !3213)
!3296 = !DILocation(line: 535, column: 17, scope: !3213)
!3297 = !DILocation(line: 509, column: 9, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3188, file: !969, discriminator: 2)
!3299 = !DILocation(line: 537, column: 5, scope: !3188)
!3300 = !DILocation(line: 503, column: 48, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !3182, file: !969, discriminator: 2)
!3302 = !DILocation(line: 503, column: 5, scope: !3301)
!3303 = distinct !{!3303, !3304}
!3304 = !DILocation(line: 503, column: 5, scope: !3155)
!3305 = !DILocation(line: 540, column: 5, scope: !3155)
!3306 = !DILocation(line: 540, column: 8, scope: !3155)
!3307 = !DILocation(line: 540, column: 20, scope: !3155)
!3308 = !DILocation(line: 541, column: 1, scope: !3155)
!3309 = distinct !DISubprogram(name: "ff_ac3_compute_bit_allocation", scope: !969, file: !969, line: 1146, type: !978, isLocal: false, isDefinition: true, scopeLine: 1147, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3310 = !DILocalVariable(name: "s", arg: 1, scope: !3309, file: !969, line: 1146, type: !980)
!3311 = !DILocation(line: 1146, column: 53, scope: !3309)
!3312 = !DILocation(line: 1148, column: 22, scope: !3309)
!3313 = !DILocation(line: 1148, column: 5, scope: !3309)
!3314 = !DILocation(line: 1150, column: 44, scope: !3309)
!3315 = !DILocation(line: 1150, column: 24, scope: !3309)
!3316 = !DILocation(line: 1150, column: 5, scope: !3309)
!3317 = !DILocation(line: 1150, column: 8, scope: !3309)
!3318 = !DILocation(line: 1150, column: 22, scope: !3309)
!3319 = !DILocation(line: 1152, column: 23, scope: !3309)
!3320 = !DILocation(line: 1152, column: 5, scope: !3309)
!3321 = !DILocation(line: 1154, column: 31, scope: !3309)
!3322 = !DILocation(line: 1154, column: 12, scope: !3309)
!3323 = !DILocation(line: 1154, column: 5, scope: !3309)
!3324 = distinct !DISubprogram(name: "count_frame_bits", scope: !969, file: !969, line: 795, type: !2176, isLocal: true, isDefinition: true, scopeLine: 796, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3325 = !DILocalVariable(name: "s", arg: 1, scope: !3324, file: !969, line: 795, type: !980)
!3326 = !DILocation(line: 795, column: 48, scope: !3324)
!3327 = !DILocalVariable(name: "opt", scope: !3324, file: !969, line: 797, type: !3328)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!3329 = !DILocation(line: 797, column: 20, scope: !3324)
!3330 = !DILocation(line: 797, column: 27, scope: !3324)
!3331 = !DILocation(line: 797, column: 30, scope: !3324)
!3332 = !DILocalVariable(name: "blk", scope: !3324, file: !969, line: 798, type: !966)
!3333 = !DILocation(line: 798, column: 9, scope: !3324)
!3334 = !DILocalVariable(name: "ch", scope: !3324, file: !969, line: 798, type: !966)
!3335 = !DILocation(line: 798, column: 14, scope: !3324)
!3336 = !DILocalVariable(name: "frame_bits", scope: !3324, file: !969, line: 799, type: !966)
!3337 = !DILocation(line: 799, column: 9, scope: !3324)
!3338 = !DILocation(line: 802, column: 9, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3324, file: !969, line: 802, column: 9)
!3340 = !DILocation(line: 802, column: 12, scope: !3339)
!3341 = !DILocation(line: 802, column: 9, scope: !3324)
!3342 = !DILocation(line: 803, column: 13, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !969, line: 803, column: 13)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !969, line: 802, column: 18)
!3345 = !DILocation(line: 803, column: 18, scope: !3343)
!3346 = !DILocation(line: 803, column: 13, scope: !3344)
!3347 = !DILocation(line: 804, column: 17, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !969, line: 804, column: 17)
!3349 = distinct !DILexicalBlock(scope: !3343, file: !969, line: 803, column: 40)
!3350 = !DILocation(line: 804, column: 20, scope: !3348)
!3351 = !DILocation(line: 804, column: 33, scope: !3348)
!3352 = !DILocation(line: 804, column: 17, scope: !3349)
!3353 = !DILocation(line: 805, column: 28, scope: !3348)
!3354 = !DILocation(line: 805, column: 17, scope: !3348)
!3355 = !DILocation(line: 806, column: 17, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3349, file: !969, line: 806, column: 17)
!3357 = !DILocation(line: 806, column: 20, scope: !3356)
!3358 = !DILocation(line: 806, column: 17, scope: !3349)
!3359 = !DILocation(line: 807, column: 28, scope: !3356)
!3360 = !DILocation(line: 807, column: 17, scope: !3356)
!3361 = !DILocation(line: 808, column: 17, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3349, file: !969, line: 808, column: 17)
!3363 = !DILocation(line: 808, column: 20, scope: !3362)
!3364 = !DILocation(line: 808, column: 17, scope: !3349)
!3365 = !DILocation(line: 809, column: 28, scope: !3362)
!3366 = !DILocation(line: 809, column: 17, scope: !3362)
!3367 = !DILocation(line: 810, column: 27, scope: !3349)
!3368 = !DILocation(line: 810, column: 30, scope: !3349)
!3369 = !DILocation(line: 810, column: 24, scope: !3349)
!3370 = !DILocation(line: 811, column: 24, scope: !3349)
!3371 = !DILocation(line: 812, column: 17, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3349, file: !969, line: 812, column: 17)
!3373 = !DILocation(line: 812, column: 20, scope: !3372)
!3374 = !DILocation(line: 812, column: 33, scope: !3372)
!3375 = !DILocation(line: 812, column: 17, scope: !3349)
!3376 = !DILocation(line: 813, column: 27, scope: !3372)
!3377 = !DILocation(line: 813, column: 17, scope: !3372)
!3378 = !DILocation(line: 814, column: 23, scope: !3349)
!3379 = !DILocation(line: 815, column: 9, scope: !3349)
!3380 = !DILocation(line: 816, column: 13, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3344, file: !969, line: 816, column: 13)
!3382 = !DILocation(line: 816, column: 18, scope: !3381)
!3383 = !DILocation(line: 816, column: 13, scope: !3344)
!3384 = !DILocation(line: 817, column: 24, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !969, line: 816, column: 38)
!3386 = !DILocation(line: 818, column: 17, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3385, file: !969, line: 818, column: 17)
!3388 = !DILocation(line: 818, column: 20, scope: !3387)
!3389 = !DILocation(line: 818, column: 33, scope: !3387)
!3390 = !DILocation(line: 818, column: 17, scope: !3385)
!3391 = !DILocation(line: 819, column: 28, scope: !3387)
!3392 = !DILocation(line: 819, column: 17, scope: !3387)
!3393 = !DILocation(line: 820, column: 17, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3385, file: !969, line: 820, column: 17)
!3395 = !DILocation(line: 820, column: 20, scope: !3394)
!3396 = !DILocation(line: 820, column: 33, scope: !3394)
!3397 = !DILocation(line: 820, column: 17, scope: !3385)
!3398 = !DILocation(line: 821, column: 28, scope: !3394)
!3399 = !DILocation(line: 821, column: 17, scope: !3394)
!3400 = !DILocation(line: 822, column: 23, scope: !3385)
!3401 = !DILocation(line: 823, column: 17, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3385, file: !969, line: 823, column: 17)
!3403 = !DILocation(line: 823, column: 22, scope: !3402)
!3404 = !DILocation(line: 823, column: 17, scope: !3385)
!3405 = !DILocation(line: 824, column: 28, scope: !3402)
!3406 = !DILocation(line: 824, column: 17, scope: !3402)
!3407 = !DILocation(line: 825, column: 23, scope: !3385)
!3408 = !DILocation(line: 826, column: 9, scope: !3385)
!3409 = !DILocation(line: 828, column: 13, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3344, file: !969, line: 828, column: 13)
!3411 = !DILocation(line: 828, column: 16, scope: !3410)
!3412 = !DILocation(line: 828, column: 29, scope: !3410)
!3413 = !DILocation(line: 828, column: 13, scope: !3344)
!3414 = !DILocation(line: 829, column: 23, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !969, line: 828, column: 48)
!3416 = !DILocation(line: 830, column: 22, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !969, line: 830, column: 13)
!3418 = !DILocation(line: 830, column: 18, scope: !3417)
!3419 = !DILocation(line: 830, column: 27, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3421, file: !969, discriminator: 1)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !969, line: 830, column: 13)
!3422 = !DILocation(line: 830, column: 33, scope: !3420)
!3423 = !DILocation(line: 830, column: 36, scope: !3420)
!3424 = !DILocation(line: 830, column: 31, scope: !3420)
!3425 = !DILocation(line: 830, column: 13, scope: !3420)
!3426 = !DILocalVariable(name: "block", scope: !3427, file: !969, line: 831, type: !2271)
!3427 = distinct !DILexicalBlock(scope: !3421, file: !969, line: 830, column: 55)
!3428 = !DILocation(line: 831, column: 27, scope: !3427)
!3429 = !DILocation(line: 831, column: 46, scope: !3427)
!3430 = !DILocation(line: 831, column: 36, scope: !3427)
!3431 = !DILocation(line: 831, column: 39, scope: !3427)
!3432 = !DILocation(line: 832, column: 27, scope: !3427)
!3433 = !DILocation(line: 833, column: 21, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3427, file: !969, line: 833, column: 21)
!3435 = !DILocation(line: 833, column: 28, scope: !3434)
!3436 = !DILocation(line: 833, column: 21, scope: !3427)
!3437 = !DILocation(line: 834, column: 31, scope: !3434)
!3438 = !DILocation(line: 834, column: 21, scope: !3434)
!3439 = !DILocation(line: 835, column: 13, scope: !3427)
!3440 = !DILocation(line: 830, column: 51, scope: !3441)
!3441 = !DILexicalBlockFile(scope: !3421, file: !969, discriminator: 2)
!3442 = !DILocation(line: 830, column: 13, scope: !3441)
!3443 = distinct !{!3443, !3444}
!3444 = !DILocation(line: 830, column: 13, scope: !3415)
!3445 = !DILocation(line: 836, column: 9, scope: !3415)
!3446 = !DILocation(line: 838, column: 13, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3344, file: !969, line: 838, column: 13)
!3448 = !DILocation(line: 838, column: 16, scope: !3447)
!3449 = !DILocation(line: 838, column: 13, scope: !3344)
!3450 = !DILocation(line: 839, column: 17, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !969, line: 839, column: 17)
!3452 = distinct !DILexicalBlock(scope: !3447, file: !969, line: 838, column: 24)
!3453 = !DILocation(line: 839, column: 20, scope: !3451)
!3454 = !DILocation(line: 839, column: 17, scope: !3452)
!3455 = !DILocation(line: 840, column: 35, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !969, line: 839, column: 44)
!3457 = !DILocation(line: 840, column: 38, scope: !3456)
!3458 = !DILocation(line: 840, column: 33, scope: !3456)
!3459 = !DILocation(line: 840, column: 28, scope: !3456)
!3460 = !DILocation(line: 841, column: 13, scope: !3456)
!3461 = !DILocation(line: 842, column: 26, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !969, line: 842, column: 17)
!3463 = distinct !DILexicalBlock(scope: !3451, file: !969, line: 841, column: 20)
!3464 = !DILocation(line: 842, column: 22, scope: !3462)
!3465 = !DILocation(line: 842, column: 31, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3467, file: !969, discriminator: 1)
!3467 = distinct !DILexicalBlock(scope: !3462, file: !969, line: 842, column: 17)
!3468 = !DILocation(line: 842, column: 37, scope: !3466)
!3469 = !DILocation(line: 842, column: 40, scope: !3466)
!3470 = !DILocation(line: 842, column: 35, scope: !3466)
!3471 = !DILocation(line: 842, column: 17, scope: !3466)
!3472 = !DILocation(line: 843, column: 49, scope: !3467)
!3473 = !DILocation(line: 843, column: 39, scope: !3467)
!3474 = !DILocation(line: 843, column: 42, scope: !3467)
!3475 = !DILocation(line: 843, column: 54, scope: !3467)
!3476 = !DILocation(line: 843, column: 37, scope: !3467)
!3477 = !DILocation(line: 843, column: 32, scope: !3467)
!3478 = !DILocation(line: 843, column: 21, scope: !3467)
!3479 = !DILocation(line: 842, column: 55, scope: !3480)
!3480 = !DILexicalBlockFile(scope: !3467, file: !969, discriminator: 2)
!3481 = !DILocation(line: 842, column: 17, scope: !3480)
!3482 = distinct !{!3482, !3483}
!3483 = !DILocation(line: 842, column: 17, scope: !3463)
!3484 = !DILocation(line: 845, column: 9, scope: !3452)
!3485 = !DILocation(line: 846, column: 5, scope: !3344)
!3486 = !DILocation(line: 847, column: 13, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !969, line: 847, column: 13)
!3488 = distinct !DILexicalBlock(scope: !3339, file: !969, line: 846, column: 12)
!3489 = !DILocation(line: 847, column: 18, scope: !3487)
!3490 = !DILocation(line: 847, column: 13, scope: !3488)
!3491 = !DILocation(line: 848, column: 24, scope: !3487)
!3492 = !DILocation(line: 848, column: 13, scope: !3487)
!3493 = !DILocation(line: 849, column: 13, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3488, file: !969, line: 849, column: 13)
!3495 = !DILocation(line: 849, column: 16, scope: !3494)
!3496 = !DILocation(line: 849, column: 29, scope: !3494)
!3497 = !DILocation(line: 849, column: 13, scope: !3488)
!3498 = !DILocation(line: 850, column: 17, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !969, line: 850, column: 17)
!3500 = distinct !DILexicalBlock(scope: !3494, file: !969, line: 849, column: 35)
!3501 = !DILocation(line: 850, column: 22, scope: !3499)
!3502 = !DILocation(line: 850, column: 17, scope: !3500)
!3503 = !DILocation(line: 851, column: 28, scope: !3499)
!3504 = !DILocation(line: 851, column: 17, scope: !3499)
!3505 = !DILocation(line: 852, column: 17, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !969, line: 852, column: 17)
!3507 = !DILocation(line: 852, column: 22, scope: !3506)
!3508 = !DILocation(line: 852, column: 17, scope: !3500)
!3509 = !DILocation(line: 853, column: 28, scope: !3506)
!3510 = !DILocation(line: 853, column: 17, scope: !3506)
!3511 = !DILocation(line: 854, column: 9, scope: !3500)
!3512 = !DILocation(line: 858, column: 14, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3324, file: !969, line: 858, column: 5)
!3514 = !DILocation(line: 858, column: 10, scope: !3513)
!3515 = !DILocation(line: 858, column: 19, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3517, file: !969, discriminator: 1)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !969, line: 858, column: 5)
!3518 = !DILocation(line: 858, column: 25, scope: !3516)
!3519 = !DILocation(line: 858, column: 28, scope: !3516)
!3520 = !DILocation(line: 858, column: 23, scope: !3516)
!3521 = !DILocation(line: 858, column: 5, scope: !3516)
!3522 = !DILocalVariable(name: "block", scope: !3523, file: !969, line: 859, type: !2271)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !969, line: 858, column: 47)
!3524 = !DILocation(line: 859, column: 19, scope: !3523)
!3525 = !DILocation(line: 859, column: 38, scope: !3523)
!3526 = !DILocation(line: 859, column: 28, scope: !3523)
!3527 = !DILocation(line: 859, column: 31, scope: !3523)
!3528 = !DILocation(line: 862, column: 14, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 862, column: 13)
!3530 = !DILocation(line: 862, column: 17, scope: !3529)
!3531 = !DILocation(line: 862, column: 13, scope: !3523)
!3532 = !DILocation(line: 863, column: 23, scope: !3529)
!3533 = !DILocation(line: 863, column: 13, scope: !3529)
!3534 = !DILocation(line: 864, column: 13, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 864, column: 13)
!3536 = !DILocation(line: 864, column: 20, scope: !3535)
!3537 = !DILocation(line: 864, column: 13, scope: !3523)
!3538 = !DILocation(line: 865, column: 18, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !969, line: 865, column: 17)
!3540 = distinct !DILexicalBlock(scope: !3535, file: !969, line: 864, column: 38)
!3541 = !DILocation(line: 865, column: 21, scope: !3539)
!3542 = !DILocation(line: 865, column: 17, scope: !3540)
!3543 = !DILocation(line: 866, column: 27, scope: !3539)
!3544 = !DILocation(line: 866, column: 17, scope: !3539)
!3545 = !DILocation(line: 867, column: 17, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3540, file: !969, line: 867, column: 17)
!3547 = !DILocation(line: 867, column: 24, scope: !3546)
!3548 = !DILocation(line: 867, column: 17, scope: !3540)
!3549 = !DILocation(line: 868, column: 21, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !969, line: 868, column: 21)
!3551 = distinct !DILexicalBlock(scope: !3546, file: !969, line: 867, column: 36)
!3552 = !DILocation(line: 868, column: 24, scope: !3550)
!3553 = !DILocation(line: 868, column: 21, scope: !3551)
!3554 = !DILocation(line: 869, column: 31, scope: !3550)
!3555 = !DILocation(line: 869, column: 21, scope: !3550)
!3556 = !DILocation(line: 870, column: 22, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3551, file: !969, line: 870, column: 21)
!3558 = !DILocation(line: 870, column: 25, scope: !3557)
!3559 = !DILocation(line: 870, column: 30, scope: !3557)
!3560 = !DILocation(line: 870, column: 33, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3557, file: !969, discriminator: 1)
!3562 = !DILocation(line: 870, column: 36, scope: !3561)
!3563 = !DILocation(line: 870, column: 49, scope: !3561)
!3564 = !DILocation(line: 870, column: 21, scope: !3561)
!3565 = !DILocation(line: 871, column: 35, scope: !3557)
!3566 = !DILocation(line: 871, column: 38, scope: !3557)
!3567 = !DILocation(line: 871, column: 32, scope: !3557)
!3568 = !DILocation(line: 871, column: 21, scope: !3557)
!3569 = !DILocation(line: 872, column: 21, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3551, file: !969, line: 872, column: 21)
!3571 = !DILocation(line: 872, column: 24, scope: !3570)
!3572 = !DILocation(line: 872, column: 37, scope: !3570)
!3573 = !DILocation(line: 872, column: 21, scope: !3551)
!3574 = !DILocation(line: 873, column: 31, scope: !3570)
!3575 = !DILocation(line: 873, column: 21, scope: !3570)
!3576 = !DILocation(line: 874, column: 28, scope: !3551)
!3577 = !DILocation(line: 875, column: 21, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3551, file: !969, line: 875, column: 21)
!3579 = !DILocation(line: 875, column: 24, scope: !3578)
!3580 = !DILocation(line: 875, column: 21, scope: !3551)
!3581 = !DILocation(line: 876, column: 31, scope: !3578)
!3582 = !DILocation(line: 876, column: 21, scope: !3578)
!3583 = !DILocation(line: 878, column: 35, scope: !3578)
!3584 = !DILocation(line: 878, column: 38, scope: !3578)
!3585 = !DILocation(line: 878, column: 55, scope: !3578)
!3586 = !DILocation(line: 878, column: 32, scope: !3578)
!3587 = !DILocation(line: 879, column: 13, scope: !3551)
!3588 = !DILocation(line: 880, column: 9, scope: !3540)
!3589 = !DILocation(line: 883, column: 13, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 883, column: 13)
!3591 = !DILocation(line: 883, column: 20, scope: !3590)
!3592 = !DILocation(line: 883, column: 13, scope: !3523)
!3593 = !DILocation(line: 884, column: 21, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !969, line: 884, column: 13)
!3595 = distinct !DILexicalBlock(scope: !3590, file: !969, line: 883, column: 32)
!3596 = !DILocation(line: 884, column: 18, scope: !3594)
!3597 = !DILocation(line: 884, column: 26, scope: !3598)
!3598 = !DILexicalBlockFile(scope: !3599, file: !969, discriminator: 1)
!3599 = distinct !DILexicalBlock(scope: !3594, file: !969, line: 884, column: 13)
!3600 = !DILocation(line: 884, column: 32, scope: !3598)
!3601 = !DILocation(line: 884, column: 35, scope: !3598)
!3602 = !DILocation(line: 884, column: 29, scope: !3598)
!3603 = !DILocation(line: 884, column: 13, scope: !3598)
!3604 = !DILocation(line: 885, column: 43, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !969, line: 885, column: 21)
!3606 = distinct !DILexicalBlock(scope: !3599, file: !969, line: 884, column: 55)
!3607 = !DILocation(line: 885, column: 21, scope: !3605)
!3608 = !DILocation(line: 885, column: 28, scope: !3605)
!3609 = !DILocation(line: 885, column: 21, scope: !3606)
!3610 = !DILocation(line: 886, column: 26, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !969, line: 886, column: 25)
!3612 = distinct !DILexicalBlock(scope: !3605, file: !969, line: 885, column: 48)
!3613 = !DILocation(line: 886, column: 29, scope: !3611)
!3614 = !DILocation(line: 886, column: 34, scope: !3611)
!3615 = !DILocation(line: 886, column: 59, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3611, file: !969, discriminator: 1)
!3617 = !DILocation(line: 886, column: 37, scope: !3616)
!3618 = !DILocation(line: 886, column: 44, scope: !3616)
!3619 = !DILocation(line: 886, column: 63, scope: !3616)
!3620 = !DILocation(line: 886, column: 25, scope: !3616)
!3621 = !DILocation(line: 887, column: 35, scope: !3611)
!3622 = !DILocation(line: 887, column: 25, scope: !3611)
!3623 = !DILocation(line: 888, column: 47, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3612, file: !969, line: 888, column: 25)
!3625 = !DILocation(line: 888, column: 25, scope: !3624)
!3626 = !DILocation(line: 888, column: 32, scope: !3624)
!3627 = !DILocation(line: 888, column: 25, scope: !3612)
!3628 = !DILocation(line: 889, column: 36, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3624, file: !969, line: 888, column: 52)
!3630 = !DILocation(line: 890, column: 49, scope: !3629)
!3631 = !DILocation(line: 890, column: 52, scope: !3629)
!3632 = !DILocation(line: 890, column: 47, scope: !3629)
!3633 = !DILocation(line: 890, column: 36, scope: !3629)
!3634 = !DILocation(line: 891, column: 21, scope: !3629)
!3635 = !DILocation(line: 892, column: 17, scope: !3612)
!3636 = !DILocation(line: 893, column: 13, scope: !3606)
!3637 = !DILocation(line: 884, column: 51, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !3599, file: !969, discriminator: 2)
!3639 = !DILocation(line: 884, column: 13, scope: !3638)
!3640 = distinct !{!3640, !3641}
!3641 = !DILocation(line: 884, column: 13, scope: !3595)
!3642 = !DILocation(line: 894, column: 9, scope: !3595)
!3643 = !DILocation(line: 897, column: 13, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 897, column: 13)
!3645 = !DILocation(line: 897, column: 16, scope: !3644)
!3646 = !DILocation(line: 897, column: 29, scope: !3644)
!3647 = !DILocation(line: 897, column: 13, scope: !3523)
!3648 = !DILocation(line: 898, column: 18, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !969, line: 898, column: 17)
!3650 = distinct !DILexicalBlock(scope: !3644, file: !969, line: 897, column: 51)
!3651 = !DILocation(line: 898, column: 21, scope: !3649)
!3652 = !DILocation(line: 898, column: 26, scope: !3649)
!3653 = !DILocation(line: 898, column: 29, scope: !3654)
!3654 = !DILexicalBlockFile(scope: !3649, file: !969, discriminator: 1)
!3655 = !DILocation(line: 898, column: 33, scope: !3654)
!3656 = !DILocation(line: 898, column: 17, scope: !3654)
!3657 = !DILocation(line: 899, column: 27, scope: !3649)
!3658 = !DILocation(line: 899, column: 17, scope: !3649)
!3659 = !DILocation(line: 900, column: 27, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3650, file: !969, line: 900, column: 17)
!3661 = !DILocation(line: 900, column: 17, scope: !3660)
!3662 = !DILocation(line: 900, column: 20, scope: !3660)
!3663 = !DILocation(line: 900, column: 32, scope: !3660)
!3664 = !DILocation(line: 900, column: 17, scope: !3650)
!3665 = !DILocation(line: 901, column: 31, scope: !3660)
!3666 = !DILocation(line: 901, column: 38, scope: !3660)
!3667 = !DILocation(line: 901, column: 28, scope: !3660)
!3668 = !DILocation(line: 901, column: 17, scope: !3660)
!3669 = !DILocation(line: 902, column: 9, scope: !3650)
!3670 = !DILocation(line: 905, column: 17, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 905, column: 9)
!3672 = !DILocation(line: 905, column: 14, scope: !3671)
!3673 = !DILocation(line: 905, column: 22, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3675, file: !969, discriminator: 1)
!3675 = distinct !DILexicalBlock(scope: !3671, file: !969, line: 905, column: 9)
!3676 = !DILocation(line: 905, column: 28, scope: !3674)
!3677 = !DILocation(line: 905, column: 31, scope: !3674)
!3678 = !DILocation(line: 905, column: 25, scope: !3674)
!3679 = !DILocation(line: 905, column: 9, scope: !3674)
!3680 = !DILocation(line: 906, column: 37, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !969, line: 906, column: 17)
!3682 = distinct !DILexicalBlock(scope: !3675, file: !969, line: 905, column: 51)
!3683 = !DILocation(line: 906, column: 17, scope: !3681)
!3684 = !DILocation(line: 906, column: 33, scope: !3681)
!3685 = !DILocation(line: 906, column: 20, scope: !3681)
!3686 = !DILocation(line: 906, column: 42, scope: !3681)
!3687 = !DILocation(line: 906, column: 17, scope: !3682)
!3688 = !DILocation(line: 907, column: 44, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !969, line: 907, column: 21)
!3690 = distinct !DILexicalBlock(scope: !3681, file: !969, line: 906, column: 48)
!3691 = !DILocation(line: 907, column: 22, scope: !3689)
!3692 = !DILocation(line: 907, column: 29, scope: !3689)
!3693 = !DILocation(line: 907, column: 21, scope: !3690)
!3694 = !DILocation(line: 908, column: 32, scope: !3689)
!3695 = !DILocation(line: 908, column: 21, scope: !3689)
!3696 = !DILocation(line: 909, column: 28, scope: !3690)
!3697 = !DILocation(line: 910, column: 13, scope: !3690)
!3698 = !DILocation(line: 911, column: 9, scope: !3682)
!3699 = !DILocation(line: 905, column: 47, scope: !3700)
!3700 = !DILexicalBlockFile(scope: !3675, file: !969, discriminator: 2)
!3701 = !DILocation(line: 905, column: 9, scope: !3700)
!3702 = distinct !{!3702, !3703}
!3703 = !DILocation(line: 905, column: 9, scope: !3523)
!3704 = !DILocation(line: 914, column: 14, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 914, column: 13)
!3706 = !DILocation(line: 914, column: 17, scope: !3705)
!3707 = !DILocation(line: 914, column: 22, scope: !3705)
!3708 = !DILocation(line: 914, column: 25, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !3705, file: !969, discriminator: 1)
!3710 = !DILocation(line: 914, column: 32, scope: !3709)
!3711 = !DILocation(line: 914, column: 13, scope: !3709)
!3712 = !DILocation(line: 915, column: 24, scope: !3705)
!3713 = !DILocation(line: 915, column: 13, scope: !3705)
!3714 = !DILocation(line: 918, column: 14, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 918, column: 13)
!3716 = !DILocation(line: 918, column: 17, scope: !3715)
!3717 = !DILocation(line: 918, column: 13, scope: !3523)
!3718 = !DILocation(line: 919, column: 23, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3715, file: !969, line: 918, column: 23)
!3720 = !DILocation(line: 920, column: 17, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3719, file: !969, line: 920, column: 17)
!3722 = !DILocation(line: 920, column: 24, scope: !3721)
!3723 = !DILocation(line: 920, column: 17, scope: !3719)
!3724 = !DILocation(line: 921, column: 36, scope: !3721)
!3725 = !DILocation(line: 921, column: 39, scope: !3721)
!3726 = !DILocation(line: 921, column: 50, scope: !3721)
!3727 = !DILocation(line: 921, column: 57, scope: !3721)
!3728 = !DILocation(line: 921, column: 48, scope: !3721)
!3729 = !DILocation(line: 921, column: 69, scope: !3721)
!3730 = !DILocation(line: 921, column: 33, scope: !3721)
!3731 = !DILocation(line: 921, column: 28, scope: !3721)
!3732 = !DILocation(line: 921, column: 17, scope: !3721)
!3733 = !DILocation(line: 922, column: 9, scope: !3719)
!3734 = !DILocation(line: 925, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3523, file: !969, line: 925, column: 13)
!3736 = !DILocation(line: 925, column: 20, scope: !3735)
!3737 = !DILocation(line: 925, column: 13, scope: !3523)
!3738 = !DILocation(line: 926, column: 18, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !969, line: 926, column: 17)
!3740 = distinct !DILexicalBlock(scope: !3735, file: !969, line: 925, column: 32)
!3741 = !DILocation(line: 926, column: 21, scope: !3739)
!3742 = !DILocation(line: 926, column: 26, scope: !3739)
!3743 = !DILocation(line: 926, column: 29, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3739, file: !969, discriminator: 1)
!3745 = !DILocation(line: 926, column: 36, scope: !3744)
!3746 = !DILocation(line: 926, column: 49, scope: !3744)
!3747 = !DILocation(line: 926, column: 17, scope: !3744)
!3748 = !DILocation(line: 927, column: 27, scope: !3739)
!3749 = !DILocation(line: 927, column: 17, scope: !3739)
!3750 = !DILocation(line: 928, column: 17, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3740, file: !969, line: 928, column: 17)
!3752 = !DILocation(line: 928, column: 24, scope: !3751)
!3753 = !DILocation(line: 928, column: 17, scope: !3740)
!3754 = !DILocation(line: 929, column: 28, scope: !3751)
!3755 = !DILocation(line: 929, column: 17, scope: !3751)
!3756 = !DILocation(line: 930, column: 9, scope: !3740)
!3757 = !DILocation(line: 931, column: 5, scope: !3523)
!3758 = !DILocation(line: 858, column: 43, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !3517, file: !969, discriminator: 2)
!3760 = !DILocation(line: 858, column: 5, scope: !3759)
!3761 = distinct !{!3761, !3762}
!3762 = !DILocation(line: 858, column: 5, scope: !3324)
!3763 = !DILocation(line: 933, column: 21, scope: !3324)
!3764 = !DILocation(line: 933, column: 24, scope: !3324)
!3765 = !DILocation(line: 933, column: 43, scope: !3324)
!3766 = !DILocation(line: 933, column: 41, scope: !3324)
!3767 = !DILocation(line: 933, column: 5, scope: !3324)
!3768 = !DILocation(line: 933, column: 8, scope: !3324)
!3769 = !DILocation(line: 933, column: 19, scope: !3324)
!3770 = !DILocation(line: 934, column: 1, scope: !3324)
!3771 = distinct !DISubprogram(name: "count_exponent_bits", scope: !969, file: !969, line: 547, type: !978, isLocal: true, isDefinition: true, scopeLine: 548, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3772 = !DILocalVariable(name: "s", arg: 1, scope: !3771, file: !969, line: 547, type: !980)
!3773 = !DILocation(line: 547, column: 50, scope: !3771)
!3774 = !DILocalVariable(name: "blk", scope: !3771, file: !969, line: 549, type: !966)
!3775 = !DILocation(line: 549, column: 9, scope: !3771)
!3776 = !DILocalVariable(name: "ch", scope: !3771, file: !969, line: 549, type: !966)
!3777 = !DILocation(line: 549, column: 14, scope: !3771)
!3778 = !DILocalVariable(name: "nb_groups", scope: !3771, file: !969, line: 550, type: !966)
!3779 = !DILocation(line: 550, column: 9, scope: !3771)
!3780 = !DILocalVariable(name: "bit_count", scope: !3771, file: !969, line: 550, type: !966)
!3781 = !DILocation(line: 550, column: 20, scope: !3771)
!3782 = !DILocation(line: 552, column: 15, scope: !3771)
!3783 = !DILocation(line: 553, column: 14, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3771, file: !969, line: 553, column: 5)
!3785 = !DILocation(line: 553, column: 10, scope: !3784)
!3786 = !DILocation(line: 553, column: 19, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3788, file: !969, discriminator: 1)
!3788 = distinct !DILexicalBlock(scope: !3784, file: !969, line: 553, column: 5)
!3789 = !DILocation(line: 553, column: 25, scope: !3787)
!3790 = !DILocation(line: 553, column: 28, scope: !3787)
!3791 = !DILocation(line: 553, column: 23, scope: !3787)
!3792 = !DILocation(line: 553, column: 5, scope: !3787)
!3793 = !DILocalVariable(name: "block", scope: !3794, file: !969, line: 554, type: !2271)
!3794 = distinct !DILexicalBlock(scope: !3788, file: !969, line: 553, column: 47)
!3795 = !DILocation(line: 554, column: 19, scope: !3794)
!3796 = !DILocation(line: 554, column: 38, scope: !3794)
!3797 = !DILocation(line: 554, column: 28, scope: !3794)
!3798 = !DILocation(line: 554, column: 31, scope: !3794)
!3799 = !DILocation(line: 555, column: 20, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3794, file: !969, line: 555, column: 9)
!3801 = !DILocation(line: 555, column: 27, scope: !3800)
!3802 = !DILocation(line: 555, column: 19, scope: !3800)
!3803 = !DILocation(line: 555, column: 17, scope: !3800)
!3804 = !DILocation(line: 555, column: 14, scope: !3800)
!3805 = !DILocation(line: 555, column: 39, scope: !3806)
!3806 = !DILexicalBlockFile(scope: !3807, file: !969, discriminator: 1)
!3807 = distinct !DILexicalBlock(scope: !3800, file: !969, line: 555, column: 9)
!3808 = !DILocation(line: 555, column: 45, scope: !3806)
!3809 = !DILocation(line: 555, column: 48, scope: !3806)
!3810 = !DILocation(line: 555, column: 42, scope: !3806)
!3811 = !DILocation(line: 555, column: 9, scope: !3806)
!3812 = !DILocalVariable(name: "exp_strategy", scope: !3813, file: !969, line: 556, type: !966)
!3813 = distinct !DILexicalBlock(scope: !3807, file: !969, line: 555, column: 64)
!3814 = !DILocation(line: 556, column: 17, scope: !3813)
!3815 = !DILocation(line: 556, column: 52, scope: !3813)
!3816 = !DILocation(line: 556, column: 32, scope: !3813)
!3817 = !DILocation(line: 556, column: 48, scope: !3813)
!3818 = !DILocation(line: 556, column: 35, scope: !3813)
!3819 = !DILocalVariable(name: "cpl", scope: !3813, file: !969, line: 557, type: !966)
!3820 = !DILocation(line: 557, column: 17, scope: !3813)
!3821 = !DILocation(line: 557, column: 24, scope: !3813)
!3822 = !DILocation(line: 557, column: 27, scope: !3813)
!3823 = !DILocalVariable(name: "nb_coefs", scope: !3813, file: !969, line: 558, type: !966)
!3824 = !DILocation(line: 558, column: 17, scope: !3813)
!3825 = !DILocation(line: 558, column: 44, scope: !3813)
!3826 = !DILocation(line: 558, column: 28, scope: !3813)
!3827 = !DILocation(line: 558, column: 35, scope: !3813)
!3828 = !DILocation(line: 558, column: 64, scope: !3813)
!3829 = !DILocation(line: 558, column: 50, scope: !3813)
!3830 = !DILocation(line: 558, column: 53, scope: !3813)
!3831 = !DILocation(line: 558, column: 48, scope: !3813)
!3832 = !DILocation(line: 560, column: 17, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3813, file: !969, line: 560, column: 17)
!3834 = !DILocation(line: 560, column: 30, scope: !3833)
!3835 = !DILocation(line: 560, column: 17, scope: !3813)
!3836 = !DILocation(line: 561, column: 17, scope: !3833)
!3837 = !DILocation(line: 563, column: 65, scope: !3813)
!3838 = !DILocation(line: 563, column: 25, scope: !3813)
!3839 = !DILocation(line: 563, column: 49, scope: !3813)
!3840 = !DILocation(line: 563, column: 61, scope: !3813)
!3841 = !DILocation(line: 563, column: 44, scope: !3813)
!3842 = !DILocation(line: 563, column: 23, scope: !3813)
!3843 = !DILocation(line: 564, column: 31, scope: !3813)
!3844 = !DILocation(line: 564, column: 41, scope: !3813)
!3845 = !DILocation(line: 564, column: 28, scope: !3813)
!3846 = !DILocation(line: 564, column: 23, scope: !3813)
!3847 = !DILocation(line: 565, column: 9, scope: !3813)
!3848 = !DILocation(line: 555, column: 60, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3807, file: !969, discriminator: 2)
!3850 = !DILocation(line: 555, column: 9, scope: !3849)
!3851 = distinct !{!3851, !3852}
!3852 = !DILocation(line: 555, column: 9, scope: !3794)
!3853 = !DILocation(line: 566, column: 5, scope: !3794)
!3854 = !DILocation(line: 553, column: 43, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3788, file: !969, discriminator: 2)
!3856 = !DILocation(line: 553, column: 5, scope: !3855)
!3857 = distinct !{!3857, !3858}
!3858 = !DILocation(line: 553, column: 5, scope: !3771)
!3859 = !DILocation(line: 568, column: 12, scope: !3771)
!3860 = !DILocation(line: 568, column: 5, scope: !3771)
!3861 = distinct !DISubprogram(name: "bit_alloc_masking", scope: !969, file: !969, line: 941, type: !2176, isLocal: true, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3862 = !DILocalVariable(name: "s", arg: 1, scope: !3861, file: !969, line: 941, type: !980)
!3863 = !DILocation(line: 941, column: 49, scope: !3861)
!3864 = !DILocalVariable(name: "blk", scope: !3861, file: !969, line: 943, type: !966)
!3865 = !DILocation(line: 943, column: 9, scope: !3861)
!3866 = !DILocalVariable(name: "ch", scope: !3861, file: !969, line: 943, type: !966)
!3867 = !DILocation(line: 943, column: 14, scope: !3861)
!3868 = !DILocation(line: 945, column: 14, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3861, file: !969, line: 945, column: 5)
!3870 = !DILocation(line: 945, column: 10, scope: !3869)
!3871 = !DILocation(line: 945, column: 19, scope: !3872)
!3872 = !DILexicalBlockFile(scope: !3873, file: !969, discriminator: 1)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !969, line: 945, column: 5)
!3874 = !DILocation(line: 945, column: 25, scope: !3872)
!3875 = !DILocation(line: 945, column: 28, scope: !3872)
!3876 = !DILocation(line: 945, column: 23, scope: !3872)
!3877 = !DILocation(line: 945, column: 5, scope: !3872)
!3878 = !DILocalVariable(name: "block", scope: !3879, file: !969, line: 946, type: !2271)
!3879 = distinct !DILexicalBlock(scope: !3873, file: !969, line: 945, column: 47)
!3880 = !DILocation(line: 946, column: 19, scope: !3879)
!3881 = !DILocation(line: 946, column: 38, scope: !3879)
!3882 = !DILocation(line: 946, column: 28, scope: !3879)
!3883 = !DILocation(line: 946, column: 31, scope: !3879)
!3884 = !DILocation(line: 947, column: 20, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3879, file: !969, line: 947, column: 9)
!3886 = !DILocation(line: 947, column: 27, scope: !3885)
!3887 = !DILocation(line: 947, column: 19, scope: !3885)
!3888 = !DILocation(line: 947, column: 17, scope: !3885)
!3889 = !DILocation(line: 947, column: 14, scope: !3885)
!3890 = !DILocation(line: 947, column: 39, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !3892, file: !969, discriminator: 1)
!3892 = distinct !DILexicalBlock(scope: !3885, file: !969, line: 947, column: 9)
!3893 = !DILocation(line: 947, column: 45, scope: !3891)
!3894 = !DILocation(line: 947, column: 48, scope: !3891)
!3895 = !DILocation(line: 947, column: 42, scope: !3891)
!3896 = !DILocation(line: 947, column: 9, scope: !3891)
!3897 = !DILocation(line: 951, column: 37, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !969, line: 951, column: 17)
!3899 = distinct !DILexicalBlock(scope: !3892, file: !969, line: 947, column: 64)
!3900 = !DILocation(line: 951, column: 17, scope: !3898)
!3901 = !DILocation(line: 951, column: 33, scope: !3898)
!3902 = !DILocation(line: 951, column: 20, scope: !3898)
!3903 = !DILocation(line: 951, column: 42, scope: !3898)
!3904 = !DILocation(line: 951, column: 17, scope: !3899)
!3905 = !DILocation(line: 952, column: 54, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3898, file: !969, line: 951, column: 48)
!3907 = !DILocation(line: 952, column: 43, scope: !3906)
!3908 = !DILocation(line: 952, column: 50, scope: !3906)
!3909 = !DILocation(line: 952, column: 73, scope: !3906)
!3910 = !DILocation(line: 952, column: 59, scope: !3906)
!3911 = !DILocation(line: 952, column: 62, scope: !3906)
!3912 = !DILocation(line: 953, column: 59, scope: !3906)
!3913 = !DILocation(line: 953, column: 43, scope: !3906)
!3914 = !DILocation(line: 953, column: 50, scope: !3906)
!3915 = !DILocation(line: 953, column: 75, scope: !3906)
!3916 = !DILocation(line: 953, column: 64, scope: !3906)
!3917 = !DILocation(line: 953, column: 71, scope: !3906)
!3918 = !DILocation(line: 954, column: 59, scope: !3906)
!3919 = !DILocation(line: 954, column: 43, scope: !3906)
!3920 = !DILocation(line: 954, column: 50, scope: !3906)
!3921 = !DILocation(line: 952, column: 17, scope: !3906)
!3922 = !DILocation(line: 955, column: 45, scope: !3906)
!3923 = !DILocation(line: 955, column: 48, scope: !3906)
!3924 = !DILocation(line: 955, column: 75, scope: !3906)
!3925 = !DILocation(line: 955, column: 59, scope: !3906)
!3926 = !DILocation(line: 955, column: 66, scope: !3906)
!3927 = !DILocation(line: 956, column: 58, scope: !3906)
!3928 = !DILocation(line: 956, column: 44, scope: !3906)
!3929 = !DILocation(line: 956, column: 47, scope: !3906)
!3930 = !DILocation(line: 956, column: 79, scope: !3906)
!3931 = !DILocation(line: 956, column: 63, scope: !3906)
!3932 = !DILocation(line: 956, column: 70, scope: !3906)
!3933 = !DILocation(line: 957, column: 83, scope: !3906)
!3934 = !DILocation(line: 957, column: 65, scope: !3906)
!3935 = !DILocation(line: 957, column: 68, scope: !3906)
!3936 = !DILocation(line: 957, column: 44, scope: !3906)
!3937 = !DILocation(line: 958, column: 44, scope: !3906)
!3938 = !DILocation(line: 958, column: 50, scope: !3906)
!3939 = !DILocation(line: 958, column: 53, scope: !3906)
!3940 = !DILocation(line: 958, column: 47, scope: !3906)
!3941 = !DILocation(line: 960, column: 56, scope: !3906)
!3942 = !DILocation(line: 960, column: 44, scope: !3906)
!3943 = !DILocation(line: 960, column: 51, scope: !3906)
!3944 = !DILocation(line: 955, column: 17, scope: !3906)
!3945 = !DILocation(line: 961, column: 13, scope: !3906)
!3946 = !DILocation(line: 962, column: 9, scope: !3899)
!3947 = !DILocation(line: 947, column: 60, scope: !3948)
!3948 = !DILexicalBlockFile(scope: !3892, file: !969, discriminator: 2)
!3949 = !DILocation(line: 947, column: 9, scope: !3948)
!3950 = distinct !{!3950, !3951}
!3951 = !DILocation(line: 947, column: 9, scope: !3879)
!3952 = !DILocation(line: 963, column: 5, scope: !3879)
!3953 = !DILocation(line: 945, column: 43, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3873, file: !969, discriminator: 2)
!3955 = !DILocation(line: 945, column: 5, scope: !3954)
!3956 = distinct !{!3956, !3957}
!3957 = !DILocation(line: 945, column: 5, scope: !3861)
!3958 = !DILocation(line: 964, column: 1, scope: !3861)
!3959 = distinct !DISubprogram(name: "cbr_bit_allocation", scope: !969, file: !969, line: 1095, type: !978, isLocal: true, isDefinition: true, scopeLine: 1096, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!3960 = !DILocalVariable(name: "s", arg: 1, scope: !3959, file: !969, line: 1095, type: !980)
!3961 = !DILocation(line: 1095, column: 49, scope: !3959)
!3962 = !DILocalVariable(name: "ch", scope: !3959, file: !969, line: 1097, type: !966)
!3963 = !DILocation(line: 1097, column: 9, scope: !3959)
!3964 = !DILocalVariable(name: "bits_left", scope: !3959, file: !969, line: 1098, type: !966)
!3965 = !DILocation(line: 1098, column: 9, scope: !3959)
!3966 = !DILocalVariable(name: "snr_offset", scope: !3959, file: !969, line: 1099, type: !966)
!3967 = !DILocation(line: 1099, column: 9, scope: !3959)
!3968 = !DILocalVariable(name: "snr_incr", scope: !3959, file: !969, line: 1099, type: !966)
!3969 = !DILocation(line: 1099, column: 21, scope: !3959)
!3970 = !DILocation(line: 1101, column: 21, scope: !3959)
!3971 = !DILocation(line: 1101, column: 24, scope: !3959)
!3972 = !DILocation(line: 1101, column: 19, scope: !3959)
!3973 = !DILocation(line: 1101, column: 38, scope: !3959)
!3974 = !DILocation(line: 1101, column: 41, scope: !3959)
!3975 = !DILocation(line: 1101, column: 54, scope: !3959)
!3976 = !DILocation(line: 1101, column: 57, scope: !3959)
!3977 = !DILocation(line: 1101, column: 52, scope: !3959)
!3978 = !DILocation(line: 1101, column: 35, scope: !3959)
!3979 = !DILocation(line: 1101, column: 15, scope: !3959)
!3980 = !DILocation(line: 1102, column: 9, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1102, column: 9)
!3982 = !DILocation(line: 1102, column: 19, scope: !3981)
!3983 = !DILocation(line: 1102, column: 9, scope: !3959)
!3984 = !DILocation(line: 1103, column: 9, scope: !3981)
!3985 = !DILocation(line: 1105, column: 18, scope: !3959)
!3986 = !DILocation(line: 1105, column: 21, scope: !3959)
!3987 = !DILocation(line: 1105, column: 39, scope: !3959)
!3988 = !DILocation(line: 1105, column: 16, scope: !3959)
!3989 = !DILocation(line: 1109, column: 10, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1109, column: 9)
!3991 = !DILocation(line: 1109, column: 23, scope: !3990)
!3992 = !DILocation(line: 1109, column: 26, scope: !3990)
!3993 = !DILocation(line: 1109, column: 21, scope: !3990)
!3994 = !DILocation(line: 1109, column: 46, scope: !3990)
!3995 = !DILocation(line: 1109, column: 9, scope: !3959)
!3996 = !DILocation(line: 1110, column: 23, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !969, line: 1110, column: 13)
!3998 = distinct !DILexicalBlock(scope: !3990, file: !969, line: 1109, column: 55)
!3999 = !DILocation(line: 1110, column: 13, scope: !3997)
!4000 = !DILocation(line: 1110, column: 35, scope: !3997)
!4001 = !DILocation(line: 1110, column: 32, scope: !3997)
!4002 = !DILocation(line: 1110, column: 13, scope: !3998)
!4003 = !DILocation(line: 1111, column: 13, scope: !3997)
!4004 = !DILocation(line: 1112, column: 5, scope: !3998)
!4005 = !DILocation(line: 1114, column: 5, scope: !3959)
!4006 = !DILocation(line: 1114, column: 12, scope: !4007)
!4007 = !DILexicalBlockFile(scope: !3959, file: !969, discriminator: 1)
!4008 = !DILocation(line: 1114, column: 23, scope: !4007)
!4009 = !DILocation(line: 1114, column: 28, scope: !4007)
!4010 = !DILocation(line: 1115, column: 22, scope: !3959)
!4011 = !DILocation(line: 1115, column: 25, scope: !3959)
!4012 = !DILocation(line: 1115, column: 12, scope: !3959)
!4013 = !DILocation(line: 1115, column: 39, scope: !3959)
!4014 = !DILocation(line: 1115, column: 37, scope: !3959)
!4015 = !DILocation(line: 1114, column: 5, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !3959, file: !969, discriminator: 2)
!4017 = !DILocation(line: 1116, column: 20, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1115, column: 50)
!4019 = !DILocation(line: 1114, column: 5, scope: !4020)
!4020 = !DILexicalBlockFile(scope: !3959, file: !969, discriminator: 3)
!4021 = distinct !{!4021, !4005}
!4022 = !DILocation(line: 1118, column: 9, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1118, column: 9)
!4024 = !DILocation(line: 1118, column: 20, scope: !4023)
!4025 = !DILocation(line: 1118, column: 9, scope: !3959)
!4026 = !DILocation(line: 1119, column: 9, scope: !4023)
!4027 = !DILocation(line: 1121, column: 5, scope: !3959)
!4028 = distinct !{!4028, !4027}
!4029 = !DILocalVariable(name: "SWAP_tmp", scope: !4030, file: !969, line: 1121, type: !1179)
!4030 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1121, column: 7)
!4031 = !DILocation(line: 1121, column: 18, scope: !4030)
!4032 = !DILocation(line: 1121, column: 28, scope: !4033)
!4033 = !DILexicalBlockFile(scope: !4030, file: !969, discriminator: 1)
!4034 = !DILocation(line: 1121, column: 31, scope: !4033)
!4035 = !DILocation(line: 1121, column: 18, scope: !4033)
!4036 = !DILocation(line: 1121, column: 60, scope: !4033)
!4037 = !DILocation(line: 1121, column: 63, scope: !4033)
!4038 = !DILocation(line: 1121, column: 44, scope: !4033)
!4039 = !DILocation(line: 1121, column: 47, scope: !4033)
!4040 = !DILocation(line: 1121, column: 58, scope: !4033)
!4041 = !DILocation(line: 1121, column: 90, scope: !4033)
!4042 = !DILocation(line: 1121, column: 75, scope: !4033)
!4043 = !DILocation(line: 1121, column: 78, scope: !4033)
!4044 = !DILocation(line: 1121, column: 88, scope: !4033)
!4045 = !DILocation(line: 1121, column: 99, scope: !4033)
!4046 = !DILocation(line: 1122, column: 19, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1122, column: 5)
!4048 = !DILocation(line: 1122, column: 10, scope: !4047)
!4049 = !DILocation(line: 1122, column: 25, scope: !4050)
!4050 = !DILexicalBlockFile(scope: !4051, file: !969, discriminator: 1)
!4051 = distinct !DILexicalBlock(scope: !4047, file: !969, line: 1122, column: 5)
!4052 = !DILocation(line: 1122, column: 34, scope: !4050)
!4053 = !DILocation(line: 1122, column: 5, scope: !4050)
!4054 = !DILocation(line: 1123, column: 9, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4051, file: !969, line: 1122, column: 55)
!4056 = !DILocation(line: 1123, column: 16, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4055, file: !969, discriminator: 1)
!4058 = !DILocation(line: 1123, column: 29, scope: !4057)
!4059 = !DILocation(line: 1123, column: 27, scope: !4057)
!4060 = !DILocation(line: 1123, column: 38, scope: !4057)
!4061 = !DILocation(line: 1123, column: 46, scope: !4057)
!4062 = !DILocation(line: 1124, column: 26, scope: !4055)
!4063 = !DILocation(line: 1124, column: 29, scope: !4055)
!4064 = !DILocation(line: 1124, column: 42, scope: !4055)
!4065 = !DILocation(line: 1124, column: 40, scope: !4055)
!4066 = !DILocation(line: 1124, column: 16, scope: !4055)
!4067 = !DILocation(line: 1124, column: 55, scope: !4055)
!4068 = !DILocation(line: 1124, column: 52, scope: !4055)
!4069 = !DILocation(line: 1123, column: 9, scope: !4070)
!4070 = !DILexicalBlockFile(scope: !4055, file: !969, discriminator: 2)
!4071 = !DILocation(line: 1125, column: 27, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4055, file: !969, line: 1124, column: 66)
!4073 = !DILocation(line: 1125, column: 24, scope: !4072)
!4074 = !DILocation(line: 1126, column: 13, scope: !4072)
!4075 = distinct !{!4075, !4074}
!4076 = !DILocalVariable(name: "SWAP_tmp", scope: !4077, file: !969, line: 1126, type: !1179)
!4077 = distinct !DILexicalBlock(scope: !4072, file: !969, line: 1126, column: 15)
!4078 = !DILocation(line: 1126, column: 26, scope: !4077)
!4079 = !DILocation(line: 1126, column: 36, scope: !4080)
!4080 = !DILexicalBlockFile(scope: !4077, file: !969, discriminator: 1)
!4081 = !DILocation(line: 1126, column: 39, scope: !4080)
!4082 = !DILocation(line: 1126, column: 26, scope: !4080)
!4083 = !DILocation(line: 1126, column: 68, scope: !4080)
!4084 = !DILocation(line: 1126, column: 71, scope: !4080)
!4085 = !DILocation(line: 1126, column: 52, scope: !4080)
!4086 = !DILocation(line: 1126, column: 55, scope: !4080)
!4087 = !DILocation(line: 1126, column: 66, scope: !4080)
!4088 = !DILocation(line: 1126, column: 98, scope: !4080)
!4089 = !DILocation(line: 1126, column: 83, scope: !4080)
!4090 = !DILocation(line: 1126, column: 86, scope: !4080)
!4091 = !DILocation(line: 1126, column: 96, scope: !4080)
!4092 = !DILocation(line: 1126, column: 107, scope: !4080)
!4093 = !DILocation(line: 1123, column: 9, scope: !4094)
!4094 = !DILexicalBlockFile(scope: !4055, file: !969, discriminator: 3)
!4095 = distinct !{!4095, !4054}
!4096 = !DILocation(line: 1128, column: 5, scope: !4055)
!4097 = !DILocation(line: 1122, column: 48, scope: !4098)
!4098 = !DILexicalBlockFile(scope: !4051, file: !969, discriminator: 2)
!4099 = !DILocation(line: 1122, column: 5, scope: !4098)
!4100 = distinct !{!4100, !4101}
!4101 = !DILocation(line: 1122, column: 5, scope: !3959)
!4102 = !DILocation(line: 1129, column: 5, scope: !3959)
!4103 = distinct !{!4103, !4102}
!4104 = !DILocalVariable(name: "SWAP_tmp", scope: !4105, file: !969, line: 1129, type: !1179)
!4105 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1129, column: 7)
!4106 = !DILocation(line: 1129, column: 18, scope: !4105)
!4107 = !DILocation(line: 1129, column: 28, scope: !4108)
!4108 = !DILexicalBlockFile(scope: !4105, file: !969, discriminator: 1)
!4109 = !DILocation(line: 1129, column: 31, scope: !4108)
!4110 = !DILocation(line: 1129, column: 18, scope: !4108)
!4111 = !DILocation(line: 1129, column: 60, scope: !4108)
!4112 = !DILocation(line: 1129, column: 63, scope: !4108)
!4113 = !DILocation(line: 1129, column: 44, scope: !4108)
!4114 = !DILocation(line: 1129, column: 47, scope: !4108)
!4115 = !DILocation(line: 1129, column: 58, scope: !4108)
!4116 = !DILocation(line: 1129, column: 90, scope: !4108)
!4117 = !DILocation(line: 1129, column: 75, scope: !4108)
!4118 = !DILocation(line: 1129, column: 78, scope: !4108)
!4119 = !DILocation(line: 1129, column: 88, scope: !4108)
!4120 = !DILocation(line: 1129, column: 99, scope: !4108)
!4121 = !DILocation(line: 1130, column: 21, scope: !3959)
!4122 = !DILocation(line: 1130, column: 5, scope: !3959)
!4123 = !DILocation(line: 1132, column: 28, scope: !3959)
!4124 = !DILocation(line: 1132, column: 39, scope: !3959)
!4125 = !DILocation(line: 1132, column: 5, scope: !3959)
!4126 = !DILocation(line: 1132, column: 8, scope: !3959)
!4127 = !DILocation(line: 1132, column: 26, scope: !3959)
!4128 = !DILocation(line: 1133, column: 16, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !3959, file: !969, line: 1133, column: 5)
!4130 = !DILocation(line: 1133, column: 19, scope: !4129)
!4131 = !DILocation(line: 1133, column: 15, scope: !4129)
!4132 = !DILocation(line: 1133, column: 13, scope: !4129)
!4133 = !DILocation(line: 1133, column: 10, scope: !4129)
!4134 = !DILocation(line: 1133, column: 27, scope: !4135)
!4135 = !DILexicalBlockFile(scope: !4136, file: !969, discriminator: 1)
!4136 = distinct !DILexicalBlock(scope: !4129, file: !969, line: 1133, column: 5)
!4137 = !DILocation(line: 1133, column: 33, scope: !4135)
!4138 = !DILocation(line: 1133, column: 36, scope: !4135)
!4139 = !DILocation(line: 1133, column: 30, scope: !4135)
!4140 = !DILocation(line: 1133, column: 5, scope: !4135)
!4141 = !DILocation(line: 1134, column: 34, scope: !4136)
!4142 = !DILocation(line: 1134, column: 45, scope: !4136)
!4143 = !DILocation(line: 1134, column: 28, scope: !4136)
!4144 = !DILocation(line: 1134, column: 9, scope: !4136)
!4145 = !DILocation(line: 1134, column: 12, scope: !4136)
!4146 = !DILocation(line: 1134, column: 32, scope: !4136)
!4147 = !DILocation(line: 1133, column: 48, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4136, file: !969, discriminator: 2)
!4149 = !DILocation(line: 1133, column: 5, scope: !4148)
!4150 = distinct !{!4150, !4151}
!4151 = !DILocation(line: 1133, column: 5, scope: !3959)
!4152 = !DILocation(line: 1136, column: 5, scope: !3959)
!4153 = !DILocation(line: 1137, column: 1, scope: !3959)
!4154 = distinct !DISubprogram(name: "ff_ac3_quantize_mantissas", scope: !969, file: !969, line: 1300, type: !2176, isLocal: false, isDefinition: true, scopeLine: 1301, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!4155 = !DILocalVariable(name: "s", arg: 1, scope: !4154, file: !969, line: 1300, type: !980)
!4156 = !DILocation(line: 1300, column: 50, scope: !4154)
!4157 = !DILocalVariable(name: "blk", scope: !4154, file: !969, line: 1302, type: !966)
!4158 = !DILocation(line: 1302, column: 9, scope: !4154)
!4159 = !DILocalVariable(name: "ch", scope: !4154, file: !969, line: 1302, type: !966)
!4160 = !DILocation(line: 1302, column: 14, scope: !4154)
!4161 = !DILocalVariable(name: "ch0", scope: !4154, file: !969, line: 1302, type: !966)
!4162 = !DILocation(line: 1302, column: 18, scope: !4154)
!4163 = !DILocalVariable(name: "got_cpl", scope: !4154, file: !969, line: 1302, type: !966)
!4164 = !DILocation(line: 1302, column: 25, scope: !4154)
!4165 = !DILocation(line: 1304, column: 14, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4154, file: !969, line: 1304, column: 5)
!4167 = !DILocation(line: 1304, column: 10, scope: !4166)
!4168 = !DILocation(line: 1304, column: 19, scope: !4169)
!4169 = !DILexicalBlockFile(scope: !4170, file: !969, discriminator: 1)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !969, line: 1304, column: 5)
!4171 = !DILocation(line: 1304, column: 25, scope: !4169)
!4172 = !DILocation(line: 1304, column: 28, scope: !4169)
!4173 = !DILocation(line: 1304, column: 23, scope: !4169)
!4174 = !DILocation(line: 1304, column: 5, scope: !4169)
!4175 = !DILocalVariable(name: "block", scope: !4176, file: !969, line: 1305, type: !2271)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !969, line: 1304, column: 47)
!4177 = !DILocation(line: 1305, column: 19, scope: !4176)
!4178 = !DILocation(line: 1305, column: 38, scope: !4176)
!4179 = !DILocation(line: 1305, column: 28, scope: !4176)
!4180 = !DILocation(line: 1305, column: 31, scope: !4176)
!4181 = !DILocalVariable(name: "m", scope: !4176, file: !969, line: 1306, type: !4182)
!4182 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3Mant", file: !969, line: 52, baseType: !4183)
!4183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3Mant", file: !969, line: 49, size: 320, align: 64, elements: !4184)
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "qmant1_ptr", scope: !4183, file: !969, line: 50, baseType: !1860, size: 64, align: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "qmant2_ptr", scope: !4183, file: !969, line: 50, baseType: !1860, size: 64, align: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "qmant4_ptr", scope: !4183, file: !969, line: 50, baseType: !1860, size: 64, align: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "mant1_cnt", scope: !4183, file: !969, line: 51, baseType: !966, size: 32, align: 32, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "mant2_cnt", scope: !4183, file: !969, line: 51, baseType: !966, size: 32, align: 32, offset: 224)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "mant4_cnt", scope: !4183, file: !969, line: 51, baseType: !966, size: 32, align: 32, offset: 256)
!4191 = !DILocation(line: 1306, column: 17, scope: !4176)
!4192 = !DILocation(line: 1308, column: 20, scope: !4176)
!4193 = !DILocation(line: 1308, column: 27, scope: !4176)
!4194 = !DILocation(line: 1308, column: 19, scope: !4176)
!4195 = !DILocation(line: 1308, column: 17, scope: !4176)
!4196 = !DILocation(line: 1309, column: 17, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4176, file: !969, line: 1309, column: 9)
!4198 = !DILocation(line: 1309, column: 14, scope: !4197)
!4199 = !DILocation(line: 1309, column: 22, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !4201, file: !969, discriminator: 1)
!4201 = distinct !DILexicalBlock(scope: !4197, file: !969, line: 1309, column: 9)
!4202 = !DILocation(line: 1309, column: 28, scope: !4200)
!4203 = !DILocation(line: 1309, column: 31, scope: !4200)
!4204 = !DILocation(line: 1309, column: 25, scope: !4200)
!4205 = !DILocation(line: 1309, column: 9, scope: !4200)
!4206 = !DILocation(line: 1310, column: 18, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !969, line: 1310, column: 17)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !969, line: 1309, column: 47)
!4209 = !DILocation(line: 1310, column: 26, scope: !4207)
!4210 = !DILocation(line: 1310, column: 29, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !4207, file: !969, discriminator: 1)
!4212 = !DILocation(line: 1310, column: 32, scope: !4211)
!4213 = !DILocation(line: 1310, column: 36, scope: !4211)
!4214 = !DILocation(line: 1310, column: 61, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !4207, file: !969, discriminator: 2)
!4216 = !DILocation(line: 1310, column: 63, scope: !4215)
!4217 = !DILocation(line: 1310, column: 39, scope: !4215)
!4218 = !DILocation(line: 1310, column: 46, scope: !4215)
!4219 = !DILocation(line: 1310, column: 17, scope: !4215)
!4220 = !DILocation(line: 1311, column: 23, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4207, file: !969, line: 1310, column: 68)
!4222 = !DILocation(line: 1311, column: 26, scope: !4221)
!4223 = !DILocation(line: 1311, column: 21, scope: !4221)
!4224 = !DILocation(line: 1312, column: 20, scope: !4221)
!4225 = !DILocation(line: 1313, column: 25, scope: !4221)
!4226 = !DILocation(line: 1314, column: 13, scope: !4221)
!4227 = !DILocation(line: 1315, column: 61, scope: !4208)
!4228 = !DILocation(line: 1315, column: 43, scope: !4208)
!4229 = !DILocation(line: 1315, column: 50, scope: !4208)
!4230 = !DILocation(line: 1316, column: 80, scope: !4208)
!4231 = !DILocation(line: 1316, column: 39, scope: !4208)
!4232 = !DILocation(line: 1316, column: 70, scope: !4208)
!4233 = !DILocation(line: 1316, column: 49, scope: !4208)
!4234 = !DILocation(line: 1316, column: 66, scope: !4208)
!4235 = !DILocation(line: 1316, column: 52, scope: !4208)
!4236 = !DILocation(line: 1316, column: 42, scope: !4208)
!4237 = !DILocation(line: 1316, column: 76, scope: !4208)
!4238 = !DILocation(line: 1317, column: 54, scope: !4208)
!4239 = !DILocation(line: 1317, column: 39, scope: !4208)
!4240 = !DILocation(line: 1317, column: 50, scope: !4208)
!4241 = !DILocation(line: 1317, column: 42, scope: !4208)
!4242 = !DILocation(line: 1317, column: 73, scope: !4208)
!4243 = !DILocation(line: 1317, column: 60, scope: !4208)
!4244 = !DILocation(line: 1317, column: 67, scope: !4208)
!4245 = !DILocation(line: 1318, column: 53, scope: !4208)
!4246 = !DILocation(line: 1318, column: 39, scope: !4208)
!4247 = !DILocation(line: 1318, column: 42, scope: !4208)
!4248 = !DILocation(line: 1318, column: 74, scope: !4208)
!4249 = !DILocation(line: 1318, column: 58, scope: !4208)
!4250 = !DILocation(line: 1318, column: 65, scope: !4208)
!4251 = !DILocation(line: 1315, column: 13, scope: !4208)
!4252 = !DILocation(line: 1319, column: 17, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4208, file: !969, line: 1319, column: 17)
!4254 = !DILocation(line: 1319, column: 20, scope: !4253)
!4255 = !DILocation(line: 1319, column: 17, scope: !4208)
!4256 = !DILocation(line: 1320, column: 22, scope: !4253)
!4257 = !DILocation(line: 1320, column: 20, scope: !4253)
!4258 = !DILocation(line: 1320, column: 17, scope: !4253)
!4259 = !DILocation(line: 1321, column: 9, scope: !4208)
!4260 = !DILocation(line: 1309, column: 43, scope: !4261)
!4261 = !DILexicalBlockFile(scope: !4201, file: !969, discriminator: 2)
!4262 = !DILocation(line: 1309, column: 9, scope: !4261)
!4263 = distinct !{!4263, !4264}
!4264 = !DILocation(line: 1309, column: 9, scope: !4176)
!4265 = !DILocation(line: 1322, column: 5, scope: !4176)
!4266 = !DILocation(line: 1304, column: 43, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !4170, file: !969, discriminator: 2)
!4268 = !DILocation(line: 1304, column: 5, scope: !4267)
!4269 = distinct !{!4269, !4270}
!4270 = !DILocation(line: 1304, column: 5, scope: !4154)
!4271 = !DILocation(line: 1323, column: 1, scope: !4154)
!4272 = distinct !DISubprogram(name: "quantize_mantissas_blk_ch", scope: !969, file: !969, line: 1206, type: !4273, isLocal: true, isDefinition: true, scopeLine: 1210, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{null, !4275, !964, !1179, !1179, !1860, !966, !966}
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64, align: 64)
!4276 = !DILocalVariable(name: "s", arg: 1, scope: !4272, file: !969, line: 1206, type: !4275)
!4277 = !DILocation(line: 1206, column: 48, scope: !4272)
!4278 = !DILocalVariable(name: "fixed_coef", arg: 2, scope: !4272, file: !969, line: 1206, type: !964)
!4279 = !DILocation(line: 1206, column: 60, scope: !4272)
!4280 = !DILocalVariable(name: "exp", arg: 3, scope: !4272, file: !969, line: 1207, type: !1179)
!4281 = !DILocation(line: 1207, column: 48, scope: !4272)
!4282 = !DILocalVariable(name: "bap", arg: 4, scope: !4272, file: !969, line: 1207, type: !1179)
!4283 = !DILocation(line: 1207, column: 62, scope: !4272)
!4284 = !DILocalVariable(name: "qmant", arg: 5, scope: !4272, file: !969, line: 1208, type: !1860)
!4285 = !DILocation(line: 1208, column: 48, scope: !4272)
!4286 = !DILocalVariable(name: "start_freq", arg: 6, scope: !4272, file: !969, line: 1208, type: !966)
!4287 = !DILocation(line: 1208, column: 59, scope: !4272)
!4288 = !DILocalVariable(name: "end_freq", arg: 7, scope: !4272, file: !969, line: 1209, type: !966)
!4289 = !DILocation(line: 1209, column: 43, scope: !4272)
!4290 = !DILocalVariable(name: "i", scope: !4272, file: !969, line: 1211, type: !966)
!4291 = !DILocation(line: 1211, column: 9, scope: !4272)
!4292 = !DILocation(line: 1213, column: 14, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4272, file: !969, line: 1213, column: 5)
!4294 = !DILocation(line: 1213, column: 12, scope: !4293)
!4295 = !DILocation(line: 1213, column: 10, scope: !4293)
!4296 = !DILocation(line: 1213, column: 26, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !4298, file: !969, discriminator: 1)
!4298 = distinct !DILexicalBlock(scope: !4293, file: !969, line: 1213, column: 5)
!4299 = !DILocation(line: 1213, column: 30, scope: !4297)
!4300 = !DILocation(line: 1213, column: 28, scope: !4297)
!4301 = !DILocation(line: 1213, column: 5, scope: !4297)
!4302 = !DILocalVariable(name: "c", scope: !4303, file: !969, line: 1214, type: !966)
!4303 = distinct !DILexicalBlock(scope: !4298, file: !969, line: 1213, column: 45)
!4304 = !DILocation(line: 1214, column: 13, scope: !4303)
!4305 = !DILocation(line: 1214, column: 28, scope: !4303)
!4306 = !DILocation(line: 1214, column: 17, scope: !4303)
!4307 = !DILocalVariable(name: "e", scope: !4303, file: !969, line: 1215, type: !966)
!4308 = !DILocation(line: 1215, column: 13, scope: !4303)
!4309 = !DILocation(line: 1215, column: 21, scope: !4303)
!4310 = !DILocation(line: 1215, column: 17, scope: !4303)
!4311 = !DILocalVariable(name: "v", scope: !4303, file: !969, line: 1216, type: !966)
!4312 = !DILocation(line: 1216, column: 13, scope: !4303)
!4313 = !DILocation(line: 1216, column: 21, scope: !4303)
!4314 = !DILocation(line: 1216, column: 17, scope: !4303)
!4315 = !DILocation(line: 1217, column: 13, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4303, file: !969, line: 1217, column: 13)
!4317 = !DILocation(line: 1217, column: 13, scope: !4303)
!4318 = !DILocation(line: 1218, column: 17, scope: !4316)
!4319 = !DILocation(line: 1218, column: 9, scope: !4316)
!4320 = !DILocation(line: 1220, column: 27, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !969, line: 1218, column: 20)
!4322 = !DILocation(line: 1220, column: 30, scope: !4321)
!4323 = !DILocation(line: 1220, column: 17, scope: !4321)
!4324 = !DILocation(line: 1220, column: 15, scope: !4321)
!4325 = !DILocation(line: 1221, column: 21, scope: !4321)
!4326 = !DILocation(line: 1221, column: 24, scope: !4321)
!4327 = !DILocation(line: 1221, column: 13, scope: !4321)
!4328 = !DILocation(line: 1223, column: 40, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4321, file: !969, line: 1221, column: 35)
!4330 = !DILocation(line: 1223, column: 34, scope: !4329)
!4331 = !DILocation(line: 1223, column: 17, scope: !4329)
!4332 = !DILocation(line: 1223, column: 20, scope: !4329)
!4333 = !DILocation(line: 1223, column: 31, scope: !4329)
!4334 = !DILocation(line: 1224, column: 25, scope: !4329)
!4335 = !DILocation(line: 1224, column: 23, scope: !4329)
!4336 = !DILocation(line: 1224, column: 19, scope: !4329)
!4337 = !DILocation(line: 1225, column: 17, scope: !4329)
!4338 = !DILocation(line: 1225, column: 20, scope: !4329)
!4339 = !DILocation(line: 1225, column: 30, scope: !4329)
!4340 = !DILocation(line: 1226, column: 17, scope: !4329)
!4341 = !DILocation(line: 1228, column: 39, scope: !4329)
!4342 = !DILocation(line: 1228, column: 37, scope: !4329)
!4343 = !DILocation(line: 1228, column: 18, scope: !4329)
!4344 = !DILocation(line: 1228, column: 21, scope: !4329)
!4345 = !DILocation(line: 1228, column: 32, scope: !4329)
!4346 = !DILocation(line: 1229, column: 17, scope: !4329)
!4347 = !DILocation(line: 1229, column: 20, scope: !4329)
!4348 = !DILocation(line: 1229, column: 30, scope: !4329)
!4349 = !DILocation(line: 1230, column: 19, scope: !4329)
!4350 = !DILocation(line: 1231, column: 17, scope: !4329)
!4351 = !DILocation(line: 1233, column: 35, scope: !4329)
!4352 = !DILocation(line: 1233, column: 18, scope: !4329)
!4353 = !DILocation(line: 1233, column: 21, scope: !4329)
!4354 = !DILocation(line: 1233, column: 32, scope: !4329)
!4355 = !DILocation(line: 1234, column: 17, scope: !4329)
!4356 = !DILocation(line: 1234, column: 20, scope: !4329)
!4357 = !DILocation(line: 1234, column: 30, scope: !4329)
!4358 = !DILocation(line: 1235, column: 19, scope: !4329)
!4359 = !DILocation(line: 1236, column: 17, scope: !4329)
!4360 = !DILocation(line: 1238, column: 13, scope: !4321)
!4361 = !DILocation(line: 1240, column: 27, scope: !4321)
!4362 = !DILocation(line: 1240, column: 30, scope: !4321)
!4363 = !DILocation(line: 1240, column: 17, scope: !4321)
!4364 = !DILocation(line: 1240, column: 15, scope: !4321)
!4365 = !DILocation(line: 1241, column: 21, scope: !4321)
!4366 = !DILocation(line: 1241, column: 24, scope: !4321)
!4367 = !DILocation(line: 1241, column: 13, scope: !4321)
!4368 = !DILocation(line: 1243, column: 40, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4321, file: !969, line: 1241, column: 35)
!4370 = !DILocation(line: 1243, column: 34, scope: !4369)
!4371 = !DILocation(line: 1243, column: 17, scope: !4369)
!4372 = !DILocation(line: 1243, column: 20, scope: !4369)
!4373 = !DILocation(line: 1243, column: 31, scope: !4369)
!4374 = !DILocation(line: 1244, column: 26, scope: !4369)
!4375 = !DILocation(line: 1244, column: 24, scope: !4369)
!4376 = !DILocation(line: 1244, column: 19, scope: !4369)
!4377 = !DILocation(line: 1245, column: 17, scope: !4369)
!4378 = !DILocation(line: 1245, column: 20, scope: !4369)
!4379 = !DILocation(line: 1245, column: 30, scope: !4369)
!4380 = !DILocation(line: 1246, column: 17, scope: !4369)
!4381 = !DILocation(line: 1248, column: 39, scope: !4369)
!4382 = !DILocation(line: 1248, column: 37, scope: !4369)
!4383 = !DILocation(line: 1248, column: 18, scope: !4369)
!4384 = !DILocation(line: 1248, column: 21, scope: !4369)
!4385 = !DILocation(line: 1248, column: 32, scope: !4369)
!4386 = !DILocation(line: 1249, column: 17, scope: !4369)
!4387 = !DILocation(line: 1249, column: 20, scope: !4369)
!4388 = !DILocation(line: 1249, column: 30, scope: !4369)
!4389 = !DILocation(line: 1250, column: 19, scope: !4369)
!4390 = !DILocation(line: 1251, column: 17, scope: !4369)
!4391 = !DILocation(line: 1253, column: 35, scope: !4369)
!4392 = !DILocation(line: 1253, column: 18, scope: !4369)
!4393 = !DILocation(line: 1253, column: 21, scope: !4369)
!4394 = !DILocation(line: 1253, column: 32, scope: !4369)
!4395 = !DILocation(line: 1254, column: 17, scope: !4369)
!4396 = !DILocation(line: 1254, column: 20, scope: !4369)
!4397 = !DILocation(line: 1254, column: 30, scope: !4369)
!4398 = !DILocation(line: 1255, column: 19, scope: !4369)
!4399 = !DILocation(line: 1256, column: 17, scope: !4369)
!4400 = !DILocation(line: 1258, column: 13, scope: !4321)
!4401 = !DILocation(line: 1260, column: 27, scope: !4321)
!4402 = !DILocation(line: 1260, column: 30, scope: !4321)
!4403 = !DILocation(line: 1260, column: 17, scope: !4321)
!4404 = !DILocation(line: 1260, column: 15, scope: !4321)
!4405 = !DILocation(line: 1261, column: 13, scope: !4321)
!4406 = !DILocation(line: 1263, column: 27, scope: !4321)
!4407 = !DILocation(line: 1263, column: 30, scope: !4321)
!4408 = !DILocation(line: 1263, column: 17, scope: !4321)
!4409 = !DILocation(line: 1263, column: 15, scope: !4321)
!4410 = !DILocation(line: 1264, column: 21, scope: !4321)
!4411 = !DILocation(line: 1264, column: 24, scope: !4321)
!4412 = !DILocation(line: 1264, column: 13, scope: !4321)
!4413 = !DILocation(line: 1266, column: 40, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4321, file: !969, line: 1264, column: 35)
!4415 = !DILocation(line: 1266, column: 34, scope: !4414)
!4416 = !DILocation(line: 1266, column: 17, scope: !4414)
!4417 = !DILocation(line: 1266, column: 20, scope: !4414)
!4418 = !DILocation(line: 1266, column: 31, scope: !4414)
!4419 = !DILocation(line: 1267, column: 26, scope: !4414)
!4420 = !DILocation(line: 1267, column: 24, scope: !4414)
!4421 = !DILocation(line: 1267, column: 19, scope: !4414)
!4422 = !DILocation(line: 1268, column: 17, scope: !4414)
!4423 = !DILocation(line: 1268, column: 20, scope: !4414)
!4424 = !DILocation(line: 1268, column: 30, scope: !4414)
!4425 = !DILocation(line: 1269, column: 17, scope: !4414)
!4426 = !DILocation(line: 1271, column: 35, scope: !4414)
!4427 = !DILocation(line: 1271, column: 18, scope: !4414)
!4428 = !DILocation(line: 1271, column: 21, scope: !4414)
!4429 = !DILocation(line: 1271, column: 32, scope: !4414)
!4430 = !DILocation(line: 1272, column: 17, scope: !4414)
!4431 = !DILocation(line: 1272, column: 20, scope: !4414)
!4432 = !DILocation(line: 1272, column: 30, scope: !4414)
!4433 = !DILocation(line: 1273, column: 19, scope: !4414)
!4434 = !DILocation(line: 1274, column: 17, scope: !4414)
!4435 = !DILocation(line: 1276, column: 13, scope: !4321)
!4436 = !DILocation(line: 1278, column: 27, scope: !4321)
!4437 = !DILocation(line: 1278, column: 30, scope: !4321)
!4438 = !DILocation(line: 1278, column: 17, scope: !4321)
!4439 = !DILocation(line: 1278, column: 15, scope: !4321)
!4440 = !DILocation(line: 1279, column: 13, scope: !4321)
!4441 = !DILocation(line: 1281, column: 28, scope: !4321)
!4442 = !DILocation(line: 1281, column: 31, scope: !4321)
!4443 = !DILocation(line: 1281, column: 17, scope: !4321)
!4444 = !DILocation(line: 1281, column: 15, scope: !4321)
!4445 = !DILocation(line: 1282, column: 13, scope: !4321)
!4446 = !DILocation(line: 1284, column: 28, scope: !4321)
!4447 = !DILocation(line: 1284, column: 31, scope: !4321)
!4448 = !DILocation(line: 1284, column: 17, scope: !4321)
!4449 = !DILocation(line: 1284, column: 15, scope: !4321)
!4450 = !DILocation(line: 1285, column: 13, scope: !4321)
!4451 = !DILocation(line: 1287, column: 28, scope: !4321)
!4452 = !DILocation(line: 1287, column: 31, scope: !4321)
!4453 = !DILocation(line: 1287, column: 34, scope: !4321)
!4454 = !DILocation(line: 1287, column: 36, scope: !4321)
!4455 = !DILocation(line: 1287, column: 17, scope: !4321)
!4456 = !DILocation(line: 1287, column: 15, scope: !4321)
!4457 = !DILocation(line: 1288, column: 13, scope: !4321)
!4458 = !DILocation(line: 1289, column: 9, scope: !4321)
!4459 = !DILocation(line: 1290, column: 20, scope: !4303)
!4460 = !DILocation(line: 1290, column: 15, scope: !4303)
!4461 = !DILocation(line: 1290, column: 9, scope: !4303)
!4462 = !DILocation(line: 1290, column: 18, scope: !4303)
!4463 = !DILocation(line: 1291, column: 5, scope: !4303)
!4464 = !DILocation(line: 1213, column: 41, scope: !4465)
!4465 = !DILexicalBlockFile(scope: !4298, file: !969, discriminator: 2)
!4466 = !DILocation(line: 1213, column: 5, scope: !4465)
!4467 = distinct !{!4467, !4468}
!4468 = !DILocation(line: 1213, column: 5, scope: !4272)
!4469 = !DILocation(line: 1292, column: 1, scope: !4272)
!4470 = distinct !DISubprogram(name: "ff_ac3_output_frame", scope: !969, file: !969, line: 1661, type: !4471, isLocal: false, isDefinition: true, scopeLine: 1662, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{null, !980, !4473}
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64, align: 64)
!4474 = !DILocalVariable(name: "s", arg: 1, scope: !4470, file: !969, line: 1661, type: !980)
!4475 = !DILocation(line: 1661, column: 44, scope: !4470)
!4476 = !DILocalVariable(name: "frame", arg: 2, scope: !4470, file: !969, line: 1661, type: !4473)
!4477 = !DILocation(line: 1661, column: 62, scope: !4470)
!4478 = !DILocalVariable(name: "blk", scope: !4470, file: !969, line: 1663, type: !966)
!4479 = !DILocation(line: 1663, column: 9, scope: !4470)
!4480 = !DILocation(line: 1665, column: 20, scope: !4470)
!4481 = !DILocation(line: 1665, column: 23, scope: !4470)
!4482 = !DILocation(line: 1665, column: 27, scope: !4470)
!4483 = !DILocation(line: 1665, column: 5, scope: !4470)
!4484 = !DILocation(line: 1667, column: 5, scope: !4470)
!4485 = !DILocation(line: 1667, column: 8, scope: !4470)
!4486 = !DILocation(line: 1667, column: 28, scope: !4470)
!4487 = !DILocation(line: 1669, column: 14, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4470, file: !969, line: 1669, column: 5)
!4489 = !DILocation(line: 1669, column: 10, scope: !4488)
!4490 = !DILocation(line: 1669, column: 19, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4492, file: !969, discriminator: 1)
!4492 = distinct !DILexicalBlock(scope: !4488, file: !969, line: 1669, column: 5)
!4493 = !DILocation(line: 1669, column: 25, scope: !4491)
!4494 = !DILocation(line: 1669, column: 28, scope: !4491)
!4495 = !DILocation(line: 1669, column: 23, scope: !4491)
!4496 = !DILocation(line: 1669, column: 5, scope: !4491)
!4497 = !DILocation(line: 1670, column: 28, scope: !4492)
!4498 = !DILocation(line: 1670, column: 31, scope: !4492)
!4499 = !DILocation(line: 1670, column: 9, scope: !4492)
!4500 = !DILocation(line: 1669, column: 43, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !4492, file: !969, discriminator: 2)
!4502 = !DILocation(line: 1669, column: 5, scope: !4501)
!4503 = distinct !{!4503, !4504}
!4504 = !DILocation(line: 1669, column: 5, scope: !4470)
!4505 = !DILocation(line: 1672, column: 22, scope: !4470)
!4506 = !DILocation(line: 1672, column: 5, scope: !4470)
!4507 = !DILocation(line: 1673, column: 1, scope: !4470)
!4508 = distinct !DISubprogram(name: "init_put_bits", scope: !1774, file: !1774, line: 48, type: !4509, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{null, !4511, !1179, !966}
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!4512 = !DILocalVariable(name: "s", arg: 1, scope: !4508, file: !1774, line: 48, type: !4511)
!4513 = !DILocation(line: 48, column: 49, scope: !4508)
!4514 = !DILocalVariable(name: "buffer", arg: 2, scope: !4508, file: !1774, line: 48, type: !1179)
!4515 = !DILocation(line: 48, column: 61, scope: !4508)
!4516 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !4508, file: !1774, line: 49, type: !966)
!4517 = !DILocation(line: 49, column: 38, scope: !4508)
!4518 = !DILocation(line: 51, column: 9, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4508, file: !1774, line: 51, column: 9)
!4520 = !DILocation(line: 51, column: 21, scope: !4519)
!4521 = !DILocation(line: 51, column: 9, scope: !4508)
!4522 = !DILocation(line: 52, column: 21, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !1774, line: 51, column: 26)
!4524 = !DILocation(line: 53, column: 16, scope: !4523)
!4525 = !DILocation(line: 54, column: 5, scope: !4523)
!4526 = !DILocation(line: 56, column: 27, scope: !4508)
!4527 = !DILocation(line: 56, column: 25, scope: !4508)
!4528 = !DILocation(line: 56, column: 5, scope: !4508)
!4529 = !DILocation(line: 56, column: 8, scope: !4508)
!4530 = !DILocation(line: 56, column: 21, scope: !4508)
!4531 = !DILocation(line: 57, column: 14, scope: !4508)
!4532 = !DILocation(line: 57, column: 5, scope: !4508)
!4533 = !DILocation(line: 57, column: 8, scope: !4508)
!4534 = !DILocation(line: 57, column: 12, scope: !4508)
!4535 = !DILocation(line: 58, column: 18, scope: !4508)
!4536 = !DILocation(line: 58, column: 21, scope: !4508)
!4537 = !DILocation(line: 58, column: 27, scope: !4508)
!4538 = !DILocation(line: 58, column: 25, scope: !4508)
!4539 = !DILocation(line: 58, column: 5, scope: !4508)
!4540 = !DILocation(line: 58, column: 8, scope: !4508)
!4541 = !DILocation(line: 58, column: 16, scope: !4508)
!4542 = !DILocation(line: 59, column: 18, scope: !4508)
!4543 = !DILocation(line: 59, column: 21, scope: !4508)
!4544 = !DILocation(line: 59, column: 5, scope: !4508)
!4545 = !DILocation(line: 59, column: 8, scope: !4508)
!4546 = !DILocation(line: 59, column: 16, scope: !4508)
!4547 = !DILocation(line: 60, column: 5, scope: !4508)
!4548 = !DILocation(line: 60, column: 8, scope: !4508)
!4549 = !DILocation(line: 60, column: 17, scope: !4508)
!4550 = !DILocation(line: 61, column: 5, scope: !4508)
!4551 = !DILocation(line: 61, column: 8, scope: !4508)
!4552 = !DILocation(line: 61, column: 16, scope: !4508)
!4553 = !DILocation(line: 62, column: 1, scope: !4508)
!4554 = distinct !DISubprogram(name: "output_audio_block", scope: !969, file: !969, line: 1385, type: !4555, isLocal: true, isDefinition: true, scopeLine: 1386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{null, !980, !966}
!4557 = !DILocalVariable(name: "s", arg: 1, scope: !4554, file: !969, line: 1385, type: !980)
!4558 = !DILocation(line: 1385, column: 50, scope: !4554)
!4559 = !DILocalVariable(name: "blk", arg: 2, scope: !4554, file: !969, line: 1385, type: !966)
!4560 = !DILocation(line: 1385, column: 57, scope: !4554)
!4561 = !DILocalVariable(name: "ch", scope: !4554, file: !969, line: 1387, type: !966)
!4562 = !DILocation(line: 1387, column: 9, scope: !4554)
!4563 = !DILocalVariable(name: "i", scope: !4554, file: !969, line: 1387, type: !966)
!4564 = !DILocation(line: 1387, column: 13, scope: !4554)
!4565 = !DILocalVariable(name: "baie", scope: !4554, file: !969, line: 1387, type: !966)
!4566 = !DILocation(line: 1387, column: 16, scope: !4554)
!4567 = !DILocalVariable(name: "bnd", scope: !4554, file: !969, line: 1387, type: !966)
!4568 = !DILocation(line: 1387, column: 22, scope: !4554)
!4569 = !DILocalVariable(name: "got_cpl", scope: !4554, file: !969, line: 1387, type: !966)
!4570 = !DILocation(line: 1387, column: 27, scope: !4554)
!4571 = !DILocalVariable(name: "ch0", scope: !4554, file: !969, line: 1387, type: !966)
!4572 = !DILocation(line: 1387, column: 36, scope: !4554)
!4573 = !DILocation(line: 1387, column: 40, scope: !4554)
!4574 = !DILocalVariable(name: "block", scope: !4554, file: !969, line: 1388, type: !2271)
!4575 = !DILocation(line: 1388, column: 15, scope: !4554)
!4576 = !DILocation(line: 1388, column: 34, scope: !4554)
!4577 = !DILocation(line: 1388, column: 24, scope: !4554)
!4578 = !DILocation(line: 1388, column: 27, scope: !4554)
!4579 = !DILocation(line: 1391, column: 10, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1391, column: 9)
!4581 = !DILocation(line: 1391, column: 13, scope: !4580)
!4582 = !DILocation(line: 1391, column: 9, scope: !4554)
!4583 = !DILocation(line: 1392, column: 17, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !969, line: 1392, column: 9)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !969, line: 1391, column: 19)
!4586 = !DILocation(line: 1392, column: 14, scope: !4584)
!4587 = !DILocation(line: 1392, column: 22, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !4589, file: !969, discriminator: 1)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !969, line: 1392, column: 9)
!4590 = !DILocation(line: 1392, column: 27, scope: !4588)
!4591 = !DILocation(line: 1392, column: 30, scope: !4588)
!4592 = !DILocation(line: 1392, column: 25, scope: !4588)
!4593 = !DILocation(line: 1392, column: 9, scope: !4588)
!4594 = !DILocation(line: 1393, column: 23, scope: !4589)
!4595 = !DILocation(line: 1393, column: 26, scope: !4589)
!4596 = !DILocation(line: 1393, column: 13, scope: !4589)
!4597 = !DILocation(line: 1392, column: 46, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4589, file: !969, discriminator: 2)
!4599 = !DILocation(line: 1392, column: 9, scope: !4598)
!4600 = distinct !{!4600, !4601}
!4601 = !DILocation(line: 1392, column: 9, scope: !4585)
!4602 = !DILocation(line: 1394, column: 5, scope: !4585)
!4603 = !DILocation(line: 1397, column: 10, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1397, column: 9)
!4605 = !DILocation(line: 1397, column: 13, scope: !4604)
!4606 = !DILocation(line: 1397, column: 9, scope: !4554)
!4607 = !DILocation(line: 1398, column: 17, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !969, line: 1398, column: 9)
!4609 = distinct !DILexicalBlock(scope: !4604, file: !969, line: 1397, column: 19)
!4610 = !DILocation(line: 1398, column: 14, scope: !4608)
!4611 = !DILocation(line: 1398, column: 22, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !4613, file: !969, discriminator: 1)
!4613 = distinct !DILexicalBlock(scope: !4608, file: !969, line: 1398, column: 9)
!4614 = !DILocation(line: 1398, column: 27, scope: !4612)
!4615 = !DILocation(line: 1398, column: 30, scope: !4612)
!4616 = !DILocation(line: 1398, column: 25, scope: !4612)
!4617 = !DILocation(line: 1398, column: 9, scope: !4612)
!4618 = !DILocation(line: 1399, column: 23, scope: !4613)
!4619 = !DILocation(line: 1399, column: 26, scope: !4613)
!4620 = !DILocation(line: 1399, column: 13, scope: !4613)
!4621 = !DILocation(line: 1398, column: 46, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !4613, file: !969, discriminator: 2)
!4623 = !DILocation(line: 1398, column: 9, scope: !4622)
!4624 = distinct !{!4624, !4625}
!4625 = !DILocation(line: 1398, column: 9, scope: !4609)
!4626 = !DILocation(line: 1400, column: 5, scope: !4609)
!4627 = !DILocation(line: 1403, column: 15, scope: !4554)
!4628 = !DILocation(line: 1403, column: 18, scope: !4554)
!4629 = !DILocation(line: 1403, column: 5, scope: !4554)
!4630 = !DILocation(line: 1406, column: 9, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1406, column: 9)
!4632 = !DILocation(line: 1406, column: 12, scope: !4631)
!4633 = !DILocation(line: 1406, column: 9, scope: !4554)
!4634 = !DILocation(line: 1407, column: 19, scope: !4631)
!4635 = !DILocation(line: 1407, column: 22, scope: !4631)
!4636 = !DILocation(line: 1407, column: 9, scope: !4631)
!4637 = !DILocation(line: 1410, column: 10, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1410, column: 9)
!4639 = !DILocation(line: 1410, column: 13, scope: !4638)
!4640 = !DILocation(line: 1410, column: 9, scope: !4554)
!4641 = !DILocation(line: 1411, column: 19, scope: !4638)
!4642 = !DILocation(line: 1411, column: 22, scope: !4638)
!4643 = !DILocation(line: 1411, column: 29, scope: !4638)
!4644 = !DILocation(line: 1411, column: 36, scope: !4638)
!4645 = !DILocation(line: 1411, column: 9, scope: !4638)
!4646 = !DILocation(line: 1412, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1412, column: 9)
!4648 = !DILocation(line: 1412, column: 16, scope: !4647)
!4649 = !DILocation(line: 1412, column: 9, scope: !4554)
!4650 = !DILocation(line: 1413, column: 14, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !969, line: 1413, column: 13)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !969, line: 1412, column: 34)
!4653 = !DILocation(line: 1413, column: 17, scope: !4651)
!4654 = !DILocation(line: 1413, column: 13, scope: !4652)
!4655 = !DILocation(line: 1414, column: 23, scope: !4651)
!4656 = !DILocation(line: 1414, column: 26, scope: !4651)
!4657 = !DILocation(line: 1414, column: 33, scope: !4651)
!4658 = !DILocation(line: 1414, column: 40, scope: !4651)
!4659 = !DILocation(line: 1414, column: 13, scope: !4651)
!4660 = !DILocation(line: 1415, column: 13, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4652, file: !969, line: 1415, column: 13)
!4662 = !DILocation(line: 1415, column: 20, scope: !4661)
!4663 = !DILocation(line: 1415, column: 13, scope: !4652)
!4664 = !DILocalVariable(name: "start_sub", scope: !4665, file: !969, line: 1416, type: !966)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !969, line: 1415, column: 32)
!4666 = !DILocation(line: 1416, column: 17, scope: !4665)
!4667 = !DILocalVariable(name: "end_sub", scope: !4665, file: !969, line: 1416, type: !966)
!4668 = !DILocation(line: 1416, column: 28, scope: !4665)
!4669 = !DILocation(line: 1417, column: 17, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4665, file: !969, line: 1417, column: 17)
!4671 = !DILocation(line: 1417, column: 20, scope: !4670)
!4672 = !DILocation(line: 1417, column: 17, scope: !4665)
!4673 = !DILocation(line: 1418, column: 27, scope: !4670)
!4674 = !DILocation(line: 1418, column: 30, scope: !4670)
!4675 = !DILocation(line: 1418, column: 17, scope: !4670)
!4676 = !DILocation(line: 1419, column: 18, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4665, file: !969, line: 1419, column: 17)
!4678 = !DILocation(line: 1419, column: 21, scope: !4677)
!4679 = !DILocation(line: 1419, column: 26, scope: !4677)
!4680 = !DILocation(line: 1419, column: 29, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4677, file: !969, discriminator: 1)
!4682 = !DILocation(line: 1419, column: 32, scope: !4681)
!4683 = !DILocation(line: 1419, column: 45, scope: !4681)
!4684 = !DILocation(line: 1419, column: 17, scope: !4681)
!4685 = !DILocation(line: 1420, column: 25, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !969, line: 1420, column: 17)
!4687 = distinct !DILexicalBlock(scope: !4677, file: !969, line: 1419, column: 67)
!4688 = !DILocation(line: 1420, column: 22, scope: !4686)
!4689 = !DILocation(line: 1420, column: 30, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4691, file: !969, discriminator: 1)
!4691 = distinct !DILexicalBlock(scope: !4686, file: !969, line: 1420, column: 17)
!4692 = !DILocation(line: 1420, column: 36, scope: !4690)
!4693 = !DILocation(line: 1420, column: 39, scope: !4690)
!4694 = !DILocation(line: 1420, column: 33, scope: !4690)
!4695 = !DILocation(line: 1420, column: 17, scope: !4690)
!4696 = !DILocation(line: 1421, column: 31, scope: !4691)
!4697 = !DILocation(line: 1421, column: 34, scope: !4691)
!4698 = !DILocation(line: 1421, column: 63, scope: !4691)
!4699 = !DILocation(line: 1421, column: 41, scope: !4691)
!4700 = !DILocation(line: 1421, column: 48, scope: !4691)
!4701 = !DILocation(line: 1421, column: 21, scope: !4691)
!4702 = !DILocation(line: 1420, column: 55, scope: !4703)
!4703 = !DILexicalBlockFile(scope: !4691, file: !969, discriminator: 2)
!4704 = !DILocation(line: 1420, column: 17, scope: !4703)
!4705 = distinct !{!4705, !4706}
!4706 = !DILocation(line: 1420, column: 17, scope: !4687)
!4707 = !DILocation(line: 1422, column: 13, scope: !4687)
!4708 = !DILocation(line: 1423, column: 17, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4665, file: !969, line: 1423, column: 17)
!4710 = !DILocation(line: 1423, column: 20, scope: !4709)
!4711 = !DILocation(line: 1423, column: 33, scope: !4709)
!4712 = !DILocation(line: 1423, column: 17, scope: !4665)
!4713 = !DILocation(line: 1424, column: 27, scope: !4709)
!4714 = !DILocation(line: 1424, column: 30, scope: !4709)
!4715 = !DILocation(line: 1424, column: 17, scope: !4709)
!4716 = !DILocation(line: 1425, column: 26, scope: !4665)
!4717 = !DILocation(line: 1425, column: 29, scope: !4665)
!4718 = !DILocation(line: 1425, column: 43, scope: !4665)
!4719 = !DILocation(line: 1425, column: 49, scope: !4665)
!4720 = !DILocation(line: 1425, column: 23, scope: !4665)
!4721 = !DILocation(line: 1426, column: 24, scope: !4665)
!4722 = !DILocation(line: 1426, column: 27, scope: !4665)
!4723 = !DILocation(line: 1426, column: 40, scope: !4665)
!4724 = !DILocation(line: 1426, column: 46, scope: !4665)
!4725 = !DILocation(line: 1426, column: 21, scope: !4665)
!4726 = !DILocation(line: 1427, column: 23, scope: !4665)
!4727 = !DILocation(line: 1427, column: 26, scope: !4665)
!4728 = !DILocation(line: 1427, column: 33, scope: !4665)
!4729 = !DILocation(line: 1427, column: 13, scope: !4665)
!4730 = !DILocation(line: 1428, column: 23, scope: !4665)
!4731 = !DILocation(line: 1428, column: 26, scope: !4665)
!4732 = !DILocation(line: 1428, column: 33, scope: !4665)
!4733 = !DILocation(line: 1428, column: 41, scope: !4665)
!4734 = !DILocation(line: 1428, column: 13, scope: !4665)
!4735 = !DILocation(line: 1430, column: 17, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4665, file: !969, line: 1430, column: 17)
!4737 = !DILocation(line: 1430, column: 20, scope: !4736)
!4738 = !DILocation(line: 1430, column: 17, scope: !4665)
!4739 = !DILocation(line: 1431, column: 27, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4736, file: !969, line: 1430, column: 26)
!4741 = !DILocation(line: 1431, column: 30, scope: !4740)
!4742 = !DILocation(line: 1431, column: 17, scope: !4740)
!4743 = !DILocation(line: 1432, column: 13, scope: !4740)
!4744 = !DILocation(line: 1433, column: 28, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !969, line: 1433, column: 17)
!4746 = distinct !DILexicalBlock(scope: !4736, file: !969, line: 1432, column: 20)
!4747 = !DILocation(line: 1433, column: 37, scope: !4745)
!4748 = !DILocation(line: 1433, column: 26, scope: !4745)
!4749 = !DILocation(line: 1433, column: 22, scope: !4745)
!4750 = !DILocation(line: 1433, column: 41, scope: !4751)
!4751 = !DILexicalBlockFile(scope: !4752, file: !969, discriminator: 1)
!4752 = distinct !DILexicalBlock(scope: !4745, file: !969, line: 1433, column: 17)
!4753 = !DILocation(line: 1433, column: 47, scope: !4751)
!4754 = !DILocation(line: 1433, column: 45, scope: !4751)
!4755 = !DILocation(line: 1433, column: 17, scope: !4751)
!4756 = !DILocation(line: 1434, column: 31, scope: !4752)
!4757 = !DILocation(line: 1434, column: 34, scope: !4752)
!4758 = !DILocation(line: 1434, column: 73, scope: !4752)
!4759 = !DILocation(line: 1434, column: 41, scope: !4752)
!4760 = !DILocation(line: 1434, column: 21, scope: !4752)
!4761 = !DILocation(line: 1433, column: 59, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4752, file: !969, discriminator: 2)
!4763 = !DILocation(line: 1433, column: 17, scope: !4762)
!4764 = distinct !{!4764, !4765}
!4765 = !DILocation(line: 1433, column: 17, scope: !4746)
!4766 = !DILocation(line: 1436, column: 9, scope: !4665)
!4767 = !DILocation(line: 1437, column: 5, scope: !4652)
!4768 = !DILocation(line: 1440, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1440, column: 9)
!4770 = !DILocation(line: 1440, column: 16, scope: !4769)
!4771 = !DILocation(line: 1440, column: 9, scope: !4554)
!4772 = !DILocation(line: 1441, column: 17, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !969, line: 1441, column: 9)
!4774 = distinct !DILexicalBlock(scope: !4769, file: !969, line: 1440, column: 28)
!4775 = !DILocation(line: 1441, column: 14, scope: !4773)
!4776 = !DILocation(line: 1441, column: 22, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4778, file: !969, discriminator: 1)
!4778 = distinct !DILexicalBlock(scope: !4773, file: !969, line: 1441, column: 9)
!4779 = !DILocation(line: 1441, column: 28, scope: !4777)
!4780 = !DILocation(line: 1441, column: 31, scope: !4777)
!4781 = !DILocation(line: 1441, column: 25, scope: !4777)
!4782 = !DILocation(line: 1441, column: 9, scope: !4777)
!4783 = !DILocation(line: 1442, column: 39, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !969, line: 1442, column: 17)
!4785 = distinct !DILexicalBlock(scope: !4778, file: !969, line: 1441, column: 51)
!4786 = !DILocation(line: 1442, column: 17, scope: !4784)
!4787 = !DILocation(line: 1442, column: 24, scope: !4784)
!4788 = !DILocation(line: 1442, column: 17, scope: !4785)
!4789 = !DILocation(line: 1443, column: 22, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !969, line: 1443, column: 21)
!4791 = distinct !DILexicalBlock(scope: !4784, file: !969, line: 1442, column: 44)
!4792 = !DILocation(line: 1443, column: 25, scope: !4790)
!4793 = !DILocation(line: 1443, column: 30, scope: !4790)
!4794 = !DILocation(line: 1443, column: 55, scope: !4795)
!4795 = !DILexicalBlockFile(scope: !4790, file: !969, discriminator: 1)
!4796 = !DILocation(line: 1443, column: 33, scope: !4795)
!4797 = !DILocation(line: 1443, column: 40, scope: !4795)
!4798 = !DILocation(line: 1443, column: 59, scope: !4795)
!4799 = !DILocation(line: 1443, column: 21, scope: !4795)
!4800 = !DILocation(line: 1444, column: 31, scope: !4790)
!4801 = !DILocation(line: 1444, column: 34, scope: !4790)
!4802 = !DILocation(line: 1444, column: 63, scope: !4790)
!4803 = !DILocation(line: 1444, column: 41, scope: !4790)
!4804 = !DILocation(line: 1444, column: 48, scope: !4790)
!4805 = !DILocation(line: 1444, column: 21, scope: !4790)
!4806 = !DILocation(line: 1445, column: 43, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4791, file: !969, line: 1445, column: 21)
!4808 = !DILocation(line: 1445, column: 21, scope: !4807)
!4809 = !DILocation(line: 1445, column: 28, scope: !4807)
!4810 = !DILocation(line: 1445, column: 21, scope: !4791)
!4811 = !DILocation(line: 1446, column: 31, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4807, file: !969, line: 1445, column: 48)
!4813 = !DILocation(line: 1446, column: 34, scope: !4812)
!4814 = !DILocation(line: 1446, column: 63, scope: !4812)
!4815 = !DILocation(line: 1446, column: 41, scope: !4812)
!4816 = !DILocation(line: 1446, column: 48, scope: !4812)
!4817 = !DILocation(line: 1446, column: 21, scope: !4812)
!4818 = !DILocation(line: 1447, column: 30, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4812, file: !969, line: 1447, column: 21)
!4820 = !DILocation(line: 1447, column: 26, scope: !4819)
!4821 = !DILocation(line: 1447, column: 35, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4823, file: !969, discriminator: 1)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !969, line: 1447, column: 21)
!4824 = !DILocation(line: 1447, column: 41, scope: !4822)
!4825 = !DILocation(line: 1447, column: 44, scope: !4822)
!4826 = !DILocation(line: 1447, column: 39, scope: !4822)
!4827 = !DILocation(line: 1447, column: 21, scope: !4822)
!4828 = !DILocation(line: 1448, column: 35, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !969, line: 1447, column: 66)
!4830 = !DILocation(line: 1448, column: 38, scope: !4829)
!4831 = !DILocation(line: 1448, column: 71, scope: !4829)
!4832 = !DILocation(line: 1448, column: 45, scope: !4829)
!4833 = !DILocation(line: 1448, column: 67, scope: !4829)
!4834 = !DILocation(line: 1448, column: 52, scope: !4829)
!4835 = !DILocation(line: 1448, column: 25, scope: !4829)
!4836 = !DILocation(line: 1449, column: 35, scope: !4829)
!4837 = !DILocation(line: 1449, column: 38, scope: !4829)
!4838 = !DILocation(line: 1449, column: 71, scope: !4829)
!4839 = !DILocation(line: 1449, column: 45, scope: !4829)
!4840 = !DILocation(line: 1449, column: 67, scope: !4829)
!4841 = !DILocation(line: 1449, column: 52, scope: !4829)
!4842 = !DILocation(line: 1449, column: 25, scope: !4829)
!4843 = !DILocation(line: 1450, column: 21, scope: !4829)
!4844 = !DILocation(line: 1447, column: 62, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !4823, file: !969, discriminator: 2)
!4846 = !DILocation(line: 1447, column: 21, scope: !4845)
!4847 = distinct !{!4847, !4848}
!4848 = !DILocation(line: 1447, column: 21, scope: !4812)
!4849 = !DILocation(line: 1451, column: 17, scope: !4812)
!4850 = !DILocation(line: 1452, column: 13, scope: !4791)
!4851 = !DILocation(line: 1453, column: 9, scope: !4785)
!4852 = !DILocation(line: 1441, column: 47, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4778, file: !969, discriminator: 2)
!4854 = !DILocation(line: 1441, column: 9, scope: !4853)
!4855 = distinct !{!4855, !4856}
!4856 = !DILocation(line: 1441, column: 9, scope: !4774)
!4857 = !DILocation(line: 1454, column: 5, scope: !4774)
!4858 = !DILocation(line: 1457, column: 9, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1457, column: 9)
!4860 = !DILocation(line: 1457, column: 12, scope: !4859)
!4861 = !DILocation(line: 1457, column: 25, scope: !4859)
!4862 = !DILocation(line: 1457, column: 9, scope: !4554)
!4863 = !DILocation(line: 1458, column: 14, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !969, line: 1458, column: 13)
!4865 = distinct !DILexicalBlock(scope: !4859, file: !969, line: 1457, column: 47)
!4866 = !DILocation(line: 1458, column: 17, scope: !4864)
!4867 = !DILocation(line: 1458, column: 22, scope: !4864)
!4868 = !DILocation(line: 1458, column: 25, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4864, file: !969, discriminator: 1)
!4870 = !DILocation(line: 1458, column: 29, scope: !4869)
!4871 = !DILocation(line: 1458, column: 13, scope: !4869)
!4872 = !DILocation(line: 1459, column: 23, scope: !4864)
!4873 = !DILocation(line: 1459, column: 26, scope: !4864)
!4874 = !DILocation(line: 1459, column: 33, scope: !4864)
!4875 = !DILocation(line: 1459, column: 40, scope: !4864)
!4876 = !DILocation(line: 1459, column: 13, scope: !4864)
!4877 = !DILocation(line: 1460, column: 13, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4865, file: !969, line: 1460, column: 13)
!4879 = !DILocation(line: 1460, column: 20, scope: !4878)
!4880 = !DILocation(line: 1460, column: 13, scope: !4865)
!4881 = !DILocation(line: 1462, column: 22, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !969, line: 1462, column: 13)
!4883 = distinct !DILexicalBlock(scope: !4878, file: !969, line: 1460, column: 46)
!4884 = !DILocation(line: 1462, column: 18, scope: !4882)
!4885 = !DILocation(line: 1462, column: 27, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4887, file: !969, discriminator: 1)
!4887 = distinct !DILexicalBlock(scope: !4882, file: !969, line: 1462, column: 13)
!4888 = !DILocation(line: 1462, column: 33, scope: !4886)
!4889 = !DILocation(line: 1462, column: 40, scope: !4886)
!4890 = !DILocation(line: 1462, column: 31, scope: !4886)
!4891 = !DILocation(line: 1462, column: 13, scope: !4886)
!4892 = !DILocation(line: 1463, column: 27, scope: !4887)
!4893 = !DILocation(line: 1463, column: 30, scope: !4887)
!4894 = !DILocation(line: 1463, column: 62, scope: !4887)
!4895 = !DILocation(line: 1463, column: 37, scope: !4887)
!4896 = !DILocation(line: 1463, column: 44, scope: !4887)
!4897 = !DILocation(line: 1463, column: 17, scope: !4887)
!4898 = !DILocation(line: 1462, column: 66, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !4887, file: !969, discriminator: 2)
!4900 = !DILocation(line: 1462, column: 13, scope: !4899)
!4901 = distinct !{!4901, !4902}
!4902 = !DILocation(line: 1462, column: 13, scope: !4883)
!4903 = !DILocation(line: 1464, column: 9, scope: !4883)
!4904 = !DILocation(line: 1465, column: 5, scope: !4865)
!4905 = !DILocation(line: 1468, column: 10, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1468, column: 9)
!4907 = !DILocation(line: 1468, column: 13, scope: !4906)
!4908 = !DILocation(line: 1468, column: 9, scope: !4554)
!4909 = !DILocation(line: 1469, column: 20, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !969, line: 1469, column: 9)
!4911 = distinct !DILexicalBlock(scope: !4906, file: !969, line: 1468, column: 19)
!4912 = !DILocation(line: 1469, column: 27, scope: !4910)
!4913 = !DILocation(line: 1469, column: 19, scope: !4910)
!4914 = !DILocation(line: 1469, column: 17, scope: !4910)
!4915 = !DILocation(line: 1469, column: 14, scope: !4910)
!4916 = !DILocation(line: 1469, column: 39, scope: !4917)
!4917 = !DILexicalBlockFile(scope: !4918, file: !969, discriminator: 1)
!4918 = distinct !DILexicalBlock(scope: !4910, file: !969, line: 1469, column: 9)
!4919 = !DILocation(line: 1469, column: 45, scope: !4917)
!4920 = !DILocation(line: 1469, column: 48, scope: !4917)
!4921 = !DILocation(line: 1469, column: 42, scope: !4917)
!4922 = !DILocation(line: 1469, column: 9, scope: !4917)
!4923 = !DILocation(line: 1470, column: 23, scope: !4918)
!4924 = !DILocation(line: 1470, column: 26, scope: !4918)
!4925 = !DILocation(line: 1470, column: 53, scope: !4918)
!4926 = !DILocation(line: 1470, column: 33, scope: !4918)
!4927 = !DILocation(line: 1470, column: 49, scope: !4918)
!4928 = !DILocation(line: 1470, column: 36, scope: !4918)
!4929 = !DILocation(line: 1470, column: 13, scope: !4918)
!4930 = !DILocation(line: 1469, column: 64, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4918, file: !969, discriminator: 2)
!4932 = !DILocation(line: 1469, column: 9, scope: !4931)
!4933 = distinct !{!4933, !4934}
!4934 = !DILocation(line: 1469, column: 9, scope: !4911)
!4935 = !DILocation(line: 1471, column: 13, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4911, file: !969, line: 1471, column: 13)
!4937 = !DILocation(line: 1471, column: 16, scope: !4936)
!4938 = !DILocation(line: 1471, column: 13, scope: !4911)
!4939 = !DILocation(line: 1472, column: 23, scope: !4936)
!4940 = !DILocation(line: 1472, column: 26, scope: !4936)
!4941 = !DILocation(line: 1472, column: 65, scope: !4936)
!4942 = !DILocation(line: 1472, column: 33, scope: !4936)
!4943 = !DILocation(line: 1472, column: 49, scope: !4936)
!4944 = !DILocation(line: 1472, column: 52, scope: !4936)
!4945 = !DILocation(line: 1472, column: 36, scope: !4936)
!4946 = !DILocation(line: 1472, column: 13, scope: !4936)
!4947 = !DILocation(line: 1473, column: 5, scope: !4911)
!4948 = !DILocation(line: 1476, column: 13, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1476, column: 5)
!4950 = !DILocation(line: 1476, column: 10, scope: !4949)
!4951 = !DILocation(line: 1476, column: 18, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4953, file: !969, discriminator: 1)
!4953 = distinct !DILexicalBlock(scope: !4949, file: !969, line: 1476, column: 5)
!4954 = !DILocation(line: 1476, column: 24, scope: !4952)
!4955 = !DILocation(line: 1476, column: 27, scope: !4952)
!4956 = !DILocation(line: 1476, column: 21, scope: !4952)
!4957 = !DILocation(line: 1476, column: 5, scope: !4952)
!4958 = !DILocation(line: 1477, column: 33, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !969, line: 1477, column: 13)
!4960 = distinct !DILexicalBlock(scope: !4953, file: !969, line: 1476, column: 47)
!4961 = !DILocation(line: 1477, column: 13, scope: !4959)
!4962 = !DILocation(line: 1477, column: 29, scope: !4959)
!4963 = !DILocation(line: 1477, column: 16, scope: !4959)
!4964 = !DILocation(line: 1477, column: 38, scope: !4959)
!4965 = !DILocation(line: 1477, column: 43, scope: !4959)
!4966 = !DILocation(line: 1477, column: 69, scope: !4967)
!4967 = !DILexicalBlockFile(scope: !4959, file: !969, discriminator: 1)
!4968 = !DILocation(line: 1477, column: 47, scope: !4967)
!4969 = !DILocation(line: 1477, column: 54, scope: !4967)
!4970 = !DILocation(line: 1477, column: 13, scope: !4967)
!4971 = !DILocation(line: 1478, column: 23, scope: !4959)
!4972 = !DILocation(line: 1478, column: 26, scope: !4959)
!4973 = !DILocation(line: 1478, column: 33, scope: !4959)
!4974 = !DILocation(line: 1478, column: 36, scope: !4959)
!4975 = !DILocation(line: 1478, column: 13, scope: !4959)
!4976 = !DILocation(line: 1479, column: 5, scope: !4960)
!4977 = !DILocation(line: 1476, column: 43, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4953, file: !969, discriminator: 2)
!4979 = !DILocation(line: 1476, column: 5, scope: !4978)
!4980 = distinct !{!4980, !4981}
!4981 = !DILocation(line: 1476, column: 5, scope: !4554)
!4982 = !DILocation(line: 1482, column: 16, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1482, column: 5)
!4984 = !DILocation(line: 1482, column: 23, scope: !4983)
!4985 = !DILocation(line: 1482, column: 15, scope: !4983)
!4986 = !DILocation(line: 1482, column: 13, scope: !4983)
!4987 = !DILocation(line: 1482, column: 10, scope: !4983)
!4988 = !DILocation(line: 1482, column: 35, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4990, file: !969, discriminator: 1)
!4990 = distinct !DILexicalBlock(scope: !4983, file: !969, line: 1482, column: 5)
!4991 = !DILocation(line: 1482, column: 41, scope: !4989)
!4992 = !DILocation(line: 1482, column: 44, scope: !4989)
!4993 = !DILocation(line: 1482, column: 38, scope: !4989)
!4994 = !DILocation(line: 1482, column: 5, scope: !4989)
!4995 = !DILocalVariable(name: "nb_groups", scope: !4996, file: !969, line: 1483, type: !966)
!4996 = distinct !DILexicalBlock(scope: !4990, file: !969, line: 1482, column: 60)
!4997 = !DILocation(line: 1483, column: 13, scope: !4996)
!4998 = !DILocalVariable(name: "cpl", scope: !4996, file: !969, line: 1484, type: !966)
!4999 = !DILocation(line: 1484, column: 13, scope: !4996)
!5000 = !DILocation(line: 1484, column: 20, scope: !4996)
!5001 = !DILocation(line: 1484, column: 23, scope: !4996)
!5002 = !DILocation(line: 1486, column: 33, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4996, file: !969, line: 1486, column: 13)
!5004 = !DILocation(line: 1486, column: 13, scope: !5003)
!5005 = !DILocation(line: 1486, column: 29, scope: !5003)
!5006 = !DILocation(line: 1486, column: 16, scope: !5003)
!5007 = !DILocation(line: 1486, column: 38, scope: !5003)
!5008 = !DILocation(line: 1486, column: 13, scope: !4996)
!5009 = !DILocation(line: 1487, column: 13, scope: !5003)
!5010 = !DILocation(line: 1490, column: 19, scope: !4996)
!5011 = !DILocation(line: 1490, column: 22, scope: !4996)
!5012 = !DILocation(line: 1490, column: 48, scope: !4996)
!5013 = !DILocation(line: 1490, column: 29, scope: !4996)
!5014 = !DILocation(line: 1490, column: 36, scope: !4996)
!5015 = !DILocation(line: 1490, column: 58, scope: !4996)
!5016 = !DILocation(line: 1490, column: 55, scope: !4996)
!5017 = !DILocation(line: 1490, column: 9, scope: !4996)
!5018 = !DILocation(line: 1493, column: 89, scope: !4996)
!5019 = !DILocation(line: 1493, column: 73, scope: !4996)
!5020 = !DILocation(line: 1493, column: 80, scope: !4996)
!5021 = !DILocation(line: 1493, column: 107, scope: !4996)
!5022 = !DILocation(line: 1493, column: 93, scope: !4996)
!5023 = !DILocation(line: 1493, column: 96, scope: !4996)
!5024 = !DILocation(line: 1493, column: 92, scope: !4996)
!5025 = !DILocation(line: 1493, column: 21, scope: !4996)
!5026 = !DILocation(line: 1493, column: 65, scope: !4996)
!5027 = !DILocation(line: 1493, column: 45, scope: !4996)
!5028 = !DILocation(line: 1493, column: 61, scope: !4996)
!5029 = !DILocation(line: 1493, column: 48, scope: !4996)
!5030 = !DILocation(line: 1493, column: 69, scope: !4996)
!5031 = !DILocation(line: 1493, column: 40, scope: !4996)
!5032 = !DILocation(line: 1493, column: 19, scope: !4996)
!5033 = !DILocation(line: 1494, column: 16, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4996, file: !969, line: 1494, column: 9)
!5035 = !DILocation(line: 1494, column: 14, scope: !5034)
!5036 = !DILocation(line: 1494, column: 21, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !5038, file: !969, discriminator: 1)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !969, line: 1494, column: 9)
!5039 = !DILocation(line: 1494, column: 26, scope: !5037)
!5040 = !DILocation(line: 1494, column: 23, scope: !5037)
!5041 = !DILocation(line: 1494, column: 9, scope: !5037)
!5042 = !DILocation(line: 1495, column: 23, scope: !5038)
!5043 = !DILocation(line: 1495, column: 26, scope: !5038)
!5044 = !DILocation(line: 1495, column: 56, scope: !5038)
!5045 = !DILocation(line: 1495, column: 33, scope: !5038)
!5046 = !DILocation(line: 1495, column: 52, scope: !5038)
!5047 = !DILocation(line: 1495, column: 40, scope: !5038)
!5048 = !DILocation(line: 1495, column: 13, scope: !5038)
!5049 = !DILocation(line: 1494, column: 38, scope: !5050)
!5050 = !DILexicalBlockFile(scope: !5038, file: !969, discriminator: 2)
!5051 = !DILocation(line: 1494, column: 9, scope: !5050)
!5052 = distinct !{!5052, !5053}
!5053 = !DILocation(line: 1494, column: 9, scope: !4996)
!5054 = !DILocation(line: 1498, column: 13, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !4996, file: !969, line: 1498, column: 13)
!5056 = !DILocation(line: 1498, column: 19, scope: !5055)
!5057 = !DILocation(line: 1498, column: 22, scope: !5055)
!5058 = !DILocation(line: 1498, column: 16, scope: !5055)
!5059 = !DILocation(line: 1498, column: 34, scope: !5055)
!5060 = !DILocation(line: 1498, column: 38, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5055, file: !969, discriminator: 1)
!5062 = !DILocation(line: 1498, column: 13, scope: !5061)
!5063 = !DILocation(line: 1499, column: 23, scope: !5055)
!5064 = !DILocation(line: 1499, column: 26, scope: !5055)
!5065 = !DILocation(line: 1499, column: 13, scope: !5055)
!5066 = !DILocation(line: 1500, column: 5, scope: !4996)
!5067 = !DILocation(line: 1482, column: 56, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !4990, file: !969, discriminator: 2)
!5069 = !DILocation(line: 1482, column: 5, scope: !5068)
!5070 = distinct !{!5070, !5071}
!5071 = !DILocation(line: 1482, column: 5, scope: !4554)
!5072 = !DILocation(line: 1503, column: 10, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1503, column: 9)
!5074 = !DILocation(line: 1503, column: 13, scope: !5073)
!5075 = !DILocation(line: 1503, column: 9, scope: !4554)
!5076 = !DILocation(line: 1504, column: 17, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !969, line: 1503, column: 19)
!5078 = !DILocation(line: 1504, column: 21, scope: !5077)
!5079 = !DILocation(line: 1504, column: 14, scope: !5077)
!5080 = !DILocation(line: 1505, column: 19, scope: !5077)
!5081 = !DILocation(line: 1505, column: 22, scope: !5077)
!5082 = !DILocation(line: 1505, column: 29, scope: !5077)
!5083 = !DILocation(line: 1505, column: 9, scope: !5077)
!5084 = !DILocation(line: 1506, column: 13, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5077, file: !969, line: 1506, column: 13)
!5086 = !DILocation(line: 1506, column: 13, scope: !5077)
!5087 = !DILocation(line: 1507, column: 23, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !969, line: 1506, column: 19)
!5089 = !DILocation(line: 1507, column: 26, scope: !5088)
!5090 = !DILocation(line: 1507, column: 33, scope: !5088)
!5091 = !DILocation(line: 1507, column: 36, scope: !5088)
!5092 = !DILocation(line: 1507, column: 13, scope: !5088)
!5093 = !DILocation(line: 1508, column: 23, scope: !5088)
!5094 = !DILocation(line: 1508, column: 26, scope: !5088)
!5095 = !DILocation(line: 1508, column: 33, scope: !5088)
!5096 = !DILocation(line: 1508, column: 36, scope: !5088)
!5097 = !DILocation(line: 1508, column: 13, scope: !5088)
!5098 = !DILocation(line: 1509, column: 23, scope: !5088)
!5099 = !DILocation(line: 1509, column: 26, scope: !5088)
!5100 = !DILocation(line: 1509, column: 33, scope: !5088)
!5101 = !DILocation(line: 1509, column: 36, scope: !5088)
!5102 = !DILocation(line: 1509, column: 13, scope: !5088)
!5103 = !DILocation(line: 1510, column: 23, scope: !5088)
!5104 = !DILocation(line: 1510, column: 26, scope: !5088)
!5105 = !DILocation(line: 1510, column: 33, scope: !5088)
!5106 = !DILocation(line: 1510, column: 36, scope: !5088)
!5107 = !DILocation(line: 1510, column: 13, scope: !5088)
!5108 = !DILocation(line: 1511, column: 23, scope: !5088)
!5109 = !DILocation(line: 1511, column: 26, scope: !5088)
!5110 = !DILocation(line: 1511, column: 33, scope: !5088)
!5111 = !DILocation(line: 1511, column: 36, scope: !5088)
!5112 = !DILocation(line: 1511, column: 13, scope: !5088)
!5113 = !DILocation(line: 1512, column: 9, scope: !5088)
!5114 = !DILocation(line: 1513, column: 5, scope: !5077)
!5115 = !DILocation(line: 1516, column: 10, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1516, column: 9)
!5117 = !DILocation(line: 1516, column: 13, scope: !5116)
!5118 = !DILocation(line: 1516, column: 9, scope: !4554)
!5119 = !DILocation(line: 1517, column: 19, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !969, line: 1516, column: 19)
!5121 = !DILocation(line: 1517, column: 22, scope: !5120)
!5122 = !DILocation(line: 1517, column: 29, scope: !5120)
!5123 = !DILocation(line: 1517, column: 36, scope: !5120)
!5124 = !DILocation(line: 1517, column: 9, scope: !5120)
!5125 = !DILocation(line: 1518, column: 13, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5120, file: !969, line: 1518, column: 13)
!5127 = !DILocation(line: 1518, column: 20, scope: !5126)
!5128 = !DILocation(line: 1518, column: 13, scope: !5120)
!5129 = !DILocation(line: 1519, column: 23, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5126, file: !969, line: 1518, column: 37)
!5131 = !DILocation(line: 1519, column: 26, scope: !5130)
!5132 = !DILocation(line: 1519, column: 33, scope: !5130)
!5133 = !DILocation(line: 1519, column: 36, scope: !5130)
!5134 = !DILocation(line: 1519, column: 13, scope: !5130)
!5135 = !DILocation(line: 1520, column: 24, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5130, file: !969, line: 1520, column: 13)
!5137 = !DILocation(line: 1520, column: 31, scope: !5136)
!5138 = !DILocation(line: 1520, column: 23, scope: !5136)
!5139 = !DILocation(line: 1520, column: 21, scope: !5136)
!5140 = !DILocation(line: 1520, column: 18, scope: !5136)
!5141 = !DILocation(line: 1520, column: 43, scope: !5142)
!5142 = !DILexicalBlockFile(scope: !5143, file: !969, discriminator: 1)
!5143 = distinct !DILexicalBlock(scope: !5136, file: !969, line: 1520, column: 13)
!5144 = !DILocation(line: 1520, column: 49, scope: !5142)
!5145 = !DILocation(line: 1520, column: 52, scope: !5142)
!5146 = !DILocation(line: 1520, column: 46, scope: !5142)
!5147 = !DILocation(line: 1520, column: 13, scope: !5142)
!5148 = !DILocation(line: 1521, column: 27, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5143, file: !969, line: 1520, column: 68)
!5150 = !DILocation(line: 1521, column: 30, scope: !5149)
!5151 = !DILocation(line: 1521, column: 56, scope: !5149)
!5152 = !DILocation(line: 1521, column: 37, scope: !5149)
!5153 = !DILocation(line: 1521, column: 40, scope: !5149)
!5154 = !DILocation(line: 1521, column: 17, scope: !5149)
!5155 = !DILocation(line: 1522, column: 27, scope: !5149)
!5156 = !DILocation(line: 1522, column: 30, scope: !5149)
!5157 = !DILocation(line: 1522, column: 55, scope: !5149)
!5158 = !DILocation(line: 1522, column: 37, scope: !5149)
!5159 = !DILocation(line: 1522, column: 40, scope: !5149)
!5160 = !DILocation(line: 1522, column: 17, scope: !5149)
!5161 = !DILocation(line: 1523, column: 13, scope: !5149)
!5162 = !DILocation(line: 1520, column: 64, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !5143, file: !969, discriminator: 2)
!5164 = !DILocation(line: 1520, column: 13, scope: !5163)
!5165 = distinct !{!5165, !5166}
!5166 = !DILocation(line: 1520, column: 13, scope: !5130)
!5167 = !DILocation(line: 1524, column: 9, scope: !5130)
!5168 = !DILocation(line: 1525, column: 5, scope: !5120)
!5169 = !DILocation(line: 1526, column: 19, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5116, file: !969, line: 1525, column: 12)
!5171 = !DILocation(line: 1526, column: 22, scope: !5170)
!5172 = !DILocation(line: 1526, column: 9, scope: !5170)
!5173 = !DILocation(line: 1530, column: 9, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1530, column: 9)
!5175 = !DILocation(line: 1530, column: 16, scope: !5174)
!5176 = !DILocation(line: 1530, column: 9, scope: !4554)
!5177 = !DILocation(line: 1531, column: 14, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5179, file: !969, line: 1531, column: 13)
!5179 = distinct !DILexicalBlock(scope: !5174, file: !969, line: 1530, column: 28)
!5180 = !DILocation(line: 1531, column: 17, scope: !5178)
!5181 = !DILocation(line: 1531, column: 22, scope: !5178)
!5182 = !DILocation(line: 1531, column: 25, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5178, file: !969, discriminator: 1)
!5184 = !DILocation(line: 1531, column: 32, scope: !5183)
!5185 = !DILocation(line: 1531, column: 45, scope: !5183)
!5186 = !DILocation(line: 1531, column: 13, scope: !5183)
!5187 = !DILocation(line: 1532, column: 23, scope: !5178)
!5188 = !DILocation(line: 1532, column: 26, scope: !5178)
!5189 = !DILocation(line: 1532, column: 33, scope: !5178)
!5190 = !DILocation(line: 1532, column: 40, scope: !5178)
!5191 = !DILocation(line: 1532, column: 13, scope: !5178)
!5192 = !DILocation(line: 1533, column: 13, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5179, file: !969, line: 1533, column: 13)
!5194 = !DILocation(line: 1533, column: 20, scope: !5193)
!5195 = !DILocation(line: 1533, column: 13, scope: !5179)
!5196 = !DILocation(line: 1534, column: 23, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !969, line: 1533, column: 34)
!5198 = !DILocation(line: 1534, column: 26, scope: !5197)
!5199 = !DILocation(line: 1534, column: 33, scope: !5197)
!5200 = !DILocation(line: 1534, column: 36, scope: !5197)
!5201 = !DILocation(line: 1534, column: 46, scope: !5197)
!5202 = !DILocation(line: 1534, column: 13, scope: !5197)
!5203 = !DILocation(line: 1535, column: 23, scope: !5197)
!5204 = !DILocation(line: 1535, column: 26, scope: !5197)
!5205 = !DILocation(line: 1535, column: 33, scope: !5197)
!5206 = !DILocation(line: 1535, column: 36, scope: !5197)
!5207 = !DILocation(line: 1535, column: 46, scope: !5197)
!5208 = !DILocation(line: 1535, column: 13, scope: !5197)
!5209 = !DILocation(line: 1536, column: 9, scope: !5197)
!5210 = !DILocation(line: 1537, column: 5, scope: !5179)
!5211 = !DILocation(line: 1539, column: 10, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1539, column: 9)
!5213 = !DILocation(line: 1539, column: 13, scope: !5212)
!5214 = !DILocation(line: 1539, column: 9, scope: !4554)
!5215 = !DILocation(line: 1540, column: 19, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !969, line: 1539, column: 19)
!5217 = !DILocation(line: 1540, column: 22, scope: !5216)
!5218 = !DILocation(line: 1540, column: 9, scope: !5216)
!5219 = !DILocation(line: 1541, column: 19, scope: !5216)
!5220 = !DILocation(line: 1541, column: 22, scope: !5216)
!5221 = !DILocation(line: 1541, column: 9, scope: !5216)
!5222 = !DILocation(line: 1542, column: 5, scope: !5216)
!5223 = !DILocation(line: 1545, column: 16, scope: !4554)
!5224 = !DILocation(line: 1545, column: 23, scope: !4554)
!5225 = !DILocation(line: 1545, column: 15, scope: !4554)
!5226 = !DILocation(line: 1545, column: 13, scope: !4554)
!5227 = !DILocation(line: 1546, column: 13, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !4554, file: !969, line: 1546, column: 5)
!5229 = !DILocation(line: 1546, column: 10, scope: !5228)
!5230 = !DILocation(line: 1546, column: 18, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5232, file: !969, discriminator: 1)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !969, line: 1546, column: 5)
!5233 = !DILocation(line: 1546, column: 24, scope: !5231)
!5234 = !DILocation(line: 1546, column: 27, scope: !5231)
!5235 = !DILocation(line: 1546, column: 21, scope: !5231)
!5236 = !DILocation(line: 1546, column: 5, scope: !5231)
!5237 = !DILocalVariable(name: "b", scope: !5238, file: !969, line: 1547, type: !966)
!5238 = distinct !DILexicalBlock(scope: !5232, file: !969, line: 1546, column: 43)
!5239 = !DILocation(line: 1547, column: 13, scope: !5238)
!5240 = !DILocalVariable(name: "q", scope: !5238, file: !969, line: 1547, type: !966)
!5241 = !DILocation(line: 1547, column: 16, scope: !5238)
!5242 = !DILocation(line: 1549, column: 14, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !969, line: 1549, column: 13)
!5244 = !DILocation(line: 1549, column: 22, scope: !5243)
!5245 = !DILocation(line: 1549, column: 25, scope: !5246)
!5246 = !DILexicalBlockFile(scope: !5243, file: !969, discriminator: 1)
!5247 = !DILocation(line: 1549, column: 28, scope: !5246)
!5248 = !DILocation(line: 1549, column: 32, scope: !5246)
!5249 = !DILocation(line: 1549, column: 57, scope: !5250)
!5250 = !DILexicalBlockFile(scope: !5243, file: !969, discriminator: 2)
!5251 = !DILocation(line: 1549, column: 59, scope: !5250)
!5252 = !DILocation(line: 1549, column: 35, scope: !5250)
!5253 = !DILocation(line: 1549, column: 42, scope: !5250)
!5254 = !DILocation(line: 1549, column: 13, scope: !5250)
!5255 = !DILocation(line: 1550, column: 19, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5243, file: !969, line: 1549, column: 64)
!5257 = !DILocation(line: 1550, column: 22, scope: !5256)
!5258 = !DILocation(line: 1550, column: 17, scope: !5256)
!5259 = !DILocation(line: 1551, column: 16, scope: !5256)
!5260 = !DILocation(line: 1552, column: 21, scope: !5256)
!5261 = !DILocation(line: 1553, column: 9, scope: !5256)
!5262 = !DILocation(line: 1554, column: 32, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5238, file: !969, line: 1554, column: 9)
!5264 = !DILocation(line: 1554, column: 18, scope: !5263)
!5265 = !DILocation(line: 1554, column: 21, scope: !5263)
!5266 = !DILocation(line: 1554, column: 16, scope: !5263)
!5267 = !DILocation(line: 1554, column: 14, scope: !5263)
!5268 = !DILocation(line: 1554, column: 37, scope: !5269)
!5269 = !DILexicalBlockFile(scope: !5270, file: !969, discriminator: 1)
!5270 = distinct !DILexicalBlock(scope: !5263, file: !969, line: 1554, column: 9)
!5271 = !DILocation(line: 1554, column: 57, scope: !5269)
!5272 = !DILocation(line: 1554, column: 41, scope: !5269)
!5273 = !DILocation(line: 1554, column: 48, scope: !5269)
!5274 = !DILocation(line: 1554, column: 39, scope: !5269)
!5275 = !DILocation(line: 1554, column: 9, scope: !5269)
!5276 = !DILocation(line: 1555, column: 34, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5270, file: !969, line: 1554, column: 67)
!5278 = !DILocation(line: 1555, column: 17, scope: !5277)
!5279 = !DILocation(line: 1555, column: 30, scope: !5277)
!5280 = !DILocation(line: 1555, column: 24, scope: !5277)
!5281 = !DILocation(line: 1555, column: 15, scope: !5277)
!5282 = !DILocation(line: 1556, column: 37, scope: !5277)
!5283 = !DILocation(line: 1556, column: 17, scope: !5277)
!5284 = !DILocation(line: 1556, column: 32, scope: !5277)
!5285 = !DILocation(line: 1556, column: 28, scope: !5277)
!5286 = !DILocation(line: 1556, column: 20, scope: !5277)
!5287 = !DILocation(line: 1556, column: 15, scope: !5277)
!5288 = !DILocation(line: 1557, column: 21, scope: !5277)
!5289 = !DILocation(line: 1557, column: 13, scope: !5277)
!5290 = !DILocation(line: 1558, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5277, file: !969, line: 1557, column: 24)
!5292 = !DILocation(line: 1559, column: 25, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5291, file: !969, line: 1559, column: 25)
!5294 = !DILocation(line: 1559, column: 27, scope: !5293)
!5295 = !DILocation(line: 1559, column: 25, scope: !5291)
!5296 = !DILocation(line: 1559, column: 46, scope: !5297)
!5297 = !DILexicalBlockFile(scope: !5293, file: !969, discriminator: 1)
!5298 = !DILocation(line: 1559, column: 49, scope: !5297)
!5299 = !DILocation(line: 1559, column: 56, scope: !5297)
!5300 = !DILocation(line: 1559, column: 35, scope: !5297)
!5301 = !DILocation(line: 1559, column: 60, scope: !5302)
!5302 = !DILexicalBlockFile(scope: !5291, file: !969, discriminator: 2)
!5303 = !DILocation(line: 1560, column: 25, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5291, file: !969, line: 1560, column: 25)
!5305 = !DILocation(line: 1560, column: 27, scope: !5304)
!5306 = !DILocation(line: 1560, column: 25, scope: !5291)
!5307 = !DILocation(line: 1560, column: 46, scope: !5308)
!5308 = !DILexicalBlockFile(scope: !5304, file: !969, discriminator: 1)
!5309 = !DILocation(line: 1560, column: 49, scope: !5308)
!5310 = !DILocation(line: 1560, column: 56, scope: !5308)
!5311 = !DILocation(line: 1560, column: 35, scope: !5308)
!5312 = !DILocation(line: 1560, column: 60, scope: !5302)
!5313 = !DILocation(line: 1561, column: 32, scope: !5291)
!5314 = !DILocation(line: 1561, column: 35, scope: !5291)
!5315 = !DILocation(line: 1561, column: 42, scope: !5291)
!5316 = !DILocation(line: 1561, column: 21, scope: !5291)
!5317 = !DILocation(line: 1561, column: 46, scope: !5291)
!5318 = !DILocation(line: 1562, column: 25, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5291, file: !969, line: 1562, column: 25)
!5320 = !DILocation(line: 1562, column: 27, scope: !5319)
!5321 = !DILocation(line: 1562, column: 25, scope: !5291)
!5322 = !DILocation(line: 1562, column: 46, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5319, file: !969, discriminator: 1)
!5324 = !DILocation(line: 1562, column: 49, scope: !5323)
!5325 = !DILocation(line: 1562, column: 56, scope: !5323)
!5326 = !DILocation(line: 1562, column: 35, scope: !5323)
!5327 = !DILocation(line: 1562, column: 60, scope: !5302)
!5328 = !DILocation(line: 1563, column: 33, scope: !5291)
!5329 = !DILocation(line: 1563, column: 36, scope: !5291)
!5330 = !DILocation(line: 1563, column: 44, scope: !5291)
!5331 = !DILocation(line: 1563, column: 22, scope: !5291)
!5332 = !DILocation(line: 1563, column: 48, scope: !5291)
!5333 = !DILocation(line: 1564, column: 33, scope: !5291)
!5334 = !DILocation(line: 1564, column: 36, scope: !5291)
!5335 = !DILocation(line: 1564, column: 44, scope: !5291)
!5336 = !DILocation(line: 1564, column: 22, scope: !5291)
!5337 = !DILocation(line: 1564, column: 48, scope: !5291)
!5338 = !DILocation(line: 1565, column: 33, scope: !5291)
!5339 = !DILocation(line: 1565, column: 36, scope: !5291)
!5340 = !DILocation(line: 1565, column: 40, scope: !5291)
!5341 = !DILocation(line: 1565, column: 41, scope: !5291)
!5342 = !DILocation(line: 1565, column: 45, scope: !5291)
!5343 = !DILocation(line: 1565, column: 22, scope: !5291)
!5344 = !DILocation(line: 1565, column: 49, scope: !5291)
!5345 = !DILocation(line: 1567, column: 9, scope: !5277)
!5346 = !DILocation(line: 1554, column: 63, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5270, file: !969, discriminator: 2)
!5348 = !DILocation(line: 1554, column: 9, scope: !5347)
!5349 = distinct !{!5349, !5350}
!5350 = !DILocation(line: 1554, column: 9, scope: !5238)
!5351 = !DILocation(line: 1568, column: 13, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5238, file: !969, line: 1568, column: 13)
!5353 = !DILocation(line: 1568, column: 16, scope: !5352)
!5354 = !DILocation(line: 1568, column: 13, scope: !5238)
!5355 = !DILocation(line: 1569, column: 18, scope: !5352)
!5356 = !DILocation(line: 1569, column: 16, scope: !5352)
!5357 = !DILocation(line: 1569, column: 13, scope: !5352)
!5358 = !DILocation(line: 1570, column: 5, scope: !5238)
!5359 = !DILocation(line: 1546, column: 39, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !5232, file: !969, discriminator: 2)
!5361 = !DILocation(line: 1546, column: 5, scope: !5360)
!5362 = distinct !{!5362, !5363}
!5363 = !DILocation(line: 1546, column: 5, scope: !4554)
!5364 = !DILocation(line: 1571, column: 1, scope: !4554)
!5365 = distinct !DISubprogram(name: "output_frame_end", scope: !969, file: !969, line: 1612, type: !2176, isLocal: true, isDefinition: true, scopeLine: 1613, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!5366 = !DILocalVariable(name: "x", arg: 1, scope: !5367, file: !5368, line: 58, type: !962)
!5367 = distinct !DISubprogram(name: "av_bswap16", scope: !5368, file: !5368, line: 58, type: !5369, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!5368 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5369 = !DISubroutineType(types: !5370)
!5370 = !{!962, !962}
!5371 = !DILocation(line: 58, column: 98, scope: !5367, inlinedAt: !5372)
!5372 = distinct !DILocation(line: 1638, column: 51, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !969, line: 1632, column: 12)
!5374 = distinct !DILexicalBlock(scope: !5365, file: !969, line: 1629, column: 9)
!5375 = !DILocation(line: 58, column: 98, scope: !5367, inlinedAt: !5376)
!5376 = distinct !DILocation(line: 1650, column: 12, scope: !5365)
!5377 = !DILocation(line: 58, column: 98, scope: !5367, inlinedAt: !5378)
!5378 = distinct !DILocation(line: 1651, column: 67, scope: !5365)
!5379 = !DILocation(line: 58, column: 98, scope: !5367, inlinedAt: !5380)
!5380 = distinct !DILocation(line: 1635, column: 12, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5373, file: !969, discriminator: 1)
!5382 = !DILocalVariable(name: "s", arg: 1, scope: !5365, file: !969, line: 1612, type: !980)
!5383 = !DILocation(line: 1612, column: 48, scope: !5365)
!5384 = !DILocalVariable(name: "crc_ctx", scope: !5365, file: !969, line: 1614, type: !5385)
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5386, size: 64, align: 64)
!5386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5387)
!5387 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCRC", file: !937, line: 47, baseType: !954)
!5388 = !DILocation(line: 1614, column: 18, scope: !5365)
!5389 = !DILocation(line: 1614, column: 28, scope: !5365)
!5390 = !DILocalVariable(name: "frame_size_58", scope: !5365, file: !969, line: 1615, type: !966)
!5391 = !DILocation(line: 1615, column: 9, scope: !5365)
!5392 = !DILocalVariable(name: "pad_bytes", scope: !5365, file: !969, line: 1615, type: !966)
!5393 = !DILocation(line: 1615, column: 24, scope: !5365)
!5394 = !DILocalVariable(name: "crc1", scope: !5365, file: !969, line: 1615, type: !966)
!5395 = !DILocation(line: 1615, column: 35, scope: !5365)
!5396 = !DILocalVariable(name: "crc2_partial", scope: !5365, file: !969, line: 1615, type: !966)
!5397 = !DILocation(line: 1615, column: 41, scope: !5365)
!5398 = !DILocalVariable(name: "crc2", scope: !5365, file: !969, line: 1615, type: !966)
!5399 = !DILocation(line: 1615, column: 55, scope: !5365)
!5400 = !DILocalVariable(name: "crc_inv", scope: !5365, file: !969, line: 1615, type: !966)
!5401 = !DILocation(line: 1615, column: 61, scope: !5365)
!5402 = !DILocalVariable(name: "frame", scope: !5365, file: !969, line: 1616, type: !1179)
!5403 = !DILocation(line: 1616, column: 14, scope: !5365)
!5404 = !DILocation(line: 1618, column: 23, scope: !5365)
!5405 = !DILocation(line: 1618, column: 26, scope: !5365)
!5406 = !DILocation(line: 1618, column: 37, scope: !5365)
!5407 = !DILocation(line: 1618, column: 46, scope: !5365)
!5408 = !DILocation(line: 1618, column: 49, scope: !5365)
!5409 = !DILocation(line: 1618, column: 60, scope: !5365)
!5410 = !DILocation(line: 1618, column: 43, scope: !5365)
!5411 = !DILocation(line: 1618, column: 67, scope: !5365)
!5412 = !DILocation(line: 1618, column: 19, scope: !5365)
!5413 = !DILocation(line: 1622, column: 21, scope: !5365)
!5414 = !DILocation(line: 1622, column: 24, scope: !5365)
!5415 = !DILocation(line: 1622, column: 5, scope: !5365)
!5416 = !DILocation(line: 1623, column: 13, scope: !5365)
!5417 = !DILocation(line: 1623, column: 16, scope: !5365)
!5418 = !DILocation(line: 1623, column: 19, scope: !5365)
!5419 = !DILocation(line: 1623, column: 11, scope: !5365)
!5420 = !DILocation(line: 1624, column: 17, scope: !5365)
!5421 = !DILocation(line: 1624, column: 20, scope: !5365)
!5422 = !DILocation(line: 1624, column: 48, scope: !5365)
!5423 = !DILocation(line: 1624, column: 51, scope: !5365)
!5424 = !DILocation(line: 1624, column: 34, scope: !5365)
!5425 = !DILocation(line: 1624, column: 57, scope: !5365)
!5426 = !DILocation(line: 1624, column: 55, scope: !5365)
!5427 = !DILocation(line: 1624, column: 31, scope: !5365)
!5428 = !DILocation(line: 1624, column: 64, scope: !5365)
!5429 = !DILocation(line: 1624, column: 15, scope: !5365)
!5430 = !DILocation(line: 1626, column: 9, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5365, file: !969, line: 1626, column: 9)
!5432 = !DILocation(line: 1626, column: 19, scope: !5431)
!5433 = !DILocation(line: 1626, column: 9, scope: !5365)
!5434 = !DILocation(line: 1627, column: 30, scope: !5431)
!5435 = !DILocation(line: 1627, column: 33, scope: !5431)
!5436 = !DILocation(line: 1627, column: 16, scope: !5431)
!5437 = !DILocation(line: 1627, column: 41, scope: !5431)
!5438 = !DILocation(line: 1627, column: 9, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !5431, file: !969, discriminator: 1)
!5440 = !DILocation(line: 1627, column: 9, scope: !5431)
!5441 = !DILocation(line: 1629, column: 9, scope: !5374)
!5442 = !DILocation(line: 1629, column: 12, scope: !5374)
!5443 = !DILocation(line: 1629, column: 9, scope: !5365)
!5444 = !DILocation(line: 1631, column: 31, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5374, file: !969, line: 1629, column: 18)
!5446 = !DILocation(line: 1631, column: 43, scope: !5445)
!5447 = !DILocation(line: 1631, column: 49, scope: !5445)
!5448 = !DILocation(line: 1631, column: 54, scope: !5445)
!5449 = !DILocation(line: 1631, column: 57, scope: !5445)
!5450 = !DILocation(line: 1631, column: 68, scope: !5445)
!5451 = !DILocation(line: 1631, column: 24, scope: !5445)
!5452 = !DILocation(line: 1631, column: 22, scope: !5445)
!5453 = !DILocation(line: 1632, column: 5, scope: !5445)
!5454 = !DILocation(line: 1635, column: 30, scope: !5373)
!5455 = !DILocation(line: 1635, column: 42, scope: !5373)
!5456 = !DILocation(line: 1635, column: 48, scope: !5373)
!5457 = !DILocation(line: 1635, column: 53, scope: !5373)
!5458 = !DILocation(line: 1635, column: 67, scope: !5373)
!5459 = !DILocation(line: 1635, column: 23, scope: !5373)
!5460 = !DILocation(line: 1635, column: 12, scope: !5381)
!5461 = !DILocation(line: 60, column: 9, scope: !5367, inlinedAt: !5380)
!5462 = !DILocation(line: 60, column: 10, scope: !5367, inlinedAt: !5380)
!5463 = !DILocation(line: 60, column: 18, scope: !5367, inlinedAt: !5380)
!5464 = !DILocation(line: 60, column: 19, scope: !5367, inlinedAt: !5380)
!5465 = !DILocation(line: 60, column: 15, scope: !5367, inlinedAt: !5380)
!5466 = !DILocation(line: 60, column: 8, scope: !5367, inlinedAt: !5380)
!5467 = !DILocation(line: 60, column: 6, scope: !5367, inlinedAt: !5380)
!5468 = !DILocation(line: 61, column: 12, scope: !5367, inlinedAt: !5380)
!5469 = !DILocation(line: 1635, column: 12, scope: !5373)
!5470 = !DILocation(line: 1635, column: 10, scope: !5373)
!5471 = !DILocation(line: 1636, column: 26, scope: !5373)
!5472 = !DILocation(line: 1636, column: 29, scope: !5373)
!5473 = !DILocation(line: 1636, column: 42, scope: !5373)
!5474 = !DILocation(line: 1636, column: 45, scope: !5373)
!5475 = !DILocation(line: 1636, column: 40, scope: !5373)
!5476 = !DILocation(line: 1636, column: 15, scope: !5373)
!5477 = !DILocation(line: 1636, column: 18, scope: !5373)
!5478 = !DILocation(line: 1636, column: 13, scope: !5373)
!5479 = !DILocation(line: 1637, column: 21, scope: !5373)
!5480 = !DILocation(line: 1637, column: 30, scope: !5373)
!5481 = !DILocation(line: 1637, column: 12, scope: !5373)
!5482 = !DILocation(line: 1637, column: 10, scope: !5373)
!5483 = !DILocation(line: 1638, column: 62, scope: !5373)
!5484 = !DILocation(line: 1638, column: 51, scope: !5373)
!5485 = !DILocation(line: 60, column: 9, scope: !5367, inlinedAt: !5372)
!5486 = !DILocation(line: 60, column: 10, scope: !5367, inlinedAt: !5372)
!5487 = !DILocation(line: 60, column: 18, scope: !5367, inlinedAt: !5372)
!5488 = !DILocation(line: 60, column: 19, scope: !5367, inlinedAt: !5372)
!5489 = !DILocation(line: 60, column: 15, scope: !5367, inlinedAt: !5372)
!5490 = !DILocation(line: 60, column: 8, scope: !5367, inlinedAt: !5372)
!5491 = !DILocation(line: 60, column: 6, scope: !5367, inlinedAt: !5372)
!5492 = !DILocation(line: 61, column: 12, scope: !5367, inlinedAt: !5372)
!5493 = !DILocation(line: 1638, column: 32, scope: !5373)
!5494 = !DILocation(line: 1638, column: 38, scope: !5373)
!5495 = !DILocation(line: 1638, column: 45, scope: !5373)
!5496 = !DILocation(line: 1638, column: 48, scope: !5373)
!5497 = !DILocation(line: 1641, column: 27, scope: !5373)
!5498 = !DILocation(line: 1641, column: 39, scope: !5373)
!5499 = !DILocation(line: 1641, column: 47, scope: !5373)
!5500 = !DILocation(line: 1641, column: 45, scope: !5373)
!5501 = !DILocation(line: 1642, column: 27, scope: !5373)
!5502 = !DILocation(line: 1642, column: 30, scope: !5373)
!5503 = !DILocation(line: 1642, column: 43, scope: !5373)
!5504 = !DILocation(line: 1642, column: 41, scope: !5373)
!5505 = !DILocation(line: 1642, column: 57, scope: !5373)
!5506 = !DILocation(line: 1641, column: 20, scope: !5373)
!5507 = !DILocation(line: 1641, column: 18, scope: !5373)
!5508 = !DILocation(line: 1644, column: 19, scope: !5365)
!5509 = !DILocation(line: 1644, column: 28, scope: !5365)
!5510 = !DILocation(line: 1644, column: 42, scope: !5365)
!5511 = !DILocation(line: 1644, column: 50, scope: !5365)
!5512 = !DILocation(line: 1644, column: 53, scope: !5365)
!5513 = !DILocation(line: 1644, column: 48, scope: !5365)
!5514 = !DILocation(line: 1644, column: 64, scope: !5365)
!5515 = !DILocation(line: 1644, column: 12, scope: !5365)
!5516 = !DILocation(line: 1644, column: 10, scope: !5365)
!5517 = !DILocation(line: 1646, column: 9, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5365, file: !969, line: 1646, column: 9)
!5519 = !DILocation(line: 1646, column: 14, scope: !5518)
!5520 = !DILocation(line: 1646, column: 9, scope: !5365)
!5521 = !DILocation(line: 1647, column: 15, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5518, file: !969, line: 1646, column: 25)
!5523 = !DILocation(line: 1647, column: 18, scope: !5522)
!5524 = !DILocation(line: 1647, column: 29, scope: !5522)
!5525 = !DILocation(line: 1647, column: 9, scope: !5522)
!5526 = !DILocation(line: 1647, column: 34, scope: !5522)
!5527 = !DILocation(line: 1648, column: 23, scope: !5522)
!5528 = !DILocation(line: 1648, column: 32, scope: !5522)
!5529 = !DILocation(line: 1648, column: 46, scope: !5522)
!5530 = !DILocation(line: 1648, column: 54, scope: !5522)
!5531 = !DILocation(line: 1648, column: 57, scope: !5522)
!5532 = !DILocation(line: 1648, column: 52, scope: !5522)
!5533 = !DILocation(line: 1648, column: 68, scope: !5522)
!5534 = !DILocation(line: 1648, column: 16, scope: !5522)
!5535 = !DILocation(line: 1648, column: 14, scope: !5522)
!5536 = !DILocation(line: 1649, column: 5, scope: !5522)
!5537 = !DILocation(line: 1650, column: 23, scope: !5365)
!5538 = !DILocation(line: 1650, column: 12, scope: !5365)
!5539 = !DILocation(line: 60, column: 9, scope: !5367, inlinedAt: !5376)
!5540 = !DILocation(line: 60, column: 10, scope: !5367, inlinedAt: !5376)
!5541 = !DILocation(line: 60, column: 18, scope: !5367, inlinedAt: !5376)
!5542 = !DILocation(line: 60, column: 19, scope: !5367, inlinedAt: !5376)
!5543 = !DILocation(line: 60, column: 15, scope: !5367, inlinedAt: !5376)
!5544 = !DILocation(line: 60, column: 8, scope: !5367, inlinedAt: !5376)
!5545 = !DILocation(line: 60, column: 6, scope: !5367, inlinedAt: !5376)
!5546 = !DILocation(line: 61, column: 12, scope: !5367, inlinedAt: !5376)
!5547 = !DILocation(line: 1650, column: 10, scope: !5365)
!5548 = !DILocation(line: 1651, column: 78, scope: !5365)
!5549 = !DILocation(line: 1651, column: 67, scope: !5365)
!5550 = !DILocation(line: 60, column: 9, scope: !5367, inlinedAt: !5378)
!5551 = !DILocation(line: 60, column: 10, scope: !5367, inlinedAt: !5378)
!5552 = !DILocation(line: 60, column: 18, scope: !5367, inlinedAt: !5378)
!5553 = !DILocation(line: 60, column: 19, scope: !5367, inlinedAt: !5378)
!5554 = !DILocation(line: 60, column: 15, scope: !5367, inlinedAt: !5378)
!5555 = !DILocation(line: 60, column: 8, scope: !5367, inlinedAt: !5378)
!5556 = !DILocation(line: 60, column: 6, scope: !5367, inlinedAt: !5378)
!5557 = !DILocation(line: 61, column: 12, scope: !5367, inlinedAt: !5378)
!5558 = !DILocation(line: 1651, column: 32, scope: !5365)
!5559 = !DILocation(line: 1651, column: 40, scope: !5365)
!5560 = !DILocation(line: 1651, column: 43, scope: !5365)
!5561 = !DILocation(line: 1651, column: 38, scope: !5365)
!5562 = !DILocation(line: 1651, column: 54, scope: !5365)
!5563 = !DILocation(line: 1651, column: 61, scope: !5365)
!5564 = !DILocation(line: 1651, column: 64, scope: !5365)
!5565 = !DILocation(line: 1652, column: 1, scope: !5365)
!5566 = !DILocalVariable(name: "s", arg: 1, scope: !977, file: !969, line: 1833, type: !980)
!5567 = !DILocation(line: 1833, column: 48, scope: !977)
!5568 = !DILocalVariable(name: "avctx", scope: !977, file: !969, line: 1835, type: !1100)
!5569 = !DILocation(line: 1835, column: 21, scope: !977)
!5570 = !DILocation(line: 1835, column: 29, scope: !977)
!5571 = !DILocation(line: 1835, column: 32, scope: !977)
!5572 = !DILocalVariable(name: "opt", scope: !977, file: !969, line: 1836, type: !3328)
!5573 = !DILocation(line: 1836, column: 20, scope: !977)
!5574 = !DILocation(line: 1836, column: 27, scope: !977)
!5575 = !DILocation(line: 1836, column: 30, scope: !977)
!5576 = !DILocation(line: 1838, column: 5, scope: !977)
!5577 = !DILocation(line: 1838, column: 10, scope: !977)
!5578 = !DILocation(line: 1838, column: 32, scope: !977)
!5579 = !DILocation(line: 1839, column: 5, scope: !977)
!5580 = !DILocation(line: 1839, column: 10, scope: !977)
!5581 = !DILocation(line: 1839, column: 25, scope: !977)
!5582 = !DILocation(line: 1840, column: 5, scope: !977)
!5583 = !DILocation(line: 1840, column: 10, scope: !977)
!5584 = !DILocation(line: 1840, column: 25, scope: !977)
!5585 = !DILocation(line: 1841, column: 5, scope: !977)
!5586 = !DILocation(line: 1841, column: 10, scope: !977)
!5587 = !DILocation(line: 1841, column: 31, scope: !977)
!5588 = !DILocation(line: 1842, column: 5, scope: !977)
!5589 = !DILocation(line: 1842, column: 10, scope: !977)
!5590 = !DILocation(line: 1842, column: 29, scope: !977)
!5591 = !DILocation(line: 1845, column: 9, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1845, column: 9)
!5593 = !DILocation(line: 1845, column: 12, scope: !5592)
!5594 = !DILocation(line: 1845, column: 25, scope: !5592)
!5595 = !DILocation(line: 1845, column: 45, scope: !5592)
!5596 = !DILocation(line: 1845, column: 48, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !5592, file: !969, discriminator: 1)
!5598 = !DILocation(line: 1845, column: 53, scope: !5597)
!5599 = !DILocation(line: 1845, column: 78, scope: !5597)
!5600 = !DILocation(line: 1845, column: 9, scope: !5597)
!5601 = !DILocation(line: 1846, column: 9, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5592, file: !969, line: 1845, column: 85)
!5603 = !DILocation(line: 1846, column: 14, scope: !5602)
!5604 = !DILocation(line: 1846, column: 29, scope: !5602)
!5605 = !DILocation(line: 1847, column: 9, scope: !5602)
!5606 = !DILocation(line: 1847, column: 14, scope: !5602)
!5607 = !DILocation(line: 1847, column: 35, scope: !5602)
!5608 = !DILocation(line: 1848, column: 5, scope: !5602)
!5609 = !DILocation(line: 1849, column: 9, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1849, column: 9)
!5611 = !DILocation(line: 1849, column: 12, scope: !5610)
!5612 = !DILocation(line: 1849, column: 23, scope: !5610)
!5613 = !DILocation(line: 1850, column: 10, scope: !5610)
!5614 = !DILocation(line: 1850, column: 15, scope: !5610)
!5615 = !DILocation(line: 1850, column: 37, scope: !5610)
!5616 = !DILocation(line: 1850, column: 42, scope: !5610)
!5617 = !DILocation(line: 1850, column: 45, scope: !5618)
!5618 = !DILexicalBlockFile(scope: !5610, file: !969, discriminator: 1)
!5619 = !DILocation(line: 1850, column: 50, scope: !5618)
!5620 = !DILocation(line: 1850, column: 72, scope: !5618)
!5621 = !DILocation(line: 1849, column: 9, scope: !5622)
!5622 = !DILexicalBlockFile(scope: !977, file: !969, discriminator: 1)
!5623 = !DILocation(line: 1851, column: 9, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5610, file: !969, line: 1850, column: 79)
!5625 = !DILocation(line: 1851, column: 14, scope: !5624)
!5626 = !DILocation(line: 1851, column: 29, scope: !5624)
!5627 = !DILocation(line: 1852, column: 9, scope: !5624)
!5628 = !DILocation(line: 1852, column: 14, scope: !5624)
!5629 = !DILocation(line: 1852, column: 35, scope: !5624)
!5630 = !DILocation(line: 1853, column: 5, scope: !5624)
!5631 = !DILocation(line: 1854, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1854, column: 9)
!5633 = !DILocation(line: 1854, column: 12, scope: !5632)
!5634 = !DILocation(line: 1854, column: 25, scope: !5632)
!5635 = !DILocation(line: 1855, column: 10, scope: !5632)
!5636 = !DILocation(line: 1855, column: 15, scope: !5632)
!5637 = !DILocation(line: 1855, column: 39, scope: !5632)
!5638 = !DILocation(line: 1855, column: 44, scope: !5632)
!5639 = !DILocation(line: 1855, column: 47, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !5632, file: !969, discriminator: 1)
!5641 = !DILocation(line: 1855, column: 52, scope: !5640)
!5642 = !DILocation(line: 1855, column: 76, scope: !5640)
!5643 = !DILocation(line: 1854, column: 9, scope: !5622)
!5644 = !DILocation(line: 1856, column: 9, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5632, file: !969, line: 1855, column: 83)
!5646 = !DILocation(line: 1856, column: 14, scope: !5645)
!5647 = !DILocation(line: 1856, column: 29, scope: !5645)
!5648 = !DILocation(line: 1857, column: 9, scope: !5645)
!5649 = !DILocation(line: 1857, column: 14, scope: !5645)
!5650 = !DILocation(line: 1857, column: 35, scope: !5645)
!5651 = !DILocation(line: 1858, column: 5, scope: !5645)
!5652 = !DILocation(line: 1860, column: 9, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1860, column: 9)
!5654 = !DILocation(line: 1860, column: 12, scope: !5653)
!5655 = !DILocation(line: 1860, column: 9, scope: !977)
!5656 = !DILocation(line: 1862, column: 13, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !969, line: 1862, column: 13)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !969, line: 1860, column: 18)
!5659 = !DILocation(line: 1862, column: 20, scope: !5657)
!5660 = !DILocation(line: 1862, column: 39, scope: !5657)
!5661 = !DILocation(line: 1862, column: 13, scope: !5658)
!5662 = !DILocation(line: 1863, column: 13, scope: !5657)
!5663 = !DILocation(line: 1863, column: 18, scope: !5657)
!5664 = !DILocation(line: 1863, column: 37, scope: !5657)
!5665 = !DILocation(line: 1864, column: 13, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5658, file: !969, line: 1864, column: 13)
!5667 = !DILocation(line: 1864, column: 18, scope: !5666)
!5668 = !DILocation(line: 1864, column: 28, scope: !5666)
!5669 = !DILocation(line: 1864, column: 34, scope: !5666)
!5670 = !DILocation(line: 1864, column: 37, scope: !5671)
!5671 = !DILexicalBlockFile(scope: !5666, file: !969, discriminator: 1)
!5672 = !DILocation(line: 1864, column: 42, scope: !5671)
!5673 = !DILocation(line: 1864, column: 51, scope: !5671)
!5674 = !DILocation(line: 1864, column: 13, scope: !5671)
!5675 = !DILocation(line: 1865, column: 13, scope: !5666)
!5676 = !DILocation(line: 1865, column: 18, scope: !5666)
!5677 = !DILocation(line: 1865, column: 37, scope: !5666)
!5678 = !DILocation(line: 1866, column: 13, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5658, file: !969, line: 1866, column: 13)
!5680 = !DILocation(line: 1866, column: 16, scope: !5679)
!5681 = !DILocation(line: 1866, column: 29, scope: !5679)
!5682 = !DILocation(line: 1866, column: 50, scope: !5679)
!5683 = !DILocation(line: 1867, column: 14, scope: !5679)
!5684 = !DILocation(line: 1867, column: 19, scope: !5679)
!5685 = !DILocation(line: 1867, column: 40, scope: !5679)
!5686 = !DILocation(line: 1867, column: 46, scope: !5679)
!5687 = !DILocation(line: 1867, column: 49, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5679, file: !969, discriminator: 1)
!5689 = !DILocation(line: 1867, column: 54, scope: !5688)
!5690 = !DILocation(line: 1867, column: 74, scope: !5688)
!5691 = !DILocation(line: 1866, column: 13, scope: !5692)
!5692 = !DILexicalBlockFile(scope: !5658, file: !969, discriminator: 1)
!5693 = !DILocation(line: 1868, column: 13, scope: !5679)
!5694 = !DILocation(line: 1868, column: 18, scope: !5679)
!5695 = !DILocation(line: 1868, column: 37, scope: !5679)
!5696 = !DILocation(line: 1869, column: 13, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5658, file: !969, line: 1869, column: 13)
!5698 = !DILocation(line: 1869, column: 16, scope: !5697)
!5699 = !DILocation(line: 1869, column: 29, scope: !5697)
!5700 = !DILocation(line: 1869, column: 48, scope: !5697)
!5701 = !DILocation(line: 1869, column: 51, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5697, file: !969, discriminator: 1)
!5703 = !DILocation(line: 1869, column: 56, scope: !5702)
!5704 = !DILocation(line: 1869, column: 79, scope: !5702)
!5705 = !DILocation(line: 1869, column: 13, scope: !5702)
!5706 = !DILocation(line: 1870, column: 13, scope: !5697)
!5707 = !DILocation(line: 1870, column: 18, scope: !5697)
!5708 = !DILocation(line: 1870, column: 37, scope: !5697)
!5709 = !DILocation(line: 1871, column: 13, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5658, file: !969, line: 1871, column: 13)
!5711 = !DILocation(line: 1871, column: 18, scope: !5710)
!5712 = !DILocation(line: 1871, column: 31, scope: !5710)
!5713 = !DILocation(line: 1871, column: 37, scope: !5710)
!5714 = !DILocation(line: 1871, column: 40, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5710, file: !969, discriminator: 1)
!5716 = !DILocation(line: 1871, column: 45, scope: !5715)
!5717 = !DILocation(line: 1871, column: 55, scope: !5715)
!5718 = !DILocation(line: 1871, column: 61, scope: !5715)
!5719 = !DILocation(line: 1872, column: 13, scope: !5710)
!5720 = !DILocation(line: 1872, column: 18, scope: !5710)
!5721 = !DILocation(line: 1872, column: 36, scope: !5710)
!5722 = !DILocation(line: 1871, column: 13, scope: !5723)
!5723 = !DILexicalBlockFile(scope: !5658, file: !969, discriminator: 2)
!5724 = !DILocation(line: 1873, column: 13, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5710, file: !969, line: 1872, column: 43)
!5726 = !DILocation(line: 1873, column: 18, scope: !5725)
!5727 = !DILocation(line: 1873, column: 40, scope: !5725)
!5728 = !DILocation(line: 1874, column: 13, scope: !5725)
!5729 = !DILocation(line: 1874, column: 18, scope: !5725)
!5730 = !DILocation(line: 1874, column: 37, scope: !5725)
!5731 = !DILocation(line: 1875, column: 9, scope: !5725)
!5732 = !DILocation(line: 1876, column: 5, scope: !5658)
!5733 = !DILocation(line: 1878, column: 13, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5735, file: !969, line: 1878, column: 13)
!5735 = distinct !DILexicalBlock(scope: !5653, file: !969, line: 1876, column: 12)
!5736 = !DILocation(line: 1878, column: 18, scope: !5734)
!5737 = !DILocation(line: 1878, column: 31, scope: !5734)
!5738 = !DILocation(line: 1878, column: 37, scope: !5734)
!5739 = !DILocation(line: 1878, column: 40, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5734, file: !969, discriminator: 1)
!5741 = !DILocation(line: 1878, column: 45, scope: !5740)
!5742 = !DILocation(line: 1878, column: 55, scope: !5740)
!5743 = !DILocation(line: 1878, column: 13, scope: !5740)
!5744 = !DILocation(line: 1879, column: 13, scope: !5734)
!5745 = !DILocation(line: 1879, column: 18, scope: !5734)
!5746 = !DILocation(line: 1879, column: 40, scope: !5734)
!5747 = !DILocation(line: 1882, column: 13, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5735, file: !969, line: 1882, column: 13)
!5749 = !DILocation(line: 1882, column: 16, scope: !5748)
!5750 = !DILocation(line: 1882, column: 29, scope: !5748)
!5751 = !DILocation(line: 1882, column: 48, scope: !5748)
!5752 = !DILocation(line: 1882, column: 51, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5748, file: !969, discriminator: 1)
!5754 = !DILocation(line: 1882, column: 56, scope: !5753)
!5755 = !DILocation(line: 1882, column: 79, scope: !5753)
!5756 = !DILocation(line: 1882, column: 13, scope: !5753)
!5757 = !DILocation(line: 1883, column: 13, scope: !5748)
!5758 = !DILocation(line: 1883, column: 18, scope: !5748)
!5759 = !DILocation(line: 1883, column: 33, scope: !5748)
!5760 = !DILocation(line: 1884, column: 13, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5735, file: !969, line: 1884, column: 13)
!5762 = !DILocation(line: 1884, column: 16, scope: !5761)
!5763 = !DILocation(line: 1884, column: 29, scope: !5761)
!5764 = !DILocation(line: 1884, column: 50, scope: !5761)
!5765 = !DILocation(line: 1884, column: 53, scope: !5766)
!5766 = !DILexicalBlockFile(scope: !5761, file: !969, discriminator: 1)
!5767 = !DILocation(line: 1884, column: 58, scope: !5766)
!5768 = !DILocation(line: 1884, column: 79, scope: !5766)
!5769 = !DILocation(line: 1884, column: 13, scope: !5766)
!5770 = !DILocation(line: 1885, column: 13, scope: !5761)
!5771 = !DILocation(line: 1885, column: 18, scope: !5761)
!5772 = !DILocation(line: 1885, column: 33, scope: !5761)
!5773 = !DILocation(line: 1886, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5735, file: !969, line: 1886, column: 13)
!5775 = !DILocation(line: 1886, column: 18, scope: !5774)
!5776 = !DILocation(line: 1886, column: 36, scope: !5774)
!5777 = !DILocation(line: 1886, column: 13, scope: !5735)
!5778 = !DILocation(line: 1887, column: 13, scope: !5774)
!5779 = !DILocation(line: 1887, column: 18, scope: !5774)
!5780 = !DILocation(line: 1887, column: 33, scope: !5774)
!5781 = !DILocation(line: 1891, column: 10, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1891, column: 9)
!5783 = !DILocation(line: 1891, column: 13, scope: !5782)
!5784 = !DILocation(line: 1891, column: 9, scope: !977)
!5785 = !DILocation(line: 1892, column: 13, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !969, line: 1892, column: 13)
!5787 = distinct !DILexicalBlock(scope: !5782, file: !969, line: 1891, column: 19)
!5788 = !DILocation(line: 1892, column: 16, scope: !5786)
!5789 = !DILocation(line: 1892, column: 13, scope: !5787)
!5790 = !DILocation(line: 1893, column: 32, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5786, file: !969, line: 1892, column: 28)
!5792 = !DILocation(line: 1893, column: 60, scope: !5791)
!5793 = !DILocation(line: 1893, column: 65, scope: !5791)
!5794 = !DILocation(line: 1895, column: 30, scope: !5791)
!5795 = !DILocation(line: 1895, column: 33, scope: !5791)
!5796 = !DILocation(line: 1893, column: 13, scope: !5791)
!5797 = !DILocation(line: 1896, column: 9, scope: !5791)
!5798 = !DILocation(line: 1897, column: 13, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5787, file: !969, line: 1897, column: 13)
!5800 = !DILocation(line: 1897, column: 16, scope: !5799)
!5801 = !DILocation(line: 1897, column: 13, scope: !5787)
!5802 = !DILocation(line: 1898, column: 32, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5799, file: !969, line: 1897, column: 30)
!5804 = !DILocation(line: 1898, column: 62, scope: !5803)
!5805 = !DILocation(line: 1898, column: 67, scope: !5803)
!5806 = !DILocation(line: 1900, column: 30, scope: !5803)
!5807 = !DILocation(line: 1900, column: 33, scope: !5803)
!5808 = !DILocation(line: 1898, column: 13, scope: !5803)
!5809 = !DILocation(line: 1901, column: 9, scope: !5803)
!5810 = !DILocation(line: 1902, column: 5, scope: !5787)
!5811 = !DILocation(line: 1905, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1905, column: 9)
!5813 = !DILocation(line: 1905, column: 14, scope: !5812)
!5814 = !DILocation(line: 1905, column: 29, scope: !5812)
!5815 = !DILocation(line: 1905, column: 32, scope: !5816)
!5816 = !DILexicalBlockFile(scope: !5812, file: !969, discriminator: 1)
!5817 = !DILocation(line: 1905, column: 37, scope: !5816)
!5818 = !DILocation(line: 1905, column: 9, scope: !5816)
!5819 = !DILocation(line: 1907, column: 13, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !969, line: 1907, column: 13)
!5821 = distinct !DILexicalBlock(scope: !5812, file: !969, line: 1905, column: 59)
!5822 = !DILocation(line: 1907, column: 18, scope: !5820)
!5823 = !DILocation(line: 1907, column: 43, scope: !5820)
!5824 = !DILocation(line: 1907, column: 13, scope: !5821)
!5825 = !DILocation(line: 1908, column: 13, scope: !5820)
!5826 = !DILocation(line: 1908, column: 18, scope: !5820)
!5827 = !DILocation(line: 1908, column: 43, scope: !5820)
!5828 = !DILocation(line: 1909, column: 14, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5821, file: !969, line: 1909, column: 13)
!5830 = !DILocation(line: 1909, column: 17, scope: !5829)
!5831 = !DILocation(line: 1909, column: 22, scope: !5829)
!5832 = !DILocation(line: 1909, column: 25, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5829, file: !969, discriminator: 1)
!5834 = !DILocation(line: 1909, column: 28, scope: !5833)
!5835 = !DILocation(line: 1909, column: 13, scope: !5833)
!5836 = !DILocation(line: 1911, column: 32, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5829, file: !969, line: 1909, column: 40)
!5838 = !DILocation(line: 1912, column: 33, scope: !5837)
!5839 = !DILocation(line: 1912, column: 38, scope: !5837)
!5840 = !DILocation(line: 1914, column: 33, scope: !5837)
!5841 = !DILocation(line: 1914, column: 36, scope: !5837)
!5842 = !DILocation(line: 1911, column: 13, scope: !5837)
!5843 = !DILocation(line: 1916, column: 32, scope: !5837)
!5844 = !DILocation(line: 1917, column: 33, scope: !5837)
!5845 = !DILocation(line: 1917, column: 38, scope: !5837)
!5846 = !DILocation(line: 1919, column: 33, scope: !5837)
!5847 = !DILocation(line: 1919, column: 36, scope: !5837)
!5848 = !DILocation(line: 1916, column: 13, scope: !5837)
!5849 = !DILocation(line: 1920, column: 9, scope: !5837)
!5850 = !DILocation(line: 1921, column: 14, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5821, file: !969, line: 1921, column: 13)
!5852 = !DILocation(line: 1921, column: 17, scope: !5851)
!5853 = !DILocation(line: 1921, column: 22, scope: !5851)
!5854 = !DILocation(line: 1921, column: 25, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !5851, file: !969, discriminator: 1)
!5856 = !DILocation(line: 1921, column: 28, scope: !5855)
!5857 = !DILocation(line: 1921, column: 13, scope: !5855)
!5858 = !DILocation(line: 1923, column: 32, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5851, file: !969, line: 1921, column: 42)
!5860 = !DILocation(line: 1924, column: 33, scope: !5859)
!5861 = !DILocation(line: 1924, column: 38, scope: !5859)
!5862 = !DILocation(line: 1926, column: 33, scope: !5859)
!5863 = !DILocation(line: 1926, column: 36, scope: !5859)
!5864 = !DILocation(line: 1923, column: 13, scope: !5859)
!5865 = !DILocation(line: 1928, column: 32, scope: !5859)
!5866 = !DILocation(line: 1929, column: 33, scope: !5859)
!5867 = !DILocation(line: 1929, column: 38, scope: !5859)
!5868 = !DILocation(line: 1931, column: 33, scope: !5859)
!5869 = !DILocation(line: 1931, column: 36, scope: !5859)
!5870 = !DILocation(line: 1928, column: 13, scope: !5859)
!5871 = !DILocation(line: 1932, column: 9, scope: !5859)
!5872 = !DILocation(line: 1933, column: 5, scope: !5821)
!5873 = !DILocation(line: 1936, column: 10, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1936, column: 9)
!5875 = !DILocation(line: 1936, column: 17, scope: !5874)
!5876 = !DILocation(line: 1936, column: 36, scope: !5874)
!5877 = !DILocation(line: 1936, column: 69, scope: !5874)
!5878 = !DILocation(line: 1937, column: 10, scope: !5874)
!5879 = !DILocation(line: 1937, column: 17, scope: !5874)
!5880 = !DILocation(line: 1937, column: 26, scope: !5874)
!5881 = !DILocation(line: 1937, column: 32, scope: !5874)
!5882 = !DILocation(line: 1938, column: 11, scope: !5874)
!5883 = !DILocation(line: 1938, column: 18, scope: !5874)
!5884 = !DILocation(line: 1938, column: 37, scope: !5874)
!5885 = !DILocation(line: 1938, column: 73, scope: !5874)
!5886 = !DILocation(line: 1939, column: 11, scope: !5874)
!5887 = !DILocation(line: 1939, column: 18, scope: !5874)
!5888 = !DILocation(line: 1939, column: 37, scope: !5874)
!5889 = !DILocation(line: 1939, column: 72, scope: !5874)
!5890 = !DILocation(line: 1940, column: 11, scope: !5874)
!5891 = !DILocation(line: 1940, column: 18, scope: !5874)
!5892 = !DILocation(line: 1940, column: 37, scope: !5874)
!5893 = !DILocation(line: 1941, column: 10, scope: !5874)
!5894 = !DILocation(line: 1941, column: 13, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !5874, file: !969, discriminator: 1)
!5896 = !DILocation(line: 1941, column: 20, scope: !5895)
!5897 = !DILocation(line: 1941, column: 29, scope: !5895)
!5898 = !DILocation(line: 1936, column: 9, scope: !5622)
!5899 = !DILocation(line: 1942, column: 16, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5874, file: !969, line: 1941, column: 35)
!5901 = !DILocation(line: 1942, column: 9, scope: !5900)
!5902 = !DILocation(line: 1944, column: 9, scope: !5900)
!5903 = !DILocation(line: 1948, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1948, column: 9)
!5905 = !DILocation(line: 1948, column: 14, scope: !5904)
!5906 = !DILocation(line: 1948, column: 29, scope: !5904)
!5907 = !DILocation(line: 1948, column: 32, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !5904, file: !969, discriminator: 1)
!5909 = !DILocation(line: 1948, column: 37, scope: !5908)
!5910 = !DILocation(line: 1948, column: 9, scope: !5908)
!5911 = !DILocation(line: 1950, column: 13, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !969, line: 1950, column: 13)
!5913 = distinct !DILexicalBlock(scope: !5904, file: !969, line: 1948, column: 57)
!5914 = !DILocation(line: 1950, column: 18, scope: !5912)
!5915 = !DILocation(line: 1950, column: 39, scope: !5912)
!5916 = !DILocation(line: 1950, column: 13, scope: !5913)
!5917 = !DILocation(line: 1951, column: 13, scope: !5912)
!5918 = !DILocation(line: 1951, column: 18, scope: !5912)
!5919 = !DILocation(line: 1951, column: 39, scope: !5912)
!5920 = !DILocation(line: 1953, column: 13, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5913, file: !969, line: 1953, column: 13)
!5922 = !DILocation(line: 1953, column: 18, scope: !5921)
!5923 = !DILocation(line: 1953, column: 41, scope: !5921)
!5924 = !DILocation(line: 1953, column: 13, scope: !5913)
!5925 = !DILocation(line: 1954, column: 13, scope: !5921)
!5926 = !DILocation(line: 1954, column: 18, scope: !5921)
!5927 = !DILocation(line: 1954, column: 41, scope: !5921)
!5928 = !DILocation(line: 1956, column: 13, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5913, file: !969, line: 1956, column: 13)
!5930 = !DILocation(line: 1956, column: 18, scope: !5929)
!5931 = !DILocation(line: 1956, column: 36, scope: !5929)
!5932 = !DILocation(line: 1956, column: 13, scope: !5913)
!5933 = !DILocation(line: 1957, column: 13, scope: !5929)
!5934 = !DILocation(line: 1957, column: 18, scope: !5929)
!5935 = !DILocation(line: 1957, column: 36, scope: !5929)
!5936 = !DILocation(line: 1958, column: 5, scope: !5913)
!5937 = !DILocation(line: 1961, column: 10, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1961, column: 9)
!5939 = !DILocation(line: 1961, column: 13, scope: !5938)
!5940 = !DILocation(line: 1961, column: 18, scope: !5938)
!5941 = !DILocation(line: 1961, column: 21, scope: !5942)
!5942 = !DILexicalBlockFile(scope: !5938, file: !969, discriminator: 1)
!5943 = !DILocation(line: 1961, column: 26, scope: !5942)
!5944 = !DILocation(line: 1961, column: 9, scope: !5942)
!5945 = !DILocation(line: 1963, column: 13, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !969, line: 1963, column: 13)
!5947 = distinct !DILexicalBlock(scope: !5938, file: !969, line: 1961, column: 46)
!5948 = !DILocation(line: 1963, column: 18, scope: !5946)
!5949 = !DILocation(line: 1963, column: 28, scope: !5946)
!5950 = !DILocation(line: 1963, column: 13, scope: !5947)
!5951 = !DILocation(line: 1964, column: 13, scope: !5946)
!5952 = !DILocation(line: 1964, column: 18, scope: !5946)
!5953 = !DILocation(line: 1964, column: 28, scope: !5946)
!5954 = !DILocation(line: 1966, column: 13, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5947, file: !969, line: 1966, column: 13)
!5956 = !DILocation(line: 1966, column: 18, scope: !5955)
!5957 = !DILocation(line: 1966, column: 27, scope: !5955)
!5958 = !DILocation(line: 1966, column: 13, scope: !5947)
!5959 = !DILocation(line: 1967, column: 13, scope: !5955)
!5960 = !DILocation(line: 1967, column: 18, scope: !5955)
!5961 = !DILocation(line: 1967, column: 27, scope: !5955)
!5962 = !DILocation(line: 1968, column: 5, scope: !5947)
!5963 = !DILocation(line: 1971, column: 10, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1971, column: 9)
!5965 = !DILocation(line: 1971, column: 13, scope: !5964)
!5966 = !DILocation(line: 1971, column: 18, scope: !5964)
!5967 = !DILocation(line: 1971, column: 21, scope: !5968)
!5968 = !DILexicalBlockFile(scope: !5964, file: !969, discriminator: 1)
!5969 = !DILocation(line: 1971, column: 26, scope: !5968)
!5970 = !DILocation(line: 1971, column: 9, scope: !5968)
!5971 = !DILocation(line: 1972, column: 13, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !969, line: 1972, column: 13)
!5973 = distinct !DILexicalBlock(scope: !5964, file: !969, line: 1971, column: 46)
!5974 = !DILocation(line: 1972, column: 18, scope: !5972)
!5975 = !DILocation(line: 1972, column: 38, scope: !5972)
!5976 = !DILocation(line: 1972, column: 13, scope: !5973)
!5977 = !DILocation(line: 1973, column: 13, scope: !5972)
!5978 = !DILocation(line: 1973, column: 18, scope: !5972)
!5979 = !DILocation(line: 1973, column: 38, scope: !5972)
!5980 = !DILocation(line: 1974, column: 5, scope: !5973)
!5981 = !DILocation(line: 1977, column: 9, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1977, column: 9)
!5983 = !DILocation(line: 1977, column: 14, scope: !5982)
!5984 = !DILocation(line: 1977, column: 9, scope: !977)
!5985 = !DILocation(line: 1978, column: 13, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !969, line: 1978, column: 13)
!5987 = distinct !DILexicalBlock(scope: !5982, file: !969, line: 1977, column: 37)
!5988 = !DILocation(line: 1978, column: 18, scope: !5986)
!5989 = !DILocation(line: 1978, column: 31, scope: !5986)
!5990 = !DILocation(line: 1978, column: 13, scope: !5987)
!5991 = !DILocation(line: 1979, column: 20, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !969, line: 1978, column: 38)
!5993 = !DILocation(line: 1979, column: 13, scope: !5992)
!5994 = !DILocation(line: 1981, column: 13, scope: !5992)
!5995 = !DILocation(line: 1983, column: 13, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5987, file: !969, line: 1983, column: 13)
!5997 = !DILocation(line: 1983, column: 18, scope: !5996)
!5998 = !DILocation(line: 1983, column: 31, scope: !5996)
!5999 = !DILocation(line: 1983, column: 13, scope: !5987)
!6000 = !DILocation(line: 1984, column: 20, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5996, file: !969, line: 1983, column: 37)
!6002 = !DILocation(line: 1984, column: 13, scope: !6001)
!6003 = !DILocation(line: 1986, column: 13, scope: !6001)
!6004 = !DILocation(line: 1989, column: 13, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5987, file: !969, line: 1989, column: 13)
!6006 = !DILocation(line: 1989, column: 18, scope: !6005)
!6007 = !DILocation(line: 1989, column: 28, scope: !6005)
!6008 = !DILocation(line: 1989, column: 13, scope: !5987)
!6009 = !DILocation(line: 1990, column: 13, scope: !6005)
!6010 = !DILocation(line: 1990, column: 18, scope: !6005)
!6011 = !DILocation(line: 1990, column: 28, scope: !6005)
!6012 = !DILocation(line: 1991, column: 5, scope: !5987)
!6013 = !DILocation(line: 1994, column: 10, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !977, file: !969, line: 1994, column: 9)
!6015 = !DILocation(line: 1994, column: 13, scope: !6014)
!6016 = !DILocation(line: 1994, column: 18, scope: !6014)
!6017 = !DILocation(line: 1994, column: 22, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !6014, file: !969, discriminator: 1)
!6019 = !DILocation(line: 1994, column: 27, scope: !6018)
!6020 = !DILocation(line: 1994, column: 42, scope: !6018)
!6021 = !DILocation(line: 1994, column: 45, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !6014, file: !969, discriminator: 2)
!6023 = !DILocation(line: 1994, column: 50, scope: !6022)
!6024 = !DILocation(line: 1994, column: 9, scope: !6022)
!6025 = !DILocation(line: 1995, column: 13, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !969, line: 1995, column: 13)
!6027 = distinct !DILexicalBlock(scope: !6014, file: !969, line: 1994, column: 67)
!6028 = !DILocation(line: 1995, column: 16, scope: !6026)
!6029 = !DILocation(line: 1995, column: 29, scope: !6026)
!6030 = !DILocation(line: 1995, column: 33, scope: !6026)
!6031 = !DILocation(line: 1995, column: 36, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6026, file: !969, discriminator: 1)
!6033 = !DILocation(line: 1995, column: 39, scope: !6032)
!6034 = !DILocation(line: 1995, column: 52, scope: !6032)
!6035 = !DILocation(line: 1995, column: 13, scope: !6032)
!6036 = !DILocation(line: 1997, column: 17, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !969, line: 1997, column: 17)
!6038 = distinct !DILexicalBlock(scope: !6026, file: !969, line: 1995, column: 58)
!6039 = !DILocation(line: 1997, column: 17, scope: !6038)
!6040 = !DILocation(line: 1998, column: 24, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6037, file: !969, line: 1997, column: 28)
!6042 = !DILocation(line: 1998, column: 17, scope: !6041)
!6043 = !DILocation(line: 2001, column: 27, scope: !6041)
!6044 = !DILocation(line: 2002, column: 13, scope: !6041)
!6045 = !DILocation(line: 2003, column: 9, scope: !6038)
!6046 = !DILocation(line: 2004, column: 13, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6026, file: !969, line: 2003, column: 16)
!6048 = !DILocation(line: 2004, column: 16, scope: !6047)
!6049 = !DILocation(line: 2004, column: 29, scope: !6047)
!6050 = !DILocation(line: 2006, column: 5, scope: !6027)
!6051 = !DILocation(line: 2008, column: 5, scope: !977)
!6052 = !DILocation(line: 2009, column: 1, scope: !977)
!6053 = distinct !DISubprogram(name: "validate_mix_level", scope: !969, file: !969, line: 1809, type: !6054, isLocal: true, isDefinition: true, scopeLine: 1813, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !957, !991, !1806, !1807, !966, !966, !966, !1341}
!6056 = !DILocalVariable(name: "log_ctx", arg: 1, scope: !6053, file: !969, line: 1809, type: !957)
!6057 = !DILocation(line: 1809, column: 38, scope: !6053)
!6058 = !DILocalVariable(name: "opt_name", arg: 2, scope: !6053, file: !969, line: 1809, type: !991)
!6059 = !DILocation(line: 1809, column: 59, scope: !6053)
!6060 = !DILocalVariable(name: "opt_param", arg: 3, scope: !6053, file: !969, line: 1810, type: !1806)
!6061 = !DILocation(line: 1810, column: 39, scope: !6053)
!6062 = !DILocalVariable(name: "list", arg: 4, scope: !6053, file: !969, line: 1810, type: !1807)
!6063 = !DILocation(line: 1810, column: 63, scope: !6053)
!6064 = !DILocalVariable(name: "list_size", arg: 5, scope: !6053, file: !969, line: 1811, type: !966)
!6065 = !DILocation(line: 1811, column: 36, scope: !6053)
!6066 = !DILocalVariable(name: "default_value", arg: 6, scope: !6053, file: !969, line: 1811, type: !966)
!6067 = !DILocation(line: 1811, column: 51, scope: !6053)
!6068 = !DILocalVariable(name: "min_value", arg: 7, scope: !6053, file: !969, line: 1811, type: !966)
!6069 = !DILocation(line: 1811, column: 70, scope: !6053)
!6070 = !DILocalVariable(name: "ctx_param", arg: 8, scope: !6053, file: !969, line: 1812, type: !1341)
!6071 = !DILocation(line: 1812, column: 37, scope: !6053)
!6072 = !DILocalVariable(name: "mixlev", scope: !6053, file: !969, line: 1814, type: !966)
!6073 = !DILocation(line: 1814, column: 9, scope: !6053)
!6074 = !DILocation(line: 1814, column: 41, scope: !6053)
!6075 = !DILocation(line: 1814, column: 40, scope: !6053)
!6076 = !DILocation(line: 1814, column: 52, scope: !6053)
!6077 = !DILocation(line: 1814, column: 58, scope: !6053)
!6078 = !DILocation(line: 1814, column: 18, scope: !6053)
!6079 = !DILocation(line: 1815, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6053, file: !969, line: 1815, column: 9)
!6081 = !DILocation(line: 1815, column: 18, scope: !6080)
!6082 = !DILocation(line: 1815, column: 16, scope: !6080)
!6083 = !DILocation(line: 1815, column: 9, scope: !6053)
!6084 = !DILocation(line: 1816, column: 18, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !969, line: 1815, column: 29)
!6086 = !DILocation(line: 1816, column: 16, scope: !6085)
!6087 = !DILocation(line: 1817, column: 14, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6085, file: !969, line: 1817, column: 13)
!6089 = !DILocation(line: 1817, column: 13, scope: !6088)
!6090 = !DILocation(line: 1817, column: 24, scope: !6088)
!6091 = !DILocation(line: 1817, column: 13, scope: !6085)
!6092 = !DILocation(line: 1818, column: 20, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !969, line: 1817, column: 32)
!6094 = !DILocation(line: 1819, column: 46, scope: !6093)
!6095 = !DILocation(line: 1819, column: 61, scope: !6093)
!6096 = !DILocation(line: 1819, column: 56, scope: !6093)
!6097 = !DILocation(line: 1818, column: 13, scope: !6093)
!6098 = !DILocation(line: 1820, column: 9, scope: !6093)
!6099 = !DILocation(line: 1821, column: 5, scope: !6085)
!6100 = !DILocation(line: 1822, column: 23, scope: !6053)
!6101 = !DILocation(line: 1822, column: 18, scope: !6053)
!6102 = !DILocation(line: 1822, column: 6, scope: !6053)
!6103 = !DILocation(line: 1822, column: 16, scope: !6053)
!6104 = !DILocation(line: 1823, column: 18, scope: !6053)
!6105 = !DILocation(line: 1823, column: 6, scope: !6053)
!6106 = !DILocation(line: 1823, column: 16, scope: !6053)
!6107 = !DILocation(line: 1824, column: 1, scope: !6053)
!6108 = distinct !DISubprogram(name: "ff_ac3_encode_close", scope: !969, file: !969, line: 2017, type: !1151, isLocal: false, isDefinition: true, scopeLine: 2018, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6109 = !DILocalVariable(name: "avctx", arg: 1, scope: !6108, file: !969, line: 2017, type: !1100)
!6110 = !DILocation(line: 2017, column: 63, scope: !6108)
!6111 = !DILocalVariable(name: "blk", scope: !6108, file: !969, line: 2019, type: !966)
!6112 = !DILocation(line: 2019, column: 9, scope: !6108)
!6113 = !DILocalVariable(name: "ch", scope: !6108, file: !969, line: 2019, type: !966)
!6114 = !DILocation(line: 2019, column: 14, scope: !6108)
!6115 = !DILocalVariable(name: "s", scope: !6108, file: !969, line: 2020, type: !980)
!6116 = !DILocation(line: 2020, column: 23, scope: !6108)
!6117 = !DILocation(line: 2020, column: 27, scope: !6108)
!6118 = !DILocation(line: 2020, column: 34, scope: !6108)
!6119 = !DILocation(line: 2022, column: 15, scope: !6108)
!6120 = !DILocation(line: 2022, column: 18, scope: !6108)
!6121 = !DILocation(line: 2022, column: 14, scope: !6108)
!6122 = !DILocation(line: 2022, column: 5, scope: !6108)
!6123 = !DILocation(line: 2023, column: 9, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6108, file: !969, line: 2023, column: 9)
!6125 = !DILocation(line: 2023, column: 12, scope: !6124)
!6126 = !DILocation(line: 2023, column: 9, scope: !6108)
!6127 = !DILocation(line: 2024, column: 13, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6124, file: !969, line: 2024, column: 5)
!6129 = !DILocation(line: 2024, column: 10, scope: !6128)
!6130 = !DILocation(line: 2024, column: 18, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !6132, file: !969, discriminator: 1)
!6132 = distinct !DILexicalBlock(scope: !6128, file: !969, line: 2024, column: 5)
!6133 = !DILocation(line: 2024, column: 23, scope: !6131)
!6134 = !DILocation(line: 2024, column: 26, scope: !6131)
!6135 = !DILocation(line: 2024, column: 21, scope: !6131)
!6136 = !DILocation(line: 2024, column: 5, scope: !6131)
!6137 = !DILocation(line: 2025, column: 37, scope: !6132)
!6138 = !DILocation(line: 2025, column: 19, scope: !6132)
!6139 = !DILocation(line: 2025, column: 22, scope: !6132)
!6140 = !DILocation(line: 2025, column: 18, scope: !6132)
!6141 = !DILocation(line: 2025, column: 9, scope: !6132)
!6142 = !DILocation(line: 2024, column: 38, scope: !6143)
!6143 = !DILexicalBlockFile(scope: !6132, file: !969, discriminator: 2)
!6144 = !DILocation(line: 2024, column: 5, scope: !6143)
!6145 = distinct !{!6145, !6146}
!6146 = !DILocation(line: 2024, column: 5, scope: !6124)
!6147 = !DILocation(line: 2025, column: 40, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !6128, file: !969, discriminator: 1)
!6149 = !DILocation(line: 2026, column: 15, scope: !6108)
!6150 = !DILocation(line: 2026, column: 18, scope: !6108)
!6151 = !DILocation(line: 2026, column: 14, scope: !6108)
!6152 = !DILocation(line: 2026, column: 5, scope: !6108)
!6153 = !DILocation(line: 2027, column: 15, scope: !6108)
!6154 = !DILocation(line: 2027, column: 18, scope: !6108)
!6155 = !DILocation(line: 2027, column: 14, scope: !6108)
!6156 = !DILocation(line: 2027, column: 5, scope: !6108)
!6157 = !DILocation(line: 2028, column: 15, scope: !6108)
!6158 = !DILocation(line: 2028, column: 18, scope: !6108)
!6159 = !DILocation(line: 2028, column: 14, scope: !6108)
!6160 = !DILocation(line: 2028, column: 5, scope: !6108)
!6161 = !DILocation(line: 2029, column: 15, scope: !6108)
!6162 = !DILocation(line: 2029, column: 18, scope: !6108)
!6163 = !DILocation(line: 2029, column: 14, scope: !6108)
!6164 = !DILocation(line: 2029, column: 5, scope: !6108)
!6165 = !DILocation(line: 2030, column: 15, scope: !6108)
!6166 = !DILocation(line: 2030, column: 18, scope: !6108)
!6167 = !DILocation(line: 2030, column: 14, scope: !6108)
!6168 = !DILocation(line: 2030, column: 5, scope: !6108)
!6169 = !DILocation(line: 2031, column: 15, scope: !6108)
!6170 = !DILocation(line: 2031, column: 18, scope: !6108)
!6171 = !DILocation(line: 2031, column: 14, scope: !6108)
!6172 = !DILocation(line: 2031, column: 5, scope: !6108)
!6173 = !DILocation(line: 2032, column: 15, scope: !6108)
!6174 = !DILocation(line: 2032, column: 18, scope: !6108)
!6175 = !DILocation(line: 2032, column: 14, scope: !6108)
!6176 = !DILocation(line: 2032, column: 5, scope: !6108)
!6177 = !DILocation(line: 2033, column: 15, scope: !6108)
!6178 = !DILocation(line: 2033, column: 18, scope: !6108)
!6179 = !DILocation(line: 2033, column: 14, scope: !6108)
!6180 = !DILocation(line: 2033, column: 5, scope: !6108)
!6181 = !DILocation(line: 2034, column: 15, scope: !6108)
!6182 = !DILocation(line: 2034, column: 18, scope: !6108)
!6183 = !DILocation(line: 2034, column: 14, scope: !6108)
!6184 = !DILocation(line: 2034, column: 5, scope: !6108)
!6185 = !DILocation(line: 2035, column: 15, scope: !6108)
!6186 = !DILocation(line: 2035, column: 18, scope: !6108)
!6187 = !DILocation(line: 2035, column: 14, scope: !6108)
!6188 = !DILocation(line: 2035, column: 5, scope: !6108)
!6189 = !DILocation(line: 2036, column: 15, scope: !6108)
!6190 = !DILocation(line: 2036, column: 18, scope: !6108)
!6191 = !DILocation(line: 2036, column: 14, scope: !6108)
!6192 = !DILocation(line: 2036, column: 5, scope: !6108)
!6193 = !DILocation(line: 2037, column: 15, scope: !6108)
!6194 = !DILocation(line: 2037, column: 18, scope: !6108)
!6195 = !DILocation(line: 2037, column: 14, scope: !6108)
!6196 = !DILocation(line: 2037, column: 5, scope: !6108)
!6197 = !DILocation(line: 2038, column: 15, scope: !6108)
!6198 = !DILocation(line: 2038, column: 18, scope: !6108)
!6199 = !DILocation(line: 2038, column: 14, scope: !6108)
!6200 = !DILocation(line: 2038, column: 5, scope: !6108)
!6201 = !DILocation(line: 2039, column: 15, scope: !6108)
!6202 = !DILocation(line: 2039, column: 18, scope: !6108)
!6203 = !DILocation(line: 2039, column: 14, scope: !6108)
!6204 = !DILocation(line: 2039, column: 5, scope: !6108)
!6205 = !DILocation(line: 2040, column: 14, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6108, file: !969, line: 2040, column: 5)
!6207 = !DILocation(line: 2040, column: 10, scope: !6206)
!6208 = !DILocation(line: 2040, column: 19, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !6210, file: !969, discriminator: 1)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !969, line: 2040, column: 5)
!6211 = !DILocation(line: 2040, column: 25, scope: !6209)
!6212 = !DILocation(line: 2040, column: 28, scope: !6209)
!6213 = !DILocation(line: 2040, column: 23, scope: !6209)
!6214 = !DILocation(line: 2040, column: 5, scope: !6209)
!6215 = !DILocalVariable(name: "block", scope: !6216, file: !969, line: 2041, type: !2271)
!6216 = distinct !DILexicalBlock(scope: !6210, file: !969, line: 2040, column: 47)
!6217 = !DILocation(line: 2041, column: 19, scope: !6216)
!6218 = !DILocation(line: 2041, column: 38, scope: !6216)
!6219 = !DILocation(line: 2041, column: 28, scope: !6216)
!6220 = !DILocation(line: 2041, column: 31, scope: !6216)
!6221 = !DILocation(line: 2042, column: 19, scope: !6216)
!6222 = !DILocation(line: 2042, column: 26, scope: !6216)
!6223 = !DILocation(line: 2042, column: 18, scope: !6216)
!6224 = !DILocation(line: 2042, column: 9, scope: !6216)
!6225 = !DILocation(line: 2043, column: 19, scope: !6216)
!6226 = !DILocation(line: 2043, column: 26, scope: !6216)
!6227 = !DILocation(line: 2043, column: 18, scope: !6216)
!6228 = !DILocation(line: 2043, column: 9, scope: !6216)
!6229 = !DILocation(line: 2044, column: 19, scope: !6216)
!6230 = !DILocation(line: 2044, column: 26, scope: !6216)
!6231 = !DILocation(line: 2044, column: 18, scope: !6216)
!6232 = !DILocation(line: 2044, column: 9, scope: !6216)
!6233 = !DILocation(line: 2045, column: 19, scope: !6216)
!6234 = !DILocation(line: 2045, column: 26, scope: !6216)
!6235 = !DILocation(line: 2045, column: 18, scope: !6216)
!6236 = !DILocation(line: 2045, column: 9, scope: !6216)
!6237 = !DILocation(line: 2046, column: 19, scope: !6216)
!6238 = !DILocation(line: 2046, column: 26, scope: !6216)
!6239 = !DILocation(line: 2046, column: 18, scope: !6216)
!6240 = !DILocation(line: 2046, column: 9, scope: !6216)
!6241 = !DILocation(line: 2047, column: 19, scope: !6216)
!6242 = !DILocation(line: 2047, column: 26, scope: !6216)
!6243 = !DILocation(line: 2047, column: 18, scope: !6216)
!6244 = !DILocation(line: 2047, column: 9, scope: !6216)
!6245 = !DILocation(line: 2048, column: 19, scope: !6216)
!6246 = !DILocation(line: 2048, column: 26, scope: !6216)
!6247 = !DILocation(line: 2048, column: 18, scope: !6216)
!6248 = !DILocation(line: 2048, column: 9, scope: !6216)
!6249 = !DILocation(line: 2049, column: 19, scope: !6216)
!6250 = !DILocation(line: 2049, column: 26, scope: !6216)
!6251 = !DILocation(line: 2049, column: 18, scope: !6216)
!6252 = !DILocation(line: 2049, column: 9, scope: !6216)
!6253 = !DILocation(line: 2050, column: 19, scope: !6216)
!6254 = !DILocation(line: 2050, column: 26, scope: !6216)
!6255 = !DILocation(line: 2050, column: 18, scope: !6216)
!6256 = !DILocation(line: 2050, column: 9, scope: !6216)
!6257 = !DILocation(line: 2051, column: 19, scope: !6216)
!6258 = !DILocation(line: 2051, column: 26, scope: !6216)
!6259 = !DILocation(line: 2051, column: 18, scope: !6216)
!6260 = !DILocation(line: 2051, column: 9, scope: !6216)
!6261 = !DILocation(line: 2052, column: 5, scope: !6216)
!6262 = !DILocation(line: 2040, column: 43, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6210, file: !969, discriminator: 2)
!6264 = !DILocation(line: 2040, column: 5, scope: !6263)
!6265 = distinct !{!6265, !6266}
!6266 = !DILocation(line: 2040, column: 5, scope: !6108)
!6267 = !DILocation(line: 2054, column: 5, scope: !6108)
!6268 = !DILocation(line: 2054, column: 8, scope: !6108)
!6269 = !DILocation(line: 2054, column: 17, scope: !6108)
!6270 = !DILocation(line: 2056, column: 5, scope: !6108)
!6271 = distinct !DISubprogram(name: "ff_ac3_encode_init", scope: !969, file: !969, line: 2425, type: !1151, isLocal: false, isDefinition: true, scopeLine: 2426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6272 = !DILocalVariable(name: "avctx", arg: 1, scope: !6271, file: !969, line: 2425, type: !1100)
!6273 = !DILocation(line: 2425, column: 62, scope: !6271)
!6274 = !DILocalVariable(name: "s", scope: !6271, file: !969, line: 2427, type: !980)
!6275 = !DILocation(line: 2427, column: 23, scope: !6271)
!6276 = !DILocation(line: 2427, column: 27, scope: !6271)
!6277 = !DILocation(line: 2427, column: 34, scope: !6271)
!6278 = !DILocalVariable(name: "ret", scope: !6271, file: !969, line: 2428, type: !966)
!6279 = !DILocation(line: 2428, column: 9, scope: !6271)
!6280 = !DILocalVariable(name: "frame_size_58", scope: !6271, file: !969, line: 2428, type: !966)
!6281 = !DILocation(line: 2428, column: 14, scope: !6271)
!6282 = !DILocation(line: 2430, column: 16, scope: !6271)
!6283 = !DILocation(line: 2430, column: 5, scope: !6271)
!6284 = !DILocation(line: 2430, column: 8, scope: !6271)
!6285 = !DILocation(line: 2430, column: 14, scope: !6271)
!6286 = !DILocation(line: 2432, column: 15, scope: !6271)
!6287 = !DILocation(line: 2432, column: 22, scope: !6271)
!6288 = !DILocation(line: 2432, column: 31, scope: !6271)
!6289 = !DILocation(line: 2432, column: 5, scope: !6271)
!6290 = !DILocation(line: 2432, column: 8, scope: !6271)
!6291 = !DILocation(line: 2432, column: 13, scope: !6271)
!6292 = !DILocation(line: 2434, column: 28, scope: !6271)
!6293 = !DILocation(line: 2434, column: 11, scope: !6271)
!6294 = !DILocation(line: 2434, column: 9, scope: !6271)
!6295 = !DILocation(line: 2435, column: 9, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2435, column: 9)
!6297 = !DILocation(line: 2435, column: 9, scope: !6271)
!6298 = !DILocation(line: 2436, column: 16, scope: !6296)
!6299 = !DILocation(line: 2436, column: 9, scope: !6296)
!6300 = !DILocation(line: 2438, column: 31, scope: !6271)
!6301 = !DILocation(line: 2438, column: 34, scope: !6271)
!6302 = !DILocation(line: 2438, column: 29, scope: !6271)
!6303 = !DILocation(line: 2438, column: 5, scope: !6271)
!6304 = !DILocation(line: 2438, column: 12, scope: !6271)
!6305 = !DILocation(line: 2438, column: 23, scope: !6271)
!6306 = !DILocation(line: 2439, column: 5, scope: !6271)
!6307 = !DILocation(line: 2439, column: 12, scope: !6271)
!6308 = !DILocation(line: 2439, column: 28, scope: !6271)
!6309 = !DILocation(line: 2441, column: 25, scope: !6271)
!6310 = !DILocation(line: 2441, column: 32, scope: !6271)
!6311 = !DILocation(line: 2441, column: 5, scope: !6271)
!6312 = !DILocation(line: 2441, column: 8, scope: !6271)
!6313 = !DILocation(line: 2441, column: 23, scope: !6271)
!6314 = !DILocation(line: 2442, column: 9, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2442, column: 9)
!6316 = !DILocation(line: 2442, column: 12, scope: !6315)
!6317 = !DILocation(line: 2442, column: 27, scope: !6315)
!6318 = !DILocation(line: 2442, column: 9, scope: !6271)
!6319 = !DILocation(line: 2443, column: 9, scope: !6315)
!6320 = !DILocation(line: 2443, column: 12, scope: !6315)
!6321 = !DILocation(line: 2443, column: 27, scope: !6315)
!6322 = !DILocation(line: 2445, column: 5, scope: !6271)
!6323 = !DILocation(line: 2445, column: 8, scope: !6271)
!6324 = !DILocation(line: 2445, column: 21, scope: !6271)
!6325 = !DILocation(line: 2446, column: 5, scope: !6271)
!6326 = !DILocation(line: 2446, column: 8, scope: !6271)
!6327 = !DILocation(line: 2446, column: 24, scope: !6271)
!6328 = !DILocation(line: 2449, column: 24, scope: !6271)
!6329 = !DILocation(line: 2449, column: 27, scope: !6271)
!6330 = !DILocation(line: 2449, column: 38, scope: !6271)
!6331 = !DILocation(line: 2449, column: 48, scope: !6271)
!6332 = !DILocation(line: 2449, column: 51, scope: !6271)
!6333 = !DILocation(line: 2449, column: 62, scope: !6271)
!6334 = !DILocation(line: 2449, column: 44, scope: !6271)
!6335 = !DILocation(line: 2449, column: 69, scope: !6271)
!6336 = !DILocation(line: 2449, column: 19, scope: !6271)
!6337 = !DILocation(line: 2450, column: 89, scope: !6271)
!6338 = !DILocation(line: 2450, column: 87, scope: !6271)
!6339 = !DILocation(line: 2450, column: 104, scope: !6271)
!6340 = !DILocation(line: 2450, column: 21, scope: !6271)
!6341 = !DILocation(line: 2450, column: 5, scope: !6271)
!6342 = !DILocation(line: 2450, column: 8, scope: !6271)
!6343 = !DILocation(line: 2450, column: 19, scope: !6271)
!6344 = !DILocation(line: 2451, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2451, column: 9)
!6346 = !DILocation(line: 2451, column: 12, scope: !6345)
!6347 = !DILocation(line: 2451, column: 22, scope: !6345)
!6348 = !DILocation(line: 2451, column: 30, scope: !6345)
!6349 = !DILocation(line: 2451, column: 9, scope: !6271)
!6350 = !DILocation(line: 2452, column: 28, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6345, file: !969, line: 2451, column: 36)
!6352 = !DILocation(line: 2452, column: 31, scope: !6351)
!6353 = !DILocation(line: 2452, column: 41, scope: !6351)
!6354 = !DILocation(line: 2452, column: 45, scope: !6351)
!6355 = !DILocation(line: 2452, column: 55, scope: !6351)
!6356 = !DILocation(line: 2452, column: 58, scope: !6351)
!6357 = !DILocation(line: 2452, column: 68, scope: !6351)
!6358 = !DILocation(line: 2452, column: 72, scope: !6351)
!6359 = !DILocation(line: 2452, column: 51, scope: !6351)
!6360 = !DILocation(line: 2452, column: 79, scope: !6351)
!6361 = !DILocation(line: 2452, column: 23, scope: !6351)
!6362 = !DILocation(line: 2453, column: 93, scope: !6351)
!6363 = !DILocation(line: 2453, column: 91, scope: !6351)
!6364 = !DILocation(line: 2453, column: 108, scope: !6351)
!6365 = !DILocation(line: 2453, column: 25, scope: !6351)
!6366 = !DILocation(line: 2453, column: 9, scope: !6351)
!6367 = !DILocation(line: 2453, column: 12, scope: !6351)
!6368 = !DILocation(line: 2453, column: 23, scope: !6351)
!6369 = !DILocation(line: 2454, column: 5, scope: !6351)
!6370 = !DILocation(line: 2457, column: 14, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2457, column: 9)
!6372 = !DILocation(line: 2457, column: 17, scope: !6371)
!6373 = !DILocation(line: 2457, column: 9, scope: !6271)
!6374 = !DILocation(line: 2458, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6371, file: !969, line: 2457, column: 30)
!6376 = !DILocation(line: 2458, column: 12, scope: !6375)
!6377 = !DILocation(line: 2458, column: 21, scope: !6375)
!6378 = !DILocation(line: 2459, column: 9, scope: !6375)
!6379 = !DILocation(line: 2459, column: 12, scope: !6375)
!6380 = !DILocation(line: 2459, column: 22, scope: !6375)
!6381 = !DILocation(line: 2460, column: 9, scope: !6375)
!6382 = !DILocation(line: 2460, column: 12, scope: !6375)
!6383 = !DILocation(line: 2460, column: 36, scope: !6375)
!6384 = !DILocation(line: 2461, column: 5, scope: !6375)
!6385 = !DILocation(line: 2462, column: 9, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !969, line: 2461, column: 24)
!6387 = distinct !DILexicalBlock(scope: !6371, file: !969, line: 2461, column: 16)
!6388 = !DILocation(line: 2462, column: 12, scope: !6386)
!6389 = !DILocation(line: 2462, column: 21, scope: !6386)
!6390 = !DILocation(line: 2463, column: 9, scope: !6386)
!6391 = !DILocation(line: 2463, column: 12, scope: !6386)
!6392 = !DILocation(line: 2463, column: 22, scope: !6386)
!6393 = !DILocation(line: 2464, column: 9, scope: !6386)
!6394 = !DILocation(line: 2464, column: 12, scope: !6386)
!6395 = !DILocation(line: 2464, column: 36, scope: !6386)
!6396 = !DILocation(line: 2466, column: 14, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2466, column: 9)
!6398 = !DILocation(line: 2466, column: 17, scope: !6397)
!6399 = !DILocation(line: 2466, column: 9, scope: !6271)
!6400 = !DILocation(line: 2467, column: 9, scope: !6397)
!6401 = !DILocation(line: 2467, column: 12, scope: !6397)
!6402 = !DILocation(line: 2467, column: 32, scope: !6397)
!6403 = !DILocation(line: 2469, column: 9, scope: !6397)
!6404 = !DILocation(line: 2469, column: 12, scope: !6397)
!6405 = !DILocation(line: 2469, column: 32, scope: !6397)
!6406 = !DILocation(line: 2471, column: 19, scope: !6271)
!6407 = !DILocation(line: 2471, column: 5, scope: !6271)
!6408 = !DILocation(line: 2473, column: 19, scope: !6271)
!6409 = !DILocation(line: 2473, column: 5, scope: !6271)
!6410 = !DILocation(line: 2475, column: 20, scope: !6271)
!6411 = !DILocation(line: 2475, column: 5, scope: !6271)
!6412 = !DILocation(line: 2477, column: 11, scope: !6271)
!6413 = !DILocation(line: 2477, column: 14, scope: !6271)
!6414 = !DILocation(line: 2477, column: 24, scope: !6271)
!6415 = !DILocation(line: 2477, column: 9, scope: !6271)
!6416 = !DILocation(line: 2478, column: 9, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2478, column: 9)
!6418 = !DILocation(line: 2478, column: 9, scope: !6271)
!6419 = !DILocation(line: 2479, column: 9, scope: !6417)
!6420 = !DILocation(line: 2481, column: 28, scope: !6271)
!6421 = !DILocation(line: 2481, column: 11, scope: !6271)
!6422 = !DILocation(line: 2481, column: 9, scope: !6271)
!6423 = !DILocation(line: 2482, column: 9, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6271, file: !969, line: 2482, column: 9)
!6425 = !DILocation(line: 2482, column: 9, scope: !6271)
!6426 = !DILocation(line: 2483, column: 9, scope: !6424)
!6427 = !DILocation(line: 2485, column: 23, scope: !6271)
!6428 = !DILocation(line: 2485, column: 26, scope: !6271)
!6429 = !DILocation(line: 2485, column: 5, scope: !6271)
!6430 = !DILocation(line: 2486, column: 21, scope: !6271)
!6431 = !DILocation(line: 2486, column: 24, scope: !6271)
!6432 = !DILocation(line: 2486, column: 30, scope: !6271)
!6433 = !DILocation(line: 2486, column: 5, scope: !6271)
!6434 = !DILocation(line: 2487, column: 21, scope: !6271)
!6435 = !DILocation(line: 2487, column: 24, scope: !6271)
!6436 = !DILocation(line: 2487, column: 32, scope: !6271)
!6437 = !DILocation(line: 2487, column: 39, scope: !6271)
!6438 = !DILocation(line: 2487, column: 45, scope: !6271)
!6439 = !DILocation(line: 2487, column: 5, scope: !6271)
!6440 = !DILocation(line: 2489, column: 20, scope: !6271)
!6441 = !DILocation(line: 2489, column: 5, scope: !6271)
!6442 = !DILocation(line: 2491, column: 5, scope: !6271)
!6443 = !DILocation(line: 2493, column: 25, scope: !6271)
!6444 = !DILocation(line: 2493, column: 5, scope: !6271)
!6445 = !DILocation(line: 2494, column: 12, scope: !6271)
!6446 = !DILocation(line: 2494, column: 5, scope: !6271)
!6447 = !DILocation(line: 2495, column: 1, scope: !6271)
!6448 = distinct !DISubprogram(name: "validate_options", scope: !969, file: !969, line: 2108, type: !978, isLocal: true, isDefinition: true, scopeLine: 2109, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6449 = !DILocalVariable(name: "s", arg: 1, scope: !6448, file: !969, line: 2108, type: !980)
!6450 = !DILocation(line: 2108, column: 69, scope: !6448)
!6451 = !DILocalVariable(name: "avctx", scope: !6448, file: !969, line: 2110, type: !1100)
!6452 = !DILocation(line: 2110, column: 21, scope: !6448)
!6453 = !DILocation(line: 2110, column: 29, scope: !6448)
!6454 = !DILocation(line: 2110, column: 32, scope: !6448)
!6455 = !DILocalVariable(name: "i", scope: !6448, file: !969, line: 2111, type: !966)
!6456 = !DILocation(line: 2111, column: 9, scope: !6448)
!6457 = !DILocalVariable(name: "ret", scope: !6448, file: !969, line: 2111, type: !966)
!6458 = !DILocation(line: 2111, column: 12, scope: !6448)
!6459 = !DILocalVariable(name: "max_sr", scope: !6448, file: !969, line: 2111, type: !966)
!6460 = !DILocation(line: 2111, column: 17, scope: !6448)
!6461 = !DILocation(line: 2114, column: 10, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2114, column: 9)
!6463 = !DILocation(line: 2114, column: 17, scope: !6462)
!6464 = !DILocation(line: 2114, column: 9, scope: !6448)
!6465 = !DILocation(line: 2115, column: 16, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6462, file: !969, line: 2114, column: 33)
!6467 = !DILocation(line: 2115, column: 9, scope: !6466)
!6468 = !DILocation(line: 2118, column: 5, scope: !6466)
!6469 = !DILocation(line: 2119, column: 28, scope: !6448)
!6470 = !DILocation(line: 2119, column: 31, scope: !6448)
!6471 = !DILocation(line: 2119, column: 38, scope: !6448)
!6472 = !DILocation(line: 2119, column: 49, scope: !6448)
!6473 = !DILocation(line: 2119, column: 56, scope: !6448)
!6474 = !DILocation(line: 2119, column: 11, scope: !6448)
!6475 = !DILocation(line: 2119, column: 9, scope: !6448)
!6476 = !DILocation(line: 2120, column: 9, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2120, column: 9)
!6478 = !DILocation(line: 2120, column: 9, scope: !6448)
!6479 = !DILocation(line: 2121, column: 16, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !969, line: 2120, column: 14)
!6481 = !DILocation(line: 2121, column: 9, scope: !6480)
!6482 = !DILocation(line: 2122, column: 16, scope: !6480)
!6483 = !DILocation(line: 2122, column: 9, scope: !6480)
!6484 = !DILocation(line: 2129, column: 14, scope: !6448)
!6485 = !DILocation(line: 2129, column: 17, scope: !6448)
!6486 = !DILocation(line: 2129, column: 12, scope: !6448)
!6487 = !DILocation(line: 2130, column: 12, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2130, column: 5)
!6489 = !DILocation(line: 2130, column: 10, scope: !6488)
!6490 = !DILocation(line: 2130, column: 17, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !6492, file: !969, discriminator: 1)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !969, line: 2130, column: 5)
!6493 = !DILocation(line: 2130, column: 22, scope: !6491)
!6494 = !DILocation(line: 2130, column: 19, scope: !6491)
!6495 = !DILocation(line: 2130, column: 5, scope: !6491)
!6496 = !DILocation(line: 2131, column: 37, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !969, line: 2131, column: 13)
!6498 = distinct !DILexicalBlock(scope: !6492, file: !969, line: 2130, column: 35)
!6499 = !DILocation(line: 2131, column: 39, scope: !6497)
!6500 = !DILocation(line: 2131, column: 14, scope: !6497)
!6501 = !DILocation(line: 2131, column: 48, scope: !6497)
!6502 = !DILocation(line: 2131, column: 50, scope: !6497)
!6503 = !DILocation(line: 2131, column: 44, scope: !6497)
!6504 = !DILocation(line: 2131, column: 59, scope: !6497)
!6505 = !DILocation(line: 2131, column: 66, scope: !6497)
!6506 = !DILocation(line: 2131, column: 56, scope: !6497)
!6507 = !DILocation(line: 2131, column: 13, scope: !6498)
!6508 = !DILocation(line: 2132, column: 13, scope: !6497)
!6509 = !DILocation(line: 2133, column: 5, scope: !6498)
!6510 = !DILocation(line: 2130, column: 31, scope: !6511)
!6511 = !DILexicalBlockFile(scope: !6492, file: !969, discriminator: 2)
!6512 = !DILocation(line: 2130, column: 5, scope: !6511)
!6513 = distinct !{!6513, !6514}
!6514 = !DILocation(line: 2130, column: 5, scope: !6448)
!6515 = !DILocation(line: 2134, column: 9, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2134, column: 9)
!6517 = !DILocation(line: 2134, column: 13, scope: !6516)
!6518 = !DILocation(line: 2134, column: 11, scope: !6516)
!6519 = !DILocation(line: 2134, column: 9, scope: !6448)
!6520 = !DILocation(line: 2135, column: 16, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !969, line: 2134, column: 21)
!6522 = !DILocation(line: 2135, column: 9, scope: !6521)
!6523 = !DILocation(line: 2136, column: 9, scope: !6521)
!6524 = !DILocation(line: 2138, column: 22, scope: !6448)
!6525 = !DILocation(line: 2138, column: 29, scope: !6448)
!6526 = !DILocation(line: 2138, column: 5, scope: !6448)
!6527 = !DILocation(line: 2138, column: 8, scope: !6448)
!6528 = !DILocation(line: 2138, column: 20, scope: !6448)
!6529 = !DILocation(line: 2139, column: 29, scope: !6448)
!6530 = !DILocation(line: 2139, column: 31, scope: !6448)
!6531 = !DILocation(line: 2139, column: 5, scope: !6448)
!6532 = !DILocation(line: 2139, column: 8, scope: !6448)
!6533 = !DILocation(line: 2139, column: 18, scope: !6448)
!6534 = !DILocation(line: 2139, column: 27, scope: !6448)
!6535 = !DILocation(line: 2140, column: 28, scope: !6448)
!6536 = !DILocation(line: 2140, column: 30, scope: !6448)
!6537 = !DILocation(line: 2140, column: 5, scope: !6448)
!6538 = !DILocation(line: 2140, column: 8, scope: !6448)
!6539 = !DILocation(line: 2140, column: 18, scope: !6448)
!6540 = !DILocation(line: 2140, column: 26, scope: !6448)
!6541 = !DILocation(line: 2141, column: 23, scope: !6448)
!6542 = !DILocation(line: 2141, column: 26, scope: !6448)
!6543 = !DILocation(line: 2141, column: 23, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6448, file: !969, discriminator: 1)
!6545 = !DILocation(line: 2141, column: 42, scope: !6546)
!6546 = !DILexicalBlockFile(scope: !6448, file: !969, discriminator: 2)
!6547 = !DILocation(line: 2141, column: 45, scope: !6546)
!6548 = !DILocation(line: 2141, column: 55, scope: !6546)
!6549 = !DILocation(line: 2141, column: 40, scope: !6546)
!6550 = !DILocation(line: 2141, column: 23, scope: !6546)
!6551 = !DILocation(line: 2141, column: 23, scope: !6552)
!6552 = !DILexicalBlockFile(scope: !6448, file: !969, discriminator: 3)
!6553 = !DILocation(line: 2141, column: 5, scope: !6552)
!6554 = !DILocation(line: 2141, column: 8, scope: !6552)
!6555 = !DILocation(line: 2141, column: 21, scope: !6552)
!6556 = !DILocation(line: 2144, column: 10, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2144, column: 9)
!6558 = !DILocation(line: 2144, column: 17, scope: !6557)
!6559 = !DILocation(line: 2144, column: 9, scope: !6448)
!6560 = !DILocation(line: 2145, column: 17, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !969, line: 2144, column: 27)
!6562 = !DILocation(line: 2145, column: 20, scope: !6561)
!6563 = !DILocation(line: 2145, column: 9, scope: !6561)
!6564 = !DILocation(line: 2146, column: 17, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6561, file: !969, line: 2145, column: 34)
!6566 = !DILocation(line: 2146, column: 24, scope: !6565)
!6567 = !DILocation(line: 2146, column: 33, scope: !6565)
!6568 = !DILocation(line: 2146, column: 42, scope: !6565)
!6569 = !DILocation(line: 2147, column: 17, scope: !6565)
!6570 = !DILocation(line: 2147, column: 24, scope: !6565)
!6571 = !DILocation(line: 2147, column: 33, scope: !6565)
!6572 = !DILocation(line: 2147, column: 43, scope: !6565)
!6573 = !DILocation(line: 2148, column: 17, scope: !6565)
!6574 = !DILocation(line: 2148, column: 24, scope: !6565)
!6575 = !DILocation(line: 2148, column: 33, scope: !6565)
!6576 = !DILocation(line: 2148, column: 43, scope: !6565)
!6577 = !DILocation(line: 2149, column: 17, scope: !6565)
!6578 = !DILocation(line: 2149, column: 24, scope: !6565)
!6579 = !DILocation(line: 2149, column: 33, scope: !6565)
!6580 = !DILocation(line: 2149, column: 43, scope: !6565)
!6581 = !DILocation(line: 2150, column: 17, scope: !6565)
!6582 = !DILocation(line: 2150, column: 24, scope: !6565)
!6583 = !DILocation(line: 2150, column: 33, scope: !6565)
!6584 = !DILocation(line: 2150, column: 43, scope: !6565)
!6585 = !DILocation(line: 2152, column: 5, scope: !6561)
!6586 = !DILocation(line: 2155, column: 9, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2155, column: 9)
!6588 = !DILocation(line: 2155, column: 12, scope: !6587)
!6589 = !DILocation(line: 2155, column: 9, scope: !6448)
!6590 = !DILocalVariable(name: "max_br", scope: !6591, file: !969, line: 2156, type: !966)
!6591 = distinct !DILexicalBlock(scope: !6587, file: !969, line: 2155, column: 18)
!6592 = !DILocation(line: 2156, column: 13, scope: !6591)
!6593 = !DILocalVariable(name: "min_br", scope: !6591, file: !969, line: 2156, type: !966)
!6594 = !DILocation(line: 2156, column: 21, scope: !6591)
!6595 = !DILocalVariable(name: "wpf", scope: !6591, file: !969, line: 2156, type: !966)
!6596 = !DILocation(line: 2156, column: 29, scope: !6591)
!6597 = !DILocalVariable(name: "min_br_code", scope: !6591, file: !969, line: 2156, type: !966)
!6598 = !DILocation(line: 2156, column: 34, scope: !6591)
!6599 = !DILocalVariable(name: "num_blks_code", scope: !6591, file: !969, line: 2157, type: !966)
!6600 = !DILocation(line: 2157, column: 13, scope: !6591)
!6601 = !DILocalVariable(name: "num_blocks", scope: !6591, file: !969, line: 2157, type: !966)
!6602 = !DILocation(line: 2157, column: 28, scope: !6591)
!6603 = !DILocalVariable(name: "frame_samples", scope: !6591, file: !969, line: 2157, type: !966)
!6604 = !DILocation(line: 2157, column: 40, scope: !6591)
!6605 = !DILocalVariable(name: "min_br_dist", scope: !6591, file: !969, line: 2158, type: !6606)
!6606 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!6607 = !DILocation(line: 2158, column: 19, scope: !6591)
!6608 = !DILocation(line: 2164, column: 28, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6591, file: !969, line: 2164, column: 9)
!6610 = !DILocation(line: 2164, column: 14, scope: !6609)
!6611 = !DILocation(line: 2164, column: 33, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6613, file: !969, discriminator: 1)
!6613 = distinct !DILexicalBlock(scope: !6609, file: !969, line: 2164, column: 9)
!6614 = !DILocation(line: 2164, column: 47, scope: !6612)
!6615 = !DILocation(line: 2164, column: 9, scope: !6612)
!6616 = !DILocation(line: 2165, column: 50, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6613, file: !969, line: 2164, column: 70)
!6618 = !DILocation(line: 2165, column: 26, scope: !6617)
!6619 = !DILocation(line: 2165, column: 34, scope: !6617)
!6620 = !DILocation(line: 2165, column: 24, scope: !6617)
!6621 = !DILocation(line: 2166, column: 35, scope: !6617)
!6622 = !DILocation(line: 2166, column: 33, scope: !6617)
!6623 = !DILocation(line: 2166, column: 27, scope: !6617)
!6624 = !DILocation(line: 2167, column: 29, scope: !6617)
!6625 = !DILocation(line: 2167, column: 32, scope: !6617)
!6626 = !DILocation(line: 2167, column: 27, scope: !6617)
!6627 = !DILocation(line: 2167, column: 46, scope: !6617)
!6628 = !DILocation(line: 2167, column: 44, scope: !6617)
!6629 = !DILocation(line: 2167, column: 60, scope: !6617)
!6630 = !DILocation(line: 2167, column: 20, scope: !6617)
!6631 = !DILocation(line: 2168, column: 24, scope: !6617)
!6632 = !DILocation(line: 2168, column: 27, scope: !6617)
!6633 = !DILocation(line: 2168, column: 42, scope: !6617)
!6634 = !DILocation(line: 2168, column: 55, scope: !6617)
!6635 = !DILocation(line: 2168, column: 39, scope: !6617)
!6636 = !DILocation(line: 2168, column: 62, scope: !6617)
!6637 = !DILocation(line: 2168, column: 60, scope: !6617)
!6638 = !DILocation(line: 2168, column: 77, scope: !6617)
!6639 = !DILocation(line: 2168, column: 20, scope: !6617)
!6640 = !DILocation(line: 2169, column: 17, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6617, file: !969, line: 2169, column: 17)
!6642 = !DILocation(line: 2169, column: 24, scope: !6641)
!6643 = !DILocation(line: 2169, column: 36, scope: !6641)
!6644 = !DILocation(line: 2169, column: 33, scope: !6641)
!6645 = !DILocation(line: 2169, column: 17, scope: !6617)
!6646 = !DILocation(line: 2170, column: 17, scope: !6641)
!6647 = !DILocation(line: 2171, column: 9, scope: !6617)
!6648 = !DILocation(line: 2164, column: 66, scope: !6649)
!6649 = !DILexicalBlockFile(scope: !6613, file: !969, discriminator: 2)
!6650 = !DILocation(line: 2164, column: 9, scope: !6649)
!6651 = distinct !{!6651, !6652}
!6652 = !DILocation(line: 2164, column: 9, scope: !6591)
!6653 = !DILocation(line: 2172, column: 13, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6591, file: !969, line: 2172, column: 13)
!6655 = !DILocation(line: 2172, column: 20, scope: !6654)
!6656 = !DILocation(line: 2172, column: 31, scope: !6654)
!6657 = !DILocation(line: 2172, column: 29, scope: !6654)
!6658 = !DILocation(line: 2172, column: 38, scope: !6654)
!6659 = !DILocation(line: 2172, column: 41, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6654, file: !969, discriminator: 1)
!6661 = !DILocation(line: 2172, column: 48, scope: !6660)
!6662 = !DILocation(line: 2172, column: 59, scope: !6660)
!6663 = !DILocation(line: 2172, column: 57, scope: !6660)
!6664 = !DILocation(line: 2172, column: 13, scope: !6660)
!6665 = !DILocation(line: 2173, column: 20, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6654, file: !969, line: 2172, column: 67)
!6667 = !DILocation(line: 2174, column: 46, scope: !6666)
!6668 = !DILocation(line: 2174, column: 54, scope: !6666)
!6669 = !DILocation(line: 2173, column: 13, scope: !6666)
!6670 = !DILocation(line: 2175, column: 13, scope: !6666)
!6671 = !DILocation(line: 2177, column: 28, scope: !6591)
!6672 = !DILocation(line: 2177, column: 9, scope: !6591)
!6673 = !DILocation(line: 2177, column: 12, scope: !6591)
!6674 = !DILocation(line: 2177, column: 26, scope: !6591)
!6675 = !DILocation(line: 2178, column: 25, scope: !6591)
!6676 = !DILocation(line: 2178, column: 9, scope: !6591)
!6677 = !DILocation(line: 2178, column: 12, scope: !6591)
!6678 = !DILocation(line: 2178, column: 23, scope: !6591)
!6679 = !DILocation(line: 2181, column: 16, scope: !6591)
!6680 = !DILocation(line: 2181, column: 23, scope: !6591)
!6681 = !DILocation(line: 2181, column: 32, scope: !6591)
!6682 = !DILocation(line: 2181, column: 40, scope: !6591)
!6683 = !DILocation(line: 2181, column: 38, scope: !6591)
!6684 = !DILocation(line: 2181, column: 56, scope: !6591)
!6685 = !DILocation(line: 2181, column: 59, scope: !6591)
!6686 = !DILocation(line: 2181, column: 54, scope: !6591)
!6687 = !DILocation(line: 2181, column: 15, scope: !6591)
!6688 = !DILocation(line: 2181, column: 13, scope: !6591)
!6689 = !DILocation(line: 2187, column: 21, scope: !6591)
!6690 = !DILocation(line: 2188, column: 21, scope: !6591)
!6691 = !DILocation(line: 2189, column: 16, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6591, file: !969, line: 2189, column: 9)
!6693 = !DILocation(line: 2189, column: 14, scope: !6692)
!6694 = !DILocation(line: 2189, column: 21, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !6696, file: !969, discriminator: 1)
!6696 = distinct !DILexicalBlock(scope: !6692, file: !969, line: 2189, column: 9)
!6697 = !DILocation(line: 2189, column: 23, scope: !6695)
!6698 = !DILocation(line: 2189, column: 9, scope: !6695)
!6699 = !DILocalVariable(name: "br_dist", scope: !6700, file: !969, line: 2190, type: !6606)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !969, line: 2189, column: 34)
!6701 = !DILocation(line: 2190, column: 23, scope: !6700)
!6702 = !DILocation(line: 2190, column: 58, scope: !6700)
!6703 = !DILocation(line: 2190, column: 39, scope: !6700)
!6704 = !DILocation(line: 2190, column: 61, scope: !6700)
!6705 = !DILocation(line: 2190, column: 70, scope: !6700)
!6706 = !DILocation(line: 2190, column: 77, scope: !6700)
!6707 = !DILocation(line: 2190, column: 68, scope: !6700)
!6708 = !DILocation(line: 2190, column: 33, scope: !6700)
!6709 = !DILocation(line: 2191, column: 17, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6700, file: !969, line: 2191, column: 17)
!6711 = !DILocation(line: 2191, column: 27, scope: !6710)
!6712 = !DILocation(line: 2191, column: 25, scope: !6710)
!6713 = !DILocation(line: 2191, column: 17, scope: !6700)
!6714 = !DILocation(line: 2192, column: 31, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6710, file: !969, line: 2191, column: 40)
!6716 = !DILocation(line: 2192, column: 29, scope: !6715)
!6717 = !DILocation(line: 2193, column: 31, scope: !6715)
!6718 = !DILocation(line: 2193, column: 29, scope: !6715)
!6719 = !DILocation(line: 2194, column: 13, scope: !6715)
!6720 = !DILocation(line: 2195, column: 9, scope: !6700)
!6721 = !DILocation(line: 2189, column: 30, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !6696, file: !969, discriminator: 2)
!6723 = !DILocation(line: 2189, column: 9, scope: !6722)
!6724 = distinct !{!6724, !6725}
!6725 = !DILocation(line: 2189, column: 9, scope: !6591)
!6726 = !DILocation(line: 2198, column: 30, scope: !6591)
!6727 = !DILocation(line: 2198, column: 42, scope: !6591)
!6728 = !DILocation(line: 2198, column: 9, scope: !6591)
!6729 = !DILocation(line: 2198, column: 12, scope: !6591)
!6730 = !DILocation(line: 2198, column: 28, scope: !6591)
!6731 = !DILocation(line: 2199, column: 9, scope: !6591)
!6732 = !DILocation(line: 2199, column: 16, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6591, file: !969, discriminator: 1)
!6734 = !DILocation(line: 2199, column: 20, scope: !6733)
!6735 = !DILocation(line: 2199, column: 24, scope: !6733)
!6736 = !DILocation(line: 2199, column: 27, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !6591, file: !969, discriminator: 2)
!6738 = !DILocation(line: 2199, column: 33, scope: !6737)
!6739 = !DILocation(line: 2199, column: 36, scope: !6737)
!6740 = !DILocation(line: 2199, column: 31, scope: !6737)
!6741 = !DILocation(line: 2199, column: 48, scope: !6737)
!6742 = !DILocation(line: 2199, column: 60, scope: !6737)
!6743 = !DILocation(line: 2199, column: 67, scope: !6737)
!6744 = !DILocation(line: 2199, column: 74, scope: !6737)
!6745 = !DILocation(line: 2199, column: 65, scope: !6737)
!6746 = !DILocation(line: 2199, column: 9, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !6591, file: !969, discriminator: 3)
!6748 = !DILocation(line: 2200, column: 16, scope: !6591)
!6749 = !DILocation(line: 2199, column: 9, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !6591, file: !969, discriminator: 4)
!6751 = distinct !{!6751, !6731}
!6752 = !DILocation(line: 2201, column: 33, scope: !6591)
!6753 = !DILocation(line: 2201, column: 31, scope: !6591)
!6754 = !DILocation(line: 2201, column: 9, scope: !6591)
!6755 = !DILocation(line: 2201, column: 12, scope: !6591)
!6756 = !DILocation(line: 2201, column: 27, scope: !6591)
!6757 = !DILocation(line: 2202, column: 5, scope: !6591)
!6758 = !DILocalVariable(name: "best_br", scope: !6759, file: !969, line: 2203, type: !966)
!6759 = distinct !DILexicalBlock(scope: !6587, file: !969, line: 2202, column: 12)
!6760 = !DILocation(line: 2203, column: 13, scope: !6759)
!6761 = !DILocalVariable(name: "best_code", scope: !6759, file: !969, line: 2203, type: !966)
!6762 = !DILocation(line: 2203, column: 26, scope: !6759)
!6763 = !DILocalVariable(name: "best_diff", scope: !6759, file: !969, line: 2204, type: !6606)
!6764 = !DILocation(line: 2204, column: 19, scope: !6759)
!6765 = !DILocation(line: 2205, column: 16, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6759, file: !969, line: 2205, column: 9)
!6767 = !DILocation(line: 2205, column: 14, scope: !6766)
!6768 = !DILocation(line: 2205, column: 21, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6770, file: !969, discriminator: 1)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !969, line: 2205, column: 9)
!6771 = !DILocation(line: 2205, column: 23, scope: !6769)
!6772 = !DILocation(line: 2205, column: 9, scope: !6769)
!6773 = !DILocalVariable(name: "br", scope: !6774, file: !969, line: 2206, type: !966)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !969, line: 2205, column: 34)
!6775 = !DILocation(line: 2206, column: 17, scope: !6774)
!6776 = !DILocation(line: 2206, column: 42, scope: !6774)
!6777 = !DILocation(line: 2206, column: 23, scope: !6774)
!6778 = !DILocation(line: 2206, column: 48, scope: !6774)
!6779 = !DILocation(line: 2206, column: 51, scope: !6774)
!6780 = !DILocation(line: 2206, column: 61, scope: !6774)
!6781 = !DILocation(line: 2206, column: 45, scope: !6774)
!6782 = !DILocation(line: 2206, column: 71, scope: !6774)
!6783 = !DILocalVariable(name: "diff", scope: !6774, file: !969, line: 2207, type: !6606)
!6784 = !DILocation(line: 2207, column: 23, scope: !6774)
!6785 = !DILocation(line: 2207, column: 36, scope: !6774)
!6786 = !DILocation(line: 2207, column: 41, scope: !6774)
!6787 = !DILocation(line: 2207, column: 48, scope: !6774)
!6788 = !DILocation(line: 2207, column: 39, scope: !6774)
!6789 = !DILocation(line: 2207, column: 30, scope: !6774)
!6790 = !DILocation(line: 2208, column: 17, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6774, file: !969, line: 2208, column: 17)
!6792 = !DILocation(line: 2208, column: 24, scope: !6791)
!6793 = !DILocation(line: 2208, column: 22, scope: !6791)
!6794 = !DILocation(line: 2208, column: 17, scope: !6774)
!6795 = !DILocation(line: 2209, column: 27, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6791, file: !969, line: 2208, column: 35)
!6797 = !DILocation(line: 2209, column: 25, scope: !6796)
!6798 = !DILocation(line: 2210, column: 29, scope: !6796)
!6799 = !DILocation(line: 2210, column: 27, scope: !6796)
!6800 = !DILocation(line: 2211, column: 29, scope: !6796)
!6801 = !DILocation(line: 2211, column: 27, scope: !6796)
!6802 = !DILocation(line: 2212, column: 13, scope: !6796)
!6803 = !DILocation(line: 2213, column: 18, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6774, file: !969, line: 2213, column: 17)
!6805 = !DILocation(line: 2213, column: 17, scope: !6774)
!6806 = !DILocation(line: 2214, column: 17, scope: !6804)
!6807 = !DILocation(line: 2215, column: 9, scope: !6774)
!6808 = !DILocation(line: 2205, column: 30, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !6770, file: !969, discriminator: 2)
!6810 = !DILocation(line: 2205, column: 9, scope: !6809)
!6811 = distinct !{!6811, !6812}
!6812 = !DILocation(line: 2205, column: 9, scope: !6759)
!6813 = !DILocation(line: 2216, column: 27, scope: !6759)
!6814 = !DILocation(line: 2216, column: 9, scope: !6759)
!6815 = !DILocation(line: 2216, column: 16, scope: !6759)
!6816 = !DILocation(line: 2216, column: 25, scope: !6759)
!6817 = !DILocation(line: 2217, column: 30, scope: !6759)
!6818 = !DILocation(line: 2217, column: 40, scope: !6759)
!6819 = !DILocation(line: 2217, column: 9, scope: !6759)
!6820 = !DILocation(line: 2217, column: 12, scope: !6759)
!6821 = !DILocation(line: 2217, column: 28, scope: !6759)
!6822 = !DILocation(line: 2218, column: 75, scope: !6759)
!6823 = !DILocation(line: 2218, column: 78, scope: !6759)
!6824 = !DILocation(line: 2218, column: 88, scope: !6759)
!6825 = !DILocation(line: 2218, column: 33, scope: !6759)
!6826 = !DILocation(line: 2218, column: 55, scope: !6759)
!6827 = !DILocation(line: 2218, column: 58, scope: !6759)
!6828 = !DILocation(line: 2218, column: 31, scope: !6759)
!6829 = !DILocation(line: 2218, column: 9, scope: !6759)
!6830 = !DILocation(line: 2218, column: 12, scope: !6759)
!6831 = !DILocation(line: 2218, column: 27, scope: !6759)
!6832 = !DILocation(line: 2219, column: 9, scope: !6759)
!6833 = !DILocation(line: 2219, column: 12, scope: !6759)
!6834 = !DILocation(line: 2219, column: 26, scope: !6759)
!6835 = !DILocation(line: 2220, column: 9, scope: !6759)
!6836 = !DILocation(line: 2220, column: 12, scope: !6759)
!6837 = !DILocation(line: 2220, column: 23, scope: !6759)
!6838 = !DILocation(line: 2222, column: 19, scope: !6448)
!6839 = !DILocation(line: 2222, column: 26, scope: !6448)
!6840 = !DILocation(line: 2222, column: 5, scope: !6448)
!6841 = !DILocation(line: 2222, column: 8, scope: !6448)
!6842 = !DILocation(line: 2222, column: 17, scope: !6448)
!6843 = !DILocation(line: 2223, column: 21, scope: !6448)
!6844 = !DILocation(line: 2223, column: 24, scope: !6448)
!6845 = !DILocation(line: 2223, column: 5, scope: !6448)
!6846 = !DILocation(line: 2223, column: 8, scope: !6448)
!6847 = !DILocation(line: 2223, column: 19, scope: !6448)
!6848 = !DILocation(line: 2226, column: 9, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2226, column: 9)
!6850 = !DILocation(line: 2226, column: 16, scope: !6849)
!6851 = !DILocation(line: 2226, column: 23, scope: !6849)
!6852 = !DILocation(line: 2226, column: 9, scope: !6448)
!6853 = !DILocation(line: 2227, column: 16, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6849, file: !969, line: 2226, column: 28)
!6855 = !DILocation(line: 2227, column: 9, scope: !6854)
!6856 = !DILocation(line: 2228, column: 9, scope: !6854)
!6857 = !DILocation(line: 2230, column: 17, scope: !6448)
!6858 = !DILocation(line: 2230, column: 24, scope: !6448)
!6859 = !DILocation(line: 2230, column: 5, scope: !6448)
!6860 = !DILocation(line: 2230, column: 8, scope: !6448)
!6861 = !DILocation(line: 2230, column: 15, scope: !6448)
!6862 = !DILocation(line: 2231, column: 9, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2231, column: 9)
!6864 = !DILocation(line: 2231, column: 12, scope: !6863)
!6865 = !DILocation(line: 2231, column: 22, scope: !6863)
!6866 = !DILocation(line: 2231, column: 25, scope: !6863)
!6867 = !DILocation(line: 2231, column: 37, scope: !6863)
!6868 = !DILocation(line: 2231, column: 19, scope: !6863)
!6869 = !DILocation(line: 2231, column: 9, scope: !6448)
!6870 = !DILocation(line: 2232, column: 21, scope: !6863)
!6871 = !DILocation(line: 2232, column: 24, scope: !6863)
!6872 = !DILocation(line: 2232, column: 36, scope: !6863)
!6873 = !DILocation(line: 2232, column: 9, scope: !6863)
!6874 = !DILocation(line: 2232, column: 12, scope: !6863)
!6875 = !DILocation(line: 2232, column: 19, scope: !6863)
!6876 = !DILocation(line: 2234, column: 36, scope: !6448)
!6877 = !DILocation(line: 2234, column: 11, scope: !6448)
!6878 = !DILocation(line: 2234, column: 9, scope: !6448)
!6879 = !DILocation(line: 2235, column: 9, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6448, file: !969, line: 2235, column: 9)
!6881 = !DILocation(line: 2235, column: 9, scope: !6448)
!6882 = !DILocation(line: 2236, column: 16, scope: !6880)
!6883 = !DILocation(line: 2236, column: 9, scope: !6880)
!6884 = !DILocation(line: 2238, column: 30, scope: !6448)
!6885 = !DILocation(line: 2238, column: 33, scope: !6448)
!6886 = !DILocation(line: 2238, column: 41, scope: !6448)
!6887 = !DILocation(line: 2238, column: 60, scope: !6448)
!6888 = !DILocation(line: 2239, column: 31, scope: !6448)
!6889 = !DILocation(line: 2239, column: 34, scope: !6448)
!6890 = !DILocation(line: 2239, column: 47, scope: !6448)
!6891 = !DILocation(line: 2238, column: 60, scope: !6544)
!6892 = !DILocation(line: 2238, column: 5, scope: !6544)
!6893 = !DILocation(line: 2238, column: 8, scope: !6544)
!6894 = !DILocation(line: 2238, column: 28, scope: !6544)
!6895 = !DILocation(line: 2241, column: 22, scope: !6448)
!6896 = !DILocation(line: 2241, column: 25, scope: !6448)
!6897 = !DILocation(line: 2241, column: 33, scope: !6448)
!6898 = !DILocation(line: 2241, column: 50, scope: !6448)
!6899 = !DILocation(line: 2242, column: 22, scope: !6448)
!6900 = !DILocation(line: 2242, column: 25, scope: !6448)
!6901 = !DILocation(line: 2242, column: 38, scope: !6448)
!6902 = !DILocation(line: 2241, column: 50, scope: !6544)
!6903 = !DILocation(line: 2241, column: 5, scope: !6544)
!6904 = !DILocation(line: 2241, column: 8, scope: !6544)
!6905 = !DILocation(line: 2241, column: 20, scope: !6544)
!6906 = !DILocation(line: 2244, column: 5, scope: !6448)
!6907 = !DILocation(line: 2245, column: 1, scope: !6448)
!6908 = distinct !DISubprogram(name: "pow_poly", scope: !969, file: !969, line: 1595, type: !6909, isLocal: true, isDefinition: true, scopeLine: 1596, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!956, !956, !956, !956}
!6911 = !DILocalVariable(name: "a", arg: 1, scope: !6908, file: !969, line: 1595, type: !956)
!6912 = !DILocation(line: 1595, column: 43, scope: !6908)
!6913 = !DILocalVariable(name: "n", arg: 2, scope: !6908, file: !969, line: 1595, type: !956)
!6914 = !DILocation(line: 1595, column: 59, scope: !6908)
!6915 = !DILocalVariable(name: "poly", arg: 3, scope: !6908, file: !969, line: 1595, type: !956)
!6916 = !DILocation(line: 1595, column: 75, scope: !6908)
!6917 = !DILocalVariable(name: "r", scope: !6908, file: !969, line: 1597, type: !956)
!6918 = !DILocation(line: 1597, column: 18, scope: !6908)
!6919 = !DILocation(line: 1598, column: 7, scope: !6908)
!6920 = !DILocation(line: 1599, column: 5, scope: !6908)
!6921 = !DILocation(line: 1599, column: 12, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !6908, file: !969, discriminator: 1)
!6923 = !DILocation(line: 1599, column: 5, scope: !6922)
!6924 = !DILocation(line: 1600, column: 13, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !969, line: 1600, column: 13)
!6926 = distinct !DILexicalBlock(scope: !6908, file: !969, line: 1599, column: 15)
!6927 = !DILocation(line: 1600, column: 15, scope: !6925)
!6928 = !DILocation(line: 1600, column: 13, scope: !6926)
!6929 = !DILocation(line: 1601, column: 26, scope: !6925)
!6930 = !DILocation(line: 1601, column: 29, scope: !6925)
!6931 = !DILocation(line: 1601, column: 32, scope: !6925)
!6932 = !DILocation(line: 1601, column: 17, scope: !6925)
!6933 = !DILocation(line: 1601, column: 15, scope: !6925)
!6934 = !DILocation(line: 1601, column: 13, scope: !6925)
!6935 = !DILocation(line: 1602, column: 22, scope: !6926)
!6936 = !DILocation(line: 1602, column: 25, scope: !6926)
!6937 = !DILocation(line: 1602, column: 28, scope: !6926)
!6938 = !DILocation(line: 1602, column: 13, scope: !6926)
!6939 = !DILocation(line: 1602, column: 11, scope: !6926)
!6940 = !DILocation(line: 1603, column: 11, scope: !6926)
!6941 = !DILocation(line: 1599, column: 5, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !6908, file: !969, discriminator: 2)
!6943 = distinct !{!6943, !6920}
!6944 = !DILocation(line: 1605, column: 12, scope: !6908)
!6945 = !DILocation(line: 1605, column: 5, scope: !6908)
!6946 = distinct !DISubprogram(name: "ac3_output_frame_header", scope: !969, file: !969, line: 1329, type: !2176, isLocal: true, isDefinition: true, scopeLine: 1330, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!6947 = !DILocalVariable(name: "s", arg: 1, scope: !6946, file: !969, line: 1329, type: !980)
!6948 = !DILocation(line: 1329, column: 55, scope: !6946)
!6949 = !DILocalVariable(name: "opt", scope: !6946, file: !969, line: 1331, type: !3328)
!6950 = !DILocation(line: 1331, column: 20, scope: !6946)
!6951 = !DILocation(line: 1331, column: 27, scope: !6946)
!6952 = !DILocation(line: 1331, column: 30, scope: !6946)
!6953 = !DILocation(line: 1333, column: 15, scope: !6946)
!6954 = !DILocation(line: 1333, column: 18, scope: !6946)
!6955 = !DILocation(line: 1333, column: 5, scope: !6946)
!6956 = !DILocation(line: 1334, column: 15, scope: !6946)
!6957 = !DILocation(line: 1334, column: 18, scope: !6946)
!6958 = !DILocation(line: 1334, column: 5, scope: !6946)
!6959 = !DILocation(line: 1335, column: 15, scope: !6946)
!6960 = !DILocation(line: 1335, column: 18, scope: !6946)
!6961 = !DILocation(line: 1335, column: 25, scope: !6946)
!6962 = !DILocation(line: 1335, column: 28, scope: !6946)
!6963 = !DILocation(line: 1335, column: 38, scope: !6946)
!6964 = !DILocation(line: 1335, column: 5, scope: !6946)
!6965 = !DILocation(line: 1336, column: 15, scope: !6946)
!6966 = !DILocation(line: 1336, column: 18, scope: !6946)
!6967 = !DILocation(line: 1336, column: 25, scope: !6946)
!6968 = !DILocation(line: 1336, column: 28, scope: !6946)
!6969 = !DILocation(line: 1336, column: 47, scope: !6946)
!6970 = !DILocation(line: 1336, column: 50, scope: !6946)
!6971 = !DILocation(line: 1336, column: 63, scope: !6946)
!6972 = !DILocation(line: 1336, column: 66, scope: !6946)
!6973 = !DILocation(line: 1336, column: 61, scope: !6946)
!6974 = !DILocation(line: 1336, column: 82, scope: !6946)
!6975 = !DILocation(line: 1336, column: 44, scope: !6946)
!6976 = !DILocation(line: 1336, column: 5, scope: !6946)
!6977 = !DILocation(line: 1337, column: 15, scope: !6946)
!6978 = !DILocation(line: 1337, column: 18, scope: !6946)
!6979 = !DILocation(line: 1337, column: 25, scope: !6946)
!6980 = !DILocation(line: 1337, column: 28, scope: !6946)
!6981 = !DILocation(line: 1337, column: 5, scope: !6946)
!6982 = !DILocation(line: 1338, column: 15, scope: !6946)
!6983 = !DILocation(line: 1338, column: 18, scope: !6946)
!6984 = !DILocation(line: 1338, column: 25, scope: !6946)
!6985 = !DILocation(line: 1338, column: 28, scope: !6946)
!6986 = !DILocation(line: 1338, column: 5, scope: !6946)
!6987 = !DILocation(line: 1339, column: 15, scope: !6946)
!6988 = !DILocation(line: 1339, column: 18, scope: !6946)
!6989 = !DILocation(line: 1339, column: 25, scope: !6946)
!6990 = !DILocation(line: 1339, column: 28, scope: !6946)
!6991 = !DILocation(line: 1339, column: 5, scope: !6946)
!6992 = !DILocation(line: 1340, column: 10, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6946, file: !969, line: 1340, column: 9)
!6994 = !DILocation(line: 1340, column: 13, scope: !6993)
!6995 = !DILocation(line: 1340, column: 26, scope: !6993)
!6996 = !DILocation(line: 1340, column: 34, scope: !6993)
!6997 = !DILocation(line: 1340, column: 37, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !6993, file: !969, discriminator: 1)
!6999 = !DILocation(line: 1340, column: 40, scope: !6998)
!7000 = !DILocation(line: 1340, column: 53, scope: !6998)
!7001 = !DILocation(line: 1340, column: 9, scope: !6998)
!7002 = !DILocation(line: 1341, column: 19, scope: !6993)
!7003 = !DILocation(line: 1341, column: 22, scope: !6993)
!7004 = !DILocation(line: 1341, column: 29, scope: !6993)
!7005 = !DILocation(line: 1341, column: 32, scope: !6993)
!7006 = !DILocation(line: 1341, column: 9, scope: !6993)
!7007 = !DILocation(line: 1342, column: 9, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6946, file: !969, line: 1342, column: 9)
!7009 = !DILocation(line: 1342, column: 12, scope: !7008)
!7010 = !DILocation(line: 1342, column: 25, scope: !7008)
!7011 = !DILocation(line: 1342, column: 9, scope: !6946)
!7012 = !DILocation(line: 1343, column: 19, scope: !7008)
!7013 = !DILocation(line: 1343, column: 22, scope: !7008)
!7014 = !DILocation(line: 1343, column: 29, scope: !7008)
!7015 = !DILocation(line: 1343, column: 32, scope: !7008)
!7016 = !DILocation(line: 1343, column: 9, scope: !7008)
!7017 = !DILocation(line: 1344, column: 9, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6946, file: !969, line: 1344, column: 9)
!7019 = !DILocation(line: 1344, column: 12, scope: !7018)
!7020 = !DILocation(line: 1344, column: 25, scope: !7018)
!7021 = !DILocation(line: 1344, column: 9, scope: !6946)
!7022 = !DILocation(line: 1345, column: 19, scope: !7018)
!7023 = !DILocation(line: 1345, column: 22, scope: !7018)
!7024 = !DILocation(line: 1345, column: 29, scope: !7018)
!7025 = !DILocation(line: 1345, column: 34, scope: !7018)
!7026 = !DILocation(line: 1345, column: 9, scope: !7018)
!7027 = !DILocation(line: 1346, column: 15, scope: !6946)
!7028 = !DILocation(line: 1346, column: 18, scope: !6946)
!7029 = !DILocation(line: 1346, column: 25, scope: !6946)
!7030 = !DILocation(line: 1346, column: 28, scope: !6946)
!7031 = !DILocation(line: 1346, column: 5, scope: !6946)
!7032 = !DILocation(line: 1347, column: 15, scope: !6946)
!7033 = !DILocation(line: 1347, column: 18, scope: !6946)
!7034 = !DILocation(line: 1347, column: 26, scope: !6946)
!7035 = !DILocation(line: 1347, column: 31, scope: !6946)
!7036 = !DILocation(line: 1347, column: 25, scope: !6946)
!7037 = !DILocation(line: 1347, column: 5, scope: !6946)
!7038 = !DILocation(line: 1348, column: 15, scope: !6946)
!7039 = !DILocation(line: 1348, column: 18, scope: !6946)
!7040 = !DILocation(line: 1348, column: 5, scope: !6946)
!7041 = !DILocation(line: 1349, column: 15, scope: !6946)
!7042 = !DILocation(line: 1349, column: 18, scope: !6946)
!7043 = !DILocation(line: 1349, column: 5, scope: !6946)
!7044 = !DILocation(line: 1350, column: 15, scope: !6946)
!7045 = !DILocation(line: 1350, column: 18, scope: !6946)
!7046 = !DILocation(line: 1350, column: 25, scope: !6946)
!7047 = !DILocation(line: 1350, column: 30, scope: !6946)
!7048 = !DILocation(line: 1350, column: 5, scope: !6946)
!7049 = !DILocation(line: 1351, column: 9, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !6946, file: !969, line: 1351, column: 9)
!7051 = !DILocation(line: 1351, column: 14, scope: !7050)
!7052 = !DILocation(line: 1351, column: 9, scope: !6946)
!7053 = !DILocation(line: 1352, column: 19, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7050, file: !969, line: 1351, column: 37)
!7055 = !DILocation(line: 1352, column: 22, scope: !7054)
!7056 = !DILocation(line: 1352, column: 29, scope: !7054)
!7057 = !DILocation(line: 1352, column: 34, scope: !7054)
!7058 = !DILocation(line: 1352, column: 47, scope: !7054)
!7059 = !DILocation(line: 1352, column: 9, scope: !7054)
!7060 = !DILocation(line: 1353, column: 19, scope: !7054)
!7061 = !DILocation(line: 1353, column: 22, scope: !7054)
!7062 = !DILocation(line: 1353, column: 29, scope: !7054)
!7063 = !DILocation(line: 1353, column: 34, scope: !7054)
!7064 = !DILocation(line: 1353, column: 9, scope: !7054)
!7065 = !DILocation(line: 1354, column: 5, scope: !7054)
!7066 = !DILocation(line: 1355, column: 15, scope: !6946)
!7067 = !DILocation(line: 1355, column: 18, scope: !6946)
!7068 = !DILocation(line: 1355, column: 25, scope: !6946)
!7069 = !DILocation(line: 1355, column: 30, scope: !6946)
!7070 = !DILocation(line: 1355, column: 5, scope: !6946)
!7071 = !DILocation(line: 1356, column: 15, scope: !6946)
!7072 = !DILocation(line: 1356, column: 18, scope: !6946)
!7073 = !DILocation(line: 1356, column: 25, scope: !6946)
!7074 = !DILocation(line: 1356, column: 30, scope: !6946)
!7075 = !DILocation(line: 1356, column: 5, scope: !6946)
!7076 = !DILocation(line: 1357, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !6946, file: !969, line: 1357, column: 9)
!7078 = !DILocation(line: 1357, column: 12, scope: !7077)
!7079 = !DILocation(line: 1357, column: 25, scope: !7077)
!7080 = !DILocation(line: 1357, column: 9, scope: !6946)
!7081 = !DILocation(line: 1359, column: 19, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !969, line: 1357, column: 31)
!7083 = !DILocation(line: 1359, column: 22, scope: !7082)
!7084 = !DILocation(line: 1359, column: 29, scope: !7082)
!7085 = !DILocation(line: 1359, column: 34, scope: !7082)
!7086 = !DILocation(line: 1359, column: 9, scope: !7082)
!7087 = !DILocation(line: 1360, column: 13, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7082, file: !969, line: 1360, column: 13)
!7089 = !DILocation(line: 1360, column: 18, scope: !7088)
!7090 = !DILocation(line: 1360, column: 13, scope: !7082)
!7091 = !DILocation(line: 1361, column: 23, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7088, file: !969, line: 1360, column: 34)
!7093 = !DILocation(line: 1361, column: 26, scope: !7092)
!7094 = !DILocation(line: 1361, column: 33, scope: !7092)
!7095 = !DILocation(line: 1361, column: 38, scope: !7092)
!7096 = !DILocation(line: 1361, column: 13, scope: !7092)
!7097 = !DILocation(line: 1362, column: 23, scope: !7092)
!7098 = !DILocation(line: 1362, column: 26, scope: !7092)
!7099 = !DILocation(line: 1362, column: 33, scope: !7092)
!7100 = !DILocation(line: 1362, column: 36, scope: !7092)
!7101 = !DILocation(line: 1362, column: 13, scope: !7092)
!7102 = !DILocation(line: 1363, column: 23, scope: !7092)
!7103 = !DILocation(line: 1363, column: 26, scope: !7092)
!7104 = !DILocation(line: 1363, column: 33, scope: !7092)
!7105 = !DILocation(line: 1363, column: 36, scope: !7092)
!7106 = !DILocation(line: 1363, column: 13, scope: !7092)
!7107 = !DILocation(line: 1364, column: 23, scope: !7092)
!7108 = !DILocation(line: 1364, column: 26, scope: !7092)
!7109 = !DILocation(line: 1364, column: 33, scope: !7092)
!7110 = !DILocation(line: 1364, column: 36, scope: !7092)
!7111 = !DILocation(line: 1364, column: 13, scope: !7092)
!7112 = !DILocation(line: 1365, column: 23, scope: !7092)
!7113 = !DILocation(line: 1365, column: 26, scope: !7092)
!7114 = !DILocation(line: 1365, column: 33, scope: !7092)
!7115 = !DILocation(line: 1365, column: 36, scope: !7092)
!7116 = !DILocation(line: 1365, column: 13, scope: !7092)
!7117 = !DILocation(line: 1366, column: 9, scope: !7092)
!7118 = !DILocation(line: 1367, column: 19, scope: !7082)
!7119 = !DILocation(line: 1367, column: 22, scope: !7082)
!7120 = !DILocation(line: 1367, column: 29, scope: !7082)
!7121 = !DILocation(line: 1367, column: 34, scope: !7082)
!7122 = !DILocation(line: 1367, column: 9, scope: !7082)
!7123 = !DILocation(line: 1368, column: 13, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7082, file: !969, line: 1368, column: 13)
!7125 = !DILocation(line: 1368, column: 18, scope: !7124)
!7126 = !DILocation(line: 1368, column: 13, scope: !7082)
!7127 = !DILocation(line: 1369, column: 23, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7124, file: !969, line: 1368, column: 34)
!7129 = !DILocation(line: 1369, column: 26, scope: !7128)
!7130 = !DILocation(line: 1369, column: 33, scope: !7128)
!7131 = !DILocation(line: 1369, column: 38, scope: !7128)
!7132 = !DILocation(line: 1369, column: 13, scope: !7128)
!7133 = !DILocation(line: 1370, column: 23, scope: !7128)
!7134 = !DILocation(line: 1370, column: 26, scope: !7128)
!7135 = !DILocation(line: 1370, column: 33, scope: !7128)
!7136 = !DILocation(line: 1370, column: 38, scope: !7128)
!7137 = !DILocation(line: 1370, column: 13, scope: !7128)
!7138 = !DILocation(line: 1371, column: 23, scope: !7128)
!7139 = !DILocation(line: 1371, column: 26, scope: !7128)
!7140 = !DILocation(line: 1371, column: 33, scope: !7128)
!7141 = !DILocation(line: 1371, column: 38, scope: !7128)
!7142 = !DILocation(line: 1371, column: 13, scope: !7128)
!7143 = !DILocation(line: 1372, column: 23, scope: !7128)
!7144 = !DILocation(line: 1372, column: 26, scope: !7128)
!7145 = !DILocation(line: 1372, column: 13, scope: !7128)
!7146 = !DILocation(line: 1373, column: 9, scope: !7128)
!7147 = !DILocation(line: 1374, column: 5, scope: !7082)
!7148 = !DILocation(line: 1375, column: 15, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7077, file: !969, line: 1374, column: 12)
!7150 = !DILocation(line: 1375, column: 18, scope: !7149)
!7151 = !DILocation(line: 1375, column: 5, scope: !7149)
!7152 = !DILocation(line: 1376, column: 15, scope: !7149)
!7153 = !DILocation(line: 1376, column: 18, scope: !7149)
!7154 = !DILocation(line: 1376, column: 5, scope: !7149)
!7155 = !DILocation(line: 1378, column: 15, scope: !6946)
!7156 = !DILocation(line: 1378, column: 18, scope: !6946)
!7157 = !DILocation(line: 1378, column: 5, scope: !6946)
!7158 = !DILocation(line: 1379, column: 1, scope: !6946)
!7159 = distinct !DISubprogram(name: "set_bandwidth", scope: !969, file: !969, line: 2253, type: !2176, isLocal: true, isDefinition: true, scopeLine: 2254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!7160 = !DILocalVariable(name: "a", arg: 1, scope: !7161, file: !7162, line: 127, type: !966)
!7161 = distinct !DISubprogram(name: "av_clip_c", scope: !7162, file: !7162, line: 127, type: !7163, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!7162 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!966, !966, !966, !966}
!7165 = !DILocation(line: 127, column: 87, scope: !7161, inlinedAt: !7166)
!7166 = distinct !DILocation(line: 2299, column: 26, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !7168, file: !969, discriminator: 3)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !969, line: 2294, column: 25)
!7169 = distinct !DILexicalBlock(scope: !7159, file: !969, line: 2294, column: 9)
!7170 = !DILocalVariable(name: "amin", arg: 2, scope: !7161, file: !7162, line: 127, type: !966)
!7171 = !DILocation(line: 127, column: 94, scope: !7161, inlinedAt: !7166)
!7172 = !DILocalVariable(name: "amax", arg: 3, scope: !7161, file: !7162, line: 127, type: !966)
!7173 = !DILocation(line: 127, column: 104, scope: !7161, inlinedAt: !7166)
!7174 = !DILocation(line: 127, column: 87, scope: !7161, inlinedAt: !7175)
!7175 = distinct !DILocation(line: 2261, column: 29, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !969, line: 2257, column: 20)
!7177 = distinct !DILexicalBlock(scope: !7159, file: !969, line: 2257, column: 9)
!7178 = !DILocation(line: 127, column: 94, scope: !7161, inlinedAt: !7175)
!7179 = !DILocation(line: 127, column: 104, scope: !7161, inlinedAt: !7175)
!7180 = !DILocalVariable(name: "s", arg: 1, scope: !7159, file: !969, line: 2253, type: !980)
!7181 = !DILocation(line: 2253, column: 67, scope: !7159)
!7182 = !DILocalVariable(name: "blk", scope: !7159, file: !969, line: 2255, type: !966)
!7183 = !DILocation(line: 2255, column: 9, scope: !7159)
!7184 = !DILocalVariable(name: "ch", scope: !7159, file: !969, line: 2255, type: !966)
!7185 = !DILocation(line: 2255, column: 14, scope: !7159)
!7186 = !DILocalVariable(name: "cpl_start", scope: !7159, file: !969, line: 2255, type: !966)
!7187 = !DILocation(line: 2255, column: 18, scope: !7159)
!7188 = !DILocation(line: 2255, column: 28, scope: !7159)
!7189 = !DILocation(line: 2257, column: 9, scope: !7177)
!7190 = !DILocation(line: 2257, column: 12, scope: !7177)
!7191 = !DILocation(line: 2257, column: 9, scope: !7159)
!7192 = !DILocalVariable(name: "fbw_coeffs", scope: !7176, file: !969, line: 2259, type: !966)
!7193 = !DILocation(line: 2259, column: 13, scope: !7176)
!7194 = !DILocation(line: 2260, column: 22, scope: !7176)
!7195 = !DILocation(line: 2260, column: 25, scope: !7176)
!7196 = !DILocation(line: 2260, column: 32, scope: !7176)
!7197 = !DILocation(line: 2260, column: 36, scope: !7176)
!7198 = !DILocation(line: 2260, column: 44, scope: !7176)
!7199 = !DILocation(line: 2260, column: 47, scope: !7176)
!7200 = !DILocation(line: 2260, column: 42, scope: !7176)
!7201 = !DILocation(line: 2260, column: 20, scope: !7176)
!7202 = !DILocation(line: 2261, column: 40, scope: !7176)
!7203 = !DILocation(line: 2261, column: 51, scope: !7176)
!7204 = !DILocation(line: 2261, column: 57, scope: !7176)
!7205 = !DILocation(line: 2261, column: 29, scope: !7176)
!7206 = !DILocation(line: 132, column: 9, scope: !7207, inlinedAt: !7175)
!7207 = distinct !DILexicalBlock(scope: !7161, file: !7162, line: 132, column: 9)
!7208 = !DILocation(line: 132, column: 13, scope: !7207, inlinedAt: !7175)
!7209 = !DILocation(line: 132, column: 11, scope: !7207, inlinedAt: !7175)
!7210 = !DILocation(line: 132, column: 9, scope: !7161, inlinedAt: !7175)
!7211 = !DILocation(line: 132, column: 26, scope: !7212, inlinedAt: !7175)
!7212 = !DILexicalBlockFile(scope: !7207, file: !7162, discriminator: 1)
!7213 = !DILocation(line: 132, column: 19, scope: !7212, inlinedAt: !7175)
!7214 = !DILocation(line: 133, column: 14, scope: !7215, inlinedAt: !7175)
!7215 = distinct !DILexicalBlock(scope: !7207, file: !7162, line: 133, column: 14)
!7216 = !DILocation(line: 133, column: 18, scope: !7215, inlinedAt: !7175)
!7217 = !DILocation(line: 133, column: 16, scope: !7215, inlinedAt: !7175)
!7218 = !DILocation(line: 133, column: 14, scope: !7207, inlinedAt: !7175)
!7219 = !DILocation(line: 133, column: 31, scope: !7220, inlinedAt: !7175)
!7220 = !DILexicalBlockFile(scope: !7215, file: !7162, discriminator: 1)
!7221 = !DILocation(line: 133, column: 24, scope: !7220, inlinedAt: !7175)
!7222 = !DILocation(line: 134, column: 17, scope: !7215, inlinedAt: !7175)
!7223 = !DILocation(line: 134, column: 10, scope: !7215, inlinedAt: !7175)
!7224 = !DILocation(line: 135, column: 1, scope: !7161, inlinedAt: !7175)
!7225 = !DILocation(line: 2261, column: 9, scope: !7176)
!7226 = !DILocation(line: 2261, column: 12, scope: !7176)
!7227 = !DILocation(line: 2261, column: 27, scope: !7176)
!7228 = !DILocation(line: 2262, column: 5, scope: !7176)
!7229 = !DILocation(line: 2264, column: 88, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7177, file: !969, line: 2262, column: 12)
!7231 = !DILocation(line: 2264, column: 91, scope: !7230)
!7232 = !DILocation(line: 2264, column: 106, scope: !7230)
!7233 = !DILocation(line: 2264, column: 29, scope: !7230)
!7234 = !DILocation(line: 2264, column: 66, scope: !7230)
!7235 = !DILocation(line: 2264, column: 69, scope: !7230)
!7236 = !DILocation(line: 2264, column: 79, scope: !7230)
!7237 = !DILocation(line: 2264, column: 47, scope: !7230)
!7238 = !DILocation(line: 2264, column: 50, scope: !7230)
!7239 = !DILocation(line: 2264, column: 62, scope: !7230)
!7240 = !DILocation(line: 2264, column: 9, scope: !7230)
!7241 = !DILocation(line: 2264, column: 12, scope: !7230)
!7242 = !DILocation(line: 2264, column: 27, scope: !7230)
!7243 = !DILocation(line: 2268, column: 13, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7159, file: !969, line: 2268, column: 5)
!7245 = !DILocation(line: 2268, column: 10, scope: !7244)
!7246 = !DILocation(line: 2268, column: 18, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7248, file: !969, discriminator: 1)
!7248 = distinct !DILexicalBlock(scope: !7244, file: !969, line: 2268, column: 5)
!7249 = !DILocation(line: 2268, column: 24, scope: !7247)
!7250 = !DILocation(line: 2268, column: 27, scope: !7247)
!7251 = !DILocation(line: 2268, column: 21, scope: !7247)
!7252 = !DILocation(line: 2268, column: 5, scope: !7247)
!7253 = !DILocation(line: 2269, column: 23, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7248, file: !969, line: 2268, column: 47)
!7255 = !DILocation(line: 2269, column: 9, scope: !7254)
!7256 = !DILocation(line: 2269, column: 12, scope: !7254)
!7257 = !DILocation(line: 2269, column: 27, scope: !7254)
!7258 = !DILocation(line: 2270, column: 18, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7254, file: !969, line: 2270, column: 9)
!7260 = !DILocation(line: 2270, column: 14, scope: !7259)
!7261 = !DILocation(line: 2270, column: 23, scope: !7262)
!7262 = !DILexicalBlockFile(scope: !7263, file: !969, discriminator: 1)
!7263 = distinct !DILexicalBlock(scope: !7259, file: !969, line: 2270, column: 9)
!7264 = !DILocation(line: 2270, column: 29, scope: !7262)
!7265 = !DILocation(line: 2270, column: 32, scope: !7262)
!7266 = !DILocation(line: 2270, column: 27, scope: !7262)
!7267 = !DILocation(line: 2270, column: 9, scope: !7262)
!7268 = !DILocation(line: 2271, column: 43, scope: !7263)
!7269 = !DILocation(line: 2271, column: 46, scope: !7263)
!7270 = !DILocation(line: 2271, column: 61, scope: !7263)
!7271 = !DILocation(line: 2271, column: 65, scope: !7263)
!7272 = !DILocation(line: 2271, column: 37, scope: !7263)
!7273 = !DILocation(line: 2271, column: 13, scope: !7263)
!7274 = !DILocation(line: 2271, column: 23, scope: !7263)
!7275 = !DILocation(line: 2271, column: 16, scope: !7263)
!7276 = !DILocation(line: 2271, column: 28, scope: !7263)
!7277 = !DILocation(line: 2271, column: 41, scope: !7263)
!7278 = !DILocation(line: 2270, column: 47, scope: !7279)
!7279 = !DILexicalBlockFile(scope: !7263, file: !969, discriminator: 2)
!7280 = !DILocation(line: 2270, column: 9, scope: !7279)
!7281 = distinct !{!7281, !7282}
!7282 = !DILocation(line: 2270, column: 9, scope: !7254)
!7283 = !DILocation(line: 2272, column: 5, scope: !7254)
!7284 = !DILocation(line: 2268, column: 43, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7248, file: !969, discriminator: 2)
!7286 = !DILocation(line: 2268, column: 5, scope: !7285)
!7287 = distinct !{!7287, !7288}
!7288 = !DILocation(line: 2268, column: 5, scope: !7159)
!7289 = !DILocation(line: 2274, column: 9, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7159, file: !969, line: 2274, column: 9)
!7291 = !DILocation(line: 2274, column: 12, scope: !7290)
!7292 = !DILocation(line: 2274, column: 9, scope: !7159)
!7293 = !DILocation(line: 2275, column: 23, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !969, line: 2274, column: 20)
!7295 = !DILocation(line: 2275, column: 26, scope: !7294)
!7296 = !DILocation(line: 2275, column: 9, scope: !7294)
!7297 = !DILocation(line: 2275, column: 12, scope: !7294)
!7298 = !DILocation(line: 2275, column: 39, scope: !7294)
!7299 = !DILocation(line: 2276, column: 18, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7294, file: !969, line: 2276, column: 9)
!7301 = !DILocation(line: 2276, column: 14, scope: !7300)
!7302 = !DILocation(line: 2276, column: 23, scope: !7303)
!7303 = !DILexicalBlockFile(scope: !7304, file: !969, discriminator: 1)
!7304 = distinct !DILexicalBlock(scope: !7300, file: !969, line: 2276, column: 9)
!7305 = !DILocation(line: 2276, column: 29, scope: !7303)
!7306 = !DILocation(line: 2276, column: 32, scope: !7303)
!7307 = !DILocation(line: 2276, column: 27, scope: !7303)
!7308 = !DILocation(line: 2276, column: 9, scope: !7303)
!7309 = !DILocation(line: 2277, column: 37, scope: !7304)
!7310 = !DILocation(line: 2277, column: 13, scope: !7304)
!7311 = !DILocation(line: 2277, column: 23, scope: !7304)
!7312 = !DILocation(line: 2277, column: 16, scope: !7304)
!7313 = !DILocation(line: 2277, column: 28, scope: !7304)
!7314 = !DILocation(line: 2277, column: 41, scope: !7304)
!7315 = !DILocation(line: 2276, column: 47, scope: !7316)
!7316 = !DILexicalBlockFile(scope: !7304, file: !969, discriminator: 2)
!7317 = !DILocation(line: 2276, column: 9, scope: !7316)
!7318 = distinct !{!7318, !7319}
!7319 = !DILocation(line: 2276, column: 9, scope: !7294)
!7320 = !DILocation(line: 2278, column: 5, scope: !7294)
!7321 = !DILocation(line: 2281, column: 9, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7159, file: !969, line: 2281, column: 9)
!7323 = !DILocation(line: 2281, column: 12, scope: !7322)
!7324 = !DILocation(line: 2281, column: 9, scope: !7159)
!7325 = !DILocation(line: 2282, column: 13, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7327, file: !969, line: 2282, column: 13)
!7327 = distinct !DILexicalBlock(scope: !7322, file: !969, line: 2281, column: 25)
!7328 = !DILocation(line: 2282, column: 16, scope: !7326)
!7329 = !DILocation(line: 2282, column: 24, scope: !7326)
!7330 = !DILocation(line: 2282, column: 34, scope: !7326)
!7331 = !DILocation(line: 2282, column: 13, scope: !7327)
!7332 = !DILocation(line: 2283, column: 25, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7326, file: !969, line: 2282, column: 41)
!7334 = !DILocation(line: 2283, column: 28, scope: !7333)
!7335 = !DILocation(line: 2283, column: 36, scope: !7333)
!7336 = !DILocation(line: 2283, column: 23, scope: !7333)
!7337 = !DILocation(line: 2284, column: 9, scope: !7333)
!7338 = !DILocation(line: 2285, column: 89, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7326, file: !969, line: 2284, column: 16)
!7340 = !DILocation(line: 2285, column: 92, scope: !7339)
!7341 = !DILocation(line: 2285, column: 107, scope: !7339)
!7342 = !DILocation(line: 2285, column: 25, scope: !7339)
!7343 = !DILocation(line: 2285, column: 67, scope: !7339)
!7344 = !DILocation(line: 2285, column: 70, scope: !7339)
!7345 = !DILocation(line: 2285, column: 80, scope: !7339)
!7346 = !DILocation(line: 2285, column: 48, scope: !7339)
!7347 = !DILocation(line: 2285, column: 51, scope: !7339)
!7348 = !DILocation(line: 2285, column: 63, scope: !7339)
!7349 = !DILocation(line: 2285, column: 23, scope: !7339)
!7350 = !DILocation(line: 2286, column: 17, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7339, file: !969, line: 2286, column: 17)
!7352 = !DILocation(line: 2286, column: 27, scope: !7351)
!7353 = !DILocation(line: 2286, column: 17, scope: !7339)
!7354 = !DILocation(line: 2287, column: 21, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !969, line: 2287, column: 21)
!7356 = distinct !DILexicalBlock(scope: !7351, file: !969, line: 2286, column: 32)
!7357 = !DILocation(line: 2287, column: 24, scope: !7355)
!7358 = !DILocation(line: 2287, column: 32, scope: !7355)
!7359 = !DILocation(line: 2287, column: 49, scope: !7355)
!7360 = !DILocation(line: 2287, column: 21, scope: !7356)
!7361 = !DILocation(line: 2288, column: 21, scope: !7355)
!7362 = !DILocation(line: 2288, column: 24, scope: !7355)
!7363 = !DILocation(line: 2288, column: 36, scope: !7355)
!7364 = !DILocation(line: 2290, column: 31, scope: !7355)
!7365 = !DILocation(line: 2291, column: 13, scope: !7356)
!7366 = !DILocation(line: 2293, column: 5, scope: !7327)
!7367 = !DILocation(line: 2294, column: 9, scope: !7169)
!7368 = !DILocation(line: 2294, column: 12, scope: !7169)
!7369 = !DILocation(line: 2294, column: 9, scope: !7159)
!7370 = !DILocalVariable(name: "i", scope: !7168, file: !969, line: 2295, type: !966)
!7371 = !DILocation(line: 2295, column: 13, scope: !7168)
!7372 = !DILocalVariable(name: "cpl_start_band", scope: !7168, file: !969, line: 2295, type: !966)
!7373 = !DILocation(line: 2295, column: 16, scope: !7168)
!7374 = !DILocalVariable(name: "cpl_end_band", scope: !7168, file: !969, line: 2295, type: !966)
!7375 = !DILocation(line: 2295, column: 32, scope: !7168)
!7376 = !DILocalVariable(name: "cpl_band_sizes", scope: !7168, file: !969, line: 2296, type: !1179)
!7377 = !DILocation(line: 2296, column: 18, scope: !7168)
!7378 = !DILocation(line: 2296, column: 35, scope: !7168)
!7379 = !DILocation(line: 2296, column: 38, scope: !7168)
!7380 = !DILocation(line: 2298, column: 24, scope: !7168)
!7381 = !DILocation(line: 2298, column: 27, scope: !7168)
!7382 = !DILocation(line: 2298, column: 42, scope: !7168)
!7383 = !DILocation(line: 2298, column: 46, scope: !7168)
!7384 = !DILocation(line: 2298, column: 22, scope: !7168)
!7385 = !DILocation(line: 2299, column: 36, scope: !7168)
!7386 = !DILocation(line: 2299, column: 52, scope: !7168)
!7387 = !DILocation(line: 2299, column: 64, scope: !7168)
!7388 = !DILocation(line: 2299, column: 68, scope: !7168)
!7389 = !DILocation(line: 2299, column: 51, scope: !7168)
!7390 = !DILocation(line: 2299, column: 51, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !7168, file: !969, discriminator: 1)
!7392 = !DILocation(line: 2299, column: 85, scope: !7393)
!7393 = !DILexicalBlockFile(scope: !7168, file: !969, discriminator: 2)
!7394 = !DILocation(line: 2299, column: 97, scope: !7393)
!7395 = !DILocation(line: 2299, column: 51, scope: !7393)
!7396 = !DILocation(line: 2299, column: 51, scope: !7167)
!7397 = !DILocation(line: 2299, column: 26, scope: !7167)
!7398 = !DILocation(line: 132, column: 9, scope: !7207, inlinedAt: !7166)
!7399 = !DILocation(line: 132, column: 13, scope: !7207, inlinedAt: !7166)
!7400 = !DILocation(line: 132, column: 11, scope: !7207, inlinedAt: !7166)
!7401 = !DILocation(line: 132, column: 9, scope: !7161, inlinedAt: !7166)
!7402 = !DILocation(line: 132, column: 26, scope: !7212, inlinedAt: !7166)
!7403 = !DILocation(line: 132, column: 19, scope: !7212, inlinedAt: !7166)
!7404 = !DILocation(line: 133, column: 14, scope: !7215, inlinedAt: !7166)
!7405 = !DILocation(line: 133, column: 18, scope: !7215, inlinedAt: !7166)
!7406 = !DILocation(line: 133, column: 16, scope: !7215, inlinedAt: !7166)
!7407 = !DILocation(line: 133, column: 14, scope: !7207, inlinedAt: !7166)
!7408 = !DILocation(line: 133, column: 31, scope: !7220, inlinedAt: !7166)
!7409 = !DILocation(line: 133, column: 24, scope: !7220, inlinedAt: !7166)
!7410 = !DILocation(line: 134, column: 17, scope: !7215, inlinedAt: !7166)
!7411 = !DILocation(line: 134, column: 10, scope: !7215, inlinedAt: !7166)
!7412 = !DILocation(line: 135, column: 1, scope: !7161, inlinedAt: !7166)
!7413 = !DILocation(line: 2299, column: 24, scope: !7167)
!7414 = !DILocation(line: 2301, column: 31, scope: !7168)
!7415 = !DILocation(line: 2301, column: 46, scope: !7168)
!7416 = !DILocation(line: 2301, column: 44, scope: !7168)
!7417 = !DILocation(line: 2301, column: 9, scope: !7168)
!7418 = !DILocation(line: 2301, column: 12, scope: !7168)
!7419 = !DILocation(line: 2301, column: 29, scope: !7168)
!7420 = !DILocation(line: 2303, column: 9, scope: !7168)
!7421 = !DILocation(line: 2303, column: 12, scope: !7168)
!7422 = !DILocation(line: 2303, column: 26, scope: !7168)
!7423 = !DILocation(line: 2304, column: 10, scope: !7168)
!7424 = !DILocation(line: 2304, column: 25, scope: !7168)
!7425 = !DILocation(line: 2305, column: 18, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7168, file: !969, line: 2305, column: 9)
!7427 = !DILocation(line: 2305, column: 33, scope: !7426)
!7428 = !DILocation(line: 2305, column: 16, scope: !7426)
!7429 = !DILocation(line: 2305, column: 14, scope: !7426)
!7430 = !DILocation(line: 2305, column: 38, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7432, file: !969, discriminator: 1)
!7432 = distinct !DILexicalBlock(scope: !7426, file: !969, line: 2305, column: 9)
!7433 = !DILocation(line: 2305, column: 42, scope: !7431)
!7434 = !DILocation(line: 2305, column: 40, scope: !7431)
!7435 = !DILocation(line: 2305, column: 9, scope: !7431)
!7436 = !DILocation(line: 2306, column: 49, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !969, line: 2306, column: 17)
!7438 = distinct !DILexicalBlock(scope: !7432, file: !969, line: 2305, column: 61)
!7439 = !DILocation(line: 2306, column: 17, scope: !7437)
!7440 = !DILocation(line: 2306, column: 17, scope: !7438)
!7441 = !DILocation(line: 2307, column: 18, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7437, file: !969, line: 2306, column: 53)
!7443 = !DILocation(line: 2307, column: 33, scope: !7442)
!7444 = !DILocation(line: 2308, column: 13, scope: !7442)
!7445 = !DILocation(line: 2309, column: 17, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7437, file: !969, line: 2308, column: 20)
!7447 = !DILocation(line: 2309, column: 20, scope: !7446)
!7448 = !DILocation(line: 2309, column: 33, scope: !7446)
!7449 = !DILocation(line: 2310, column: 31, scope: !7446)
!7450 = !DILocation(line: 2311, column: 18, scope: !7446)
!7451 = !DILocation(line: 2311, column: 33, scope: !7446)
!7452 = !DILocation(line: 2313, column: 9, scope: !7438)
!7453 = !DILocation(line: 2305, column: 57, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7432, file: !969, discriminator: 2)
!7455 = !DILocation(line: 2305, column: 9, scope: !7454)
!7456 = distinct !{!7456, !7457}
!7457 = !DILocation(line: 2305, column: 9, scope: !7168)
!7458 = !DILocation(line: 2315, column: 28, scope: !7168)
!7459 = !DILocation(line: 2315, column: 43, scope: !7168)
!7460 = !DILocation(line: 2315, column: 48, scope: !7168)
!7461 = !DILocation(line: 2315, column: 9, scope: !7168)
!7462 = !DILocation(line: 2315, column: 12, scope: !7168)
!7463 = !DILocation(line: 2315, column: 26, scope: !7168)
!7464 = !DILocation(line: 2316, column: 27, scope: !7168)
!7465 = !DILocation(line: 2316, column: 40, scope: !7168)
!7466 = !DILocation(line: 2316, column: 45, scope: !7168)
!7467 = !DILocation(line: 2316, column: 9, scope: !7168)
!7468 = !DILocation(line: 2316, column: 12, scope: !7168)
!7469 = !DILocation(line: 2316, column: 25, scope: !7168)
!7470 = !DILocation(line: 2317, column: 18, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7168, file: !969, line: 2317, column: 9)
!7472 = !DILocation(line: 2317, column: 14, scope: !7471)
!7473 = !DILocation(line: 2317, column: 23, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !7475, file: !969, discriminator: 1)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !969, line: 2317, column: 9)
!7476 = !DILocation(line: 2317, column: 29, scope: !7474)
!7477 = !DILocation(line: 2317, column: 32, scope: !7474)
!7478 = !DILocation(line: 2317, column: 27, scope: !7474)
!7479 = !DILocation(line: 2317, column: 9, scope: !7474)
!7480 = !DILocation(line: 2318, column: 42, scope: !7475)
!7481 = !DILocation(line: 2318, column: 45, scope: !7475)
!7482 = !DILocation(line: 2318, column: 23, scope: !7475)
!7483 = !DILocation(line: 2318, column: 13, scope: !7475)
!7484 = !DILocation(line: 2318, column: 16, scope: !7475)
!7485 = !DILocation(line: 2318, column: 28, scope: !7475)
!7486 = !DILocation(line: 2318, column: 40, scope: !7475)
!7487 = !DILocation(line: 2317, column: 47, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7475, file: !969, discriminator: 2)
!7489 = !DILocation(line: 2317, column: 9, scope: !7488)
!7490 = distinct !{!7490, !7491}
!7491 = !DILocation(line: 2317, column: 9, scope: !7168)
!7492 = !DILocation(line: 2319, column: 5, scope: !7168)
!7493 = !DILocation(line: 2320, column: 1, scope: !7159)
!7494 = distinct !DISubprogram(name: "exponent_init", scope: !969, file: !969, line: 306, type: !2176, isLocal: true, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!7495 = !DILocalVariable(name: "s", arg: 1, scope: !7494, file: !969, line: 306, type: !980)
!7496 = !DILocation(line: 306, column: 67, scope: !7494)
!7497 = !DILocalVariable(name: "expstr", scope: !7494, file: !969, line: 308, type: !966)
!7498 = !DILocation(line: 308, column: 9, scope: !7494)
!7499 = !DILocalVariable(name: "i", scope: !7494, file: !969, line: 308, type: !966)
!7500 = !DILocation(line: 308, column: 17, scope: !7494)
!7501 = !DILocalVariable(name: "grpsize", scope: !7494, file: !969, line: 308, type: !966)
!7502 = !DILocation(line: 308, column: 20, scope: !7494)
!7503 = !DILocation(line: 310, column: 17, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7494, file: !969, line: 310, column: 5)
!7505 = !DILocation(line: 310, column: 10, scope: !7504)
!7506 = !DILocation(line: 310, column: 25, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7508, file: !969, discriminator: 1)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !969, line: 310, column: 5)
!7509 = !DILocation(line: 310, column: 32, scope: !7507)
!7510 = !DILocation(line: 310, column: 5, scope: !7507)
!7511 = !DILocation(line: 311, column: 24, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !969, line: 310, column: 51)
!7513 = !DILocation(line: 311, column: 21, scope: !7512)
!7514 = !DILocation(line: 311, column: 17, scope: !7512)
!7515 = !DILocation(line: 312, column: 16, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !969, line: 312, column: 9)
!7517 = !DILocation(line: 312, column: 14, scope: !7516)
!7518 = !DILocation(line: 312, column: 22, scope: !7519)
!7519 = !DILexicalBlockFile(scope: !7520, file: !969, discriminator: 1)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !969, line: 312, column: 9)
!7521 = !DILocation(line: 312, column: 24, scope: !7519)
!7522 = !DILocation(line: 312, column: 9, scope: !7519)
!7523 = !DILocation(line: 313, column: 49, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !969, line: 312, column: 36)
!7525 = !DILocation(line: 313, column: 53, scope: !7524)
!7526 = !DILocation(line: 313, column: 51, scope: !7524)
!7527 = !DILocation(line: 313, column: 61, scope: !7524)
!7528 = !DILocation(line: 313, column: 68, scope: !7524)
!7529 = !DILocation(line: 313, column: 66, scope: !7524)
!7530 = !DILocation(line: 313, column: 48, scope: !7524)
!7531 = !DILocation(line: 313, column: 43, scope: !7524)
!7532 = !DILocation(line: 313, column: 13, scope: !7524)
!7533 = !DILocation(line: 313, column: 35, scope: !7524)
!7534 = !DILocation(line: 313, column: 46, scope: !7524)
!7535 = !DILocation(line: 314, column: 49, scope: !7524)
!7536 = !DILocation(line: 314, column: 55, scope: !7524)
!7537 = !DILocation(line: 314, column: 53, scope: !7524)
!7538 = !DILocation(line: 314, column: 48, scope: !7524)
!7539 = !DILocation(line: 314, column: 43, scope: !7524)
!7540 = !DILocation(line: 314, column: 13, scope: !7524)
!7541 = !DILocation(line: 314, column: 35, scope: !7524)
!7542 = !DILocation(line: 314, column: 46, scope: !7524)
!7543 = !DILocation(line: 315, column: 9, scope: !7524)
!7544 = !DILocation(line: 312, column: 32, scope: !7545)
!7545 = !DILexicalBlockFile(scope: !7520, file: !969, discriminator: 2)
!7546 = !DILocation(line: 312, column: 9, scope: !7545)
!7547 = distinct !{!7547, !7548}
!7548 = !DILocation(line: 312, column: 9, scope: !7512)
!7549 = !DILocation(line: 316, column: 5, scope: !7512)
!7550 = !DILocation(line: 310, column: 47, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !7508, file: !969, discriminator: 2)
!7552 = !DILocation(line: 310, column: 5, scope: !7551)
!7553 = distinct !{!7553, !7554}
!7554 = !DILocation(line: 310, column: 5, scope: !7494)
!7555 = !DILocation(line: 318, column: 33, scope: !7494)
!7556 = !DILocation(line: 320, column: 14, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7494, file: !969, line: 320, column: 9)
!7558 = !DILocation(line: 320, column: 17, scope: !7557)
!7559 = !DILocation(line: 320, column: 9, scope: !7494)
!7560 = !DILocation(line: 321, column: 9, scope: !7557)
!7561 = !DILocation(line: 322, column: 1, scope: !7494)
!7562 = distinct !DISubprogram(name: "bit_alloc_init", scope: !969, file: !969, line: 759, type: !2176, isLocal: true, isDefinition: true, scopeLine: 760, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!7563 = !DILocalVariable(name: "s", arg: 1, scope: !7562, file: !969, line: 759, type: !980)
!7564 = !DILocation(line: 759, column: 68, scope: !7562)
!7565 = !DILocalVariable(name: "ch", scope: !7562, file: !969, line: 761, type: !966)
!7566 = !DILocation(line: 761, column: 9, scope: !7562)
!7567 = !DILocation(line: 764, column: 5, scope: !7562)
!7568 = !DILocation(line: 764, column: 8, scope: !7562)
!7569 = !DILocation(line: 764, column: 24, scope: !7562)
!7570 = !DILocation(line: 765, column: 5, scope: !7562)
!7571 = !DILocation(line: 765, column: 8, scope: !7562)
!7572 = !DILocation(line: 765, column: 24, scope: !7562)
!7573 = !DILocation(line: 766, column: 5, scope: !7562)
!7574 = !DILocation(line: 766, column: 8, scope: !7562)
!7575 = !DILocation(line: 766, column: 23, scope: !7562)
!7576 = !DILocation(line: 767, column: 26, scope: !7562)
!7577 = !DILocation(line: 767, column: 29, scope: !7562)
!7578 = !DILocation(line: 767, column: 5, scope: !7562)
!7579 = !DILocation(line: 767, column: 8, scope: !7562)
!7580 = !DILocation(line: 767, column: 24, scope: !7562)
!7581 = !DILocation(line: 768, column: 5, scope: !7562)
!7582 = !DILocation(line: 768, column: 8, scope: !7562)
!7583 = !DILocation(line: 768, column: 19, scope: !7562)
!7584 = !DILocation(line: 769, column: 13, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7562, file: !969, line: 769, column: 5)
!7586 = !DILocation(line: 769, column: 10, scope: !7585)
!7587 = !DILocation(line: 769, column: 18, scope: !7588)
!7588 = !DILexicalBlockFile(scope: !7589, file: !969, discriminator: 1)
!7589 = distinct !DILexicalBlock(scope: !7585, file: !969, line: 769, column: 5)
!7590 = !DILocation(line: 769, column: 24, scope: !7588)
!7591 = !DILocation(line: 769, column: 27, scope: !7588)
!7592 = !DILocation(line: 769, column: 21, scope: !7588)
!7593 = !DILocation(line: 769, column: 5, scope: !7588)
!7594 = !DILocation(line: 770, column: 27, scope: !7589)
!7595 = !DILocation(line: 770, column: 9, scope: !7589)
!7596 = !DILocation(line: 770, column: 12, scope: !7589)
!7597 = !DILocation(line: 770, column: 31, scope: !7589)
!7598 = !DILocation(line: 769, column: 39, scope: !7599)
!7599 = !DILexicalBlockFile(scope: !7589, file: !969, discriminator: 2)
!7600 = !DILocation(line: 769, column: 5, scope: !7599)
!7601 = distinct !{!7601, !7602}
!7602 = !DILocation(line: 769, column: 5, scope: !7562)
!7603 = !DILocation(line: 773, column: 5, scope: !7562)
!7604 = !DILocation(line: 773, column: 8, scope: !7562)
!7605 = !DILocation(line: 773, column: 26, scope: !7562)
!7606 = !DILocation(line: 778, column: 53, scope: !7562)
!7607 = !DILocation(line: 778, column: 56, scope: !7562)
!7608 = !DILocation(line: 778, column: 31, scope: !7562)
!7609 = !DILocation(line: 778, column: 76, scope: !7562)
!7610 = !DILocation(line: 778, column: 79, scope: !7562)
!7611 = !DILocation(line: 778, column: 89, scope: !7562)
!7612 = !DILocation(line: 778, column: 73, scope: !7562)
!7613 = !DILocation(line: 778, column: 5, scope: !7562)
!7614 = !DILocation(line: 778, column: 8, scope: !7562)
!7615 = !DILocation(line: 778, column: 18, scope: !7562)
!7616 = !DILocation(line: 778, column: 29, scope: !7562)
!7617 = !DILocation(line: 779, column: 53, scope: !7562)
!7618 = !DILocation(line: 779, column: 56, scope: !7562)
!7619 = !DILocation(line: 779, column: 31, scope: !7562)
!7620 = !DILocation(line: 779, column: 76, scope: !7562)
!7621 = !DILocation(line: 779, column: 79, scope: !7562)
!7622 = !DILocation(line: 779, column: 89, scope: !7562)
!7623 = !DILocation(line: 779, column: 73, scope: !7562)
!7624 = !DILocation(line: 779, column: 5, scope: !7562)
!7625 = !DILocation(line: 779, column: 8, scope: !7562)
!7626 = !DILocation(line: 779, column: 18, scope: !7562)
!7627 = !DILocation(line: 779, column: 29, scope: !7562)
!7628 = !DILocation(line: 780, column: 51, scope: !7562)
!7629 = !DILocation(line: 780, column: 54, scope: !7562)
!7630 = !DILocation(line: 780, column: 30, scope: !7562)
!7631 = !DILocation(line: 780, column: 5, scope: !7562)
!7632 = !DILocation(line: 780, column: 8, scope: !7562)
!7633 = !DILocation(line: 780, column: 18, scope: !7562)
!7634 = !DILocation(line: 780, column: 28, scope: !7562)
!7635 = !DILocation(line: 781, column: 53, scope: !7562)
!7636 = !DILocation(line: 781, column: 56, scope: !7562)
!7637 = !DILocation(line: 781, column: 31, scope: !7562)
!7638 = !DILocation(line: 781, column: 5, scope: !7562)
!7639 = !DILocation(line: 781, column: 8, scope: !7562)
!7640 = !DILocation(line: 781, column: 18, scope: !7562)
!7641 = !DILocation(line: 781, column: 29, scope: !7562)
!7642 = !DILocation(line: 782, column: 43, scope: !7562)
!7643 = !DILocation(line: 782, column: 46, scope: !7562)
!7644 = !DILocation(line: 782, column: 26, scope: !7562)
!7645 = !DILocation(line: 782, column: 5, scope: !7562)
!7646 = !DILocation(line: 782, column: 8, scope: !7562)
!7647 = !DILocation(line: 782, column: 18, scope: !7562)
!7648 = !DILocation(line: 782, column: 24, scope: !7562)
!7649 = !DILocation(line: 783, column: 5, scope: !7562)
!7650 = !DILocation(line: 783, column: 8, scope: !7562)
!7651 = !DILocation(line: 783, column: 18, scope: !7562)
!7652 = !DILocation(line: 783, column: 32, scope: !7562)
!7653 = !DILocation(line: 784, column: 5, scope: !7562)
!7654 = !DILocation(line: 784, column: 8, scope: !7562)
!7655 = !DILocation(line: 784, column: 18, scope: !7562)
!7656 = !DILocation(line: 784, column: 32, scope: !7562)
!7657 = !DILocation(line: 786, column: 28, scope: !7562)
!7658 = !DILocation(line: 786, column: 5, scope: !7562)
!7659 = !DILocation(line: 787, column: 1, scope: !7562)
!7660 = distinct !DISubprogram(name: "allocate_buffers", scope: !969, file: !969, line: 2323, type: !978, isLocal: true, isDefinition: true, scopeLine: 2324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!7661 = !DILocalVariable(name: "s", arg: 1, scope: !7660, file: !969, line: 2323, type: !980)
!7662 = !DILocation(line: 2323, column: 69, scope: !7660)
!7663 = !DILocalVariable(name: "avctx", scope: !7660, file: !969, line: 2325, type: !1100)
!7664 = !DILocation(line: 2325, column: 21, scope: !7660)
!7665 = !DILocation(line: 2325, column: 29, scope: !7660)
!7666 = !DILocation(line: 2325, column: 32, scope: !7660)
!7667 = !DILocalVariable(name: "blk", scope: !7660, file: !969, line: 2326, type: !966)
!7668 = !DILocation(line: 2326, column: 9, scope: !7660)
!7669 = !DILocalVariable(name: "ch", scope: !7660, file: !969, line: 2326, type: !966)
!7670 = !DILocation(line: 2326, column: 14, scope: !7660)
!7671 = !DILocalVariable(name: "channels", scope: !7660, file: !969, line: 2327, type: !966)
!7672 = !DILocation(line: 2327, column: 9, scope: !7660)
!7673 = !DILocation(line: 2327, column: 20, scope: !7660)
!7674 = !DILocation(line: 2327, column: 23, scope: !7660)
!7675 = !DILocation(line: 2327, column: 32, scope: !7660)
!7676 = !DILocalVariable(name: "channel_blocks", scope: !7660, file: !969, line: 2328, type: !966)
!7677 = !DILocation(line: 2328, column: 9, scope: !7660)
!7678 = !DILocation(line: 2328, column: 26, scope: !7660)
!7679 = !DILocation(line: 2328, column: 37, scope: !7660)
!7680 = !DILocation(line: 2328, column: 40, scope: !7660)
!7681 = !DILocation(line: 2328, column: 35, scope: !7660)
!7682 = !DILocalVariable(name: "total_coefs", scope: !7660, file: !969, line: 2329, type: !966)
!7683 = !DILocation(line: 2329, column: 9, scope: !7660)
!7684 = !DILocation(line: 2329, column: 29, scope: !7660)
!7685 = !DILocation(line: 2329, column: 27, scope: !7660)
!7686 = !DILocation(line: 2331, column: 9, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2331, column: 9)
!7688 = !DILocation(line: 2331, column: 12, scope: !7687)
!7689 = !DILocation(line: 2331, column: 36, scope: !7687)
!7690 = !DILocation(line: 2331, column: 9, scope: !7660)
!7691 = !DILocation(line: 2332, column: 9, scope: !7687)
!7692 = !DILocation(line: 2334, column: 39, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2334, column: 5)
!7694 = !DILocation(line: 2334, column: 23, scope: !7693)
!7695 = !DILocation(line: 2334, column: 7, scope: !7693)
!7696 = !DILocation(line: 2334, column: 10, scope: !7693)
!7697 = !DILocation(line: 2334, column: 21, scope: !7693)
!7698 = !DILocation(line: 2334, column: 82, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7693, file: !969, line: 2334, column: 81)
!7700 = !DILocation(line: 2334, column: 85, scope: !7699)
!7701 = !DILocation(line: 2334, column: 81, scope: !7693)
!7702 = !DILocation(line: 2334, column: 106, scope: !7703)
!7703 = !DILexicalBlockFile(scope: !7704, file: !969, discriminator: 1)
!7704 = distinct !DILexicalBlock(scope: !7699, file: !969, line: 2334, column: 97)
!7705 = !DILocation(line: 2334, column: 99, scope: !7703)
!7706 = !DILocation(line: 2334, column: 147, scope: !7703)
!7707 = !DILocation(line: 2336, column: 40, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2336, column: 5)
!7709 = !DILocation(line: 2336, column: 24, scope: !7708)
!7710 = !DILocation(line: 2336, column: 7, scope: !7708)
!7711 = !DILocation(line: 2336, column: 10, scope: !7708)
!7712 = !DILocation(line: 2336, column: 22, scope: !7708)
!7713 = !DILocation(line: 2336, column: 84, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7708, file: !969, line: 2336, column: 83)
!7715 = !DILocation(line: 2336, column: 87, scope: !7714)
!7716 = !DILocation(line: 2336, column: 83, scope: !7708)
!7717 = !DILocation(line: 2336, column: 109, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !7719, file: !969, discriminator: 1)
!7719 = distinct !DILexicalBlock(scope: !7714, file: !969, line: 2336, column: 100)
!7720 = !DILocation(line: 2336, column: 102, scope: !7718)
!7721 = !DILocation(line: 2336, column: 150, scope: !7718)
!7722 = !DILocation(line: 2338, column: 46, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2338, column: 5)
!7724 = !DILocation(line: 2338, column: 29, scope: !7723)
!7725 = !DILocation(line: 2338, column: 7, scope: !7723)
!7726 = !DILocation(line: 2338, column: 10, scope: !7723)
!7727 = !DILocation(line: 2338, column: 27, scope: !7723)
!7728 = !DILocation(line: 2338, column: 95, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7723, file: !969, line: 2338, column: 94)
!7730 = !DILocation(line: 2338, column: 98, scope: !7729)
!7731 = !DILocation(line: 2338, column: 94, scope: !7723)
!7732 = !DILocation(line: 2338, column: 125, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7734, file: !969, discriminator: 1)
!7734 = distinct !DILexicalBlock(scope: !7729, file: !969, line: 2338, column: 116)
!7735 = !DILocation(line: 2338, column: 118, scope: !7733)
!7736 = !DILocation(line: 2338, column: 166, scope: !7733)
!7737 = !DILocation(line: 2340, column: 39, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2340, column: 5)
!7739 = !DILocation(line: 2340, column: 23, scope: !7738)
!7740 = !DILocation(line: 2340, column: 7, scope: !7738)
!7741 = !DILocation(line: 2340, column: 10, scope: !7738)
!7742 = !DILocation(line: 2340, column: 21, scope: !7738)
!7743 = !DILocation(line: 2340, column: 82, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7738, file: !969, line: 2340, column: 81)
!7745 = !DILocation(line: 2340, column: 85, scope: !7744)
!7746 = !DILocation(line: 2340, column: 81, scope: !7738)
!7747 = !DILocation(line: 2340, column: 106, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7749, file: !969, discriminator: 1)
!7749 = distinct !DILexicalBlock(scope: !7744, file: !969, line: 2340, column: 97)
!7750 = !DILocation(line: 2340, column: 99, scope: !7748)
!7751 = !DILocation(line: 2340, column: 147, scope: !7748)
!7752 = !DILocation(line: 2342, column: 47, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2342, column: 5)
!7754 = !DILocation(line: 2342, column: 31, scope: !7753)
!7755 = !DILocation(line: 2342, column: 7, scope: !7753)
!7756 = !DILocation(line: 2342, column: 10, scope: !7753)
!7757 = !DILocation(line: 2342, column: 29, scope: !7753)
!7758 = !DILocation(line: 2342, column: 107, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7753, file: !969, line: 2342, column: 106)
!7760 = !DILocation(line: 2342, column: 110, scope: !7759)
!7761 = !DILocation(line: 2342, column: 106, scope: !7753)
!7762 = !DILocation(line: 2342, column: 139, scope: !7763)
!7763 = !DILexicalBlockFile(scope: !7764, file: !969, discriminator: 1)
!7764 = distinct !DILexicalBlock(scope: !7759, file: !969, line: 2342, column: 130)
!7765 = !DILocation(line: 2342, column: 132, scope: !7763)
!7766 = !DILocation(line: 2342, column: 180, scope: !7763)
!7767 = !DILocation(line: 2344, column: 39, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2344, column: 5)
!7769 = !DILocation(line: 2344, column: 23, scope: !7768)
!7770 = !DILocation(line: 2344, column: 7, scope: !7768)
!7771 = !DILocation(line: 2344, column: 10, scope: !7768)
!7772 = !DILocation(line: 2344, column: 21, scope: !7768)
!7773 = !DILocation(line: 2344, column: 82, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7768, file: !969, line: 2344, column: 81)
!7775 = !DILocation(line: 2344, column: 85, scope: !7774)
!7776 = !DILocation(line: 2344, column: 81, scope: !7768)
!7777 = !DILocation(line: 2344, column: 106, scope: !7778)
!7778 = !DILexicalBlockFile(scope: !7779, file: !969, discriminator: 1)
!7779 = distinct !DILexicalBlock(scope: !7774, file: !969, line: 2344, column: 97)
!7780 = !DILocation(line: 2344, column: 99, scope: !7778)
!7781 = !DILocation(line: 2344, column: 147, scope: !7778)
!7782 = !DILocation(line: 2346, column: 44, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2346, column: 5)
!7784 = !DILocation(line: 2346, column: 28, scope: !7783)
!7785 = !DILocation(line: 2346, column: 7, scope: !7783)
!7786 = !DILocation(line: 2346, column: 10, scope: !7783)
!7787 = !DILocation(line: 2346, column: 26, scope: !7783)
!7788 = !DILocation(line: 2346, column: 100, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7783, file: !969, line: 2346, column: 99)
!7790 = !DILocation(line: 2346, column: 103, scope: !7789)
!7791 = !DILocation(line: 2346, column: 99, scope: !7783)
!7792 = !DILocation(line: 2346, column: 129, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !7794, file: !969, discriminator: 1)
!7794 = distinct !DILexicalBlock(scope: !7789, file: !969, line: 2346, column: 120)
!7795 = !DILocation(line: 2346, column: 122, scope: !7793)
!7796 = !DILocation(line: 2346, column: 170, scope: !7793)
!7797 = !DILocation(line: 2348, column: 40, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2348, column: 5)
!7799 = !DILocation(line: 2348, column: 24, scope: !7798)
!7800 = !DILocation(line: 2348, column: 7, scope: !7798)
!7801 = !DILocation(line: 2348, column: 10, scope: !7798)
!7802 = !DILocation(line: 2348, column: 22, scope: !7798)
!7803 = !DILocation(line: 2348, column: 92, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7798, file: !969, line: 2348, column: 91)
!7805 = !DILocation(line: 2348, column: 95, scope: !7804)
!7806 = !DILocation(line: 2348, column: 91, scope: !7798)
!7807 = !DILocation(line: 2348, column: 117, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !7809, file: !969, discriminator: 1)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !969, line: 2348, column: 108)
!7810 = !DILocation(line: 2348, column: 110, scope: !7808)
!7811 = !DILocation(line: 2348, column: 158, scope: !7808)
!7812 = !DILocation(line: 2350, column: 41, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2350, column: 5)
!7814 = !DILocation(line: 2350, column: 25, scope: !7813)
!7815 = !DILocation(line: 2350, column: 7, scope: !7813)
!7816 = !DILocation(line: 2350, column: 10, scope: !7813)
!7817 = !DILocation(line: 2350, column: 23, scope: !7813)
!7818 = !DILocation(line: 2350, column: 86, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7813, file: !969, line: 2350, column: 85)
!7820 = !DILocation(line: 2350, column: 89, scope: !7819)
!7821 = !DILocation(line: 2350, column: 85, scope: !7813)
!7822 = !DILocation(line: 2350, column: 112, scope: !7823)
!7823 = !DILexicalBlockFile(scope: !7824, file: !969, discriminator: 1)
!7824 = distinct !DILexicalBlock(scope: !7819, file: !969, line: 2350, column: 103)
!7825 = !DILocation(line: 2350, column: 105, scope: !7823)
!7826 = !DILocation(line: 2350, column: 153, scope: !7823)
!7827 = !DILocation(line: 2352, column: 9, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2352, column: 9)
!7829 = !DILocation(line: 2352, column: 12, scope: !7828)
!7830 = !DILocation(line: 2352, column: 9, scope: !7660)
!7831 = !DILocation(line: 2353, column: 53, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !969, line: 2353, column: 9)
!7833 = distinct !DILexicalBlock(scope: !7828, file: !969, line: 2352, column: 25)
!7834 = !DILocation(line: 2353, column: 37, scope: !7832)
!7835 = !DILocation(line: 2353, column: 11, scope: !7832)
!7836 = !DILocation(line: 2353, column: 14, scope: !7832)
!7837 = !DILocation(line: 2353, column: 35, scope: !7832)
!7838 = !DILocation(line: 2353, column: 114, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7832, file: !969, line: 2353, column: 113)
!7840 = !DILocation(line: 2353, column: 117, scope: !7839)
!7841 = !DILocation(line: 2353, column: 113, scope: !7832)
!7842 = !DILocation(line: 2353, column: 148, scope: !7843)
!7843 = !DILexicalBlockFile(scope: !7844, file: !969, discriminator: 1)
!7844 = distinct !DILexicalBlock(scope: !7839, file: !969, line: 2353, column: 139)
!7845 = !DILocation(line: 2353, column: 141, scope: !7843)
!7846 = !DILocation(line: 2353, column: 189, scope: !7843)
!7847 = !DILocation(line: 2355, column: 54, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7833, file: !969, line: 2355, column: 9)
!7849 = !DILocation(line: 2355, column: 38, scope: !7848)
!7850 = !DILocation(line: 2355, column: 11, scope: !7848)
!7851 = !DILocation(line: 2355, column: 14, scope: !7848)
!7852 = !DILocation(line: 2355, column: 36, scope: !7848)
!7853 = !DILocation(line: 2355, column: 116, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7848, file: !969, line: 2355, column: 115)
!7855 = !DILocation(line: 2355, column: 119, scope: !7854)
!7856 = !DILocation(line: 2355, column: 115, scope: !7848)
!7857 = !DILocation(line: 2355, column: 151, scope: !7858)
!7858 = !DILexicalBlockFile(scope: !7859, file: !969, discriminator: 1)
!7859 = distinct !DILexicalBlock(scope: !7854, file: !969, line: 2355, column: 142)
!7860 = !DILocation(line: 2355, column: 144, scope: !7858)
!7861 = !DILocation(line: 2355, column: 192, scope: !7858)
!7862 = !DILocation(line: 2357, column: 5, scope: !7833)
!7863 = !DILocation(line: 2358, column: 14, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2358, column: 5)
!7865 = !DILocation(line: 2358, column: 10, scope: !7864)
!7866 = !DILocation(line: 2358, column: 19, scope: !7867)
!7867 = !DILexicalBlockFile(scope: !7868, file: !969, discriminator: 1)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !969, line: 2358, column: 5)
!7869 = !DILocation(line: 2358, column: 25, scope: !7867)
!7870 = !DILocation(line: 2358, column: 28, scope: !7867)
!7871 = !DILocation(line: 2358, column: 23, scope: !7867)
!7872 = !DILocation(line: 2358, column: 5, scope: !7867)
!7873 = !DILocalVariable(name: "block", scope: !7874, file: !969, line: 2359, type: !2271)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !969, line: 2358, column: 47)
!7875 = !DILocation(line: 2359, column: 19, scope: !7874)
!7876 = !DILocation(line: 2359, column: 38, scope: !7874)
!7877 = !DILocation(line: 2359, column: 28, scope: !7874)
!7878 = !DILocation(line: 2359, column: 31, scope: !7874)
!7879 = !DILocation(line: 2360, column: 47, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2360, column: 9)
!7881 = !DILocation(line: 2360, column: 30, scope: !7880)
!7882 = !DILocation(line: 2360, column: 11, scope: !7880)
!7883 = !DILocation(line: 2360, column: 18, scope: !7880)
!7884 = !DILocation(line: 2360, column: 28, scope: !7880)
!7885 = !DILocation(line: 2360, column: 90, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7880, file: !969, line: 2360, column: 89)
!7887 = !DILocation(line: 2360, column: 97, scope: !7886)
!7888 = !DILocation(line: 2360, column: 89, scope: !7880)
!7889 = !DILocation(line: 2360, column: 117, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7891, file: !969, discriminator: 1)
!7891 = distinct !DILexicalBlock(scope: !7886, file: !969, line: 2360, column: 108)
!7892 = !DILocation(line: 2360, column: 110, scope: !7890)
!7893 = !DILocation(line: 2360, column: 158, scope: !7890)
!7894 = !DILocation(line: 2362, column: 41, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2362, column: 9)
!7896 = !DILocation(line: 2362, column: 24, scope: !7895)
!7897 = !DILocation(line: 2362, column: 11, scope: !7895)
!7898 = !DILocation(line: 2362, column: 18, scope: !7895)
!7899 = !DILocation(line: 2362, column: 22, scope: !7895)
!7900 = !DILocation(line: 2362, column: 78, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7895, file: !969, line: 2362, column: 77)
!7902 = !DILocation(line: 2362, column: 85, scope: !7901)
!7903 = !DILocation(line: 2362, column: 77, scope: !7895)
!7904 = !DILocation(line: 2362, column: 99, scope: !7905)
!7905 = !DILexicalBlockFile(scope: !7906, file: !969, discriminator: 1)
!7906 = distinct !DILexicalBlock(scope: !7901, file: !969, line: 2362, column: 90)
!7907 = !DILocation(line: 2362, column: 92, scope: !7905)
!7908 = !DILocation(line: 2362, column: 140, scope: !7905)
!7909 = !DILocation(line: 2364, column: 49, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2364, column: 9)
!7911 = !DILocation(line: 2364, column: 32, scope: !7910)
!7912 = !DILocation(line: 2364, column: 11, scope: !7910)
!7913 = !DILocation(line: 2364, column: 18, scope: !7910)
!7914 = !DILocation(line: 2364, column: 30, scope: !7910)
!7915 = !DILocation(line: 2364, column: 94, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7910, file: !969, line: 2364, column: 93)
!7917 = !DILocation(line: 2364, column: 101, scope: !7916)
!7918 = !DILocation(line: 2364, column: 93, scope: !7910)
!7919 = !DILocation(line: 2364, column: 123, scope: !7920)
!7920 = !DILexicalBlockFile(scope: !7921, file: !969, discriminator: 1)
!7921 = distinct !DILexicalBlock(scope: !7916, file: !969, line: 2364, column: 114)
!7922 = !DILocation(line: 2364, column: 116, scope: !7920)
!7923 = !DILocation(line: 2364, column: 164, scope: !7920)
!7924 = !DILocation(line: 2366, column: 41, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2366, column: 9)
!7926 = !DILocation(line: 2366, column: 24, scope: !7925)
!7927 = !DILocation(line: 2366, column: 11, scope: !7925)
!7928 = !DILocation(line: 2366, column: 18, scope: !7925)
!7929 = !DILocation(line: 2366, column: 22, scope: !7925)
!7930 = !DILocation(line: 2366, column: 78, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7925, file: !969, line: 2366, column: 77)
!7932 = !DILocation(line: 2366, column: 85, scope: !7931)
!7933 = !DILocation(line: 2366, column: 77, scope: !7925)
!7934 = !DILocation(line: 2366, column: 99, scope: !7935)
!7935 = !DILexicalBlockFile(scope: !7936, file: !969, discriminator: 1)
!7936 = distinct !DILexicalBlock(scope: !7931, file: !969, line: 2366, column: 90)
!7937 = !DILocation(line: 2366, column: 92, scope: !7935)
!7938 = !DILocation(line: 2366, column: 140, scope: !7935)
!7939 = !DILocation(line: 2368, column: 46, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2368, column: 9)
!7941 = !DILocation(line: 2368, column: 29, scope: !7940)
!7942 = !DILocation(line: 2368, column: 11, scope: !7940)
!7943 = !DILocation(line: 2368, column: 18, scope: !7940)
!7944 = !DILocation(line: 2368, column: 27, scope: !7940)
!7945 = !DILocation(line: 2368, column: 88, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7940, file: !969, line: 2368, column: 87)
!7947 = !DILocation(line: 2368, column: 95, scope: !7946)
!7948 = !DILocation(line: 2368, column: 87, scope: !7940)
!7949 = !DILocation(line: 2368, column: 114, scope: !7950)
!7950 = !DILexicalBlockFile(scope: !7951, file: !969, discriminator: 1)
!7951 = distinct !DILexicalBlock(scope: !7946, file: !969, line: 2368, column: 105)
!7952 = !DILocation(line: 2368, column: 107, scope: !7950)
!7953 = !DILocation(line: 2368, column: 155, scope: !7950)
!7954 = !DILocation(line: 2370, column: 42, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2370, column: 9)
!7956 = !DILocation(line: 2370, column: 25, scope: !7955)
!7957 = !DILocation(line: 2370, column: 11, scope: !7955)
!7958 = !DILocation(line: 2370, column: 18, scope: !7955)
!7959 = !DILocation(line: 2370, column: 23, scope: !7955)
!7960 = !DILocation(line: 2370, column: 80, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7955, file: !969, line: 2370, column: 79)
!7962 = !DILocation(line: 2370, column: 87, scope: !7961)
!7963 = !DILocation(line: 2370, column: 79, scope: !7955)
!7964 = !DILocation(line: 2370, column: 102, scope: !7965)
!7965 = !DILexicalBlockFile(scope: !7966, file: !969, discriminator: 1)
!7966 = distinct !DILexicalBlock(scope: !7961, file: !969, line: 2370, column: 93)
!7967 = !DILocation(line: 2370, column: 95, scope: !7965)
!7968 = !DILocation(line: 2370, column: 143, scope: !7965)
!7969 = !DILocation(line: 2372, column: 43, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2372, column: 9)
!7971 = !DILocation(line: 2372, column: 26, scope: !7970)
!7972 = !DILocation(line: 2372, column: 11, scope: !7970)
!7973 = !DILocation(line: 2372, column: 18, scope: !7970)
!7974 = !DILocation(line: 2372, column: 24, scope: !7970)
!7975 = !DILocation(line: 2372, column: 82, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7970, file: !969, line: 2372, column: 81)
!7977 = !DILocation(line: 2372, column: 89, scope: !7976)
!7978 = !DILocation(line: 2372, column: 81, scope: !7970)
!7979 = !DILocation(line: 2372, column: 105, scope: !7980)
!7980 = !DILexicalBlockFile(scope: !7981, file: !969, discriminator: 1)
!7981 = distinct !DILexicalBlock(scope: !7976, file: !969, line: 2372, column: 96)
!7982 = !DILocation(line: 2372, column: 98, scope: !7980)
!7983 = !DILocation(line: 2372, column: 146, scope: !7980)
!7984 = !DILocation(line: 2374, column: 13, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2374, column: 13)
!7986 = !DILocation(line: 2374, column: 16, scope: !7985)
!7987 = !DILocation(line: 2374, column: 13, scope: !7874)
!7988 = !DILocation(line: 2375, column: 55, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !969, line: 2375, column: 13)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !969, line: 2374, column: 29)
!7991 = !DILocation(line: 2375, column: 38, scope: !7989)
!7992 = !DILocation(line: 2375, column: 15, scope: !7989)
!7993 = !DILocation(line: 2375, column: 22, scope: !7989)
!7994 = !DILocation(line: 2375, column: 36, scope: !7989)
!7995 = !DILocation(line: 2375, column: 102, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7989, file: !969, line: 2375, column: 101)
!7997 = !DILocation(line: 2375, column: 109, scope: !7996)
!7998 = !DILocation(line: 2375, column: 101, scope: !7989)
!7999 = !DILocation(line: 2375, column: 133, scope: !8000)
!8000 = !DILexicalBlockFile(scope: !8001, file: !969, discriminator: 1)
!8001 = distinct !DILexicalBlock(scope: !7996, file: !969, line: 2375, column: 124)
!8002 = !DILocation(line: 2375, column: 126, scope: !8000)
!8003 = !DILocation(line: 2375, column: 174, scope: !8000)
!8004 = !DILocation(line: 2377, column: 56, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7990, file: !969, line: 2377, column: 13)
!8006 = !DILocation(line: 2377, column: 39, scope: !8005)
!8007 = !DILocation(line: 2377, column: 15, scope: !8005)
!8008 = !DILocation(line: 2377, column: 22, scope: !8005)
!8009 = !DILocation(line: 2377, column: 37, scope: !8005)
!8010 = !DILocation(line: 2377, column: 104, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !969, line: 2377, column: 103)
!8012 = !DILocation(line: 2377, column: 111, scope: !8011)
!8013 = !DILocation(line: 2377, column: 103, scope: !8005)
!8014 = !DILocation(line: 2377, column: 136, scope: !8015)
!8015 = !DILexicalBlockFile(scope: !8016, file: !969, discriminator: 1)
!8016 = distinct !DILexicalBlock(scope: !8011, file: !969, line: 2377, column: 127)
!8017 = !DILocation(line: 2377, column: 129, scope: !8015)
!8018 = !DILocation(line: 2377, column: 177, scope: !8015)
!8019 = !DILocation(line: 2379, column: 9, scope: !7990)
!8020 = !DILocation(line: 2381, column: 17, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7874, file: !969, line: 2381, column: 9)
!8022 = !DILocation(line: 2381, column: 14, scope: !8021)
!8023 = !DILocation(line: 2381, column: 22, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8025, file: !969, discriminator: 1)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !969, line: 2381, column: 9)
!8026 = !DILocation(line: 2381, column: 27, scope: !8024)
!8027 = !DILocation(line: 2381, column: 25, scope: !8024)
!8028 = !DILocation(line: 2381, column: 9, scope: !8024)
!8029 = !DILocation(line: 2383, column: 68, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8025, file: !969, line: 2381, column: 43)
!8031 = !DILocation(line: 2383, column: 74, scope: !8030)
!8032 = !DILocation(line: 2383, column: 72, scope: !8030)
!8033 = !DILocation(line: 2383, column: 85, scope: !8030)
!8034 = !DILocation(line: 2383, column: 83, scope: !8030)
!8035 = !DILocation(line: 2383, column: 65, scope: !8030)
!8036 = !DILocation(line: 2383, column: 39, scope: !8030)
!8037 = !DILocation(line: 2383, column: 42, scope: !8030)
!8038 = !DILocation(line: 2383, column: 32, scope: !8030)
!8039 = !DILocation(line: 2383, column: 13, scope: !8030)
!8040 = !DILocation(line: 2383, column: 20, scope: !8030)
!8041 = !DILocation(line: 2383, column: 36, scope: !8030)
!8042 = !DILocation(line: 2384, column: 53, scope: !8030)
!8043 = !DILocation(line: 2384, column: 59, scope: !8030)
!8044 = !DILocation(line: 2384, column: 57, scope: !8030)
!8045 = !DILocation(line: 2384, column: 70, scope: !8030)
!8046 = !DILocation(line: 2384, column: 68, scope: !8030)
!8047 = !DILocation(line: 2384, column: 50, scope: !8030)
!8048 = !DILocation(line: 2384, column: 31, scope: !8030)
!8049 = !DILocation(line: 2384, column: 34, scope: !8030)
!8050 = !DILocation(line: 2384, column: 24, scope: !8030)
!8051 = !DILocation(line: 2384, column: 13, scope: !8030)
!8052 = !DILocation(line: 2384, column: 20, scope: !8030)
!8053 = !DILocation(line: 2384, column: 28, scope: !8030)
!8054 = !DILocation(line: 2385, column: 62, scope: !8030)
!8055 = !DILocation(line: 2385, column: 68, scope: !8030)
!8056 = !DILocation(line: 2385, column: 66, scope: !8030)
!8057 = !DILocation(line: 2385, column: 79, scope: !8030)
!8058 = !DILocation(line: 2385, column: 77, scope: !8030)
!8059 = !DILocation(line: 2385, column: 59, scope: !8030)
!8060 = !DILocation(line: 2385, column: 36, scope: !8030)
!8061 = !DILocation(line: 2385, column: 39, scope: !8030)
!8062 = !DILocation(line: 2385, column: 29, scope: !8030)
!8063 = !DILocation(line: 2385, column: 13, scope: !8030)
!8064 = !DILocation(line: 2385, column: 20, scope: !8030)
!8065 = !DILocation(line: 2385, column: 33, scope: !8030)
!8066 = !DILocation(line: 2386, column: 54, scope: !8030)
!8067 = !DILocation(line: 2386, column: 60, scope: !8030)
!8068 = !DILocation(line: 2386, column: 58, scope: !8030)
!8069 = !DILocation(line: 2386, column: 71, scope: !8030)
!8070 = !DILocation(line: 2386, column: 69, scope: !8030)
!8071 = !DILocation(line: 2386, column: 51, scope: !8030)
!8072 = !DILocation(line: 2386, column: 32, scope: !8030)
!8073 = !DILocation(line: 2386, column: 35, scope: !8030)
!8074 = !DILocation(line: 2386, column: 25, scope: !8030)
!8075 = !DILocation(line: 2386, column: 13, scope: !8030)
!8076 = !DILocation(line: 2386, column: 20, scope: !8030)
!8077 = !DILocation(line: 2386, column: 29, scope: !8030)
!8078 = !DILocation(line: 2387, column: 57, scope: !8030)
!8079 = !DILocation(line: 2387, column: 63, scope: !8030)
!8080 = !DILocation(line: 2387, column: 61, scope: !8030)
!8081 = !DILocation(line: 2387, column: 74, scope: !8030)
!8082 = !DILocation(line: 2387, column: 72, scope: !8030)
!8083 = !DILocation(line: 2387, column: 54, scope: !8030)
!8084 = !DILocation(line: 2387, column: 33, scope: !8030)
!8085 = !DILocation(line: 2387, column: 36, scope: !8030)
!8086 = !DILocation(line: 2387, column: 26, scope: !8030)
!8087 = !DILocation(line: 2387, column: 13, scope: !8030)
!8088 = !DILocation(line: 2387, column: 20, scope: !8030)
!8089 = !DILocation(line: 2387, column: 30, scope: !8030)
!8090 = !DILocation(line: 2388, column: 17, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8030, file: !969, line: 2388, column: 17)
!8092 = !DILocation(line: 2388, column: 20, scope: !8091)
!8093 = !DILocation(line: 2388, column: 17, scope: !8030)
!8094 = !DILocation(line: 2389, column: 76, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8091, file: !969, line: 2388, column: 33)
!8096 = !DILocation(line: 2389, column: 82, scope: !8095)
!8097 = !DILocation(line: 2389, column: 80, scope: !8095)
!8098 = !DILocation(line: 2389, column: 93, scope: !8095)
!8099 = !DILocation(line: 2389, column: 91, scope: !8095)
!8100 = !DILocation(line: 2389, column: 73, scope: !8095)
!8101 = !DILocation(line: 2389, column: 45, scope: !8095)
!8102 = !DILocation(line: 2389, column: 48, scope: !8095)
!8103 = !DILocation(line: 2389, column: 38, scope: !8095)
!8104 = !DILocation(line: 2389, column: 17, scope: !8095)
!8105 = !DILocation(line: 2389, column: 24, scope: !8095)
!8106 = !DILocation(line: 2389, column: 42, scope: !8095)
!8107 = !DILocation(line: 2390, column: 77, scope: !8095)
!8108 = !DILocation(line: 2390, column: 83, scope: !8095)
!8109 = !DILocation(line: 2390, column: 81, scope: !8095)
!8110 = !DILocation(line: 2390, column: 94, scope: !8095)
!8111 = !DILocation(line: 2390, column: 92, scope: !8095)
!8112 = !DILocation(line: 2390, column: 74, scope: !8095)
!8113 = !DILocation(line: 2390, column: 46, scope: !8095)
!8114 = !DILocation(line: 2390, column: 49, scope: !8095)
!8115 = !DILocation(line: 2390, column: 39, scope: !8095)
!8116 = !DILocation(line: 2390, column: 17, scope: !8095)
!8117 = !DILocation(line: 2390, column: 24, scope: !8095)
!8118 = !DILocation(line: 2390, column: 43, scope: !8095)
!8119 = !DILocation(line: 2391, column: 13, scope: !8095)
!8120 = !DILocation(line: 2394, column: 53, scope: !8030)
!8121 = !DILocation(line: 2394, column: 56, scope: !8030)
!8122 = !DILocation(line: 2394, column: 69, scope: !8030)
!8123 = !DILocation(line: 2394, column: 67, scope: !8030)
!8124 = !DILocation(line: 2394, column: 74, scope: !8030)
!8125 = !DILocation(line: 2394, column: 72, scope: !8030)
!8126 = !DILocation(line: 2394, column: 50, scope: !8030)
!8127 = !DILocation(line: 2394, column: 31, scope: !8030)
!8128 = !DILocation(line: 2394, column: 34, scope: !8030)
!8129 = !DILocation(line: 2394, column: 24, scope: !8030)
!8130 = !DILocation(line: 2394, column: 13, scope: !8030)
!8131 = !DILocation(line: 2394, column: 20, scope: !8030)
!8132 = !DILocation(line: 2394, column: 28, scope: !8030)
!8133 = !DILocation(line: 2395, column: 65, scope: !8030)
!8134 = !DILocation(line: 2395, column: 68, scope: !8030)
!8135 = !DILocation(line: 2395, column: 81, scope: !8030)
!8136 = !DILocation(line: 2395, column: 79, scope: !8030)
!8137 = !DILocation(line: 2395, column: 86, scope: !8030)
!8138 = !DILocation(line: 2395, column: 84, scope: !8030)
!8139 = !DILocation(line: 2395, column: 62, scope: !8030)
!8140 = !DILocation(line: 2395, column: 37, scope: !8030)
!8141 = !DILocation(line: 2395, column: 40, scope: !8030)
!8142 = !DILocation(line: 2395, column: 30, scope: !8030)
!8143 = !DILocation(line: 2395, column: 13, scope: !8030)
!8144 = !DILocation(line: 2395, column: 20, scope: !8030)
!8145 = !DILocation(line: 2395, column: 34, scope: !8030)
!8146 = !DILocation(line: 2396, column: 9, scope: !8030)
!8147 = !DILocation(line: 2381, column: 39, scope: !8148)
!8148 = !DILexicalBlockFile(scope: !8025, file: !969, discriminator: 2)
!8149 = !DILocation(line: 2381, column: 9, scope: !8148)
!8150 = distinct !{!8150, !8151}
!8151 = !DILocation(line: 2381, column: 9, scope: !7874)
!8152 = !DILocation(line: 2397, column: 5, scope: !7874)
!8153 = !DILocation(line: 2358, column: 43, scope: !8154)
!8154 = !DILexicalBlockFile(scope: !7868, file: !969, discriminator: 2)
!8155 = !DILocation(line: 2358, column: 5, scope: !8154)
!8156 = distinct !{!8156, !8157}
!8157 = !DILocation(line: 2358, column: 5, scope: !7660)
!8158 = !DILocation(line: 2399, column: 10, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !7660, file: !969, line: 2399, column: 9)
!8160 = !DILocation(line: 2399, column: 13, scope: !8159)
!8161 = !DILocation(line: 2399, column: 9, scope: !7660)
!8162 = !DILocation(line: 2400, column: 51, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !969, line: 2400, column: 9)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !969, line: 2399, column: 26)
!8165 = !DILocation(line: 2400, column: 34, scope: !8163)
!8166 = !DILocation(line: 2400, column: 11, scope: !8163)
!8167 = !DILocation(line: 2400, column: 14, scope: !8163)
!8168 = !DILocation(line: 2400, column: 32, scope: !8163)
!8169 = !DILocation(line: 2400, column: 101, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8163, file: !969, line: 2400, column: 100)
!8171 = !DILocation(line: 2400, column: 104, scope: !8170)
!8172 = !DILocation(line: 2400, column: 100, scope: !8163)
!8173 = !DILocation(line: 2400, column: 132, scope: !8174)
!8174 = !DILexicalBlockFile(scope: !8175, file: !969, discriminator: 1)
!8175 = distinct !DILexicalBlock(scope: !8170, file: !969, line: 2400, column: 123)
!8176 = !DILocation(line: 2400, column: 125, scope: !8174)
!8177 = !DILocation(line: 2400, column: 173, scope: !8174)
!8178 = !DILocation(line: 2402, column: 18, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8164, file: !969, line: 2402, column: 9)
!8180 = !DILocation(line: 2402, column: 14, scope: !8179)
!8181 = !DILocation(line: 2402, column: 23, scope: !8182)
!8182 = !DILexicalBlockFile(scope: !8183, file: !969, discriminator: 1)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !969, line: 2402, column: 9)
!8184 = !DILocation(line: 2402, column: 29, scope: !8182)
!8185 = !DILocation(line: 2402, column: 32, scope: !8182)
!8186 = !DILocation(line: 2402, column: 27, scope: !8182)
!8187 = !DILocation(line: 2402, column: 9, scope: !8182)
!8188 = !DILocalVariable(name: "block", scope: !8189, file: !969, line: 2403, type: !2271)
!8189 = distinct !DILexicalBlock(scope: !8183, file: !969, line: 2402, column: 51)
!8190 = !DILocation(line: 2403, column: 23, scope: !8189)
!8191 = !DILocation(line: 2403, column: 42, scope: !8189)
!8192 = !DILocation(line: 2403, column: 32, scope: !8189)
!8193 = !DILocation(line: 2403, column: 35, scope: !8189)
!8194 = !DILocation(line: 2404, column: 52, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8189, file: !969, line: 2404, column: 13)
!8196 = !DILocation(line: 2404, column: 35, scope: !8195)
!8197 = !DILocation(line: 2404, column: 15, scope: !8195)
!8198 = !DILocation(line: 2404, column: 22, scope: !8195)
!8199 = !DILocation(line: 2404, column: 33, scope: !8195)
!8200 = !DILocation(line: 2404, column: 96, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8195, file: !969, line: 2404, column: 95)
!8202 = !DILocation(line: 2404, column: 103, scope: !8201)
!8203 = !DILocation(line: 2404, column: 95, scope: !8195)
!8204 = !DILocation(line: 2404, column: 124, scope: !8205)
!8205 = !DILexicalBlockFile(scope: !8206, file: !969, discriminator: 1)
!8206 = distinct !DILexicalBlock(scope: !8201, file: !969, line: 2404, column: 115)
!8207 = !DILocation(line: 2404, column: 117, scope: !8205)
!8208 = !DILocation(line: 2404, column: 165, scope: !8205)
!8209 = !DILocation(line: 2406, column: 21, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8189, file: !969, line: 2406, column: 13)
!8211 = !DILocation(line: 2406, column: 18, scope: !8210)
!8212 = !DILocation(line: 2406, column: 26, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8214, file: !969, discriminator: 1)
!8214 = distinct !DILexicalBlock(scope: !8210, file: !969, line: 2406, column: 13)
!8215 = !DILocation(line: 2406, column: 31, scope: !8213)
!8216 = !DILocation(line: 2406, column: 29, scope: !8213)
!8217 = !DILocation(line: 2406, column: 13, scope: !8213)
!8218 = !DILocation(line: 2407, column: 70, scope: !8214)
!8219 = !DILocation(line: 2407, column: 73, scope: !8214)
!8220 = !DILocation(line: 2407, column: 86, scope: !8214)
!8221 = !DILocation(line: 2407, column: 84, scope: !8214)
!8222 = !DILocation(line: 2407, column: 91, scope: !8214)
!8223 = !DILocation(line: 2407, column: 89, scope: !8214)
!8224 = !DILocation(line: 2407, column: 67, scope: !8214)
!8225 = !DILocation(line: 2407, column: 42, scope: !8214)
!8226 = !DILocation(line: 2407, column: 45, scope: !8214)
!8227 = !DILocation(line: 2407, column: 35, scope: !8214)
!8228 = !DILocation(line: 2407, column: 17, scope: !8214)
!8229 = !DILocation(line: 2407, column: 24, scope: !8214)
!8230 = !DILocation(line: 2407, column: 39, scope: !8214)
!8231 = !DILocation(line: 2406, column: 43, scope: !8232)
!8232 = !DILexicalBlockFile(scope: !8214, file: !969, discriminator: 2)
!8233 = !DILocation(line: 2406, column: 13, scope: !8232)
!8234 = distinct !{!8234, !8235}
!8235 = !DILocation(line: 2406, column: 13, scope: !8189)
!8236 = !DILocation(line: 2408, column: 9, scope: !8189)
!8237 = !DILocation(line: 2402, column: 47, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8183, file: !969, discriminator: 2)
!8239 = !DILocation(line: 2402, column: 9, scope: !8238)
!8240 = distinct !{!8240, !8241}
!8241 = !DILocation(line: 2402, column: 9, scope: !8164)
!8242 = !DILocation(line: 2409, column: 5, scope: !8164)
!8243 = !DILocation(line: 2410, column: 18, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !969, line: 2410, column: 9)
!8245 = distinct !DILexicalBlock(scope: !8159, file: !969, line: 2409, column: 12)
!8246 = !DILocation(line: 2410, column: 14, scope: !8244)
!8247 = !DILocation(line: 2410, column: 23, scope: !8248)
!8248 = !DILexicalBlockFile(scope: !8249, file: !969, discriminator: 1)
!8249 = distinct !DILexicalBlock(scope: !8244, file: !969, line: 2410, column: 9)
!8250 = !DILocation(line: 2410, column: 29, scope: !8248)
!8251 = !DILocation(line: 2410, column: 32, scope: !8248)
!8252 = !DILocation(line: 2410, column: 27, scope: !8248)
!8253 = !DILocation(line: 2410, column: 9, scope: !8248)
!8254 = !DILocalVariable(name: "block", scope: !8255, file: !969, line: 2411, type: !2271)
!8255 = distinct !DILexicalBlock(scope: !8249, file: !969, line: 2410, column: 51)
!8256 = !DILocation(line: 2411, column: 23, scope: !8255)
!8257 = !DILocation(line: 2411, column: 42, scope: !8255)
!8258 = !DILocation(line: 2411, column: 32, scope: !8255)
!8259 = !DILocation(line: 2411, column: 35, scope: !8255)
!8260 = !DILocation(line: 2412, column: 52, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8255, file: !969, line: 2412, column: 13)
!8262 = !DILocation(line: 2412, column: 35, scope: !8261)
!8263 = !DILocation(line: 2412, column: 15, scope: !8261)
!8264 = !DILocation(line: 2412, column: 22, scope: !8261)
!8265 = !DILocation(line: 2412, column: 33, scope: !8261)
!8266 = !DILocation(line: 2412, column: 96, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8261, file: !969, line: 2412, column: 95)
!8268 = !DILocation(line: 2412, column: 103, scope: !8267)
!8269 = !DILocation(line: 2412, column: 95, scope: !8261)
!8270 = !DILocation(line: 2412, column: 124, scope: !8271)
!8271 = !DILexicalBlockFile(scope: !8272, file: !969, discriminator: 1)
!8272 = distinct !DILexicalBlock(scope: !8267, file: !969, line: 2412, column: 115)
!8273 = !DILocation(line: 2412, column: 117, scope: !8271)
!8274 = !DILocation(line: 2412, column: 165, scope: !8271)
!8275 = !DILocation(line: 2414, column: 21, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8255, file: !969, line: 2414, column: 13)
!8277 = !DILocation(line: 2414, column: 18, scope: !8276)
!8278 = !DILocation(line: 2414, column: 26, scope: !8279)
!8279 = !DILexicalBlockFile(scope: !8280, file: !969, discriminator: 1)
!8280 = distinct !DILexicalBlock(scope: !8276, file: !969, line: 2414, column: 13)
!8281 = !DILocation(line: 2414, column: 31, scope: !8279)
!8282 = !DILocation(line: 2414, column: 29, scope: !8279)
!8283 = !DILocation(line: 2414, column: 13, scope: !8279)
!8284 = !DILocation(line: 2415, column: 69, scope: !8280)
!8285 = !DILocation(line: 2415, column: 52, scope: !8280)
!8286 = !DILocation(line: 2415, column: 59, scope: !8280)
!8287 = !DILocation(line: 2415, column: 35, scope: !8280)
!8288 = !DILocation(line: 2415, column: 17, scope: !8280)
!8289 = !DILocation(line: 2415, column: 24, scope: !8280)
!8290 = !DILocation(line: 2415, column: 39, scope: !8280)
!8291 = !DILocation(line: 2414, column: 43, scope: !8292)
!8292 = !DILexicalBlockFile(scope: !8280, file: !969, discriminator: 2)
!8293 = !DILocation(line: 2414, column: 13, scope: !8292)
!8294 = distinct !{!8294, !8295}
!8295 = !DILocation(line: 2414, column: 13, scope: !8255)
!8296 = !DILocation(line: 2416, column: 9, scope: !8255)
!8297 = !DILocation(line: 2410, column: 47, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !8249, file: !969, discriminator: 2)
!8299 = !DILocation(line: 2410, column: 9, scope: !8298)
!8300 = distinct !{!8300, !8301}
!8301 = !DILocation(line: 2410, column: 9, scope: !8245)
!8302 = !DILocation(line: 2419, column: 5, scope: !7660)
!8303 = !DILocation(line: 2421, column: 5, scope: !7660)
!8304 = !DILocation(line: 2422, column: 1, scope: !7660)
!8305 = distinct !DISubprogram(name: "dprint_options", scope: !969, file: !969, line: 1676, type: !2176, isLocal: true, isDefinition: true, scopeLine: 1677, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8306 = !DILocalVariable(name: "s", arg: 1, scope: !8305, file: !969, line: 1676, type: !980)
!8307 = !DILocation(line: 1676, column: 46, scope: !8305)
!8308 = !DILocation(line: 1788, column: 1, scope: !8305)
!8309 = distinct !DISubprogram(name: "encode_exponents_blk_ch", scope: !969, file: !969, line: 424, type: !8310, isLocal: true, isDefinition: true, scopeLine: 426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{null, !1179, !966, !966, !966}
!8312 = !DILocalVariable(name: "exp", arg: 1, scope: !8309, file: !969, line: 424, type: !1179)
!8313 = !DILocation(line: 424, column: 46, scope: !8309)
!8314 = !DILocalVariable(name: "nb_exps", arg: 2, scope: !8309, file: !969, line: 424, type: !966)
!8315 = !DILocation(line: 424, column: 55, scope: !8309)
!8316 = !DILocalVariable(name: "exp_strategy", arg: 3, scope: !8309, file: !969, line: 424, type: !966)
!8317 = !DILocation(line: 424, column: 68, scope: !8309)
!8318 = !DILocalVariable(name: "cpl", arg: 4, scope: !8309, file: !969, line: 425, type: !966)
!8319 = !DILocation(line: 425, column: 41, scope: !8309)
!8320 = !DILocalVariable(name: "nb_groups", scope: !8309, file: !969, line: 427, type: !966)
!8321 = !DILocation(line: 427, column: 9, scope: !8309)
!8322 = !DILocalVariable(name: "i", scope: !8309, file: !969, line: 427, type: !966)
!8323 = !DILocation(line: 427, column: 20, scope: !8309)
!8324 = !DILocalVariable(name: "k", scope: !8309, file: !969, line: 427, type: !966)
!8325 = !DILocation(line: 427, column: 23, scope: !8309)
!8326 = !DILocation(line: 429, column: 57, scope: !8309)
!8327 = !DILocation(line: 429, column: 17, scope: !8309)
!8328 = !DILocation(line: 429, column: 41, scope: !8309)
!8329 = !DILocation(line: 429, column: 53, scope: !8309)
!8330 = !DILocation(line: 429, column: 36, scope: !8309)
!8331 = !DILocation(line: 429, column: 66, scope: !8309)
!8332 = !DILocation(line: 429, column: 15, scope: !8309)
!8333 = !DILocation(line: 432, column: 12, scope: !8309)
!8334 = !DILocation(line: 432, column: 5, scope: !8309)
!8335 = !DILocation(line: 434, column: 16, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !969, line: 434, column: 9)
!8337 = distinct !DILexicalBlock(scope: !8309, file: !969, line: 432, column: 26)
!8338 = !DILocation(line: 434, column: 27, scope: !8336)
!8339 = !DILocation(line: 434, column: 26, scope: !8336)
!8340 = !DILocation(line: 434, column: 23, scope: !8336)
!8341 = !DILocation(line: 434, column: 14, scope: !8336)
!8342 = !DILocation(line: 434, column: 32, scope: !8343)
!8343 = !DILexicalBlockFile(scope: !8344, file: !969, discriminator: 1)
!8344 = distinct !DILexicalBlock(scope: !8336, file: !969, line: 434, column: 9)
!8345 = !DILocation(line: 434, column: 37, scope: !8343)
!8346 = !DILocation(line: 434, column: 34, scope: !8343)
!8347 = !DILocation(line: 434, column: 9, scope: !8343)
!8348 = !DILocalVariable(name: "exp_min", scope: !8349, file: !969, line: 435, type: !1134)
!8349 = distinct !DILexicalBlock(scope: !8344, file: !969, line: 434, column: 53)
!8350 = !DILocation(line: 435, column: 21, scope: !8349)
!8351 = !DILocation(line: 435, column: 35, scope: !8349)
!8352 = !DILocation(line: 435, column: 31, scope: !8349)
!8353 = !DILocation(line: 436, column: 21, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !969, line: 436, column: 17)
!8355 = !DILocation(line: 436, column: 22, scope: !8354)
!8356 = !DILocation(line: 436, column: 17, scope: !8354)
!8357 = !DILocation(line: 436, column: 28, scope: !8354)
!8358 = !DILocation(line: 436, column: 26, scope: !8354)
!8359 = !DILocation(line: 436, column: 17, scope: !8349)
!8360 = !DILocation(line: 437, column: 31, scope: !8354)
!8361 = !DILocation(line: 437, column: 32, scope: !8354)
!8362 = !DILocation(line: 437, column: 27, scope: !8354)
!8363 = !DILocation(line: 437, column: 25, scope: !8354)
!8364 = !DILocation(line: 437, column: 17, scope: !8354)
!8365 = !DILocation(line: 438, column: 26, scope: !8349)
!8366 = !DILocation(line: 438, column: 17, scope: !8349)
!8367 = !DILocation(line: 438, column: 19, scope: !8349)
!8368 = !DILocation(line: 438, column: 18, scope: !8349)
!8369 = !DILocation(line: 438, column: 13, scope: !8349)
!8370 = !DILocation(line: 438, column: 24, scope: !8349)
!8371 = !DILocation(line: 439, column: 15, scope: !8349)
!8372 = !DILocation(line: 440, column: 9, scope: !8349)
!8373 = !DILocation(line: 434, column: 49, scope: !8374)
!8374 = !DILexicalBlockFile(scope: !8344, file: !969, discriminator: 2)
!8375 = !DILocation(line: 434, column: 9, scope: !8374)
!8376 = distinct !{!8376, !8377}
!8377 = !DILocation(line: 434, column: 9, scope: !8337)
!8378 = !DILocation(line: 441, column: 9, scope: !8337)
!8379 = !DILocation(line: 443, column: 16, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8337, file: !969, line: 443, column: 9)
!8381 = !DILocation(line: 443, column: 27, scope: !8380)
!8382 = !DILocation(line: 443, column: 26, scope: !8380)
!8383 = !DILocation(line: 443, column: 23, scope: !8380)
!8384 = !DILocation(line: 443, column: 14, scope: !8380)
!8385 = !DILocation(line: 443, column: 32, scope: !8386)
!8386 = !DILexicalBlockFile(scope: !8387, file: !969, discriminator: 1)
!8387 = distinct !DILexicalBlock(scope: !8380, file: !969, line: 443, column: 9)
!8388 = !DILocation(line: 443, column: 37, scope: !8386)
!8389 = !DILocation(line: 443, column: 34, scope: !8386)
!8390 = !DILocation(line: 443, column: 9, scope: !8386)
!8391 = !DILocalVariable(name: "exp_min", scope: !8392, file: !969, line: 444, type: !1134)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !969, line: 443, column: 53)
!8393 = !DILocation(line: 444, column: 21, scope: !8392)
!8394 = !DILocation(line: 444, column: 35, scope: !8392)
!8395 = !DILocation(line: 444, column: 31, scope: !8392)
!8396 = !DILocation(line: 445, column: 21, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8392, file: !969, line: 445, column: 17)
!8398 = !DILocation(line: 445, column: 22, scope: !8397)
!8399 = !DILocation(line: 445, column: 17, scope: !8397)
!8400 = !DILocation(line: 445, column: 28, scope: !8397)
!8401 = !DILocation(line: 445, column: 26, scope: !8397)
!8402 = !DILocation(line: 445, column: 17, scope: !8392)
!8403 = !DILocation(line: 446, column: 31, scope: !8397)
!8404 = !DILocation(line: 446, column: 32, scope: !8397)
!8405 = !DILocation(line: 446, column: 27, scope: !8397)
!8406 = !DILocation(line: 446, column: 25, scope: !8397)
!8407 = !DILocation(line: 446, column: 17, scope: !8397)
!8408 = !DILocation(line: 447, column: 21, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8392, file: !969, line: 447, column: 17)
!8410 = !DILocation(line: 447, column: 22, scope: !8409)
!8411 = !DILocation(line: 447, column: 17, scope: !8409)
!8412 = !DILocation(line: 447, column: 28, scope: !8409)
!8413 = !DILocation(line: 447, column: 26, scope: !8409)
!8414 = !DILocation(line: 447, column: 17, scope: !8392)
!8415 = !DILocation(line: 448, column: 31, scope: !8409)
!8416 = !DILocation(line: 448, column: 32, scope: !8409)
!8417 = !DILocation(line: 448, column: 27, scope: !8409)
!8418 = !DILocation(line: 448, column: 25, scope: !8409)
!8419 = !DILocation(line: 448, column: 17, scope: !8409)
!8420 = !DILocation(line: 449, column: 21, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8392, file: !969, line: 449, column: 17)
!8422 = !DILocation(line: 449, column: 22, scope: !8421)
!8423 = !DILocation(line: 449, column: 17, scope: !8421)
!8424 = !DILocation(line: 449, column: 28, scope: !8421)
!8425 = !DILocation(line: 449, column: 26, scope: !8421)
!8426 = !DILocation(line: 449, column: 17, scope: !8392)
!8427 = !DILocation(line: 450, column: 31, scope: !8421)
!8428 = !DILocation(line: 450, column: 32, scope: !8421)
!8429 = !DILocation(line: 450, column: 27, scope: !8421)
!8430 = !DILocation(line: 450, column: 25, scope: !8421)
!8431 = !DILocation(line: 450, column: 17, scope: !8421)
!8432 = !DILocation(line: 451, column: 26, scope: !8392)
!8433 = !DILocation(line: 451, column: 17, scope: !8392)
!8434 = !DILocation(line: 451, column: 19, scope: !8392)
!8435 = !DILocation(line: 451, column: 18, scope: !8392)
!8436 = !DILocation(line: 451, column: 13, scope: !8392)
!8437 = !DILocation(line: 451, column: 24, scope: !8392)
!8438 = !DILocation(line: 452, column: 15, scope: !8392)
!8439 = !DILocation(line: 453, column: 9, scope: !8392)
!8440 = !DILocation(line: 443, column: 49, scope: !8441)
!8441 = !DILexicalBlockFile(scope: !8387, file: !969, discriminator: 2)
!8442 = !DILocation(line: 443, column: 9, scope: !8441)
!8443 = distinct !{!8443, !8444}
!8444 = !DILocation(line: 443, column: 9, scope: !8337)
!8445 = !DILocation(line: 454, column: 9, scope: !8337)
!8446 = !DILocation(line: 458, column: 10, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8309, file: !969, line: 458, column: 9)
!8448 = !DILocation(line: 458, column: 14, scope: !8447)
!8449 = !DILocation(line: 458, column: 17, scope: !8450)
!8450 = !DILexicalBlockFile(scope: !8447, file: !969, discriminator: 1)
!8451 = !DILocation(line: 458, column: 24, scope: !8450)
!8452 = !DILocation(line: 458, column: 9, scope: !8450)
!8453 = !DILocation(line: 459, column: 9, scope: !8447)
!8454 = !DILocation(line: 459, column: 16, scope: !8447)
!8455 = !DILocation(line: 463, column: 12, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8309, file: !969, line: 463, column: 5)
!8457 = !DILocation(line: 463, column: 10, scope: !8456)
!8458 = !DILocation(line: 463, column: 17, scope: !8459)
!8459 = !DILexicalBlockFile(scope: !8460, file: !969, discriminator: 1)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !969, line: 463, column: 5)
!8461 = !DILocation(line: 463, column: 22, scope: !8459)
!8462 = !DILocation(line: 463, column: 19, scope: !8459)
!8463 = !DILocation(line: 463, column: 5, scope: !8459)
!8464 = !DILocation(line: 464, column: 24, scope: !8460)
!8465 = !DILocation(line: 464, column: 20, scope: !8460)
!8466 = !DILocation(line: 464, column: 19, scope: !8460)
!8467 = !DILocation(line: 464, column: 35, scope: !8460)
!8468 = !DILocation(line: 464, column: 36, scope: !8460)
!8469 = !DILocation(line: 464, column: 31, scope: !8460)
!8470 = !DILocation(line: 464, column: 40, scope: !8460)
!8471 = !DILocation(line: 464, column: 28, scope: !8460)
!8472 = !DILocation(line: 464, column: 52, scope: !8459)
!8473 = !DILocation(line: 464, column: 53, scope: !8459)
!8474 = !DILocation(line: 464, column: 48, scope: !8459)
!8475 = !DILocation(line: 464, column: 57, scope: !8459)
!8476 = !DILocation(line: 464, column: 19, scope: !8459)
!8477 = !DILocation(line: 464, column: 69, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8460, file: !969, discriminator: 2)
!8479 = !DILocation(line: 464, column: 65, scope: !8478)
!8480 = !DILocation(line: 464, column: 64, scope: !8478)
!8481 = !DILocation(line: 464, column: 19, scope: !8478)
!8482 = !DILocation(line: 464, column: 19, scope: !8483)
!8483 = !DILexicalBlockFile(scope: !8460, file: !969, discriminator: 3)
!8484 = !DILocation(line: 464, column: 18, scope: !8483)
!8485 = !DILocation(line: 464, column: 13, scope: !8483)
!8486 = !DILocation(line: 464, column: 9, scope: !8483)
!8487 = !DILocation(line: 464, column: 16, scope: !8483)
!8488 = !DILocation(line: 463, column: 34, scope: !8478)
!8489 = !DILocation(line: 463, column: 5, scope: !8478)
!8490 = distinct !{!8490, !8491}
!8491 = !DILocation(line: 463, column: 5, scope: !8309)
!8492 = !DILocation(line: 465, column: 6, scope: !8309)
!8493 = !DILocation(line: 466, column: 5, scope: !8309)
!8494 = !DILocation(line: 466, column: 12, scope: !8495)
!8495 = !DILexicalBlockFile(scope: !8309, file: !969, discriminator: 1)
!8496 = !DILocation(line: 466, column: 16, scope: !8495)
!8497 = !DILocation(line: 466, column: 5, scope: !8495)
!8498 = !DILocation(line: 467, column: 24, scope: !8309)
!8499 = !DILocation(line: 467, column: 20, scope: !8309)
!8500 = !DILocation(line: 467, column: 19, scope: !8309)
!8501 = !DILocation(line: 467, column: 35, scope: !8309)
!8502 = !DILocation(line: 467, column: 36, scope: !8309)
!8503 = !DILocation(line: 467, column: 31, scope: !8309)
!8504 = !DILocation(line: 467, column: 40, scope: !8309)
!8505 = !DILocation(line: 467, column: 28, scope: !8309)
!8506 = !DILocation(line: 467, column: 52, scope: !8495)
!8507 = !DILocation(line: 467, column: 53, scope: !8495)
!8508 = !DILocation(line: 467, column: 48, scope: !8495)
!8509 = !DILocation(line: 467, column: 57, scope: !8495)
!8510 = !DILocation(line: 467, column: 19, scope: !8495)
!8511 = !DILocation(line: 467, column: 69, scope: !8512)
!8512 = !DILexicalBlockFile(scope: !8309, file: !969, discriminator: 2)
!8513 = !DILocation(line: 467, column: 65, scope: !8512)
!8514 = !DILocation(line: 467, column: 64, scope: !8512)
!8515 = !DILocation(line: 467, column: 19, scope: !8512)
!8516 = !DILocation(line: 467, column: 19, scope: !8517)
!8517 = !DILexicalBlockFile(scope: !8309, file: !969, discriminator: 3)
!8518 = !DILocation(line: 467, column: 18, scope: !8517)
!8519 = !DILocation(line: 467, column: 13, scope: !8517)
!8520 = !DILocation(line: 467, column: 9, scope: !8517)
!8521 = !DILocation(line: 467, column: 16, scope: !8517)
!8522 = !DILocation(line: 466, column: 5, scope: !8512)
!8523 = distinct !{!8523, !8493}
!8524 = !DILocation(line: 469, column: 9, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8309, file: !969, line: 469, column: 9)
!8526 = !DILocation(line: 469, column: 9, scope: !8309)
!8527 = !DILocation(line: 470, column: 19, scope: !8525)
!8528 = !DILocation(line: 470, column: 26, scope: !8525)
!8529 = !DILocation(line: 470, column: 9, scope: !8525)
!8530 = !DILocation(line: 470, column: 17, scope: !8525)
!8531 = !DILocation(line: 473, column: 13, scope: !8309)
!8532 = !DILocation(line: 473, column: 5, scope: !8309)
!8533 = !DILocation(line: 475, column: 18, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !969, line: 475, column: 9)
!8535 = distinct !DILexicalBlock(scope: !8309, file: !969, line: 473, column: 27)
!8536 = !DILocation(line: 475, column: 16, scope: !8534)
!8537 = !DILocation(line: 475, column: 34, scope: !8534)
!8538 = !DILocation(line: 475, column: 44, scope: !8534)
!8539 = !DILocation(line: 475, column: 49, scope: !8534)
!8540 = !DILocation(line: 475, column: 48, scope: !8534)
!8541 = !DILocation(line: 475, column: 31, scope: !8534)
!8542 = !DILocation(line: 475, column: 14, scope: !8534)
!8543 = !DILocation(line: 475, column: 54, scope: !8544)
!8544 = !DILexicalBlockFile(scope: !8545, file: !969, discriminator: 1)
!8545 = distinct !DILexicalBlock(scope: !8534, file: !969, line: 475, column: 9)
!8546 = !DILocation(line: 475, column: 56, scope: !8544)
!8547 = !DILocation(line: 475, column: 9, scope: !8544)
!8548 = !DILocalVariable(name: "exp1", scope: !8549, file: !969, line: 476, type: !1134)
!8549 = distinct !DILexicalBlock(scope: !8545, file: !969, line: 475, column: 66)
!8550 = !DILocation(line: 476, column: 21, scope: !8549)
!8551 = !DILocation(line: 476, column: 32, scope: !8549)
!8552 = !DILocation(line: 476, column: 34, scope: !8549)
!8553 = !DILocation(line: 476, column: 33, scope: !8549)
!8554 = !DILocation(line: 476, column: 28, scope: !8549)
!8555 = !DILocation(line: 477, column: 24, scope: !8549)
!8556 = !DILocation(line: 477, column: 18, scope: !8549)
!8557 = !DILocation(line: 477, column: 13, scope: !8549)
!8558 = !DILocation(line: 477, column: 22, scope: !8549)
!8559 = !DILocation(line: 478, column: 24, scope: !8549)
!8560 = !DILocation(line: 478, column: 18, scope: !8549)
!8561 = !DILocation(line: 478, column: 13, scope: !8549)
!8562 = !DILocation(line: 478, column: 22, scope: !8549)
!8563 = !DILocation(line: 479, column: 9, scope: !8549)
!8564 = !DILocation(line: 475, column: 62, scope: !8565)
!8565 = !DILexicalBlockFile(scope: !8545, file: !969, discriminator: 2)
!8566 = !DILocation(line: 475, column: 9, scope: !8565)
!8567 = distinct !{!8567, !8568}
!8568 = !DILocation(line: 475, column: 9, scope: !8535)
!8569 = !DILocation(line: 480, column: 9, scope: !8535)
!8570 = !DILocation(line: 482, column: 18, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8535, file: !969, line: 482, column: 9)
!8572 = !DILocation(line: 482, column: 16, scope: !8571)
!8573 = !DILocation(line: 482, column: 34, scope: !8571)
!8574 = !DILocation(line: 482, column: 44, scope: !8571)
!8575 = !DILocation(line: 482, column: 49, scope: !8571)
!8576 = !DILocation(line: 482, column: 48, scope: !8571)
!8577 = !DILocation(line: 482, column: 31, scope: !8571)
!8578 = !DILocation(line: 482, column: 14, scope: !8571)
!8579 = !DILocation(line: 482, column: 54, scope: !8580)
!8580 = !DILexicalBlockFile(scope: !8581, file: !969, discriminator: 1)
!8581 = distinct !DILexicalBlock(scope: !8571, file: !969, line: 482, column: 9)
!8582 = !DILocation(line: 482, column: 56, scope: !8580)
!8583 = !DILocation(line: 482, column: 9, scope: !8580)
!8584 = !DILocation(line: 483, column: 59, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8581, file: !969, line: 482, column: 66)
!8586 = !DILocation(line: 483, column: 61, scope: !8585)
!8587 = !DILocation(line: 483, column: 60, scope: !8585)
!8588 = !DILocation(line: 483, column: 55, scope: !8585)
!8589 = !DILocation(line: 483, column: 48, scope: !8585)
!8590 = !DILocation(line: 483, column: 49, scope: !8585)
!8591 = !DILocation(line: 483, column: 44, scope: !8585)
!8592 = !DILocation(line: 483, column: 53, scope: !8585)
!8593 = !DILocation(line: 483, column: 37, scope: !8585)
!8594 = !DILocation(line: 483, column: 38, scope: !8585)
!8595 = !DILocation(line: 483, column: 33, scope: !8585)
!8596 = !DILocation(line: 483, column: 42, scope: !8585)
!8597 = !DILocation(line: 483, column: 26, scope: !8585)
!8598 = !DILocation(line: 483, column: 27, scope: !8585)
!8599 = !DILocation(line: 483, column: 22, scope: !8585)
!8600 = !DILocation(line: 483, column: 31, scope: !8585)
!8601 = !DILocation(line: 483, column: 17, scope: !8585)
!8602 = !DILocation(line: 483, column: 13, scope: !8585)
!8603 = !DILocation(line: 483, column: 20, scope: !8585)
!8604 = !DILocation(line: 484, column: 15, scope: !8585)
!8605 = !DILocation(line: 485, column: 9, scope: !8585)
!8606 = !DILocation(line: 482, column: 62, scope: !8607)
!8607 = !DILexicalBlockFile(scope: !8581, file: !969, discriminator: 2)
!8608 = !DILocation(line: 482, column: 9, scope: !8607)
!8609 = distinct !{!8609, !8610}
!8610 = !DILocation(line: 482, column: 9, scope: !8535)
!8611 = !DILocation(line: 486, column: 9, scope: !8535)
!8612 = !DILocation(line: 488, column: 1, scope: !8309)
!8613 = distinct !DISubprogram(name: "bit_alloc", scope: !969, file: !969, line: 1064, type: !8614, isLocal: true, isDefinition: true, scopeLine: 1065, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{!966, !980, !966}
!8616 = !DILocalVariable(name: "s", arg: 1, scope: !8613, file: !969, line: 1064, type: !980)
!8617 = !DILocation(line: 1064, column: 40, scope: !8613)
!8618 = !DILocalVariable(name: "snr_offset", arg: 2, scope: !8613, file: !969, line: 1064, type: !966)
!8619 = !DILocation(line: 1064, column: 47, scope: !8613)
!8620 = !DILocalVariable(name: "blk", scope: !8613, file: !969, line: 1066, type: !966)
!8621 = !DILocation(line: 1066, column: 9, scope: !8613)
!8622 = !DILocalVariable(name: "ch", scope: !8613, file: !969, line: 1066, type: !966)
!8623 = !DILocation(line: 1066, column: 14, scope: !8613)
!8624 = !DILocation(line: 1068, column: 19, scope: !8613)
!8625 = !DILocation(line: 1068, column: 30, scope: !8613)
!8626 = !DILocation(line: 1068, column: 37, scope: !8613)
!8627 = !DILocation(line: 1068, column: 16, scope: !8613)
!8628 = !DILocation(line: 1070, column: 21, scope: !8613)
!8629 = !DILocation(line: 1070, column: 5, scope: !8613)
!8630 = !DILocation(line: 1071, column: 14, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8613, file: !969, line: 1071, column: 5)
!8632 = !DILocation(line: 1071, column: 10, scope: !8631)
!8633 = !DILocation(line: 1071, column: 19, scope: !8634)
!8634 = !DILexicalBlockFile(scope: !8635, file: !969, discriminator: 1)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !969, line: 1071, column: 5)
!8636 = !DILocation(line: 1071, column: 25, scope: !8634)
!8637 = !DILocation(line: 1071, column: 28, scope: !8634)
!8638 = !DILocation(line: 1071, column: 23, scope: !8634)
!8639 = !DILocation(line: 1071, column: 5, scope: !8634)
!8640 = !DILocalVariable(name: "block", scope: !8641, file: !969, line: 1072, type: !2271)
!8641 = distinct !DILexicalBlock(scope: !8635, file: !969, line: 1071, column: 47)
!8642 = !DILocation(line: 1072, column: 19, scope: !8641)
!8643 = !DILocation(line: 1072, column: 38, scope: !8641)
!8644 = !DILocation(line: 1072, column: 28, scope: !8641)
!8645 = !DILocation(line: 1072, column: 31, scope: !8641)
!8646 = !DILocation(line: 1074, column: 20, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8641, file: !969, line: 1074, column: 9)
!8648 = !DILocation(line: 1074, column: 27, scope: !8647)
!8649 = !DILocation(line: 1074, column: 19, scope: !8647)
!8650 = !DILocation(line: 1074, column: 17, scope: !8647)
!8651 = !DILocation(line: 1074, column: 14, scope: !8647)
!8652 = !DILocation(line: 1074, column: 39, scope: !8653)
!8653 = !DILexicalBlockFile(scope: !8654, file: !969, discriminator: 1)
!8654 = distinct !DILexicalBlock(scope: !8647, file: !969, line: 1074, column: 9)
!8655 = !DILocation(line: 1074, column: 45, scope: !8653)
!8656 = !DILocation(line: 1074, column: 48, scope: !8653)
!8657 = !DILocation(line: 1074, column: 42, scope: !8653)
!8658 = !DILocation(line: 1074, column: 9, scope: !8653)
!8659 = !DILocation(line: 1079, column: 37, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !969, line: 1079, column: 17)
!8661 = distinct !DILexicalBlock(scope: !8654, file: !969, line: 1074, column: 64)
!8662 = !DILocation(line: 1079, column: 17, scope: !8660)
!8663 = !DILocation(line: 1079, column: 33, scope: !8660)
!8664 = !DILocation(line: 1079, column: 20, scope: !8660)
!8665 = !DILocation(line: 1079, column: 42, scope: !8660)
!8666 = !DILocation(line: 1079, column: 17, scope: !8661)
!8667 = !DILocation(line: 1080, column: 17, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8660, file: !969, line: 1079, column: 48)
!8669 = !DILocation(line: 1080, column: 20, scope: !8668)
!8670 = !DILocation(line: 1080, column: 27, scope: !8668)
!8671 = !DILocation(line: 1080, column: 58, scope: !8668)
!8672 = !DILocation(line: 1080, column: 46, scope: !8668)
!8673 = !DILocation(line: 1080, column: 53, scope: !8668)
!8674 = !DILocation(line: 1080, column: 74, scope: !8668)
!8675 = !DILocation(line: 1080, column: 63, scope: !8668)
!8676 = !DILocation(line: 1080, column: 70, scope: !8668)
!8677 = !DILocation(line: 1081, column: 60, scope: !8668)
!8678 = !DILocation(line: 1081, column: 46, scope: !8668)
!8679 = !DILocation(line: 1081, column: 49, scope: !8668)
!8680 = !DILocation(line: 1081, column: 81, scope: !8668)
!8681 = !DILocation(line: 1081, column: 65, scope: !8668)
!8682 = !DILocation(line: 1081, column: 72, scope: !8668)
!8683 = !DILocation(line: 1082, column: 46, scope: !8668)
!8684 = !DILocation(line: 1082, column: 58, scope: !8668)
!8685 = !DILocation(line: 1082, column: 61, scope: !8668)
!8686 = !DILocation(line: 1082, column: 71, scope: !8668)
!8687 = !DILocation(line: 1083, column: 77, scope: !8668)
!8688 = !DILocation(line: 1083, column: 62, scope: !8668)
!8689 = !DILocation(line: 1083, column: 73, scope: !8668)
!8690 = !DILocation(line: 1083, column: 65, scope: !8668)
!8691 = !DILocation(line: 1084, column: 13, scope: !8668)
!8692 = !DILocation(line: 1085, column: 9, scope: !8661)
!8693 = !DILocation(line: 1074, column: 60, scope: !8694)
!8694 = !DILexicalBlockFile(scope: !8654, file: !969, discriminator: 2)
!8695 = !DILocation(line: 1074, column: 9, scope: !8694)
!8696 = distinct !{!8696, !8697}
!8697 = !DILocation(line: 1074, column: 9, scope: !8641)
!8698 = !DILocation(line: 1086, column: 5, scope: !8641)
!8699 = !DILocation(line: 1071, column: 43, scope: !8700)
!8700 = !DILexicalBlockFile(scope: !8635, file: !969, discriminator: 2)
!8701 = !DILocation(line: 1071, column: 5, scope: !8700)
!8702 = distinct !{!8702, !8703}
!8703 = !DILocation(line: 1071, column: 5, scope: !8613)
!8704 = !DILocation(line: 1087, column: 32, scope: !8613)
!8705 = !DILocation(line: 1087, column: 12, scope: !8613)
!8706 = !DILocation(line: 1087, column: 5, scope: !8613)
!8707 = distinct !DISubprogram(name: "reset_block_bap", scope: !969, file: !969, line: 971, type: !2176, isLocal: true, isDefinition: true, scopeLine: 972, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8708 = !DILocalVariable(name: "s", arg: 1, scope: !8707, file: !969, line: 971, type: !980)
!8709 = !DILocation(line: 971, column: 47, scope: !8707)
!8710 = !DILocalVariable(name: "blk", scope: !8707, file: !969, line: 973, type: !966)
!8711 = !DILocation(line: 973, column: 9, scope: !8707)
!8712 = !DILocalVariable(name: "ch", scope: !8707, file: !969, line: 973, type: !966)
!8713 = !DILocation(line: 973, column: 14, scope: !8707)
!8714 = !DILocalVariable(name: "ref_bap", scope: !8707, file: !969, line: 974, type: !1179)
!8715 = !DILocation(line: 974, column: 14, scope: !8707)
!8716 = !DILocation(line: 976, column: 9, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8707, file: !969, line: 976, column: 9)
!8718 = !DILocation(line: 976, column: 12, scope: !8717)
!8719 = !DILocation(line: 976, column: 29, scope: !8717)
!8720 = !DILocation(line: 976, column: 32, scope: !8717)
!8721 = !DILocation(line: 976, column: 26, scope: !8717)
!8722 = !DILocation(line: 976, column: 43, scope: !8717)
!8723 = !DILocation(line: 976, column: 46, scope: !8724)
!8724 = !DILexicalBlockFile(scope: !8717, file: !969, discriminator: 1)
!8725 = !DILocation(line: 976, column: 49, scope: !8724)
!8726 = !DILocation(line: 976, column: 9, scope: !8724)
!8727 = !DILocation(line: 977, column: 9, scope: !8717)
!8728 = !DILocation(line: 979, column: 15, scope: !8707)
!8729 = !DILocation(line: 979, column: 18, scope: !8707)
!8730 = !DILocation(line: 979, column: 13, scope: !8707)
!8731 = !DILocation(line: 980, column: 13, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8707, file: !969, line: 980, column: 5)
!8733 = !DILocation(line: 980, column: 10, scope: !8732)
!8734 = !DILocation(line: 980, column: 18, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !8736, file: !969, discriminator: 1)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !969, line: 980, column: 5)
!8737 = !DILocation(line: 980, column: 24, scope: !8735)
!8738 = !DILocation(line: 980, column: 27, scope: !8735)
!8739 = !DILocation(line: 980, column: 21, scope: !8735)
!8740 = !DILocation(line: 980, column: 5, scope: !8735)
!8741 = !DILocation(line: 981, column: 18, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !969, line: 981, column: 9)
!8743 = distinct !DILexicalBlock(scope: !8736, file: !969, line: 980, column: 43)
!8744 = !DILocation(line: 981, column: 14, scope: !8742)
!8745 = !DILocation(line: 981, column: 23, scope: !8746)
!8746 = !DILexicalBlockFile(scope: !8747, file: !969, discriminator: 1)
!8747 = distinct !DILexicalBlock(scope: !8742, file: !969, line: 981, column: 9)
!8748 = !DILocation(line: 981, column: 29, scope: !8746)
!8749 = !DILocation(line: 981, column: 32, scope: !8746)
!8750 = !DILocation(line: 981, column: 27, scope: !8746)
!8751 = !DILocation(line: 981, column: 9, scope: !8746)
!8752 = !DILocation(line: 982, column: 35, scope: !8747)
!8753 = !DILocation(line: 982, column: 72, scope: !8747)
!8754 = !DILocation(line: 982, column: 51, scope: !8747)
!8755 = !DILocation(line: 982, column: 68, scope: !8747)
!8756 = !DILocation(line: 982, column: 54, scope: !8747)
!8757 = !DILocation(line: 982, column: 49, scope: !8747)
!8758 = !DILocation(line: 982, column: 43, scope: !8747)
!8759 = !DILocation(line: 982, column: 28, scope: !8747)
!8760 = !DILocation(line: 982, column: 13, scope: !8747)
!8761 = !DILocation(line: 982, column: 24, scope: !8747)
!8762 = !DILocation(line: 982, column: 16, scope: !8747)
!8763 = !DILocation(line: 982, column: 33, scope: !8747)
!8764 = !DILocation(line: 981, column: 47, scope: !8765)
!8765 = !DILexicalBlockFile(scope: !8747, file: !969, discriminator: 2)
!8766 = !DILocation(line: 981, column: 9, scope: !8765)
!8767 = distinct !{!8767, !8768}
!8768 = !DILocation(line: 981, column: 9, scope: !8743)
!8769 = !DILocation(line: 983, column: 26, scope: !8743)
!8770 = !DILocation(line: 983, column: 29, scope: !8743)
!8771 = !DILocation(line: 983, column: 24, scope: !8743)
!8772 = !DILocation(line: 983, column: 17, scope: !8743)
!8773 = !DILocation(line: 984, column: 5, scope: !8743)
!8774 = !DILocation(line: 980, column: 39, scope: !8775)
!8775 = !DILexicalBlockFile(scope: !8736, file: !969, discriminator: 2)
!8776 = !DILocation(line: 980, column: 5, scope: !8775)
!8777 = distinct !{!8777, !8778}
!8778 = !DILocation(line: 980, column: 5, scope: !8707)
!8779 = !DILocation(line: 985, column: 5, scope: !8707)
!8780 = !DILocation(line: 985, column: 8, scope: !8707)
!8781 = !DILocation(line: 985, column: 20, scope: !8707)
!8782 = !DILocation(line: 986, column: 1, scope: !8707)
!8783 = !DILocation(line: 986, column: 1, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8707, file: !969, discriminator: 1)
!8785 = distinct !DISubprogram(name: "count_mantissa_bits", scope: !969, file: !969, line: 1038, type: !978, isLocal: true, isDefinition: true, scopeLine: 1039, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8786 = !DILocalVariable(name: "s", arg: 1, scope: !8785, file: !969, line: 1038, type: !980)
!8787 = !DILocation(line: 1038, column: 50, scope: !8785)
!8788 = !DILocalVariable(name: "ch", scope: !8785, file: !969, line: 1040, type: !966)
!8789 = !DILocation(line: 1040, column: 9, scope: !8785)
!8790 = !DILocalVariable(name: "max_end_freq", scope: !8785, file: !969, line: 1040, type: !966)
!8791 = !DILocation(line: 1040, column: 13, scope: !8785)
!8792 = !DILocalVariable(name: "la_mant_cnt", scope: !8785, file: !969, line: 1041, type: !8793)
!8793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 1536, align: 16, elements: !8794)
!8794 = !{!1869, !1934}
!8795 = !DILocation(line: 1041, column: 45, scope: !8785)
!8796 = !DILocalVariable(name: "mant_cnt", scope: !8785, file: !969, line: 1041, type: !1931)
!8797 = !DILocation(line: 1041, column: 78, scope: !8785)
!8798 = !DILocation(line: 1041, column: 95, scope: !8785)
!8799 = !DILocation(line: 1043, column: 30, scope: !8785)
!8800 = !DILocation(line: 1043, column: 5, scope: !8785)
!8801 = !DILocation(line: 1045, column: 20, scope: !8785)
!8802 = !DILocation(line: 1045, column: 23, scope: !8785)
!8803 = !DILocation(line: 1045, column: 38, scope: !8785)
!8804 = !DILocation(line: 1045, column: 42, scope: !8785)
!8805 = !DILocation(line: 1045, column: 18, scope: !8785)
!8806 = !DILocation(line: 1046, column: 16, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8785, file: !969, line: 1046, column: 5)
!8808 = !DILocation(line: 1046, column: 19, scope: !8807)
!8809 = !DILocation(line: 1046, column: 15, scope: !8807)
!8810 = !DILocation(line: 1046, column: 13, scope: !8807)
!8811 = !DILocation(line: 1046, column: 10, scope: !8807)
!8812 = !DILocation(line: 1046, column: 32, scope: !8813)
!8813 = !DILexicalBlockFile(scope: !8814, file: !969, discriminator: 1)
!8814 = distinct !DILexicalBlock(scope: !8807, file: !969, line: 1046, column: 5)
!8815 = !DILocation(line: 1046, column: 38, scope: !8813)
!8816 = !DILocation(line: 1046, column: 41, scope: !8813)
!8817 = !DILocation(line: 1046, column: 35, scope: !8813)
!8818 = !DILocation(line: 1046, column: 5, scope: !8813)
!8819 = !DILocation(line: 1047, column: 39, scope: !8814)
!8820 = !DILocation(line: 1047, column: 42, scope: !8814)
!8821 = !DILocation(line: 1047, column: 46, scope: !8814)
!8822 = !DILocation(line: 1047, column: 70, scope: !8814)
!8823 = !DILocation(line: 1047, column: 56, scope: !8814)
!8824 = !DILocation(line: 1047, column: 59, scope: !8814)
!8825 = !DILocation(line: 1048, column: 39, scope: !8814)
!8826 = !DILocation(line: 1047, column: 9, scope: !8814)
!8827 = !DILocation(line: 1046, column: 53, scope: !8828)
!8828 = !DILexicalBlockFile(scope: !8814, file: !969, discriminator: 2)
!8829 = !DILocation(line: 1046, column: 5, scope: !8828)
!8830 = distinct !{!8830, !8831}
!8831 = !DILocation(line: 1046, column: 5, scope: !8785)
!8832 = !DILocation(line: 1050, column: 12, scope: !8785)
!8833 = !DILocation(line: 1050, column: 15, scope: !8785)
!8834 = !DILocation(line: 1050, column: 22, scope: !8785)
!8835 = !DILocation(line: 1050, column: 44, scope: !8785)
!8836 = !DILocation(line: 1050, column: 5, scope: !8785)
!8837 = distinct !DISubprogram(name: "count_mantissa_bits_init", scope: !969, file: !969, line: 996, type: !8838, isLocal: true, isDefinition: true, scopeLine: 997, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{null, !1931}
!8840 = !DILocalVariable(name: "mant_cnt", arg: 1, scope: !8837, file: !969, line: 996, type: !1931)
!8841 = !DILocation(line: 996, column: 47, scope: !8837)
!8842 = !DILocalVariable(name: "blk", scope: !8837, file: !969, line: 998, type: !966)
!8843 = !DILocation(line: 998, column: 9, scope: !8837)
!8844 = !DILocation(line: 1000, column: 14, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8837, file: !969, line: 1000, column: 5)
!8846 = !DILocation(line: 1000, column: 10, scope: !8845)
!8847 = !DILocation(line: 1000, column: 19, scope: !8848)
!8848 = !DILexicalBlockFile(scope: !8849, file: !969, discriminator: 1)
!8849 = distinct !DILexicalBlock(scope: !8845, file: !969, line: 1000, column: 5)
!8850 = !DILocation(line: 1000, column: 23, scope: !8848)
!8851 = !DILocation(line: 1000, column: 5, scope: !8848)
!8852 = !DILocation(line: 1001, column: 25, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !969, line: 1000, column: 35)
!8854 = !DILocation(line: 1001, column: 16, scope: !8853)
!8855 = !DILocation(line: 1001, column: 9, scope: !8853)
!8856 = !DILocation(line: 1002, column: 37, scope: !8853)
!8857 = !DILocation(line: 1002, column: 28, scope: !8853)
!8858 = !DILocation(line: 1002, column: 45, scope: !8853)
!8859 = !DILocation(line: 1002, column: 18, scope: !8853)
!8860 = !DILocation(line: 1002, column: 9, scope: !8853)
!8861 = !DILocation(line: 1002, column: 26, scope: !8853)
!8862 = !DILocation(line: 1003, column: 18, scope: !8853)
!8863 = !DILocation(line: 1003, column: 9, scope: !8853)
!8864 = !DILocation(line: 1003, column: 26, scope: !8853)
!8865 = !DILocation(line: 1004, column: 5, scope: !8853)
!8866 = !DILocation(line: 1000, column: 31, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8849, file: !969, discriminator: 2)
!8868 = !DILocation(line: 1000, column: 5, scope: !8867)
!8869 = distinct !{!8869, !8870}
!8870 = !DILocation(line: 1000, column: 5, scope: !8837)
!8871 = !DILocation(line: 1005, column: 1, scope: !8837)
!8872 = distinct !DISubprogram(name: "count_mantissa_bits_update_ch", scope: !969, file: !969, line: 1018, type: !8873, isLocal: true, isDefinition: true, scopeLine: 1021, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8873 = !DISubroutineType(types: !8874)
!8874 = !{null, !980, !966, !1931, !966, !966}
!8875 = !DILocalVariable(name: "s", arg: 1, scope: !8872, file: !969, line: 1018, type: !980)
!8876 = !DILocation(line: 1018, column: 61, scope: !8872)
!8877 = !DILocalVariable(name: "ch", arg: 2, scope: !8872, file: !969, line: 1018, type: !966)
!8878 = !DILocation(line: 1018, column: 68, scope: !8872)
!8879 = !DILocalVariable(name: "mant_cnt", arg: 3, scope: !8872, file: !969, line: 1019, type: !1931)
!8880 = !DILocation(line: 1019, column: 52, scope: !8872)
!8881 = !DILocalVariable(name: "start", arg: 4, scope: !8872, file: !969, line: 1020, type: !966)
!8882 = !DILocation(line: 1020, column: 47, scope: !8872)
!8883 = !DILocalVariable(name: "end", arg: 5, scope: !8872, file: !969, line: 1020, type: !966)
!8884 = !DILocation(line: 1020, column: 58, scope: !8872)
!8885 = !DILocalVariable(name: "blk", scope: !8872, file: !969, line: 1022, type: !966)
!8886 = !DILocation(line: 1022, column: 9, scope: !8872)
!8887 = !DILocation(line: 1024, column: 14, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8872, file: !969, line: 1024, column: 5)
!8889 = !DILocation(line: 1024, column: 10, scope: !8888)
!8890 = !DILocation(line: 1024, column: 19, scope: !8891)
!8891 = !DILexicalBlockFile(scope: !8892, file: !969, discriminator: 1)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !969, line: 1024, column: 5)
!8893 = !DILocation(line: 1024, column: 25, scope: !8891)
!8894 = !DILocation(line: 1024, column: 28, scope: !8891)
!8895 = !DILocation(line: 1024, column: 23, scope: !8891)
!8896 = !DILocation(line: 1024, column: 5, scope: !8891)
!8897 = !DILocalVariable(name: "block", scope: !8898, file: !969, line: 1025, type: !2271)
!8898 = distinct !DILexicalBlock(scope: !8892, file: !969, line: 1024, column: 47)
!8899 = !DILocation(line: 1025, column: 19, scope: !8898)
!8900 = !DILocation(line: 1025, column: 38, scope: !8898)
!8901 = !DILocation(line: 1025, column: 28, scope: !8898)
!8902 = !DILocation(line: 1025, column: 31, scope: !8898)
!8903 = !DILocation(line: 1026, column: 13, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8898, file: !969, line: 1026, column: 13)
!8905 = !DILocation(line: 1026, column: 16, scope: !8904)
!8906 = !DILocation(line: 1026, column: 21, scope: !8904)
!8907 = !DILocation(line: 1026, column: 25, scope: !8908)
!8908 = !DILexicalBlockFile(scope: !8904, file: !969, discriminator: 1)
!8909 = !DILocation(line: 1026, column: 32, scope: !8908)
!8910 = !DILocation(line: 1026, column: 13, scope: !8908)
!8911 = !DILocation(line: 1027, column: 13, scope: !8904)
!8912 = !DILocation(line: 1028, column: 9, scope: !8898)
!8913 = !DILocation(line: 1028, column: 12, scope: !8898)
!8914 = !DILocation(line: 1028, column: 19, scope: !8898)
!8915 = !DILocation(line: 1028, column: 46, scope: !8898)
!8916 = !DILocation(line: 1028, column: 37, scope: !8898)
!8917 = !DILocation(line: 1029, column: 52, scope: !8898)
!8918 = !DILocation(line: 1029, column: 37, scope: !8898)
!8919 = !DILocation(line: 1029, column: 48, scope: !8898)
!8920 = !DILocation(line: 1029, column: 40, scope: !8898)
!8921 = !DILocation(line: 1029, column: 59, scope: !8898)
!8922 = !DILocation(line: 1029, column: 57, scope: !8898)
!8923 = !DILocation(line: 1030, column: 39, scope: !8898)
!8924 = !DILocation(line: 1030, column: 63, scope: !8898)
!8925 = !DILocation(line: 1030, column: 47, scope: !8898)
!8926 = !DILocation(line: 1030, column: 54, scope: !8898)
!8927 = !DILocation(line: 1030, column: 44, scope: !8898)
!8928 = !DILocation(line: 1030, column: 38, scope: !8898)
!8929 = !DILocation(line: 1030, column: 87, scope: !8930)
!8930 = !DILexicalBlockFile(scope: !8898, file: !969, discriminator: 1)
!8931 = !DILocation(line: 1030, column: 71, scope: !8930)
!8932 = !DILocation(line: 1030, column: 78, scope: !8930)
!8933 = !DILocation(line: 1030, column: 38, scope: !8930)
!8934 = !DILocation(line: 1030, column: 95, scope: !8935)
!8935 = !DILexicalBlockFile(scope: !8898, file: !969, discriminator: 2)
!8936 = !DILocation(line: 1030, column: 38, scope: !8935)
!8937 = !DILocation(line: 1030, column: 38, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8898, file: !969, discriminator: 3)
!8939 = !DILocation(line: 1030, column: 103, scope: !8938)
!8940 = !DILocation(line: 1030, column: 101, scope: !8938)
!8941 = !DILocation(line: 1028, column: 9, scope: !8930)
!8942 = !DILocation(line: 1031, column: 5, scope: !8898)
!8943 = !DILocation(line: 1024, column: 43, scope: !8944)
!8944 = !DILexicalBlockFile(scope: !8892, file: !969, discriminator: 2)
!8945 = !DILocation(line: 1024, column: 5, scope: !8944)
!8946 = distinct !{!8946, !8947}
!8947 = !DILocation(line: 1024, column: 5, scope: !8872)
!8948 = !DILocation(line: 1032, column: 1, scope: !8872)
!8949 = distinct !DISubprogram(name: "sym_quant", scope: !969, file: !969, line: 1166, type: !7163, isLocal: true, isDefinition: true, scopeLine: 1167, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8950 = !DILocalVariable(name: "c", arg: 1, scope: !8949, file: !969, line: 1166, type: !966)
!8951 = !DILocation(line: 1166, column: 33, scope: !8949)
!8952 = !DILocalVariable(name: "e", arg: 2, scope: !8949, file: !969, line: 1166, type: !966)
!8953 = !DILocation(line: 1166, column: 40, scope: !8949)
!8954 = !DILocalVariable(name: "levels", arg: 3, scope: !8949, file: !969, line: 1166, type: !966)
!8955 = !DILocation(line: 1166, column: 47, scope: !8949)
!8956 = !DILocalVariable(name: "v", scope: !8949, file: !969, line: 1168, type: !966)
!8957 = !DILocation(line: 1168, column: 9, scope: !8949)
!8958 = !DILocation(line: 1168, column: 16, scope: !8949)
!8959 = !DILocation(line: 1168, column: 25, scope: !8949)
!8960 = !DILocation(line: 1168, column: 23, scope: !8949)
!8961 = !DILocation(line: 1168, column: 37, scope: !8949)
!8962 = !DILocation(line: 1168, column: 35, scope: !8949)
!8963 = !DILocation(line: 1168, column: 28, scope: !8949)
!8964 = !DILocation(line: 1168, column: 43, scope: !8949)
!8965 = !DILocation(line: 1168, column: 41, scope: !8949)
!8966 = !DILocation(line: 1168, column: 51, scope: !8949)
!8967 = !DILocation(line: 1170, column: 12, scope: !8949)
!8968 = !DILocation(line: 1170, column: 5, scope: !8949)
!8969 = distinct !DISubprogram(name: "asym_quant", scope: !969, file: !969, line: 1182, type: !7163, isLocal: true, isDefinition: true, scopeLine: 1183, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!8970 = !DILocalVariable(name: "c", arg: 1, scope: !8969, file: !969, line: 1182, type: !966)
!8971 = !DILocation(line: 1182, column: 34, scope: !8969)
!8972 = !DILocalVariable(name: "e", arg: 2, scope: !8969, file: !969, line: 1182, type: !966)
!8973 = !DILocation(line: 1182, column: 41, scope: !8969)
!8974 = !DILocalVariable(name: "qbits", arg: 3, scope: !8969, file: !969, line: 1182, type: !966)
!8975 = !DILocation(line: 1182, column: 48, scope: !8969)
!8976 = !DILocalVariable(name: "m", scope: !8969, file: !969, line: 1184, type: !966)
!8977 = !DILocation(line: 1184, column: 9, scope: !8969)
!8978 = !DILocation(line: 1186, column: 12, scope: !8969)
!8979 = !DILocation(line: 1186, column: 20, scope: !8969)
!8980 = !DILocation(line: 1186, column: 18, scope: !8969)
!8981 = !DILocation(line: 1186, column: 14, scope: !8969)
!8982 = !DILocation(line: 1186, column: 33, scope: !8969)
!8983 = !DILocation(line: 1186, column: 31, scope: !8969)
!8984 = !DILocation(line: 1186, column: 24, scope: !8969)
!8985 = !DILocation(line: 1186, column: 41, scope: !8969)
!8986 = !DILocation(line: 1186, column: 46, scope: !8969)
!8987 = !DILocation(line: 1186, column: 7, scope: !8969)
!8988 = !DILocation(line: 1187, column: 16, scope: !8969)
!8989 = !DILocation(line: 1187, column: 21, scope: !8969)
!8990 = !DILocation(line: 1187, column: 12, scope: !8969)
!8991 = !DILocation(line: 1187, column: 7, scope: !8969)
!8992 = !DILocation(line: 1188, column: 9, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8969, file: !969, line: 1188, column: 9)
!8994 = !DILocation(line: 1188, column: 14, scope: !8993)
!8995 = !DILocation(line: 1188, column: 11, scope: !8993)
!8996 = !DILocation(line: 1188, column: 9, scope: !8969)
!8997 = !DILocation(line: 1189, column: 13, scope: !8993)
!8998 = !DILocation(line: 1189, column: 15, scope: !8993)
!8999 = !DILocation(line: 1189, column: 11, scope: !8993)
!9000 = !DILocation(line: 1189, column: 9, scope: !8993)
!9001 = !DILocation(line: 1191, column: 12, scope: !8969)
!9002 = !DILocation(line: 1191, column: 5, scope: !8969)
!9003 = distinct !DISubprogram(name: "put_bits", scope: !1774, file: !1774, line: 164, type: !9004, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{null, !4511, !966, !956}
!9006 = !DILocalVariable(name: "x", arg: 1, scope: !9007, file: !5368, line: 66, type: !954)
!9007 = distinct !DISubprogram(name: "av_bswap32", scope: !5368, file: !5368, line: 66, type: !9008, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!954, !954}
!9010 = !DILocation(line: 66, column: 98, scope: !9007, inlinedAt: !9011)
!9011 = distinct !DILocation(line: 197, column: 60, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !1774, line: 196, column: 42)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !1774, line: 196, column: 13)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !1774, line: 193, column: 12)
!9015 = distinct !DILexicalBlock(scope: !9003, file: !1774, line: 190, column: 9)
!9016 = !DILocalVariable(name: "s", arg: 1, scope: !9003, file: !1774, line: 164, type: !4511)
!9017 = !DILocation(line: 164, column: 44, scope: !9003)
!9018 = !DILocalVariable(name: "n", arg: 2, scope: !9003, file: !1774, line: 164, type: !966)
!9019 = !DILocation(line: 164, column: 51, scope: !9003)
!9020 = !DILocalVariable(name: "value", arg: 3, scope: !9003, file: !1774, line: 164, type: !956)
!9021 = !DILocation(line: 164, column: 67, scope: !9003)
!9022 = !DILocalVariable(name: "bit_buf", scope: !9003, file: !1774, line: 166, type: !956)
!9023 = !DILocation(line: 166, column: 18, scope: !9003)
!9024 = !DILocalVariable(name: "bit_left", scope: !9003, file: !1774, line: 167, type: !966)
!9025 = !DILocation(line: 167, column: 9, scope: !9003)
!9026 = !DILocation(line: 171, column: 15, scope: !9003)
!9027 = !DILocation(line: 171, column: 18, scope: !9003)
!9028 = !DILocation(line: 171, column: 13, scope: !9003)
!9029 = !DILocation(line: 172, column: 16, scope: !9003)
!9030 = !DILocation(line: 172, column: 19, scope: !9003)
!9031 = !DILocation(line: 172, column: 14, scope: !9003)
!9032 = !DILocation(line: 190, column: 9, scope: !9015)
!9033 = !DILocation(line: 190, column: 13, scope: !9015)
!9034 = !DILocation(line: 190, column: 11, scope: !9015)
!9035 = !DILocation(line: 190, column: 9, scope: !9003)
!9036 = !DILocation(line: 191, column: 20, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9015, file: !1774, line: 190, column: 23)
!9038 = !DILocation(line: 191, column: 31, scope: !9037)
!9039 = !DILocation(line: 191, column: 28, scope: !9037)
!9040 = !DILocation(line: 191, column: 36, scope: !9037)
!9041 = !DILocation(line: 191, column: 34, scope: !9037)
!9042 = !DILocation(line: 191, column: 17, scope: !9037)
!9043 = !DILocation(line: 192, column: 21, scope: !9037)
!9044 = !DILocation(line: 192, column: 18, scope: !9037)
!9045 = !DILocation(line: 193, column: 5, scope: !9037)
!9046 = !DILocation(line: 194, column: 21, scope: !9014)
!9047 = !DILocation(line: 194, column: 17, scope: !9014)
!9048 = !DILocation(line: 195, column: 20, scope: !9014)
!9049 = !DILocation(line: 195, column: 30, scope: !9014)
!9050 = !DILocation(line: 195, column: 34, scope: !9014)
!9051 = !DILocation(line: 195, column: 32, scope: !9014)
!9052 = !DILocation(line: 195, column: 26, scope: !9014)
!9053 = !DILocation(line: 195, column: 17, scope: !9014)
!9054 = !DILocation(line: 196, column: 17, scope: !9013)
!9055 = !DILocation(line: 196, column: 20, scope: !9013)
!9056 = !DILocation(line: 196, column: 30, scope: !9013)
!9057 = !DILocation(line: 196, column: 33, scope: !9013)
!9058 = !DILocation(line: 196, column: 28, scope: !9013)
!9059 = !DILocation(line: 196, column: 15, scope: !9013)
!9060 = !DILocation(line: 196, column: 13, scope: !9014)
!9061 = !DILocation(line: 197, column: 71, scope: !9012)
!9062 = !DILocation(line: 197, column: 60, scope: !9012)
!9063 = !DILocation(line: 68, column: 16, scope: !9007, inlinedAt: !9011)
!9064 = !DILocation(line: 68, column: 19, scope: !9007, inlinedAt: !9011)
!9065 = !DILocation(line: 68, column: 24, scope: !9007, inlinedAt: !9011)
!9066 = !DILocation(line: 68, column: 38, scope: !9007, inlinedAt: !9011)
!9067 = !DILocation(line: 68, column: 41, scope: !9007, inlinedAt: !9011)
!9068 = !DILocation(line: 68, column: 46, scope: !9007, inlinedAt: !9011)
!9069 = !DILocation(line: 68, column: 34, scope: !9007, inlinedAt: !9011)
!9070 = !DILocation(line: 68, column: 57, scope: !9007, inlinedAt: !9011)
!9071 = !DILocation(line: 68, column: 69, scope: !9007, inlinedAt: !9011)
!9072 = !DILocation(line: 68, column: 72, scope: !9007, inlinedAt: !9011)
!9073 = !DILocation(line: 68, column: 79, scope: !9007, inlinedAt: !9011)
!9074 = !DILocation(line: 68, column: 84, scope: !9007, inlinedAt: !9011)
!9075 = !DILocation(line: 68, column: 99, scope: !9007, inlinedAt: !9011)
!9076 = !DILocation(line: 68, column: 102, scope: !9007, inlinedAt: !9011)
!9077 = !DILocation(line: 68, column: 109, scope: !9007, inlinedAt: !9011)
!9078 = !DILocation(line: 68, column: 114, scope: !9007, inlinedAt: !9011)
!9079 = !DILocation(line: 68, column: 94, scope: !9007, inlinedAt: !9011)
!9080 = !DILocation(line: 68, column: 63, scope: !9007, inlinedAt: !9011)
!9081 = !DILocation(line: 197, column: 40, scope: !9012)
!9082 = !DILocation(line: 197, column: 43, scope: !9012)
!9083 = !DILocation(line: 197, column: 54, scope: !9012)
!9084 = !DILocation(line: 197, column: 57, scope: !9012)
!9085 = !DILocation(line: 198, column: 13, scope: !9012)
!9086 = !DILocation(line: 198, column: 16, scope: !9012)
!9087 = !DILocation(line: 198, column: 24, scope: !9012)
!9088 = !DILocation(line: 199, column: 9, scope: !9012)
!9089 = !DILocation(line: 200, column: 13, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9013, file: !1774, line: 199, column: 16)
!9091 = !DILocation(line: 203, column: 26, scope: !9014)
!9092 = !DILocation(line: 203, column: 24, scope: !9014)
!9093 = !DILocation(line: 203, column: 18, scope: !9014)
!9094 = !DILocation(line: 204, column: 19, scope: !9014)
!9095 = !DILocation(line: 204, column: 17, scope: !9014)
!9096 = !DILocation(line: 208, column: 18, scope: !9003)
!9097 = !DILocation(line: 208, column: 5, scope: !9003)
!9098 = !DILocation(line: 208, column: 8, scope: !9003)
!9099 = !DILocation(line: 208, column: 16, scope: !9003)
!9100 = !DILocation(line: 209, column: 19, scope: !9003)
!9101 = !DILocation(line: 209, column: 5, scope: !9003)
!9102 = !DILocation(line: 209, column: 8, scope: !9003)
!9103 = !DILocation(line: 209, column: 17, scope: !9003)
!9104 = !DILocation(line: 210, column: 1, scope: !9003)
!9105 = distinct !DISubprogram(name: "put_sbits", scope: !1774, file: !1774, line: 240, type: !9106, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9106 = !DISubroutineType(types: !9107)
!9107 = !{null, !4511, !966, !965}
!9108 = !DILocalVariable(name: "a", arg: 1, scope: !9109, file: !7162, line: 241, type: !956)
!9109 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !7162, file: !7162, line: 241, type: !9110, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!956, !956, !956}
!9112 = !DILocation(line: 241, column: 103, scope: !9109, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 244, column: 21, scope: !9105)
!9114 = !DILocalVariable(name: "p", arg: 2, scope: !9109, file: !7162, line: 241, type: !956)
!9115 = !DILocation(line: 241, column: 115, scope: !9109, inlinedAt: !9113)
!9116 = !DILocalVariable(name: "pb", arg: 1, scope: !9105, file: !1774, line: 240, type: !4511)
!9117 = !DILocation(line: 240, column: 45, scope: !9105)
!9118 = !DILocalVariable(name: "n", arg: 2, scope: !9105, file: !1774, line: 240, type: !966)
!9119 = !DILocation(line: 240, column: 53, scope: !9105)
!9120 = !DILocalVariable(name: "value", arg: 3, scope: !9105, file: !1774, line: 240, type: !965)
!9121 = !DILocation(line: 240, column: 64, scope: !9105)
!9122 = !DILocation(line: 244, column: 14, scope: !9105)
!9123 = !DILocation(line: 244, column: 18, scope: !9105)
!9124 = !DILocation(line: 244, column: 37, scope: !9105)
!9125 = !DILocation(line: 244, column: 44, scope: !9105)
!9126 = !DILocation(line: 244, column: 21, scope: !9105)
!9127 = !DILocation(line: 243, column: 12, scope: !9109, inlinedAt: !9113)
!9128 = !DILocation(line: 243, column: 23, scope: !9109, inlinedAt: !9113)
!9129 = !DILocation(line: 243, column: 20, scope: !9109, inlinedAt: !9113)
!9130 = !DILocation(line: 243, column: 26, scope: !9109, inlinedAt: !9113)
!9131 = !DILocation(line: 243, column: 14, scope: !9109, inlinedAt: !9113)
!9132 = !DILocation(line: 244, column: 5, scope: !9133)
!9133 = !DILexicalBlockFile(scope: !9105, file: !1774, discriminator: 1)
!9134 = !DILocation(line: 245, column: 1, scope: !9105)
!9135 = distinct !DISubprogram(name: "flush_put_bits", scope: !1774, file: !1774, line: 101, type: !9136, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{null, !4511}
!9138 = !DILocalVariable(name: "s", arg: 1, scope: !9135, file: !1774, line: 101, type: !4511)
!9139 = !DILocation(line: 101, column: 50, scope: !9135)
!9140 = !DILocation(line: 104, column: 9, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9135, file: !1774, line: 104, column: 9)
!9142 = !DILocation(line: 104, column: 12, scope: !9141)
!9143 = !DILocation(line: 104, column: 21, scope: !9141)
!9144 = !DILocation(line: 104, column: 9, scope: !9135)
!9145 = !DILocation(line: 105, column: 24, scope: !9141)
!9146 = !DILocation(line: 105, column: 27, scope: !9141)
!9147 = !DILocation(line: 105, column: 9, scope: !9141)
!9148 = !DILocation(line: 105, column: 12, scope: !9141)
!9149 = !DILocation(line: 105, column: 20, scope: !9141)
!9150 = !DILocation(line: 107, column: 5, scope: !9135)
!9151 = !DILocation(line: 107, column: 12, scope: !9152)
!9152 = !DILexicalBlockFile(scope: !9135, file: !1774, discriminator: 1)
!9153 = !DILocation(line: 107, column: 15, scope: !9152)
!9154 = !DILocation(line: 107, column: 24, scope: !9152)
!9155 = !DILocation(line: 107, column: 5, scope: !9152)
!9156 = !DILocation(line: 108, column: 9, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9135, file: !1774, line: 107, column: 30)
!9158 = distinct !{!9158, !9156}
!9159 = !DILocation(line: 108, column: 20, scope: !9160)
!9160 = !DILexicalBlockFile(scope: !9161, file: !1774, discriminator: 1)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !1774, line: 108, column: 18)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !1774, line: 108, column: 12)
!9163 = !DILocation(line: 108, column: 23, scope: !9160)
!9164 = !DILocation(line: 108, column: 33, scope: !9160)
!9165 = !DILocation(line: 108, column: 36, scope: !9160)
!9166 = !DILocation(line: 108, column: 31, scope: !9160)
!9167 = !DILocation(line: 108, column: 18, scope: !9160)
!9168 = !DILocation(line: 108, column: 48, scope: !9169)
!9169 = !DILexicalBlockFile(scope: !9170, file: !1774, discriminator: 2)
!9170 = distinct !DILexicalBlock(scope: !9161, file: !1774, line: 108, column: 46)
!9171 = !DILocation(line: 108, column: 105, scope: !9172)
!9172 = !DILexicalBlockFile(scope: !9169, file: !1774, discriminator: 4)
!9173 = !DILocation(line: 108, column: 105, scope: !9169)
!9174 = !DILocation(line: 108, column: 116, scope: !9175)
!9175 = !DILexicalBlockFile(scope: !9162, file: !1774, discriminator: 3)
!9176 = !DILocation(line: 113, column: 25, scope: !9157)
!9177 = !DILocation(line: 113, column: 28, scope: !9157)
!9178 = !DILocation(line: 113, column: 36, scope: !9157)
!9179 = !DILocation(line: 113, column: 10, scope: !9157)
!9180 = !DILocation(line: 113, column: 13, scope: !9157)
!9181 = !DILocation(line: 113, column: 20, scope: !9157)
!9182 = !DILocation(line: 113, column: 23, scope: !9157)
!9183 = !DILocation(line: 114, column: 9, scope: !9157)
!9184 = !DILocation(line: 114, column: 12, scope: !9157)
!9185 = !DILocation(line: 114, column: 20, scope: !9157)
!9186 = !DILocation(line: 116, column: 9, scope: !9157)
!9187 = !DILocation(line: 116, column: 12, scope: !9157)
!9188 = !DILocation(line: 116, column: 21, scope: !9157)
!9189 = !DILocation(line: 107, column: 5, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9135, file: !1774, discriminator: 2)
!9191 = distinct !{!9191, !9150}
!9192 = !DILocation(line: 118, column: 5, scope: !9135)
!9193 = !DILocation(line: 118, column: 8, scope: !9135)
!9194 = !DILocation(line: 118, column: 17, scope: !9135)
!9195 = !DILocation(line: 119, column: 5, scope: !9135)
!9196 = !DILocation(line: 119, column: 8, scope: !9135)
!9197 = !DILocation(line: 119, column: 16, scope: !9135)
!9198 = !DILocation(line: 120, column: 1, scope: !9135)
!9199 = distinct !DISubprogram(name: "put_bits_ptr", scope: !1774, file: !1774, line: 324, type: !9200, isLocal: true, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{!1179, !4511}
!9202 = !DILocalVariable(name: "s", arg: 1, scope: !9199, file: !1774, line: 324, type: !4511)
!9203 = !DILocation(line: 324, column: 52, scope: !9199)
!9204 = !DILocation(line: 326, column: 12, scope: !9199)
!9205 = !DILocation(line: 326, column: 15, scope: !9199)
!9206 = !DILocation(line: 326, column: 5, scope: !9199)
!9207 = distinct !DISubprogram(name: "mul_poly", scope: !969, file: !969, line: 1578, type: !6909, isLocal: true, isDefinition: true, scopeLine: 1579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9208 = !DILocalVariable(name: "a", arg: 1, scope: !9207, file: !969, line: 1578, type: !956)
!9209 = !DILocation(line: 1578, column: 43, scope: !9207)
!9210 = !DILocalVariable(name: "b", arg: 2, scope: !9207, file: !969, line: 1578, type: !956)
!9211 = !DILocation(line: 1578, column: 59, scope: !9207)
!9212 = !DILocalVariable(name: "poly", arg: 3, scope: !9207, file: !969, line: 1578, type: !956)
!9213 = !DILocation(line: 1578, column: 75, scope: !9207)
!9214 = !DILocalVariable(name: "c", scope: !9207, file: !969, line: 1580, type: !956)
!9215 = !DILocation(line: 1580, column: 18, scope: !9207)
!9216 = !DILocation(line: 1582, column: 7, scope: !9207)
!9217 = !DILocation(line: 1583, column: 5, scope: !9207)
!9218 = !DILocation(line: 1583, column: 12, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !9207, file: !969, discriminator: 1)
!9220 = !DILocation(line: 1583, column: 5, scope: !9219)
!9221 = !DILocation(line: 1584, column: 13, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !969, line: 1584, column: 13)
!9223 = distinct !DILexicalBlock(scope: !9207, file: !969, line: 1583, column: 15)
!9224 = !DILocation(line: 1584, column: 15, scope: !9222)
!9225 = !DILocation(line: 1584, column: 13, scope: !9223)
!9226 = !DILocation(line: 1585, column: 18, scope: !9222)
!9227 = !DILocation(line: 1585, column: 15, scope: !9222)
!9228 = !DILocation(line: 1585, column: 13, scope: !9222)
!9229 = !DILocation(line: 1586, column: 13, scope: !9223)
!9230 = !DILocation(line: 1586, column: 15, scope: !9223)
!9231 = !DILocation(line: 1586, column: 11, scope: !9223)
!9232 = !DILocation(line: 1587, column: 13, scope: !9223)
!9233 = !DILocation(line: 1587, column: 15, scope: !9223)
!9234 = !DILocation(line: 1587, column: 11, scope: !9223)
!9235 = !DILocation(line: 1588, column: 13, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9223, file: !969, line: 1588, column: 13)
!9237 = !DILocation(line: 1588, column: 15, scope: !9236)
!9238 = !DILocation(line: 1588, column: 13, scope: !9223)
!9239 = !DILocation(line: 1589, column: 18, scope: !9236)
!9240 = !DILocation(line: 1589, column: 15, scope: !9236)
!9241 = !DILocation(line: 1589, column: 13, scope: !9236)
!9242 = !DILocation(line: 1583, column: 5, scope: !9243)
!9243 = !DILexicalBlockFile(scope: !9207, file: !969, discriminator: 2)
!9244 = distinct !{!9244, !9217}
!9245 = !DILocation(line: 1591, column: 12, scope: !9207)
!9246 = !DILocation(line: 1591, column: 5, scope: !9207)
!9247 = distinct !DISubprogram(name: "validate_float_option", scope: !969, file: !969, line: 1793, type: !9248, isLocal: true, isDefinition: true, scopeLine: 1794, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!966, !1075, !1807, !966}
!9250 = !DILocalVariable(name: "v", arg: 1, scope: !9247, file: !969, line: 1793, type: !1075)
!9251 = !DILocation(line: 1793, column: 40, scope: !9247)
!9252 = !DILocalVariable(name: "v_list", arg: 2, scope: !9247, file: !969, line: 1793, type: !1807)
!9253 = !DILocation(line: 1793, column: 56, scope: !9247)
!9254 = !DILocalVariable(name: "v_list_size", arg: 3, scope: !9247, file: !969, line: 1793, type: !966)
!9255 = !DILocation(line: 1793, column: 68, scope: !9247)
!9256 = !DILocalVariable(name: "i", scope: !9247, file: !969, line: 1795, type: !966)
!9257 = !DILocation(line: 1795, column: 9, scope: !9247)
!9258 = !DILocation(line: 1797, column: 12, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9247, file: !969, line: 1797, column: 5)
!9260 = !DILocation(line: 1797, column: 10, scope: !9259)
!9261 = !DILocation(line: 1797, column: 17, scope: !9262)
!9262 = !DILexicalBlockFile(scope: !9263, file: !969, discriminator: 1)
!9263 = distinct !DILexicalBlock(scope: !9259, file: !969, line: 1797, column: 5)
!9264 = !DILocation(line: 1797, column: 21, scope: !9262)
!9265 = !DILocation(line: 1797, column: 19, scope: !9262)
!9266 = !DILocation(line: 1797, column: 5, scope: !9262)
!9267 = !DILocation(line: 1798, column: 13, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !969, line: 1798, column: 13)
!9269 = distinct !DILexicalBlock(scope: !9263, file: !969, line: 1797, column: 39)
!9270 = !DILocation(line: 1798, column: 25, scope: !9268)
!9271 = !DILocation(line: 1798, column: 18, scope: !9268)
!9272 = !DILocation(line: 1798, column: 28, scope: !9268)
!9273 = !DILocation(line: 1798, column: 15, scope: !9268)
!9274 = !DILocation(line: 1798, column: 36, scope: !9268)
!9275 = !DILocation(line: 1799, column: 13, scope: !9268)
!9276 = !DILocation(line: 1799, column: 25, scope: !9268)
!9277 = !DILocation(line: 1799, column: 18, scope: !9268)
!9278 = !DILocation(line: 1799, column: 28, scope: !9268)
!9279 = !DILocation(line: 1799, column: 15, scope: !9268)
!9280 = !DILocation(line: 1798, column: 13, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !9269, file: !969, discriminator: 1)
!9282 = !DILocation(line: 1800, column: 13, scope: !9268)
!9283 = !DILocation(line: 1801, column: 5, scope: !9269)
!9284 = !DILocation(line: 1797, column: 35, scope: !9285)
!9285 = !DILexicalBlockFile(scope: !9263, file: !969, discriminator: 2)
!9286 = !DILocation(line: 1797, column: 5, scope: !9285)
!9287 = distinct !{!9287, !9288}
!9288 = !DILocation(line: 1797, column: 5, scope: !9247)
!9289 = !DILocation(line: 1802, column: 9, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9247, file: !969, line: 1802, column: 9)
!9291 = !DILocation(line: 1802, column: 14, scope: !9290)
!9292 = !DILocation(line: 1802, column: 11, scope: !9290)
!9293 = !DILocation(line: 1802, column: 9, scope: !9247)
!9294 = !DILocation(line: 1803, column: 9, scope: !9290)
!9295 = !DILocation(line: 1805, column: 12, scope: !9247)
!9296 = !DILocation(line: 1805, column: 5, scope: !9247)
!9297 = !DILocation(line: 1806, column: 1, scope: !9247)
!9298 = distinct !DISubprogram(name: "set_channel_info", scope: !969, file: !969, line: 2063, type: !9299, isLocal: true, isDefinition: true, scopeLine: 2065, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2151)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{!966, !980, !966, !9301}
!9301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!9302 = !DILocalVariable(name: "s", arg: 1, scope: !9298, file: !969, line: 2063, type: !980)
!9303 = !DILocation(line: 2063, column: 69, scope: !9298)
!9304 = !DILocalVariable(name: "channels", arg: 2, scope: !9298, file: !969, line: 2063, type: !966)
!9305 = !DILocation(line: 2063, column: 76, scope: !9298)
!9306 = !DILocalVariable(name: "channel_layout", arg: 3, scope: !9298, file: !969, line: 2064, type: !9301)
!9307 = !DILocation(line: 2064, column: 47, scope: !9298)
!9308 = !DILocalVariable(name: "ch_layout", scope: !9298, file: !969, line: 2066, type: !966)
!9309 = !DILocation(line: 2066, column: 9, scope: !9298)
!9310 = !DILocation(line: 2068, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2068, column: 9)
!9312 = !DILocation(line: 2068, column: 18, scope: !9311)
!9313 = !DILocation(line: 2068, column: 22, scope: !9311)
!9314 = !DILocation(line: 2068, column: 25, scope: !9315)
!9315 = !DILexicalBlockFile(scope: !9311, file: !969, discriminator: 1)
!9316 = !DILocation(line: 2068, column: 34, scope: !9315)
!9317 = !DILocation(line: 2068, column: 9, scope: !9315)
!9318 = !DILocation(line: 2069, column: 9, scope: !9311)
!9319 = !DILocation(line: 2070, column: 10, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2070, column: 9)
!9321 = !DILocation(line: 2070, column: 9, scope: !9320)
!9322 = !DILocation(line: 2070, column: 25, scope: !9320)
!9323 = !DILocation(line: 2070, column: 9, scope: !9298)
!9324 = !DILocation(line: 2071, column: 9, scope: !9320)
!9325 = !DILocation(line: 2072, column: 18, scope: !9298)
!9326 = !DILocation(line: 2072, column: 17, scope: !9298)
!9327 = !DILocation(line: 2072, column: 15, scope: !9298)
!9328 = !DILocation(line: 2073, column: 10, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2073, column: 9)
!9330 = !DILocation(line: 2073, column: 9, scope: !9298)
!9331 = !DILocation(line: 2074, column: 51, scope: !9329)
!9332 = !DILocation(line: 2074, column: 21, scope: !9329)
!9333 = !DILocation(line: 2074, column: 19, scope: !9329)
!9334 = !DILocation(line: 2074, column: 9, scope: !9329)
!9335 = !DILocation(line: 2076, column: 20, scope: !9298)
!9336 = !DILocation(line: 2076, column: 30, scope: !9298)
!9337 = !DILocation(line: 2076, column: 18, scope: !9298)
!9338 = !DILocation(line: 2076, column: 17, scope: !9298)
!9339 = !DILocation(line: 2076, column: 5, scope: !9298)
!9340 = !DILocation(line: 2076, column: 8, scope: !9298)
!9341 = !DILocation(line: 2076, column: 15, scope: !9298)
!9342 = !DILocation(line: 2077, column: 19, scope: !9298)
!9343 = !DILocation(line: 2077, column: 5, scope: !9298)
!9344 = !DILocation(line: 2077, column: 8, scope: !9298)
!9345 = !DILocation(line: 2077, column: 17, scope: !9298)
!9346 = !DILocation(line: 2078, column: 23, scope: !9298)
!9347 = !DILocation(line: 2078, column: 34, scope: !9298)
!9348 = !DILocation(line: 2078, column: 37, scope: !9298)
!9349 = !DILocation(line: 2078, column: 32, scope: !9298)
!9350 = !DILocation(line: 2078, column: 5, scope: !9298)
!9351 = !DILocation(line: 2078, column: 8, scope: !9298)
!9352 = !DILocation(line: 2078, column: 21, scope: !9298)
!9353 = !DILocation(line: 2079, column: 22, scope: !9298)
!9354 = !DILocation(line: 2079, column: 25, scope: !9298)
!9355 = !DILocation(line: 2079, column: 34, scope: !9356)
!9356 = !DILexicalBlockFile(scope: !9298, file: !969, discriminator: 1)
!9357 = !DILocation(line: 2079, column: 37, scope: !9356)
!9358 = !DILocation(line: 2079, column: 50, scope: !9356)
!9359 = !DILocation(line: 2079, column: 22, scope: !9356)
!9360 = !DILocation(line: 2079, column: 22, scope: !9361)
!9361 = !DILexicalBlockFile(scope: !9298, file: !969, discriminator: 2)
!9362 = !DILocation(line: 2079, column: 22, scope: !9363)
!9363 = !DILexicalBlockFile(scope: !9298, file: !969, discriminator: 3)
!9364 = !DILocation(line: 2079, column: 5, scope: !9363)
!9365 = !DILocation(line: 2079, column: 8, scope: !9363)
!9366 = !DILocation(line: 2079, column: 20, scope: !9363)
!9367 = !DILocation(line: 2080, column: 9, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2080, column: 9)
!9369 = !DILocation(line: 2080, column: 12, scope: !9368)
!9370 = !DILocation(line: 2080, column: 9, scope: !9298)
!9371 = !DILocation(line: 2081, column: 19, scope: !9368)
!9372 = !DILocation(line: 2081, column: 9, scope: !9368)
!9373 = !DILocation(line: 2083, column: 13, scope: !9298)
!9374 = !DILocation(line: 2083, column: 5, scope: !9298)
!9375 = !DILocation(line: 2084, column: 24, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2083, column: 24)
!9377 = !DILocation(line: 2084, column: 27, scope: !9376)
!9378 = !DILocation(line: 2084, column: 40, scope: !9376)
!9379 = !DILocation(line: 2084, column: 59, scope: !9376)
!9380 = !DILocation(line: 2085, column: 35, scope: !9376)
!9381 = !DILocation(line: 2085, column: 38, scope: !9376)
!9382 = !DILocation(line: 2085, column: 51, scope: !9376)
!9383 = !DILocation(line: 2085, column: 72, scope: !9376)
!9384 = !DILocation(line: 2086, column: 48, scope: !9376)
!9385 = !DILocation(line: 2086, column: 51, scope: !9376)
!9386 = !DILocation(line: 2086, column: 64, scope: !9376)
!9387 = !DILocation(line: 2086, column: 81, scope: !9376)
!9388 = !DILocation(line: 2087, column: 48, scope: !9376)
!9389 = !DILocation(line: 2087, column: 51, scope: !9376)
!9390 = !DILocation(line: 2087, column: 64, scope: !9376)
!9391 = !DILocation(line: 2087, column: 83, scope: !9376)
!9392 = !DILocation(line: 2088, column: 61, scope: !9376)
!9393 = !DILocation(line: 2088, column: 64, scope: !9376)
!9394 = !DILocation(line: 2088, column: 77, scope: !9376)
!9395 = !DILocation(line: 2088, column: 96, scope: !9376)
!9396 = !DILocation(line: 2090, column: 59, scope: !9376)
!9397 = !DILocation(line: 2090, column: 62, scope: !9376)
!9398 = !DILocation(line: 2090, column: 75, scope: !9376)
!9399 = !DILocation(line: 2090, column: 94, scope: !9376)
!9400 = !DILocation(line: 2092, column: 72, scope: !9376)
!9401 = !DILocation(line: 2092, column: 75, scope: !9376)
!9402 = !DILocation(line: 2092, column: 88, scope: !9376)
!9403 = !DILocation(line: 2092, column: 107, scope: !9376)
!9404 = !DILocation(line: 2094, column: 9, scope: !9376)
!9405 = !DILocation(line: 2096, column: 22, scope: !9298)
!9406 = !DILocation(line: 2096, column: 25, scope: !9298)
!9407 = !DILocation(line: 2096, column: 38, scope: !9298)
!9408 = !DILocation(line: 2096, column: 46, scope: !9298)
!9409 = !DILocation(line: 2096, column: 49, scope: !9356)
!9410 = !DILocation(line: 2096, column: 52, scope: !9356)
!9411 = !DILocation(line: 2096, column: 65, scope: !9356)
!9412 = !DILocation(line: 2096, column: 46, scope: !9361)
!9413 = !DILocation(line: 2096, column: 5, scope: !9361)
!9414 = !DILocation(line: 2096, column: 8, scope: !9361)
!9415 = !DILocation(line: 2096, column: 19, scope: !9361)
!9416 = !DILocation(line: 2097, column: 23, scope: !9298)
!9417 = !DILocation(line: 2097, column: 26, scope: !9298)
!9418 = !DILocation(line: 2097, column: 39, scope: !9298)
!9419 = !DILocation(line: 2097, column: 5, scope: !9298)
!9420 = !DILocation(line: 2097, column: 8, scope: !9298)
!9421 = !DILocation(line: 2097, column: 21, scope: !9298)
!9422 = !DILocation(line: 2099, column: 62, scope: !9298)
!9423 = !DILocation(line: 2099, column: 65, scope: !9298)
!9424 = !DILocation(line: 2099, column: 22, scope: !9298)
!9425 = !DILocation(line: 2099, column: 45, scope: !9298)
!9426 = !DILocation(line: 2099, column: 48, scope: !9298)
!9427 = !DILocation(line: 2099, column: 5, scope: !9298)
!9428 = !DILocation(line: 2099, column: 8, scope: !9298)
!9429 = !DILocation(line: 2099, column: 20, scope: !9298)
!9430 = !DILocation(line: 2100, column: 23, scope: !9298)
!9431 = !DILocation(line: 2100, column: 6, scope: !9298)
!9432 = !DILocation(line: 2100, column: 21, scope: !9298)
!9433 = !DILocation(line: 2101, column: 9, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9298, file: !969, line: 2101, column: 9)
!9435 = !DILocation(line: 2101, column: 12, scope: !9434)
!9436 = !DILocation(line: 2101, column: 9, scope: !9298)
!9437 = !DILocation(line: 2102, column: 10, scope: !9434)
!9438 = !DILocation(line: 2102, column: 25, scope: !9434)
!9439 = !DILocation(line: 2102, column: 9, scope: !9434)
!9440 = !DILocation(line: 2104, column: 5, scope: !9298)
!9441 = !DILocation(line: 2105, column: 1, scope: !9298)
!9442 = !DILocalVariable(name: "s", arg: 1, scope: !2175, file: !969, line: 653, type: !980)
!9443 = !DILocation(line: 653, column: 54, scope: !2175)
!9444 = !DILocalVariable(name: "blk", scope: !2175, file: !969, line: 656, type: !966)
!9445 = !DILocation(line: 656, column: 9, scope: !2175)
!9446 = !DILocalVariable(name: "frame_bits", scope: !2175, file: !969, line: 657, type: !966)
!9447 = !DILocation(line: 657, column: 9, scope: !2175)
!9448 = !DILocation(line: 669, column: 16, scope: !2175)
!9449 = !DILocation(line: 670, column: 9, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !2175, file: !969, line: 670, column: 9)
!9451 = !DILocation(line: 670, column: 12, scope: !9450)
!9452 = !DILocation(line: 670, column: 9, scope: !2175)
!9453 = !DILocation(line: 672, column: 20, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9450, file: !969, line: 670, column: 18)
!9455 = !DILocation(line: 673, column: 20, scope: !9454)
!9456 = !DILocation(line: 674, column: 13, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 674, column: 13)
!9458 = !DILocation(line: 674, column: 16, scope: !9457)
!9459 = !DILocation(line: 674, column: 27, scope: !9457)
!9460 = !DILocation(line: 674, column: 13, scope: !9454)
!9461 = !DILocation(line: 675, column: 23, scope: !9457)
!9462 = !DILocation(line: 675, column: 13, scope: !9457)
!9463 = !DILocation(line: 676, column: 19, scope: !9454)
!9464 = !DILocation(line: 678, column: 13, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 678, column: 13)
!9466 = !DILocation(line: 678, column: 16, scope: !9465)
!9467 = !DILocation(line: 678, column: 27, scope: !9465)
!9468 = !DILocation(line: 678, column: 13, scope: !9454)
!9469 = !DILocation(line: 679, column: 24, scope: !9465)
!9470 = !DILocation(line: 679, column: 13, scope: !9465)
!9471 = !DILocation(line: 680, column: 20, scope: !9454)
!9472 = !DILocation(line: 682, column: 13, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 682, column: 13)
!9474 = !DILocation(line: 682, column: 16, scope: !9473)
!9475 = !DILocation(line: 682, column: 13, scope: !9454)
!9476 = !DILocation(line: 683, column: 31, scope: !9473)
!9477 = !DILocation(line: 683, column: 34, scope: !9473)
!9478 = !DILocation(line: 683, column: 29, scope: !9473)
!9479 = !DILocation(line: 683, column: 24, scope: !9473)
!9480 = !DILocation(line: 683, column: 13, scope: !9473)
!9481 = !DILocation(line: 685, column: 27, scope: !9473)
!9482 = !DILocation(line: 685, column: 30, scope: !9473)
!9483 = !DILocation(line: 685, column: 41, scope: !9473)
!9484 = !DILocation(line: 685, column: 47, scope: !9473)
!9485 = !DILocation(line: 685, column: 50, scope: !9473)
!9486 = !DILocation(line: 685, column: 45, scope: !9473)
!9487 = !DILocation(line: 685, column: 24, scope: !9473)
!9488 = !DILocation(line: 686, column: 13, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 686, column: 13)
!9490 = !DILocation(line: 686, column: 16, scope: !9489)
!9491 = !DILocation(line: 686, column: 13, scope: !9454)
!9492 = !DILocation(line: 687, column: 27, scope: !9489)
!9493 = !DILocation(line: 687, column: 30, scope: !9489)
!9494 = !DILocation(line: 687, column: 24, scope: !9489)
!9495 = !DILocation(line: 687, column: 13, scope: !9489)
!9496 = !DILocation(line: 689, column: 13, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 689, column: 13)
!9498 = !DILocation(line: 689, column: 16, scope: !9497)
!9499 = !DILocation(line: 689, column: 30, scope: !9497)
!9500 = !DILocation(line: 689, column: 13, scope: !9454)
!9501 = !DILocation(line: 690, column: 23, scope: !9497)
!9502 = !DILocation(line: 690, column: 13, scope: !9497)
!9503 = !DILocation(line: 692, column: 27, scope: !9497)
!9504 = !DILocation(line: 692, column: 30, scope: !9497)
!9505 = !DILocation(line: 692, column: 43, scope: !9497)
!9506 = !DILocation(line: 692, column: 24, scope: !9497)
!9507 = !DILocation(line: 694, column: 20, scope: !9454)
!9508 = !DILocation(line: 696, column: 13, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9454, file: !969, line: 696, column: 13)
!9510 = !DILocation(line: 696, column: 16, scope: !9509)
!9511 = !DILocation(line: 696, column: 27, scope: !9509)
!9512 = !DILocation(line: 696, column: 13, scope: !9454)
!9513 = !DILocation(line: 697, column: 23, scope: !9509)
!9514 = !DILocation(line: 697, column: 13, scope: !9509)
!9515 = !DILocation(line: 698, column: 5, scope: !9454)
!9516 = !DILocation(line: 699, column: 20, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9450, file: !969, line: 698, column: 12)
!9518 = !DILocation(line: 700, column: 38, scope: !9517)
!9519 = !DILocation(line: 700, column: 41, scope: !9517)
!9520 = !DILocation(line: 700, column: 23, scope: !9517)
!9521 = !DILocation(line: 700, column: 20, scope: !9517)
!9522 = !DILocation(line: 704, column: 14, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !2175, file: !969, line: 704, column: 5)
!9524 = !DILocation(line: 704, column: 10, scope: !9523)
!9525 = !DILocation(line: 704, column: 19, scope: !9526)
!9526 = !DILexicalBlockFile(scope: !9527, file: !969, discriminator: 1)
!9527 = distinct !DILexicalBlock(scope: !9523, file: !969, line: 704, column: 5)
!9528 = !DILocation(line: 704, column: 25, scope: !9526)
!9529 = !DILocation(line: 704, column: 28, scope: !9526)
!9530 = !DILocation(line: 704, column: 23, scope: !9526)
!9531 = !DILocation(line: 704, column: 5, scope: !9526)
!9532 = !DILocation(line: 705, column: 14, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !969, line: 705, column: 13)
!9534 = distinct !DILexicalBlock(scope: !9527, file: !969, line: 704, column: 47)
!9535 = !DILocation(line: 705, column: 17, scope: !9533)
!9536 = !DILocation(line: 705, column: 13, scope: !9534)
!9537 = !DILocation(line: 707, column: 27, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9533, file: !969, line: 705, column: 23)
!9539 = !DILocation(line: 707, column: 30, scope: !9538)
!9540 = !DILocation(line: 707, column: 24, scope: !9538)
!9541 = !DILocation(line: 710, column: 27, scope: !9538)
!9542 = !DILocation(line: 710, column: 30, scope: !9538)
!9543 = !DILocation(line: 710, column: 24, scope: !9538)
!9544 = !DILocation(line: 711, column: 9, scope: !9538)
!9545 = !DILocation(line: 714, column: 19, scope: !9534)
!9546 = !DILocation(line: 717, column: 13, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9534, file: !969, line: 717, column: 13)
!9548 = !DILocation(line: 717, column: 16, scope: !9547)
!9549 = !DILocation(line: 717, column: 13, scope: !9534)
!9550 = !DILocation(line: 718, column: 23, scope: !9547)
!9551 = !DILocation(line: 718, column: 13, scope: !9547)
!9552 = !DILocation(line: 720, column: 14, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9534, file: !969, line: 720, column: 13)
!9554 = !DILocation(line: 720, column: 17, scope: !9553)
!9555 = !DILocation(line: 720, column: 13, scope: !9534)
!9556 = !DILocation(line: 722, column: 31, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !969, line: 720, column: 23)
!9558 = !DILocation(line: 722, column: 34, scope: !9557)
!9559 = !DILocation(line: 722, column: 29, scope: !9557)
!9560 = !DILocation(line: 722, column: 24, scope: !9557)
!9561 = !DILocation(line: 723, column: 17, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !969, line: 723, column: 17)
!9563 = !DILocation(line: 723, column: 20, scope: !9562)
!9564 = !DILocation(line: 723, column: 17, scope: !9557)
!9565 = !DILocation(line: 724, column: 27, scope: !9562)
!9566 = !DILocation(line: 724, column: 17, scope: !9562)
!9567 = !DILocation(line: 727, column: 23, scope: !9557)
!9568 = !DILocation(line: 728, column: 18, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9557, file: !969, line: 728, column: 17)
!9570 = !DILocation(line: 728, column: 17, scope: !9557)
!9571 = !DILocation(line: 729, column: 28, scope: !9569)
!9572 = !DILocation(line: 729, column: 17, scope: !9569)
!9573 = !DILocation(line: 730, column: 9, scope: !9557)
!9574 = !DILocation(line: 733, column: 13, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9534, file: !969, line: 733, column: 13)
!9576 = !DILocation(line: 733, column: 16, scope: !9575)
!9577 = !DILocation(line: 733, column: 13, scope: !9534)
!9578 = !DILocation(line: 734, column: 23, scope: !9575)
!9579 = !DILocation(line: 734, column: 13, scope: !9575)
!9580 = !DILocation(line: 736, column: 14, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9534, file: !969, line: 736, column: 13)
!9582 = !DILocation(line: 736, column: 17, scope: !9581)
!9583 = !DILocation(line: 736, column: 13, scope: !9534)
!9584 = !DILocation(line: 738, column: 23, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9581, file: !969, line: 736, column: 23)
!9586 = !DILocation(line: 741, column: 23, scope: !9585)
!9587 = !DILocation(line: 742, column: 9, scope: !9585)
!9588 = !DILocation(line: 743, column: 5, scope: !9534)
!9589 = !DILocation(line: 704, column: 43, scope: !9590)
!9590 = !DILexicalBlockFile(scope: !9527, file: !969, discriminator: 2)
!9591 = !DILocation(line: 704, column: 5, scope: !9590)
!9592 = distinct !{!9592, !9593}
!9593 = !DILocation(line: 704, column: 5, scope: !2175)
!9594 = !DILocation(line: 746, column: 15, scope: !2175)
!9595 = !DILocation(line: 749, column: 16, scope: !2175)
!9596 = !DILocation(line: 751, column: 27, scope: !2175)
!9597 = !DILocation(line: 751, column: 5, scope: !2175)
!9598 = !DILocation(line: 751, column: 8, scope: !2175)
!9599 = !DILocation(line: 751, column: 25, scope: !2175)
!9600 = !DILocation(line: 752, column: 1, scope: !2175)
