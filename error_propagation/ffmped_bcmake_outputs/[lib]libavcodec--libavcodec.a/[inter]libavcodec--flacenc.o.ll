; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--flacenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--flacenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.FlacEncodeContext = type { %struct.AVClass*, %struct.PutBitContext, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i64, [16 x i8], %struct.FlacFrame, %struct.CompressionOptions, %struct.AVCodecContext*, [24 x i8], %struct.LPCContext, %struct.AVMD5*, i8*, i32, %struct.BswapDSPContext, %struct.FLACDSPContext, i32, i64, [8 x i8] }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.FlacFrame = type { [8 x %struct.FlacSubframe], i32, [2 x i32], i8, i32, i32 }
%struct.FlacSubframe = type { i32, i32, i32, i32, i32, [32 x i32], i32, %struct.RiceContext, [65535 x i32], [32 x [256 x i64]], [65535 x i32], [65546 x i32] }
%struct.RiceContext = type { i32, i32, [256 x i32] }
%struct.CompressionOptions = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.AVMD5 = type opaque
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.FLACDSPContext = type { [4 x void (i8**, i32**, i32, i32, i32)*], void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)* }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [5 x i8] c"flac\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"FLAC (Free Lossless Audio Codec)\00", align 1
@.compoundliteral = internal constant [3 x i32] [i32 1, i32 2, i32 -1], align 4
@flac_encoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([27 x %struct.AVOption], [27 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_flac_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86028, i32 -2147483552, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @flac_encoder_class, %struct.AVProfile* null, i8* null, i32 6863648, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @flac_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @flac_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @flac_encode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"FLAC encoder\00", align 1
@options = internal constant [27 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i32 6825688, i32 1, %union.anon { i64 15 }, double 0.000000e+00, double 1.500000e+01, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i32 6825680, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.000000e+00, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.12, i32 0, i32 0), i32 6825684, i32 1, %union.anon { i64 2 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i8* null, i32 6825704, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 8.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8* null, i32 6825708, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 8.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i32 0, i32 0), i32 6825700, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 5.000000e+00, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 6825712, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.000000e+00, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i32 0, i32 0), i32 6825716, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i32 0, i32 0), i32 6825720, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0), i8* null, i32 6825692, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.200000e+01, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* null, i32 6825696, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.200000e+01, i32 9, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [20 x i8] c"lpc_coeff_precision\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"LPC coefficient precision\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"lpc_type\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"LPC algorithm\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"fixed\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"levinson\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"cholesky\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"lpc_passes\00", align 1
@.str.12 = private unnamed_addr constant [71 x i8] c"Number of passes to use for Cholesky factorization during LPC analysis\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"min_partition_order\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"max_partition_order\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"prediction_order_method\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"Search method for selecting prediction order\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"predm\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"estimation\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"2level\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"4level\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"8level\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"ch_mode\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Stereo decorrelation mode\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"indep\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"left_side\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"right_side\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"mid_side\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"exact_rice_parameters\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Calculate rice parameters exactly\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"multi_dim_quant\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"Multi-dimensional quantization\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"min_prediction_order\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"max_prediction_order\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"encoding as 24 bits-per-sample\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"%d channels not supported (max %d)\0A\00", align 1
@ff_flac_sample_rate_table = external constant [16 x i32], align 16
@.str.39 = private unnamed_addr constant [21 x i8] c"%d Hz not supported\0A\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"invalid compression level: %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c"invalid partition orders: min=%d max=%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [48 x i8] c"invalid min prediction order %d, clamped to %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [34 x i8] c"invalid min prediction order: %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [48 x i8] c"invalid max prediction order %d, clamped to %d\0A\00", align 1
@.str.45 = private unnamed_addr constant [34 x i8] c"invalid max prediction order: %d\0A\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"invalid prediction orders: min=%d max=%d\0A\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"invalid block size: %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [89 x i8] c"Channel layout not supported by Flac, output stream will have incorrect channel layout.\0A\00", align 1
@.str.49 = private unnamed_addr constant [88 x i8] c"No channel layout specified. The encoder will use Flac channel layout for %d channels.\0A\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"samplerate > 0\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"libavcodec/flacenc.c\00", align 1
@ff_flac_blocksize_table = external constant [16 x i32], align 16
@.str.53 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c" compression: %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c" lpc type: None\0A\00", align 1
@.str.58 = private unnamed_addr constant [43 x i8] c" lpc type: Fixed pre-defined coefficients\0A\00", align 1
@.str.59 = private unnamed_addr constant [56 x i8] c" lpc type: Levinson-Durbin recursion with Welch window\0A\00", align 1
@.str.60 = private unnamed_addr constant [46 x i8] c" lpc type: Cholesky factorization, %d pass%s\0A\00", align 1
@.str.61 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c" prediction order: %d, %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c" order method: %s\0A\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"estimate\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"2-level\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"4-level\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"8-level\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"full search\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"log search\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c" partition order: %d, %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c" block size: %d\0A\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c" lpc precision: %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"Bad frame count\0A\00", align 1
@.str.75 = private unnamed_addr constant [29 x i8] c"Error updating MD5 checksum\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @flac_encode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1727 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %freq = alloca i32, align 4
  %channels = alloca i32, align 4
  %s = alloca %struct.FlacEncodeContext*, align 8
  %i = alloca i32, align 4
  %level = alloca i32, align 4
  %ret = alloca i32, align 4
  %streaminfo = alloca i8*, align 8
  %.compoundliteral = alloca [13 x i32], align 4
  %.compoundliteral89 = alloca [13 x i32], align 4
  %.compoundliteral111 = alloca [13 x i32], align 4
  %.compoundliteral133 = alloca [13 x i32], align 4
  %.compoundliteral155 = alloca [13 x i32], align 4
  %.compoundliteral187 = alloca [13 x i32], align 4
  %.compoundliteral210 = alloca [13 x i32], align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1729, metadata !1730), !dbg !1731
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !1732, metadata !1730), !dbg !1733
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1734
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 82, !dbg !1735
  %1 = load i32, i32* %sample_rate, align 8, !dbg !1735
  store i32 %1, i32* %freq, align 4, !dbg !1733
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !1736, metadata !1730), !dbg !1737
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1738
  %channels1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 83, !dbg !1739
  %3 = load i32, i32* %channels1, align 4, !dbg !1739
  store i32 %3, i32* %channels, align 4, !dbg !1737
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s, metadata !1740, metadata !1730), !dbg !1935
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1936
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !1937
  %5 = load i8*, i8** %priv_data, align 8, !dbg !1937
  %6 = bitcast i8* %5 to %struct.FlacEncodeContext*, !dbg !1936
  store %struct.FlacEncodeContext* %6, %struct.FlacEncodeContext** %s, align 8, !dbg !1935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1938, metadata !1730), !dbg !1939
  call void @llvm.dbg.declare(metadata i32* %level, metadata !1940, metadata !1730), !dbg !1941
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1942, metadata !1730), !dbg !1943
  call void @llvm.dbg.declare(metadata i8** %streaminfo, metadata !1944, metadata !1730), !dbg !1945
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1946
  %8 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !1947
  %avctx2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %8, i32 0, i32 15, !dbg !1948
  store %struct.AVCodecContext* %7, %struct.AVCodecContext** %avctx2, align 32, !dbg !1949
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1950
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 84, !dbg !1951
  %10 = load i32, i32* %sample_fmt, align 8, !dbg !1951
  switch i32 %10, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !1952

sw.bb:                                            ; preds = %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1953
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 143, !dbg !1955
  store i32 16, i32* %bits_per_raw_sample, align 4, !dbg !1956
  %12 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !1957
  %bps_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %12, i32 0, i32 5, !dbg !1958
  store i32 4, i32* %bps_code, align 32, !dbg !1959
  br label %sw.epilog, !dbg !1960

sw.bb3:                                           ; preds = %entry
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1961
  %bits_per_raw_sample4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 143, !dbg !1963
  %14 = load i32, i32* %bits_per_raw_sample4, align 4, !dbg !1963
  %cmp = icmp ne i32 %14, 24, !dbg !1964
  br i1 %cmp, label %if.then, label %if.end, !dbg !1965

if.then:                                          ; preds = %sw.bb3
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1966
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !1966
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0)), !dbg !1967
  br label %if.end, !dbg !1967

if.end:                                           ; preds = %if.then, %sw.bb3
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1968
  %bits_per_raw_sample5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 143, !dbg !1969
  store i32 24, i32* %bits_per_raw_sample5, align 4, !dbg !1970
  %18 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !1971
  %bps_code6 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %18, i32 0, i32 5, !dbg !1972
  store i32 6, i32* %bps_code6, align 32, !dbg !1973
  br label %sw.epilog, !dbg !1974

sw.epilog:                                        ; preds = %entry, %if.end, %sw.bb
  %19 = load i32, i32* %channels, align 4, !dbg !1975
  %cmp7 = icmp slt i32 %19, 1, !dbg !1977
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !1978

lor.lhs.false:                                    ; preds = %sw.epilog
  %20 = load i32, i32* %channels, align 4, !dbg !1979
  %cmp8 = icmp sgt i32 %20, 8, !dbg !1981
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !1982

if.then9:                                         ; preds = %lor.lhs.false, %sw.epilog
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1983
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !1983
  %23 = load i32, i32* %channels, align 4, !dbg !1985
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i32 0, i32 0), i32 %23, i32 8), !dbg !1986
  store i32 -22, i32* %retval, align 4, !dbg !1987
  br label %return, !dbg !1987

if.end10:                                         ; preds = %lor.lhs.false
  %24 = load i32, i32* %channels, align 4, !dbg !1988
  %25 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !1989
  %channels11 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %25, i32 0, i32 2, !dbg !1990
  store i32 %24, i32* %channels11, align 16, !dbg !1991
  %26 = load i32, i32* %freq, align 4, !dbg !1992
  %cmp12 = icmp slt i32 %26, 1, !dbg !1994
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !1995

if.then13:                                        ; preds = %if.end10
  store i32 -22, i32* %retval, align 4, !dbg !1996
  br label %return, !dbg !1996

if.end14:                                         ; preds = %if.end10
  store i32 4, i32* %i, align 4, !dbg !1997
  br label %for.cond, !dbg !1999

for.cond:                                         ; preds = %for.inc, %if.end14
  %27 = load i32, i32* %i, align 4, !dbg !2000
  %cmp15 = icmp slt i32 %27, 12, !dbg !2003
  br i1 %cmp15, label %for.body, label %for.end, !dbg !2004

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %freq, align 4, !dbg !2005
  %29 = load i32, i32* %i, align 4, !dbg !2008
  %idxprom = sext i32 %29 to i64, !dbg !2009
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_sample_rate_table, i64 0, i64 %idxprom, !dbg !2009
  %30 = load i32, i32* %arrayidx, align 4, !dbg !2009
  %cmp16 = icmp eq i32 %28, %30, !dbg !2010
  br i1 %cmp16, label %if.then17, label %if.end23, !dbg !2011

if.then17:                                        ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !2012
  %idxprom18 = sext i32 %31 to i64, !dbg !2014
  %arrayidx19 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_sample_rate_table, i64 0, i64 %idxprom18, !dbg !2014
  %32 = load i32, i32* %arrayidx19, align 4, !dbg !2014
  %33 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2015
  %samplerate = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %33, i32 0, i32 3, !dbg !2016
  store i32 %32, i32* %samplerate, align 4, !dbg !2017
  %34 = load i32, i32* %i, align 4, !dbg !2018
  %35 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2019
  %sr_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %35, i32 0, i32 4, !dbg !2020
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code, i64 0, i64 0, !dbg !2019
  store i32 %34, i32* %arrayidx20, align 8, !dbg !2021
  %36 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2022
  %sr_code21 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %36, i32 0, i32 4, !dbg !2023
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code21, i64 0, i64 1, !dbg !2022
  store i32 0, i32* %arrayidx22, align 4, !dbg !2024
  br label %for.end, !dbg !2025

if.end23:                                         ; preds = %for.body
  br label %for.inc, !dbg !2026

for.inc:                                          ; preds = %if.end23
  %37 = load i32, i32* %i, align 4, !dbg !2027
  %inc = add nsw i32 %37, 1, !dbg !2027
  store i32 %inc, i32* %i, align 4, !dbg !2027
  br label %for.cond, !dbg !2029, !llvm.loop !2030

for.end:                                          ; preds = %if.then17, %for.cond
  %38 = load i32, i32* %i, align 4, !dbg !2032
  %cmp24 = icmp eq i32 %38, 12, !dbg !2034
  br i1 %cmp24, label %if.then25, label %if.end55, !dbg !2035

if.then25:                                        ; preds = %for.end
  %39 = load i32, i32* %freq, align 4, !dbg !2036
  %rem = srem i32 %39, 1000, !dbg !2039
  %cmp26 = icmp eq i32 %rem, 0, !dbg !2040
  br i1 %cmp26, label %land.lhs.true, label %if.else, !dbg !2041

land.lhs.true:                                    ; preds = %if.then25
  %40 = load i32, i32* %freq, align 4, !dbg !2042
  %cmp27 = icmp slt i32 %40, 255000, !dbg !2044
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !2045

if.then28:                                        ; preds = %land.lhs.true
  %41 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2046
  %sr_code29 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %41, i32 0, i32 4, !dbg !2048
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code29, i64 0, i64 0, !dbg !2046
  store i32 12, i32* %arrayidx30, align 8, !dbg !2049
  %42 = load i32, i32* %freq, align 4, !dbg !2050
  %div = sdiv i32 %42, 1000, !dbg !2051
  %43 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2052
  %sr_code31 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %43, i32 0, i32 4, !dbg !2053
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code31, i64 0, i64 1, !dbg !2052
  store i32 %div, i32* %arrayidx32, align 4, !dbg !2054
  br label %if.end53, !dbg !2055

if.else:                                          ; preds = %land.lhs.true, %if.then25
  %44 = load i32, i32* %freq, align 4, !dbg !2056
  %rem33 = srem i32 %44, 10, !dbg !2059
  %cmp34 = icmp eq i32 %rem33, 0, !dbg !2060
  br i1 %cmp34, label %land.lhs.true35, label %if.else43, !dbg !2061

land.lhs.true35:                                  ; preds = %if.else
  %45 = load i32, i32* %freq, align 4, !dbg !2062
  %cmp36 = icmp slt i32 %45, 655350, !dbg !2064
  br i1 %cmp36, label %if.then37, label %if.else43, !dbg !2065

if.then37:                                        ; preds = %land.lhs.true35
  %46 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2066
  %sr_code38 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %46, i32 0, i32 4, !dbg !2068
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code38, i64 0, i64 0, !dbg !2066
  store i32 14, i32* %arrayidx39, align 8, !dbg !2069
  %47 = load i32, i32* %freq, align 4, !dbg !2070
  %div40 = sdiv i32 %47, 10, !dbg !2071
  %48 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2072
  %sr_code41 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %48, i32 0, i32 4, !dbg !2073
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code41, i64 0, i64 1, !dbg !2072
  store i32 %div40, i32* %arrayidx42, align 4, !dbg !2074
  br label %if.end52, !dbg !2075

if.else43:                                        ; preds = %land.lhs.true35, %if.else
  %49 = load i32, i32* %freq, align 4, !dbg !2076
  %cmp44 = icmp slt i32 %49, 65535, !dbg !2079
  br i1 %cmp44, label %if.then45, label %if.else50, !dbg !2076

if.then45:                                        ; preds = %if.else43
  %50 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2080
  %sr_code46 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %50, i32 0, i32 4, !dbg !2082
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code46, i64 0, i64 0, !dbg !2080
  store i32 13, i32* %arrayidx47, align 8, !dbg !2083
  %51 = load i32, i32* %freq, align 4, !dbg !2084
  %52 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2085
  %sr_code48 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %52, i32 0, i32 4, !dbg !2086
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code48, i64 0, i64 1, !dbg !2085
  store i32 %51, i32* %arrayidx49, align 4, !dbg !2087
  br label %if.end51, !dbg !2088

if.else50:                                        ; preds = %if.else43
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2089
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !2089
  %55 = load i32, i32* %freq, align 4, !dbg !2091
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i32 0, i32 0), i32 %55), !dbg !2092
  store i32 -22, i32* %retval, align 4, !dbg !2093
  br label %return, !dbg !2093

if.end51:                                         ; preds = %if.then45
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then37
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then28
  %56 = load i32, i32* %freq, align 4, !dbg !2094
  %57 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2095
  %samplerate54 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %57, i32 0, i32 3, !dbg !2096
  store i32 %56, i32* %samplerate54, align 4, !dbg !2097
  br label %if.end55, !dbg !2098

if.end55:                                         ; preds = %if.end53, %for.end
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2099
  %compression_level = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 12, !dbg !2101
  %59 = load i32, i32* %compression_level, align 8, !dbg !2101
  %cmp56 = icmp slt i32 %59, 0, !dbg !2102
  br i1 %cmp56, label %if.then57, label %if.else59, !dbg !2103

if.then57:                                        ; preds = %if.end55
  %60 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2104
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %60, i32 0, i32 14, !dbg !2105
  %compression_level58 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 0, !dbg !2106
  store i32 5, i32* %compression_level58, align 8, !dbg !2107
  br label %if.end63, !dbg !2104

if.else59:                                        ; preds = %if.end55
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2108
  %compression_level60 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 12, !dbg !2109
  %62 = load i32, i32* %compression_level60, align 8, !dbg !2109
  %63 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2110
  %options61 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %63, i32 0, i32 14, !dbg !2111
  %compression_level62 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options61, i32 0, i32 0, !dbg !2112
  store i32 %62, i32* %compression_level62, align 8, !dbg !2113
  br label %if.end63

if.end63:                                         ; preds = %if.else59, %if.then57
  %64 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2114
  %options64 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %64, i32 0, i32 14, !dbg !2115
  %compression_level65 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options64, i32 0, i32 0, !dbg !2116
  %65 = load i32, i32* %compression_level65, align 8, !dbg !2116
  store i32 %65, i32* %level, align 4, !dbg !2117
  %66 = load i32, i32* %level, align 4, !dbg !2118
  %cmp66 = icmp sgt i32 %66, 12, !dbg !2120
  br i1 %cmp66, label %if.then67, label %if.end70, !dbg !2121

if.then67:                                        ; preds = %if.end63
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2122
  %68 = bitcast %struct.AVCodecContext* %67 to i8*, !dbg !2122
  %69 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2124
  %options68 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %69, i32 0, i32 14, !dbg !2125
  %compression_level69 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options68, i32 0, i32 0, !dbg !2126
  %70 = load i32, i32* %compression_level69, align 8, !dbg !2126
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i32 0, i32 0), i32 %70), !dbg !2127
  store i32 -22, i32* %retval, align 4, !dbg !2128
  br label %return, !dbg !2128

if.end70:                                         ; preds = %if.end63
  %71 = load i32, i32* %level, align 4, !dbg !2129
  %idxprom71 = sext i32 %71 to i64, !dbg !2130
  %arrayinit.begin = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !2131
  store i32 27, i32* %arrayinit.begin, align 4, !dbg !2131
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !2131
  store i32 27, i32* %arrayinit.element, align 4, !dbg !2131
  %arrayinit.element72 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !2131
  store i32 27, i32* %arrayinit.element72, align 4, !dbg !2131
  %arrayinit.element73 = getelementptr inbounds i32, i32* %arrayinit.element72, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element73, align 4, !dbg !2131
  %arrayinit.element74 = getelementptr inbounds i32, i32* %arrayinit.element73, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element74, align 4, !dbg !2131
  %arrayinit.element75 = getelementptr inbounds i32, i32* %arrayinit.element74, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element75, align 4, !dbg !2131
  %arrayinit.element76 = getelementptr inbounds i32, i32* %arrayinit.element75, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element76, align 4, !dbg !2131
  %arrayinit.element77 = getelementptr inbounds i32, i32* %arrayinit.element76, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element77, align 4, !dbg !2131
  %arrayinit.element78 = getelementptr inbounds i32, i32* %arrayinit.element77, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element78, align 4, !dbg !2131
  %arrayinit.element79 = getelementptr inbounds i32, i32* %arrayinit.element78, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element79, align 4, !dbg !2131
  %arrayinit.element80 = getelementptr inbounds i32, i32* %arrayinit.element79, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element80, align 4, !dbg !2131
  %arrayinit.element81 = getelementptr inbounds i32, i32* %arrayinit.element80, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element81, align 4, !dbg !2131
  %arrayinit.element82 = getelementptr inbounds i32, i32* %arrayinit.element81, i64 1, !dbg !2131
  store i32 105, i32* %arrayinit.element82, align 4, !dbg !2131
  %arrayidx83 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral, i64 0, i64 %idxprom71, !dbg !2130
  %72 = load i32, i32* %arrayidx83, align 4, !dbg !2130
  %73 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2132
  %options84 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %73, i32 0, i32 14, !dbg !2133
  %block_time_ms = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options84, i32 0, i32 1, !dbg !2134
  store i32 %72, i32* %block_time_ms, align 4, !dbg !2135
  %74 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2136
  %options85 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %74, i32 0, i32 14, !dbg !2138
  %lpc_type = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options85, i32 0, i32 2, !dbg !2139
  %75 = load i32, i32* %lpc_type, align 8, !dbg !2139
  %cmp86 = icmp eq i32 %75, -1, !dbg !2140
  br i1 %cmp86, label %if.then87, label %if.end106, !dbg !2141

if.then87:                                        ; preds = %if.end70
  %76 = load i32, i32* %level, align 4, !dbg !2142
  %idxprom88 = sext i32 %76 to i64, !dbg !2143
  %arrayinit.begin90 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral89, i64 0, i64 0, !dbg !2144
  store i32 1, i32* %arrayinit.begin90, align 4, !dbg !2144
  %arrayinit.element91 = getelementptr inbounds i32, i32* %arrayinit.begin90, i64 1, !dbg !2144
  store i32 1, i32* %arrayinit.element91, align 4, !dbg !2144
  %arrayinit.element92 = getelementptr inbounds i32, i32* %arrayinit.element91, i64 1, !dbg !2144
  store i32 1, i32* %arrayinit.element92, align 4, !dbg !2144
  %arrayinit.element93 = getelementptr inbounds i32, i32* %arrayinit.element92, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element93, align 4, !dbg !2144
  %arrayinit.element94 = getelementptr inbounds i32, i32* %arrayinit.element93, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element94, align 4, !dbg !2144
  %arrayinit.element95 = getelementptr inbounds i32, i32* %arrayinit.element94, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element95, align 4, !dbg !2144
  %arrayinit.element96 = getelementptr inbounds i32, i32* %arrayinit.element95, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element96, align 4, !dbg !2144
  %arrayinit.element97 = getelementptr inbounds i32, i32* %arrayinit.element96, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element97, align 4, !dbg !2144
  %arrayinit.element98 = getelementptr inbounds i32, i32* %arrayinit.element97, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element98, align 4, !dbg !2144
  %arrayinit.element99 = getelementptr inbounds i32, i32* %arrayinit.element98, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element99, align 4, !dbg !2144
  %arrayinit.element100 = getelementptr inbounds i32, i32* %arrayinit.element99, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element100, align 4, !dbg !2144
  %arrayinit.element101 = getelementptr inbounds i32, i32* %arrayinit.element100, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element101, align 4, !dbg !2144
  %arrayinit.element102 = getelementptr inbounds i32, i32* %arrayinit.element101, i64 1, !dbg !2144
  store i32 2, i32* %arrayinit.element102, align 4, !dbg !2144
  %arrayidx103 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral89, i64 0, i64 %idxprom88, !dbg !2143
  %77 = load i32, i32* %arrayidx103, align 4, !dbg !2143
  %78 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2145
  %options104 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %78, i32 0, i32 14, !dbg !2146
  %lpc_type105 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options104, i32 0, i32 2, !dbg !2147
  store i32 %77, i32* %lpc_type105, align 8, !dbg !2148
  br label %if.end106, !dbg !2145

if.end106:                                        ; preds = %if.then87, %if.end70
  %79 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2149
  %options107 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %79, i32 0, i32 14, !dbg !2151
  %min_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options107, i32 0, i32 5, !dbg !2152
  %80 = load i32, i32* %min_prediction_order, align 4, !dbg !2152
  %cmp108 = icmp slt i32 %80, 0, !dbg !2153
  br i1 %cmp108, label %if.then109, label %if.end128, !dbg !2154

if.then109:                                       ; preds = %if.end106
  %81 = load i32, i32* %level, align 4, !dbg !2155
  %idxprom110 = sext i32 %81 to i64, !dbg !2156
  %arrayinit.begin112 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral111, i64 0, i64 0, !dbg !2157
  store i32 2, i32* %arrayinit.begin112, align 4, !dbg !2157
  %arrayinit.element113 = getelementptr inbounds i32, i32* %arrayinit.begin112, i64 1, !dbg !2157
  store i32 0, i32* %arrayinit.element113, align 4, !dbg !2157
  %arrayinit.element114 = getelementptr inbounds i32, i32* %arrayinit.element113, i64 1, !dbg !2157
  store i32 0, i32* %arrayinit.element114, align 4, !dbg !2157
  %arrayinit.element115 = getelementptr inbounds i32, i32* %arrayinit.element114, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element115, align 4, !dbg !2157
  %arrayinit.element116 = getelementptr inbounds i32, i32* %arrayinit.element115, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element116, align 4, !dbg !2157
  %arrayinit.element117 = getelementptr inbounds i32, i32* %arrayinit.element116, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element117, align 4, !dbg !2157
  %arrayinit.element118 = getelementptr inbounds i32, i32* %arrayinit.element117, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element118, align 4, !dbg !2157
  %arrayinit.element119 = getelementptr inbounds i32, i32* %arrayinit.element118, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element119, align 4, !dbg !2157
  %arrayinit.element120 = getelementptr inbounds i32, i32* %arrayinit.element119, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element120, align 4, !dbg !2157
  %arrayinit.element121 = getelementptr inbounds i32, i32* %arrayinit.element120, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element121, align 4, !dbg !2157
  %arrayinit.element122 = getelementptr inbounds i32, i32* %arrayinit.element121, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element122, align 4, !dbg !2157
  %arrayinit.element123 = getelementptr inbounds i32, i32* %arrayinit.element122, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element123, align 4, !dbg !2157
  %arrayinit.element124 = getelementptr inbounds i32, i32* %arrayinit.element123, i64 1, !dbg !2157
  store i32 1, i32* %arrayinit.element124, align 4, !dbg !2157
  %arrayidx125 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral111, i64 0, i64 %idxprom110, !dbg !2156
  %82 = load i32, i32* %arrayidx125, align 4, !dbg !2156
  %83 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2158
  %options126 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %83, i32 0, i32 14, !dbg !2159
  %min_prediction_order127 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options126, i32 0, i32 5, !dbg !2160
  store i32 %82, i32* %min_prediction_order127, align 4, !dbg !2161
  br label %if.end128, !dbg !2158

if.end128:                                        ; preds = %if.then109, %if.end106
  %84 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2162
  %options129 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %84, i32 0, i32 14, !dbg !2164
  %max_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options129, i32 0, i32 6, !dbg !2165
  %85 = load i32, i32* %max_prediction_order, align 8, !dbg !2165
  %cmp130 = icmp slt i32 %85, 0, !dbg !2166
  br i1 %cmp130, label %if.then131, label %if.end150, !dbg !2167

if.then131:                                       ; preds = %if.end128
  %86 = load i32, i32* %level, align 4, !dbg !2168
  %idxprom132 = sext i32 %86 to i64, !dbg !2169
  %arrayinit.begin134 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral133, i64 0, i64 0, !dbg !2170
  store i32 3, i32* %arrayinit.begin134, align 4, !dbg !2170
  %arrayinit.element135 = getelementptr inbounds i32, i32* %arrayinit.begin134, i64 1, !dbg !2170
  store i32 4, i32* %arrayinit.element135, align 4, !dbg !2170
  %arrayinit.element136 = getelementptr inbounds i32, i32* %arrayinit.element135, i64 1, !dbg !2170
  store i32 4, i32* %arrayinit.element136, align 4, !dbg !2170
  %arrayinit.element137 = getelementptr inbounds i32, i32* %arrayinit.element136, i64 1, !dbg !2170
  store i32 6, i32* %arrayinit.element137, align 4, !dbg !2170
  %arrayinit.element138 = getelementptr inbounds i32, i32* %arrayinit.element137, i64 1, !dbg !2170
  store i32 8, i32* %arrayinit.element138, align 4, !dbg !2170
  %arrayinit.element139 = getelementptr inbounds i32, i32* %arrayinit.element138, i64 1, !dbg !2170
  store i32 8, i32* %arrayinit.element139, align 4, !dbg !2170
  %arrayinit.element140 = getelementptr inbounds i32, i32* %arrayinit.element139, i64 1, !dbg !2170
  store i32 8, i32* %arrayinit.element140, align 4, !dbg !2170
  %arrayinit.element141 = getelementptr inbounds i32, i32* %arrayinit.element140, i64 1, !dbg !2170
  store i32 8, i32* %arrayinit.element141, align 4, !dbg !2170
  %arrayinit.element142 = getelementptr inbounds i32, i32* %arrayinit.element141, i64 1, !dbg !2170
  store i32 12, i32* %arrayinit.element142, align 4, !dbg !2170
  %arrayinit.element143 = getelementptr inbounds i32, i32* %arrayinit.element142, i64 1, !dbg !2170
  store i32 12, i32* %arrayinit.element143, align 4, !dbg !2170
  %arrayinit.element144 = getelementptr inbounds i32, i32* %arrayinit.element143, i64 1, !dbg !2170
  store i32 12, i32* %arrayinit.element144, align 4, !dbg !2170
  %arrayinit.element145 = getelementptr inbounds i32, i32* %arrayinit.element144, i64 1, !dbg !2170
  store i32 32, i32* %arrayinit.element145, align 4, !dbg !2170
  %arrayinit.element146 = getelementptr inbounds i32, i32* %arrayinit.element145, i64 1, !dbg !2170
  store i32 32, i32* %arrayinit.element146, align 4, !dbg !2170
  %arrayidx147 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral133, i64 0, i64 %idxprom132, !dbg !2169
  %87 = load i32, i32* %arrayidx147, align 4, !dbg !2169
  %88 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2171
  %options148 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %88, i32 0, i32 14, !dbg !2172
  %max_prediction_order149 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options148, i32 0, i32 6, !dbg !2173
  store i32 %87, i32* %max_prediction_order149, align 8, !dbg !2174
  br label %if.end150, !dbg !2171

if.end150:                                        ; preds = %if.then131, %if.end128
  %89 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2175
  %options151 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %89, i32 0, i32 14, !dbg !2177
  %prediction_order_method = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options151, i32 0, i32 7, !dbg !2178
  %90 = load i32, i32* %prediction_order_method, align 4, !dbg !2178
  %cmp152 = icmp slt i32 %90, 0, !dbg !2179
  br i1 %cmp152, label %if.then153, label %if.end172, !dbg !2180

if.then153:                                       ; preds = %if.end150
  %91 = load i32, i32* %level, align 4, !dbg !2181
  %idxprom154 = sext i32 %91 to i64, !dbg !2182
  %arrayinit.begin156 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral155, i64 0, i64 0, !dbg !2183
  store i32 0, i32* %arrayinit.begin156, align 4, !dbg !2183
  %arrayinit.element157 = getelementptr inbounds i32, i32* %arrayinit.begin156, i64 1, !dbg !2183
  store i32 0, i32* %arrayinit.element157, align 4, !dbg !2183
  %arrayinit.element158 = getelementptr inbounds i32, i32* %arrayinit.element157, i64 1, !dbg !2183
  store i32 0, i32* %arrayinit.element158, align 4, !dbg !2183
  %arrayinit.element159 = getelementptr inbounds i32, i32* %arrayinit.element158, i64 1, !dbg !2183
  store i32 0, i32* %arrayinit.element159, align 4, !dbg !2183
  %arrayinit.element160 = getelementptr inbounds i32, i32* %arrayinit.element159, i64 1, !dbg !2183
  store i32 0, i32* %arrayinit.element160, align 4, !dbg !2183
  %arrayinit.element161 = getelementptr inbounds i32, i32* %arrayinit.element160, i64 1, !dbg !2183
  store i32 0, i32* %arrayinit.element161, align 4, !dbg !2183
  %arrayinit.element162 = getelementptr inbounds i32, i32* %arrayinit.element161, i64 1, !dbg !2183
  store i32 2, i32* %arrayinit.element162, align 4, !dbg !2183
  %arrayinit.element163 = getelementptr inbounds i32, i32* %arrayinit.element162, i64 1, !dbg !2183
  store i32 5, i32* %arrayinit.element163, align 4, !dbg !2183
  %arrayinit.element164 = getelementptr inbounds i32, i32* %arrayinit.element163, i64 1, !dbg !2183
  store i32 2, i32* %arrayinit.element164, align 4, !dbg !2183
  %arrayinit.element165 = getelementptr inbounds i32, i32* %arrayinit.element164, i64 1, !dbg !2183
  store i32 5, i32* %arrayinit.element165, align 4, !dbg !2183
  %arrayinit.element166 = getelementptr inbounds i32, i32* %arrayinit.element165, i64 1, !dbg !2183
  store i32 4, i32* %arrayinit.element166, align 4, !dbg !2183
  %arrayinit.element167 = getelementptr inbounds i32, i32* %arrayinit.element166, i64 1, !dbg !2183
  store i32 5, i32* %arrayinit.element167, align 4, !dbg !2183
  %arrayinit.element168 = getelementptr inbounds i32, i32* %arrayinit.element167, i64 1, !dbg !2183
  store i32 4, i32* %arrayinit.element168, align 4, !dbg !2183
  %arrayidx169 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral155, i64 0, i64 %idxprom154, !dbg !2182
  %92 = load i32, i32* %arrayidx169, align 4, !dbg !2182
  %93 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2184
  %options170 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %93, i32 0, i32 14, !dbg !2185
  %prediction_order_method171 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options170, i32 0, i32 7, !dbg !2186
  store i32 %92, i32* %prediction_order_method171, align 4, !dbg !2187
  br label %if.end172, !dbg !2184

if.end172:                                        ; preds = %if.then153, %if.end150
  %94 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2188
  %options173 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %94, i32 0, i32 14, !dbg !2190
  %min_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options173, i32 0, i32 8, !dbg !2191
  %95 = load i32, i32* %min_partition_order, align 8, !dbg !2191
  %96 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2192
  %options174 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %96, i32 0, i32 14, !dbg !2193
  %max_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options174, i32 0, i32 9, !dbg !2194
  %97 = load i32, i32* %max_partition_order, align 4, !dbg !2194
  %cmp175 = icmp sgt i32 %95, %97, !dbg !2195
  br i1 %cmp175, label %if.then176, label %if.end181, !dbg !2196

if.then176:                                       ; preds = %if.end172
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2197
  %99 = bitcast %struct.AVCodecContext* %98 to i8*, !dbg !2197
  %100 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2199
  %options177 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %100, i32 0, i32 14, !dbg !2200
  %min_partition_order178 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options177, i32 0, i32 8, !dbg !2201
  %101 = load i32, i32* %min_partition_order178, align 8, !dbg !2201
  %102 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2202
  %options179 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %102, i32 0, i32 14, !dbg !2203
  %max_partition_order180 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options179, i32 0, i32 9, !dbg !2204
  %103 = load i32, i32* %max_partition_order180, align 4, !dbg !2204
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.41, i32 0, i32 0), i32 %101, i32 %103), !dbg !2205
  store i32 -22, i32* %retval, align 4, !dbg !2206
  br label %return, !dbg !2206

if.end181:                                        ; preds = %if.end172
  %104 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2207
  %options182 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %104, i32 0, i32 14, !dbg !2209
  %min_partition_order183 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options182, i32 0, i32 8, !dbg !2210
  %105 = load i32, i32* %min_partition_order183, align 8, !dbg !2210
  %cmp184 = icmp slt i32 %105, 0, !dbg !2211
  br i1 %cmp184, label %if.then185, label %if.end204, !dbg !2212

if.then185:                                       ; preds = %if.end181
  %106 = load i32, i32* %level, align 4, !dbg !2213
  %idxprom186 = sext i32 %106 to i64, !dbg !2214
  %107 = bitcast [13 x i32]* %.compoundliteral187 to i8*, !dbg !2215
  call void @llvm.memset.p0i8.i64(i8* %107, i8 0, i64 52, i32 4, i1 false), !dbg !2215
  %arrayinit.begin188 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral187, i64 0, i64 0, !dbg !2216
  store i32 2, i32* %arrayinit.begin188, align 4, !dbg !2216
  %arrayinit.element189 = getelementptr inbounds i32, i32* %arrayinit.begin188, i64 1, !dbg !2216
  store i32 2, i32* %arrayinit.element189, align 4, !dbg !2216
  %arrayinit.element190 = getelementptr inbounds i32, i32* %arrayinit.element189, i64 1, !dbg !2216
  %arrayinit.element191 = getelementptr inbounds i32, i32* %arrayinit.element190, i64 1, !dbg !2216
  %arrayinit.element192 = getelementptr inbounds i32, i32* %arrayinit.element191, i64 1, !dbg !2216
  %arrayinit.element193 = getelementptr inbounds i32, i32* %arrayinit.element192, i64 1, !dbg !2216
  %arrayinit.element194 = getelementptr inbounds i32, i32* %arrayinit.element193, i64 1, !dbg !2216
  %arrayinit.element195 = getelementptr inbounds i32, i32* %arrayinit.element194, i64 1, !dbg !2216
  %arrayinit.element196 = getelementptr inbounds i32, i32* %arrayinit.element195, i64 1, !dbg !2216
  %arrayinit.element197 = getelementptr inbounds i32, i32* %arrayinit.element196, i64 1, !dbg !2216
  %arrayinit.element198 = getelementptr inbounds i32, i32* %arrayinit.element197, i64 1, !dbg !2216
  %arrayinit.element199 = getelementptr inbounds i32, i32* %arrayinit.element198, i64 1, !dbg !2216
  %arrayinit.element200 = getelementptr inbounds i32, i32* %arrayinit.element199, i64 1, !dbg !2216
  %arrayidx201 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral187, i64 0, i64 %idxprom186, !dbg !2214
  %108 = load i32, i32* %arrayidx201, align 4, !dbg !2214
  %109 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2217
  %options202 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %109, i32 0, i32 14, !dbg !2218
  %min_partition_order203 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options202, i32 0, i32 8, !dbg !2219
  store i32 %108, i32* %min_partition_order203, align 8, !dbg !2220
  br label %if.end204, !dbg !2217

if.end204:                                        ; preds = %if.then185, %if.end181
  %110 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2221
  %options205 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %110, i32 0, i32 14, !dbg !2223
  %max_partition_order206 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options205, i32 0, i32 9, !dbg !2224
  %111 = load i32, i32* %max_partition_order206, align 4, !dbg !2224
  %cmp207 = icmp slt i32 %111, 0, !dbg !2225
  br i1 %cmp207, label %if.then208, label %if.end227, !dbg !2226

if.then208:                                       ; preds = %if.end204
  %112 = load i32, i32* %level, align 4, !dbg !2227
  %idxprom209 = sext i32 %112 to i64, !dbg !2228
  %arrayinit.begin211 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral210, i64 0, i64 0, !dbg !2229
  store i32 2, i32* %arrayinit.begin211, align 4, !dbg !2229
  %arrayinit.element212 = getelementptr inbounds i32, i32* %arrayinit.begin211, i64 1, !dbg !2229
  store i32 2, i32* %arrayinit.element212, align 4, !dbg !2229
  %arrayinit.element213 = getelementptr inbounds i32, i32* %arrayinit.element212, i64 1, !dbg !2229
  store i32 3, i32* %arrayinit.element213, align 4, !dbg !2229
  %arrayinit.element214 = getelementptr inbounds i32, i32* %arrayinit.element213, i64 1, !dbg !2229
  store i32 3, i32* %arrayinit.element214, align 4, !dbg !2229
  %arrayinit.element215 = getelementptr inbounds i32, i32* %arrayinit.element214, i64 1, !dbg !2229
  store i32 3, i32* %arrayinit.element215, align 4, !dbg !2229
  %arrayinit.element216 = getelementptr inbounds i32, i32* %arrayinit.element215, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element216, align 4, !dbg !2229
  %arrayinit.element217 = getelementptr inbounds i32, i32* %arrayinit.element216, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element217, align 4, !dbg !2229
  %arrayinit.element218 = getelementptr inbounds i32, i32* %arrayinit.element217, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element218, align 4, !dbg !2229
  %arrayinit.element219 = getelementptr inbounds i32, i32* %arrayinit.element218, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element219, align 4, !dbg !2229
  %arrayinit.element220 = getelementptr inbounds i32, i32* %arrayinit.element219, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element220, align 4, !dbg !2229
  %arrayinit.element221 = getelementptr inbounds i32, i32* %arrayinit.element220, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element221, align 4, !dbg !2229
  %arrayinit.element222 = getelementptr inbounds i32, i32* %arrayinit.element221, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element222, align 4, !dbg !2229
  %arrayinit.element223 = getelementptr inbounds i32, i32* %arrayinit.element222, i64 1, !dbg !2229
  store i32 8, i32* %arrayinit.element223, align 4, !dbg !2229
  %arrayidx224 = getelementptr inbounds [13 x i32], [13 x i32]* %.compoundliteral210, i64 0, i64 %idxprom209, !dbg !2228
  %113 = load i32, i32* %arrayidx224, align 4, !dbg !2228
  %114 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2230
  %options225 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %114, i32 0, i32 14, !dbg !2231
  %max_partition_order226 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options225, i32 0, i32 9, !dbg !2232
  store i32 %113, i32* %max_partition_order226, align 4, !dbg !2233
  br label %if.end227, !dbg !2230

if.end227:                                        ; preds = %if.then208, %if.end204
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2234
  %min_prediction_order228 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 115, !dbg !2236
  %116 = load i32, i32* %min_prediction_order228, align 8, !dbg !2236
  %cmp229 = icmp sge i32 %116, 0, !dbg !2237
  br i1 %cmp229, label %if.then230, label %if.end254, !dbg !2238

if.then230:                                       ; preds = %if.end227
  %117 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2239
  %options231 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %117, i32 0, i32 14, !dbg !2242
  %lpc_type232 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options231, i32 0, i32 2, !dbg !2243
  %118 = load i32, i32* %lpc_type232, align 8, !dbg !2243
  %cmp233 = icmp eq i32 %118, 1, !dbg !2244
  br i1 %cmp233, label %if.then234, label %if.else241, !dbg !2245

if.then234:                                       ; preds = %if.then230
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2246
  %min_prediction_order235 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 115, !dbg !2249
  %120 = load i32, i32* %min_prediction_order235, align 8, !dbg !2249
  %cmp236 = icmp sgt i32 %120, 4, !dbg !2250
  br i1 %cmp236, label %if.then237, label %if.end240, !dbg !2251

if.then237:                                       ; preds = %if.then234
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2252
  %122 = bitcast %struct.AVCodecContext* %121 to i8*, !dbg !2252
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2254
  %min_prediction_order238 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 115, !dbg !2255
  %124 = load i32, i32* %min_prediction_order238, align 8, !dbg !2255
  call void (i8*, i32, i8*, ...) @av_log(i8* %122, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.42, i32 0, i32 0), i32 %124, i32 4), !dbg !2256
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2257
  %min_prediction_order239 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %125, i32 0, i32 115, !dbg !2258
  store i32 4, i32* %min_prediction_order239, align 8, !dbg !2259
  br label %if.end240, !dbg !2260

if.end240:                                        ; preds = %if.then237, %if.then234
  br label %if.end250, !dbg !2261

if.else241:                                       ; preds = %if.then230
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2262
  %min_prediction_order242 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 115, !dbg !2265
  %127 = load i32, i32* %min_prediction_order242, align 8, !dbg !2265
  %cmp243 = icmp slt i32 %127, 1, !dbg !2266
  br i1 %cmp243, label %if.then247, label %lor.lhs.false244, !dbg !2267

lor.lhs.false244:                                 ; preds = %if.else241
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2268
  %min_prediction_order245 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %128, i32 0, i32 115, !dbg !2269
  %129 = load i32, i32* %min_prediction_order245, align 8, !dbg !2269
  %cmp246 = icmp sgt i32 %129, 32, !dbg !2270
  br i1 %cmp246, label %if.then247, label %if.end249, !dbg !2271

if.then247:                                       ; preds = %lor.lhs.false244, %if.else241
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2273
  %131 = bitcast %struct.AVCodecContext* %130 to i8*, !dbg !2273
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2275
  %min_prediction_order248 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %132, i32 0, i32 115, !dbg !2276
  %133 = load i32, i32* %min_prediction_order248, align 8, !dbg !2276
  call void (i8*, i32, i8*, ...) @av_log(i8* %131, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i32 0, i32 0), i32 %133), !dbg !2277
  store i32 -22, i32* %retval, align 4, !dbg !2278
  br label %return, !dbg !2278

if.end249:                                        ; preds = %lor.lhs.false244
  br label %if.end250

if.end250:                                        ; preds = %if.end249, %if.end240
  %134 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2279
  %min_prediction_order251 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %134, i32 0, i32 115, !dbg !2280
  %135 = load i32, i32* %min_prediction_order251, align 8, !dbg !2280
  %136 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2281
  %options252 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %136, i32 0, i32 14, !dbg !2282
  %min_prediction_order253 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options252, i32 0, i32 5, !dbg !2283
  store i32 %135, i32* %min_prediction_order253, align 4, !dbg !2284
  br label %if.end254, !dbg !2285

if.end254:                                        ; preds = %if.end250, %if.end227
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2286
  %max_prediction_order255 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %137, i32 0, i32 116, !dbg !2288
  %138 = load i32, i32* %max_prediction_order255, align 4, !dbg !2288
  %cmp256 = icmp sge i32 %138, 0, !dbg !2289
  br i1 %cmp256, label %if.then257, label %if.end281, !dbg !2290

if.then257:                                       ; preds = %if.end254
  %139 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2291
  %options258 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %139, i32 0, i32 14, !dbg !2294
  %lpc_type259 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options258, i32 0, i32 2, !dbg !2295
  %140 = load i32, i32* %lpc_type259, align 8, !dbg !2295
  %cmp260 = icmp eq i32 %140, 1, !dbg !2296
  br i1 %cmp260, label %if.then261, label %if.else268, !dbg !2297

if.then261:                                       ; preds = %if.then257
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2298
  %max_prediction_order262 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %141, i32 0, i32 116, !dbg !2301
  %142 = load i32, i32* %max_prediction_order262, align 4, !dbg !2301
  %cmp263 = icmp sgt i32 %142, 4, !dbg !2302
  br i1 %cmp263, label %if.then264, label %if.end267, !dbg !2303

if.then264:                                       ; preds = %if.then261
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2304
  %144 = bitcast %struct.AVCodecContext* %143 to i8*, !dbg !2304
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2306
  %max_prediction_order265 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %145, i32 0, i32 116, !dbg !2307
  %146 = load i32, i32* %max_prediction_order265, align 4, !dbg !2307
  call void (i8*, i32, i8*, ...) @av_log(i8* %144, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i32 0, i32 0), i32 %146, i32 4), !dbg !2308
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2309
  %max_prediction_order266 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 116, !dbg !2310
  store i32 4, i32* %max_prediction_order266, align 4, !dbg !2311
  br label %if.end267, !dbg !2312

if.end267:                                        ; preds = %if.then264, %if.then261
  br label %if.end277, !dbg !2313

if.else268:                                       ; preds = %if.then257
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2314
  %max_prediction_order269 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %148, i32 0, i32 116, !dbg !2317
  %149 = load i32, i32* %max_prediction_order269, align 4, !dbg !2317
  %cmp270 = icmp slt i32 %149, 1, !dbg !2318
  br i1 %cmp270, label %if.then274, label %lor.lhs.false271, !dbg !2319

lor.lhs.false271:                                 ; preds = %if.else268
  %150 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2320
  %max_prediction_order272 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %150, i32 0, i32 116, !dbg !2321
  %151 = load i32, i32* %max_prediction_order272, align 4, !dbg !2321
  %cmp273 = icmp sgt i32 %151, 32, !dbg !2322
  br i1 %cmp273, label %if.then274, label %if.end276, !dbg !2323

if.then274:                                       ; preds = %lor.lhs.false271, %if.else268
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2325
  %153 = bitcast %struct.AVCodecContext* %152 to i8*, !dbg !2325
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2327
  %max_prediction_order275 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %154, i32 0, i32 116, !dbg !2328
  %155 = load i32, i32* %max_prediction_order275, align 4, !dbg !2328
  call void (i8*, i32, i8*, ...) @av_log(i8* %153, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i32 0, i32 0), i32 %155), !dbg !2329
  store i32 -22, i32* %retval, align 4, !dbg !2330
  br label %return, !dbg !2330

if.end276:                                        ; preds = %lor.lhs.false271
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.end267
  %156 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2331
  %max_prediction_order278 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %156, i32 0, i32 116, !dbg !2332
  %157 = load i32, i32* %max_prediction_order278, align 4, !dbg !2332
  %158 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2333
  %options279 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %158, i32 0, i32 14, !dbg !2334
  %max_prediction_order280 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options279, i32 0, i32 6, !dbg !2335
  store i32 %157, i32* %max_prediction_order280, align 8, !dbg !2336
  br label %if.end281, !dbg !2337

if.end281:                                        ; preds = %if.end277, %if.end254
  %159 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2338
  %options282 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %159, i32 0, i32 14, !dbg !2340
  %lpc_type283 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options282, i32 0, i32 2, !dbg !2341
  %160 = load i32, i32* %lpc_type283, align 8, !dbg !2341
  %cmp284 = icmp eq i32 %160, 0, !dbg !2342
  br i1 %cmp284, label %if.then285, label %if.else290, !dbg !2343

if.then285:                                       ; preds = %if.end281
  %161 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2344
  %options286 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %161, i32 0, i32 14, !dbg !2346
  %min_prediction_order287 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options286, i32 0, i32 5, !dbg !2347
  store i32 0, i32* %min_prediction_order287, align 4, !dbg !2348
  %162 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2349
  %options288 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %162, i32 0, i32 14, !dbg !2350
  %max_prediction_order289 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options288, i32 0, i32 6, !dbg !2351
  store i32 0, i32* %max_prediction_order289, align 8, !dbg !2352
  br label %if.end314, !dbg !2353

if.else290:                                       ; preds = %if.end281
  %163 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2354
  %options291 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %163, i32 0, i32 14, !dbg !2357
  %lpc_type292 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options291, i32 0, i32 2, !dbg !2358
  %164 = load i32, i32* %lpc_type292, align 8, !dbg !2358
  %cmp293 = icmp eq i32 %164, 1, !dbg !2359
  br i1 %cmp293, label %if.then294, label %if.end313, !dbg !2354

if.then294:                                       ; preds = %if.else290
  %165 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2360
  %options295 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %165, i32 0, i32 14, !dbg !2363
  %min_prediction_order296 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options295, i32 0, i32 5, !dbg !2364
  %166 = load i32, i32* %min_prediction_order296, align 4, !dbg !2364
  %cmp297 = icmp sgt i32 %166, 4, !dbg !2365
  br i1 %cmp297, label %if.then298, label %if.end303, !dbg !2366

if.then298:                                       ; preds = %if.then294
  %167 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2367
  %168 = bitcast %struct.AVCodecContext* %167 to i8*, !dbg !2367
  %169 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2369
  %options299 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %169, i32 0, i32 14, !dbg !2370
  %min_prediction_order300 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options299, i32 0, i32 5, !dbg !2371
  %170 = load i32, i32* %min_prediction_order300, align 4, !dbg !2371
  call void (i8*, i32, i8*, ...) @av_log(i8* %168, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.42, i32 0, i32 0), i32 %170, i32 4), !dbg !2372
  %171 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2373
  %options301 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %171, i32 0, i32 14, !dbg !2374
  %min_prediction_order302 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options301, i32 0, i32 5, !dbg !2375
  store i32 4, i32* %min_prediction_order302, align 4, !dbg !2376
  br label %if.end303, !dbg !2377

if.end303:                                        ; preds = %if.then298, %if.then294
  %172 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2378
  %options304 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %172, i32 0, i32 14, !dbg !2380
  %max_prediction_order305 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options304, i32 0, i32 6, !dbg !2381
  %173 = load i32, i32* %max_prediction_order305, align 8, !dbg !2381
  %cmp306 = icmp sgt i32 %173, 4, !dbg !2382
  br i1 %cmp306, label %if.then307, label %if.end312, !dbg !2383

if.then307:                                       ; preds = %if.end303
  %174 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2384
  %175 = bitcast %struct.AVCodecContext* %174 to i8*, !dbg !2384
  %176 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2386
  %options308 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %176, i32 0, i32 14, !dbg !2387
  %max_prediction_order309 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options308, i32 0, i32 6, !dbg !2388
  %177 = load i32, i32* %max_prediction_order309, align 8, !dbg !2388
  call void (i8*, i32, i8*, ...) @av_log(i8* %175, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i32 0, i32 0), i32 %177, i32 4), !dbg !2389
  %178 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2390
  %options310 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %178, i32 0, i32 14, !dbg !2391
  %max_prediction_order311 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options310, i32 0, i32 6, !dbg !2392
  store i32 4, i32* %max_prediction_order311, align 8, !dbg !2393
  br label %if.end312, !dbg !2394

if.end312:                                        ; preds = %if.then307, %if.end303
  br label %if.end313, !dbg !2395

if.end313:                                        ; preds = %if.end312, %if.else290
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %if.then285
  %179 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2396
  %options315 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %179, i32 0, i32 14, !dbg !2398
  %max_prediction_order316 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options315, i32 0, i32 6, !dbg !2399
  %180 = load i32, i32* %max_prediction_order316, align 8, !dbg !2399
  %181 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2400
  %options317 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %181, i32 0, i32 14, !dbg !2401
  %min_prediction_order318 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options317, i32 0, i32 5, !dbg !2402
  %182 = load i32, i32* %min_prediction_order318, align 4, !dbg !2402
  %cmp319 = icmp slt i32 %180, %182, !dbg !2403
  br i1 %cmp319, label %if.then320, label %if.end325, !dbg !2404

if.then320:                                       ; preds = %if.end314
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2405
  %184 = bitcast %struct.AVCodecContext* %183 to i8*, !dbg !2405
  %185 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2407
  %options321 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %185, i32 0, i32 14, !dbg !2408
  %min_prediction_order322 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options321, i32 0, i32 5, !dbg !2409
  %186 = load i32, i32* %min_prediction_order322, align 4, !dbg !2409
  %187 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2410
  %options323 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %187, i32 0, i32 14, !dbg !2411
  %max_prediction_order324 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options323, i32 0, i32 6, !dbg !2412
  %188 = load i32, i32* %max_prediction_order324, align 8, !dbg !2412
  call void (i8*, i32, i8*, ...) @av_log(i8* %184, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i32 0, i32 0), i32 %186, i32 %188), !dbg !2413
  store i32 -22, i32* %retval, align 4, !dbg !2414
  br label %return, !dbg !2414

if.end325:                                        ; preds = %if.end314
  %189 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2415
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %189, i32 0, i32 85, !dbg !2417
  %190 = load i32, i32* %frame_size, align 4, !dbg !2417
  %cmp326 = icmp sgt i32 %190, 0, !dbg !2418
  br i1 %cmp326, label %if.then327, label %if.else336, !dbg !2419

if.then327:                                       ; preds = %if.end325
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2420
  %frame_size328 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 85, !dbg !2423
  %192 = load i32, i32* %frame_size328, align 4, !dbg !2423
  %cmp329 = icmp slt i32 %192, 16, !dbg !2424
  br i1 %cmp329, label %if.then333, label %lor.lhs.false330, !dbg !2425

lor.lhs.false330:                                 ; preds = %if.then327
  %193 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2426
  %frame_size331 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %193, i32 0, i32 85, !dbg !2427
  %194 = load i32, i32* %frame_size331, align 4, !dbg !2427
  %cmp332 = icmp sgt i32 %194, 65535, !dbg !2428
  br i1 %cmp332, label %if.then333, label %if.end335, !dbg !2429

if.then333:                                       ; preds = %lor.lhs.false330, %if.then327
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2431
  %196 = bitcast %struct.AVCodecContext* %195 to i8*, !dbg !2431
  %197 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2433
  %frame_size334 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %197, i32 0, i32 85, !dbg !2434
  %198 = load i32, i32* %frame_size334, align 4, !dbg !2434
  call void (i8*, i32, i8*, ...) @av_log(i8* %196, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0), i32 %198), !dbg !2435
  store i32 -22, i32* %retval, align 4, !dbg !2436
  br label %return, !dbg !2436

if.end335:                                        ; preds = %lor.lhs.false330
  br label %if.end342, !dbg !2437

if.else336:                                       ; preds = %if.end325
  %199 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2438
  %samplerate337 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %199, i32 0, i32 3, !dbg !2440
  %200 = load i32, i32* %samplerate337, align 4, !dbg !2440
  %201 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2441
  %options338 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %201, i32 0, i32 14, !dbg !2442
  %block_time_ms339 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options338, i32 0, i32 1, !dbg !2443
  %202 = load i32, i32* %block_time_ms339, align 4, !dbg !2443
  %call = call i32 @select_blocksize(i32 %200, i32 %202), !dbg !2444
  %203 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2445
  %avctx340 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %203, i32 0, i32 15, !dbg !2446
  %204 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx340, align 32, !dbg !2446
  %frame_size341 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %204, i32 0, i32 85, !dbg !2447
  store i32 %call, i32* %frame_size341, align 4, !dbg !2448
  br label %if.end342

if.end342:                                        ; preds = %if.else336, %if.end335
  %205 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2449
  %avctx343 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %205, i32 0, i32 15, !dbg !2450
  %206 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx343, align 32, !dbg !2450
  %frame_size344 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %206, i32 0, i32 85, !dbg !2451
  %207 = load i32, i32* %frame_size344, align 4, !dbg !2451
  %208 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2452
  %max_blocksize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %208, i32 0, i32 6, !dbg !2453
  store i32 %207, i32* %max_blocksize, align 4, !dbg !2454
  %209 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2455
  %avctx345 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %209, i32 0, i32 15, !dbg !2456
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx345, align 32, !dbg !2456
  %frame_size346 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %210, i32 0, i32 85, !dbg !2457
  %211 = load i32, i32* %frame_size346, align 4, !dbg !2457
  %212 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2458
  %channels347 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %212, i32 0, i32 2, !dbg !2459
  %213 = load i32, i32* %channels347, align 16, !dbg !2459
  %214 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2460
  %avctx348 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %214, i32 0, i32 15, !dbg !2461
  %215 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx348, align 32, !dbg !2461
  %bits_per_raw_sample349 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %215, i32 0, i32 143, !dbg !2462
  %216 = load i32, i32* %bits_per_raw_sample349, align 4, !dbg !2462
  %call350 = call i32 @ff_flac_get_max_frame_size(i32 %211, i32 %213, i32 %216), !dbg !2463
  %217 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2464
  %max_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %217, i32 0, i32 8, !dbg !2465
  store i32 %call350, i32* %max_framesize, align 4, !dbg !2466
  %call351 = call %struct.AVMD5* @av_md5_alloc(), !dbg !2467
  %218 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2468
  %md5ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %218, i32 0, i32 18, !dbg !2469
  store %struct.AVMD5* %call351, %struct.AVMD5** %md5ctx, align 32, !dbg !2470
  %219 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2471
  %md5ctx352 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %219, i32 0, i32 18, !dbg !2473
  %220 = load %struct.AVMD5*, %struct.AVMD5** %md5ctx352, align 32, !dbg !2473
  %tobool = icmp ne %struct.AVMD5* %220, null, !dbg !2471
  br i1 %tobool, label %if.end354, label %if.then353, !dbg !2474

if.then353:                                       ; preds = %if.end342
  store i32 -12, i32* %retval, align 4, !dbg !2475
  br label %return, !dbg !2475

if.end354:                                        ; preds = %if.end342
  %221 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2476
  %md5ctx355 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %221, i32 0, i32 18, !dbg !2477
  %222 = load %struct.AVMD5*, %struct.AVMD5** %md5ctx355, align 32, !dbg !2477
  call void @av_md5_init(%struct.AVMD5* %222), !dbg !2478
  %call356 = call noalias i8* @av_malloc(i64 34), !dbg !2479
  store i8* %call356, i8** %streaminfo, align 8, !dbg !2480
  %223 = load i8*, i8** %streaminfo, align 8, !dbg !2481
  %tobool357 = icmp ne i8* %223, null, !dbg !2481
  br i1 %tobool357, label %if.end359, label %if.then358, !dbg !2483

if.then358:                                       ; preds = %if.end354
  store i32 -12, i32* %retval, align 4, !dbg !2484
  br label %return, !dbg !2484

if.end359:                                        ; preds = %if.end354
  %224 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2485
  %225 = load i8*, i8** %streaminfo, align 8, !dbg !2486
  call void @write_streaminfo(%struct.FlacEncodeContext* %224, i8* %225), !dbg !2487
  %226 = load i8*, i8** %streaminfo, align 8, !dbg !2488
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2489
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 15, !dbg !2490
  store i8* %226, i8** %extradata, align 8, !dbg !2491
  %228 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2492
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %228, i32 0, i32 16, !dbg !2493
  store i32 34, i32* %extradata_size, align 8, !dbg !2494
  %229 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2495
  %frame_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %229, i32 0, i32 10, !dbg !2496
  store i32 0, i32* %frame_count, align 4, !dbg !2497
  %230 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2498
  %max_framesize360 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %230, i32 0, i32 8, !dbg !2499
  %231 = load i32, i32* %max_framesize360, align 4, !dbg !2499
  %232 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2500
  %min_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %232, i32 0, i32 7, !dbg !2501
  store i32 %231, i32* %min_framesize, align 8, !dbg !2502
  %233 = load i32, i32* %channels, align 4, !dbg !2503
  %cmp361 = icmp eq i32 %233, 3, !dbg !2505
  br i1 %cmp361, label %land.lhs.true362, label %lor.lhs.false364, !dbg !2506

land.lhs.true362:                                 ; preds = %if.end359
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2507
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %234, i32 0, i32 89, !dbg !2508
  %235 = load i64, i64* %channel_layout, align 8, !dbg !2508
  %cmp363 = icmp ne i64 %235, 7, !dbg !2509
  br i1 %cmp363, label %if.then388, label %lor.lhs.false364, !dbg !2510

lor.lhs.false364:                                 ; preds = %land.lhs.true362, %if.end359
  %236 = load i32, i32* %channels, align 4, !dbg !2511
  %cmp365 = icmp eq i32 %236, 4, !dbg !2512
  br i1 %cmp365, label %land.lhs.true366, label %lor.lhs.false372, !dbg !2513

land.lhs.true366:                                 ; preds = %lor.lhs.false364
  %237 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2514
  %channel_layout367 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %237, i32 0, i32 89, !dbg !2515
  %238 = load i64, i64* %channel_layout367, align 8, !dbg !2515
  %cmp368 = icmp ne i64 %238, 1539, !dbg !2516
  br i1 %cmp368, label %land.lhs.true369, label %lor.lhs.false372, !dbg !2517

land.lhs.true369:                                 ; preds = %land.lhs.true366
  %239 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2518
  %channel_layout370 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %239, i32 0, i32 89, !dbg !2519
  %240 = load i64, i64* %channel_layout370, align 8, !dbg !2519
  %cmp371 = icmp ne i64 %240, 51, !dbg !2520
  br i1 %cmp371, label %if.then388, label %lor.lhs.false372, !dbg !2521

lor.lhs.false372:                                 ; preds = %land.lhs.true369, %land.lhs.true366, %lor.lhs.false364
  %241 = load i32, i32* %channels, align 4, !dbg !2522
  %cmp373 = icmp eq i32 %241, 5, !dbg !2523
  br i1 %cmp373, label %land.lhs.true374, label %lor.lhs.false380, !dbg !2524

land.lhs.true374:                                 ; preds = %lor.lhs.false372
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2525
  %channel_layout375 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %242, i32 0, i32 89, !dbg !2526
  %243 = load i64, i64* %channel_layout375, align 8, !dbg !2526
  %cmp376 = icmp ne i64 %243, 1543, !dbg !2527
  br i1 %cmp376, label %land.lhs.true377, label %lor.lhs.false380, !dbg !2528

land.lhs.true377:                                 ; preds = %land.lhs.true374
  %244 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2529
  %channel_layout378 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %244, i32 0, i32 89, !dbg !2530
  %245 = load i64, i64* %channel_layout378, align 8, !dbg !2530
  %cmp379 = icmp ne i64 %245, 55, !dbg !2531
  br i1 %cmp379, label %if.then388, label %lor.lhs.false380, !dbg !2532

lor.lhs.false380:                                 ; preds = %land.lhs.true377, %land.lhs.true374, %lor.lhs.false372
  %246 = load i32, i32* %channels, align 4, !dbg !2533
  %cmp381 = icmp eq i32 %246, 6, !dbg !2534
  br i1 %cmp381, label %land.lhs.true382, label %if.end394, !dbg !2535

land.lhs.true382:                                 ; preds = %lor.lhs.false380
  %247 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2536
  %channel_layout383 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %247, i32 0, i32 89, !dbg !2537
  %248 = load i64, i64* %channel_layout383, align 8, !dbg !2537
  %cmp384 = icmp ne i64 %248, 1551, !dbg !2538
  br i1 %cmp384, label %land.lhs.true385, label %if.end394, !dbg !2539

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %249 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2540
  %channel_layout386 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %249, i32 0, i32 89, !dbg !2541
  %250 = load i64, i64* %channel_layout386, align 8, !dbg !2541
  %cmp387 = icmp ne i64 %250, 63, !dbg !2542
  br i1 %cmp387, label %if.then388, label %if.end394, !dbg !2543

if.then388:                                       ; preds = %land.lhs.true385, %land.lhs.true377, %land.lhs.true369, %land.lhs.true362
  %251 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2545
  %channel_layout389 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %251, i32 0, i32 89, !dbg !2548
  %252 = load i64, i64* %channel_layout389, align 8, !dbg !2548
  %tobool390 = icmp ne i64 %252, 0, !dbg !2545
  br i1 %tobool390, label %if.then391, label %if.else392, !dbg !2549

if.then391:                                       ; preds = %if.then388
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2550
  %254 = bitcast %struct.AVCodecContext* %253 to i8*, !dbg !2550
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 16, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.48, i32 0, i32 0)), !dbg !2552
  br label %if.end393, !dbg !2553

if.else392:                                       ; preds = %if.then388
  %255 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2554
  %256 = bitcast %struct.AVCodecContext* %255 to i8*, !dbg !2554
  %257 = load i32, i32* %channels, align 4, !dbg !2556
  call void (i8*, i32, i8*, ...) @av_log(i8* %256, i32 24, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.49, i32 0, i32 0), i32 %257), !dbg !2557
  br label %if.end393

if.end393:                                        ; preds = %if.else392, %if.then391
  br label %if.end394, !dbg !2558

if.end394:                                        ; preds = %if.end393, %land.lhs.true385, %land.lhs.true382, %lor.lhs.false380
  %258 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2559
  %lpc_ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %258, i32 0, i32 17, !dbg !2560
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2561
  %frame_size395 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %259, i32 0, i32 85, !dbg !2562
  %260 = load i32, i32* %frame_size395, align 4, !dbg !2562
  %261 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2563
  %options396 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %261, i32 0, i32 14, !dbg !2564
  %max_prediction_order397 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options396, i32 0, i32 6, !dbg !2565
  %262 = load i32, i32* %max_prediction_order397, align 8, !dbg !2565
  %call398 = call i32 @ff_lpc_init(%struct.LPCContext* %lpc_ctx, i32 %260, i32 %262, i32 2), !dbg !2566
  store i32 %call398, i32* %ret, align 4, !dbg !2567
  %263 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2568
  %bdsp = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %263, i32 0, i32 21, !dbg !2569
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !2570
  %264 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2571
  %flac_dsp = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %264, i32 0, i32 22, !dbg !2572
  %265 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2573
  %sample_fmt399 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %265, i32 0, i32 84, !dbg !2574
  %266 = load i32, i32* %sample_fmt399, align 8, !dbg !2574
  %267 = load i32, i32* %channels, align 4, !dbg !2575
  %268 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2576
  %bits_per_raw_sample400 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %268, i32 0, i32 143, !dbg !2577
  %269 = load i32, i32* %bits_per_raw_sample400, align 4, !dbg !2577
  call void @ff_flacdsp_init(%struct.FLACDSPContext* %flac_dsp, i32 %266, i32 %267, i32 %269), !dbg !2578
  %270 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2579
  call void @dprint_compression_options(%struct.FlacEncodeContext* %270), !dbg !2580
  %271 = load i32, i32* %ret, align 4, !dbg !2581
  store i32 %271, i32* %retval, align 4, !dbg !2582
  br label %return, !dbg !2582

return:                                           ; preds = %if.end394, %if.then358, %if.then353, %if.then333, %if.then320, %if.then274, %if.then247, %if.then176, %if.then67, %if.else50, %if.then13, %if.then9
  %272 = load i32, i32* %retval, align 4, !dbg !2583
  ret i32 %272, !dbg !2583
}

; Function Attrs: nounwind uwtable
define internal i32 @flac_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet_ptr) #1 !dbg !2584 {
entry:
  %retval.i = alloca i64, align 8
  %avctx.addr.i = alloca %struct.AVCodecContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr.i, metadata !2585, metadata !1730), !dbg !2589
  %samples.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %samples.addr.i, metadata !2591, metadata !1730), !dbg !2592
  %.compoundliteral.i = alloca %struct.AVRational, align 4
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet_ptr.addr = alloca i32*, align 8
  %s = alloca %struct.FlacEncodeContext*, align 8
  %frame_bytes = alloca i32, align 4
  %out_bytes = alloca i32, align 4
  %ret = alloca i32, align 4
  %side_data = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2593, metadata !1730), !dbg !2594
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2595, metadata !1730), !dbg !2596
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2597, metadata !1730), !dbg !2598
  store i32* %got_packet_ptr, i32** %got_packet_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet_ptr.addr, metadata !2599, metadata !1730), !dbg !2600
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s, metadata !2601, metadata !1730), !dbg !2602
  call void @llvm.dbg.declare(metadata i32* %frame_bytes, metadata !2603, metadata !1730), !dbg !2604
  call void @llvm.dbg.declare(metadata i32* %out_bytes, metadata !2605, metadata !1730), !dbg !2606
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2607, metadata !1730), !dbg !2608
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2609
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2610
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2610
  %2 = bitcast i8* %1 to %struct.FlacEncodeContext*, !dbg !2609
  store %struct.FlacEncodeContext* %2, %struct.FlacEncodeContext** %s, align 8, !dbg !2611
  %3 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2612
  %tobool = icmp ne %struct.AVFrame* %3, null, !dbg !2612
  br i1 %tobool, label %if.end10, label %if.then, !dbg !2614

if.then:                                          ; preds = %entry
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2615
  %max_encoded_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %4, i32 0, i32 9, !dbg !2617
  %5 = load i32, i32* %max_encoded_framesize, align 16, !dbg !2617
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2618
  %max_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 8, !dbg !2619
  store i32 %5, i32* %max_framesize, align 4, !dbg !2620
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2621
  %md5ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %7, i32 0, i32 18, !dbg !2622
  %8 = load %struct.AVMD5*, %struct.AVMD5** %md5ctx, align 32, !dbg !2622
  %9 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2623
  %md5sum = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %9, i32 0, i32 12, !dbg !2624
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %md5sum, i32 0, i32 0, !dbg !2623
  call void @av_md5_final(%struct.AVMD5* %8, i8* %arraydecay), !dbg !2625
  %10 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2626
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2627
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 15, !dbg !2628
  %12 = load i8*, i8** %extradata, align 8, !dbg !2628
  call void @write_streaminfo(%struct.FlacEncodeContext* %10, i8* %12), !dbg !2629
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2630
  %side_data_only_packets = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 161, !dbg !2632
  %14 = load i32, i32* %side_data_only_packets, align 8, !dbg !2632
  %tobool1 = icmp ne i32 %14, 0, !dbg !2630
  br i1 %tobool1, label %land.lhs.true, label %if.end9, !dbg !2633

land.lhs.true:                                    ; preds = %if.then
  %15 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2634
  %flushed = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %15, i32 0, i32 23, !dbg !2636
  %16 = load i32, i32* %flushed, align 8, !dbg !2636
  %tobool2 = icmp ne i32 %16, 0, !dbg !2634
  br i1 %tobool2, label %if.end9, label %if.then3, !dbg !2637

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %side_data, metadata !2638, metadata !1730), !dbg !2640
  %17 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2641
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2642
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 16, !dbg !2643
  %19 = load i32, i32* %extradata_size, align 8, !dbg !2643
  %call = call i8* @av_packet_new_side_data(%struct.AVPacket* %17, i32 1, i32 %19), !dbg !2644
  store i8* %call, i8** %side_data, align 8, !dbg !2640
  %20 = load i8*, i8** %side_data, align 8, !dbg !2645
  %tobool4 = icmp ne i8* %20, null, !dbg !2645
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !2647

if.then5:                                         ; preds = %if.then3
  store i32 -12, i32* %retval, align 4, !dbg !2648
  br label %return, !dbg !2648

if.end:                                           ; preds = %if.then3
  %21 = load i8*, i8** %side_data, align 8, !dbg !2649
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2650
  %extradata6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 15, !dbg !2651
  %23 = load i8*, i8** %extradata6, align 8, !dbg !2651
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2652
  %extradata_size7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 16, !dbg !2653
  %25 = load i32, i32* %extradata_size7, align 8, !dbg !2653
  %conv = sext i32 %25 to i64, !dbg !2652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %23, i64 %conv, i32 1, i1 false), !dbg !2654
  %26 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2655
  %next_pts = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %26, i32 0, i32 24, !dbg !2656
  %27 = load i64, i64* %next_pts, align 16, !dbg !2656
  %28 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2657
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %28, i32 0, i32 1, !dbg !2658
  store i64 %27, i64* %pts, align 8, !dbg !2659
  %29 = load i32*, i32** %got_packet_ptr.addr, align 8, !dbg !2660
  store i32 1, i32* %29, align 4, !dbg !2661
  %30 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2662
  %flushed8 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %30, i32 0, i32 23, !dbg !2663
  store i32 1, i32* %flushed8, align 8, !dbg !2664
  br label %if.end9, !dbg !2665

if.end9:                                          ; preds = %if.end, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !2666
  br label %return, !dbg !2666

if.end10:                                         ; preds = %entry
  %31 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2667
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 5, !dbg !2669
  %32 = load i32, i32* %nb_samples, align 8, !dbg !2669
  %33 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2670
  %frame11 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %33, i32 0, i32 13, !dbg !2671
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame11, i32 0, i32 1, !dbg !2672
  %34 = load i32, i32* %blocksize, align 16, !dbg !2672
  %cmp = icmp slt i32 %32, %34, !dbg !2673
  br i1 %cmp, label %if.then13, label %if.end17, !dbg !2674

if.then13:                                        ; preds = %if.end10
  %35 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2675
  %nb_samples14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 5, !dbg !2677
  %36 = load i32, i32* %nb_samples14, align 8, !dbg !2677
  %37 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2678
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %37, i32 0, i32 2, !dbg !2679
  %38 = load i32, i32* %channels, align 16, !dbg !2679
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2680
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 143, !dbg !2681
  %40 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !2681
  %call15 = call i32 @ff_flac_get_max_frame_size(i32 %36, i32 %38, i32 %40), !dbg !2682
  %41 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2683
  %max_framesize16 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %41, i32 0, i32 8, !dbg !2684
  store i32 %call15, i32* %max_framesize16, align 4, !dbg !2685
  br label %if.end17, !dbg !2686

if.end17:                                         ; preds = %if.then13, %if.end10
  %42 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2687
  %43 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2688
  %nb_samples18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 5, !dbg !2689
  %44 = load i32, i32* %nb_samples18, align 8, !dbg !2689
  call void @init_frame(%struct.FlacEncodeContext* %42, i32 %44), !dbg !2690
  %45 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2691
  %46 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2692
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 0, !dbg !2693
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !2692
  %47 = load i8*, i8** %arrayidx, align 8, !dbg !2692
  call void @copy_samples(%struct.FlacEncodeContext* %45, i8* %47), !dbg !2694
  %48 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2695
  call void @channel_decorrelation(%struct.FlacEncodeContext* %48), !dbg !2696
  %49 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2697
  call void @remove_wasted_bits(%struct.FlacEncodeContext* %49), !dbg !2698
  %50 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2699
  %call19 = call i32 @encode_frame(%struct.FlacEncodeContext* %50), !dbg !2700
  store i32 %call19, i32* %frame_bytes, align 4, !dbg !2701
  %51 = load i32, i32* %frame_bytes, align 4, !dbg !2702
  %cmp20 = icmp slt i32 %51, 0, !dbg !2704
  br i1 %cmp20, label %if.then25, label %lor.lhs.false, !dbg !2705

lor.lhs.false:                                    ; preds = %if.end17
  %52 = load i32, i32* %frame_bytes, align 4, !dbg !2706
  %53 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2708
  %max_framesize22 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %53, i32 0, i32 8, !dbg !2709
  %54 = load i32, i32* %max_framesize22, align 4, !dbg !2709
  %cmp23 = icmp sgt i32 %52, %54, !dbg !2710
  br i1 %cmp23, label %if.then25, label %if.end32, !dbg !2711

if.then25:                                        ; preds = %lor.lhs.false, %if.end17
  %55 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2712
  %frame26 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %55, i32 0, i32 13, !dbg !2714
  %verbatim_only = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame26, i32 0, i32 5, !dbg !2715
  store i32 1, i32* %verbatim_only, align 4, !dbg !2716
  %56 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2717
  %call27 = call i32 @encode_frame(%struct.FlacEncodeContext* %56), !dbg !2718
  store i32 %call27, i32* %frame_bytes, align 4, !dbg !2719
  %57 = load i32, i32* %frame_bytes, align 4, !dbg !2720
  %cmp28 = icmp slt i32 %57, 0, !dbg !2722
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2723

if.then30:                                        ; preds = %if.then25
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2724
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !2724
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0)), !dbg !2726
  %60 = load i32, i32* %frame_bytes, align 4, !dbg !2727
  store i32 %60, i32* %retval, align 4, !dbg !2728
  br label %return, !dbg !2728

if.end31:                                         ; preds = %if.then25
  br label %if.end32, !dbg !2729

if.end32:                                         ; preds = %if.end31, %lor.lhs.false
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2730
  %62 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2732
  %63 = load i32, i32* %frame_bytes, align 4, !dbg !2733
  %conv33 = sext i32 %63 to i64, !dbg !2733
  %call34 = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %61, %struct.AVPacket* %62, i64 %conv33, i64 0), !dbg !2734
  store i32 %call34, i32* %ret, align 4, !dbg !2735
  %cmp35 = icmp slt i32 %call34, 0, !dbg !2736
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !2737

if.then37:                                        ; preds = %if.end32
  %64 = load i32, i32* %ret, align 4, !dbg !2738
  store i32 %64, i32* %retval, align 4, !dbg !2739
  br label %return, !dbg !2739

if.end38:                                         ; preds = %if.end32
  %65 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2740
  %66 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2741
  %call39 = call i32 @write_frame(%struct.FlacEncodeContext* %65, %struct.AVPacket* %66), !dbg !2742
  store i32 %call39, i32* %out_bytes, align 4, !dbg !2743
  %67 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2744
  %frame_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %67, i32 0, i32 10, !dbg !2745
  %68 = load i32, i32* %frame_count, align 4, !dbg !2746
  %inc = add i32 %68, 1, !dbg !2746
  store i32 %inc, i32* %frame_count, align 4, !dbg !2746
  %69 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2747
  %nb_samples40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %69, i32 0, i32 5, !dbg !2748
  %70 = load i32, i32* %nb_samples40, align 8, !dbg !2748
  %conv41 = sext i32 %70 to i64, !dbg !2747
  %71 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2749
  %sample_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %71, i32 0, i32 11, !dbg !2750
  %72 = load i64, i64* %sample_count, align 8, !dbg !2751
  %add = add i64 %72, %conv41, !dbg !2751
  store i64 %add, i64* %sample_count, align 8, !dbg !2751
  %73 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2752
  %74 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2754
  %data42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %74, i32 0, i32 0, !dbg !2755
  %arrayidx43 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data42, i64 0, i64 0, !dbg !2754
  %75 = load i8*, i8** %arrayidx43, align 8, !dbg !2754
  %call44 = call i32 @update_md5_sum(%struct.FlacEncodeContext* %73, i8* %75), !dbg !2756
  store i32 %call44, i32* %ret, align 4, !dbg !2757
  %cmp45 = icmp slt i32 %call44, 0, !dbg !2758
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !2759

if.then47:                                        ; preds = %if.end38
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2760
  %77 = bitcast %struct.AVCodecContext* %76 to i8*, !dbg !2760
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i32 0, i32 0)), !dbg !2762
  %78 = load i32, i32* %ret, align 4, !dbg !2763
  store i32 %78, i32* %retval, align 4, !dbg !2764
  br label %return, !dbg !2764

if.end48:                                         ; preds = %if.end38
  %79 = load i32, i32* %out_bytes, align 4, !dbg !2765
  %80 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2767
  %max_encoded_framesize49 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %80, i32 0, i32 9, !dbg !2768
  %81 = load i32, i32* %max_encoded_framesize49, align 16, !dbg !2768
  %cmp50 = icmp sgt i32 %79, %81, !dbg !2769
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !2770

if.then52:                                        ; preds = %if.end48
  %82 = load i32, i32* %out_bytes, align 4, !dbg !2771
  %83 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2772
  %max_encoded_framesize53 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %83, i32 0, i32 9, !dbg !2773
  store i32 %82, i32* %max_encoded_framesize53, align 16, !dbg !2774
  br label %if.end54, !dbg !2772

if.end54:                                         ; preds = %if.then52, %if.end48
  %84 = load i32, i32* %out_bytes, align 4, !dbg !2775
  %85 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2777
  %min_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %85, i32 0, i32 7, !dbg !2778
  %86 = load i32, i32* %min_framesize, align 8, !dbg !2778
  %cmp55 = icmp slt i32 %84, %86, !dbg !2779
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !2780

if.then57:                                        ; preds = %if.end54
  %87 = load i32, i32* %out_bytes, align 4, !dbg !2781
  %88 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2782
  %min_framesize58 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %88, i32 0, i32 7, !dbg !2783
  store i32 %87, i32* %min_framesize58, align 8, !dbg !2784
  br label %if.end59, !dbg !2782

if.end59:                                         ; preds = %if.then57, %if.end54
  %89 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2785
  %pts60 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %89, i32 0, i32 10, !dbg !2786
  %90 = load i64, i64* %pts60, align 8, !dbg !2786
  %91 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2787
  %pts61 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %91, i32 0, i32 1, !dbg !2788
  store i64 %90, i64* %pts61, align 8, !dbg !2789
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2790
  %93 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2791
  %nb_samples62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %93, i32 0, i32 5, !dbg !2792
  %94 = load i32, i32* %nb_samples62, align 8, !dbg !2792
  %conv63 = sext i32 %94 to i64, !dbg !2791
  store %struct.AVCodecContext* %92, %struct.AVCodecContext** %avctx.addr.i, align 8, !dbg !2793
  store i64 %conv63, i64* %samples.addr.i, align 8, !dbg !2793
  %95 = load i64, i64* %samples.addr.i, align 8, !dbg !2794
  %cmp.i = icmp eq i64 %95, -9223372036854775808, !dbg !2796
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !2797

if.then.i:                                        ; preds = %if.end59
  store i64 -9223372036854775808, i64* %retval.i, align 8, !dbg !2798
  br label %ff_samples_to_time_base.exit, !dbg !2798

if.end.i:                                         ; preds = %if.end59
  %96 = load i64, i64* %samples.addr.i, align 8, !dbg !2799
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral.i, i32 0, i32 0, !dbg !2800
  store i32 1, i32* %num.i, align 4, !dbg !2800
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral.i, i32 0, i32 1, !dbg !2800
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr.i, align 8, !dbg !2801
  %sample_rate.i = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %97, i32 0, i32 82, !dbg !2802
  %98 = load i32, i32* %sample_rate.i, align 8, !dbg !2802
  store i32 %98, i32* %den.i, align 4, !dbg !2800
  %99 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr.i, align 8, !dbg !2803
  %time_base.i = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %99, i32 0, i32 17, !dbg !2804
  %100 = bitcast %struct.AVRational* %.compoundliteral.i to i64*, !dbg !2805
  %101 = load i64, i64* %100, align 4, !dbg !2805
  %102 = bitcast %struct.AVRational* %time_base.i to i64*, !dbg !2805
  %103 = load i64, i64* %102, align 4, !dbg !2805
  %call.i = call i64 @av_rescale_q(i64 %96, i64 %101, i64 %103) #3, !dbg !2805
  store i64 %call.i, i64* %retval.i, align 8, !dbg !2806
  br label %ff_samples_to_time_base.exit, !dbg !2806

ff_samples_to_time_base.exit:                     ; preds = %if.then.i, %if.end.i
  %104 = load i64, i64* %retval.i, align 8, !dbg !2807
  %105 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2808
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %105, i32 0, i32 9, !dbg !2809
  store i64 %104, i64* %duration, align 8, !dbg !2810
  %106 = load i32, i32* %out_bytes, align 4, !dbg !2811
  %107 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2812
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %107, i32 0, i32 4, !dbg !2813
  store i32 %106, i32* %size, align 8, !dbg !2814
  %108 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2815
  %pts65 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %108, i32 0, i32 1, !dbg !2816
  %109 = load i64, i64* %pts65, align 8, !dbg !2816
  %110 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2817
  %duration66 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %110, i32 0, i32 9, !dbg !2818
  %111 = load i64, i64* %duration66, align 8, !dbg !2818
  %add67 = add nsw i64 %109, %111, !dbg !2819
  %112 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2820
  %next_pts68 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %112, i32 0, i32 24, !dbg !2821
  store i64 %add67, i64* %next_pts68, align 16, !dbg !2822
  %113 = load i32*, i32** %got_packet_ptr.addr, align 8, !dbg !2823
  store i32 1, i32* %113, align 4, !dbg !2824
  store i32 0, i32* %retval, align 4, !dbg !2825
  br label %return, !dbg !2825

return:                                           ; preds = %ff_samples_to_time_base.exit, %if.then47, %if.then37, %if.then30, %if.end9, %if.then5
  %114 = load i32, i32* %retval, align 4, !dbg !2826
  ret i32 %114, !dbg !2826
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @flac_encode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2827 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.FlacEncodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2828, metadata !1730), !dbg !2829
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2830
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2832
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2832
  %tobool = icmp ne i8* %1, null, !dbg !2830
  br i1 %tobool, label %if.then, label %if.end, !dbg !2833

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s, metadata !2834, metadata !1730), !dbg !2836
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2837
  %priv_data1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 6, !dbg !2838
  %3 = load i8*, i8** %priv_data1, align 8, !dbg !2838
  %4 = bitcast i8* %3 to %struct.FlacEncodeContext*, !dbg !2837
  store %struct.FlacEncodeContext* %4, %struct.FlacEncodeContext** %s, align 8, !dbg !2836
  %5 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2839
  %md5ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %5, i32 0, i32 18, !dbg !2840
  %6 = bitcast %struct.AVMD5** %md5ctx to i8*, !dbg !2841
  call void @av_freep(i8* %6), !dbg !2842
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2843
  %md5_buffer = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %7, i32 0, i32 19, !dbg !2844
  %8 = bitcast i8** %md5_buffer to i8*, !dbg !2845
  call void @av_freep(i8* %8), !dbg !2846
  %9 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s, align 8, !dbg !2847
  %lpc_ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %9, i32 0, i32 17, !dbg !2848
  call void @ff_lpc_end(%struct.LPCContext* %lpc_ctx), !dbg !2849
  br label %if.end, !dbg !2850

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2851
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 15, !dbg !2852
  %11 = bitcast i8** %extradata to i8*, !dbg !2853
  call void @av_freep(i8* %11), !dbg !2854
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2855
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 16, !dbg !2856
  store i32 0, i32* %extradata_size, align 8, !dbg !2857
  ret i32 0, !dbg !2858
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @select_blocksize(i32 %samplerate, i32 %block_time_ms) #1 !dbg !2859 {
entry:
  %samplerate.addr = alloca i32, align 4
  %block_time_ms.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %target = alloca i32, align 4
  %blocksize = alloca i32, align 4
  store i32 %samplerate, i32* %samplerate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samplerate.addr, metadata !2862, metadata !1730), !dbg !2863
  store i32 %block_time_ms, i32* %block_time_ms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block_time_ms.addr, metadata !2864, metadata !1730), !dbg !2865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2866, metadata !1730), !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %target, metadata !2868, metadata !1730), !dbg !2869
  call void @llvm.dbg.declare(metadata i32* %blocksize, metadata !2870, metadata !1730), !dbg !2871
  br label %do.body, !dbg !2872, !llvm.loop !2873

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %samplerate.addr, align 4, !dbg !2874
  %cmp = icmp sgt i32 %0, 0, !dbg !2878
  br i1 %cmp, label %if.end, label %if.then, !dbg !2879

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i32 0, i32 0), i32 168), !dbg !2880
  call void @abort() #9, !dbg !2883
  unreachable, !dbg !2885

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !2886

do.end:                                           ; preds = %if.end
  %1 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 1), align 4, !dbg !2888
  store i32 %1, i32* %blocksize, align 4, !dbg !2889
  %2 = load i32, i32* %samplerate.addr, align 4, !dbg !2890
  %3 = load i32, i32* %block_time_ms.addr, align 4, !dbg !2891
  %mul = mul nsw i32 %2, %3, !dbg !2892
  %div = sdiv i32 %mul, 1000, !dbg !2893
  store i32 %div, i32* %target, align 4, !dbg !2894
  store i32 0, i32* %i, align 4, !dbg !2895
  br label %for.cond, !dbg !2897

for.cond:                                         ; preds = %for.inc, %do.end
  %4 = load i32, i32* %i, align 4, !dbg !2898
  %cmp1 = icmp slt i32 %4, 16, !dbg !2901
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2902

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %target, align 4, !dbg !2903
  %6 = load i32, i32* %i, align 4, !dbg !2906
  %idxprom = sext i32 %6 to i64, !dbg !2907
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 %idxprom, !dbg !2907
  %7 = load i32, i32* %arrayidx, align 4, !dbg !2907
  %cmp2 = icmp sge i32 %5, %7, !dbg !2908
  br i1 %cmp2, label %land.lhs.true, label %if.end9, !dbg !2909

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !2910
  %idxprom3 = sext i32 %8 to i64, !dbg !2911
  %arrayidx4 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 %idxprom3, !dbg !2911
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !2911
  %10 = load i32, i32* %blocksize, align 4, !dbg !2912
  %cmp5 = icmp sgt i32 %9, %10, !dbg !2913
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !2914

if.then6:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* %i, align 4, !dbg !2916
  %idxprom7 = sext i32 %11 to i64, !dbg !2918
  %arrayidx8 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 %idxprom7, !dbg !2918
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !2918
  store i32 %12, i32* %blocksize, align 4, !dbg !2919
  br label %if.end9, !dbg !2920

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %for.body
  br label %for.inc, !dbg !2921

for.inc:                                          ; preds = %if.end9
  %13 = load i32, i32* %i, align 4, !dbg !2922
  %inc = add nsw i32 %13, 1, !dbg !2922
  store i32 %inc, i32* %i, align 4, !dbg !2922
  br label %for.cond, !dbg !2924, !llvm.loop !2925

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %blocksize, align 4, !dbg !2927
  ret i32 %14, !dbg !2928
}

declare i32 @ff_flac_get_max_frame_size(i32, i32, i32) #2

declare %struct.AVMD5* @av_md5_alloc() #2

declare void @av_md5_init(%struct.AVMD5*) #2

declare noalias i8* @av_malloc(i64) #2

; Function Attrs: nounwind uwtable
define internal void @write_streaminfo(%struct.FlacEncodeContext* %s, i8* %header) #1 !dbg !2929 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %header.addr = alloca i8*, align 8
  %pb = alloca %struct.PutBitContext, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !2932, metadata !1730), !dbg !2933
  store i8* %header, i8** %header.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %header.addr, metadata !2934, metadata !1730), !dbg !2935
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !2936, metadata !1730), !dbg !2937
  %0 = load i8*, i8** %header.addr, align 8, !dbg !2938
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 34, i32 1, i1 false), !dbg !2939
  %1 = load i8*, i8** %header.addr, align 8, !dbg !2940
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %1, i32 34), !dbg !2941
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2942
  %max_blocksize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 6, !dbg !2943
  %3 = load i32, i32* %max_blocksize, align 4, !dbg !2943
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 %3), !dbg !2944
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2945
  %max_blocksize1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %4, i32 0, i32 6, !dbg !2946
  %5 = load i32, i32* %max_blocksize1, align 4, !dbg !2946
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 %5), !dbg !2947
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2948
  %min_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 7, !dbg !2949
  %7 = load i32, i32* %min_framesize, align 8, !dbg !2949
  call void @put_bits(%struct.PutBitContext* %pb, i32 24, i32 %7), !dbg !2950
  %8 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2951
  %max_framesize = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %8, i32 0, i32 8, !dbg !2952
  %9 = load i32, i32* %max_framesize, align 4, !dbg !2952
  call void @put_bits(%struct.PutBitContext* %pb, i32 24, i32 %9), !dbg !2953
  %10 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2954
  %samplerate = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %10, i32 0, i32 3, !dbg !2955
  %11 = load i32, i32* %samplerate, align 4, !dbg !2955
  call void @put_bits(%struct.PutBitContext* %pb, i32 20, i32 %11), !dbg !2956
  %12 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2957
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %12, i32 0, i32 2, !dbg !2958
  %13 = load i32, i32* %channels, align 16, !dbg !2958
  %sub = sub nsw i32 %13, 1, !dbg !2959
  call void @put_bits(%struct.PutBitContext* %pb, i32 3, i32 %sub), !dbg !2960
  %14 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2961
  %avctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %14, i32 0, i32 15, !dbg !2962
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !2962
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 143, !dbg !2963
  %16 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !2963
  %sub2 = sub nsw i32 %16, 1, !dbg !2964
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %sub2), !dbg !2965
  %17 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2966
  %sample_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %17, i32 0, i32 11, !dbg !2967
  %18 = load i64, i64* %sample_count, align 8, !dbg !2967
  %and = and i64 %18, 68719472640, !dbg !2968
  %shr = lshr i64 %and, 12, !dbg !2969
  %conv = trunc i64 %shr to i32, !dbg !2970
  call void @put_bits(%struct.PutBitContext* %pb, i32 24, i32 %conv), !dbg !2971
  %19 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2972
  %sample_count3 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %19, i32 0, i32 11, !dbg !2973
  %20 = load i64, i64* %sample_count3, align 8, !dbg !2973
  %and4 = and i64 %20, 4095, !dbg !2974
  %conv5 = trunc i64 %and4 to i32, !dbg !2972
  call void @put_bits(%struct.PutBitContext* %pb, i32 12, i32 %conv5), !dbg !2975
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !2976
  %21 = load i8*, i8** %header.addr, align 8, !dbg !2977
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 18, !dbg !2977
  %22 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2978
  %md5sum = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %22, i32 0, i32 12, !dbg !2979
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %md5sum, i32 0, i32 0, !dbg !2980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx, i8* %arraydecay, i64 16, i32 1, i1 false), !dbg !2980
  ret void, !dbg !2981
}

declare i32 @ff_lpc_init(%struct.LPCContext*, i32, i32, i32) #2

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #2

declare void @ff_flacdsp_init(%struct.FLACDSPContext*, i32, i32, i32) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @dprint_compression_options(%struct.FlacEncodeContext* %s) #0 !dbg !2982 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %opt = alloca %struct.CompressionOptions*, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !2985, metadata !1730), !dbg !2986
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !2987, metadata !1730), !dbg !2988
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2989
  %avctx1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 15, !dbg !2990
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !2990
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !2988
  call void @llvm.dbg.declare(metadata %struct.CompressionOptions** %opt, metadata !2991, metadata !1730), !dbg !2993
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !2994
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 14, !dbg !2995
  store %struct.CompressionOptions* %options, %struct.CompressionOptions** %opt, align 8, !dbg !2993
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2996
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !2996
  %5 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !2997
  %compression_level = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %5, i32 0, i32 0, !dbg !2998
  %6 = load i32, i32* %compression_level, align 4, !dbg !2998
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i32 0, i32 0), i32 %6), !dbg !2999
  %7 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3000
  %lpc_type = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %7, i32 0, i32 2, !dbg !3001
  %8 = load i32, i32* %lpc_type, align 4, !dbg !3001
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
  ], !dbg !3002

sw.bb:                                            ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3003
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !3003
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i32 0, i32 0)), !dbg !3005
  br label %sw.epilog, !dbg !3006

sw.bb2:                                           ; preds = %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3007
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !3007
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58, i32 0, i32 0)), !dbg !3008
  br label %sw.epilog, !dbg !3009

sw.bb3:                                           ; preds = %entry
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3010
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !3010
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 48, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.59, i32 0, i32 0)), !dbg !3011
  br label %sw.epilog, !dbg !3012

sw.bb4:                                           ; preds = %entry
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3013
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !3013
  %17 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3014
  %lpc_passes = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %17, i32 0, i32 3, !dbg !3015
  %18 = load i32, i32* %lpc_passes, align 4, !dbg !3015
  %19 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3016
  %lpc_passes5 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %19, i32 0, i32 3, !dbg !3017
  %20 = load i32, i32* %lpc_passes5, align 4, !dbg !3017
  %cmp = icmp eq i32 %20, 1, !dbg !3018
  %cond = select i1 %cmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), !dbg !3016
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 48, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.60, i32 0, i32 0), i32 %18, i8* %cond), !dbg !3019
  br label %sw.epilog, !dbg !3020

sw.epilog:                                        ; preds = %entry, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3021
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !3021
  %23 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3022
  %min_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %23, i32 0, i32 5, !dbg !3023
  %24 = load i32, i32* %min_prediction_order, align 4, !dbg !3023
  %25 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3024
  %max_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %25, i32 0, i32 6, !dbg !3025
  %26 = load i32, i32* %max_prediction_order, align 4, !dbg !3025
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i32 0, i32 0), i32 %24, i32 %26), !dbg !3026
  %27 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3027
  %prediction_order_method = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %27, i32 0, i32 7, !dbg !3028
  %28 = load i32, i32* %prediction_order_method, align 4, !dbg !3028
  switch i32 %28, label %sw.epilog12 [
    i32 0, label %sw.bb6
    i32 1, label %sw.bb7
    i32 2, label %sw.bb8
    i32 3, label %sw.bb9
    i32 4, label %sw.bb10
    i32 5, label %sw.bb11
  ], !dbg !3029

sw.bb6:                                           ; preds = %sw.epilog
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3030
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !3030
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)), !dbg !3032
  br label %sw.epilog12, !dbg !3033

sw.bb7:                                           ; preds = %sw.epilog
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3034
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !3034
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0)), !dbg !3035
  br label %sw.epilog12, !dbg !3036

sw.bb8:                                           ; preds = %sw.epilog
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3037
  %34 = bitcast %struct.AVCodecContext* %33 to i8*, !dbg !3037
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0)), !dbg !3038
  br label %sw.epilog12, !dbg !3039

sw.bb9:                                           ; preds = %sw.epilog
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3040
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !3040
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0)), !dbg !3041
  br label %sw.epilog12, !dbg !3042

sw.bb10:                                          ; preds = %sw.epilog
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3043
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !3043
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0)), !dbg !3044
  br label %sw.epilog12, !dbg !3045

sw.bb11:                                          ; preds = %sw.epilog
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3046
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !3046
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0)), !dbg !3047
  br label %sw.epilog12, !dbg !3048

sw.epilog12:                                      ; preds = %sw.epilog, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3049
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !3049
  %43 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3050
  %min_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %43, i32 0, i32 8, !dbg !3051
  %44 = load i32, i32* %min_partition_order, align 4, !dbg !3051
  %45 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3052
  %max_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %45, i32 0, i32 9, !dbg !3053
  %46 = load i32, i32* %max_partition_order, align 4, !dbg !3053
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i32 0, i32 0), i32 %44, i32 %46), !dbg !3054
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3055
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !3055
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3056
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 85, !dbg !3057
  %50 = load i32, i32* %frame_size, align 4, !dbg !3057
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 %50), !dbg !3058
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3059
  %52 = bitcast %struct.AVCodecContext* %51 to i8*, !dbg !3059
  %53 = load %struct.CompressionOptions*, %struct.CompressionOptions** %opt, align 8, !dbg !3060
  %lpc_coeff_precision = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %53, i32 0, i32 4, !dbg !3061
  %54 = load i32, i32* %lpc_coeff_precision, align 4, !dbg !3061
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i32 0, i32 0), i32 %54), !dbg !3062
  ret void, !dbg !3063
}

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #6 !dbg !3064 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3068, metadata !1730), !dbg !3069
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3070, metadata !1730), !dbg !3071
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !3072, metadata !1730), !dbg !3073
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !3074
  %cmp = icmp slt i32 %0, 0, !dbg !3076
  br i1 %cmp, label %if.then, label %if.end, !dbg !3077

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !3078
  store i8* null, i8** %buffer.addr, align 8, !dbg !3080
  br label %if.end, !dbg !3081

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !3082
  %mul = mul nsw i32 8, %1, !dbg !3083
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3084
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !3085
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !3086
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3087
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3088
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !3089
  store i8* %3, i8** %buf, align 8, !dbg !3090
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3091
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !3092
  %6 = load i8*, i8** %buf1, align 8, !dbg !3092
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !3093
  %idx.ext = sext i32 %7 to i64, !dbg !3094
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !3094
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3095
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !3096
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !3097
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3098
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !3099
  %10 = load i8*, i8** %buf2, align 8, !dbg !3099
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3100
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !3101
  store i8* %10, i8** %buf_ptr, align 8, !dbg !3102
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3103
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !3104
  store i32 32, i32* %bit_left, align 4, !dbg !3105
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3106
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !3107
  store i32 0, i32* %bit_buf, align 8, !dbg !3108
  ret void, !dbg !3109
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #6 !dbg !3110 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3113, metadata !1730), !dbg !3118
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3124, metadata !1730), !dbg !3125
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3126, metadata !1730), !dbg !3127
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3128, metadata !1730), !dbg !3129
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !3130, metadata !1730), !dbg !3131
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !3132, metadata !1730), !dbg !3133
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3134
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !3135
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !3135
  store i32 %1, i32* %bit_buf, align 4, !dbg !3136
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3137
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !3138
  %3 = load i32, i32* %bit_left2, align 4, !dbg !3138
  store i32 %3, i32* %bit_left, align 4, !dbg !3139
  %4 = load i32, i32* %n.addr, align 4, !dbg !3140
  %5 = load i32, i32* %bit_left, align 4, !dbg !3141
  %cmp = icmp slt i32 %4, %5, !dbg !3142
  br i1 %cmp, label %if.then, label %if.else, !dbg !3143

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !3144
  %7 = load i32, i32* %n.addr, align 4, !dbg !3146
  %shl = shl i32 %6, %7, !dbg !3147
  %8 = load i32, i32* %value.addr, align 4, !dbg !3148
  %or = or i32 %shl, %8, !dbg !3149
  store i32 %or, i32* %bit_buf, align 4, !dbg !3150
  %9 = load i32, i32* %n.addr, align 4, !dbg !3151
  %10 = load i32, i32* %bit_left, align 4, !dbg !3152
  %sub = sub nsw i32 %10, %9, !dbg !3152
  store i32 %sub, i32* %bit_left, align 4, !dbg !3152
  br label %if.end12, !dbg !3153

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !3154
  %12 = load i32, i32* %bit_buf, align 4, !dbg !3155
  %shl3 = shl i32 %12, %11, !dbg !3155
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !3155
  %13 = load i32, i32* %value.addr, align 4, !dbg !3156
  %14 = load i32, i32* %n.addr, align 4, !dbg !3157
  %15 = load i32, i32* %bit_left, align 4, !dbg !3158
  %sub4 = sub nsw i32 %14, %15, !dbg !3159
  %shr = lshr i32 %13, %sub4, !dbg !3160
  %16 = load i32, i32* %bit_buf, align 4, !dbg !3161
  %or5 = or i32 %16, %shr, !dbg !3161
  store i32 %or5, i32* %bit_buf, align 4, !dbg !3161
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3162
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !3163
  %18 = load i8*, i8** %buf_end, align 8, !dbg !3163
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3164
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !3165
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !3165
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3166
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !3166
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3166
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !3167
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !3168

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !3169
  store i32 %21, i32* %x.addr.i, align 4, !dbg !3170
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !3171
  %shl.i = shl i32 %22, 8, !dbg !3172
  %and.i = and i32 %shl.i, 65280, !dbg !3173
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !3174
  %shr.i = lshr i32 %23, 8, !dbg !3175
  %and1.i = and i32 %shr.i, 255, !dbg !3176
  %or.i = or i32 %and.i, %and1.i, !dbg !3177
  %shl2.i = shl i32 %or.i, 16, !dbg !3178
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !3179
  %shr3.i = lshr i32 %24, 16, !dbg !3180
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3181
  %and5.i = and i32 %shl4.i, 65280, !dbg !3182
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !3183
  %shr6.i = lshr i32 %25, 16, !dbg !3184
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3185
  %and8.i = and i32 %shr7.i, 255, !dbg !3186
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3187
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3188
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3189
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !3190
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !3190
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !3191
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !3191
  store i32 %or10.i, i32* %l, align 1, !dbg !3192
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3193
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !3194
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !3195
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !3195
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !3195
  br label %if.end, !dbg !3196

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53, i32 0, i32 0)), !dbg !3197
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !3199
  %sub11 = sub nsw i32 32, %31, !dbg !3200
  %32 = load i32, i32* %bit_left, align 4, !dbg !3201
  %add = add nsw i32 %32, %sub11, !dbg !3201
  store i32 %add, i32* %bit_left, align 4, !dbg !3201
  %33 = load i32, i32* %value.addr, align 4, !dbg !3202
  store i32 %33, i32* %bit_buf, align 4, !dbg !3203
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !3204
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3205
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !3206
  store i32 %34, i32* %bit_buf13, align 8, !dbg !3207
  %36 = load i32, i32* %bit_left, align 4, !dbg !3208
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3209
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !3210
  store i32 %36, i32* %bit_left14, align 4, !dbg !3211
  ret void, !dbg !3212
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #6 !dbg !3213 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3216, metadata !1730), !dbg !3217
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3218
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !3220
  %1 = load i32, i32* %bit_left, align 4, !dbg !3220
  %cmp = icmp slt i32 %1, 32, !dbg !3221
  br i1 %cmp, label %if.then, label %if.end, !dbg !3222

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3223
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !3224
  %3 = load i32, i32* %bit_left1, align 4, !dbg !3224
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3225
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !3226
  %5 = load i32, i32* %bit_buf, align 8, !dbg !3227
  %shl = shl i32 %5, %3, !dbg !3227
  store i32 %shl, i32* %bit_buf, align 8, !dbg !3227
  br label %if.end, !dbg !3225

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !3228

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3229
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !3231
  %7 = load i32, i32* %bit_left2, align 4, !dbg !3231
  %cmp3 = icmp slt i32 %7, 32, !dbg !3232
  br i1 %cmp3, label %while.body, label %while.end, !dbg !3233

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !3234, !llvm.loop !3236

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3237
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !3241
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !3241
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3242
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !3243
  %11 = load i8*, i8** %buf_end, align 8, !dbg !3243
  %cmp4 = icmp ult i8* %9, %11, !dbg !3244
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !3245

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i32 0, i32 0), i32 108), !dbg !3246
  call void @abort() #9, !dbg !3249
  unreachable, !dbg !3251

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !3252

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3254
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !3255
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !3255
  %shr = lshr i32 %13, 24, !dbg !3256
  %conv = trunc i32 %shr to i8, !dbg !3254
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3257
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !3258
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !3259
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !3259
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !3259
  store i8 %conv, i8* %15, align 1, !dbg !3260
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3261
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !3262
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !3263
  %shl10 = shl i32 %17, 8, !dbg !3263
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !3263
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3264
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !3265
  %19 = load i32, i32* %bit_left11, align 4, !dbg !3266
  %add = add nsw i32 %19, 8, !dbg !3266
  store i32 %add, i32* %bit_left11, align 4, !dbg !3266
  br label %while.cond, !dbg !3267, !llvm.loop !3269

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3270
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !3271
  store i32 32, i32* %bit_left12, align 4, !dbg !3272
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3273
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !3274
  store i32 0, i32* %bit_buf13, align 8, !dbg !3275
  ret void, !dbg !3276
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare void @av_md5_final(%struct.AVMD5*, i8*) #2

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @init_frame(%struct.FlacEncodeContext* %s, i32 %nb_samples) #1 !dbg !3277 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %nb_samples.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %frame = alloca %struct.FlacFrame*, align 8
  %sub30 = alloca %struct.FlacSubframe*, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3280, metadata !1730), !dbg !3281
  store i32 %nb_samples, i32* %nb_samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_samples.addr, metadata !3282, metadata !1730), !dbg !3283
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3284, metadata !1730), !dbg !3285
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3286, metadata !1730), !dbg !3287
  call void @llvm.dbg.declare(metadata %struct.FlacFrame** %frame, metadata !3288, metadata !1730), !dbg !3290
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3291
  %frame1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 13, !dbg !3292
  store %struct.FlacFrame* %frame1, %struct.FlacFrame** %frame, align 8, !dbg !3293
  store i32 0, i32* %i, align 4, !dbg !3294
  br label %for.cond, !dbg !3296

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3297
  %cmp = icmp slt i32 %1, 16, !dbg !3300
  br i1 %cmp, label %for.body, label %for.end, !dbg !3301

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %nb_samples.addr, align 4, !dbg !3302
  %3 = load i32, i32* %i, align 4, !dbg !3305
  %idxprom = sext i32 %3 to i64, !dbg !3306
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 %idxprom, !dbg !3306
  %4 = load i32, i32* %arrayidx, align 4, !dbg !3306
  %cmp2 = icmp eq i32 %2, %4, !dbg !3307
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3308

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !3309
  %idxprom3 = sext i32 %5 to i64, !dbg !3311
  %arrayidx4 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_flac_blocksize_table, i64 0, i64 %idxprom3, !dbg !3311
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !3311
  %7 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3312
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %7, i32 0, i32 1, !dbg !3313
  store i32 %6, i32* %blocksize, align 8, !dbg !3314
  %8 = load i32, i32* %i, align 4, !dbg !3315
  %9 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3316
  %bs_code = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %9, i32 0, i32 2, !dbg !3317
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code, i64 0, i64 0, !dbg !3316
  store i32 %8, i32* %arrayidx5, align 4, !dbg !3318
  %10 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3319
  %bs_code6 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %10, i32 0, i32 2, !dbg !3320
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code6, i64 0, i64 1, !dbg !3319
  store i32 0, i32* %arrayidx7, align 4, !dbg !3321
  br label %for.end, !dbg !3322

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3323

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !3324
  %inc = add nsw i32 %11, 1, !dbg !3324
  store i32 %inc, i32* %i, align 4, !dbg !3324
  br label %for.cond, !dbg !3326, !llvm.loop !3327

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !3329
  %cmp8 = icmp eq i32 %12, 16, !dbg !3331
  br i1 %cmp8, label %if.then9, label %if.end26, !dbg !3332

if.then9:                                         ; preds = %for.end
  %13 = load i32, i32* %nb_samples.addr, align 4, !dbg !3333
  %14 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3335
  %blocksize10 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %14, i32 0, i32 1, !dbg !3336
  store i32 %13, i32* %blocksize10, align 8, !dbg !3337
  %15 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3338
  %blocksize11 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %15, i32 0, i32 1, !dbg !3340
  %16 = load i32, i32* %blocksize11, align 8, !dbg !3340
  %cmp12 = icmp sle i32 %16, 256, !dbg !3341
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !3342

if.then13:                                        ; preds = %if.then9
  %17 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3343
  %bs_code14 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %17, i32 0, i32 2, !dbg !3345
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code14, i64 0, i64 0, !dbg !3343
  store i32 6, i32* %arrayidx15, align 4, !dbg !3346
  %18 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3347
  %blocksize16 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %18, i32 0, i32 1, !dbg !3348
  %19 = load i32, i32* %blocksize16, align 8, !dbg !3348
  %sub = sub nsw i32 %19, 1, !dbg !3349
  %20 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3350
  %bs_code17 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %20, i32 0, i32 2, !dbg !3351
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code17, i64 0, i64 1, !dbg !3350
  store i32 %sub, i32* %arrayidx18, align 4, !dbg !3352
  br label %if.end25, !dbg !3353

if.else:                                          ; preds = %if.then9
  %21 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3354
  %bs_code19 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %21, i32 0, i32 2, !dbg !3356
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code19, i64 0, i64 0, !dbg !3354
  store i32 7, i32* %arrayidx20, align 4, !dbg !3357
  %22 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3358
  %blocksize21 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %22, i32 0, i32 1, !dbg !3359
  %23 = load i32, i32* %blocksize21, align 8, !dbg !3359
  %sub22 = sub nsw i32 %23, 1, !dbg !3360
  %24 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3361
  %bs_code23 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %24, i32 0, i32 2, !dbg !3362
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code23, i64 0, i64 1, !dbg !3361
  store i32 %sub22, i32* %arrayidx24, align 4, !dbg !3363
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then13
  br label %if.end26, !dbg !3364

if.end26:                                         ; preds = %if.end25, %for.end
  store i32 0, i32* %ch, align 4, !dbg !3365
  br label %for.cond27, !dbg !3367

for.cond27:                                       ; preds = %for.inc40, %if.end26
  %25 = load i32, i32* %ch, align 4, !dbg !3368
  %26 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3371
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %26, i32 0, i32 2, !dbg !3372
  %27 = load i32, i32* %channels, align 16, !dbg !3372
  %cmp28 = icmp slt i32 %25, %27, !dbg !3373
  br i1 %cmp28, label %for.body29, label %for.end42, !dbg !3374

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub30, metadata !3375, metadata !1730), !dbg !3378
  %28 = load i32, i32* %ch, align 4, !dbg !3379
  %idxprom31 = sext i32 %28 to i64, !dbg !3380
  %29 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3380
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %29, i32 0, i32 0, !dbg !3381
  %arrayidx32 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 %idxprom31, !dbg !3380
  store %struct.FlacSubframe* %arrayidx32, %struct.FlacSubframe** %sub30, align 8, !dbg !3378
  %30 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub30, align 8, !dbg !3382
  %wasted = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %30, i32 0, i32 3, !dbg !3383
  store i32 0, i32* %wasted, align 4, !dbg !3384
  %31 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3385
  %avctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %31, i32 0, i32 15, !dbg !3386
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3386
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 143, !dbg !3387
  %33 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !3387
  %34 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub30, align 8, !dbg !3388
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %34, i32 0, i32 2, !dbg !3389
  store i32 %33, i32* %obits, align 8, !dbg !3390
  %35 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub30, align 8, !dbg !3391
  %obits33 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %35, i32 0, i32 2, !dbg !3393
  %36 = load i32, i32* %obits33, align 8, !dbg !3393
  %cmp34 = icmp sgt i32 %36, 16, !dbg !3394
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !3395

if.then35:                                        ; preds = %for.body29
  %37 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub30, align 8, !dbg !3396
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %37, i32 0, i32 7, !dbg !3397
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 0, !dbg !3398
  store i32 5, i32* %coding_mode, align 8, !dbg !3399
  br label %if.end39, !dbg !3396

if.else36:                                        ; preds = %for.body29
  %38 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub30, align 8, !dbg !3400
  %rc37 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %38, i32 0, i32 7, !dbg !3401
  %coding_mode38 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc37, i32 0, i32 0, !dbg !3402
  store i32 4, i32* %coding_mode38, align 8, !dbg !3403
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then35
  br label %for.inc40, !dbg !3404

for.inc40:                                        ; preds = %if.end39
  %39 = load i32, i32* %ch, align 4, !dbg !3405
  %inc41 = add nsw i32 %39, 1, !dbg !3405
  store i32 %inc41, i32* %ch, align 4, !dbg !3405
  br label %for.cond27, !dbg !3407, !llvm.loop !3408

for.end42:                                        ; preds = %for.cond27
  %40 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3410
  %verbatim_only = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %40, i32 0, i32 5, !dbg !3411
  store i32 0, i32* %verbatim_only, align 4, !dbg !3412
  ret void, !dbg !3413
}

; Function Attrs: nounwind uwtable
define internal void @copy_samples(%struct.FlacEncodeContext* %s, i8* %samples) #1 !dbg !3414 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %samples.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ch = alloca i32, align 4
  %frame = alloca %struct.FlacFrame*, align 8
  %shift = alloca i32, align 4
  %samples0 = alloca i16*, align 8
  %samples019 = alloca i32*, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3419, metadata !1730), !dbg !3420
  store i8* %samples, i8** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %samples.addr, metadata !3421, metadata !1730), !dbg !3422
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3423, metadata !1730), !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3425, metadata !1730), !dbg !3426
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3427, metadata !1730), !dbg !3428
  call void @llvm.dbg.declare(metadata %struct.FlacFrame** %frame, metadata !3429, metadata !1730), !dbg !3430
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3431, metadata !1730), !dbg !3432
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3433
  %avctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 15, !dbg !3434
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3434
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 84, !dbg !3435
  %2 = load i32, i32* %sample_fmt, align 8, !dbg !3435
  %call = call i32 @av_get_bytes_per_sample(i32 %2), !dbg !3436
  %mul = mul nsw i32 %call, 8, !dbg !3437
  %3 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3438
  %avctx1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %3, i32 0, i32 15, !dbg !3439
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !3439
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 143, !dbg !3440
  %5 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !3440
  %sub = sub nsw i32 %mul, %5, !dbg !3441
  store i32 %sub, i32* %shift, align 4, !dbg !3432
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3442
  %avctx2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 15, !dbg !3444
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 32, !dbg !3444
  %sample_fmt3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 84, !dbg !3445
  %8 = load i32, i32* %sample_fmt3, align 8, !dbg !3445
  %cmp = icmp eq i32 %8, 1, !dbg !3446
  br i1 %cmp, label %if.then, label %if.else, !dbg !3447

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3448, !llvm.loop !3449

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16** %samples0, metadata !3450, metadata !1730), !dbg !3456
  %9 = load i8*, i8** %samples.addr, align 8, !dbg !3457
  %10 = bitcast i8* %9 to i16*, !dbg !3457
  store i16* %10, i16** %samples0, align 8, !dbg !3459
  %11 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3460
  %frame4 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %11, i32 0, i32 13, !dbg !3461
  store %struct.FlacFrame* %frame4, %struct.FlacFrame** %frame, align 8, !dbg !3462
  store i32 0, i32* %i, align 4, !dbg !3463
  store i32 0, i32* %j, align 4, !dbg !3464
  br label %for.cond, !dbg !3465

for.cond:                                         ; preds = %for.inc15, %do.body
  %12 = load i32, i32* %i, align 4, !dbg !3466
  %13 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3470
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %13, i32 0, i32 1, !dbg !3471
  %14 = load i32, i32* %blocksize, align 8, !dbg !3471
  %cmp5 = icmp slt i32 %12, %14, !dbg !3472
  br i1 %cmp5, label %for.body, label %for.end17, !dbg !3473

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !3474
  br label %for.cond6, !dbg !3477

for.cond6:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %ch, align 4, !dbg !3478
  %16 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3481
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %16, i32 0, i32 2, !dbg !3482
  %17 = load i32, i32* %channels, align 16, !dbg !3482
  %cmp7 = icmp slt i32 %15, %17, !dbg !3483
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !3484

for.body8:                                        ; preds = %for.cond6
  %18 = load i32, i32* %j, align 4, !dbg !3485
  %idxprom = sext i32 %18 to i64, !dbg !3487
  %19 = load i16*, i16** %samples0, align 8, !dbg !3487
  %arrayidx = getelementptr inbounds i16, i16* %19, i64 %idxprom, !dbg !3487
  %20 = load i16, i16* %arrayidx, align 2, !dbg !3487
  %conv = sext i16 %20 to i32, !dbg !3487
  %21 = load i32, i32* %shift, align 4, !dbg !3488
  %shr = ashr i32 %conv, %21, !dbg !3489
  %22 = load i32, i32* %i, align 4, !dbg !3490
  %idxprom9 = sext i32 %22 to i64, !dbg !3491
  %23 = load i32, i32* %ch, align 4, !dbg !3492
  %idxprom10 = sext i32 %23 to i64, !dbg !3491
  %24 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3491
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %24, i32 0, i32 0, !dbg !3493
  %arrayidx11 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 %idxprom10, !dbg !3491
  %samples12 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx11, i32 0, i32 10, !dbg !3494
  %arrayidx13 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples12, i64 0, i64 %idxprom9, !dbg !3491
  store i32 %shr, i32* %arrayidx13, align 4, !dbg !3495
  br label %for.inc, !dbg !3491

for.inc:                                          ; preds = %for.body8
  %25 = load i32, i32* %ch, align 4, !dbg !3496
  %inc = add nsw i32 %25, 1, !dbg !3496
  store i32 %inc, i32* %ch, align 4, !dbg !3496
  %26 = load i32, i32* %j, align 4, !dbg !3498
  %inc14 = add nsw i32 %26, 1, !dbg !3498
  store i32 %inc14, i32* %j, align 4, !dbg !3498
  br label %for.cond6, !dbg !3499, !llvm.loop !3500

for.end:                                          ; preds = %for.cond6
  br label %for.inc15, !dbg !3502

for.inc15:                                        ; preds = %for.end
  %27 = load i32, i32* %i, align 4, !dbg !3504
  %inc16 = add nsw i32 %27, 1, !dbg !3504
  store i32 %inc16, i32* %i, align 4, !dbg !3504
  br label %for.cond, !dbg !3506, !llvm.loop !3507

for.end17:                                        ; preds = %for.cond
  br label %do.end, !dbg !3509

do.end:                                           ; preds = %for.end17
  br label %if.end, !dbg !3511

if.else:                                          ; preds = %entry
  br label %do.body18, !dbg !3513, !llvm.loop !3514

do.body18:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32** %samples019, metadata !3515, metadata !1730), !dbg !3517
  %28 = load i8*, i8** %samples.addr, align 8, !dbg !3518
  %29 = bitcast i8* %28 to i32*, !dbg !3518
  store i32* %29, i32** %samples019, align 8, !dbg !3520
  %30 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3521
  %frame20 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %30, i32 0, i32 13, !dbg !3522
  store %struct.FlacFrame* %frame20, %struct.FlacFrame** %frame, align 8, !dbg !3523
  store i32 0, i32* %i, align 4, !dbg !3524
  store i32 0, i32* %j, align 4, !dbg !3525
  br label %for.cond21, !dbg !3526

for.cond21:                                       ; preds = %for.inc44, %do.body18
  %31 = load i32, i32* %i, align 4, !dbg !3527
  %32 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3531
  %blocksize22 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %32, i32 0, i32 1, !dbg !3532
  %33 = load i32, i32* %blocksize22, align 8, !dbg !3532
  %cmp23 = icmp slt i32 %31, %33, !dbg !3533
  br i1 %cmp23, label %for.body25, label %for.end46, !dbg !3534

for.body25:                                       ; preds = %for.cond21
  store i32 0, i32* %ch, align 4, !dbg !3535
  br label %for.cond26, !dbg !3538

for.cond26:                                       ; preds = %for.inc40, %for.body25
  %34 = load i32, i32* %ch, align 4, !dbg !3539
  %35 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3542
  %channels27 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %35, i32 0, i32 2, !dbg !3543
  %36 = load i32, i32* %channels27, align 16, !dbg !3543
  %cmp28 = icmp slt i32 %34, %36, !dbg !3544
  br i1 %cmp28, label %for.body30, label %for.end43, !dbg !3545

for.body30:                                       ; preds = %for.cond26
  %37 = load i32, i32* %j, align 4, !dbg !3546
  %idxprom31 = sext i32 %37 to i64, !dbg !3548
  %38 = load i32*, i32** %samples019, align 8, !dbg !3548
  %arrayidx32 = getelementptr inbounds i32, i32* %38, i64 %idxprom31, !dbg !3548
  %39 = load i32, i32* %arrayidx32, align 4, !dbg !3548
  %40 = load i32, i32* %shift, align 4, !dbg !3549
  %shr33 = ashr i32 %39, %40, !dbg !3550
  %41 = load i32, i32* %i, align 4, !dbg !3551
  %idxprom34 = sext i32 %41 to i64, !dbg !3552
  %42 = load i32, i32* %ch, align 4, !dbg !3553
  %idxprom35 = sext i32 %42 to i64, !dbg !3552
  %43 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3552
  %subframes36 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %43, i32 0, i32 0, !dbg !3554
  %arrayidx37 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes36, i64 0, i64 %idxprom35, !dbg !3552
  %samples38 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx37, i32 0, i32 10, !dbg !3555
  %arrayidx39 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples38, i64 0, i64 %idxprom34, !dbg !3552
  store i32 %shr33, i32* %arrayidx39, align 4, !dbg !3556
  br label %for.inc40, !dbg !3552

for.inc40:                                        ; preds = %for.body30
  %44 = load i32, i32* %ch, align 4, !dbg !3557
  %inc41 = add nsw i32 %44, 1, !dbg !3557
  store i32 %inc41, i32* %ch, align 4, !dbg !3557
  %45 = load i32, i32* %j, align 4, !dbg !3559
  %inc42 = add nsw i32 %45, 1, !dbg !3559
  store i32 %inc42, i32* %j, align 4, !dbg !3559
  br label %for.cond26, !dbg !3560, !llvm.loop !3561

for.end43:                                        ; preds = %for.cond26
  br label %for.inc44, !dbg !3563

for.inc44:                                        ; preds = %for.end43
  %46 = load i32, i32* %i, align 4, !dbg !3565
  %inc45 = add nsw i32 %46, 1, !dbg !3565
  store i32 %inc45, i32* %i, align 4, !dbg !3565
  br label %for.cond21, !dbg !3567, !llvm.loop !3568

for.end46:                                        ; preds = %for.cond21
  br label %do.end47, !dbg !3570

do.end47:                                         ; preds = %for.end46
  br label %if.end

if.end:                                           ; preds = %do.end47, %do.end
  ret void, !dbg !3572
}

; Function Attrs: nounwind uwtable
define internal void @channel_decorrelation(%struct.FlacEncodeContext* %s) #1 !dbg !3573 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %frame = alloca %struct.FlacFrame*, align 8
  %left = alloca i32*, align 8
  %right = alloca i32*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %max_rice_param = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3574, metadata !1730), !dbg !3575
  call void @llvm.dbg.declare(metadata %struct.FlacFrame** %frame, metadata !3576, metadata !1730), !dbg !3577
  call void @llvm.dbg.declare(metadata i32** %left, metadata !3578, metadata !1730), !dbg !3579
  call void @llvm.dbg.declare(metadata i32** %right, metadata !3580, metadata !1730), !dbg !3581
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3582, metadata !1730), !dbg !3583
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3584, metadata !1730), !dbg !3585
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3586
  %frame1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 13, !dbg !3587
  store %struct.FlacFrame* %frame1, %struct.FlacFrame** %frame, align 8, !dbg !3588
  %1 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3589
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %1, i32 0, i32 1, !dbg !3590
  %2 = load i32, i32* %blocksize, align 8, !dbg !3590
  store i32 %2, i32* %n, align 4, !dbg !3591
  %3 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3592
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %3, i32 0, i32 0, !dbg !3593
  %arrayidx = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 0, !dbg !3592
  %samples = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx, i32 0, i32 10, !dbg !3594
  %arraydecay = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples, i32 0, i32 0, !dbg !3592
  store i32* %arraydecay, i32** %left, align 8, !dbg !3595
  %4 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3596
  %subframes2 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %4, i32 0, i32 0, !dbg !3597
  %arrayidx3 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes2, i64 0, i64 1, !dbg !3596
  %samples4 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx3, i32 0, i32 10, !dbg !3598
  %arraydecay5 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples4, i32 0, i32 0, !dbg !3596
  store i32* %arraydecay5, i32** %right, align 8, !dbg !3599
  %5 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3600
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %5, i32 0, i32 2, !dbg !3602
  %6 = load i32, i32* %channels, align 16, !dbg !3602
  %cmp = icmp ne i32 %6, 2, !dbg !3603
  br i1 %cmp, label %if.then, label %if.end, !dbg !3604

if.then:                                          ; preds = %entry
  %7 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3605
  %ch_mode = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %7, i32 0, i32 4, !dbg !3607
  store i32 0, i32* %ch_mode, align 8, !dbg !3608
  br label %if.end75, !dbg !3609

if.end:                                           ; preds = %entry
  %8 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3610
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %8, i32 0, i32 14, !dbg !3612
  %ch_mode6 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 10, !dbg !3613
  %9 = load i32, i32* %ch_mode6, align 8, !dbg !3613
  %cmp7 = icmp slt i32 %9, 0, !dbg !3614
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !3615

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %max_rice_param, metadata !3616, metadata !1730), !dbg !3618
  %10 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3619
  %subframes9 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %10, i32 0, i32 0, !dbg !3620
  %arrayidx10 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes9, i64 0, i64 0, !dbg !3619
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx10, i32 0, i32 7, !dbg !3621
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 0, !dbg !3622
  %11 = load i32, i32* %coding_mode, align 8, !dbg !3622
  %shl = shl i32 1, %11, !dbg !3623
  %sub = sub nsw i32 %shl, 2, !dbg !3624
  store i32 %sub, i32* %max_rice_param, align 4, !dbg !3618
  %12 = load i32*, i32** %left, align 8, !dbg !3625
  %13 = load i32*, i32** %right, align 8, !dbg !3626
  %14 = load i32, i32* %n, align 4, !dbg !3627
  %15 = load i32, i32* %max_rice_param, align 4, !dbg !3628
  %call = call i32 @estimate_stereo_mode(i32* %12, i32* %13, i32 %14, i32 %15), !dbg !3629
  %16 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3630
  %ch_mode11 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %16, i32 0, i32 4, !dbg !3631
  store i32 %call, i32* %ch_mode11, align 8, !dbg !3632
  br label %if.end15, !dbg !3633

if.else:                                          ; preds = %if.end
  %17 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3634
  %options12 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %17, i32 0, i32 14, !dbg !3635
  %ch_mode13 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options12, i32 0, i32 10, !dbg !3636
  %18 = load i32, i32* %ch_mode13, align 8, !dbg !3636
  %19 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3637
  %ch_mode14 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %19, i32 0, i32 4, !dbg !3638
  store i32 %18, i32* %ch_mode14, align 8, !dbg !3639
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %20 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3640
  %ch_mode16 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %20, i32 0, i32 4, !dbg !3642
  %21 = load i32, i32* %ch_mode16, align 8, !dbg !3642
  %cmp17 = icmp eq i32 %21, 0, !dbg !3643
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3644

if.then18:                                        ; preds = %if.end15
  br label %if.end75, !dbg !3645

if.end19:                                         ; preds = %if.end15
  %22 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3646
  %ch_mode20 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %22, i32 0, i32 4, !dbg !3648
  %23 = load i32, i32* %ch_mode20, align 8, !dbg !3648
  %cmp21 = icmp eq i32 %23, 3, !dbg !3649
  br i1 %cmp21, label %if.then22, label %if.else37, !dbg !3650

if.then22:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3651, metadata !1730), !dbg !3653
  store i32 0, i32* %i, align 4, !dbg !3654
  br label %for.cond, !dbg !3656

for.cond:                                         ; preds = %for.inc, %if.then22
  %24 = load i32, i32* %i, align 4, !dbg !3657
  %25 = load i32, i32* %n, align 4, !dbg !3660
  %cmp23 = icmp slt i32 %24, %25, !dbg !3661
  br i1 %cmp23, label %for.body, label %for.end, !dbg !3662

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !dbg !3663
  %idxprom = sext i32 %26 to i64, !dbg !3665
  %27 = load i32*, i32** %left, align 8, !dbg !3665
  %arrayidx24 = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !3665
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !3665
  store i32 %28, i32* %tmp, align 4, !dbg !3666
  %29 = load i32, i32* %tmp, align 4, !dbg !3667
  %30 = load i32, i32* %i, align 4, !dbg !3668
  %idxprom25 = sext i32 %30 to i64, !dbg !3669
  %31 = load i32*, i32** %right, align 8, !dbg !3669
  %arrayidx26 = getelementptr inbounds i32, i32* %31, i64 %idxprom25, !dbg !3669
  %32 = load i32, i32* %arrayidx26, align 4, !dbg !3669
  %add = add nsw i32 %29, %32, !dbg !3670
  %shr = ashr i32 %add, 1, !dbg !3671
  %33 = load i32, i32* %i, align 4, !dbg !3672
  %idxprom27 = sext i32 %33 to i64, !dbg !3673
  %34 = load i32*, i32** %left, align 8, !dbg !3673
  %arrayidx28 = getelementptr inbounds i32, i32* %34, i64 %idxprom27, !dbg !3673
  store i32 %shr, i32* %arrayidx28, align 4, !dbg !3674
  %35 = load i32, i32* %tmp, align 4, !dbg !3675
  %36 = load i32, i32* %i, align 4, !dbg !3676
  %idxprom29 = sext i32 %36 to i64, !dbg !3677
  %37 = load i32*, i32** %right, align 8, !dbg !3677
  %arrayidx30 = getelementptr inbounds i32, i32* %37, i64 %idxprom29, !dbg !3677
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !3677
  %sub31 = sub nsw i32 %35, %38, !dbg !3678
  %39 = load i32, i32* %i, align 4, !dbg !3679
  %idxprom32 = sext i32 %39 to i64, !dbg !3680
  %40 = load i32*, i32** %right, align 8, !dbg !3680
  %arrayidx33 = getelementptr inbounds i32, i32* %40, i64 %idxprom32, !dbg !3680
  store i32 %sub31, i32* %arrayidx33, align 4, !dbg !3681
  br label %for.inc, !dbg !3682

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !3683
  %inc = add nsw i32 %41, 1, !dbg !3683
  store i32 %inc, i32* %i, align 4, !dbg !3683
  br label %for.cond, !dbg !3685, !llvm.loop !3686

for.end:                                          ; preds = %for.cond
  %42 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3688
  %subframes34 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %42, i32 0, i32 0, !dbg !3689
  %arrayidx35 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes34, i64 0, i64 1, !dbg !3688
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx35, i32 0, i32 2, !dbg !3690
  %43 = load i32, i32* %obits, align 8, !dbg !3691
  %inc36 = add nsw i32 %43, 1, !dbg !3691
  store i32 %inc36, i32* %obits, align 8, !dbg !3691
  br label %if.end75, !dbg !3692

if.else37:                                        ; preds = %if.end19
  %44 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3693
  %ch_mode38 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %44, i32 0, i32 4, !dbg !3696
  %45 = load i32, i32* %ch_mode38, align 8, !dbg !3696
  %cmp39 = icmp eq i32 %45, 1, !dbg !3697
  br i1 %cmp39, label %if.then40, label %if.else58, !dbg !3693

if.then40:                                        ; preds = %if.else37
  store i32 0, i32* %i, align 4, !dbg !3698
  br label %for.cond41, !dbg !3701

for.cond41:                                       ; preds = %for.inc51, %if.then40
  %46 = load i32, i32* %i, align 4, !dbg !3702
  %47 = load i32, i32* %n, align 4, !dbg !3705
  %cmp42 = icmp slt i32 %46, %47, !dbg !3706
  br i1 %cmp42, label %for.body43, label %for.end53, !dbg !3707

for.body43:                                       ; preds = %for.cond41
  %48 = load i32, i32* %i, align 4, !dbg !3708
  %idxprom44 = sext i32 %48 to i64, !dbg !3709
  %49 = load i32*, i32** %left, align 8, !dbg !3709
  %arrayidx45 = getelementptr inbounds i32, i32* %49, i64 %idxprom44, !dbg !3709
  %50 = load i32, i32* %arrayidx45, align 4, !dbg !3709
  %51 = load i32, i32* %i, align 4, !dbg !3710
  %idxprom46 = sext i32 %51 to i64, !dbg !3711
  %52 = load i32*, i32** %right, align 8, !dbg !3711
  %arrayidx47 = getelementptr inbounds i32, i32* %52, i64 %idxprom46, !dbg !3711
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !3711
  %sub48 = sub nsw i32 %50, %53, !dbg !3712
  %54 = load i32, i32* %i, align 4, !dbg !3713
  %idxprom49 = sext i32 %54 to i64, !dbg !3714
  %55 = load i32*, i32** %right, align 8, !dbg !3714
  %arrayidx50 = getelementptr inbounds i32, i32* %55, i64 %idxprom49, !dbg !3714
  store i32 %sub48, i32* %arrayidx50, align 4, !dbg !3715
  br label %for.inc51, !dbg !3714

for.inc51:                                        ; preds = %for.body43
  %56 = load i32, i32* %i, align 4, !dbg !3716
  %inc52 = add nsw i32 %56, 1, !dbg !3716
  store i32 %inc52, i32* %i, align 4, !dbg !3716
  br label %for.cond41, !dbg !3718, !llvm.loop !3719

for.end53:                                        ; preds = %for.cond41
  %57 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3721
  %subframes54 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %57, i32 0, i32 0, !dbg !3722
  %arrayidx55 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes54, i64 0, i64 1, !dbg !3721
  %obits56 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx55, i32 0, i32 2, !dbg !3723
  %58 = load i32, i32* %obits56, align 8, !dbg !3724
  %inc57 = add nsw i32 %58, 1, !dbg !3724
  store i32 %inc57, i32* %obits56, align 8, !dbg !3724
  br label %if.end74, !dbg !3725

if.else58:                                        ; preds = %if.else37
  store i32 0, i32* %i, align 4, !dbg !3726
  br label %for.cond59, !dbg !3729

for.cond59:                                       ; preds = %for.inc67, %if.else58
  %59 = load i32, i32* %i, align 4, !dbg !3730
  %60 = load i32, i32* %n, align 4, !dbg !3733
  %cmp60 = icmp slt i32 %59, %60, !dbg !3734
  br i1 %cmp60, label %for.body61, label %for.end69, !dbg !3735

for.body61:                                       ; preds = %for.cond59
  %61 = load i32, i32* %i, align 4, !dbg !3736
  %idxprom62 = sext i32 %61 to i64, !dbg !3737
  %62 = load i32*, i32** %right, align 8, !dbg !3737
  %arrayidx63 = getelementptr inbounds i32, i32* %62, i64 %idxprom62, !dbg !3737
  %63 = load i32, i32* %arrayidx63, align 4, !dbg !3737
  %64 = load i32, i32* %i, align 4, !dbg !3738
  %idxprom64 = sext i32 %64 to i64, !dbg !3739
  %65 = load i32*, i32** %left, align 8, !dbg !3739
  %arrayidx65 = getelementptr inbounds i32, i32* %65, i64 %idxprom64, !dbg !3739
  %66 = load i32, i32* %arrayidx65, align 4, !dbg !3740
  %sub66 = sub nsw i32 %66, %63, !dbg !3740
  store i32 %sub66, i32* %arrayidx65, align 4, !dbg !3740
  br label %for.inc67, !dbg !3739

for.inc67:                                        ; preds = %for.body61
  %67 = load i32, i32* %i, align 4, !dbg !3741
  %inc68 = add nsw i32 %67, 1, !dbg !3741
  store i32 %inc68, i32* %i, align 4, !dbg !3741
  br label %for.cond59, !dbg !3743, !llvm.loop !3744

for.end69:                                        ; preds = %for.cond59
  %68 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !3746
  %subframes70 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %68, i32 0, i32 0, !dbg !3747
  %arrayidx71 = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes70, i64 0, i64 0, !dbg !3746
  %obits72 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %arrayidx71, i32 0, i32 2, !dbg !3748
  %69 = load i32, i32* %obits72, align 8, !dbg !3749
  %inc73 = add nsw i32 %69, 1, !dbg !3749
  store i32 %inc73, i32* %obits72, align 8, !dbg !3749
  br label %if.end74

if.end74:                                         ; preds = %for.end69, %for.end53
  br label %if.end75

if.end75:                                         ; preds = %if.then, %if.then18, %if.end74, %for.end
  ret void, !dbg !3750
}

; Function Attrs: nounwind uwtable
define internal void @remove_wasted_bits(%struct.FlacEncodeContext* %s) #1 !dbg !3751 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %sub = alloca %struct.FlacSubframe*, align 8
  %v = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3752, metadata !1730), !dbg !3753
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3754, metadata !1730), !dbg !3755
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3756, metadata !1730), !dbg !3757
  store i32 0, i32* %ch, align 4, !dbg !3758
  br label %for.cond, !dbg !3760

for.cond:                                         ; preds = %for.inc28, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !3761
  %1 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3764
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %1, i32 0, i32 2, !dbg !3765
  %2 = load i32, i32* %channels, align 16, !dbg !3765
  %cmp = icmp slt i32 %0, %2, !dbg !3766
  br i1 %cmp, label %for.body, label %for.end30, !dbg !3767

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub, metadata !3768, metadata !1730), !dbg !3770
  %3 = load i32, i32* %ch, align 4, !dbg !3771
  %idxprom = sext i32 %3 to i64, !dbg !3772
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3772
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %4, i32 0, i32 13, !dbg !3773
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 0, !dbg !3774
  %arrayidx = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 %idxprom, !dbg !3772
  store %struct.FlacSubframe* %arrayidx, %struct.FlacSubframe** %sub, align 8, !dbg !3770
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3775, metadata !1730), !dbg !3776
  store i32 0, i32* %v, align 4, !dbg !3776
  store i32 0, i32* %i, align 4, !dbg !3777
  br label %for.cond1, !dbg !3779

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !3780
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3783
  %frame2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 13, !dbg !3784
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame2, i32 0, i32 1, !dbg !3785
  %7 = load i32, i32* %blocksize, align 16, !dbg !3785
  %cmp3 = icmp slt i32 %5, %7, !dbg !3786
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3787

for.body4:                                        ; preds = %for.cond1
  %8 = load i32, i32* %i, align 4, !dbg !3788
  %idxprom5 = sext i32 %8 to i64, !dbg !3790
  %9 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3790
  %samples = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %9, i32 0, i32 10, !dbg !3791
  %arrayidx6 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples, i64 0, i64 %idxprom5, !dbg !3790
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !3790
  %11 = load i32, i32* %v, align 4, !dbg !3792
  %or = or i32 %11, %10, !dbg !3792
  store i32 %or, i32* %v, align 4, !dbg !3792
  %12 = load i32, i32* %v, align 4, !dbg !3793
  %and = and i32 %12, 1, !dbg !3795
  %tobool = icmp ne i32 %and, 0, !dbg !3795
  br i1 %tobool, label %if.then, label %if.end, !dbg !3796

if.then:                                          ; preds = %for.body4
  br label %for.end, !dbg !3797

if.end:                                           ; preds = %for.body4
  br label %for.inc, !dbg !3798

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !3799
  %inc = add nsw i32 %13, 1, !dbg !3799
  store i32 %inc, i32* %i, align 4, !dbg !3799
  br label %for.cond1, !dbg !3801, !llvm.loop !3802

for.end:                                          ; preds = %if.then, %for.cond1
  %14 = load i32, i32* %v, align 4, !dbg !3804
  %tobool7 = icmp ne i32 %14, 0, !dbg !3804
  br i1 %tobool7, label %land.lhs.true, label %if.end27, !dbg !3806

land.lhs.true:                                    ; preds = %for.end
  %15 = load i32, i32* %v, align 4, !dbg !3807
  %and8 = and i32 %15, 1, !dbg !3809
  %tobool9 = icmp ne i32 %and8, 0, !dbg !3809
  br i1 %tobool9, label %if.end27, label %if.then10, !dbg !3810

if.then10:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %v, align 4, !dbg !3811
  %17 = call i32 @llvm.cttz.i32(i32 %16, i1 true), !dbg !3813
  store i32 %17, i32* %v, align 4, !dbg !3814
  store i32 0, i32* %i, align 4, !dbg !3815
  br label %for.cond11, !dbg !3817

for.cond11:                                       ; preds = %for.inc19, %if.then10
  %18 = load i32, i32* %i, align 4, !dbg !3818
  %19 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3821
  %frame12 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %19, i32 0, i32 13, !dbg !3822
  %blocksize13 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame12, i32 0, i32 1, !dbg !3823
  %20 = load i32, i32* %blocksize13, align 16, !dbg !3823
  %cmp14 = icmp slt i32 %18, %20, !dbg !3824
  br i1 %cmp14, label %for.body15, label %for.end21, !dbg !3825

for.body15:                                       ; preds = %for.cond11
  %21 = load i32, i32* %v, align 4, !dbg !3826
  %22 = load i32, i32* %i, align 4, !dbg !3827
  %idxprom16 = sext i32 %22 to i64, !dbg !3828
  %23 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3828
  %samples17 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %23, i32 0, i32 10, !dbg !3829
  %arrayidx18 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples17, i64 0, i64 %idxprom16, !dbg !3828
  %24 = load i32, i32* %arrayidx18, align 4, !dbg !3830
  %shr = ashr i32 %24, %21, !dbg !3830
  store i32 %shr, i32* %arrayidx18, align 4, !dbg !3830
  br label %for.inc19, !dbg !3828

for.inc19:                                        ; preds = %for.body15
  %25 = load i32, i32* %i, align 4, !dbg !3831
  %inc20 = add nsw i32 %25, 1, !dbg !3831
  store i32 %inc20, i32* %i, align 4, !dbg !3831
  br label %for.cond11, !dbg !3833, !llvm.loop !3834

for.end21:                                        ; preds = %for.cond11
  %26 = load i32, i32* %v, align 4, !dbg !3836
  %27 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3837
  %wasted = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %27, i32 0, i32 3, !dbg !3838
  store i32 %26, i32* %wasted, align 4, !dbg !3839
  %28 = load i32, i32* %v, align 4, !dbg !3840
  %29 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3841
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %29, i32 0, i32 2, !dbg !3842
  %30 = load i32, i32* %obits, align 8, !dbg !3843
  %sub22 = sub nsw i32 %30, %28, !dbg !3843
  store i32 %sub22, i32* %obits, align 8, !dbg !3843
  %31 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3844
  %obits23 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %31, i32 0, i32 2, !dbg !3846
  %32 = load i32, i32* %obits23, align 8, !dbg !3846
  %cmp24 = icmp sle i32 %32, 17, !dbg !3847
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !3848

if.then25:                                        ; preds = %for.end21
  %33 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !3849
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %33, i32 0, i32 7, !dbg !3850
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 0, !dbg !3851
  store i32 4, i32* %coding_mode, align 8, !dbg !3852
  br label %if.end26, !dbg !3849

if.end26:                                         ; preds = %if.then25, %for.end21
  br label %if.end27, !dbg !3853

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %for.end
  br label %for.inc28, !dbg !3854

for.inc28:                                        ; preds = %if.end27
  %34 = load i32, i32* %ch, align 4, !dbg !3855
  %inc29 = add nsw i32 %34, 1, !dbg !3855
  store i32 %inc29, i32* %ch, align 4, !dbg !3855
  br label %for.cond, !dbg !3857, !llvm.loop !3858

for.end30:                                        ; preds = %for.cond
  ret void, !dbg !3860
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_frame(%struct.FlacEncodeContext* %s) #1 !dbg !3861 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %ch = alloca i32, align 4
  %count = alloca i64, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3864, metadata !1730), !dbg !3865
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3866, metadata !1730), !dbg !3867
  call void @llvm.dbg.declare(metadata i64* %count, metadata !3868, metadata !1730), !dbg !3869
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3870
  %call = call i32 @count_frame_header(%struct.FlacEncodeContext* %0), !dbg !3871
  %conv = sext i32 %call to i64, !dbg !3871
  store i64 %conv, i64* %count, align 8, !dbg !3872
  store i32 0, i32* %ch, align 4, !dbg !3873
  br label %for.cond, !dbg !3875

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %ch, align 4, !dbg !3876
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3879
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 2, !dbg !3880
  %3 = load i32, i32* %channels, align 16, !dbg !3880
  %cmp = icmp slt i32 %1, %3, !dbg !3881
  br i1 %cmp, label %for.body, label %for.end, !dbg !3882

for.body:                                         ; preds = %for.cond
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3883
  %5 = load i32, i32* %ch, align 4, !dbg !3884
  %call2 = call i32 @encode_residual_ch(%struct.FlacEncodeContext* %4, i32 %5), !dbg !3885
  %conv3 = sext i32 %call2 to i64, !dbg !3885
  %6 = load i64, i64* %count, align 8, !dbg !3886
  %add = add i64 %6, %conv3, !dbg !3886
  store i64 %add, i64* %count, align 8, !dbg !3886
  br label %for.inc, !dbg !3887

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !3888
  %inc = add nsw i32 %7, 1, !dbg !3888
  store i32 %inc, i32* %ch, align 4, !dbg !3888
  br label %for.cond, !dbg !3890, !llvm.loop !3891

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %count, align 8, !dbg !3893
  %and = and i64 %8, 7, !dbg !3894
  %sub = sub i64 8, %and, !dbg !3895
  %and4 = and i64 %sub, 7, !dbg !3896
  %9 = load i64, i64* %count, align 8, !dbg !3897
  %add5 = add i64 %9, %and4, !dbg !3897
  store i64 %add5, i64* %count, align 8, !dbg !3897
  %10 = load i64, i64* %count, align 8, !dbg !3898
  %add6 = add i64 %10, 16, !dbg !3898
  store i64 %add6, i64* %count, align 8, !dbg !3898
  %11 = load i64, i64* %count, align 8, !dbg !3899
  %shr = lshr i64 %11, 3, !dbg !3899
  store i64 %shr, i64* %count, align 8, !dbg !3899
  %12 = load i64, i64* %count, align 8, !dbg !3900
  %cmp7 = icmp ugt i64 %12, 2147483647, !dbg !3902
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3903

if.then:                                          ; preds = %for.end
  store i32 -558323010, i32* %retval, align 4, !dbg !3904
  br label %return, !dbg !3904

if.end:                                           ; preds = %for.end
  %13 = load i64, i64* %count, align 8, !dbg !3905
  %conv9 = trunc i64 %13 to i32, !dbg !3905
  store i32 %conv9, i32* %retval, align 4, !dbg !3906
  br label %return, !dbg !3906

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !3907
  ret i32 %14, !dbg !3907
}

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @write_frame(%struct.FlacEncodeContext* %s, %struct.AVPacket* %avpkt) #1 !dbg !3908 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3911, metadata !1730), !dbg !3912
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3913, metadata !1730), !dbg !3914
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3915
  %pb = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 1, !dbg !3916
  %1 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3917
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i32 0, i32 3, !dbg !3918
  %2 = load i8*, i8** %data, align 8, !dbg !3918
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3919
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 4, !dbg !3920
  %4 = load i32, i32* %size, align 8, !dbg !3920
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %2, i32 %4), !dbg !3921
  %5 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3922
  call void @write_frame_header(%struct.FlacEncodeContext* %5), !dbg !3923
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3924
  call void @write_subframes(%struct.FlacEncodeContext* %6), !dbg !3925
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3926
  call void @write_frame_footer(%struct.FlacEncodeContext* %7), !dbg !3927
  %8 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3928
  %pb1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %8, i32 0, i32 1, !dbg !3929
  %call = call i32 @put_bits_count(%struct.PutBitContext* %pb1), !dbg !3930
  %shr = ashr i32 %call, 3, !dbg !3931
  ret i32 %shr, !dbg !3932
}

; Function Attrs: nounwind uwtable
define internal i32 @update_md5_sum(%struct.FlacEncodeContext* %s, i8* %samples) #1 !dbg !3933 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %samples.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %i = alloca i32, align 4
  %samples0 = alloca i32*, align 8
  %tmp = alloca i8*, align 8
  %v = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !3936, metadata !1730), !dbg !3937
  store i8* %samples, i8** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %samples.addr, metadata !3938, metadata !1730), !dbg !3939
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3940, metadata !1730), !dbg !3941
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !3942, metadata !1730), !dbg !3943
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3944
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 13, !dbg !3945
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 1, !dbg !3946
  %1 = load i32, i32* %blocksize, align 16, !dbg !3946
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3947
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 2, !dbg !3948
  %3 = load i32, i32* %channels, align 16, !dbg !3948
  %mul = mul nsw i32 %1, %3, !dbg !3949
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3950
  %avctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %4, i32 0, i32 15, !dbg !3951
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3951
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 143, !dbg !3952
  %6 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !3952
  %add = add nsw i32 %6, 7, !dbg !3953
  %div = sdiv i32 %add, 8, !dbg !3954
  %mul1 = mul nsw i32 %mul, %div, !dbg !3955
  store i32 %mul1, i32* %buf_size, align 4, !dbg !3943
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3956
  %avctx2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %7, i32 0, i32 15, !dbg !3958
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 32, !dbg !3958
  %bits_per_raw_sample3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 143, !dbg !3959
  %9 = load i32, i32* %bits_per_raw_sample3, align 4, !dbg !3959
  %cmp = icmp sgt i32 %9, 16, !dbg !3960
  br i1 %cmp, label %if.then, label %if.end6, !dbg !3961

if.then:                                          ; preds = %entry
  %10 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3962
  %md5_buffer = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %10, i32 0, i32 19, !dbg !3964
  %11 = bitcast i8** %md5_buffer to i8*, !dbg !3965
  %12 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3966
  %md5_buffer_size = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %12, i32 0, i32 20, !dbg !3967
  %13 = load i32, i32* %buf_size, align 4, !dbg !3968
  %conv = sext i32 %13 to i64, !dbg !3968
  call void @av_fast_malloc(i8* %11, i32* %md5_buffer_size, i64 %conv), !dbg !3969
  %14 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3970
  %md5_buffer4 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %14, i32 0, i32 19, !dbg !3972
  %15 = load i8*, i8** %md5_buffer4, align 8, !dbg !3972
  %tobool = icmp ne i8* %15, null, !dbg !3970
  br i1 %tobool, label %if.end, label %if.then5, !dbg !3973

if.then5:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !3974
  br label %return, !dbg !3974

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !3975

if.end6:                                          ; preds = %if.end, %entry
  %16 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3976
  %avctx7 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %16, i32 0, i32 15, !dbg !3978
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 32, !dbg !3978
  %bits_per_raw_sample8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 143, !dbg !3979
  %18 = load i32, i32* %bits_per_raw_sample8, align 4, !dbg !3979
  %cmp9 = icmp sle i32 %18, 16, !dbg !3980
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3981

if.then11:                                        ; preds = %if.end6
  %19 = load i8*, i8** %samples.addr, align 8, !dbg !3982
  store i8* %19, i8** %buf, align 8, !dbg !3984
  br label %if.end36, !dbg !3985

if.else:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3986, metadata !1730), !dbg !3988
  call void @llvm.dbg.declare(metadata i32** %samples0, metadata !3989, metadata !1730), !dbg !3990
  %20 = load i8*, i8** %samples.addr, align 8, !dbg !3991
  %21 = bitcast i8* %20 to i32*, !dbg !3991
  store i32* %21, i32** %samples0, align 8, !dbg !3990
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !3992, metadata !1730), !dbg !3993
  %22 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !3994
  %md5_buffer12 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %22, i32 0, i32 19, !dbg !3995
  %23 = load i8*, i8** %md5_buffer12, align 8, !dbg !3995
  store i8* %23, i8** %tmp, align 8, !dbg !3993
  store i32 0, i32* %i, align 4, !dbg !3996
  br label %for.cond, !dbg !3998

for.cond:                                         ; preds = %for.inc, %if.else
  %24 = load i32, i32* %i, align 4, !dbg !3999
  %25 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4002
  %frame13 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %25, i32 0, i32 13, !dbg !4003
  %blocksize14 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame13, i32 0, i32 1, !dbg !4004
  %26 = load i32, i32* %blocksize14, align 16, !dbg !4004
  %27 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4005
  %channels15 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %27, i32 0, i32 2, !dbg !4006
  %28 = load i32, i32* %channels15, align 16, !dbg !4006
  %mul16 = mul nsw i32 %26, %28, !dbg !4007
  %cmp17 = icmp slt i32 %24, %mul16, !dbg !4008
  br i1 %cmp17, label %for.body, label %for.end, !dbg !4009

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4010, metadata !1730), !dbg !4012
  %29 = load i32, i32* %i, align 4, !dbg !4013
  %idxprom = sext i32 %29 to i64, !dbg !4014
  %30 = load i32*, i32** %samples0, align 8, !dbg !4014
  %arrayidx = getelementptr inbounds i32, i32* %30, i64 %idxprom, !dbg !4014
  %31 = load i32, i32* %arrayidx, align 4, !dbg !4014
  %shr = ashr i32 %31, 8, !dbg !4015
  store i32 %shr, i32* %v, align 4, !dbg !4012
  br label %do.body, !dbg !4016, !llvm.loop !4017

do.body:                                          ; preds = %for.body
  %32 = load i32, i32* %v, align 4, !dbg !4018
  %conv20 = trunc i32 %32 to i8, !dbg !4021
  %33 = load i8*, i8** %tmp, align 8, !dbg !4022
  %34 = load i32, i32* %i, align 4, !dbg !4023
  %mul21 = mul nsw i32 3, %34, !dbg !4024
  %idx.ext = sext i32 %mul21 to i64, !dbg !4025
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext, !dbg !4025
  %arrayidx22 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !4026
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !4027
  %35 = load i32, i32* %v, align 4, !dbg !4028
  %shr23 = ashr i32 %35, 8, !dbg !4029
  %conv24 = trunc i32 %shr23 to i8, !dbg !4030
  %36 = load i8*, i8** %tmp, align 8, !dbg !4031
  %37 = load i32, i32* %i, align 4, !dbg !4032
  %mul25 = mul nsw i32 3, %37, !dbg !4033
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !4034
  %add.ptr27 = getelementptr inbounds i8, i8* %36, i64 %idx.ext26, !dbg !4034
  %arrayidx28 = getelementptr inbounds i8, i8* %add.ptr27, i64 1, !dbg !4035
  store i8 %conv24, i8* %arrayidx28, align 1, !dbg !4036
  %38 = load i32, i32* %v, align 4, !dbg !4037
  %shr29 = ashr i32 %38, 16, !dbg !4038
  %conv30 = trunc i32 %shr29 to i8, !dbg !4039
  %39 = load i8*, i8** %tmp, align 8, !dbg !4040
  %40 = load i32, i32* %i, align 4, !dbg !4041
  %mul31 = mul nsw i32 3, %40, !dbg !4042
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !4043
  %add.ptr33 = getelementptr inbounds i8, i8* %39, i64 %idx.ext32, !dbg !4043
  %arrayidx34 = getelementptr inbounds i8, i8* %add.ptr33, i64 2, !dbg !4044
  store i8 %conv30, i8* %arrayidx34, align 1, !dbg !4045
  br label %do.end, !dbg !4046

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !4047

for.inc:                                          ; preds = %do.end
  %41 = load i32, i32* %i, align 4, !dbg !4048
  %inc = add nsw i32 %41, 1, !dbg !4048
  store i32 %inc, i32* %i, align 4, !dbg !4048
  br label %for.cond, !dbg !4050, !llvm.loop !4051

for.end:                                          ; preds = %for.cond
  %42 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4053
  %md5_buffer35 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %42, i32 0, i32 19, !dbg !4054
  %43 = load i8*, i8** %md5_buffer35, align 8, !dbg !4054
  store i8* %43, i8** %buf, align 8, !dbg !4055
  br label %if.end36

if.end36:                                         ; preds = %for.end, %if.then11
  %44 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4056
  %md5ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %44, i32 0, i32 18, !dbg !4057
  %45 = load %struct.AVMD5*, %struct.AVMD5** %md5ctx, align 32, !dbg !4057
  %46 = load i8*, i8** %buf, align 8, !dbg !4058
  %47 = load i32, i32* %buf_size, align 4, !dbg !4059
  call void @av_md5_update(%struct.AVMD5* %45, i8* %46, i32 %47), !dbg !4060
  store i32 0, i32* %retval, align 4, !dbg !4061
  br label %return, !dbg !4061

return:                                           ; preds = %if.end36, %if.then5
  %48 = load i32, i32* %retval, align 4, !dbg !4062
  ret i32 %48, !dbg !4062
}

declare i32 @av_get_bytes_per_sample(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @estimate_stereo_mode(i32* %left_ch, i32* %right_ch, i32 %n, i32 %max_rice_param) #1 !dbg !4063 {
entry:
  %left_ch.addr = alloca i32*, align 8
  %right_ch.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %max_rice_param.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %best = alloca i32, align 4
  %lt = alloca i32, align 4
  %rt = alloca i32, align 4
  %sum = alloca [4 x i64], align 16
  %score = alloca [4 x i64], align 16
  %k = alloca i32, align 4
  store i32* %left_ch, i32** %left_ch.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %left_ch.addr, metadata !4066, metadata !1730), !dbg !4067
  store i32* %right_ch, i32** %right_ch.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %right_ch.addr, metadata !4068, metadata !1730), !dbg !4069
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4070, metadata !1730), !dbg !4071
  store i32 %max_rice_param, i32* %max_rice_param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_rice_param.addr, metadata !4072, metadata !1730), !dbg !4073
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4074, metadata !1730), !dbg !4075
  call void @llvm.dbg.declare(metadata i32* %best, metadata !4076, metadata !1730), !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %lt, metadata !4078, metadata !1730), !dbg !4079
  call void @llvm.dbg.declare(metadata i32* %rt, metadata !4080, metadata !1730), !dbg !4081
  call void @llvm.dbg.declare(metadata [4 x i64]* %sum, metadata !4082, metadata !1730), !dbg !4084
  call void @llvm.dbg.declare(metadata [4 x i64]* %score, metadata !4085, metadata !1730), !dbg !4086
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4087, metadata !1730), !dbg !4088
  %arrayidx = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !4089
  store i64 0, i64* %arrayidx, align 8, !dbg !4090
  %arrayidx1 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 2, !dbg !4091
  store i64 0, i64* %arrayidx1, align 16, !dbg !4092
  %arrayidx2 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !4093
  store i64 0, i64* %arrayidx2, align 8, !dbg !4094
  %arrayidx3 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !4095
  store i64 0, i64* %arrayidx3, align 16, !dbg !4096
  store i32 2, i32* %i, align 4, !dbg !4097
  br label %for.cond, !dbg !4099

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4100
  %1 = load i32, i32* %n.addr, align 4, !dbg !4103
  %cmp = icmp slt i32 %0, %1, !dbg !4104
  br i1 %cmp, label %for.body, label %for.end, !dbg !4105

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !4106
  %idxprom = sext i32 %2 to i64, !dbg !4108
  %3 = load i32*, i32** %left_ch.addr, align 8, !dbg !4108
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !4108
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !4108
  %5 = load i32, i32* %i, align 4, !dbg !4109
  %sub = sub nsw i32 %5, 1, !dbg !4110
  %idxprom5 = sext i32 %sub to i64, !dbg !4111
  %6 = load i32*, i32** %left_ch.addr, align 8, !dbg !4111
  %arrayidx6 = getelementptr inbounds i32, i32* %6, i64 %idxprom5, !dbg !4111
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !4111
  %mul = mul nsw i32 2, %7, !dbg !4112
  %sub7 = sub nsw i32 %4, %mul, !dbg !4113
  %8 = load i32, i32* %i, align 4, !dbg !4114
  %sub8 = sub nsw i32 %8, 2, !dbg !4115
  %idxprom9 = sext i32 %sub8 to i64, !dbg !4116
  %9 = load i32*, i32** %left_ch.addr, align 8, !dbg !4116
  %arrayidx10 = getelementptr inbounds i32, i32* %9, i64 %idxprom9, !dbg !4116
  %10 = load i32, i32* %arrayidx10, align 4, !dbg !4116
  %add = add nsw i32 %sub7, %10, !dbg !4117
  store i32 %add, i32* %lt, align 4, !dbg !4118
  %11 = load i32, i32* %i, align 4, !dbg !4119
  %idxprom11 = sext i32 %11 to i64, !dbg !4120
  %12 = load i32*, i32** %right_ch.addr, align 8, !dbg !4120
  %arrayidx12 = getelementptr inbounds i32, i32* %12, i64 %idxprom11, !dbg !4120
  %13 = load i32, i32* %arrayidx12, align 4, !dbg !4120
  %14 = load i32, i32* %i, align 4, !dbg !4121
  %sub13 = sub nsw i32 %14, 1, !dbg !4122
  %idxprom14 = sext i32 %sub13 to i64, !dbg !4123
  %15 = load i32*, i32** %right_ch.addr, align 8, !dbg !4123
  %arrayidx15 = getelementptr inbounds i32, i32* %15, i64 %idxprom14, !dbg !4123
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !4123
  %mul16 = mul nsw i32 2, %16, !dbg !4124
  %sub17 = sub nsw i32 %13, %mul16, !dbg !4125
  %17 = load i32, i32* %i, align 4, !dbg !4126
  %sub18 = sub nsw i32 %17, 2, !dbg !4127
  %idxprom19 = sext i32 %sub18 to i64, !dbg !4128
  %18 = load i32*, i32** %right_ch.addr, align 8, !dbg !4128
  %arrayidx20 = getelementptr inbounds i32, i32* %18, i64 %idxprom19, !dbg !4128
  %19 = load i32, i32* %arrayidx20, align 4, !dbg !4128
  %add21 = add nsw i32 %sub17, %19, !dbg !4129
  store i32 %add21, i32* %rt, align 4, !dbg !4130
  %20 = load i32, i32* %lt, align 4, !dbg !4131
  %21 = load i32, i32* %rt, align 4, !dbg !4132
  %add22 = add nsw i32 %20, %21, !dbg !4133
  %shr = ashr i32 %add22, 1, !dbg !4134
  %cmp23 = icmp sge i32 %shr, 0, !dbg !4135
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !4136

cond.true:                                        ; preds = %for.body
  %22 = load i32, i32* %lt, align 4, !dbg !4137
  %23 = load i32, i32* %rt, align 4, !dbg !4139
  %add24 = add nsw i32 %22, %23, !dbg !4140
  %shr25 = ashr i32 %add24, 1, !dbg !4141
  br label %cond.end, !dbg !4142

cond.false:                                       ; preds = %for.body
  %24 = load i32, i32* %lt, align 4, !dbg !4143
  %25 = load i32, i32* %rt, align 4, !dbg !4145
  %add26 = add nsw i32 %24, %25, !dbg !4146
  %shr27 = ashr i32 %add26, 1, !dbg !4147
  %sub28 = sub nsw i32 0, %shr27, !dbg !4148
  br label %cond.end, !dbg !4149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr25, %cond.true ], [ %sub28, %cond.false ], !dbg !4150
  %conv = sext i32 %cond to i64, !dbg !4152
  %arrayidx29 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 2, !dbg !4153
  %26 = load i64, i64* %arrayidx29, align 16, !dbg !4154
  %add30 = add i64 %26, %conv, !dbg !4154
  store i64 %add30, i64* %arrayidx29, align 16, !dbg !4154
  %27 = load i32, i32* %lt, align 4, !dbg !4155
  %28 = load i32, i32* %rt, align 4, !dbg !4156
  %sub31 = sub nsw i32 %27, %28, !dbg !4157
  %cmp32 = icmp sge i32 %sub31, 0, !dbg !4158
  br i1 %cmp32, label %cond.true34, label %cond.false36, !dbg !4159

cond.true34:                                      ; preds = %cond.end
  %29 = load i32, i32* %lt, align 4, !dbg !4160
  %30 = load i32, i32* %rt, align 4, !dbg !4161
  %sub35 = sub nsw i32 %29, %30, !dbg !4162
  br label %cond.end39, !dbg !4163

cond.false36:                                     ; preds = %cond.end
  %31 = load i32, i32* %lt, align 4, !dbg !4164
  %32 = load i32, i32* %rt, align 4, !dbg !4165
  %sub37 = sub nsw i32 %31, %32, !dbg !4166
  %sub38 = sub nsw i32 0, %sub37, !dbg !4167
  br label %cond.end39, !dbg !4168

cond.end39:                                       ; preds = %cond.false36, %cond.true34
  %cond40 = phi i32 [ %sub35, %cond.true34 ], [ %sub38, %cond.false36 ], !dbg !4169
  %conv41 = sext i32 %cond40 to i64, !dbg !4170
  %arrayidx42 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !4171
  %33 = load i64, i64* %arrayidx42, align 8, !dbg !4172
  %add43 = add i64 %33, %conv41, !dbg !4172
  store i64 %add43, i64* %arrayidx42, align 8, !dbg !4172
  %34 = load i32, i32* %lt, align 4, !dbg !4173
  %cmp44 = icmp sge i32 %34, 0, !dbg !4174
  br i1 %cmp44, label %cond.true46, label %cond.false47, !dbg !4175

cond.true46:                                      ; preds = %cond.end39
  %35 = load i32, i32* %lt, align 4, !dbg !4176
  br label %cond.end49, !dbg !4177

cond.false47:                                     ; preds = %cond.end39
  %36 = load i32, i32* %lt, align 4, !dbg !4178
  %sub48 = sub nsw i32 0, %36, !dbg !4179
  br label %cond.end49, !dbg !4180

cond.end49:                                       ; preds = %cond.false47, %cond.true46
  %cond50 = phi i32 [ %35, %cond.true46 ], [ %sub48, %cond.false47 ], !dbg !4181
  %conv51 = sext i32 %cond50 to i64, !dbg !4182
  %arrayidx52 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !4183
  %37 = load i64, i64* %arrayidx52, align 16, !dbg !4184
  %add53 = add i64 %37, %conv51, !dbg !4184
  store i64 %add53, i64* %arrayidx52, align 16, !dbg !4184
  %38 = load i32, i32* %rt, align 4, !dbg !4185
  %cmp54 = icmp sge i32 %38, 0, !dbg !4186
  br i1 %cmp54, label %cond.true56, label %cond.false57, !dbg !4187

cond.true56:                                      ; preds = %cond.end49
  %39 = load i32, i32* %rt, align 4, !dbg !4188
  br label %cond.end59, !dbg !4189

cond.false57:                                     ; preds = %cond.end49
  %40 = load i32, i32* %rt, align 4, !dbg !4190
  %sub58 = sub nsw i32 0, %40, !dbg !4191
  br label %cond.end59, !dbg !4192

cond.end59:                                       ; preds = %cond.false57, %cond.true56
  %cond60 = phi i32 [ %39, %cond.true56 ], [ %sub58, %cond.false57 ], !dbg !4193
  %conv61 = sext i32 %cond60 to i64, !dbg !4194
  %arrayidx62 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !4195
  %41 = load i64, i64* %arrayidx62, align 8, !dbg !4196
  %add63 = add i64 %41, %conv61, !dbg !4196
  store i64 %add63, i64* %arrayidx62, align 8, !dbg !4196
  br label %for.inc, !dbg !4197

for.inc:                                          ; preds = %cond.end59
  %42 = load i32, i32* %i, align 4, !dbg !4198
  %inc = add nsw i32 %42, 1, !dbg !4198
  store i32 %inc, i32* %i, align 4, !dbg !4198
  br label %for.cond, !dbg !4200, !llvm.loop !4201

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4203
  br label %for.cond64, !dbg !4205

for.cond64:                                       ; preds = %for.inc84, %for.end
  %43 = load i32, i32* %i, align 4, !dbg !4206
  %cmp65 = icmp slt i32 %43, 4, !dbg !4209
  br i1 %cmp65, label %for.body67, label %for.end86, !dbg !4210

for.body67:                                       ; preds = %for.cond64
  %44 = load i32, i32* %i, align 4, !dbg !4211
  %idxprom68 = sext i32 %44 to i64, !dbg !4213
  %arrayidx69 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 %idxprom68, !dbg !4213
  %45 = load i64, i64* %arrayidx69, align 8, !dbg !4213
  %mul70 = mul i64 2, %45, !dbg !4214
  %46 = load i32, i32* %n.addr, align 4, !dbg !4215
  %47 = load i32, i32* %max_rice_param.addr, align 4, !dbg !4216
  %call = call i32 @find_optimal_param(i64 %mul70, i32 %46, i32 %47), !dbg !4217
  store i32 %call, i32* %k, align 4, !dbg !4218
  %48 = load i32, i32* %n.addr, align 4, !dbg !4219
  %49 = load i32, i32* %k, align 4, !dbg !4220
  %add71 = add nsw i32 %49, 1, !dbg !4221
  %mul72 = mul nsw i32 %48, %add71, !dbg !4222
  %conv73 = sext i32 %mul72 to i64, !dbg !4223
  %50 = load i32, i32* %i, align 4, !dbg !4224
  %idxprom74 = sext i32 %50 to i64, !dbg !4225
  %arrayidx75 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 %idxprom74, !dbg !4225
  %51 = load i64, i64* %arrayidx75, align 8, !dbg !4225
  %mul76 = mul i64 2, %51, !dbg !4226
  %52 = load i32, i32* %n.addr, align 4, !dbg !4227
  %shr77 = ashr i32 %52, 1, !dbg !4228
  %conv78 = sext i32 %shr77 to i64, !dbg !4229
  %sub79 = sub i64 %mul76, %conv78, !dbg !4230
  %53 = load i32, i32* %k, align 4, !dbg !4231
  %sh_prom = zext i32 %53 to i64, !dbg !4232
  %shr80 = lshr i64 %sub79, %sh_prom, !dbg !4232
  %add81 = add i64 %conv73, %shr80, !dbg !4233
  %54 = load i32, i32* %i, align 4, !dbg !4234
  %idxprom82 = sext i32 %54 to i64, !dbg !4235
  %arrayidx83 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 %idxprom82, !dbg !4235
  store i64 %add81, i64* %arrayidx83, align 8, !dbg !4236
  br label %for.inc84, !dbg !4237

for.inc84:                                        ; preds = %for.body67
  %55 = load i32, i32* %i, align 4, !dbg !4238
  %inc85 = add nsw i32 %55, 1, !dbg !4238
  store i32 %inc85, i32* %i, align 4, !dbg !4238
  br label %for.cond64, !dbg !4240, !llvm.loop !4241

for.end86:                                        ; preds = %for.cond64
  %arrayidx87 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !4243
  %56 = load i64, i64* %arrayidx87, align 16, !dbg !4243
  %arrayidx88 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !4244
  %57 = load i64, i64* %arrayidx88, align 8, !dbg !4244
  %add89 = add i64 %56, %57, !dbg !4245
  %arrayidx90 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 0, !dbg !4246
  store i64 %add89, i64* %arrayidx90, align 16, !dbg !4247
  %arrayidx91 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !4248
  %58 = load i64, i64* %arrayidx91, align 16, !dbg !4248
  %arrayidx92 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !4249
  %59 = load i64, i64* %arrayidx92, align 8, !dbg !4249
  %add93 = add i64 %58, %59, !dbg !4250
  %arrayidx94 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 1, !dbg !4251
  store i64 %add93, i64* %arrayidx94, align 8, !dbg !4252
  %arrayidx95 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !4253
  %60 = load i64, i64* %arrayidx95, align 8, !dbg !4253
  %arrayidx96 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !4254
  %61 = load i64, i64* %arrayidx96, align 8, !dbg !4254
  %add97 = add i64 %60, %61, !dbg !4255
  %arrayidx98 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 2, !dbg !4256
  store i64 %add97, i64* %arrayidx98, align 16, !dbg !4257
  %arrayidx99 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 2, !dbg !4258
  %62 = load i64, i64* %arrayidx99, align 16, !dbg !4258
  %arrayidx100 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !4259
  %63 = load i64, i64* %arrayidx100, align 8, !dbg !4259
  %add101 = add i64 %62, %63, !dbg !4260
  %arrayidx102 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 3, !dbg !4261
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !4262
  store i32 0, i32* %best, align 4, !dbg !4263
  store i32 1, i32* %i, align 4, !dbg !4264
  br label %for.cond103, !dbg !4266

for.cond103:                                      ; preds = %for.inc113, %for.end86
  %64 = load i32, i32* %i, align 4, !dbg !4267
  %cmp104 = icmp slt i32 %64, 4, !dbg !4270
  br i1 %cmp104, label %for.body106, label %for.end115, !dbg !4271

for.body106:                                      ; preds = %for.cond103
  %65 = load i32, i32* %i, align 4, !dbg !4272
  %idxprom107 = sext i32 %65 to i64, !dbg !4274
  %arrayidx108 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 %idxprom107, !dbg !4274
  %66 = load i64, i64* %arrayidx108, align 8, !dbg !4274
  %67 = load i32, i32* %best, align 4, !dbg !4275
  %idxprom109 = sext i32 %67 to i64, !dbg !4276
  %arrayidx110 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 %idxprom109, !dbg !4276
  %68 = load i64, i64* %arrayidx110, align 8, !dbg !4276
  %cmp111 = icmp ult i64 %66, %68, !dbg !4277
  br i1 %cmp111, label %if.then, label %if.end, !dbg !4278

if.then:                                          ; preds = %for.body106
  %69 = load i32, i32* %i, align 4, !dbg !4279
  store i32 %69, i32* %best, align 4, !dbg !4280
  br label %if.end, !dbg !4281

if.end:                                           ; preds = %if.then, %for.body106
  br label %for.inc113, !dbg !4282

for.inc113:                                       ; preds = %if.end
  %70 = load i32, i32* %i, align 4, !dbg !4284
  %inc114 = add nsw i32 %70, 1, !dbg !4284
  store i32 %inc114, i32* %i, align 4, !dbg !4284
  br label %for.cond103, !dbg !4286, !llvm.loop !4287

for.end115:                                       ; preds = %for.cond103
  %71 = load i32, i32* %best, align 4, !dbg !4289
  ret i32 %71, !dbg !4290
}

; Function Attrs: nounwind uwtable
define internal i32 @find_optimal_param(i64 %sum, i32 %n, i32 %max_param) #1 !dbg !4291 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !4294, metadata !1730), !dbg !4299
  %retval = alloca i32, align 4
  %sum.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  %max_param.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %sum2 = alloca i64, align 8
  store i64 %sum, i64* %sum.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sum.addr, metadata !4301, metadata !1730), !dbg !4302
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4303, metadata !1730), !dbg !4304
  store i32 %max_param, i32* %max_param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_param.addr, metadata !4305, metadata !1730), !dbg !4306
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4307, metadata !1730), !dbg !4308
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !4309, metadata !1730), !dbg !4310
  %0 = load i64, i64* %sum.addr, align 8, !dbg !4311
  %1 = load i32, i32* %n.addr, align 4, !dbg !4313
  %shr = ashr i32 %1, 1, !dbg !4314
  %conv = sext i32 %shr to i64, !dbg !4313
  %cmp = icmp ule i64 %0, %conv, !dbg !4315
  br i1 %cmp, label %if.then, label %if.end, !dbg !4316

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4317
  br label %return, !dbg !4317

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %sum.addr, align 8, !dbg !4318
  %3 = load i32, i32* %n.addr, align 4, !dbg !4319
  %shr2 = ashr i32 %3, 1, !dbg !4320
  %conv3 = sext i32 %shr2 to i64, !dbg !4321
  %sub = sub i64 %2, %conv3, !dbg !4322
  store i64 %sub, i64* %sum2, align 8, !dbg !4323
  %4 = load i64, i64* %sum2, align 8, !dbg !4324
  %5 = load i32, i32* %n.addr, align 4, !dbg !4325
  %conv4 = sext i32 %5 to i64, !dbg !4325
  %div = udiv i64 %4, %conv4, !dbg !4326
  store i64 %div, i64* %a.addr.i, align 8, !dbg !4327
  %6 = load i64, i64* %a.addr.i, align 8, !dbg !4328
  %add.i = add nsw i64 %6, 2147483648, !dbg !4330
  %and.i = and i64 %add.i, -4294967296, !dbg !4331
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !4331
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4332

if.then.i:                                        ; preds = %if.end
  %7 = load i64, i64* %a.addr.i, align 8, !dbg !4333
  %shr.i = ashr i64 %7, 63, !dbg !4335
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !4336
  %conv.i = trunc i64 %xor.i to i32, !dbg !4337
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !4338
  br label %av_clipl_int32_c.exit, !dbg !4338

if.else.i:                                        ; preds = %if.end
  %8 = load i64, i64* %a.addr.i, align 8, !dbg !4339
  %conv1.i = trunc i64 %8 to i32, !dbg !4340
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !4341
  br label %av_clipl_int32_c.exit, !dbg !4341

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !4342
  %or = or i32 %9, 1, !dbg !4343
  %10 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4344
  %sub5 = sub nsw i32 31, %10, !dbg !4346
  store i32 %sub5, i32* %k, align 4, !dbg !4347
  %11 = load i32, i32* %k, align 4, !dbg !4348
  %12 = load i32, i32* %max_param.addr, align 4, !dbg !4349
  %cmp6 = icmp sgt i32 %11, %12, !dbg !4350
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4351

cond.true:                                        ; preds = %av_clipl_int32_c.exit
  %13 = load i32, i32* %max_param.addr, align 4, !dbg !4352
  br label %cond.end, !dbg !4353

cond.false:                                       ; preds = %av_clipl_int32_c.exit
  %14 = load i32, i32* %k, align 4, !dbg !4354
  br label %cond.end, !dbg !4356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !4357
  store i32 %cond, i32* %retval, align 4, !dbg !4359
  br label %return, !dbg !4359

return:                                           ; preds = %cond.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !4360
  ret i32 %15, !dbg !4360
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @count_frame_header(%struct.FlacEncodeContext* %s) #1 !dbg !4361 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %tmp = alloca i8, align 1
  %count = alloca i32, align 4
  %bytes = alloca i32, align 4
  %shift = alloca i32, align 4
  %in = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !4362, metadata !1730), !dbg !4363
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !4364, metadata !1730), !dbg !4365
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4366, metadata !1730), !dbg !4367
  store i32 32, i32* %count, align 4, !dbg !4368
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !4369, metadata !1730), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !4372, metadata !1730), !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %in, metadata !4374, metadata !1730), !dbg !4375
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4376
  %frame_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 10, !dbg !4377
  %1 = load i32, i32* %frame_count, align 4, !dbg !4377
  store i32 %1, i32* %in, align 4, !dbg !4375
  %2 = load i32, i32* %in, align 4, !dbg !4378
  %cmp = icmp ult i32 %2, 128, !dbg !4380
  br i1 %cmp, label %if.then, label %if.else, !dbg !4381

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %in, align 4, !dbg !4382
  %conv = trunc i32 %3 to i8, !dbg !4382
  store i8 %conv, i8* %tmp, align 1, !dbg !4385
  %4 = load i32, i32* %count, align 4, !dbg !4386
  %add = add nsw i32 %4, 8, !dbg !4386
  store i32 %add, i32* %count, align 4, !dbg !4386
  br label %if.end, !dbg !4387

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %in, align 4, !dbg !4388
  %or = or i32 %5, 1, !dbg !4391
  %6 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4392
  %sub = sub nsw i32 31, %6, !dbg !4393
  %add5 = add nsw i32 %sub, 4, !dbg !4394
  %div = sdiv i32 %add5, 5, !dbg !4395
  store i32 %div, i32* %bytes, align 4, !dbg !4396
  %7 = load i32, i32* %bytes, align 4, !dbg !4397
  %sub6 = sub nsw i32 %7, 1, !dbg !4398
  %mul = mul nsw i32 %sub6, 6, !dbg !4399
  store i32 %mul, i32* %shift, align 4, !dbg !4400
  %8 = load i32, i32* %bytes, align 4, !dbg !4401
  %shr = ashr i32 256, %8, !dbg !4402
  %sub7 = sub nsw i32 256, %shr, !dbg !4403
  %9 = load i32, i32* %in, align 4, !dbg !4404
  %10 = load i32, i32* %shift, align 4, !dbg !4405
  %shr8 = lshr i32 %9, %10, !dbg !4406
  %or9 = or i32 %sub7, %shr8, !dbg !4407
  %conv10 = trunc i32 %or9 to i8, !dbg !4408
  store i8 %conv10, i8* %tmp, align 1, !dbg !4409
  %11 = load i32, i32* %count, align 4, !dbg !4410
  %add11 = add nsw i32 %11, 8, !dbg !4410
  store i32 %add11, i32* %count, align 4, !dbg !4410
  br label %while.cond, !dbg !4411

while.cond:                                       ; preds = %while.body, %if.else
  %12 = load i32, i32* %shift, align 4, !dbg !4412
  %cmp12 = icmp sge i32 %12, 6, !dbg !4414
  br i1 %cmp12, label %while.body, label %while.end, !dbg !4415

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %shift, align 4, !dbg !4416
  %sub14 = sub nsw i32 %13, 6, !dbg !4416
  store i32 %sub14, i32* %shift, align 4, !dbg !4416
  %14 = load i32, i32* %in, align 4, !dbg !4419
  %15 = load i32, i32* %shift, align 4, !dbg !4420
  %shr15 = lshr i32 %14, %15, !dbg !4421
  %and = and i32 %shr15, 63, !dbg !4422
  %or16 = or i32 128, %and, !dbg !4423
  %conv17 = trunc i32 %or16 to i8, !dbg !4424
  store i8 %conv17, i8* %tmp, align 1, !dbg !4425
  %16 = load i32, i32* %count, align 4, !dbg !4426
  %add18 = add nsw i32 %16, 8, !dbg !4426
  store i32 %add18, i32* %count, align 4, !dbg !4426
  br label %while.cond, !dbg !4427, !llvm.loop !4428

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %17 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4430
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %17, i32 0, i32 13, !dbg !4432
  %bs_code = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 2, !dbg !4433
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code, i64 0, i64 0, !dbg !4430
  %18 = load i32, i32* %arrayidx, align 4, !dbg !4430
  %cmp19 = icmp eq i32 %18, 6, !dbg !4434
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !4435

if.then21:                                        ; preds = %if.end
  %19 = load i32, i32* %count, align 4, !dbg !4436
  %add22 = add nsw i32 %19, 8, !dbg !4436
  store i32 %add22, i32* %count, align 4, !dbg !4436
  br label %if.end32, !dbg !4437

if.else23:                                        ; preds = %if.end
  %20 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4438
  %frame24 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %20, i32 0, i32 13, !dbg !4440
  %bs_code25 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame24, i32 0, i32 2, !dbg !4441
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code25, i64 0, i64 0, !dbg !4438
  %21 = load i32, i32* %arrayidx26, align 4, !dbg !4438
  %cmp27 = icmp eq i32 %21, 7, !dbg !4442
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !4443

if.then29:                                        ; preds = %if.else23
  %22 = load i32, i32* %count, align 4, !dbg !4444
  %add30 = add nsw i32 %22, 16, !dbg !4444
  store i32 %add30, i32* %count, align 4, !dbg !4444
  br label %if.end31, !dbg !4445

if.end31:                                         ; preds = %if.then29, %if.else23
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then21
  %23 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4446
  %sr_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %23, i32 0, i32 4, !dbg !4447
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code, i64 0, i64 0, !dbg !4446
  %24 = load i32, i32* %arrayidx33, align 8, !dbg !4446
  %cmp34 = icmp eq i32 %24, 12, !dbg !4448
  %conv35 = zext i1 %cmp34 to i32, !dbg !4448
  %25 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4449
  %sr_code36 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %25, i32 0, i32 4, !dbg !4450
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code36, i64 0, i64 0, !dbg !4449
  %26 = load i32, i32* %arrayidx37, align 8, !dbg !4449
  %cmp38 = icmp sgt i32 %26, 12, !dbg !4451
  %conv39 = zext i1 %cmp38 to i32, !dbg !4451
  %mul40 = mul nsw i32 %conv39, 2, !dbg !4452
  %add41 = add nsw i32 %conv35, %mul40, !dbg !4453
  %mul42 = mul nsw i32 %add41, 8, !dbg !4454
  %27 = load i32, i32* %count, align 4, !dbg !4455
  %add43 = add nsw i32 %27, %mul42, !dbg !4455
  store i32 %add43, i32* %count, align 4, !dbg !4455
  %28 = load i32, i32* %count, align 4, !dbg !4456
  %add44 = add nsw i32 %28, 8, !dbg !4456
  store i32 %add44, i32* %count, align 4, !dbg !4456
  %29 = load i32, i32* %count, align 4, !dbg !4457
  ret i32 %29, !dbg !4458
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_residual_ch(%struct.FlacEncodeContext* %s, i32 %ch) #1 !dbg !4459 {
entry:
  %retval.i443 = alloca i32, align 4
  %a.addr.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i444, metadata !4462, metadata !1730), !dbg !4466
  %amin.addr.i445 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i445, metadata !4477, metadata !1730), !dbg !4478
  %amax.addr.i446 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i446, metadata !4479, metadata !1730), !dbg !4480
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4462, metadata !1730), !dbg !4481
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4477, metadata !1730), !dbg !4488
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4479, metadata !1730), !dbg !4489
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %ch.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %min_order = alloca i32, align 4
  %max_order = alloca i32, align 4
  %opt_order = alloca i32, align 4
  %omethod = alloca i32, align 4
  %frame = alloca %struct.FlacFrame*, align 8
  %sub = alloca %struct.FlacSubframe*, align 8
  %coefs = alloca [32 x [32 x i32]], align 16
  %shift = alloca [32 x i32], align 16
  %res = alloca i32*, align 8
  %smp = alloca i32*, align 8
  %bits = alloca [5 x i64], align 16
  %levels = alloca i32, align 4
  %bits91 = alloca [8 x i64], align 16
  %order92 = alloca i32, align 4
  %opt_index = alloca i32, align 4
  %last_order = alloca i32, align 4
  %bits157 = alloca [32 x i64], align 16
  %bits213 = alloca [32 x i64], align 16
  %step = alloca i32, align 4
  %last = alloca i32, align 4
  %allsteps = alloca i32, align 4
  %i294 = alloca i32, align 4
  %step295 = alloca i32, align 4
  %improved = alloca i32, align 4
  %best_score = alloca i64, align 8
  %qmax = alloca i32, align 4
  %tmp = alloca i32, align 4
  %lpc_try = alloca [32 x i32], align 16
  %score = alloca i64, align 8
  %diffsum = alloca i32, align 4
  %diff = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !4490, metadata !1730), !dbg !4491
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !4492, metadata !1730), !dbg !4493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4494, metadata !1730), !dbg !4495
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4496, metadata !1730), !dbg !4497
  call void @llvm.dbg.declare(metadata i32* %min_order, metadata !4498, metadata !1730), !dbg !4499
  call void @llvm.dbg.declare(metadata i32* %max_order, metadata !4500, metadata !1730), !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %opt_order, metadata !4502, metadata !1730), !dbg !4503
  call void @llvm.dbg.declare(metadata i32* %omethod, metadata !4504, metadata !1730), !dbg !4505
  call void @llvm.dbg.declare(metadata %struct.FlacFrame** %frame, metadata !4506, metadata !1730), !dbg !4507
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub, metadata !4508, metadata !1730), !dbg !4509
  call void @llvm.dbg.declare(metadata [32 x [32 x i32]]* %coefs, metadata !4510, metadata !1730), !dbg !4512
  call void @llvm.dbg.declare(metadata [32 x i32]* %shift, metadata !4513, metadata !1730), !dbg !4515
  call void @llvm.dbg.declare(metadata i32** %res, metadata !4516, metadata !1730), !dbg !4517
  call void @llvm.dbg.declare(metadata i32** %smp, metadata !4518, metadata !1730), !dbg !4519
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4520
  %frame1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 13, !dbg !4521
  store %struct.FlacFrame* %frame1, %struct.FlacFrame** %frame, align 8, !dbg !4522
  %1 = load i32, i32* %ch.addr, align 4, !dbg !4523
  %idxprom = sext i32 %1 to i64, !dbg !4524
  %2 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !4524
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %2, i32 0, i32 0, !dbg !4525
  %arrayidx = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 %idxprom, !dbg !4524
  store %struct.FlacSubframe* %arrayidx, %struct.FlacSubframe** %sub, align 8, !dbg !4526
  %3 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4527
  %residual = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %3, i32 0, i32 11, !dbg !4528
  %arraydecay = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual, i32 0, i32 0, !dbg !4527
  store i32* %arraydecay, i32** %res, align 8, !dbg !4529
  %4 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4530
  %samples = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %4, i32 0, i32 10, !dbg !4531
  %arraydecay2 = getelementptr inbounds [65535 x i32], [65535 x i32]* %samples, i32 0, i32 0, !dbg !4530
  store i32* %arraydecay2, i32** %smp, align 8, !dbg !4532
  %5 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !4533
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %5, i32 0, i32 1, !dbg !4534
  %6 = load i32, i32* %blocksize, align 8, !dbg !4534
  store i32 %6, i32* %n, align 4, !dbg !4535
  store i32 1, i32* %i, align 4, !dbg !4536
  br label %for.cond, !dbg !4538

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !4539
  %8 = load i32, i32* %n, align 4, !dbg !4542
  %cmp = icmp slt i32 %7, %8, !dbg !4543
  br i1 %cmp, label %for.body, label %for.end, !dbg !4544

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !4545
  %idxprom3 = sext i32 %9 to i64, !dbg !4547
  %10 = load i32*, i32** %smp, align 8, !dbg !4547
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 %idxprom3, !dbg !4547
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !4547
  %12 = load i32*, i32** %smp, align 8, !dbg !4548
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !4548
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !4548
  %cmp6 = icmp ne i32 %11, %13, !dbg !4549
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4550

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4551

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4552

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4554
  %inc = add nsw i32 %14, 1, !dbg !4554
  store i32 %inc, i32* %i, align 4, !dbg !4554
  br label %for.cond, !dbg !4556, !llvm.loop !4557

for.end:                                          ; preds = %if.then, %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !4559
  %16 = load i32, i32* %n, align 4, !dbg !4561
  %cmp7 = icmp eq i32 %15, %16, !dbg !4562
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !4563

if.then8:                                         ; preds = %for.end
  %17 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4564
  %type_code = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %17, i32 0, i32 1, !dbg !4566
  store i32 0, i32* %type_code, align 4, !dbg !4567
  %18 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4568
  %type = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %18, i32 0, i32 0, !dbg !4569
  store i32 0, i32* %type, align 8, !dbg !4570
  %19 = load i32*, i32** %smp, align 8, !dbg !4571
  %arrayidx9 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !4571
  %20 = load i32, i32* %arrayidx9, align 4, !dbg !4571
  %21 = load i32*, i32** %res, align 8, !dbg !4572
  %arrayidx10 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !4572
  store i32 %20, i32* %arrayidx10, align 4, !dbg !4573
  %22 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4574
  %23 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4575
  %call = call i64 @subframe_count_exact(%struct.FlacEncodeContext* %22, %struct.FlacSubframe* %23, i32 0), !dbg !4576
  %conv = trunc i64 %call to i32, !dbg !4576
  store i32 %conv, i32* %retval, align 4, !dbg !4577
  br label %return, !dbg !4577

if.end11:                                         ; preds = %for.end
  %24 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !4578
  %verbatim_only = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %24, i32 0, i32 5, !dbg !4580
  %25 = load i32, i32* %verbatim_only, align 4, !dbg !4580
  %tobool = icmp ne i32 %25, 0, !dbg !4578
  br i1 %tobool, label %if.then14, label %lor.lhs.false, !dbg !4581

lor.lhs.false:                                    ; preds = %if.end11
  %26 = load i32, i32* %n, align 4, !dbg !4582
  %cmp12 = icmp slt i32 %26, 5, !dbg !4584
  br i1 %cmp12, label %if.then14, label %if.end20, !dbg !4585

if.then14:                                        ; preds = %lor.lhs.false, %if.end11
  %27 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4586
  %type_code15 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %27, i32 0, i32 1, !dbg !4588
  store i32 1, i32* %type_code15, align 4, !dbg !4589
  %28 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4590
  %type16 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %28, i32 0, i32 0, !dbg !4591
  store i32 1, i32* %type16, align 8, !dbg !4592
  %29 = load i32*, i32** %res, align 8, !dbg !4593
  %30 = bitcast i32* %29 to i8*, !dbg !4594
  %31 = load i32*, i32** %smp, align 8, !dbg !4595
  %32 = bitcast i32* %31 to i8*, !dbg !4594
  %33 = load i32, i32* %n, align 4, !dbg !4596
  %conv17 = sext i32 %33 to i64, !dbg !4596
  %mul = mul i64 %conv17, 4, !dbg !4597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %mul, i32 4, i1 false), !dbg !4594
  %34 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4598
  %35 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4599
  %call18 = call i64 @subframe_count_exact(%struct.FlacEncodeContext* %34, %struct.FlacSubframe* %35, i32 0), !dbg !4600
  %conv19 = trunc i64 %call18 to i32, !dbg !4600
  store i32 %conv19, i32* %retval, align 4, !dbg !4601
  br label %return, !dbg !4601

if.end20:                                         ; preds = %lor.lhs.false
  %36 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4602
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %36, i32 0, i32 14, !dbg !4603
  %min_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 5, !dbg !4604
  %37 = load i32, i32* %min_prediction_order, align 4, !dbg !4604
  store i32 %37, i32* %min_order, align 4, !dbg !4605
  %38 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4606
  %options21 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %38, i32 0, i32 14, !dbg !4607
  %max_prediction_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options21, i32 0, i32 6, !dbg !4608
  %39 = load i32, i32* %max_prediction_order, align 8, !dbg !4608
  store i32 %39, i32* %max_order, align 4, !dbg !4609
  %40 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4610
  %options22 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %40, i32 0, i32 14, !dbg !4611
  %prediction_order_method = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options22, i32 0, i32 7, !dbg !4612
  %41 = load i32, i32* %prediction_order_method, align 4, !dbg !4612
  store i32 %41, i32* %omethod, align 4, !dbg !4613
  %42 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4614
  %type23 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %42, i32 0, i32 0, !dbg !4615
  store i32 8, i32* %type23, align 8, !dbg !4616
  %43 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4617
  %options24 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %43, i32 0, i32 14, !dbg !4619
  %lpc_type = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options24, i32 0, i32 2, !dbg !4620
  %44 = load i32, i32* %lpc_type, align 8, !dbg !4620
  %cmp25 = icmp eq i32 %44, 0, !dbg !4621
  br i1 %cmp25, label %if.then35, label %lor.lhs.false27, !dbg !4622

lor.lhs.false27:                                  ; preds = %if.end20
  %45 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4623
  %options28 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %45, i32 0, i32 14, !dbg !4624
  %lpc_type29 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options28, i32 0, i32 2, !dbg !4625
  %46 = load i32, i32* %lpc_type29, align 8, !dbg !4625
  %cmp30 = icmp eq i32 %46, 1, !dbg !4626
  br i1 %cmp30, label %if.then35, label %lor.lhs.false32, !dbg !4627

lor.lhs.false32:                                  ; preds = %lor.lhs.false27
  %47 = load i32, i32* %n, align 4, !dbg !4628
  %48 = load i32, i32* %max_order, align 4, !dbg !4630
  %cmp33 = icmp sle i32 %47, %48, !dbg !4631
  br i1 %cmp33, label %if.then35, label %if.end73, !dbg !4632

if.then35:                                        ; preds = %lor.lhs.false32, %lor.lhs.false27, %if.end20
  call void @llvm.dbg.declare(metadata [5 x i64]* %bits, metadata !4634, metadata !1730), !dbg !4639
  %49 = load i32, i32* %max_order, align 4, !dbg !4640
  %cmp36 = icmp sgt i32 %49, 4, !dbg !4642
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !4643

if.then38:                                        ; preds = %if.then35
  store i32 4, i32* %max_order, align 4, !dbg !4644
  br label %if.end39, !dbg !4645

if.end39:                                         ; preds = %if.then38, %if.then35
  store i32 0, i32* %opt_order, align 4, !dbg !4646
  %arrayidx40 = getelementptr inbounds [5 x i64], [5 x i64]* %bits, i64 0, i64 0, !dbg !4647
  store i64 4294967295, i64* %arrayidx40, align 16, !dbg !4648
  %50 = load i32, i32* %min_order, align 4, !dbg !4649
  store i32 %50, i32* %i, align 4, !dbg !4651
  br label %for.cond41, !dbg !4652

for.cond41:                                       ; preds = %for.inc56, %if.end39
  %51 = load i32, i32* %i, align 4, !dbg !4653
  %52 = load i32, i32* %max_order, align 4, !dbg !4656
  %cmp42 = icmp sle i32 %51, %52, !dbg !4657
  br i1 %cmp42, label %for.body44, label %for.end58, !dbg !4658

for.body44:                                       ; preds = %for.cond41
  %53 = load i32*, i32** %res, align 8, !dbg !4659
  %54 = load i32*, i32** %smp, align 8, !dbg !4661
  %55 = load i32, i32* %n, align 4, !dbg !4662
  %56 = load i32, i32* %i, align 4, !dbg !4663
  call void @encode_residual_fixed(i32* %53, i32* %54, i32 %55, i32 %56), !dbg !4664
  %57 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4665
  %58 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4666
  %59 = load i32, i32* %i, align 4, !dbg !4667
  %call45 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %57, %struct.FlacSubframe* %58, i32 %59), !dbg !4668
  %60 = load i32, i32* %i, align 4, !dbg !4669
  %idxprom46 = sext i32 %60 to i64, !dbg !4670
  %arrayidx47 = getelementptr inbounds [5 x i64], [5 x i64]* %bits, i64 0, i64 %idxprom46, !dbg !4670
  store i64 %call45, i64* %arrayidx47, align 8, !dbg !4671
  %61 = load i32, i32* %i, align 4, !dbg !4672
  %idxprom48 = sext i32 %61 to i64, !dbg !4674
  %arrayidx49 = getelementptr inbounds [5 x i64], [5 x i64]* %bits, i64 0, i64 %idxprom48, !dbg !4674
  %62 = load i64, i64* %arrayidx49, align 8, !dbg !4674
  %63 = load i32, i32* %opt_order, align 4, !dbg !4675
  %idxprom50 = sext i32 %63 to i64, !dbg !4676
  %arrayidx51 = getelementptr inbounds [5 x i64], [5 x i64]* %bits, i64 0, i64 %idxprom50, !dbg !4676
  %64 = load i64, i64* %arrayidx51, align 8, !dbg !4676
  %cmp52 = icmp ult i64 %62, %64, !dbg !4677
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !4678

if.then54:                                        ; preds = %for.body44
  %65 = load i32, i32* %i, align 4, !dbg !4679
  store i32 %65, i32* %opt_order, align 4, !dbg !4680
  br label %if.end55, !dbg !4681

if.end55:                                         ; preds = %if.then54, %for.body44
  br label %for.inc56, !dbg !4682

for.inc56:                                        ; preds = %if.end55
  %66 = load i32, i32* %i, align 4, !dbg !4683
  %inc57 = add nsw i32 %66, 1, !dbg !4683
  store i32 %inc57, i32* %i, align 4, !dbg !4683
  br label %for.cond41, !dbg !4685, !llvm.loop !4686

for.end58:                                        ; preds = %for.cond41
  %67 = load i32, i32* %opt_order, align 4, !dbg !4688
  %68 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4689
  %order = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %68, i32 0, i32 4, !dbg !4690
  store i32 %67, i32* %order, align 8, !dbg !4691
  %69 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4692
  %type59 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %69, i32 0, i32 0, !dbg !4693
  %70 = load i32, i32* %type59, align 8, !dbg !4693
  %71 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4694
  %order60 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %71, i32 0, i32 4, !dbg !4695
  %72 = load i32, i32* %order60, align 8, !dbg !4695
  %or = or i32 %70, %72, !dbg !4696
  %73 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4697
  %type_code61 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %73, i32 0, i32 1, !dbg !4698
  store i32 %or, i32* %type_code61, align 4, !dbg !4699
  %74 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4700
  %order62 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %74, i32 0, i32 4, !dbg !4702
  %75 = load i32, i32* %order62, align 8, !dbg !4702
  %76 = load i32, i32* %max_order, align 4, !dbg !4703
  %cmp63 = icmp ne i32 %75, %76, !dbg !4704
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !4705

if.then65:                                        ; preds = %for.end58
  %77 = load i32*, i32** %res, align 8, !dbg !4706
  %78 = load i32*, i32** %smp, align 8, !dbg !4708
  %79 = load i32, i32* %n, align 4, !dbg !4709
  %80 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4710
  %order66 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %80, i32 0, i32 4, !dbg !4711
  %81 = load i32, i32* %order66, align 8, !dbg !4711
  call void @encode_residual_fixed(i32* %77, i32* %78, i32 %79, i32 %81), !dbg !4712
  %82 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4713
  %83 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4714
  %84 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4715
  %order67 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %84, i32 0, i32 4, !dbg !4716
  %85 = load i32, i32* %order67, align 8, !dbg !4716
  %call68 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %82, %struct.FlacSubframe* %83, i32 %85), !dbg !4717
  br label %if.end69, !dbg !4718

if.end69:                                         ; preds = %if.then65, %for.end58
  %86 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4719
  %87 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4720
  %88 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4721
  %order70 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %88, i32 0, i32 4, !dbg !4722
  %89 = load i32, i32* %order70, align 8, !dbg !4722
  %call71 = call i64 @subframe_count_exact(%struct.FlacEncodeContext* %86, %struct.FlacSubframe* %87, i32 %89), !dbg !4723
  %conv72 = trunc i64 %call71 to i32, !dbg !4723
  store i32 %conv72, i32* %retval, align 4, !dbg !4724
  br label %return, !dbg !4724

if.end73:                                         ; preds = %lor.lhs.false32
  %90 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4725
  %type74 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %90, i32 0, i32 0, !dbg !4726
  store i32 32, i32* %type74, align 8, !dbg !4727
  %91 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4728
  %lpc_ctx = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %91, i32 0, i32 17, !dbg !4729
  %92 = load i32*, i32** %smp, align 8, !dbg !4730
  %93 = load i32, i32* %n, align 4, !dbg !4731
  %94 = load i32, i32* %min_order, align 4, !dbg !4732
  %95 = load i32, i32* %max_order, align 4, !dbg !4733
  %96 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4734
  %options75 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %96, i32 0, i32 14, !dbg !4735
  %lpc_coeff_precision = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options75, i32 0, i32 4, !dbg !4736
  %97 = load i32, i32* %lpc_coeff_precision, align 8, !dbg !4736
  %arraydecay76 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i32 0, i32 0, !dbg !4737
  %arraydecay77 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i32 0, i32 0, !dbg !4738
  %98 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4739
  %options78 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %98, i32 0, i32 14, !dbg !4740
  %lpc_type79 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options78, i32 0, i32 2, !dbg !4741
  %99 = load i32, i32* %lpc_type79, align 8, !dbg !4741
  %100 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4742
  %options80 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %100, i32 0, i32 14, !dbg !4743
  %lpc_passes = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options80, i32 0, i32 3, !dbg !4744
  %101 = load i32, i32* %lpc_passes, align 4, !dbg !4744
  %102 = load i32, i32* %omethod, align 4, !dbg !4745
  %call81 = call i32 @ff_lpc_calc_coefs(%struct.LPCContext* %lpc_ctx, i32* %92, i32 %93, i32 %94, i32 %95, i32 %97, [32 x i32]* %arraydecay76, i32* %arraydecay77, i32 %99, i32 %101, i32 %102, i32 0, i32 15, i32 0), !dbg !4746
  store i32 %call81, i32* %opt_order, align 4, !dbg !4747
  %103 = load i32, i32* %omethod, align 4, !dbg !4748
  %cmp82 = icmp eq i32 %103, 1, !dbg !4749
  br i1 %cmp82, label %if.then90, label %lor.lhs.false84, !dbg !4750

lor.lhs.false84:                                  ; preds = %if.end73
  %104 = load i32, i32* %omethod, align 4, !dbg !4751
  %cmp85 = icmp eq i32 %104, 2, !dbg !4752
  br i1 %cmp85, label %if.then90, label %lor.lhs.false87, !dbg !4753

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %105 = load i32, i32* %omethod, align 4, !dbg !4754
  %cmp88 = icmp eq i32 %105, 3, !dbg !4755
  br i1 %cmp88, label %if.then90, label %if.else153, !dbg !4756

if.then90:                                        ; preds = %lor.lhs.false87, %lor.lhs.false84, %if.end73
  call void @llvm.dbg.declare(metadata i32* %levels, metadata !4757, metadata !1730), !dbg !4758
  %106 = load i32, i32* %omethod, align 4, !dbg !4759
  %shl = shl i32 1, %106, !dbg !4760
  store i32 %shl, i32* %levels, align 4, !dbg !4758
  call void @llvm.dbg.declare(metadata [8 x i64]* %bits91, metadata !4761, metadata !1730), !dbg !4762
  call void @llvm.dbg.declare(metadata i32* %order92, metadata !4763, metadata !1730), !dbg !4764
  store i32 -1, i32* %order92, align 4, !dbg !4764
  call void @llvm.dbg.declare(metadata i32* %opt_index, metadata !4765, metadata !1730), !dbg !4766
  %107 = load i32, i32* %levels, align 4, !dbg !4767
  %sub93 = sub nsw i32 %107, 1, !dbg !4768
  store i32 %sub93, i32* %opt_index, align 4, !dbg !4766
  %108 = load i32, i32* %max_order, align 4, !dbg !4769
  %sub94 = sub nsw i32 %108, 1, !dbg !4770
  store i32 %sub94, i32* %opt_order, align 4, !dbg !4771
  %109 = load i32, i32* %opt_index, align 4, !dbg !4772
  %idxprom95 = sext i32 %109 to i64, !dbg !4773
  %arrayidx96 = getelementptr inbounds [8 x i64], [8 x i64]* %bits91, i64 0, i64 %idxprom95, !dbg !4773
  store i64 4294967295, i64* %arrayidx96, align 8, !dbg !4774
  %110 = load i32, i32* %levels, align 4, !dbg !4775
  %sub97 = sub nsw i32 %110, 1, !dbg !4776
  store i32 %sub97, i32* %i, align 4, !dbg !4777
  br label %for.cond98, !dbg !4778

for.cond98:                                       ; preds = %for.inc150, %if.then90
  %111 = load i32, i32* %i, align 4, !dbg !4779
  %cmp99 = icmp sge i32 %111, 0, !dbg !4781
  br i1 %cmp99, label %for.body101, label %for.end151, !dbg !4782

for.body101:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata i32* %last_order, metadata !4783, metadata !1730), !dbg !4784
  %112 = load i32, i32* %order92, align 4, !dbg !4785
  store i32 %112, i32* %last_order, align 4, !dbg !4784
  %113 = load i32, i32* %min_order, align 4, !dbg !4786
  %114 = load i32, i32* %max_order, align 4, !dbg !4787
  %115 = load i32, i32* %min_order, align 4, !dbg !4788
  %sub102 = sub nsw i32 %114, %115, !dbg !4789
  %add = add nsw i32 %sub102, 1, !dbg !4790
  %116 = load i32, i32* %i, align 4, !dbg !4791
  %add103 = add nsw i32 %116, 1, !dbg !4792
  %mul104 = mul nsw i32 %add, %add103, !dbg !4793
  %117 = load i32, i32* %levels, align 4, !dbg !4794
  %div = sdiv i32 %mul104, %117, !dbg !4795
  %add105 = add nsw i32 %113, %div, !dbg !4796
  %sub106 = sub nsw i32 %add105, 1, !dbg !4797
  store i32 %sub106, i32* %order92, align 4, !dbg !4798
  %118 = load i32, i32* %order92, align 4, !dbg !4799
  %119 = load i32, i32* %min_order, align 4, !dbg !4800
  %sub107 = sub nsw i32 %119, 1, !dbg !4801
  %120 = load i32, i32* %max_order, align 4, !dbg !4802
  %sub108 = sub nsw i32 %120, 1, !dbg !4803
  store i32 %118, i32* %a.addr.i, align 4, !dbg !4804
  store i32 %sub107, i32* %amin.addr.i, align 4, !dbg !4804
  store i32 %sub108, i32* %amax.addr.i, align 4, !dbg !4804
  %121 = load i32, i32* %a.addr.i, align 4, !dbg !4805
  %122 = load i32, i32* %amin.addr.i, align 4, !dbg !4807
  %cmp.i = icmp slt i32 %121, %122, !dbg !4808
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4809

if.then.i:                                        ; preds = %for.body101
  %123 = load i32, i32* %amin.addr.i, align 4, !dbg !4810
  store i32 %123, i32* %retval.i, align 4, !dbg !4812
  br label %av_clip_c.exit, !dbg !4812

if.else.i:                                        ; preds = %for.body101
  %124 = load i32, i32* %a.addr.i, align 4, !dbg !4813
  %125 = load i32, i32* %amax.addr.i, align 4, !dbg !4815
  %cmp1.i = icmp sgt i32 %124, %125, !dbg !4816
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4817

if.then2.i:                                       ; preds = %if.else.i
  %126 = load i32, i32* %amax.addr.i, align 4, !dbg !4818
  store i32 %126, i32* %retval.i, align 4, !dbg !4820
  br label %av_clip_c.exit, !dbg !4820

if.else3.i:                                       ; preds = %if.else.i
  %127 = load i32, i32* %a.addr.i, align 4, !dbg !4821
  store i32 %127, i32* %retval.i, align 4, !dbg !4822
  br label %av_clip_c.exit, !dbg !4822

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %128 = load i32, i32* %retval.i, align 4, !dbg !4823
  store i32 %128, i32* %order92, align 4, !dbg !4824
  %129 = load i32, i32* %order92, align 4, !dbg !4825
  %130 = load i32, i32* %last_order, align 4, !dbg !4827
  %cmp110 = icmp eq i32 %129, %130, !dbg !4828
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !4829

if.then112:                                       ; preds = %av_clip_c.exit
  br label %for.inc150, !dbg !4830

if.end113:                                        ; preds = %av_clip_c.exit
  %131 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4831
  %bps_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %131, i32 0, i32 5, !dbg !4833
  %132 = load i32, i32* %bps_code, align 32, !dbg !4833
  %mul114 = mul nsw i32 %132, 4, !dbg !4834
  %133 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4835
  %options115 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %133, i32 0, i32 14, !dbg !4836
  %lpc_coeff_precision116 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options115, i32 0, i32 4, !dbg !4837
  %134 = load i32, i32* %lpc_coeff_precision116, align 8, !dbg !4837
  %add117 = add nsw i32 %mul114, %134, !dbg !4838
  %135 = load i32, i32* %order92, align 4, !dbg !4839
  %or118 = or i32 %135, 1, !dbg !4840
  %136 = call i32 @llvm.ctlz.i32(i32 %or118, i1 true), !dbg !4841
  %sub119 = sub nsw i32 31, %136, !dbg !4842
  %add120 = add nsw i32 %add117, %sub119, !dbg !4843
  %cmp121 = icmp sle i32 %add120, 32, !dbg !4844
  br i1 %cmp121, label %if.then123, label %if.else, !dbg !4845

if.then123:                                       ; preds = %if.end113
  %137 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4846
  %flac_dsp = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %137, i32 0, i32 22, !dbg !4848
  %lpc16_encode = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp, i32 0, i32 3, !dbg !4849
  %138 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc16_encode, align 8, !dbg !4849
  %139 = load i32*, i32** %res, align 8, !dbg !4850
  %140 = load i32*, i32** %smp, align 8, !dbg !4851
  %141 = load i32, i32* %n, align 4, !dbg !4852
  %142 = load i32, i32* %order92, align 4, !dbg !4853
  %add124 = add nsw i32 %142, 1, !dbg !4854
  %143 = load i32, i32* %order92, align 4, !dbg !4855
  %idxprom125 = sext i32 %143 to i64, !dbg !4856
  %arrayidx126 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom125, !dbg !4856
  %arraydecay127 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx126, i32 0, i32 0, !dbg !4856
  %144 = load i32, i32* %order92, align 4, !dbg !4857
  %idxprom128 = sext i32 %144 to i64, !dbg !4858
  %arrayidx129 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom128, !dbg !4858
  %145 = load i32, i32* %arrayidx129, align 4, !dbg !4858
  call void %138(i32* %139, i32* %140, i32 %141, i32 %add124, i32* %arraydecay127, i32 %145), !dbg !4846
  br label %if.end137, !dbg !4859

if.else:                                          ; preds = %if.end113
  %146 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4860
  %flac_dsp130 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %146, i32 0, i32 22, !dbg !4862
  %lpc32_encode = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp130, i32 0, i32 4, !dbg !4863
  %147 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc32_encode, align 8, !dbg !4863
  %148 = load i32*, i32** %res, align 8, !dbg !4864
  %149 = load i32*, i32** %smp, align 8, !dbg !4865
  %150 = load i32, i32* %n, align 4, !dbg !4866
  %151 = load i32, i32* %order92, align 4, !dbg !4867
  %add131 = add nsw i32 %151, 1, !dbg !4868
  %152 = load i32, i32* %order92, align 4, !dbg !4869
  %idxprom132 = sext i32 %152 to i64, !dbg !4870
  %arrayidx133 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom132, !dbg !4870
  %arraydecay134 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx133, i32 0, i32 0, !dbg !4870
  %153 = load i32, i32* %order92, align 4, !dbg !4871
  %idxprom135 = sext i32 %153 to i64, !dbg !4872
  %arrayidx136 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom135, !dbg !4872
  %154 = load i32, i32* %arrayidx136, align 4, !dbg !4872
  call void %147(i32* %148, i32* %149, i32 %150, i32 %add131, i32* %arraydecay134, i32 %154), !dbg !4860
  br label %if.end137

if.end137:                                        ; preds = %if.else, %if.then123
  %155 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4873
  %156 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4874
  %157 = load i32, i32* %order92, align 4, !dbg !4875
  %add138 = add nsw i32 %157, 1, !dbg !4876
  %call139 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %155, %struct.FlacSubframe* %156, i32 %add138), !dbg !4877
  %158 = load i32, i32* %i, align 4, !dbg !4878
  %idxprom140 = sext i32 %158 to i64, !dbg !4879
  %arrayidx141 = getelementptr inbounds [8 x i64], [8 x i64]* %bits91, i64 0, i64 %idxprom140, !dbg !4879
  store i64 %call139, i64* %arrayidx141, align 8, !dbg !4880
  %159 = load i32, i32* %i, align 4, !dbg !4881
  %idxprom142 = sext i32 %159 to i64, !dbg !4883
  %arrayidx143 = getelementptr inbounds [8 x i64], [8 x i64]* %bits91, i64 0, i64 %idxprom142, !dbg !4883
  %160 = load i64, i64* %arrayidx143, align 8, !dbg !4883
  %161 = load i32, i32* %opt_index, align 4, !dbg !4884
  %idxprom144 = sext i32 %161 to i64, !dbg !4885
  %arrayidx145 = getelementptr inbounds [8 x i64], [8 x i64]* %bits91, i64 0, i64 %idxprom144, !dbg !4885
  %162 = load i64, i64* %arrayidx145, align 8, !dbg !4885
  %cmp146 = icmp ult i64 %160, %162, !dbg !4886
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !4887

if.then148:                                       ; preds = %if.end137
  %163 = load i32, i32* %i, align 4, !dbg !4888
  store i32 %163, i32* %opt_index, align 4, !dbg !4890
  %164 = load i32, i32* %order92, align 4, !dbg !4891
  store i32 %164, i32* %opt_order, align 4, !dbg !4892
  br label %if.end149, !dbg !4893

if.end149:                                        ; preds = %if.then148, %if.end137
  br label %for.inc150, !dbg !4894

for.inc150:                                       ; preds = %if.end149, %if.then112
  %165 = load i32, i32* %i, align 4, !dbg !4895
  %dec = add nsw i32 %165, -1, !dbg !4895
  store i32 %dec, i32* %i, align 4, !dbg !4895
  br label %for.cond98, !dbg !4897, !llvm.loop !4898

for.end151:                                       ; preds = %for.cond98
  %166 = load i32, i32* %opt_order, align 4, !dbg !4900
  %inc152 = add nsw i32 %166, 1, !dbg !4900
  store i32 %inc152, i32* %opt_order, align 4, !dbg !4900
  br label %if.end290, !dbg !4901

if.else153:                                       ; preds = %lor.lhs.false87
  %167 = load i32, i32* %omethod, align 4, !dbg !4902
  %cmp154 = icmp eq i32 %167, 4, !dbg !4905
  br i1 %cmp154, label %if.then156, label %if.else209, !dbg !4902

if.then156:                                       ; preds = %if.else153
  call void @llvm.dbg.declare(metadata [32 x i64]* %bits157, metadata !4906, metadata !1730), !dbg !4909
  store i32 0, i32* %opt_order, align 4, !dbg !4910
  %arrayidx158 = getelementptr inbounds [32 x i64], [32 x i64]* %bits157, i64 0, i64 0, !dbg !4911
  store i64 4294967295, i64* %arrayidx158, align 16, !dbg !4912
  %168 = load i32, i32* %min_order, align 4, !dbg !4913
  %sub159 = sub nsw i32 %168, 1, !dbg !4915
  store i32 %sub159, i32* %i, align 4, !dbg !4916
  br label %for.cond160, !dbg !4917

for.cond160:                                      ; preds = %for.inc205, %if.then156
  %169 = load i32, i32* %i, align 4, !dbg !4918
  %170 = load i32, i32* %max_order, align 4, !dbg !4921
  %cmp161 = icmp slt i32 %169, %170, !dbg !4922
  br i1 %cmp161, label %for.body163, label %for.end207, !dbg !4923

for.body163:                                      ; preds = %for.cond160
  %171 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4924
  %bps_code164 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %171, i32 0, i32 5, !dbg !4927
  %172 = load i32, i32* %bps_code164, align 32, !dbg !4927
  %mul165 = mul nsw i32 %172, 4, !dbg !4928
  %173 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4929
  %options166 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %173, i32 0, i32 14, !dbg !4930
  %lpc_coeff_precision167 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options166, i32 0, i32 4, !dbg !4931
  %174 = load i32, i32* %lpc_coeff_precision167, align 8, !dbg !4931
  %add168 = add nsw i32 %mul165, %174, !dbg !4932
  %175 = load i32, i32* %i, align 4, !dbg !4933
  %or169 = or i32 %175, 1, !dbg !4934
  %176 = call i32 @llvm.ctlz.i32(i32 %or169, i1 true), !dbg !4935
  %sub170 = sub nsw i32 31, %176, !dbg !4936
  %add171 = add nsw i32 %add168, %sub170, !dbg !4937
  %cmp172 = icmp sle i32 %add171, 32, !dbg !4938
  br i1 %cmp172, label %if.then174, label %if.else183, !dbg !4939

if.then174:                                       ; preds = %for.body163
  %177 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4940
  %flac_dsp175 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %177, i32 0, i32 22, !dbg !4942
  %lpc16_encode176 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp175, i32 0, i32 3, !dbg !4943
  %178 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc16_encode176, align 8, !dbg !4943
  %179 = load i32*, i32** %res, align 8, !dbg !4944
  %180 = load i32*, i32** %smp, align 8, !dbg !4945
  %181 = load i32, i32* %n, align 4, !dbg !4946
  %182 = load i32, i32* %i, align 4, !dbg !4947
  %add177 = add nsw i32 %182, 1, !dbg !4948
  %183 = load i32, i32* %i, align 4, !dbg !4949
  %idxprom178 = sext i32 %183 to i64, !dbg !4950
  %arrayidx179 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom178, !dbg !4950
  %arraydecay180 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx179, i32 0, i32 0, !dbg !4950
  %184 = load i32, i32* %i, align 4, !dbg !4951
  %idxprom181 = sext i32 %184 to i64, !dbg !4952
  %arrayidx182 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom181, !dbg !4952
  %185 = load i32, i32* %arrayidx182, align 4, !dbg !4952
  call void %178(i32* %179, i32* %180, i32 %181, i32 %add177, i32* %arraydecay180, i32 %185), !dbg !4940
  br label %if.end192, !dbg !4953

if.else183:                                       ; preds = %for.body163
  %186 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4954
  %flac_dsp184 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %186, i32 0, i32 22, !dbg !4956
  %lpc32_encode185 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp184, i32 0, i32 4, !dbg !4957
  %187 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc32_encode185, align 8, !dbg !4957
  %188 = load i32*, i32** %res, align 8, !dbg !4958
  %189 = load i32*, i32** %smp, align 8, !dbg !4959
  %190 = load i32, i32* %n, align 4, !dbg !4960
  %191 = load i32, i32* %i, align 4, !dbg !4961
  %add186 = add nsw i32 %191, 1, !dbg !4962
  %192 = load i32, i32* %i, align 4, !dbg !4963
  %idxprom187 = sext i32 %192 to i64, !dbg !4964
  %arrayidx188 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom187, !dbg !4964
  %arraydecay189 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx188, i32 0, i32 0, !dbg !4964
  %193 = load i32, i32* %i, align 4, !dbg !4965
  %idxprom190 = sext i32 %193 to i64, !dbg !4966
  %arrayidx191 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom190, !dbg !4966
  %194 = load i32, i32* %arrayidx191, align 4, !dbg !4966
  call void %187(i32* %188, i32* %189, i32 %190, i32 %add186, i32* %arraydecay189, i32 %194), !dbg !4954
  br label %if.end192

if.end192:                                        ; preds = %if.else183, %if.then174
  %195 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !4967
  %196 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !4968
  %197 = load i32, i32* %i, align 4, !dbg !4969
  %add193 = add nsw i32 %197, 1, !dbg !4970
  %call194 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %195, %struct.FlacSubframe* %196, i32 %add193), !dbg !4971
  %198 = load i32, i32* %i, align 4, !dbg !4972
  %idxprom195 = sext i32 %198 to i64, !dbg !4973
  %arrayidx196 = getelementptr inbounds [32 x i64], [32 x i64]* %bits157, i64 0, i64 %idxprom195, !dbg !4973
  store i64 %call194, i64* %arrayidx196, align 8, !dbg !4974
  %199 = load i32, i32* %i, align 4, !dbg !4975
  %idxprom197 = sext i32 %199 to i64, !dbg !4977
  %arrayidx198 = getelementptr inbounds [32 x i64], [32 x i64]* %bits157, i64 0, i64 %idxprom197, !dbg !4977
  %200 = load i64, i64* %arrayidx198, align 8, !dbg !4977
  %201 = load i32, i32* %opt_order, align 4, !dbg !4978
  %idxprom199 = sext i32 %201 to i64, !dbg !4979
  %arrayidx200 = getelementptr inbounds [32 x i64], [32 x i64]* %bits157, i64 0, i64 %idxprom199, !dbg !4979
  %202 = load i64, i64* %arrayidx200, align 8, !dbg !4979
  %cmp201 = icmp ult i64 %200, %202, !dbg !4980
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !4981

if.then203:                                       ; preds = %if.end192
  %203 = load i32, i32* %i, align 4, !dbg !4982
  store i32 %203, i32* %opt_order, align 4, !dbg !4983
  br label %if.end204, !dbg !4984

if.end204:                                        ; preds = %if.then203, %if.end192
  br label %for.inc205, !dbg !4985

for.inc205:                                       ; preds = %if.end204
  %204 = load i32, i32* %i, align 4, !dbg !4986
  %inc206 = add nsw i32 %204, 1, !dbg !4986
  store i32 %inc206, i32* %i, align 4, !dbg !4986
  br label %for.cond160, !dbg !4988, !llvm.loop !4989

for.end207:                                       ; preds = %for.cond160
  %205 = load i32, i32* %opt_order, align 4, !dbg !4991
  %inc208 = add nsw i32 %205, 1, !dbg !4991
  store i32 %inc208, i32* %opt_order, align 4, !dbg !4991
  br label %if.end289, !dbg !4992

if.else209:                                       ; preds = %if.else153
  %206 = load i32, i32* %omethod, align 4, !dbg !4993
  %cmp210 = icmp eq i32 %206, 5, !dbg !4996
  br i1 %cmp210, label %if.then212, label %if.end288, !dbg !4993

if.then212:                                       ; preds = %if.else209
  call void @llvm.dbg.declare(metadata [32 x i64]* %bits213, metadata !4997, metadata !1730), !dbg !4999
  call void @llvm.dbg.declare(metadata i32* %step, metadata !5000, metadata !1730), !dbg !5001
  %207 = load i32, i32* %min_order, align 4, !dbg !5002
  %sub214 = sub nsw i32 %207, 1, !dbg !5003
  %208 = load i32, i32* %max_order, align 4, !dbg !5004
  %209 = load i32, i32* %min_order, align 4, !dbg !5005
  %sub215 = sub nsw i32 %208, %209, !dbg !5006
  %div216 = sdiv i32 %sub215, 3, !dbg !5007
  %add217 = add nsw i32 %sub214, %div216, !dbg !5008
  store i32 %add217, i32* %opt_order, align 4, !dbg !5009
  %arraydecay218 = getelementptr inbounds [32 x i64], [32 x i64]* %bits213, i32 0, i32 0, !dbg !5010
  %210 = bitcast i64* %arraydecay218 to i8*, !dbg !5010
  call void @llvm.memset.p0i8.i64(i8* %210, i8 -1, i64 256, i32 16, i1 false), !dbg !5010
  store i32 16, i32* %step, align 4, !dbg !5011
  br label %for.cond219, !dbg !5013

for.cond219:                                      ; preds = %for.inc285, %if.then212
  %211 = load i32, i32* %step, align 4, !dbg !5014
  %tobool220 = icmp ne i32 %211, 0, !dbg !5017
  br i1 %tobool220, label %for.body221, label %for.end286, !dbg !5017

for.body221:                                      ; preds = %for.cond219
  call void @llvm.dbg.declare(metadata i32* %last, metadata !5018, metadata !1730), !dbg !5020
  %212 = load i32, i32* %opt_order, align 4, !dbg !5021
  store i32 %212, i32* %last, align 4, !dbg !5020
  %213 = load i32, i32* %last, align 4, !dbg !5022
  %214 = load i32, i32* %step, align 4, !dbg !5024
  %sub222 = sub nsw i32 %213, %214, !dbg !5025
  store i32 %sub222, i32* %i, align 4, !dbg !5026
  br label %for.cond223, !dbg !5027

for.cond223:                                      ; preds = %for.inc282, %for.body221
  %215 = load i32, i32* %i, align 4, !dbg !5028
  %216 = load i32, i32* %last, align 4, !dbg !5031
  %217 = load i32, i32* %step, align 4, !dbg !5032
  %add224 = add nsw i32 %216, %217, !dbg !5033
  %cmp225 = icmp sle i32 %215, %add224, !dbg !5034
  br i1 %cmp225, label %for.body227, label %for.end284, !dbg !5035

for.body227:                                      ; preds = %for.cond223
  %218 = load i32, i32* %i, align 4, !dbg !5036
  %219 = load i32, i32* %min_order, align 4, !dbg !5039
  %sub228 = sub nsw i32 %219, 1, !dbg !5040
  %cmp229 = icmp slt i32 %218, %sub228, !dbg !5041
  br i1 %cmp229, label %if.then239, label %lor.lhs.false231, !dbg !5042

lor.lhs.false231:                                 ; preds = %for.body227
  %220 = load i32, i32* %i, align 4, !dbg !5043
  %221 = load i32, i32* %max_order, align 4, !dbg !5045
  %cmp232 = icmp sge i32 %220, %221, !dbg !5046
  br i1 %cmp232, label %if.then239, label %lor.lhs.false234, !dbg !5047

lor.lhs.false234:                                 ; preds = %lor.lhs.false231
  %222 = load i32, i32* %i, align 4, !dbg !5048
  %idxprom235 = sext i32 %222 to i64, !dbg !5050
  %arrayidx236 = getelementptr inbounds [32 x i64], [32 x i64]* %bits213, i64 0, i64 %idxprom235, !dbg !5050
  %223 = load i64, i64* %arrayidx236, align 8, !dbg !5050
  %cmp237 = icmp ult i64 %223, 4294967295, !dbg !5051
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !5052

if.then239:                                       ; preds = %lor.lhs.false234, %lor.lhs.false231, %for.body227
  br label %for.inc282, !dbg !5053

if.end240:                                        ; preds = %lor.lhs.false234
  %224 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5054
  %bps_code241 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %224, i32 0, i32 5, !dbg !5056
  %225 = load i32, i32* %bps_code241, align 32, !dbg !5056
  %mul242 = mul nsw i32 %225, 4, !dbg !5057
  %226 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5058
  %options243 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %226, i32 0, i32 14, !dbg !5059
  %lpc_coeff_precision244 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options243, i32 0, i32 4, !dbg !5060
  %227 = load i32, i32* %lpc_coeff_precision244, align 8, !dbg !5060
  %add245 = add nsw i32 %mul242, %227, !dbg !5061
  %228 = load i32, i32* %i, align 4, !dbg !5062
  %or246 = or i32 %228, 1, !dbg !5063
  %229 = call i32 @llvm.ctlz.i32(i32 %or246, i1 true), !dbg !5064
  %sub247 = sub nsw i32 31, %229, !dbg !5065
  %add248 = add nsw i32 %add245, %sub247, !dbg !5066
  %cmp249 = icmp sle i32 %add248, 32, !dbg !5067
  br i1 %cmp249, label %if.then251, label %if.else260, !dbg !5068

if.then251:                                       ; preds = %if.end240
  %230 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5069
  %flac_dsp252 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %230, i32 0, i32 22, !dbg !5071
  %lpc32_encode253 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp252, i32 0, i32 4, !dbg !5072
  %231 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc32_encode253, align 8, !dbg !5072
  %232 = load i32*, i32** %res, align 8, !dbg !5073
  %233 = load i32*, i32** %smp, align 8, !dbg !5074
  %234 = load i32, i32* %n, align 4, !dbg !5075
  %235 = load i32, i32* %i, align 4, !dbg !5076
  %add254 = add nsw i32 %235, 1, !dbg !5077
  %236 = load i32, i32* %i, align 4, !dbg !5078
  %idxprom255 = sext i32 %236 to i64, !dbg !5079
  %arrayidx256 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom255, !dbg !5079
  %arraydecay257 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx256, i32 0, i32 0, !dbg !5079
  %237 = load i32, i32* %i, align 4, !dbg !5080
  %idxprom258 = sext i32 %237 to i64, !dbg !5081
  %arrayidx259 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom258, !dbg !5081
  %238 = load i32, i32* %arrayidx259, align 4, !dbg !5081
  call void %231(i32* %232, i32* %233, i32 %234, i32 %add254, i32* %arraydecay257, i32 %238), !dbg !5069
  br label %if.end269, !dbg !5082

if.else260:                                       ; preds = %if.end240
  %239 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5083
  %flac_dsp261 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %239, i32 0, i32 22, !dbg !5085
  %lpc16_encode262 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp261, i32 0, i32 3, !dbg !5086
  %240 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc16_encode262, align 8, !dbg !5086
  %241 = load i32*, i32** %res, align 8, !dbg !5087
  %242 = load i32*, i32** %smp, align 8, !dbg !5088
  %243 = load i32, i32* %n, align 4, !dbg !5089
  %244 = load i32, i32* %i, align 4, !dbg !5090
  %add263 = add nsw i32 %244, 1, !dbg !5091
  %245 = load i32, i32* %i, align 4, !dbg !5092
  %idxprom264 = sext i32 %245 to i64, !dbg !5093
  %arrayidx265 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom264, !dbg !5093
  %arraydecay266 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx265, i32 0, i32 0, !dbg !5093
  %246 = load i32, i32* %i, align 4, !dbg !5094
  %idxprom267 = sext i32 %246 to i64, !dbg !5095
  %arrayidx268 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom267, !dbg !5095
  %247 = load i32, i32* %arrayidx268, align 4, !dbg !5095
  call void %240(i32* %241, i32* %242, i32 %243, i32 %add263, i32* %arraydecay266, i32 %247), !dbg !5083
  br label %if.end269

if.end269:                                        ; preds = %if.else260, %if.then251
  %248 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5096
  %249 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5097
  %250 = load i32, i32* %i, align 4, !dbg !5098
  %add270 = add nsw i32 %250, 1, !dbg !5099
  %call271 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %248, %struct.FlacSubframe* %249, i32 %add270), !dbg !5100
  %251 = load i32, i32* %i, align 4, !dbg !5101
  %idxprom272 = sext i32 %251 to i64, !dbg !5102
  %arrayidx273 = getelementptr inbounds [32 x i64], [32 x i64]* %bits213, i64 0, i64 %idxprom272, !dbg !5102
  store i64 %call271, i64* %arrayidx273, align 8, !dbg !5103
  %252 = load i32, i32* %i, align 4, !dbg !5104
  %idxprom274 = sext i32 %252 to i64, !dbg !5106
  %arrayidx275 = getelementptr inbounds [32 x i64], [32 x i64]* %bits213, i64 0, i64 %idxprom274, !dbg !5106
  %253 = load i64, i64* %arrayidx275, align 8, !dbg !5106
  %254 = load i32, i32* %opt_order, align 4, !dbg !5107
  %idxprom276 = sext i32 %254 to i64, !dbg !5108
  %arrayidx277 = getelementptr inbounds [32 x i64], [32 x i64]* %bits213, i64 0, i64 %idxprom276, !dbg !5108
  %255 = load i64, i64* %arrayidx277, align 8, !dbg !5108
  %cmp278 = icmp ult i64 %253, %255, !dbg !5109
  br i1 %cmp278, label %if.then280, label %if.end281, !dbg !5110

if.then280:                                       ; preds = %if.end269
  %256 = load i32, i32* %i, align 4, !dbg !5111
  store i32 %256, i32* %opt_order, align 4, !dbg !5112
  br label %if.end281, !dbg !5113

if.end281:                                        ; preds = %if.then280, %if.end269
  br label %for.inc282, !dbg !5114

for.inc282:                                       ; preds = %if.end281, %if.then239
  %257 = load i32, i32* %step, align 4, !dbg !5115
  %258 = load i32, i32* %i, align 4, !dbg !5117
  %add283 = add nsw i32 %258, %257, !dbg !5117
  store i32 %add283, i32* %i, align 4, !dbg !5117
  br label %for.cond223, !dbg !5118, !llvm.loop !5119

for.end284:                                       ; preds = %for.cond223
  br label %for.inc285, !dbg !5121

for.inc285:                                       ; preds = %for.end284
  %259 = load i32, i32* %step, align 4, !dbg !5122
  %shr = ashr i32 %259, 1, !dbg !5122
  store i32 %shr, i32* %step, align 4, !dbg !5122
  br label %for.cond219, !dbg !5124, !llvm.loop !5125

for.end286:                                       ; preds = %for.cond219
  %260 = load i32, i32* %opt_order, align 4, !dbg !5127
  %inc287 = add nsw i32 %260, 1, !dbg !5127
  store i32 %inc287, i32* %opt_order, align 4, !dbg !5127
  br label %if.end288, !dbg !5128

if.end288:                                        ; preds = %for.end286, %if.else209
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %for.end207
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %for.end151
  %261 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5129
  %options291 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %261, i32 0, i32 14, !dbg !5130
  %multi_dim_quant = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options291, i32 0, i32 12, !dbg !5131
  %262 = load i32, i32* %multi_dim_quant, align 8, !dbg !5131
  %tobool292 = icmp ne i32 %262, 0, !dbg !5129
  br i1 %tobool292, label %if.then293, label %if.end384, !dbg !5132

if.then293:                                       ; preds = %if.end290
  call void @llvm.dbg.declare(metadata i32* %allsteps, metadata !5133, metadata !1730), !dbg !5134
  store i32 1, i32* %allsteps, align 4, !dbg !5134
  call void @llvm.dbg.declare(metadata i32* %i294, metadata !5135, metadata !1730), !dbg !5136
  call void @llvm.dbg.declare(metadata i32* %step295, metadata !5137, metadata !1730), !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %improved, metadata !5139, metadata !1730), !dbg !5140
  call void @llvm.dbg.declare(metadata i64* %best_score, metadata !5141, metadata !1730), !dbg !5142
  store i64 9223372036854775807, i64* %best_score, align 8, !dbg !5142
  call void @llvm.dbg.declare(metadata i32* %qmax, metadata !5143, metadata !1730), !dbg !5144
  %263 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5145
  %options296 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %263, i32 0, i32 14, !dbg !5146
  %lpc_coeff_precision297 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options296, i32 0, i32 4, !dbg !5147
  %264 = load i32, i32* %lpc_coeff_precision297, align 8, !dbg !5147
  %sub298 = sub nsw i32 %264, 1, !dbg !5148
  %shl299 = shl i32 1, %sub298, !dbg !5149
  %sub300 = sub nsw i32 %shl299, 1, !dbg !5150
  store i32 %sub300, i32* %qmax, align 4, !dbg !5151
  store i32 0, i32* %i294, align 4, !dbg !5152
  br label %for.cond301, !dbg !5154

for.cond301:                                      ; preds = %for.inc306, %if.then293
  %265 = load i32, i32* %i294, align 4, !dbg !5155
  %266 = load i32, i32* %opt_order, align 4, !dbg !5158
  %cmp302 = icmp slt i32 %265, %266, !dbg !5159
  br i1 %cmp302, label %for.body304, label %for.end308, !dbg !5160

for.body304:                                      ; preds = %for.cond301
  %267 = load i32, i32* %allsteps, align 4, !dbg !5161
  %mul305 = mul nsw i32 %267, 3, !dbg !5161
  store i32 %mul305, i32* %allsteps, align 4, !dbg !5161
  br label %for.inc306, !dbg !5162

for.inc306:                                       ; preds = %for.body304
  %268 = load i32, i32* %i294, align 4, !dbg !5163
  %inc307 = add nsw i32 %268, 1, !dbg !5163
  store i32 %inc307, i32* %i294, align 4, !dbg !5163
  br label %for.cond301, !dbg !5165, !llvm.loop !5166

for.end308:                                       ; preds = %for.cond301
  br label %do.body, !dbg !5168, !llvm.loop !5169

do.body:                                          ; preds = %do.cond, %for.end308
  store i32 0, i32* %improved, align 4, !dbg !5170
  store i32 0, i32* %step295, align 4, !dbg !5171
  br label %for.cond309, !dbg !5172

for.cond309:                                      ; preds = %for.inc380, %do.body
  %269 = load i32, i32* %step295, align 4, !dbg !5173
  %270 = load i32, i32* %allsteps, align 4, !dbg !5175
  %cmp310 = icmp slt i32 %269, %270, !dbg !5176
  br i1 %cmp310, label %for.body312, label %for.end382, !dbg !5177

for.body312:                                      ; preds = %for.cond309
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5178, metadata !1730), !dbg !5179
  %271 = load i32, i32* %step295, align 4, !dbg !5180
  store i32 %271, i32* %tmp, align 4, !dbg !5179
  call void @llvm.dbg.declare(metadata [32 x i32]* %lpc_try, metadata !5181, metadata !1730), !dbg !5182
  call void @llvm.dbg.declare(metadata i64* %score, metadata !5183, metadata !1730), !dbg !5184
  store i64 0, i64* %score, align 8, !dbg !5184
  call void @llvm.dbg.declare(metadata i32* %diffsum, metadata !5185, metadata !1730), !dbg !5186
  store i32 0, i32* %diffsum, align 4, !dbg !5186
  store i32 0, i32* %i294, align 4, !dbg !5187
  br label %for.cond316, !dbg !5188

for.cond316:                                      ; preds = %for.inc337, %for.body312
  %272 = load i32, i32* %i294, align 4, !dbg !5189
  %273 = load i32, i32* %opt_order, align 4, !dbg !5191
  %cmp317 = icmp slt i32 %272, %273, !dbg !5192
  br i1 %cmp317, label %for.body319, label %for.end339, !dbg !5193

for.body319:                                      ; preds = %for.cond316
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !5194, metadata !1730), !dbg !5195
  %274 = load i32, i32* %tmp, align 4, !dbg !5196
  %add321 = add nsw i32 %274, 1, !dbg !5197
  %rem = srem i32 %add321, 3, !dbg !5198
  %sub322 = sub nsw i32 %rem, 1, !dbg !5199
  store i32 %sub322, i32* %diff, align 4, !dbg !5195
  %275 = load i32, i32* %i294, align 4, !dbg !5200
  %idxprom323 = sext i32 %275 to i64, !dbg !5201
  %276 = load i32, i32* %opt_order, align 4, !dbg !5202
  %sub324 = sub nsw i32 %276, 1, !dbg !5203
  %idxprom325 = sext i32 %sub324 to i64, !dbg !5201
  %arrayidx326 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom325, !dbg !5201
  %arrayidx327 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx326, i64 0, i64 %idxprom323, !dbg !5201
  %277 = load i32, i32* %arrayidx327, align 4, !dbg !5201
  %278 = load i32, i32* %diff, align 4, !dbg !5204
  %add328 = add nsw i32 %277, %278, !dbg !5205
  %279 = load i32, i32* %qmax, align 4, !dbg !5206
  %sub329 = sub nsw i32 0, %279, !dbg !5207
  %280 = load i32, i32* %qmax, align 4, !dbg !5208
  store i32 %add328, i32* %a.addr.i444, align 4, !dbg !5209
  store i32 %sub329, i32* %amin.addr.i445, align 4, !dbg !5209
  store i32 %280, i32* %amax.addr.i446, align 4, !dbg !5209
  %281 = load i32, i32* %a.addr.i444, align 4, !dbg !5210
  %282 = load i32, i32* %amin.addr.i445, align 4, !dbg !5211
  %cmp.i447 = icmp slt i32 %281, %282, !dbg !5212
  br i1 %cmp.i447, label %if.then.i448, label %if.else.i450, !dbg !5213

if.then.i448:                                     ; preds = %for.body319
  %283 = load i32, i32* %amin.addr.i445, align 4, !dbg !5214
  store i32 %283, i32* %retval.i443, align 4, !dbg !5215
  br label %av_clip_c.exit453, !dbg !5215

if.else.i450:                                     ; preds = %for.body319
  %284 = load i32, i32* %a.addr.i444, align 4, !dbg !5216
  %285 = load i32, i32* %amax.addr.i446, align 4, !dbg !5217
  %cmp1.i449 = icmp sgt i32 %284, %285, !dbg !5218
  br i1 %cmp1.i449, label %if.then2.i451, label %if.else3.i452, !dbg !5219

if.then2.i451:                                    ; preds = %if.else.i450
  %286 = load i32, i32* %amax.addr.i446, align 4, !dbg !5220
  store i32 %286, i32* %retval.i443, align 4, !dbg !5221
  br label %av_clip_c.exit453, !dbg !5221

if.else3.i452:                                    ; preds = %if.else.i450
  %287 = load i32, i32* %a.addr.i444, align 4, !dbg !5222
  store i32 %287, i32* %retval.i443, align 4, !dbg !5223
  br label %av_clip_c.exit453, !dbg !5223

av_clip_c.exit453:                                ; preds = %if.then.i448, %if.then2.i451, %if.else3.i452
  %288 = load i32, i32* %retval.i443, align 4, !dbg !5224
  %289 = load i32, i32* %i294, align 4, !dbg !5225
  %idxprom331 = sext i32 %289 to i64, !dbg !5226
  %arrayidx332 = getelementptr inbounds [32 x i32], [32 x i32]* %lpc_try, i64 0, i64 %idxprom331, !dbg !5226
  store i32 %288, i32* %arrayidx332, align 4, !dbg !5227
  %290 = load i32, i32* %tmp, align 4, !dbg !5228
  %div333 = sdiv i32 %290, 3, !dbg !5228
  store i32 %div333, i32* %tmp, align 4, !dbg !5228
  %291 = load i32, i32* %diff, align 4, !dbg !5229
  %tobool334 = icmp ne i32 %291, 0, !dbg !5230
  %lnot = xor i1 %tobool334, true, !dbg !5230
  %lnot335 = xor i1 %lnot, true, !dbg !5231
  %lnot.ext = zext i1 %lnot335 to i32, !dbg !5231
  %292 = load i32, i32* %diffsum, align 4, !dbg !5232
  %add336 = add nsw i32 %292, %lnot.ext, !dbg !5232
  store i32 %add336, i32* %diffsum, align 4, !dbg !5232
  br label %for.inc337, !dbg !5233

for.inc337:                                       ; preds = %av_clip_c.exit453
  %293 = load i32, i32* %i294, align 4, !dbg !5234
  %inc338 = add nsw i32 %293, 1, !dbg !5234
  store i32 %inc338, i32* %i294, align 4, !dbg !5234
  br label %for.cond316, !dbg !5236, !llvm.loop !5237

for.end339:                                       ; preds = %for.cond316
  %294 = load i32, i32* %diffsum, align 4, !dbg !5239
  %cmp340 = icmp sgt i32 %294, 8, !dbg !5241
  br i1 %cmp340, label %if.then342, label %if.end343, !dbg !5242

if.then342:                                       ; preds = %for.end339
  br label %for.inc380, !dbg !5243

if.end343:                                        ; preds = %for.end339
  %295 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5244
  %bps_code344 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %295, i32 0, i32 5, !dbg !5246
  %296 = load i32, i32* %bps_code344, align 32, !dbg !5246
  %mul345 = mul nsw i32 %296, 4, !dbg !5247
  %297 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5248
  %options346 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %297, i32 0, i32 14, !dbg !5249
  %lpc_coeff_precision347 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options346, i32 0, i32 4, !dbg !5250
  %298 = load i32, i32* %lpc_coeff_precision347, align 8, !dbg !5250
  %add348 = add nsw i32 %mul345, %298, !dbg !5251
  %299 = load i32, i32* %opt_order, align 4, !dbg !5252
  %sub349 = sub nsw i32 %299, 1, !dbg !5253
  %or350 = or i32 %sub349, 1, !dbg !5254
  %300 = call i32 @llvm.ctlz.i32(i32 %or350, i1 true), !dbg !5255
  %sub351 = sub nsw i32 31, %300, !dbg !5256
  %add352 = add nsw i32 %add348, %sub351, !dbg !5257
  %cmp353 = icmp sle i32 %add352, 32, !dbg !5258
  br i1 %cmp353, label %if.then355, label %if.else362, !dbg !5259

if.then355:                                       ; preds = %if.end343
  %301 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5260
  %flac_dsp356 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %301, i32 0, i32 22, !dbg !5262
  %lpc16_encode357 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp356, i32 0, i32 3, !dbg !5263
  %302 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc16_encode357, align 8, !dbg !5263
  %303 = load i32*, i32** %res, align 8, !dbg !5264
  %304 = load i32*, i32** %smp, align 8, !dbg !5265
  %305 = load i32, i32* %n, align 4, !dbg !5266
  %306 = load i32, i32* %opt_order, align 4, !dbg !5267
  %arraydecay358 = getelementptr inbounds [32 x i32], [32 x i32]* %lpc_try, i32 0, i32 0, !dbg !5268
  %307 = load i32, i32* %opt_order, align 4, !dbg !5269
  %sub359 = sub nsw i32 %307, 1, !dbg !5270
  %idxprom360 = sext i32 %sub359 to i64, !dbg !5271
  %arrayidx361 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom360, !dbg !5271
  %308 = load i32, i32* %arrayidx361, align 4, !dbg !5271
  call void %302(i32* %303, i32* %304, i32 %305, i32 %306, i32* %arraydecay358, i32 %308), !dbg !5260
  br label %if.end369, !dbg !5272

if.else362:                                       ; preds = %if.end343
  %309 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5273
  %flac_dsp363 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %309, i32 0, i32 22, !dbg !5275
  %lpc32_encode364 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp363, i32 0, i32 4, !dbg !5276
  %310 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc32_encode364, align 8, !dbg !5276
  %311 = load i32*, i32** %res, align 8, !dbg !5277
  %312 = load i32*, i32** %smp, align 8, !dbg !5278
  %313 = load i32, i32* %n, align 4, !dbg !5279
  %314 = load i32, i32* %opt_order, align 4, !dbg !5280
  %arraydecay365 = getelementptr inbounds [32 x i32], [32 x i32]* %lpc_try, i32 0, i32 0, !dbg !5281
  %315 = load i32, i32* %opt_order, align 4, !dbg !5282
  %sub366 = sub nsw i32 %315, 1, !dbg !5283
  %idxprom367 = sext i32 %sub366 to i64, !dbg !5284
  %arrayidx368 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom367, !dbg !5284
  %316 = load i32, i32* %arrayidx368, align 4, !dbg !5284
  call void %310(i32* %311, i32* %312, i32 %313, i32 %314, i32* %arraydecay365, i32 %316), !dbg !5273
  br label %if.end369

if.end369:                                        ; preds = %if.else362, %if.then355
  %317 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5285
  %318 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5286
  %319 = load i32, i32* %opt_order, align 4, !dbg !5287
  %call370 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %317, %struct.FlacSubframe* %318, i32 %319), !dbg !5288
  store i64 %call370, i64* %score, align 8, !dbg !5289
  %320 = load i64, i64* %score, align 8, !dbg !5290
  %321 = load i64, i64* %best_score, align 8, !dbg !5292
  %cmp371 = icmp slt i64 %320, %321, !dbg !5293
  br i1 %cmp371, label %if.then373, label %if.end379, !dbg !5294

if.then373:                                       ; preds = %if.end369
  %322 = load i64, i64* %score, align 8, !dbg !5295
  store i64 %322, i64* %best_score, align 8, !dbg !5297
  %323 = load i32, i32* %opt_order, align 4, !dbg !5298
  %sub374 = sub nsw i32 %323, 1, !dbg !5299
  %idxprom375 = sext i32 %sub374 to i64, !dbg !5300
  %arrayidx376 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom375, !dbg !5300
  %arraydecay377 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx376, i32 0, i32 0, !dbg !5301
  %324 = bitcast i32* %arraydecay377 to i8*, !dbg !5301
  %arraydecay378 = getelementptr inbounds [32 x i32], [32 x i32]* %lpc_try, i32 0, i32 0, !dbg !5301
  %325 = bitcast i32* %arraydecay378 to i8*, !dbg !5301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %324, i8* %325, i64 128, i32 16, i1 false), !dbg !5301
  store i32 1, i32* %improved, align 4, !dbg !5302
  br label %if.end379, !dbg !5303

if.end379:                                        ; preds = %if.then373, %if.end369
  br label %for.inc380, !dbg !5304

for.inc380:                                       ; preds = %if.end379, %if.then342
  %326 = load i32, i32* %step295, align 4, !dbg !5305
  %inc381 = add nsw i32 %326, 1, !dbg !5305
  store i32 %inc381, i32* %step295, align 4, !dbg !5305
  br label %for.cond309, !dbg !5307, !llvm.loop !5308

for.end382:                                       ; preds = %for.cond309
  br label %do.cond, !dbg !5310

do.cond:                                          ; preds = %for.end382
  %327 = load i32, i32* %improved, align 4, !dbg !5311
  %tobool383 = icmp ne i32 %327, 0, !dbg !5313
  br i1 %tobool383, label %do.body, label %do.end, !dbg !5313, !llvm.loop !5169

do.end:                                           ; preds = %do.cond
  br label %if.end384, !dbg !5314

if.end384:                                        ; preds = %do.end, %if.end290
  %328 = load i32, i32* %opt_order, align 4, !dbg !5315
  %329 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5316
  %order385 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %329, i32 0, i32 4, !dbg !5317
  store i32 %328, i32* %order385, align 8, !dbg !5318
  %330 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5319
  %type386 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %330, i32 0, i32 0, !dbg !5320
  %331 = load i32, i32* %type386, align 8, !dbg !5320
  %332 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5321
  %order387 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %332, i32 0, i32 4, !dbg !5322
  %333 = load i32, i32* %order387, align 8, !dbg !5322
  %sub388 = sub nsw i32 %333, 1, !dbg !5323
  %or389 = or i32 %331, %sub388, !dbg !5324
  %334 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5325
  %type_code390 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %334, i32 0, i32 1, !dbg !5326
  store i32 %or389, i32* %type_code390, align 4, !dbg !5327
  %335 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5328
  %order391 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %335, i32 0, i32 4, !dbg !5329
  %336 = load i32, i32* %order391, align 8, !dbg !5329
  %sub392 = sub nsw i32 %336, 1, !dbg !5330
  %idxprom393 = sext i32 %sub392 to i64, !dbg !5331
  %arrayidx394 = getelementptr inbounds [32 x i32], [32 x i32]* %shift, i64 0, i64 %idxprom393, !dbg !5331
  %337 = load i32, i32* %arrayidx394, align 4, !dbg !5331
  %338 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5332
  %shift395 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %338, i32 0, i32 6, !dbg !5333
  store i32 %337, i32* %shift395, align 4, !dbg !5334
  store i32 0, i32* %i, align 4, !dbg !5335
  br label %for.cond396, !dbg !5337

for.cond396:                                      ; preds = %for.inc410, %if.end384
  %339 = load i32, i32* %i, align 4, !dbg !5338
  %340 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5341
  %order397 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %340, i32 0, i32 4, !dbg !5342
  %341 = load i32, i32* %order397, align 8, !dbg !5342
  %cmp398 = icmp slt i32 %339, %341, !dbg !5343
  br i1 %cmp398, label %for.body400, label %for.end412, !dbg !5344

for.body400:                                      ; preds = %for.cond396
  %342 = load i32, i32* %i, align 4, !dbg !5345
  %idxprom401 = sext i32 %342 to i64, !dbg !5346
  %343 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5347
  %order402 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %343, i32 0, i32 4, !dbg !5348
  %344 = load i32, i32* %order402, align 8, !dbg !5348
  %sub403 = sub nsw i32 %344, 1, !dbg !5349
  %idxprom404 = sext i32 %sub403 to i64, !dbg !5346
  %arrayidx405 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom404, !dbg !5346
  %arrayidx406 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx405, i64 0, i64 %idxprom401, !dbg !5346
  %345 = load i32, i32* %arrayidx406, align 4, !dbg !5346
  %346 = load i32, i32* %i, align 4, !dbg !5350
  %idxprom407 = sext i32 %346 to i64, !dbg !5351
  %347 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5351
  %coefs408 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %347, i32 0, i32 5, !dbg !5352
  %arrayidx409 = getelementptr inbounds [32 x i32], [32 x i32]* %coefs408, i64 0, i64 %idxprom407, !dbg !5351
  store i32 %345, i32* %arrayidx409, align 4, !dbg !5353
  br label %for.inc410, !dbg !5351

for.inc410:                                       ; preds = %for.body400
  %348 = load i32, i32* %i, align 4, !dbg !5354
  %inc411 = add nsw i32 %348, 1, !dbg !5354
  store i32 %inc411, i32* %i, align 4, !dbg !5354
  br label %for.cond396, !dbg !5356, !llvm.loop !5357

for.end412:                                       ; preds = %for.cond396
  %349 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5359
  %bps_code413 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %349, i32 0, i32 5, !dbg !5361
  %350 = load i32, i32* %bps_code413, align 32, !dbg !5361
  %mul414 = mul nsw i32 %350, 4, !dbg !5362
  %351 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5363
  %options415 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %351, i32 0, i32 14, !dbg !5364
  %lpc_coeff_precision416 = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options415, i32 0, i32 4, !dbg !5365
  %352 = load i32, i32* %lpc_coeff_precision416, align 8, !dbg !5365
  %add417 = add nsw i32 %mul414, %352, !dbg !5366
  %353 = load i32, i32* %opt_order, align 4, !dbg !5367
  %or418 = or i32 %353, 1, !dbg !5368
  %354 = call i32 @llvm.ctlz.i32(i32 %or418, i1 true), !dbg !5369
  %sub419 = sub nsw i32 31, %354, !dbg !5370
  %add420 = add nsw i32 %add417, %sub419, !dbg !5371
  %cmp421 = icmp sle i32 %add420, 32, !dbg !5372
  br i1 %cmp421, label %if.then423, label %if.else430, !dbg !5373

if.then423:                                       ; preds = %for.end412
  %355 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5374
  %flac_dsp424 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %355, i32 0, i32 22, !dbg !5376
  %lpc16_encode425 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp424, i32 0, i32 3, !dbg !5377
  %356 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc16_encode425, align 8, !dbg !5377
  %357 = load i32*, i32** %res, align 8, !dbg !5378
  %358 = load i32*, i32** %smp, align 8, !dbg !5379
  %359 = load i32, i32* %n, align 4, !dbg !5380
  %360 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5381
  %order426 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %360, i32 0, i32 4, !dbg !5382
  %361 = load i32, i32* %order426, align 8, !dbg !5382
  %362 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5383
  %coefs427 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %362, i32 0, i32 5, !dbg !5384
  %arraydecay428 = getelementptr inbounds [32 x i32], [32 x i32]* %coefs427, i32 0, i32 0, !dbg !5383
  %363 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5385
  %shift429 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %363, i32 0, i32 6, !dbg !5386
  %364 = load i32, i32* %shift429, align 4, !dbg !5386
  call void %356(i32* %357, i32* %358, i32 %359, i32 %361, i32* %arraydecay428, i32 %364), !dbg !5374
  br label %if.end437, !dbg !5387

if.else430:                                       ; preds = %for.end412
  %365 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5388
  %flac_dsp431 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %365, i32 0, i32 22, !dbg !5390
  %lpc32_encode432 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %flac_dsp431, i32 0, i32 4, !dbg !5391
  %366 = load void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)** %lpc32_encode432, align 8, !dbg !5391
  %367 = load i32*, i32** %res, align 8, !dbg !5392
  %368 = load i32*, i32** %smp, align 8, !dbg !5393
  %369 = load i32, i32* %n, align 4, !dbg !5394
  %370 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5395
  %order433 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %370, i32 0, i32 4, !dbg !5396
  %371 = load i32, i32* %order433, align 8, !dbg !5396
  %372 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5397
  %coefs434 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %372, i32 0, i32 5, !dbg !5398
  %arraydecay435 = getelementptr inbounds [32 x i32], [32 x i32]* %coefs434, i32 0, i32 0, !dbg !5397
  %373 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5399
  %shift436 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %373, i32 0, i32 6, !dbg !5400
  %374 = load i32, i32* %shift436, align 4, !dbg !5400
  call void %366(i32* %367, i32* %368, i32 %369, i32 %371, i32* %arraydecay435, i32 %374), !dbg !5388
  br label %if.end437

if.end437:                                        ; preds = %if.else430, %if.then423
  %375 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5401
  %376 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5402
  %377 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5403
  %order438 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %377, i32 0, i32 4, !dbg !5404
  %378 = load i32, i32* %order438, align 8, !dbg !5404
  %call439 = call i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %375, %struct.FlacSubframe* %376, i32 %378), !dbg !5405
  %379 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5406
  %380 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5407
  %381 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !5408
  %order440 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %381, i32 0, i32 4, !dbg !5409
  %382 = load i32, i32* %order440, align 8, !dbg !5409
  %call441 = call i64 @subframe_count_exact(%struct.FlacEncodeContext* %379, %struct.FlacSubframe* %380, i32 %382), !dbg !5410
  %conv442 = trunc i64 %call441 to i32, !dbg !5410
  store i32 %conv442, i32* %retval, align 4, !dbg !5411
  br label %return, !dbg !5411

return:                                           ; preds = %if.end437, %if.end69, %if.then14, %if.then8
  %383 = load i32, i32* %retval, align 4, !dbg !5412
  ret i32 %383, !dbg !5412
}

; Function Attrs: nounwind uwtable
define internal i64 @subframe_count_exact(%struct.FlacEncodeContext* %s, %struct.FlacSubframe* %sub, i32 %pred_order) #1 !dbg !5413 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %sub.addr = alloca %struct.FlacSubframe*, align 8
  %pred_order.addr = alloca i32, align 4
  %p = alloca i32, align 4
  %porder = alloca i32, align 4
  %psize = alloca i32, align 4
  %i = alloca i32, align 4
  %part_end = alloca i32, align 4
  %count = alloca i64, align 8
  %k = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !5416, metadata !1730), !dbg !5417
  store %struct.FlacSubframe* %sub, %struct.FlacSubframe** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub.addr, metadata !5418, metadata !1730), !dbg !5419
  store i32 %pred_order, i32* %pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_order.addr, metadata !5420, metadata !1730), !dbg !5421
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5422, metadata !1730), !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %porder, metadata !5424, metadata !1730), !dbg !5425
  call void @llvm.dbg.declare(metadata i32* %psize, metadata !5426, metadata !1730), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5428, metadata !1730), !dbg !5429
  call void @llvm.dbg.declare(metadata i32* %part_end, metadata !5430, metadata !1730), !dbg !5431
  call void @llvm.dbg.declare(metadata i64* %count, metadata !5432, metadata !1730), !dbg !5433
  store i64 0, i64* %count, align 8, !dbg !5433
  %0 = load i64, i64* %count, align 8, !dbg !5434
  %add = add i64 %0, 8, !dbg !5434
  store i64 %add, i64* %count, align 8, !dbg !5434
  %1 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5435
  %wasted = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %1, i32 0, i32 3, !dbg !5437
  %2 = load i32, i32* %wasted, align 4, !dbg !5437
  %tobool = icmp ne i32 %2, 0, !dbg !5435
  br i1 %tobool, label %if.then, label %if.end, !dbg !5438

if.then:                                          ; preds = %entry
  %3 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5439
  %wasted1 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %3, i32 0, i32 3, !dbg !5440
  %4 = load i32, i32* %wasted1, align 4, !dbg !5440
  %conv = sext i32 %4 to i64, !dbg !5439
  %5 = load i64, i64* %count, align 8, !dbg !5441
  %add2 = add i64 %5, %conv, !dbg !5441
  store i64 %add2, i64* %count, align 8, !dbg !5441
  br label %if.end, !dbg !5442

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5443
  %type = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %6, i32 0, i32 0, !dbg !5445
  %7 = load i32, i32* %type, align 8, !dbg !5445
  %cmp = icmp eq i32 %7, 0, !dbg !5446
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5447

if.then4:                                         ; preds = %if.end
  %8 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5448
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %8, i32 0, i32 2, !dbg !5450
  %9 = load i32, i32* %obits, align 8, !dbg !5450
  %conv5 = sext i32 %9 to i64, !dbg !5448
  %10 = load i64, i64* %count, align 8, !dbg !5451
  %add6 = add i64 %10, %conv5, !dbg !5451
  store i64 %add6, i64* %count, align 8, !dbg !5451
  br label %if.end52, !dbg !5452

if.else:                                          ; preds = %if.end
  %11 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5453
  %type7 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %11, i32 0, i32 0, !dbg !5456
  %12 = load i32, i32* %type7, align 8, !dbg !5456
  %cmp8 = icmp eq i32 %12, 1, !dbg !5457
  br i1 %cmp8, label %if.then10, label %if.else14, !dbg !5453

if.then10:                                        ; preds = %if.else
  %13 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5458
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %13, i32 0, i32 13, !dbg !5460
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 1, !dbg !5461
  %14 = load i32, i32* %blocksize, align 16, !dbg !5461
  %15 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5462
  %obits11 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %15, i32 0, i32 2, !dbg !5463
  %16 = load i32, i32* %obits11, align 8, !dbg !5463
  %mul = mul nsw i32 %14, %16, !dbg !5464
  %conv12 = sext i32 %mul to i64, !dbg !5458
  %17 = load i64, i64* %count, align 8, !dbg !5465
  %add13 = add i64 %17, %conv12, !dbg !5465
  store i64 %add13, i64* %count, align 8, !dbg !5465
  br label %if.end51, !dbg !5466

if.else14:                                        ; preds = %if.else
  %18 = load i32, i32* %pred_order.addr, align 4, !dbg !5467
  %19 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5469
  %obits15 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %19, i32 0, i32 2, !dbg !5470
  %20 = load i32, i32* %obits15, align 8, !dbg !5470
  %mul16 = mul nsw i32 %18, %20, !dbg !5471
  %conv17 = sext i32 %mul16 to i64, !dbg !5467
  %21 = load i64, i64* %count, align 8, !dbg !5472
  %add18 = add i64 %21, %conv17, !dbg !5472
  store i64 %add18, i64* %count, align 8, !dbg !5472
  %22 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5473
  %type19 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %22, i32 0, i32 0, !dbg !5475
  %23 = load i32, i32* %type19, align 8, !dbg !5475
  %cmp20 = icmp eq i32 %23, 32, !dbg !5476
  br i1 %cmp20, label %if.then22, label %if.end27, !dbg !5477

if.then22:                                        ; preds = %if.else14
  %24 = load i32, i32* %pred_order.addr, align 4, !dbg !5478
  %25 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5479
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %25, i32 0, i32 14, !dbg !5480
  %lpc_coeff_precision = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 4, !dbg !5481
  %26 = load i32, i32* %lpc_coeff_precision, align 8, !dbg !5481
  %mul23 = mul nsw i32 %24, %26, !dbg !5482
  %add24 = add nsw i32 9, %mul23, !dbg !5483
  %conv25 = sext i32 %add24 to i64, !dbg !5484
  %27 = load i64, i64* %count, align 8, !dbg !5485
  %add26 = add i64 %27, %conv25, !dbg !5485
  store i64 %add26, i64* %count, align 8, !dbg !5485
  br label %if.end27, !dbg !5486

if.end27:                                         ; preds = %if.then22, %if.else14
  %28 = load i64, i64* %count, align 8, !dbg !5487
  %add28 = add i64 %28, 2, !dbg !5487
  store i64 %add28, i64* %count, align 8, !dbg !5487
  %29 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5488
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %29, i32 0, i32 7, !dbg !5489
  %porder29 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 1, !dbg !5490
  %30 = load i32, i32* %porder29, align 4, !dbg !5490
  store i32 %30, i32* %porder, align 4, !dbg !5491
  %31 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5492
  %frame30 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %31, i32 0, i32 13, !dbg !5493
  %blocksize31 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame30, i32 0, i32 1, !dbg !5494
  %32 = load i32, i32* %blocksize31, align 16, !dbg !5494
  %33 = load i32, i32* %porder, align 4, !dbg !5495
  %shr = ashr i32 %32, %33, !dbg !5496
  store i32 %shr, i32* %psize, align 4, !dbg !5497
  %34 = load i64, i64* %count, align 8, !dbg !5498
  %add32 = add i64 %34, 4, !dbg !5498
  store i64 %add32, i64* %count, align 8, !dbg !5498
  %35 = load i32, i32* %pred_order.addr, align 4, !dbg !5499
  store i32 %35, i32* %i, align 4, !dbg !5500
  %36 = load i32, i32* %psize, align 4, !dbg !5501
  store i32 %36, i32* %part_end, align 4, !dbg !5502
  store i32 0, i32* %p, align 4, !dbg !5503
  br label %for.cond, !dbg !5505

for.cond:                                         ; preds = %for.inc, %if.end27
  %37 = load i32, i32* %p, align 4, !dbg !5506
  %38 = load i32, i32* %porder, align 4, !dbg !5509
  %shl = shl i32 1, %38, !dbg !5510
  %cmp33 = icmp slt i32 %37, %shl, !dbg !5511
  br i1 %cmp33, label %for.body, label %for.end, !dbg !5512

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5513, metadata !1730), !dbg !5515
  %39 = load i32, i32* %p, align 4, !dbg !5516
  %idxprom = sext i32 %39 to i64, !dbg !5517
  %40 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5517
  %rc35 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %40, i32 0, i32 7, !dbg !5518
  %params = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc35, i32 0, i32 2, !dbg !5519
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* %params, i64 0, i64 %idxprom, !dbg !5517
  %41 = load i32, i32* %arrayidx, align 4, !dbg !5517
  store i32 %41, i32* %k, align 4, !dbg !5515
  %42 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5520
  %rc36 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %42, i32 0, i32 7, !dbg !5521
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc36, i32 0, i32 0, !dbg !5522
  %43 = load i32, i32* %coding_mode, align 8, !dbg !5522
  %conv37 = zext i32 %43 to i64, !dbg !5520
  %44 = load i64, i64* %count, align 8, !dbg !5523
  %add38 = add i64 %44, %conv37, !dbg !5523
  store i64 %add38, i64* %count, align 8, !dbg !5523
  %45 = load i32, i32* %i, align 4, !dbg !5524
  %idxprom39 = sext i32 %45 to i64, !dbg !5525
  %46 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5525
  %residual = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %46, i32 0, i32 11, !dbg !5526
  %arrayidx40 = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual, i64 0, i64 %idxprom39, !dbg !5525
  %47 = load i32, i32* %part_end, align 4, !dbg !5527
  %48 = load i32, i32* %i, align 4, !dbg !5528
  %sub41 = sub nsw i32 %47, %48, !dbg !5529
  %49 = load i32, i32* %k, align 4, !dbg !5530
  %call = call i64 @rice_count_exact(i32* %arrayidx40, i32 %sub41, i32 %49), !dbg !5531
  %50 = load i64, i64* %count, align 8, !dbg !5532
  %add42 = add i64 %50, %call, !dbg !5532
  store i64 %add42, i64* %count, align 8, !dbg !5532
  %51 = load i32, i32* %part_end, align 4, !dbg !5533
  store i32 %51, i32* %i, align 4, !dbg !5534
  %52 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5535
  %frame43 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %52, i32 0, i32 13, !dbg !5536
  %blocksize44 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame43, i32 0, i32 1, !dbg !5537
  %53 = load i32, i32* %blocksize44, align 16, !dbg !5537
  %54 = load i32, i32* %part_end, align 4, !dbg !5538
  %55 = load i32, i32* %psize, align 4, !dbg !5539
  %add45 = add nsw i32 %54, %55, !dbg !5540
  %cmp46 = icmp sgt i32 %53, %add45, !dbg !5541
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !5542

cond.true:                                        ; preds = %for.body
  %56 = load i32, i32* %part_end, align 4, !dbg !5543
  %57 = load i32, i32* %psize, align 4, !dbg !5545
  %add48 = add nsw i32 %56, %57, !dbg !5546
  br label %cond.end, !dbg !5547

cond.false:                                       ; preds = %for.body
  %58 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5548
  %frame49 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %58, i32 0, i32 13, !dbg !5550
  %blocksize50 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame49, i32 0, i32 1, !dbg !5551
  %59 = load i32, i32* %blocksize50, align 16, !dbg !5551
  br label %cond.end, !dbg !5552

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add48, %cond.true ], [ %59, %cond.false ], !dbg !5553
  store i32 %cond, i32* %part_end, align 4, !dbg !5555
  br label %for.inc, !dbg !5556

for.inc:                                          ; preds = %cond.end
  %60 = load i32, i32* %p, align 4, !dbg !5557
  %inc = add nsw i32 %60, 1, !dbg !5557
  store i32 %inc, i32* %p, align 4, !dbg !5557
  br label %for.cond, !dbg !5559, !llvm.loop !5560

for.end:                                          ; preds = %for.cond
  br label %if.end51

if.end51:                                         ; preds = %for.end, %if.then10
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then4
  %61 = load i64, i64* %count, align 8, !dbg !5562
  ret i64 %61, !dbg !5563
}

; Function Attrs: nounwind uwtable
define internal void @encode_residual_fixed(i32* %res, i32* %smp, i32 %n, i32 %order) #1 !dbg !5564 {
entry:
  %res.addr = alloca i32*, align 8
  %smp.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %a66 = alloca i32, align 4
  %c = alloca i32, align 4
  %b88 = alloca i32, align 4
  %d = alloca i32, align 4
  %a114 = alloca i32, align 4
  %c122 = alloca i32, align 4
  %e = alloca i32, align 4
  %b155 = alloca i32, align 4
  %d162 = alloca i32, align 4
  %f = alloca i32, align 4
  store i32* %res, i32** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %res.addr, metadata !5567, metadata !1730), !dbg !5568
  store i32* %smp, i32** %smp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smp.addr, metadata !5569, metadata !1730), !dbg !5570
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5571, metadata !1730), !dbg !5572
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !5573, metadata !1730), !dbg !5574
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5575, metadata !1730), !dbg !5576
  store i32 0, i32* %i, align 4, !dbg !5577
  br label %for.cond, !dbg !5579

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5580
  %1 = load i32, i32* %order.addr, align 4, !dbg !5583
  %cmp = icmp slt i32 %0, %1, !dbg !5584
  br i1 %cmp, label %for.body, label %for.end, !dbg !5585

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !5586
  %idxprom = sext i32 %2 to i64, !dbg !5587
  %3 = load i32*, i32** %smp.addr, align 8, !dbg !5587
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !5587
  %4 = load i32, i32* %arrayidx, align 4, !dbg !5587
  %5 = load i32, i32* %i, align 4, !dbg !5588
  %idxprom1 = sext i32 %5 to i64, !dbg !5589
  %6 = load i32*, i32** %res.addr, align 8, !dbg !5589
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 %idxprom1, !dbg !5589
  store i32 %4, i32* %arrayidx2, align 4, !dbg !5590
  br label %for.inc, !dbg !5589

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5591
  %inc = add nsw i32 %7, 1, !dbg !5591
  store i32 %inc, i32* %i, align 4, !dbg !5591
  br label %for.cond, !dbg !5593, !llvm.loop !5594

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %order.addr, align 4, !dbg !5596
  %cmp3 = icmp eq i32 %8, 0, !dbg !5598
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5599

if.then:                                          ; preds = %for.end
  %9 = load i32, i32* %order.addr, align 4, !dbg !5600
  store i32 %9, i32* %i, align 4, !dbg !5603
  br label %for.cond4, !dbg !5604

for.cond4:                                        ; preds = %for.inc11, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !5605
  %11 = load i32, i32* %n.addr, align 4, !dbg !5608
  %cmp5 = icmp slt i32 %10, %11, !dbg !5609
  br i1 %cmp5, label %for.body6, label %for.end13, !dbg !5610

for.body6:                                        ; preds = %for.cond4
  %12 = load i32, i32* %i, align 4, !dbg !5611
  %idxprom7 = sext i32 %12 to i64, !dbg !5612
  %13 = load i32*, i32** %smp.addr, align 8, !dbg !5612
  %arrayidx8 = getelementptr inbounds i32, i32* %13, i64 %idxprom7, !dbg !5612
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !5612
  %15 = load i32, i32* %i, align 4, !dbg !5613
  %idxprom9 = sext i32 %15 to i64, !dbg !5614
  %16 = load i32*, i32** %res.addr, align 8, !dbg !5614
  %arrayidx10 = getelementptr inbounds i32, i32* %16, i64 %idxprom9, !dbg !5614
  store i32 %14, i32* %arrayidx10, align 4, !dbg !5615
  br label %for.inc11, !dbg !5614

for.inc11:                                        ; preds = %for.body6
  %17 = load i32, i32* %i, align 4, !dbg !5616
  %inc12 = add nsw i32 %17, 1, !dbg !5616
  store i32 %inc12, i32* %i, align 4, !dbg !5616
  br label %for.cond4, !dbg !5618, !llvm.loop !5619

for.end13:                                        ; preds = %for.cond4
  br label %if.end185, !dbg !5621

if.else:                                          ; preds = %for.end
  %18 = load i32, i32* %order.addr, align 4, !dbg !5622
  %cmp14 = icmp eq i32 %18, 1, !dbg !5625
  br i1 %cmp14, label %if.then15, label %if.else29, !dbg !5622

if.then15:                                        ; preds = %if.else
  %19 = load i32, i32* %order.addr, align 4, !dbg !5626
  store i32 %19, i32* %i, align 4, !dbg !5629
  br label %for.cond16, !dbg !5630

for.cond16:                                       ; preds = %for.inc26, %if.then15
  %20 = load i32, i32* %i, align 4, !dbg !5631
  %21 = load i32, i32* %n.addr, align 4, !dbg !5634
  %cmp17 = icmp slt i32 %20, %21, !dbg !5635
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !5636

for.body18:                                       ; preds = %for.cond16
  %22 = load i32, i32* %i, align 4, !dbg !5637
  %idxprom19 = sext i32 %22 to i64, !dbg !5638
  %23 = load i32*, i32** %smp.addr, align 8, !dbg !5638
  %arrayidx20 = getelementptr inbounds i32, i32* %23, i64 %idxprom19, !dbg !5638
  %24 = load i32, i32* %arrayidx20, align 4, !dbg !5638
  %25 = load i32, i32* %i, align 4, !dbg !5639
  %sub = sub nsw i32 %25, 1, !dbg !5640
  %idxprom21 = sext i32 %sub to i64, !dbg !5641
  %26 = load i32*, i32** %smp.addr, align 8, !dbg !5641
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 %idxprom21, !dbg !5641
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !5641
  %sub23 = sub nsw i32 %24, %27, !dbg !5642
  %28 = load i32, i32* %i, align 4, !dbg !5643
  %idxprom24 = sext i32 %28 to i64, !dbg !5644
  %29 = load i32*, i32** %res.addr, align 8, !dbg !5644
  %arrayidx25 = getelementptr inbounds i32, i32* %29, i64 %idxprom24, !dbg !5644
  store i32 %sub23, i32* %arrayidx25, align 4, !dbg !5645
  br label %for.inc26, !dbg !5644

for.inc26:                                        ; preds = %for.body18
  %30 = load i32, i32* %i, align 4, !dbg !5646
  %inc27 = add nsw i32 %30, 1, !dbg !5646
  store i32 %inc27, i32* %i, align 4, !dbg !5646
  br label %for.cond16, !dbg !5648, !llvm.loop !5649

for.end28:                                        ; preds = %for.cond16
  br label %if.end184, !dbg !5651

if.else29:                                        ; preds = %if.else
  %31 = load i32, i32* %order.addr, align 4, !dbg !5652
  %cmp30 = icmp eq i32 %31, 2, !dbg !5655
  br i1 %cmp30, label %if.then31, label %if.else63, !dbg !5652

if.then31:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5656, metadata !1730), !dbg !5658
  %32 = load i32, i32* %order.addr, align 4, !dbg !5659
  %sub32 = sub nsw i32 %32, 1, !dbg !5660
  %idxprom33 = sext i32 %sub32 to i64, !dbg !5661
  %33 = load i32*, i32** %smp.addr, align 8, !dbg !5661
  %arrayidx34 = getelementptr inbounds i32, i32* %33, i64 %idxprom33, !dbg !5661
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !5661
  %35 = load i32, i32* %order.addr, align 4, !dbg !5662
  %sub35 = sub nsw i32 %35, 2, !dbg !5663
  %idxprom36 = sext i32 %sub35 to i64, !dbg !5664
  %36 = load i32*, i32** %smp.addr, align 8, !dbg !5664
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !5664
  %37 = load i32, i32* %arrayidx37, align 4, !dbg !5664
  %sub38 = sub nsw i32 %34, %37, !dbg !5665
  store i32 %sub38, i32* %a, align 4, !dbg !5658
  %38 = load i32, i32* %order.addr, align 4, !dbg !5666
  store i32 %38, i32* %i, align 4, !dbg !5668
  br label %for.cond39, !dbg !5669

for.cond39:                                       ; preds = %for.inc60, %if.then31
  %39 = load i32, i32* %i, align 4, !dbg !5670
  %40 = load i32, i32* %n.addr, align 4, !dbg !5673
  %cmp40 = icmp slt i32 %39, %40, !dbg !5674
  br i1 %cmp40, label %for.body41, label %for.end62, !dbg !5675

for.body41:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5676, metadata !1730), !dbg !5678
  %41 = load i32, i32* %i, align 4, !dbg !5679
  %idxprom42 = sext i32 %41 to i64, !dbg !5680
  %42 = load i32*, i32** %smp.addr, align 8, !dbg !5680
  %arrayidx43 = getelementptr inbounds i32, i32* %42, i64 %idxprom42, !dbg !5680
  %43 = load i32, i32* %arrayidx43, align 4, !dbg !5680
  %44 = load i32, i32* %i, align 4, !dbg !5681
  %sub44 = sub nsw i32 %44, 1, !dbg !5682
  %idxprom45 = sext i32 %sub44 to i64, !dbg !5683
  %45 = load i32*, i32** %smp.addr, align 8, !dbg !5683
  %arrayidx46 = getelementptr inbounds i32, i32* %45, i64 %idxprom45, !dbg !5683
  %46 = load i32, i32* %arrayidx46, align 4, !dbg !5683
  %sub47 = sub nsw i32 %43, %46, !dbg !5684
  store i32 %sub47, i32* %b, align 4, !dbg !5678
  %47 = load i32, i32* %b, align 4, !dbg !5685
  %48 = load i32, i32* %a, align 4, !dbg !5686
  %sub48 = sub nsw i32 %47, %48, !dbg !5687
  %49 = load i32, i32* %i, align 4, !dbg !5688
  %idxprom49 = sext i32 %49 to i64, !dbg !5689
  %50 = load i32*, i32** %res.addr, align 8, !dbg !5689
  %arrayidx50 = getelementptr inbounds i32, i32* %50, i64 %idxprom49, !dbg !5689
  store i32 %sub48, i32* %arrayidx50, align 4, !dbg !5690
  %51 = load i32, i32* %i, align 4, !dbg !5691
  %add = add nsw i32 %51, 1, !dbg !5692
  %idxprom51 = sext i32 %add to i64, !dbg !5693
  %52 = load i32*, i32** %smp.addr, align 8, !dbg !5693
  %arrayidx52 = getelementptr inbounds i32, i32* %52, i64 %idxprom51, !dbg !5693
  %53 = load i32, i32* %arrayidx52, align 4, !dbg !5693
  %54 = load i32, i32* %i, align 4, !dbg !5694
  %idxprom53 = sext i32 %54 to i64, !dbg !5695
  %55 = load i32*, i32** %smp.addr, align 8, !dbg !5695
  %arrayidx54 = getelementptr inbounds i32, i32* %55, i64 %idxprom53, !dbg !5695
  %56 = load i32, i32* %arrayidx54, align 4, !dbg !5695
  %sub55 = sub nsw i32 %53, %56, !dbg !5696
  store i32 %sub55, i32* %a, align 4, !dbg !5697
  %57 = load i32, i32* %a, align 4, !dbg !5698
  %58 = load i32, i32* %b, align 4, !dbg !5699
  %sub56 = sub nsw i32 %57, %58, !dbg !5700
  %59 = load i32, i32* %i, align 4, !dbg !5701
  %add57 = add nsw i32 %59, 1, !dbg !5702
  %idxprom58 = sext i32 %add57 to i64, !dbg !5703
  %60 = load i32*, i32** %res.addr, align 8, !dbg !5703
  %arrayidx59 = getelementptr inbounds i32, i32* %60, i64 %idxprom58, !dbg !5703
  store i32 %sub56, i32* %arrayidx59, align 4, !dbg !5704
  br label %for.inc60, !dbg !5705

for.inc60:                                        ; preds = %for.body41
  %61 = load i32, i32* %i, align 4, !dbg !5706
  %add61 = add nsw i32 %61, 2, !dbg !5706
  store i32 %add61, i32* %i, align 4, !dbg !5706
  br label %for.cond39, !dbg !5708, !llvm.loop !5709

for.end62:                                        ; preds = %for.cond39
  br label %if.end183, !dbg !5711

if.else63:                                        ; preds = %if.else29
  %62 = load i32, i32* %order.addr, align 4, !dbg !5712
  %cmp64 = icmp eq i32 %62, 3, !dbg !5715
  br i1 %cmp64, label %if.then65, label %if.else113, !dbg !5712

if.then65:                                        ; preds = %if.else63
  call void @llvm.dbg.declare(metadata i32* %a66, metadata !5716, metadata !1730), !dbg !5718
  %63 = load i32, i32* %order.addr, align 4, !dbg !5719
  %sub67 = sub nsw i32 %63, 1, !dbg !5720
  %idxprom68 = sext i32 %sub67 to i64, !dbg !5721
  %64 = load i32*, i32** %smp.addr, align 8, !dbg !5721
  %arrayidx69 = getelementptr inbounds i32, i32* %64, i64 %idxprom68, !dbg !5721
  %65 = load i32, i32* %arrayidx69, align 4, !dbg !5721
  %66 = load i32, i32* %order.addr, align 4, !dbg !5722
  %sub70 = sub nsw i32 %66, 2, !dbg !5723
  %idxprom71 = sext i32 %sub70 to i64, !dbg !5724
  %67 = load i32*, i32** %smp.addr, align 8, !dbg !5724
  %arrayidx72 = getelementptr inbounds i32, i32* %67, i64 %idxprom71, !dbg !5724
  %68 = load i32, i32* %arrayidx72, align 4, !dbg !5724
  %sub73 = sub nsw i32 %65, %68, !dbg !5725
  store i32 %sub73, i32* %a66, align 4, !dbg !5718
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5726, metadata !1730), !dbg !5727
  %69 = load i32, i32* %order.addr, align 4, !dbg !5728
  %sub74 = sub nsw i32 %69, 1, !dbg !5729
  %idxprom75 = sext i32 %sub74 to i64, !dbg !5730
  %70 = load i32*, i32** %smp.addr, align 8, !dbg !5730
  %arrayidx76 = getelementptr inbounds i32, i32* %70, i64 %idxprom75, !dbg !5730
  %71 = load i32, i32* %arrayidx76, align 4, !dbg !5730
  %72 = load i32, i32* %order.addr, align 4, !dbg !5731
  %sub77 = sub nsw i32 %72, 2, !dbg !5732
  %idxprom78 = sext i32 %sub77 to i64, !dbg !5733
  %73 = load i32*, i32** %smp.addr, align 8, !dbg !5733
  %arrayidx79 = getelementptr inbounds i32, i32* %73, i64 %idxprom78, !dbg !5733
  %74 = load i32, i32* %arrayidx79, align 4, !dbg !5733
  %mul = mul nsw i32 2, %74, !dbg !5734
  %sub80 = sub nsw i32 %71, %mul, !dbg !5735
  %75 = load i32, i32* %order.addr, align 4, !dbg !5736
  %sub81 = sub nsw i32 %75, 3, !dbg !5737
  %idxprom82 = sext i32 %sub81 to i64, !dbg !5738
  %76 = load i32*, i32** %smp.addr, align 8, !dbg !5738
  %arrayidx83 = getelementptr inbounds i32, i32* %76, i64 %idxprom82, !dbg !5738
  %77 = load i32, i32* %arrayidx83, align 4, !dbg !5738
  %add84 = add nsw i32 %sub80, %77, !dbg !5739
  store i32 %add84, i32* %c, align 4, !dbg !5727
  %78 = load i32, i32* %order.addr, align 4, !dbg !5740
  store i32 %78, i32* %i, align 4, !dbg !5742
  br label %for.cond85, !dbg !5743

for.cond85:                                       ; preds = %for.inc110, %if.then65
  %79 = load i32, i32* %i, align 4, !dbg !5744
  %80 = load i32, i32* %n.addr, align 4, !dbg !5747
  %cmp86 = icmp slt i32 %79, %80, !dbg !5748
  br i1 %cmp86, label %for.body87, label %for.end112, !dbg !5749

for.body87:                                       ; preds = %for.cond85
  call void @llvm.dbg.declare(metadata i32* %b88, metadata !5750, metadata !1730), !dbg !5752
  %81 = load i32, i32* %i, align 4, !dbg !5753
  %idxprom89 = sext i32 %81 to i64, !dbg !5754
  %82 = load i32*, i32** %smp.addr, align 8, !dbg !5754
  %arrayidx90 = getelementptr inbounds i32, i32* %82, i64 %idxprom89, !dbg !5754
  %83 = load i32, i32* %arrayidx90, align 4, !dbg !5754
  %84 = load i32, i32* %i, align 4, !dbg !5755
  %sub91 = sub nsw i32 %84, 1, !dbg !5756
  %idxprom92 = sext i32 %sub91 to i64, !dbg !5757
  %85 = load i32*, i32** %smp.addr, align 8, !dbg !5757
  %arrayidx93 = getelementptr inbounds i32, i32* %85, i64 %idxprom92, !dbg !5757
  %86 = load i32, i32* %arrayidx93, align 4, !dbg !5757
  %sub94 = sub nsw i32 %83, %86, !dbg !5758
  store i32 %sub94, i32* %b88, align 4, !dbg !5752
  call void @llvm.dbg.declare(metadata i32* %d, metadata !5759, metadata !1730), !dbg !5760
  %87 = load i32, i32* %b88, align 4, !dbg !5761
  %88 = load i32, i32* %a66, align 4, !dbg !5762
  %sub95 = sub nsw i32 %87, %88, !dbg !5763
  store i32 %sub95, i32* %d, align 4, !dbg !5760
  %89 = load i32, i32* %d, align 4, !dbg !5764
  %90 = load i32, i32* %c, align 4, !dbg !5765
  %sub96 = sub nsw i32 %89, %90, !dbg !5766
  %91 = load i32, i32* %i, align 4, !dbg !5767
  %idxprom97 = sext i32 %91 to i64, !dbg !5768
  %92 = load i32*, i32** %res.addr, align 8, !dbg !5768
  %arrayidx98 = getelementptr inbounds i32, i32* %92, i64 %idxprom97, !dbg !5768
  store i32 %sub96, i32* %arrayidx98, align 4, !dbg !5769
  %93 = load i32, i32* %i, align 4, !dbg !5770
  %add99 = add nsw i32 %93, 1, !dbg !5771
  %idxprom100 = sext i32 %add99 to i64, !dbg !5772
  %94 = load i32*, i32** %smp.addr, align 8, !dbg !5772
  %arrayidx101 = getelementptr inbounds i32, i32* %94, i64 %idxprom100, !dbg !5772
  %95 = load i32, i32* %arrayidx101, align 4, !dbg !5772
  %96 = load i32, i32* %i, align 4, !dbg !5773
  %idxprom102 = sext i32 %96 to i64, !dbg !5774
  %97 = load i32*, i32** %smp.addr, align 8, !dbg !5774
  %arrayidx103 = getelementptr inbounds i32, i32* %97, i64 %idxprom102, !dbg !5774
  %98 = load i32, i32* %arrayidx103, align 4, !dbg !5774
  %sub104 = sub nsw i32 %95, %98, !dbg !5775
  store i32 %sub104, i32* %a66, align 4, !dbg !5776
  %99 = load i32, i32* %a66, align 4, !dbg !5777
  %100 = load i32, i32* %b88, align 4, !dbg !5778
  %sub105 = sub nsw i32 %99, %100, !dbg !5779
  store i32 %sub105, i32* %c, align 4, !dbg !5780
  %101 = load i32, i32* %c, align 4, !dbg !5781
  %102 = load i32, i32* %d, align 4, !dbg !5782
  %sub106 = sub nsw i32 %101, %102, !dbg !5783
  %103 = load i32, i32* %i, align 4, !dbg !5784
  %add107 = add nsw i32 %103, 1, !dbg !5785
  %idxprom108 = sext i32 %add107 to i64, !dbg !5786
  %104 = load i32*, i32** %res.addr, align 8, !dbg !5786
  %arrayidx109 = getelementptr inbounds i32, i32* %104, i64 %idxprom108, !dbg !5786
  store i32 %sub106, i32* %arrayidx109, align 4, !dbg !5787
  br label %for.inc110, !dbg !5788

for.inc110:                                       ; preds = %for.body87
  %105 = load i32, i32* %i, align 4, !dbg !5789
  %add111 = add nsw i32 %105, 2, !dbg !5789
  store i32 %add111, i32* %i, align 4, !dbg !5789
  br label %for.cond85, !dbg !5791, !llvm.loop !5792

for.end112:                                       ; preds = %for.cond85
  br label %if.end, !dbg !5794

if.else113:                                       ; preds = %if.else63
  call void @llvm.dbg.declare(metadata i32* %a114, metadata !5795, metadata !1730), !dbg !5797
  %106 = load i32, i32* %order.addr, align 4, !dbg !5798
  %sub115 = sub nsw i32 %106, 1, !dbg !5799
  %idxprom116 = sext i32 %sub115 to i64, !dbg !5800
  %107 = load i32*, i32** %smp.addr, align 8, !dbg !5800
  %arrayidx117 = getelementptr inbounds i32, i32* %107, i64 %idxprom116, !dbg !5800
  %108 = load i32, i32* %arrayidx117, align 4, !dbg !5800
  %109 = load i32, i32* %order.addr, align 4, !dbg !5801
  %sub118 = sub nsw i32 %109, 2, !dbg !5802
  %idxprom119 = sext i32 %sub118 to i64, !dbg !5803
  %110 = load i32*, i32** %smp.addr, align 8, !dbg !5803
  %arrayidx120 = getelementptr inbounds i32, i32* %110, i64 %idxprom119, !dbg !5803
  %111 = load i32, i32* %arrayidx120, align 4, !dbg !5803
  %sub121 = sub nsw i32 %108, %111, !dbg !5804
  store i32 %sub121, i32* %a114, align 4, !dbg !5797
  call void @llvm.dbg.declare(metadata i32* %c122, metadata !5805, metadata !1730), !dbg !5806
  %112 = load i32, i32* %order.addr, align 4, !dbg !5807
  %sub123 = sub nsw i32 %112, 1, !dbg !5808
  %idxprom124 = sext i32 %sub123 to i64, !dbg !5809
  %113 = load i32*, i32** %smp.addr, align 8, !dbg !5809
  %arrayidx125 = getelementptr inbounds i32, i32* %113, i64 %idxprom124, !dbg !5809
  %114 = load i32, i32* %arrayidx125, align 4, !dbg !5809
  %115 = load i32, i32* %order.addr, align 4, !dbg !5810
  %sub126 = sub nsw i32 %115, 2, !dbg !5811
  %idxprom127 = sext i32 %sub126 to i64, !dbg !5812
  %116 = load i32*, i32** %smp.addr, align 8, !dbg !5812
  %arrayidx128 = getelementptr inbounds i32, i32* %116, i64 %idxprom127, !dbg !5812
  %117 = load i32, i32* %arrayidx128, align 4, !dbg !5812
  %mul129 = mul nsw i32 2, %117, !dbg !5813
  %sub130 = sub nsw i32 %114, %mul129, !dbg !5814
  %118 = load i32, i32* %order.addr, align 4, !dbg !5815
  %sub131 = sub nsw i32 %118, 3, !dbg !5816
  %idxprom132 = sext i32 %sub131 to i64, !dbg !5817
  %119 = load i32*, i32** %smp.addr, align 8, !dbg !5817
  %arrayidx133 = getelementptr inbounds i32, i32* %119, i64 %idxprom132, !dbg !5817
  %120 = load i32, i32* %arrayidx133, align 4, !dbg !5817
  %add134 = add nsw i32 %sub130, %120, !dbg !5818
  store i32 %add134, i32* %c122, align 4, !dbg !5806
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5819, metadata !1730), !dbg !5820
  %121 = load i32, i32* %order.addr, align 4, !dbg !5821
  %sub135 = sub nsw i32 %121, 1, !dbg !5822
  %idxprom136 = sext i32 %sub135 to i64, !dbg !5823
  %122 = load i32*, i32** %smp.addr, align 8, !dbg !5823
  %arrayidx137 = getelementptr inbounds i32, i32* %122, i64 %idxprom136, !dbg !5823
  %123 = load i32, i32* %arrayidx137, align 4, !dbg !5823
  %124 = load i32, i32* %order.addr, align 4, !dbg !5824
  %sub138 = sub nsw i32 %124, 2, !dbg !5825
  %idxprom139 = sext i32 %sub138 to i64, !dbg !5826
  %125 = load i32*, i32** %smp.addr, align 8, !dbg !5826
  %arrayidx140 = getelementptr inbounds i32, i32* %125, i64 %idxprom139, !dbg !5826
  %126 = load i32, i32* %arrayidx140, align 4, !dbg !5826
  %mul141 = mul nsw i32 3, %126, !dbg !5827
  %sub142 = sub nsw i32 %123, %mul141, !dbg !5828
  %127 = load i32, i32* %order.addr, align 4, !dbg !5829
  %sub143 = sub nsw i32 %127, 3, !dbg !5830
  %idxprom144 = sext i32 %sub143 to i64, !dbg !5831
  %128 = load i32*, i32** %smp.addr, align 8, !dbg !5831
  %arrayidx145 = getelementptr inbounds i32, i32* %128, i64 %idxprom144, !dbg !5831
  %129 = load i32, i32* %arrayidx145, align 4, !dbg !5831
  %mul146 = mul nsw i32 3, %129, !dbg !5832
  %add147 = add nsw i32 %sub142, %mul146, !dbg !5833
  %130 = load i32, i32* %order.addr, align 4, !dbg !5834
  %sub148 = sub nsw i32 %130, 4, !dbg !5835
  %idxprom149 = sext i32 %sub148 to i64, !dbg !5836
  %131 = load i32*, i32** %smp.addr, align 8, !dbg !5836
  %arrayidx150 = getelementptr inbounds i32, i32* %131, i64 %idxprom149, !dbg !5836
  %132 = load i32, i32* %arrayidx150, align 4, !dbg !5836
  %sub151 = sub nsw i32 %add147, %132, !dbg !5837
  store i32 %sub151, i32* %e, align 4, !dbg !5820
  %133 = load i32, i32* %order.addr, align 4, !dbg !5838
  store i32 %133, i32* %i, align 4, !dbg !5840
  br label %for.cond152, !dbg !5841

for.cond152:                                      ; preds = %for.inc180, %if.else113
  %134 = load i32, i32* %i, align 4, !dbg !5842
  %135 = load i32, i32* %n.addr, align 4, !dbg !5845
  %cmp153 = icmp slt i32 %134, %135, !dbg !5846
  br i1 %cmp153, label %for.body154, label %for.end182, !dbg !5847

for.body154:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i32* %b155, metadata !5848, metadata !1730), !dbg !5850
  %136 = load i32, i32* %i, align 4, !dbg !5851
  %idxprom156 = sext i32 %136 to i64, !dbg !5852
  %137 = load i32*, i32** %smp.addr, align 8, !dbg !5852
  %arrayidx157 = getelementptr inbounds i32, i32* %137, i64 %idxprom156, !dbg !5852
  %138 = load i32, i32* %arrayidx157, align 4, !dbg !5852
  %139 = load i32, i32* %i, align 4, !dbg !5853
  %sub158 = sub nsw i32 %139, 1, !dbg !5854
  %idxprom159 = sext i32 %sub158 to i64, !dbg !5855
  %140 = load i32*, i32** %smp.addr, align 8, !dbg !5855
  %arrayidx160 = getelementptr inbounds i32, i32* %140, i64 %idxprom159, !dbg !5855
  %141 = load i32, i32* %arrayidx160, align 4, !dbg !5855
  %sub161 = sub nsw i32 %138, %141, !dbg !5856
  store i32 %sub161, i32* %b155, align 4, !dbg !5850
  call void @llvm.dbg.declare(metadata i32* %d162, metadata !5857, metadata !1730), !dbg !5858
  %142 = load i32, i32* %b155, align 4, !dbg !5859
  %143 = load i32, i32* %a114, align 4, !dbg !5860
  %sub163 = sub nsw i32 %142, %143, !dbg !5861
  store i32 %sub163, i32* %d162, align 4, !dbg !5858
  call void @llvm.dbg.declare(metadata i32* %f, metadata !5862, metadata !1730), !dbg !5863
  %144 = load i32, i32* %d162, align 4, !dbg !5864
  %145 = load i32, i32* %c122, align 4, !dbg !5865
  %sub164 = sub nsw i32 %144, %145, !dbg !5866
  store i32 %sub164, i32* %f, align 4, !dbg !5863
  %146 = load i32, i32* %f, align 4, !dbg !5867
  %147 = load i32, i32* %e, align 4, !dbg !5868
  %sub165 = sub nsw i32 %146, %147, !dbg !5869
  %148 = load i32, i32* %i, align 4, !dbg !5870
  %idxprom166 = sext i32 %148 to i64, !dbg !5871
  %149 = load i32*, i32** %res.addr, align 8, !dbg !5871
  %arrayidx167 = getelementptr inbounds i32, i32* %149, i64 %idxprom166, !dbg !5871
  store i32 %sub165, i32* %arrayidx167, align 4, !dbg !5872
  %150 = load i32, i32* %i, align 4, !dbg !5873
  %add168 = add nsw i32 %150, 1, !dbg !5874
  %idxprom169 = sext i32 %add168 to i64, !dbg !5875
  %151 = load i32*, i32** %smp.addr, align 8, !dbg !5875
  %arrayidx170 = getelementptr inbounds i32, i32* %151, i64 %idxprom169, !dbg !5875
  %152 = load i32, i32* %arrayidx170, align 4, !dbg !5875
  %153 = load i32, i32* %i, align 4, !dbg !5876
  %idxprom171 = sext i32 %153 to i64, !dbg !5877
  %154 = load i32*, i32** %smp.addr, align 8, !dbg !5877
  %arrayidx172 = getelementptr inbounds i32, i32* %154, i64 %idxprom171, !dbg !5877
  %155 = load i32, i32* %arrayidx172, align 4, !dbg !5877
  %sub173 = sub nsw i32 %152, %155, !dbg !5878
  store i32 %sub173, i32* %a114, align 4, !dbg !5879
  %156 = load i32, i32* %a114, align 4, !dbg !5880
  %157 = load i32, i32* %b155, align 4, !dbg !5881
  %sub174 = sub nsw i32 %156, %157, !dbg !5882
  store i32 %sub174, i32* %c122, align 4, !dbg !5883
  %158 = load i32, i32* %c122, align 4, !dbg !5884
  %159 = load i32, i32* %d162, align 4, !dbg !5885
  %sub175 = sub nsw i32 %158, %159, !dbg !5886
  store i32 %sub175, i32* %e, align 4, !dbg !5887
  %160 = load i32, i32* %e, align 4, !dbg !5888
  %161 = load i32, i32* %f, align 4, !dbg !5889
  %sub176 = sub nsw i32 %160, %161, !dbg !5890
  %162 = load i32, i32* %i, align 4, !dbg !5891
  %add177 = add nsw i32 %162, 1, !dbg !5892
  %idxprom178 = sext i32 %add177 to i64, !dbg !5893
  %163 = load i32*, i32** %res.addr, align 8, !dbg !5893
  %arrayidx179 = getelementptr inbounds i32, i32* %163, i64 %idxprom178, !dbg !5893
  store i32 %sub176, i32* %arrayidx179, align 4, !dbg !5894
  br label %for.inc180, !dbg !5895

for.inc180:                                       ; preds = %for.body154
  %164 = load i32, i32* %i, align 4, !dbg !5896
  %add181 = add nsw i32 %164, 2, !dbg !5896
  store i32 %add181, i32* %i, align 4, !dbg !5896
  br label %for.cond152, !dbg !5898, !llvm.loop !5899

for.end182:                                       ; preds = %for.cond152
  br label %if.end

if.end:                                           ; preds = %for.end182, %for.end112
  br label %if.end183

if.end183:                                        ; preds = %if.end, %for.end62
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %for.end28
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %for.end13
  ret void, !dbg !5901
}

; Function Attrs: nounwind uwtable
define internal i64 @find_subframe_rice_params(%struct.FlacEncodeContext* %s, %struct.FlacSubframe* %sub, i32 %pred_order) #1 !dbg !5902 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %sub.addr = alloca %struct.FlacSubframe*, align 8
  %pred_order.addr = alloca i32, align 4
  %pmin = alloca i32, align 4
  %pmax = alloca i32, align 4
  %bits = alloca i64, align 8
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !5903, metadata !1730), !dbg !5904
  store %struct.FlacSubframe* %sub, %struct.FlacSubframe** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub.addr, metadata !5905, metadata !1730), !dbg !5906
  store i32 %pred_order, i32* %pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_order.addr, metadata !5907, metadata !1730), !dbg !5908
  call void @llvm.dbg.declare(metadata i32* %pmin, metadata !5909, metadata !1730), !dbg !5910
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5911
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 14, !dbg !5912
  %min_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 8, !dbg !5913
  %1 = load i32, i32* %min_partition_order, align 8, !dbg !5913
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5914
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 13, !dbg !5915
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 1, !dbg !5916
  %3 = load i32, i32* %blocksize, align 16, !dbg !5916
  %4 = load i32, i32* %pred_order.addr, align 4, !dbg !5917
  %call = call i32 @get_max_p_order(i32 %1, i32 %3, i32 %4), !dbg !5918
  store i32 %call, i32* %pmin, align 4, !dbg !5910
  call void @llvm.dbg.declare(metadata i32* %pmax, metadata !5919, metadata !1730), !dbg !5920
  %5 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5921
  %options1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %5, i32 0, i32 14, !dbg !5922
  %max_partition_order = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options1, i32 0, i32 9, !dbg !5923
  %6 = load i32, i32* %max_partition_order, align 4, !dbg !5923
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5924
  %frame2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %7, i32 0, i32 13, !dbg !5925
  %blocksize3 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame2, i32 0, i32 1, !dbg !5926
  %8 = load i32, i32* %blocksize3, align 16, !dbg !5926
  %9 = load i32, i32* %pred_order.addr, align 4, !dbg !5927
  %call4 = call i32 @get_max_p_order(i32 %6, i32 %8, i32 %9), !dbg !5928
  store i32 %call4, i32* %pmax, align 4, !dbg !5920
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !5929, metadata !1730), !dbg !5930
  %10 = load i32, i32* %pred_order.addr, align 4, !dbg !5931
  %11 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5932
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %11, i32 0, i32 2, !dbg !5933
  %12 = load i32, i32* %obits, align 8, !dbg !5933
  %mul = mul nsw i32 %10, %12, !dbg !5934
  %add = add nsw i32 8, %mul, !dbg !5935
  %add5 = add nsw i32 %add, 2, !dbg !5936
  %13 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5937
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %13, i32 0, i32 7, !dbg !5938
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 0, !dbg !5939
  %14 = load i32, i32* %coding_mode, align 8, !dbg !5939
  %add6 = add i32 %add5, %14, !dbg !5940
  %conv = zext i32 %add6 to i64, !dbg !5941
  store i64 %conv, i64* %bits, align 8, !dbg !5930
  %15 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5942
  %type = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %15, i32 0, i32 0, !dbg !5944
  %16 = load i32, i32* %type, align 8, !dbg !5944
  %cmp = icmp eq i32 %16, 32, !dbg !5945
  br i1 %cmp, label %if.then, label %if.end, !dbg !5946

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %pred_order.addr, align 4, !dbg !5947
  %18 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5948
  %options8 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %18, i32 0, i32 14, !dbg !5949
  %lpc_coeff_precision = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options8, i32 0, i32 4, !dbg !5950
  %19 = load i32, i32* %lpc_coeff_precision, align 8, !dbg !5950
  %mul9 = mul nsw i32 %17, %19, !dbg !5951
  %add10 = add nsw i32 9, %mul9, !dbg !5952
  %conv11 = sext i32 %add10 to i64, !dbg !5953
  %20 = load i64, i64* %bits, align 8, !dbg !5954
  %add12 = add i64 %20, %conv11, !dbg !5954
  store i64 %add12, i64* %bits, align 8, !dbg !5954
  br label %if.end, !dbg !5955

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5956
  %rc13 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %21, i32 0, i32 7, !dbg !5957
  %22 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5958
  %rc_udata = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %22, i32 0, i32 8, !dbg !5959
  %arraydecay = getelementptr inbounds [65535 x i32], [65535 x i32]* %rc_udata, i32 0, i32 0, !dbg !5958
  %23 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5960
  %rc_sums = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %23, i32 0, i32 9, !dbg !5961
  %arraydecay14 = getelementptr inbounds [32 x [256 x i64]], [32 x [256 x i64]]* %rc_sums, i32 0, i32 0, !dbg !5960
  %24 = load i32, i32* %pmin, align 4, !dbg !5962
  %25 = load i32, i32* %pmax, align 4, !dbg !5963
  %26 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub.addr, align 8, !dbg !5964
  %residual = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %26, i32 0, i32 11, !dbg !5965
  %arraydecay15 = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual, i32 0, i32 0, !dbg !5964
  %27 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5966
  %frame16 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %27, i32 0, i32 13, !dbg !5967
  %blocksize17 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame16, i32 0, i32 1, !dbg !5968
  %28 = load i32, i32* %blocksize17, align 16, !dbg !5968
  %29 = load i32, i32* %pred_order.addr, align 4, !dbg !5969
  %30 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !5970
  %options18 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %30, i32 0, i32 14, !dbg !5971
  %exact_rice_parameters = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options18, i32 0, i32 11, !dbg !5972
  %31 = load i32, i32* %exact_rice_parameters, align 4, !dbg !5972
  %call19 = call i64 @calc_rice_params(%struct.RiceContext* %rc13, i32* %arraydecay, [256 x i64]* %arraydecay14, i32 %24, i32 %25, i32* %arraydecay15, i32 %28, i32 %29, i32 %31), !dbg !5973
  %32 = load i64, i64* %bits, align 8, !dbg !5974
  %add20 = add i64 %32, %call19, !dbg !5974
  store i64 %add20, i64* %bits, align 8, !dbg !5974
  %33 = load i64, i64* %bits, align 8, !dbg !5975
  ret i64 %33, !dbg !5976
}

declare i32 @ff_lpc_calc_coefs(%struct.LPCContext*, i32*, i32, i32, i32, i32, [32 x i32]*, i32*, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @rice_count_exact(i32* %res, i32 %n, i32 %k) #1 !dbg !5977 {
entry:
  %res.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i64, align 8
  %v = alloca i32, align 4
  store i32* %res, i32** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %res.addr, metadata !5980, metadata !1730), !dbg !5981
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5982, metadata !1730), !dbg !5983
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !5984, metadata !1730), !dbg !5985
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5986, metadata !1730), !dbg !5987
  call void @llvm.dbg.declare(metadata i64* %count, metadata !5988, metadata !1730), !dbg !5989
  store i64 0, i64* %count, align 8, !dbg !5989
  store i32 0, i32* %i, align 4, !dbg !5990
  br label %for.cond, !dbg !5992

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5993
  %1 = load i32, i32* %n.addr, align 4, !dbg !5996
  %cmp = icmp slt i32 %0, %1, !dbg !5997
  br i1 %cmp, label %for.body, label %for.end, !dbg !5998

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5999, metadata !1730), !dbg !6001
  %2 = load i32, i32* %i, align 4, !dbg !6002
  %idxprom = sext i32 %2 to i64, !dbg !6003
  %3 = load i32*, i32** %res.addr, align 8, !dbg !6003
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !6003
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6003
  %mul = mul nsw i32 -2, %4, !dbg !6004
  %sub = sub nsw i32 %mul, 1, !dbg !6005
  store i32 %sub, i32* %v, align 4, !dbg !6001
  %5 = load i32, i32* %v, align 4, !dbg !6006
  %shr = ashr i32 %5, 31, !dbg !6007
  %6 = load i32, i32* %v, align 4, !dbg !6008
  %xor = xor i32 %6, %shr, !dbg !6008
  store i32 %xor, i32* %v, align 4, !dbg !6008
  %7 = load i32, i32* %v, align 4, !dbg !6009
  %8 = load i32, i32* %k.addr, align 4, !dbg !6010
  %shr1 = ashr i32 %7, %8, !dbg !6011
  %add = add nsw i32 %shr1, 1, !dbg !6012
  %9 = load i32, i32* %k.addr, align 4, !dbg !6013
  %add2 = add nsw i32 %add, %9, !dbg !6014
  %conv = sext i32 %add2 to i64, !dbg !6015
  %10 = load i64, i64* %count, align 8, !dbg !6016
  %add3 = add i64 %10, %conv, !dbg !6016
  store i64 %add3, i64* %count, align 8, !dbg !6016
  br label %for.inc, !dbg !6017

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !6018
  %inc = add nsw i32 %11, 1, !dbg !6018
  store i32 %inc, i32* %i, align 4, !dbg !6018
  br label %for.cond, !dbg !6020, !llvm.loop !6021

for.end:                                          ; preds = %for.cond
  %12 = load i64, i64* %count, align 8, !dbg !6023
  ret i64 %12, !dbg !6024
}

; Function Attrs: nounwind uwtable
define internal i32 @get_max_p_order(i32 %max_porder, i32 %n, i32 %order) #1 !dbg !6025 {
entry:
  %max_porder.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %porder = alloca i32, align 4
  store i32 %max_porder, i32* %max_porder.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_porder.addr, metadata !6026, metadata !1730), !dbg !6027
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6028, metadata !1730), !dbg !6029
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !6030, metadata !1730), !dbg !6031
  call void @llvm.dbg.declare(metadata i32* %porder, metadata !6032, metadata !1730), !dbg !6033
  %0 = load i32, i32* %max_porder.addr, align 4, !dbg !6034
  %1 = load i32, i32* %n.addr, align 4, !dbg !6035
  %2 = load i32, i32* %n.addr, align 4, !dbg !6036
  %sub = sub nsw i32 %2, 1, !dbg !6037
  %xor = xor i32 %1, %sub, !dbg !6038
  %or = or i32 %xor, 1, !dbg !6039
  %3 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !6040
  %sub1 = sub nsw i32 31, %3, !dbg !6041
  %cmp = icmp sgt i32 %0, %sub1, !dbg !6042
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6043

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %n.addr, align 4, !dbg !6044
  %5 = load i32, i32* %n.addr, align 4, !dbg !6046
  %sub2 = sub nsw i32 %5, 1, !dbg !6047
  %xor3 = xor i32 %4, %sub2, !dbg !6048
  %or4 = or i32 %xor3, 1, !dbg !6049
  %6 = call i32 @llvm.ctlz.i32(i32 %or4, i1 true), !dbg !6050
  %sub5 = sub nsw i32 31, %6, !dbg !6051
  br label %cond.end, !dbg !6052

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %max_porder.addr, align 4, !dbg !6053
  br label %cond.end, !dbg !6055

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub5, %cond.true ], [ %7, %cond.false ], !dbg !6056
  store i32 %cond, i32* %porder, align 4, !dbg !6058
  %8 = load i32, i32* %order.addr, align 4, !dbg !6059
  %cmp6 = icmp sgt i32 %8, 0, !dbg !6061
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6062

if.then:                                          ; preds = %cond.end
  %9 = load i32, i32* %porder, align 4, !dbg !6063
  %10 = load i32, i32* %n.addr, align 4, !dbg !6064
  %11 = load i32, i32* %order.addr, align 4, !dbg !6065
  %div = sdiv i32 %10, %11, !dbg !6066
  %or7 = or i32 %div, 1, !dbg !6067
  %12 = call i32 @llvm.ctlz.i32(i32 %or7, i1 true), !dbg !6068
  %sub8 = sub nsw i32 31, %12, !dbg !6069
  %cmp9 = icmp sgt i32 %9, %sub8, !dbg !6070
  br i1 %cmp9, label %cond.true10, label %cond.false14, !dbg !6071

cond.true10:                                      ; preds = %if.then
  %13 = load i32, i32* %n.addr, align 4, !dbg !6072
  %14 = load i32, i32* %order.addr, align 4, !dbg !6074
  %div11 = sdiv i32 %13, %14, !dbg !6075
  %or12 = or i32 %div11, 1, !dbg !6076
  %15 = call i32 @llvm.ctlz.i32(i32 %or12, i1 true), !dbg !6077
  %sub13 = sub nsw i32 31, %15, !dbg !6078
  br label %cond.end15, !dbg !6079

cond.false14:                                     ; preds = %if.then
  %16 = load i32, i32* %porder, align 4, !dbg !6080
  br label %cond.end15, !dbg !6082

cond.end15:                                       ; preds = %cond.false14, %cond.true10
  %cond16 = phi i32 [ %sub13, %cond.true10 ], [ %16, %cond.false14 ], !dbg !6083
  store i32 %cond16, i32* %porder, align 4, !dbg !6085
  br label %if.end, !dbg !6086

if.end:                                           ; preds = %cond.end15, %cond.end
  %17 = load i32, i32* %porder, align 4, !dbg !6087
  ret i32 %17, !dbg !6088
}

; Function Attrs: nounwind uwtable
define internal i64 @calc_rice_params(%struct.RiceContext* %rc, i32* %udata, [256 x i64]* %sums, i32 %pmin, i32 %pmax, i32* %data, i32 %n, i32 %pred_order, i32 %exact) #1 !dbg !6089 {
entry:
  %rc.addr = alloca %struct.RiceContext*, align 8
  %udata.addr = alloca i32*, align 8
  %sums.addr = alloca [256 x i64]*, align 8
  %pmin.addr = alloca i32, align 4
  %pmax.addr = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %pred_order.addr = alloca i32, align 4
  %exact.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %bits = alloca [9 x i64], align 16
  %opt_porder = alloca i32, align 4
  %tmp_rc = alloca %struct.RiceContext, align 4
  %kmax = alloca i32, align 4
  store %struct.RiceContext* %rc, %struct.RiceContext** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RiceContext** %rc.addr, metadata !6095, metadata !1730), !dbg !6096
  store i32* %udata, i32** %udata.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %udata.addr, metadata !6097, metadata !1730), !dbg !6098
  store [256 x i64]* %sums, [256 x i64]** %sums.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i64]** %sums.addr, metadata !6099, metadata !1730), !dbg !6100
  store i32 %pmin, i32* %pmin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmin.addr, metadata !6101, metadata !1730), !dbg !6102
  store i32 %pmax, i32* %pmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmax.addr, metadata !6103, metadata !1730), !dbg !6104
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !6105, metadata !1730), !dbg !6106
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6107, metadata !1730), !dbg !6108
  store i32 %pred_order, i32* %pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_order.addr, metadata !6109, metadata !1730), !dbg !6110
  store i32 %exact, i32* %exact.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exact.addr, metadata !6111, metadata !1730), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6113, metadata !1730), !dbg !6114
  call void @llvm.dbg.declare(metadata [9 x i64]* %bits, metadata !6115, metadata !1730), !dbg !6119
  call void @llvm.dbg.declare(metadata i32* %opt_porder, metadata !6120, metadata !1730), !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.RiceContext* %tmp_rc, metadata !6122, metadata !1730), !dbg !6123
  call void @llvm.dbg.declare(metadata i32* %kmax, metadata !6124, metadata !1730), !dbg !6125
  %0 = load %struct.RiceContext*, %struct.RiceContext** %rc.addr, align 8, !dbg !6126
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %0, i32 0, i32 0, !dbg !6127
  %1 = load i32, i32* %coding_mode, align 4, !dbg !6127
  %shl = shl i32 1, %1, !dbg !6128
  %sub = sub nsw i32 %shl, 2, !dbg !6129
  store i32 %sub, i32* %kmax, align 4, !dbg !6125
  %2 = load %struct.RiceContext*, %struct.RiceContext** %rc.addr, align 8, !dbg !6130
  %coding_mode1 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %2, i32 0, i32 0, !dbg !6131
  %3 = load i32, i32* %coding_mode1, align 4, !dbg !6131
  %coding_mode2 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %tmp_rc, i32 0, i32 0, !dbg !6132
  store i32 %3, i32* %coding_mode2, align 4, !dbg !6133
  store i32 0, i32* %i, align 4, !dbg !6134
  br label %for.cond, !dbg !6136

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6137
  %5 = load i32, i32* %n.addr, align 4, !dbg !6140
  %cmp = icmp slt i32 %4, %5, !dbg !6141
  br i1 %cmp, label %for.body, label %for.end, !dbg !6142

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6143
  %idxprom = sext i32 %6 to i64, !dbg !6144
  %7 = load i32*, i32** %data.addr, align 8, !dbg !6144
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !6144
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6144
  %mul = mul nsw i32 2, %8, !dbg !6145
  %9 = load i32, i32* %i, align 4, !dbg !6146
  %idxprom3 = sext i32 %9 to i64, !dbg !6147
  %10 = load i32*, i32** %data.addr, align 8, !dbg !6147
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 %idxprom3, !dbg !6147
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !6147
  %shr = ashr i32 %11, 31, !dbg !6148
  %xor = xor i32 %mul, %shr, !dbg !6149
  %12 = load i32, i32* %i, align 4, !dbg !6150
  %idxprom5 = sext i32 %12 to i64, !dbg !6151
  %13 = load i32*, i32** %udata.addr, align 8, !dbg !6151
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 %idxprom5, !dbg !6151
  store i32 %xor, i32* %arrayidx6, align 4, !dbg !6152
  br label %for.inc, !dbg !6151

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6153
  %inc = add nsw i32 %14, 1, !dbg !6153
  store i32 %inc, i32* %i, align 4, !dbg !6153
  br label %for.cond, !dbg !6155, !llvm.loop !6156

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %pmax.addr, align 4, !dbg !6158
  %16 = load i32, i32* %exact.addr, align 4, !dbg !6159
  %tobool = icmp ne i32 %16, 0, !dbg !6159
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6159

cond.true:                                        ; preds = %for.end
  %17 = load i32, i32* %kmax, align 4, !dbg !6160
  br label %cond.end, !dbg !6162

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !6163

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 0, %cond.false ], !dbg !6165
  %18 = load i32*, i32** %udata.addr, align 8, !dbg !6167
  %19 = load i32, i32* %n.addr, align 4, !dbg !6168
  %20 = load i32, i32* %pred_order.addr, align 4, !dbg !6169
  %21 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6170
  call void @calc_sum_top(i32 %15, i32 %cond, i32* %18, i32 %19, i32 %20, [256 x i64]* %21), !dbg !6171
  %22 = load i32, i32* %pmin.addr, align 4, !dbg !6172
  store i32 %22, i32* %opt_porder, align 4, !dbg !6173
  %23 = load i32, i32* %pmin.addr, align 4, !dbg !6174
  %idxprom7 = sext i32 %23 to i64, !dbg !6175
  %arrayidx8 = getelementptr inbounds [9 x i64], [9 x i64]* %bits, i64 0, i64 %idxprom7, !dbg !6175
  store i64 4294967295, i64* %arrayidx8, align 8, !dbg !6176
  %24 = load i32, i32* %pmax.addr, align 4, !dbg !6177
  store i32 %24, i32* %i, align 4, !dbg !6179
  br label %for.cond9, !dbg !6180

for.cond9:                                        ; preds = %cond.end24, %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !6181
  %26 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6184
  %27 = load i32, i32* %n.addr, align 4, !dbg !6185
  %28 = load i32, i32* %pred_order.addr, align 4, !dbg !6186
  %29 = load i32, i32* %kmax, align 4, !dbg !6187
  %30 = load i32, i32* %exact.addr, align 4, !dbg !6188
  %call = call i64 @calc_optimal_rice_params(%struct.RiceContext* %tmp_rc, i32 %25, [256 x i64]* %26, i32 %27, i32 %28, i32 %29, i32 %30), !dbg !6189
  %31 = load i32, i32* %i, align 4, !dbg !6190
  %idxprom10 = sext i32 %31 to i64, !dbg !6191
  %arrayidx11 = getelementptr inbounds [9 x i64], [9 x i64]* %bits, i64 0, i64 %idxprom10, !dbg !6191
  store i64 %call, i64* %arrayidx11, align 8, !dbg !6192
  %32 = load i32, i32* %i, align 4, !dbg !6193
  %idxprom12 = sext i32 %32 to i64, !dbg !6195
  %arrayidx13 = getelementptr inbounds [9 x i64], [9 x i64]* %bits, i64 0, i64 %idxprom12, !dbg !6195
  %33 = load i64, i64* %arrayidx13, align 8, !dbg !6195
  %34 = load i32, i32* %opt_porder, align 4, !dbg !6196
  %idxprom14 = sext i32 %34 to i64, !dbg !6197
  %arrayidx15 = getelementptr inbounds [9 x i64], [9 x i64]* %bits, i64 0, i64 %idxprom14, !dbg !6197
  %35 = load i64, i64* %arrayidx15, align 8, !dbg !6197
  %cmp16 = icmp ult i64 %33, %35, !dbg !6198
  br i1 %cmp16, label %if.then, label %lor.lhs.false, !dbg !6199

lor.lhs.false:                                    ; preds = %for.cond9
  %36 = load i32, i32* %pmax.addr, align 4, !dbg !6200
  %37 = load i32, i32* %pmin.addr, align 4, !dbg !6202
  %cmp17 = icmp eq i32 %36, %37, !dbg !6203
  br i1 %cmp17, label %if.then, label %if.end, !dbg !6204

if.then:                                          ; preds = %lor.lhs.false, %for.cond9
  %38 = load i32, i32* %i, align 4, !dbg !6205
  store i32 %38, i32* %opt_porder, align 4, !dbg !6207
  %39 = load %struct.RiceContext*, %struct.RiceContext** %rc.addr, align 8, !dbg !6208
  %40 = bitcast %struct.RiceContext* %39 to i8*, !dbg !6209
  %41 = bitcast %struct.RiceContext* %tmp_rc to i8*, !dbg !6209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 1032, i32 4, i1 false), !dbg !6209
  br label %if.end, !dbg !6210

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %42 = load i32, i32* %i, align 4, !dbg !6211
  %43 = load i32, i32* %pmin.addr, align 4, !dbg !6213
  %cmp18 = icmp eq i32 %42, %43, !dbg !6214
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6215

if.then19:                                        ; preds = %if.end
  br label %for.end26, !dbg !6216

if.end20:                                         ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !6217
  %dec = add nsw i32 %44, -1, !dbg !6217
  store i32 %dec, i32* %i, align 4, !dbg !6217
  %45 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6218
  %46 = load i32, i32* %exact.addr, align 4, !dbg !6219
  %tobool21 = icmp ne i32 %46, 0, !dbg !6219
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !6219

cond.true22:                                      ; preds = %if.end20
  %47 = load i32, i32* %kmax, align 4, !dbg !6220
  br label %cond.end24, !dbg !6222

cond.false23:                                     ; preds = %if.end20
  br label %cond.end24, !dbg !6223

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i32 [ %47, %cond.true22 ], [ 0, %cond.false23 ], !dbg !6225
  call void @calc_sum_next(i32 %dec, [256 x i64]* %45, i32 %cond25), !dbg !6227
  br label %for.cond9, !dbg !6228, !llvm.loop !6230

for.end26:                                        ; preds = %if.then19
  %48 = load i32, i32* %opt_porder, align 4, !dbg !6232
  %idxprom27 = sext i32 %48 to i64, !dbg !6233
  %arrayidx28 = getelementptr inbounds [9 x i64], [9 x i64]* %bits, i64 0, i64 %idxprom27, !dbg !6233
  %49 = load i64, i64* %arrayidx28, align 8, !dbg !6233
  ret i64 %49, !dbg !6234
}

; Function Attrs: nounwind uwtable
define internal void @calc_sum_top(i32 %pmax, i32 %kmax, i32* %data, i32 %n, i32 %pred_order, [256 x i64]* %sums) #1 !dbg !6235 {
entry:
  %pmax.addr = alloca i32, align 4
  %kmax.addr = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %pred_order.addr = alloca i32, align 4
  %sums.addr = alloca [256 x i64]*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %parts = alloca i32, align 4
  %res = alloca i32*, align 8
  %res_end = alloca i32*, align 8
  %sum = alloca i64, align 8
  %sum15 = alloca i64, align 8
  store i32 %pmax, i32* %pmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmax.addr, metadata !6238, metadata !1730), !dbg !6239
  store i32 %kmax, i32* %kmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kmax.addr, metadata !6240, metadata !1730), !dbg !6241
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !6242, metadata !1730), !dbg !6243
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6244, metadata !1730), !dbg !6245
  store i32 %pred_order, i32* %pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_order.addr, metadata !6246, metadata !1730), !dbg !6247
  store [256 x i64]* %sums, [256 x i64]** %sums.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i64]** %sums.addr, metadata !6248, metadata !1730), !dbg !6249
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6250, metadata !1730), !dbg !6251
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6252, metadata !1730), !dbg !6253
  call void @llvm.dbg.declare(metadata i32* %parts, metadata !6254, metadata !1730), !dbg !6255
  call void @llvm.dbg.declare(metadata i32** %res, metadata !6256, metadata !1730), !dbg !6257
  call void @llvm.dbg.declare(metadata i32** %res_end, metadata !6258, metadata !1730), !dbg !6259
  %0 = load i32, i32* %pmax.addr, align 4, !dbg !6260
  %shl = shl i32 1, %0, !dbg !6261
  store i32 %shl, i32* %parts, align 4, !dbg !6262
  store i32 0, i32* %k, align 4, !dbg !6263
  br label %for.cond, !dbg !6265

for.cond:                                         ; preds = %for.inc29, %entry
  %1 = load i32, i32* %k, align 4, !dbg !6266
  %2 = load i32, i32* %kmax.addr, align 4, !dbg !6269
  %cmp = icmp sle i32 %1, %2, !dbg !6270
  br i1 %cmp, label %for.body, label %for.end31, !dbg !6271

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %pred_order.addr, align 4, !dbg !6272
  %idxprom = sext i32 %3 to i64, !dbg !6274
  %4 = load i32*, i32** %data.addr, align 8, !dbg !6274
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !6274
  store i32* %arrayidx, i32** %res, align 8, !dbg !6275
  %5 = load i32, i32* %n.addr, align 4, !dbg !6276
  %6 = load i32, i32* %pmax.addr, align 4, !dbg !6277
  %shr = ashr i32 %5, %6, !dbg !6278
  %idxprom1 = sext i32 %shr to i64, !dbg !6279
  %7 = load i32*, i32** %data.addr, align 8, !dbg !6279
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1, !dbg !6279
  store i32* %arrayidx2, i32** %res_end, align 8, !dbg !6280
  store i32 0, i32* %i, align 4, !dbg !6281
  br label %for.cond3, !dbg !6283

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6284
  %9 = load i32, i32* %parts, align 4, !dbg !6287
  %cmp4 = icmp slt i32 %8, %9, !dbg !6288
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !6289

for.body5:                                        ; preds = %for.cond3
  %10 = load i32, i32* %kmax.addr, align 4, !dbg !6290
  %tobool = icmp ne i32 %10, 0, !dbg !6290
  br i1 %tobool, label %if.then, label %if.else, !dbg !6293

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !6294, metadata !1730), !dbg !6296
  %11 = load i32, i32* %k, align 4, !dbg !6297
  %conv = sext i32 %11 to i64, !dbg !6297
  %add = add nsw i64 1, %conv, !dbg !6298
  %12 = load i32*, i32** %res_end, align 8, !dbg !6299
  %13 = load i32*, i32** %res, align 8, !dbg !6300
  %sub.ptr.lhs.cast = ptrtoint i32* %12 to i64, !dbg !6301
  %sub.ptr.rhs.cast = ptrtoint i32* %13 to i64, !dbg !6301
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6301
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !6301
  %mul = mul nsw i64 %add, %sub.ptr.div, !dbg !6302
  store i64 %mul, i64* %sum, align 8, !dbg !6296
  br label %while.cond, !dbg !6303

while.cond:                                       ; preds = %while.body, %if.then
  %14 = load i32*, i32** %res, align 8, !dbg !6304
  %15 = load i32*, i32** %res_end, align 8, !dbg !6306
  %cmp6 = icmp ult i32* %14, %15, !dbg !6307
  br i1 %cmp6, label %while.body, label %while.end, !dbg !6308

while.body:                                       ; preds = %while.cond
  %16 = load i32*, i32** %res, align 8, !dbg !6309
  %incdec.ptr = getelementptr inbounds i32, i32* %16, i32 1, !dbg !6309
  store i32* %incdec.ptr, i32** %res, align 8, !dbg !6309
  %17 = load i32, i32* %16, align 4, !dbg !6310
  %18 = load i32, i32* %k, align 4, !dbg !6311
  %shr8 = lshr i32 %17, %18, !dbg !6312
  %conv9 = zext i32 %shr8 to i64, !dbg !6310
  %19 = load i64, i64* %sum, align 8, !dbg !6313
  %add10 = add i64 %19, %conv9, !dbg !6313
  store i64 %add10, i64* %sum, align 8, !dbg !6313
  br label %while.cond, !dbg !6314, !llvm.loop !6316

while.end:                                        ; preds = %while.cond
  %20 = load i64, i64* %sum, align 8, !dbg !6317
  %21 = load i32, i32* %i, align 4, !dbg !6318
  %idxprom11 = sext i32 %21 to i64, !dbg !6319
  %22 = load i32, i32* %k, align 4, !dbg !6320
  %idxprom12 = sext i32 %22 to i64, !dbg !6319
  %23 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6319
  %arrayidx13 = getelementptr inbounds [256 x i64], [256 x i64]* %23, i64 %idxprom12, !dbg !6319
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx13, i64 0, i64 %idxprom11, !dbg !6319
  store i64 %20, i64* %arrayidx14, align 8, !dbg !6321
  br label %if.end, !dbg !6322

if.else:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata i64* %sum15, metadata !6323, metadata !1730), !dbg !6325
  store i64 0, i64* %sum15, align 8, !dbg !6325
  br label %while.cond16, !dbg !6326

while.cond16:                                     ; preds = %while.body19, %if.else
  %24 = load i32*, i32** %res, align 8, !dbg !6327
  %25 = load i32*, i32** %res_end, align 8, !dbg !6329
  %cmp17 = icmp ult i32* %24, %25, !dbg !6330
  br i1 %cmp17, label %while.body19, label %while.end23, !dbg !6331

while.body19:                                     ; preds = %while.cond16
  %26 = load i32*, i32** %res, align 8, !dbg !6332
  %incdec.ptr20 = getelementptr inbounds i32, i32* %26, i32 1, !dbg !6332
  store i32* %incdec.ptr20, i32** %res, align 8, !dbg !6332
  %27 = load i32, i32* %26, align 4, !dbg !6333
  %conv21 = zext i32 %27 to i64, !dbg !6333
  %28 = load i64, i64* %sum15, align 8, !dbg !6334
  %add22 = add i64 %28, %conv21, !dbg !6334
  store i64 %add22, i64* %sum15, align 8, !dbg !6334
  br label %while.cond16, !dbg !6335, !llvm.loop !6337

while.end23:                                      ; preds = %while.cond16
  %29 = load i64, i64* %sum15, align 8, !dbg !6338
  %30 = load i32, i32* %i, align 4, !dbg !6339
  %idxprom24 = sext i32 %30 to i64, !dbg !6340
  %31 = load i32, i32* %k, align 4, !dbg !6341
  %idxprom25 = sext i32 %31 to i64, !dbg !6340
  %32 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6340
  %arrayidx26 = getelementptr inbounds [256 x i64], [256 x i64]* %32, i64 %idxprom25, !dbg !6340
  %arrayidx27 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !6340
  store i64 %29, i64* %arrayidx27, align 8, !dbg !6342
  br label %if.end

if.end:                                           ; preds = %while.end23, %while.end
  %33 = load i32, i32* %n.addr, align 4, !dbg !6343
  %34 = load i32, i32* %pmax.addr, align 4, !dbg !6344
  %shr28 = ashr i32 %33, %34, !dbg !6345
  %35 = load i32*, i32** %res_end, align 8, !dbg !6346
  %idx.ext = sext i32 %shr28 to i64, !dbg !6346
  %add.ptr = getelementptr inbounds i32, i32* %35, i64 %idx.ext, !dbg !6346
  store i32* %add.ptr, i32** %res_end, align 8, !dbg !6346
  br label %for.inc, !dbg !6347

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !6348
  %inc = add nsw i32 %36, 1, !dbg !6348
  store i32 %inc, i32* %i, align 4, !dbg !6348
  br label %for.cond3, !dbg !6350, !llvm.loop !6351

for.end:                                          ; preds = %for.cond3
  br label %for.inc29, !dbg !6353

for.inc29:                                        ; preds = %for.end
  %37 = load i32, i32* %k, align 4, !dbg !6354
  %inc30 = add nsw i32 %37, 1, !dbg !6354
  store i32 %inc30, i32* %k, align 4, !dbg !6354
  br label %for.cond, !dbg !6356, !llvm.loop !6357

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !6359
}

; Function Attrs: nounwind uwtable
define internal i64 @calc_optimal_rice_params(%struct.RiceContext* %rc, i32 %porder, [256 x i64]* %sums, i32 %n, i32 %pred_order, i32 %max_param, i32 %exact) #1 !dbg !6360 {
entry:
  %rc.addr = alloca %struct.RiceContext*, align 8
  %porder.addr = alloca i32, align 4
  %sums.addr = alloca [256 x i64]*, align 8
  %n.addr = alloca i32, align 4
  %pred_order.addr = alloca i32, align 4
  %max_param.addr = alloca i32, align 4
  %exact.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %cnt = alloca i32, align 4
  %part = alloca i32, align 4
  %all_bits = alloca i64, align 8
  store %struct.RiceContext* %rc, %struct.RiceContext** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RiceContext** %rc.addr, metadata !6363, metadata !1730), !dbg !6364
  store i32 %porder, i32* %porder.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %porder.addr, metadata !6365, metadata !1730), !dbg !6366
  store [256 x i64]* %sums, [256 x i64]** %sums.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i64]** %sums.addr, metadata !6367, metadata !1730), !dbg !6368
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6369, metadata !1730), !dbg !6370
  store i32 %pred_order, i32* %pred_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_order.addr, metadata !6371, metadata !1730), !dbg !6372
  store i32 %max_param, i32* %max_param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_param.addr, metadata !6373, metadata !1730), !dbg !6374
  store i32 %exact, i32* %exact.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exact.addr, metadata !6375, metadata !1730), !dbg !6376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6377, metadata !1730), !dbg !6378
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6379, metadata !1730), !dbg !6380
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !6381, metadata !1730), !dbg !6382
  call void @llvm.dbg.declare(metadata i32* %part, metadata !6383, metadata !1730), !dbg !6384
  call void @llvm.dbg.declare(metadata i64* %all_bits, metadata !6385, metadata !1730), !dbg !6386
  %0 = load i32, i32* %porder.addr, align 4, !dbg !6387
  %shl = shl i32 1, %0, !dbg !6388
  store i32 %shl, i32* %part, align 4, !dbg !6389
  %1 = load i32, i32* %part, align 4, !dbg !6390
  %mul = mul nsw i32 4, %1, !dbg !6391
  %conv = sext i32 %mul to i64, !dbg !6392
  store i64 %conv, i64* %all_bits, align 8, !dbg !6393
  %2 = load i32, i32* %n.addr, align 4, !dbg !6394
  %3 = load i32, i32* %porder.addr, align 4, !dbg !6395
  %shr = ashr i32 %2, %3, !dbg !6396
  %4 = load i32, i32* %pred_order.addr, align 4, !dbg !6397
  %sub = sub nsw i32 %shr, %4, !dbg !6398
  store i32 %sub, i32* %cnt, align 4, !dbg !6399
  store i32 0, i32* %i, align 4, !dbg !6400
  br label %for.cond, !dbg !6402

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !6403
  %6 = load i32, i32* %part, align 4, !dbg !6406
  %cmp = icmp slt i32 %5, %6, !dbg !6407
  br i1 %cmp, label %for.body, label %for.end, !dbg !6408

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %exact.addr, align 4, !dbg !6409
  %tobool = icmp ne i32 %7, 0, !dbg !6409
  br i1 %tobool, label %if.then, label %if.else, !dbg !6412

if.then:                                          ; preds = %for.body
  %8 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6413
  %9 = load i32, i32* %i, align 4, !dbg !6415
  %10 = load i32, i32* %max_param.addr, align 4, !dbg !6416
  %call = call i32 @find_optimal_param_exact([256 x i64]* %8, i32 %9, i32 %10), !dbg !6417
  store i32 %call, i32* %k, align 4, !dbg !6418
  %11 = load i32, i32* %i, align 4, !dbg !6419
  %idxprom = sext i32 %11 to i64, !dbg !6420
  %12 = load i32, i32* %k, align 4, !dbg !6421
  %idxprom2 = sext i32 %12 to i64, !dbg !6420
  %13 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6420
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %13, i64 %idxprom2, !dbg !6420
  %arrayidx3 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx, i64 0, i64 %idxprom, !dbg !6420
  %14 = load i64, i64* %arrayidx3, align 8, !dbg !6420
  %15 = load i64, i64* %all_bits, align 8, !dbg !6422
  %add = add i64 %15, %14, !dbg !6422
  store i64 %add, i64* %all_bits, align 8, !dbg !6422
  br label %if.end, !dbg !6423

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !6424
  %idxprom4 = sext i32 %16 to i64, !dbg !6426
  %17 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6426
  %arrayidx5 = getelementptr inbounds [256 x i64], [256 x i64]* %17, i64 0, !dbg !6426
  %arrayidx6 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx5, i64 0, i64 %idxprom4, !dbg !6426
  %18 = load i64, i64* %arrayidx6, align 8, !dbg !6426
  %19 = load i32, i32* %cnt, align 4, !dbg !6427
  %20 = load i32, i32* %max_param.addr, align 4, !dbg !6428
  %call7 = call i32 @find_optimal_param(i64 %18, i32 %19, i32 %20), !dbg !6429
  store i32 %call7, i32* %k, align 4, !dbg !6430
  %21 = load i32, i32* %cnt, align 4, !dbg !6431
  %22 = load i32, i32* %k, align 4, !dbg !6432
  %add8 = add nsw i32 %22, 1, !dbg !6433
  %mul9 = mul nsw i32 %21, %add8, !dbg !6434
  %conv10 = sext i32 %mul9 to i64, !dbg !6435
  %23 = load i32, i32* %i, align 4, !dbg !6436
  %idxprom11 = sext i32 %23 to i64, !dbg !6437
  %24 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6437
  %arrayidx12 = getelementptr inbounds [256 x i64], [256 x i64]* %24, i64 0, !dbg !6437
  %arrayidx13 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx12, i64 0, i64 %idxprom11, !dbg !6437
  %25 = load i64, i64* %arrayidx13, align 8, !dbg !6437
  %26 = load i32, i32* %cnt, align 4, !dbg !6438
  %shr14 = ashr i32 %26, 1, !dbg !6439
  %conv15 = sext i32 %shr14 to i64, !dbg !6440
  %sub16 = sub i64 %25, %conv15, !dbg !6441
  %27 = load i32, i32* %k, align 4, !dbg !6442
  %sh_prom = zext i32 %27 to i64, !dbg !6443
  %shr17 = lshr i64 %sub16, %sh_prom, !dbg !6443
  %add18 = add i64 %conv10, %shr17, !dbg !6444
  %28 = load i64, i64* %all_bits, align 8, !dbg !6445
  %add19 = add i64 %28, %add18, !dbg !6445
  store i64 %add19, i64* %all_bits, align 8, !dbg !6445
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = load i32, i32* %k, align 4, !dbg !6446
  %30 = load i32, i32* %i, align 4, !dbg !6447
  %idxprom20 = sext i32 %30 to i64, !dbg !6448
  %31 = load %struct.RiceContext*, %struct.RiceContext** %rc.addr, align 8, !dbg !6448
  %params = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %31, i32 0, i32 2, !dbg !6449
  %arrayidx21 = getelementptr inbounds [256 x i32], [256 x i32]* %params, i64 0, i64 %idxprom20, !dbg !6448
  store i32 %29, i32* %arrayidx21, align 4, !dbg !6450
  %32 = load i32, i32* %n.addr, align 4, !dbg !6451
  %33 = load i32, i32* %porder.addr, align 4, !dbg !6452
  %shr22 = ashr i32 %32, %33, !dbg !6453
  store i32 %shr22, i32* %cnt, align 4, !dbg !6454
  br label %for.inc, !dbg !6455

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %i, align 4, !dbg !6456
  %inc = add nsw i32 %34, 1, !dbg !6456
  store i32 %inc, i32* %i, align 4, !dbg !6456
  br label %for.cond, !dbg !6458, !llvm.loop !6459

for.end:                                          ; preds = %for.cond
  %35 = load i32, i32* %porder.addr, align 4, !dbg !6461
  %36 = load %struct.RiceContext*, %struct.RiceContext** %rc.addr, align 8, !dbg !6462
  %porder23 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %36, i32 0, i32 1, !dbg !6463
  store i32 %35, i32* %porder23, align 4, !dbg !6464
  %37 = load i64, i64* %all_bits, align 8, !dbg !6465
  ret i64 %37, !dbg !6466
}

; Function Attrs: nounwind uwtable
define internal void @calc_sum_next(i32 %level, [256 x i64]* %sums, i32 %kmax) #1 !dbg !6467 {
entry:
  %level.addr = alloca i32, align 4
  %sums.addr = alloca [256 x i64]*, align 8
  %kmax.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %parts = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !6470, metadata !1730), !dbg !6471
  store [256 x i64]* %sums, [256 x i64]** %sums.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i64]** %sums.addr, metadata !6472, metadata !1730), !dbg !6473
  store i32 %kmax, i32* %kmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kmax.addr, metadata !6474, metadata !1730), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6476, metadata !1730), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6478, metadata !1730), !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %parts, metadata !6480, metadata !1730), !dbg !6481
  %0 = load i32, i32* %level.addr, align 4, !dbg !6482
  %shl = shl i32 1, %0, !dbg !6483
  store i32 %shl, i32* %parts, align 4, !dbg !6481
  store i32 0, i32* %i, align 4, !dbg !6484
  br label %for.cond, !dbg !6486

for.cond:                                         ; preds = %for.inc16, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6487
  %2 = load i32, i32* %parts, align 4, !dbg !6490
  %cmp = icmp slt i32 %1, %2, !dbg !6491
  br i1 %cmp, label %for.body, label %for.end18, !dbg !6492

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !6493
  br label %for.cond1, !dbg !6496

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %k, align 4, !dbg !6497
  %4 = load i32, i32* %kmax.addr, align 4, !dbg !6500
  %cmp2 = icmp sle i32 %3, %4, !dbg !6501
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6502

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %i, align 4, !dbg !6503
  %mul = mul nsw i32 2, %5, !dbg !6504
  %idxprom = sext i32 %mul to i64, !dbg !6505
  %6 = load i32, i32* %k, align 4, !dbg !6506
  %idxprom4 = sext i32 %6 to i64, !dbg !6505
  %7 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6505
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %7, i64 %idxprom4, !dbg !6505
  %arrayidx5 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx, i64 0, i64 %idxprom, !dbg !6505
  %8 = load i64, i64* %arrayidx5, align 8, !dbg !6505
  %9 = load i32, i32* %i, align 4, !dbg !6507
  %mul6 = mul nsw i32 2, %9, !dbg !6508
  %add = add nsw i32 %mul6, 1, !dbg !6509
  %idxprom7 = sext i32 %add to i64, !dbg !6510
  %10 = load i32, i32* %k, align 4, !dbg !6511
  %idxprom8 = sext i32 %10 to i64, !dbg !6510
  %11 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6510
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %11, i64 %idxprom8, !dbg !6510
  %arrayidx10 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx9, i64 0, i64 %idxprom7, !dbg !6510
  %12 = load i64, i64* %arrayidx10, align 8, !dbg !6510
  %add11 = add i64 %8, %12, !dbg !6512
  %13 = load i32, i32* %i, align 4, !dbg !6513
  %idxprom12 = sext i32 %13 to i64, !dbg !6514
  %14 = load i32, i32* %k, align 4, !dbg !6515
  %idxprom13 = sext i32 %14 to i64, !dbg !6514
  %15 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6514
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %15, i64 %idxprom13, !dbg !6514
  %arrayidx15 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !6514
  store i64 %add11, i64* %arrayidx15, align 8, !dbg !6516
  br label %for.inc, !dbg !6514

for.inc:                                          ; preds = %for.body3
  %16 = load i32, i32* %k, align 4, !dbg !6517
  %inc = add nsw i32 %16, 1, !dbg !6517
  store i32 %inc, i32* %k, align 4, !dbg !6517
  br label %for.cond1, !dbg !6519, !llvm.loop !6520

for.end:                                          ; preds = %for.cond1
  br label %for.inc16, !dbg !6522

for.inc16:                                        ; preds = %for.end
  %17 = load i32, i32* %i, align 4, !dbg !6523
  %inc17 = add nsw i32 %17, 1, !dbg !6523
  store i32 %inc17, i32* %i, align 4, !dbg !6523
  br label %for.cond, !dbg !6525, !llvm.loop !6526

for.end18:                                        ; preds = %for.cond
  ret void, !dbg !6528
}

; Function Attrs: nounwind uwtable
define internal i32 @find_optimal_param_exact([256 x i64]* %sums, i32 %i, i32 %max_param) #1 !dbg !6529 {
entry:
  %sums.addr = alloca [256 x i64]*, align 8
  %i.addr = alloca i32, align 4
  %max_param.addr = alloca i32, align 4
  %bestk = alloca i32, align 4
  %bestbits = alloca i64, align 8
  %k = alloca i32, align 4
  %bits = alloca i64, align 8
  store [256 x i64]* %sums, [256 x i64]** %sums.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i64]** %sums.addr, metadata !6532, metadata !1730), !dbg !6533
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6534, metadata !1730), !dbg !6535
  store i32 %max_param, i32* %max_param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_param.addr, metadata !6536, metadata !1730), !dbg !6537
  call void @llvm.dbg.declare(metadata i32* %bestk, metadata !6538, metadata !1730), !dbg !6539
  store i32 0, i32* %bestk, align 4, !dbg !6539
  call void @llvm.dbg.declare(metadata i64* %bestbits, metadata !6540, metadata !1730), !dbg !6541
  store i64 9223372036854775807, i64* %bestbits, align 8, !dbg !6541
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6542, metadata !1730), !dbg !6543
  store i32 0, i32* %k, align 4, !dbg !6544
  br label %for.cond, !dbg !6546

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !6547
  %1 = load i32, i32* %max_param.addr, align 4, !dbg !6550
  %cmp = icmp sle i32 %0, %1, !dbg !6551
  br i1 %cmp, label %for.body, label %for.end, !dbg !6552

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !6553, metadata !1730), !dbg !6555
  %2 = load i32, i32* %i.addr, align 4, !dbg !6556
  %idxprom = sext i32 %2 to i64, !dbg !6557
  %3 = load i32, i32* %k, align 4, !dbg !6558
  %idxprom1 = sext i32 %3 to i64, !dbg !6557
  %4 = load [256 x i64]*, [256 x i64]** %sums.addr, align 8, !dbg !6557
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %4, i64 %idxprom1, !dbg !6557
  %arrayidx2 = getelementptr inbounds [256 x i64], [256 x i64]* %arrayidx, i64 0, i64 %idxprom, !dbg !6557
  %5 = load i64, i64* %arrayidx2, align 8, !dbg !6557
  store i64 %5, i64* %bits, align 8, !dbg !6555
  %6 = load i64, i64* %bits, align 8, !dbg !6559
  %7 = load i64, i64* %bestbits, align 8, !dbg !6561
  %cmp3 = icmp slt i64 %6, %7, !dbg !6562
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6563

if.then:                                          ; preds = %for.body
  %8 = load i64, i64* %bits, align 8, !dbg !6564
  store i64 %8, i64* %bestbits, align 8, !dbg !6566
  %9 = load i32, i32* %k, align 4, !dbg !6567
  store i32 %9, i32* %bestk, align 4, !dbg !6568
  br label %if.end, !dbg !6569

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6570

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %k, align 4, !dbg !6571
  %inc = add nsw i32 %10, 1, !dbg !6571
  store i32 %inc, i32* %k, align 4, !dbg !6571
  br label %for.cond, !dbg !6573, !llvm.loop !6574

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %bestk, align 4, !dbg !6576
  ret i32 %11, !dbg !6577
}

; Function Attrs: nounwind uwtable
define internal void @write_frame_header(%struct.FlacEncodeContext* %s) #1 !dbg !6578 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %frame = alloca %struct.FlacFrame*, align 8
  %crc = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !6579, metadata !1730), !dbg !6580
  call void @llvm.dbg.declare(metadata %struct.FlacFrame** %frame, metadata !6581, metadata !1730), !dbg !6582
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !6583, metadata !1730), !dbg !6584
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6585
  %frame1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 13, !dbg !6586
  store %struct.FlacFrame* %frame1, %struct.FlacFrame** %frame, align 8, !dbg !6587
  %1 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6588
  %pb = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %1, i32 0, i32 1, !dbg !6589
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 65528), !dbg !6590
  %2 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6591
  %pb2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %2, i32 0, i32 1, !dbg !6592
  %3 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6593
  %bs_code = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %3, i32 0, i32 2, !dbg !6594
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code, i64 0, i64 0, !dbg !6593
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6593
  call void @put_bits(%struct.PutBitContext* %pb2, i32 4, i32 %4), !dbg !6595
  %5 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6596
  %pb3 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %5, i32 0, i32 1, !dbg !6597
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6598
  %sr_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 4, !dbg !6599
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code, i64 0, i64 0, !dbg !6598
  %7 = load i32, i32* %arrayidx4, align 8, !dbg !6598
  call void @put_bits(%struct.PutBitContext* %pb3, i32 4, i32 %7), !dbg !6600
  %8 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6601
  %ch_mode = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %8, i32 0, i32 4, !dbg !6603
  %9 = load i32, i32* %ch_mode, align 8, !dbg !6603
  %cmp = icmp eq i32 %9, 0, !dbg !6604
  br i1 %cmp, label %if.then, label %if.else, !dbg !6605

if.then:                                          ; preds = %entry
  %10 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6606
  %pb5 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %10, i32 0, i32 1, !dbg !6607
  %11 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6608
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %11, i32 0, i32 2, !dbg !6609
  %12 = load i32, i32* %channels, align 16, !dbg !6609
  %sub = sub nsw i32 %12, 1, !dbg !6610
  call void @put_bits(%struct.PutBitContext* %pb5, i32 4, i32 %sub), !dbg !6611
  br label %if.end, !dbg !6611

if.else:                                          ; preds = %entry
  %13 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6612
  %pb6 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %13, i32 0, i32 1, !dbg !6613
  %14 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6614
  %ch_mode7 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %14, i32 0, i32 4, !dbg !6615
  %15 = load i32, i32* %ch_mode7, align 8, !dbg !6615
  %add = add nsw i32 %15, 8, !dbg !6616
  %sub8 = sub nsw i32 %add, 1, !dbg !6617
  call void @put_bits(%struct.PutBitContext* %pb6, i32 4, i32 %sub8), !dbg !6618
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6619
  %pb9 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %16, i32 0, i32 1, !dbg !6620
  %17 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6621
  %bps_code = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %17, i32 0, i32 5, !dbg !6622
  %18 = load i32, i32* %bps_code, align 32, !dbg !6622
  call void @put_bits(%struct.PutBitContext* %pb9, i32 3, i32 %18), !dbg !6623
  %19 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6624
  %pb10 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %19, i32 0, i32 1, !dbg !6625
  call void @put_bits(%struct.PutBitContext* %pb10, i32 1, i32 0), !dbg !6626
  %20 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6627
  %pb11 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %20, i32 0, i32 1, !dbg !6628
  %21 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6629
  %frame_count = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %21, i32 0, i32 10, !dbg !6630
  %22 = load i32, i32* %frame_count, align 4, !dbg !6630
  call void @write_utf8(%struct.PutBitContext* %pb11, i32 %22), !dbg !6631
  %23 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6632
  %bs_code12 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %23, i32 0, i32 2, !dbg !6634
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code12, i64 0, i64 0, !dbg !6632
  %24 = load i32, i32* %arrayidx13, align 4, !dbg !6632
  %cmp14 = icmp eq i32 %24, 6, !dbg !6635
  br i1 %cmp14, label %if.then15, label %if.else19, !dbg !6636

if.then15:                                        ; preds = %if.end
  %25 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6637
  %pb16 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %25, i32 0, i32 1, !dbg !6638
  %26 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6639
  %bs_code17 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %26, i32 0, i32 2, !dbg !6640
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code17, i64 0, i64 1, !dbg !6639
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !6639
  call void @put_bits(%struct.PutBitContext* %pb16, i32 8, i32 %27), !dbg !6641
  br label %if.end28, !dbg !6641

if.else19:                                        ; preds = %if.end
  %28 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6642
  %bs_code20 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %28, i32 0, i32 2, !dbg !6644
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code20, i64 0, i64 0, !dbg !6642
  %29 = load i32, i32* %arrayidx21, align 4, !dbg !6642
  %cmp22 = icmp eq i32 %29, 7, !dbg !6645
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !6646

if.then23:                                        ; preds = %if.else19
  %30 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6647
  %pb24 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %30, i32 0, i32 1, !dbg !6648
  %31 = load %struct.FlacFrame*, %struct.FlacFrame** %frame, align 8, !dbg !6649
  %bs_code25 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %31, i32 0, i32 2, !dbg !6650
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %bs_code25, i64 0, i64 1, !dbg !6649
  %32 = load i32, i32* %arrayidx26, align 4, !dbg !6649
  call void @put_bits(%struct.PutBitContext* %pb24, i32 16, i32 %32), !dbg !6651
  br label %if.end27, !dbg !6651

if.end27:                                         ; preds = %if.then23, %if.else19
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then15
  %33 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6652
  %sr_code29 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %33, i32 0, i32 4, !dbg !6654
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code29, i64 0, i64 0, !dbg !6652
  %34 = load i32, i32* %arrayidx30, align 8, !dbg !6652
  %cmp31 = icmp eq i32 %34, 12, !dbg !6655
  br i1 %cmp31, label %if.then32, label %if.else36, !dbg !6656

if.then32:                                        ; preds = %if.end28
  %35 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6657
  %pb33 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %35, i32 0, i32 1, !dbg !6658
  %36 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6659
  %sr_code34 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %36, i32 0, i32 4, !dbg !6660
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code34, i64 0, i64 1, !dbg !6659
  %37 = load i32, i32* %arrayidx35, align 4, !dbg !6659
  call void @put_bits(%struct.PutBitContext* %pb33, i32 8, i32 %37), !dbg !6661
  br label %if.end45, !dbg !6661

if.else36:                                        ; preds = %if.end28
  %38 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6662
  %sr_code37 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %38, i32 0, i32 4, !dbg !6664
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code37, i64 0, i64 0, !dbg !6662
  %39 = load i32, i32* %arrayidx38, align 8, !dbg !6662
  %cmp39 = icmp sgt i32 %39, 12, !dbg !6665
  br i1 %cmp39, label %if.then40, label %if.end44, !dbg !6666

if.then40:                                        ; preds = %if.else36
  %40 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6667
  %pb41 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %40, i32 0, i32 1, !dbg !6668
  %41 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6669
  %sr_code42 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %41, i32 0, i32 4, !dbg !6670
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %sr_code42, i64 0, i64 1, !dbg !6669
  %42 = load i32, i32* %arrayidx43, align 4, !dbg !6669
  call void @put_bits(%struct.PutBitContext* %pb41, i32 16, i32 %42), !dbg !6671
  br label %if.end44, !dbg !6671

if.end44:                                         ; preds = %if.then40, %if.else36
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then32
  %43 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6672
  %pb46 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %43, i32 0, i32 1, !dbg !6673
  call void @flush_put_bits(%struct.PutBitContext* %pb46), !dbg !6674
  %call = call i32* @av_crc_get_table(i32 0), !dbg !6675
  %44 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6676
  %pb47 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %44, i32 0, i32 1, !dbg !6677
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %pb47, i32 0, i32 2, !dbg !6678
  %45 = load i8*, i8** %buf, align 8, !dbg !6678
  %46 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6679
  %pb48 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %46, i32 0, i32 1, !dbg !6680
  %call49 = call i32 @put_bits_count(%struct.PutBitContext* %pb48), !dbg !6681
  %shr = ashr i32 %call49, 3, !dbg !6682
  %conv = sext i32 %shr to i64, !dbg !6681
  %call50 = call i32 @av_crc(i32* %call, i32 0, i8* %45, i64 %conv) #10, !dbg !6683
  store i32 %call50, i32* %crc, align 4, !dbg !6685
  %47 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6686
  %pb51 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %47, i32 0, i32 1, !dbg !6687
  %48 = load i32, i32* %crc, align 4, !dbg !6688
  call void @put_bits(%struct.PutBitContext* %pb51, i32 8, i32 %48), !dbg !6689
  ret void, !dbg !6690
}

; Function Attrs: nounwind uwtable
define internal void @write_subframes(%struct.FlacEncodeContext* %s) #1 !dbg !6691 {
entry:
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %ch = alloca i32, align 4
  %sub = alloca %struct.FlacSubframe*, align 8
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  %porder = alloca i32, align 4
  %psize = alloca i32, align 4
  %part_end = alloca i32*, align 8
  %res = alloca i32*, align 8
  %frame_end = alloca i32*, align 8
  %cbits = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !6692, metadata !1730), !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6694, metadata !1730), !dbg !6695
  store i32 0, i32* %ch, align 4, !dbg !6696
  br label %for.cond, !dbg !6698

for.cond:                                         ; preds = %for.inc79, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6699
  %1 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6702
  %channels = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %1, i32 0, i32 2, !dbg !6703
  %2 = load i32, i32* %channels, align 16, !dbg !6703
  %cmp = icmp slt i32 %0, %2, !dbg !6704
  br i1 %cmp, label %for.body, label %for.end81, !dbg !6705

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FlacSubframe** %sub, metadata !6706, metadata !1730), !dbg !6708
  %3 = load i32, i32* %ch, align 4, !dbg !6709
  %idxprom = sext i32 %3 to i64, !dbg !6710
  %4 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6710
  %frame = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %4, i32 0, i32 13, !dbg !6711
  %subframes = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame, i32 0, i32 0, !dbg !6712
  %arrayidx = getelementptr inbounds [8 x %struct.FlacSubframe], [8 x %struct.FlacSubframe]* %subframes, i64 0, i64 %idxprom, !dbg !6710
  store %struct.FlacSubframe* %arrayidx, %struct.FlacSubframe** %sub, align 8, !dbg !6708
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6713, metadata !1730), !dbg !6714
  call void @llvm.dbg.declare(metadata i32* %p, metadata !6715, metadata !1730), !dbg !6716
  call void @llvm.dbg.declare(metadata i32* %porder, metadata !6717, metadata !1730), !dbg !6718
  call void @llvm.dbg.declare(metadata i32* %psize, metadata !6719, metadata !1730), !dbg !6720
  call void @llvm.dbg.declare(metadata i32** %part_end, metadata !6721, metadata !1730), !dbg !6722
  call void @llvm.dbg.declare(metadata i32** %res, metadata !6723, metadata !1730), !dbg !6724
  %5 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6725
  %residual = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %5, i32 0, i32 11, !dbg !6726
  %arraydecay = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual, i32 0, i32 0, !dbg !6725
  store i32* %arraydecay, i32** %res, align 8, !dbg !6724
  call void @llvm.dbg.declare(metadata i32** %frame_end, metadata !6727, metadata !1730), !dbg !6728
  %6 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6729
  %frame1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %6, i32 0, i32 13, !dbg !6730
  %blocksize = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame1, i32 0, i32 1, !dbg !6731
  %7 = load i32, i32* %blocksize, align 16, !dbg !6731
  %idxprom2 = sext i32 %7 to i64, !dbg !6732
  %8 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6732
  %residual3 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %8, i32 0, i32 11, !dbg !6733
  %arrayidx4 = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual3, i64 0, i64 %idxprom2, !dbg !6732
  store i32* %arrayidx4, i32** %frame_end, align 8, !dbg !6728
  %9 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6734
  %pb = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %9, i32 0, i32 1, !dbg !6735
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !6736
  %10 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6737
  %pb5 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %10, i32 0, i32 1, !dbg !6738
  %11 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6739
  %type_code = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %11, i32 0, i32 1, !dbg !6740
  %12 = load i32, i32* %type_code, align 4, !dbg !6740
  call void @put_bits(%struct.PutBitContext* %pb5, i32 6, i32 %12), !dbg !6741
  %13 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6742
  %pb6 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %13, i32 0, i32 1, !dbg !6743
  %14 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6744
  %wasted = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %14, i32 0, i32 3, !dbg !6745
  %15 = load i32, i32* %wasted, align 4, !dbg !6745
  %tobool = icmp ne i32 %15, 0, !dbg !6746
  %lnot = xor i1 %tobool, true, !dbg !6746
  %lnot7 = xor i1 %lnot, true, !dbg !6747
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !6747
  call void @put_bits(%struct.PutBitContext* %pb6, i32 1, i32 %lnot.ext), !dbg !6748
  %16 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6749
  %wasted8 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %16, i32 0, i32 3, !dbg !6751
  %17 = load i32, i32* %wasted8, align 4, !dbg !6751
  %tobool9 = icmp ne i32 %17, 0, !dbg !6749
  br i1 %tobool9, label %if.then, label %if.end, !dbg !6752

if.then:                                          ; preds = %for.body
  %18 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6753
  %pb10 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %18, i32 0, i32 1, !dbg !6754
  %19 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6755
  %wasted11 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %19, i32 0, i32 3, !dbg !6756
  %20 = load i32, i32* %wasted11, align 4, !dbg !6756
  call void @put_bits(%struct.PutBitContext* %pb10, i32 %20, i32 1), !dbg !6757
  br label %if.end, !dbg !6757

if.end:                                           ; preds = %if.then, %for.body
  %21 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6758
  %type = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %21, i32 0, i32 0, !dbg !6760
  %22 = load i32, i32* %type, align 8, !dbg !6760
  %cmp12 = icmp eq i32 %22, 0, !dbg !6761
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !6762

if.then13:                                        ; preds = %if.end
  %23 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6763
  %pb14 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %23, i32 0, i32 1, !dbg !6765
  %24 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6766
  %obits = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %24, i32 0, i32 2, !dbg !6767
  %25 = load i32, i32* %obits, align 8, !dbg !6767
  %26 = load i32*, i32** %res, align 8, !dbg !6768
  %arrayidx15 = getelementptr inbounds i32, i32* %26, i64 0, !dbg !6768
  %27 = load i32, i32* %arrayidx15, align 4, !dbg !6768
  call void @put_sbits(%struct.PutBitContext* %pb14, i32 %25, i32 %27), !dbg !6769
  br label %if.end78, !dbg !6770

if.else:                                          ; preds = %if.end
  %28 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6771
  %type16 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %28, i32 0, i32 0, !dbg !6774
  %29 = load i32, i32* %type16, align 8, !dbg !6774
  %cmp17 = icmp eq i32 %29, 1, !dbg !6775
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !6771

if.then18:                                        ; preds = %if.else
  br label %while.cond, !dbg !6776

while.cond:                                       ; preds = %while.body, %if.then18
  %30 = load i32*, i32** %res, align 8, !dbg !6778
  %31 = load i32*, i32** %frame_end, align 8, !dbg !6780
  %cmp19 = icmp ult i32* %30, %31, !dbg !6781
  br i1 %cmp19, label %while.body, label %while.end, !dbg !6782

while.body:                                       ; preds = %while.cond
  %32 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6783
  %pb20 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %32, i32 0, i32 1, !dbg !6784
  %33 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6785
  %obits21 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %33, i32 0, i32 2, !dbg !6786
  %34 = load i32, i32* %obits21, align 8, !dbg !6786
  %35 = load i32*, i32** %res, align 8, !dbg !6787
  %incdec.ptr = getelementptr inbounds i32, i32* %35, i32 1, !dbg !6787
  store i32* %incdec.ptr, i32** %res, align 8, !dbg !6787
  %36 = load i32, i32* %35, align 4, !dbg !6788
  call void @put_sbits(%struct.PutBitContext* %pb20, i32 %34, i32 %36), !dbg !6789
  br label %while.cond, !dbg !6790, !llvm.loop !6792

while.end:                                        ; preds = %while.cond
  br label %if.end77, !dbg !6793

if.else22:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6794
  br label %for.cond23, !dbg !6797

for.cond23:                                       ; preds = %for.inc, %if.else22
  %37 = load i32, i32* %i, align 4, !dbg !6798
  %38 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6801
  %order = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %38, i32 0, i32 4, !dbg !6802
  %39 = load i32, i32* %order, align 8, !dbg !6802
  %cmp24 = icmp slt i32 %37, %39, !dbg !6803
  br i1 %cmp24, label %for.body25, label %for.end, !dbg !6804

for.body25:                                       ; preds = %for.cond23
  %40 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6805
  %pb26 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %40, i32 0, i32 1, !dbg !6806
  %41 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6807
  %obits27 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %41, i32 0, i32 2, !dbg !6808
  %42 = load i32, i32* %obits27, align 8, !dbg !6808
  %43 = load i32*, i32** %res, align 8, !dbg !6809
  %incdec.ptr28 = getelementptr inbounds i32, i32* %43, i32 1, !dbg !6809
  store i32* %incdec.ptr28, i32** %res, align 8, !dbg !6809
  %44 = load i32, i32* %43, align 4, !dbg !6810
  call void @put_sbits(%struct.PutBitContext* %pb26, i32 %42, i32 %44), !dbg !6811
  br label %for.inc, !dbg !6811

for.inc:                                          ; preds = %for.body25
  %45 = load i32, i32* %i, align 4, !dbg !6812
  %inc = add nsw i32 %45, 1, !dbg !6812
  store i32 %inc, i32* %i, align 4, !dbg !6812
  br label %for.cond23, !dbg !6814, !llvm.loop !6815

for.end:                                          ; preds = %for.cond23
  %46 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6817
  %type29 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %46, i32 0, i32 0, !dbg !6819
  %47 = load i32, i32* %type29, align 8, !dbg !6819
  %cmp30 = icmp eq i32 %47, 32, !dbg !6820
  br i1 %cmp30, label %if.then31, label %if.end45, !dbg !6821

if.then31:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %cbits, metadata !6822, metadata !1730), !dbg !6824
  %48 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6825
  %options = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %48, i32 0, i32 14, !dbg !6826
  %lpc_coeff_precision = getelementptr inbounds %struct.CompressionOptions, %struct.CompressionOptions* %options, i32 0, i32 4, !dbg !6827
  %49 = load i32, i32* %lpc_coeff_precision, align 8, !dbg !6827
  store i32 %49, i32* %cbits, align 4, !dbg !6824
  %50 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6828
  %pb32 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %50, i32 0, i32 1, !dbg !6829
  %51 = load i32, i32* %cbits, align 4, !dbg !6830
  %sub33 = sub nsw i32 %51, 1, !dbg !6831
  call void @put_bits(%struct.PutBitContext* %pb32, i32 4, i32 %sub33), !dbg !6832
  %52 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6833
  %pb34 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %52, i32 0, i32 1, !dbg !6834
  %53 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6835
  %shift = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %53, i32 0, i32 6, !dbg !6836
  %54 = load i32, i32* %shift, align 4, !dbg !6836
  call void @put_sbits(%struct.PutBitContext* %pb34, i32 5, i32 %54), !dbg !6837
  store i32 0, i32* %i, align 4, !dbg !6838
  br label %for.cond35, !dbg !6840

for.cond35:                                       ; preds = %for.inc42, %if.then31
  %55 = load i32, i32* %i, align 4, !dbg !6841
  %56 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6844
  %order36 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %56, i32 0, i32 4, !dbg !6845
  %57 = load i32, i32* %order36, align 8, !dbg !6845
  %cmp37 = icmp slt i32 %55, %57, !dbg !6846
  br i1 %cmp37, label %for.body38, label %for.end44, !dbg !6847

for.body38:                                       ; preds = %for.cond35
  %58 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6848
  %pb39 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %58, i32 0, i32 1, !dbg !6849
  %59 = load i32, i32* %cbits, align 4, !dbg !6850
  %60 = load i32, i32* %i, align 4, !dbg !6851
  %idxprom40 = sext i32 %60 to i64, !dbg !6852
  %61 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6852
  %coefs = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %61, i32 0, i32 5, !dbg !6853
  %arrayidx41 = getelementptr inbounds [32 x i32], [32 x i32]* %coefs, i64 0, i64 %idxprom40, !dbg !6852
  %62 = load i32, i32* %arrayidx41, align 4, !dbg !6852
  call void @put_sbits(%struct.PutBitContext* %pb39, i32 %59, i32 %62), !dbg !6854
  br label %for.inc42, !dbg !6854

for.inc42:                                        ; preds = %for.body38
  %63 = load i32, i32* %i, align 4, !dbg !6855
  %inc43 = add nsw i32 %63, 1, !dbg !6855
  store i32 %inc43, i32* %i, align 4, !dbg !6855
  br label %for.cond35, !dbg !6857, !llvm.loop !6858

for.end44:                                        ; preds = %for.cond35
  br label %if.end45, !dbg !6860

if.end45:                                         ; preds = %for.end44, %for.end
  %64 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6861
  %pb46 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %64, i32 0, i32 1, !dbg !6862
  %65 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6863
  %rc = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %65, i32 0, i32 7, !dbg !6864
  %coding_mode = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc, i32 0, i32 0, !dbg !6865
  %66 = load i32, i32* %coding_mode, align 8, !dbg !6865
  %sub47 = sub i32 %66, 4, !dbg !6866
  call void @put_bits(%struct.PutBitContext* %pb46, i32 2, i32 %sub47), !dbg !6867
  %67 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6868
  %rc48 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %67, i32 0, i32 7, !dbg !6869
  %porder49 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc48, i32 0, i32 1, !dbg !6870
  %68 = load i32, i32* %porder49, align 4, !dbg !6870
  store i32 %68, i32* %porder, align 4, !dbg !6871
  %69 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6872
  %frame50 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %69, i32 0, i32 13, !dbg !6873
  %blocksize51 = getelementptr inbounds %struct.FlacFrame, %struct.FlacFrame* %frame50, i32 0, i32 1, !dbg !6874
  %70 = load i32, i32* %blocksize51, align 16, !dbg !6874
  %71 = load i32, i32* %porder, align 4, !dbg !6875
  %shr = ashr i32 %70, %71, !dbg !6876
  store i32 %shr, i32* %psize, align 4, !dbg !6877
  %72 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6878
  %pb52 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %72, i32 0, i32 1, !dbg !6879
  %73 = load i32, i32* %porder, align 4, !dbg !6880
  call void @put_bits(%struct.PutBitContext* %pb52, i32 4, i32 %73), !dbg !6881
  %74 = load i32, i32* %psize, align 4, !dbg !6882
  %idxprom53 = sext i32 %74 to i64, !dbg !6883
  %75 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6883
  %residual54 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %75, i32 0, i32 11, !dbg !6884
  %arrayidx55 = getelementptr inbounds [65546 x i32], [65546 x i32]* %residual54, i64 0, i64 %idxprom53, !dbg !6883
  store i32* %arrayidx55, i32** %part_end, align 8, !dbg !6885
  store i32 0, i32* %p, align 4, !dbg !6886
  br label %for.cond56, !dbg !6888

for.cond56:                                       ; preds = %for.inc74, %if.end45
  %76 = load i32, i32* %p, align 4, !dbg !6889
  %77 = load i32, i32* %porder, align 4, !dbg !6892
  %shl = shl i32 1, %77, !dbg !6893
  %cmp57 = icmp slt i32 %76, %shl, !dbg !6894
  br i1 %cmp57, label %for.body58, label %for.end76, !dbg !6895

for.body58:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6896, metadata !1730), !dbg !6898
  %78 = load i32, i32* %p, align 4, !dbg !6899
  %idxprom59 = sext i32 %78 to i64, !dbg !6900
  %79 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6900
  %rc60 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %79, i32 0, i32 7, !dbg !6901
  %params = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc60, i32 0, i32 2, !dbg !6902
  %arrayidx61 = getelementptr inbounds [256 x i32], [256 x i32]* %params, i64 0, i64 %idxprom59, !dbg !6900
  %80 = load i32, i32* %arrayidx61, align 4, !dbg !6900
  store i32 %80, i32* %k, align 4, !dbg !6898
  %81 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6903
  %pb62 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %81, i32 0, i32 1, !dbg !6904
  %82 = load %struct.FlacSubframe*, %struct.FlacSubframe** %sub, align 8, !dbg !6905
  %rc63 = getelementptr inbounds %struct.FlacSubframe, %struct.FlacSubframe* %82, i32 0, i32 7, !dbg !6906
  %coding_mode64 = getelementptr inbounds %struct.RiceContext, %struct.RiceContext* %rc63, i32 0, i32 0, !dbg !6907
  %83 = load i32, i32* %coding_mode64, align 8, !dbg !6907
  %84 = load i32, i32* %k, align 4, !dbg !6908
  call void @put_bits(%struct.PutBitContext* %pb62, i32 %83, i32 %84), !dbg !6909
  br label %while.cond65, !dbg !6910

while.cond65:                                     ; preds = %while.body67, %for.body58
  %85 = load i32*, i32** %res, align 8, !dbg !6911
  %86 = load i32*, i32** %part_end, align 8, !dbg !6913
  %cmp66 = icmp ult i32* %85, %86, !dbg !6914
  br i1 %cmp66, label %while.body67, label %while.end70, !dbg !6915

while.body67:                                     ; preds = %while.cond65
  %87 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6916
  %pb68 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %87, i32 0, i32 1, !dbg !6917
  %88 = load i32*, i32** %res, align 8, !dbg !6918
  %incdec.ptr69 = getelementptr inbounds i32, i32* %88, i32 1, !dbg !6918
  store i32* %incdec.ptr69, i32** %res, align 8, !dbg !6918
  %89 = load i32, i32* %88, align 4, !dbg !6919
  %90 = load i32, i32* %k, align 4, !dbg !6920
  call void @set_sr_golomb_flac(%struct.PutBitContext* %pb68, i32 %89, i32 %90, i32 2147483647, i32 0), !dbg !6921
  br label %while.cond65, !dbg !6922, !llvm.loop !6924

while.end70:                                      ; preds = %while.cond65
  %91 = load i32*, i32** %frame_end, align 8, !dbg !6925
  %92 = load i32*, i32** %part_end, align 8, !dbg !6926
  %93 = load i32, i32* %psize, align 4, !dbg !6927
  %idx.ext = sext i32 %93 to i64, !dbg !6928
  %add.ptr = getelementptr inbounds i32, i32* %92, i64 %idx.ext, !dbg !6928
  %cmp71 = icmp ugt i32* %91, %add.ptr, !dbg !6929
  br i1 %cmp71, label %cond.true, label %cond.false, !dbg !6930

cond.true:                                        ; preds = %while.end70
  %94 = load i32*, i32** %part_end, align 8, !dbg !6931
  %95 = load i32, i32* %psize, align 4, !dbg !6932
  %idx.ext72 = sext i32 %95 to i64, !dbg !6933
  %add.ptr73 = getelementptr inbounds i32, i32* %94, i64 %idx.ext72, !dbg !6933
  br label %cond.end, !dbg !6934

cond.false:                                       ; preds = %while.end70
  %96 = load i32*, i32** %frame_end, align 8, !dbg !6935
  br label %cond.end, !dbg !6936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %add.ptr73, %cond.true ], [ %96, %cond.false ], !dbg !6937
  store i32* %cond, i32** %part_end, align 8, !dbg !6939
  br label %for.inc74, !dbg !6940

for.inc74:                                        ; preds = %cond.end
  %97 = load i32, i32* %p, align 4, !dbg !6941
  %inc75 = add nsw i32 %97, 1, !dbg !6941
  store i32 %inc75, i32* %p, align 4, !dbg !6941
  br label %for.cond56, !dbg !6943, !llvm.loop !6944

for.end76:                                        ; preds = %for.cond56
  br label %if.end77

if.end77:                                         ; preds = %for.end76, %while.end
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then13
  br label %for.inc79, !dbg !6946

for.inc79:                                        ; preds = %if.end78
  %98 = load i32, i32* %ch, align 4, !dbg !6947
  %inc80 = add nsw i32 %98, 1, !dbg !6947
  store i32 %inc80, i32* %ch, align 4, !dbg !6947
  br label %for.cond, !dbg !6949, !llvm.loop !6950

for.end81:                                        ; preds = %for.cond
  ret void, !dbg !6952
}

; Function Attrs: nounwind uwtable
define internal void @write_frame_footer(%struct.FlacEncodeContext* %s) #1 !dbg !6953 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !6954, metadata !1730), !dbg !6958
  %s.addr = alloca %struct.FlacEncodeContext*, align 8
  %crc = alloca i32, align 4
  store %struct.FlacEncodeContext* %s, %struct.FlacEncodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FlacEncodeContext** %s.addr, metadata !6961, metadata !1730), !dbg !6962
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !6963, metadata !1730), !dbg !6964
  %0 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6965
  %pb = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %0, i32 0, i32 1, !dbg !6966
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !6967
  %call = call i32* @av_crc_get_table(i32 1), !dbg !6968
  %1 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6969
  %pb1 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %1, i32 0, i32 1, !dbg !6970
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %pb1, i32 0, i32 2, !dbg !6971
  %2 = load i8*, i8** %buf, align 8, !dbg !6971
  %3 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6972
  %pb2 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %3, i32 0, i32 1, !dbg !6973
  %call3 = call i32 @put_bits_count(%struct.PutBitContext* %pb2), !dbg !6974
  %shr = ashr i32 %call3, 3, !dbg !6975
  %conv = sext i32 %shr to i64, !dbg !6974
  %call4 = call i32 @av_crc(i32* %call, i32 0, i8* %2, i64 %conv) #10, !dbg !6976
  %conv5 = trunc i32 %call4 to i16, !dbg !6978
  store i16 %conv5, i16* %x.addr.i, align 2, !dbg !6979
  %4 = load i16, i16* %x.addr.i, align 2, !dbg !6980
  %conv.i = zext i16 %4 to i32, !dbg !6980
  %shr.i = ashr i32 %conv.i, 8, !dbg !6981
  %5 = load i16, i16* %x.addr.i, align 2, !dbg !6982
  %conv1.i = zext i16 %5 to i32, !dbg !6982
  %shl.i = shl i32 %conv1.i, 8, !dbg !6983
  %or.i = or i32 %shr.i, %shl.i, !dbg !6984
  %conv2.i = trunc i32 %or.i to i16, !dbg !6985
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !6986
  %6 = load i16, i16* %x.addr.i, align 2, !dbg !6987
  %conv7 = zext i16 %6 to i32, !dbg !6988
  store i32 %conv7, i32* %crc, align 4, !dbg !6989
  %7 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6990
  %pb8 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %7, i32 0, i32 1, !dbg !6991
  %8 = load i32, i32* %crc, align 4, !dbg !6992
  call void @put_bits(%struct.PutBitContext* %pb8, i32 16, i32 %8), !dbg !6993
  %9 = load %struct.FlacEncodeContext*, %struct.FlacEncodeContext** %s.addr, align 8, !dbg !6994
  %pb9 = getelementptr inbounds %struct.FlacEncodeContext, %struct.FlacEncodeContext* %9, i32 0, i32 1, !dbg !6995
  call void @flush_put_bits(%struct.PutBitContext* %pb9), !dbg !6996
  ret void, !dbg !6997
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #6 !dbg !6998 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !7001, metadata !1730), !dbg !7002
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7003
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !7004
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !7004
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7005
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !7006
  %3 = load i8*, i8** %buf, align 8, !dbg !7006
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !7007
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !7007
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7007
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !7008
  %add = add nsw i64 %mul, 32, !dbg !7009
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7010
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !7011
  %5 = load i32, i32* %bit_left, align 4, !dbg !7011
  %conv = sext i32 %5 to i64, !dbg !7010
  %sub = sub nsw i64 %add, %conv, !dbg !7012
  %conv1 = trunc i64 %sub to i32, !dbg !7013
  ret i32 %conv1, !dbg !7014
}

; Function Attrs: nounwind uwtable
define internal void @write_utf8(%struct.PutBitContext* %pb, i32 %val) #1 !dbg !7015 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %val.addr = alloca i32, align 4
  %tmp = alloca i8, align 1
  %bytes = alloca i32, align 4
  %shift = alloca i32, align 4
  %in = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7018, metadata !1730), !dbg !7019
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7020, metadata !1730), !dbg !7021
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !7022, metadata !1730), !dbg !7023
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !7024, metadata !1730), !dbg !7026
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7027, metadata !1730), !dbg !7028
  call void @llvm.dbg.declare(metadata i32* %in, metadata !7029, metadata !1730), !dbg !7030
  %0 = load i32, i32* %val.addr, align 4, !dbg !7031
  store i32 %0, i32* %in, align 4, !dbg !7030
  %1 = load i32, i32* %in, align 4, !dbg !7032
  %cmp = icmp ult i32 %1, 128, !dbg !7034
  br i1 %cmp, label %if.then, label %if.else, !dbg !7035

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %in, align 4, !dbg !7036
  %conv = trunc i32 %2 to i8, !dbg !7036
  store i8 %conv, i8* %tmp, align 1, !dbg !7039
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7040
  %4 = load i8, i8* %tmp, align 1, !dbg !7041
  %conv4 = zext i8 %4 to i32, !dbg !7041
  call void @put_bits(%struct.PutBitContext* %3, i32 8, i32 %conv4), !dbg !7042
  br label %if.end, !dbg !7043

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %in, align 4, !dbg !7044
  %or = or i32 %5, 1, !dbg !7047
  %6 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !7048
  %sub = sub nsw i32 31, %6, !dbg !7049
  %add = add nsw i32 %sub, 4, !dbg !7050
  %div = sdiv i32 %add, 5, !dbg !7051
  store i32 %div, i32* %bytes, align 4, !dbg !7052
  %7 = load i32, i32* %bytes, align 4, !dbg !7053
  %sub5 = sub nsw i32 %7, 1, !dbg !7054
  %mul = mul nsw i32 %sub5, 6, !dbg !7055
  store i32 %mul, i32* %shift, align 4, !dbg !7056
  %8 = load i32, i32* %bytes, align 4, !dbg !7057
  %shr = ashr i32 256, %8, !dbg !7058
  %sub6 = sub nsw i32 256, %shr, !dbg !7059
  %9 = load i32, i32* %in, align 4, !dbg !7060
  %10 = load i32, i32* %shift, align 4, !dbg !7061
  %shr7 = lshr i32 %9, %10, !dbg !7062
  %or8 = or i32 %sub6, %shr7, !dbg !7063
  %conv9 = trunc i32 %or8 to i8, !dbg !7064
  store i8 %conv9, i8* %tmp, align 1, !dbg !7065
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7066
  %12 = load i8, i8* %tmp, align 1, !dbg !7067
  %conv10 = zext i8 %12 to i32, !dbg !7067
  call void @put_bits(%struct.PutBitContext* %11, i32 8, i32 %conv10), !dbg !7068
  br label %while.cond, !dbg !7070

while.cond:                                       ; preds = %while.body, %if.else
  %13 = load i32, i32* %shift, align 4, !dbg !7071
  %cmp11 = icmp sge i32 %13, 6, !dbg !7073
  br i1 %cmp11, label %while.body, label %while.end, !dbg !7074

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %shift, align 4, !dbg !7075
  %sub13 = sub nsw i32 %14, 6, !dbg !7075
  store i32 %sub13, i32* %shift, align 4, !dbg !7075
  %15 = load i32, i32* %in, align 4, !dbg !7078
  %16 = load i32, i32* %shift, align 4, !dbg !7079
  %shr14 = lshr i32 %15, %16, !dbg !7080
  %and = and i32 %shr14, 63, !dbg !7081
  %or15 = or i32 128, %and, !dbg !7082
  %conv16 = trunc i32 %or15 to i8, !dbg !7083
  store i8 %conv16, i8* %tmp, align 1, !dbg !7084
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7085
  %18 = load i8, i8* %tmp, align 1, !dbg !7086
  %conv17 = zext i8 %18 to i32, !dbg !7086
  call void @put_bits(%struct.PutBitContext* %17, i32 8, i32 %conv17), !dbg !7087
  br label %while.cond, !dbg !7088, !llvm.loop !7089

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  ret void, !dbg !7091
}

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #7

declare i32* @av_crc_get_table(i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_sbits(%struct.PutBitContext* %pb, i32 %n, i32 %value) #6 !dbg !7092 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7095, metadata !1730), !dbg !7099
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !7101, metadata !1730), !dbg !7102
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7103, metadata !1730), !dbg !7104
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7105, metadata !1730), !dbg !7106
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7107, metadata !1730), !dbg !7108
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7109
  %1 = load i32, i32* %n.addr, align 4, !dbg !7110
  %2 = load i32, i32* %value.addr, align 4, !dbg !7111
  %3 = load i32, i32* %n.addr, align 4, !dbg !7112
  store i32 %2, i32* %a.addr.i, align 4, !dbg !7113
  store i32 %3, i32* %p.addr.i, align 4, !dbg !7113
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !7114
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !7115
  %shl.i = shl i32 1, %5, !dbg !7116
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7117
  %and.i = and i32 %4, %sub.i, !dbg !7118
  call void @put_bits(%struct.PutBitContext* %0, i32 %1, i32 %and.i), !dbg !7119
  ret void, !dbg !7121
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_sr_golomb_flac(%struct.PutBitContext* %pb, i32 %i, i32 %k, i32 %limit, i32 %esc_len) #6 !dbg !7122 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %i.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %esc_len.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7126, metadata !1730), !dbg !7127
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7128, metadata !1730), !dbg !7129
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !7130, metadata !1730), !dbg !7131
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !7132, metadata !1730), !dbg !7133
  store i32 %esc_len, i32* %esc_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %esc_len.addr, metadata !7134, metadata !1730), !dbg !7135
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7136, metadata !1730), !dbg !7137
  %0 = load i32, i32* %i.addr, align 4, !dbg !7138
  %mul = mul nsw i32 -2, %0, !dbg !7139
  %sub = sub nsw i32 %mul, 1, !dbg !7140
  store i32 %sub, i32* %v, align 4, !dbg !7141
  %1 = load i32, i32* %v, align 4, !dbg !7142
  %shr = ashr i32 %1, 31, !dbg !7143
  %2 = load i32, i32* %v, align 4, !dbg !7144
  %xor = xor i32 %2, %shr, !dbg !7144
  store i32 %xor, i32* %v, align 4, !dbg !7144
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7145
  %4 = load i32, i32* %v, align 4, !dbg !7146
  %5 = load i32, i32* %k.addr, align 4, !dbg !7147
  %6 = load i32, i32* %limit.addr, align 4, !dbg !7148
  %7 = load i32, i32* %esc_len.addr, align 4, !dbg !7149
  call void @set_ur_golomb_jpegls(%struct.PutBitContext* %3, i32 %4, i32 %5, i32 %6, i32 %7), !dbg !7150
  ret void, !dbg !7151
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_ur_golomb_jpegls(%struct.PutBitContext* %pb, i32 %i, i32 %k, i32 %limit, i32 %esc_len) #6 !dbg !7152 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %i.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %esc_len.addr = alloca i32, align 4
  %e = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7153, metadata !1730), !dbg !7154
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7155, metadata !1730), !dbg !7156
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !7157, metadata !1730), !dbg !7158
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !7159, metadata !1730), !dbg !7160
  store i32 %esc_len, i32* %esc_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %esc_len.addr, metadata !7161, metadata !1730), !dbg !7162
  call void @llvm.dbg.declare(metadata i32* %e, metadata !7163, metadata !1730), !dbg !7164
  %0 = load i32, i32* %i.addr, align 4, !dbg !7165
  %1 = load i32, i32* %k.addr, align 4, !dbg !7166
  %shr = ashr i32 %0, %1, !dbg !7167
  %add = add nsw i32 %shr, 1, !dbg !7168
  store i32 %add, i32* %e, align 4, !dbg !7169
  %2 = load i32, i32* %e, align 4, !dbg !7170
  %3 = load i32, i32* %limit.addr, align 4, !dbg !7172
  %cmp = icmp slt i32 %2, %3, !dbg !7173
  br i1 %cmp, label %if.then, label %if.else, !dbg !7174

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !7175

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load i32, i32* %e, align 4, !dbg !7177
  %cmp1 = icmp sgt i32 %4, 31, !dbg !7179
  br i1 %cmp1, label %while.body, label %while.end, !dbg !7180

while.body:                                       ; preds = %while.cond
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7181
  call void @put_bits(%struct.PutBitContext* %5, i32 31, i32 0), !dbg !7183
  %6 = load i32, i32* %e, align 4, !dbg !7184
  %sub = sub nsw i32 %6, 31, !dbg !7184
  store i32 %sub, i32* %e, align 4, !dbg !7184
  br label %while.cond, !dbg !7185, !llvm.loop !7187

while.end:                                        ; preds = %while.cond
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7188
  %8 = load i32, i32* %e, align 4, !dbg !7189
  call void @put_bits(%struct.PutBitContext* %7, i32 %8, i32 1), !dbg !7190
  %9 = load i32, i32* %k.addr, align 4, !dbg !7191
  %tobool = icmp ne i32 %9, 0, !dbg !7191
  br i1 %tobool, label %if.then2, label %if.end, !dbg !7193

if.then2:                                         ; preds = %while.end
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7194
  %11 = load i32, i32* %k.addr, align 4, !dbg !7195
  %12 = load i32, i32* %i.addr, align 4, !dbg !7196
  call void @put_sbits(%struct.PutBitContext* %10, i32 %11, i32 %12), !dbg !7197
  br label %if.end, !dbg !7197

if.end:                                           ; preds = %if.then2, %while.end
  br label %if.end9, !dbg !7198

if.else:                                          ; preds = %entry
  br label %while.cond3, !dbg !7199

while.cond3:                                      ; preds = %while.body5, %if.else
  %13 = load i32, i32* %limit.addr, align 4, !dbg !7201
  %cmp4 = icmp sgt i32 %13, 31, !dbg !7203
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !7204

while.body5:                                      ; preds = %while.cond3
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7205
  call void @put_bits(%struct.PutBitContext* %14, i32 31, i32 0), !dbg !7207
  %15 = load i32, i32* %limit.addr, align 4, !dbg !7208
  %sub6 = sub nsw i32 %15, 31, !dbg !7208
  store i32 %sub6, i32* %limit.addr, align 4, !dbg !7208
  br label %while.cond3, !dbg !7209, !llvm.loop !7211

while.end7:                                       ; preds = %while.cond3
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7212
  %17 = load i32, i32* %limit.addr, align 4, !dbg !7213
  call void @put_bits(%struct.PutBitContext* %16, i32 %17, i32 1), !dbg !7214
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7215
  %19 = load i32, i32* %esc_len.addr, align 4, !dbg !7216
  %20 = load i32, i32* %i.addr, align 4, !dbg !7217
  %sub8 = sub nsw i32 %20, 1, !dbg !7218
  call void @put_bits(%struct.PutBitContext* %18, i32 %19, i32 %sub8), !dbg !7219
  br label %if.end9

if.end9:                                          ; preds = %while.end7, %if.end
  ret void, !dbg !7220
}

declare void @av_fast_malloc(i8*, i32*, i64) #2

declare void @av_md5_update(%struct.AVMD5*, i8*, i32) #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #8

declare void @av_freep(i8*) #2

declare void @ff_lpc_end(%struct.LPCContext*) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1724, !1725}
!llvm.ident = !{!1726}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !942, globals: !962)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--flacenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !914, !923, !930}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CodingMode", file: !910, line: 50, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/flacenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913}
!912 = !DIEnumerator(name: "CODING_MODE_RICE", value: 4)
!913 = !DIEnumerator(name: "CODING_MODE_RICE2", value: 5)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !915, line: 43, size: 32, align: 32, elements: !916)
!915 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!916 = !{!917, !918, !919, !920, !921, !922}
!917 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!918 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!919 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!920 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!921 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!922 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !924, line: 40, size: 32, align: 32, elements: !925)
!924 = !DIFile(filename: "libavcodec/flac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!925 = !{!926, !927, !928, !929}
!926 = !DIEnumerator(name: "FLAC_CHMODE_INDEPENDENT", value: 0)
!927 = !DIEnumerator(name: "FLAC_CHMODE_LEFT_SIDE", value: 1)
!928 = !DIEnumerator(name: "FLAC_CHMODE_RIGHT_SIDE", value: 2)
!929 = !DIEnumerator(name: "FLAC_CHMODE_MID_SIDE", value: 3)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !931, line: 49, size: 32, align: 32, elements: !932)
!931 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!932 = !{!933, !934, !935, !936, !937, !938, !939, !940, !941}
!933 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!934 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!935 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!936 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!937 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!938 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!939 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!940 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!941 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!942 = !{!943, !944, !952, !954, !951, !955, !959, !960}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !946, line: 221, size: 32, align: 8, elements: !947)
!946 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!947 = !{!948}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !945, file: !946, line: 221, baseType: !949, size: 32, align: 32)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !950, line: 51, baseType: !951)
!950 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!951 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !953, line: 196, baseType: !954)
!953 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!954 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !950, line: 48, baseType: !958)
!958 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !953, line: 197, baseType: !961)
!961 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!962 = !{!963, !1717, !1718}
!963 = distinct !DIGlobalVariable(name: "ff_flac_encoder", scope: !0, file: !910, line: 1502, type: !964, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_flac_encoder)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !966)
!966 = !{!967, !971, !972, !973, !974, !975, !984, !987, !990, !993, !998, !999, !1072, !1080, !1081, !1082, !1084, !1632, !1638, !1646, !1650, !1651, !1688, !1692, !1696, !1697, !1701, !1705, !1706, !1710, !1711, !1712}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !965, file: !14, line: 3475, baseType: !968, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !965, file: !14, line: 3480, baseType: !968, size: 64, align: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !965, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !965, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !965, file: !14, line: 3487, baseType: !954, size: 32, align: 32, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !965, file: !14, line: 3488, baseType: !976, size: 64, align: 64, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !979, line: 61, baseType: !980)
!979 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !979, line: 58, size: 64, align: 32, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !980, file: !979, line: 59, baseType: !954, size: 32, align: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !980, file: !979, line: 60, baseType: !954, size: 32, align: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !965, file: !14, line: 3489, baseType: !985, size: 64, align: 64, offset: 320)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !965, file: !14, line: 3490, baseType: !988, size: 64, align: 64, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !965, file: !14, line: 3491, baseType: !991, size: 64, align: 64, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !965, file: !14, line: 3492, baseType: !994, size: 64, align: 64, offset: 512)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !950, line: 55, baseType: !997)
!997 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !965, file: !14, line: 3493, baseType: !957, size: 8, align: 8, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !965, file: !14, line: 3494, baseType: !1000, size: 64, align: 64, offset: 640)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1004)
!1004 = !{!1005, !1006, !1010, !1031, !1032, !1033, !1034, !1038, !1044, !1046, !1050}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1003, file: !713, line: 72, baseType: !968, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1003, file: !713, line: 78, baseType: !1007, size: 64, align: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!968, !943}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1003, file: !713, line: 85, baseType: !1011, size: 64, align: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1027, !1028, !1029, !1030}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1013, file: !691, line: 247, baseType: !968, size: 64, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1013, file: !691, line: 253, baseType: !968, size: 64, align: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1013, file: !691, line: 259, baseType: !954, size: 32, align: 32, offset: 128)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1013, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1013, file: !691, line: 271, baseType: !1020, size: 64, align: 64, offset: 192)
!1020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1013, file: !691, line: 265, size: 64, align: 64, elements: !1021)
!1021 = !{!1022, !1023, !1025, !1026}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1020, file: !691, line: 266, baseType: !960, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1020, file: !691, line: 267, baseType: !1024, size: 64, align: 64)
!1024 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1020, file: !691, line: 268, baseType: !968, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1020, file: !691, line: 270, baseType: !978, size: 64, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1013, file: !691, line: 272, baseType: !1024, size: 64, align: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1013, file: !691, line: 273, baseType: !1024, size: 64, align: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1013, file: !691, line: 275, baseType: !954, size: 32, align: 32, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1013, file: !691, line: 300, baseType: !968, size: 64, align: 64, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1003, file: !713, line: 93, baseType: !954, size: 32, align: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1003, file: !713, line: 99, baseType: !954, size: 32, align: 32, offset: 224)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1003, file: !713, line: 108, baseType: !954, size: 32, align: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1003, file: !713, line: 113, baseType: !1035, size: 64, align: 64, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!943, !943, !943}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1003, file: !713, line: 123, baseType: !1039, size: 64, align: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!1042, !1042}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1003, file: !713, line: 130, baseType: !1045, size: 32, align: 32, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1003, file: !713, line: 136, baseType: !1047, size: 64, align: 64, offset: 512)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!1045, !943}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1003, file: !713, line: 142, baseType: !1051, size: 64, align: 64, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!954, !1054, !943, !968, !954}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1057)
!1057 = !{!1058, !1070, !1071}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1056, file: !691, line: 360, baseType: !1059, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068, !1069}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1062, file: !691, line: 307, baseType: !968, size: 64, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1062, file: !691, line: 313, baseType: !1024, size: 64, align: 64, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1062, file: !691, line: 313, baseType: !1024, size: 64, align: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1062, file: !691, line: 318, baseType: !1024, size: 64, align: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1062, file: !691, line: 318, baseType: !1024, size: 64, align: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1062, file: !691, line: 323, baseType: !954, size: 32, align: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1056, file: !691, line: 364, baseType: !954, size: 32, align: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1056, file: !691, line: 368, baseType: !954, size: 32, align: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !965, file: !14, line: 3495, baseType: !1073, size: 64, align: 64, offset: 704)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1076, file: !14, line: 3402, baseType: !954, size: 32, align: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1076, file: !14, line: 3403, baseType: !968, size: 64, align: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !965, file: !14, line: 3507, baseType: !968, size: 64, align: 64, offset: 768)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !965, file: !14, line: 3516, baseType: !954, size: 32, align: 32, offset: 832)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !965, file: !14, line: 3517, baseType: !1083, size: 64, align: 64, offset: 896)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !965, file: !14, line: 3527, baseType: !1085, size: 64, align: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!954, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1098, !1099, !1100, !1101, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1380, !1384, !1385, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1570, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1090, file: !14, line: 1561, baseType: !1000, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1090, file: !14, line: 1562, baseType: !954, size: 32, align: 32, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1090, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1090, file: !14, line: 1565, baseType: !1096, size: 64, align: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1090, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1090, file: !14, line: 1581, baseType: !951, size: 32, align: 32, offset: 224)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1090, file: !14, line: 1583, baseType: !943, size: 64, align: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1090, file: !14, line: 1591, baseType: !1102, size: 64, align: 64, offset: 320)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1104, line: 129, size: 1664, align: 64, elements: !1105)
!1104 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1105 = !{!1106, !1107, !1108, !1109, !1206, !1227, !1228, !1257, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1103, file: !1104, line: 136, baseType: !954, size: 32, align: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1103, file: !1104, line: 151, baseType: !954, size: 32, align: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1103, file: !1104, line: 157, baseType: !954, size: 32, align: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1103, file: !1104, line: 159, baseType: !1110, size: 64, align: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1113)
!1113 = !{!1114, !1118, !1120, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1158, !1160, !1161, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1194, !1195, !1196, !1197, !1198, !1199, !1202, !1203, !1204, !1205}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1112, file: !744, line: 282, baseType: !1115, size: 512, align: 64)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 512, align: 64, elements: !1116)
!1116 = !{!1117}
!1117 = !DISubrange(count: 8)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1112, file: !744, line: 299, baseType: !1119, size: 256, align: 32, offset: 512)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 256, align: 32, elements: !1116)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1112, file: !744, line: 315, baseType: !1121, size: 64, align: 64, offset: 768)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1112, file: !744, line: 326, baseType: !954, size: 32, align: 32, offset: 832)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1112, file: !744, line: 326, baseType: !954, size: 32, align: 32, offset: 864)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1112, file: !744, line: 334, baseType: !954, size: 32, align: 32, offset: 896)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1112, file: !744, line: 341, baseType: !954, size: 32, align: 32, offset: 928)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1112, file: !744, line: 346, baseType: !954, size: 32, align: 32, offset: 960)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1112, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1112, file: !744, line: 356, baseType: !978, size: 64, align: 32, offset: 1024)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1112, file: !744, line: 361, baseType: !960, size: 64, align: 64, offset: 1088)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1112, file: !744, line: 369, baseType: !960, size: 64, align: 64, offset: 1152)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1112, file: !744, line: 377, baseType: !960, size: 64, align: 64, offset: 1216)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1112, file: !744, line: 382, baseType: !954, size: 32, align: 32, offset: 1280)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1112, file: !744, line: 386, baseType: !954, size: 32, align: 32, offset: 1312)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1112, file: !744, line: 391, baseType: !954, size: 32, align: 32, offset: 1344)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1112, file: !744, line: 396, baseType: !943, size: 64, align: 64, offset: 1408)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1112, file: !744, line: 403, baseType: !1137, size: 512, align: 64, offset: 1472)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 512, align: 64, elements: !1116)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1112, file: !744, line: 410, baseType: !954, size: 32, align: 32, offset: 1984)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1112, file: !744, line: 415, baseType: !954, size: 32, align: 32, offset: 2016)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1112, file: !744, line: 420, baseType: !954, size: 32, align: 32, offset: 2048)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1112, file: !744, line: 425, baseType: !954, size: 32, align: 32, offset: 2080)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1112, file: !744, line: 435, baseType: !960, size: 64, align: 64, offset: 2112)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1112, file: !744, line: 440, baseType: !954, size: 32, align: 32, offset: 2176)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1112, file: !744, line: 445, baseType: !996, size: 64, align: 64, offset: 2240)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1112, file: !744, line: 459, baseType: !1146, size: 512, align: 64, offset: 2304)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 512, align: 64, elements: !1116)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1149, line: 94, baseType: !1150)
!1149 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1149, line: 81, size: 192, align: 64, elements: !1151)
!1151 = !{!1152, !1156, !1157}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1150, file: !1149, line: 82, baseType: !1153, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1149, line: 73, baseType: !1155)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1149, line: 73, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1150, file: !1149, line: 89, baseType: !959, size: 64, align: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1150, file: !1149, line: 93, baseType: !954, size: 32, align: 32, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1112, file: !744, line: 473, baseType: !1159, size: 64, align: 64, offset: 2816)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1112, file: !744, line: 477, baseType: !954, size: 32, align: 32, offset: 2880)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1112, file: !744, line: 479, baseType: !1162, size: 64, align: 64, offset: 2944)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1175}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1165, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1165, file: !744, line: 203, baseType: !959, size: 64, align: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1165, file: !744, line: 204, baseType: !954, size: 32, align: 32, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1165, file: !744, line: 205, baseType: !1171, size: 64, align: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1173, line: 86, baseType: !1174)
!1173 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1173, line: 86, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1165, file: !744, line: 206, baseType: !1147, size: 64, align: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1112, file: !744, line: 480, baseType: !954, size: 32, align: 32, offset: 3008)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1112, file: !744, line: 505, baseType: !954, size: 32, align: 32, offset: 3040)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1112, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1112, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1112, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1112, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1112, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1112, file: !744, line: 532, baseType: !960, size: 64, align: 64, offset: 3264)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1112, file: !744, line: 539, baseType: !960, size: 64, align: 64, offset: 3328)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1112, file: !744, line: 547, baseType: !960, size: 64, align: 64, offset: 3392)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1112, file: !744, line: 554, baseType: !1171, size: 64, align: 64, offset: 3456)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1112, file: !744, line: 563, baseType: !954, size: 32, align: 32, offset: 3520)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1112, file: !744, line: 572, baseType: !954, size: 32, align: 32, offset: 3552)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1112, file: !744, line: 581, baseType: !954, size: 32, align: 32, offset: 3584)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1112, file: !744, line: 588, baseType: !1191, size: 64, align: 64, offset: 3648)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !953, line: 194, baseType: !1193)
!1193 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1112, file: !744, line: 593, baseType: !954, size: 32, align: 32, offset: 3712)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1112, file: !744, line: 596, baseType: !954, size: 32, align: 32, offset: 3744)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1112, file: !744, line: 599, baseType: !1147, size: 64, align: 64, offset: 3776)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1112, file: !744, line: 605, baseType: !1147, size: 64, align: 64, offset: 3840)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1112, file: !744, line: 616, baseType: !1147, size: 64, align: 64, offset: 3904)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1112, file: !744, line: 626, baseType: !1200, size: 64, align: 64, offset: 3968)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1201, line: 216, baseType: !997)
!1201 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1112, file: !744, line: 627, baseType: !1200, size: 64, align: 64, offset: 4032)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1112, file: !744, line: 628, baseType: !1200, size: 64, align: 64, offset: 4096)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1112, file: !744, line: 629, baseType: !1200, size: 64, align: 64, offset: 4160)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1112, file: !744, line: 645, baseType: !1147, size: 64, align: 64, offset: 4224)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1103, file: !1104, line: 161, baseType: !1207, size: 64, align: 64, offset: 192)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1104, line: 117, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1104, line: 100, size: 832, align: 64, elements: !1210)
!1210 = !{!1211, !1218, !1219, !1220, !1221, !1222, !1224, !1225, !1226}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1209, file: !1104, line: 105, baseType: !1212, size: 256, align: 64)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1213, size: 256, align: 64, elements: !1216)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64, align: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1149, line: 238, baseType: !1215)
!1215 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1149, line: 238, flags: DIFlagFwdDecl)
!1216 = !{!1217}
!1217 = !DISubrange(count: 4)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1209, file: !1104, line: 110, baseType: !954, size: 32, align: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1209, file: !1104, line: 111, baseType: !954, size: 32, align: 32, offset: 288)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1209, file: !1104, line: 111, baseType: !954, size: 32, align: 32, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1209, file: !1104, line: 112, baseType: !1119, size: 256, align: 32, offset: 352)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1209, file: !1104, line: 113, baseType: !1223, size: 128, align: 32, offset: 608)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 128, align: 32, elements: !1216)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1209, file: !1104, line: 114, baseType: !954, size: 32, align: 32, offset: 736)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1209, file: !1104, line: 115, baseType: !954, size: 32, align: 32, offset: 768)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1209, file: !1104, line: 116, baseType: !954, size: 32, align: 32, offset: 800)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1103, file: !1104, line: 163, baseType: !943, size: 64, align: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1103, file: !1104, line: 165, baseType: !1229, size: 128, align: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1104, line: 122, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1104, line: 119, size: 128, align: 64, elements: !1231)
!1231 = !{!1232, !1256}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1230, file: !1104, line: 120, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1252, !1253, !1254, !1255}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1235, file: !14, line: 1451, baseType: !1147, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1235, file: !14, line: 1461, baseType: !960, size: 64, align: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1235, file: !14, line: 1467, baseType: !960, size: 64, align: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1235, file: !14, line: 1468, baseType: !959, size: 64, align: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !14, line: 1469, baseType: !954, size: 32, align: 32, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1235, file: !14, line: 1470, baseType: !954, size: 32, align: 32, offset: 288)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !14, line: 1474, baseType: !954, size: 32, align: 32, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1235, file: !14, line: 1479, baseType: !1245, size: 64, align: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1248)
!1248 = !{!1249, !1250, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1247, file: !14, line: 1412, baseType: !959, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1247, file: !14, line: 1413, baseType: !954, size: 32, align: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1247, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1235, file: !14, line: 1480, baseType: !954, size: 32, align: 32, offset: 448)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1235, file: !14, line: 1486, baseType: !960, size: 64, align: 64, offset: 512)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1235, file: !14, line: 1488, baseType: !960, size: 64, align: 64, offset: 576)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1235, file: !14, line: 1497, baseType: !960, size: 64, align: 64, offset: 640)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1230, file: !1104, line: 121, baseType: !1110, size: 64, align: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1103, file: !1104, line: 166, baseType: !1258, size: 128, align: 64, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1104, line: 127, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1104, line: 124, size: 128, align: 64, elements: !1260)
!1260 = !{!1261, !1334}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1259, file: !1104, line: 125, baseType: !1262, size: 64, align: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1266)
!1266 = !{!1267, !1268, !1292, !1296, !1297, !1331, !1332, !1333}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1265, file: !14, line: 5751, baseType: !1000, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1265, file: !14, line: 5756, baseType: !1269, size: 64, align: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1272)
!1272 = !{!1273, !1274, !1277, !1278, !1279, !1283, !1287, !1291}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1271, file: !14, line: 5797, baseType: !968, size: 64, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1271, file: !14, line: 5804, baseType: !1275, size: 64, align: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1271, file: !14, line: 5815, baseType: !1000, size: 64, align: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1271, file: !14, line: 5825, baseType: !954, size: 32, align: 32, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1271, file: !14, line: 5826, baseType: !1280, size: 64, align: 64, offset: 256)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64, align: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!954, !1263}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1271, file: !14, line: 5827, baseType: !1284, size: 64, align: 64, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!954, !1263, !1233}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1271, file: !14, line: 5828, baseType: !1288, size: 64, align: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !1263}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1271, file: !14, line: 5829, baseType: !1288, size: 64, align: 64, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1265, file: !14, line: 5762, baseType: !1293, size: 64, align: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1295)
!1295 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1265, file: !14, line: 5768, baseType: !943, size: 64, align: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1265, file: !14, line: 5775, baseType: !1298, size: 64, align: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1300, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1300, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1300, file: !14, line: 3948, baseType: !949, size: 32, align: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1300, file: !14, line: 3958, baseType: !959, size: 64, align: 64, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1300, file: !14, line: 3962, baseType: !954, size: 32, align: 32, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1300, file: !14, line: 3968, baseType: !954, size: 32, align: 32, offset: 224)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1300, file: !14, line: 3973, baseType: !960, size: 64, align: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1300, file: !14, line: 3986, baseType: !954, size: 32, align: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1300, file: !14, line: 3999, baseType: !954, size: 32, align: 32, offset: 352)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1300, file: !14, line: 4004, baseType: !954, size: 32, align: 32, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1300, file: !14, line: 4005, baseType: !954, size: 32, align: 32, offset: 416)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1300, file: !14, line: 4010, baseType: !954, size: 32, align: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1300, file: !14, line: 4011, baseType: !954, size: 32, align: 32, offset: 480)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1300, file: !14, line: 4020, baseType: !978, size: 64, align: 32, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1300, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1300, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1300, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1300, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1300, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1300, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1300, file: !14, line: 4039, baseType: !954, size: 32, align: 32, offset: 768)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1300, file: !14, line: 4046, baseType: !996, size: 64, align: 64, offset: 832)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1300, file: !14, line: 4050, baseType: !954, size: 32, align: 32, offset: 896)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1300, file: !14, line: 4054, baseType: !954, size: 32, align: 32, offset: 928)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1300, file: !14, line: 4061, baseType: !954, size: 32, align: 32, offset: 960)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1300, file: !14, line: 4065, baseType: !954, size: 32, align: 32, offset: 992)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1300, file: !14, line: 4073, baseType: !954, size: 32, align: 32, offset: 1024)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1300, file: !14, line: 4080, baseType: !954, size: 32, align: 32, offset: 1056)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1300, file: !14, line: 4084, baseType: !954, size: 32, align: 32, offset: 1088)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1265, file: !14, line: 5781, baseType: !1298, size: 64, align: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1265, file: !14, line: 5787, baseType: !978, size: 64, align: 32, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1265, file: !14, line: 5793, baseType: !978, size: 64, align: 32, offset: 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1259, file: !1104, line: 126, baseType: !954, size: 32, align: 32, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1103, file: !1104, line: 172, baseType: !1233, size: 64, align: 64, offset: 576)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1103, file: !1104, line: 177, baseType: !959, size: 64, align: 64, offset: 640)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1103, file: !1104, line: 178, baseType: !951, size: 32, align: 32, offset: 704)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1103, file: !1104, line: 180, baseType: !943, size: 64, align: 64, offset: 768)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1103, file: !1104, line: 185, baseType: !954, size: 32, align: 32, offset: 832)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1103, file: !1104, line: 190, baseType: !943, size: 64, align: 64, offset: 896)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1103, file: !1104, line: 195, baseType: !954, size: 32, align: 32, offset: 960)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1103, file: !1104, line: 200, baseType: !1233, size: 64, align: 64, offset: 1024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1103, file: !1104, line: 201, baseType: !954, size: 32, align: 32, offset: 1088)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1103, file: !1104, line: 202, baseType: !1110, size: 64, align: 64, offset: 1152)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1103, file: !1104, line: 203, baseType: !954, size: 32, align: 32, offset: 1216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1103, file: !1104, line: 205, baseType: !954, size: 32, align: 32, offset: 1248)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1103, file: !1104, line: 206, baseType: !954, size: 32, align: 32, offset: 1280)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1103, file: !1104, line: 209, baseType: !1200, size: 64, align: 64, offset: 1344)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1103, file: !1104, line: 212, baseType: !1200, size: 64, align: 64, offset: 1408)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1103, file: !1104, line: 213, baseType: !1110, size: 64, align: 64, offset: 1472)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1103, file: !1104, line: 215, baseType: !954, size: 32, align: 32, offset: 1536)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1103, file: !1104, line: 217, baseType: !954, size: 32, align: 32, offset: 1568)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1103, file: !1104, line: 220, baseType: !954, size: 32, align: 32, offset: 1600)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1090, file: !14, line: 1598, baseType: !943, size: 64, align: 64, offset: 384)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1090, file: !14, line: 1606, baseType: !960, size: 64, align: 64, offset: 448)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1090, file: !14, line: 1614, baseType: !954, size: 32, align: 32, offset: 512)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1090, file: !14, line: 1622, baseType: !954, size: 32, align: 32, offset: 544)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1090, file: !14, line: 1628, baseType: !954, size: 32, align: 32, offset: 576)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1090, file: !14, line: 1636, baseType: !954, size: 32, align: 32, offset: 608)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1090, file: !14, line: 1643, baseType: !954, size: 32, align: 32, offset: 640)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1090, file: !14, line: 1657, baseType: !959, size: 64, align: 64, offset: 704)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1090, file: !14, line: 1658, baseType: !954, size: 32, align: 32, offset: 768)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1090, file: !14, line: 1679, baseType: !978, size: 64, align: 32, offset: 800)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1090, file: !14, line: 1688, baseType: !954, size: 32, align: 32, offset: 864)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1090, file: !14, line: 1712, baseType: !954, size: 32, align: 32, offset: 896)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1090, file: !14, line: 1729, baseType: !954, size: 32, align: 32, offset: 928)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1090, file: !14, line: 1729, baseType: !954, size: 32, align: 32, offset: 960)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1090, file: !14, line: 1744, baseType: !954, size: 32, align: 32, offset: 992)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1090, file: !14, line: 1744, baseType: !954, size: 32, align: 32, offset: 1024)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1090, file: !14, line: 1751, baseType: !954, size: 32, align: 32, offset: 1056)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1090, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1090, file: !14, line: 1791, baseType: !1373, size: 64, align: 64, offset: 1152)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{null, !1376, !1377, !1379, !954, !954, !954}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1090, file: !14, line: 1808, baseType: !1381, size: 64, align: 64, offset: 1216)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!473, !1376, !985}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1090, file: !14, line: 1816, baseType: !954, size: 32, align: 32, offset: 1280)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1090, file: !14, line: 1825, baseType: !1386, size: 32, align: 32, offset: 1312)
!1386 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1090, file: !14, line: 1830, baseType: !954, size: 32, align: 32, offset: 1344)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1090, file: !14, line: 1838, baseType: !1386, size: 32, align: 32, offset: 1376)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1090, file: !14, line: 1846, baseType: !954, size: 32, align: 32, offset: 1408)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1090, file: !14, line: 1851, baseType: !954, size: 32, align: 32, offset: 1440)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1090, file: !14, line: 1861, baseType: !1386, size: 32, align: 32, offset: 1472)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1090, file: !14, line: 1868, baseType: !1386, size: 32, align: 32, offset: 1504)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1090, file: !14, line: 1875, baseType: !1386, size: 32, align: 32, offset: 1536)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1090, file: !14, line: 1882, baseType: !1386, size: 32, align: 32, offset: 1568)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1090, file: !14, line: 1889, baseType: !1386, size: 32, align: 32, offset: 1600)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1090, file: !14, line: 1896, baseType: !1386, size: 32, align: 32, offset: 1632)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1090, file: !14, line: 1903, baseType: !1386, size: 32, align: 32, offset: 1664)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1090, file: !14, line: 1910, baseType: !954, size: 32, align: 32, offset: 1696)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1090, file: !14, line: 1915, baseType: !954, size: 32, align: 32, offset: 1728)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1090, file: !14, line: 1926, baseType: !1379, size: 64, align: 64, offset: 1792)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1090, file: !14, line: 1935, baseType: !978, size: 64, align: 32, offset: 1856)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1090, file: !14, line: 1942, baseType: !954, size: 32, align: 32, offset: 1920)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1090, file: !14, line: 1948, baseType: !954, size: 32, align: 32, offset: 1952)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1090, file: !14, line: 1954, baseType: !954, size: 32, align: 32, offset: 1984)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1090, file: !14, line: 1960, baseType: !954, size: 32, align: 32, offset: 2016)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1090, file: !14, line: 1984, baseType: !954, size: 32, align: 32, offset: 2048)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1090, file: !14, line: 1991, baseType: !954, size: 32, align: 32, offset: 2080)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1090, file: !14, line: 1996, baseType: !954, size: 32, align: 32, offset: 2112)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1090, file: !14, line: 2004, baseType: !954, size: 32, align: 32, offset: 2144)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1090, file: !14, line: 2011, baseType: !954, size: 32, align: 32, offset: 2176)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1090, file: !14, line: 2018, baseType: !954, size: 32, align: 32, offset: 2208)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1090, file: !14, line: 2027, baseType: !954, size: 32, align: 32, offset: 2240)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1090, file: !14, line: 2034, baseType: !954, size: 32, align: 32, offset: 2272)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1090, file: !14, line: 2044, baseType: !954, size: 32, align: 32, offset: 2304)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1090, file: !14, line: 2054, baseType: !1416, size: 64, align: 64, offset: 2368)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !950, line: 49, baseType: !1418)
!1418 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1090, file: !14, line: 2061, baseType: !1416, size: 64, align: 64, offset: 2432)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1090, file: !14, line: 2066, baseType: !954, size: 32, align: 32, offset: 2496)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1090, file: !14, line: 2070, baseType: !954, size: 32, align: 32, offset: 2528)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1090, file: !14, line: 2078, baseType: !954, size: 32, align: 32, offset: 2560)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1090, file: !14, line: 2085, baseType: !954, size: 32, align: 32, offset: 2592)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1090, file: !14, line: 2092, baseType: !954, size: 32, align: 32, offset: 2624)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1090, file: !14, line: 2099, baseType: !954, size: 32, align: 32, offset: 2656)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1090, file: !14, line: 2106, baseType: !954, size: 32, align: 32, offset: 2688)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1090, file: !14, line: 2113, baseType: !954, size: 32, align: 32, offset: 2720)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1090, file: !14, line: 2120, baseType: !954, size: 32, align: 32, offset: 2752)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1090, file: !14, line: 2125, baseType: !954, size: 32, align: 32, offset: 2784)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1090, file: !14, line: 2133, baseType: !954, size: 32, align: 32, offset: 2816)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1090, file: !14, line: 2140, baseType: !954, size: 32, align: 32, offset: 2848)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1090, file: !14, line: 2145, baseType: !954, size: 32, align: 32, offset: 2880)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1090, file: !14, line: 2153, baseType: !954, size: 32, align: 32, offset: 2912)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1090, file: !14, line: 2158, baseType: !954, size: 32, align: 32, offset: 2944)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1090, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1090, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1090, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1090, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1090, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1090, file: !14, line: 2203, baseType: !954, size: 32, align: 32, offset: 3136)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1090, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1090, file: !14, line: 2212, baseType: !954, size: 32, align: 32, offset: 3200)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1090, file: !14, line: 2213, baseType: !954, size: 32, align: 32, offset: 3232)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1090, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1090, file: !14, line: 2232, baseType: !954, size: 32, align: 32, offset: 3296)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1090, file: !14, line: 2243, baseType: !954, size: 32, align: 32, offset: 3328)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1090, file: !14, line: 2249, baseType: !954, size: 32, align: 32, offset: 3360)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1090, file: !14, line: 2256, baseType: !954, size: 32, align: 32, offset: 3392)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1090, file: !14, line: 2263, baseType: !996, size: 64, align: 64, offset: 3456)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1090, file: !14, line: 2270, baseType: !996, size: 64, align: 64, offset: 3520)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1090, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1090, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1090, file: !14, line: 2367, baseType: !1454, size: 64, align: 64, offset: 3648)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!954, !1376, !1110, !954}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1090, file: !14, line: 2383, baseType: !954, size: 32, align: 32, offset: 3712)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1090, file: !14, line: 2386, baseType: !1386, size: 32, align: 32, offset: 3744)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1090, file: !14, line: 2387, baseType: !1386, size: 32, align: 32, offset: 3776)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1090, file: !14, line: 2394, baseType: !954, size: 32, align: 32, offset: 3808)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1090, file: !14, line: 2401, baseType: !954, size: 32, align: 32, offset: 3840)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1090, file: !14, line: 2408, baseType: !954, size: 32, align: 32, offset: 3872)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1090, file: !14, line: 2415, baseType: !954, size: 32, align: 32, offset: 3904)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1090, file: !14, line: 2422, baseType: !954, size: 32, align: 32, offset: 3936)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1090, file: !14, line: 2423, baseType: !1466, size: 64, align: 64, offset: 3968)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1468, file: !14, line: 827, baseType: !954, size: 32, align: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1468, file: !14, line: 828, baseType: !954, size: 32, align: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1468, file: !14, line: 829, baseType: !954, size: 32, align: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1468, file: !14, line: 830, baseType: !1386, size: 32, align: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1090, file: !14, line: 2430, baseType: !960, size: 64, align: 64, offset: 4032)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1090, file: !14, line: 2437, baseType: !960, size: 64, align: 64, offset: 4096)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1090, file: !14, line: 2444, baseType: !1386, size: 32, align: 32, offset: 4160)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1090, file: !14, line: 2451, baseType: !1386, size: 32, align: 32, offset: 4192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1090, file: !14, line: 2458, baseType: !954, size: 32, align: 32, offset: 4224)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1090, file: !14, line: 2469, baseType: !954, size: 32, align: 32, offset: 4256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1090, file: !14, line: 2475, baseType: !954, size: 32, align: 32, offset: 4288)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1090, file: !14, line: 2481, baseType: !954, size: 32, align: 32, offset: 4320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1090, file: !14, line: 2485, baseType: !954, size: 32, align: 32, offset: 4352)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1090, file: !14, line: 2489, baseType: !954, size: 32, align: 32, offset: 4384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1090, file: !14, line: 2493, baseType: !954, size: 32, align: 32, offset: 4416)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1090, file: !14, line: 2501, baseType: !954, size: 32, align: 32, offset: 4448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1090, file: !14, line: 2506, baseType: !954, size: 32, align: 32, offset: 4480)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1090, file: !14, line: 2510, baseType: !954, size: 32, align: 32, offset: 4512)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1090, file: !14, line: 2514, baseType: !960, size: 64, align: 64, offset: 4544)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1090, file: !14, line: 2528, baseType: !1490, size: 64, align: 64, offset: 4608)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !1376, !943, !954, !954}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1090, file: !14, line: 2534, baseType: !954, size: 32, align: 32, offset: 4672)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1090, file: !14, line: 2545, baseType: !954, size: 32, align: 32, offset: 4704)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1090, file: !14, line: 2547, baseType: !954, size: 32, align: 32, offset: 4736)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1090, file: !14, line: 2549, baseType: !954, size: 32, align: 32, offset: 4768)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1090, file: !14, line: 2551, baseType: !954, size: 32, align: 32, offset: 4800)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1090, file: !14, line: 2553, baseType: !954, size: 32, align: 32, offset: 4832)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1090, file: !14, line: 2555, baseType: !954, size: 32, align: 32, offset: 4864)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1090, file: !14, line: 2557, baseType: !954, size: 32, align: 32, offset: 4896)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1090, file: !14, line: 2559, baseType: !954, size: 32, align: 32, offset: 4928)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1090, file: !14, line: 2563, baseType: !954, size: 32, align: 32, offset: 4960)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1090, file: !14, line: 2571, baseType: !1504, size: 64, align: 64, offset: 4992)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1090, file: !14, line: 2579, baseType: !1504, size: 64, align: 64, offset: 5056)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1090, file: !14, line: 2586, baseType: !954, size: 32, align: 32, offset: 5120)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1090, file: !14, line: 2615, baseType: !954, size: 32, align: 32, offset: 5152)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1090, file: !14, line: 2627, baseType: !954, size: 32, align: 32, offset: 5184)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1090, file: !14, line: 2637, baseType: !954, size: 32, align: 32, offset: 5216)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1090, file: !14, line: 2681, baseType: !954, size: 32, align: 32, offset: 5248)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1090, file: !14, line: 2709, baseType: !960, size: 64, align: 64, offset: 5312)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1090, file: !14, line: 2716, baseType: !1513, size: 64, align: 64, offset: 5376)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1526, !1530, !1534, !1535, !1536, !1537, !1543, !1544, !1545, !1546, !1547}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !14, line: 3642, baseType: !968, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1515, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1515, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1515, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1515, file: !14, line: 3669, baseType: !954, size: 32, align: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1515, file: !14, line: 3682, baseType: !1523, size: 64, align: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!954, !1088, !1110}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1515, file: !14, line: 3698, baseType: !1527, size: 64, align: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!954, !1088, !955, !949}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1515, file: !14, line: 3712, baseType: !1531, size: 64, align: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!954, !1088, !954, !955, !949}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1515, file: !14, line: 3726, baseType: !1527, size: 64, align: 64, offset: 384)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1515, file: !14, line: 3737, baseType: !1085, size: 64, align: 64, offset: 448)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1515, file: !14, line: 3746, baseType: !954, size: 32, align: 32, offset: 512)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1515, file: !14, line: 3757, baseType: !1538, size: 64, align: 64, offset: 576)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1541}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1515, file: !14, line: 3766, baseType: !1085, size: 64, align: 64, offset: 640)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1515, file: !14, line: 3774, baseType: !1085, size: 64, align: 64, offset: 704)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1515, file: !14, line: 3780, baseType: !954, size: 32, align: 32, offset: 768)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1515, file: !14, line: 3785, baseType: !954, size: 32, align: 32, offset: 800)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1515, file: !14, line: 3795, baseType: !1548, size: 64, align: 64, offset: 832)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!954, !1088, !1147}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1090, file: !14, line: 2728, baseType: !943, size: 64, align: 64, offset: 5440)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1090, file: !14, line: 2735, baseType: !1137, size: 512, align: 64, offset: 5504)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1090, file: !14, line: 2742, baseType: !954, size: 32, align: 32, offset: 6016)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1090, file: !14, line: 2755, baseType: !954, size: 32, align: 32, offset: 6048)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1090, file: !14, line: 2776, baseType: !954, size: 32, align: 32, offset: 6080)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1090, file: !14, line: 2783, baseType: !954, size: 32, align: 32, offset: 6112)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1090, file: !14, line: 2791, baseType: !954, size: 32, align: 32, offset: 6144)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1090, file: !14, line: 2802, baseType: !1110, size: 64, align: 64, offset: 6208)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1090, file: !14, line: 2811, baseType: !954, size: 32, align: 32, offset: 6272)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1090, file: !14, line: 2821, baseType: !954, size: 32, align: 32, offset: 6304)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1090, file: !14, line: 2830, baseType: !954, size: 32, align: 32, offset: 6336)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1090, file: !14, line: 2840, baseType: !954, size: 32, align: 32, offset: 6368)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1090, file: !14, line: 2851, baseType: !1564, size: 64, align: 64, offset: 6400)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64, align: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!954, !1376, !1567, !943, !1379, !954, !954}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!954, !1376, !943}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1090, file: !14, line: 2871, baseType: !1571, size: 64, align: 64, offset: 6464)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64, align: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!954, !1376, !1574, !943, !1379, !954}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64, align: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!954, !1376, !943, !954, !954}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1090, file: !14, line: 2878, baseType: !954, size: 32, align: 32, offset: 6528)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1090, file: !14, line: 2885, baseType: !954, size: 32, align: 32, offset: 6560)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1090, file: !14, line: 3005, baseType: !954, size: 32, align: 32, offset: 6592)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1090, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1090, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1090, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1090, file: !14, line: 3037, baseType: !959, size: 64, align: 64, offset: 6720)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1090, file: !14, line: 3038, baseType: !954, size: 32, align: 32, offset: 6784)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1090, file: !14, line: 3050, baseType: !996, size: 64, align: 64, offset: 6848)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1090, file: !14, line: 3065, baseType: !954, size: 32, align: 32, offset: 6912)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1090, file: !14, line: 3083, baseType: !954, size: 32, align: 32, offset: 6944)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1090, file: !14, line: 3092, baseType: !978, size: 64, align: 32, offset: 6976)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1090, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1090, file: !14, line: 3106, baseType: !978, size: 64, align: 32, offset: 7072)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1090, file: !14, line: 3113, baseType: !1592, size: 64, align: 64, offset: 7168)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1605}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1595, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1595, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1595, file: !14, line: 720, baseType: !968, size: 64, align: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1595, file: !14, line: 724, baseType: !968, size: 64, align: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1595, file: !14, line: 728, baseType: !954, size: 32, align: 32, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1595, file: !14, line: 734, baseType: !1603, size: 64, align: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1595, file: !14, line: 739, baseType: !1606, size: 64, align: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1090, file: !14, line: 3129, baseType: !960, size: 64, align: 64, offset: 7232)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1090, file: !14, line: 3130, baseType: !960, size: 64, align: 64, offset: 7296)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1090, file: !14, line: 3131, baseType: !960, size: 64, align: 64, offset: 7360)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1090, file: !14, line: 3132, baseType: !960, size: 64, align: 64, offset: 7424)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1090, file: !14, line: 3139, baseType: !1504, size: 64, align: 64, offset: 7488)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1090, file: !14, line: 3147, baseType: !954, size: 32, align: 32, offset: 7552)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1090, file: !14, line: 3165, baseType: !954, size: 32, align: 32, offset: 7584)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1090, file: !14, line: 3172, baseType: !954, size: 32, align: 32, offset: 7616)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1090, file: !14, line: 3180, baseType: !954, size: 32, align: 32, offset: 7648)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1090, file: !14, line: 3191, baseType: !1416, size: 64, align: 64, offset: 7680)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1090, file: !14, line: 3199, baseType: !959, size: 64, align: 64, offset: 7744)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1090, file: !14, line: 3207, baseType: !1504, size: 64, align: 64, offset: 7808)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1090, file: !14, line: 3214, baseType: !951, size: 32, align: 32, offset: 7872)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1090, file: !14, line: 3224, baseType: !1245, size: 64, align: 64, offset: 7936)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1090, file: !14, line: 3225, baseType: !954, size: 32, align: 32, offset: 8000)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1090, file: !14, line: 3249, baseType: !1147, size: 64, align: 64, offset: 8064)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1090, file: !14, line: 3256, baseType: !954, size: 32, align: 32, offset: 8128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1090, file: !14, line: 3271, baseType: !954, size: 32, align: 32, offset: 8160)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1090, file: !14, line: 3279, baseType: !960, size: 64, align: 64, offset: 8192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1090, file: !14, line: 3301, baseType: !1147, size: 64, align: 64, offset: 8256)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1090, file: !14, line: 3310, baseType: !954, size: 32, align: 32, offset: 8320)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1090, file: !14, line: 3337, baseType: !954, size: 32, align: 32, offset: 8352)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1090, file: !14, line: 3351, baseType: !954, size: 32, align: 32, offset: 8384)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1090, file: !14, line: 3359, baseType: !954, size: 32, align: 32, offset: 8416)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !965, file: !14, line: 3535, baseType: !1633, size: 64, align: 64, offset: 1024)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64, align: 64)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!954, !1088, !1636}
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !965, file: !14, line: 3541, baseType: !1639, size: 64, align: 64, offset: 1088)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1104, line: 223, size: 128, align: 64, elements: !1643)
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1642, file: !1104, line: 224, baseType: !955, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1642, file: !1104, line: 225, baseType: !955, size: 64, align: 64, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !965, file: !14, line: 3549, baseType: !1647, size: 64, align: 64, offset: 1152)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{null, !1083}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !965, file: !14, line: 3551, baseType: !1085, size: 64, align: 64, offset: 1216)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !965, file: !14, line: 3552, baseType: !1652, size: 64, align: 64, offset: 1280)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!954, !1088, !959, !954, !1655}
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1687}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1657, file: !14, line: 3921, baseType: !1417, size: 16, align: 16)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1657, file: !14, line: 3922, baseType: !949, size: 32, align: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1657, file: !14, line: 3923, baseType: !949, size: 32, align: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1657, file: !14, line: 3924, baseType: !951, size: 32, align: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1657, file: !14, line: 3925, baseType: !1664, size: 64, align: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64, align: 64)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673, !1674, !1680, !1682, !1683, !1684, !1685, !1686}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1667, file: !14, line: 3886, baseType: !954, size: 32, align: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1667, file: !14, line: 3887, baseType: !954, size: 32, align: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1667, file: !14, line: 3888, baseType: !954, size: 32, align: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1667, file: !14, line: 3889, baseType: !954, size: 32, align: 32, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1667, file: !14, line: 3890, baseType: !954, size: 32, align: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1667, file: !14, line: 3897, baseType: !1675, size: 768, align: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1676, file: !14, line: 3855, baseType: !1115, size: 512, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1676, file: !14, line: 3857, baseType: !1119, size: 256, align: 32, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1667, file: !14, line: 3903, baseType: !1681, size: 256, align: 64, offset: 960)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 256, align: 64, elements: !1216)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1667, file: !14, line: 3904, baseType: !1223, size: 128, align: 32, offset: 1216)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1667, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1667, file: !14, line: 3908, baseType: !1504, size: 64, align: 64, offset: 1408)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1667, file: !14, line: 3915, baseType: !1504, size: 64, align: 64, offset: 1472)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1667, file: !14, line: 3917, baseType: !954, size: 32, align: 32, offset: 1536)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1657, file: !14, line: 3926, baseType: !960, size: 64, align: 64, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !965, file: !14, line: 3564, baseType: !1689, size: 64, align: 64, offset: 1344)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64, align: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!954, !1088, !1233, !1377, !1379}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !965, file: !14, line: 3566, baseType: !1693, size: 64, align: 64, offset: 1408)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!954, !1088, !943, !1379, !1233}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !965, file: !14, line: 3567, baseType: !1085, size: 64, align: 64, offset: 1472)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !965, file: !14, line: 3576, baseType: !1698, size: 64, align: 64, offset: 1536)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64, align: 64)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!954, !1088, !1377}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !965, file: !14, line: 3577, baseType: !1702, size: 64, align: 64, offset: 1600)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!954, !1088, !1233}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !965, file: !14, line: 3584, baseType: !1523, size: 64, align: 64, offset: 1664)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !965, file: !14, line: 3589, baseType: !1707, size: 64, align: 64, offset: 1728)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !1088}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !965, file: !14, line: 3594, baseType: !954, size: 32, align: 32, offset: 1792)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !965, file: !14, line: 3600, baseType: !968, size: 64, align: 64, offset: 1856)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !965, file: !14, line: 3609, baseType: !1713, size: 64, align: 64, offset: 1920)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1717 = distinct !DIGlobalVariable(name: "flac_encoder_class", scope: !0, file: !910, line: 1495, type: !1001, isLocal: true, isDefinition: true, variable: %struct.AVClass* @flac_encoder_class)
!1718 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !910, line: 1464, type: !1719, isLocal: true, isDefinition: true, variable: [27 x %struct.AVOption]* @options)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1720, size: 13824, align: 64, elements: !1722)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1013)
!1722 = !{!1723}
!1723 = !DISubrange(count: 27)
!1724 = !{i32 2, !"Dwarf Version", i32 4}
!1725 = !{i32 2, !"Debug Info Version", i32 3}
!1726 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1727 = distinct !DISubprogram(name: "flac_encode_init", scope: !910, file: !910, line: 239, type: !1086, isLocal: true, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!1728 = !{}
!1729 = !DILocalVariable(name: "avctx", arg: 1, scope: !1727, file: !910, line: 239, type: !1088)
!1730 = !DIExpression()
!1731 = !DILocation(line: 239, column: 67, scope: !1727)
!1732 = !DILocalVariable(name: "freq", scope: !1727, file: !910, line: 241, type: !954)
!1733 = !DILocation(line: 241, column: 9, scope: !1727)
!1734 = !DILocation(line: 241, column: 16, scope: !1727)
!1735 = !DILocation(line: 241, column: 23, scope: !1727)
!1736 = !DILocalVariable(name: "channels", scope: !1727, file: !910, line: 242, type: !954)
!1737 = !DILocation(line: 242, column: 9, scope: !1727)
!1738 = !DILocation(line: 242, column: 20, scope: !1727)
!1739 = !DILocation(line: 242, column: 27, scope: !1727)
!1740 = !DILocalVariable(name: "s", scope: !1727, file: !910, line: 243, type: !1741)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64, align: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlacEncodeContext", file: !910, line: 129, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlacEncodeContext", file: !910, line: 103, size: 54909184, align: 256, elements: !1744)
!1744 = !{!1745, !1747, !1758, !1759, !1760, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1775, !1822, !1839, !1840, !1887, !1891, !1892, !1893, !1911, !1933, !1934}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1743, file: !910, line: 104, baseType: !1746, size: 64, align: 64)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1743, file: !910, line: 105, baseType: !1748, size: 320, align: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1749, line: 40, baseType: !1750)
!1749 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1749, line: 35, size: 320, align: 64, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1750, file: !1749, line: 36, baseType: !949, size: 32, align: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1750, file: !1749, line: 37, baseType: !954, size: 32, align: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1750, file: !1749, line: 38, baseType: !959, size: 64, align: 64, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1750, file: !1749, line: 38, baseType: !959, size: 64, align: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1750, file: !1749, line: 38, baseType: !959, size: 64, align: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1750, file: !1749, line: 39, baseType: !954, size: 32, align: 32, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1743, file: !910, line: 106, baseType: !954, size: 32, align: 32, offset: 384)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate", scope: !1743, file: !910, line: 107, baseType: !954, size: 32, align: 32, offset: 416)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !1743, file: !910, line: 108, baseType: !1761, size: 64, align: 32, offset: 448)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 64, align: 32, elements: !1762)
!1762 = !{!1763}
!1763 = !DISubrange(count: 2)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "bps_code", scope: !1743, file: !910, line: 109, baseType: !954, size: 32, align: 32, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "max_blocksize", scope: !1743, file: !910, line: 110, baseType: !954, size: 32, align: 32, offset: 544)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "min_framesize", scope: !1743, file: !910, line: 111, baseType: !954, size: 32, align: 32, offset: 576)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "max_framesize", scope: !1743, file: !910, line: 112, baseType: !954, size: 32, align: 32, offset: 608)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "max_encoded_framesize", scope: !1743, file: !910, line: 113, baseType: !954, size: 32, align: 32, offset: 640)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !1743, file: !910, line: 114, baseType: !949, size: 32, align: 32, offset: 672)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sample_count", scope: !1743, file: !910, line: 115, baseType: !996, size: 64, align: 64, offset: 704)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "md5sum", scope: !1743, file: !910, line: 116, baseType: !1772, size: 128, align: 8, offset: 768)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, size: 128, align: 8, elements: !1773)
!1773 = !{!1774}
!1774 = !DISubrange(count: 16)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1743, file: !910, line: 117, baseType: !1776, size: 54604480, align: 64, offset: 896)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlacFrame", file: !910, line: 101, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlacFrame", file: !910, line: 94, size: 54604480, align: 64, elements: !1778)
!1778 = !{!1779, !1817, !1818, !1819, !1820, !1821}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !1777, file: !910, line: 95, baseType: !1780, size: 54604288, align: 64)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1781, size: 54604288, align: 64, elements: !1116)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlacSubframe", file: !910, line: 92, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlacSubframe", file: !910, line: 77, size: 6825536, align: 64, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1793, !1794, !1804, !1808, !1811, !1813}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1782, file: !910, line: 78, baseType: !954, size: 32, align: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "type_code", scope: !1782, file: !910, line: 79, baseType: !954, size: 32, align: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "obits", scope: !1782, file: !910, line: 80, baseType: !954, size: 32, align: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "wasted", scope: !1782, file: !910, line: 81, baseType: !954, size: 32, align: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1782, file: !910, line: 82, baseType: !954, size: 32, align: 32, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "coefs", scope: !1782, file: !910, line: 83, baseType: !1790, size: 1024, align: 32, offset: 160)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 1024, align: 32, elements: !1791)
!1791 = !{!1792}
!1792 = !DISubrange(count: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1782, file: !910, line: 84, baseType: !954, size: 32, align: 32, offset: 1184)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1782, file: !910, line: 86, baseType: !1795, size: 8256, align: 32, offset: 1216)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "RiceContext", file: !910, line: 75, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RiceContext", file: !910, line: 71, size: 8256, align: 32, elements: !1797)
!1797 = !{!1798, !1799, !1800}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "coding_mode", scope: !1796, file: !910, line: 72, baseType: !909, size: 32, align: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "porder", scope: !1796, file: !910, line: 73, baseType: !954, size: 32, align: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !1796, file: !910, line: 74, baseType: !1801, size: 8192, align: 32, offset: 64)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 8192, align: 32, elements: !1802)
!1802 = !{!1803}
!1803 = !DISubrange(count: 256)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "rc_udata", scope: !1782, file: !910, line: 87, baseType: !1805, size: 2097120, align: 32, offset: 9472)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 2097120, align: 32, elements: !1806)
!1806 = !{!1807}
!1807 = !DISubrange(count: 65535)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "rc_sums", scope: !1782, file: !910, line: 88, baseType: !1809, size: 524288, align: 64, offset: 2106624)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 524288, align: 64, elements: !1810)
!1810 = !{!1792, !1803}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1782, file: !910, line: 90, baseType: !1812, size: 2097120, align: 32, offset: 2630912)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 2097120, align: 32, elements: !1806)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "residual", scope: !1782, file: !910, line: 91, baseType: !1814, size: 2097472, align: 32, offset: 4728032)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 2097472, align: 32, elements: !1815)
!1815 = !{!1816}
!1816 = !DISubrange(count: 65546)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !1777, file: !910, line: 96, baseType: !954, size: 32, align: 32, offset: 54604288)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bs_code", scope: !1777, file: !910, line: 97, baseType: !1761, size: 64, align: 32, offset: 54604320)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "crc8", scope: !1777, file: !910, line: 98, baseType: !957, size: 8, align: 8, offset: 54604384)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mode", scope: !1777, file: !910, line: 99, baseType: !954, size: 32, align: 32, offset: 54604416)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "verbatim_only", scope: !1777, file: !910, line: 100, baseType: !954, size: 32, align: 32, offset: 54604448)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1743, file: !910, line: 118, baseType: !1823, size: 416, align: 32, offset: 54605376)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionOptions", file: !910, line: 69, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CompressionOptions", file: !910, line: 55, size: 416, align: 32, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1824, file: !910, line: 56, baseType: !954, size: 32, align: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "block_time_ms", scope: !1824, file: !910, line: 57, baseType: !954, size: 32, align: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !1824, file: !910, line: 58, baseType: !914, size: 32, align: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_passes", scope: !1824, file: !910, line: 59, baseType: !954, size: 32, align: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_coeff_precision", scope: !1824, file: !910, line: 60, baseType: !954, size: 32, align: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1824, file: !910, line: 61, baseType: !954, size: 32, align: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1824, file: !910, line: 62, baseType: !954, size: 32, align: 32, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_order_method", scope: !1824, file: !910, line: 63, baseType: !954, size: 32, align: 32, offset: 224)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "min_partition_order", scope: !1824, file: !910, line: 64, baseType: !954, size: 32, align: 32, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "max_partition_order", scope: !1824, file: !910, line: 65, baseType: !954, size: 32, align: 32, offset: 288)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mode", scope: !1824, file: !910, line: 66, baseType: !954, size: 32, align: 32, offset: 320)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "exact_rice_parameters", scope: !1824, file: !910, line: 67, baseType: !954, size: 32, align: 32, offset: 352)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "multi_dim_quant", scope: !1824, file: !910, line: 68, baseType: !954, size: 32, align: 32, offset: 384)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1743, file: !910, line: 119, baseType: !1088, size: 64, align: 64, offset: 54605824)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_ctx", scope: !1743, file: !910, line: 120, baseType: !1841, size: 302080, align: 256, offset: 54606080)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !915, line: 87, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !915, line: 52, size: 302080, align: 256, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1849, !1850, !1856, !1862}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !1842, file: !915, line: 53, baseType: !954, size: 32, align: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !1842, file: !915, line: 54, baseType: !954, size: 32, align: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !1842, file: !915, line: 55, baseType: !914, size: 32, align: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !1842, file: !915, line: 56, baseType: !1848, size: 64, align: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !1842, file: !915, line: 57, baseType: !1848, size: 64, align: 64, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !1842, file: !915, line: 67, baseType: !1851, size: 64, align: 64, offset: 256)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1854, !954, !1848}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64, align: 64)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !1842, file: !915, line: 82, baseType: !1857, size: 64, align: 64, offset: 320)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1860, !954, !954, !1848}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !1842, file: !915, line: 86, baseType: !1863, size: 301568, align: 256, offset: 512)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1864, size: 301568, align: 256, elements: !1762)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !1865, line: 58, baseType: !1866)
!1865 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !1865, line: 38, size: 150784, align: 256, elements: !1867)
!1867 = !{!1868, !1872, !1875, !1877, !1878, !1883}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !1866, file: !1865, line: 39, baseType: !1869, size: 82944, align: 64)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1024, size: 82944, align: 64, elements: !1870)
!1870 = !{!1871, !1871}
!1871 = !DISubrange(count: 36)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !1866, file: !1865, line: 40, baseType: !1873, size: 65536, align: 64, offset: 82944)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1024, size: 65536, align: 64, elements: !1874)
!1874 = !{!1792, !1792}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !1866, file: !1865, line: 41, baseType: !1876, size: 2048, align: 64, offset: 148480)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1024, size: 2048, align: 64, elements: !1791)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !1866, file: !1865, line: 42, baseType: !954, size: 32, align: 32, offset: 150528)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !1866, file: !1865, line: 50, baseType: !1879, size: 64, align: 64, offset: 150592)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64, align: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882, !1860}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64, align: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !1866, file: !1865, line: 57, baseType: !1884, size: 64, align: 64, offset: 150656)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!1024, !1882, !1860, !954}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "md5ctx", scope: !1743, file: !910, line: 121, baseType: !1888, size: 64, align: 64, offset: 54908160)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64, align: 64)
!1889 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVMD5", file: !1890, line: 46, flags: DIFlagFwdDecl)
!1890 = !DIFile(filename: "./libavutil/md5.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "md5_buffer", scope: !1743, file: !910, line: 122, baseType: !959, size: 64, align: 64, offset: 54908224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "md5_buffer_size", scope: !1743, file: !910, line: 123, baseType: !951, size: 32, align: 32, offset: 54908288)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1743, file: !910, line: 124, baseType: !1894, size: 128, align: 64, offset: 54908352)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !1895, line: 27, baseType: !1896)
!1895 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !1895, line: 24, size: 128, align: 64, elements: !1897)
!1897 = !{!1898, !1905}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !1896, file: !1895, line: 25, baseType: !1899, size: 64, align: 64)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64, align: 64)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{null, !1902, !1903, !954}
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64, align: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64, align: 64)
!1904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !1896, file: !1895, line: 26, baseType: !1906, size: 64, align: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64, align: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1416, !1909, !954}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flac_dsp", scope: !1743, file: !910, line: 125, baseType: !1912, size: 512, align: 64, offset: 54908480)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLACDSPContext", file: !1913, line: 37, baseType: !1914)
!1913 = !DIFile(filename: "libavcodec/flacdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FLACDSPContext", file: !1913, line: 26, size: 512, align: 64, elements: !1915)
!1915 = !{!1916, !1923, !1927, !1928, !1932}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !1914, file: !1913, line: 27, baseType: !1917, size: 256, align: 64)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1918, size: 256, align: 64, elements: !1216)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64, align: 64)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{null, !1121, !1921, !954, !954, !954}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64, align: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "lpc16", scope: !1914, file: !1913, line: 29, baseType: !1924, size: 64, align: 64, offset: 256)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64, align: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null, !1922, !988, !954, !954, !954}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lpc32", scope: !1914, file: !1913, line: 31, baseType: !1924, size: 64, align: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "lpc16_encode", scope: !1914, file: !1913, line: 33, baseType: !1929, size: 64, align: 64, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64, align: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1922, !1854, !954, !954, !1854, !954}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "lpc32_encode", scope: !1914, file: !1913, line: 35, baseType: !1929, size: 64, align: 64, offset: 448)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flushed", scope: !1743, file: !910, line: 127, baseType: !954, size: 32, align: 32, offset: 54908992)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "next_pts", scope: !1743, file: !910, line: 128, baseType: !960, size: 64, align: 64, offset: 54909056)
!1935 = !DILocation(line: 243, column: 24, scope: !1727)
!1936 = !DILocation(line: 243, column: 28, scope: !1727)
!1937 = !DILocation(line: 243, column: 35, scope: !1727)
!1938 = !DILocalVariable(name: "i", scope: !1727, file: !910, line: 244, type: !954)
!1939 = !DILocation(line: 244, column: 9, scope: !1727)
!1940 = !DILocalVariable(name: "level", scope: !1727, file: !910, line: 244, type: !954)
!1941 = !DILocation(line: 244, column: 12, scope: !1727)
!1942 = !DILocalVariable(name: "ret", scope: !1727, file: !910, line: 244, type: !954)
!1943 = !DILocation(line: 244, column: 19, scope: !1727)
!1944 = !DILocalVariable(name: "streaminfo", scope: !1727, file: !910, line: 245, type: !959)
!1945 = !DILocation(line: 245, column: 14, scope: !1727)
!1946 = !DILocation(line: 247, column: 16, scope: !1727)
!1947 = !DILocation(line: 247, column: 5, scope: !1727)
!1948 = !DILocation(line: 247, column: 8, scope: !1727)
!1949 = !DILocation(line: 247, column: 14, scope: !1727)
!1950 = !DILocation(line: 249, column: 13, scope: !1727)
!1951 = !DILocation(line: 249, column: 20, scope: !1727)
!1952 = !DILocation(line: 249, column: 5, scope: !1727)
!1953 = !DILocation(line: 251, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 249, column: 32)
!1955 = !DILocation(line: 251, column: 16, scope: !1954)
!1956 = !DILocation(line: 251, column: 36, scope: !1954)
!1957 = !DILocation(line: 252, column: 9, scope: !1954)
!1958 = !DILocation(line: 252, column: 12, scope: !1954)
!1959 = !DILocation(line: 252, column: 21, scope: !1954)
!1960 = !DILocation(line: 253, column: 9, scope: !1954)
!1961 = !DILocation(line: 255, column: 13, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1954, file: !910, line: 255, column: 13)
!1963 = !DILocation(line: 255, column: 20, scope: !1962)
!1964 = !DILocation(line: 255, column: 40, scope: !1962)
!1965 = !DILocation(line: 255, column: 13, scope: !1954)
!1966 = !DILocation(line: 256, column: 20, scope: !1962)
!1967 = !DILocation(line: 256, column: 13, scope: !1962)
!1968 = !DILocation(line: 257, column: 9, scope: !1954)
!1969 = !DILocation(line: 257, column: 16, scope: !1954)
!1970 = !DILocation(line: 257, column: 36, scope: !1954)
!1971 = !DILocation(line: 258, column: 9, scope: !1954)
!1972 = !DILocation(line: 258, column: 12, scope: !1954)
!1973 = !DILocation(line: 258, column: 21, scope: !1954)
!1974 = !DILocation(line: 259, column: 9, scope: !1954)
!1975 = !DILocation(line: 262, column: 9, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 262, column: 9)
!1977 = !DILocation(line: 262, column: 18, scope: !1976)
!1978 = !DILocation(line: 262, column: 22, scope: !1976)
!1979 = !DILocation(line: 262, column: 25, scope: !1980)
!1980 = !DILexicalBlockFile(scope: !1976, file: !910, discriminator: 1)
!1981 = !DILocation(line: 262, column: 34, scope: !1980)
!1982 = !DILocation(line: 262, column: 9, scope: !1980)
!1983 = !DILocation(line: 263, column: 16, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1976, file: !910, line: 262, column: 39)
!1985 = !DILocation(line: 264, column: 16, scope: !1984)
!1986 = !DILocation(line: 263, column: 9, scope: !1984)
!1987 = !DILocation(line: 265, column: 9, scope: !1984)
!1988 = !DILocation(line: 267, column: 19, scope: !1727)
!1989 = !DILocation(line: 267, column: 5, scope: !1727)
!1990 = !DILocation(line: 267, column: 8, scope: !1727)
!1991 = !DILocation(line: 267, column: 17, scope: !1727)
!1992 = !DILocation(line: 270, column: 9, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 270, column: 9)
!1994 = !DILocation(line: 270, column: 14, scope: !1993)
!1995 = !DILocation(line: 270, column: 9, scope: !1727)
!1996 = !DILocation(line: 271, column: 9, scope: !1993)
!1997 = !DILocation(line: 272, column: 12, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 272, column: 5)
!1999 = !DILocation(line: 272, column: 10, scope: !1998)
!2000 = !DILocation(line: 272, column: 17, scope: !2001)
!2001 = !DILexicalBlockFile(scope: !2002, file: !910, discriminator: 1)
!2002 = distinct !DILexicalBlock(scope: !1998, file: !910, line: 272, column: 5)
!2003 = !DILocation(line: 272, column: 19, scope: !2001)
!2004 = !DILocation(line: 272, column: 5, scope: !2001)
!2005 = !DILocation(line: 273, column: 13, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2007, file: !910, line: 273, column: 13)
!2007 = distinct !DILexicalBlock(scope: !2002, file: !910, line: 272, column: 30)
!2008 = !DILocation(line: 273, column: 47, scope: !2006)
!2009 = !DILocation(line: 273, column: 21, scope: !2006)
!2010 = !DILocation(line: 273, column: 18, scope: !2006)
!2011 = !DILocation(line: 273, column: 13, scope: !2007)
!2012 = !DILocation(line: 274, column: 55, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2006, file: !910, line: 273, column: 51)
!2014 = !DILocation(line: 274, column: 29, scope: !2013)
!2015 = !DILocation(line: 274, column: 13, scope: !2013)
!2016 = !DILocation(line: 274, column: 16, scope: !2013)
!2017 = !DILocation(line: 274, column: 27, scope: !2013)
!2018 = !DILocation(line: 275, column: 29, scope: !2013)
!2019 = !DILocation(line: 275, column: 13, scope: !2013)
!2020 = !DILocation(line: 275, column: 16, scope: !2013)
!2021 = !DILocation(line: 275, column: 27, scope: !2013)
!2022 = !DILocation(line: 276, column: 13, scope: !2013)
!2023 = !DILocation(line: 276, column: 16, scope: !2013)
!2024 = !DILocation(line: 276, column: 27, scope: !2013)
!2025 = !DILocation(line: 277, column: 13, scope: !2013)
!2026 = !DILocation(line: 279, column: 5, scope: !2007)
!2027 = !DILocation(line: 272, column: 26, scope: !2028)
!2028 = !DILexicalBlockFile(scope: !2002, file: !910, discriminator: 2)
!2029 = !DILocation(line: 272, column: 5, scope: !2028)
!2030 = distinct !{!2030, !2031}
!2031 = !DILocation(line: 272, column: 5, scope: !1727)
!2032 = !DILocation(line: 281, column: 9, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 281, column: 9)
!2034 = !DILocation(line: 281, column: 11, scope: !2033)
!2035 = !DILocation(line: 281, column: 9, scope: !1727)
!2036 = !DILocation(line: 282, column: 13, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2038, file: !910, line: 282, column: 13)
!2038 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 281, column: 18)
!2039 = !DILocation(line: 282, column: 18, scope: !2037)
!2040 = !DILocation(line: 282, column: 25, scope: !2037)
!2041 = !DILocation(line: 282, column: 30, scope: !2037)
!2042 = !DILocation(line: 282, column: 33, scope: !2043)
!2043 = !DILexicalBlockFile(scope: !2037, file: !910, discriminator: 1)
!2044 = !DILocation(line: 282, column: 38, scope: !2043)
!2045 = !DILocation(line: 282, column: 13, scope: !2043)
!2046 = !DILocation(line: 283, column: 13, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2037, file: !910, line: 282, column: 48)
!2048 = !DILocation(line: 283, column: 16, scope: !2047)
!2049 = !DILocation(line: 283, column: 27, scope: !2047)
!2050 = !DILocation(line: 284, column: 29, scope: !2047)
!2051 = !DILocation(line: 284, column: 34, scope: !2047)
!2052 = !DILocation(line: 284, column: 13, scope: !2047)
!2053 = !DILocation(line: 284, column: 16, scope: !2047)
!2054 = !DILocation(line: 284, column: 27, scope: !2047)
!2055 = !DILocation(line: 285, column: 9, scope: !2047)
!2056 = !DILocation(line: 285, column: 20, scope: !2057)
!2057 = !DILexicalBlockFile(scope: !2058, file: !910, discriminator: 1)
!2058 = distinct !DILexicalBlock(scope: !2037, file: !910, line: 285, column: 20)
!2059 = !DILocation(line: 285, column: 25, scope: !2057)
!2060 = !DILocation(line: 285, column: 30, scope: !2057)
!2061 = !DILocation(line: 285, column: 35, scope: !2057)
!2062 = !DILocation(line: 285, column: 38, scope: !2063)
!2063 = !DILexicalBlockFile(scope: !2058, file: !910, discriminator: 2)
!2064 = !DILocation(line: 285, column: 43, scope: !2063)
!2065 = !DILocation(line: 285, column: 20, scope: !2063)
!2066 = !DILocation(line: 286, column: 13, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2058, file: !910, line: 285, column: 53)
!2068 = !DILocation(line: 286, column: 16, scope: !2067)
!2069 = !DILocation(line: 286, column: 27, scope: !2067)
!2070 = !DILocation(line: 287, column: 29, scope: !2067)
!2071 = !DILocation(line: 287, column: 34, scope: !2067)
!2072 = !DILocation(line: 287, column: 13, scope: !2067)
!2073 = !DILocation(line: 287, column: 16, scope: !2067)
!2074 = !DILocation(line: 287, column: 27, scope: !2067)
!2075 = !DILocation(line: 288, column: 9, scope: !2067)
!2076 = !DILocation(line: 288, column: 20, scope: !2077)
!2077 = !DILexicalBlockFile(scope: !2078, file: !910, discriminator: 1)
!2078 = distinct !DILexicalBlock(scope: !2058, file: !910, line: 288, column: 20)
!2079 = !DILocation(line: 288, column: 25, scope: !2077)
!2080 = !DILocation(line: 289, column: 13, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2078, file: !910, line: 288, column: 34)
!2082 = !DILocation(line: 289, column: 16, scope: !2081)
!2083 = !DILocation(line: 289, column: 27, scope: !2081)
!2084 = !DILocation(line: 290, column: 29, scope: !2081)
!2085 = !DILocation(line: 290, column: 13, scope: !2081)
!2086 = !DILocation(line: 290, column: 16, scope: !2081)
!2087 = !DILocation(line: 290, column: 27, scope: !2081)
!2088 = !DILocation(line: 291, column: 9, scope: !2081)
!2089 = !DILocation(line: 292, column: 20, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2078, file: !910, line: 291, column: 16)
!2091 = !DILocation(line: 292, column: 56, scope: !2090)
!2092 = !DILocation(line: 292, column: 13, scope: !2090)
!2093 = !DILocation(line: 293, column: 13, scope: !2090)
!2094 = !DILocation(line: 295, column: 25, scope: !2038)
!2095 = !DILocation(line: 295, column: 9, scope: !2038)
!2096 = !DILocation(line: 295, column: 12, scope: !2038)
!2097 = !DILocation(line: 295, column: 23, scope: !2038)
!2098 = !DILocation(line: 296, column: 5, scope: !2038)
!2099 = !DILocation(line: 299, column: 9, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 299, column: 9)
!2101 = !DILocation(line: 299, column: 16, scope: !2100)
!2102 = !DILocation(line: 299, column: 34, scope: !2100)
!2103 = !DILocation(line: 299, column: 9, scope: !1727)
!2104 = !DILocation(line: 300, column: 9, scope: !2100)
!2105 = !DILocation(line: 300, column: 12, scope: !2100)
!2106 = !DILocation(line: 300, column: 20, scope: !2100)
!2107 = !DILocation(line: 300, column: 38, scope: !2100)
!2108 = !DILocation(line: 302, column: 40, scope: !2100)
!2109 = !DILocation(line: 302, column: 47, scope: !2100)
!2110 = !DILocation(line: 302, column: 9, scope: !2100)
!2111 = !DILocation(line: 302, column: 12, scope: !2100)
!2112 = !DILocation(line: 302, column: 20, scope: !2100)
!2113 = !DILocation(line: 302, column: 38, scope: !2100)
!2114 = !DILocation(line: 304, column: 13, scope: !1727)
!2115 = !DILocation(line: 304, column: 16, scope: !1727)
!2116 = !DILocation(line: 304, column: 24, scope: !1727)
!2117 = !DILocation(line: 304, column: 11, scope: !1727)
!2118 = !DILocation(line: 305, column: 9, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 305, column: 9)
!2120 = !DILocation(line: 305, column: 15, scope: !2119)
!2121 = !DILocation(line: 305, column: 9, scope: !1727)
!2122 = !DILocation(line: 306, column: 16, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2119, file: !910, line: 305, column: 21)
!2124 = !DILocation(line: 307, column: 16, scope: !2123)
!2125 = !DILocation(line: 307, column: 19, scope: !2123)
!2126 = !DILocation(line: 307, column: 27, scope: !2123)
!2127 = !DILocation(line: 306, column: 9, scope: !2123)
!2128 = !DILocation(line: 308, column: 9, scope: !2123)
!2129 = !DILocation(line: 311, column: 95, scope: !1727)
!2130 = !DILocation(line: 311, column: 32, scope: !1727)
!2131 = !DILocation(line: 311, column: 40, scope: !1727)
!2132 = !DILocation(line: 311, column: 5, scope: !1727)
!2133 = !DILocation(line: 311, column: 8, scope: !1727)
!2134 = !DILocation(line: 311, column: 16, scope: !1727)
!2135 = !DILocation(line: 311, column: 30, scope: !1727)
!2136 = !DILocation(line: 313, column: 9, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 313, column: 9)
!2138 = !DILocation(line: 313, column: 12, scope: !2137)
!2139 = !DILocation(line: 313, column: 20, scope: !2137)
!2140 = !DILocation(line: 313, column: 29, scope: !2137)
!2141 = !DILocation(line: 313, column: 9, scope: !1727)
!2142 = !DILocation(line: 318, column: 65, scope: !2137)
!2143 = !DILocation(line: 314, column: 31, scope: !2137)
!2144 = !DILocation(line: 314, column: 39, scope: !2137)
!2145 = !DILocation(line: 314, column: 9, scope: !2137)
!2146 = !DILocation(line: 314, column: 12, scope: !2137)
!2147 = !DILocation(line: 314, column: 20, scope: !2137)
!2148 = !DILocation(line: 314, column: 29, scope: !2137)
!2149 = !DILocation(line: 320, column: 9, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 320, column: 9)
!2151 = !DILocation(line: 320, column: 12, scope: !2150)
!2152 = !DILocation(line: 320, column: 20, scope: !2150)
!2153 = !DILocation(line: 320, column: 41, scope: !2150)
!2154 = !DILocation(line: 320, column: 9, scope: !1727)
!2155 = !DILocation(line: 321, column: 93, scope: !2150)
!2156 = !DILocation(line: 321, column: 43, scope: !2150)
!2157 = !DILocation(line: 321, column: 51, scope: !2150)
!2158 = !DILocation(line: 321, column: 9, scope: !2150)
!2159 = !DILocation(line: 321, column: 12, scope: !2150)
!2160 = !DILocation(line: 321, column: 20, scope: !2150)
!2161 = !DILocation(line: 321, column: 41, scope: !2150)
!2162 = !DILocation(line: 322, column: 9, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 322, column: 9)
!2164 = !DILocation(line: 322, column: 12, scope: !2163)
!2165 = !DILocation(line: 322, column: 20, scope: !2163)
!2166 = !DILocation(line: 322, column: 41, scope: !2163)
!2167 = !DILocation(line: 322, column: 9, scope: !1727)
!2168 = !DILocation(line: 323, column: 98, scope: !2163)
!2169 = !DILocation(line: 323, column: 43, scope: !2163)
!2170 = !DILocation(line: 323, column: 51, scope: !2163)
!2171 = !DILocation(line: 323, column: 9, scope: !2163)
!2172 = !DILocation(line: 323, column: 12, scope: !2163)
!2173 = !DILocation(line: 323, column: 20, scope: !2163)
!2174 = !DILocation(line: 323, column: 41, scope: !2163)
!2175 = !DILocation(line: 325, column: 9, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 325, column: 9)
!2177 = !DILocation(line: 325, column: 12, scope: !2176)
!2178 = !DILocation(line: 325, column: 20, scope: !2176)
!2179 = !DILocation(line: 325, column: 44, scope: !2176)
!2180 = !DILocation(line: 325, column: 9, scope: !1727)
!2181 = !DILocation(line: 330, column: 60, scope: !2176)
!2182 = !DILocation(line: 326, column: 46, scope: !2176)
!2183 = !DILocation(line: 326, column: 54, scope: !2176)
!2184 = !DILocation(line: 326, column: 9, scope: !2176)
!2185 = !DILocation(line: 326, column: 12, scope: !2176)
!2186 = !DILocation(line: 326, column: 20, scope: !2176)
!2187 = !DILocation(line: 326, column: 44, scope: !2176)
!2188 = !DILocation(line: 332, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 332, column: 9)
!2190 = !DILocation(line: 332, column: 12, scope: !2189)
!2191 = !DILocation(line: 332, column: 20, scope: !2189)
!2192 = !DILocation(line: 332, column: 42, scope: !2189)
!2193 = !DILocation(line: 332, column: 45, scope: !2189)
!2194 = !DILocation(line: 332, column: 53, scope: !2189)
!2195 = !DILocation(line: 332, column: 40, scope: !2189)
!2196 = !DILocation(line: 332, column: 9, scope: !1727)
!2197 = !DILocation(line: 333, column: 16, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2189, file: !910, line: 332, column: 74)
!2199 = !DILocation(line: 334, column: 16, scope: !2198)
!2200 = !DILocation(line: 334, column: 19, scope: !2198)
!2201 = !DILocation(line: 334, column: 27, scope: !2198)
!2202 = !DILocation(line: 334, column: 48, scope: !2198)
!2203 = !DILocation(line: 334, column: 51, scope: !2198)
!2204 = !DILocation(line: 334, column: 59, scope: !2198)
!2205 = !DILocation(line: 333, column: 9, scope: !2198)
!2206 = !DILocation(line: 335, column: 9, scope: !2198)
!2207 = !DILocation(line: 337, column: 9, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 337, column: 9)
!2209 = !DILocation(line: 337, column: 12, scope: !2208)
!2210 = !DILocation(line: 337, column: 20, scope: !2208)
!2211 = !DILocation(line: 337, column: 40, scope: !2208)
!2212 = !DILocation(line: 337, column: 9, scope: !1727)
!2213 = !DILocation(line: 338, column: 92, scope: !2208)
!2214 = !DILocation(line: 338, column: 42, scope: !2208)
!2215 = !DILocation(line: 338, column: 43, scope: !2208)
!2216 = !DILocation(line: 338, column: 50, scope: !2208)
!2217 = !DILocation(line: 338, column: 9, scope: !2208)
!2218 = !DILocation(line: 338, column: 12, scope: !2208)
!2219 = !DILocation(line: 338, column: 20, scope: !2208)
!2220 = !DILocation(line: 338, column: 40, scope: !2208)
!2221 = !DILocation(line: 339, column: 9, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 339, column: 9)
!2223 = !DILocation(line: 339, column: 12, scope: !2222)
!2224 = !DILocation(line: 339, column: 20, scope: !2222)
!2225 = !DILocation(line: 339, column: 40, scope: !2222)
!2226 = !DILocation(line: 339, column: 9, scope: !1727)
!2227 = !DILocation(line: 340, column: 92, scope: !2222)
!2228 = !DILocation(line: 340, column: 42, scope: !2222)
!2229 = !DILocation(line: 340, column: 50, scope: !2222)
!2230 = !DILocation(line: 340, column: 9, scope: !2222)
!2231 = !DILocation(line: 340, column: 12, scope: !2222)
!2232 = !DILocation(line: 340, column: 20, scope: !2222)
!2233 = !DILocation(line: 340, column: 40, scope: !2222)
!2234 = !DILocation(line: 344, column: 9, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 344, column: 9)
!2236 = !DILocation(line: 344, column: 16, scope: !2235)
!2237 = !DILocation(line: 344, column: 37, scope: !2235)
!2238 = !DILocation(line: 344, column: 9, scope: !1727)
!2239 = !DILocation(line: 345, column: 13, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !910, line: 345, column: 13)
!2241 = distinct !DILexicalBlock(scope: !2235, file: !910, line: 344, column: 43)
!2242 = !DILocation(line: 345, column: 16, scope: !2240)
!2243 = !DILocation(line: 345, column: 24, scope: !2240)
!2244 = !DILocation(line: 345, column: 33, scope: !2240)
!2245 = !DILocation(line: 345, column: 13, scope: !2241)
!2246 = !DILocation(line: 346, column: 17, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !910, line: 346, column: 17)
!2248 = distinct !DILexicalBlock(scope: !2240, file: !910, line: 345, column: 55)
!2249 = !DILocation(line: 346, column: 24, scope: !2247)
!2250 = !DILocation(line: 346, column: 45, scope: !2247)
!2251 = !DILocation(line: 346, column: 17, scope: !2248)
!2252 = !DILocation(line: 347, column: 24, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2247, file: !910, line: 346, column: 50)
!2254 = !DILocation(line: 349, column: 24, scope: !2253)
!2255 = !DILocation(line: 349, column: 31, scope: !2253)
!2256 = !DILocation(line: 347, column: 17, scope: !2253)
!2257 = !DILocation(line: 350, column: 17, scope: !2253)
!2258 = !DILocation(line: 350, column: 24, scope: !2253)
!2259 = !DILocation(line: 350, column: 45, scope: !2253)
!2260 = !DILocation(line: 351, column: 13, scope: !2253)
!2261 = !DILocation(line: 352, column: 9, scope: !2248)
!2262 = !DILocation(line: 352, column: 20, scope: !2263)
!2263 = !DILexicalBlockFile(scope: !2264, file: !910, discriminator: 1)
!2264 = distinct !DILexicalBlock(scope: !2240, file: !910, line: 352, column: 20)
!2265 = !DILocation(line: 352, column: 27, scope: !2263)
!2266 = !DILocation(line: 352, column: 48, scope: !2263)
!2267 = !DILocation(line: 352, column: 52, scope: !2263)
!2268 = !DILocation(line: 353, column: 20, scope: !2264)
!2269 = !DILocation(line: 353, column: 27, scope: !2264)
!2270 = !DILocation(line: 353, column: 48, scope: !2264)
!2271 = !DILocation(line: 352, column: 20, scope: !2272)
!2272 = !DILexicalBlockFile(scope: !2240, file: !910, discriminator: 2)
!2273 = !DILocation(line: 354, column: 20, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2264, file: !910, line: 353, column: 54)
!2275 = !DILocation(line: 355, column: 20, scope: !2274)
!2276 = !DILocation(line: 355, column: 27, scope: !2274)
!2277 = !DILocation(line: 354, column: 13, scope: !2274)
!2278 = !DILocation(line: 356, column: 13, scope: !2274)
!2279 = !DILocation(line: 358, column: 43, scope: !2241)
!2280 = !DILocation(line: 358, column: 50, scope: !2241)
!2281 = !DILocation(line: 358, column: 9, scope: !2241)
!2282 = !DILocation(line: 358, column: 12, scope: !2241)
!2283 = !DILocation(line: 358, column: 20, scope: !2241)
!2284 = !DILocation(line: 358, column: 41, scope: !2241)
!2285 = !DILocation(line: 359, column: 5, scope: !2241)
!2286 = !DILocation(line: 360, column: 9, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 360, column: 9)
!2288 = !DILocation(line: 360, column: 16, scope: !2287)
!2289 = !DILocation(line: 360, column: 37, scope: !2287)
!2290 = !DILocation(line: 360, column: 9, scope: !1727)
!2291 = !DILocation(line: 361, column: 13, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !910, line: 361, column: 13)
!2293 = distinct !DILexicalBlock(scope: !2287, file: !910, line: 360, column: 43)
!2294 = !DILocation(line: 361, column: 16, scope: !2292)
!2295 = !DILocation(line: 361, column: 24, scope: !2292)
!2296 = !DILocation(line: 361, column: 33, scope: !2292)
!2297 = !DILocation(line: 361, column: 13, scope: !2293)
!2298 = !DILocation(line: 362, column: 17, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !910, line: 362, column: 17)
!2300 = distinct !DILexicalBlock(scope: !2292, file: !910, line: 361, column: 55)
!2301 = !DILocation(line: 362, column: 24, scope: !2299)
!2302 = !DILocation(line: 362, column: 45, scope: !2299)
!2303 = !DILocation(line: 362, column: 17, scope: !2300)
!2304 = !DILocation(line: 363, column: 24, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2299, file: !910, line: 362, column: 50)
!2306 = !DILocation(line: 365, column: 24, scope: !2305)
!2307 = !DILocation(line: 365, column: 31, scope: !2305)
!2308 = !DILocation(line: 363, column: 17, scope: !2305)
!2309 = !DILocation(line: 366, column: 17, scope: !2305)
!2310 = !DILocation(line: 366, column: 24, scope: !2305)
!2311 = !DILocation(line: 366, column: 45, scope: !2305)
!2312 = !DILocation(line: 367, column: 13, scope: !2305)
!2313 = !DILocation(line: 368, column: 9, scope: !2300)
!2314 = !DILocation(line: 368, column: 20, scope: !2315)
!2315 = !DILexicalBlockFile(scope: !2316, file: !910, discriminator: 1)
!2316 = distinct !DILexicalBlock(scope: !2292, file: !910, line: 368, column: 20)
!2317 = !DILocation(line: 368, column: 27, scope: !2315)
!2318 = !DILocation(line: 368, column: 48, scope: !2315)
!2319 = !DILocation(line: 368, column: 52, scope: !2315)
!2320 = !DILocation(line: 369, column: 20, scope: !2316)
!2321 = !DILocation(line: 369, column: 27, scope: !2316)
!2322 = !DILocation(line: 369, column: 48, scope: !2316)
!2323 = !DILocation(line: 368, column: 20, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !2292, file: !910, discriminator: 2)
!2325 = !DILocation(line: 370, column: 20, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2316, file: !910, line: 369, column: 54)
!2327 = !DILocation(line: 371, column: 20, scope: !2326)
!2328 = !DILocation(line: 371, column: 27, scope: !2326)
!2329 = !DILocation(line: 370, column: 13, scope: !2326)
!2330 = !DILocation(line: 372, column: 13, scope: !2326)
!2331 = !DILocation(line: 374, column: 43, scope: !2293)
!2332 = !DILocation(line: 374, column: 50, scope: !2293)
!2333 = !DILocation(line: 374, column: 9, scope: !2293)
!2334 = !DILocation(line: 374, column: 12, scope: !2293)
!2335 = !DILocation(line: 374, column: 20, scope: !2293)
!2336 = !DILocation(line: 374, column: 41, scope: !2293)
!2337 = !DILocation(line: 375, column: 5, scope: !2293)
!2338 = !DILocation(line: 378, column: 9, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 378, column: 9)
!2340 = !DILocation(line: 378, column: 12, scope: !2339)
!2341 = !DILocation(line: 378, column: 20, scope: !2339)
!2342 = !DILocation(line: 378, column: 29, scope: !2339)
!2343 = !DILocation(line: 378, column: 9, scope: !1727)
!2344 = !DILocation(line: 379, column: 9, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2339, file: !910, line: 378, column: 50)
!2346 = !DILocation(line: 379, column: 12, scope: !2345)
!2347 = !DILocation(line: 379, column: 20, scope: !2345)
!2348 = !DILocation(line: 379, column: 41, scope: !2345)
!2349 = !DILocation(line: 380, column: 9, scope: !2345)
!2350 = !DILocation(line: 380, column: 12, scope: !2345)
!2351 = !DILocation(line: 380, column: 20, scope: !2345)
!2352 = !DILocation(line: 380, column: 41, scope: !2345)
!2353 = !DILocation(line: 381, column: 5, scope: !2345)
!2354 = !DILocation(line: 381, column: 16, scope: !2355)
!2355 = !DILexicalBlockFile(scope: !2356, file: !910, discriminator: 1)
!2356 = distinct !DILexicalBlock(scope: !2339, file: !910, line: 381, column: 16)
!2357 = !DILocation(line: 381, column: 19, scope: !2355)
!2358 = !DILocation(line: 381, column: 27, scope: !2355)
!2359 = !DILocation(line: 381, column: 36, scope: !2355)
!2360 = !DILocation(line: 382, column: 13, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2362, file: !910, line: 382, column: 13)
!2362 = distinct !DILexicalBlock(scope: !2356, file: !910, line: 381, column: 58)
!2363 = !DILocation(line: 382, column: 16, scope: !2361)
!2364 = !DILocation(line: 382, column: 24, scope: !2361)
!2365 = !DILocation(line: 382, column: 45, scope: !2361)
!2366 = !DILocation(line: 382, column: 13, scope: !2362)
!2367 = !DILocation(line: 383, column: 20, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2361, file: !910, line: 382, column: 50)
!2369 = !DILocation(line: 385, column: 20, scope: !2368)
!2370 = !DILocation(line: 385, column: 23, scope: !2368)
!2371 = !DILocation(line: 385, column: 31, scope: !2368)
!2372 = !DILocation(line: 383, column: 13, scope: !2368)
!2373 = !DILocation(line: 386, column: 13, scope: !2368)
!2374 = !DILocation(line: 386, column: 16, scope: !2368)
!2375 = !DILocation(line: 386, column: 24, scope: !2368)
!2376 = !DILocation(line: 386, column: 45, scope: !2368)
!2377 = !DILocation(line: 387, column: 9, scope: !2368)
!2378 = !DILocation(line: 388, column: 13, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2362, file: !910, line: 388, column: 13)
!2380 = !DILocation(line: 388, column: 16, scope: !2379)
!2381 = !DILocation(line: 388, column: 24, scope: !2379)
!2382 = !DILocation(line: 388, column: 45, scope: !2379)
!2383 = !DILocation(line: 388, column: 13, scope: !2362)
!2384 = !DILocation(line: 389, column: 20, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2379, file: !910, line: 388, column: 50)
!2386 = !DILocation(line: 391, column: 20, scope: !2385)
!2387 = !DILocation(line: 391, column: 23, scope: !2385)
!2388 = !DILocation(line: 391, column: 31, scope: !2385)
!2389 = !DILocation(line: 389, column: 13, scope: !2385)
!2390 = !DILocation(line: 392, column: 13, scope: !2385)
!2391 = !DILocation(line: 392, column: 16, scope: !2385)
!2392 = !DILocation(line: 392, column: 24, scope: !2385)
!2393 = !DILocation(line: 392, column: 45, scope: !2385)
!2394 = !DILocation(line: 393, column: 9, scope: !2385)
!2395 = !DILocation(line: 394, column: 5, scope: !2362)
!2396 = !DILocation(line: 396, column: 9, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 396, column: 9)
!2398 = !DILocation(line: 396, column: 12, scope: !2397)
!2399 = !DILocation(line: 396, column: 20, scope: !2397)
!2400 = !DILocation(line: 396, column: 43, scope: !2397)
!2401 = !DILocation(line: 396, column: 46, scope: !2397)
!2402 = !DILocation(line: 396, column: 54, scope: !2397)
!2403 = !DILocation(line: 396, column: 41, scope: !2397)
!2404 = !DILocation(line: 396, column: 9, scope: !1727)
!2405 = !DILocation(line: 397, column: 16, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2397, file: !910, line: 396, column: 76)
!2407 = !DILocation(line: 398, column: 16, scope: !2406)
!2408 = !DILocation(line: 398, column: 19, scope: !2406)
!2409 = !DILocation(line: 398, column: 27, scope: !2406)
!2410 = !DILocation(line: 398, column: 49, scope: !2406)
!2411 = !DILocation(line: 398, column: 52, scope: !2406)
!2412 = !DILocation(line: 398, column: 60, scope: !2406)
!2413 = !DILocation(line: 397, column: 9, scope: !2406)
!2414 = !DILocation(line: 399, column: 9, scope: !2406)
!2415 = !DILocation(line: 402, column: 9, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 402, column: 9)
!2417 = !DILocation(line: 402, column: 16, scope: !2416)
!2418 = !DILocation(line: 402, column: 27, scope: !2416)
!2419 = !DILocation(line: 402, column: 9, scope: !1727)
!2420 = !DILocation(line: 403, column: 13, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2422, file: !910, line: 403, column: 13)
!2422 = distinct !DILexicalBlock(scope: !2416, file: !910, line: 402, column: 32)
!2423 = !DILocation(line: 403, column: 20, scope: !2421)
!2424 = !DILocation(line: 403, column: 31, scope: !2421)
!2425 = !DILocation(line: 403, column: 36, scope: !2421)
!2426 = !DILocation(line: 404, column: 17, scope: !2421)
!2427 = !DILocation(line: 404, column: 24, scope: !2421)
!2428 = !DILocation(line: 404, column: 35, scope: !2421)
!2429 = !DILocation(line: 403, column: 13, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2422, file: !910, discriminator: 1)
!2431 = !DILocation(line: 405, column: 20, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2421, file: !910, line: 404, column: 44)
!2433 = !DILocation(line: 406, column: 20, scope: !2432)
!2434 = !DILocation(line: 406, column: 27, scope: !2432)
!2435 = !DILocation(line: 405, column: 13, scope: !2432)
!2436 = !DILocation(line: 407, column: 13, scope: !2432)
!2437 = !DILocation(line: 409, column: 5, scope: !2422)
!2438 = !DILocation(line: 410, column: 49, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2416, file: !910, line: 409, column: 12)
!2440 = !DILocation(line: 410, column: 52, scope: !2439)
!2441 = !DILocation(line: 410, column: 64, scope: !2439)
!2442 = !DILocation(line: 410, column: 67, scope: !2439)
!2443 = !DILocation(line: 410, column: 75, scope: !2439)
!2444 = !DILocation(line: 410, column: 32, scope: !2439)
!2445 = !DILocation(line: 410, column: 9, scope: !2439)
!2446 = !DILocation(line: 410, column: 12, scope: !2439)
!2447 = !DILocation(line: 410, column: 19, scope: !2439)
!2448 = !DILocation(line: 410, column: 30, scope: !2439)
!2449 = !DILocation(line: 412, column: 24, scope: !1727)
!2450 = !DILocation(line: 412, column: 27, scope: !1727)
!2451 = !DILocation(line: 412, column: 34, scope: !1727)
!2452 = !DILocation(line: 412, column: 5, scope: !1727)
!2453 = !DILocation(line: 412, column: 8, scope: !1727)
!2454 = !DILocation(line: 412, column: 22, scope: !1727)
!2455 = !DILocation(line: 415, column: 51, scope: !1727)
!2456 = !DILocation(line: 415, column: 54, scope: !1727)
!2457 = !DILocation(line: 415, column: 61, scope: !1727)
!2458 = !DILocation(line: 416, column: 51, scope: !1727)
!2459 = !DILocation(line: 416, column: 54, scope: !1727)
!2460 = !DILocation(line: 417, column: 51, scope: !1727)
!2461 = !DILocation(line: 417, column: 54, scope: !1727)
!2462 = !DILocation(line: 417, column: 61, scope: !1727)
!2463 = !DILocation(line: 415, column: 24, scope: !1727)
!2464 = !DILocation(line: 415, column: 5, scope: !1727)
!2465 = !DILocation(line: 415, column: 8, scope: !1727)
!2466 = !DILocation(line: 415, column: 22, scope: !1727)
!2467 = !DILocation(line: 420, column: 17, scope: !1727)
!2468 = !DILocation(line: 420, column: 5, scope: !1727)
!2469 = !DILocation(line: 420, column: 8, scope: !1727)
!2470 = !DILocation(line: 420, column: 15, scope: !1727)
!2471 = !DILocation(line: 421, column: 10, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 421, column: 9)
!2473 = !DILocation(line: 421, column: 13, scope: !2472)
!2474 = !DILocation(line: 421, column: 9, scope: !1727)
!2475 = !DILocation(line: 422, column: 9, scope: !2472)
!2476 = !DILocation(line: 423, column: 17, scope: !1727)
!2477 = !DILocation(line: 423, column: 20, scope: !1727)
!2478 = !DILocation(line: 423, column: 5, scope: !1727)
!2479 = !DILocation(line: 425, column: 18, scope: !1727)
!2480 = !DILocation(line: 425, column: 16, scope: !1727)
!2481 = !DILocation(line: 426, column: 10, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 426, column: 9)
!2483 = !DILocation(line: 426, column: 9, scope: !1727)
!2484 = !DILocation(line: 427, column: 9, scope: !2482)
!2485 = !DILocation(line: 428, column: 22, scope: !1727)
!2486 = !DILocation(line: 428, column: 25, scope: !1727)
!2487 = !DILocation(line: 428, column: 5, scope: !1727)
!2488 = !DILocation(line: 429, column: 24, scope: !1727)
!2489 = !DILocation(line: 429, column: 5, scope: !1727)
!2490 = !DILocation(line: 429, column: 12, scope: !1727)
!2491 = !DILocation(line: 429, column: 22, scope: !1727)
!2492 = !DILocation(line: 430, column: 5, scope: !1727)
!2493 = !DILocation(line: 430, column: 12, scope: !1727)
!2494 = !DILocation(line: 430, column: 27, scope: !1727)
!2495 = !DILocation(line: 432, column: 5, scope: !1727)
!2496 = !DILocation(line: 432, column: 8, scope: !1727)
!2497 = !DILocation(line: 432, column: 20, scope: !1727)
!2498 = !DILocation(line: 433, column: 24, scope: !1727)
!2499 = !DILocation(line: 433, column: 27, scope: !1727)
!2500 = !DILocation(line: 433, column: 5, scope: !1727)
!2501 = !DILocation(line: 433, column: 8, scope: !1727)
!2502 = !DILocation(line: 433, column: 22, scope: !1727)
!2503 = !DILocation(line: 435, column: 9, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !1727, file: !910, line: 435, column: 9)
!2505 = !DILocation(line: 435, column: 18, scope: !2504)
!2506 = !DILocation(line: 435, column: 23, scope: !2504)
!2507 = !DILocation(line: 436, column: 13, scope: !2504)
!2508 = !DILocation(line: 436, column: 20, scope: !2504)
!2509 = !DILocation(line: 436, column: 35, scope: !2504)
!2510 = !DILocation(line: 436, column: 75, scope: !2504)
!2511 = !DILocation(line: 437, column: 9, scope: !2504)
!2512 = !DILocation(line: 437, column: 18, scope: !2504)
!2513 = !DILocation(line: 437, column: 23, scope: !2504)
!2514 = !DILocation(line: 438, column: 13, scope: !2504)
!2515 = !DILocation(line: 438, column: 20, scope: !2504)
!2516 = !DILocation(line: 438, column: 35, scope: !2504)
!2517 = !DILocation(line: 438, column: 86, scope: !2504)
!2518 = !DILocation(line: 439, column: 13, scope: !2504)
!2519 = !DILocation(line: 439, column: 20, scope: !2504)
!2520 = !DILocation(line: 439, column: 35, scope: !2504)
!2521 = !DILocation(line: 439, column: 86, scope: !2504)
!2522 = !DILocation(line: 440, column: 9, scope: !2504)
!2523 = !DILocation(line: 440, column: 18, scope: !2504)
!2524 = !DILocation(line: 440, column: 23, scope: !2504)
!2525 = !DILocation(line: 441, column: 13, scope: !2504)
!2526 = !DILocation(line: 441, column: 20, scope: !2504)
!2527 = !DILocation(line: 441, column: 35, scope: !2504)
!2528 = !DILocation(line: 441, column: 99, scope: !2504)
!2529 = !DILocation(line: 442, column: 13, scope: !2504)
!2530 = !DILocation(line: 442, column: 20, scope: !2504)
!2531 = !DILocation(line: 442, column: 35, scope: !2504)
!2532 = !DILocation(line: 442, column: 99, scope: !2504)
!2533 = !DILocation(line: 443, column: 9, scope: !2504)
!2534 = !DILocation(line: 443, column: 18, scope: !2504)
!2535 = !DILocation(line: 443, column: 23, scope: !2504)
!2536 = !DILocation(line: 444, column: 13, scope: !2504)
!2537 = !DILocation(line: 444, column: 20, scope: !2504)
!2538 = !DILocation(line: 444, column: 35, scope: !2504)
!2539 = !DILocation(line: 444, column: 112, scope: !2504)
!2540 = !DILocation(line: 445, column: 13, scope: !2504)
!2541 = !DILocation(line: 445, column: 20, scope: !2504)
!2542 = !DILocation(line: 445, column: 35, scope: !2504)
!2543 = !DILocation(line: 435, column: 9, scope: !2544)
!2544 = !DILexicalBlockFile(scope: !1727, file: !910, discriminator: 1)
!2545 = !DILocation(line: 446, column: 13, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !910, line: 446, column: 13)
!2547 = distinct !DILexicalBlock(scope: !2504, file: !910, line: 445, column: 113)
!2548 = !DILocation(line: 446, column: 20, scope: !2546)
!2549 = !DILocation(line: 446, column: 13, scope: !2547)
!2550 = !DILocation(line: 447, column: 20, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !910, line: 446, column: 36)
!2552 = !DILocation(line: 447, column: 13, scope: !2551)
!2553 = !DILocation(line: 450, column: 9, scope: !2551)
!2554 = !DILocation(line: 451, column: 20, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2546, file: !910, line: 450, column: 16)
!2556 = !DILocation(line: 453, column: 66, scope: !2555)
!2557 = !DILocation(line: 451, column: 13, scope: !2555)
!2558 = !DILocation(line: 455, column: 5, scope: !2547)
!2559 = !DILocation(line: 457, column: 24, scope: !1727)
!2560 = !DILocation(line: 457, column: 27, scope: !1727)
!2561 = !DILocation(line: 457, column: 36, scope: !1727)
!2562 = !DILocation(line: 457, column: 43, scope: !1727)
!2563 = !DILocation(line: 458, column: 23, scope: !1727)
!2564 = !DILocation(line: 458, column: 26, scope: !1727)
!2565 = !DILocation(line: 458, column: 34, scope: !1727)
!2566 = !DILocation(line: 457, column: 11, scope: !1727)
!2567 = !DILocation(line: 457, column: 9, scope: !1727)
!2568 = !DILocation(line: 460, column: 23, scope: !1727)
!2569 = !DILocation(line: 460, column: 26, scope: !1727)
!2570 = !DILocation(line: 460, column: 5, scope: !1727)
!2571 = !DILocation(line: 461, column: 22, scope: !1727)
!2572 = !DILocation(line: 461, column: 25, scope: !1727)
!2573 = !DILocation(line: 461, column: 35, scope: !1727)
!2574 = !DILocation(line: 461, column: 42, scope: !1727)
!2575 = !DILocation(line: 461, column: 54, scope: !1727)
!2576 = !DILocation(line: 462, column: 21, scope: !1727)
!2577 = !DILocation(line: 462, column: 28, scope: !1727)
!2578 = !DILocation(line: 461, column: 5, scope: !1727)
!2579 = !DILocation(line: 464, column: 32, scope: !1727)
!2580 = !DILocation(line: 464, column: 5, scope: !1727)
!2581 = !DILocation(line: 466, column: 12, scope: !1727)
!2582 = !DILocation(line: 466, column: 5, scope: !1727)
!2583 = !DILocation(line: 467, column: 1, scope: !1727)
!2584 = distinct !DISubprogram(name: "flac_encode_frame", scope: !910, file: !910, line: 1359, type: !1690, isLocal: true, isDefinition: true, scopeLine: 1361, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2585 = !DILocalVariable(name: "avctx", arg: 1, scope: !2586, file: !1104, line: 280, type: !1088)
!2586 = distinct !DISubprogram(name: "ff_samples_to_time_base", scope: !1104, file: !1104, line: 280, type: !2587, isLocal: true, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!960, !1088, !960}
!2589 = !DILocation(line: 280, column: 94, scope: !2586, inlinedAt: !2590)
!2590 = distinct !DILocation(line: 1440, column: 23, scope: !2584)
!2591 = !DILocalVariable(name: "samples", arg: 2, scope: !2586, file: !1104, line: 281, type: !960)
!2592 = !DILocation(line: 281, column: 65, scope: !2586, inlinedAt: !2590)
!2593 = !DILocalVariable(name: "avctx", arg: 1, scope: !2584, file: !910, line: 1359, type: !1088)
!2594 = !DILocation(line: 1359, column: 46, scope: !2584)
!2595 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2584, file: !910, line: 1359, type: !1233)
!2596 = !DILocation(line: 1359, column: 63, scope: !2584)
!2597 = !DILocalVariable(name: "frame", arg: 3, scope: !2584, file: !910, line: 1360, type: !1377)
!2598 = !DILocation(line: 1360, column: 45, scope: !2584)
!2599 = !DILocalVariable(name: "got_packet_ptr", arg: 4, scope: !2584, file: !910, line: 1360, type: !1379)
!2600 = !DILocation(line: 1360, column: 57, scope: !2584)
!2601 = !DILocalVariable(name: "s", scope: !2584, file: !910, line: 1362, type: !1741)
!2602 = !DILocation(line: 1362, column: 24, scope: !2584)
!2603 = !DILocalVariable(name: "frame_bytes", scope: !2584, file: !910, line: 1363, type: !954)
!2604 = !DILocation(line: 1363, column: 9, scope: !2584)
!2605 = !DILocalVariable(name: "out_bytes", scope: !2584, file: !910, line: 1363, type: !954)
!2606 = !DILocation(line: 1363, column: 22, scope: !2584)
!2607 = !DILocalVariable(name: "ret", scope: !2584, file: !910, line: 1363, type: !954)
!2608 = !DILocation(line: 1363, column: 33, scope: !2584)
!2609 = !DILocation(line: 1365, column: 9, scope: !2584)
!2610 = !DILocation(line: 1365, column: 16, scope: !2584)
!2611 = !DILocation(line: 1365, column: 7, scope: !2584)
!2612 = !DILocation(line: 1368, column: 10, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1368, column: 9)
!2614 = !DILocation(line: 1368, column: 9, scope: !2584)
!2615 = !DILocation(line: 1369, column: 28, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2613, file: !910, line: 1368, column: 17)
!2617 = !DILocation(line: 1369, column: 31, scope: !2616)
!2618 = !DILocation(line: 1369, column: 9, scope: !2616)
!2619 = !DILocation(line: 1369, column: 12, scope: !2616)
!2620 = !DILocation(line: 1369, column: 26, scope: !2616)
!2621 = !DILocation(line: 1370, column: 22, scope: !2616)
!2622 = !DILocation(line: 1370, column: 25, scope: !2616)
!2623 = !DILocation(line: 1370, column: 33, scope: !2616)
!2624 = !DILocation(line: 1370, column: 36, scope: !2616)
!2625 = !DILocation(line: 1370, column: 9, scope: !2616)
!2626 = !DILocation(line: 1371, column: 26, scope: !2616)
!2627 = !DILocation(line: 1371, column: 29, scope: !2616)
!2628 = !DILocation(line: 1371, column: 36, scope: !2616)
!2629 = !DILocation(line: 1371, column: 9, scope: !2616)
!2630 = !DILocation(line: 1375, column: 13, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2616, file: !910, line: 1375, column: 13)
!2632 = !DILocation(line: 1375, column: 20, scope: !2631)
!2633 = !DILocation(line: 1375, column: 43, scope: !2631)
!2634 = !DILocation(line: 1375, column: 47, scope: !2635)
!2635 = !DILexicalBlockFile(scope: !2631, file: !910, discriminator: 1)
!2636 = !DILocation(line: 1375, column: 50, scope: !2635)
!2637 = !DILocation(line: 1375, column: 13, scope: !2635)
!2638 = !DILocalVariable(name: "side_data", scope: !2639, file: !910, line: 1380, type: !959)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !910, line: 1375, column: 59)
!2640 = !DILocation(line: 1380, column: 22, scope: !2639)
!2641 = !DILocation(line: 1380, column: 58, scope: !2639)
!2642 = !DILocation(line: 1381, column: 58, scope: !2639)
!2643 = !DILocation(line: 1381, column: 65, scope: !2639)
!2644 = !DILocation(line: 1380, column: 34, scope: !2639)
!2645 = !DILocation(line: 1382, column: 18, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2639, file: !910, line: 1382, column: 17)
!2647 = !DILocation(line: 1382, column: 17, scope: !2639)
!2648 = !DILocation(line: 1383, column: 17, scope: !2646)
!2649 = !DILocation(line: 1384, column: 20, scope: !2639)
!2650 = !DILocation(line: 1384, column: 31, scope: !2639)
!2651 = !DILocation(line: 1384, column: 38, scope: !2639)
!2652 = !DILocation(line: 1384, column: 49, scope: !2639)
!2653 = !DILocation(line: 1384, column: 56, scope: !2639)
!2654 = !DILocation(line: 1384, column: 13, scope: !2639)
!2655 = !DILocation(line: 1386, column: 26, scope: !2639)
!2656 = !DILocation(line: 1386, column: 29, scope: !2639)
!2657 = !DILocation(line: 1386, column: 13, scope: !2639)
!2658 = !DILocation(line: 1386, column: 20, scope: !2639)
!2659 = !DILocation(line: 1386, column: 24, scope: !2639)
!2660 = !DILocation(line: 1388, column: 14, scope: !2639)
!2661 = !DILocation(line: 1388, column: 29, scope: !2639)
!2662 = !DILocation(line: 1389, column: 13, scope: !2639)
!2663 = !DILocation(line: 1389, column: 16, scope: !2639)
!2664 = !DILocation(line: 1389, column: 24, scope: !2639)
!2665 = !DILocation(line: 1390, column: 9, scope: !2639)
!2666 = !DILocation(line: 1392, column: 9, scope: !2616)
!2667 = !DILocation(line: 1396, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1396, column: 9)
!2669 = !DILocation(line: 1396, column: 16, scope: !2668)
!2670 = !DILocation(line: 1396, column: 29, scope: !2668)
!2671 = !DILocation(line: 1396, column: 32, scope: !2668)
!2672 = !DILocation(line: 1396, column: 38, scope: !2668)
!2673 = !DILocation(line: 1396, column: 27, scope: !2668)
!2674 = !DILocation(line: 1396, column: 9, scope: !2584)
!2675 = !DILocation(line: 1397, column: 55, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2668, file: !910, line: 1396, column: 49)
!2677 = !DILocation(line: 1397, column: 62, scope: !2676)
!2678 = !DILocation(line: 1398, column: 55, scope: !2676)
!2679 = !DILocation(line: 1398, column: 58, scope: !2676)
!2680 = !DILocation(line: 1399, column: 55, scope: !2676)
!2681 = !DILocation(line: 1399, column: 62, scope: !2676)
!2682 = !DILocation(line: 1397, column: 28, scope: !2676)
!2683 = !DILocation(line: 1397, column: 9, scope: !2676)
!2684 = !DILocation(line: 1397, column: 12, scope: !2676)
!2685 = !DILocation(line: 1397, column: 26, scope: !2676)
!2686 = !DILocation(line: 1400, column: 5, scope: !2676)
!2687 = !DILocation(line: 1402, column: 16, scope: !2584)
!2688 = !DILocation(line: 1402, column: 19, scope: !2584)
!2689 = !DILocation(line: 1402, column: 26, scope: !2584)
!2690 = !DILocation(line: 1402, column: 5, scope: !2584)
!2691 = !DILocation(line: 1404, column: 18, scope: !2584)
!2692 = !DILocation(line: 1404, column: 21, scope: !2584)
!2693 = !DILocation(line: 1404, column: 28, scope: !2584)
!2694 = !DILocation(line: 1404, column: 5, scope: !2584)
!2695 = !DILocation(line: 1406, column: 27, scope: !2584)
!2696 = !DILocation(line: 1406, column: 5, scope: !2584)
!2697 = !DILocation(line: 1408, column: 24, scope: !2584)
!2698 = !DILocation(line: 1408, column: 5, scope: !2584)
!2699 = !DILocation(line: 1410, column: 32, scope: !2584)
!2700 = !DILocation(line: 1410, column: 19, scope: !2584)
!2701 = !DILocation(line: 1410, column: 17, scope: !2584)
!2702 = !DILocation(line: 1414, column: 9, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1414, column: 9)
!2704 = !DILocation(line: 1414, column: 21, scope: !2703)
!2705 = !DILocation(line: 1414, column: 25, scope: !2703)
!2706 = !DILocation(line: 1414, column: 28, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !2703, file: !910, discriminator: 1)
!2708 = !DILocation(line: 1414, column: 42, scope: !2707)
!2709 = !DILocation(line: 1414, column: 45, scope: !2707)
!2710 = !DILocation(line: 1414, column: 40, scope: !2707)
!2711 = !DILocation(line: 1414, column: 9, scope: !2707)
!2712 = !DILocation(line: 1415, column: 9, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2703, file: !910, line: 1414, column: 60)
!2714 = !DILocation(line: 1415, column: 12, scope: !2713)
!2715 = !DILocation(line: 1415, column: 18, scope: !2713)
!2716 = !DILocation(line: 1415, column: 32, scope: !2713)
!2717 = !DILocation(line: 1416, column: 36, scope: !2713)
!2718 = !DILocation(line: 1416, column: 23, scope: !2713)
!2719 = !DILocation(line: 1416, column: 21, scope: !2713)
!2720 = !DILocation(line: 1417, column: 13, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2713, file: !910, line: 1417, column: 13)
!2722 = !DILocation(line: 1417, column: 25, scope: !2721)
!2723 = !DILocation(line: 1417, column: 13, scope: !2713)
!2724 = !DILocation(line: 1418, column: 20, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2721, file: !910, line: 1417, column: 30)
!2726 = !DILocation(line: 1418, column: 13, scope: !2725)
!2727 = !DILocation(line: 1419, column: 20, scope: !2725)
!2728 = !DILocation(line: 1419, column: 13, scope: !2725)
!2729 = !DILocation(line: 1421, column: 5, scope: !2713)
!2730 = !DILocation(line: 1423, column: 33, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1423, column: 9)
!2732 = !DILocation(line: 1423, column: 40, scope: !2731)
!2733 = !DILocation(line: 1423, column: 47, scope: !2731)
!2734 = !DILocation(line: 1423, column: 16, scope: !2731)
!2735 = !DILocation(line: 1423, column: 14, scope: !2731)
!2736 = !DILocation(line: 1423, column: 64, scope: !2731)
!2737 = !DILocation(line: 1423, column: 9, scope: !2584)
!2738 = !DILocation(line: 1424, column: 16, scope: !2731)
!2739 = !DILocation(line: 1424, column: 9, scope: !2731)
!2740 = !DILocation(line: 1426, column: 29, scope: !2584)
!2741 = !DILocation(line: 1426, column: 32, scope: !2584)
!2742 = !DILocation(line: 1426, column: 17, scope: !2584)
!2743 = !DILocation(line: 1426, column: 15, scope: !2584)
!2744 = !DILocation(line: 1428, column: 5, scope: !2584)
!2745 = !DILocation(line: 1428, column: 8, scope: !2584)
!2746 = !DILocation(line: 1428, column: 19, scope: !2584)
!2747 = !DILocation(line: 1429, column: 24, scope: !2584)
!2748 = !DILocation(line: 1429, column: 31, scope: !2584)
!2749 = !DILocation(line: 1429, column: 5, scope: !2584)
!2750 = !DILocation(line: 1429, column: 8, scope: !2584)
!2751 = !DILocation(line: 1429, column: 21, scope: !2584)
!2752 = !DILocation(line: 1430, column: 31, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1430, column: 9)
!2754 = !DILocation(line: 1430, column: 34, scope: !2753)
!2755 = !DILocation(line: 1430, column: 41, scope: !2753)
!2756 = !DILocation(line: 1430, column: 16, scope: !2753)
!2757 = !DILocation(line: 1430, column: 14, scope: !2753)
!2758 = !DILocation(line: 1430, column: 51, scope: !2753)
!2759 = !DILocation(line: 1430, column: 9, scope: !2584)
!2760 = !DILocation(line: 1431, column: 16, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2753, file: !910, line: 1430, column: 56)
!2762 = !DILocation(line: 1431, column: 9, scope: !2761)
!2763 = !DILocation(line: 1432, column: 16, scope: !2761)
!2764 = !DILocation(line: 1432, column: 9, scope: !2761)
!2765 = !DILocation(line: 1434, column: 9, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1434, column: 9)
!2767 = !DILocation(line: 1434, column: 21, scope: !2766)
!2768 = !DILocation(line: 1434, column: 24, scope: !2766)
!2769 = !DILocation(line: 1434, column: 19, scope: !2766)
!2770 = !DILocation(line: 1434, column: 9, scope: !2584)
!2771 = !DILocation(line: 1435, column: 36, scope: !2766)
!2772 = !DILocation(line: 1435, column: 9, scope: !2766)
!2773 = !DILocation(line: 1435, column: 12, scope: !2766)
!2774 = !DILocation(line: 1435, column: 34, scope: !2766)
!2775 = !DILocation(line: 1436, column: 9, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2584, file: !910, line: 1436, column: 9)
!2777 = !DILocation(line: 1436, column: 21, scope: !2776)
!2778 = !DILocation(line: 1436, column: 24, scope: !2776)
!2779 = !DILocation(line: 1436, column: 19, scope: !2776)
!2780 = !DILocation(line: 1436, column: 9, scope: !2584)
!2781 = !DILocation(line: 1437, column: 28, scope: !2776)
!2782 = !DILocation(line: 1437, column: 9, scope: !2776)
!2783 = !DILocation(line: 1437, column: 12, scope: !2776)
!2784 = !DILocation(line: 1437, column: 26, scope: !2776)
!2785 = !DILocation(line: 1439, column: 18, scope: !2584)
!2786 = !DILocation(line: 1439, column: 25, scope: !2584)
!2787 = !DILocation(line: 1439, column: 5, scope: !2584)
!2788 = !DILocation(line: 1439, column: 12, scope: !2584)
!2789 = !DILocation(line: 1439, column: 16, scope: !2584)
!2790 = !DILocation(line: 1440, column: 47, scope: !2584)
!2791 = !DILocation(line: 1440, column: 54, scope: !2584)
!2792 = !DILocation(line: 1440, column: 61, scope: !2584)
!2793 = !DILocation(line: 1440, column: 23, scope: !2584)
!2794 = !DILocation(line: 283, column: 8, scope: !2795, inlinedAt: !2590)
!2795 = distinct !DILexicalBlock(scope: !2586, file: !1104, line: 283, column: 8)
!2796 = !DILocation(line: 283, column: 16, scope: !2795, inlinedAt: !2590)
!2797 = !DILocation(line: 283, column: 8, scope: !2586, inlinedAt: !2590)
!2798 = !DILocation(line: 284, column: 9, scope: !2795, inlinedAt: !2590)
!2799 = !DILocation(line: 285, column: 25, scope: !2586, inlinedAt: !2590)
!2800 = !DILocation(line: 285, column: 46, scope: !2586, inlinedAt: !2590)
!2801 = !DILocation(line: 285, column: 51, scope: !2586, inlinedAt: !2590)
!2802 = !DILocation(line: 285, column: 58, scope: !2586, inlinedAt: !2590)
!2803 = !DILocation(line: 286, column: 25, scope: !2586, inlinedAt: !2590)
!2804 = !DILocation(line: 286, column: 32, scope: !2586, inlinedAt: !2590)
!2805 = !DILocation(line: 285, column: 12, scope: !2586, inlinedAt: !2590)
!2806 = !DILocation(line: 285, column: 5, scope: !2586, inlinedAt: !2590)
!2807 = !DILocation(line: 287, column: 1, scope: !2586, inlinedAt: !2590)
!2808 = !DILocation(line: 1440, column: 5, scope: !2584)
!2809 = !DILocation(line: 1440, column: 12, scope: !2584)
!2810 = !DILocation(line: 1440, column: 21, scope: !2584)
!2811 = !DILocation(line: 1441, column: 19, scope: !2584)
!2812 = !DILocation(line: 1441, column: 5, scope: !2584)
!2813 = !DILocation(line: 1441, column: 12, scope: !2584)
!2814 = !DILocation(line: 1441, column: 17, scope: !2584)
!2815 = !DILocation(line: 1443, column: 19, scope: !2584)
!2816 = !DILocation(line: 1443, column: 26, scope: !2584)
!2817 = !DILocation(line: 1443, column: 32, scope: !2584)
!2818 = !DILocation(line: 1443, column: 39, scope: !2584)
!2819 = !DILocation(line: 1443, column: 30, scope: !2584)
!2820 = !DILocation(line: 1443, column: 5, scope: !2584)
!2821 = !DILocation(line: 1443, column: 8, scope: !2584)
!2822 = !DILocation(line: 1443, column: 17, scope: !2584)
!2823 = !DILocation(line: 1445, column: 6, scope: !2584)
!2824 = !DILocation(line: 1445, column: 21, scope: !2584)
!2825 = !DILocation(line: 1446, column: 5, scope: !2584)
!2826 = !DILocation(line: 1447, column: 1, scope: !2584)
!2827 = distinct !DISubprogram(name: "flac_encode_close", scope: !910, file: !910, line: 1450, type: !1086, isLocal: true, isDefinition: true, scopeLine: 1451, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2828 = !DILocalVariable(name: "avctx", arg: 1, scope: !2827, file: !910, line: 1450, type: !1088)
!2829 = !DILocation(line: 1450, column: 68, scope: !2827)
!2830 = !DILocation(line: 1452, column: 9, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2827, file: !910, line: 1452, column: 9)
!2832 = !DILocation(line: 1452, column: 16, scope: !2831)
!2833 = !DILocation(line: 1452, column: 9, scope: !2827)
!2834 = !DILocalVariable(name: "s", scope: !2835, file: !910, line: 1453, type: !1741)
!2835 = distinct !DILexicalBlock(scope: !2831, file: !910, line: 1452, column: 27)
!2836 = !DILocation(line: 1453, column: 28, scope: !2835)
!2837 = !DILocation(line: 1453, column: 32, scope: !2835)
!2838 = !DILocation(line: 1453, column: 39, scope: !2835)
!2839 = !DILocation(line: 1454, column: 19, scope: !2835)
!2840 = !DILocation(line: 1454, column: 22, scope: !2835)
!2841 = !DILocation(line: 1454, column: 18, scope: !2835)
!2842 = !DILocation(line: 1454, column: 9, scope: !2835)
!2843 = !DILocation(line: 1455, column: 19, scope: !2835)
!2844 = !DILocation(line: 1455, column: 22, scope: !2835)
!2845 = !DILocation(line: 1455, column: 18, scope: !2835)
!2846 = !DILocation(line: 1455, column: 9, scope: !2835)
!2847 = !DILocation(line: 1456, column: 21, scope: !2835)
!2848 = !DILocation(line: 1456, column: 24, scope: !2835)
!2849 = !DILocation(line: 1456, column: 9, scope: !2835)
!2850 = !DILocation(line: 1457, column: 5, scope: !2835)
!2851 = !DILocation(line: 1458, column: 15, scope: !2827)
!2852 = !DILocation(line: 1458, column: 22, scope: !2827)
!2853 = !DILocation(line: 1458, column: 14, scope: !2827)
!2854 = !DILocation(line: 1458, column: 5, scope: !2827)
!2855 = !DILocation(line: 1459, column: 5, scope: !2827)
!2856 = !DILocation(line: 1459, column: 12, scope: !2827)
!2857 = !DILocation(line: 1459, column: 27, scope: !2827)
!2858 = !DILocation(line: 1460, column: 5, scope: !2827)
!2859 = distinct !DISubprogram(name: "select_blocksize", scope: !910, file: !910, line: 162, type: !2860, isLocal: true, isDefinition: true, scopeLine: 163, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!954, !954, !954}
!2862 = !DILocalVariable(name: "samplerate", arg: 1, scope: !2859, file: !910, line: 162, type: !954)
!2863 = !DILocation(line: 162, column: 33, scope: !2859)
!2864 = !DILocalVariable(name: "block_time_ms", arg: 2, scope: !2859, file: !910, line: 162, type: !954)
!2865 = !DILocation(line: 162, column: 49, scope: !2859)
!2866 = !DILocalVariable(name: "i", scope: !2859, file: !910, line: 164, type: !954)
!2867 = !DILocation(line: 164, column: 9, scope: !2859)
!2868 = !DILocalVariable(name: "target", scope: !2859, file: !910, line: 165, type: !954)
!2869 = !DILocation(line: 165, column: 9, scope: !2859)
!2870 = !DILocalVariable(name: "blocksize", scope: !2859, file: !910, line: 166, type: !954)
!2871 = !DILocation(line: 166, column: 9, scope: !2859)
!2872 = !DILocation(line: 168, column: 5, scope: !2859)
!2873 = distinct !{!2873, !2872}
!2874 = !DILocation(line: 168, column: 16, scope: !2875)
!2875 = !DILexicalBlockFile(scope: !2876, file: !910, discriminator: 1)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !910, line: 168, column: 14)
!2877 = distinct !DILexicalBlock(scope: !2859, file: !910, line: 168, column: 8)
!2878 = !DILocation(line: 168, column: 27, scope: !2875)
!2879 = !DILocation(line: 168, column: 14, scope: !2875)
!2880 = !DILocation(line: 168, column: 35, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2882, file: !910, discriminator: 2)
!2882 = distinct !DILexicalBlock(scope: !2876, file: !910, line: 168, column: 33)
!2883 = !DILocation(line: 168, column: 91, scope: !2884)
!2884 = !DILexicalBlockFile(scope: !2881, file: !910, discriminator: 4)
!2885 = !DILocation(line: 168, column: 91, scope: !2881)
!2886 = !DILocation(line: 168, column: 102, scope: !2887)
!2887 = !DILexicalBlockFile(scope: !2877, file: !910, discriminator: 3)
!2888 = !DILocation(line: 169, column: 17, scope: !2859)
!2889 = !DILocation(line: 169, column: 15, scope: !2859)
!2890 = !DILocation(line: 170, column: 15, scope: !2859)
!2891 = !DILocation(line: 170, column: 28, scope: !2859)
!2892 = !DILocation(line: 170, column: 26, scope: !2859)
!2893 = !DILocation(line: 170, column: 43, scope: !2859)
!2894 = !DILocation(line: 170, column: 12, scope: !2859)
!2895 = !DILocation(line: 171, column: 12, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2859, file: !910, line: 171, column: 5)
!2897 = !DILocation(line: 171, column: 10, scope: !2896)
!2898 = !DILocation(line: 171, column: 17, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !910, discriminator: 1)
!2900 = distinct !DILexicalBlock(scope: !2896, file: !910, line: 171, column: 5)
!2901 = !DILocation(line: 171, column: 19, scope: !2899)
!2902 = !DILocation(line: 171, column: 5, scope: !2899)
!2903 = !DILocation(line: 172, column: 13, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2905, file: !910, line: 172, column: 13)
!2905 = distinct !DILexicalBlock(scope: !2900, file: !910, line: 171, column: 30)
!2906 = !DILocation(line: 172, column: 47, scope: !2904)
!2907 = !DILocation(line: 172, column: 23, scope: !2904)
!2908 = !DILocation(line: 172, column: 20, scope: !2904)
!2909 = !DILocation(line: 172, column: 50, scope: !2904)
!2910 = !DILocation(line: 173, column: 37, scope: !2904)
!2911 = !DILocation(line: 173, column: 13, scope: !2904)
!2912 = !DILocation(line: 173, column: 42, scope: !2904)
!2913 = !DILocation(line: 173, column: 40, scope: !2904)
!2914 = !DILocation(line: 172, column: 13, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2905, file: !910, discriminator: 1)
!2916 = !DILocation(line: 174, column: 49, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2904, file: !910, line: 173, column: 53)
!2918 = !DILocation(line: 174, column: 25, scope: !2917)
!2919 = !DILocation(line: 174, column: 23, scope: !2917)
!2920 = !DILocation(line: 175, column: 9, scope: !2917)
!2921 = !DILocation(line: 176, column: 5, scope: !2905)
!2922 = !DILocation(line: 171, column: 26, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2900, file: !910, discriminator: 2)
!2924 = !DILocation(line: 171, column: 5, scope: !2923)
!2925 = distinct !{!2925, !2926}
!2926 = !DILocation(line: 171, column: 5, scope: !2859)
!2927 = !DILocation(line: 177, column: 12, scope: !2859)
!2928 = !DILocation(line: 177, column: 5, scope: !2859)
!2929 = distinct !DISubprogram(name: "write_streaminfo", scope: !910, file: !910, line: 135, type: !2930, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{null, !1741, !959}
!2932 = !DILocalVariable(name: "s", arg: 1, scope: !2929, file: !910, line: 135, type: !1741)
!2933 = !DILocation(line: 135, column: 49, scope: !2929)
!2934 = !DILocalVariable(name: "header", arg: 2, scope: !2929, file: !910, line: 135, type: !959)
!2935 = !DILocation(line: 135, column: 61, scope: !2929)
!2936 = !DILocalVariable(name: "pb", scope: !2929, file: !910, line: 137, type: !1748)
!2937 = !DILocation(line: 137, column: 19, scope: !2929)
!2938 = !DILocation(line: 139, column: 12, scope: !2929)
!2939 = !DILocation(line: 139, column: 5, scope: !2929)
!2940 = !DILocation(line: 140, column: 24, scope: !2929)
!2941 = !DILocation(line: 140, column: 5, scope: !2929)
!2942 = !DILocation(line: 143, column: 23, scope: !2929)
!2943 = !DILocation(line: 143, column: 26, scope: !2929)
!2944 = !DILocation(line: 143, column: 5, scope: !2929)
!2945 = !DILocation(line: 144, column: 23, scope: !2929)
!2946 = !DILocation(line: 144, column: 26, scope: !2929)
!2947 = !DILocation(line: 144, column: 5, scope: !2929)
!2948 = !DILocation(line: 145, column: 23, scope: !2929)
!2949 = !DILocation(line: 145, column: 26, scope: !2929)
!2950 = !DILocation(line: 145, column: 5, scope: !2929)
!2951 = !DILocation(line: 146, column: 23, scope: !2929)
!2952 = !DILocation(line: 146, column: 26, scope: !2929)
!2953 = !DILocation(line: 146, column: 5, scope: !2929)
!2954 = !DILocation(line: 147, column: 23, scope: !2929)
!2955 = !DILocation(line: 147, column: 26, scope: !2929)
!2956 = !DILocation(line: 147, column: 5, scope: !2929)
!2957 = !DILocation(line: 148, column: 22, scope: !2929)
!2958 = !DILocation(line: 148, column: 25, scope: !2929)
!2959 = !DILocation(line: 148, column: 33, scope: !2929)
!2960 = !DILocation(line: 148, column: 5, scope: !2929)
!2961 = !DILocation(line: 149, column: 22, scope: !2929)
!2962 = !DILocation(line: 149, column: 25, scope: !2929)
!2963 = !DILocation(line: 149, column: 32, scope: !2929)
!2964 = !DILocation(line: 149, column: 52, scope: !2929)
!2965 = !DILocation(line: 149, column: 5, scope: !2929)
!2966 = !DILocation(line: 151, column: 24, scope: !2929)
!2967 = !DILocation(line: 151, column: 27, scope: !2929)
!2968 = !DILocation(line: 151, column: 40, scope: !2929)
!2969 = !DILocation(line: 151, column: 57, scope: !2929)
!2970 = !DILocation(line: 151, column: 23, scope: !2929)
!2971 = !DILocation(line: 151, column: 5, scope: !2929)
!2972 = !DILocation(line: 152, column: 23, scope: !2929)
!2973 = !DILocation(line: 152, column: 26, scope: !2929)
!2974 = !DILocation(line: 152, column: 39, scope: !2929)
!2975 = !DILocation(line: 152, column: 5, scope: !2929)
!2976 = !DILocation(line: 153, column: 5, scope: !2929)
!2977 = !DILocation(line: 154, column: 13, scope: !2929)
!2978 = !DILocation(line: 154, column: 25, scope: !2929)
!2979 = !DILocation(line: 154, column: 28, scope: !2929)
!2980 = !DILocation(line: 154, column: 5, scope: !2929)
!2981 = !DILocation(line: 155, column: 1, scope: !2929)
!2982 = distinct !DISubprogram(name: "dprint_compression_options", scope: !910, file: !910, line: 181, type: !2983, isLocal: true, isDefinition: true, scopeLine: 182, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{null, !1741}
!2985 = !DILocalVariable(name: "s", arg: 1, scope: !2982, file: !910, line: 181, type: !1741)
!2986 = !DILocation(line: 181, column: 81, scope: !2982)
!2987 = !DILocalVariable(name: "avctx", scope: !2982, file: !910, line: 183, type: !1088)
!2988 = !DILocation(line: 183, column: 21, scope: !2982)
!2989 = !DILocation(line: 183, column: 29, scope: !2982)
!2990 = !DILocation(line: 183, column: 32, scope: !2982)
!2991 = !DILocalVariable(name: "opt", scope: !2982, file: !910, line: 184, type: !2992)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64, align: 64)
!2993 = !DILocation(line: 184, column: 25, scope: !2982)
!2994 = !DILocation(line: 184, column: 32, scope: !2982)
!2995 = !DILocation(line: 184, column: 35, scope: !2982)
!2996 = !DILocation(line: 186, column: 12, scope: !2982)
!2997 = !DILocation(line: 186, column: 45, scope: !2982)
!2998 = !DILocation(line: 186, column: 50, scope: !2982)
!2999 = !DILocation(line: 186, column: 5, scope: !2982)
!3000 = !DILocation(line: 188, column: 13, scope: !2982)
!3001 = !DILocation(line: 188, column: 18, scope: !2982)
!3002 = !DILocation(line: 188, column: 5, scope: !2982)
!3003 = !DILocation(line: 190, column: 16, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2982, file: !910, line: 188, column: 28)
!3005 = !DILocation(line: 190, column: 9, scope: !3004)
!3006 = !DILocation(line: 191, column: 9, scope: !3004)
!3007 = !DILocation(line: 193, column: 16, scope: !3004)
!3008 = !DILocation(line: 193, column: 9, scope: !3004)
!3009 = !DILocation(line: 194, column: 9, scope: !3004)
!3010 = !DILocation(line: 196, column: 16, scope: !3004)
!3011 = !DILocation(line: 196, column: 9, scope: !3004)
!3012 = !DILocation(line: 197, column: 9, scope: !3004)
!3013 = !DILocation(line: 199, column: 16, scope: !3004)
!3014 = !DILocation(line: 200, column: 16, scope: !3004)
!3015 = !DILocation(line: 200, column: 21, scope: !3004)
!3016 = !DILocation(line: 200, column: 33, scope: !3004)
!3017 = !DILocation(line: 200, column: 38, scope: !3004)
!3018 = !DILocation(line: 200, column: 49, scope: !3004)
!3019 = !DILocation(line: 199, column: 9, scope: !3004)
!3020 = !DILocation(line: 201, column: 9, scope: !3004)
!3021 = !DILocation(line: 204, column: 12, scope: !2982)
!3022 = !DILocation(line: 205, column: 12, scope: !2982)
!3023 = !DILocation(line: 205, column: 17, scope: !2982)
!3024 = !DILocation(line: 205, column: 39, scope: !2982)
!3025 = !DILocation(line: 205, column: 44, scope: !2982)
!3026 = !DILocation(line: 204, column: 5, scope: !2982)
!3027 = !DILocation(line: 207, column: 13, scope: !2982)
!3028 = !DILocation(line: 207, column: 18, scope: !2982)
!3029 = !DILocation(line: 207, column: 5, scope: !2982)
!3030 = !DILocation(line: 209, column: 16, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2982, file: !910, line: 207, column: 43)
!3032 = !DILocation(line: 209, column: 9, scope: !3031)
!3033 = !DILocation(line: 210, column: 9, scope: !3031)
!3034 = !DILocation(line: 212, column: 16, scope: !3031)
!3035 = !DILocation(line: 212, column: 9, scope: !3031)
!3036 = !DILocation(line: 213, column: 9, scope: !3031)
!3037 = !DILocation(line: 215, column: 16, scope: !3031)
!3038 = !DILocation(line: 215, column: 9, scope: !3031)
!3039 = !DILocation(line: 216, column: 9, scope: !3031)
!3040 = !DILocation(line: 218, column: 16, scope: !3031)
!3041 = !DILocation(line: 218, column: 9, scope: !3031)
!3042 = !DILocation(line: 219, column: 9, scope: !3031)
!3043 = !DILocation(line: 221, column: 16, scope: !3031)
!3044 = !DILocation(line: 221, column: 9, scope: !3031)
!3045 = !DILocation(line: 222, column: 9, scope: !3031)
!3046 = !DILocation(line: 224, column: 16, scope: !3031)
!3047 = !DILocation(line: 224, column: 9, scope: !3031)
!3048 = !DILocation(line: 225, column: 9, scope: !3031)
!3049 = !DILocation(line: 229, column: 12, scope: !2982)
!3050 = !DILocation(line: 230, column: 12, scope: !2982)
!3051 = !DILocation(line: 230, column: 17, scope: !2982)
!3052 = !DILocation(line: 230, column: 38, scope: !2982)
!3053 = !DILocation(line: 230, column: 43, scope: !2982)
!3054 = !DILocation(line: 229, column: 5, scope: !2982)
!3055 = !DILocation(line: 232, column: 12, scope: !2982)
!3056 = !DILocation(line: 232, column: 44, scope: !2982)
!3057 = !DILocation(line: 232, column: 51, scope: !2982)
!3058 = !DILocation(line: 232, column: 5, scope: !2982)
!3059 = !DILocation(line: 234, column: 12, scope: !2982)
!3060 = !DILocation(line: 235, column: 12, scope: !2982)
!3061 = !DILocation(line: 235, column: 17, scope: !2982)
!3062 = !DILocation(line: 234, column: 5, scope: !2982)
!3063 = !DILocation(line: 236, column: 1, scope: !2982)
!3064 = distinct !DISubprogram(name: "init_put_bits", scope: !1749, file: !1749, line: 48, type: !3065, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !3067, !959, !954}
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64, align: 64)
!3068 = !DILocalVariable(name: "s", arg: 1, scope: !3064, file: !1749, line: 48, type: !3067)
!3069 = !DILocation(line: 48, column: 49, scope: !3064)
!3070 = !DILocalVariable(name: "buffer", arg: 2, scope: !3064, file: !1749, line: 48, type: !959)
!3071 = !DILocation(line: 48, column: 61, scope: !3064)
!3072 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !3064, file: !1749, line: 49, type: !954)
!3073 = !DILocation(line: 49, column: 38, scope: !3064)
!3074 = !DILocation(line: 51, column: 9, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3064, file: !1749, line: 51, column: 9)
!3076 = !DILocation(line: 51, column: 21, scope: !3075)
!3077 = !DILocation(line: 51, column: 9, scope: !3064)
!3078 = !DILocation(line: 52, column: 21, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !1749, line: 51, column: 26)
!3080 = !DILocation(line: 53, column: 16, scope: !3079)
!3081 = !DILocation(line: 54, column: 5, scope: !3079)
!3082 = !DILocation(line: 56, column: 27, scope: !3064)
!3083 = !DILocation(line: 56, column: 25, scope: !3064)
!3084 = !DILocation(line: 56, column: 5, scope: !3064)
!3085 = !DILocation(line: 56, column: 8, scope: !3064)
!3086 = !DILocation(line: 56, column: 21, scope: !3064)
!3087 = !DILocation(line: 57, column: 14, scope: !3064)
!3088 = !DILocation(line: 57, column: 5, scope: !3064)
!3089 = !DILocation(line: 57, column: 8, scope: !3064)
!3090 = !DILocation(line: 57, column: 12, scope: !3064)
!3091 = !DILocation(line: 58, column: 18, scope: !3064)
!3092 = !DILocation(line: 58, column: 21, scope: !3064)
!3093 = !DILocation(line: 58, column: 27, scope: !3064)
!3094 = !DILocation(line: 58, column: 25, scope: !3064)
!3095 = !DILocation(line: 58, column: 5, scope: !3064)
!3096 = !DILocation(line: 58, column: 8, scope: !3064)
!3097 = !DILocation(line: 58, column: 16, scope: !3064)
!3098 = !DILocation(line: 59, column: 18, scope: !3064)
!3099 = !DILocation(line: 59, column: 21, scope: !3064)
!3100 = !DILocation(line: 59, column: 5, scope: !3064)
!3101 = !DILocation(line: 59, column: 8, scope: !3064)
!3102 = !DILocation(line: 59, column: 16, scope: !3064)
!3103 = !DILocation(line: 60, column: 5, scope: !3064)
!3104 = !DILocation(line: 60, column: 8, scope: !3064)
!3105 = !DILocation(line: 60, column: 17, scope: !3064)
!3106 = !DILocation(line: 61, column: 5, scope: !3064)
!3107 = !DILocation(line: 61, column: 8, scope: !3064)
!3108 = !DILocation(line: 61, column: 16, scope: !3064)
!3109 = !DILocation(line: 62, column: 1, scope: !3064)
!3110 = distinct !DISubprogram(name: "put_bits", scope: !1749, file: !1749, line: 164, type: !3111, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null, !3067, !954, !951}
!3113 = !DILocalVariable(name: "x", arg: 1, scope: !3114, file: !3115, line: 66, type: !949)
!3114 = distinct !DISubprogram(name: "av_bswap32", scope: !3115, file: !3115, line: 66, type: !3116, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3115 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!949, !949}
!3118 = !DILocation(line: 66, column: 98, scope: !3114, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 197, column: 60, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !1749, line: 196, column: 42)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !1749, line: 196, column: 13)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !1749, line: 193, column: 12)
!3123 = distinct !DILexicalBlock(scope: !3110, file: !1749, line: 190, column: 9)
!3124 = !DILocalVariable(name: "s", arg: 1, scope: !3110, file: !1749, line: 164, type: !3067)
!3125 = !DILocation(line: 164, column: 44, scope: !3110)
!3126 = !DILocalVariable(name: "n", arg: 2, scope: !3110, file: !1749, line: 164, type: !954)
!3127 = !DILocation(line: 164, column: 51, scope: !3110)
!3128 = !DILocalVariable(name: "value", arg: 3, scope: !3110, file: !1749, line: 164, type: !951)
!3129 = !DILocation(line: 164, column: 67, scope: !3110)
!3130 = !DILocalVariable(name: "bit_buf", scope: !3110, file: !1749, line: 166, type: !951)
!3131 = !DILocation(line: 166, column: 18, scope: !3110)
!3132 = !DILocalVariable(name: "bit_left", scope: !3110, file: !1749, line: 167, type: !954)
!3133 = !DILocation(line: 167, column: 9, scope: !3110)
!3134 = !DILocation(line: 171, column: 15, scope: !3110)
!3135 = !DILocation(line: 171, column: 18, scope: !3110)
!3136 = !DILocation(line: 171, column: 13, scope: !3110)
!3137 = !DILocation(line: 172, column: 16, scope: !3110)
!3138 = !DILocation(line: 172, column: 19, scope: !3110)
!3139 = !DILocation(line: 172, column: 14, scope: !3110)
!3140 = !DILocation(line: 190, column: 9, scope: !3123)
!3141 = !DILocation(line: 190, column: 13, scope: !3123)
!3142 = !DILocation(line: 190, column: 11, scope: !3123)
!3143 = !DILocation(line: 190, column: 9, scope: !3110)
!3144 = !DILocation(line: 191, column: 20, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3123, file: !1749, line: 190, column: 23)
!3146 = !DILocation(line: 191, column: 31, scope: !3145)
!3147 = !DILocation(line: 191, column: 28, scope: !3145)
!3148 = !DILocation(line: 191, column: 36, scope: !3145)
!3149 = !DILocation(line: 191, column: 34, scope: !3145)
!3150 = !DILocation(line: 191, column: 17, scope: !3145)
!3151 = !DILocation(line: 192, column: 21, scope: !3145)
!3152 = !DILocation(line: 192, column: 18, scope: !3145)
!3153 = !DILocation(line: 193, column: 5, scope: !3145)
!3154 = !DILocation(line: 194, column: 21, scope: !3122)
!3155 = !DILocation(line: 194, column: 17, scope: !3122)
!3156 = !DILocation(line: 195, column: 20, scope: !3122)
!3157 = !DILocation(line: 195, column: 30, scope: !3122)
!3158 = !DILocation(line: 195, column: 34, scope: !3122)
!3159 = !DILocation(line: 195, column: 32, scope: !3122)
!3160 = !DILocation(line: 195, column: 26, scope: !3122)
!3161 = !DILocation(line: 195, column: 17, scope: !3122)
!3162 = !DILocation(line: 196, column: 17, scope: !3121)
!3163 = !DILocation(line: 196, column: 20, scope: !3121)
!3164 = !DILocation(line: 196, column: 30, scope: !3121)
!3165 = !DILocation(line: 196, column: 33, scope: !3121)
!3166 = !DILocation(line: 196, column: 28, scope: !3121)
!3167 = !DILocation(line: 196, column: 15, scope: !3121)
!3168 = !DILocation(line: 196, column: 13, scope: !3122)
!3169 = !DILocation(line: 197, column: 71, scope: !3120)
!3170 = !DILocation(line: 197, column: 60, scope: !3120)
!3171 = !DILocation(line: 68, column: 16, scope: !3114, inlinedAt: !3119)
!3172 = !DILocation(line: 68, column: 19, scope: !3114, inlinedAt: !3119)
!3173 = !DILocation(line: 68, column: 24, scope: !3114, inlinedAt: !3119)
!3174 = !DILocation(line: 68, column: 38, scope: !3114, inlinedAt: !3119)
!3175 = !DILocation(line: 68, column: 41, scope: !3114, inlinedAt: !3119)
!3176 = !DILocation(line: 68, column: 46, scope: !3114, inlinedAt: !3119)
!3177 = !DILocation(line: 68, column: 34, scope: !3114, inlinedAt: !3119)
!3178 = !DILocation(line: 68, column: 57, scope: !3114, inlinedAt: !3119)
!3179 = !DILocation(line: 68, column: 69, scope: !3114, inlinedAt: !3119)
!3180 = !DILocation(line: 68, column: 72, scope: !3114, inlinedAt: !3119)
!3181 = !DILocation(line: 68, column: 79, scope: !3114, inlinedAt: !3119)
!3182 = !DILocation(line: 68, column: 84, scope: !3114, inlinedAt: !3119)
!3183 = !DILocation(line: 68, column: 99, scope: !3114, inlinedAt: !3119)
!3184 = !DILocation(line: 68, column: 102, scope: !3114, inlinedAt: !3119)
!3185 = !DILocation(line: 68, column: 109, scope: !3114, inlinedAt: !3119)
!3186 = !DILocation(line: 68, column: 114, scope: !3114, inlinedAt: !3119)
!3187 = !DILocation(line: 68, column: 94, scope: !3114, inlinedAt: !3119)
!3188 = !DILocation(line: 68, column: 63, scope: !3114, inlinedAt: !3119)
!3189 = !DILocation(line: 197, column: 40, scope: !3120)
!3190 = !DILocation(line: 197, column: 43, scope: !3120)
!3191 = !DILocation(line: 197, column: 54, scope: !3120)
!3192 = !DILocation(line: 197, column: 57, scope: !3120)
!3193 = !DILocation(line: 198, column: 13, scope: !3120)
!3194 = !DILocation(line: 198, column: 16, scope: !3120)
!3195 = !DILocation(line: 198, column: 24, scope: !3120)
!3196 = !DILocation(line: 199, column: 9, scope: !3120)
!3197 = !DILocation(line: 200, column: 13, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3121, file: !1749, line: 199, column: 16)
!3199 = !DILocation(line: 203, column: 26, scope: !3122)
!3200 = !DILocation(line: 203, column: 24, scope: !3122)
!3201 = !DILocation(line: 203, column: 18, scope: !3122)
!3202 = !DILocation(line: 204, column: 19, scope: !3122)
!3203 = !DILocation(line: 204, column: 17, scope: !3122)
!3204 = !DILocation(line: 208, column: 18, scope: !3110)
!3205 = !DILocation(line: 208, column: 5, scope: !3110)
!3206 = !DILocation(line: 208, column: 8, scope: !3110)
!3207 = !DILocation(line: 208, column: 16, scope: !3110)
!3208 = !DILocation(line: 209, column: 19, scope: !3110)
!3209 = !DILocation(line: 209, column: 5, scope: !3110)
!3210 = !DILocation(line: 209, column: 8, scope: !3110)
!3211 = !DILocation(line: 209, column: 17, scope: !3110)
!3212 = !DILocation(line: 210, column: 1, scope: !3110)
!3213 = distinct !DISubprogram(name: "flush_put_bits", scope: !1749, file: !1749, line: 101, type: !3214, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{null, !3067}
!3216 = !DILocalVariable(name: "s", arg: 1, scope: !3213, file: !1749, line: 101, type: !3067)
!3217 = !DILocation(line: 101, column: 50, scope: !3213)
!3218 = !DILocation(line: 104, column: 9, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !1749, line: 104, column: 9)
!3220 = !DILocation(line: 104, column: 12, scope: !3219)
!3221 = !DILocation(line: 104, column: 21, scope: !3219)
!3222 = !DILocation(line: 104, column: 9, scope: !3213)
!3223 = !DILocation(line: 105, column: 24, scope: !3219)
!3224 = !DILocation(line: 105, column: 27, scope: !3219)
!3225 = !DILocation(line: 105, column: 9, scope: !3219)
!3226 = !DILocation(line: 105, column: 12, scope: !3219)
!3227 = !DILocation(line: 105, column: 20, scope: !3219)
!3228 = !DILocation(line: 107, column: 5, scope: !3213)
!3229 = !DILocation(line: 107, column: 12, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3213, file: !1749, discriminator: 1)
!3231 = !DILocation(line: 107, column: 15, scope: !3230)
!3232 = !DILocation(line: 107, column: 24, scope: !3230)
!3233 = !DILocation(line: 107, column: 5, scope: !3230)
!3234 = !DILocation(line: 108, column: 9, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3213, file: !1749, line: 107, column: 30)
!3236 = distinct !{!3236, !3234}
!3237 = !DILocation(line: 108, column: 20, scope: !3238)
!3238 = !DILexicalBlockFile(scope: !3239, file: !1749, discriminator: 1)
!3239 = distinct !DILexicalBlock(scope: !3240, file: !1749, line: 108, column: 18)
!3240 = distinct !DILexicalBlock(scope: !3235, file: !1749, line: 108, column: 12)
!3241 = !DILocation(line: 108, column: 23, scope: !3238)
!3242 = !DILocation(line: 108, column: 33, scope: !3238)
!3243 = !DILocation(line: 108, column: 36, scope: !3238)
!3244 = !DILocation(line: 108, column: 31, scope: !3238)
!3245 = !DILocation(line: 108, column: 18, scope: !3238)
!3246 = !DILocation(line: 108, column: 48, scope: !3247)
!3247 = !DILexicalBlockFile(scope: !3248, file: !1749, discriminator: 2)
!3248 = distinct !DILexicalBlock(scope: !3239, file: !1749, line: 108, column: 46)
!3249 = !DILocation(line: 108, column: 105, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3247, file: !1749, discriminator: 4)
!3251 = !DILocation(line: 108, column: 105, scope: !3247)
!3252 = !DILocation(line: 108, column: 116, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3240, file: !1749, discriminator: 3)
!3254 = !DILocation(line: 113, column: 25, scope: !3235)
!3255 = !DILocation(line: 113, column: 28, scope: !3235)
!3256 = !DILocation(line: 113, column: 36, scope: !3235)
!3257 = !DILocation(line: 113, column: 10, scope: !3235)
!3258 = !DILocation(line: 113, column: 13, scope: !3235)
!3259 = !DILocation(line: 113, column: 20, scope: !3235)
!3260 = !DILocation(line: 113, column: 23, scope: !3235)
!3261 = !DILocation(line: 114, column: 9, scope: !3235)
!3262 = !DILocation(line: 114, column: 12, scope: !3235)
!3263 = !DILocation(line: 114, column: 20, scope: !3235)
!3264 = !DILocation(line: 116, column: 9, scope: !3235)
!3265 = !DILocation(line: 116, column: 12, scope: !3235)
!3266 = !DILocation(line: 116, column: 21, scope: !3235)
!3267 = !DILocation(line: 107, column: 5, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3213, file: !1749, discriminator: 2)
!3269 = distinct !{!3269, !3228}
!3270 = !DILocation(line: 118, column: 5, scope: !3213)
!3271 = !DILocation(line: 118, column: 8, scope: !3213)
!3272 = !DILocation(line: 118, column: 17, scope: !3213)
!3273 = !DILocation(line: 119, column: 5, scope: !3213)
!3274 = !DILocation(line: 119, column: 8, scope: !3213)
!3275 = !DILocation(line: 119, column: 16, scope: !3213)
!3276 = !DILocation(line: 120, column: 1, scope: !3213)
!3277 = distinct !DISubprogram(name: "init_frame", scope: !910, file: !910, line: 470, type: !3278, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{null, !1741, !954}
!3280 = !DILocalVariable(name: "s", arg: 1, scope: !3277, file: !910, line: 470, type: !1741)
!3281 = !DILocation(line: 470, column: 43, scope: !3277)
!3282 = !DILocalVariable(name: "nb_samples", arg: 2, scope: !3277, file: !910, line: 470, type: !954)
!3283 = !DILocation(line: 470, column: 50, scope: !3277)
!3284 = !DILocalVariable(name: "i", scope: !3277, file: !910, line: 472, type: !954)
!3285 = !DILocation(line: 472, column: 9, scope: !3277)
!3286 = !DILocalVariable(name: "ch", scope: !3277, file: !910, line: 472, type: !954)
!3287 = !DILocation(line: 472, column: 12, scope: !3277)
!3288 = !DILocalVariable(name: "frame", scope: !3277, file: !910, line: 473, type: !3289)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64, align: 64)
!3290 = !DILocation(line: 473, column: 16, scope: !3277)
!3291 = !DILocation(line: 475, column: 14, scope: !3277)
!3292 = !DILocation(line: 475, column: 17, scope: !3277)
!3293 = !DILocation(line: 475, column: 11, scope: !3277)
!3294 = !DILocation(line: 477, column: 12, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3277, file: !910, line: 477, column: 5)
!3296 = !DILocation(line: 477, column: 10, scope: !3295)
!3297 = !DILocation(line: 477, column: 17, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3299, file: !910, discriminator: 1)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !910, line: 477, column: 5)
!3300 = !DILocation(line: 477, column: 19, scope: !3298)
!3301 = !DILocation(line: 477, column: 5, scope: !3298)
!3302 = !DILocation(line: 478, column: 13, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !910, line: 478, column: 13)
!3304 = distinct !DILexicalBlock(scope: !3299, file: !910, line: 477, column: 30)
!3305 = !DILocation(line: 478, column: 51, scope: !3303)
!3306 = !DILocation(line: 478, column: 27, scope: !3303)
!3307 = !DILocation(line: 478, column: 24, scope: !3303)
!3308 = !DILocation(line: 478, column: 13, scope: !3304)
!3309 = !DILocation(line: 479, column: 56, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3303, file: !910, line: 478, column: 55)
!3311 = !DILocation(line: 479, column: 32, scope: !3310)
!3312 = !DILocation(line: 479, column: 13, scope: !3310)
!3313 = !DILocation(line: 479, column: 20, scope: !3310)
!3314 = !DILocation(line: 479, column: 30, scope: !3310)
!3315 = !DILocation(line: 480, column: 33, scope: !3310)
!3316 = !DILocation(line: 480, column: 13, scope: !3310)
!3317 = !DILocation(line: 480, column: 20, scope: !3310)
!3318 = !DILocation(line: 480, column: 31, scope: !3310)
!3319 = !DILocation(line: 481, column: 13, scope: !3310)
!3320 = !DILocation(line: 481, column: 20, scope: !3310)
!3321 = !DILocation(line: 481, column: 31, scope: !3310)
!3322 = !DILocation(line: 482, column: 13, scope: !3310)
!3323 = !DILocation(line: 484, column: 5, scope: !3304)
!3324 = !DILocation(line: 477, column: 26, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3299, file: !910, discriminator: 2)
!3326 = !DILocation(line: 477, column: 5, scope: !3325)
!3327 = distinct !{!3327, !3328}
!3328 = !DILocation(line: 477, column: 5, scope: !3277)
!3329 = !DILocation(line: 485, column: 9, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3277, file: !910, line: 485, column: 9)
!3331 = !DILocation(line: 485, column: 11, scope: !3330)
!3332 = !DILocation(line: 485, column: 9, scope: !3277)
!3333 = !DILocation(line: 486, column: 28, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3330, file: !910, line: 485, column: 18)
!3335 = !DILocation(line: 486, column: 9, scope: !3334)
!3336 = !DILocation(line: 486, column: 16, scope: !3334)
!3337 = !DILocation(line: 486, column: 26, scope: !3334)
!3338 = !DILocation(line: 487, column: 13, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3334, file: !910, line: 487, column: 13)
!3340 = !DILocation(line: 487, column: 20, scope: !3339)
!3341 = !DILocation(line: 487, column: 30, scope: !3339)
!3342 = !DILocation(line: 487, column: 13, scope: !3334)
!3343 = !DILocation(line: 488, column: 13, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !910, line: 487, column: 38)
!3345 = !DILocation(line: 488, column: 20, scope: !3344)
!3346 = !DILocation(line: 488, column: 31, scope: !3344)
!3347 = !DILocation(line: 489, column: 33, scope: !3344)
!3348 = !DILocation(line: 489, column: 40, scope: !3344)
!3349 = !DILocation(line: 489, column: 49, scope: !3344)
!3350 = !DILocation(line: 489, column: 13, scope: !3344)
!3351 = !DILocation(line: 489, column: 20, scope: !3344)
!3352 = !DILocation(line: 489, column: 31, scope: !3344)
!3353 = !DILocation(line: 490, column: 9, scope: !3344)
!3354 = !DILocation(line: 491, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3339, file: !910, line: 490, column: 16)
!3356 = !DILocation(line: 491, column: 20, scope: !3355)
!3357 = !DILocation(line: 491, column: 31, scope: !3355)
!3358 = !DILocation(line: 492, column: 33, scope: !3355)
!3359 = !DILocation(line: 492, column: 40, scope: !3355)
!3360 = !DILocation(line: 492, column: 49, scope: !3355)
!3361 = !DILocation(line: 492, column: 13, scope: !3355)
!3362 = !DILocation(line: 492, column: 20, scope: !3355)
!3363 = !DILocation(line: 492, column: 31, scope: !3355)
!3364 = !DILocation(line: 494, column: 5, scope: !3334)
!3365 = !DILocation(line: 496, column: 13, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3277, file: !910, line: 496, column: 5)
!3367 = !DILocation(line: 496, column: 10, scope: !3366)
!3368 = !DILocation(line: 496, column: 18, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3370, file: !910, discriminator: 1)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !910, line: 496, column: 5)
!3371 = !DILocation(line: 496, column: 23, scope: !3369)
!3372 = !DILocation(line: 496, column: 26, scope: !3369)
!3373 = !DILocation(line: 496, column: 21, scope: !3369)
!3374 = !DILocation(line: 496, column: 5, scope: !3369)
!3375 = !DILocalVariable(name: "sub", scope: !3376, file: !910, line: 497, type: !3377)
!3376 = distinct !DILexicalBlock(scope: !3370, file: !910, line: 496, column: 42)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!3378 = !DILocation(line: 497, column: 23, scope: !3376)
!3379 = !DILocation(line: 497, column: 47, scope: !3376)
!3380 = !DILocation(line: 497, column: 30, scope: !3376)
!3381 = !DILocation(line: 497, column: 37, scope: !3376)
!3382 = !DILocation(line: 499, column: 9, scope: !3376)
!3383 = !DILocation(line: 499, column: 14, scope: !3376)
!3384 = !DILocation(line: 499, column: 21, scope: !3376)
!3385 = !DILocation(line: 500, column: 22, scope: !3376)
!3386 = !DILocation(line: 500, column: 25, scope: !3376)
!3387 = !DILocation(line: 500, column: 32, scope: !3376)
!3388 = !DILocation(line: 500, column: 9, scope: !3376)
!3389 = !DILocation(line: 500, column: 14, scope: !3376)
!3390 = !DILocation(line: 500, column: 20, scope: !3376)
!3391 = !DILocation(line: 502, column: 13, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3376, file: !910, line: 502, column: 13)
!3393 = !DILocation(line: 502, column: 18, scope: !3392)
!3394 = !DILocation(line: 502, column: 24, scope: !3392)
!3395 = !DILocation(line: 502, column: 13, scope: !3376)
!3396 = !DILocation(line: 503, column: 13, scope: !3392)
!3397 = !DILocation(line: 503, column: 18, scope: !3392)
!3398 = !DILocation(line: 503, column: 21, scope: !3392)
!3399 = !DILocation(line: 503, column: 33, scope: !3392)
!3400 = !DILocation(line: 505, column: 13, scope: !3392)
!3401 = !DILocation(line: 505, column: 18, scope: !3392)
!3402 = !DILocation(line: 505, column: 21, scope: !3392)
!3403 = !DILocation(line: 505, column: 33, scope: !3392)
!3404 = !DILocation(line: 506, column: 5, scope: !3376)
!3405 = !DILocation(line: 496, column: 38, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3370, file: !910, discriminator: 2)
!3407 = !DILocation(line: 496, column: 5, scope: !3406)
!3408 = distinct !{!3408, !3409}
!3409 = !DILocation(line: 496, column: 5, scope: !3277)
!3410 = !DILocation(line: 508, column: 5, scope: !3277)
!3411 = !DILocation(line: 508, column: 12, scope: !3277)
!3412 = !DILocation(line: 508, column: 26, scope: !3277)
!3413 = !DILocation(line: 509, column: 1, scope: !3277)
!3414 = distinct !DISubprogram(name: "copy_samples", scope: !910, file: !910, line: 515, type: !3415, isLocal: true, isDefinition: true, scopeLine: 516, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{null, !1741, !3417}
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64, align: 64)
!3418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3419 = !DILocalVariable(name: "s", arg: 1, scope: !3414, file: !910, line: 515, type: !1741)
!3420 = !DILocation(line: 515, column: 45, scope: !3414)
!3421 = !DILocalVariable(name: "samples", arg: 2, scope: !3414, file: !910, line: 515, type: !3417)
!3422 = !DILocation(line: 515, column: 60, scope: !3414)
!3423 = !DILocalVariable(name: "i", scope: !3414, file: !910, line: 517, type: !954)
!3424 = !DILocation(line: 517, column: 9, scope: !3414)
!3425 = !DILocalVariable(name: "j", scope: !3414, file: !910, line: 517, type: !954)
!3426 = !DILocation(line: 517, column: 12, scope: !3414)
!3427 = !DILocalVariable(name: "ch", scope: !3414, file: !910, line: 517, type: !954)
!3428 = !DILocation(line: 517, column: 15, scope: !3414)
!3429 = !DILocalVariable(name: "frame", scope: !3414, file: !910, line: 518, type: !3289)
!3430 = !DILocation(line: 518, column: 16, scope: !3414)
!3431 = !DILocalVariable(name: "shift", scope: !3414, file: !910, line: 519, type: !954)
!3432 = !DILocation(line: 519, column: 9, scope: !3414)
!3433 = !DILocation(line: 519, column: 41, scope: !3414)
!3434 = !DILocation(line: 519, column: 44, scope: !3414)
!3435 = !DILocation(line: 519, column: 51, scope: !3414)
!3436 = !DILocation(line: 519, column: 17, scope: !3414)
!3437 = !DILocation(line: 519, column: 63, scope: !3414)
!3438 = !DILocation(line: 520, column: 17, scope: !3414)
!3439 = !DILocation(line: 520, column: 20, scope: !3414)
!3440 = !DILocation(line: 520, column: 27, scope: !3414)
!3441 = !DILocation(line: 519, column: 67, scope: !3414)
!3442 = !DILocation(line: 530, column: 9, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3414, file: !910, line: 530, column: 9)
!3444 = !DILocation(line: 530, column: 12, scope: !3443)
!3445 = !DILocation(line: 530, column: 19, scope: !3443)
!3446 = !DILocation(line: 530, column: 30, scope: !3443)
!3447 = !DILocation(line: 530, column: 9, scope: !3414)
!3448 = !DILocation(line: 531, column: 9, scope: !3443)
!3449 = distinct !{!3449, !3448}
!3450 = !DILocalVariable(name: "samples0", scope: !3451, file: !910, line: 531, type: !3452)
!3451 = distinct !DILexicalBlock(scope: !3443, file: !910, line: 531, column: 12)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64, align: 64)
!3453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3454)
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !953, line: 195, baseType: !3455)
!3455 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!3456 = !DILocation(line: 531, column: 29, scope: !3451)
!3457 = !DILocation(line: 531, column: 40, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3451, file: !910, discriminator: 1)
!3459 = !DILocation(line: 531, column: 29, scope: !3458)
!3460 = !DILocation(line: 531, column: 58, scope: !3458)
!3461 = !DILocation(line: 531, column: 61, scope: !3458)
!3462 = !DILocation(line: 531, column: 55, scope: !3458)
!3463 = !DILocation(line: 531, column: 75, scope: !3458)
!3464 = !DILocation(line: 531, column: 82, scope: !3458)
!3465 = !DILocation(line: 531, column: 73, scope: !3458)
!3466 = !DILocation(line: 531, column: 87, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3468, file: !910, discriminator: 2)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !910, line: 531, column: 68)
!3469 = distinct !DILexicalBlock(scope: !3451, file: !910, line: 531, column: 68)
!3470 = !DILocation(line: 531, column: 91, scope: !3467)
!3471 = !DILocation(line: 531, column: 98, scope: !3467)
!3472 = !DILocation(line: 531, column: 89, scope: !3467)
!3473 = !DILocation(line: 531, column: 68, scope: !3467)
!3474 = !DILocation(line: 531, column: 122, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3476, file: !910, discriminator: 3)
!3476 = distinct !DILexicalBlock(scope: !3468, file: !910, line: 531, column: 114)
!3477 = !DILocation(line: 531, column: 119, scope: !3475)
!3478 = !DILocation(line: 531, column: 127, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3480, file: !910, discriminator: 4)
!3480 = distinct !DILexicalBlock(scope: !3476, file: !910, line: 531, column: 114)
!3481 = !DILocation(line: 531, column: 132, scope: !3479)
!3482 = !DILocation(line: 531, column: 135, scope: !3479)
!3483 = !DILocation(line: 531, column: 130, scope: !3479)
!3484 = !DILocation(line: 531, column: 114, scope: !3479)
!3485 = !DILocation(line: 531, column: 199, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3480, file: !910, discriminator: 5)
!3487 = !DILocation(line: 531, column: 190, scope: !3486)
!3488 = !DILocation(line: 531, column: 205, scope: !3486)
!3489 = !DILocation(line: 531, column: 202, scope: !3486)
!3490 = !DILocation(line: 531, column: 185, scope: !3486)
!3491 = !DILocation(line: 531, column: 156, scope: !3486)
!3492 = !DILocation(line: 531, column: 173, scope: !3486)
!3493 = !DILocation(line: 531, column: 163, scope: !3486)
!3494 = !DILocation(line: 531, column: 177, scope: !3486)
!3495 = !DILocation(line: 531, column: 188, scope: !3486)
!3496 = !DILocation(line: 531, column: 147, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3480, file: !910, discriminator: 6)
!3498 = !DILocation(line: 531, column: 152, scope: !3497)
!3499 = !DILocation(line: 531, column: 114, scope: !3497)
!3500 = distinct !{!3500, !3501}
!3501 = !DILocation(line: 531, column: 114, scope: !3468)
!3502 = !DILocation(line: 531, column: 205, scope: !3503)
!3503 = !DILexicalBlockFile(scope: !3476, file: !910, discriminator: 7)
!3504 = !DILocation(line: 531, column: 110, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3468, file: !910, discriminator: 8)
!3506 = !DILocation(line: 531, column: 68, scope: !3505)
!3507 = distinct !{!3507, !3508}
!3508 = !DILocation(line: 531, column: 68, scope: !3451)
!3509 = !DILocation(line: 531, column: 212, scope: !3510)
!3510 = !DILexicalBlockFile(scope: !3451, file: !910, discriminator: 9)
!3511 = !DILocation(line: 531, column: 212, scope: !3512)
!3512 = !DILexicalBlockFile(scope: !3451, file: !910, discriminator: 10)
!3513 = !DILocation(line: 533, column: 9, scope: !3443)
!3514 = distinct !{!3514, !3513}
!3515 = !DILocalVariable(name: "samples0", scope: !3516, file: !910, line: 533, type: !1854)
!3516 = distinct !DILexicalBlock(scope: !3443, file: !910, line: 533, column: 12)
!3517 = !DILocation(line: 533, column: 29, scope: !3516)
!3518 = !DILocation(line: 533, column: 40, scope: !3519)
!3519 = !DILexicalBlockFile(scope: !3516, file: !910, discriminator: 1)
!3520 = !DILocation(line: 533, column: 29, scope: !3519)
!3521 = !DILocation(line: 533, column: 58, scope: !3519)
!3522 = !DILocation(line: 533, column: 61, scope: !3519)
!3523 = !DILocation(line: 533, column: 55, scope: !3519)
!3524 = !DILocation(line: 533, column: 75, scope: !3519)
!3525 = !DILocation(line: 533, column: 82, scope: !3519)
!3526 = !DILocation(line: 533, column: 73, scope: !3519)
!3527 = !DILocation(line: 533, column: 87, scope: !3528)
!3528 = !DILexicalBlockFile(scope: !3529, file: !910, discriminator: 2)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !910, line: 533, column: 68)
!3530 = distinct !DILexicalBlock(scope: !3516, file: !910, line: 533, column: 68)
!3531 = !DILocation(line: 533, column: 91, scope: !3528)
!3532 = !DILocation(line: 533, column: 98, scope: !3528)
!3533 = !DILocation(line: 533, column: 89, scope: !3528)
!3534 = !DILocation(line: 533, column: 68, scope: !3528)
!3535 = !DILocation(line: 533, column: 122, scope: !3536)
!3536 = !DILexicalBlockFile(scope: !3537, file: !910, discriminator: 3)
!3537 = distinct !DILexicalBlock(scope: !3529, file: !910, line: 533, column: 114)
!3538 = !DILocation(line: 533, column: 119, scope: !3536)
!3539 = !DILocation(line: 533, column: 127, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3541, file: !910, discriminator: 4)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !910, line: 533, column: 114)
!3542 = !DILocation(line: 533, column: 132, scope: !3540)
!3543 = !DILocation(line: 533, column: 135, scope: !3540)
!3544 = !DILocation(line: 533, column: 130, scope: !3540)
!3545 = !DILocation(line: 533, column: 114, scope: !3540)
!3546 = !DILocation(line: 533, column: 199, scope: !3547)
!3547 = !DILexicalBlockFile(scope: !3541, file: !910, discriminator: 5)
!3548 = !DILocation(line: 533, column: 190, scope: !3547)
!3549 = !DILocation(line: 533, column: 205, scope: !3547)
!3550 = !DILocation(line: 533, column: 202, scope: !3547)
!3551 = !DILocation(line: 533, column: 185, scope: !3547)
!3552 = !DILocation(line: 533, column: 156, scope: !3547)
!3553 = !DILocation(line: 533, column: 173, scope: !3547)
!3554 = !DILocation(line: 533, column: 163, scope: !3547)
!3555 = !DILocation(line: 533, column: 177, scope: !3547)
!3556 = !DILocation(line: 533, column: 188, scope: !3547)
!3557 = !DILocation(line: 533, column: 147, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3541, file: !910, discriminator: 6)
!3559 = !DILocation(line: 533, column: 152, scope: !3558)
!3560 = !DILocation(line: 533, column: 114, scope: !3558)
!3561 = distinct !{!3561, !3562}
!3562 = !DILocation(line: 533, column: 114, scope: !3529)
!3563 = !DILocation(line: 533, column: 205, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3537, file: !910, discriminator: 7)
!3565 = !DILocation(line: 533, column: 110, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3529, file: !910, discriminator: 8)
!3567 = !DILocation(line: 533, column: 68, scope: !3566)
!3568 = distinct !{!3568, !3569}
!3569 = !DILocation(line: 533, column: 68, scope: !3516)
!3570 = !DILocation(line: 533, column: 212, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !3516, file: !910, discriminator: 9)
!3572 = !DILocation(line: 534, column: 1, scope: !3414)
!3573 = distinct !DISubprogram(name: "channel_decorrelation", scope: !910, file: !910, line: 1153, type: !2983, isLocal: true, isDefinition: true, scopeLine: 1154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3574 = !DILocalVariable(name: "s", arg: 1, scope: !3573, file: !910, line: 1153, type: !1741)
!3575 = !DILocation(line: 1153, column: 54, scope: !3573)
!3576 = !DILocalVariable(name: "frame", scope: !3573, file: !910, line: 1155, type: !3289)
!3577 = !DILocation(line: 1155, column: 16, scope: !3573)
!3578 = !DILocalVariable(name: "left", scope: !3573, file: !910, line: 1156, type: !1922)
!3579 = !DILocation(line: 1156, column: 14, scope: !3573)
!3580 = !DILocalVariable(name: "right", scope: !3573, file: !910, line: 1156, type: !1922)
!3581 = !DILocation(line: 1156, column: 21, scope: !3573)
!3582 = !DILocalVariable(name: "i", scope: !3573, file: !910, line: 1157, type: !954)
!3583 = !DILocation(line: 1157, column: 9, scope: !3573)
!3584 = !DILocalVariable(name: "n", scope: !3573, file: !910, line: 1157, type: !954)
!3585 = !DILocation(line: 1157, column: 12, scope: !3573)
!3586 = !DILocation(line: 1159, column: 14, scope: !3573)
!3587 = !DILocation(line: 1159, column: 17, scope: !3573)
!3588 = !DILocation(line: 1159, column: 11, scope: !3573)
!3589 = !DILocation(line: 1160, column: 9, scope: !3573)
!3590 = !DILocation(line: 1160, column: 16, scope: !3573)
!3591 = !DILocation(line: 1160, column: 7, scope: !3573)
!3592 = !DILocation(line: 1161, column: 12, scope: !3573)
!3593 = !DILocation(line: 1161, column: 19, scope: !3573)
!3594 = !DILocation(line: 1161, column: 32, scope: !3573)
!3595 = !DILocation(line: 1161, column: 10, scope: !3573)
!3596 = !DILocation(line: 1162, column: 13, scope: !3573)
!3597 = !DILocation(line: 1162, column: 20, scope: !3573)
!3598 = !DILocation(line: 1162, column: 33, scope: !3573)
!3599 = !DILocation(line: 1162, column: 11, scope: !3573)
!3600 = !DILocation(line: 1164, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3573, file: !910, line: 1164, column: 9)
!3602 = !DILocation(line: 1164, column: 12, scope: !3601)
!3603 = !DILocation(line: 1164, column: 21, scope: !3601)
!3604 = !DILocation(line: 1164, column: 9, scope: !3573)
!3605 = !DILocation(line: 1165, column: 9, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3601, file: !910, line: 1164, column: 27)
!3607 = !DILocation(line: 1165, column: 16, scope: !3606)
!3608 = !DILocation(line: 1165, column: 24, scope: !3606)
!3609 = !DILocation(line: 1166, column: 9, scope: !3606)
!3610 = !DILocation(line: 1169, column: 9, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3573, file: !910, line: 1169, column: 9)
!3612 = !DILocation(line: 1169, column: 12, scope: !3611)
!3613 = !DILocation(line: 1169, column: 20, scope: !3611)
!3614 = !DILocation(line: 1169, column: 28, scope: !3611)
!3615 = !DILocation(line: 1169, column: 9, scope: !3573)
!3616 = !DILocalVariable(name: "max_rice_param", scope: !3617, file: !910, line: 1170, type: !954)
!3617 = distinct !DILexicalBlock(scope: !3611, file: !910, line: 1169, column: 33)
!3618 = !DILocation(line: 1170, column: 13, scope: !3617)
!3619 = !DILocation(line: 1170, column: 36, scope: !3617)
!3620 = !DILocation(line: 1170, column: 43, scope: !3617)
!3621 = !DILocation(line: 1170, column: 56, scope: !3617)
!3622 = !DILocation(line: 1170, column: 59, scope: !3617)
!3623 = !DILocation(line: 1170, column: 33, scope: !3617)
!3624 = !DILocation(line: 1170, column: 72, scope: !3617)
!3625 = !DILocation(line: 1171, column: 47, scope: !3617)
!3626 = !DILocation(line: 1171, column: 53, scope: !3617)
!3627 = !DILocation(line: 1171, column: 60, scope: !3617)
!3628 = !DILocation(line: 1171, column: 63, scope: !3617)
!3629 = !DILocation(line: 1171, column: 26, scope: !3617)
!3630 = !DILocation(line: 1171, column: 9, scope: !3617)
!3631 = !DILocation(line: 1171, column: 16, scope: !3617)
!3632 = !DILocation(line: 1171, column: 24, scope: !3617)
!3633 = !DILocation(line: 1172, column: 5, scope: !3617)
!3634 = !DILocation(line: 1173, column: 26, scope: !3611)
!3635 = !DILocation(line: 1173, column: 29, scope: !3611)
!3636 = !DILocation(line: 1173, column: 37, scope: !3611)
!3637 = !DILocation(line: 1173, column: 9, scope: !3611)
!3638 = !DILocation(line: 1173, column: 16, scope: !3611)
!3639 = !DILocation(line: 1173, column: 24, scope: !3611)
!3640 = !DILocation(line: 1176, column: 9, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3573, file: !910, line: 1176, column: 9)
!3642 = !DILocation(line: 1176, column: 16, scope: !3641)
!3643 = !DILocation(line: 1176, column: 24, scope: !3641)
!3644 = !DILocation(line: 1176, column: 9, scope: !3573)
!3645 = !DILocation(line: 1177, column: 9, scope: !3641)
!3646 = !DILocation(line: 1178, column: 9, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3573, file: !910, line: 1178, column: 9)
!3648 = !DILocation(line: 1178, column: 16, scope: !3647)
!3649 = !DILocation(line: 1178, column: 24, scope: !3647)
!3650 = !DILocation(line: 1178, column: 9, scope: !3573)
!3651 = !DILocalVariable(name: "tmp", scope: !3652, file: !910, line: 1179, type: !952)
!3652 = distinct !DILexicalBlock(scope: !3647, file: !910, line: 1178, column: 49)
!3653 = !DILocation(line: 1179, column: 17, scope: !3652)
!3654 = !DILocation(line: 1180, column: 16, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3652, file: !910, line: 1180, column: 9)
!3656 = !DILocation(line: 1180, column: 14, scope: !3655)
!3657 = !DILocation(line: 1180, column: 21, scope: !3658)
!3658 = !DILexicalBlockFile(scope: !3659, file: !910, discriminator: 1)
!3659 = distinct !DILexicalBlock(scope: !3655, file: !910, line: 1180, column: 9)
!3660 = !DILocation(line: 1180, column: 25, scope: !3658)
!3661 = !DILocation(line: 1180, column: 23, scope: !3658)
!3662 = !DILocation(line: 1180, column: 9, scope: !3658)
!3663 = !DILocation(line: 1181, column: 24, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3659, file: !910, line: 1180, column: 33)
!3665 = !DILocation(line: 1181, column: 19, scope: !3664)
!3666 = !DILocation(line: 1181, column: 17, scope: !3664)
!3667 = !DILocation(line: 1182, column: 24, scope: !3664)
!3668 = !DILocation(line: 1182, column: 36, scope: !3664)
!3669 = !DILocation(line: 1182, column: 30, scope: !3664)
!3670 = !DILocation(line: 1182, column: 28, scope: !3664)
!3671 = !DILocation(line: 1182, column: 40, scope: !3664)
!3672 = !DILocation(line: 1182, column: 18, scope: !3664)
!3673 = !DILocation(line: 1182, column: 13, scope: !3664)
!3674 = !DILocation(line: 1182, column: 21, scope: !3664)
!3675 = !DILocation(line: 1183, column: 24, scope: !3664)
!3676 = !DILocation(line: 1183, column: 36, scope: !3664)
!3677 = !DILocation(line: 1183, column: 30, scope: !3664)
!3678 = !DILocation(line: 1183, column: 28, scope: !3664)
!3679 = !DILocation(line: 1183, column: 19, scope: !3664)
!3680 = !DILocation(line: 1183, column: 13, scope: !3664)
!3681 = !DILocation(line: 1183, column: 22, scope: !3664)
!3682 = !DILocation(line: 1184, column: 9, scope: !3664)
!3683 = !DILocation(line: 1180, column: 29, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !3659, file: !910, discriminator: 2)
!3685 = !DILocation(line: 1180, column: 9, scope: !3684)
!3686 = distinct !{!3686, !3687}
!3687 = !DILocation(line: 1180, column: 9, scope: !3652)
!3688 = !DILocation(line: 1185, column: 9, scope: !3652)
!3689 = !DILocation(line: 1185, column: 16, scope: !3652)
!3690 = !DILocation(line: 1185, column: 29, scope: !3652)
!3691 = !DILocation(line: 1185, column: 34, scope: !3652)
!3692 = !DILocation(line: 1186, column: 5, scope: !3652)
!3693 = !DILocation(line: 1186, column: 16, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3695, file: !910, discriminator: 1)
!3695 = distinct !DILexicalBlock(scope: !3647, file: !910, line: 1186, column: 16)
!3696 = !DILocation(line: 1186, column: 23, scope: !3694)
!3697 = !DILocation(line: 1186, column: 31, scope: !3694)
!3698 = !DILocation(line: 1187, column: 16, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !910, line: 1187, column: 9)
!3700 = distinct !DILexicalBlock(scope: !3695, file: !910, line: 1186, column: 57)
!3701 = !DILocation(line: 1187, column: 14, scope: !3699)
!3702 = !DILocation(line: 1187, column: 21, scope: !3703)
!3703 = !DILexicalBlockFile(scope: !3704, file: !910, discriminator: 1)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !910, line: 1187, column: 9)
!3705 = !DILocation(line: 1187, column: 25, scope: !3703)
!3706 = !DILocation(line: 1187, column: 23, scope: !3703)
!3707 = !DILocation(line: 1187, column: 9, scope: !3703)
!3708 = !DILocation(line: 1188, column: 29, scope: !3704)
!3709 = !DILocation(line: 1188, column: 24, scope: !3704)
!3710 = !DILocation(line: 1188, column: 40, scope: !3704)
!3711 = !DILocation(line: 1188, column: 34, scope: !3704)
!3712 = !DILocation(line: 1188, column: 32, scope: !3704)
!3713 = !DILocation(line: 1188, column: 19, scope: !3704)
!3714 = !DILocation(line: 1188, column: 13, scope: !3704)
!3715 = !DILocation(line: 1188, column: 22, scope: !3704)
!3716 = !DILocation(line: 1187, column: 29, scope: !3717)
!3717 = !DILexicalBlockFile(scope: !3704, file: !910, discriminator: 2)
!3718 = !DILocation(line: 1187, column: 9, scope: !3717)
!3719 = distinct !{!3719, !3720}
!3720 = !DILocation(line: 1187, column: 9, scope: !3700)
!3721 = !DILocation(line: 1189, column: 9, scope: !3700)
!3722 = !DILocation(line: 1189, column: 16, scope: !3700)
!3723 = !DILocation(line: 1189, column: 29, scope: !3700)
!3724 = !DILocation(line: 1189, column: 34, scope: !3700)
!3725 = !DILocation(line: 1190, column: 5, scope: !3700)
!3726 = !DILocation(line: 1191, column: 16, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !910, line: 1191, column: 9)
!3728 = distinct !DILexicalBlock(scope: !3695, file: !910, line: 1190, column: 12)
!3729 = !DILocation(line: 1191, column: 14, scope: !3727)
!3730 = !DILocation(line: 1191, column: 21, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3732, file: !910, discriminator: 1)
!3732 = distinct !DILexicalBlock(scope: !3727, file: !910, line: 1191, column: 9)
!3733 = !DILocation(line: 1191, column: 25, scope: !3731)
!3734 = !DILocation(line: 1191, column: 23, scope: !3731)
!3735 = !DILocation(line: 1191, column: 9, scope: !3731)
!3736 = !DILocation(line: 1192, column: 30, scope: !3732)
!3737 = !DILocation(line: 1192, column: 24, scope: !3732)
!3738 = !DILocation(line: 1192, column: 18, scope: !3732)
!3739 = !DILocation(line: 1192, column: 13, scope: !3732)
!3740 = !DILocation(line: 1192, column: 21, scope: !3732)
!3741 = !DILocation(line: 1191, column: 29, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3732, file: !910, discriminator: 2)
!3743 = !DILocation(line: 1191, column: 9, scope: !3742)
!3744 = distinct !{!3744, !3745}
!3745 = !DILocation(line: 1191, column: 9, scope: !3728)
!3746 = !DILocation(line: 1193, column: 9, scope: !3728)
!3747 = !DILocation(line: 1193, column: 16, scope: !3728)
!3748 = !DILocation(line: 1193, column: 29, scope: !3728)
!3749 = !DILocation(line: 1193, column: 34, scope: !3728)
!3750 = !DILocation(line: 1195, column: 1, scope: !3573)
!3751 = distinct !DISubprogram(name: "remove_wasted_bits", scope: !910, file: !910, line: 1077, type: !2983, isLocal: true, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3752 = !DILocalVariable(name: "s", arg: 1, scope: !3751, file: !910, line: 1077, type: !1741)
!3753 = !DILocation(line: 1077, column: 51, scope: !3751)
!3754 = !DILocalVariable(name: "ch", scope: !3751, file: !910, line: 1079, type: !954)
!3755 = !DILocation(line: 1079, column: 9, scope: !3751)
!3756 = !DILocalVariable(name: "i", scope: !3751, file: !910, line: 1079, type: !954)
!3757 = !DILocation(line: 1079, column: 13, scope: !3751)
!3758 = !DILocation(line: 1081, column: 13, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3751, file: !910, line: 1081, column: 5)
!3760 = !DILocation(line: 1081, column: 10, scope: !3759)
!3761 = !DILocation(line: 1081, column: 18, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3763, file: !910, discriminator: 1)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !910, line: 1081, column: 5)
!3764 = !DILocation(line: 1081, column: 23, scope: !3762)
!3765 = !DILocation(line: 1081, column: 26, scope: !3762)
!3766 = !DILocation(line: 1081, column: 21, scope: !3762)
!3767 = !DILocation(line: 1081, column: 5, scope: !3762)
!3768 = !DILocalVariable(name: "sub", scope: !3769, file: !910, line: 1082, type: !3377)
!3769 = distinct !DILexicalBlock(scope: !3763, file: !910, line: 1081, column: 42)
!3770 = !DILocation(line: 1082, column: 23, scope: !3769)
!3771 = !DILocation(line: 1082, column: 49, scope: !3769)
!3772 = !DILocation(line: 1082, column: 30, scope: !3769)
!3773 = !DILocation(line: 1082, column: 33, scope: !3769)
!3774 = !DILocation(line: 1082, column: 39, scope: !3769)
!3775 = !DILocalVariable(name: "v", scope: !3769, file: !910, line: 1083, type: !952)
!3776 = !DILocation(line: 1083, column: 17, scope: !3769)
!3777 = !DILocation(line: 1085, column: 16, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3769, file: !910, line: 1085, column: 9)
!3779 = !DILocation(line: 1085, column: 14, scope: !3778)
!3780 = !DILocation(line: 1085, column: 21, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3782, file: !910, discriminator: 1)
!3782 = distinct !DILexicalBlock(scope: !3778, file: !910, line: 1085, column: 9)
!3783 = !DILocation(line: 1085, column: 25, scope: !3781)
!3784 = !DILocation(line: 1085, column: 28, scope: !3781)
!3785 = !DILocation(line: 1085, column: 34, scope: !3781)
!3786 = !DILocation(line: 1085, column: 23, scope: !3781)
!3787 = !DILocation(line: 1085, column: 9, scope: !3781)
!3788 = !DILocation(line: 1086, column: 31, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3782, file: !910, line: 1085, column: 50)
!3790 = !DILocation(line: 1086, column: 18, scope: !3789)
!3791 = !DILocation(line: 1086, column: 23, scope: !3789)
!3792 = !DILocation(line: 1086, column: 15, scope: !3789)
!3793 = !DILocation(line: 1087, column: 17, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3789, file: !910, line: 1087, column: 17)
!3795 = !DILocation(line: 1087, column: 19, scope: !3794)
!3796 = !DILocation(line: 1087, column: 17, scope: !3789)
!3797 = !DILocation(line: 1088, column: 17, scope: !3794)
!3798 = !DILocation(line: 1089, column: 9, scope: !3789)
!3799 = !DILocation(line: 1085, column: 46, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3782, file: !910, discriminator: 2)
!3801 = !DILocation(line: 1085, column: 9, scope: !3800)
!3802 = distinct !{!3802, !3803}
!3803 = !DILocation(line: 1085, column: 9, scope: !3769)
!3804 = !DILocation(line: 1091, column: 13, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3769, file: !910, line: 1091, column: 13)
!3806 = !DILocation(line: 1091, column: 15, scope: !3805)
!3807 = !DILocation(line: 1091, column: 20, scope: !3808)
!3808 = !DILexicalBlockFile(scope: !3805, file: !910, discriminator: 1)
!3809 = !DILocation(line: 1091, column: 22, scope: !3808)
!3810 = !DILocation(line: 1091, column: 13, scope: !3808)
!3811 = !DILocation(line: 1092, column: 31, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3805, file: !910, line: 1091, column: 28)
!3813 = !DILocation(line: 1092, column: 17, scope: !3812)
!3814 = !DILocation(line: 1092, column: 15, scope: !3812)
!3815 = !DILocation(line: 1094, column: 20, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3812, file: !910, line: 1094, column: 13)
!3817 = !DILocation(line: 1094, column: 18, scope: !3816)
!3818 = !DILocation(line: 1094, column: 25, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3820, file: !910, discriminator: 1)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !910, line: 1094, column: 13)
!3821 = !DILocation(line: 1094, column: 29, scope: !3819)
!3822 = !DILocation(line: 1094, column: 32, scope: !3819)
!3823 = !DILocation(line: 1094, column: 38, scope: !3819)
!3824 = !DILocation(line: 1094, column: 27, scope: !3819)
!3825 = !DILocation(line: 1094, column: 13, scope: !3819)
!3826 = !DILocation(line: 1095, column: 37, scope: !3820)
!3827 = !DILocation(line: 1095, column: 30, scope: !3820)
!3828 = !DILocation(line: 1095, column: 17, scope: !3820)
!3829 = !DILocation(line: 1095, column: 22, scope: !3820)
!3830 = !DILocation(line: 1095, column: 33, scope: !3820)
!3831 = !DILocation(line: 1094, column: 50, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3820, file: !910, discriminator: 2)
!3833 = !DILocation(line: 1094, column: 13, scope: !3832)
!3834 = distinct !{!3834, !3835}
!3835 = !DILocation(line: 1094, column: 13, scope: !3812)
!3836 = !DILocation(line: 1097, column: 27, scope: !3812)
!3837 = !DILocation(line: 1097, column: 13, scope: !3812)
!3838 = !DILocation(line: 1097, column: 18, scope: !3812)
!3839 = !DILocation(line: 1097, column: 25, scope: !3812)
!3840 = !DILocation(line: 1098, column: 27, scope: !3812)
!3841 = !DILocation(line: 1098, column: 13, scope: !3812)
!3842 = !DILocation(line: 1098, column: 18, scope: !3812)
!3843 = !DILocation(line: 1098, column: 24, scope: !3812)
!3844 = !DILocation(line: 1102, column: 17, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3812, file: !910, line: 1102, column: 17)
!3846 = !DILocation(line: 1102, column: 22, scope: !3845)
!3847 = !DILocation(line: 1102, column: 28, scope: !3845)
!3848 = !DILocation(line: 1102, column: 17, scope: !3812)
!3849 = !DILocation(line: 1103, column: 17, scope: !3845)
!3850 = !DILocation(line: 1103, column: 22, scope: !3845)
!3851 = !DILocation(line: 1103, column: 25, scope: !3845)
!3852 = !DILocation(line: 1103, column: 37, scope: !3845)
!3853 = !DILocation(line: 1104, column: 9, scope: !3812)
!3854 = !DILocation(line: 1105, column: 5, scope: !3769)
!3855 = !DILocation(line: 1081, column: 38, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3763, file: !910, discriminator: 2)
!3857 = !DILocation(line: 1081, column: 5, scope: !3856)
!3858 = distinct !{!3858, !3859}
!3859 = !DILocation(line: 1081, column: 5, scope: !3751)
!3860 = !DILocation(line: 1106, column: 1, scope: !3751)
!3861 = distinct !DISubprogram(name: "encode_frame", scope: !910, file: !910, line: 1057, type: !3862, isLocal: true, isDefinition: true, scopeLine: 1058, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!954, !1741}
!3864 = !DILocalVariable(name: "s", arg: 1, scope: !3861, file: !910, line: 1057, type: !1741)
!3865 = !DILocation(line: 1057, column: 44, scope: !3861)
!3866 = !DILocalVariable(name: "ch", scope: !3861, file: !910, line: 1059, type: !954)
!3867 = !DILocation(line: 1059, column: 9, scope: !3861)
!3868 = !DILocalVariable(name: "count", scope: !3861, file: !910, line: 1060, type: !996)
!3869 = !DILocation(line: 1060, column: 14, scope: !3861)
!3870 = !DILocation(line: 1062, column: 32, scope: !3861)
!3871 = !DILocation(line: 1062, column: 13, scope: !3861)
!3872 = !DILocation(line: 1062, column: 11, scope: !3861)
!3873 = !DILocation(line: 1064, column: 13, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3861, file: !910, line: 1064, column: 5)
!3875 = !DILocation(line: 1064, column: 10, scope: !3874)
!3876 = !DILocation(line: 1064, column: 18, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !3878, file: !910, discriminator: 1)
!3878 = distinct !DILexicalBlock(scope: !3874, file: !910, line: 1064, column: 5)
!3879 = !DILocation(line: 1064, column: 23, scope: !3877)
!3880 = !DILocation(line: 1064, column: 26, scope: !3877)
!3881 = !DILocation(line: 1064, column: 21, scope: !3877)
!3882 = !DILocation(line: 1064, column: 5, scope: !3877)
!3883 = !DILocation(line: 1065, column: 37, scope: !3878)
!3884 = !DILocation(line: 1065, column: 40, scope: !3878)
!3885 = !DILocation(line: 1065, column: 18, scope: !3878)
!3886 = !DILocation(line: 1065, column: 15, scope: !3878)
!3887 = !DILocation(line: 1065, column: 9, scope: !3878)
!3888 = !DILocation(line: 1064, column: 38, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3878, file: !910, discriminator: 2)
!3890 = !DILocation(line: 1064, column: 5, scope: !3889)
!3891 = distinct !{!3891, !3892}
!3892 = !DILocation(line: 1064, column: 5, scope: !3861)
!3893 = !DILocation(line: 1067, column: 20, scope: !3861)
!3894 = !DILocation(line: 1067, column: 26, scope: !3861)
!3895 = !DILocation(line: 1067, column: 17, scope: !3861)
!3896 = !DILocation(line: 1067, column: 32, scope: !3861)
!3897 = !DILocation(line: 1067, column: 11, scope: !3861)
!3898 = !DILocation(line: 1068, column: 11, scope: !3861)
!3899 = !DILocation(line: 1070, column: 11, scope: !3861)
!3900 = !DILocation(line: 1071, column: 9, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3861, file: !910, line: 1071, column: 9)
!3902 = !DILocation(line: 1071, column: 15, scope: !3901)
!3903 = !DILocation(line: 1071, column: 9, scope: !3861)
!3904 = !DILocation(line: 1072, column: 9, scope: !3901)
!3905 = !DILocation(line: 1073, column: 12, scope: !3861)
!3906 = !DILocation(line: 1073, column: 5, scope: !3861)
!3907 = !DILocation(line: 1074, column: 1, scope: !3861)
!3908 = distinct !DISubprogram(name: "write_frame", scope: !910, file: !910, line: 1313, type: !3909, isLocal: true, isDefinition: true, scopeLine: 1314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!954, !1741, !1233}
!3911 = !DILocalVariable(name: "s", arg: 1, scope: !3908, file: !910, line: 1313, type: !1741)
!3912 = !DILocation(line: 1313, column: 43, scope: !3908)
!3913 = !DILocalVariable(name: "avpkt", arg: 2, scope: !3908, file: !910, line: 1313, type: !1233)
!3914 = !DILocation(line: 1313, column: 56, scope: !3908)
!3915 = !DILocation(line: 1315, column: 20, scope: !3908)
!3916 = !DILocation(line: 1315, column: 23, scope: !3908)
!3917 = !DILocation(line: 1315, column: 27, scope: !3908)
!3918 = !DILocation(line: 1315, column: 34, scope: !3908)
!3919 = !DILocation(line: 1315, column: 40, scope: !3908)
!3920 = !DILocation(line: 1315, column: 47, scope: !3908)
!3921 = !DILocation(line: 1315, column: 5, scope: !3908)
!3922 = !DILocation(line: 1316, column: 24, scope: !3908)
!3923 = !DILocation(line: 1316, column: 5, scope: !3908)
!3924 = !DILocation(line: 1317, column: 21, scope: !3908)
!3925 = !DILocation(line: 1317, column: 5, scope: !3908)
!3926 = !DILocation(line: 1318, column: 24, scope: !3908)
!3927 = !DILocation(line: 1318, column: 5, scope: !3908)
!3928 = !DILocation(line: 1319, column: 28, scope: !3908)
!3929 = !DILocation(line: 1319, column: 31, scope: !3908)
!3930 = !DILocation(line: 1319, column: 12, scope: !3908)
!3931 = !DILocation(line: 1319, column: 35, scope: !3908)
!3932 = !DILocation(line: 1319, column: 5, scope: !3908)
!3933 = distinct !DISubprogram(name: "update_md5_sum", scope: !910, file: !910, line: 1323, type: !3934, isLocal: true, isDefinition: true, scopeLine: 1324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!954, !1741, !3417}
!3936 = !DILocalVariable(name: "s", arg: 1, scope: !3933, file: !910, line: 1323, type: !1741)
!3937 = !DILocation(line: 1323, column: 46, scope: !3933)
!3938 = !DILocalVariable(name: "samples", arg: 2, scope: !3933, file: !910, line: 1323, type: !3417)
!3939 = !DILocation(line: 1323, column: 61, scope: !3933)
!3940 = !DILocalVariable(name: "buf", scope: !3933, file: !910, line: 1325, type: !955)
!3941 = !DILocation(line: 1325, column: 20, scope: !3933)
!3942 = !DILocalVariable(name: "buf_size", scope: !3933, file: !910, line: 1326, type: !954)
!3943 = !DILocation(line: 1326, column: 9, scope: !3933)
!3944 = !DILocation(line: 1326, column: 20, scope: !3933)
!3945 = !DILocation(line: 1326, column: 23, scope: !3933)
!3946 = !DILocation(line: 1326, column: 29, scope: !3933)
!3947 = !DILocation(line: 1326, column: 41, scope: !3933)
!3948 = !DILocation(line: 1326, column: 44, scope: !3933)
!3949 = !DILocation(line: 1326, column: 39, scope: !3933)
!3950 = !DILocation(line: 1327, column: 22, scope: !3933)
!3951 = !DILocation(line: 1327, column: 25, scope: !3933)
!3952 = !DILocation(line: 1327, column: 32, scope: !3933)
!3953 = !DILocation(line: 1327, column: 52, scope: !3933)
!3954 = !DILocation(line: 1327, column: 57, scope: !3933)
!3955 = !DILocation(line: 1326, column: 53, scope: !3933)
!3956 = !DILocation(line: 1329, column: 9, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3933, file: !910, line: 1329, column: 9)
!3958 = !DILocation(line: 1329, column: 12, scope: !3957)
!3959 = !DILocation(line: 1329, column: 19, scope: !3957)
!3960 = !DILocation(line: 1329, column: 39, scope: !3957)
!3961 = !DILocation(line: 1329, column: 9, scope: !3933)
!3962 = !DILocation(line: 1330, column: 25, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3957, file: !910, line: 1329, column: 50)
!3964 = !DILocation(line: 1330, column: 28, scope: !3963)
!3965 = !DILocation(line: 1330, column: 24, scope: !3963)
!3966 = !DILocation(line: 1330, column: 41, scope: !3963)
!3967 = !DILocation(line: 1330, column: 44, scope: !3963)
!3968 = !DILocation(line: 1330, column: 61, scope: !3963)
!3969 = !DILocation(line: 1330, column: 9, scope: !3963)
!3970 = !DILocation(line: 1331, column: 14, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3963, file: !910, line: 1331, column: 13)
!3972 = !DILocation(line: 1331, column: 17, scope: !3971)
!3973 = !DILocation(line: 1331, column: 13, scope: !3963)
!3974 = !DILocation(line: 1332, column: 13, scope: !3971)
!3975 = !DILocation(line: 1333, column: 5, scope: !3963)
!3976 = !DILocation(line: 1335, column: 9, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3933, file: !910, line: 1335, column: 9)
!3978 = !DILocation(line: 1335, column: 12, scope: !3977)
!3979 = !DILocation(line: 1335, column: 19, scope: !3977)
!3980 = !DILocation(line: 1335, column: 39, scope: !3977)
!3981 = !DILocation(line: 1335, column: 9, scope: !3933)
!3982 = !DILocation(line: 1336, column: 32, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3977, file: !910, line: 1335, column: 46)
!3984 = !DILocation(line: 1336, column: 13, scope: !3983)
!3985 = !DILocation(line: 1342, column: 5, scope: !3983)
!3986 = !DILocalVariable(name: "i", scope: !3987, file: !910, line: 1343, type: !954)
!3987 = distinct !DILexicalBlock(scope: !3977, file: !910, line: 1342, column: 12)
!3988 = !DILocation(line: 1343, column: 13, scope: !3987)
!3989 = !DILocalVariable(name: "samples0", scope: !3987, file: !910, line: 1344, type: !1854)
!3990 = !DILocation(line: 1344, column: 24, scope: !3987)
!3991 = !DILocation(line: 1344, column: 35, scope: !3987)
!3992 = !DILocalVariable(name: "tmp", scope: !3987, file: !910, line: 1345, type: !959)
!3993 = !DILocation(line: 1345, column: 18, scope: !3987)
!3994 = !DILocation(line: 1345, column: 24, scope: !3987)
!3995 = !DILocation(line: 1345, column: 27, scope: !3987)
!3996 = !DILocation(line: 1347, column: 16, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3987, file: !910, line: 1347, column: 9)
!3998 = !DILocation(line: 1347, column: 14, scope: !3997)
!3999 = !DILocation(line: 1347, column: 21, scope: !4000)
!4000 = !DILexicalBlockFile(scope: !4001, file: !910, discriminator: 1)
!4001 = distinct !DILexicalBlock(scope: !3997, file: !910, line: 1347, column: 9)
!4002 = !DILocation(line: 1347, column: 25, scope: !4000)
!4003 = !DILocation(line: 1347, column: 28, scope: !4000)
!4004 = !DILocation(line: 1347, column: 34, scope: !4000)
!4005 = !DILocation(line: 1347, column: 46, scope: !4000)
!4006 = !DILocation(line: 1347, column: 49, scope: !4000)
!4007 = !DILocation(line: 1347, column: 44, scope: !4000)
!4008 = !DILocation(line: 1347, column: 23, scope: !4000)
!4009 = !DILocation(line: 1347, column: 9, scope: !4000)
!4010 = !DILocalVariable(name: "v", scope: !4011, file: !910, line: 1348, type: !952)
!4011 = distinct !DILexicalBlock(scope: !4001, file: !910, line: 1347, column: 64)
!4012 = !DILocation(line: 1348, column: 21, scope: !4011)
!4013 = !DILocation(line: 1348, column: 34, scope: !4011)
!4014 = !DILocation(line: 1348, column: 25, scope: !4011)
!4015 = !DILocation(line: 1348, column: 37, scope: !4011)
!4016 = !DILocation(line: 1349, column: 13, scope: !4011)
!4017 = distinct !{!4017, !4016}
!4018 = !DILocation(line: 1349, column: 48, scope: !4019)
!4019 = !DILexicalBlockFile(scope: !4020, file: !910, discriminator: 1)
!4020 = distinct !DILexicalBlock(scope: !4011, file: !910, line: 1349, column: 16)
!4021 = !DILocation(line: 1349, column: 47, scope: !4019)
!4022 = !DILocation(line: 1349, column: 30, scope: !4019)
!4023 = !DILocation(line: 1349, column: 38, scope: !4019)
!4024 = !DILocation(line: 1349, column: 37, scope: !4019)
!4025 = !DILocation(line: 1349, column: 34, scope: !4019)
!4026 = !DILocation(line: 1349, column: 18, scope: !4019)
!4027 = !DILocation(line: 1349, column: 45, scope: !4019)
!4028 = !DILocation(line: 1349, column: 82, scope: !4019)
!4029 = !DILocation(line: 1349, column: 84, scope: !4019)
!4030 = !DILocation(line: 1349, column: 81, scope: !4019)
!4031 = !DILocation(line: 1349, column: 64, scope: !4019)
!4032 = !DILocation(line: 1349, column: 72, scope: !4019)
!4033 = !DILocation(line: 1349, column: 71, scope: !4019)
!4034 = !DILocation(line: 1349, column: 68, scope: !4019)
!4035 = !DILocation(line: 1349, column: 52, scope: !4019)
!4036 = !DILocation(line: 1349, column: 79, scope: !4019)
!4037 = !DILocation(line: 1349, column: 119, scope: !4019)
!4038 = !DILocation(line: 1349, column: 121, scope: !4019)
!4039 = !DILocation(line: 1349, column: 118, scope: !4019)
!4040 = !DILocation(line: 1349, column: 101, scope: !4019)
!4041 = !DILocation(line: 1349, column: 109, scope: !4019)
!4042 = !DILocation(line: 1349, column: 108, scope: !4019)
!4043 = !DILocation(line: 1349, column: 105, scope: !4019)
!4044 = !DILocation(line: 1349, column: 89, scope: !4019)
!4045 = !DILocation(line: 1349, column: 116, scope: !4019)
!4046 = !DILocation(line: 1349, column: 127, scope: !4019)
!4047 = !DILocation(line: 1350, column: 9, scope: !4011)
!4048 = !DILocation(line: 1347, column: 60, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !4001, file: !910, discriminator: 2)
!4050 = !DILocation(line: 1347, column: 9, scope: !4049)
!4051 = distinct !{!4051, !4052}
!4052 = !DILocation(line: 1347, column: 9, scope: !3987)
!4053 = !DILocation(line: 1351, column: 15, scope: !3987)
!4054 = !DILocation(line: 1351, column: 18, scope: !3987)
!4055 = !DILocation(line: 1351, column: 13, scope: !3987)
!4056 = !DILocation(line: 1353, column: 19, scope: !3933)
!4057 = !DILocation(line: 1353, column: 22, scope: !3933)
!4058 = !DILocation(line: 1353, column: 30, scope: !3933)
!4059 = !DILocation(line: 1353, column: 35, scope: !3933)
!4060 = !DILocation(line: 1353, column: 5, scope: !3933)
!4061 = !DILocation(line: 1355, column: 5, scope: !3933)
!4062 = !DILocation(line: 1356, column: 1, scope: !3933)
!4063 = distinct !DISubprogram(name: "estimate_stereo_mode", scope: !910, file: !910, line: 1109, type: !4064, isLocal: true, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!954, !1854, !1854, !954, !954}
!4066 = !DILocalVariable(name: "left_ch", arg: 1, scope: !4063, file: !910, line: 1109, type: !1854)
!4067 = !DILocation(line: 1109, column: 48, scope: !4063)
!4068 = !DILocalVariable(name: "right_ch", arg: 2, scope: !4063, file: !910, line: 1109, type: !1854)
!4069 = !DILocation(line: 1109, column: 72, scope: !4063)
!4070 = !DILocalVariable(name: "n", arg: 3, scope: !4063, file: !910, line: 1109, type: !954)
!4071 = !DILocation(line: 1109, column: 86, scope: !4063)
!4072 = !DILocalVariable(name: "max_rice_param", arg: 4, scope: !4063, file: !910, line: 1110, type: !954)
!4073 = !DILocation(line: 1110, column: 37, scope: !4063)
!4074 = !DILocalVariable(name: "i", scope: !4063, file: !910, line: 1112, type: !954)
!4075 = !DILocation(line: 1112, column: 9, scope: !4063)
!4076 = !DILocalVariable(name: "best", scope: !4063, file: !910, line: 1112, type: !954)
!4077 = !DILocation(line: 1112, column: 12, scope: !4063)
!4078 = !DILocalVariable(name: "lt", scope: !4063, file: !910, line: 1113, type: !952)
!4079 = !DILocation(line: 1113, column: 13, scope: !4063)
!4080 = !DILocalVariable(name: "rt", scope: !4063, file: !910, line: 1113, type: !952)
!4081 = !DILocation(line: 1113, column: 17, scope: !4063)
!4082 = !DILocalVariable(name: "sum", scope: !4063, file: !910, line: 1114, type: !4083)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 256, align: 64, elements: !1216)
!4084 = !DILocation(line: 1114, column: 14, scope: !4063)
!4085 = !DILocalVariable(name: "score", scope: !4063, file: !910, line: 1115, type: !4083)
!4086 = !DILocation(line: 1115, column: 14, scope: !4063)
!4087 = !DILocalVariable(name: "k", scope: !4063, file: !910, line: 1116, type: !954)
!4088 = !DILocation(line: 1116, column: 9, scope: !4063)
!4089 = !DILocation(line: 1119, column: 32, scope: !4063)
!4090 = !DILocation(line: 1119, column: 39, scope: !4063)
!4091 = !DILocation(line: 1119, column: 23, scope: !4063)
!4092 = !DILocation(line: 1119, column: 30, scope: !4063)
!4093 = !DILocation(line: 1119, column: 14, scope: !4063)
!4094 = !DILocation(line: 1119, column: 21, scope: !4063)
!4095 = !DILocation(line: 1119, column: 5, scope: !4063)
!4096 = !DILocation(line: 1119, column: 12, scope: !4063)
!4097 = !DILocation(line: 1120, column: 12, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4063, file: !910, line: 1120, column: 5)
!4099 = !DILocation(line: 1120, column: 10, scope: !4098)
!4100 = !DILocation(line: 1120, column: 17, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4102, file: !910, discriminator: 1)
!4102 = distinct !DILexicalBlock(scope: !4098, file: !910, line: 1120, column: 5)
!4103 = !DILocation(line: 1120, column: 21, scope: !4101)
!4104 = !DILocation(line: 1120, column: 19, scope: !4101)
!4105 = !DILocation(line: 1120, column: 5, scope: !4101)
!4106 = !DILocation(line: 1121, column: 22, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !910, line: 1120, column: 29)
!4108 = !DILocation(line: 1121, column: 14, scope: !4107)
!4109 = !DILocation(line: 1121, column: 37, scope: !4107)
!4110 = !DILocation(line: 1121, column: 38, scope: !4107)
!4111 = !DILocation(line: 1121, column: 29, scope: !4107)
!4112 = !DILocation(line: 1121, column: 28, scope: !4107)
!4113 = !DILocation(line: 1121, column: 25, scope: !4107)
!4114 = !DILocation(line: 1121, column: 52, scope: !4107)
!4115 = !DILocation(line: 1121, column: 53, scope: !4107)
!4116 = !DILocation(line: 1121, column: 44, scope: !4107)
!4117 = !DILocation(line: 1121, column: 42, scope: !4107)
!4118 = !DILocation(line: 1121, column: 12, scope: !4107)
!4119 = !DILocation(line: 1122, column: 23, scope: !4107)
!4120 = !DILocation(line: 1122, column: 14, scope: !4107)
!4121 = !DILocation(line: 1122, column: 39, scope: !4107)
!4122 = !DILocation(line: 1122, column: 40, scope: !4107)
!4123 = !DILocation(line: 1122, column: 30, scope: !4107)
!4124 = !DILocation(line: 1122, column: 29, scope: !4107)
!4125 = !DILocation(line: 1122, column: 26, scope: !4107)
!4126 = !DILocation(line: 1122, column: 55, scope: !4107)
!4127 = !DILocation(line: 1122, column: 56, scope: !4107)
!4128 = !DILocation(line: 1122, column: 46, scope: !4107)
!4129 = !DILocation(line: 1122, column: 44, scope: !4107)
!4130 = !DILocation(line: 1122, column: 12, scope: !4107)
!4131 = !DILocation(line: 1123, column: 22, scope: !4107)
!4132 = !DILocation(line: 1123, column: 27, scope: !4107)
!4133 = !DILocation(line: 1123, column: 25, scope: !4107)
!4134 = !DILocation(line: 1123, column: 31, scope: !4107)
!4135 = !DILocation(line: 1123, column: 37, scope: !4107)
!4136 = !DILocation(line: 1123, column: 20, scope: !4107)
!4137 = !DILocation(line: 1123, column: 46, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4107, file: !910, discriminator: 1)
!4139 = !DILocation(line: 1123, column: 51, scope: !4138)
!4140 = !DILocation(line: 1123, column: 49, scope: !4138)
!4141 = !DILocation(line: 1123, column: 55, scope: !4138)
!4142 = !DILocation(line: 1123, column: 20, scope: !4138)
!4143 = !DILocation(line: 1123, column: 67, scope: !4144)
!4144 = !DILexicalBlockFile(scope: !4107, file: !910, discriminator: 2)
!4145 = !DILocation(line: 1123, column: 72, scope: !4144)
!4146 = !DILocation(line: 1123, column: 70, scope: !4144)
!4147 = !DILocation(line: 1123, column: 76, scope: !4144)
!4148 = !DILocation(line: 1123, column: 64, scope: !4144)
!4149 = !DILocation(line: 1123, column: 20, scope: !4144)
!4150 = !DILocation(line: 1123, column: 20, scope: !4151)
!4151 = !DILexicalBlockFile(scope: !4107, file: !910, discriminator: 3)
!4152 = !DILocation(line: 1123, column: 19, scope: !4151)
!4153 = !DILocation(line: 1123, column: 9, scope: !4151)
!4154 = !DILocation(line: 1123, column: 16, scope: !4151)
!4155 = !DILocation(line: 1124, column: 21, scope: !4107)
!4156 = !DILocation(line: 1124, column: 26, scope: !4107)
!4157 = !DILocation(line: 1124, column: 24, scope: !4107)
!4158 = !DILocation(line: 1124, column: 30, scope: !4107)
!4159 = !DILocation(line: 1124, column: 20, scope: !4107)
!4160 = !DILocation(line: 1124, column: 38, scope: !4138)
!4161 = !DILocation(line: 1124, column: 43, scope: !4138)
!4162 = !DILocation(line: 1124, column: 41, scope: !4138)
!4163 = !DILocation(line: 1124, column: 20, scope: !4138)
!4164 = !DILocation(line: 1124, column: 52, scope: !4144)
!4165 = !DILocation(line: 1124, column: 57, scope: !4144)
!4166 = !DILocation(line: 1124, column: 55, scope: !4144)
!4167 = !DILocation(line: 1124, column: 50, scope: !4144)
!4168 = !DILocation(line: 1124, column: 20, scope: !4144)
!4169 = !DILocation(line: 1124, column: 20, scope: !4151)
!4170 = !DILocation(line: 1124, column: 19, scope: !4151)
!4171 = !DILocation(line: 1124, column: 9, scope: !4151)
!4172 = !DILocation(line: 1124, column: 16, scope: !4151)
!4173 = !DILocation(line: 1125, column: 21, scope: !4107)
!4174 = !DILocation(line: 1125, column: 25, scope: !4107)
!4175 = !DILocation(line: 1125, column: 20, scope: !4107)
!4176 = !DILocation(line: 1125, column: 33, scope: !4138)
!4177 = !DILocation(line: 1125, column: 20, scope: !4138)
!4178 = !DILocation(line: 1125, column: 42, scope: !4144)
!4179 = !DILocation(line: 1125, column: 40, scope: !4144)
!4180 = !DILocation(line: 1125, column: 20, scope: !4144)
!4181 = !DILocation(line: 1125, column: 20, scope: !4151)
!4182 = !DILocation(line: 1125, column: 19, scope: !4151)
!4183 = !DILocation(line: 1125, column: 9, scope: !4151)
!4184 = !DILocation(line: 1125, column: 16, scope: !4151)
!4185 = !DILocation(line: 1126, column: 21, scope: !4107)
!4186 = !DILocation(line: 1126, column: 25, scope: !4107)
!4187 = !DILocation(line: 1126, column: 20, scope: !4107)
!4188 = !DILocation(line: 1126, column: 33, scope: !4138)
!4189 = !DILocation(line: 1126, column: 20, scope: !4138)
!4190 = !DILocation(line: 1126, column: 42, scope: !4144)
!4191 = !DILocation(line: 1126, column: 40, scope: !4144)
!4192 = !DILocation(line: 1126, column: 20, scope: !4144)
!4193 = !DILocation(line: 1126, column: 20, scope: !4151)
!4194 = !DILocation(line: 1126, column: 19, scope: !4151)
!4195 = !DILocation(line: 1126, column: 9, scope: !4151)
!4196 = !DILocation(line: 1126, column: 16, scope: !4151)
!4197 = !DILocation(line: 1127, column: 5, scope: !4107)
!4198 = !DILocation(line: 1120, column: 25, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !4102, file: !910, discriminator: 2)
!4200 = !DILocation(line: 1120, column: 5, scope: !4199)
!4201 = distinct !{!4201, !4202}
!4202 = !DILocation(line: 1120, column: 5, scope: !4063)
!4203 = !DILocation(line: 1129, column: 12, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4063, file: !910, line: 1129, column: 5)
!4205 = !DILocation(line: 1129, column: 10, scope: !4204)
!4206 = !DILocation(line: 1129, column: 17, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !4208, file: !910, discriminator: 1)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !910, line: 1129, column: 5)
!4209 = !DILocation(line: 1129, column: 19, scope: !4207)
!4210 = !DILocation(line: 1129, column: 5, scope: !4207)
!4211 = !DILocation(line: 1130, column: 40, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !910, line: 1129, column: 29)
!4213 = !DILocation(line: 1130, column: 36, scope: !4212)
!4214 = !DILocation(line: 1130, column: 34, scope: !4212)
!4215 = !DILocation(line: 1130, column: 44, scope: !4212)
!4216 = !DILocation(line: 1130, column: 47, scope: !4212)
!4217 = !DILocation(line: 1130, column: 13, scope: !4212)
!4218 = !DILocation(line: 1130, column: 11, scope: !4212)
!4219 = !DILocation(line: 1131, column: 21, scope: !4212)
!4220 = !DILocation(line: 1131, column: 26, scope: !4212)
!4221 = !DILocation(line: 1131, column: 28, scope: !4212)
!4222 = !DILocation(line: 1131, column: 23, scope: !4212)
!4223 = !DILocation(line: 1131, column: 19, scope: !4212)
!4224 = !DILocation(line: 1131, column: 43, scope: !4212)
!4225 = !DILocation(line: 1131, column: 39, scope: !4212)
!4226 = !DILocation(line: 1131, column: 37, scope: !4212)
!4227 = !DILocation(line: 1131, column: 47, scope: !4212)
!4228 = !DILocation(line: 1131, column: 48, scope: !4212)
!4229 = !DILocation(line: 1131, column: 46, scope: !4212)
!4230 = !DILocation(line: 1131, column: 45, scope: !4212)
!4231 = !DILocation(line: 1131, column: 56, scope: !4212)
!4232 = !DILocation(line: 1131, column: 53, scope: !4212)
!4233 = !DILocation(line: 1131, column: 32, scope: !4212)
!4234 = !DILocation(line: 1131, column: 13, scope: !4212)
!4235 = !DILocation(line: 1131, column: 9, scope: !4212)
!4236 = !DILocation(line: 1131, column: 16, scope: !4212)
!4237 = !DILocation(line: 1132, column: 5, scope: !4212)
!4238 = !DILocation(line: 1129, column: 25, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !4208, file: !910, discriminator: 2)
!4240 = !DILocation(line: 1129, column: 5, scope: !4239)
!4241 = distinct !{!4241, !4242}
!4242 = !DILocation(line: 1129, column: 5, scope: !4063)
!4243 = !DILocation(line: 1135, column: 16, scope: !4063)
!4244 = !DILocation(line: 1135, column: 25, scope: !4063)
!4245 = !DILocation(line: 1135, column: 23, scope: !4063)
!4246 = !DILocation(line: 1135, column: 5, scope: !4063)
!4247 = !DILocation(line: 1135, column: 14, scope: !4063)
!4248 = !DILocation(line: 1136, column: 16, scope: !4063)
!4249 = !DILocation(line: 1136, column: 25, scope: !4063)
!4250 = !DILocation(line: 1136, column: 23, scope: !4063)
!4251 = !DILocation(line: 1136, column: 5, scope: !4063)
!4252 = !DILocation(line: 1136, column: 14, scope: !4063)
!4253 = !DILocation(line: 1137, column: 16, scope: !4063)
!4254 = !DILocation(line: 1137, column: 25, scope: !4063)
!4255 = !DILocation(line: 1137, column: 23, scope: !4063)
!4256 = !DILocation(line: 1137, column: 5, scope: !4063)
!4257 = !DILocation(line: 1137, column: 14, scope: !4063)
!4258 = !DILocation(line: 1138, column: 16, scope: !4063)
!4259 = !DILocation(line: 1138, column: 25, scope: !4063)
!4260 = !DILocation(line: 1138, column: 23, scope: !4063)
!4261 = !DILocation(line: 1138, column: 5, scope: !4063)
!4262 = !DILocation(line: 1138, column: 14, scope: !4063)
!4263 = !DILocation(line: 1141, column: 10, scope: !4063)
!4264 = !DILocation(line: 1142, column: 12, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4063, file: !910, line: 1142, column: 5)
!4266 = !DILocation(line: 1142, column: 10, scope: !4265)
!4267 = !DILocation(line: 1142, column: 17, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !4269, file: !910, discriminator: 1)
!4269 = distinct !DILexicalBlock(scope: !4265, file: !910, line: 1142, column: 5)
!4270 = !DILocation(line: 1142, column: 19, scope: !4268)
!4271 = !DILocation(line: 1142, column: 5, scope: !4268)
!4272 = !DILocation(line: 1143, column: 19, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4269, file: !910, line: 1143, column: 13)
!4274 = !DILocation(line: 1143, column: 13, scope: !4273)
!4275 = !DILocation(line: 1143, column: 30, scope: !4273)
!4276 = !DILocation(line: 1143, column: 24, scope: !4273)
!4277 = !DILocation(line: 1143, column: 22, scope: !4273)
!4278 = !DILocation(line: 1143, column: 13, scope: !4269)
!4279 = !DILocation(line: 1144, column: 20, scope: !4273)
!4280 = !DILocation(line: 1144, column: 18, scope: !4273)
!4281 = !DILocation(line: 1144, column: 13, scope: !4273)
!4282 = !DILocation(line: 1143, column: 34, scope: !4283)
!4283 = !DILexicalBlockFile(scope: !4273, file: !910, discriminator: 1)
!4284 = !DILocation(line: 1142, column: 25, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4269, file: !910, discriminator: 2)
!4286 = !DILocation(line: 1142, column: 5, scope: !4285)
!4287 = distinct !{!4287, !4288}
!4288 = !DILocation(line: 1142, column: 5, scope: !4063)
!4289 = !DILocation(line: 1146, column: 12, scope: !4063)
!4290 = !DILocation(line: 1146, column: 5, scope: !4063)
!4291 = distinct !DISubprogram(name: "find_optimal_param", scope: !910, file: !910, line: 606, type: !4292, isLocal: true, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!954, !996, !954, !954}
!4294 = !DILocalVariable(name: "a", arg: 1, scope: !4295, file: !4296, line: 203, type: !960)
!4295 = distinct !DISubprogram(name: "av_clipl_int32_c", scope: !4296, file: !4296, line: 203, type: !4297, isLocal: true, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4296 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!952, !960}
!4299 = !DILocation(line: 203, column: 102, scope: !4295, inlinedAt: !4300)
!4300 = distinct !DILocation(line: 614, column: 30, scope: !4291)
!4301 = !DILocalVariable(name: "sum", arg: 1, scope: !4291, file: !910, line: 606, type: !996)
!4302 = !DILocation(line: 606, column: 40, scope: !4291)
!4303 = !DILocalVariable(name: "n", arg: 2, scope: !4291, file: !910, line: 606, type: !954)
!4304 = !DILocation(line: 606, column: 49, scope: !4291)
!4305 = !DILocalVariable(name: "max_param", arg: 3, scope: !4291, file: !910, line: 606, type: !954)
!4306 = !DILocation(line: 606, column: 56, scope: !4291)
!4307 = !DILocalVariable(name: "k", scope: !4291, file: !910, line: 608, type: !954)
!4308 = !DILocation(line: 608, column: 9, scope: !4291)
!4309 = !DILocalVariable(name: "sum2", scope: !4291, file: !910, line: 609, type: !996)
!4310 = !DILocation(line: 609, column: 14, scope: !4291)
!4311 = !DILocation(line: 611, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4291, file: !910, line: 611, column: 9)
!4313 = !DILocation(line: 611, column: 16, scope: !4312)
!4314 = !DILocation(line: 611, column: 18, scope: !4312)
!4315 = !DILocation(line: 611, column: 13, scope: !4312)
!4316 = !DILocation(line: 611, column: 9, scope: !4291)
!4317 = !DILocation(line: 612, column: 9, scope: !4312)
!4318 = !DILocation(line: 613, column: 12, scope: !4291)
!4319 = !DILocation(line: 613, column: 19, scope: !4291)
!4320 = !DILocation(line: 613, column: 21, scope: !4291)
!4321 = !DILocation(line: 613, column: 18, scope: !4291)
!4322 = !DILocation(line: 613, column: 16, scope: !4291)
!4323 = !DILocation(line: 613, column: 10, scope: !4291)
!4324 = !DILocation(line: 614, column: 47, scope: !4291)
!4325 = !DILocation(line: 614, column: 54, scope: !4291)
!4326 = !DILocation(line: 614, column: 52, scope: !4291)
!4327 = !DILocation(line: 614, column: 30, scope: !4291)
!4328 = !DILocation(line: 205, column: 10, scope: !4329, inlinedAt: !4300)
!4329 = distinct !DILexicalBlock(scope: !4295, file: !4296, line: 205, column: 9)
!4330 = !DILocation(line: 205, column: 11, scope: !4329, inlinedAt: !4300)
!4331 = !DILocation(line: 205, column: 25, scope: !4329, inlinedAt: !4300)
!4332 = !DILocation(line: 205, column: 9, scope: !4295, inlinedAt: !4300)
!4333 = !DILocation(line: 205, column: 60, scope: !4334, inlinedAt: !4300)
!4334 = !DILexicalBlockFile(scope: !4329, file: !4296, discriminator: 1)
!4335 = !DILocation(line: 205, column: 61, scope: !4334, inlinedAt: !4300)
!4336 = !DILocation(line: 205, column: 67, scope: !4334, inlinedAt: !4300)
!4337 = !DILocation(line: 205, column: 49, scope: !4334, inlinedAt: !4300)
!4338 = !DILocation(line: 205, column: 42, scope: !4334, inlinedAt: !4300)
!4339 = !DILocation(line: 206, column: 26, scope: !4329, inlinedAt: !4300)
!4340 = !DILocation(line: 206, column: 17, scope: !4329, inlinedAt: !4300)
!4341 = !DILocation(line: 206, column: 10, scope: !4329, inlinedAt: !4300)
!4342 = !DILocation(line: 207, column: 1, scope: !4295, inlinedAt: !4300)
!4343 = !DILocation(line: 614, column: 57, scope: !4291)
!4344 = !DILocation(line: 614, column: 15, scope: !4345)
!4345 = !DILexicalBlockFile(scope: !4291, file: !910, discriminator: 1)
!4346 = !DILocation(line: 614, column: 13, scope: !4291)
!4347 = !DILocation(line: 614, column: 7, scope: !4291)
!4348 = !DILocation(line: 615, column: 14, scope: !4291)
!4349 = !DILocation(line: 615, column: 20, scope: !4291)
!4350 = !DILocation(line: 615, column: 17, scope: !4291)
!4351 = !DILocation(line: 615, column: 13, scope: !4291)
!4352 = !DILocation(line: 615, column: 34, scope: !4345)
!4353 = !DILocation(line: 615, column: 13, scope: !4345)
!4354 = !DILocation(line: 615, column: 48, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4291, file: !910, discriminator: 2)
!4356 = !DILocation(line: 615, column: 13, scope: !4355)
!4357 = !DILocation(line: 615, column: 13, scope: !4358)
!4358 = !DILexicalBlockFile(scope: !4291, file: !910, discriminator: 3)
!4359 = !DILocation(line: 615, column: 5, scope: !4358)
!4360 = !DILocation(line: 616, column: 1, scope: !4291)
!4361 = distinct !DISubprogram(name: "count_frame_header", scope: !910, file: !910, line: 1021, type: !3862, isLocal: true, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4362 = !DILocalVariable(name: "s", arg: 1, scope: !4361, file: !910, line: 1021, type: !1741)
!4363 = !DILocation(line: 1021, column: 50, scope: !4361)
!4364 = !DILocalVariable(name: "tmp", scope: !4361, file: !910, line: 1023, type: !957)
!4365 = !DILocation(line: 1023, column: 37, scope: !4361)
!4366 = !DILocalVariable(name: "count", scope: !4361, file: !910, line: 1024, type: !954)
!4367 = !DILocation(line: 1024, column: 9, scope: !4361)
!4368 = !DILocation(line: 1036, column: 11, scope: !4361)
!4369 = !DILocalVariable(name: "bytes", scope: !4370, file: !910, line: 1039, type: !954)
!4370 = distinct !DILexicalBlock(scope: !4361, file: !910, line: 1039, column: 5)
!4371 = !DILocation(line: 1039, column: 11, scope: !4370)
!4372 = !DILocalVariable(name: "shift", scope: !4370, file: !910, line: 1039, type: !954)
!4373 = !DILocation(line: 1039, column: 18, scope: !4370)
!4374 = !DILocalVariable(name: "in", scope: !4370, file: !910, line: 1039, type: !949)
!4375 = !DILocation(line: 1039, column: 34, scope: !4370)
!4376 = !DILocation(line: 1039, column: 39, scope: !4370)
!4377 = !DILocation(line: 1039, column: 42, scope: !4370)
!4378 = !DILocation(line: 1039, column: 59, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4370, file: !910, line: 1039, column: 59)
!4380 = !DILocation(line: 1039, column: 62, scope: !4379)
!4381 = !DILocation(line: 1039, column: 59, scope: !4370)
!4382 = !DILocation(line: 1039, column: 78, scope: !4383)
!4383 = !DILexicalBlockFile(scope: !4384, file: !910, discriminator: 1)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !910, line: 1039, column: 70)
!4385 = !DILocation(line: 1039, column: 76, scope: !4383)
!4386 = !DILocation(line: 1039, column: 88, scope: !4383)
!4387 = !DILocation(line: 1039, column: 94, scope: !4383)
!4388 = !DILocation(line: 1039, column: 133, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4390, file: !910, discriminator: 2)
!4390 = distinct !DILexicalBlock(scope: !4379, file: !910, line: 1039, column: 101)
!4391 = !DILocation(line: 1039, column: 136, scope: !4389)
!4392 = !DILocation(line: 1039, column: 118, scope: !4389)
!4393 = !DILocation(line: 1039, column: 116, scope: !4389)
!4394 = !DILocation(line: 1039, column: 141, scope: !4389)
!4395 = !DILocation(line: 1039, column: 146, scope: !4389)
!4396 = !DILocation(line: 1039, column: 109, scope: !4389)
!4397 = !DILocation(line: 1039, column: 160, scope: !4389)
!4398 = !DILocation(line: 1039, column: 166, scope: !4389)
!4399 = !DILocation(line: 1039, column: 171, scope: !4389)
!4400 = !DILocation(line: 1039, column: 157, scope: !4389)
!4401 = !DILocation(line: 1039, column: 197, scope: !4389)
!4402 = !DILocation(line: 1039, column: 194, scope: !4389)
!4403 = !DILocation(line: 1039, column: 187, scope: !4389)
!4404 = !DILocation(line: 1039, column: 208, scope: !4389)
!4405 = !DILocation(line: 1039, column: 214, scope: !4389)
!4406 = !DILocation(line: 1039, column: 211, scope: !4389)
!4407 = !DILocation(line: 1039, column: 205, scope: !4389)
!4408 = !DILocation(line: 1039, column: 182, scope: !4389)
!4409 = !DILocation(line: 1039, column: 180, scope: !4389)
!4410 = !DILocation(line: 1039, column: 228, scope: !4389)
!4411 = !DILocation(line: 1039, column: 234, scope: !4389)
!4412 = !DILocation(line: 1039, column: 241, scope: !4413)
!4413 = !DILexicalBlockFile(scope: !4390, file: !910, discriminator: 3)
!4414 = !DILocation(line: 1039, column: 247, scope: !4413)
!4415 = !DILocation(line: 1039, column: 234, scope: !4413)
!4416 = !DILocation(line: 1039, column: 261, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4418, file: !910, discriminator: 4)
!4418 = distinct !DILexicalBlock(scope: !4390, file: !910, line: 1039, column: 253)
!4419 = !DILocation(line: 1039, column: 282, scope: !4417)
!4420 = !DILocation(line: 1039, column: 288, scope: !4417)
!4421 = !DILocation(line: 1039, column: 285, scope: !4417)
!4422 = !DILocation(line: 1039, column: 295, scope: !4417)
!4423 = !DILocation(line: 1039, column: 278, scope: !4417)
!4424 = !DILocation(line: 1039, column: 273, scope: !4417)
!4425 = !DILocation(line: 1039, column: 271, scope: !4417)
!4426 = !DILocation(line: 1039, column: 310, scope: !4417)
!4427 = !DILocation(line: 1039, column: 234, scope: !4417)
!4428 = distinct !{!4428, !4429}
!4429 = !DILocation(line: 1039, column: 234, scope: !4390)
!4430 = !DILocation(line: 1042, column: 9, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4361, file: !910, line: 1042, column: 9)
!4432 = !DILocation(line: 1042, column: 12, scope: !4431)
!4433 = !DILocation(line: 1042, column: 18, scope: !4431)
!4434 = !DILocation(line: 1042, column: 29, scope: !4431)
!4435 = !DILocation(line: 1042, column: 9, scope: !4361)
!4436 = !DILocation(line: 1043, column: 15, scope: !4431)
!4437 = !DILocation(line: 1043, column: 9, scope: !4431)
!4438 = !DILocation(line: 1044, column: 14, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4431, file: !910, line: 1044, column: 14)
!4440 = !DILocation(line: 1044, column: 17, scope: !4439)
!4441 = !DILocation(line: 1044, column: 23, scope: !4439)
!4442 = !DILocation(line: 1044, column: 34, scope: !4439)
!4443 = !DILocation(line: 1044, column: 14, scope: !4431)
!4444 = !DILocation(line: 1045, column: 15, scope: !4439)
!4445 = !DILocation(line: 1045, column: 9, scope: !4439)
!4446 = !DILocation(line: 1048, column: 16, scope: !4361)
!4447 = !DILocation(line: 1048, column: 19, scope: !4361)
!4448 = !DILocation(line: 1048, column: 30, scope: !4361)
!4449 = !DILocation(line: 1048, column: 40, scope: !4361)
!4450 = !DILocation(line: 1048, column: 43, scope: !4361)
!4451 = !DILocation(line: 1048, column: 54, scope: !4361)
!4452 = !DILocation(line: 1048, column: 60, scope: !4361)
!4453 = !DILocation(line: 1048, column: 37, scope: !4361)
!4454 = !DILocation(line: 1048, column: 65, scope: !4361)
!4455 = !DILocation(line: 1048, column: 11, scope: !4361)
!4456 = !DILocation(line: 1051, column: 11, scope: !4361)
!4457 = !DILocation(line: 1053, column: 12, scope: !4361)
!4458 = !DILocation(line: 1053, column: 5, scope: !4361)
!4459 = distinct !DISubprogram(name: "encode_residual_ch", scope: !910, file: !910, line: 822, type: !4460, isLocal: true, isDefinition: true, scopeLine: 823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!954, !1741, !954}
!4462 = !DILocalVariable(name: "a", arg: 1, scope: !4463, file: !4296, line: 127, type: !954)
!4463 = distinct !DISubprogram(name: "av_clip_c", scope: !4296, file: !4296, line: 127, type: !4464, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!954, !954, !954, !954}
!4466 = !DILocation(line: 127, column: 87, scope: !4463, inlinedAt: !4467)
!4467 = distinct !DILocation(line: 981, column: 34, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !910, line: 979, column: 45)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !910, line: 979, column: 17)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !910, line: 979, column: 17)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !910, line: 973, column: 53)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !910, line: 973, column: 13)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !910, line: 973, column: 13)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !910, line: 971, column: 12)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !910, line: 960, column: 37)
!4476 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 960, column: 9)
!4477 = !DILocalVariable(name: "amin", arg: 2, scope: !4463, file: !4296, line: 127, type: !954)
!4478 = !DILocation(line: 127, column: 94, scope: !4463, inlinedAt: !4467)
!4479 = !DILocalVariable(name: "amax", arg: 3, scope: !4463, file: !4296, line: 127, type: !954)
!4480 = !DILocation(line: 127, column: 104, scope: !4463, inlinedAt: !4467)
!4481 = !DILocation(line: 127, column: 87, scope: !4463, inlinedAt: !4482)
!4482 = distinct !DILocation(line: 902, column: 21, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !910, line: 899, column: 41)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !910, line: 899, column: 9)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !910, line: 899, column: 9)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !910, line: 892, column: 23)
!4487 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 890, column: 9)
!4488 = !DILocation(line: 127, column: 94, scope: !4463, inlinedAt: !4482)
!4489 = !DILocation(line: 127, column: 104, scope: !4463, inlinedAt: !4482)
!4490 = !DILocalVariable(name: "s", arg: 1, scope: !4459, file: !910, line: 822, type: !1741)
!4491 = !DILocation(line: 822, column: 50, scope: !4459)
!4492 = !DILocalVariable(name: "ch", arg: 2, scope: !4459, file: !910, line: 822, type: !954)
!4493 = !DILocation(line: 822, column: 57, scope: !4459)
!4494 = !DILocalVariable(name: "i", scope: !4459, file: !910, line: 824, type: !954)
!4495 = !DILocation(line: 824, column: 9, scope: !4459)
!4496 = !DILocalVariable(name: "n", scope: !4459, file: !910, line: 824, type: !954)
!4497 = !DILocation(line: 824, column: 12, scope: !4459)
!4498 = !DILocalVariable(name: "min_order", scope: !4459, file: !910, line: 825, type: !954)
!4499 = !DILocation(line: 825, column: 9, scope: !4459)
!4500 = !DILocalVariable(name: "max_order", scope: !4459, file: !910, line: 825, type: !954)
!4501 = !DILocation(line: 825, column: 20, scope: !4459)
!4502 = !DILocalVariable(name: "opt_order", scope: !4459, file: !910, line: 825, type: !954)
!4503 = !DILocation(line: 825, column: 31, scope: !4459)
!4504 = !DILocalVariable(name: "omethod", scope: !4459, file: !910, line: 825, type: !954)
!4505 = !DILocation(line: 825, column: 42, scope: !4459)
!4506 = !DILocalVariable(name: "frame", scope: !4459, file: !910, line: 826, type: !3289)
!4507 = !DILocation(line: 826, column: 16, scope: !4459)
!4508 = !DILocalVariable(name: "sub", scope: !4459, file: !910, line: 827, type: !3377)
!4509 = !DILocation(line: 827, column: 19, scope: !4459)
!4510 = !DILocalVariable(name: "coefs", scope: !4459, file: !910, line: 828, type: !4511)
!4511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 32768, align: 32, elements: !1874)
!4512 = !DILocation(line: 828, column: 13, scope: !4459)
!4513 = !DILocalVariable(name: "shift", scope: !4459, file: !910, line: 829, type: !4514)
!4514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 1024, align: 32, elements: !1791)
!4515 = !DILocation(line: 829, column: 9, scope: !4459)
!4516 = !DILocalVariable(name: "res", scope: !4459, file: !910, line: 830, type: !1922)
!4517 = !DILocation(line: 830, column: 14, scope: !4459)
!4518 = !DILocalVariable(name: "smp", scope: !4459, file: !910, line: 830, type: !1922)
!4519 = !DILocation(line: 830, column: 20, scope: !4459)
!4520 = !DILocation(line: 832, column: 14, scope: !4459)
!4521 = !DILocation(line: 832, column: 17, scope: !4459)
!4522 = !DILocation(line: 832, column: 11, scope: !4459)
!4523 = !DILocation(line: 833, column: 29, scope: !4459)
!4524 = !DILocation(line: 833, column: 12, scope: !4459)
!4525 = !DILocation(line: 833, column: 19, scope: !4459)
!4526 = !DILocation(line: 833, column: 9, scope: !4459)
!4527 = !DILocation(line: 834, column: 11, scope: !4459)
!4528 = !DILocation(line: 834, column: 16, scope: !4459)
!4529 = !DILocation(line: 834, column: 9, scope: !4459)
!4530 = !DILocation(line: 835, column: 11, scope: !4459)
!4531 = !DILocation(line: 835, column: 16, scope: !4459)
!4532 = !DILocation(line: 835, column: 9, scope: !4459)
!4533 = !DILocation(line: 836, column: 9, scope: !4459)
!4534 = !DILocation(line: 836, column: 16, scope: !4459)
!4535 = !DILocation(line: 836, column: 7, scope: !4459)
!4536 = !DILocation(line: 839, column: 12, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 839, column: 5)
!4538 = !DILocation(line: 839, column: 10, scope: !4537)
!4539 = !DILocation(line: 839, column: 17, scope: !4540)
!4540 = !DILexicalBlockFile(scope: !4541, file: !910, discriminator: 1)
!4541 = distinct !DILexicalBlock(scope: !4537, file: !910, line: 839, column: 5)
!4542 = !DILocation(line: 839, column: 21, scope: !4540)
!4543 = !DILocation(line: 839, column: 19, scope: !4540)
!4544 = !DILocation(line: 839, column: 5, scope: !4540)
!4545 = !DILocation(line: 840, column: 16, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4541, file: !910, line: 840, column: 12)
!4547 = !DILocation(line: 840, column: 12, scope: !4546)
!4548 = !DILocation(line: 840, column: 22, scope: !4546)
!4549 = !DILocation(line: 840, column: 19, scope: !4546)
!4550 = !DILocation(line: 840, column: 12, scope: !4541)
!4551 = !DILocation(line: 841, column: 13, scope: !4546)
!4552 = !DILocation(line: 840, column: 27, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4546, file: !910, discriminator: 1)
!4554 = !DILocation(line: 839, column: 25, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !4541, file: !910, discriminator: 2)
!4556 = !DILocation(line: 839, column: 5, scope: !4555)
!4557 = distinct !{!4557, !4558}
!4558 = !DILocation(line: 839, column: 5, scope: !4459)
!4559 = !DILocation(line: 842, column: 9, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 842, column: 9)
!4561 = !DILocation(line: 842, column: 14, scope: !4560)
!4562 = !DILocation(line: 842, column: 11, scope: !4560)
!4563 = !DILocation(line: 842, column: 9, scope: !4459)
!4564 = !DILocation(line: 843, column: 21, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !910, line: 842, column: 17)
!4566 = !DILocation(line: 843, column: 26, scope: !4565)
!4567 = !DILocation(line: 843, column: 36, scope: !4565)
!4568 = !DILocation(line: 843, column: 9, scope: !4565)
!4569 = !DILocation(line: 843, column: 14, scope: !4565)
!4570 = !DILocation(line: 843, column: 19, scope: !4565)
!4571 = !DILocation(line: 844, column: 18, scope: !4565)
!4572 = !DILocation(line: 844, column: 9, scope: !4565)
!4573 = !DILocation(line: 844, column: 16, scope: !4565)
!4574 = !DILocation(line: 845, column: 37, scope: !4565)
!4575 = !DILocation(line: 845, column: 40, scope: !4565)
!4576 = !DILocation(line: 845, column: 16, scope: !4565)
!4577 = !DILocation(line: 845, column: 9, scope: !4565)
!4578 = !DILocation(line: 849, column: 9, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 849, column: 9)
!4580 = !DILocation(line: 849, column: 16, scope: !4579)
!4581 = !DILocation(line: 849, column: 30, scope: !4579)
!4582 = !DILocation(line: 849, column: 33, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4579, file: !910, discriminator: 1)
!4584 = !DILocation(line: 849, column: 35, scope: !4583)
!4585 = !DILocation(line: 849, column: 9, scope: !4583)
!4586 = !DILocation(line: 850, column: 21, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4579, file: !910, line: 849, column: 40)
!4588 = !DILocation(line: 850, column: 26, scope: !4587)
!4589 = !DILocation(line: 850, column: 36, scope: !4587)
!4590 = !DILocation(line: 850, column: 9, scope: !4587)
!4591 = !DILocation(line: 850, column: 14, scope: !4587)
!4592 = !DILocation(line: 850, column: 19, scope: !4587)
!4593 = !DILocation(line: 851, column: 16, scope: !4587)
!4594 = !DILocation(line: 851, column: 9, scope: !4587)
!4595 = !DILocation(line: 851, column: 21, scope: !4587)
!4596 = !DILocation(line: 851, column: 26, scope: !4587)
!4597 = !DILocation(line: 851, column: 28, scope: !4587)
!4598 = !DILocation(line: 852, column: 37, scope: !4587)
!4599 = !DILocation(line: 852, column: 40, scope: !4587)
!4600 = !DILocation(line: 852, column: 16, scope: !4587)
!4601 = !DILocation(line: 852, column: 9, scope: !4587)
!4602 = !DILocation(line: 855, column: 17, scope: !4459)
!4603 = !DILocation(line: 855, column: 20, scope: !4459)
!4604 = !DILocation(line: 855, column: 28, scope: !4459)
!4605 = !DILocation(line: 855, column: 15, scope: !4459)
!4606 = !DILocation(line: 856, column: 17, scope: !4459)
!4607 = !DILocation(line: 856, column: 20, scope: !4459)
!4608 = !DILocation(line: 856, column: 28, scope: !4459)
!4609 = !DILocation(line: 856, column: 15, scope: !4459)
!4610 = !DILocation(line: 857, column: 15, scope: !4459)
!4611 = !DILocation(line: 857, column: 18, scope: !4459)
!4612 = !DILocation(line: 857, column: 26, scope: !4459)
!4613 = !DILocation(line: 857, column: 13, scope: !4459)
!4614 = !DILocation(line: 860, column: 5, scope: !4459)
!4615 = !DILocation(line: 860, column: 10, scope: !4459)
!4616 = !DILocation(line: 860, column: 15, scope: !4459)
!4617 = !DILocation(line: 861, column: 9, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 861, column: 9)
!4619 = !DILocation(line: 861, column: 12, scope: !4618)
!4620 = !DILocation(line: 861, column: 20, scope: !4618)
!4621 = !DILocation(line: 861, column: 29, scope: !4618)
!4622 = !DILocation(line: 861, column: 49, scope: !4618)
!4623 = !DILocation(line: 862, column: 9, scope: !4618)
!4624 = !DILocation(line: 862, column: 12, scope: !4618)
!4625 = !DILocation(line: 862, column: 20, scope: !4618)
!4626 = !DILocation(line: 862, column: 29, scope: !4618)
!4627 = !DILocation(line: 862, column: 50, scope: !4618)
!4628 = !DILocation(line: 862, column: 53, scope: !4629)
!4629 = !DILexicalBlockFile(scope: !4618, file: !910, discriminator: 1)
!4630 = !DILocation(line: 862, column: 58, scope: !4629)
!4631 = !DILocation(line: 862, column: 55, scope: !4629)
!4632 = !DILocation(line: 861, column: 9, scope: !4633)
!4633 = !DILexicalBlockFile(scope: !4459, file: !910, discriminator: 1)
!4634 = !DILocalVariable(name: "bits", scope: !4635, file: !910, line: 863, type: !4636)
!4635 = distinct !DILexicalBlock(scope: !4618, file: !910, line: 862, column: 69)
!4636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 320, align: 64, elements: !4637)
!4637 = !{!4638}
!4638 = !DISubrange(count: 5)
!4639 = !DILocation(line: 863, column: 18, scope: !4635)
!4640 = !DILocation(line: 864, column: 13, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4635, file: !910, line: 864, column: 13)
!4642 = !DILocation(line: 864, column: 23, scope: !4641)
!4643 = !DILocation(line: 864, column: 13, scope: !4635)
!4644 = !DILocation(line: 865, column: 23, scope: !4641)
!4645 = !DILocation(line: 865, column: 13, scope: !4641)
!4646 = !DILocation(line: 866, column: 19, scope: !4635)
!4647 = !DILocation(line: 867, column: 9, scope: !4635)
!4648 = !DILocation(line: 867, column: 17, scope: !4635)
!4649 = !DILocation(line: 868, column: 18, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4635, file: !910, line: 868, column: 9)
!4651 = !DILocation(line: 868, column: 16, scope: !4650)
!4652 = !DILocation(line: 868, column: 14, scope: !4650)
!4653 = !DILocation(line: 868, column: 29, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !4655, file: !910, discriminator: 1)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !910, line: 868, column: 9)
!4656 = !DILocation(line: 868, column: 34, scope: !4654)
!4657 = !DILocation(line: 868, column: 31, scope: !4654)
!4658 = !DILocation(line: 868, column: 9, scope: !4654)
!4659 = !DILocation(line: 869, column: 35, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !910, line: 868, column: 50)
!4661 = !DILocation(line: 869, column: 40, scope: !4660)
!4662 = !DILocation(line: 869, column: 45, scope: !4660)
!4663 = !DILocation(line: 869, column: 48, scope: !4660)
!4664 = !DILocation(line: 869, column: 13, scope: !4660)
!4665 = !DILocation(line: 870, column: 49, scope: !4660)
!4666 = !DILocation(line: 870, column: 52, scope: !4660)
!4667 = !DILocation(line: 870, column: 57, scope: !4660)
!4668 = !DILocation(line: 870, column: 23, scope: !4660)
!4669 = !DILocation(line: 870, column: 18, scope: !4660)
!4670 = !DILocation(line: 870, column: 13, scope: !4660)
!4671 = !DILocation(line: 870, column: 21, scope: !4660)
!4672 = !DILocation(line: 871, column: 22, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4660, file: !910, line: 871, column: 17)
!4674 = !DILocation(line: 871, column: 17, scope: !4673)
!4675 = !DILocation(line: 871, column: 32, scope: !4673)
!4676 = !DILocation(line: 871, column: 27, scope: !4673)
!4677 = !DILocation(line: 871, column: 25, scope: !4673)
!4678 = !DILocation(line: 871, column: 17, scope: !4660)
!4679 = !DILocation(line: 872, column: 29, scope: !4673)
!4680 = !DILocation(line: 872, column: 27, scope: !4673)
!4681 = !DILocation(line: 872, column: 17, scope: !4673)
!4682 = !DILocation(line: 873, column: 9, scope: !4660)
!4683 = !DILocation(line: 868, column: 46, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4655, file: !910, discriminator: 2)
!4685 = !DILocation(line: 868, column: 9, scope: !4684)
!4686 = distinct !{!4686, !4687}
!4687 = !DILocation(line: 868, column: 9, scope: !4635)
!4688 = !DILocation(line: 874, column: 22, scope: !4635)
!4689 = !DILocation(line: 874, column: 9, scope: !4635)
!4690 = !DILocation(line: 874, column: 14, scope: !4635)
!4691 = !DILocation(line: 874, column: 20, scope: !4635)
!4692 = !DILocation(line: 875, column: 26, scope: !4635)
!4693 = !DILocation(line: 875, column: 31, scope: !4635)
!4694 = !DILocation(line: 875, column: 38, scope: !4635)
!4695 = !DILocation(line: 875, column: 43, scope: !4635)
!4696 = !DILocation(line: 875, column: 36, scope: !4635)
!4697 = !DILocation(line: 875, column: 9, scope: !4635)
!4698 = !DILocation(line: 875, column: 14, scope: !4635)
!4699 = !DILocation(line: 875, column: 24, scope: !4635)
!4700 = !DILocation(line: 876, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4635, file: !910, line: 876, column: 13)
!4702 = !DILocation(line: 876, column: 18, scope: !4701)
!4703 = !DILocation(line: 876, column: 27, scope: !4701)
!4704 = !DILocation(line: 876, column: 24, scope: !4701)
!4705 = !DILocation(line: 876, column: 13, scope: !4635)
!4706 = !DILocation(line: 877, column: 35, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4701, file: !910, line: 876, column: 38)
!4708 = !DILocation(line: 877, column: 40, scope: !4707)
!4709 = !DILocation(line: 877, column: 45, scope: !4707)
!4710 = !DILocation(line: 877, column: 48, scope: !4707)
!4711 = !DILocation(line: 877, column: 53, scope: !4707)
!4712 = !DILocation(line: 877, column: 13, scope: !4707)
!4713 = !DILocation(line: 878, column: 39, scope: !4707)
!4714 = !DILocation(line: 878, column: 42, scope: !4707)
!4715 = !DILocation(line: 878, column: 47, scope: !4707)
!4716 = !DILocation(line: 878, column: 52, scope: !4707)
!4717 = !DILocation(line: 878, column: 13, scope: !4707)
!4718 = !DILocation(line: 879, column: 9, scope: !4707)
!4719 = !DILocation(line: 880, column: 37, scope: !4635)
!4720 = !DILocation(line: 880, column: 40, scope: !4635)
!4721 = !DILocation(line: 880, column: 45, scope: !4635)
!4722 = !DILocation(line: 880, column: 50, scope: !4635)
!4723 = !DILocation(line: 880, column: 16, scope: !4635)
!4724 = !DILocation(line: 880, column: 9, scope: !4635)
!4725 = !DILocation(line: 884, column: 5, scope: !4459)
!4726 = !DILocation(line: 884, column: 10, scope: !4459)
!4727 = !DILocation(line: 884, column: 15, scope: !4459)
!4728 = !DILocation(line: 885, column: 36, scope: !4459)
!4729 = !DILocation(line: 885, column: 39, scope: !4459)
!4730 = !DILocation(line: 885, column: 48, scope: !4459)
!4731 = !DILocation(line: 885, column: 53, scope: !4459)
!4732 = !DILocation(line: 885, column: 56, scope: !4459)
!4733 = !DILocation(line: 885, column: 67, scope: !4459)
!4734 = !DILocation(line: 886, column: 35, scope: !4459)
!4735 = !DILocation(line: 886, column: 38, scope: !4459)
!4736 = !DILocation(line: 886, column: 46, scope: !4459)
!4737 = !DILocation(line: 886, column: 67, scope: !4459)
!4738 = !DILocation(line: 886, column: 74, scope: !4459)
!4739 = !DILocation(line: 886, column: 81, scope: !4459)
!4740 = !DILocation(line: 886, column: 84, scope: !4459)
!4741 = !DILocation(line: 886, column: 92, scope: !4459)
!4742 = !DILocation(line: 887, column: 35, scope: !4459)
!4743 = !DILocation(line: 887, column: 38, scope: !4459)
!4744 = !DILocation(line: 887, column: 46, scope: !4459)
!4745 = !DILocation(line: 887, column: 58, scope: !4459)
!4746 = !DILocation(line: 885, column: 17, scope: !4459)
!4747 = !DILocation(line: 885, column: 15, scope: !4459)
!4748 = !DILocation(line: 890, column: 9, scope: !4487)
!4749 = !DILocation(line: 890, column: 17, scope: !4487)
!4750 = !DILocation(line: 890, column: 22, scope: !4487)
!4751 = !DILocation(line: 891, column: 9, scope: !4487)
!4752 = !DILocation(line: 891, column: 17, scope: !4487)
!4753 = !DILocation(line: 891, column: 22, scope: !4487)
!4754 = !DILocation(line: 892, column: 9, scope: !4487)
!4755 = !DILocation(line: 892, column: 17, scope: !4487)
!4756 = !DILocation(line: 890, column: 9, scope: !4633)
!4757 = !DILocalVariable(name: "levels", scope: !4486, file: !910, line: 893, type: !954)
!4758 = !DILocation(line: 893, column: 13, scope: !4486)
!4759 = !DILocation(line: 893, column: 27, scope: !4486)
!4760 = !DILocation(line: 893, column: 24, scope: !4486)
!4761 = !DILocalVariable(name: "bits", scope: !4486, file: !910, line: 894, type: !1137)
!4762 = !DILocation(line: 894, column: 18, scope: !4486)
!4763 = !DILocalVariable(name: "order", scope: !4486, file: !910, line: 895, type: !954)
!4764 = !DILocation(line: 895, column: 13, scope: !4486)
!4765 = !DILocalVariable(name: "opt_index", scope: !4486, file: !910, line: 896, type: !954)
!4766 = !DILocation(line: 896, column: 13, scope: !4486)
!4767 = !DILocation(line: 896, column: 25, scope: !4486)
!4768 = !DILocation(line: 896, column: 31, scope: !4486)
!4769 = !DILocation(line: 897, column: 21, scope: !4486)
!4770 = !DILocation(line: 897, column: 30, scope: !4486)
!4771 = !DILocation(line: 897, column: 19, scope: !4486)
!4772 = !DILocation(line: 898, column: 14, scope: !4486)
!4773 = !DILocation(line: 898, column: 9, scope: !4486)
!4774 = !DILocation(line: 898, column: 25, scope: !4486)
!4775 = !DILocation(line: 899, column: 18, scope: !4485)
!4776 = !DILocation(line: 899, column: 24, scope: !4485)
!4777 = !DILocation(line: 899, column: 16, scope: !4485)
!4778 = !DILocation(line: 899, column: 14, scope: !4485)
!4779 = !DILocation(line: 899, column: 28, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4484, file: !910, discriminator: 1)
!4781 = !DILocation(line: 899, column: 30, scope: !4780)
!4782 = !DILocation(line: 899, column: 9, scope: !4780)
!4783 = !DILocalVariable(name: "last_order", scope: !4483, file: !910, line: 900, type: !954)
!4784 = !DILocation(line: 900, column: 17, scope: !4483)
!4785 = !DILocation(line: 900, column: 30, scope: !4483)
!4786 = !DILocation(line: 901, column: 21, scope: !4483)
!4787 = !DILocation(line: 901, column: 36, scope: !4483)
!4788 = !DILocation(line: 901, column: 46, scope: !4483)
!4789 = !DILocation(line: 901, column: 45, scope: !4483)
!4790 = !DILocation(line: 901, column: 55, scope: !4483)
!4791 = !DILocation(line: 901, column: 62, scope: !4483)
!4792 = !DILocation(line: 901, column: 63, scope: !4483)
!4793 = !DILocation(line: 901, column: 59, scope: !4483)
!4794 = !DILocation(line: 901, column: 70, scope: !4483)
!4795 = !DILocation(line: 901, column: 68, scope: !4483)
!4796 = !DILocation(line: 901, column: 31, scope: !4483)
!4797 = !DILocation(line: 901, column: 77, scope: !4483)
!4798 = !DILocation(line: 901, column: 19, scope: !4483)
!4799 = !DILocation(line: 902, column: 31, scope: !4483)
!4800 = !DILocation(line: 902, column: 38, scope: !4483)
!4801 = !DILocation(line: 902, column: 48, scope: !4483)
!4802 = !DILocation(line: 902, column: 53, scope: !4483)
!4803 = !DILocation(line: 902, column: 63, scope: !4483)
!4804 = !DILocation(line: 902, column: 21, scope: !4483)
!4805 = !DILocation(line: 132, column: 9, scope: !4806, inlinedAt: !4482)
!4806 = distinct !DILexicalBlock(scope: !4463, file: !4296, line: 132, column: 9)
!4807 = !DILocation(line: 132, column: 13, scope: !4806, inlinedAt: !4482)
!4808 = !DILocation(line: 132, column: 11, scope: !4806, inlinedAt: !4482)
!4809 = !DILocation(line: 132, column: 9, scope: !4463, inlinedAt: !4482)
!4810 = !DILocation(line: 132, column: 26, scope: !4811, inlinedAt: !4482)
!4811 = !DILexicalBlockFile(scope: !4806, file: !4296, discriminator: 1)
!4812 = !DILocation(line: 132, column: 19, scope: !4811, inlinedAt: !4482)
!4813 = !DILocation(line: 133, column: 14, scope: !4814, inlinedAt: !4482)
!4814 = distinct !DILexicalBlock(scope: !4806, file: !4296, line: 133, column: 14)
!4815 = !DILocation(line: 133, column: 18, scope: !4814, inlinedAt: !4482)
!4816 = !DILocation(line: 133, column: 16, scope: !4814, inlinedAt: !4482)
!4817 = !DILocation(line: 133, column: 14, scope: !4806, inlinedAt: !4482)
!4818 = !DILocation(line: 133, column: 31, scope: !4819, inlinedAt: !4482)
!4819 = !DILexicalBlockFile(scope: !4814, file: !4296, discriminator: 1)
!4820 = !DILocation(line: 133, column: 24, scope: !4819, inlinedAt: !4482)
!4821 = !DILocation(line: 134, column: 17, scope: !4814, inlinedAt: !4482)
!4822 = !DILocation(line: 134, column: 10, scope: !4814, inlinedAt: !4482)
!4823 = !DILocation(line: 135, column: 1, scope: !4463, inlinedAt: !4482)
!4824 = !DILocation(line: 902, column: 19, scope: !4483)
!4825 = !DILocation(line: 903, column: 17, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4483, file: !910, line: 903, column: 17)
!4827 = !DILocation(line: 903, column: 26, scope: !4826)
!4828 = !DILocation(line: 903, column: 23, scope: !4826)
!4829 = !DILocation(line: 903, column: 17, scope: !4483)
!4830 = !DILocation(line: 904, column: 17, scope: !4826)
!4831 = !DILocation(line: 905, column: 17, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4483, file: !910, line: 905, column: 17)
!4833 = !DILocation(line: 905, column: 20, scope: !4832)
!4834 = !DILocation(line: 905, column: 29, scope: !4832)
!4835 = !DILocation(line: 905, column: 35, scope: !4832)
!4836 = !DILocation(line: 905, column: 38, scope: !4832)
!4837 = !DILocation(line: 905, column: 46, scope: !4832)
!4838 = !DILocation(line: 905, column: 33, scope: !4832)
!4839 = !DILocation(line: 905, column: 89, scope: !4832)
!4840 = !DILocation(line: 905, column: 95, scope: !4832)
!4841 = !DILocation(line: 905, column: 74, scope: !4832)
!4842 = !DILocation(line: 905, column: 72, scope: !4832)
!4843 = !DILocation(line: 905, column: 66, scope: !4832)
!4844 = !DILocation(line: 905, column: 100, scope: !4832)
!4845 = !DILocation(line: 905, column: 17, scope: !4483)
!4846 = !DILocation(line: 906, column: 17, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4832, file: !910, line: 905, column: 107)
!4848 = !DILocation(line: 906, column: 20, scope: !4847)
!4849 = !DILocation(line: 906, column: 29, scope: !4847)
!4850 = !DILocation(line: 906, column: 42, scope: !4847)
!4851 = !DILocation(line: 906, column: 47, scope: !4847)
!4852 = !DILocation(line: 906, column: 52, scope: !4847)
!4853 = !DILocation(line: 906, column: 55, scope: !4847)
!4854 = !DILocation(line: 906, column: 60, scope: !4847)
!4855 = !DILocation(line: 906, column: 70, scope: !4847)
!4856 = !DILocation(line: 906, column: 64, scope: !4847)
!4857 = !DILocation(line: 907, column: 48, scope: !4847)
!4858 = !DILocation(line: 907, column: 42, scope: !4847)
!4859 = !DILocation(line: 908, column: 13, scope: !4847)
!4860 = !DILocation(line: 909, column: 17, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4832, file: !910, line: 908, column: 20)
!4862 = !DILocation(line: 909, column: 20, scope: !4861)
!4863 = !DILocation(line: 909, column: 29, scope: !4861)
!4864 = !DILocation(line: 909, column: 42, scope: !4861)
!4865 = !DILocation(line: 909, column: 47, scope: !4861)
!4866 = !DILocation(line: 909, column: 52, scope: !4861)
!4867 = !DILocation(line: 909, column: 55, scope: !4861)
!4868 = !DILocation(line: 909, column: 60, scope: !4861)
!4869 = !DILocation(line: 909, column: 70, scope: !4861)
!4870 = !DILocation(line: 909, column: 64, scope: !4861)
!4871 = !DILocation(line: 910, column: 48, scope: !4861)
!4872 = !DILocation(line: 910, column: 42, scope: !4861)
!4873 = !DILocation(line: 912, column: 49, scope: !4483)
!4874 = !DILocation(line: 912, column: 52, scope: !4483)
!4875 = !DILocation(line: 912, column: 57, scope: !4483)
!4876 = !DILocation(line: 912, column: 62, scope: !4483)
!4877 = !DILocation(line: 912, column: 23, scope: !4483)
!4878 = !DILocation(line: 912, column: 18, scope: !4483)
!4879 = !DILocation(line: 912, column: 13, scope: !4483)
!4880 = !DILocation(line: 912, column: 21, scope: !4483)
!4881 = !DILocation(line: 913, column: 22, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4483, file: !910, line: 913, column: 17)
!4883 = !DILocation(line: 913, column: 17, scope: !4882)
!4884 = !DILocation(line: 913, column: 32, scope: !4882)
!4885 = !DILocation(line: 913, column: 27, scope: !4882)
!4886 = !DILocation(line: 913, column: 25, scope: !4882)
!4887 = !DILocation(line: 913, column: 17, scope: !4483)
!4888 = !DILocation(line: 914, column: 29, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4882, file: !910, line: 913, column: 44)
!4890 = !DILocation(line: 914, column: 27, scope: !4889)
!4891 = !DILocation(line: 915, column: 29, scope: !4889)
!4892 = !DILocation(line: 915, column: 27, scope: !4889)
!4893 = !DILocation(line: 916, column: 13, scope: !4889)
!4894 = !DILocation(line: 917, column: 9, scope: !4483)
!4895 = !DILocation(line: 899, column: 37, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !4484, file: !910, discriminator: 2)
!4897 = !DILocation(line: 899, column: 9, scope: !4896)
!4898 = distinct !{!4898, !4899}
!4899 = !DILocation(line: 899, column: 9, scope: !4486)
!4900 = !DILocation(line: 918, column: 18, scope: !4486)
!4901 = !DILocation(line: 919, column: 5, scope: !4486)
!4902 = !DILocation(line: 919, column: 16, scope: !4903)
!4903 = !DILexicalBlockFile(scope: !4904, file: !910, discriminator: 1)
!4904 = distinct !DILexicalBlock(scope: !4487, file: !910, line: 919, column: 16)
!4905 = !DILocation(line: 919, column: 24, scope: !4903)
!4906 = !DILocalVariable(name: "bits", scope: !4907, file: !910, line: 921, type: !4908)
!4907 = distinct !DILexicalBlock(scope: !4904, file: !910, line: 919, column: 30)
!4908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 2048, align: 64, elements: !1791)
!4909 = !DILocation(line: 921, column: 18, scope: !4907)
!4910 = !DILocation(line: 922, column: 19, scope: !4907)
!4911 = !DILocation(line: 923, column: 9, scope: !4907)
!4912 = !DILocation(line: 923, column: 17, scope: !4907)
!4913 = !DILocation(line: 924, column: 18, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4907, file: !910, line: 924, column: 9)
!4915 = !DILocation(line: 924, column: 27, scope: !4914)
!4916 = !DILocation(line: 924, column: 16, scope: !4914)
!4917 = !DILocation(line: 924, column: 14, scope: !4914)
!4918 = !DILocation(line: 924, column: 31, scope: !4919)
!4919 = !DILexicalBlockFile(scope: !4920, file: !910, discriminator: 1)
!4920 = distinct !DILexicalBlock(scope: !4914, file: !910, line: 924, column: 9)
!4921 = !DILocation(line: 924, column: 35, scope: !4919)
!4922 = !DILocation(line: 924, column: 33, scope: !4919)
!4923 = !DILocation(line: 924, column: 9, scope: !4919)
!4924 = !DILocation(line: 925, column: 17, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !910, line: 925, column: 17)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !910, line: 924, column: 51)
!4927 = !DILocation(line: 925, column: 20, scope: !4925)
!4928 = !DILocation(line: 925, column: 29, scope: !4925)
!4929 = !DILocation(line: 925, column: 35, scope: !4925)
!4930 = !DILocation(line: 925, column: 38, scope: !4925)
!4931 = !DILocation(line: 925, column: 46, scope: !4925)
!4932 = !DILocation(line: 925, column: 33, scope: !4925)
!4933 = !DILocation(line: 925, column: 89, scope: !4925)
!4934 = !DILocation(line: 925, column: 91, scope: !4925)
!4935 = !DILocation(line: 925, column: 74, scope: !4925)
!4936 = !DILocation(line: 925, column: 72, scope: !4925)
!4937 = !DILocation(line: 925, column: 66, scope: !4925)
!4938 = !DILocation(line: 925, column: 96, scope: !4925)
!4939 = !DILocation(line: 925, column: 17, scope: !4926)
!4940 = !DILocation(line: 926, column: 17, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4925, file: !910, line: 925, column: 103)
!4942 = !DILocation(line: 926, column: 20, scope: !4941)
!4943 = !DILocation(line: 926, column: 29, scope: !4941)
!4944 = !DILocation(line: 926, column: 42, scope: !4941)
!4945 = !DILocation(line: 926, column: 47, scope: !4941)
!4946 = !DILocation(line: 926, column: 52, scope: !4941)
!4947 = !DILocation(line: 926, column: 55, scope: !4941)
!4948 = !DILocation(line: 926, column: 56, scope: !4941)
!4949 = !DILocation(line: 926, column: 66, scope: !4941)
!4950 = !DILocation(line: 926, column: 60, scope: !4941)
!4951 = !DILocation(line: 926, column: 76, scope: !4941)
!4952 = !DILocation(line: 926, column: 70, scope: !4941)
!4953 = !DILocation(line: 927, column: 13, scope: !4941)
!4954 = !DILocation(line: 928, column: 17, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4925, file: !910, line: 927, column: 20)
!4956 = !DILocation(line: 928, column: 20, scope: !4955)
!4957 = !DILocation(line: 928, column: 29, scope: !4955)
!4958 = !DILocation(line: 928, column: 42, scope: !4955)
!4959 = !DILocation(line: 928, column: 47, scope: !4955)
!4960 = !DILocation(line: 928, column: 52, scope: !4955)
!4961 = !DILocation(line: 928, column: 55, scope: !4955)
!4962 = !DILocation(line: 928, column: 56, scope: !4955)
!4963 = !DILocation(line: 928, column: 66, scope: !4955)
!4964 = !DILocation(line: 928, column: 60, scope: !4955)
!4965 = !DILocation(line: 928, column: 76, scope: !4955)
!4966 = !DILocation(line: 928, column: 70, scope: !4955)
!4967 = !DILocation(line: 930, column: 49, scope: !4926)
!4968 = !DILocation(line: 930, column: 52, scope: !4926)
!4969 = !DILocation(line: 930, column: 57, scope: !4926)
!4970 = !DILocation(line: 930, column: 58, scope: !4926)
!4971 = !DILocation(line: 930, column: 23, scope: !4926)
!4972 = !DILocation(line: 930, column: 18, scope: !4926)
!4973 = !DILocation(line: 930, column: 13, scope: !4926)
!4974 = !DILocation(line: 930, column: 21, scope: !4926)
!4975 = !DILocation(line: 931, column: 22, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4926, file: !910, line: 931, column: 17)
!4977 = !DILocation(line: 931, column: 17, scope: !4976)
!4978 = !DILocation(line: 931, column: 32, scope: !4976)
!4979 = !DILocation(line: 931, column: 27, scope: !4976)
!4980 = !DILocation(line: 931, column: 25, scope: !4976)
!4981 = !DILocation(line: 931, column: 17, scope: !4926)
!4982 = !DILocation(line: 932, column: 29, scope: !4976)
!4983 = !DILocation(line: 932, column: 27, scope: !4976)
!4984 = !DILocation(line: 932, column: 17, scope: !4976)
!4985 = !DILocation(line: 933, column: 9, scope: !4926)
!4986 = !DILocation(line: 924, column: 47, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4920, file: !910, discriminator: 2)
!4988 = !DILocation(line: 924, column: 9, scope: !4987)
!4989 = distinct !{!4989, !4990}
!4990 = !DILocation(line: 924, column: 9, scope: !4907)
!4991 = !DILocation(line: 934, column: 18, scope: !4907)
!4992 = !DILocation(line: 935, column: 5, scope: !4907)
!4993 = !DILocation(line: 935, column: 16, scope: !4994)
!4994 = !DILexicalBlockFile(scope: !4995, file: !910, discriminator: 1)
!4995 = distinct !DILexicalBlock(scope: !4904, file: !910, line: 935, column: 16)
!4996 = !DILocation(line: 935, column: 24, scope: !4994)
!4997 = !DILocalVariable(name: "bits", scope: !4998, file: !910, line: 936, type: !4908)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !910, line: 935, column: 30)
!4999 = !DILocation(line: 936, column: 18, scope: !4998)
!5000 = !DILocalVariable(name: "step", scope: !4998, file: !910, line: 937, type: !954)
!5001 = !DILocation(line: 937, column: 13, scope: !4998)
!5002 = !DILocation(line: 939, column: 21, scope: !4998)
!5003 = !DILocation(line: 939, column: 31, scope: !4998)
!5004 = !DILocation(line: 939, column: 38, scope: !4998)
!5005 = !DILocation(line: 939, column: 48, scope: !4998)
!5006 = !DILocation(line: 939, column: 47, scope: !4998)
!5007 = !DILocation(line: 939, column: 58, scope: !4998)
!5008 = !DILocation(line: 939, column: 35, scope: !4998)
!5009 = !DILocation(line: 939, column: 19, scope: !4998)
!5010 = !DILocation(line: 940, column: 9, scope: !4998)
!5011 = !DILocation(line: 942, column: 19, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4998, file: !910, line: 942, column: 9)
!5013 = !DILocation(line: 942, column: 14, scope: !5012)
!5014 = !DILocation(line: 942, column: 25, scope: !5015)
!5015 = !DILexicalBlockFile(scope: !5016, file: !910, discriminator: 1)
!5016 = distinct !DILexicalBlock(scope: !5012, file: !910, line: 942, column: 9)
!5017 = !DILocation(line: 942, column: 9, scope: !5015)
!5018 = !DILocalVariable(name: "last", scope: !5019, file: !910, line: 943, type: !954)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !910, line: 942, column: 43)
!5020 = !DILocation(line: 943, column: 17, scope: !5019)
!5021 = !DILocation(line: 943, column: 24, scope: !5019)
!5022 = !DILocation(line: 944, column: 22, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !910, line: 944, column: 13)
!5024 = !DILocation(line: 944, column: 27, scope: !5023)
!5025 = !DILocation(line: 944, column: 26, scope: !5023)
!5026 = !DILocation(line: 944, column: 20, scope: !5023)
!5027 = !DILocation(line: 944, column: 18, scope: !5023)
!5028 = !DILocation(line: 944, column: 33, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !5030, file: !910, discriminator: 1)
!5030 = distinct !DILexicalBlock(scope: !5023, file: !910, line: 944, column: 13)
!5031 = !DILocation(line: 944, column: 38, scope: !5029)
!5032 = !DILocation(line: 944, column: 43, scope: !5029)
!5033 = !DILocation(line: 944, column: 42, scope: !5029)
!5034 = !DILocation(line: 944, column: 35, scope: !5029)
!5035 = !DILocation(line: 944, column: 13, scope: !5029)
!5036 = !DILocation(line: 945, column: 21, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !910, line: 945, column: 21)
!5038 = distinct !DILexicalBlock(scope: !5030, file: !910, line: 944, column: 60)
!5039 = !DILocation(line: 945, column: 25, scope: !5037)
!5040 = !DILocation(line: 945, column: 34, scope: !5037)
!5041 = !DILocation(line: 945, column: 23, scope: !5037)
!5042 = !DILocation(line: 945, column: 37, scope: !5037)
!5043 = !DILocation(line: 945, column: 40, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5037, file: !910, discriminator: 1)
!5045 = !DILocation(line: 945, column: 45, scope: !5044)
!5046 = !DILocation(line: 945, column: 42, scope: !5044)
!5047 = !DILocation(line: 945, column: 55, scope: !5044)
!5048 = !DILocation(line: 945, column: 63, scope: !5049)
!5049 = !DILexicalBlockFile(scope: !5037, file: !910, discriminator: 2)
!5050 = !DILocation(line: 945, column: 58, scope: !5049)
!5051 = !DILocation(line: 945, column: 66, scope: !5049)
!5052 = !DILocation(line: 945, column: 21, scope: !5049)
!5053 = !DILocation(line: 946, column: 21, scope: !5037)
!5054 = !DILocation(line: 947, column: 21, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5038, file: !910, line: 947, column: 21)
!5056 = !DILocation(line: 947, column: 24, scope: !5055)
!5057 = !DILocation(line: 947, column: 33, scope: !5055)
!5058 = !DILocation(line: 947, column: 39, scope: !5055)
!5059 = !DILocation(line: 947, column: 42, scope: !5055)
!5060 = !DILocation(line: 947, column: 50, scope: !5055)
!5061 = !DILocation(line: 947, column: 37, scope: !5055)
!5062 = !DILocation(line: 947, column: 93, scope: !5055)
!5063 = !DILocation(line: 947, column: 95, scope: !5055)
!5064 = !DILocation(line: 947, column: 78, scope: !5055)
!5065 = !DILocation(line: 947, column: 76, scope: !5055)
!5066 = !DILocation(line: 947, column: 70, scope: !5055)
!5067 = !DILocation(line: 947, column: 100, scope: !5055)
!5068 = !DILocation(line: 947, column: 21, scope: !5038)
!5069 = !DILocation(line: 948, column: 21, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5055, file: !910, line: 947, column: 107)
!5071 = !DILocation(line: 948, column: 24, scope: !5070)
!5072 = !DILocation(line: 948, column: 33, scope: !5070)
!5073 = !DILocation(line: 948, column: 46, scope: !5070)
!5074 = !DILocation(line: 948, column: 51, scope: !5070)
!5075 = !DILocation(line: 948, column: 56, scope: !5070)
!5076 = !DILocation(line: 948, column: 59, scope: !5070)
!5077 = !DILocation(line: 948, column: 60, scope: !5070)
!5078 = !DILocation(line: 948, column: 70, scope: !5070)
!5079 = !DILocation(line: 948, column: 64, scope: !5070)
!5080 = !DILocation(line: 948, column: 80, scope: !5070)
!5081 = !DILocation(line: 948, column: 74, scope: !5070)
!5082 = !DILocation(line: 949, column: 17, scope: !5070)
!5083 = !DILocation(line: 950, column: 21, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5055, file: !910, line: 949, column: 24)
!5085 = !DILocation(line: 950, column: 24, scope: !5084)
!5086 = !DILocation(line: 950, column: 33, scope: !5084)
!5087 = !DILocation(line: 950, column: 46, scope: !5084)
!5088 = !DILocation(line: 950, column: 51, scope: !5084)
!5089 = !DILocation(line: 950, column: 56, scope: !5084)
!5090 = !DILocation(line: 950, column: 59, scope: !5084)
!5091 = !DILocation(line: 950, column: 60, scope: !5084)
!5092 = !DILocation(line: 950, column: 70, scope: !5084)
!5093 = !DILocation(line: 950, column: 64, scope: !5084)
!5094 = !DILocation(line: 950, column: 80, scope: !5084)
!5095 = !DILocation(line: 950, column: 74, scope: !5084)
!5096 = !DILocation(line: 952, column: 53, scope: !5038)
!5097 = !DILocation(line: 952, column: 56, scope: !5038)
!5098 = !DILocation(line: 952, column: 61, scope: !5038)
!5099 = !DILocation(line: 952, column: 62, scope: !5038)
!5100 = !DILocation(line: 952, column: 27, scope: !5038)
!5101 = !DILocation(line: 952, column: 22, scope: !5038)
!5102 = !DILocation(line: 952, column: 17, scope: !5038)
!5103 = !DILocation(line: 952, column: 25, scope: !5038)
!5104 = !DILocation(line: 953, column: 26, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5038, file: !910, line: 953, column: 21)
!5106 = !DILocation(line: 953, column: 21, scope: !5105)
!5107 = !DILocation(line: 953, column: 36, scope: !5105)
!5108 = !DILocation(line: 953, column: 31, scope: !5105)
!5109 = !DILocation(line: 953, column: 29, scope: !5105)
!5110 = !DILocation(line: 953, column: 21, scope: !5038)
!5111 = !DILocation(line: 954, column: 33, scope: !5105)
!5112 = !DILocation(line: 954, column: 31, scope: !5105)
!5113 = !DILocation(line: 954, column: 21, scope: !5105)
!5114 = !DILocation(line: 955, column: 13, scope: !5038)
!5115 = !DILocation(line: 944, column: 54, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !5030, file: !910, discriminator: 2)
!5117 = !DILocation(line: 944, column: 51, scope: !5116)
!5118 = !DILocation(line: 944, column: 13, scope: !5116)
!5119 = distinct !{!5119, !5120}
!5120 = !DILocation(line: 944, column: 13, scope: !5019)
!5121 = !DILocation(line: 956, column: 9, scope: !5019)
!5122 = !DILocation(line: 942, column: 36, scope: !5123)
!5123 = !DILexicalBlockFile(scope: !5016, file: !910, discriminator: 2)
!5124 = !DILocation(line: 942, column: 9, scope: !5123)
!5125 = distinct !{!5125, !5126}
!5126 = !DILocation(line: 942, column: 9, scope: !4998)
!5127 = !DILocation(line: 957, column: 18, scope: !4998)
!5128 = !DILocation(line: 958, column: 5, scope: !4998)
!5129 = !DILocation(line: 960, column: 9, scope: !4476)
!5130 = !DILocation(line: 960, column: 12, scope: !4476)
!5131 = !DILocation(line: 960, column: 20, scope: !4476)
!5132 = !DILocation(line: 960, column: 9, scope: !4459)
!5133 = !DILocalVariable(name: "allsteps", scope: !4475, file: !910, line: 961, type: !954)
!5134 = !DILocation(line: 961, column: 13, scope: !4475)
!5135 = !DILocalVariable(name: "i", scope: !4475, file: !910, line: 962, type: !954)
!5136 = !DILocation(line: 962, column: 13, scope: !4475)
!5137 = !DILocalVariable(name: "step", scope: !4475, file: !910, line: 962, type: !954)
!5138 = !DILocation(line: 962, column: 16, scope: !4475)
!5139 = !DILocalVariable(name: "improved", scope: !4475, file: !910, line: 962, type: !954)
!5140 = !DILocation(line: 962, column: 22, scope: !4475)
!5141 = !DILocalVariable(name: "best_score", scope: !4475, file: !910, line: 963, type: !960)
!5142 = !DILocation(line: 963, column: 17, scope: !4475)
!5143 = !DILocalVariable(name: "qmax", scope: !4475, file: !910, line: 964, type: !952)
!5144 = !DILocation(line: 964, column: 17, scope: !4475)
!5145 = !DILocation(line: 966, column: 23, scope: !4475)
!5146 = !DILocation(line: 966, column: 26, scope: !4475)
!5147 = !DILocation(line: 966, column: 34, scope: !4475)
!5148 = !DILocation(line: 966, column: 54, scope: !4475)
!5149 = !DILocation(line: 966, column: 19, scope: !4475)
!5150 = !DILocation(line: 966, column: 60, scope: !4475)
!5151 = !DILocation(line: 966, column: 14, scope: !4475)
!5152 = !DILocation(line: 968, column: 15, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !4475, file: !910, line: 968, column: 9)
!5154 = !DILocation(line: 968, column: 14, scope: !5153)
!5155 = !DILocation(line: 968, column: 19, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5157, file: !910, discriminator: 1)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !910, line: 968, column: 9)
!5158 = !DILocation(line: 968, column: 21, scope: !5156)
!5159 = !DILocation(line: 968, column: 20, scope: !5156)
!5160 = !DILocation(line: 968, column: 9, scope: !5156)
!5161 = !DILocation(line: 969, column: 22, scope: !5157)
!5162 = !DILocation(line: 969, column: 13, scope: !5157)
!5163 = !DILocation(line: 968, column: 33, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5157, file: !910, discriminator: 2)
!5165 = !DILocation(line: 968, column: 9, scope: !5164)
!5166 = distinct !{!5166, !5167}
!5167 = !DILocation(line: 968, column: 9, scope: !4475)
!5168 = !DILocation(line: 971, column: 9, scope: !4475)
!5169 = distinct !{!5169, !5168}
!5170 = !DILocation(line: 972, column: 22, scope: !4474)
!5171 = !DILocation(line: 973, column: 23, scope: !4473)
!5172 = !DILocation(line: 973, column: 18, scope: !4473)
!5173 = !DILocation(line: 973, column: 28, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !4472, file: !910, discriminator: 1)
!5175 = !DILocation(line: 973, column: 35, scope: !5174)
!5176 = !DILocation(line: 973, column: 33, scope: !5174)
!5177 = !DILocation(line: 973, column: 13, scope: !5174)
!5178 = !DILocalVariable(name: "tmp", scope: !4471, file: !910, line: 974, type: !954)
!5179 = !DILocation(line: 974, column: 21, scope: !4471)
!5180 = !DILocation(line: 974, column: 27, scope: !4471)
!5181 = !DILocalVariable(name: "lpc_try", scope: !4471, file: !910, line: 975, type: !1790)
!5182 = !DILocation(line: 975, column: 25, scope: !4471)
!5183 = !DILocalVariable(name: "score", scope: !4471, file: !910, line: 976, type: !960)
!5184 = !DILocation(line: 976, column: 25, scope: !4471)
!5185 = !DILocalVariable(name: "diffsum", scope: !4471, file: !910, line: 977, type: !954)
!5186 = !DILocation(line: 977, column: 21, scope: !4471)
!5187 = !DILocation(line: 979, column: 23, scope: !4470)
!5188 = !DILocation(line: 979, column: 22, scope: !4470)
!5189 = !DILocation(line: 979, column: 27, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !4469, file: !910, discriminator: 1)
!5191 = !DILocation(line: 979, column: 29, scope: !5190)
!5192 = !DILocation(line: 979, column: 28, scope: !5190)
!5193 = !DILocation(line: 979, column: 17, scope: !5190)
!5194 = !DILocalVariable(name: "diff", scope: !4468, file: !910, line: 980, type: !954)
!5195 = !DILocation(line: 980, column: 25, scope: !4468)
!5196 = !DILocation(line: 980, column: 34, scope: !4468)
!5197 = !DILocation(line: 980, column: 38, scope: !4468)
!5198 = !DILocation(line: 980, column: 43, scope: !4468)
!5199 = !DILocation(line: 980, column: 48, scope: !4468)
!5200 = !DILocation(line: 981, column: 65, scope: !4468)
!5201 = !DILocation(line: 981, column: 44, scope: !4468)
!5202 = !DILocation(line: 981, column: 50, scope: !4468)
!5203 = !DILocation(line: 981, column: 60, scope: !4468)
!5204 = !DILocation(line: 981, column: 70, scope: !4468)
!5205 = !DILocation(line: 981, column: 68, scope: !4468)
!5206 = !DILocation(line: 981, column: 77, scope: !4468)
!5207 = !DILocation(line: 981, column: 76, scope: !4468)
!5208 = !DILocation(line: 981, column: 83, scope: !4468)
!5209 = !DILocation(line: 981, column: 34, scope: !4468)
!5210 = !DILocation(line: 132, column: 9, scope: !4806, inlinedAt: !4467)
!5211 = !DILocation(line: 132, column: 13, scope: !4806, inlinedAt: !4467)
!5212 = !DILocation(line: 132, column: 11, scope: !4806, inlinedAt: !4467)
!5213 = !DILocation(line: 132, column: 9, scope: !4463, inlinedAt: !4467)
!5214 = !DILocation(line: 132, column: 26, scope: !4811, inlinedAt: !4467)
!5215 = !DILocation(line: 132, column: 19, scope: !4811, inlinedAt: !4467)
!5216 = !DILocation(line: 133, column: 14, scope: !4814, inlinedAt: !4467)
!5217 = !DILocation(line: 133, column: 18, scope: !4814, inlinedAt: !4467)
!5218 = !DILocation(line: 133, column: 16, scope: !4814, inlinedAt: !4467)
!5219 = !DILocation(line: 133, column: 14, scope: !4806, inlinedAt: !4467)
!5220 = !DILocation(line: 133, column: 31, scope: !4819, inlinedAt: !4467)
!5221 = !DILocation(line: 133, column: 24, scope: !4819, inlinedAt: !4467)
!5222 = !DILocation(line: 134, column: 17, scope: !4814, inlinedAt: !4467)
!5223 = !DILocation(line: 134, column: 10, scope: !4814, inlinedAt: !4467)
!5224 = !DILocation(line: 135, column: 1, scope: !4463, inlinedAt: !4467)
!5225 = !DILocation(line: 981, column: 29, scope: !4468)
!5226 = !DILocation(line: 981, column: 21, scope: !4468)
!5227 = !DILocation(line: 981, column: 32, scope: !4468)
!5228 = !DILocation(line: 982, column: 25, scope: !4468)
!5229 = !DILocation(line: 983, column: 34, scope: !4468)
!5230 = !DILocation(line: 983, column: 33, scope: !4468)
!5231 = !DILocation(line: 983, column: 32, scope: !4468)
!5232 = !DILocation(line: 983, column: 29, scope: !4468)
!5233 = !DILocation(line: 984, column: 17, scope: !4468)
!5234 = !DILocation(line: 979, column: 41, scope: !5235)
!5235 = !DILexicalBlockFile(scope: !4469, file: !910, discriminator: 2)
!5236 = !DILocation(line: 979, column: 17, scope: !5235)
!5237 = distinct !{!5237, !5238}
!5238 = !DILocation(line: 979, column: 17, scope: !4471)
!5239 = !DILocation(line: 985, column: 21, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !4471, file: !910, line: 985, column: 21)
!5241 = !DILocation(line: 985, column: 29, scope: !5240)
!5242 = !DILocation(line: 985, column: 21, scope: !4471)
!5243 = !DILocation(line: 986, column: 21, scope: !5240)
!5244 = !DILocation(line: 988, column: 21, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !4471, file: !910, line: 988, column: 21)
!5246 = !DILocation(line: 988, column: 24, scope: !5245)
!5247 = !DILocation(line: 988, column: 33, scope: !5245)
!5248 = !DILocation(line: 988, column: 39, scope: !5245)
!5249 = !DILocation(line: 988, column: 42, scope: !5245)
!5250 = !DILocation(line: 988, column: 50, scope: !5245)
!5251 = !DILocation(line: 988, column: 37, scope: !5245)
!5252 = !DILocation(line: 988, column: 93, scope: !5245)
!5253 = !DILocation(line: 988, column: 103, scope: !5245)
!5254 = !DILocation(line: 988, column: 107, scope: !5245)
!5255 = !DILocation(line: 988, column: 78, scope: !5245)
!5256 = !DILocation(line: 988, column: 76, scope: !5245)
!5257 = !DILocation(line: 988, column: 70, scope: !5245)
!5258 = !DILocation(line: 988, column: 112, scope: !5245)
!5259 = !DILocation(line: 988, column: 21, scope: !4471)
!5260 = !DILocation(line: 989, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5245, file: !910, line: 988, column: 119)
!5262 = !DILocation(line: 989, column: 24, scope: !5261)
!5263 = !DILocation(line: 989, column: 33, scope: !5261)
!5264 = !DILocation(line: 989, column: 46, scope: !5261)
!5265 = !DILocation(line: 989, column: 51, scope: !5261)
!5266 = !DILocation(line: 989, column: 56, scope: !5261)
!5267 = !DILocation(line: 989, column: 59, scope: !5261)
!5268 = !DILocation(line: 989, column: 70, scope: !5261)
!5269 = !DILocation(line: 989, column: 85, scope: !5261)
!5270 = !DILocation(line: 989, column: 94, scope: !5261)
!5271 = !DILocation(line: 989, column: 79, scope: !5261)
!5272 = !DILocation(line: 990, column: 17, scope: !5261)
!5273 = !DILocation(line: 991, column: 21, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5245, file: !910, line: 990, column: 24)
!5275 = !DILocation(line: 991, column: 24, scope: !5274)
!5276 = !DILocation(line: 991, column: 33, scope: !5274)
!5277 = !DILocation(line: 991, column: 46, scope: !5274)
!5278 = !DILocation(line: 991, column: 51, scope: !5274)
!5279 = !DILocation(line: 991, column: 56, scope: !5274)
!5280 = !DILocation(line: 991, column: 59, scope: !5274)
!5281 = !DILocation(line: 991, column: 70, scope: !5274)
!5282 = !DILocation(line: 991, column: 85, scope: !5274)
!5283 = !DILocation(line: 991, column: 94, scope: !5274)
!5284 = !DILocation(line: 991, column: 79, scope: !5274)
!5285 = !DILocation(line: 993, column: 51, scope: !4471)
!5286 = !DILocation(line: 993, column: 54, scope: !4471)
!5287 = !DILocation(line: 993, column: 59, scope: !4471)
!5288 = !DILocation(line: 993, column: 25, scope: !4471)
!5289 = !DILocation(line: 993, column: 23, scope: !4471)
!5290 = !DILocation(line: 994, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !4471, file: !910, line: 994, column: 21)
!5292 = !DILocation(line: 994, column: 29, scope: !5291)
!5293 = !DILocation(line: 994, column: 27, scope: !5291)
!5294 = !DILocation(line: 994, column: 21, scope: !4471)
!5295 = !DILocation(line: 995, column: 34, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5291, file: !910, line: 994, column: 41)
!5297 = !DILocation(line: 995, column: 32, scope: !5296)
!5298 = !DILocation(line: 996, column: 34, scope: !5296)
!5299 = !DILocation(line: 996, column: 43, scope: !5296)
!5300 = !DILocation(line: 996, column: 28, scope: !5296)
!5301 = !DILocation(line: 996, column: 21, scope: !5296)
!5302 = !DILocation(line: 997, column: 29, scope: !5296)
!5303 = !DILocation(line: 998, column: 17, scope: !5296)
!5304 = !DILocation(line: 999, column: 13, scope: !4471)
!5305 = !DILocation(line: 973, column: 49, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !4472, file: !910, discriminator: 2)
!5307 = !DILocation(line: 973, column: 13, scope: !5306)
!5308 = distinct !{!5308, !5309}
!5309 = !DILocation(line: 973, column: 13, scope: !4474)
!5310 = !DILocation(line: 1000, column: 9, scope: !4474)
!5311 = !DILocation(line: 1000, column: 17, scope: !5312)
!5312 = !DILexicalBlockFile(scope: !4475, file: !910, discriminator: 1)
!5313 = !DILocation(line: 1000, column: 9, scope: !5312)
!5314 = !DILocation(line: 1001, column: 5, scope: !4475)
!5315 = !DILocation(line: 1003, column: 18, scope: !4459)
!5316 = !DILocation(line: 1003, column: 5, scope: !4459)
!5317 = !DILocation(line: 1003, column: 10, scope: !4459)
!5318 = !DILocation(line: 1003, column: 16, scope: !4459)
!5319 = !DILocation(line: 1004, column: 22, scope: !4459)
!5320 = !DILocation(line: 1004, column: 27, scope: !4459)
!5321 = !DILocation(line: 1004, column: 35, scope: !4459)
!5322 = !DILocation(line: 1004, column: 40, scope: !4459)
!5323 = !DILocation(line: 1004, column: 45, scope: !4459)
!5324 = !DILocation(line: 1004, column: 32, scope: !4459)
!5325 = !DILocation(line: 1004, column: 5, scope: !4459)
!5326 = !DILocation(line: 1004, column: 10, scope: !4459)
!5327 = !DILocation(line: 1004, column: 20, scope: !4459)
!5328 = !DILocation(line: 1005, column: 24, scope: !4459)
!5329 = !DILocation(line: 1005, column: 29, scope: !4459)
!5330 = !DILocation(line: 1005, column: 34, scope: !4459)
!5331 = !DILocation(line: 1005, column: 18, scope: !4459)
!5332 = !DILocation(line: 1005, column: 5, scope: !4459)
!5333 = !DILocation(line: 1005, column: 10, scope: !4459)
!5334 = !DILocation(line: 1005, column: 16, scope: !4459)
!5335 = !DILocation(line: 1006, column: 12, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 1006, column: 5)
!5337 = !DILocation(line: 1006, column: 10, scope: !5336)
!5338 = !DILocation(line: 1006, column: 17, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5340, file: !910, discriminator: 1)
!5340 = distinct !DILexicalBlock(scope: !5336, file: !910, line: 1006, column: 5)
!5341 = !DILocation(line: 1006, column: 21, scope: !5339)
!5342 = !DILocation(line: 1006, column: 26, scope: !5339)
!5343 = !DILocation(line: 1006, column: 19, scope: !5339)
!5344 = !DILocation(line: 1006, column: 5, scope: !5339)
!5345 = !DILocation(line: 1007, column: 45, scope: !5340)
!5346 = !DILocation(line: 1007, column: 25, scope: !5340)
!5347 = !DILocation(line: 1007, column: 31, scope: !5340)
!5348 = !DILocation(line: 1007, column: 36, scope: !5340)
!5349 = !DILocation(line: 1007, column: 41, scope: !5340)
!5350 = !DILocation(line: 1007, column: 20, scope: !5340)
!5351 = !DILocation(line: 1007, column: 9, scope: !5340)
!5352 = !DILocation(line: 1007, column: 14, scope: !5340)
!5353 = !DILocation(line: 1007, column: 23, scope: !5340)
!5354 = !DILocation(line: 1006, column: 34, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5340, file: !910, discriminator: 2)
!5356 = !DILocation(line: 1006, column: 5, scope: !5355)
!5357 = distinct !{!5357, !5358}
!5358 = !DILocation(line: 1006, column: 5, scope: !4459)
!5359 = !DILocation(line: 1009, column: 9, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !4459, file: !910, line: 1009, column: 9)
!5361 = !DILocation(line: 1009, column: 12, scope: !5360)
!5362 = !DILocation(line: 1009, column: 21, scope: !5360)
!5363 = !DILocation(line: 1009, column: 27, scope: !5360)
!5364 = !DILocation(line: 1009, column: 30, scope: !5360)
!5365 = !DILocation(line: 1009, column: 38, scope: !5360)
!5366 = !DILocation(line: 1009, column: 25, scope: !5360)
!5367 = !DILocation(line: 1009, column: 81, scope: !5360)
!5368 = !DILocation(line: 1009, column: 91, scope: !5360)
!5369 = !DILocation(line: 1009, column: 66, scope: !5360)
!5370 = !DILocation(line: 1009, column: 64, scope: !5360)
!5371 = !DILocation(line: 1009, column: 58, scope: !5360)
!5372 = !DILocation(line: 1009, column: 96, scope: !5360)
!5373 = !DILocation(line: 1009, column: 9, scope: !4459)
!5374 = !DILocation(line: 1010, column: 9, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5360, file: !910, line: 1009, column: 103)
!5376 = !DILocation(line: 1010, column: 12, scope: !5375)
!5377 = !DILocation(line: 1010, column: 21, scope: !5375)
!5378 = !DILocation(line: 1010, column: 34, scope: !5375)
!5379 = !DILocation(line: 1010, column: 39, scope: !5375)
!5380 = !DILocation(line: 1010, column: 44, scope: !5375)
!5381 = !DILocation(line: 1010, column: 47, scope: !5375)
!5382 = !DILocation(line: 1010, column: 52, scope: !5375)
!5383 = !DILocation(line: 1010, column: 59, scope: !5375)
!5384 = !DILocation(line: 1010, column: 64, scope: !5375)
!5385 = !DILocation(line: 1010, column: 71, scope: !5375)
!5386 = !DILocation(line: 1010, column: 76, scope: !5375)
!5387 = !DILocation(line: 1011, column: 5, scope: !5375)
!5388 = !DILocation(line: 1012, column: 9, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5360, file: !910, line: 1011, column: 12)
!5390 = !DILocation(line: 1012, column: 12, scope: !5389)
!5391 = !DILocation(line: 1012, column: 21, scope: !5389)
!5392 = !DILocation(line: 1012, column: 34, scope: !5389)
!5393 = !DILocation(line: 1012, column: 39, scope: !5389)
!5394 = !DILocation(line: 1012, column: 44, scope: !5389)
!5395 = !DILocation(line: 1012, column: 47, scope: !5389)
!5396 = !DILocation(line: 1012, column: 52, scope: !5389)
!5397 = !DILocation(line: 1012, column: 59, scope: !5389)
!5398 = !DILocation(line: 1012, column: 64, scope: !5389)
!5399 = !DILocation(line: 1012, column: 71, scope: !5389)
!5400 = !DILocation(line: 1012, column: 76, scope: !5389)
!5401 = !DILocation(line: 1015, column: 31, scope: !4459)
!5402 = !DILocation(line: 1015, column: 34, scope: !4459)
!5403 = !DILocation(line: 1015, column: 39, scope: !4459)
!5404 = !DILocation(line: 1015, column: 44, scope: !4459)
!5405 = !DILocation(line: 1015, column: 5, scope: !4459)
!5406 = !DILocation(line: 1017, column: 33, scope: !4459)
!5407 = !DILocation(line: 1017, column: 36, scope: !4459)
!5408 = !DILocation(line: 1017, column: 41, scope: !4459)
!5409 = !DILocation(line: 1017, column: 46, scope: !4459)
!5410 = !DILocation(line: 1017, column: 12, scope: !4459)
!5411 = !DILocation(line: 1017, column: 5, scope: !4459)
!5412 = !DILocation(line: 1018, column: 1, scope: !4459)
!5413 = distinct !DISubprogram(name: "subframe_count_exact", scope: !910, file: !910, line: 551, type: !5414, isLocal: true, isDefinition: true, scopeLine: 553, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{!996, !1741, !3377, !954}
!5416 = !DILocalVariable(name: "s", arg: 1, scope: !5413, file: !910, line: 551, type: !1741)
!5417 = !DILocation(line: 551, column: 57, scope: !5413)
!5418 = !DILocalVariable(name: "sub", arg: 2, scope: !5413, file: !910, line: 551, type: !3377)
!5419 = !DILocation(line: 551, column: 74, scope: !5413)
!5420 = !DILocalVariable(name: "pred_order", arg: 3, scope: !5413, file: !910, line: 552, type: !954)
!5421 = !DILocation(line: 552, column: 42, scope: !5413)
!5422 = !DILocalVariable(name: "p", scope: !5413, file: !910, line: 554, type: !954)
!5423 = !DILocation(line: 554, column: 9, scope: !5413)
!5424 = !DILocalVariable(name: "porder", scope: !5413, file: !910, line: 554, type: !954)
!5425 = !DILocation(line: 554, column: 12, scope: !5413)
!5426 = !DILocalVariable(name: "psize", scope: !5413, file: !910, line: 554, type: !954)
!5427 = !DILocation(line: 554, column: 20, scope: !5413)
!5428 = !DILocalVariable(name: "i", scope: !5413, file: !910, line: 555, type: !954)
!5429 = !DILocation(line: 555, column: 9, scope: !5413)
!5430 = !DILocalVariable(name: "part_end", scope: !5413, file: !910, line: 555, type: !954)
!5431 = !DILocation(line: 555, column: 12, scope: !5413)
!5432 = !DILocalVariable(name: "count", scope: !5413, file: !910, line: 556, type: !996)
!5433 = !DILocation(line: 556, column: 14, scope: !5413)
!5434 = !DILocation(line: 559, column: 11, scope: !5413)
!5435 = !DILocation(line: 561, column: 9, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5413, file: !910, line: 561, column: 9)
!5437 = !DILocation(line: 561, column: 14, scope: !5436)
!5438 = !DILocation(line: 561, column: 9, scope: !5413)
!5439 = !DILocation(line: 562, column: 18, scope: !5436)
!5440 = !DILocation(line: 562, column: 23, scope: !5436)
!5441 = !DILocation(line: 562, column: 15, scope: !5436)
!5442 = !DILocation(line: 562, column: 9, scope: !5436)
!5443 = !DILocation(line: 565, column: 9, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5413, file: !910, line: 565, column: 9)
!5445 = !DILocation(line: 565, column: 14, scope: !5444)
!5446 = !DILocation(line: 565, column: 19, scope: !5444)
!5447 = !DILocation(line: 565, column: 9, scope: !5413)
!5448 = !DILocation(line: 566, column: 18, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5444, file: !910, line: 565, column: 25)
!5450 = !DILocation(line: 566, column: 23, scope: !5449)
!5451 = !DILocation(line: 566, column: 15, scope: !5449)
!5452 = !DILocation(line: 567, column: 5, scope: !5449)
!5453 = !DILocation(line: 567, column: 16, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !5455, file: !910, discriminator: 1)
!5455 = distinct !DILexicalBlock(scope: !5444, file: !910, line: 567, column: 16)
!5456 = !DILocation(line: 567, column: 21, scope: !5454)
!5457 = !DILocation(line: 567, column: 26, scope: !5454)
!5458 = !DILocation(line: 568, column: 18, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5455, file: !910, line: 567, column: 32)
!5460 = !DILocation(line: 568, column: 21, scope: !5459)
!5461 = !DILocation(line: 568, column: 27, scope: !5459)
!5462 = !DILocation(line: 568, column: 39, scope: !5459)
!5463 = !DILocation(line: 568, column: 44, scope: !5459)
!5464 = !DILocation(line: 568, column: 37, scope: !5459)
!5465 = !DILocation(line: 568, column: 15, scope: !5459)
!5466 = !DILocation(line: 569, column: 5, scope: !5459)
!5467 = !DILocation(line: 571, column: 18, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5455, file: !910, line: 569, column: 12)
!5469 = !DILocation(line: 571, column: 31, scope: !5468)
!5470 = !DILocation(line: 571, column: 36, scope: !5468)
!5471 = !DILocation(line: 571, column: 29, scope: !5468)
!5472 = !DILocation(line: 571, column: 15, scope: !5468)
!5473 = !DILocation(line: 574, column: 13, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5468, file: !910, line: 574, column: 13)
!5475 = !DILocation(line: 574, column: 18, scope: !5474)
!5476 = !DILocation(line: 574, column: 23, scope: !5474)
!5477 = !DILocation(line: 574, column: 13, scope: !5468)
!5478 = !DILocation(line: 575, column: 30, scope: !5474)
!5479 = !DILocation(line: 575, column: 43, scope: !5474)
!5480 = !DILocation(line: 575, column: 46, scope: !5474)
!5481 = !DILocation(line: 575, column: 54, scope: !5474)
!5482 = !DILocation(line: 575, column: 41, scope: !5474)
!5483 = !DILocation(line: 575, column: 28, scope: !5474)
!5484 = !DILocation(line: 575, column: 22, scope: !5474)
!5485 = !DILocation(line: 575, column: 19, scope: !5474)
!5486 = !DILocation(line: 575, column: 13, scope: !5474)
!5487 = !DILocation(line: 578, column: 15, scope: !5468)
!5488 = !DILocation(line: 581, column: 18, scope: !5468)
!5489 = !DILocation(line: 581, column: 23, scope: !5468)
!5490 = !DILocation(line: 581, column: 26, scope: !5468)
!5491 = !DILocation(line: 581, column: 16, scope: !5468)
!5492 = !DILocation(line: 582, column: 17, scope: !5468)
!5493 = !DILocation(line: 582, column: 20, scope: !5468)
!5494 = !DILocation(line: 582, column: 26, scope: !5468)
!5495 = !DILocation(line: 582, column: 39, scope: !5468)
!5496 = !DILocation(line: 582, column: 36, scope: !5468)
!5497 = !DILocation(line: 582, column: 15, scope: !5468)
!5498 = !DILocation(line: 583, column: 15, scope: !5468)
!5499 = !DILocation(line: 586, column: 13, scope: !5468)
!5500 = !DILocation(line: 586, column: 11, scope: !5468)
!5501 = !DILocation(line: 587, column: 20, scope: !5468)
!5502 = !DILocation(line: 587, column: 18, scope: !5468)
!5503 = !DILocation(line: 588, column: 16, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5468, file: !910, line: 588, column: 9)
!5505 = !DILocation(line: 588, column: 14, scope: !5504)
!5506 = !DILocation(line: 588, column: 21, scope: !5507)
!5507 = !DILexicalBlockFile(scope: !5508, file: !910, discriminator: 1)
!5508 = distinct !DILexicalBlock(scope: !5504, file: !910, line: 588, column: 9)
!5509 = !DILocation(line: 588, column: 30, scope: !5507)
!5510 = !DILocation(line: 588, column: 27, scope: !5507)
!5511 = !DILocation(line: 588, column: 23, scope: !5507)
!5512 = !DILocation(line: 588, column: 9, scope: !5507)
!5513 = !DILocalVariable(name: "k", scope: !5514, file: !910, line: 589, type: !954)
!5514 = distinct !DILexicalBlock(scope: !5508, file: !910, line: 588, column: 43)
!5515 = !DILocation(line: 589, column: 17, scope: !5514)
!5516 = !DILocation(line: 589, column: 36, scope: !5514)
!5517 = !DILocation(line: 589, column: 21, scope: !5514)
!5518 = !DILocation(line: 589, column: 26, scope: !5514)
!5519 = !DILocation(line: 589, column: 29, scope: !5514)
!5520 = !DILocation(line: 590, column: 22, scope: !5514)
!5521 = !DILocation(line: 590, column: 27, scope: !5514)
!5522 = !DILocation(line: 590, column: 30, scope: !5514)
!5523 = !DILocation(line: 590, column: 19, scope: !5514)
!5524 = !DILocation(line: 591, column: 54, scope: !5514)
!5525 = !DILocation(line: 591, column: 40, scope: !5514)
!5526 = !DILocation(line: 591, column: 45, scope: !5514)
!5527 = !DILocation(line: 591, column: 58, scope: !5514)
!5528 = !DILocation(line: 591, column: 69, scope: !5514)
!5529 = !DILocation(line: 591, column: 67, scope: !5514)
!5530 = !DILocation(line: 591, column: 72, scope: !5514)
!5531 = !DILocation(line: 591, column: 22, scope: !5514)
!5532 = !DILocation(line: 591, column: 19, scope: !5514)
!5533 = !DILocation(line: 592, column: 17, scope: !5514)
!5534 = !DILocation(line: 592, column: 15, scope: !5514)
!5535 = !DILocation(line: 593, column: 26, scope: !5514)
!5536 = !DILocation(line: 593, column: 29, scope: !5514)
!5537 = !DILocation(line: 593, column: 35, scope: !5514)
!5538 = !DILocation(line: 593, column: 49, scope: !5514)
!5539 = !DILocation(line: 593, column: 60, scope: !5514)
!5540 = !DILocation(line: 593, column: 58, scope: !5514)
!5541 = !DILocation(line: 593, column: 46, scope: !5514)
!5542 = !DILocation(line: 593, column: 25, scope: !5514)
!5543 = !DILocation(line: 593, column: 70, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !5514, file: !910, discriminator: 1)
!5545 = !DILocation(line: 593, column: 81, scope: !5544)
!5546 = !DILocation(line: 593, column: 79, scope: !5544)
!5547 = !DILocation(line: 593, column: 25, scope: !5544)
!5548 = !DILocation(line: 593, column: 91, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5514, file: !910, discriminator: 2)
!5550 = !DILocation(line: 593, column: 94, scope: !5549)
!5551 = !DILocation(line: 593, column: 100, scope: !5549)
!5552 = !DILocation(line: 593, column: 25, scope: !5549)
!5553 = !DILocation(line: 593, column: 25, scope: !5554)
!5554 = !DILexicalBlockFile(scope: !5514, file: !910, discriminator: 3)
!5555 = !DILocation(line: 593, column: 22, scope: !5554)
!5556 = !DILocation(line: 594, column: 9, scope: !5514)
!5557 = !DILocation(line: 588, column: 39, scope: !5558)
!5558 = !DILexicalBlockFile(scope: !5508, file: !910, discriminator: 2)
!5559 = !DILocation(line: 588, column: 9, scope: !5558)
!5560 = distinct !{!5560, !5561}
!5561 = !DILocation(line: 588, column: 9, scope: !5468)
!5562 = !DILocation(line: 597, column: 12, scope: !5413)
!5563 = !DILocation(line: 597, column: 5, scope: !5413)
!5564 = distinct !DISubprogram(name: "encode_residual_fixed", scope: !910, file: !910, line: 771, type: !5565, isLocal: true, isDefinition: true, scopeLine: 773, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!5565 = !DISubroutineType(types: !5566)
!5566 = !{null, !1922, !1854, !954, !954}
!5567 = !DILocalVariable(name: "res", arg: 1, scope: !5564, file: !910, line: 771, type: !1922)
!5568 = !DILocation(line: 771, column: 44, scope: !5564)
!5569 = !DILocalVariable(name: "smp", arg: 2, scope: !5564, file: !910, line: 771, type: !1854)
!5570 = !DILocation(line: 771, column: 64, scope: !5564)
!5571 = !DILocalVariable(name: "n", arg: 3, scope: !5564, file: !910, line: 771, type: !954)
!5572 = !DILocation(line: 771, column: 73, scope: !5564)
!5573 = !DILocalVariable(name: "order", arg: 4, scope: !5564, file: !910, line: 772, type: !954)
!5574 = !DILocation(line: 772, column: 39, scope: !5564)
!5575 = !DILocalVariable(name: "i", scope: !5564, file: !910, line: 774, type: !954)
!5576 = !DILocation(line: 774, column: 9, scope: !5564)
!5577 = !DILocation(line: 776, column: 12, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5564, file: !910, line: 776, column: 5)
!5579 = !DILocation(line: 776, column: 10, scope: !5578)
!5580 = !DILocation(line: 776, column: 17, scope: !5581)
!5581 = !DILexicalBlockFile(scope: !5582, file: !910, discriminator: 1)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !910, line: 776, column: 5)
!5583 = !DILocation(line: 776, column: 21, scope: !5581)
!5584 = !DILocation(line: 776, column: 19, scope: !5581)
!5585 = !DILocation(line: 776, column: 5, scope: !5581)
!5586 = !DILocation(line: 777, column: 22, scope: !5582)
!5587 = !DILocation(line: 777, column: 18, scope: !5582)
!5588 = !DILocation(line: 777, column: 13, scope: !5582)
!5589 = !DILocation(line: 777, column: 9, scope: !5582)
!5590 = !DILocation(line: 777, column: 16, scope: !5582)
!5591 = !DILocation(line: 776, column: 29, scope: !5592)
!5592 = !DILexicalBlockFile(scope: !5582, file: !910, discriminator: 2)
!5593 = !DILocation(line: 776, column: 5, scope: !5592)
!5594 = distinct !{!5594, !5595}
!5595 = !DILocation(line: 776, column: 5, scope: !5564)
!5596 = !DILocation(line: 779, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5564, file: !910, line: 779, column: 9)
!5598 = !DILocation(line: 779, column: 15, scope: !5597)
!5599 = !DILocation(line: 779, column: 9, scope: !5564)
!5600 = !DILocation(line: 780, column: 18, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !910, line: 780, column: 9)
!5602 = distinct !DILexicalBlock(scope: !5597, file: !910, line: 779, column: 21)
!5603 = !DILocation(line: 780, column: 16, scope: !5601)
!5604 = !DILocation(line: 780, column: 14, scope: !5601)
!5605 = !DILocation(line: 780, column: 25, scope: !5606)
!5606 = !DILexicalBlockFile(scope: !5607, file: !910, discriminator: 1)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !910, line: 780, column: 9)
!5608 = !DILocation(line: 780, column: 29, scope: !5606)
!5609 = !DILocation(line: 780, column: 27, scope: !5606)
!5610 = !DILocation(line: 780, column: 9, scope: !5606)
!5611 = !DILocation(line: 781, column: 26, scope: !5607)
!5612 = !DILocation(line: 781, column: 22, scope: !5607)
!5613 = !DILocation(line: 781, column: 17, scope: !5607)
!5614 = !DILocation(line: 781, column: 13, scope: !5607)
!5615 = !DILocation(line: 781, column: 20, scope: !5607)
!5616 = !DILocation(line: 780, column: 33, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5607, file: !910, discriminator: 2)
!5618 = !DILocation(line: 780, column: 9, scope: !5617)
!5619 = distinct !{!5619, !5620}
!5620 = !DILocation(line: 780, column: 9, scope: !5602)
!5621 = !DILocation(line: 782, column: 5, scope: !5602)
!5622 = !DILocation(line: 782, column: 16, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !5624, file: !910, discriminator: 1)
!5624 = distinct !DILexicalBlock(scope: !5597, file: !910, line: 782, column: 16)
!5625 = !DILocation(line: 782, column: 22, scope: !5623)
!5626 = !DILocation(line: 783, column: 18, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !910, line: 783, column: 9)
!5628 = distinct !DILexicalBlock(scope: !5624, file: !910, line: 782, column: 28)
!5629 = !DILocation(line: 783, column: 16, scope: !5627)
!5630 = !DILocation(line: 783, column: 14, scope: !5627)
!5631 = !DILocation(line: 783, column: 25, scope: !5632)
!5632 = !DILexicalBlockFile(scope: !5633, file: !910, discriminator: 1)
!5633 = distinct !DILexicalBlock(scope: !5627, file: !910, line: 783, column: 9)
!5634 = !DILocation(line: 783, column: 29, scope: !5632)
!5635 = !DILocation(line: 783, column: 27, scope: !5632)
!5636 = !DILocation(line: 783, column: 9, scope: !5632)
!5637 = !DILocation(line: 784, column: 26, scope: !5633)
!5638 = !DILocation(line: 784, column: 22, scope: !5633)
!5639 = !DILocation(line: 784, column: 35, scope: !5633)
!5640 = !DILocation(line: 784, column: 36, scope: !5633)
!5641 = !DILocation(line: 784, column: 31, scope: !5633)
!5642 = !DILocation(line: 784, column: 29, scope: !5633)
!5643 = !DILocation(line: 784, column: 17, scope: !5633)
!5644 = !DILocation(line: 784, column: 13, scope: !5633)
!5645 = !DILocation(line: 784, column: 20, scope: !5633)
!5646 = !DILocation(line: 783, column: 33, scope: !5647)
!5647 = !DILexicalBlockFile(scope: !5633, file: !910, discriminator: 2)
!5648 = !DILocation(line: 783, column: 9, scope: !5647)
!5649 = distinct !{!5649, !5650}
!5650 = !DILocation(line: 783, column: 9, scope: !5628)
!5651 = !DILocation(line: 785, column: 5, scope: !5628)
!5652 = !DILocation(line: 785, column: 16, scope: !5653)
!5653 = !DILexicalBlockFile(scope: !5654, file: !910, discriminator: 1)
!5654 = distinct !DILexicalBlock(scope: !5624, file: !910, line: 785, column: 16)
!5655 = !DILocation(line: 785, column: 22, scope: !5653)
!5656 = !DILocalVariable(name: "a", scope: !5657, file: !910, line: 786, type: !954)
!5657 = distinct !DILexicalBlock(scope: !5654, file: !910, line: 785, column: 28)
!5658 = !DILocation(line: 786, column: 13, scope: !5657)
!5659 = !DILocation(line: 786, column: 21, scope: !5657)
!5660 = !DILocation(line: 786, column: 26, scope: !5657)
!5661 = !DILocation(line: 786, column: 17, scope: !5657)
!5662 = !DILocation(line: 786, column: 36, scope: !5657)
!5663 = !DILocation(line: 786, column: 41, scope: !5657)
!5664 = !DILocation(line: 786, column: 32, scope: !5657)
!5665 = !DILocation(line: 786, column: 30, scope: !5657)
!5666 = !DILocation(line: 787, column: 18, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5657, file: !910, line: 787, column: 9)
!5668 = !DILocation(line: 787, column: 16, scope: !5667)
!5669 = !DILocation(line: 787, column: 14, scope: !5667)
!5670 = !DILocation(line: 787, column: 25, scope: !5671)
!5671 = !DILexicalBlockFile(scope: !5672, file: !910, discriminator: 1)
!5672 = distinct !DILexicalBlock(scope: !5667, file: !910, line: 787, column: 9)
!5673 = !DILocation(line: 787, column: 29, scope: !5671)
!5674 = !DILocation(line: 787, column: 27, scope: !5671)
!5675 = !DILocation(line: 787, column: 9, scope: !5671)
!5676 = !DILocalVariable(name: "b", scope: !5677, file: !910, line: 788, type: !954)
!5677 = distinct !DILexicalBlock(scope: !5672, file: !910, line: 787, column: 40)
!5678 = !DILocation(line: 788, column: 17, scope: !5677)
!5679 = !DILocation(line: 788, column: 25, scope: !5677)
!5680 = !DILocation(line: 788, column: 21, scope: !5677)
!5681 = !DILocation(line: 788, column: 35, scope: !5677)
!5682 = !DILocation(line: 788, column: 36, scope: !5677)
!5683 = !DILocation(line: 788, column: 31, scope: !5677)
!5684 = !DILocation(line: 788, column: 29, scope: !5677)
!5685 = !DILocation(line: 789, column: 22, scope: !5677)
!5686 = !DILocation(line: 789, column: 26, scope: !5677)
!5687 = !DILocation(line: 789, column: 24, scope: !5677)
!5688 = !DILocation(line: 789, column: 17, scope: !5677)
!5689 = !DILocation(line: 789, column: 13, scope: !5677)
!5690 = !DILocation(line: 789, column: 20, scope: !5677)
!5691 = !DILocation(line: 790, column: 21, scope: !5677)
!5692 = !DILocation(line: 790, column: 22, scope: !5677)
!5693 = !DILocation(line: 790, column: 17, scope: !5677)
!5694 = !DILocation(line: 790, column: 32, scope: !5677)
!5695 = !DILocation(line: 790, column: 28, scope: !5677)
!5696 = !DILocation(line: 790, column: 26, scope: !5677)
!5697 = !DILocation(line: 790, column: 15, scope: !5677)
!5698 = !DILocation(line: 791, column: 24, scope: !5677)
!5699 = !DILocation(line: 791, column: 28, scope: !5677)
!5700 = !DILocation(line: 791, column: 26, scope: !5677)
!5701 = !DILocation(line: 791, column: 17, scope: !5677)
!5702 = !DILocation(line: 791, column: 18, scope: !5677)
!5703 = !DILocation(line: 791, column: 13, scope: !5677)
!5704 = !DILocation(line: 791, column: 22, scope: !5677)
!5705 = !DILocation(line: 792, column: 9, scope: !5677)
!5706 = !DILocation(line: 787, column: 34, scope: !5707)
!5707 = !DILexicalBlockFile(scope: !5672, file: !910, discriminator: 2)
!5708 = !DILocation(line: 787, column: 9, scope: !5707)
!5709 = distinct !{!5709, !5710}
!5710 = !DILocation(line: 787, column: 9, scope: !5657)
!5711 = !DILocation(line: 793, column: 5, scope: !5657)
!5712 = !DILocation(line: 793, column: 16, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !5714, file: !910, discriminator: 1)
!5714 = distinct !DILexicalBlock(scope: !5654, file: !910, line: 793, column: 16)
!5715 = !DILocation(line: 793, column: 22, scope: !5713)
!5716 = !DILocalVariable(name: "a", scope: !5717, file: !910, line: 794, type: !954)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !910, line: 793, column: 28)
!5718 = !DILocation(line: 794, column: 13, scope: !5717)
!5719 = !DILocation(line: 794, column: 21, scope: !5717)
!5720 = !DILocation(line: 794, column: 26, scope: !5717)
!5721 = !DILocation(line: 794, column: 17, scope: !5717)
!5722 = !DILocation(line: 794, column: 36, scope: !5717)
!5723 = !DILocation(line: 794, column: 41, scope: !5717)
!5724 = !DILocation(line: 794, column: 32, scope: !5717)
!5725 = !DILocation(line: 794, column: 30, scope: !5717)
!5726 = !DILocalVariable(name: "c", scope: !5717, file: !910, line: 795, type: !954)
!5727 = !DILocation(line: 795, column: 13, scope: !5717)
!5728 = !DILocation(line: 795, column: 21, scope: !5717)
!5729 = !DILocation(line: 795, column: 26, scope: !5717)
!5730 = !DILocation(line: 795, column: 17, scope: !5717)
!5731 = !DILocation(line: 795, column: 38, scope: !5717)
!5732 = !DILocation(line: 795, column: 43, scope: !5717)
!5733 = !DILocation(line: 795, column: 34, scope: !5717)
!5734 = !DILocation(line: 795, column: 33, scope: !5717)
!5735 = !DILocation(line: 795, column: 30, scope: !5717)
!5736 = !DILocation(line: 795, column: 53, scope: !5717)
!5737 = !DILocation(line: 795, column: 58, scope: !5717)
!5738 = !DILocation(line: 795, column: 49, scope: !5717)
!5739 = !DILocation(line: 795, column: 47, scope: !5717)
!5740 = !DILocation(line: 796, column: 18, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5717, file: !910, line: 796, column: 9)
!5742 = !DILocation(line: 796, column: 16, scope: !5741)
!5743 = !DILocation(line: 796, column: 14, scope: !5741)
!5744 = !DILocation(line: 796, column: 25, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5746, file: !910, discriminator: 1)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !910, line: 796, column: 9)
!5747 = !DILocation(line: 796, column: 29, scope: !5745)
!5748 = !DILocation(line: 796, column: 27, scope: !5745)
!5749 = !DILocation(line: 796, column: 9, scope: !5745)
!5750 = !DILocalVariable(name: "b", scope: !5751, file: !910, line: 797, type: !954)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !910, line: 796, column: 40)
!5752 = !DILocation(line: 797, column: 17, scope: !5751)
!5753 = !DILocation(line: 797, column: 25, scope: !5751)
!5754 = !DILocation(line: 797, column: 21, scope: !5751)
!5755 = !DILocation(line: 797, column: 35, scope: !5751)
!5756 = !DILocation(line: 797, column: 36, scope: !5751)
!5757 = !DILocation(line: 797, column: 31, scope: !5751)
!5758 = !DILocation(line: 797, column: 29, scope: !5751)
!5759 = !DILocalVariable(name: "d", scope: !5751, file: !910, line: 798, type: !954)
!5760 = !DILocation(line: 798, column: 17, scope: !5751)
!5761 = !DILocation(line: 798, column: 21, scope: !5751)
!5762 = !DILocation(line: 798, column: 25, scope: !5751)
!5763 = !DILocation(line: 798, column: 23, scope: !5751)
!5764 = !DILocation(line: 799, column: 22, scope: !5751)
!5765 = !DILocation(line: 799, column: 26, scope: !5751)
!5766 = !DILocation(line: 799, column: 24, scope: !5751)
!5767 = !DILocation(line: 799, column: 17, scope: !5751)
!5768 = !DILocation(line: 799, column: 13, scope: !5751)
!5769 = !DILocation(line: 799, column: 20, scope: !5751)
!5770 = !DILocation(line: 800, column: 21, scope: !5751)
!5771 = !DILocation(line: 800, column: 22, scope: !5751)
!5772 = !DILocation(line: 800, column: 17, scope: !5751)
!5773 = !DILocation(line: 800, column: 32, scope: !5751)
!5774 = !DILocation(line: 800, column: 28, scope: !5751)
!5775 = !DILocation(line: 800, column: 26, scope: !5751)
!5776 = !DILocation(line: 800, column: 15, scope: !5751)
!5777 = !DILocation(line: 801, column: 17, scope: !5751)
!5778 = !DILocation(line: 801, column: 21, scope: !5751)
!5779 = !DILocation(line: 801, column: 19, scope: !5751)
!5780 = !DILocation(line: 801, column: 15, scope: !5751)
!5781 = !DILocation(line: 802, column: 24, scope: !5751)
!5782 = !DILocation(line: 802, column: 28, scope: !5751)
!5783 = !DILocation(line: 802, column: 26, scope: !5751)
!5784 = !DILocation(line: 802, column: 17, scope: !5751)
!5785 = !DILocation(line: 802, column: 18, scope: !5751)
!5786 = !DILocation(line: 802, column: 13, scope: !5751)
!5787 = !DILocation(line: 802, column: 22, scope: !5751)
!5788 = !DILocation(line: 803, column: 9, scope: !5751)
!5789 = !DILocation(line: 796, column: 34, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !5746, file: !910, discriminator: 2)
!5791 = !DILocation(line: 796, column: 9, scope: !5790)
!5792 = distinct !{!5792, !5793}
!5793 = !DILocation(line: 796, column: 9, scope: !5717)
!5794 = !DILocation(line: 804, column: 5, scope: !5717)
!5795 = !DILocalVariable(name: "a", scope: !5796, file: !910, line: 805, type: !954)
!5796 = distinct !DILexicalBlock(scope: !5714, file: !910, line: 804, column: 12)
!5797 = !DILocation(line: 805, column: 13, scope: !5796)
!5798 = !DILocation(line: 805, column: 21, scope: !5796)
!5799 = !DILocation(line: 805, column: 26, scope: !5796)
!5800 = !DILocation(line: 805, column: 17, scope: !5796)
!5801 = !DILocation(line: 805, column: 36, scope: !5796)
!5802 = !DILocation(line: 805, column: 41, scope: !5796)
!5803 = !DILocation(line: 805, column: 32, scope: !5796)
!5804 = !DILocation(line: 805, column: 30, scope: !5796)
!5805 = !DILocalVariable(name: "c", scope: !5796, file: !910, line: 806, type: !954)
!5806 = !DILocation(line: 806, column: 13, scope: !5796)
!5807 = !DILocation(line: 806, column: 21, scope: !5796)
!5808 = !DILocation(line: 806, column: 26, scope: !5796)
!5809 = !DILocation(line: 806, column: 17, scope: !5796)
!5810 = !DILocation(line: 806, column: 38, scope: !5796)
!5811 = !DILocation(line: 806, column: 43, scope: !5796)
!5812 = !DILocation(line: 806, column: 34, scope: !5796)
!5813 = !DILocation(line: 806, column: 33, scope: !5796)
!5814 = !DILocation(line: 806, column: 30, scope: !5796)
!5815 = !DILocation(line: 806, column: 53, scope: !5796)
!5816 = !DILocation(line: 806, column: 58, scope: !5796)
!5817 = !DILocation(line: 806, column: 49, scope: !5796)
!5818 = !DILocation(line: 806, column: 47, scope: !5796)
!5819 = !DILocalVariable(name: "e", scope: !5796, file: !910, line: 807, type: !954)
!5820 = !DILocation(line: 807, column: 13, scope: !5796)
!5821 = !DILocation(line: 807, column: 21, scope: !5796)
!5822 = !DILocation(line: 807, column: 26, scope: !5796)
!5823 = !DILocation(line: 807, column: 17, scope: !5796)
!5824 = !DILocation(line: 807, column: 38, scope: !5796)
!5825 = !DILocation(line: 807, column: 43, scope: !5796)
!5826 = !DILocation(line: 807, column: 34, scope: !5796)
!5827 = !DILocation(line: 807, column: 33, scope: !5796)
!5828 = !DILocation(line: 807, column: 30, scope: !5796)
!5829 = !DILocation(line: 807, column: 55, scope: !5796)
!5830 = !DILocation(line: 807, column: 60, scope: !5796)
!5831 = !DILocation(line: 807, column: 51, scope: !5796)
!5832 = !DILocation(line: 807, column: 50, scope: !5796)
!5833 = !DILocation(line: 807, column: 47, scope: !5796)
!5834 = !DILocation(line: 807, column: 70, scope: !5796)
!5835 = !DILocation(line: 807, column: 75, scope: !5796)
!5836 = !DILocation(line: 807, column: 66, scope: !5796)
!5837 = !DILocation(line: 807, column: 64, scope: !5796)
!5838 = !DILocation(line: 808, column: 18, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5796, file: !910, line: 808, column: 9)
!5840 = !DILocation(line: 808, column: 16, scope: !5839)
!5841 = !DILocation(line: 808, column: 14, scope: !5839)
!5842 = !DILocation(line: 808, column: 25, scope: !5843)
!5843 = !DILexicalBlockFile(scope: !5844, file: !910, discriminator: 1)
!5844 = distinct !DILexicalBlock(scope: !5839, file: !910, line: 808, column: 9)
!5845 = !DILocation(line: 808, column: 29, scope: !5843)
!5846 = !DILocation(line: 808, column: 27, scope: !5843)
!5847 = !DILocation(line: 808, column: 9, scope: !5843)
!5848 = !DILocalVariable(name: "b", scope: !5849, file: !910, line: 809, type: !954)
!5849 = distinct !DILexicalBlock(scope: !5844, file: !910, line: 808, column: 40)
!5850 = !DILocation(line: 809, column: 17, scope: !5849)
!5851 = !DILocation(line: 809, column: 25, scope: !5849)
!5852 = !DILocation(line: 809, column: 21, scope: !5849)
!5853 = !DILocation(line: 809, column: 35, scope: !5849)
!5854 = !DILocation(line: 809, column: 36, scope: !5849)
!5855 = !DILocation(line: 809, column: 31, scope: !5849)
!5856 = !DILocation(line: 809, column: 29, scope: !5849)
!5857 = !DILocalVariable(name: "d", scope: !5849, file: !910, line: 810, type: !954)
!5858 = !DILocation(line: 810, column: 17, scope: !5849)
!5859 = !DILocation(line: 810, column: 21, scope: !5849)
!5860 = !DILocation(line: 810, column: 25, scope: !5849)
!5861 = !DILocation(line: 810, column: 23, scope: !5849)
!5862 = !DILocalVariable(name: "f", scope: !5849, file: !910, line: 811, type: !954)
!5863 = !DILocation(line: 811, column: 17, scope: !5849)
!5864 = !DILocation(line: 811, column: 21, scope: !5849)
!5865 = !DILocation(line: 811, column: 25, scope: !5849)
!5866 = !DILocation(line: 811, column: 23, scope: !5849)
!5867 = !DILocation(line: 812, column: 23, scope: !5849)
!5868 = !DILocation(line: 812, column: 27, scope: !5849)
!5869 = !DILocation(line: 812, column: 25, scope: !5849)
!5870 = !DILocation(line: 812, column: 17, scope: !5849)
!5871 = !DILocation(line: 812, column: 13, scope: !5849)
!5872 = !DILocation(line: 812, column: 21, scope: !5849)
!5873 = !DILocation(line: 813, column: 21, scope: !5849)
!5874 = !DILocation(line: 813, column: 22, scope: !5849)
!5875 = !DILocation(line: 813, column: 17, scope: !5849)
!5876 = !DILocation(line: 813, column: 32, scope: !5849)
!5877 = !DILocation(line: 813, column: 28, scope: !5849)
!5878 = !DILocation(line: 813, column: 26, scope: !5849)
!5879 = !DILocation(line: 813, column: 15, scope: !5849)
!5880 = !DILocation(line: 814, column: 17, scope: !5849)
!5881 = !DILocation(line: 814, column: 21, scope: !5849)
!5882 = !DILocation(line: 814, column: 19, scope: !5849)
!5883 = !DILocation(line: 814, column: 15, scope: !5849)
!5884 = !DILocation(line: 815, column: 17, scope: !5849)
!5885 = !DILocation(line: 815, column: 21, scope: !5849)
!5886 = !DILocation(line: 815, column: 19, scope: !5849)
!5887 = !DILocation(line: 815, column: 15, scope: !5849)
!5888 = !DILocation(line: 816, column: 24, scope: !5849)
!5889 = !DILocation(line: 816, column: 28, scope: !5849)
!5890 = !DILocation(line: 816, column: 26, scope: !5849)
!5891 = !DILocation(line: 816, column: 17, scope: !5849)
!5892 = !DILocation(line: 816, column: 18, scope: !5849)
!5893 = !DILocation(line: 816, column: 13, scope: !5849)
!5894 = !DILocation(line: 816, column: 22, scope: !5849)
!5895 = !DILocation(line: 817, column: 9, scope: !5849)
!5896 = !DILocation(line: 808, column: 34, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5844, file: !910, discriminator: 2)
!5898 = !DILocation(line: 808, column: 9, scope: !5897)
!5899 = distinct !{!5899, !5900}
!5900 = !DILocation(line: 808, column: 9, scope: !5796)
!5901 = !DILocation(line: 819, column: 1, scope: !5564)
!5902 = distinct !DISubprogram(name: "find_subframe_rice_params", scope: !910, file: !910, line: 754, type: !5414, isLocal: true, isDefinition: true, scopeLine: 756, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!5903 = !DILocalVariable(name: "s", arg: 1, scope: !5902, file: !910, line: 754, type: !1741)
!5904 = !DILocation(line: 754, column: 62, scope: !5902)
!5905 = !DILocalVariable(name: "sub", arg: 2, scope: !5902, file: !910, line: 755, type: !3377)
!5906 = !DILocation(line: 755, column: 57, scope: !5902)
!5907 = !DILocalVariable(name: "pred_order", arg: 3, scope: !5902, file: !910, line: 755, type: !954)
!5908 = !DILocation(line: 755, column: 66, scope: !5902)
!5909 = !DILocalVariable(name: "pmin", scope: !5902, file: !910, line: 757, type: !954)
!5910 = !DILocation(line: 757, column: 9, scope: !5902)
!5911 = !DILocation(line: 757, column: 32, scope: !5902)
!5912 = !DILocation(line: 757, column: 35, scope: !5902)
!5913 = !DILocation(line: 757, column: 43, scope: !5902)
!5914 = !DILocation(line: 758, column: 32, scope: !5902)
!5915 = !DILocation(line: 758, column: 35, scope: !5902)
!5916 = !DILocation(line: 758, column: 41, scope: !5902)
!5917 = !DILocation(line: 758, column: 52, scope: !5902)
!5918 = !DILocation(line: 757, column: 16, scope: !5902)
!5919 = !DILocalVariable(name: "pmax", scope: !5902, file: !910, line: 759, type: !954)
!5920 = !DILocation(line: 759, column: 9, scope: !5902)
!5921 = !DILocation(line: 759, column: 32, scope: !5902)
!5922 = !DILocation(line: 759, column: 35, scope: !5902)
!5923 = !DILocation(line: 759, column: 43, scope: !5902)
!5924 = !DILocation(line: 760, column: 32, scope: !5902)
!5925 = !DILocation(line: 760, column: 35, scope: !5902)
!5926 = !DILocation(line: 760, column: 41, scope: !5902)
!5927 = !DILocation(line: 760, column: 52, scope: !5902)
!5928 = !DILocation(line: 759, column: 16, scope: !5902)
!5929 = !DILocalVariable(name: "bits", scope: !5902, file: !910, line: 762, type: !996)
!5930 = !DILocation(line: 762, column: 14, scope: !5902)
!5931 = !DILocation(line: 762, column: 25, scope: !5902)
!5932 = !DILocation(line: 762, column: 38, scope: !5902)
!5933 = !DILocation(line: 762, column: 43, scope: !5902)
!5934 = !DILocation(line: 762, column: 36, scope: !5902)
!5935 = !DILocation(line: 762, column: 23, scope: !5902)
!5936 = !DILocation(line: 762, column: 49, scope: !5902)
!5937 = !DILocation(line: 762, column: 55, scope: !5902)
!5938 = !DILocation(line: 762, column: 60, scope: !5902)
!5939 = !DILocation(line: 762, column: 63, scope: !5902)
!5940 = !DILocation(line: 762, column: 53, scope: !5902)
!5941 = !DILocation(line: 762, column: 21, scope: !5902)
!5942 = !DILocation(line: 763, column: 9, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5902, file: !910, line: 763, column: 9)
!5944 = !DILocation(line: 763, column: 14, scope: !5943)
!5945 = !DILocation(line: 763, column: 19, scope: !5943)
!5946 = !DILocation(line: 763, column: 9, scope: !5902)
!5947 = !DILocation(line: 764, column: 25, scope: !5943)
!5948 = !DILocation(line: 764, column: 38, scope: !5943)
!5949 = !DILocation(line: 764, column: 41, scope: !5943)
!5950 = !DILocation(line: 764, column: 49, scope: !5943)
!5951 = !DILocation(line: 764, column: 36, scope: !5943)
!5952 = !DILocation(line: 764, column: 23, scope: !5943)
!5953 = !DILocation(line: 764, column: 17, scope: !5943)
!5954 = !DILocation(line: 764, column: 14, scope: !5943)
!5955 = !DILocation(line: 764, column: 9, scope: !5943)
!5956 = !DILocation(line: 765, column: 31, scope: !5902)
!5957 = !DILocation(line: 765, column: 36, scope: !5902)
!5958 = !DILocation(line: 765, column: 40, scope: !5902)
!5959 = !DILocation(line: 765, column: 45, scope: !5902)
!5960 = !DILocation(line: 765, column: 55, scope: !5902)
!5961 = !DILocation(line: 765, column: 60, scope: !5902)
!5962 = !DILocation(line: 765, column: 69, scope: !5902)
!5963 = !DILocation(line: 765, column: 75, scope: !5902)
!5964 = !DILocation(line: 765, column: 81, scope: !5902)
!5965 = !DILocation(line: 765, column: 86, scope: !5902)
!5966 = !DILocation(line: 766, column: 30, scope: !5902)
!5967 = !DILocation(line: 766, column: 33, scope: !5902)
!5968 = !DILocation(line: 766, column: 39, scope: !5902)
!5969 = !DILocation(line: 766, column: 50, scope: !5902)
!5970 = !DILocation(line: 766, column: 62, scope: !5902)
!5971 = !DILocation(line: 766, column: 65, scope: !5902)
!5972 = !DILocation(line: 766, column: 73, scope: !5902)
!5973 = !DILocation(line: 765, column: 13, scope: !5902)
!5974 = !DILocation(line: 765, column: 10, scope: !5902)
!5975 = !DILocation(line: 767, column: 12, scope: !5902)
!5976 = !DILocation(line: 767, column: 5, scope: !5902)
!5977 = distinct !DISubprogram(name: "rice_count_exact", scope: !910, file: !910, line: 537, type: !5978, isLocal: true, isDefinition: true, scopeLine: 538, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!996, !1854, !954, !954}
!5980 = !DILocalVariable(name: "res", arg: 1, scope: !5977, file: !910, line: 537, type: !1854)
!5981 = !DILocation(line: 537, column: 49, scope: !5977)
!5982 = !DILocalVariable(name: "n", arg: 2, scope: !5977, file: !910, line: 537, type: !954)
!5983 = !DILocation(line: 537, column: 58, scope: !5977)
!5984 = !DILocalVariable(name: "k", arg: 3, scope: !5977, file: !910, line: 537, type: !954)
!5985 = !DILocation(line: 537, column: 65, scope: !5977)
!5986 = !DILocalVariable(name: "i", scope: !5977, file: !910, line: 539, type: !954)
!5987 = !DILocation(line: 539, column: 9, scope: !5977)
!5988 = !DILocalVariable(name: "count", scope: !5977, file: !910, line: 540, type: !996)
!5989 = !DILocation(line: 540, column: 14, scope: !5977)
!5990 = !DILocation(line: 542, column: 12, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5977, file: !910, line: 542, column: 5)
!5992 = !DILocation(line: 542, column: 10, scope: !5991)
!5993 = !DILocation(line: 542, column: 17, scope: !5994)
!5994 = !DILexicalBlockFile(scope: !5995, file: !910, discriminator: 1)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !910, line: 542, column: 5)
!5996 = !DILocation(line: 542, column: 21, scope: !5994)
!5997 = !DILocation(line: 542, column: 19, scope: !5994)
!5998 = !DILocation(line: 542, column: 5, scope: !5994)
!5999 = !DILocalVariable(name: "v", scope: !6000, file: !910, line: 543, type: !952)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !910, line: 542, column: 29)
!6001 = !DILocation(line: 543, column: 17, scope: !6000)
!6002 = !DILocation(line: 543, column: 30, scope: !6000)
!6003 = !DILocation(line: 543, column: 26, scope: !6000)
!6004 = !DILocation(line: 543, column: 24, scope: !6000)
!6005 = !DILocation(line: 543, column: 33, scope: !6000)
!6006 = !DILocation(line: 544, column: 14, scope: !6000)
!6007 = !DILocation(line: 544, column: 16, scope: !6000)
!6008 = !DILocation(line: 544, column: 11, scope: !6000)
!6009 = !DILocation(line: 545, column: 19, scope: !6000)
!6010 = !DILocation(line: 545, column: 24, scope: !6000)
!6011 = !DILocation(line: 545, column: 21, scope: !6000)
!6012 = !DILocation(line: 545, column: 27, scope: !6000)
!6013 = !DILocation(line: 545, column: 33, scope: !6000)
!6014 = !DILocation(line: 545, column: 31, scope: !6000)
!6015 = !DILocation(line: 545, column: 18, scope: !6000)
!6016 = !DILocation(line: 545, column: 15, scope: !6000)
!6017 = !DILocation(line: 546, column: 5, scope: !6000)
!6018 = !DILocation(line: 542, column: 25, scope: !6019)
!6019 = !DILexicalBlockFile(scope: !5995, file: !910, discriminator: 2)
!6020 = !DILocation(line: 542, column: 5, scope: !6019)
!6021 = distinct !{!6021, !6022}
!6022 = !DILocation(line: 542, column: 5, scope: !5977)
!6023 = !DILocation(line: 547, column: 12, scope: !5977)
!6024 = !DILocation(line: 547, column: 5, scope: !5977)
!6025 = distinct !DISubprogram(name: "get_max_p_order", scope: !910, file: !910, line: 745, type: !4464, isLocal: true, isDefinition: true, scopeLine: 746, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6026 = !DILocalVariable(name: "max_porder", arg: 1, scope: !6025, file: !910, line: 745, type: !954)
!6027 = !DILocation(line: 745, column: 32, scope: !6025)
!6028 = !DILocalVariable(name: "n", arg: 2, scope: !6025, file: !910, line: 745, type: !954)
!6029 = !DILocation(line: 745, column: 48, scope: !6025)
!6030 = !DILocalVariable(name: "order", arg: 3, scope: !6025, file: !910, line: 745, type: !954)
!6031 = !DILocation(line: 745, column: 55, scope: !6025)
!6032 = !DILocalVariable(name: "porder", scope: !6025, file: !910, line: 747, type: !954)
!6033 = !DILocation(line: 747, column: 9, scope: !6025)
!6034 = !DILocation(line: 747, column: 20, scope: !6025)
!6035 = !DILocation(line: 747, column: 56, scope: !6025)
!6036 = !DILocation(line: 747, column: 59, scope: !6025)
!6037 = !DILocation(line: 747, column: 60, scope: !6025)
!6038 = !DILocation(line: 747, column: 57, scope: !6025)
!6039 = !DILocation(line: 747, column: 64, scope: !6025)
!6040 = !DILocation(line: 747, column: 41, scope: !6025)
!6041 = !DILocation(line: 747, column: 39, scope: !6025)
!6042 = !DILocation(line: 747, column: 32, scope: !6025)
!6043 = !DILocation(line: 747, column: 19, scope: !6025)
!6044 = !DILocation(line: 747, column: 94, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6025, file: !910, discriminator: 1)
!6046 = !DILocation(line: 747, column: 97, scope: !6045)
!6047 = !DILocation(line: 747, column: 98, scope: !6045)
!6048 = !DILocation(line: 747, column: 95, scope: !6045)
!6049 = !DILocation(line: 747, column: 102, scope: !6045)
!6050 = !DILocation(line: 747, column: 79, scope: !6045)
!6051 = !DILocation(line: 747, column: 77, scope: !6045)
!6052 = !DILocation(line: 747, column: 19, scope: !6045)
!6053 = !DILocation(line: 747, column: 111, scope: !6054)
!6054 = !DILexicalBlockFile(scope: !6025, file: !910, discriminator: 2)
!6055 = !DILocation(line: 747, column: 19, scope: !6054)
!6056 = !DILocation(line: 747, column: 19, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !6025, file: !910, discriminator: 3)
!6058 = !DILocation(line: 747, column: 9, scope: !6057)
!6059 = !DILocation(line: 748, column: 9, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6025, file: !910, line: 748, column: 9)
!6061 = !DILocation(line: 748, column: 15, scope: !6060)
!6062 = !DILocation(line: 748, column: 9, scope: !6025)
!6063 = !DILocation(line: 749, column: 20, scope: !6060)
!6064 = !DILocation(line: 749, column: 52, scope: !6060)
!6065 = !DILocation(line: 749, column: 54, scope: !6060)
!6066 = !DILocation(line: 749, column: 53, scope: !6060)
!6067 = !DILocation(line: 749, column: 60, scope: !6060)
!6068 = !DILocation(line: 749, column: 37, scope: !6060)
!6069 = !DILocation(line: 749, column: 35, scope: !6060)
!6070 = !DILocation(line: 749, column: 28, scope: !6060)
!6071 = !DILocation(line: 749, column: 19, scope: !6060)
!6072 = !DILocation(line: 749, column: 90, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !6060, file: !910, discriminator: 1)
!6074 = !DILocation(line: 749, column: 92, scope: !6073)
!6075 = !DILocation(line: 749, column: 91, scope: !6073)
!6076 = !DILocation(line: 749, column: 98, scope: !6073)
!6077 = !DILocation(line: 749, column: 75, scope: !6073)
!6078 = !DILocation(line: 749, column: 73, scope: !6073)
!6079 = !DILocation(line: 749, column: 19, scope: !6073)
!6080 = !DILocation(line: 749, column: 107, scope: !6081)
!6081 = !DILexicalBlockFile(scope: !6060, file: !910, discriminator: 2)
!6082 = !DILocation(line: 749, column: 19, scope: !6081)
!6083 = !DILocation(line: 749, column: 19, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6060, file: !910, discriminator: 3)
!6085 = !DILocation(line: 749, column: 16, scope: !6084)
!6086 = !DILocation(line: 749, column: 9, scope: !6084)
!6087 = !DILocation(line: 750, column: 12, scope: !6025)
!6088 = !DILocation(line: 750, column: 5, scope: !6025)
!6089 = distinct !DISubprogram(name: "calc_rice_params", scope: !910, file: !910, line: 705, type: !6090, isLocal: true, isDefinition: true, scopeLine: 710, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!996, !6092, !1902, !6093, !954, !954, !1854, !954, !954, !954}
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!6093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6094, size: 64, align: 64)
!6094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 16384, align: 64, elements: !1802)
!6095 = !DILocalVariable(name: "rc", arg: 1, scope: !6089, file: !910, line: 705, type: !6092)
!6096 = !DILocation(line: 705, column: 47, scope: !6089)
!6097 = !DILocalVariable(name: "udata", arg: 2, scope: !6089, file: !910, line: 706, type: !1902)
!6098 = !DILocation(line: 706, column: 43, scope: !6089)
!6099 = !DILocalVariable(name: "sums", arg: 3, scope: !6089, file: !910, line: 707, type: !6093)
!6100 = !DILocation(line: 707, column: 43, scope: !6089)
!6101 = !DILocalVariable(name: "pmin", arg: 4, scope: !6089, file: !910, line: 708, type: !954)
!6102 = !DILocation(line: 708, column: 38, scope: !6089)
!6103 = !DILocalVariable(name: "pmax", arg: 5, scope: !6089, file: !910, line: 708, type: !954)
!6104 = !DILocation(line: 708, column: 48, scope: !6089)
!6105 = !DILocalVariable(name: "data", arg: 6, scope: !6089, file: !910, line: 709, type: !1854)
!6106 = !DILocation(line: 709, column: 49, scope: !6089)
!6107 = !DILocalVariable(name: "n", arg: 7, scope: !6089, file: !910, line: 709, type: !954)
!6108 = !DILocation(line: 709, column: 59, scope: !6089)
!6109 = !DILocalVariable(name: "pred_order", arg: 8, scope: !6089, file: !910, line: 709, type: !954)
!6110 = !DILocation(line: 709, column: 66, scope: !6089)
!6111 = !DILocalVariable(name: "exact", arg: 9, scope: !6089, file: !910, line: 709, type: !954)
!6112 = !DILocation(line: 709, column: 82, scope: !6089)
!6113 = !DILocalVariable(name: "i", scope: !6089, file: !910, line: 711, type: !954)
!6114 = !DILocation(line: 711, column: 9, scope: !6089)
!6115 = !DILocalVariable(name: "bits", scope: !6089, file: !910, line: 712, type: !6116)
!6116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 576, align: 64, elements: !6117)
!6117 = !{!6118}
!6118 = !DISubrange(count: 9)
!6119 = !DILocation(line: 712, column: 14, scope: !6089)
!6120 = !DILocalVariable(name: "opt_porder", scope: !6089, file: !910, line: 713, type: !954)
!6121 = !DILocation(line: 713, column: 9, scope: !6089)
!6122 = !DILocalVariable(name: "tmp_rc", scope: !6089, file: !910, line: 714, type: !1795)
!6123 = !DILocation(line: 714, column: 17, scope: !6089)
!6124 = !DILocalVariable(name: "kmax", scope: !6089, file: !910, line: 715, type: !954)
!6125 = !DILocation(line: 715, column: 9, scope: !6089)
!6126 = !DILocation(line: 715, column: 22, scope: !6089)
!6127 = !DILocation(line: 715, column: 26, scope: !6089)
!6128 = !DILocation(line: 715, column: 19, scope: !6089)
!6129 = !DILocation(line: 715, column: 39, scope: !6089)
!6130 = !DILocation(line: 721, column: 26, scope: !6089)
!6131 = !DILocation(line: 721, column: 30, scope: !6089)
!6132 = !DILocation(line: 721, column: 12, scope: !6089)
!6133 = !DILocation(line: 721, column: 24, scope: !6089)
!6134 = !DILocation(line: 723, column: 12, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6089, file: !910, line: 723, column: 5)
!6136 = !DILocation(line: 723, column: 10, scope: !6135)
!6137 = !DILocation(line: 723, column: 17, scope: !6138)
!6138 = !DILexicalBlockFile(scope: !6139, file: !910, discriminator: 1)
!6139 = distinct !DILexicalBlock(scope: !6135, file: !910, line: 723, column: 5)
!6140 = !DILocation(line: 723, column: 21, scope: !6138)
!6141 = !DILocation(line: 723, column: 19, scope: !6138)
!6142 = !DILocation(line: 723, column: 5, scope: !6138)
!6143 = !DILocation(line: 724, column: 30, scope: !6139)
!6144 = !DILocation(line: 724, column: 25, scope: !6139)
!6145 = !DILocation(line: 724, column: 23, scope: !6139)
!6146 = !DILocation(line: 724, column: 42, scope: !6139)
!6147 = !DILocation(line: 724, column: 37, scope: !6139)
!6148 = !DILocation(line: 724, column: 45, scope: !6139)
!6149 = !DILocation(line: 724, column: 34, scope: !6139)
!6150 = !DILocation(line: 724, column: 15, scope: !6139)
!6151 = !DILocation(line: 724, column: 9, scope: !6139)
!6152 = !DILocation(line: 724, column: 18, scope: !6139)
!6153 = !DILocation(line: 723, column: 25, scope: !6154)
!6154 = !DILexicalBlockFile(scope: !6139, file: !910, discriminator: 2)
!6155 = !DILocation(line: 723, column: 5, scope: !6154)
!6156 = distinct !{!6156, !6157}
!6157 = !DILocation(line: 723, column: 5, scope: !6089)
!6158 = !DILocation(line: 726, column: 18, scope: !6089)
!6159 = !DILocation(line: 726, column: 24, scope: !6089)
!6160 = !DILocation(line: 726, column: 32, scope: !6161)
!6161 = !DILexicalBlockFile(scope: !6089, file: !910, discriminator: 1)
!6162 = !DILocation(line: 726, column: 24, scope: !6161)
!6163 = !DILocation(line: 726, column: 24, scope: !6164)
!6164 = !DILexicalBlockFile(scope: !6089, file: !910, discriminator: 2)
!6165 = !DILocation(line: 726, column: 24, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !6089, file: !910, discriminator: 3)
!6167 = !DILocation(line: 726, column: 42, scope: !6166)
!6168 = !DILocation(line: 726, column: 49, scope: !6166)
!6169 = !DILocation(line: 726, column: 52, scope: !6166)
!6170 = !DILocation(line: 726, column: 64, scope: !6166)
!6171 = !DILocation(line: 726, column: 5, scope: !6166)
!6172 = !DILocation(line: 728, column: 18, scope: !6089)
!6173 = !DILocation(line: 728, column: 16, scope: !6089)
!6174 = !DILocation(line: 729, column: 10, scope: !6089)
!6175 = !DILocation(line: 729, column: 5, scope: !6089)
!6176 = !DILocation(line: 729, column: 16, scope: !6089)
!6177 = !DILocation(line: 730, column: 14, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6089, file: !910, line: 730, column: 5)
!6179 = !DILocation(line: 730, column: 12, scope: !6178)
!6180 = !DILocation(line: 730, column: 10, scope: !6178)
!6181 = !DILocation(line: 731, column: 53, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !910, line: 730, column: 24)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !910, line: 730, column: 5)
!6184 = !DILocation(line: 731, column: 56, scope: !6182)
!6185 = !DILocation(line: 731, column: 62, scope: !6182)
!6186 = !DILocation(line: 731, column: 65, scope: !6182)
!6187 = !DILocation(line: 731, column: 77, scope: !6182)
!6188 = !DILocation(line: 731, column: 83, scope: !6182)
!6189 = !DILocation(line: 731, column: 19, scope: !6182)
!6190 = !DILocation(line: 731, column: 14, scope: !6182)
!6191 = !DILocation(line: 731, column: 9, scope: !6182)
!6192 = !DILocation(line: 731, column: 17, scope: !6182)
!6193 = !DILocation(line: 732, column: 18, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6182, file: !910, line: 732, column: 13)
!6195 = !DILocation(line: 732, column: 13, scope: !6194)
!6196 = !DILocation(line: 732, column: 28, scope: !6194)
!6197 = !DILocation(line: 732, column: 23, scope: !6194)
!6198 = !DILocation(line: 732, column: 21, scope: !6194)
!6199 = !DILocation(line: 732, column: 40, scope: !6194)
!6200 = !DILocation(line: 732, column: 43, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !6194, file: !910, discriminator: 1)
!6202 = !DILocation(line: 732, column: 51, scope: !6201)
!6203 = !DILocation(line: 732, column: 48, scope: !6201)
!6204 = !DILocation(line: 732, column: 13, scope: !6201)
!6205 = !DILocation(line: 733, column: 26, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6194, file: !910, line: 732, column: 57)
!6207 = !DILocation(line: 733, column: 24, scope: !6206)
!6208 = !DILocation(line: 734, column: 14, scope: !6206)
!6209 = !DILocation(line: 734, column: 19, scope: !6206)
!6210 = !DILocation(line: 735, column: 9, scope: !6206)
!6211 = !DILocation(line: 736, column: 13, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6182, file: !910, line: 736, column: 13)
!6213 = !DILocation(line: 736, column: 18, scope: !6212)
!6214 = !DILocation(line: 736, column: 15, scope: !6212)
!6215 = !DILocation(line: 736, column: 13, scope: !6182)
!6216 = !DILocation(line: 737, column: 13, scope: !6212)
!6217 = !DILocation(line: 738, column: 23, scope: !6182)
!6218 = !DILocation(line: 738, column: 28, scope: !6182)
!6219 = !DILocation(line: 738, column: 34, scope: !6182)
!6220 = !DILocation(line: 738, column: 42, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6182, file: !910, discriminator: 1)
!6222 = !DILocation(line: 738, column: 34, scope: !6221)
!6223 = !DILocation(line: 738, column: 34, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6182, file: !910, discriminator: 2)
!6225 = !DILocation(line: 738, column: 34, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6182, file: !910, discriminator: 3)
!6227 = !DILocation(line: 738, column: 9, scope: !6226)
!6228 = !DILocation(line: 730, column: 5, scope: !6229)
!6229 = !DILexicalBlockFile(scope: !6183, file: !910, discriminator: 1)
!6230 = distinct !{!6230, !6231}
!6231 = !DILocation(line: 730, column: 5, scope: !6089)
!6232 = !DILocation(line: 741, column: 17, scope: !6089)
!6233 = !DILocation(line: 741, column: 12, scope: !6089)
!6234 = !DILocation(line: 741, column: 5, scope: !6089)
!6235 = distinct !DISubprogram(name: "calc_sum_top", scope: !910, file: !910, line: 665, type: !6236, isLocal: true, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !954, !954, !1903, !954, !954, !6093}
!6238 = !DILocalVariable(name: "pmax", arg: 1, scope: !6235, file: !910, line: 665, type: !954)
!6239 = !DILocation(line: 665, column: 30, scope: !6235)
!6240 = !DILocalVariable(name: "kmax", arg: 2, scope: !6235, file: !910, line: 665, type: !954)
!6241 = !DILocation(line: 665, column: 40, scope: !6235)
!6242 = !DILocalVariable(name: "data", arg: 3, scope: !6235, file: !910, line: 665, type: !1903)
!6243 = !DILocation(line: 665, column: 62, scope: !6235)
!6244 = !DILocalVariable(name: "n", arg: 4, scope: !6235, file: !910, line: 665, type: !954)
!6245 = !DILocation(line: 665, column: 72, scope: !6235)
!6246 = !DILocalVariable(name: "pred_order", arg: 5, scope: !6235, file: !910, line: 665, type: !954)
!6247 = !DILocation(line: 665, column: 79, scope: !6235)
!6248 = !DILocalVariable(name: "sums", arg: 6, scope: !6235, file: !910, line: 666, type: !6093)
!6249 = !DILocation(line: 666, column: 35, scope: !6235)
!6250 = !DILocalVariable(name: "i", scope: !6235, file: !910, line: 668, type: !954)
!6251 = !DILocation(line: 668, column: 9, scope: !6235)
!6252 = !DILocalVariable(name: "k", scope: !6235, file: !910, line: 668, type: !954)
!6253 = !DILocation(line: 668, column: 12, scope: !6235)
!6254 = !DILocalVariable(name: "parts", scope: !6235, file: !910, line: 669, type: !954)
!6255 = !DILocation(line: 669, column: 9, scope: !6235)
!6256 = !DILocalVariable(name: "res", scope: !6235, file: !910, line: 670, type: !1903)
!6257 = !DILocation(line: 670, column: 21, scope: !6235)
!6258 = !DILocalVariable(name: "res_end", scope: !6235, file: !910, line: 670, type: !1903)
!6259 = !DILocation(line: 670, column: 27, scope: !6235)
!6260 = !DILocation(line: 673, column: 19, scope: !6235)
!6261 = !DILocation(line: 673, column: 16, scope: !6235)
!6262 = !DILocation(line: 673, column: 11, scope: !6235)
!6263 = !DILocation(line: 675, column: 12, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6235, file: !910, line: 675, column: 5)
!6265 = !DILocation(line: 675, column: 10, scope: !6264)
!6266 = !DILocation(line: 675, column: 17, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6268, file: !910, discriminator: 1)
!6268 = distinct !DILexicalBlock(scope: !6264, file: !910, line: 675, column: 5)
!6269 = !DILocation(line: 675, column: 22, scope: !6267)
!6270 = !DILocation(line: 675, column: 19, scope: !6267)
!6271 = !DILocation(line: 675, column: 5, scope: !6267)
!6272 = !DILocation(line: 676, column: 21, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6268, file: !910, line: 675, column: 33)
!6274 = !DILocation(line: 676, column: 16, scope: !6273)
!6275 = !DILocation(line: 676, column: 13, scope: !6273)
!6276 = !DILocation(line: 677, column: 25, scope: !6273)
!6277 = !DILocation(line: 677, column: 30, scope: !6273)
!6278 = !DILocation(line: 677, column: 27, scope: !6273)
!6279 = !DILocation(line: 677, column: 20, scope: !6273)
!6280 = !DILocation(line: 677, column: 17, scope: !6273)
!6281 = !DILocation(line: 678, column: 16, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6273, file: !910, line: 678, column: 9)
!6283 = !DILocation(line: 678, column: 14, scope: !6282)
!6284 = !DILocation(line: 678, column: 21, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !910, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !910, line: 678, column: 9)
!6287 = !DILocation(line: 678, column: 25, scope: !6285)
!6288 = !DILocation(line: 678, column: 23, scope: !6285)
!6289 = !DILocation(line: 678, column: 9, scope: !6285)
!6290 = !DILocation(line: 679, column: 17, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !910, line: 679, column: 17)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !910, line: 678, column: 37)
!6293 = !DILocation(line: 679, column: 17, scope: !6292)
!6294 = !DILocalVariable(name: "sum", scope: !6295, file: !910, line: 680, type: !996)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !910, line: 679, column: 23)
!6296 = !DILocation(line: 680, column: 26, scope: !6295)
!6297 = !DILocation(line: 680, column: 39, scope: !6295)
!6298 = !DILocation(line: 680, column: 37, scope: !6295)
!6299 = !DILocation(line: 680, column: 45, scope: !6295)
!6300 = !DILocation(line: 680, column: 55, scope: !6295)
!6301 = !DILocation(line: 680, column: 53, scope: !6295)
!6302 = !DILocation(line: 680, column: 42, scope: !6295)
!6303 = !DILocation(line: 681, column: 17, scope: !6295)
!6304 = !DILocation(line: 681, column: 24, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6295, file: !910, discriminator: 1)
!6306 = !DILocation(line: 681, column: 30, scope: !6305)
!6307 = !DILocation(line: 681, column: 28, scope: !6305)
!6308 = !DILocation(line: 681, column: 17, scope: !6305)
!6309 = !DILocation(line: 682, column: 33, scope: !6295)
!6310 = !DILocation(line: 682, column: 28, scope: !6295)
!6311 = !DILocation(line: 682, column: 40, scope: !6295)
!6312 = !DILocation(line: 682, column: 37, scope: !6295)
!6313 = !DILocation(line: 682, column: 25, scope: !6295)
!6314 = !DILocation(line: 681, column: 17, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !6295, file: !910, discriminator: 2)
!6316 = distinct !{!6316, !6303}
!6317 = !DILocation(line: 683, column: 30, scope: !6295)
!6318 = !DILocation(line: 683, column: 25, scope: !6295)
!6319 = !DILocation(line: 683, column: 17, scope: !6295)
!6320 = !DILocation(line: 683, column: 22, scope: !6295)
!6321 = !DILocation(line: 683, column: 28, scope: !6295)
!6322 = !DILocation(line: 684, column: 13, scope: !6295)
!6323 = !DILocalVariable(name: "sum", scope: !6324, file: !910, line: 685, type: !996)
!6324 = distinct !DILexicalBlock(scope: !6291, file: !910, line: 684, column: 20)
!6325 = !DILocation(line: 685, column: 26, scope: !6324)
!6326 = !DILocation(line: 686, column: 17, scope: !6324)
!6327 = !DILocation(line: 686, column: 24, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6324, file: !910, discriminator: 1)
!6329 = !DILocation(line: 686, column: 30, scope: !6328)
!6330 = !DILocation(line: 686, column: 28, scope: !6328)
!6331 = !DILocation(line: 686, column: 17, scope: !6328)
!6332 = !DILocation(line: 687, column: 33, scope: !6324)
!6333 = !DILocation(line: 687, column: 28, scope: !6324)
!6334 = !DILocation(line: 687, column: 25, scope: !6324)
!6335 = !DILocation(line: 686, column: 17, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6324, file: !910, discriminator: 2)
!6337 = distinct !{!6337, !6326}
!6338 = !DILocation(line: 688, column: 30, scope: !6324)
!6339 = !DILocation(line: 688, column: 25, scope: !6324)
!6340 = !DILocation(line: 688, column: 17, scope: !6324)
!6341 = !DILocation(line: 688, column: 22, scope: !6324)
!6342 = !DILocation(line: 688, column: 28, scope: !6324)
!6343 = !DILocation(line: 690, column: 24, scope: !6292)
!6344 = !DILocation(line: 690, column: 29, scope: !6292)
!6345 = !DILocation(line: 690, column: 26, scope: !6292)
!6346 = !DILocation(line: 690, column: 21, scope: !6292)
!6347 = !DILocation(line: 691, column: 9, scope: !6292)
!6348 = !DILocation(line: 678, column: 33, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !6286, file: !910, discriminator: 2)
!6350 = !DILocation(line: 678, column: 9, scope: !6349)
!6351 = distinct !{!6351, !6352}
!6352 = !DILocation(line: 678, column: 9, scope: !6273)
!6353 = !DILocation(line: 692, column: 5, scope: !6273)
!6354 = !DILocation(line: 675, column: 29, scope: !6355)
!6355 = !DILexicalBlockFile(scope: !6268, file: !910, discriminator: 2)
!6356 = !DILocation(line: 675, column: 5, scope: !6355)
!6357 = distinct !{!6357, !6358}
!6358 = !DILocation(line: 675, column: 5, scope: !6235)
!6359 = !DILocation(line: 693, column: 1, scope: !6235)
!6360 = distinct !DISubprogram(name: "calc_optimal_rice_params", scope: !910, file: !910, line: 635, type: !6361, isLocal: true, isDefinition: true, scopeLine: 638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6361 = !DISubroutineType(types: !6362)
!6362 = !{!996, !6092, !954, !6093, !954, !954, !954, !954}
!6363 = !DILocalVariable(name: "rc", arg: 1, scope: !6360, file: !910, line: 635, type: !6092)
!6364 = !DILocation(line: 635, column: 55, scope: !6360)
!6365 = !DILocalVariable(name: "porder", arg: 2, scope: !6360, file: !910, line: 635, type: !954)
!6366 = !DILocation(line: 635, column: 63, scope: !6360)
!6367 = !DILocalVariable(name: "sums", arg: 3, scope: !6360, file: !910, line: 636, type: !6093)
!6368 = !DILocation(line: 636, column: 51, scope: !6360)
!6369 = !DILocalVariable(name: "n", arg: 4, scope: !6360, file: !910, line: 637, type: !954)
!6370 = !DILocation(line: 637, column: 46, scope: !6360)
!6371 = !DILocalVariable(name: "pred_order", arg: 5, scope: !6360, file: !910, line: 637, type: !954)
!6372 = !DILocation(line: 637, column: 53, scope: !6360)
!6373 = !DILocalVariable(name: "max_param", arg: 6, scope: !6360, file: !910, line: 637, type: !954)
!6374 = !DILocation(line: 637, column: 69, scope: !6360)
!6375 = !DILocalVariable(name: "exact", arg: 7, scope: !6360, file: !910, line: 637, type: !954)
!6376 = !DILocation(line: 637, column: 84, scope: !6360)
!6377 = !DILocalVariable(name: "i", scope: !6360, file: !910, line: 639, type: !954)
!6378 = !DILocation(line: 639, column: 9, scope: !6360)
!6379 = !DILocalVariable(name: "k", scope: !6360, file: !910, line: 640, type: !954)
!6380 = !DILocation(line: 640, column: 9, scope: !6360)
!6381 = !DILocalVariable(name: "cnt", scope: !6360, file: !910, line: 640, type: !954)
!6382 = !DILocation(line: 640, column: 12, scope: !6360)
!6383 = !DILocalVariable(name: "part", scope: !6360, file: !910, line: 640, type: !954)
!6384 = !DILocation(line: 640, column: 17, scope: !6360)
!6385 = !DILocalVariable(name: "all_bits", scope: !6360, file: !910, line: 641, type: !996)
!6386 = !DILocation(line: 641, column: 14, scope: !6360)
!6387 = !DILocation(line: 643, column: 18, scope: !6360)
!6388 = !DILocation(line: 643, column: 15, scope: !6360)
!6389 = !DILocation(line: 643, column: 10, scope: !6360)
!6390 = !DILocation(line: 644, column: 20, scope: !6360)
!6391 = !DILocation(line: 644, column: 18, scope: !6360)
!6392 = !DILocation(line: 644, column: 16, scope: !6360)
!6393 = !DILocation(line: 644, column: 14, scope: !6360)
!6394 = !DILocation(line: 646, column: 12, scope: !6360)
!6395 = !DILocation(line: 646, column: 17, scope: !6360)
!6396 = !DILocation(line: 646, column: 14, scope: !6360)
!6397 = !DILocation(line: 646, column: 27, scope: !6360)
!6398 = !DILocation(line: 646, column: 25, scope: !6360)
!6399 = !DILocation(line: 646, column: 9, scope: !6360)
!6400 = !DILocation(line: 647, column: 12, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6360, file: !910, line: 647, column: 5)
!6402 = !DILocation(line: 647, column: 10, scope: !6401)
!6403 = !DILocation(line: 647, column: 17, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !6405, file: !910, discriminator: 1)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !910, line: 647, column: 5)
!6406 = !DILocation(line: 647, column: 21, scope: !6404)
!6407 = !DILocation(line: 647, column: 19, scope: !6404)
!6408 = !DILocation(line: 647, column: 5, scope: !6404)
!6409 = !DILocation(line: 648, column: 13, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !910, line: 648, column: 13)
!6411 = distinct !DILexicalBlock(scope: !6405, file: !910, line: 647, column: 32)
!6412 = !DILocation(line: 648, column: 13, scope: !6411)
!6413 = !DILocation(line: 649, column: 42, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !910, line: 648, column: 20)
!6415 = !DILocation(line: 649, column: 48, scope: !6414)
!6416 = !DILocation(line: 649, column: 51, scope: !6414)
!6417 = !DILocation(line: 649, column: 17, scope: !6414)
!6418 = !DILocation(line: 649, column: 15, scope: !6414)
!6419 = !DILocation(line: 650, column: 33, scope: !6414)
!6420 = !DILocation(line: 650, column: 25, scope: !6414)
!6421 = !DILocation(line: 650, column: 30, scope: !6414)
!6422 = !DILocation(line: 650, column: 22, scope: !6414)
!6423 = !DILocation(line: 651, column: 9, scope: !6414)
!6424 = !DILocation(line: 652, column: 44, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6410, file: !910, line: 651, column: 16)
!6426 = !DILocation(line: 652, column: 36, scope: !6425)
!6427 = !DILocation(line: 652, column: 48, scope: !6425)
!6428 = !DILocation(line: 652, column: 53, scope: !6425)
!6429 = !DILocation(line: 652, column: 17, scope: !6425)
!6430 = !DILocation(line: 652, column: 15, scope: !6425)
!6431 = !DILocation(line: 653, column: 28, scope: !6425)
!6432 = !DILocation(line: 653, column: 35, scope: !6425)
!6433 = !DILocation(line: 653, column: 37, scope: !6425)
!6434 = !DILocation(line: 653, column: 32, scope: !6425)
!6435 = !DILocation(line: 653, column: 26, scope: !6425)
!6436 = !DILocation(line: 653, column: 52, scope: !6425)
!6437 = !DILocation(line: 653, column: 44, scope: !6425)
!6438 = !DILocation(line: 653, column: 56, scope: !6425)
!6439 = !DILocation(line: 653, column: 59, scope: !6425)
!6440 = !DILocation(line: 653, column: 55, scope: !6425)
!6441 = !DILocation(line: 653, column: 54, scope: !6425)
!6442 = !DILocation(line: 653, column: 67, scope: !6425)
!6443 = !DILocation(line: 653, column: 64, scope: !6425)
!6444 = !DILocation(line: 653, column: 41, scope: !6425)
!6445 = !DILocation(line: 653, column: 22, scope: !6425)
!6446 = !DILocation(line: 655, column: 25, scope: !6411)
!6447 = !DILocation(line: 655, column: 20, scope: !6411)
!6448 = !DILocation(line: 655, column: 9, scope: !6411)
!6449 = !DILocation(line: 655, column: 13, scope: !6411)
!6450 = !DILocation(line: 655, column: 23, scope: !6411)
!6451 = !DILocation(line: 656, column: 15, scope: !6411)
!6452 = !DILocation(line: 656, column: 20, scope: !6411)
!6453 = !DILocation(line: 656, column: 17, scope: !6411)
!6454 = !DILocation(line: 656, column: 13, scope: !6411)
!6455 = !DILocation(line: 657, column: 5, scope: !6411)
!6456 = !DILocation(line: 647, column: 28, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !6405, file: !910, discriminator: 2)
!6458 = !DILocation(line: 647, column: 5, scope: !6457)
!6459 = distinct !{!6459, !6460}
!6460 = !DILocation(line: 647, column: 5, scope: !6360)
!6461 = !DILocation(line: 659, column: 18, scope: !6360)
!6462 = !DILocation(line: 659, column: 5, scope: !6360)
!6463 = !DILocation(line: 659, column: 9, scope: !6360)
!6464 = !DILocation(line: 659, column: 16, scope: !6360)
!6465 = !DILocation(line: 661, column: 12, scope: !6360)
!6466 = !DILocation(line: 661, column: 5, scope: !6360)
!6467 = distinct !DISubprogram(name: "calc_sum_next", scope: !910, file: !910, line: 695, type: !6468, isLocal: true, isDefinition: true, scopeLine: 696, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{null, !954, !6093, !954}
!6470 = !DILocalVariable(name: "level", arg: 1, scope: !6467, file: !910, line: 695, type: !954)
!6471 = !DILocation(line: 695, column: 31, scope: !6467)
!6472 = !DILocalVariable(name: "sums", arg: 2, scope: !6467, file: !910, line: 695, type: !6093)
!6473 = !DILocation(line: 695, column: 47, scope: !6467)
!6474 = !DILocalVariable(name: "kmax", arg: 3, scope: !6467, file: !910, line: 695, type: !954)
!6475 = !DILocation(line: 695, column: 71, scope: !6467)
!6476 = !DILocalVariable(name: "i", scope: !6467, file: !910, line: 697, type: !954)
!6477 = !DILocation(line: 697, column: 9, scope: !6467)
!6478 = !DILocalVariable(name: "k", scope: !6467, file: !910, line: 697, type: !954)
!6479 = !DILocation(line: 697, column: 12, scope: !6467)
!6480 = !DILocalVariable(name: "parts", scope: !6467, file: !910, line: 698, type: !954)
!6481 = !DILocation(line: 698, column: 9, scope: !6467)
!6482 = !DILocation(line: 698, column: 23, scope: !6467)
!6483 = !DILocation(line: 698, column: 20, scope: !6467)
!6484 = !DILocation(line: 699, column: 12, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6467, file: !910, line: 699, column: 5)
!6486 = !DILocation(line: 699, column: 10, scope: !6485)
!6487 = !DILocation(line: 699, column: 17, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6489, file: !910, discriminator: 1)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !910, line: 699, column: 5)
!6490 = !DILocation(line: 699, column: 21, scope: !6488)
!6491 = !DILocation(line: 699, column: 19, scope: !6488)
!6492 = !DILocation(line: 699, column: 5, scope: !6488)
!6493 = !DILocation(line: 700, column: 15, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6495, file: !910, line: 700, column: 9)
!6495 = distinct !DILexicalBlock(scope: !6489, file: !910, line: 699, column: 33)
!6496 = !DILocation(line: 700, column: 14, scope: !6494)
!6497 = !DILocation(line: 700, column: 19, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !6499, file: !910, discriminator: 1)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !910, line: 700, column: 9)
!6500 = !DILocation(line: 700, column: 22, scope: !6498)
!6501 = !DILocation(line: 700, column: 20, scope: !6498)
!6502 = !DILocation(line: 700, column: 9, scope: !6498)
!6503 = !DILocation(line: 701, column: 36, scope: !6499)
!6504 = !DILocation(line: 701, column: 35, scope: !6499)
!6505 = !DILocation(line: 701, column: 26, scope: !6499)
!6506 = !DILocation(line: 701, column: 31, scope: !6499)
!6507 = !DILocation(line: 701, column: 51, scope: !6499)
!6508 = !DILocation(line: 701, column: 50, scope: !6499)
!6509 = !DILocation(line: 701, column: 52, scope: !6499)
!6510 = !DILocation(line: 701, column: 41, scope: !6499)
!6511 = !DILocation(line: 701, column: 46, scope: !6499)
!6512 = !DILocation(line: 701, column: 39, scope: !6499)
!6513 = !DILocation(line: 701, column: 21, scope: !6499)
!6514 = !DILocation(line: 701, column: 13, scope: !6499)
!6515 = !DILocation(line: 701, column: 18, scope: !6499)
!6516 = !DILocation(line: 701, column: 24, scope: !6499)
!6517 = !DILocation(line: 700, column: 29, scope: !6518)
!6518 = !DILexicalBlockFile(scope: !6499, file: !910, discriminator: 2)
!6519 = !DILocation(line: 700, column: 9, scope: !6518)
!6520 = distinct !{!6520, !6521}
!6521 = !DILocation(line: 700, column: 9, scope: !6495)
!6522 = !DILocation(line: 702, column: 5, scope: !6495)
!6523 = !DILocation(line: 699, column: 29, scope: !6524)
!6524 = !DILexicalBlockFile(scope: !6489, file: !910, discriminator: 2)
!6525 = !DILocation(line: 699, column: 5, scope: !6524)
!6526 = distinct !{!6526, !6527}
!6527 = !DILocation(line: 699, column: 5, scope: !6467)
!6528 = !DILocation(line: 703, column: 1, scope: !6467)
!6529 = distinct !DISubprogram(name: "find_optimal_param_exact", scope: !910, file: !910, line: 618, type: !6530, isLocal: true, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!954, !6093, !954, !954}
!6532 = !DILocalVariable(name: "sums", arg: 1, scope: !6529, file: !910, line: 618, type: !6093)
!6533 = !DILocation(line: 618, column: 46, scope: !6529)
!6534 = !DILocalVariable(name: "i", arg: 2, scope: !6529, file: !910, line: 618, type: !954)
!6535 = !DILocation(line: 618, column: 70, scope: !6529)
!6536 = !DILocalVariable(name: "max_param", arg: 3, scope: !6529, file: !910, line: 618, type: !954)
!6537 = !DILocation(line: 618, column: 77, scope: !6529)
!6538 = !DILocalVariable(name: "bestk", scope: !6529, file: !910, line: 620, type: !954)
!6539 = !DILocation(line: 620, column: 9, scope: !6529)
!6540 = !DILocalVariable(name: "bestbits", scope: !6529, file: !910, line: 621, type: !960)
!6541 = !DILocation(line: 621, column: 13, scope: !6529)
!6542 = !DILocalVariable(name: "k", scope: !6529, file: !910, line: 622, type: !954)
!6543 = !DILocation(line: 622, column: 9, scope: !6529)
!6544 = !DILocation(line: 624, column: 12, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6529, file: !910, line: 624, column: 5)
!6546 = !DILocation(line: 624, column: 10, scope: !6545)
!6547 = !DILocation(line: 624, column: 17, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !6549, file: !910, discriminator: 1)
!6549 = distinct !DILexicalBlock(scope: !6545, file: !910, line: 624, column: 5)
!6550 = !DILocation(line: 624, column: 22, scope: !6548)
!6551 = !DILocation(line: 624, column: 19, scope: !6548)
!6552 = !DILocation(line: 624, column: 5, scope: !6548)
!6553 = !DILocalVariable(name: "bits", scope: !6554, file: !910, line: 625, type: !960)
!6554 = distinct !DILexicalBlock(scope: !6549, file: !910, line: 624, column: 38)
!6555 = !DILocation(line: 625, column: 17, scope: !6554)
!6556 = !DILocation(line: 625, column: 32, scope: !6554)
!6557 = !DILocation(line: 625, column: 24, scope: !6554)
!6558 = !DILocation(line: 625, column: 29, scope: !6554)
!6559 = !DILocation(line: 626, column: 13, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6554, file: !910, line: 626, column: 13)
!6561 = !DILocation(line: 626, column: 20, scope: !6560)
!6562 = !DILocation(line: 626, column: 18, scope: !6560)
!6563 = !DILocation(line: 626, column: 13, scope: !6554)
!6564 = !DILocation(line: 627, column: 24, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !910, line: 626, column: 30)
!6566 = !DILocation(line: 627, column: 22, scope: !6565)
!6567 = !DILocation(line: 628, column: 21, scope: !6565)
!6568 = !DILocation(line: 628, column: 19, scope: !6565)
!6569 = !DILocation(line: 629, column: 9, scope: !6565)
!6570 = !DILocation(line: 630, column: 5, scope: !6554)
!6571 = !DILocation(line: 624, column: 34, scope: !6572)
!6572 = !DILexicalBlockFile(scope: !6549, file: !910, discriminator: 2)
!6573 = !DILocation(line: 624, column: 5, scope: !6572)
!6574 = distinct !{!6574, !6575}
!6575 = !DILocation(line: 624, column: 5, scope: !6529)
!6576 = !DILocation(line: 632, column: 12, scope: !6529)
!6577 = !DILocation(line: 632, column: 5, scope: !6529)
!6578 = distinct !DISubprogram(name: "write_frame_header", scope: !910, file: !910, line: 1205, type: !2983, isLocal: true, isDefinition: true, scopeLine: 1206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6579 = !DILocalVariable(name: "s", arg: 1, scope: !6578, file: !910, line: 1205, type: !1741)
!6580 = !DILocation(line: 1205, column: 51, scope: !6578)
!6581 = !DILocalVariable(name: "frame", scope: !6578, file: !910, line: 1207, type: !3289)
!6582 = !DILocation(line: 1207, column: 16, scope: !6578)
!6583 = !DILocalVariable(name: "crc", scope: !6578, file: !910, line: 1208, type: !954)
!6584 = !DILocation(line: 1208, column: 9, scope: !6578)
!6585 = !DILocation(line: 1210, column: 14, scope: !6578)
!6586 = !DILocation(line: 1210, column: 17, scope: !6578)
!6587 = !DILocation(line: 1210, column: 11, scope: !6578)
!6588 = !DILocation(line: 1212, column: 15, scope: !6578)
!6589 = !DILocation(line: 1212, column: 18, scope: !6578)
!6590 = !DILocation(line: 1212, column: 5, scope: !6578)
!6591 = !DILocation(line: 1213, column: 15, scope: !6578)
!6592 = !DILocation(line: 1213, column: 18, scope: !6578)
!6593 = !DILocation(line: 1213, column: 25, scope: !6578)
!6594 = !DILocation(line: 1213, column: 32, scope: !6578)
!6595 = !DILocation(line: 1213, column: 5, scope: !6578)
!6596 = !DILocation(line: 1214, column: 15, scope: !6578)
!6597 = !DILocation(line: 1214, column: 18, scope: !6578)
!6598 = !DILocation(line: 1214, column: 25, scope: !6578)
!6599 = !DILocation(line: 1214, column: 28, scope: !6578)
!6600 = !DILocation(line: 1214, column: 5, scope: !6578)
!6601 = !DILocation(line: 1216, column: 9, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6578, file: !910, line: 1216, column: 9)
!6603 = !DILocation(line: 1216, column: 16, scope: !6602)
!6604 = !DILocation(line: 1216, column: 24, scope: !6602)
!6605 = !DILocation(line: 1216, column: 9, scope: !6578)
!6606 = !DILocation(line: 1217, column: 19, scope: !6602)
!6607 = !DILocation(line: 1217, column: 22, scope: !6602)
!6608 = !DILocation(line: 1217, column: 29, scope: !6602)
!6609 = !DILocation(line: 1217, column: 32, scope: !6602)
!6610 = !DILocation(line: 1217, column: 40, scope: !6602)
!6611 = !DILocation(line: 1217, column: 9, scope: !6602)
!6612 = !DILocation(line: 1219, column: 19, scope: !6602)
!6613 = !DILocation(line: 1219, column: 22, scope: !6602)
!6614 = !DILocation(line: 1219, column: 29, scope: !6602)
!6615 = !DILocation(line: 1219, column: 36, scope: !6602)
!6616 = !DILocation(line: 1219, column: 44, scope: !6602)
!6617 = !DILocation(line: 1219, column: 48, scope: !6602)
!6618 = !DILocation(line: 1219, column: 9, scope: !6602)
!6619 = !DILocation(line: 1221, column: 15, scope: !6578)
!6620 = !DILocation(line: 1221, column: 18, scope: !6578)
!6621 = !DILocation(line: 1221, column: 25, scope: !6578)
!6622 = !DILocation(line: 1221, column: 28, scope: !6578)
!6623 = !DILocation(line: 1221, column: 5, scope: !6578)
!6624 = !DILocation(line: 1222, column: 15, scope: !6578)
!6625 = !DILocation(line: 1222, column: 18, scope: !6578)
!6626 = !DILocation(line: 1222, column: 5, scope: !6578)
!6627 = !DILocation(line: 1223, column: 17, scope: !6578)
!6628 = !DILocation(line: 1223, column: 20, scope: !6578)
!6629 = !DILocation(line: 1223, column: 24, scope: !6578)
!6630 = !DILocation(line: 1223, column: 27, scope: !6578)
!6631 = !DILocation(line: 1223, column: 5, scope: !6578)
!6632 = !DILocation(line: 1225, column: 9, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6578, file: !910, line: 1225, column: 9)
!6634 = !DILocation(line: 1225, column: 16, scope: !6633)
!6635 = !DILocation(line: 1225, column: 27, scope: !6633)
!6636 = !DILocation(line: 1225, column: 9, scope: !6578)
!6637 = !DILocation(line: 1226, column: 19, scope: !6633)
!6638 = !DILocation(line: 1226, column: 22, scope: !6633)
!6639 = !DILocation(line: 1226, column: 29, scope: !6633)
!6640 = !DILocation(line: 1226, column: 36, scope: !6633)
!6641 = !DILocation(line: 1226, column: 9, scope: !6633)
!6642 = !DILocation(line: 1227, column: 14, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6633, file: !910, line: 1227, column: 14)
!6644 = !DILocation(line: 1227, column: 21, scope: !6643)
!6645 = !DILocation(line: 1227, column: 32, scope: !6643)
!6646 = !DILocation(line: 1227, column: 14, scope: !6633)
!6647 = !DILocation(line: 1228, column: 19, scope: !6643)
!6648 = !DILocation(line: 1228, column: 22, scope: !6643)
!6649 = !DILocation(line: 1228, column: 30, scope: !6643)
!6650 = !DILocation(line: 1228, column: 37, scope: !6643)
!6651 = !DILocation(line: 1228, column: 9, scope: !6643)
!6652 = !DILocation(line: 1230, column: 9, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6578, file: !910, line: 1230, column: 9)
!6654 = !DILocation(line: 1230, column: 12, scope: !6653)
!6655 = !DILocation(line: 1230, column: 23, scope: !6653)
!6656 = !DILocation(line: 1230, column: 9, scope: !6578)
!6657 = !DILocation(line: 1231, column: 19, scope: !6653)
!6658 = !DILocation(line: 1231, column: 22, scope: !6653)
!6659 = !DILocation(line: 1231, column: 29, scope: !6653)
!6660 = !DILocation(line: 1231, column: 32, scope: !6653)
!6661 = !DILocation(line: 1231, column: 9, scope: !6653)
!6662 = !DILocation(line: 1232, column: 14, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6653, file: !910, line: 1232, column: 14)
!6664 = !DILocation(line: 1232, column: 17, scope: !6663)
!6665 = !DILocation(line: 1232, column: 28, scope: !6663)
!6666 = !DILocation(line: 1232, column: 14, scope: !6653)
!6667 = !DILocation(line: 1233, column: 19, scope: !6663)
!6668 = !DILocation(line: 1233, column: 22, scope: !6663)
!6669 = !DILocation(line: 1233, column: 30, scope: !6663)
!6670 = !DILocation(line: 1233, column: 33, scope: !6663)
!6671 = !DILocation(line: 1233, column: 9, scope: !6663)
!6672 = !DILocation(line: 1235, column: 21, scope: !6578)
!6673 = !DILocation(line: 1235, column: 24, scope: !6578)
!6674 = !DILocation(line: 1235, column: 5, scope: !6578)
!6675 = !DILocation(line: 1236, column: 18, scope: !6578)
!6676 = !DILocation(line: 1236, column: 53, scope: !6578)
!6677 = !DILocation(line: 1236, column: 56, scope: !6578)
!6678 = !DILocation(line: 1236, column: 59, scope: !6578)
!6679 = !DILocation(line: 1237, column: 34, scope: !6578)
!6680 = !DILocation(line: 1237, column: 37, scope: !6578)
!6681 = !DILocation(line: 1237, column: 18, scope: !6578)
!6682 = !DILocation(line: 1237, column: 41, scope: !6578)
!6683 = !DILocation(line: 1236, column: 11, scope: !6684)
!6684 = !DILexicalBlockFile(scope: !6578, file: !910, discriminator: 1)
!6685 = !DILocation(line: 1236, column: 9, scope: !6578)
!6686 = !DILocation(line: 1238, column: 15, scope: !6578)
!6687 = !DILocation(line: 1238, column: 18, scope: !6578)
!6688 = !DILocation(line: 1238, column: 25, scope: !6578)
!6689 = !DILocation(line: 1238, column: 5, scope: !6578)
!6690 = !DILocation(line: 1239, column: 1, scope: !6578)
!6691 = distinct !DISubprogram(name: "write_subframes", scope: !910, file: !910, line: 1242, type: !2983, isLocal: true, isDefinition: true, scopeLine: 1243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6692 = !DILocalVariable(name: "s", arg: 1, scope: !6691, file: !910, line: 1242, type: !1741)
!6693 = !DILocation(line: 1242, column: 48, scope: !6691)
!6694 = !DILocalVariable(name: "ch", scope: !6691, file: !910, line: 1244, type: !954)
!6695 = !DILocation(line: 1244, column: 9, scope: !6691)
!6696 = !DILocation(line: 1246, column: 13, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6691, file: !910, line: 1246, column: 5)
!6698 = !DILocation(line: 1246, column: 10, scope: !6697)
!6699 = !DILocation(line: 1246, column: 18, scope: !6700)
!6700 = !DILexicalBlockFile(scope: !6701, file: !910, discriminator: 1)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !910, line: 1246, column: 5)
!6702 = !DILocation(line: 1246, column: 23, scope: !6700)
!6703 = !DILocation(line: 1246, column: 26, scope: !6700)
!6704 = !DILocation(line: 1246, column: 21, scope: !6700)
!6705 = !DILocation(line: 1246, column: 5, scope: !6700)
!6706 = !DILocalVariable(name: "sub", scope: !6707, file: !910, line: 1247, type: !3377)
!6707 = distinct !DILexicalBlock(scope: !6701, file: !910, line: 1246, column: 42)
!6708 = !DILocation(line: 1247, column: 23, scope: !6707)
!6709 = !DILocation(line: 1247, column: 49, scope: !6707)
!6710 = !DILocation(line: 1247, column: 30, scope: !6707)
!6711 = !DILocation(line: 1247, column: 33, scope: !6707)
!6712 = !DILocation(line: 1247, column: 39, scope: !6707)
!6713 = !DILocalVariable(name: "i", scope: !6707, file: !910, line: 1248, type: !954)
!6714 = !DILocation(line: 1248, column: 13, scope: !6707)
!6715 = !DILocalVariable(name: "p", scope: !6707, file: !910, line: 1248, type: !954)
!6716 = !DILocation(line: 1248, column: 16, scope: !6707)
!6717 = !DILocalVariable(name: "porder", scope: !6707, file: !910, line: 1248, type: !954)
!6718 = !DILocation(line: 1248, column: 19, scope: !6707)
!6719 = !DILocalVariable(name: "psize", scope: !6707, file: !910, line: 1248, type: !954)
!6720 = !DILocation(line: 1248, column: 27, scope: !6707)
!6721 = !DILocalVariable(name: "part_end", scope: !6707, file: !910, line: 1249, type: !1922)
!6722 = !DILocation(line: 1249, column: 18, scope: !6707)
!6723 = !DILocalVariable(name: "res", scope: !6707, file: !910, line: 1250, type: !1922)
!6724 = !DILocation(line: 1250, column: 18, scope: !6707)
!6725 = !DILocation(line: 1250, column: 24, scope: !6707)
!6726 = !DILocation(line: 1250, column: 29, scope: !6707)
!6727 = !DILocalVariable(name: "frame_end", scope: !6707, file: !910, line: 1251, type: !1922)
!6728 = !DILocation(line: 1251, column: 18, scope: !6707)
!6729 = !DILocation(line: 1251, column: 45, scope: !6707)
!6730 = !DILocation(line: 1251, column: 48, scope: !6707)
!6731 = !DILocation(line: 1251, column: 54, scope: !6707)
!6732 = !DILocation(line: 1251, column: 31, scope: !6707)
!6733 = !DILocation(line: 1251, column: 36, scope: !6707)
!6734 = !DILocation(line: 1254, column: 19, scope: !6707)
!6735 = !DILocation(line: 1254, column: 22, scope: !6707)
!6736 = !DILocation(line: 1254, column: 9, scope: !6707)
!6737 = !DILocation(line: 1255, column: 19, scope: !6707)
!6738 = !DILocation(line: 1255, column: 22, scope: !6707)
!6739 = !DILocation(line: 1255, column: 29, scope: !6707)
!6740 = !DILocation(line: 1255, column: 34, scope: !6707)
!6741 = !DILocation(line: 1255, column: 9, scope: !6707)
!6742 = !DILocation(line: 1256, column: 19, scope: !6707)
!6743 = !DILocation(line: 1256, column: 22, scope: !6707)
!6744 = !DILocation(line: 1256, column: 31, scope: !6707)
!6745 = !DILocation(line: 1256, column: 36, scope: !6707)
!6746 = !DILocation(line: 1256, column: 30, scope: !6707)
!6747 = !DILocation(line: 1256, column: 29, scope: !6707)
!6748 = !DILocation(line: 1256, column: 9, scope: !6707)
!6749 = !DILocation(line: 1257, column: 13, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6707, file: !910, line: 1257, column: 13)
!6751 = !DILocation(line: 1257, column: 18, scope: !6750)
!6752 = !DILocation(line: 1257, column: 13, scope: !6707)
!6753 = !DILocation(line: 1258, column: 23, scope: !6750)
!6754 = !DILocation(line: 1258, column: 26, scope: !6750)
!6755 = !DILocation(line: 1258, column: 30, scope: !6750)
!6756 = !DILocation(line: 1258, column: 35, scope: !6750)
!6757 = !DILocation(line: 1258, column: 13, scope: !6750)
!6758 = !DILocation(line: 1261, column: 13, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6707, file: !910, line: 1261, column: 13)
!6760 = !DILocation(line: 1261, column: 18, scope: !6759)
!6761 = !DILocation(line: 1261, column: 23, scope: !6759)
!6762 = !DILocation(line: 1261, column: 13, scope: !6707)
!6763 = !DILocation(line: 1262, column: 24, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6759, file: !910, line: 1261, column: 29)
!6765 = !DILocation(line: 1262, column: 27, scope: !6764)
!6766 = !DILocation(line: 1262, column: 31, scope: !6764)
!6767 = !DILocation(line: 1262, column: 36, scope: !6764)
!6768 = !DILocation(line: 1262, column: 43, scope: !6764)
!6769 = !DILocation(line: 1262, column: 13, scope: !6764)
!6770 = !DILocation(line: 1263, column: 9, scope: !6764)
!6771 = !DILocation(line: 1263, column: 20, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !6773, file: !910, discriminator: 1)
!6773 = distinct !DILexicalBlock(scope: !6759, file: !910, line: 1263, column: 20)
!6774 = !DILocation(line: 1263, column: 25, scope: !6772)
!6775 = !DILocation(line: 1263, column: 30, scope: !6772)
!6776 = !DILocation(line: 1264, column: 13, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !910, line: 1263, column: 36)
!6778 = !DILocation(line: 1264, column: 20, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !6777, file: !910, discriminator: 1)
!6780 = !DILocation(line: 1264, column: 26, scope: !6779)
!6781 = !DILocation(line: 1264, column: 24, scope: !6779)
!6782 = !DILocation(line: 1264, column: 13, scope: !6779)
!6783 = !DILocation(line: 1265, column: 28, scope: !6777)
!6784 = !DILocation(line: 1265, column: 31, scope: !6777)
!6785 = !DILocation(line: 1265, column: 35, scope: !6777)
!6786 = !DILocation(line: 1265, column: 40, scope: !6777)
!6787 = !DILocation(line: 1265, column: 51, scope: !6777)
!6788 = !DILocation(line: 1265, column: 47, scope: !6777)
!6789 = !DILocation(line: 1265, column: 17, scope: !6777)
!6790 = !DILocation(line: 1264, column: 13, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6777, file: !910, discriminator: 2)
!6792 = distinct !{!6792, !6776}
!6793 = !DILocation(line: 1266, column: 9, scope: !6777)
!6794 = !DILocation(line: 1268, column: 20, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !910, line: 1268, column: 13)
!6796 = distinct !DILexicalBlock(scope: !6773, file: !910, line: 1266, column: 16)
!6797 = !DILocation(line: 1268, column: 18, scope: !6795)
!6798 = !DILocation(line: 1268, column: 25, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6800, file: !910, discriminator: 1)
!6800 = distinct !DILexicalBlock(scope: !6795, file: !910, line: 1268, column: 13)
!6801 = !DILocation(line: 1268, column: 29, scope: !6799)
!6802 = !DILocation(line: 1268, column: 34, scope: !6799)
!6803 = !DILocation(line: 1268, column: 27, scope: !6799)
!6804 = !DILocation(line: 1268, column: 13, scope: !6799)
!6805 = !DILocation(line: 1269, column: 28, scope: !6800)
!6806 = !DILocation(line: 1269, column: 31, scope: !6800)
!6807 = !DILocation(line: 1269, column: 35, scope: !6800)
!6808 = !DILocation(line: 1269, column: 40, scope: !6800)
!6809 = !DILocation(line: 1269, column: 51, scope: !6800)
!6810 = !DILocation(line: 1269, column: 47, scope: !6800)
!6811 = !DILocation(line: 1269, column: 17, scope: !6800)
!6812 = !DILocation(line: 1268, column: 42, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6800, file: !910, discriminator: 2)
!6814 = !DILocation(line: 1268, column: 13, scope: !6813)
!6815 = distinct !{!6815, !6816}
!6816 = !DILocation(line: 1268, column: 13, scope: !6796)
!6817 = !DILocation(line: 1272, column: 17, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6796, file: !910, line: 1272, column: 17)
!6819 = !DILocation(line: 1272, column: 22, scope: !6818)
!6820 = !DILocation(line: 1272, column: 27, scope: !6818)
!6821 = !DILocation(line: 1272, column: 17, scope: !6796)
!6822 = !DILocalVariable(name: "cbits", scope: !6823, file: !910, line: 1273, type: !954)
!6823 = distinct !DILexicalBlock(scope: !6818, file: !910, line: 1272, column: 34)
!6824 = !DILocation(line: 1273, column: 21, scope: !6823)
!6825 = !DILocation(line: 1273, column: 29, scope: !6823)
!6826 = !DILocation(line: 1273, column: 32, scope: !6823)
!6827 = !DILocation(line: 1273, column: 40, scope: !6823)
!6828 = !DILocation(line: 1274, column: 28, scope: !6823)
!6829 = !DILocation(line: 1274, column: 31, scope: !6823)
!6830 = !DILocation(line: 1274, column: 38, scope: !6823)
!6831 = !DILocation(line: 1274, column: 43, scope: !6823)
!6832 = !DILocation(line: 1274, column: 17, scope: !6823)
!6833 = !DILocation(line: 1275, column: 28, scope: !6823)
!6834 = !DILocation(line: 1275, column: 31, scope: !6823)
!6835 = !DILocation(line: 1275, column: 38, scope: !6823)
!6836 = !DILocation(line: 1275, column: 43, scope: !6823)
!6837 = !DILocation(line: 1275, column: 17, scope: !6823)
!6838 = !DILocation(line: 1276, column: 24, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6823, file: !910, line: 1276, column: 17)
!6840 = !DILocation(line: 1276, column: 22, scope: !6839)
!6841 = !DILocation(line: 1276, column: 29, scope: !6842)
!6842 = !DILexicalBlockFile(scope: !6843, file: !910, discriminator: 1)
!6843 = distinct !DILexicalBlock(scope: !6839, file: !910, line: 1276, column: 17)
!6844 = !DILocation(line: 1276, column: 33, scope: !6842)
!6845 = !DILocation(line: 1276, column: 38, scope: !6842)
!6846 = !DILocation(line: 1276, column: 31, scope: !6842)
!6847 = !DILocation(line: 1276, column: 17, scope: !6842)
!6848 = !DILocation(line: 1277, column: 32, scope: !6843)
!6849 = !DILocation(line: 1277, column: 35, scope: !6843)
!6850 = !DILocation(line: 1277, column: 39, scope: !6843)
!6851 = !DILocation(line: 1277, column: 57, scope: !6843)
!6852 = !DILocation(line: 1277, column: 46, scope: !6843)
!6853 = !DILocation(line: 1277, column: 51, scope: !6843)
!6854 = !DILocation(line: 1277, column: 21, scope: !6843)
!6855 = !DILocation(line: 1276, column: 46, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6843, file: !910, discriminator: 2)
!6857 = !DILocation(line: 1276, column: 17, scope: !6856)
!6858 = distinct !{!6858, !6859}
!6859 = !DILocation(line: 1276, column: 17, scope: !6823)
!6860 = !DILocation(line: 1278, column: 13, scope: !6823)
!6861 = !DILocation(line: 1281, column: 23, scope: !6796)
!6862 = !DILocation(line: 1281, column: 26, scope: !6796)
!6863 = !DILocation(line: 1281, column: 33, scope: !6796)
!6864 = !DILocation(line: 1281, column: 38, scope: !6796)
!6865 = !DILocation(line: 1281, column: 41, scope: !6796)
!6866 = !DILocation(line: 1281, column: 53, scope: !6796)
!6867 = !DILocation(line: 1281, column: 13, scope: !6796)
!6868 = !DILocation(line: 1284, column: 22, scope: !6796)
!6869 = !DILocation(line: 1284, column: 27, scope: !6796)
!6870 = !DILocation(line: 1284, column: 30, scope: !6796)
!6871 = !DILocation(line: 1284, column: 20, scope: !6796)
!6872 = !DILocation(line: 1285, column: 21, scope: !6796)
!6873 = !DILocation(line: 1285, column: 24, scope: !6796)
!6874 = !DILocation(line: 1285, column: 30, scope: !6796)
!6875 = !DILocation(line: 1285, column: 43, scope: !6796)
!6876 = !DILocation(line: 1285, column: 40, scope: !6796)
!6877 = !DILocation(line: 1285, column: 19, scope: !6796)
!6878 = !DILocation(line: 1286, column: 23, scope: !6796)
!6879 = !DILocation(line: 1286, column: 26, scope: !6796)
!6880 = !DILocation(line: 1286, column: 33, scope: !6796)
!6881 = !DILocation(line: 1286, column: 13, scope: !6796)
!6882 = !DILocation(line: 1289, column: 39, scope: !6796)
!6883 = !DILocation(line: 1289, column: 25, scope: !6796)
!6884 = !DILocation(line: 1289, column: 30, scope: !6796)
!6885 = !DILocation(line: 1289, column: 22, scope: !6796)
!6886 = !DILocation(line: 1290, column: 20, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6796, file: !910, line: 1290, column: 13)
!6888 = !DILocation(line: 1290, column: 18, scope: !6887)
!6889 = !DILocation(line: 1290, column: 25, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6891, file: !910, discriminator: 1)
!6891 = distinct !DILexicalBlock(scope: !6887, file: !910, line: 1290, column: 13)
!6892 = !DILocation(line: 1290, column: 34, scope: !6890)
!6893 = !DILocation(line: 1290, column: 31, scope: !6890)
!6894 = !DILocation(line: 1290, column: 27, scope: !6890)
!6895 = !DILocation(line: 1290, column: 13, scope: !6890)
!6896 = !DILocalVariable(name: "k", scope: !6897, file: !910, line: 1291, type: !954)
!6897 = distinct !DILexicalBlock(scope: !6891, file: !910, line: 1290, column: 47)
!6898 = !DILocation(line: 1291, column: 21, scope: !6897)
!6899 = !DILocation(line: 1291, column: 40, scope: !6897)
!6900 = !DILocation(line: 1291, column: 25, scope: !6897)
!6901 = !DILocation(line: 1291, column: 30, scope: !6897)
!6902 = !DILocation(line: 1291, column: 33, scope: !6897)
!6903 = !DILocation(line: 1292, column: 27, scope: !6897)
!6904 = !DILocation(line: 1292, column: 30, scope: !6897)
!6905 = !DILocation(line: 1292, column: 34, scope: !6897)
!6906 = !DILocation(line: 1292, column: 39, scope: !6897)
!6907 = !DILocation(line: 1292, column: 42, scope: !6897)
!6908 = !DILocation(line: 1292, column: 55, scope: !6897)
!6909 = !DILocation(line: 1292, column: 17, scope: !6897)
!6910 = !DILocation(line: 1293, column: 17, scope: !6897)
!6911 = !DILocation(line: 1293, column: 24, scope: !6912)
!6912 = !DILexicalBlockFile(scope: !6897, file: !910, discriminator: 1)
!6913 = !DILocation(line: 1293, column: 30, scope: !6912)
!6914 = !DILocation(line: 1293, column: 28, scope: !6912)
!6915 = !DILocation(line: 1293, column: 17, scope: !6912)
!6916 = !DILocation(line: 1294, column: 41, scope: !6897)
!6917 = !DILocation(line: 1294, column: 44, scope: !6897)
!6918 = !DILocation(line: 1294, column: 52, scope: !6897)
!6919 = !DILocation(line: 1294, column: 48, scope: !6897)
!6920 = !DILocation(line: 1294, column: 56, scope: !6897)
!6921 = !DILocation(line: 1294, column: 21, scope: !6897)
!6922 = !DILocation(line: 1293, column: 17, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !6897, file: !910, discriminator: 2)
!6924 = distinct !{!6924, !6910}
!6925 = !DILocation(line: 1295, column: 30, scope: !6897)
!6926 = !DILocation(line: 1295, column: 44, scope: !6897)
!6927 = !DILocation(line: 1295, column: 55, scope: !6897)
!6928 = !DILocation(line: 1295, column: 53, scope: !6897)
!6929 = !DILocation(line: 1295, column: 41, scope: !6897)
!6930 = !DILocation(line: 1295, column: 29, scope: !6897)
!6931 = !DILocation(line: 1295, column: 65, scope: !6912)
!6932 = !DILocation(line: 1295, column: 76, scope: !6912)
!6933 = !DILocation(line: 1295, column: 74, scope: !6912)
!6934 = !DILocation(line: 1295, column: 29, scope: !6912)
!6935 = !DILocation(line: 1295, column: 86, scope: !6923)
!6936 = !DILocation(line: 1295, column: 29, scope: !6923)
!6937 = !DILocation(line: 1295, column: 29, scope: !6938)
!6938 = !DILexicalBlockFile(scope: !6897, file: !910, discriminator: 3)
!6939 = !DILocation(line: 1295, column: 26, scope: !6938)
!6940 = !DILocation(line: 1296, column: 13, scope: !6897)
!6941 = !DILocation(line: 1290, column: 43, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !6891, file: !910, discriminator: 2)
!6943 = !DILocation(line: 1290, column: 13, scope: !6942)
!6944 = distinct !{!6944, !6945}
!6945 = !DILocation(line: 1290, column: 13, scope: !6796)
!6946 = !DILocation(line: 1298, column: 5, scope: !6707)
!6947 = !DILocation(line: 1246, column: 38, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6701, file: !910, discriminator: 2)
!6949 = !DILocation(line: 1246, column: 5, scope: !6948)
!6950 = distinct !{!6950, !6951}
!6951 = !DILocation(line: 1246, column: 5, scope: !6691)
!6952 = !DILocation(line: 1299, column: 1, scope: !6691)
!6953 = distinct !DISubprogram(name: "write_frame_footer", scope: !910, file: !910, line: 1302, type: !2983, isLocal: true, isDefinition: true, scopeLine: 1303, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6954 = !DILocalVariable(name: "x", arg: 1, scope: !6955, file: !3115, line: 58, type: !1417)
!6955 = distinct !DISubprogram(name: "av_bswap16", scope: !3115, file: !3115, line: 58, type: !6956, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{!1417, !1417}
!6958 = !DILocation(line: 58, column: 98, scope: !6955, inlinedAt: !6959)
!6959 = distinct !DILocation(line: 1306, column: 11, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !6953, file: !910, discriminator: 2)
!6961 = !DILocalVariable(name: "s", arg: 1, scope: !6953, file: !910, line: 1302, type: !1741)
!6962 = !DILocation(line: 1302, column: 51, scope: !6953)
!6963 = !DILocalVariable(name: "crc", scope: !6953, file: !910, line: 1304, type: !954)
!6964 = !DILocation(line: 1304, column: 9, scope: !6953)
!6965 = !DILocation(line: 1305, column: 21, scope: !6953)
!6966 = !DILocation(line: 1305, column: 24, scope: !6953)
!6967 = !DILocation(line: 1305, column: 5, scope: !6953)
!6968 = !DILocation(line: 1306, column: 29, scope: !6953)
!6969 = !DILocation(line: 1306, column: 66, scope: !6953)
!6970 = !DILocation(line: 1306, column: 69, scope: !6953)
!6971 = !DILocation(line: 1306, column: 72, scope: !6953)
!6972 = !DILocation(line: 1307, column: 45, scope: !6953)
!6973 = !DILocation(line: 1307, column: 48, scope: !6953)
!6974 = !DILocation(line: 1307, column: 29, scope: !6953)
!6975 = !DILocation(line: 1307, column: 51, scope: !6953)
!6976 = !DILocation(line: 1306, column: 22, scope: !6977)
!6977 = !DILexicalBlockFile(scope: !6953, file: !910, discriminator: 1)
!6978 = !DILocation(line: 1306, column: 22, scope: !6953)
!6979 = !DILocation(line: 1306, column: 11, scope: !6960)
!6980 = !DILocation(line: 60, column: 9, scope: !6955, inlinedAt: !6959)
!6981 = !DILocation(line: 60, column: 10, scope: !6955, inlinedAt: !6959)
!6982 = !DILocation(line: 60, column: 18, scope: !6955, inlinedAt: !6959)
!6983 = !DILocation(line: 60, column: 19, scope: !6955, inlinedAt: !6959)
!6984 = !DILocation(line: 60, column: 15, scope: !6955, inlinedAt: !6959)
!6985 = !DILocation(line: 60, column: 8, scope: !6955, inlinedAt: !6959)
!6986 = !DILocation(line: 60, column: 6, scope: !6955, inlinedAt: !6959)
!6987 = !DILocation(line: 61, column: 12, scope: !6955, inlinedAt: !6959)
!6988 = !DILocation(line: 1306, column: 11, scope: !6953)
!6989 = !DILocation(line: 1306, column: 9, scope: !6953)
!6990 = !DILocation(line: 1308, column: 15, scope: !6953)
!6991 = !DILocation(line: 1308, column: 18, scope: !6953)
!6992 = !DILocation(line: 1308, column: 26, scope: !6953)
!6993 = !DILocation(line: 1308, column: 5, scope: !6953)
!6994 = !DILocation(line: 1309, column: 21, scope: !6953)
!6995 = !DILocation(line: 1309, column: 24, scope: !6953)
!6996 = !DILocation(line: 1309, column: 5, scope: !6953)
!6997 = !DILocation(line: 1310, column: 1, scope: !6953)
!6998 = distinct !DISubprogram(name: "put_bits_count", scope: !1749, file: !1749, line: 85, type: !6999, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{!954, !3067}
!7001 = !DILocalVariable(name: "s", arg: 1, scope: !6998, file: !1749, line: 85, type: !3067)
!7002 = !DILocation(line: 85, column: 49, scope: !6998)
!7003 = !DILocation(line: 87, column: 13, scope: !6998)
!7004 = !DILocation(line: 87, column: 16, scope: !6998)
!7005 = !DILocation(line: 87, column: 26, scope: !6998)
!7006 = !DILocation(line: 87, column: 29, scope: !6998)
!7007 = !DILocation(line: 87, column: 24, scope: !6998)
!7008 = !DILocation(line: 87, column: 34, scope: !6998)
!7009 = !DILocation(line: 87, column: 38, scope: !6998)
!7010 = !DILocation(line: 87, column: 45, scope: !6998)
!7011 = !DILocation(line: 87, column: 48, scope: !6998)
!7012 = !DILocation(line: 87, column: 43, scope: !6998)
!7013 = !DILocation(line: 87, column: 12, scope: !6998)
!7014 = !DILocation(line: 87, column: 5, scope: !6998)
!7015 = distinct !DISubprogram(name: "write_utf8", scope: !910, file: !910, line: 1198, type: !7016, isLocal: true, isDefinition: true, scopeLine: 1199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{null, !3067, !949}
!7018 = !DILocalVariable(name: "pb", arg: 1, scope: !7015, file: !910, line: 1198, type: !3067)
!7019 = !DILocation(line: 1198, column: 39, scope: !7015)
!7020 = !DILocalVariable(name: "val", arg: 2, scope: !7015, file: !910, line: 1198, type: !949)
!7021 = !DILocation(line: 1198, column: 52, scope: !7015)
!7022 = !DILocalVariable(name: "tmp", scope: !7015, file: !910, line: 1200, type: !957)
!7023 = !DILocation(line: 1200, column: 13, scope: !7015)
!7024 = !DILocalVariable(name: "bytes", scope: !7025, file: !910, line: 1201, type: !954)
!7025 = distinct !DILexicalBlock(scope: !7015, file: !910, line: 1201, column: 5)
!7026 = !DILocation(line: 1201, column: 11, scope: !7025)
!7027 = !DILocalVariable(name: "shift", scope: !7025, file: !910, line: 1201, type: !954)
!7028 = !DILocation(line: 1201, column: 18, scope: !7025)
!7029 = !DILocalVariable(name: "in", scope: !7025, file: !910, line: 1201, type: !949)
!7030 = !DILocation(line: 1201, column: 34, scope: !7025)
!7031 = !DILocation(line: 1201, column: 39, scope: !7025)
!7032 = !DILocation(line: 1201, column: 48, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7025, file: !910, line: 1201, column: 48)
!7034 = !DILocation(line: 1201, column: 51, scope: !7033)
!7035 = !DILocation(line: 1201, column: 48, scope: !7025)
!7036 = !DILocation(line: 1201, column: 67, scope: !7037)
!7037 = !DILexicalBlockFile(scope: !7038, file: !910, discriminator: 1)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !910, line: 1201, column: 59)
!7039 = !DILocation(line: 1201, column: 65, scope: !7037)
!7040 = !DILocation(line: 1201, column: 80, scope: !7037)
!7041 = !DILocation(line: 1201, column: 87, scope: !7037)
!7042 = !DILocation(line: 1201, column: 71, scope: !7037)
!7043 = !DILocation(line: 1201, column: 93, scope: !7037)
!7044 = !DILocation(line: 1201, column: 132, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !7046, file: !910, discriminator: 2)
!7046 = distinct !DILexicalBlock(scope: !7033, file: !910, line: 1201, column: 100)
!7047 = !DILocation(line: 1201, column: 135, scope: !7045)
!7048 = !DILocation(line: 1201, column: 117, scope: !7045)
!7049 = !DILocation(line: 1201, column: 115, scope: !7045)
!7050 = !DILocation(line: 1201, column: 140, scope: !7045)
!7051 = !DILocation(line: 1201, column: 145, scope: !7045)
!7052 = !DILocation(line: 1201, column: 108, scope: !7045)
!7053 = !DILocation(line: 1201, column: 159, scope: !7045)
!7054 = !DILocation(line: 1201, column: 165, scope: !7045)
!7055 = !DILocation(line: 1201, column: 170, scope: !7045)
!7056 = !DILocation(line: 1201, column: 156, scope: !7045)
!7057 = !DILocation(line: 1201, column: 196, scope: !7045)
!7058 = !DILocation(line: 1201, column: 193, scope: !7045)
!7059 = !DILocation(line: 1201, column: 186, scope: !7045)
!7060 = !DILocation(line: 1201, column: 207, scope: !7045)
!7061 = !DILocation(line: 1201, column: 213, scope: !7045)
!7062 = !DILocation(line: 1201, column: 210, scope: !7045)
!7063 = !DILocation(line: 1201, column: 204, scope: !7045)
!7064 = !DILocation(line: 1201, column: 181, scope: !7045)
!7065 = !DILocation(line: 1201, column: 179, scope: !7045)
!7066 = !DILocation(line: 1201, column: 230, scope: !7045)
!7067 = !DILocation(line: 1201, column: 237, scope: !7045)
!7068 = !DILocation(line: 1201, column: 221, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !7045, file: !910, discriminator: 5)
!7070 = !DILocation(line: 1201, column: 243, scope: !7045)
!7071 = !DILocation(line: 1201, column: 250, scope: !7072)
!7072 = !DILexicalBlockFile(scope: !7046, file: !910, discriminator: 3)
!7073 = !DILocation(line: 1201, column: 256, scope: !7072)
!7074 = !DILocation(line: 1201, column: 243, scope: !7072)
!7075 = !DILocation(line: 1201, column: 270, scope: !7076)
!7076 = !DILexicalBlockFile(scope: !7077, file: !910, discriminator: 4)
!7077 = distinct !DILexicalBlock(scope: !7046, file: !910, line: 1201, column: 262)
!7078 = !DILocation(line: 1201, column: 291, scope: !7076)
!7079 = !DILocation(line: 1201, column: 297, scope: !7076)
!7080 = !DILocation(line: 1201, column: 294, scope: !7076)
!7081 = !DILocation(line: 1201, column: 304, scope: !7076)
!7082 = !DILocation(line: 1201, column: 287, scope: !7076)
!7083 = !DILocation(line: 1201, column: 282, scope: !7076)
!7084 = !DILocation(line: 1201, column: 280, scope: !7076)
!7085 = !DILocation(line: 1201, column: 322, scope: !7076)
!7086 = !DILocation(line: 1201, column: 329, scope: !7076)
!7087 = !DILocation(line: 1201, column: 313, scope: !7076)
!7088 = !DILocation(line: 1201, column: 243, scope: !7076)
!7089 = distinct !{!7089, !7090}
!7090 = !DILocation(line: 1201, column: 243, scope: !7046)
!7091 = !DILocation(line: 1202, column: 1, scope: !7015)
!7092 = distinct !DISubprogram(name: "put_sbits", scope: !1749, file: !1749, line: 240, type: !7093, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{null, !3067, !954, !952}
!7095 = !DILocalVariable(name: "a", arg: 1, scope: !7096, file: !4296, line: 241, type: !951)
!7096 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !4296, file: !4296, line: 241, type: !7097, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{!951, !951, !951}
!7099 = !DILocation(line: 241, column: 103, scope: !7096, inlinedAt: !7100)
!7100 = distinct !DILocation(line: 244, column: 21, scope: !7092)
!7101 = !DILocalVariable(name: "p", arg: 2, scope: !7096, file: !4296, line: 241, type: !951)
!7102 = !DILocation(line: 241, column: 115, scope: !7096, inlinedAt: !7100)
!7103 = !DILocalVariable(name: "pb", arg: 1, scope: !7092, file: !1749, line: 240, type: !3067)
!7104 = !DILocation(line: 240, column: 45, scope: !7092)
!7105 = !DILocalVariable(name: "n", arg: 2, scope: !7092, file: !1749, line: 240, type: !954)
!7106 = !DILocation(line: 240, column: 53, scope: !7092)
!7107 = !DILocalVariable(name: "value", arg: 3, scope: !7092, file: !1749, line: 240, type: !952)
!7108 = !DILocation(line: 240, column: 64, scope: !7092)
!7109 = !DILocation(line: 244, column: 14, scope: !7092)
!7110 = !DILocation(line: 244, column: 18, scope: !7092)
!7111 = !DILocation(line: 244, column: 37, scope: !7092)
!7112 = !DILocation(line: 244, column: 44, scope: !7092)
!7113 = !DILocation(line: 244, column: 21, scope: !7092)
!7114 = !DILocation(line: 243, column: 12, scope: !7096, inlinedAt: !7100)
!7115 = !DILocation(line: 243, column: 23, scope: !7096, inlinedAt: !7100)
!7116 = !DILocation(line: 243, column: 20, scope: !7096, inlinedAt: !7100)
!7117 = !DILocation(line: 243, column: 26, scope: !7096, inlinedAt: !7100)
!7118 = !DILocation(line: 243, column: 14, scope: !7096, inlinedAt: !7100)
!7119 = !DILocation(line: 244, column: 5, scope: !7120)
!7120 = !DILexicalBlockFile(scope: !7092, file: !1749, discriminator: 1)
!7121 = !DILocation(line: 245, column: 1, scope: !7092)
!7122 = distinct !DISubprogram(name: "set_sr_golomb_flac", scope: !7123, file: !7123, line: 734, type: !7124, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!7123 = !DIFile(filename: "libavcodec/golomb.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7124 = !DISubroutineType(types: !7125)
!7125 = !{null, !3067, !954, !954, !954, !954}
!7126 = !DILocalVariable(name: "pb", arg: 1, scope: !7122, file: !7123, line: 734, type: !3067)
!7127 = !DILocation(line: 734, column: 54, scope: !7122)
!7128 = !DILocalVariable(name: "i", arg: 2, scope: !7122, file: !7123, line: 734, type: !954)
!7129 = !DILocation(line: 734, column: 62, scope: !7122)
!7130 = !DILocalVariable(name: "k", arg: 3, scope: !7122, file: !7123, line: 734, type: !954)
!7131 = !DILocation(line: 734, column: 69, scope: !7122)
!7132 = !DILocalVariable(name: "limit", arg: 4, scope: !7122, file: !7123, line: 735, type: !954)
!7133 = !DILocation(line: 735, column: 43, scope: !7122)
!7134 = !DILocalVariable(name: "esc_len", arg: 5, scope: !7122, file: !7123, line: 735, type: !954)
!7135 = !DILocation(line: 735, column: 54, scope: !7122)
!7136 = !DILocalVariable(name: "v", scope: !7122, file: !7123, line: 737, type: !954)
!7137 = !DILocation(line: 737, column: 9, scope: !7122)
!7138 = !DILocation(line: 739, column: 14, scope: !7122)
!7139 = !DILocation(line: 739, column: 12, scope: !7122)
!7140 = !DILocation(line: 739, column: 16, scope: !7122)
!7141 = !DILocation(line: 739, column: 7, scope: !7122)
!7142 = !DILocation(line: 740, column: 11, scope: !7122)
!7143 = !DILocation(line: 740, column: 13, scope: !7122)
!7144 = !DILocation(line: 740, column: 7, scope: !7122)
!7145 = !DILocation(line: 742, column: 26, scope: !7122)
!7146 = !DILocation(line: 742, column: 30, scope: !7122)
!7147 = !DILocation(line: 742, column: 33, scope: !7122)
!7148 = !DILocation(line: 742, column: 36, scope: !7122)
!7149 = !DILocation(line: 742, column: 43, scope: !7122)
!7150 = !DILocation(line: 742, column: 5, scope: !7122)
!7151 = !DILocation(line: 743, column: 1, scope: !7122)
!7152 = distinct !DISubprogram(name: "set_ur_golomb_jpegls", scope: !7123, file: !7123, line: 691, type: !7124, isLocal: true, isDefinition: true, scopeLine: 693, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1728)
!7153 = !DILocalVariable(name: "pb", arg: 1, scope: !7152, file: !7123, line: 691, type: !3067)
!7154 = !DILocation(line: 691, column: 56, scope: !7152)
!7155 = !DILocalVariable(name: "i", arg: 2, scope: !7152, file: !7123, line: 691, type: !954)
!7156 = !DILocation(line: 691, column: 64, scope: !7152)
!7157 = !DILocalVariable(name: "k", arg: 3, scope: !7152, file: !7123, line: 691, type: !954)
!7158 = !DILocation(line: 691, column: 71, scope: !7152)
!7159 = !DILocalVariable(name: "limit", arg: 4, scope: !7152, file: !7123, line: 692, type: !954)
!7160 = !DILocation(line: 692, column: 45, scope: !7152)
!7161 = !DILocalVariable(name: "esc_len", arg: 5, scope: !7152, file: !7123, line: 692, type: !954)
!7162 = !DILocation(line: 692, column: 56, scope: !7152)
!7163 = !DILocalVariable(name: "e", scope: !7152, file: !7123, line: 694, type: !954)
!7164 = !DILocation(line: 694, column: 9, scope: !7152)
!7165 = !DILocation(line: 698, column: 10, scope: !7152)
!7166 = !DILocation(line: 698, column: 15, scope: !7152)
!7167 = !DILocation(line: 698, column: 12, scope: !7152)
!7168 = !DILocation(line: 698, column: 18, scope: !7152)
!7169 = !DILocation(line: 698, column: 7, scope: !7152)
!7170 = !DILocation(line: 699, column: 9, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7152, file: !7123, line: 699, column: 9)
!7172 = !DILocation(line: 699, column: 13, scope: !7171)
!7173 = !DILocation(line: 699, column: 11, scope: !7171)
!7174 = !DILocation(line: 699, column: 9, scope: !7152)
!7175 = !DILocation(line: 700, column: 9, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7171, file: !7123, line: 699, column: 20)
!7177 = !DILocation(line: 700, column: 16, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !7176, file: !7123, discriminator: 1)
!7179 = !DILocation(line: 700, column: 18, scope: !7178)
!7180 = !DILocation(line: 700, column: 9, scope: !7178)
!7181 = !DILocation(line: 701, column: 22, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7176, file: !7123, line: 700, column: 24)
!7183 = !DILocation(line: 701, column: 13, scope: !7182)
!7184 = !DILocation(line: 702, column: 15, scope: !7182)
!7185 = !DILocation(line: 700, column: 9, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7176, file: !7123, discriminator: 2)
!7187 = distinct !{!7187, !7175}
!7188 = !DILocation(line: 704, column: 18, scope: !7176)
!7189 = !DILocation(line: 704, column: 22, scope: !7176)
!7190 = !DILocation(line: 704, column: 9, scope: !7176)
!7191 = !DILocation(line: 705, column: 13, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7176, file: !7123, line: 705, column: 13)
!7193 = !DILocation(line: 705, column: 13, scope: !7176)
!7194 = !DILocation(line: 706, column: 23, scope: !7192)
!7195 = !DILocation(line: 706, column: 27, scope: !7192)
!7196 = !DILocation(line: 706, column: 30, scope: !7192)
!7197 = !DILocation(line: 706, column: 13, scope: !7192)
!7198 = !DILocation(line: 707, column: 5, scope: !7176)
!7199 = !DILocation(line: 708, column: 9, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7171, file: !7123, line: 707, column: 12)
!7201 = !DILocation(line: 708, column: 16, scope: !7202)
!7202 = !DILexicalBlockFile(scope: !7200, file: !7123, discriminator: 1)
!7203 = !DILocation(line: 708, column: 22, scope: !7202)
!7204 = !DILocation(line: 708, column: 9, scope: !7202)
!7205 = !DILocation(line: 709, column: 22, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7200, file: !7123, line: 708, column: 28)
!7207 = !DILocation(line: 709, column: 13, scope: !7206)
!7208 = !DILocation(line: 710, column: 19, scope: !7206)
!7209 = !DILocation(line: 708, column: 9, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !7200, file: !7123, discriminator: 2)
!7211 = distinct !{!7211, !7199}
!7212 = !DILocation(line: 712, column: 18, scope: !7200)
!7213 = !DILocation(line: 712, column: 22, scope: !7200)
!7214 = !DILocation(line: 712, column: 9, scope: !7200)
!7215 = !DILocation(line: 713, column: 18, scope: !7200)
!7216 = !DILocation(line: 713, column: 22, scope: !7200)
!7217 = !DILocation(line: 713, column: 31, scope: !7200)
!7218 = !DILocation(line: 713, column: 33, scope: !7200)
!7219 = !DILocation(line: 713, column: 9, scope: !7200)
!7220 = !DILocation(line: 715, column: 1, scope: !7152)
