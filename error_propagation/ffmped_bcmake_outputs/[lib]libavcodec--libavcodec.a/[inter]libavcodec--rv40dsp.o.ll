; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--rv40dsp.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--rv40dsp.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RV34DSPContext = type { [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]], [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*], [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]], void (i16*)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i32)*, [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)*], [2 x void (i8*, i64, i32, i32, i32, i32)*], [2 x i32 (i8*, i64, i32, i32, i32, i32*, i32*)*] }
%struct.H264QpelContext = type { [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]] }
%union.unaligned_32 = type { i32 }

@ff_crop_tab = external constant [2304 x i8], align 16
@rv40_bias = internal constant [4 x [4 x i32]] [[4 x i32] [i32 0, i32 16, i32 32, i32 16], [4 x i32] [i32 32, i32 28, i32 32, i32 28], [4 x i32] [i32 0, i32 32, i32 16, i32 32], [4 x i32] [i32 32, i32 28, i32 32, i32 28]], align 16
@rv40_dither_l = internal constant [16 x i8] c"@P `0P@0P@P0` P@", align 16
@rv40_dither_r = internal constant [16 x i8] c"@0` P00@@@P0 `0@", align 16

; Function Attrs: cold nounwind optsize uwtable
define void @ff_rv40dsp_init(%struct.RV34DSPContext* %c) #0 !dbg !33 {
entry:
  %c.addr = alloca %struct.RV34DSPContext*, align 8
  %qpel = alloca %struct.H264QpelContext, align 8
  store %struct.RV34DSPContext* %c, %struct.RV34DSPContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RV34DSPContext** %c.addr, metadata !112, metadata !113), !dbg !114
  call void @llvm.dbg.declare(metadata %struct.H264QpelContext* %qpel, metadata !115, metadata !113), !dbg !122
  %0 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !123
  call void @ff_rv34dsp_init(%struct.RV34DSPContext* %0), !dbg !124
  call void @ff_h264qpel_init(%struct.H264QpelContext* %qpel, i32 8), !dbg !125
  %put_h264_qpel_pixels_tab = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !126
  %arrayidx = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab, i64 0, i64 0, !dbg !127
  %arrayidx1 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx, i64 0, i64 0, !dbg !127
  %1 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx1, align 8, !dbg !127
  %2 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !128
  %put_pixels_tab = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %2, i32 0, i32 0, !dbg !129
  %arrayidx2 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab, i64 0, i64 0, !dbg !128
  %arrayidx3 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx2, i64 0, i64 0, !dbg !128
  store void (i8*, i8*, i64)* %1, void (i8*, i8*, i64)** %arrayidx3, align 8, !dbg !130
  %3 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !131
  %put_pixels_tab4 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %3, i32 0, i32 0, !dbg !132
  %arrayidx5 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab4, i64 0, i64 0, !dbg !131
  %arrayidx6 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx5, i64 0, i64 1, !dbg !131
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc10_c, void (i8*, i8*, i64)** %arrayidx6, align 8, !dbg !133
  %put_h264_qpel_pixels_tab7 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !134
  %arrayidx8 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab7, i64 0, i64 0, !dbg !135
  %arrayidx9 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx8, i64 0, i64 2, !dbg !135
  %4 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx9, align 8, !dbg !135
  %5 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !136
  %put_pixels_tab10 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %5, i32 0, i32 0, !dbg !137
  %arrayidx11 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab10, i64 0, i64 0, !dbg !136
  %arrayidx12 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx11, i64 0, i64 2, !dbg !136
  store void (i8*, i8*, i64)* %4, void (i8*, i8*, i64)** %arrayidx12, align 8, !dbg !138
  %6 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !139
  %put_pixels_tab13 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %6, i32 0, i32 0, !dbg !140
  %arrayidx14 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab13, i64 0, i64 0, !dbg !139
  %arrayidx15 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx14, i64 0, i64 3, !dbg !139
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc30_c, void (i8*, i8*, i64)** %arrayidx15, align 8, !dbg !141
  %7 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !142
  %put_pixels_tab16 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %7, i32 0, i32 0, !dbg !143
  %arrayidx17 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab16, i64 0, i64 0, !dbg !142
  %arrayidx18 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx17, i64 0, i64 4, !dbg !142
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc01_c, void (i8*, i8*, i64)** %arrayidx18, align 8, !dbg !144
  %8 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !145
  %put_pixels_tab19 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %8, i32 0, i32 0, !dbg !146
  %arrayidx20 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab19, i64 0, i64 0, !dbg !145
  %arrayidx21 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx20, i64 0, i64 5, !dbg !145
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc11_c, void (i8*, i8*, i64)** %arrayidx21, align 8, !dbg !147
  %9 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !148
  %put_pixels_tab22 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %9, i32 0, i32 0, !dbg !149
  %arrayidx23 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab22, i64 0, i64 0, !dbg !148
  %arrayidx24 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx23, i64 0, i64 6, !dbg !148
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc21_c, void (i8*, i8*, i64)** %arrayidx24, align 8, !dbg !150
  %10 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !151
  %put_pixels_tab25 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %10, i32 0, i32 0, !dbg !152
  %arrayidx26 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab25, i64 0, i64 0, !dbg !151
  %arrayidx27 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx26, i64 0, i64 7, !dbg !151
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc31_c, void (i8*, i8*, i64)** %arrayidx27, align 8, !dbg !153
  %put_h264_qpel_pixels_tab28 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !154
  %arrayidx29 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab28, i64 0, i64 0, !dbg !155
  %arrayidx30 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx29, i64 0, i64 8, !dbg !155
  %11 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx30, align 8, !dbg !155
  %12 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !156
  %put_pixels_tab31 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %12, i32 0, i32 0, !dbg !157
  %arrayidx32 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab31, i64 0, i64 0, !dbg !156
  %arrayidx33 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx32, i64 0, i64 8, !dbg !156
  store void (i8*, i8*, i64)* %11, void (i8*, i8*, i64)** %arrayidx33, align 8, !dbg !158
  %13 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !159
  %put_pixels_tab34 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %13, i32 0, i32 0, !dbg !160
  %arrayidx35 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab34, i64 0, i64 0, !dbg !159
  %arrayidx36 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx35, i64 0, i64 9, !dbg !159
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc12_c, void (i8*, i8*, i64)** %arrayidx36, align 8, !dbg !161
  %14 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !162
  %put_pixels_tab37 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %14, i32 0, i32 0, !dbg !163
  %arrayidx38 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab37, i64 0, i64 0, !dbg !162
  %arrayidx39 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx38, i64 0, i64 10, !dbg !162
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc22_c, void (i8*, i8*, i64)** %arrayidx39, align 8, !dbg !164
  %15 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !165
  %put_pixels_tab40 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %15, i32 0, i32 0, !dbg !166
  %arrayidx41 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab40, i64 0, i64 0, !dbg !165
  %arrayidx42 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx41, i64 0, i64 11, !dbg !165
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc32_c, void (i8*, i8*, i64)** %arrayidx42, align 8, !dbg !167
  %16 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !168
  %put_pixels_tab43 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %16, i32 0, i32 0, !dbg !169
  %arrayidx44 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab43, i64 0, i64 0, !dbg !168
  %arrayidx45 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx44, i64 0, i64 12, !dbg !168
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc03_c, void (i8*, i8*, i64)** %arrayidx45, align 8, !dbg !170
  %17 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !171
  %put_pixels_tab46 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %17, i32 0, i32 0, !dbg !172
  %arrayidx47 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab46, i64 0, i64 0, !dbg !171
  %arrayidx48 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx47, i64 0, i64 13, !dbg !171
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc13_c, void (i8*, i8*, i64)** %arrayidx48, align 8, !dbg !173
  %18 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !174
  %put_pixels_tab49 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %18, i32 0, i32 0, !dbg !175
  %arrayidx50 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab49, i64 0, i64 0, !dbg !174
  %arrayidx51 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx50, i64 0, i64 14, !dbg !174
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc23_c, void (i8*, i8*, i64)** %arrayidx51, align 8, !dbg !176
  %19 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !177
  %put_pixels_tab52 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %19, i32 0, i32 0, !dbg !178
  %arrayidx53 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab52, i64 0, i64 0, !dbg !177
  %arrayidx54 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx53, i64 0, i64 15, !dbg !177
  store void (i8*, i8*, i64)* @put_rv40_qpel16_mc33_c, void (i8*, i8*, i64)** %arrayidx54, align 8, !dbg !179
  %avg_h264_qpel_pixels_tab = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !180
  %arrayidx55 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab, i64 0, i64 0, !dbg !181
  %arrayidx56 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx55, i64 0, i64 0, !dbg !181
  %20 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx56, align 8, !dbg !181
  %21 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !182
  %avg_pixels_tab = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %21, i32 0, i32 1, !dbg !183
  %arrayidx57 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab, i64 0, i64 0, !dbg !182
  %arrayidx58 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx57, i64 0, i64 0, !dbg !182
  store void (i8*, i8*, i64)* %20, void (i8*, i8*, i64)** %arrayidx58, align 8, !dbg !184
  %22 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !185
  %avg_pixels_tab59 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %22, i32 0, i32 1, !dbg !186
  %arrayidx60 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab59, i64 0, i64 0, !dbg !185
  %arrayidx61 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx60, i64 0, i64 1, !dbg !185
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc10_c, void (i8*, i8*, i64)** %arrayidx61, align 8, !dbg !187
  %avg_h264_qpel_pixels_tab62 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !188
  %arrayidx63 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab62, i64 0, i64 0, !dbg !189
  %arrayidx64 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx63, i64 0, i64 2, !dbg !189
  %23 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx64, align 8, !dbg !189
  %24 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !190
  %avg_pixels_tab65 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %24, i32 0, i32 1, !dbg !191
  %arrayidx66 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab65, i64 0, i64 0, !dbg !190
  %arrayidx67 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx66, i64 0, i64 2, !dbg !190
  store void (i8*, i8*, i64)* %23, void (i8*, i8*, i64)** %arrayidx67, align 8, !dbg !192
  %25 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !193
  %avg_pixels_tab68 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %25, i32 0, i32 1, !dbg !194
  %arrayidx69 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab68, i64 0, i64 0, !dbg !193
  %arrayidx70 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx69, i64 0, i64 3, !dbg !193
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc30_c, void (i8*, i8*, i64)** %arrayidx70, align 8, !dbg !195
  %26 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !196
  %avg_pixels_tab71 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %26, i32 0, i32 1, !dbg !197
  %arrayidx72 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab71, i64 0, i64 0, !dbg !196
  %arrayidx73 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx72, i64 0, i64 4, !dbg !196
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc01_c, void (i8*, i8*, i64)** %arrayidx73, align 8, !dbg !198
  %27 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !199
  %avg_pixels_tab74 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %27, i32 0, i32 1, !dbg !200
  %arrayidx75 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab74, i64 0, i64 0, !dbg !199
  %arrayidx76 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx75, i64 0, i64 5, !dbg !199
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc11_c, void (i8*, i8*, i64)** %arrayidx76, align 8, !dbg !201
  %28 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !202
  %avg_pixels_tab77 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %28, i32 0, i32 1, !dbg !203
  %arrayidx78 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab77, i64 0, i64 0, !dbg !202
  %arrayidx79 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx78, i64 0, i64 6, !dbg !202
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc21_c, void (i8*, i8*, i64)** %arrayidx79, align 8, !dbg !204
  %29 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !205
  %avg_pixels_tab80 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %29, i32 0, i32 1, !dbg !206
  %arrayidx81 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab80, i64 0, i64 0, !dbg !205
  %arrayidx82 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx81, i64 0, i64 7, !dbg !205
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc31_c, void (i8*, i8*, i64)** %arrayidx82, align 8, !dbg !207
  %avg_h264_qpel_pixels_tab83 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !208
  %arrayidx84 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab83, i64 0, i64 0, !dbg !209
  %arrayidx85 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx84, i64 0, i64 8, !dbg !209
  %30 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx85, align 8, !dbg !209
  %31 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !210
  %avg_pixels_tab86 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %31, i32 0, i32 1, !dbg !211
  %arrayidx87 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab86, i64 0, i64 0, !dbg !210
  %arrayidx88 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx87, i64 0, i64 8, !dbg !210
  store void (i8*, i8*, i64)* %30, void (i8*, i8*, i64)** %arrayidx88, align 8, !dbg !212
  %32 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !213
  %avg_pixels_tab89 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %32, i32 0, i32 1, !dbg !214
  %arrayidx90 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab89, i64 0, i64 0, !dbg !213
  %arrayidx91 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx90, i64 0, i64 9, !dbg !213
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc12_c, void (i8*, i8*, i64)** %arrayidx91, align 8, !dbg !215
  %33 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !216
  %avg_pixels_tab92 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %33, i32 0, i32 1, !dbg !217
  %arrayidx93 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab92, i64 0, i64 0, !dbg !216
  %arrayidx94 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx93, i64 0, i64 10, !dbg !216
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc22_c, void (i8*, i8*, i64)** %arrayidx94, align 8, !dbg !218
  %34 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !219
  %avg_pixels_tab95 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %34, i32 0, i32 1, !dbg !220
  %arrayidx96 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab95, i64 0, i64 0, !dbg !219
  %arrayidx97 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx96, i64 0, i64 11, !dbg !219
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc32_c, void (i8*, i8*, i64)** %arrayidx97, align 8, !dbg !221
  %35 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !222
  %avg_pixels_tab98 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %35, i32 0, i32 1, !dbg !223
  %arrayidx99 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab98, i64 0, i64 0, !dbg !222
  %arrayidx100 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx99, i64 0, i64 12, !dbg !222
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc03_c, void (i8*, i8*, i64)** %arrayidx100, align 8, !dbg !224
  %36 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !225
  %avg_pixels_tab101 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %36, i32 0, i32 1, !dbg !226
  %arrayidx102 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab101, i64 0, i64 0, !dbg !225
  %arrayidx103 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx102, i64 0, i64 13, !dbg !225
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc13_c, void (i8*, i8*, i64)** %arrayidx103, align 8, !dbg !227
  %37 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !228
  %avg_pixels_tab104 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %37, i32 0, i32 1, !dbg !229
  %arrayidx105 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab104, i64 0, i64 0, !dbg !228
  %arrayidx106 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx105, i64 0, i64 14, !dbg !228
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc23_c, void (i8*, i8*, i64)** %arrayidx106, align 8, !dbg !230
  %38 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !231
  %avg_pixels_tab107 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %38, i32 0, i32 1, !dbg !232
  %arrayidx108 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab107, i64 0, i64 0, !dbg !231
  %arrayidx109 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx108, i64 0, i64 15, !dbg !231
  store void (i8*, i8*, i64)* @avg_rv40_qpel16_mc33_c, void (i8*, i8*, i64)** %arrayidx109, align 8, !dbg !233
  %put_h264_qpel_pixels_tab110 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !234
  %arrayidx111 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab110, i64 0, i64 1, !dbg !235
  %arrayidx112 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx111, i64 0, i64 0, !dbg !235
  %39 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx112, align 8, !dbg !235
  %40 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !236
  %put_pixels_tab113 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %40, i32 0, i32 0, !dbg !237
  %arrayidx114 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab113, i64 0, i64 1, !dbg !236
  %arrayidx115 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx114, i64 0, i64 0, !dbg !236
  store void (i8*, i8*, i64)* %39, void (i8*, i8*, i64)** %arrayidx115, align 8, !dbg !238
  %41 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !239
  %put_pixels_tab116 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %41, i32 0, i32 0, !dbg !240
  %arrayidx117 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab116, i64 0, i64 1, !dbg !239
  %arrayidx118 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx117, i64 0, i64 1, !dbg !239
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc10_c, void (i8*, i8*, i64)** %arrayidx118, align 8, !dbg !241
  %put_h264_qpel_pixels_tab119 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !242
  %arrayidx120 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab119, i64 0, i64 1, !dbg !243
  %arrayidx121 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx120, i64 0, i64 2, !dbg !243
  %42 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx121, align 8, !dbg !243
  %43 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !244
  %put_pixels_tab122 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %43, i32 0, i32 0, !dbg !245
  %arrayidx123 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab122, i64 0, i64 1, !dbg !244
  %arrayidx124 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx123, i64 0, i64 2, !dbg !244
  store void (i8*, i8*, i64)* %42, void (i8*, i8*, i64)** %arrayidx124, align 8, !dbg !246
  %44 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !247
  %put_pixels_tab125 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %44, i32 0, i32 0, !dbg !248
  %arrayidx126 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab125, i64 0, i64 1, !dbg !247
  %arrayidx127 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx126, i64 0, i64 3, !dbg !247
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc30_c, void (i8*, i8*, i64)** %arrayidx127, align 8, !dbg !249
  %45 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !250
  %put_pixels_tab128 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %45, i32 0, i32 0, !dbg !251
  %arrayidx129 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab128, i64 0, i64 1, !dbg !250
  %arrayidx130 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx129, i64 0, i64 4, !dbg !250
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc01_c, void (i8*, i8*, i64)** %arrayidx130, align 8, !dbg !252
  %46 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !253
  %put_pixels_tab131 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %46, i32 0, i32 0, !dbg !254
  %arrayidx132 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab131, i64 0, i64 1, !dbg !253
  %arrayidx133 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx132, i64 0, i64 5, !dbg !253
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc11_c, void (i8*, i8*, i64)** %arrayidx133, align 8, !dbg !255
  %47 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !256
  %put_pixels_tab134 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %47, i32 0, i32 0, !dbg !257
  %arrayidx135 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab134, i64 0, i64 1, !dbg !256
  %arrayidx136 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx135, i64 0, i64 6, !dbg !256
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc21_c, void (i8*, i8*, i64)** %arrayidx136, align 8, !dbg !258
  %48 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !259
  %put_pixels_tab137 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %48, i32 0, i32 0, !dbg !260
  %arrayidx138 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab137, i64 0, i64 1, !dbg !259
  %arrayidx139 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx138, i64 0, i64 7, !dbg !259
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc31_c, void (i8*, i8*, i64)** %arrayidx139, align 8, !dbg !261
  %put_h264_qpel_pixels_tab140 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 0, !dbg !262
  %arrayidx141 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_h264_qpel_pixels_tab140, i64 0, i64 1, !dbg !263
  %arrayidx142 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx141, i64 0, i64 8, !dbg !263
  %49 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx142, align 8, !dbg !263
  %50 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !264
  %put_pixels_tab143 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %50, i32 0, i32 0, !dbg !265
  %arrayidx144 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab143, i64 0, i64 1, !dbg !264
  %arrayidx145 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx144, i64 0, i64 8, !dbg !264
  store void (i8*, i8*, i64)* %49, void (i8*, i8*, i64)** %arrayidx145, align 8, !dbg !266
  %51 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !267
  %put_pixels_tab146 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %51, i32 0, i32 0, !dbg !268
  %arrayidx147 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab146, i64 0, i64 1, !dbg !267
  %arrayidx148 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx147, i64 0, i64 9, !dbg !267
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc12_c, void (i8*, i8*, i64)** %arrayidx148, align 8, !dbg !269
  %52 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !270
  %put_pixels_tab149 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %52, i32 0, i32 0, !dbg !271
  %arrayidx150 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab149, i64 0, i64 1, !dbg !270
  %arrayidx151 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx150, i64 0, i64 10, !dbg !270
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc22_c, void (i8*, i8*, i64)** %arrayidx151, align 8, !dbg !272
  %53 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !273
  %put_pixels_tab152 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %53, i32 0, i32 0, !dbg !274
  %arrayidx153 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab152, i64 0, i64 1, !dbg !273
  %arrayidx154 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx153, i64 0, i64 11, !dbg !273
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc32_c, void (i8*, i8*, i64)** %arrayidx154, align 8, !dbg !275
  %54 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !276
  %put_pixels_tab155 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %54, i32 0, i32 0, !dbg !277
  %arrayidx156 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab155, i64 0, i64 1, !dbg !276
  %arrayidx157 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx156, i64 0, i64 12, !dbg !276
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc03_c, void (i8*, i8*, i64)** %arrayidx157, align 8, !dbg !278
  %55 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !279
  %put_pixels_tab158 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %55, i32 0, i32 0, !dbg !280
  %arrayidx159 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab158, i64 0, i64 1, !dbg !279
  %arrayidx160 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx159, i64 0, i64 13, !dbg !279
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc13_c, void (i8*, i8*, i64)** %arrayidx160, align 8, !dbg !281
  %56 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !282
  %put_pixels_tab161 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %56, i32 0, i32 0, !dbg !283
  %arrayidx162 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab161, i64 0, i64 1, !dbg !282
  %arrayidx163 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx162, i64 0, i64 14, !dbg !282
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc23_c, void (i8*, i8*, i64)** %arrayidx163, align 8, !dbg !284
  %57 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !285
  %put_pixels_tab164 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %57, i32 0, i32 0, !dbg !286
  %arrayidx165 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %put_pixels_tab164, i64 0, i64 1, !dbg !285
  %arrayidx166 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx165, i64 0, i64 15, !dbg !285
  store void (i8*, i8*, i64)* @put_rv40_qpel8_mc33_c, void (i8*, i8*, i64)** %arrayidx166, align 8, !dbg !287
  %avg_h264_qpel_pixels_tab167 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !288
  %arrayidx168 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab167, i64 0, i64 1, !dbg !289
  %arrayidx169 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx168, i64 0, i64 0, !dbg !289
  %58 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx169, align 8, !dbg !289
  %59 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !290
  %avg_pixels_tab170 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %59, i32 0, i32 1, !dbg !291
  %arrayidx171 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab170, i64 0, i64 1, !dbg !290
  %arrayidx172 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx171, i64 0, i64 0, !dbg !290
  store void (i8*, i8*, i64)* %58, void (i8*, i8*, i64)** %arrayidx172, align 8, !dbg !292
  %60 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !293
  %avg_pixels_tab173 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %60, i32 0, i32 1, !dbg !294
  %arrayidx174 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab173, i64 0, i64 1, !dbg !293
  %arrayidx175 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx174, i64 0, i64 1, !dbg !293
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc10_c, void (i8*, i8*, i64)** %arrayidx175, align 8, !dbg !295
  %avg_h264_qpel_pixels_tab176 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !296
  %arrayidx177 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab176, i64 0, i64 1, !dbg !297
  %arrayidx178 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx177, i64 0, i64 2, !dbg !297
  %61 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx178, align 8, !dbg !297
  %62 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !298
  %avg_pixels_tab179 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %62, i32 0, i32 1, !dbg !299
  %arrayidx180 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab179, i64 0, i64 1, !dbg !298
  %arrayidx181 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx180, i64 0, i64 2, !dbg !298
  store void (i8*, i8*, i64)* %61, void (i8*, i8*, i64)** %arrayidx181, align 8, !dbg !300
  %63 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !301
  %avg_pixels_tab182 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %63, i32 0, i32 1, !dbg !302
  %arrayidx183 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab182, i64 0, i64 1, !dbg !301
  %arrayidx184 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx183, i64 0, i64 3, !dbg !301
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc30_c, void (i8*, i8*, i64)** %arrayidx184, align 8, !dbg !303
  %64 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !304
  %avg_pixels_tab185 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %64, i32 0, i32 1, !dbg !305
  %arrayidx186 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab185, i64 0, i64 1, !dbg !304
  %arrayidx187 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx186, i64 0, i64 4, !dbg !304
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc01_c, void (i8*, i8*, i64)** %arrayidx187, align 8, !dbg !306
  %65 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !307
  %avg_pixels_tab188 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %65, i32 0, i32 1, !dbg !308
  %arrayidx189 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab188, i64 0, i64 1, !dbg !307
  %arrayidx190 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx189, i64 0, i64 5, !dbg !307
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc11_c, void (i8*, i8*, i64)** %arrayidx190, align 8, !dbg !309
  %66 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !310
  %avg_pixels_tab191 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %66, i32 0, i32 1, !dbg !311
  %arrayidx192 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab191, i64 0, i64 1, !dbg !310
  %arrayidx193 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx192, i64 0, i64 6, !dbg !310
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc21_c, void (i8*, i8*, i64)** %arrayidx193, align 8, !dbg !312
  %67 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !313
  %avg_pixels_tab194 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %67, i32 0, i32 1, !dbg !314
  %arrayidx195 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab194, i64 0, i64 1, !dbg !313
  %arrayidx196 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx195, i64 0, i64 7, !dbg !313
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc31_c, void (i8*, i8*, i64)** %arrayidx196, align 8, !dbg !315
  %avg_h264_qpel_pixels_tab197 = getelementptr inbounds %struct.H264QpelContext, %struct.H264QpelContext* %qpel, i32 0, i32 1, !dbg !316
  %arrayidx198 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_h264_qpel_pixels_tab197, i64 0, i64 1, !dbg !317
  %arrayidx199 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx198, i64 0, i64 8, !dbg !317
  %68 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx199, align 8, !dbg !317
  %69 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !318
  %avg_pixels_tab200 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %69, i32 0, i32 1, !dbg !319
  %arrayidx201 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab200, i64 0, i64 1, !dbg !318
  %arrayidx202 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx201, i64 0, i64 8, !dbg !318
  store void (i8*, i8*, i64)* %68, void (i8*, i8*, i64)** %arrayidx202, align 8, !dbg !320
  %70 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !321
  %avg_pixels_tab203 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %70, i32 0, i32 1, !dbg !322
  %arrayidx204 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab203, i64 0, i64 1, !dbg !321
  %arrayidx205 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx204, i64 0, i64 9, !dbg !321
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc12_c, void (i8*, i8*, i64)** %arrayidx205, align 8, !dbg !323
  %71 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !324
  %avg_pixels_tab206 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %71, i32 0, i32 1, !dbg !325
  %arrayidx207 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab206, i64 0, i64 1, !dbg !324
  %arrayidx208 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx207, i64 0, i64 10, !dbg !324
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc22_c, void (i8*, i8*, i64)** %arrayidx208, align 8, !dbg !326
  %72 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !327
  %avg_pixels_tab209 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %72, i32 0, i32 1, !dbg !328
  %arrayidx210 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab209, i64 0, i64 1, !dbg !327
  %arrayidx211 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx210, i64 0, i64 11, !dbg !327
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc32_c, void (i8*, i8*, i64)** %arrayidx211, align 8, !dbg !329
  %73 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !330
  %avg_pixels_tab212 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %73, i32 0, i32 1, !dbg !331
  %arrayidx213 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab212, i64 0, i64 1, !dbg !330
  %arrayidx214 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx213, i64 0, i64 12, !dbg !330
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc03_c, void (i8*, i8*, i64)** %arrayidx214, align 8, !dbg !332
  %74 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !333
  %avg_pixels_tab215 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %74, i32 0, i32 1, !dbg !334
  %arrayidx216 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab215, i64 0, i64 1, !dbg !333
  %arrayidx217 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx216, i64 0, i64 13, !dbg !333
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc13_c, void (i8*, i8*, i64)** %arrayidx217, align 8, !dbg !335
  %75 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !336
  %avg_pixels_tab218 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %75, i32 0, i32 1, !dbg !337
  %arrayidx219 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab218, i64 0, i64 1, !dbg !336
  %arrayidx220 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx219, i64 0, i64 14, !dbg !336
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc23_c, void (i8*, i8*, i64)** %arrayidx220, align 8, !dbg !338
  %76 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !339
  %avg_pixels_tab221 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %76, i32 0, i32 1, !dbg !340
  %arrayidx222 = getelementptr inbounds [4 x [16 x void (i8*, i8*, i64)*]], [4 x [16 x void (i8*, i8*, i64)*]]* %avg_pixels_tab221, i64 0, i64 1, !dbg !339
  %arrayidx223 = getelementptr inbounds [16 x void (i8*, i8*, i64)*], [16 x void (i8*, i8*, i64)*]* %arrayidx222, i64 0, i64 15, !dbg !339
  store void (i8*, i8*, i64)* @avg_rv40_qpel8_mc33_c, void (i8*, i8*, i64)** %arrayidx223, align 8, !dbg !341
  %77 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !342
  %put_chroma_pixels_tab = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %77, i32 0, i32 2, !dbg !343
  %arrayidx224 = getelementptr inbounds [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*]* %put_chroma_pixels_tab, i64 0, i64 0, !dbg !342
  store void (i8*, i8*, i64, i32, i32, i32)* @put_rv40_chroma_mc8_c, void (i8*, i8*, i64, i32, i32, i32)** %arrayidx224, align 8, !dbg !344
  %78 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !345
  %put_chroma_pixels_tab225 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %78, i32 0, i32 2, !dbg !346
  %arrayidx226 = getelementptr inbounds [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*]* %put_chroma_pixels_tab225, i64 0, i64 1, !dbg !345
  store void (i8*, i8*, i64, i32, i32, i32)* @put_rv40_chroma_mc4_c, void (i8*, i8*, i64, i32, i32, i32)** %arrayidx226, align 8, !dbg !347
  %79 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !348
  %avg_chroma_pixels_tab = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %79, i32 0, i32 3, !dbg !349
  %arrayidx227 = getelementptr inbounds [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*]* %avg_chroma_pixels_tab, i64 0, i64 0, !dbg !348
  store void (i8*, i8*, i64, i32, i32, i32)* @avg_rv40_chroma_mc8_c, void (i8*, i8*, i64, i32, i32, i32)** %arrayidx227, align 8, !dbg !350
  %80 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !351
  %avg_chroma_pixels_tab228 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %80, i32 0, i32 3, !dbg !352
  %arrayidx229 = getelementptr inbounds [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*]* %avg_chroma_pixels_tab228, i64 0, i64 1, !dbg !351
  store void (i8*, i8*, i64, i32, i32, i32)* @avg_rv40_chroma_mc4_c, void (i8*, i8*, i64, i32, i32, i32)** %arrayidx229, align 8, !dbg !353
  %81 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !354
  %rv40_weight_pixels_tab = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %81, i32 0, i32 4, !dbg !355
  %arrayidx230 = getelementptr inbounds [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]], [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]]* %rv40_weight_pixels_tab, i64 0, i64 0, !dbg !354
  %arrayidx231 = getelementptr inbounds [2 x void (i8*, i8*, i8*, i32, i32, i64)*], [2 x void (i8*, i8*, i8*, i32, i32, i64)*]* %arrayidx230, i64 0, i64 0, !dbg !354
  store void (i8*, i8*, i8*, i32, i32, i64)* @rv40_weight_func_rnd_16, void (i8*, i8*, i8*, i32, i32, i64)** %arrayidx231, align 8, !dbg !356
  %82 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !357
  %rv40_weight_pixels_tab232 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %82, i32 0, i32 4, !dbg !358
  %arrayidx233 = getelementptr inbounds [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]], [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]]* %rv40_weight_pixels_tab232, i64 0, i64 0, !dbg !357
  %arrayidx234 = getelementptr inbounds [2 x void (i8*, i8*, i8*, i32, i32, i64)*], [2 x void (i8*, i8*, i8*, i32, i32, i64)*]* %arrayidx233, i64 0, i64 1, !dbg !357
  store void (i8*, i8*, i8*, i32, i32, i64)* @rv40_weight_func_rnd_8, void (i8*, i8*, i8*, i32, i32, i64)** %arrayidx234, align 8, !dbg !359
  %83 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !360
  %rv40_weight_pixels_tab235 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %83, i32 0, i32 4, !dbg !361
  %arrayidx236 = getelementptr inbounds [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]], [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]]* %rv40_weight_pixels_tab235, i64 0, i64 1, !dbg !360
  %arrayidx237 = getelementptr inbounds [2 x void (i8*, i8*, i8*, i32, i32, i64)*], [2 x void (i8*, i8*, i8*, i32, i32, i64)*]* %arrayidx236, i64 0, i64 0, !dbg !360
  store void (i8*, i8*, i8*, i32, i32, i64)* @rv40_weight_func_nornd_16, void (i8*, i8*, i8*, i32, i32, i64)** %arrayidx237, align 8, !dbg !362
  %84 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !363
  %rv40_weight_pixels_tab238 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %84, i32 0, i32 4, !dbg !364
  %arrayidx239 = getelementptr inbounds [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]], [2 x [2 x void (i8*, i8*, i8*, i32, i32, i64)*]]* %rv40_weight_pixels_tab238, i64 0, i64 1, !dbg !363
  %arrayidx240 = getelementptr inbounds [2 x void (i8*, i8*, i8*, i32, i32, i64)*], [2 x void (i8*, i8*, i8*, i32, i32, i64)*]* %arrayidx239, i64 0, i64 1, !dbg !363
  store void (i8*, i8*, i8*, i32, i32, i64)* @rv40_weight_func_nornd_8, void (i8*, i8*, i8*, i32, i32, i64)** %arrayidx240, align 8, !dbg !365
  %85 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !366
  %rv40_weak_loop_filter = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %85, i32 0, i32 9, !dbg !367
  %arrayidx241 = getelementptr inbounds [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)*], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)*]* %rv40_weak_loop_filter, i64 0, i64 0, !dbg !366
  store void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)* @rv40_h_weak_loop_filter, void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)** %arrayidx241, align 8, !dbg !368
  %86 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !369
  %rv40_weak_loop_filter242 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %86, i32 0, i32 9, !dbg !370
  %arrayidx243 = getelementptr inbounds [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)*], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)*]* %rv40_weak_loop_filter242, i64 0, i64 1, !dbg !369
  store void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)* @rv40_v_weak_loop_filter, void (i8*, i64, i32, i32, i32, i32, i32, i32, i32)** %arrayidx243, align 8, !dbg !371
  %87 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !372
  %rv40_strong_loop_filter = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %87, i32 0, i32 10, !dbg !373
  %arrayidx244 = getelementptr inbounds [2 x void (i8*, i64, i32, i32, i32, i32)*], [2 x void (i8*, i64, i32, i32, i32, i32)*]* %rv40_strong_loop_filter, i64 0, i64 0, !dbg !372
  store void (i8*, i64, i32, i32, i32, i32)* @rv40_h_strong_loop_filter, void (i8*, i64, i32, i32, i32, i32)** %arrayidx244, align 8, !dbg !374
  %88 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !375
  %rv40_strong_loop_filter245 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %88, i32 0, i32 10, !dbg !376
  %arrayidx246 = getelementptr inbounds [2 x void (i8*, i64, i32, i32, i32, i32)*], [2 x void (i8*, i64, i32, i32, i32, i32)*]* %rv40_strong_loop_filter245, i64 0, i64 1, !dbg !375
  store void (i8*, i64, i32, i32, i32, i32)* @rv40_v_strong_loop_filter, void (i8*, i64, i32, i32, i32, i32)** %arrayidx246, align 8, !dbg !377
  %89 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !378
  %rv40_loop_filter_strength = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %89, i32 0, i32 11, !dbg !379
  %arrayidx247 = getelementptr inbounds [2 x i32 (i8*, i64, i32, i32, i32, i32*, i32*)*], [2 x i32 (i8*, i64, i32, i32, i32, i32*, i32*)*]* %rv40_loop_filter_strength, i64 0, i64 0, !dbg !378
  store i32 (i8*, i64, i32, i32, i32, i32*, i32*)* @rv40_h_loop_filter_strength, i32 (i8*, i64, i32, i32, i32, i32*, i32*)** %arrayidx247, align 8, !dbg !380
  %90 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !381
  %rv40_loop_filter_strength248 = getelementptr inbounds %struct.RV34DSPContext, %struct.RV34DSPContext* %90, i32 0, i32 11, !dbg !382
  %arrayidx249 = getelementptr inbounds [2 x i32 (i8*, i64, i32, i32, i32, i32*, i32*)*], [2 x i32 (i8*, i64, i32, i32, i32, i32*, i32*)*]* %rv40_loop_filter_strength248, i64 0, i64 1, !dbg !381
  store i32 (i8*, i64, i32, i32, i32, i32*, i32*)* @rv40_v_loop_filter_strength, i32 (i8*, i64, i32, i32, i32, i32*, i32*)** %arrayidx249, align 8, !dbg !383
  %91 = load %struct.RV34DSPContext*, %struct.RV34DSPContext** %c.addr, align 8, !dbg !384
  call void @ff_rv40dsp_init_x86(%struct.RV34DSPContext* %91), !dbg !386
  ret void, !dbg !387
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @ff_rv34dsp_init(%struct.RV34DSPContext*) #2

declare void @ff_h264qpel_init(%struct.H264QpelContext*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc10_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !388 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !389, metadata !113), !dbg !390
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !391, metadata !113), !dbg !392
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !393, metadata !113), !dbg !394
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !395
  %1 = load i8*, i8** %src.addr, align 8, !dbg !396
  %2 = load i64, i64* %stride.addr, align 8, !dbg !397
  %conv = trunc i64 %2 to i32, !dbg !397
  %3 = load i64, i64* %stride.addr, align 8, !dbg !398
  %conv1 = trunc i64 %3 to i32, !dbg !398
  call void @put_rv40_qpel16_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 52, i32 20, i32 6), !dbg !399
  ret void, !dbg !400
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc30_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !401 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !402, metadata !113), !dbg !403
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !404, metadata !113), !dbg !405
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !406, metadata !113), !dbg !407
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !408
  %1 = load i8*, i8** %src.addr, align 8, !dbg !409
  %2 = load i64, i64* %stride.addr, align 8, !dbg !410
  %conv = trunc i64 %2 to i32, !dbg !410
  %3 = load i64, i64* %stride.addr, align 8, !dbg !411
  %conv1 = trunc i64 %3 to i32, !dbg !411
  call void @put_rv40_qpel16_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 20, i32 52, i32 6), !dbg !412
  ret void, !dbg !413
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc01_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !414 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !415, metadata !113), !dbg !416
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !417, metadata !113), !dbg !418
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !419, metadata !113), !dbg !420
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !421
  %1 = load i8*, i8** %src.addr, align 8, !dbg !422
  %2 = load i64, i64* %stride.addr, align 8, !dbg !423
  %conv = trunc i64 %2 to i32, !dbg !423
  %3 = load i64, i64* %stride.addr, align 8, !dbg !424
  %conv1 = trunc i64 %3 to i32, !dbg !424
  call void @put_rv40_qpel16_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 52, i32 20, i32 6), !dbg !425
  ret void, !dbg !426
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc11_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !427 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !428, metadata !113), !dbg !429
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !430, metadata !113), !dbg !431
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !432, metadata !113), !dbg !433
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !434, metadata !113), !dbg !438
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !439, metadata !113), !dbg !441
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !442
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !443
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !441
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !444
  %0 = load i8*, i8** %src.addr, align 8, !dbg !445
  %1 = load i64, i64* %stride.addr, align 8, !dbg !446
  %mul = mul nsw i64 2, %1, !dbg !447
  %idx.neg = sub i64 0, %mul, !dbg !448
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !448
  %2 = load i64, i64* %stride.addr, align 8, !dbg !449
  %conv = trunc i64 %2 to i32, !dbg !449
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !450
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !451
  %4 = load i8*, i8** %full_mid, align 8, !dbg !452
  %5 = load i64, i64* %stride.addr, align 8, !dbg !453
  %conv3 = trunc i64 %5 to i32, !dbg !453
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !454
  ret void, !dbg !456
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc21_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !457 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !458, metadata !113), !dbg !459
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !460, metadata !113), !dbg !461
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !462, metadata !113), !dbg !463
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !464, metadata !113), !dbg !465
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !466, metadata !113), !dbg !467
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !468
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !469
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !467
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !470
  %0 = load i8*, i8** %src.addr, align 8, !dbg !471
  %1 = load i64, i64* %stride.addr, align 8, !dbg !472
  %mul = mul nsw i64 2, %1, !dbg !473
  %idx.neg = sub i64 0, %mul, !dbg !474
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !474
  %2 = load i64, i64* %stride.addr, align 8, !dbg !475
  %conv = trunc i64 %2 to i32, !dbg !475
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !476
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !477
  %4 = load i8*, i8** %full_mid, align 8, !dbg !478
  %5 = load i64, i64* %stride.addr, align 8, !dbg !479
  %conv3 = trunc i64 %5 to i32, !dbg !479
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !480
  ret void, !dbg !482
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc31_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !483 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !484, metadata !113), !dbg !485
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !486, metadata !113), !dbg !487
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !488, metadata !113), !dbg !489
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !490, metadata !113), !dbg !491
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !492, metadata !113), !dbg !493
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !494
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !495
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !493
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !496
  %0 = load i8*, i8** %src.addr, align 8, !dbg !497
  %1 = load i64, i64* %stride.addr, align 8, !dbg !498
  %mul = mul nsw i64 2, %1, !dbg !499
  %idx.neg = sub i64 0, %mul, !dbg !500
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !500
  %2 = load i64, i64* %stride.addr, align 8, !dbg !501
  %conv = trunc i64 %2 to i32, !dbg !501
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 52, i32 6), !dbg !502
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !503
  %4 = load i8*, i8** %full_mid, align 8, !dbg !504
  %5 = load i64, i64* %stride.addr, align 8, !dbg !505
  %conv3 = trunc i64 %5 to i32, !dbg !505
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !506
  ret void, !dbg !508
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc12_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !509 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !510, metadata !113), !dbg !511
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !512, metadata !113), !dbg !513
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !514, metadata !113), !dbg !515
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !516, metadata !113), !dbg !517
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !518, metadata !113), !dbg !519
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !520
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !521
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !519
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !522
  %0 = load i8*, i8** %src.addr, align 8, !dbg !523
  %1 = load i64, i64* %stride.addr, align 8, !dbg !524
  %mul = mul nsw i64 2, %1, !dbg !525
  %idx.neg = sub i64 0, %mul, !dbg !526
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !526
  %2 = load i64, i64* %stride.addr, align 8, !dbg !527
  %conv = trunc i64 %2 to i32, !dbg !527
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !528
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !529
  %4 = load i8*, i8** %full_mid, align 8, !dbg !530
  %5 = load i64, i64* %stride.addr, align 8, !dbg !531
  %conv3 = trunc i64 %5 to i32, !dbg !531
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !532
  ret void, !dbg !534
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc22_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !535 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !536, metadata !113), !dbg !537
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !538, metadata !113), !dbg !539
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !540, metadata !113), !dbg !541
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !542, metadata !113), !dbg !543
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !544, metadata !113), !dbg !545
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !546
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !547
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !545
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !548
  %0 = load i8*, i8** %src.addr, align 8, !dbg !549
  %1 = load i64, i64* %stride.addr, align 8, !dbg !550
  %mul = mul nsw i64 2, %1, !dbg !551
  %idx.neg = sub i64 0, %mul, !dbg !552
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !552
  %2 = load i64, i64* %stride.addr, align 8, !dbg !553
  %conv = trunc i64 %2 to i32, !dbg !553
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !554
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !555
  %4 = load i8*, i8** %full_mid, align 8, !dbg !556
  %5 = load i64, i64* %stride.addr, align 8, !dbg !557
  %conv3 = trunc i64 %5 to i32, !dbg !557
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !558
  ret void, !dbg !560
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc32_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !561 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !562, metadata !113), !dbg !563
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !564, metadata !113), !dbg !565
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !566, metadata !113), !dbg !567
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !568, metadata !113), !dbg !569
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !570, metadata !113), !dbg !571
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !572
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !573
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !571
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !574
  %0 = load i8*, i8** %src.addr, align 8, !dbg !575
  %1 = load i64, i64* %stride.addr, align 8, !dbg !576
  %mul = mul nsw i64 2, %1, !dbg !577
  %idx.neg = sub i64 0, %mul, !dbg !578
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !578
  %2 = load i64, i64* %stride.addr, align 8, !dbg !579
  %conv = trunc i64 %2 to i32, !dbg !579
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 52, i32 6), !dbg !580
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !581
  %4 = load i8*, i8** %full_mid, align 8, !dbg !582
  %5 = load i64, i64* %stride.addr, align 8, !dbg !583
  %conv3 = trunc i64 %5 to i32, !dbg !583
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !584
  ret void, !dbg !586
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc03_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !587 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !588, metadata !113), !dbg !589
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !590, metadata !113), !dbg !591
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !592, metadata !113), !dbg !593
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !594
  %1 = load i8*, i8** %src.addr, align 8, !dbg !595
  %2 = load i64, i64* %stride.addr, align 8, !dbg !596
  %conv = trunc i64 %2 to i32, !dbg !596
  %3 = load i64, i64* %stride.addr, align 8, !dbg !597
  %conv1 = trunc i64 %3 to i32, !dbg !597
  call void @put_rv40_qpel16_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 20, i32 52, i32 6), !dbg !598
  ret void, !dbg !599
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc13_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !600 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !601, metadata !113), !dbg !602
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !603, metadata !113), !dbg !604
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !605, metadata !113), !dbg !606
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !607, metadata !113), !dbg !608
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !609, metadata !113), !dbg !610
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !611
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !612
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !610
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !613
  %0 = load i8*, i8** %src.addr, align 8, !dbg !614
  %1 = load i64, i64* %stride.addr, align 8, !dbg !615
  %mul = mul nsw i64 2, %1, !dbg !616
  %idx.neg = sub i64 0, %mul, !dbg !617
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !617
  %2 = load i64, i64* %stride.addr, align 8, !dbg !618
  %conv = trunc i64 %2 to i32, !dbg !618
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !619
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !620
  %4 = load i8*, i8** %full_mid, align 8, !dbg !621
  %5 = load i64, i64* %stride.addr, align 8, !dbg !622
  %conv3 = trunc i64 %5 to i32, !dbg !622
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 52, i32 6), !dbg !623
  ret void, !dbg !625
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc23_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !626 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !627, metadata !113), !dbg !628
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !629, metadata !113), !dbg !630
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !631, metadata !113), !dbg !632
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !633, metadata !113), !dbg !634
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !635, metadata !113), !dbg !636
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !637
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !638
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !636
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !639
  %0 = load i8*, i8** %src.addr, align 8, !dbg !640
  %1 = load i64, i64* %stride.addr, align 8, !dbg !641
  %mul = mul nsw i64 2, %1, !dbg !642
  %idx.neg = sub i64 0, %mul, !dbg !643
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !643
  %2 = load i64, i64* %stride.addr, align 8, !dbg !644
  %conv = trunc i64 %2 to i32, !dbg !644
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !645
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !646
  %4 = load i8*, i8** %full_mid, align 8, !dbg !647
  %5 = load i64, i64* %stride.addr, align 8, !dbg !648
  %conv3 = trunc i64 %5 to i32, !dbg !648
  call void @put_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 52, i32 6), !dbg !649
  ret void, !dbg !651
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_mc33_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !652 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !653, metadata !113), !dbg !654
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !655, metadata !113), !dbg !656
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !657, metadata !113), !dbg !658
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !659
  %1 = load i8*, i8** %src.addr, align 8, !dbg !660
  %2 = load i64, i64* %stride.addr, align 8, !dbg !661
  call void @put_pixels16_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 16), !dbg !662
  ret void, !dbg !663
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc10_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !664 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !665, metadata !113), !dbg !666
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !667, metadata !113), !dbg !668
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !669, metadata !113), !dbg !670
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !671
  %1 = load i8*, i8** %src.addr, align 8, !dbg !672
  %2 = load i64, i64* %stride.addr, align 8, !dbg !673
  %conv = trunc i64 %2 to i32, !dbg !673
  %3 = load i64, i64* %stride.addr, align 8, !dbg !674
  %conv1 = trunc i64 %3 to i32, !dbg !674
  call void @avg_rv40_qpel16_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 52, i32 20, i32 6), !dbg !675
  ret void, !dbg !676
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc30_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !677 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !678, metadata !113), !dbg !679
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !680, metadata !113), !dbg !681
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !682, metadata !113), !dbg !683
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !684
  %1 = load i8*, i8** %src.addr, align 8, !dbg !685
  %2 = load i64, i64* %stride.addr, align 8, !dbg !686
  %conv = trunc i64 %2 to i32, !dbg !686
  %3 = load i64, i64* %stride.addr, align 8, !dbg !687
  %conv1 = trunc i64 %3 to i32, !dbg !687
  call void @avg_rv40_qpel16_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 20, i32 52, i32 6), !dbg !688
  ret void, !dbg !689
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc01_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !690 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !691, metadata !113), !dbg !692
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !693, metadata !113), !dbg !694
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !695, metadata !113), !dbg !696
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !697
  %1 = load i8*, i8** %src.addr, align 8, !dbg !698
  %2 = load i64, i64* %stride.addr, align 8, !dbg !699
  %conv = trunc i64 %2 to i32, !dbg !699
  %3 = load i64, i64* %stride.addr, align 8, !dbg !700
  %conv1 = trunc i64 %3 to i32, !dbg !700
  call void @avg_rv40_qpel16_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 52, i32 20, i32 6), !dbg !701
  ret void, !dbg !702
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc11_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !703 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !704, metadata !113), !dbg !705
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !706, metadata !113), !dbg !707
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !708, metadata !113), !dbg !709
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !710, metadata !113), !dbg !711
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !712, metadata !113), !dbg !713
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !714
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !715
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !713
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !716
  %0 = load i8*, i8** %src.addr, align 8, !dbg !717
  %1 = load i64, i64* %stride.addr, align 8, !dbg !718
  %mul = mul nsw i64 2, %1, !dbg !719
  %idx.neg = sub i64 0, %mul, !dbg !720
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !720
  %2 = load i64, i64* %stride.addr, align 8, !dbg !721
  %conv = trunc i64 %2 to i32, !dbg !721
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !722
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !723
  %4 = load i8*, i8** %full_mid, align 8, !dbg !724
  %5 = load i64, i64* %stride.addr, align 8, !dbg !725
  %conv3 = trunc i64 %5 to i32, !dbg !725
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !726
  ret void, !dbg !728
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc21_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !729 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !730, metadata !113), !dbg !731
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !732, metadata !113), !dbg !733
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !734, metadata !113), !dbg !735
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !736, metadata !113), !dbg !737
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !738, metadata !113), !dbg !739
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !740
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !741
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !739
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !742
  %0 = load i8*, i8** %src.addr, align 8, !dbg !743
  %1 = load i64, i64* %stride.addr, align 8, !dbg !744
  %mul = mul nsw i64 2, %1, !dbg !745
  %idx.neg = sub i64 0, %mul, !dbg !746
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !746
  %2 = load i64, i64* %stride.addr, align 8, !dbg !747
  %conv = trunc i64 %2 to i32, !dbg !747
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !748
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !749
  %4 = load i8*, i8** %full_mid, align 8, !dbg !750
  %5 = load i64, i64* %stride.addr, align 8, !dbg !751
  %conv3 = trunc i64 %5 to i32, !dbg !751
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !752
  ret void, !dbg !754
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc31_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !755 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !756, metadata !113), !dbg !757
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !758, metadata !113), !dbg !759
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !760, metadata !113), !dbg !761
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !762, metadata !113), !dbg !763
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !764, metadata !113), !dbg !765
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !766
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !767
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !765
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !768
  %0 = load i8*, i8** %src.addr, align 8, !dbg !769
  %1 = load i64, i64* %stride.addr, align 8, !dbg !770
  %mul = mul nsw i64 2, %1, !dbg !771
  %idx.neg = sub i64 0, %mul, !dbg !772
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !772
  %2 = load i64, i64* %stride.addr, align 8, !dbg !773
  %conv = trunc i64 %2 to i32, !dbg !773
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 52, i32 6), !dbg !774
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !775
  %4 = load i8*, i8** %full_mid, align 8, !dbg !776
  %5 = load i64, i64* %stride.addr, align 8, !dbg !777
  %conv3 = trunc i64 %5 to i32, !dbg !777
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 52, i32 20, i32 6), !dbg !778
  ret void, !dbg !780
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc12_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !781 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !782, metadata !113), !dbg !783
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !784, metadata !113), !dbg !785
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !786, metadata !113), !dbg !787
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !788, metadata !113), !dbg !789
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !790, metadata !113), !dbg !791
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !792
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !793
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !791
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !794
  %0 = load i8*, i8** %src.addr, align 8, !dbg !795
  %1 = load i64, i64* %stride.addr, align 8, !dbg !796
  %mul = mul nsw i64 2, %1, !dbg !797
  %idx.neg = sub i64 0, %mul, !dbg !798
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !798
  %2 = load i64, i64* %stride.addr, align 8, !dbg !799
  %conv = trunc i64 %2 to i32, !dbg !799
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !800
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !801
  %4 = load i8*, i8** %full_mid, align 8, !dbg !802
  %5 = load i64, i64* %stride.addr, align 8, !dbg !803
  %conv3 = trunc i64 %5 to i32, !dbg !803
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !804
  ret void, !dbg !806
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc22_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !807 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !808, metadata !113), !dbg !809
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !810, metadata !113), !dbg !811
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !812, metadata !113), !dbg !813
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !814, metadata !113), !dbg !815
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !816, metadata !113), !dbg !817
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !818
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !819
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !817
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !820
  %0 = load i8*, i8** %src.addr, align 8, !dbg !821
  %1 = load i64, i64* %stride.addr, align 8, !dbg !822
  %mul = mul nsw i64 2, %1, !dbg !823
  %idx.neg = sub i64 0, %mul, !dbg !824
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !824
  %2 = load i64, i64* %stride.addr, align 8, !dbg !825
  %conv = trunc i64 %2 to i32, !dbg !825
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !826
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !827
  %4 = load i8*, i8** %full_mid, align 8, !dbg !828
  %5 = load i64, i64* %stride.addr, align 8, !dbg !829
  %conv3 = trunc i64 %5 to i32, !dbg !829
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !830
  ret void, !dbg !832
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc32_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !833 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !834, metadata !113), !dbg !835
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !836, metadata !113), !dbg !837
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !838, metadata !113), !dbg !839
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !840, metadata !113), !dbg !841
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !842, metadata !113), !dbg !843
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !844
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !845
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !843
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !846
  %0 = load i8*, i8** %src.addr, align 8, !dbg !847
  %1 = load i64, i64* %stride.addr, align 8, !dbg !848
  %mul = mul nsw i64 2, %1, !dbg !849
  %idx.neg = sub i64 0, %mul, !dbg !850
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !850
  %2 = load i64, i64* %stride.addr, align 8, !dbg !851
  %conv = trunc i64 %2 to i32, !dbg !851
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 52, i32 6), !dbg !852
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !853
  %4 = load i8*, i8** %full_mid, align 8, !dbg !854
  %5 = load i64, i64* %stride.addr, align 8, !dbg !855
  %conv3 = trunc i64 %5 to i32, !dbg !855
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 20, i32 5), !dbg !856
  ret void, !dbg !858
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc03_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !859 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !860, metadata !113), !dbg !861
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !862, metadata !113), !dbg !863
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !864, metadata !113), !dbg !865
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !866
  %1 = load i8*, i8** %src.addr, align 8, !dbg !867
  %2 = load i64, i64* %stride.addr, align 8, !dbg !868
  %conv = trunc i64 %2 to i32, !dbg !868
  %3 = load i64, i64* %stride.addr, align 8, !dbg !869
  %conv1 = trunc i64 %3 to i32, !dbg !869
  call void @avg_rv40_qpel16_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 16, i32 20, i32 52, i32 6), !dbg !870
  ret void, !dbg !871
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc13_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !872 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !873, metadata !113), !dbg !874
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !875, metadata !113), !dbg !876
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !877, metadata !113), !dbg !878
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !879, metadata !113), !dbg !880
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !881, metadata !113), !dbg !882
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !883
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !884
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !882
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !885
  %0 = load i8*, i8** %src.addr, align 8, !dbg !886
  %1 = load i64, i64* %stride.addr, align 8, !dbg !887
  %mul = mul nsw i64 2, %1, !dbg !888
  %idx.neg = sub i64 0, %mul, !dbg !889
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !889
  %2 = load i64, i64* %stride.addr, align 8, !dbg !890
  %conv = trunc i64 %2 to i32, !dbg !890
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 52, i32 20, i32 6), !dbg !891
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !892
  %4 = load i8*, i8** %full_mid, align 8, !dbg !893
  %5 = load i64, i64* %stride.addr, align 8, !dbg !894
  %conv3 = trunc i64 %5 to i32, !dbg !894
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 52, i32 6), !dbg !895
  ret void, !dbg !897
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc23_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !898 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [336 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !899, metadata !113), !dbg !900
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !901, metadata !113), !dbg !902
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !903, metadata !113), !dbg !904
  call void @llvm.dbg.declare(metadata [336 x i8]* %full, metadata !905, metadata !113), !dbg !906
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !907, metadata !113), !dbg !908
  %arraydecay = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !909
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 32, !dbg !910
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !908
  %arraydecay1 = getelementptr inbounds [336 x i8], [336 x i8]* %full, i32 0, i32 0, !dbg !911
  %0 = load i8*, i8** %src.addr, align 8, !dbg !912
  %1 = load i64, i64* %stride.addr, align 8, !dbg !913
  %mul = mul nsw i64 2, %1, !dbg !914
  %idx.neg = sub i64 0, %mul, !dbg !915
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !915
  %2 = load i64, i64* %stride.addr, align 8, !dbg !916
  %conv = trunc i64 %2 to i32, !dbg !916
  call void @put_rv40_qpel16_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 16, i32 %conv, i32 21, i32 20, i32 20, i32 5), !dbg !917
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !918
  %4 = load i8*, i8** %full_mid, align 8, !dbg !919
  %5 = load i64, i64* %stride.addr, align 8, !dbg !920
  %conv3 = trunc i64 %5 to i32, !dbg !920
  call void @avg_rv40_qpel16_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 16, i32 16, i32 20, i32 52, i32 6), !dbg !921
  ret void, !dbg !923
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_mc33_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !924 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !925, metadata !113), !dbg !926
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !927, metadata !113), !dbg !928
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !929, metadata !113), !dbg !930
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !931
  %1 = load i8*, i8** %src.addr, align 8, !dbg !932
  %2 = load i64, i64* %stride.addr, align 8, !dbg !933
  call void @avg_pixels16_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 16), !dbg !934
  ret void, !dbg !935
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc10_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !936 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !937, metadata !113), !dbg !938
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !939, metadata !113), !dbg !940
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !941, metadata !113), !dbg !942
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !943
  %1 = load i8*, i8** %src.addr, align 8, !dbg !944
  %2 = load i64, i64* %stride.addr, align 8, !dbg !945
  %conv = trunc i64 %2 to i32, !dbg !945
  %3 = load i64, i64* %stride.addr, align 8, !dbg !946
  %conv1 = trunc i64 %3 to i32, !dbg !946
  call void @put_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 52, i32 20, i32 6), !dbg !947
  ret void, !dbg !948
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc30_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !949 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !950, metadata !113), !dbg !951
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !952, metadata !113), !dbg !953
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !954, metadata !113), !dbg !955
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !956
  %1 = load i8*, i8** %src.addr, align 8, !dbg !957
  %2 = load i64, i64* %stride.addr, align 8, !dbg !958
  %conv = trunc i64 %2 to i32, !dbg !958
  %3 = load i64, i64* %stride.addr, align 8, !dbg !959
  %conv1 = trunc i64 %3 to i32, !dbg !959
  call void @put_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 20, i32 52, i32 6), !dbg !960
  ret void, !dbg !961
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc01_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !962 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !963, metadata !113), !dbg !964
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !965, metadata !113), !dbg !966
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !967, metadata !113), !dbg !968
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !969
  %1 = load i8*, i8** %src.addr, align 8, !dbg !970
  %2 = load i64, i64* %stride.addr, align 8, !dbg !971
  %conv = trunc i64 %2 to i32, !dbg !971
  %3 = load i64, i64* %stride.addr, align 8, !dbg !972
  %conv1 = trunc i64 %3 to i32, !dbg !972
  call void @put_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 52, i32 20, i32 6), !dbg !973
  ret void, !dbg !974
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc11_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !975 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !976, metadata !113), !dbg !977
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !978, metadata !113), !dbg !979
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !980, metadata !113), !dbg !981
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !982, metadata !113), !dbg !986
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !987, metadata !113), !dbg !988
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !989
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !990
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !988
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !991
  %0 = load i8*, i8** %src.addr, align 8, !dbg !992
  %1 = load i64, i64* %stride.addr, align 8, !dbg !993
  %mul = mul nsw i64 2, %1, !dbg !994
  %idx.neg = sub i64 0, %mul, !dbg !995
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !995
  %2 = load i64, i64* %stride.addr, align 8, !dbg !996
  %conv = trunc i64 %2 to i32, !dbg !996
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !997
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !998
  %4 = load i8*, i8** %full_mid, align 8, !dbg !999
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1000
  %conv3 = trunc i64 %5 to i32, !dbg !1000
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1001
  ret void, !dbg !1003
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc21_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1004 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1005, metadata !113), !dbg !1006
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1007, metadata !113), !dbg !1008
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1009, metadata !113), !dbg !1010
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1011, metadata !113), !dbg !1012
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1013, metadata !113), !dbg !1014
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1015
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1016
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1014
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1017
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1018
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1019
  %mul = mul nsw i64 2, %1, !dbg !1020
  %idx.neg = sub i64 0, %mul, !dbg !1021
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1021
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1022
  %conv = trunc i64 %2 to i32, !dbg !1022
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1023
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1024
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1025
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1026
  %conv3 = trunc i64 %5 to i32, !dbg !1026
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1027
  ret void, !dbg !1029
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc31_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1030 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1031, metadata !113), !dbg !1032
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1033, metadata !113), !dbg !1034
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1035, metadata !113), !dbg !1036
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1037, metadata !113), !dbg !1038
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1039, metadata !113), !dbg !1040
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1041
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1042
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1040
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1043
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1044
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1045
  %mul = mul nsw i64 2, %1, !dbg !1046
  %idx.neg = sub i64 0, %mul, !dbg !1047
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1047
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1048
  %conv = trunc i64 %2 to i32, !dbg !1048
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 52, i32 6), !dbg !1049
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1050
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1051
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1052
  %conv3 = trunc i64 %5 to i32, !dbg !1052
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1053
  ret void, !dbg !1055
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc12_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1056 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1057, metadata !113), !dbg !1058
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1059, metadata !113), !dbg !1060
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1061, metadata !113), !dbg !1062
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1063, metadata !113), !dbg !1064
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1065, metadata !113), !dbg !1066
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1067
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1068
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1066
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1069
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1070
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1071
  %mul = mul nsw i64 2, %1, !dbg !1072
  %idx.neg = sub i64 0, %mul, !dbg !1073
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1073
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1074
  %conv = trunc i64 %2 to i32, !dbg !1074
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !1075
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1076
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1077
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1078
  %conv3 = trunc i64 %5 to i32, !dbg !1078
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1079
  ret void, !dbg !1081
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc22_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1082 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1083, metadata !113), !dbg !1084
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1085, metadata !113), !dbg !1086
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1087, metadata !113), !dbg !1088
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1089, metadata !113), !dbg !1090
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1091, metadata !113), !dbg !1092
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1093
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1094
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1092
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1095
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1096
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1097
  %mul = mul nsw i64 2, %1, !dbg !1098
  %idx.neg = sub i64 0, %mul, !dbg !1099
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1099
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1100
  %conv = trunc i64 %2 to i32, !dbg !1100
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1101
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1102
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1103
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1104
  %conv3 = trunc i64 %5 to i32, !dbg !1104
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1105
  ret void, !dbg !1107
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc32_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1108 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1109, metadata !113), !dbg !1110
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1111, metadata !113), !dbg !1112
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1113, metadata !113), !dbg !1114
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1115, metadata !113), !dbg !1116
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1117, metadata !113), !dbg !1118
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1119
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1120
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1118
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1121
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1122
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1123
  %mul = mul nsw i64 2, %1, !dbg !1124
  %idx.neg = sub i64 0, %mul, !dbg !1125
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1125
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1126
  %conv = trunc i64 %2 to i32, !dbg !1126
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 52, i32 6), !dbg !1127
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1128
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1129
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1130
  %conv3 = trunc i64 %5 to i32, !dbg !1130
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1131
  ret void, !dbg !1133
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc03_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1134 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1135, metadata !113), !dbg !1136
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1137, metadata !113), !dbg !1138
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1139, metadata !113), !dbg !1140
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1141
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1142
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1143
  %conv = trunc i64 %2 to i32, !dbg !1143
  %3 = load i64, i64* %stride.addr, align 8, !dbg !1144
  %conv1 = trunc i64 %3 to i32, !dbg !1144
  call void @put_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 20, i32 52, i32 6), !dbg !1145
  ret void, !dbg !1146
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc13_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1147 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1148, metadata !113), !dbg !1149
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1150, metadata !113), !dbg !1151
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1152, metadata !113), !dbg !1153
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1154, metadata !113), !dbg !1155
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1156, metadata !113), !dbg !1157
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1158
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1159
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1157
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1160
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1161
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1162
  %mul = mul nsw i64 2, %1, !dbg !1163
  %idx.neg = sub i64 0, %mul, !dbg !1164
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1164
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1165
  %conv = trunc i64 %2 to i32, !dbg !1165
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !1166
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1167
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1168
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1169
  %conv3 = trunc i64 %5 to i32, !dbg !1169
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 52, i32 6), !dbg !1170
  ret void, !dbg !1172
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc23_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1173 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1174, metadata !113), !dbg !1175
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1176, metadata !113), !dbg !1177
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1178, metadata !113), !dbg !1179
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1180, metadata !113), !dbg !1181
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1182, metadata !113), !dbg !1183
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1184
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1185
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1183
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1186
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1187
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1188
  %mul = mul nsw i64 2, %1, !dbg !1189
  %idx.neg = sub i64 0, %mul, !dbg !1190
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1190
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1191
  %conv = trunc i64 %2 to i32, !dbg !1191
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1192
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1193
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1194
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1195
  %conv3 = trunc i64 %5 to i32, !dbg !1195
  call void @put_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 52, i32 6), !dbg !1196
  ret void, !dbg !1198
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_mc33_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1199 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1200, metadata !113), !dbg !1201
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1202, metadata !113), !dbg !1203
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1204, metadata !113), !dbg !1205
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1206
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1207
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1208
  call void @put_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 8), !dbg !1209
  ret void, !dbg !1210
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc10_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1211 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1212, metadata !113), !dbg !1213
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1214, metadata !113), !dbg !1215
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1216, metadata !113), !dbg !1217
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1218
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1219
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1220
  %conv = trunc i64 %2 to i32, !dbg !1220
  %3 = load i64, i64* %stride.addr, align 8, !dbg !1221
  %conv1 = trunc i64 %3 to i32, !dbg !1221
  call void @avg_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 52, i32 20, i32 6), !dbg !1222
  ret void, !dbg !1223
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc30_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1224 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1225, metadata !113), !dbg !1226
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1227, metadata !113), !dbg !1228
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1229, metadata !113), !dbg !1230
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1231
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1232
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1233
  %conv = trunc i64 %2 to i32, !dbg !1233
  %3 = load i64, i64* %stride.addr, align 8, !dbg !1234
  %conv1 = trunc i64 %3 to i32, !dbg !1234
  call void @avg_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 20, i32 52, i32 6), !dbg !1235
  ret void, !dbg !1236
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc01_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1237 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1238, metadata !113), !dbg !1239
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1240, metadata !113), !dbg !1241
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1242, metadata !113), !dbg !1243
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1244
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1245
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1246
  %conv = trunc i64 %2 to i32, !dbg !1246
  %3 = load i64, i64* %stride.addr, align 8, !dbg !1247
  %conv1 = trunc i64 %3 to i32, !dbg !1247
  call void @avg_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 52, i32 20, i32 6), !dbg !1248
  ret void, !dbg !1249
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc11_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1250 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1251, metadata !113), !dbg !1252
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1253, metadata !113), !dbg !1254
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1255, metadata !113), !dbg !1256
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1257, metadata !113), !dbg !1258
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1259, metadata !113), !dbg !1260
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1261
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1262
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1260
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1263
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1264
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1265
  %mul = mul nsw i64 2, %1, !dbg !1266
  %idx.neg = sub i64 0, %mul, !dbg !1267
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1267
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1268
  %conv = trunc i64 %2 to i32, !dbg !1268
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !1269
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1270
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1271
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1272
  %conv3 = trunc i64 %5 to i32, !dbg !1272
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1273
  ret void, !dbg !1275
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc21_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1276 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1277, metadata !113), !dbg !1278
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1279, metadata !113), !dbg !1280
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1281, metadata !113), !dbg !1282
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1283, metadata !113), !dbg !1284
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1285, metadata !113), !dbg !1286
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1287
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1288
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1286
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1289
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1290
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1291
  %mul = mul nsw i64 2, %1, !dbg !1292
  %idx.neg = sub i64 0, %mul, !dbg !1293
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1293
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1294
  %conv = trunc i64 %2 to i32, !dbg !1294
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1295
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1296
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1297
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1298
  %conv3 = trunc i64 %5 to i32, !dbg !1298
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1299
  ret void, !dbg !1301
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc31_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1302 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1303, metadata !113), !dbg !1304
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1305, metadata !113), !dbg !1306
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1307, metadata !113), !dbg !1308
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1309, metadata !113), !dbg !1310
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1311, metadata !113), !dbg !1312
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1313
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1314
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1312
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1315
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1316
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1317
  %mul = mul nsw i64 2, %1, !dbg !1318
  %idx.neg = sub i64 0, %mul, !dbg !1319
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1319
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1320
  %conv = trunc i64 %2 to i32, !dbg !1320
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 52, i32 6), !dbg !1321
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1322
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1323
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1324
  %conv3 = trunc i64 %5 to i32, !dbg !1324
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 52, i32 20, i32 6), !dbg !1325
  ret void, !dbg !1327
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc12_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1328 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1329, metadata !113), !dbg !1330
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1331, metadata !113), !dbg !1332
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1333, metadata !113), !dbg !1334
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1335, metadata !113), !dbg !1336
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1337, metadata !113), !dbg !1338
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1339
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1340
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1338
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1341
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1342
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1343
  %mul = mul nsw i64 2, %1, !dbg !1344
  %idx.neg = sub i64 0, %mul, !dbg !1345
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1345
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1346
  %conv = trunc i64 %2 to i32, !dbg !1346
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !1347
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1348
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1349
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1350
  %conv3 = trunc i64 %5 to i32, !dbg !1350
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1351
  ret void, !dbg !1353
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc22_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1354 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1355, metadata !113), !dbg !1356
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1357, metadata !113), !dbg !1358
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1359, metadata !113), !dbg !1360
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1361, metadata !113), !dbg !1362
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1363, metadata !113), !dbg !1364
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1365
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1366
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1364
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1367
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1368
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1369
  %mul = mul nsw i64 2, %1, !dbg !1370
  %idx.neg = sub i64 0, %mul, !dbg !1371
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1371
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1372
  %conv = trunc i64 %2 to i32, !dbg !1372
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1373
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1374
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1375
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1376
  %conv3 = trunc i64 %5 to i32, !dbg !1376
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1377
  ret void, !dbg !1379
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc32_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1380 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1381, metadata !113), !dbg !1382
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1383, metadata !113), !dbg !1384
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1385, metadata !113), !dbg !1386
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1387, metadata !113), !dbg !1388
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1389, metadata !113), !dbg !1390
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1391
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1392
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1390
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1393
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1394
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1395
  %mul = mul nsw i64 2, %1, !dbg !1396
  %idx.neg = sub i64 0, %mul, !dbg !1397
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1397
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1398
  %conv = trunc i64 %2 to i32, !dbg !1398
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 52, i32 6), !dbg !1399
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1400
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1401
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1402
  %conv3 = trunc i64 %5 to i32, !dbg !1402
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 20, i32 5), !dbg !1403
  ret void, !dbg !1405
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc03_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1406 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1407, metadata !113), !dbg !1408
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1409, metadata !113), !dbg !1410
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1411, metadata !113), !dbg !1412
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1413
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1414
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1415
  %conv = trunc i64 %2 to i32, !dbg !1415
  %3 = load i64, i64* %stride.addr, align 8, !dbg !1416
  %conv1 = trunc i64 %3 to i32, !dbg !1416
  call void @avg_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %conv, i32 %conv1, i32 8, i32 20, i32 52, i32 6), !dbg !1417
  ret void, !dbg !1418
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc13_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1419 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1420, metadata !113), !dbg !1421
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1422, metadata !113), !dbg !1423
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1424, metadata !113), !dbg !1425
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1426, metadata !113), !dbg !1427
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1428, metadata !113), !dbg !1429
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1430
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1431
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1429
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1432
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1433
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1434
  %mul = mul nsw i64 2, %1, !dbg !1435
  %idx.neg = sub i64 0, %mul, !dbg !1436
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1436
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1437
  %conv = trunc i64 %2 to i32, !dbg !1437
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 52, i32 20, i32 6), !dbg !1438
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1439
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1440
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1441
  %conv3 = trunc i64 %5 to i32, !dbg !1441
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 52, i32 6), !dbg !1442
  ret void, !dbg !1444
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc23_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1445 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %full = alloca [104 x i8], align 16
  %full_mid = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1446, metadata !113), !dbg !1447
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1448, metadata !113), !dbg !1449
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1450, metadata !113), !dbg !1451
  call void @llvm.dbg.declare(metadata [104 x i8]* %full, metadata !1452, metadata !113), !dbg !1453
  call void @llvm.dbg.declare(metadata i8** %full_mid, metadata !1454, metadata !113), !dbg !1455
  %arraydecay = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1456
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 16, !dbg !1457
  store i8* %add.ptr, i8** %full_mid, align 8, !dbg !1455
  %arraydecay1 = getelementptr inbounds [104 x i8], [104 x i8]* %full, i32 0, i32 0, !dbg !1458
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1459
  %1 = load i64, i64* %stride.addr, align 8, !dbg !1460
  %mul = mul nsw i64 2, %1, !dbg !1461
  %idx.neg = sub i64 0, %mul, !dbg !1462
  %add.ptr2 = getelementptr inbounds i8, i8* %0, i64 %idx.neg, !dbg !1462
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1463
  %conv = trunc i64 %2 to i32, !dbg !1463
  call void @put_rv40_qpel8_h_lowpass(i8* %arraydecay1, i8* %add.ptr2, i32 8, i32 %conv, i32 13, i32 20, i32 20, i32 5), !dbg !1464
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !1465
  %4 = load i8*, i8** %full_mid, align 8, !dbg !1466
  %5 = load i64, i64* %stride.addr, align 8, !dbg !1467
  %conv3 = trunc i64 %5 to i32, !dbg !1467
  call void @avg_rv40_qpel8_v_lowpass(i8* %3, i8* %4, i32 %conv3, i32 8, i32 8, i32 20, i32 52, i32 6), !dbg !1468
  ret void, !dbg !1470
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_mc33_c(i8* %dst, i8* %src, i64 %stride) #3 !dbg !1471 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1472, metadata !113), !dbg !1473
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1474, metadata !113), !dbg !1475
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1476, metadata !113), !dbg !1477
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !1478
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1479
  %2 = load i64, i64* %stride.addr, align 8, !dbg !1480
  call void @avg_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 8), !dbg !1481
  ret void, !dbg !1482
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_chroma_mc8_c(i8* %dst, i8* %src, i64 %stride, i32 %h, i32 %x, i32 %y) #3 !dbg !1483 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %C = alloca i32, align 4
  %D = alloca i32, align 4
  %i = alloca i32, align 4
  %bias = alloca i32, align 4
  %E = alloca i32, align 4
  %step = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1484, metadata !113), !dbg !1485
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1486, metadata !113), !dbg !1487
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1488, metadata !113), !dbg !1489
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1490, metadata !113), !dbg !1491
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !1492, metadata !113), !dbg !1493
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !1494, metadata !113), !dbg !1495
  call void @llvm.dbg.declare(metadata i32* %A, metadata !1496, metadata !113), !dbg !1497
  %0 = load i32, i32* %x.addr, align 4, !dbg !1498
  %sub = sub nsw i32 8, %0, !dbg !1499
  %1 = load i32, i32* %y.addr, align 4, !dbg !1500
  %sub1 = sub nsw i32 8, %1, !dbg !1501
  %mul = mul nsw i32 %sub, %sub1, !dbg !1502
  store i32 %mul, i32* %A, align 4, !dbg !1497
  call void @llvm.dbg.declare(metadata i32* %B, metadata !1503, metadata !113), !dbg !1504
  %2 = load i32, i32* %x.addr, align 4, !dbg !1505
  %3 = load i32, i32* %y.addr, align 4, !dbg !1506
  %sub2 = sub nsw i32 8, %3, !dbg !1507
  %mul3 = mul nsw i32 %2, %sub2, !dbg !1508
  store i32 %mul3, i32* %B, align 4, !dbg !1504
  call void @llvm.dbg.declare(metadata i32* %C, metadata !1509, metadata !113), !dbg !1510
  %4 = load i32, i32* %x.addr, align 4, !dbg !1511
  %sub4 = sub nsw i32 8, %4, !dbg !1512
  %5 = load i32, i32* %y.addr, align 4, !dbg !1513
  %mul5 = mul nsw i32 %sub4, %5, !dbg !1514
  store i32 %mul5, i32* %C, align 4, !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %D, metadata !1515, metadata !113), !dbg !1516
  %6 = load i32, i32* %x.addr, align 4, !dbg !1517
  %7 = load i32, i32* %y.addr, align 4, !dbg !1518
  %mul6 = mul nsw i32 %6, %7, !dbg !1519
  store i32 %mul6, i32* %D, align 4, !dbg !1516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1520, metadata !113), !dbg !1521
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !1522, metadata !113), !dbg !1523
  %8 = load i32, i32* %x.addr, align 4, !dbg !1524
  %shr = ashr i32 %8, 1, !dbg !1525
  %idxprom = sext i32 %shr to i64, !dbg !1526
  %9 = load i32, i32* %y.addr, align 4, !dbg !1527
  %shr7 = ashr i32 %9, 1, !dbg !1528
  %idxprom8 = sext i32 %shr7 to i64, !dbg !1526
  %arrayidx = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @rv40_bias, i64 0, i64 %idxprom8, !dbg !1526
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !1526
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !1526
  store i32 %10, i32* %bias, align 4, !dbg !1523
  %11 = load i32, i32* %D, align 4, !dbg !1529
  %tobool = icmp ne i32 %11, 0, !dbg !1529
  br i1 %tobool, label %if.then, label %if.else, !dbg !1531

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1532
  br label %for.cond, !dbg !1536

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !1537
  %13 = load i32, i32* %h.addr, align 4, !dbg !1540
  %cmp = icmp slt i32 %12, %13, !dbg !1541
  br i1 %cmp, label %for.body, label %for.end, !dbg !1542

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %A, align 4, !dbg !1543
  %15 = load i8*, i8** %src.addr, align 8, !dbg !1546
  %arrayidx10 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !1546
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !1546
  %conv = zext i8 %16 to i32, !dbg !1546
  %mul11 = mul nsw i32 %14, %conv, !dbg !1547
  %17 = load i32, i32* %B, align 4, !dbg !1548
  %18 = load i8*, i8** %src.addr, align 8, !dbg !1549
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !1549
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !1549
  %conv13 = zext i8 %19 to i32, !dbg !1549
  %mul14 = mul nsw i32 %17, %conv13, !dbg !1550
  %add = add nsw i32 %mul11, %mul14, !dbg !1551
  %20 = load i32, i32* %C, align 4, !dbg !1552
  %21 = load i64, i64* %stride.addr, align 8, !dbg !1553
  %add15 = add nsw i64 %21, 0, !dbg !1554
  %22 = load i8*, i8** %src.addr, align 8, !dbg !1555
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 %add15, !dbg !1555
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !1555
  %conv17 = zext i8 %23 to i32, !dbg !1555
  %mul18 = mul nsw i32 %20, %conv17, !dbg !1556
  %add19 = add nsw i32 %add, %mul18, !dbg !1557
  %24 = load i32, i32* %D, align 4, !dbg !1558
  %25 = load i64, i64* %stride.addr, align 8, !dbg !1559
  %add20 = add nsw i64 %25, 1, !dbg !1560
  %26 = load i8*, i8** %src.addr, align 8, !dbg !1561
  %arrayidx21 = getelementptr inbounds i8, i8* %26, i64 %add20, !dbg !1561
  %27 = load i8, i8* %arrayidx21, align 1, !dbg !1561
  %conv22 = zext i8 %27 to i32, !dbg !1561
  %mul23 = mul nsw i32 %24, %conv22, !dbg !1562
  %add24 = add nsw i32 %add19, %mul23, !dbg !1563
  %28 = load i32, i32* %bias, align 4, !dbg !1564
  %add25 = add nsw i32 %add24, %28, !dbg !1565
  %shr26 = ashr i32 %add25, 6, !dbg !1566
  %conv27 = trunc i32 %shr26 to i8, !dbg !1567
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !1568
  %arrayidx28 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !1568
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !1569
  %30 = load i32, i32* %A, align 4, !dbg !1570
  %31 = load i8*, i8** %src.addr, align 8, !dbg !1571
  %arrayidx29 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !1571
  %32 = load i8, i8* %arrayidx29, align 1, !dbg !1571
  %conv30 = zext i8 %32 to i32, !dbg !1571
  %mul31 = mul nsw i32 %30, %conv30, !dbg !1572
  %33 = load i32, i32* %B, align 4, !dbg !1573
  %34 = load i8*, i8** %src.addr, align 8, !dbg !1574
  %arrayidx32 = getelementptr inbounds i8, i8* %34, i64 2, !dbg !1574
  %35 = load i8, i8* %arrayidx32, align 1, !dbg !1574
  %conv33 = zext i8 %35 to i32, !dbg !1574
  %mul34 = mul nsw i32 %33, %conv33, !dbg !1575
  %add35 = add nsw i32 %mul31, %mul34, !dbg !1576
  %36 = load i32, i32* %C, align 4, !dbg !1577
  %37 = load i64, i64* %stride.addr, align 8, !dbg !1578
  %add36 = add nsw i64 %37, 1, !dbg !1579
  %38 = load i8*, i8** %src.addr, align 8, !dbg !1580
  %arrayidx37 = getelementptr inbounds i8, i8* %38, i64 %add36, !dbg !1580
  %39 = load i8, i8* %arrayidx37, align 1, !dbg !1580
  %conv38 = zext i8 %39 to i32, !dbg !1580
  %mul39 = mul nsw i32 %36, %conv38, !dbg !1581
  %add40 = add nsw i32 %add35, %mul39, !dbg !1582
  %40 = load i32, i32* %D, align 4, !dbg !1583
  %41 = load i64, i64* %stride.addr, align 8, !dbg !1584
  %add41 = add nsw i64 %41, 2, !dbg !1585
  %42 = load i8*, i8** %src.addr, align 8, !dbg !1586
  %arrayidx42 = getelementptr inbounds i8, i8* %42, i64 %add41, !dbg !1586
  %43 = load i8, i8* %arrayidx42, align 1, !dbg !1586
  %conv43 = zext i8 %43 to i32, !dbg !1586
  %mul44 = mul nsw i32 %40, %conv43, !dbg !1587
  %add45 = add nsw i32 %add40, %mul44, !dbg !1588
  %44 = load i32, i32* %bias, align 4, !dbg !1589
  %add46 = add nsw i32 %add45, %44, !dbg !1590
  %shr47 = ashr i32 %add46, 6, !dbg !1591
  %conv48 = trunc i32 %shr47 to i8, !dbg !1592
  %45 = load i8*, i8** %dst.addr, align 8, !dbg !1593
  %arrayidx49 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !1593
  store i8 %conv48, i8* %arrayidx49, align 1, !dbg !1594
  %46 = load i32, i32* %A, align 4, !dbg !1595
  %47 = load i8*, i8** %src.addr, align 8, !dbg !1596
  %arrayidx50 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !1596
  %48 = load i8, i8* %arrayidx50, align 1, !dbg !1596
  %conv51 = zext i8 %48 to i32, !dbg !1596
  %mul52 = mul nsw i32 %46, %conv51, !dbg !1597
  %49 = load i32, i32* %B, align 4, !dbg !1598
  %50 = load i8*, i8** %src.addr, align 8, !dbg !1599
  %arrayidx53 = getelementptr inbounds i8, i8* %50, i64 3, !dbg !1599
  %51 = load i8, i8* %arrayidx53, align 1, !dbg !1599
  %conv54 = zext i8 %51 to i32, !dbg !1599
  %mul55 = mul nsw i32 %49, %conv54, !dbg !1600
  %add56 = add nsw i32 %mul52, %mul55, !dbg !1601
  %52 = load i32, i32* %C, align 4, !dbg !1602
  %53 = load i64, i64* %stride.addr, align 8, !dbg !1603
  %add57 = add nsw i64 %53, 2, !dbg !1604
  %54 = load i8*, i8** %src.addr, align 8, !dbg !1605
  %arrayidx58 = getelementptr inbounds i8, i8* %54, i64 %add57, !dbg !1605
  %55 = load i8, i8* %arrayidx58, align 1, !dbg !1605
  %conv59 = zext i8 %55 to i32, !dbg !1605
  %mul60 = mul nsw i32 %52, %conv59, !dbg !1606
  %add61 = add nsw i32 %add56, %mul60, !dbg !1607
  %56 = load i32, i32* %D, align 4, !dbg !1608
  %57 = load i64, i64* %stride.addr, align 8, !dbg !1609
  %add62 = add nsw i64 %57, 3, !dbg !1610
  %58 = load i8*, i8** %src.addr, align 8, !dbg !1611
  %arrayidx63 = getelementptr inbounds i8, i8* %58, i64 %add62, !dbg !1611
  %59 = load i8, i8* %arrayidx63, align 1, !dbg !1611
  %conv64 = zext i8 %59 to i32, !dbg !1611
  %mul65 = mul nsw i32 %56, %conv64, !dbg !1612
  %add66 = add nsw i32 %add61, %mul65, !dbg !1613
  %60 = load i32, i32* %bias, align 4, !dbg !1614
  %add67 = add nsw i32 %add66, %60, !dbg !1615
  %shr68 = ashr i32 %add67, 6, !dbg !1616
  %conv69 = trunc i32 %shr68 to i8, !dbg !1617
  %61 = load i8*, i8** %dst.addr, align 8, !dbg !1618
  %arrayidx70 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !1618
  store i8 %conv69, i8* %arrayidx70, align 1, !dbg !1619
  %62 = load i32, i32* %A, align 4, !dbg !1620
  %63 = load i8*, i8** %src.addr, align 8, !dbg !1621
  %arrayidx71 = getelementptr inbounds i8, i8* %63, i64 3, !dbg !1621
  %64 = load i8, i8* %arrayidx71, align 1, !dbg !1621
  %conv72 = zext i8 %64 to i32, !dbg !1621
  %mul73 = mul nsw i32 %62, %conv72, !dbg !1622
  %65 = load i32, i32* %B, align 4, !dbg !1623
  %66 = load i8*, i8** %src.addr, align 8, !dbg !1624
  %arrayidx74 = getelementptr inbounds i8, i8* %66, i64 4, !dbg !1624
  %67 = load i8, i8* %arrayidx74, align 1, !dbg !1624
  %conv75 = zext i8 %67 to i32, !dbg !1624
  %mul76 = mul nsw i32 %65, %conv75, !dbg !1625
  %add77 = add nsw i32 %mul73, %mul76, !dbg !1626
  %68 = load i32, i32* %C, align 4, !dbg !1627
  %69 = load i64, i64* %stride.addr, align 8, !dbg !1628
  %add78 = add nsw i64 %69, 3, !dbg !1629
  %70 = load i8*, i8** %src.addr, align 8, !dbg !1630
  %arrayidx79 = getelementptr inbounds i8, i8* %70, i64 %add78, !dbg !1630
  %71 = load i8, i8* %arrayidx79, align 1, !dbg !1630
  %conv80 = zext i8 %71 to i32, !dbg !1630
  %mul81 = mul nsw i32 %68, %conv80, !dbg !1631
  %add82 = add nsw i32 %add77, %mul81, !dbg !1632
  %72 = load i32, i32* %D, align 4, !dbg !1633
  %73 = load i64, i64* %stride.addr, align 8, !dbg !1634
  %add83 = add nsw i64 %73, 4, !dbg !1635
  %74 = load i8*, i8** %src.addr, align 8, !dbg !1636
  %arrayidx84 = getelementptr inbounds i8, i8* %74, i64 %add83, !dbg !1636
  %75 = load i8, i8* %arrayidx84, align 1, !dbg !1636
  %conv85 = zext i8 %75 to i32, !dbg !1636
  %mul86 = mul nsw i32 %72, %conv85, !dbg !1637
  %add87 = add nsw i32 %add82, %mul86, !dbg !1638
  %76 = load i32, i32* %bias, align 4, !dbg !1639
  %add88 = add nsw i32 %add87, %76, !dbg !1640
  %shr89 = ashr i32 %add88, 6, !dbg !1641
  %conv90 = trunc i32 %shr89 to i8, !dbg !1642
  %77 = load i8*, i8** %dst.addr, align 8, !dbg !1643
  %arrayidx91 = getelementptr inbounds i8, i8* %77, i64 3, !dbg !1643
  store i8 %conv90, i8* %arrayidx91, align 1, !dbg !1644
  %78 = load i32, i32* %A, align 4, !dbg !1645
  %79 = load i8*, i8** %src.addr, align 8, !dbg !1646
  %arrayidx92 = getelementptr inbounds i8, i8* %79, i64 4, !dbg !1646
  %80 = load i8, i8* %arrayidx92, align 1, !dbg !1646
  %conv93 = zext i8 %80 to i32, !dbg !1646
  %mul94 = mul nsw i32 %78, %conv93, !dbg !1647
  %81 = load i32, i32* %B, align 4, !dbg !1648
  %82 = load i8*, i8** %src.addr, align 8, !dbg !1649
  %arrayidx95 = getelementptr inbounds i8, i8* %82, i64 5, !dbg !1649
  %83 = load i8, i8* %arrayidx95, align 1, !dbg !1649
  %conv96 = zext i8 %83 to i32, !dbg !1649
  %mul97 = mul nsw i32 %81, %conv96, !dbg !1650
  %add98 = add nsw i32 %mul94, %mul97, !dbg !1651
  %84 = load i32, i32* %C, align 4, !dbg !1652
  %85 = load i64, i64* %stride.addr, align 8, !dbg !1653
  %add99 = add nsw i64 %85, 4, !dbg !1654
  %86 = load i8*, i8** %src.addr, align 8, !dbg !1655
  %arrayidx100 = getelementptr inbounds i8, i8* %86, i64 %add99, !dbg !1655
  %87 = load i8, i8* %arrayidx100, align 1, !dbg !1655
  %conv101 = zext i8 %87 to i32, !dbg !1655
  %mul102 = mul nsw i32 %84, %conv101, !dbg !1656
  %add103 = add nsw i32 %add98, %mul102, !dbg !1657
  %88 = load i32, i32* %D, align 4, !dbg !1658
  %89 = load i64, i64* %stride.addr, align 8, !dbg !1659
  %add104 = add nsw i64 %89, 5, !dbg !1660
  %90 = load i8*, i8** %src.addr, align 8, !dbg !1661
  %arrayidx105 = getelementptr inbounds i8, i8* %90, i64 %add104, !dbg !1661
  %91 = load i8, i8* %arrayidx105, align 1, !dbg !1661
  %conv106 = zext i8 %91 to i32, !dbg !1661
  %mul107 = mul nsw i32 %88, %conv106, !dbg !1662
  %add108 = add nsw i32 %add103, %mul107, !dbg !1663
  %92 = load i32, i32* %bias, align 4, !dbg !1664
  %add109 = add nsw i32 %add108, %92, !dbg !1665
  %shr110 = ashr i32 %add109, 6, !dbg !1666
  %conv111 = trunc i32 %shr110 to i8, !dbg !1667
  %93 = load i8*, i8** %dst.addr, align 8, !dbg !1668
  %arrayidx112 = getelementptr inbounds i8, i8* %93, i64 4, !dbg !1668
  store i8 %conv111, i8* %arrayidx112, align 1, !dbg !1669
  %94 = load i32, i32* %A, align 4, !dbg !1670
  %95 = load i8*, i8** %src.addr, align 8, !dbg !1671
  %arrayidx113 = getelementptr inbounds i8, i8* %95, i64 5, !dbg !1671
  %96 = load i8, i8* %arrayidx113, align 1, !dbg !1671
  %conv114 = zext i8 %96 to i32, !dbg !1671
  %mul115 = mul nsw i32 %94, %conv114, !dbg !1672
  %97 = load i32, i32* %B, align 4, !dbg !1673
  %98 = load i8*, i8** %src.addr, align 8, !dbg !1674
  %arrayidx116 = getelementptr inbounds i8, i8* %98, i64 6, !dbg !1674
  %99 = load i8, i8* %arrayidx116, align 1, !dbg !1674
  %conv117 = zext i8 %99 to i32, !dbg !1674
  %mul118 = mul nsw i32 %97, %conv117, !dbg !1675
  %add119 = add nsw i32 %mul115, %mul118, !dbg !1676
  %100 = load i32, i32* %C, align 4, !dbg !1677
  %101 = load i64, i64* %stride.addr, align 8, !dbg !1678
  %add120 = add nsw i64 %101, 5, !dbg !1679
  %102 = load i8*, i8** %src.addr, align 8, !dbg !1680
  %arrayidx121 = getelementptr inbounds i8, i8* %102, i64 %add120, !dbg !1680
  %103 = load i8, i8* %arrayidx121, align 1, !dbg !1680
  %conv122 = zext i8 %103 to i32, !dbg !1680
  %mul123 = mul nsw i32 %100, %conv122, !dbg !1681
  %add124 = add nsw i32 %add119, %mul123, !dbg !1682
  %104 = load i32, i32* %D, align 4, !dbg !1683
  %105 = load i64, i64* %stride.addr, align 8, !dbg !1684
  %add125 = add nsw i64 %105, 6, !dbg !1685
  %106 = load i8*, i8** %src.addr, align 8, !dbg !1686
  %arrayidx126 = getelementptr inbounds i8, i8* %106, i64 %add125, !dbg !1686
  %107 = load i8, i8* %arrayidx126, align 1, !dbg !1686
  %conv127 = zext i8 %107 to i32, !dbg !1686
  %mul128 = mul nsw i32 %104, %conv127, !dbg !1687
  %add129 = add nsw i32 %add124, %mul128, !dbg !1688
  %108 = load i32, i32* %bias, align 4, !dbg !1689
  %add130 = add nsw i32 %add129, %108, !dbg !1690
  %shr131 = ashr i32 %add130, 6, !dbg !1691
  %conv132 = trunc i32 %shr131 to i8, !dbg !1692
  %109 = load i8*, i8** %dst.addr, align 8, !dbg !1693
  %arrayidx133 = getelementptr inbounds i8, i8* %109, i64 5, !dbg !1693
  store i8 %conv132, i8* %arrayidx133, align 1, !dbg !1694
  %110 = load i32, i32* %A, align 4, !dbg !1695
  %111 = load i8*, i8** %src.addr, align 8, !dbg !1696
  %arrayidx134 = getelementptr inbounds i8, i8* %111, i64 6, !dbg !1696
  %112 = load i8, i8* %arrayidx134, align 1, !dbg !1696
  %conv135 = zext i8 %112 to i32, !dbg !1696
  %mul136 = mul nsw i32 %110, %conv135, !dbg !1697
  %113 = load i32, i32* %B, align 4, !dbg !1698
  %114 = load i8*, i8** %src.addr, align 8, !dbg !1699
  %arrayidx137 = getelementptr inbounds i8, i8* %114, i64 7, !dbg !1699
  %115 = load i8, i8* %arrayidx137, align 1, !dbg !1699
  %conv138 = zext i8 %115 to i32, !dbg !1699
  %mul139 = mul nsw i32 %113, %conv138, !dbg !1700
  %add140 = add nsw i32 %mul136, %mul139, !dbg !1701
  %116 = load i32, i32* %C, align 4, !dbg !1702
  %117 = load i64, i64* %stride.addr, align 8, !dbg !1703
  %add141 = add nsw i64 %117, 6, !dbg !1704
  %118 = load i8*, i8** %src.addr, align 8, !dbg !1705
  %arrayidx142 = getelementptr inbounds i8, i8* %118, i64 %add141, !dbg !1705
  %119 = load i8, i8* %arrayidx142, align 1, !dbg !1705
  %conv143 = zext i8 %119 to i32, !dbg !1705
  %mul144 = mul nsw i32 %116, %conv143, !dbg !1706
  %add145 = add nsw i32 %add140, %mul144, !dbg !1707
  %120 = load i32, i32* %D, align 4, !dbg !1708
  %121 = load i64, i64* %stride.addr, align 8, !dbg !1709
  %add146 = add nsw i64 %121, 7, !dbg !1710
  %122 = load i8*, i8** %src.addr, align 8, !dbg !1711
  %arrayidx147 = getelementptr inbounds i8, i8* %122, i64 %add146, !dbg !1711
  %123 = load i8, i8* %arrayidx147, align 1, !dbg !1711
  %conv148 = zext i8 %123 to i32, !dbg !1711
  %mul149 = mul nsw i32 %120, %conv148, !dbg !1712
  %add150 = add nsw i32 %add145, %mul149, !dbg !1713
  %124 = load i32, i32* %bias, align 4, !dbg !1714
  %add151 = add nsw i32 %add150, %124, !dbg !1715
  %shr152 = ashr i32 %add151, 6, !dbg !1716
  %conv153 = trunc i32 %shr152 to i8, !dbg !1717
  %125 = load i8*, i8** %dst.addr, align 8, !dbg !1718
  %arrayidx154 = getelementptr inbounds i8, i8* %125, i64 6, !dbg !1718
  store i8 %conv153, i8* %arrayidx154, align 1, !dbg !1719
  %126 = load i32, i32* %A, align 4, !dbg !1720
  %127 = load i8*, i8** %src.addr, align 8, !dbg !1721
  %arrayidx155 = getelementptr inbounds i8, i8* %127, i64 7, !dbg !1721
  %128 = load i8, i8* %arrayidx155, align 1, !dbg !1721
  %conv156 = zext i8 %128 to i32, !dbg !1721
  %mul157 = mul nsw i32 %126, %conv156, !dbg !1722
  %129 = load i32, i32* %B, align 4, !dbg !1723
  %130 = load i8*, i8** %src.addr, align 8, !dbg !1724
  %arrayidx158 = getelementptr inbounds i8, i8* %130, i64 8, !dbg !1724
  %131 = load i8, i8* %arrayidx158, align 1, !dbg !1724
  %conv159 = zext i8 %131 to i32, !dbg !1724
  %mul160 = mul nsw i32 %129, %conv159, !dbg !1725
  %add161 = add nsw i32 %mul157, %mul160, !dbg !1726
  %132 = load i32, i32* %C, align 4, !dbg !1727
  %133 = load i64, i64* %stride.addr, align 8, !dbg !1728
  %add162 = add nsw i64 %133, 7, !dbg !1729
  %134 = load i8*, i8** %src.addr, align 8, !dbg !1730
  %arrayidx163 = getelementptr inbounds i8, i8* %134, i64 %add162, !dbg !1730
  %135 = load i8, i8* %arrayidx163, align 1, !dbg !1730
  %conv164 = zext i8 %135 to i32, !dbg !1730
  %mul165 = mul nsw i32 %132, %conv164, !dbg !1731
  %add166 = add nsw i32 %add161, %mul165, !dbg !1732
  %136 = load i32, i32* %D, align 4, !dbg !1733
  %137 = load i64, i64* %stride.addr, align 8, !dbg !1734
  %add167 = add nsw i64 %137, 8, !dbg !1735
  %138 = load i8*, i8** %src.addr, align 8, !dbg !1736
  %arrayidx168 = getelementptr inbounds i8, i8* %138, i64 %add167, !dbg !1736
  %139 = load i8, i8* %arrayidx168, align 1, !dbg !1736
  %conv169 = zext i8 %139 to i32, !dbg !1736
  %mul170 = mul nsw i32 %136, %conv169, !dbg !1737
  %add171 = add nsw i32 %add166, %mul170, !dbg !1738
  %140 = load i32, i32* %bias, align 4, !dbg !1739
  %add172 = add nsw i32 %add171, %140, !dbg !1740
  %shr173 = ashr i32 %add172, 6, !dbg !1741
  %conv174 = trunc i32 %shr173 to i8, !dbg !1742
  %141 = load i8*, i8** %dst.addr, align 8, !dbg !1743
  %arrayidx175 = getelementptr inbounds i8, i8* %141, i64 7, !dbg !1743
  store i8 %conv174, i8* %arrayidx175, align 1, !dbg !1744
  %142 = load i64, i64* %stride.addr, align 8, !dbg !1745
  %143 = load i8*, i8** %dst.addr, align 8, !dbg !1746
  %add.ptr = getelementptr inbounds i8, i8* %143, i64 %142, !dbg !1746
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !1746
  %144 = load i64, i64* %stride.addr, align 8, !dbg !1747
  %145 = load i8*, i8** %src.addr, align 8, !dbg !1748
  %add.ptr176 = getelementptr inbounds i8, i8* %145, i64 %144, !dbg !1748
  store i8* %add.ptr176, i8** %src.addr, align 8, !dbg !1748
  br label %for.inc, !dbg !1749

for.inc:                                          ; preds = %for.body
  %146 = load i32, i32* %i, align 4, !dbg !1750
  %inc = add nsw i32 %146, 1, !dbg !1750
  store i32 %inc, i32* %i, align 4, !dbg !1750
  br label %for.cond, !dbg !1752, !llvm.loop !1753

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !1755

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %E, metadata !1757, metadata !113), !dbg !1759
  %147 = load i32, i32* %B, align 4, !dbg !1760
  %148 = load i32, i32* %C, align 4, !dbg !1762
  %add177 = add nsw i32 %147, %148, !dbg !1763
  store i32 %add177, i32* %E, align 4, !dbg !1764
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1765, metadata !113), !dbg !1767
  %149 = load i32, i32* %C, align 4, !dbg !1768
  %tobool178 = icmp ne i32 %149, 0, !dbg !1768
  br i1 %tobool178, label %cond.true, label %cond.false, !dbg !1768

cond.true:                                        ; preds = %if.else
  %150 = load i64, i64* %stride.addr, align 8, !dbg !1769
  br label %cond.end, !dbg !1771

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !1772

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %150, %cond.true ], [ 1, %cond.false ], !dbg !1774
  store i64 %cond, i64* %step, align 8, !dbg !1776
  store i32 0, i32* %i, align 4, !dbg !1777
  br label %for.cond179, !dbg !1778

for.cond179:                                      ; preds = %for.inc281, %cond.end
  %151 = load i32, i32* %i, align 4, !dbg !1779
  %152 = load i32, i32* %h.addr, align 4, !dbg !1783
  %cmp180 = icmp slt i32 %151, %152, !dbg !1784
  br i1 %cmp180, label %for.body182, label %for.end283, !dbg !1785

for.body182:                                      ; preds = %for.cond179
  %153 = load i32, i32* %A, align 4, !dbg !1786
  %154 = load i8*, i8** %src.addr, align 8, !dbg !1789
  %arrayidx183 = getelementptr inbounds i8, i8* %154, i64 0, !dbg !1789
  %155 = load i8, i8* %arrayidx183, align 1, !dbg !1789
  %conv184 = zext i8 %155 to i32, !dbg !1789
  %mul185 = mul nsw i32 %153, %conv184, !dbg !1790
  %156 = load i32, i32* %E, align 4, !dbg !1791
  %157 = load i64, i64* %step, align 8, !dbg !1792
  %add186 = add nsw i64 %157, 0, !dbg !1793
  %158 = load i8*, i8** %src.addr, align 8, !dbg !1794
  %arrayidx187 = getelementptr inbounds i8, i8* %158, i64 %add186, !dbg !1794
  %159 = load i8, i8* %arrayidx187, align 1, !dbg !1794
  %conv188 = zext i8 %159 to i32, !dbg !1794
  %mul189 = mul nsw i32 %156, %conv188, !dbg !1795
  %add190 = add nsw i32 %mul185, %mul189, !dbg !1796
  %160 = load i32, i32* %bias, align 4, !dbg !1797
  %add191 = add nsw i32 %add190, %160, !dbg !1798
  %shr192 = ashr i32 %add191, 6, !dbg !1799
  %conv193 = trunc i32 %shr192 to i8, !dbg !1800
  %161 = load i8*, i8** %dst.addr, align 8, !dbg !1801
  %arrayidx194 = getelementptr inbounds i8, i8* %161, i64 0, !dbg !1801
  store i8 %conv193, i8* %arrayidx194, align 1, !dbg !1802
  %162 = load i32, i32* %A, align 4, !dbg !1803
  %163 = load i8*, i8** %src.addr, align 8, !dbg !1804
  %arrayidx195 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !1804
  %164 = load i8, i8* %arrayidx195, align 1, !dbg !1804
  %conv196 = zext i8 %164 to i32, !dbg !1804
  %mul197 = mul nsw i32 %162, %conv196, !dbg !1805
  %165 = load i32, i32* %E, align 4, !dbg !1806
  %166 = load i64, i64* %step, align 8, !dbg !1807
  %add198 = add nsw i64 %166, 1, !dbg !1808
  %167 = load i8*, i8** %src.addr, align 8, !dbg !1809
  %arrayidx199 = getelementptr inbounds i8, i8* %167, i64 %add198, !dbg !1809
  %168 = load i8, i8* %arrayidx199, align 1, !dbg !1809
  %conv200 = zext i8 %168 to i32, !dbg !1809
  %mul201 = mul nsw i32 %165, %conv200, !dbg !1810
  %add202 = add nsw i32 %mul197, %mul201, !dbg !1811
  %169 = load i32, i32* %bias, align 4, !dbg !1812
  %add203 = add nsw i32 %add202, %169, !dbg !1813
  %shr204 = ashr i32 %add203, 6, !dbg !1814
  %conv205 = trunc i32 %shr204 to i8, !dbg !1815
  %170 = load i8*, i8** %dst.addr, align 8, !dbg !1816
  %arrayidx206 = getelementptr inbounds i8, i8* %170, i64 1, !dbg !1816
  store i8 %conv205, i8* %arrayidx206, align 1, !dbg !1817
  %171 = load i32, i32* %A, align 4, !dbg !1818
  %172 = load i8*, i8** %src.addr, align 8, !dbg !1819
  %arrayidx207 = getelementptr inbounds i8, i8* %172, i64 2, !dbg !1819
  %173 = load i8, i8* %arrayidx207, align 1, !dbg !1819
  %conv208 = zext i8 %173 to i32, !dbg !1819
  %mul209 = mul nsw i32 %171, %conv208, !dbg !1820
  %174 = load i32, i32* %E, align 4, !dbg !1821
  %175 = load i64, i64* %step, align 8, !dbg !1822
  %add210 = add nsw i64 %175, 2, !dbg !1823
  %176 = load i8*, i8** %src.addr, align 8, !dbg !1824
  %arrayidx211 = getelementptr inbounds i8, i8* %176, i64 %add210, !dbg !1824
  %177 = load i8, i8* %arrayidx211, align 1, !dbg !1824
  %conv212 = zext i8 %177 to i32, !dbg !1824
  %mul213 = mul nsw i32 %174, %conv212, !dbg !1825
  %add214 = add nsw i32 %mul209, %mul213, !dbg !1826
  %178 = load i32, i32* %bias, align 4, !dbg !1827
  %add215 = add nsw i32 %add214, %178, !dbg !1828
  %shr216 = ashr i32 %add215, 6, !dbg !1829
  %conv217 = trunc i32 %shr216 to i8, !dbg !1830
  %179 = load i8*, i8** %dst.addr, align 8, !dbg !1831
  %arrayidx218 = getelementptr inbounds i8, i8* %179, i64 2, !dbg !1831
  store i8 %conv217, i8* %arrayidx218, align 1, !dbg !1832
  %180 = load i32, i32* %A, align 4, !dbg !1833
  %181 = load i8*, i8** %src.addr, align 8, !dbg !1834
  %arrayidx219 = getelementptr inbounds i8, i8* %181, i64 3, !dbg !1834
  %182 = load i8, i8* %arrayidx219, align 1, !dbg !1834
  %conv220 = zext i8 %182 to i32, !dbg !1834
  %mul221 = mul nsw i32 %180, %conv220, !dbg !1835
  %183 = load i32, i32* %E, align 4, !dbg !1836
  %184 = load i64, i64* %step, align 8, !dbg !1837
  %add222 = add nsw i64 %184, 3, !dbg !1838
  %185 = load i8*, i8** %src.addr, align 8, !dbg !1839
  %arrayidx223 = getelementptr inbounds i8, i8* %185, i64 %add222, !dbg !1839
  %186 = load i8, i8* %arrayidx223, align 1, !dbg !1839
  %conv224 = zext i8 %186 to i32, !dbg !1839
  %mul225 = mul nsw i32 %183, %conv224, !dbg !1840
  %add226 = add nsw i32 %mul221, %mul225, !dbg !1841
  %187 = load i32, i32* %bias, align 4, !dbg !1842
  %add227 = add nsw i32 %add226, %187, !dbg !1843
  %shr228 = ashr i32 %add227, 6, !dbg !1844
  %conv229 = trunc i32 %shr228 to i8, !dbg !1845
  %188 = load i8*, i8** %dst.addr, align 8, !dbg !1846
  %arrayidx230 = getelementptr inbounds i8, i8* %188, i64 3, !dbg !1846
  store i8 %conv229, i8* %arrayidx230, align 1, !dbg !1847
  %189 = load i32, i32* %A, align 4, !dbg !1848
  %190 = load i8*, i8** %src.addr, align 8, !dbg !1849
  %arrayidx231 = getelementptr inbounds i8, i8* %190, i64 4, !dbg !1849
  %191 = load i8, i8* %arrayidx231, align 1, !dbg !1849
  %conv232 = zext i8 %191 to i32, !dbg !1849
  %mul233 = mul nsw i32 %189, %conv232, !dbg !1850
  %192 = load i32, i32* %E, align 4, !dbg !1851
  %193 = load i64, i64* %step, align 8, !dbg !1852
  %add234 = add nsw i64 %193, 4, !dbg !1853
  %194 = load i8*, i8** %src.addr, align 8, !dbg !1854
  %arrayidx235 = getelementptr inbounds i8, i8* %194, i64 %add234, !dbg !1854
  %195 = load i8, i8* %arrayidx235, align 1, !dbg !1854
  %conv236 = zext i8 %195 to i32, !dbg !1854
  %mul237 = mul nsw i32 %192, %conv236, !dbg !1855
  %add238 = add nsw i32 %mul233, %mul237, !dbg !1856
  %196 = load i32, i32* %bias, align 4, !dbg !1857
  %add239 = add nsw i32 %add238, %196, !dbg !1858
  %shr240 = ashr i32 %add239, 6, !dbg !1859
  %conv241 = trunc i32 %shr240 to i8, !dbg !1860
  %197 = load i8*, i8** %dst.addr, align 8, !dbg !1861
  %arrayidx242 = getelementptr inbounds i8, i8* %197, i64 4, !dbg !1861
  store i8 %conv241, i8* %arrayidx242, align 1, !dbg !1862
  %198 = load i32, i32* %A, align 4, !dbg !1863
  %199 = load i8*, i8** %src.addr, align 8, !dbg !1864
  %arrayidx243 = getelementptr inbounds i8, i8* %199, i64 5, !dbg !1864
  %200 = load i8, i8* %arrayidx243, align 1, !dbg !1864
  %conv244 = zext i8 %200 to i32, !dbg !1864
  %mul245 = mul nsw i32 %198, %conv244, !dbg !1865
  %201 = load i32, i32* %E, align 4, !dbg !1866
  %202 = load i64, i64* %step, align 8, !dbg !1867
  %add246 = add nsw i64 %202, 5, !dbg !1868
  %203 = load i8*, i8** %src.addr, align 8, !dbg !1869
  %arrayidx247 = getelementptr inbounds i8, i8* %203, i64 %add246, !dbg !1869
  %204 = load i8, i8* %arrayidx247, align 1, !dbg !1869
  %conv248 = zext i8 %204 to i32, !dbg !1869
  %mul249 = mul nsw i32 %201, %conv248, !dbg !1870
  %add250 = add nsw i32 %mul245, %mul249, !dbg !1871
  %205 = load i32, i32* %bias, align 4, !dbg !1872
  %add251 = add nsw i32 %add250, %205, !dbg !1873
  %shr252 = ashr i32 %add251, 6, !dbg !1874
  %conv253 = trunc i32 %shr252 to i8, !dbg !1875
  %206 = load i8*, i8** %dst.addr, align 8, !dbg !1876
  %arrayidx254 = getelementptr inbounds i8, i8* %206, i64 5, !dbg !1876
  store i8 %conv253, i8* %arrayidx254, align 1, !dbg !1877
  %207 = load i32, i32* %A, align 4, !dbg !1878
  %208 = load i8*, i8** %src.addr, align 8, !dbg !1879
  %arrayidx255 = getelementptr inbounds i8, i8* %208, i64 6, !dbg !1879
  %209 = load i8, i8* %arrayidx255, align 1, !dbg !1879
  %conv256 = zext i8 %209 to i32, !dbg !1879
  %mul257 = mul nsw i32 %207, %conv256, !dbg !1880
  %210 = load i32, i32* %E, align 4, !dbg !1881
  %211 = load i64, i64* %step, align 8, !dbg !1882
  %add258 = add nsw i64 %211, 6, !dbg !1883
  %212 = load i8*, i8** %src.addr, align 8, !dbg !1884
  %arrayidx259 = getelementptr inbounds i8, i8* %212, i64 %add258, !dbg !1884
  %213 = load i8, i8* %arrayidx259, align 1, !dbg !1884
  %conv260 = zext i8 %213 to i32, !dbg !1884
  %mul261 = mul nsw i32 %210, %conv260, !dbg !1885
  %add262 = add nsw i32 %mul257, %mul261, !dbg !1886
  %214 = load i32, i32* %bias, align 4, !dbg !1887
  %add263 = add nsw i32 %add262, %214, !dbg !1888
  %shr264 = ashr i32 %add263, 6, !dbg !1889
  %conv265 = trunc i32 %shr264 to i8, !dbg !1890
  %215 = load i8*, i8** %dst.addr, align 8, !dbg !1891
  %arrayidx266 = getelementptr inbounds i8, i8* %215, i64 6, !dbg !1891
  store i8 %conv265, i8* %arrayidx266, align 1, !dbg !1892
  %216 = load i32, i32* %A, align 4, !dbg !1893
  %217 = load i8*, i8** %src.addr, align 8, !dbg !1894
  %arrayidx267 = getelementptr inbounds i8, i8* %217, i64 7, !dbg !1894
  %218 = load i8, i8* %arrayidx267, align 1, !dbg !1894
  %conv268 = zext i8 %218 to i32, !dbg !1894
  %mul269 = mul nsw i32 %216, %conv268, !dbg !1895
  %219 = load i32, i32* %E, align 4, !dbg !1896
  %220 = load i64, i64* %step, align 8, !dbg !1897
  %add270 = add nsw i64 %220, 7, !dbg !1898
  %221 = load i8*, i8** %src.addr, align 8, !dbg !1899
  %arrayidx271 = getelementptr inbounds i8, i8* %221, i64 %add270, !dbg !1899
  %222 = load i8, i8* %arrayidx271, align 1, !dbg !1899
  %conv272 = zext i8 %222 to i32, !dbg !1899
  %mul273 = mul nsw i32 %219, %conv272, !dbg !1900
  %add274 = add nsw i32 %mul269, %mul273, !dbg !1901
  %223 = load i32, i32* %bias, align 4, !dbg !1902
  %add275 = add nsw i32 %add274, %223, !dbg !1903
  %shr276 = ashr i32 %add275, 6, !dbg !1904
  %conv277 = trunc i32 %shr276 to i8, !dbg !1905
  %224 = load i8*, i8** %dst.addr, align 8, !dbg !1906
  %arrayidx278 = getelementptr inbounds i8, i8* %224, i64 7, !dbg !1906
  store i8 %conv277, i8* %arrayidx278, align 1, !dbg !1907
  %225 = load i64, i64* %stride.addr, align 8, !dbg !1908
  %226 = load i8*, i8** %dst.addr, align 8, !dbg !1909
  %add.ptr279 = getelementptr inbounds i8, i8* %226, i64 %225, !dbg !1909
  store i8* %add.ptr279, i8** %dst.addr, align 8, !dbg !1909
  %227 = load i64, i64* %stride.addr, align 8, !dbg !1910
  %228 = load i8*, i8** %src.addr, align 8, !dbg !1911
  %add.ptr280 = getelementptr inbounds i8, i8* %228, i64 %227, !dbg !1911
  store i8* %add.ptr280, i8** %src.addr, align 8, !dbg !1911
  br label %for.inc281, !dbg !1912

for.inc281:                                       ; preds = %for.body182
  %229 = load i32, i32* %i, align 4, !dbg !1913
  %inc282 = add nsw i32 %229, 1, !dbg !1913
  store i32 %inc282, i32* %i, align 4, !dbg !1913
  br label %for.cond179, !dbg !1915, !llvm.loop !1916

for.end283:                                       ; preds = %for.cond179
  br label %if.end

if.end:                                           ; preds = %for.end283, %for.end
  ret void, !dbg !1918
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_chroma_mc4_c(i8* %dst, i8* %src, i64 %stride, i32 %h, i32 %x, i32 %y) #3 !dbg !1920 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %C = alloca i32, align 4
  %D = alloca i32, align 4
  %i = alloca i32, align 4
  %bias = alloca i32, align 4
  %E = alloca i32, align 4
  %step = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1921, metadata !113), !dbg !1922
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1923, metadata !113), !dbg !1924
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !1925, metadata !113), !dbg !1926
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1927, metadata !113), !dbg !1928
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !1929, metadata !113), !dbg !1930
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !1931, metadata !113), !dbg !1932
  call void @llvm.dbg.declare(metadata i32* %A, metadata !1933, metadata !113), !dbg !1934
  %0 = load i32, i32* %x.addr, align 4, !dbg !1935
  %sub = sub nsw i32 8, %0, !dbg !1936
  %1 = load i32, i32* %y.addr, align 4, !dbg !1937
  %sub1 = sub nsw i32 8, %1, !dbg !1938
  %mul = mul nsw i32 %sub, %sub1, !dbg !1939
  store i32 %mul, i32* %A, align 4, !dbg !1934
  call void @llvm.dbg.declare(metadata i32* %B, metadata !1940, metadata !113), !dbg !1941
  %2 = load i32, i32* %x.addr, align 4, !dbg !1942
  %3 = load i32, i32* %y.addr, align 4, !dbg !1943
  %sub2 = sub nsw i32 8, %3, !dbg !1944
  %mul3 = mul nsw i32 %2, %sub2, !dbg !1945
  store i32 %mul3, i32* %B, align 4, !dbg !1941
  call void @llvm.dbg.declare(metadata i32* %C, metadata !1946, metadata !113), !dbg !1947
  %4 = load i32, i32* %x.addr, align 4, !dbg !1948
  %sub4 = sub nsw i32 8, %4, !dbg !1949
  %5 = load i32, i32* %y.addr, align 4, !dbg !1950
  %mul5 = mul nsw i32 %sub4, %5, !dbg !1951
  store i32 %mul5, i32* %C, align 4, !dbg !1947
  call void @llvm.dbg.declare(metadata i32* %D, metadata !1952, metadata !113), !dbg !1953
  %6 = load i32, i32* %x.addr, align 4, !dbg !1954
  %7 = load i32, i32* %y.addr, align 4, !dbg !1955
  %mul6 = mul nsw i32 %6, %7, !dbg !1956
  store i32 %mul6, i32* %D, align 4, !dbg !1953
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1957, metadata !113), !dbg !1958
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !1959, metadata !113), !dbg !1960
  %8 = load i32, i32* %x.addr, align 4, !dbg !1961
  %shr = ashr i32 %8, 1, !dbg !1962
  %idxprom = sext i32 %shr to i64, !dbg !1963
  %9 = load i32, i32* %y.addr, align 4, !dbg !1964
  %shr7 = ashr i32 %9, 1, !dbg !1965
  %idxprom8 = sext i32 %shr7 to i64, !dbg !1963
  %arrayidx = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @rv40_bias, i64 0, i64 %idxprom8, !dbg !1963
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !1963
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !1963
  store i32 %10, i32* %bias, align 4, !dbg !1960
  %11 = load i32, i32* %D, align 4, !dbg !1966
  %tobool = icmp ne i32 %11, 0, !dbg !1966
  br i1 %tobool, label %if.then, label %if.else, !dbg !1968

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1969
  br label %for.cond, !dbg !1973

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !1974
  %13 = load i32, i32* %h.addr, align 4, !dbg !1977
  %cmp = icmp slt i32 %12, %13, !dbg !1978
  br i1 %cmp, label %for.body, label %for.end, !dbg !1979

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %A, align 4, !dbg !1980
  %15 = load i8*, i8** %src.addr, align 8, !dbg !1983
  %arrayidx10 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !1983
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !1983
  %conv = zext i8 %16 to i32, !dbg !1983
  %mul11 = mul nsw i32 %14, %conv, !dbg !1984
  %17 = load i32, i32* %B, align 4, !dbg !1985
  %18 = load i8*, i8** %src.addr, align 8, !dbg !1986
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !1986
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !1986
  %conv13 = zext i8 %19 to i32, !dbg !1986
  %mul14 = mul nsw i32 %17, %conv13, !dbg !1987
  %add = add nsw i32 %mul11, %mul14, !dbg !1988
  %20 = load i32, i32* %C, align 4, !dbg !1989
  %21 = load i64, i64* %stride.addr, align 8, !dbg !1990
  %add15 = add nsw i64 %21, 0, !dbg !1991
  %22 = load i8*, i8** %src.addr, align 8, !dbg !1992
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 %add15, !dbg !1992
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !1992
  %conv17 = zext i8 %23 to i32, !dbg !1992
  %mul18 = mul nsw i32 %20, %conv17, !dbg !1993
  %add19 = add nsw i32 %add, %mul18, !dbg !1994
  %24 = load i32, i32* %D, align 4, !dbg !1995
  %25 = load i64, i64* %stride.addr, align 8, !dbg !1996
  %add20 = add nsw i64 %25, 1, !dbg !1997
  %26 = load i8*, i8** %src.addr, align 8, !dbg !1998
  %arrayidx21 = getelementptr inbounds i8, i8* %26, i64 %add20, !dbg !1998
  %27 = load i8, i8* %arrayidx21, align 1, !dbg !1998
  %conv22 = zext i8 %27 to i32, !dbg !1998
  %mul23 = mul nsw i32 %24, %conv22, !dbg !1999
  %add24 = add nsw i32 %add19, %mul23, !dbg !2000
  %28 = load i32, i32* %bias, align 4, !dbg !2001
  %add25 = add nsw i32 %add24, %28, !dbg !2002
  %shr26 = ashr i32 %add25, 6, !dbg !2003
  %conv27 = trunc i32 %shr26 to i8, !dbg !2004
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !2005
  %arrayidx28 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !2005
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !2006
  %30 = load i32, i32* %A, align 4, !dbg !2007
  %31 = load i8*, i8** %src.addr, align 8, !dbg !2008
  %arrayidx29 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !2008
  %32 = load i8, i8* %arrayidx29, align 1, !dbg !2008
  %conv30 = zext i8 %32 to i32, !dbg !2008
  %mul31 = mul nsw i32 %30, %conv30, !dbg !2009
  %33 = load i32, i32* %B, align 4, !dbg !2010
  %34 = load i8*, i8** %src.addr, align 8, !dbg !2011
  %arrayidx32 = getelementptr inbounds i8, i8* %34, i64 2, !dbg !2011
  %35 = load i8, i8* %arrayidx32, align 1, !dbg !2011
  %conv33 = zext i8 %35 to i32, !dbg !2011
  %mul34 = mul nsw i32 %33, %conv33, !dbg !2012
  %add35 = add nsw i32 %mul31, %mul34, !dbg !2013
  %36 = load i32, i32* %C, align 4, !dbg !2014
  %37 = load i64, i64* %stride.addr, align 8, !dbg !2015
  %add36 = add nsw i64 %37, 1, !dbg !2016
  %38 = load i8*, i8** %src.addr, align 8, !dbg !2017
  %arrayidx37 = getelementptr inbounds i8, i8* %38, i64 %add36, !dbg !2017
  %39 = load i8, i8* %arrayidx37, align 1, !dbg !2017
  %conv38 = zext i8 %39 to i32, !dbg !2017
  %mul39 = mul nsw i32 %36, %conv38, !dbg !2018
  %add40 = add nsw i32 %add35, %mul39, !dbg !2019
  %40 = load i32, i32* %D, align 4, !dbg !2020
  %41 = load i64, i64* %stride.addr, align 8, !dbg !2021
  %add41 = add nsw i64 %41, 2, !dbg !2022
  %42 = load i8*, i8** %src.addr, align 8, !dbg !2023
  %arrayidx42 = getelementptr inbounds i8, i8* %42, i64 %add41, !dbg !2023
  %43 = load i8, i8* %arrayidx42, align 1, !dbg !2023
  %conv43 = zext i8 %43 to i32, !dbg !2023
  %mul44 = mul nsw i32 %40, %conv43, !dbg !2024
  %add45 = add nsw i32 %add40, %mul44, !dbg !2025
  %44 = load i32, i32* %bias, align 4, !dbg !2026
  %add46 = add nsw i32 %add45, %44, !dbg !2027
  %shr47 = ashr i32 %add46, 6, !dbg !2028
  %conv48 = trunc i32 %shr47 to i8, !dbg !2029
  %45 = load i8*, i8** %dst.addr, align 8, !dbg !2030
  %arrayidx49 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !2030
  store i8 %conv48, i8* %arrayidx49, align 1, !dbg !2031
  %46 = load i32, i32* %A, align 4, !dbg !2032
  %47 = load i8*, i8** %src.addr, align 8, !dbg !2033
  %arrayidx50 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !2033
  %48 = load i8, i8* %arrayidx50, align 1, !dbg !2033
  %conv51 = zext i8 %48 to i32, !dbg !2033
  %mul52 = mul nsw i32 %46, %conv51, !dbg !2034
  %49 = load i32, i32* %B, align 4, !dbg !2035
  %50 = load i8*, i8** %src.addr, align 8, !dbg !2036
  %arrayidx53 = getelementptr inbounds i8, i8* %50, i64 3, !dbg !2036
  %51 = load i8, i8* %arrayidx53, align 1, !dbg !2036
  %conv54 = zext i8 %51 to i32, !dbg !2036
  %mul55 = mul nsw i32 %49, %conv54, !dbg !2037
  %add56 = add nsw i32 %mul52, %mul55, !dbg !2038
  %52 = load i32, i32* %C, align 4, !dbg !2039
  %53 = load i64, i64* %stride.addr, align 8, !dbg !2040
  %add57 = add nsw i64 %53, 2, !dbg !2041
  %54 = load i8*, i8** %src.addr, align 8, !dbg !2042
  %arrayidx58 = getelementptr inbounds i8, i8* %54, i64 %add57, !dbg !2042
  %55 = load i8, i8* %arrayidx58, align 1, !dbg !2042
  %conv59 = zext i8 %55 to i32, !dbg !2042
  %mul60 = mul nsw i32 %52, %conv59, !dbg !2043
  %add61 = add nsw i32 %add56, %mul60, !dbg !2044
  %56 = load i32, i32* %D, align 4, !dbg !2045
  %57 = load i64, i64* %stride.addr, align 8, !dbg !2046
  %add62 = add nsw i64 %57, 3, !dbg !2047
  %58 = load i8*, i8** %src.addr, align 8, !dbg !2048
  %arrayidx63 = getelementptr inbounds i8, i8* %58, i64 %add62, !dbg !2048
  %59 = load i8, i8* %arrayidx63, align 1, !dbg !2048
  %conv64 = zext i8 %59 to i32, !dbg !2048
  %mul65 = mul nsw i32 %56, %conv64, !dbg !2049
  %add66 = add nsw i32 %add61, %mul65, !dbg !2050
  %60 = load i32, i32* %bias, align 4, !dbg !2051
  %add67 = add nsw i32 %add66, %60, !dbg !2052
  %shr68 = ashr i32 %add67, 6, !dbg !2053
  %conv69 = trunc i32 %shr68 to i8, !dbg !2054
  %61 = load i8*, i8** %dst.addr, align 8, !dbg !2055
  %arrayidx70 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !2055
  store i8 %conv69, i8* %arrayidx70, align 1, !dbg !2056
  %62 = load i32, i32* %A, align 4, !dbg !2057
  %63 = load i8*, i8** %src.addr, align 8, !dbg !2058
  %arrayidx71 = getelementptr inbounds i8, i8* %63, i64 3, !dbg !2058
  %64 = load i8, i8* %arrayidx71, align 1, !dbg !2058
  %conv72 = zext i8 %64 to i32, !dbg !2058
  %mul73 = mul nsw i32 %62, %conv72, !dbg !2059
  %65 = load i32, i32* %B, align 4, !dbg !2060
  %66 = load i8*, i8** %src.addr, align 8, !dbg !2061
  %arrayidx74 = getelementptr inbounds i8, i8* %66, i64 4, !dbg !2061
  %67 = load i8, i8* %arrayidx74, align 1, !dbg !2061
  %conv75 = zext i8 %67 to i32, !dbg !2061
  %mul76 = mul nsw i32 %65, %conv75, !dbg !2062
  %add77 = add nsw i32 %mul73, %mul76, !dbg !2063
  %68 = load i32, i32* %C, align 4, !dbg !2064
  %69 = load i64, i64* %stride.addr, align 8, !dbg !2065
  %add78 = add nsw i64 %69, 3, !dbg !2066
  %70 = load i8*, i8** %src.addr, align 8, !dbg !2067
  %arrayidx79 = getelementptr inbounds i8, i8* %70, i64 %add78, !dbg !2067
  %71 = load i8, i8* %arrayidx79, align 1, !dbg !2067
  %conv80 = zext i8 %71 to i32, !dbg !2067
  %mul81 = mul nsw i32 %68, %conv80, !dbg !2068
  %add82 = add nsw i32 %add77, %mul81, !dbg !2069
  %72 = load i32, i32* %D, align 4, !dbg !2070
  %73 = load i64, i64* %stride.addr, align 8, !dbg !2071
  %add83 = add nsw i64 %73, 4, !dbg !2072
  %74 = load i8*, i8** %src.addr, align 8, !dbg !2073
  %arrayidx84 = getelementptr inbounds i8, i8* %74, i64 %add83, !dbg !2073
  %75 = load i8, i8* %arrayidx84, align 1, !dbg !2073
  %conv85 = zext i8 %75 to i32, !dbg !2073
  %mul86 = mul nsw i32 %72, %conv85, !dbg !2074
  %add87 = add nsw i32 %add82, %mul86, !dbg !2075
  %76 = load i32, i32* %bias, align 4, !dbg !2076
  %add88 = add nsw i32 %add87, %76, !dbg !2077
  %shr89 = ashr i32 %add88, 6, !dbg !2078
  %conv90 = trunc i32 %shr89 to i8, !dbg !2079
  %77 = load i8*, i8** %dst.addr, align 8, !dbg !2080
  %arrayidx91 = getelementptr inbounds i8, i8* %77, i64 3, !dbg !2080
  store i8 %conv90, i8* %arrayidx91, align 1, !dbg !2081
  %78 = load i64, i64* %stride.addr, align 8, !dbg !2082
  %79 = load i8*, i8** %dst.addr, align 8, !dbg !2083
  %add.ptr = getelementptr inbounds i8, i8* %79, i64 %78, !dbg !2083
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2083
  %80 = load i64, i64* %stride.addr, align 8, !dbg !2084
  %81 = load i8*, i8** %src.addr, align 8, !dbg !2085
  %add.ptr92 = getelementptr inbounds i8, i8* %81, i64 %80, !dbg !2085
  store i8* %add.ptr92, i8** %src.addr, align 8, !dbg !2085
  br label %for.inc, !dbg !2086

for.inc:                                          ; preds = %for.body
  %82 = load i32, i32* %i, align 4, !dbg !2087
  %inc = add nsw i32 %82, 1, !dbg !2087
  store i32 %inc, i32* %i, align 4, !dbg !2087
  br label %for.cond, !dbg !2089, !llvm.loop !2090

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2092

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %E, metadata !2094, metadata !113), !dbg !2096
  %83 = load i32, i32* %B, align 4, !dbg !2097
  %84 = load i32, i32* %C, align 4, !dbg !2099
  %add93 = add nsw i32 %83, %84, !dbg !2100
  store i32 %add93, i32* %E, align 4, !dbg !2101
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2102, metadata !113), !dbg !2103
  %85 = load i32, i32* %C, align 4, !dbg !2104
  %tobool94 = icmp ne i32 %85, 0, !dbg !2104
  br i1 %tobool94, label %cond.true, label %cond.false, !dbg !2104

cond.true:                                        ; preds = %if.else
  %86 = load i64, i64* %stride.addr, align 8, !dbg !2105
  br label %cond.end, !dbg !2107

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !2108

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %86, %cond.true ], [ 1, %cond.false ], !dbg !2110
  store i64 %cond, i64* %step, align 8, !dbg !2112
  store i32 0, i32* %i, align 4, !dbg !2113
  br label %for.cond95, !dbg !2114

for.cond95:                                       ; preds = %for.inc149, %cond.end
  %87 = load i32, i32* %i, align 4, !dbg !2115
  %88 = load i32, i32* %h.addr, align 4, !dbg !2119
  %cmp96 = icmp slt i32 %87, %88, !dbg !2120
  br i1 %cmp96, label %for.body98, label %for.end151, !dbg !2121

for.body98:                                       ; preds = %for.cond95
  %89 = load i32, i32* %A, align 4, !dbg !2122
  %90 = load i8*, i8** %src.addr, align 8, !dbg !2125
  %arrayidx99 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !2125
  %91 = load i8, i8* %arrayidx99, align 1, !dbg !2125
  %conv100 = zext i8 %91 to i32, !dbg !2125
  %mul101 = mul nsw i32 %89, %conv100, !dbg !2126
  %92 = load i32, i32* %E, align 4, !dbg !2127
  %93 = load i64, i64* %step, align 8, !dbg !2128
  %add102 = add nsw i64 %93, 0, !dbg !2129
  %94 = load i8*, i8** %src.addr, align 8, !dbg !2130
  %arrayidx103 = getelementptr inbounds i8, i8* %94, i64 %add102, !dbg !2130
  %95 = load i8, i8* %arrayidx103, align 1, !dbg !2130
  %conv104 = zext i8 %95 to i32, !dbg !2130
  %mul105 = mul nsw i32 %92, %conv104, !dbg !2131
  %add106 = add nsw i32 %mul101, %mul105, !dbg !2132
  %96 = load i32, i32* %bias, align 4, !dbg !2133
  %add107 = add nsw i32 %add106, %96, !dbg !2134
  %shr108 = ashr i32 %add107, 6, !dbg !2135
  %conv109 = trunc i32 %shr108 to i8, !dbg !2136
  %97 = load i8*, i8** %dst.addr, align 8, !dbg !2137
  %arrayidx110 = getelementptr inbounds i8, i8* %97, i64 0, !dbg !2137
  store i8 %conv109, i8* %arrayidx110, align 1, !dbg !2138
  %98 = load i32, i32* %A, align 4, !dbg !2139
  %99 = load i8*, i8** %src.addr, align 8, !dbg !2140
  %arrayidx111 = getelementptr inbounds i8, i8* %99, i64 1, !dbg !2140
  %100 = load i8, i8* %arrayidx111, align 1, !dbg !2140
  %conv112 = zext i8 %100 to i32, !dbg !2140
  %mul113 = mul nsw i32 %98, %conv112, !dbg !2141
  %101 = load i32, i32* %E, align 4, !dbg !2142
  %102 = load i64, i64* %step, align 8, !dbg !2143
  %add114 = add nsw i64 %102, 1, !dbg !2144
  %103 = load i8*, i8** %src.addr, align 8, !dbg !2145
  %arrayidx115 = getelementptr inbounds i8, i8* %103, i64 %add114, !dbg !2145
  %104 = load i8, i8* %arrayidx115, align 1, !dbg !2145
  %conv116 = zext i8 %104 to i32, !dbg !2145
  %mul117 = mul nsw i32 %101, %conv116, !dbg !2146
  %add118 = add nsw i32 %mul113, %mul117, !dbg !2147
  %105 = load i32, i32* %bias, align 4, !dbg !2148
  %add119 = add nsw i32 %add118, %105, !dbg !2149
  %shr120 = ashr i32 %add119, 6, !dbg !2150
  %conv121 = trunc i32 %shr120 to i8, !dbg !2151
  %106 = load i8*, i8** %dst.addr, align 8, !dbg !2152
  %arrayidx122 = getelementptr inbounds i8, i8* %106, i64 1, !dbg !2152
  store i8 %conv121, i8* %arrayidx122, align 1, !dbg !2153
  %107 = load i32, i32* %A, align 4, !dbg !2154
  %108 = load i8*, i8** %src.addr, align 8, !dbg !2155
  %arrayidx123 = getelementptr inbounds i8, i8* %108, i64 2, !dbg !2155
  %109 = load i8, i8* %arrayidx123, align 1, !dbg !2155
  %conv124 = zext i8 %109 to i32, !dbg !2155
  %mul125 = mul nsw i32 %107, %conv124, !dbg !2156
  %110 = load i32, i32* %E, align 4, !dbg !2157
  %111 = load i64, i64* %step, align 8, !dbg !2158
  %add126 = add nsw i64 %111, 2, !dbg !2159
  %112 = load i8*, i8** %src.addr, align 8, !dbg !2160
  %arrayidx127 = getelementptr inbounds i8, i8* %112, i64 %add126, !dbg !2160
  %113 = load i8, i8* %arrayidx127, align 1, !dbg !2160
  %conv128 = zext i8 %113 to i32, !dbg !2160
  %mul129 = mul nsw i32 %110, %conv128, !dbg !2161
  %add130 = add nsw i32 %mul125, %mul129, !dbg !2162
  %114 = load i32, i32* %bias, align 4, !dbg !2163
  %add131 = add nsw i32 %add130, %114, !dbg !2164
  %shr132 = ashr i32 %add131, 6, !dbg !2165
  %conv133 = trunc i32 %shr132 to i8, !dbg !2166
  %115 = load i8*, i8** %dst.addr, align 8, !dbg !2167
  %arrayidx134 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !2167
  store i8 %conv133, i8* %arrayidx134, align 1, !dbg !2168
  %116 = load i32, i32* %A, align 4, !dbg !2169
  %117 = load i8*, i8** %src.addr, align 8, !dbg !2170
  %arrayidx135 = getelementptr inbounds i8, i8* %117, i64 3, !dbg !2170
  %118 = load i8, i8* %arrayidx135, align 1, !dbg !2170
  %conv136 = zext i8 %118 to i32, !dbg !2170
  %mul137 = mul nsw i32 %116, %conv136, !dbg !2171
  %119 = load i32, i32* %E, align 4, !dbg !2172
  %120 = load i64, i64* %step, align 8, !dbg !2173
  %add138 = add nsw i64 %120, 3, !dbg !2174
  %121 = load i8*, i8** %src.addr, align 8, !dbg !2175
  %arrayidx139 = getelementptr inbounds i8, i8* %121, i64 %add138, !dbg !2175
  %122 = load i8, i8* %arrayidx139, align 1, !dbg !2175
  %conv140 = zext i8 %122 to i32, !dbg !2175
  %mul141 = mul nsw i32 %119, %conv140, !dbg !2176
  %add142 = add nsw i32 %mul137, %mul141, !dbg !2177
  %123 = load i32, i32* %bias, align 4, !dbg !2178
  %add143 = add nsw i32 %add142, %123, !dbg !2179
  %shr144 = ashr i32 %add143, 6, !dbg !2180
  %conv145 = trunc i32 %shr144 to i8, !dbg !2181
  %124 = load i8*, i8** %dst.addr, align 8, !dbg !2182
  %arrayidx146 = getelementptr inbounds i8, i8* %124, i64 3, !dbg !2182
  store i8 %conv145, i8* %arrayidx146, align 1, !dbg !2183
  %125 = load i64, i64* %stride.addr, align 8, !dbg !2184
  %126 = load i8*, i8** %dst.addr, align 8, !dbg !2185
  %add.ptr147 = getelementptr inbounds i8, i8* %126, i64 %125, !dbg !2185
  store i8* %add.ptr147, i8** %dst.addr, align 8, !dbg !2185
  %127 = load i64, i64* %stride.addr, align 8, !dbg !2186
  %128 = load i8*, i8** %src.addr, align 8, !dbg !2187
  %add.ptr148 = getelementptr inbounds i8, i8* %128, i64 %127, !dbg !2187
  store i8* %add.ptr148, i8** %src.addr, align 8, !dbg !2187
  br label %for.inc149, !dbg !2188

for.inc149:                                       ; preds = %for.body98
  %129 = load i32, i32* %i, align 4, !dbg !2189
  %inc150 = add nsw i32 %129, 1, !dbg !2189
  store i32 %inc150, i32* %i, align 4, !dbg !2189
  br label %for.cond95, !dbg !2191, !llvm.loop !2192

for.end151:                                       ; preds = %for.cond95
  br label %if.end

if.end:                                           ; preds = %for.end151, %for.end
  ret void, !dbg !2194
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_chroma_mc8_c(i8* %dst, i8* %src, i64 %stride, i32 %h, i32 %x, i32 %y) #3 !dbg !2196 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %C = alloca i32, align 4
  %D = alloca i32, align 4
  %i = alloca i32, align 4
  %bias = alloca i32, align 4
  %E = alloca i32, align 4
  %step = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2197, metadata !113), !dbg !2198
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !2199, metadata !113), !dbg !2200
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !2201, metadata !113), !dbg !2202
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2203, metadata !113), !dbg !2204
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !2205, metadata !113), !dbg !2206
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !2207, metadata !113), !dbg !2208
  call void @llvm.dbg.declare(metadata i32* %A, metadata !2209, metadata !113), !dbg !2210
  %0 = load i32, i32* %x.addr, align 4, !dbg !2211
  %sub = sub nsw i32 8, %0, !dbg !2212
  %1 = load i32, i32* %y.addr, align 4, !dbg !2213
  %sub1 = sub nsw i32 8, %1, !dbg !2214
  %mul = mul nsw i32 %sub, %sub1, !dbg !2215
  store i32 %mul, i32* %A, align 4, !dbg !2210
  call void @llvm.dbg.declare(metadata i32* %B, metadata !2216, metadata !113), !dbg !2217
  %2 = load i32, i32* %x.addr, align 4, !dbg !2218
  %3 = load i32, i32* %y.addr, align 4, !dbg !2219
  %sub2 = sub nsw i32 8, %3, !dbg !2220
  %mul3 = mul nsw i32 %2, %sub2, !dbg !2221
  store i32 %mul3, i32* %B, align 4, !dbg !2217
  call void @llvm.dbg.declare(metadata i32* %C, metadata !2222, metadata !113), !dbg !2223
  %4 = load i32, i32* %x.addr, align 4, !dbg !2224
  %sub4 = sub nsw i32 8, %4, !dbg !2225
  %5 = load i32, i32* %y.addr, align 4, !dbg !2226
  %mul5 = mul nsw i32 %sub4, %5, !dbg !2227
  store i32 %mul5, i32* %C, align 4, !dbg !2223
  call void @llvm.dbg.declare(metadata i32* %D, metadata !2228, metadata !113), !dbg !2229
  %6 = load i32, i32* %x.addr, align 4, !dbg !2230
  %7 = load i32, i32* %y.addr, align 4, !dbg !2231
  %mul6 = mul nsw i32 %6, %7, !dbg !2232
  store i32 %mul6, i32* %D, align 4, !dbg !2229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2233, metadata !113), !dbg !2234
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !2235, metadata !113), !dbg !2236
  %8 = load i32, i32* %x.addr, align 4, !dbg !2237
  %shr = ashr i32 %8, 1, !dbg !2238
  %idxprom = sext i32 %shr to i64, !dbg !2239
  %9 = load i32, i32* %y.addr, align 4, !dbg !2240
  %shr7 = ashr i32 %9, 1, !dbg !2241
  %idxprom8 = sext i32 %shr7 to i64, !dbg !2239
  %arrayidx = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @rv40_bias, i64 0, i64 %idxprom8, !dbg !2239
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !2239
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !2239
  store i32 %10, i32* %bias, align 4, !dbg !2236
  %11 = load i32, i32* %D, align 4, !dbg !2242
  %tobool = icmp ne i32 %11, 0, !dbg !2242
  br i1 %tobool, label %if.then, label %if.else, !dbg !2244

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2245
  br label %for.cond, !dbg !2249

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !2250
  %13 = load i32, i32* %h.addr, align 4, !dbg !2253
  %cmp = icmp slt i32 %12, %13, !dbg !2254
  br i1 %cmp, label %for.body, label %for.end, !dbg !2255

for.body:                                         ; preds = %for.cond
  %14 = load i8*, i8** %dst.addr, align 8, !dbg !2256
  %arrayidx10 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !2256
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !2256
  %conv = zext i8 %15 to i32, !dbg !2259
  %16 = load i32, i32* %A, align 4, !dbg !2260
  %17 = load i8*, i8** %src.addr, align 8, !dbg !2261
  %arrayidx11 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !2261
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !2261
  %conv12 = zext i8 %18 to i32, !dbg !2261
  %mul13 = mul nsw i32 %16, %conv12, !dbg !2262
  %19 = load i32, i32* %B, align 4, !dbg !2263
  %20 = load i8*, i8** %src.addr, align 8, !dbg !2264
  %arrayidx14 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !2264
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !2264
  %conv15 = zext i8 %21 to i32, !dbg !2264
  %mul16 = mul nsw i32 %19, %conv15, !dbg !2265
  %add = add nsw i32 %mul13, %mul16, !dbg !2266
  %22 = load i32, i32* %C, align 4, !dbg !2267
  %23 = load i64, i64* %stride.addr, align 8, !dbg !2268
  %add17 = add nsw i64 %23, 0, !dbg !2269
  %24 = load i8*, i8** %src.addr, align 8, !dbg !2270
  %arrayidx18 = getelementptr inbounds i8, i8* %24, i64 %add17, !dbg !2270
  %25 = load i8, i8* %arrayidx18, align 1, !dbg !2270
  %conv19 = zext i8 %25 to i32, !dbg !2270
  %mul20 = mul nsw i32 %22, %conv19, !dbg !2271
  %add21 = add nsw i32 %add, %mul20, !dbg !2272
  %26 = load i32, i32* %D, align 4, !dbg !2273
  %27 = load i64, i64* %stride.addr, align 8, !dbg !2274
  %add22 = add nsw i64 %27, 1, !dbg !2275
  %28 = load i8*, i8** %src.addr, align 8, !dbg !2276
  %arrayidx23 = getelementptr inbounds i8, i8* %28, i64 %add22, !dbg !2276
  %29 = load i8, i8* %arrayidx23, align 1, !dbg !2276
  %conv24 = zext i8 %29 to i32, !dbg !2276
  %mul25 = mul nsw i32 %26, %conv24, !dbg !2277
  %add26 = add nsw i32 %add21, %mul25, !dbg !2278
  %30 = load i32, i32* %bias, align 4, !dbg !2279
  %add27 = add nsw i32 %add26, %30, !dbg !2280
  %shr28 = ashr i32 %add27, 6, !dbg !2281
  %add29 = add nsw i32 %conv, %shr28, !dbg !2282
  %add30 = add nsw i32 %add29, 1, !dbg !2283
  %shr31 = ashr i32 %add30, 1, !dbg !2284
  %conv32 = trunc i32 %shr31 to i8, !dbg !2285
  %31 = load i8*, i8** %dst.addr, align 8, !dbg !2286
  %arrayidx33 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !2286
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !2287
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2288
  %arrayidx34 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !2288
  %33 = load i8, i8* %arrayidx34, align 1, !dbg !2288
  %conv35 = zext i8 %33 to i32, !dbg !2289
  %34 = load i32, i32* %A, align 4, !dbg !2290
  %35 = load i8*, i8** %src.addr, align 8, !dbg !2291
  %arrayidx36 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !2291
  %36 = load i8, i8* %arrayidx36, align 1, !dbg !2291
  %conv37 = zext i8 %36 to i32, !dbg !2291
  %mul38 = mul nsw i32 %34, %conv37, !dbg !2292
  %37 = load i32, i32* %B, align 4, !dbg !2293
  %38 = load i8*, i8** %src.addr, align 8, !dbg !2294
  %arrayidx39 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !2294
  %39 = load i8, i8* %arrayidx39, align 1, !dbg !2294
  %conv40 = zext i8 %39 to i32, !dbg !2294
  %mul41 = mul nsw i32 %37, %conv40, !dbg !2295
  %add42 = add nsw i32 %mul38, %mul41, !dbg !2296
  %40 = load i32, i32* %C, align 4, !dbg !2297
  %41 = load i64, i64* %stride.addr, align 8, !dbg !2298
  %add43 = add nsw i64 %41, 1, !dbg !2299
  %42 = load i8*, i8** %src.addr, align 8, !dbg !2300
  %arrayidx44 = getelementptr inbounds i8, i8* %42, i64 %add43, !dbg !2300
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !2300
  %conv45 = zext i8 %43 to i32, !dbg !2300
  %mul46 = mul nsw i32 %40, %conv45, !dbg !2301
  %add47 = add nsw i32 %add42, %mul46, !dbg !2302
  %44 = load i32, i32* %D, align 4, !dbg !2303
  %45 = load i64, i64* %stride.addr, align 8, !dbg !2304
  %add48 = add nsw i64 %45, 2, !dbg !2305
  %46 = load i8*, i8** %src.addr, align 8, !dbg !2306
  %arrayidx49 = getelementptr inbounds i8, i8* %46, i64 %add48, !dbg !2306
  %47 = load i8, i8* %arrayidx49, align 1, !dbg !2306
  %conv50 = zext i8 %47 to i32, !dbg !2306
  %mul51 = mul nsw i32 %44, %conv50, !dbg !2307
  %add52 = add nsw i32 %add47, %mul51, !dbg !2308
  %48 = load i32, i32* %bias, align 4, !dbg !2309
  %add53 = add nsw i32 %add52, %48, !dbg !2310
  %shr54 = ashr i32 %add53, 6, !dbg !2311
  %add55 = add nsw i32 %conv35, %shr54, !dbg !2312
  %add56 = add nsw i32 %add55, 1, !dbg !2313
  %shr57 = ashr i32 %add56, 1, !dbg !2314
  %conv58 = trunc i32 %shr57 to i8, !dbg !2315
  %49 = load i8*, i8** %dst.addr, align 8, !dbg !2316
  %arrayidx59 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !2316
  store i8 %conv58, i8* %arrayidx59, align 1, !dbg !2317
  %50 = load i8*, i8** %dst.addr, align 8, !dbg !2318
  %arrayidx60 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !2318
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !2318
  %conv61 = zext i8 %51 to i32, !dbg !2319
  %52 = load i32, i32* %A, align 4, !dbg !2320
  %53 = load i8*, i8** %src.addr, align 8, !dbg !2321
  %arrayidx62 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !2321
  %54 = load i8, i8* %arrayidx62, align 1, !dbg !2321
  %conv63 = zext i8 %54 to i32, !dbg !2321
  %mul64 = mul nsw i32 %52, %conv63, !dbg !2322
  %55 = load i32, i32* %B, align 4, !dbg !2323
  %56 = load i8*, i8** %src.addr, align 8, !dbg !2324
  %arrayidx65 = getelementptr inbounds i8, i8* %56, i64 3, !dbg !2324
  %57 = load i8, i8* %arrayidx65, align 1, !dbg !2324
  %conv66 = zext i8 %57 to i32, !dbg !2324
  %mul67 = mul nsw i32 %55, %conv66, !dbg !2325
  %add68 = add nsw i32 %mul64, %mul67, !dbg !2326
  %58 = load i32, i32* %C, align 4, !dbg !2327
  %59 = load i64, i64* %stride.addr, align 8, !dbg !2328
  %add69 = add nsw i64 %59, 2, !dbg !2329
  %60 = load i8*, i8** %src.addr, align 8, !dbg !2330
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %add69, !dbg !2330
  %61 = load i8, i8* %arrayidx70, align 1, !dbg !2330
  %conv71 = zext i8 %61 to i32, !dbg !2330
  %mul72 = mul nsw i32 %58, %conv71, !dbg !2331
  %add73 = add nsw i32 %add68, %mul72, !dbg !2332
  %62 = load i32, i32* %D, align 4, !dbg !2333
  %63 = load i64, i64* %stride.addr, align 8, !dbg !2334
  %add74 = add nsw i64 %63, 3, !dbg !2335
  %64 = load i8*, i8** %src.addr, align 8, !dbg !2336
  %arrayidx75 = getelementptr inbounds i8, i8* %64, i64 %add74, !dbg !2336
  %65 = load i8, i8* %arrayidx75, align 1, !dbg !2336
  %conv76 = zext i8 %65 to i32, !dbg !2336
  %mul77 = mul nsw i32 %62, %conv76, !dbg !2337
  %add78 = add nsw i32 %add73, %mul77, !dbg !2338
  %66 = load i32, i32* %bias, align 4, !dbg !2339
  %add79 = add nsw i32 %add78, %66, !dbg !2340
  %shr80 = ashr i32 %add79, 6, !dbg !2341
  %add81 = add nsw i32 %conv61, %shr80, !dbg !2342
  %add82 = add nsw i32 %add81, 1, !dbg !2343
  %shr83 = ashr i32 %add82, 1, !dbg !2344
  %conv84 = trunc i32 %shr83 to i8, !dbg !2345
  %67 = load i8*, i8** %dst.addr, align 8, !dbg !2346
  %arrayidx85 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !2346
  store i8 %conv84, i8* %arrayidx85, align 1, !dbg !2347
  %68 = load i8*, i8** %dst.addr, align 8, !dbg !2348
  %arrayidx86 = getelementptr inbounds i8, i8* %68, i64 3, !dbg !2348
  %69 = load i8, i8* %arrayidx86, align 1, !dbg !2348
  %conv87 = zext i8 %69 to i32, !dbg !2349
  %70 = load i32, i32* %A, align 4, !dbg !2350
  %71 = load i8*, i8** %src.addr, align 8, !dbg !2351
  %arrayidx88 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !2351
  %72 = load i8, i8* %arrayidx88, align 1, !dbg !2351
  %conv89 = zext i8 %72 to i32, !dbg !2351
  %mul90 = mul nsw i32 %70, %conv89, !dbg !2352
  %73 = load i32, i32* %B, align 4, !dbg !2353
  %74 = load i8*, i8** %src.addr, align 8, !dbg !2354
  %arrayidx91 = getelementptr inbounds i8, i8* %74, i64 4, !dbg !2354
  %75 = load i8, i8* %arrayidx91, align 1, !dbg !2354
  %conv92 = zext i8 %75 to i32, !dbg !2354
  %mul93 = mul nsw i32 %73, %conv92, !dbg !2355
  %add94 = add nsw i32 %mul90, %mul93, !dbg !2356
  %76 = load i32, i32* %C, align 4, !dbg !2357
  %77 = load i64, i64* %stride.addr, align 8, !dbg !2358
  %add95 = add nsw i64 %77, 3, !dbg !2359
  %78 = load i8*, i8** %src.addr, align 8, !dbg !2360
  %arrayidx96 = getelementptr inbounds i8, i8* %78, i64 %add95, !dbg !2360
  %79 = load i8, i8* %arrayidx96, align 1, !dbg !2360
  %conv97 = zext i8 %79 to i32, !dbg !2360
  %mul98 = mul nsw i32 %76, %conv97, !dbg !2361
  %add99 = add nsw i32 %add94, %mul98, !dbg !2362
  %80 = load i32, i32* %D, align 4, !dbg !2363
  %81 = load i64, i64* %stride.addr, align 8, !dbg !2364
  %add100 = add nsw i64 %81, 4, !dbg !2365
  %82 = load i8*, i8** %src.addr, align 8, !dbg !2366
  %arrayidx101 = getelementptr inbounds i8, i8* %82, i64 %add100, !dbg !2366
  %83 = load i8, i8* %arrayidx101, align 1, !dbg !2366
  %conv102 = zext i8 %83 to i32, !dbg !2366
  %mul103 = mul nsw i32 %80, %conv102, !dbg !2367
  %add104 = add nsw i32 %add99, %mul103, !dbg !2368
  %84 = load i32, i32* %bias, align 4, !dbg !2369
  %add105 = add nsw i32 %add104, %84, !dbg !2370
  %shr106 = ashr i32 %add105, 6, !dbg !2371
  %add107 = add nsw i32 %conv87, %shr106, !dbg !2372
  %add108 = add nsw i32 %add107, 1, !dbg !2373
  %shr109 = ashr i32 %add108, 1, !dbg !2374
  %conv110 = trunc i32 %shr109 to i8, !dbg !2375
  %85 = load i8*, i8** %dst.addr, align 8, !dbg !2376
  %arrayidx111 = getelementptr inbounds i8, i8* %85, i64 3, !dbg !2376
  store i8 %conv110, i8* %arrayidx111, align 1, !dbg !2377
  %86 = load i8*, i8** %dst.addr, align 8, !dbg !2378
  %arrayidx112 = getelementptr inbounds i8, i8* %86, i64 4, !dbg !2378
  %87 = load i8, i8* %arrayidx112, align 1, !dbg !2378
  %conv113 = zext i8 %87 to i32, !dbg !2379
  %88 = load i32, i32* %A, align 4, !dbg !2380
  %89 = load i8*, i8** %src.addr, align 8, !dbg !2381
  %arrayidx114 = getelementptr inbounds i8, i8* %89, i64 4, !dbg !2381
  %90 = load i8, i8* %arrayidx114, align 1, !dbg !2381
  %conv115 = zext i8 %90 to i32, !dbg !2381
  %mul116 = mul nsw i32 %88, %conv115, !dbg !2382
  %91 = load i32, i32* %B, align 4, !dbg !2383
  %92 = load i8*, i8** %src.addr, align 8, !dbg !2384
  %arrayidx117 = getelementptr inbounds i8, i8* %92, i64 5, !dbg !2384
  %93 = load i8, i8* %arrayidx117, align 1, !dbg !2384
  %conv118 = zext i8 %93 to i32, !dbg !2384
  %mul119 = mul nsw i32 %91, %conv118, !dbg !2385
  %add120 = add nsw i32 %mul116, %mul119, !dbg !2386
  %94 = load i32, i32* %C, align 4, !dbg !2387
  %95 = load i64, i64* %stride.addr, align 8, !dbg !2388
  %add121 = add nsw i64 %95, 4, !dbg !2389
  %96 = load i8*, i8** %src.addr, align 8, !dbg !2390
  %arrayidx122 = getelementptr inbounds i8, i8* %96, i64 %add121, !dbg !2390
  %97 = load i8, i8* %arrayidx122, align 1, !dbg !2390
  %conv123 = zext i8 %97 to i32, !dbg !2390
  %mul124 = mul nsw i32 %94, %conv123, !dbg !2391
  %add125 = add nsw i32 %add120, %mul124, !dbg !2392
  %98 = load i32, i32* %D, align 4, !dbg !2393
  %99 = load i64, i64* %stride.addr, align 8, !dbg !2394
  %add126 = add nsw i64 %99, 5, !dbg !2395
  %100 = load i8*, i8** %src.addr, align 8, !dbg !2396
  %arrayidx127 = getelementptr inbounds i8, i8* %100, i64 %add126, !dbg !2396
  %101 = load i8, i8* %arrayidx127, align 1, !dbg !2396
  %conv128 = zext i8 %101 to i32, !dbg !2396
  %mul129 = mul nsw i32 %98, %conv128, !dbg !2397
  %add130 = add nsw i32 %add125, %mul129, !dbg !2398
  %102 = load i32, i32* %bias, align 4, !dbg !2399
  %add131 = add nsw i32 %add130, %102, !dbg !2400
  %shr132 = ashr i32 %add131, 6, !dbg !2401
  %add133 = add nsw i32 %conv113, %shr132, !dbg !2402
  %add134 = add nsw i32 %add133, 1, !dbg !2403
  %shr135 = ashr i32 %add134, 1, !dbg !2404
  %conv136 = trunc i32 %shr135 to i8, !dbg !2405
  %103 = load i8*, i8** %dst.addr, align 8, !dbg !2406
  %arrayidx137 = getelementptr inbounds i8, i8* %103, i64 4, !dbg !2406
  store i8 %conv136, i8* %arrayidx137, align 1, !dbg !2407
  %104 = load i8*, i8** %dst.addr, align 8, !dbg !2408
  %arrayidx138 = getelementptr inbounds i8, i8* %104, i64 5, !dbg !2408
  %105 = load i8, i8* %arrayidx138, align 1, !dbg !2408
  %conv139 = zext i8 %105 to i32, !dbg !2409
  %106 = load i32, i32* %A, align 4, !dbg !2410
  %107 = load i8*, i8** %src.addr, align 8, !dbg !2411
  %arrayidx140 = getelementptr inbounds i8, i8* %107, i64 5, !dbg !2411
  %108 = load i8, i8* %arrayidx140, align 1, !dbg !2411
  %conv141 = zext i8 %108 to i32, !dbg !2411
  %mul142 = mul nsw i32 %106, %conv141, !dbg !2412
  %109 = load i32, i32* %B, align 4, !dbg !2413
  %110 = load i8*, i8** %src.addr, align 8, !dbg !2414
  %arrayidx143 = getelementptr inbounds i8, i8* %110, i64 6, !dbg !2414
  %111 = load i8, i8* %arrayidx143, align 1, !dbg !2414
  %conv144 = zext i8 %111 to i32, !dbg !2414
  %mul145 = mul nsw i32 %109, %conv144, !dbg !2415
  %add146 = add nsw i32 %mul142, %mul145, !dbg !2416
  %112 = load i32, i32* %C, align 4, !dbg !2417
  %113 = load i64, i64* %stride.addr, align 8, !dbg !2418
  %add147 = add nsw i64 %113, 5, !dbg !2419
  %114 = load i8*, i8** %src.addr, align 8, !dbg !2420
  %arrayidx148 = getelementptr inbounds i8, i8* %114, i64 %add147, !dbg !2420
  %115 = load i8, i8* %arrayidx148, align 1, !dbg !2420
  %conv149 = zext i8 %115 to i32, !dbg !2420
  %mul150 = mul nsw i32 %112, %conv149, !dbg !2421
  %add151 = add nsw i32 %add146, %mul150, !dbg !2422
  %116 = load i32, i32* %D, align 4, !dbg !2423
  %117 = load i64, i64* %stride.addr, align 8, !dbg !2424
  %add152 = add nsw i64 %117, 6, !dbg !2425
  %118 = load i8*, i8** %src.addr, align 8, !dbg !2426
  %arrayidx153 = getelementptr inbounds i8, i8* %118, i64 %add152, !dbg !2426
  %119 = load i8, i8* %arrayidx153, align 1, !dbg !2426
  %conv154 = zext i8 %119 to i32, !dbg !2426
  %mul155 = mul nsw i32 %116, %conv154, !dbg !2427
  %add156 = add nsw i32 %add151, %mul155, !dbg !2428
  %120 = load i32, i32* %bias, align 4, !dbg !2429
  %add157 = add nsw i32 %add156, %120, !dbg !2430
  %shr158 = ashr i32 %add157, 6, !dbg !2431
  %add159 = add nsw i32 %conv139, %shr158, !dbg !2432
  %add160 = add nsw i32 %add159, 1, !dbg !2433
  %shr161 = ashr i32 %add160, 1, !dbg !2434
  %conv162 = trunc i32 %shr161 to i8, !dbg !2435
  %121 = load i8*, i8** %dst.addr, align 8, !dbg !2436
  %arrayidx163 = getelementptr inbounds i8, i8* %121, i64 5, !dbg !2436
  store i8 %conv162, i8* %arrayidx163, align 1, !dbg !2437
  %122 = load i8*, i8** %dst.addr, align 8, !dbg !2438
  %arrayidx164 = getelementptr inbounds i8, i8* %122, i64 6, !dbg !2438
  %123 = load i8, i8* %arrayidx164, align 1, !dbg !2438
  %conv165 = zext i8 %123 to i32, !dbg !2439
  %124 = load i32, i32* %A, align 4, !dbg !2440
  %125 = load i8*, i8** %src.addr, align 8, !dbg !2441
  %arrayidx166 = getelementptr inbounds i8, i8* %125, i64 6, !dbg !2441
  %126 = load i8, i8* %arrayidx166, align 1, !dbg !2441
  %conv167 = zext i8 %126 to i32, !dbg !2441
  %mul168 = mul nsw i32 %124, %conv167, !dbg !2442
  %127 = load i32, i32* %B, align 4, !dbg !2443
  %128 = load i8*, i8** %src.addr, align 8, !dbg !2444
  %arrayidx169 = getelementptr inbounds i8, i8* %128, i64 7, !dbg !2444
  %129 = load i8, i8* %arrayidx169, align 1, !dbg !2444
  %conv170 = zext i8 %129 to i32, !dbg !2444
  %mul171 = mul nsw i32 %127, %conv170, !dbg !2445
  %add172 = add nsw i32 %mul168, %mul171, !dbg !2446
  %130 = load i32, i32* %C, align 4, !dbg !2447
  %131 = load i64, i64* %stride.addr, align 8, !dbg !2448
  %add173 = add nsw i64 %131, 6, !dbg !2449
  %132 = load i8*, i8** %src.addr, align 8, !dbg !2450
  %arrayidx174 = getelementptr inbounds i8, i8* %132, i64 %add173, !dbg !2450
  %133 = load i8, i8* %arrayidx174, align 1, !dbg !2450
  %conv175 = zext i8 %133 to i32, !dbg !2450
  %mul176 = mul nsw i32 %130, %conv175, !dbg !2451
  %add177 = add nsw i32 %add172, %mul176, !dbg !2452
  %134 = load i32, i32* %D, align 4, !dbg !2453
  %135 = load i64, i64* %stride.addr, align 8, !dbg !2454
  %add178 = add nsw i64 %135, 7, !dbg !2455
  %136 = load i8*, i8** %src.addr, align 8, !dbg !2456
  %arrayidx179 = getelementptr inbounds i8, i8* %136, i64 %add178, !dbg !2456
  %137 = load i8, i8* %arrayidx179, align 1, !dbg !2456
  %conv180 = zext i8 %137 to i32, !dbg !2456
  %mul181 = mul nsw i32 %134, %conv180, !dbg !2457
  %add182 = add nsw i32 %add177, %mul181, !dbg !2458
  %138 = load i32, i32* %bias, align 4, !dbg !2459
  %add183 = add nsw i32 %add182, %138, !dbg !2460
  %shr184 = ashr i32 %add183, 6, !dbg !2461
  %add185 = add nsw i32 %conv165, %shr184, !dbg !2462
  %add186 = add nsw i32 %add185, 1, !dbg !2463
  %shr187 = ashr i32 %add186, 1, !dbg !2464
  %conv188 = trunc i32 %shr187 to i8, !dbg !2465
  %139 = load i8*, i8** %dst.addr, align 8, !dbg !2466
  %arrayidx189 = getelementptr inbounds i8, i8* %139, i64 6, !dbg !2466
  store i8 %conv188, i8* %arrayidx189, align 1, !dbg !2467
  %140 = load i8*, i8** %dst.addr, align 8, !dbg !2468
  %arrayidx190 = getelementptr inbounds i8, i8* %140, i64 7, !dbg !2468
  %141 = load i8, i8* %arrayidx190, align 1, !dbg !2468
  %conv191 = zext i8 %141 to i32, !dbg !2469
  %142 = load i32, i32* %A, align 4, !dbg !2470
  %143 = load i8*, i8** %src.addr, align 8, !dbg !2471
  %arrayidx192 = getelementptr inbounds i8, i8* %143, i64 7, !dbg !2471
  %144 = load i8, i8* %arrayidx192, align 1, !dbg !2471
  %conv193 = zext i8 %144 to i32, !dbg !2471
  %mul194 = mul nsw i32 %142, %conv193, !dbg !2472
  %145 = load i32, i32* %B, align 4, !dbg !2473
  %146 = load i8*, i8** %src.addr, align 8, !dbg !2474
  %arrayidx195 = getelementptr inbounds i8, i8* %146, i64 8, !dbg !2474
  %147 = load i8, i8* %arrayidx195, align 1, !dbg !2474
  %conv196 = zext i8 %147 to i32, !dbg !2474
  %mul197 = mul nsw i32 %145, %conv196, !dbg !2475
  %add198 = add nsw i32 %mul194, %mul197, !dbg !2476
  %148 = load i32, i32* %C, align 4, !dbg !2477
  %149 = load i64, i64* %stride.addr, align 8, !dbg !2478
  %add199 = add nsw i64 %149, 7, !dbg !2479
  %150 = load i8*, i8** %src.addr, align 8, !dbg !2480
  %arrayidx200 = getelementptr inbounds i8, i8* %150, i64 %add199, !dbg !2480
  %151 = load i8, i8* %arrayidx200, align 1, !dbg !2480
  %conv201 = zext i8 %151 to i32, !dbg !2480
  %mul202 = mul nsw i32 %148, %conv201, !dbg !2481
  %add203 = add nsw i32 %add198, %mul202, !dbg !2482
  %152 = load i32, i32* %D, align 4, !dbg !2483
  %153 = load i64, i64* %stride.addr, align 8, !dbg !2484
  %add204 = add nsw i64 %153, 8, !dbg !2485
  %154 = load i8*, i8** %src.addr, align 8, !dbg !2486
  %arrayidx205 = getelementptr inbounds i8, i8* %154, i64 %add204, !dbg !2486
  %155 = load i8, i8* %arrayidx205, align 1, !dbg !2486
  %conv206 = zext i8 %155 to i32, !dbg !2486
  %mul207 = mul nsw i32 %152, %conv206, !dbg !2487
  %add208 = add nsw i32 %add203, %mul207, !dbg !2488
  %156 = load i32, i32* %bias, align 4, !dbg !2489
  %add209 = add nsw i32 %add208, %156, !dbg !2490
  %shr210 = ashr i32 %add209, 6, !dbg !2491
  %add211 = add nsw i32 %conv191, %shr210, !dbg !2492
  %add212 = add nsw i32 %add211, 1, !dbg !2493
  %shr213 = ashr i32 %add212, 1, !dbg !2494
  %conv214 = trunc i32 %shr213 to i8, !dbg !2495
  %157 = load i8*, i8** %dst.addr, align 8, !dbg !2496
  %arrayidx215 = getelementptr inbounds i8, i8* %157, i64 7, !dbg !2496
  store i8 %conv214, i8* %arrayidx215, align 1, !dbg !2497
  %158 = load i64, i64* %stride.addr, align 8, !dbg !2498
  %159 = load i8*, i8** %dst.addr, align 8, !dbg !2499
  %add.ptr = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !2499
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2499
  %160 = load i64, i64* %stride.addr, align 8, !dbg !2500
  %161 = load i8*, i8** %src.addr, align 8, !dbg !2501
  %add.ptr216 = getelementptr inbounds i8, i8* %161, i64 %160, !dbg !2501
  store i8* %add.ptr216, i8** %src.addr, align 8, !dbg !2501
  br label %for.inc, !dbg !2502

for.inc:                                          ; preds = %for.body
  %162 = load i32, i32* %i, align 4, !dbg !2503
  %inc = add nsw i32 %162, 1, !dbg !2503
  store i32 %inc, i32* %i, align 4, !dbg !2503
  br label %for.cond, !dbg !2505, !llvm.loop !2506

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2508

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %E, metadata !2510, metadata !113), !dbg !2512
  %163 = load i32, i32* %B, align 4, !dbg !2513
  %164 = load i32, i32* %C, align 4, !dbg !2515
  %add217 = add nsw i32 %163, %164, !dbg !2516
  store i32 %add217, i32* %E, align 4, !dbg !2517
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2518, metadata !113), !dbg !2519
  %165 = load i32, i32* %C, align 4, !dbg !2520
  %tobool218 = icmp ne i32 %165, 0, !dbg !2520
  br i1 %tobool218, label %cond.true, label %cond.false, !dbg !2520

cond.true:                                        ; preds = %if.else
  %166 = load i64, i64* %stride.addr, align 8, !dbg !2521
  br label %cond.end, !dbg !2523

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !2524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %166, %cond.true ], [ 1, %cond.false ], !dbg !2526
  store i64 %cond, i64* %step, align 8, !dbg !2528
  store i32 0, i32* %i, align 4, !dbg !2529
  br label %for.cond219, !dbg !2530

for.cond219:                                      ; preds = %for.inc361, %cond.end
  %167 = load i32, i32* %i, align 4, !dbg !2531
  %168 = load i32, i32* %h.addr, align 4, !dbg !2535
  %cmp220 = icmp slt i32 %167, %168, !dbg !2536
  br i1 %cmp220, label %for.body222, label %for.end363, !dbg !2537

for.body222:                                      ; preds = %for.cond219
  %169 = load i8*, i8** %dst.addr, align 8, !dbg !2538
  %arrayidx223 = getelementptr inbounds i8, i8* %169, i64 0, !dbg !2538
  %170 = load i8, i8* %arrayidx223, align 1, !dbg !2538
  %conv224 = zext i8 %170 to i32, !dbg !2541
  %171 = load i32, i32* %A, align 4, !dbg !2542
  %172 = load i8*, i8** %src.addr, align 8, !dbg !2543
  %arrayidx225 = getelementptr inbounds i8, i8* %172, i64 0, !dbg !2543
  %173 = load i8, i8* %arrayidx225, align 1, !dbg !2543
  %conv226 = zext i8 %173 to i32, !dbg !2543
  %mul227 = mul nsw i32 %171, %conv226, !dbg !2544
  %174 = load i32, i32* %E, align 4, !dbg !2545
  %175 = load i64, i64* %step, align 8, !dbg !2546
  %add228 = add nsw i64 %175, 0, !dbg !2547
  %176 = load i8*, i8** %src.addr, align 8, !dbg !2548
  %arrayidx229 = getelementptr inbounds i8, i8* %176, i64 %add228, !dbg !2548
  %177 = load i8, i8* %arrayidx229, align 1, !dbg !2548
  %conv230 = zext i8 %177 to i32, !dbg !2548
  %mul231 = mul nsw i32 %174, %conv230, !dbg !2549
  %add232 = add nsw i32 %mul227, %mul231, !dbg !2550
  %178 = load i32, i32* %bias, align 4, !dbg !2551
  %add233 = add nsw i32 %add232, %178, !dbg !2552
  %shr234 = ashr i32 %add233, 6, !dbg !2553
  %add235 = add nsw i32 %conv224, %shr234, !dbg !2554
  %add236 = add nsw i32 %add235, 1, !dbg !2555
  %shr237 = ashr i32 %add236, 1, !dbg !2556
  %conv238 = trunc i32 %shr237 to i8, !dbg !2557
  %179 = load i8*, i8** %dst.addr, align 8, !dbg !2558
  %arrayidx239 = getelementptr inbounds i8, i8* %179, i64 0, !dbg !2558
  store i8 %conv238, i8* %arrayidx239, align 1, !dbg !2559
  %180 = load i8*, i8** %dst.addr, align 8, !dbg !2560
  %arrayidx240 = getelementptr inbounds i8, i8* %180, i64 1, !dbg !2560
  %181 = load i8, i8* %arrayidx240, align 1, !dbg !2560
  %conv241 = zext i8 %181 to i32, !dbg !2561
  %182 = load i32, i32* %A, align 4, !dbg !2562
  %183 = load i8*, i8** %src.addr, align 8, !dbg !2563
  %arrayidx242 = getelementptr inbounds i8, i8* %183, i64 1, !dbg !2563
  %184 = load i8, i8* %arrayidx242, align 1, !dbg !2563
  %conv243 = zext i8 %184 to i32, !dbg !2563
  %mul244 = mul nsw i32 %182, %conv243, !dbg !2564
  %185 = load i32, i32* %E, align 4, !dbg !2565
  %186 = load i64, i64* %step, align 8, !dbg !2566
  %add245 = add nsw i64 %186, 1, !dbg !2567
  %187 = load i8*, i8** %src.addr, align 8, !dbg !2568
  %arrayidx246 = getelementptr inbounds i8, i8* %187, i64 %add245, !dbg !2568
  %188 = load i8, i8* %arrayidx246, align 1, !dbg !2568
  %conv247 = zext i8 %188 to i32, !dbg !2568
  %mul248 = mul nsw i32 %185, %conv247, !dbg !2569
  %add249 = add nsw i32 %mul244, %mul248, !dbg !2570
  %189 = load i32, i32* %bias, align 4, !dbg !2571
  %add250 = add nsw i32 %add249, %189, !dbg !2572
  %shr251 = ashr i32 %add250, 6, !dbg !2573
  %add252 = add nsw i32 %conv241, %shr251, !dbg !2574
  %add253 = add nsw i32 %add252, 1, !dbg !2575
  %shr254 = ashr i32 %add253, 1, !dbg !2576
  %conv255 = trunc i32 %shr254 to i8, !dbg !2577
  %190 = load i8*, i8** %dst.addr, align 8, !dbg !2578
  %arrayidx256 = getelementptr inbounds i8, i8* %190, i64 1, !dbg !2578
  store i8 %conv255, i8* %arrayidx256, align 1, !dbg !2579
  %191 = load i8*, i8** %dst.addr, align 8, !dbg !2580
  %arrayidx257 = getelementptr inbounds i8, i8* %191, i64 2, !dbg !2580
  %192 = load i8, i8* %arrayidx257, align 1, !dbg !2580
  %conv258 = zext i8 %192 to i32, !dbg !2581
  %193 = load i32, i32* %A, align 4, !dbg !2582
  %194 = load i8*, i8** %src.addr, align 8, !dbg !2583
  %arrayidx259 = getelementptr inbounds i8, i8* %194, i64 2, !dbg !2583
  %195 = load i8, i8* %arrayidx259, align 1, !dbg !2583
  %conv260 = zext i8 %195 to i32, !dbg !2583
  %mul261 = mul nsw i32 %193, %conv260, !dbg !2584
  %196 = load i32, i32* %E, align 4, !dbg !2585
  %197 = load i64, i64* %step, align 8, !dbg !2586
  %add262 = add nsw i64 %197, 2, !dbg !2587
  %198 = load i8*, i8** %src.addr, align 8, !dbg !2588
  %arrayidx263 = getelementptr inbounds i8, i8* %198, i64 %add262, !dbg !2588
  %199 = load i8, i8* %arrayidx263, align 1, !dbg !2588
  %conv264 = zext i8 %199 to i32, !dbg !2588
  %mul265 = mul nsw i32 %196, %conv264, !dbg !2589
  %add266 = add nsw i32 %mul261, %mul265, !dbg !2590
  %200 = load i32, i32* %bias, align 4, !dbg !2591
  %add267 = add nsw i32 %add266, %200, !dbg !2592
  %shr268 = ashr i32 %add267, 6, !dbg !2593
  %add269 = add nsw i32 %conv258, %shr268, !dbg !2594
  %add270 = add nsw i32 %add269, 1, !dbg !2595
  %shr271 = ashr i32 %add270, 1, !dbg !2596
  %conv272 = trunc i32 %shr271 to i8, !dbg !2597
  %201 = load i8*, i8** %dst.addr, align 8, !dbg !2598
  %arrayidx273 = getelementptr inbounds i8, i8* %201, i64 2, !dbg !2598
  store i8 %conv272, i8* %arrayidx273, align 1, !dbg !2599
  %202 = load i8*, i8** %dst.addr, align 8, !dbg !2600
  %arrayidx274 = getelementptr inbounds i8, i8* %202, i64 3, !dbg !2600
  %203 = load i8, i8* %arrayidx274, align 1, !dbg !2600
  %conv275 = zext i8 %203 to i32, !dbg !2601
  %204 = load i32, i32* %A, align 4, !dbg !2602
  %205 = load i8*, i8** %src.addr, align 8, !dbg !2603
  %arrayidx276 = getelementptr inbounds i8, i8* %205, i64 3, !dbg !2603
  %206 = load i8, i8* %arrayidx276, align 1, !dbg !2603
  %conv277 = zext i8 %206 to i32, !dbg !2603
  %mul278 = mul nsw i32 %204, %conv277, !dbg !2604
  %207 = load i32, i32* %E, align 4, !dbg !2605
  %208 = load i64, i64* %step, align 8, !dbg !2606
  %add279 = add nsw i64 %208, 3, !dbg !2607
  %209 = load i8*, i8** %src.addr, align 8, !dbg !2608
  %arrayidx280 = getelementptr inbounds i8, i8* %209, i64 %add279, !dbg !2608
  %210 = load i8, i8* %arrayidx280, align 1, !dbg !2608
  %conv281 = zext i8 %210 to i32, !dbg !2608
  %mul282 = mul nsw i32 %207, %conv281, !dbg !2609
  %add283 = add nsw i32 %mul278, %mul282, !dbg !2610
  %211 = load i32, i32* %bias, align 4, !dbg !2611
  %add284 = add nsw i32 %add283, %211, !dbg !2612
  %shr285 = ashr i32 %add284, 6, !dbg !2613
  %add286 = add nsw i32 %conv275, %shr285, !dbg !2614
  %add287 = add nsw i32 %add286, 1, !dbg !2615
  %shr288 = ashr i32 %add287, 1, !dbg !2616
  %conv289 = trunc i32 %shr288 to i8, !dbg !2617
  %212 = load i8*, i8** %dst.addr, align 8, !dbg !2618
  %arrayidx290 = getelementptr inbounds i8, i8* %212, i64 3, !dbg !2618
  store i8 %conv289, i8* %arrayidx290, align 1, !dbg !2619
  %213 = load i8*, i8** %dst.addr, align 8, !dbg !2620
  %arrayidx291 = getelementptr inbounds i8, i8* %213, i64 4, !dbg !2620
  %214 = load i8, i8* %arrayidx291, align 1, !dbg !2620
  %conv292 = zext i8 %214 to i32, !dbg !2621
  %215 = load i32, i32* %A, align 4, !dbg !2622
  %216 = load i8*, i8** %src.addr, align 8, !dbg !2623
  %arrayidx293 = getelementptr inbounds i8, i8* %216, i64 4, !dbg !2623
  %217 = load i8, i8* %arrayidx293, align 1, !dbg !2623
  %conv294 = zext i8 %217 to i32, !dbg !2623
  %mul295 = mul nsw i32 %215, %conv294, !dbg !2624
  %218 = load i32, i32* %E, align 4, !dbg !2625
  %219 = load i64, i64* %step, align 8, !dbg !2626
  %add296 = add nsw i64 %219, 4, !dbg !2627
  %220 = load i8*, i8** %src.addr, align 8, !dbg !2628
  %arrayidx297 = getelementptr inbounds i8, i8* %220, i64 %add296, !dbg !2628
  %221 = load i8, i8* %arrayidx297, align 1, !dbg !2628
  %conv298 = zext i8 %221 to i32, !dbg !2628
  %mul299 = mul nsw i32 %218, %conv298, !dbg !2629
  %add300 = add nsw i32 %mul295, %mul299, !dbg !2630
  %222 = load i32, i32* %bias, align 4, !dbg !2631
  %add301 = add nsw i32 %add300, %222, !dbg !2632
  %shr302 = ashr i32 %add301, 6, !dbg !2633
  %add303 = add nsw i32 %conv292, %shr302, !dbg !2634
  %add304 = add nsw i32 %add303, 1, !dbg !2635
  %shr305 = ashr i32 %add304, 1, !dbg !2636
  %conv306 = trunc i32 %shr305 to i8, !dbg !2637
  %223 = load i8*, i8** %dst.addr, align 8, !dbg !2638
  %arrayidx307 = getelementptr inbounds i8, i8* %223, i64 4, !dbg !2638
  store i8 %conv306, i8* %arrayidx307, align 1, !dbg !2639
  %224 = load i8*, i8** %dst.addr, align 8, !dbg !2640
  %arrayidx308 = getelementptr inbounds i8, i8* %224, i64 5, !dbg !2640
  %225 = load i8, i8* %arrayidx308, align 1, !dbg !2640
  %conv309 = zext i8 %225 to i32, !dbg !2641
  %226 = load i32, i32* %A, align 4, !dbg !2642
  %227 = load i8*, i8** %src.addr, align 8, !dbg !2643
  %arrayidx310 = getelementptr inbounds i8, i8* %227, i64 5, !dbg !2643
  %228 = load i8, i8* %arrayidx310, align 1, !dbg !2643
  %conv311 = zext i8 %228 to i32, !dbg !2643
  %mul312 = mul nsw i32 %226, %conv311, !dbg !2644
  %229 = load i32, i32* %E, align 4, !dbg !2645
  %230 = load i64, i64* %step, align 8, !dbg !2646
  %add313 = add nsw i64 %230, 5, !dbg !2647
  %231 = load i8*, i8** %src.addr, align 8, !dbg !2648
  %arrayidx314 = getelementptr inbounds i8, i8* %231, i64 %add313, !dbg !2648
  %232 = load i8, i8* %arrayidx314, align 1, !dbg !2648
  %conv315 = zext i8 %232 to i32, !dbg !2648
  %mul316 = mul nsw i32 %229, %conv315, !dbg !2649
  %add317 = add nsw i32 %mul312, %mul316, !dbg !2650
  %233 = load i32, i32* %bias, align 4, !dbg !2651
  %add318 = add nsw i32 %add317, %233, !dbg !2652
  %shr319 = ashr i32 %add318, 6, !dbg !2653
  %add320 = add nsw i32 %conv309, %shr319, !dbg !2654
  %add321 = add nsw i32 %add320, 1, !dbg !2655
  %shr322 = ashr i32 %add321, 1, !dbg !2656
  %conv323 = trunc i32 %shr322 to i8, !dbg !2657
  %234 = load i8*, i8** %dst.addr, align 8, !dbg !2658
  %arrayidx324 = getelementptr inbounds i8, i8* %234, i64 5, !dbg !2658
  store i8 %conv323, i8* %arrayidx324, align 1, !dbg !2659
  %235 = load i8*, i8** %dst.addr, align 8, !dbg !2660
  %arrayidx325 = getelementptr inbounds i8, i8* %235, i64 6, !dbg !2660
  %236 = load i8, i8* %arrayidx325, align 1, !dbg !2660
  %conv326 = zext i8 %236 to i32, !dbg !2661
  %237 = load i32, i32* %A, align 4, !dbg !2662
  %238 = load i8*, i8** %src.addr, align 8, !dbg !2663
  %arrayidx327 = getelementptr inbounds i8, i8* %238, i64 6, !dbg !2663
  %239 = load i8, i8* %arrayidx327, align 1, !dbg !2663
  %conv328 = zext i8 %239 to i32, !dbg !2663
  %mul329 = mul nsw i32 %237, %conv328, !dbg !2664
  %240 = load i32, i32* %E, align 4, !dbg !2665
  %241 = load i64, i64* %step, align 8, !dbg !2666
  %add330 = add nsw i64 %241, 6, !dbg !2667
  %242 = load i8*, i8** %src.addr, align 8, !dbg !2668
  %arrayidx331 = getelementptr inbounds i8, i8* %242, i64 %add330, !dbg !2668
  %243 = load i8, i8* %arrayidx331, align 1, !dbg !2668
  %conv332 = zext i8 %243 to i32, !dbg !2668
  %mul333 = mul nsw i32 %240, %conv332, !dbg !2669
  %add334 = add nsw i32 %mul329, %mul333, !dbg !2670
  %244 = load i32, i32* %bias, align 4, !dbg !2671
  %add335 = add nsw i32 %add334, %244, !dbg !2672
  %shr336 = ashr i32 %add335, 6, !dbg !2673
  %add337 = add nsw i32 %conv326, %shr336, !dbg !2674
  %add338 = add nsw i32 %add337, 1, !dbg !2675
  %shr339 = ashr i32 %add338, 1, !dbg !2676
  %conv340 = trunc i32 %shr339 to i8, !dbg !2677
  %245 = load i8*, i8** %dst.addr, align 8, !dbg !2678
  %arrayidx341 = getelementptr inbounds i8, i8* %245, i64 6, !dbg !2678
  store i8 %conv340, i8* %arrayidx341, align 1, !dbg !2679
  %246 = load i8*, i8** %dst.addr, align 8, !dbg !2680
  %arrayidx342 = getelementptr inbounds i8, i8* %246, i64 7, !dbg !2680
  %247 = load i8, i8* %arrayidx342, align 1, !dbg !2680
  %conv343 = zext i8 %247 to i32, !dbg !2681
  %248 = load i32, i32* %A, align 4, !dbg !2682
  %249 = load i8*, i8** %src.addr, align 8, !dbg !2683
  %arrayidx344 = getelementptr inbounds i8, i8* %249, i64 7, !dbg !2683
  %250 = load i8, i8* %arrayidx344, align 1, !dbg !2683
  %conv345 = zext i8 %250 to i32, !dbg !2683
  %mul346 = mul nsw i32 %248, %conv345, !dbg !2684
  %251 = load i32, i32* %E, align 4, !dbg !2685
  %252 = load i64, i64* %step, align 8, !dbg !2686
  %add347 = add nsw i64 %252, 7, !dbg !2687
  %253 = load i8*, i8** %src.addr, align 8, !dbg !2688
  %arrayidx348 = getelementptr inbounds i8, i8* %253, i64 %add347, !dbg !2688
  %254 = load i8, i8* %arrayidx348, align 1, !dbg !2688
  %conv349 = zext i8 %254 to i32, !dbg !2688
  %mul350 = mul nsw i32 %251, %conv349, !dbg !2689
  %add351 = add nsw i32 %mul346, %mul350, !dbg !2690
  %255 = load i32, i32* %bias, align 4, !dbg !2691
  %add352 = add nsw i32 %add351, %255, !dbg !2692
  %shr353 = ashr i32 %add352, 6, !dbg !2693
  %add354 = add nsw i32 %conv343, %shr353, !dbg !2694
  %add355 = add nsw i32 %add354, 1, !dbg !2695
  %shr356 = ashr i32 %add355, 1, !dbg !2696
  %conv357 = trunc i32 %shr356 to i8, !dbg !2697
  %256 = load i8*, i8** %dst.addr, align 8, !dbg !2698
  %arrayidx358 = getelementptr inbounds i8, i8* %256, i64 7, !dbg !2698
  store i8 %conv357, i8* %arrayidx358, align 1, !dbg !2699
  %257 = load i64, i64* %stride.addr, align 8, !dbg !2700
  %258 = load i8*, i8** %dst.addr, align 8, !dbg !2701
  %add.ptr359 = getelementptr inbounds i8, i8* %258, i64 %257, !dbg !2701
  store i8* %add.ptr359, i8** %dst.addr, align 8, !dbg !2701
  %259 = load i64, i64* %stride.addr, align 8, !dbg !2702
  %260 = load i8*, i8** %src.addr, align 8, !dbg !2703
  %add.ptr360 = getelementptr inbounds i8, i8* %260, i64 %259, !dbg !2703
  store i8* %add.ptr360, i8** %src.addr, align 8, !dbg !2703
  br label %for.inc361, !dbg !2704

for.inc361:                                       ; preds = %for.body222
  %261 = load i32, i32* %i, align 4, !dbg !2705
  %inc362 = add nsw i32 %261, 1, !dbg !2705
  store i32 %inc362, i32* %i, align 4, !dbg !2705
  br label %for.cond219, !dbg !2707, !llvm.loop !2708

for.end363:                                       ; preds = %for.cond219
  br label %if.end

if.end:                                           ; preds = %for.end363, %for.end
  ret void, !dbg !2710
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_chroma_mc4_c(i8* %dst, i8* %src, i64 %stride, i32 %h, i32 %x, i32 %y) #3 !dbg !2712 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %C = alloca i32, align 4
  %D = alloca i32, align 4
  %i = alloca i32, align 4
  %bias = alloca i32, align 4
  %E = alloca i32, align 4
  %step = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2713, metadata !113), !dbg !2714
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !2715, metadata !113), !dbg !2716
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !2717, metadata !113), !dbg !2718
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2719, metadata !113), !dbg !2720
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !2721, metadata !113), !dbg !2722
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !2723, metadata !113), !dbg !2724
  call void @llvm.dbg.declare(metadata i32* %A, metadata !2725, metadata !113), !dbg !2726
  %0 = load i32, i32* %x.addr, align 4, !dbg !2727
  %sub = sub nsw i32 8, %0, !dbg !2728
  %1 = load i32, i32* %y.addr, align 4, !dbg !2729
  %sub1 = sub nsw i32 8, %1, !dbg !2730
  %mul = mul nsw i32 %sub, %sub1, !dbg !2731
  store i32 %mul, i32* %A, align 4, !dbg !2726
  call void @llvm.dbg.declare(metadata i32* %B, metadata !2732, metadata !113), !dbg !2733
  %2 = load i32, i32* %x.addr, align 4, !dbg !2734
  %3 = load i32, i32* %y.addr, align 4, !dbg !2735
  %sub2 = sub nsw i32 8, %3, !dbg !2736
  %mul3 = mul nsw i32 %2, %sub2, !dbg !2737
  store i32 %mul3, i32* %B, align 4, !dbg !2733
  call void @llvm.dbg.declare(metadata i32* %C, metadata !2738, metadata !113), !dbg !2739
  %4 = load i32, i32* %x.addr, align 4, !dbg !2740
  %sub4 = sub nsw i32 8, %4, !dbg !2741
  %5 = load i32, i32* %y.addr, align 4, !dbg !2742
  %mul5 = mul nsw i32 %sub4, %5, !dbg !2743
  store i32 %mul5, i32* %C, align 4, !dbg !2739
  call void @llvm.dbg.declare(metadata i32* %D, metadata !2744, metadata !113), !dbg !2745
  %6 = load i32, i32* %x.addr, align 4, !dbg !2746
  %7 = load i32, i32* %y.addr, align 4, !dbg !2747
  %mul6 = mul nsw i32 %6, %7, !dbg !2748
  store i32 %mul6, i32* %D, align 4, !dbg !2745
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2749, metadata !113), !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !2751, metadata !113), !dbg !2752
  %8 = load i32, i32* %x.addr, align 4, !dbg !2753
  %shr = ashr i32 %8, 1, !dbg !2754
  %idxprom = sext i32 %shr to i64, !dbg !2755
  %9 = load i32, i32* %y.addr, align 4, !dbg !2756
  %shr7 = ashr i32 %9, 1, !dbg !2757
  %idxprom8 = sext i32 %shr7 to i64, !dbg !2755
  %arrayidx = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @rv40_bias, i64 0, i64 %idxprom8, !dbg !2755
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !2755
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !2755
  store i32 %10, i32* %bias, align 4, !dbg !2752
  %11 = load i32, i32* %D, align 4, !dbg !2758
  %tobool = icmp ne i32 %11, 0, !dbg !2758
  br i1 %tobool, label %if.then, label %if.else, !dbg !2760

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2761
  br label %for.cond, !dbg !2765

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !2766
  %13 = load i32, i32* %h.addr, align 4, !dbg !2769
  %cmp = icmp slt i32 %12, %13, !dbg !2770
  br i1 %cmp, label %for.body, label %for.end, !dbg !2771

for.body:                                         ; preds = %for.cond
  %14 = load i8*, i8** %dst.addr, align 8, !dbg !2772
  %arrayidx10 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !2772
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !2772
  %conv = zext i8 %15 to i32, !dbg !2775
  %16 = load i32, i32* %A, align 4, !dbg !2776
  %17 = load i8*, i8** %src.addr, align 8, !dbg !2777
  %arrayidx11 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !2777
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !2777
  %conv12 = zext i8 %18 to i32, !dbg !2777
  %mul13 = mul nsw i32 %16, %conv12, !dbg !2778
  %19 = load i32, i32* %B, align 4, !dbg !2779
  %20 = load i8*, i8** %src.addr, align 8, !dbg !2780
  %arrayidx14 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !2780
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !2780
  %conv15 = zext i8 %21 to i32, !dbg !2780
  %mul16 = mul nsw i32 %19, %conv15, !dbg !2781
  %add = add nsw i32 %mul13, %mul16, !dbg !2782
  %22 = load i32, i32* %C, align 4, !dbg !2783
  %23 = load i64, i64* %stride.addr, align 8, !dbg !2784
  %add17 = add nsw i64 %23, 0, !dbg !2785
  %24 = load i8*, i8** %src.addr, align 8, !dbg !2786
  %arrayidx18 = getelementptr inbounds i8, i8* %24, i64 %add17, !dbg !2786
  %25 = load i8, i8* %arrayidx18, align 1, !dbg !2786
  %conv19 = zext i8 %25 to i32, !dbg !2786
  %mul20 = mul nsw i32 %22, %conv19, !dbg !2787
  %add21 = add nsw i32 %add, %mul20, !dbg !2788
  %26 = load i32, i32* %D, align 4, !dbg !2789
  %27 = load i64, i64* %stride.addr, align 8, !dbg !2790
  %add22 = add nsw i64 %27, 1, !dbg !2791
  %28 = load i8*, i8** %src.addr, align 8, !dbg !2792
  %arrayidx23 = getelementptr inbounds i8, i8* %28, i64 %add22, !dbg !2792
  %29 = load i8, i8* %arrayidx23, align 1, !dbg !2792
  %conv24 = zext i8 %29 to i32, !dbg !2792
  %mul25 = mul nsw i32 %26, %conv24, !dbg !2793
  %add26 = add nsw i32 %add21, %mul25, !dbg !2794
  %30 = load i32, i32* %bias, align 4, !dbg !2795
  %add27 = add nsw i32 %add26, %30, !dbg !2796
  %shr28 = ashr i32 %add27, 6, !dbg !2797
  %add29 = add nsw i32 %conv, %shr28, !dbg !2798
  %add30 = add nsw i32 %add29, 1, !dbg !2799
  %shr31 = ashr i32 %add30, 1, !dbg !2800
  %conv32 = trunc i32 %shr31 to i8, !dbg !2801
  %31 = load i8*, i8** %dst.addr, align 8, !dbg !2802
  %arrayidx33 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !2802
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !2803
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2804
  %arrayidx34 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !2804
  %33 = load i8, i8* %arrayidx34, align 1, !dbg !2804
  %conv35 = zext i8 %33 to i32, !dbg !2805
  %34 = load i32, i32* %A, align 4, !dbg !2806
  %35 = load i8*, i8** %src.addr, align 8, !dbg !2807
  %arrayidx36 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !2807
  %36 = load i8, i8* %arrayidx36, align 1, !dbg !2807
  %conv37 = zext i8 %36 to i32, !dbg !2807
  %mul38 = mul nsw i32 %34, %conv37, !dbg !2808
  %37 = load i32, i32* %B, align 4, !dbg !2809
  %38 = load i8*, i8** %src.addr, align 8, !dbg !2810
  %arrayidx39 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !2810
  %39 = load i8, i8* %arrayidx39, align 1, !dbg !2810
  %conv40 = zext i8 %39 to i32, !dbg !2810
  %mul41 = mul nsw i32 %37, %conv40, !dbg !2811
  %add42 = add nsw i32 %mul38, %mul41, !dbg !2812
  %40 = load i32, i32* %C, align 4, !dbg !2813
  %41 = load i64, i64* %stride.addr, align 8, !dbg !2814
  %add43 = add nsw i64 %41, 1, !dbg !2815
  %42 = load i8*, i8** %src.addr, align 8, !dbg !2816
  %arrayidx44 = getelementptr inbounds i8, i8* %42, i64 %add43, !dbg !2816
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !2816
  %conv45 = zext i8 %43 to i32, !dbg !2816
  %mul46 = mul nsw i32 %40, %conv45, !dbg !2817
  %add47 = add nsw i32 %add42, %mul46, !dbg !2818
  %44 = load i32, i32* %D, align 4, !dbg !2819
  %45 = load i64, i64* %stride.addr, align 8, !dbg !2820
  %add48 = add nsw i64 %45, 2, !dbg !2821
  %46 = load i8*, i8** %src.addr, align 8, !dbg !2822
  %arrayidx49 = getelementptr inbounds i8, i8* %46, i64 %add48, !dbg !2822
  %47 = load i8, i8* %arrayidx49, align 1, !dbg !2822
  %conv50 = zext i8 %47 to i32, !dbg !2822
  %mul51 = mul nsw i32 %44, %conv50, !dbg !2823
  %add52 = add nsw i32 %add47, %mul51, !dbg !2824
  %48 = load i32, i32* %bias, align 4, !dbg !2825
  %add53 = add nsw i32 %add52, %48, !dbg !2826
  %shr54 = ashr i32 %add53, 6, !dbg !2827
  %add55 = add nsw i32 %conv35, %shr54, !dbg !2828
  %add56 = add nsw i32 %add55, 1, !dbg !2829
  %shr57 = ashr i32 %add56, 1, !dbg !2830
  %conv58 = trunc i32 %shr57 to i8, !dbg !2831
  %49 = load i8*, i8** %dst.addr, align 8, !dbg !2832
  %arrayidx59 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !2832
  store i8 %conv58, i8* %arrayidx59, align 1, !dbg !2833
  %50 = load i8*, i8** %dst.addr, align 8, !dbg !2834
  %arrayidx60 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !2834
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !2834
  %conv61 = zext i8 %51 to i32, !dbg !2835
  %52 = load i32, i32* %A, align 4, !dbg !2836
  %53 = load i8*, i8** %src.addr, align 8, !dbg !2837
  %arrayidx62 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !2837
  %54 = load i8, i8* %arrayidx62, align 1, !dbg !2837
  %conv63 = zext i8 %54 to i32, !dbg !2837
  %mul64 = mul nsw i32 %52, %conv63, !dbg !2838
  %55 = load i32, i32* %B, align 4, !dbg !2839
  %56 = load i8*, i8** %src.addr, align 8, !dbg !2840
  %arrayidx65 = getelementptr inbounds i8, i8* %56, i64 3, !dbg !2840
  %57 = load i8, i8* %arrayidx65, align 1, !dbg !2840
  %conv66 = zext i8 %57 to i32, !dbg !2840
  %mul67 = mul nsw i32 %55, %conv66, !dbg !2841
  %add68 = add nsw i32 %mul64, %mul67, !dbg !2842
  %58 = load i32, i32* %C, align 4, !dbg !2843
  %59 = load i64, i64* %stride.addr, align 8, !dbg !2844
  %add69 = add nsw i64 %59, 2, !dbg !2845
  %60 = load i8*, i8** %src.addr, align 8, !dbg !2846
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %add69, !dbg !2846
  %61 = load i8, i8* %arrayidx70, align 1, !dbg !2846
  %conv71 = zext i8 %61 to i32, !dbg !2846
  %mul72 = mul nsw i32 %58, %conv71, !dbg !2847
  %add73 = add nsw i32 %add68, %mul72, !dbg !2848
  %62 = load i32, i32* %D, align 4, !dbg !2849
  %63 = load i64, i64* %stride.addr, align 8, !dbg !2850
  %add74 = add nsw i64 %63, 3, !dbg !2851
  %64 = load i8*, i8** %src.addr, align 8, !dbg !2852
  %arrayidx75 = getelementptr inbounds i8, i8* %64, i64 %add74, !dbg !2852
  %65 = load i8, i8* %arrayidx75, align 1, !dbg !2852
  %conv76 = zext i8 %65 to i32, !dbg !2852
  %mul77 = mul nsw i32 %62, %conv76, !dbg !2853
  %add78 = add nsw i32 %add73, %mul77, !dbg !2854
  %66 = load i32, i32* %bias, align 4, !dbg !2855
  %add79 = add nsw i32 %add78, %66, !dbg !2856
  %shr80 = ashr i32 %add79, 6, !dbg !2857
  %add81 = add nsw i32 %conv61, %shr80, !dbg !2858
  %add82 = add nsw i32 %add81, 1, !dbg !2859
  %shr83 = ashr i32 %add82, 1, !dbg !2860
  %conv84 = trunc i32 %shr83 to i8, !dbg !2861
  %67 = load i8*, i8** %dst.addr, align 8, !dbg !2862
  %arrayidx85 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !2862
  store i8 %conv84, i8* %arrayidx85, align 1, !dbg !2863
  %68 = load i8*, i8** %dst.addr, align 8, !dbg !2864
  %arrayidx86 = getelementptr inbounds i8, i8* %68, i64 3, !dbg !2864
  %69 = load i8, i8* %arrayidx86, align 1, !dbg !2864
  %conv87 = zext i8 %69 to i32, !dbg !2865
  %70 = load i32, i32* %A, align 4, !dbg !2866
  %71 = load i8*, i8** %src.addr, align 8, !dbg !2867
  %arrayidx88 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !2867
  %72 = load i8, i8* %arrayidx88, align 1, !dbg !2867
  %conv89 = zext i8 %72 to i32, !dbg !2867
  %mul90 = mul nsw i32 %70, %conv89, !dbg !2868
  %73 = load i32, i32* %B, align 4, !dbg !2869
  %74 = load i8*, i8** %src.addr, align 8, !dbg !2870
  %arrayidx91 = getelementptr inbounds i8, i8* %74, i64 4, !dbg !2870
  %75 = load i8, i8* %arrayidx91, align 1, !dbg !2870
  %conv92 = zext i8 %75 to i32, !dbg !2870
  %mul93 = mul nsw i32 %73, %conv92, !dbg !2871
  %add94 = add nsw i32 %mul90, %mul93, !dbg !2872
  %76 = load i32, i32* %C, align 4, !dbg !2873
  %77 = load i64, i64* %stride.addr, align 8, !dbg !2874
  %add95 = add nsw i64 %77, 3, !dbg !2875
  %78 = load i8*, i8** %src.addr, align 8, !dbg !2876
  %arrayidx96 = getelementptr inbounds i8, i8* %78, i64 %add95, !dbg !2876
  %79 = load i8, i8* %arrayidx96, align 1, !dbg !2876
  %conv97 = zext i8 %79 to i32, !dbg !2876
  %mul98 = mul nsw i32 %76, %conv97, !dbg !2877
  %add99 = add nsw i32 %add94, %mul98, !dbg !2878
  %80 = load i32, i32* %D, align 4, !dbg !2879
  %81 = load i64, i64* %stride.addr, align 8, !dbg !2880
  %add100 = add nsw i64 %81, 4, !dbg !2881
  %82 = load i8*, i8** %src.addr, align 8, !dbg !2882
  %arrayidx101 = getelementptr inbounds i8, i8* %82, i64 %add100, !dbg !2882
  %83 = load i8, i8* %arrayidx101, align 1, !dbg !2882
  %conv102 = zext i8 %83 to i32, !dbg !2882
  %mul103 = mul nsw i32 %80, %conv102, !dbg !2883
  %add104 = add nsw i32 %add99, %mul103, !dbg !2884
  %84 = load i32, i32* %bias, align 4, !dbg !2885
  %add105 = add nsw i32 %add104, %84, !dbg !2886
  %shr106 = ashr i32 %add105, 6, !dbg !2887
  %add107 = add nsw i32 %conv87, %shr106, !dbg !2888
  %add108 = add nsw i32 %add107, 1, !dbg !2889
  %shr109 = ashr i32 %add108, 1, !dbg !2890
  %conv110 = trunc i32 %shr109 to i8, !dbg !2891
  %85 = load i8*, i8** %dst.addr, align 8, !dbg !2892
  %arrayidx111 = getelementptr inbounds i8, i8* %85, i64 3, !dbg !2892
  store i8 %conv110, i8* %arrayidx111, align 1, !dbg !2893
  %86 = load i64, i64* %stride.addr, align 8, !dbg !2894
  %87 = load i8*, i8** %dst.addr, align 8, !dbg !2895
  %add.ptr = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !2895
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2895
  %88 = load i64, i64* %stride.addr, align 8, !dbg !2896
  %89 = load i8*, i8** %src.addr, align 8, !dbg !2897
  %add.ptr112 = getelementptr inbounds i8, i8* %89, i64 %88, !dbg !2897
  store i8* %add.ptr112, i8** %src.addr, align 8, !dbg !2897
  br label %for.inc, !dbg !2898

for.inc:                                          ; preds = %for.body
  %90 = load i32, i32* %i, align 4, !dbg !2899
  %inc = add nsw i32 %90, 1, !dbg !2899
  store i32 %inc, i32* %i, align 4, !dbg !2899
  br label %for.cond, !dbg !2901, !llvm.loop !2902

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2904

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %E, metadata !2906, metadata !113), !dbg !2908
  %91 = load i32, i32* %B, align 4, !dbg !2909
  %92 = load i32, i32* %C, align 4, !dbg !2911
  %add113 = add nsw i32 %91, %92, !dbg !2912
  store i32 %add113, i32* %E, align 4, !dbg !2913
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2914, metadata !113), !dbg !2915
  %93 = load i32, i32* %C, align 4, !dbg !2916
  %tobool114 = icmp ne i32 %93, 0, !dbg !2916
  br i1 %tobool114, label %cond.true, label %cond.false, !dbg !2916

cond.true:                                        ; preds = %if.else
  %94 = load i64, i64* %stride.addr, align 8, !dbg !2917
  br label %cond.end, !dbg !2919

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !2920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %94, %cond.true ], [ 1, %cond.false ], !dbg !2922
  store i64 %cond, i64* %step, align 8, !dbg !2924
  store i32 0, i32* %i, align 4, !dbg !2925
  br label %for.cond115, !dbg !2926

for.cond115:                                      ; preds = %for.inc189, %cond.end
  %95 = load i32, i32* %i, align 4, !dbg !2927
  %96 = load i32, i32* %h.addr, align 4, !dbg !2931
  %cmp116 = icmp slt i32 %95, %96, !dbg !2932
  br i1 %cmp116, label %for.body118, label %for.end191, !dbg !2933

for.body118:                                      ; preds = %for.cond115
  %97 = load i8*, i8** %dst.addr, align 8, !dbg !2934
  %arrayidx119 = getelementptr inbounds i8, i8* %97, i64 0, !dbg !2934
  %98 = load i8, i8* %arrayidx119, align 1, !dbg !2934
  %conv120 = zext i8 %98 to i32, !dbg !2937
  %99 = load i32, i32* %A, align 4, !dbg !2938
  %100 = load i8*, i8** %src.addr, align 8, !dbg !2939
  %arrayidx121 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !2939
  %101 = load i8, i8* %arrayidx121, align 1, !dbg !2939
  %conv122 = zext i8 %101 to i32, !dbg !2939
  %mul123 = mul nsw i32 %99, %conv122, !dbg !2940
  %102 = load i32, i32* %E, align 4, !dbg !2941
  %103 = load i64, i64* %step, align 8, !dbg !2942
  %add124 = add nsw i64 %103, 0, !dbg !2943
  %104 = load i8*, i8** %src.addr, align 8, !dbg !2944
  %arrayidx125 = getelementptr inbounds i8, i8* %104, i64 %add124, !dbg !2944
  %105 = load i8, i8* %arrayidx125, align 1, !dbg !2944
  %conv126 = zext i8 %105 to i32, !dbg !2944
  %mul127 = mul nsw i32 %102, %conv126, !dbg !2945
  %add128 = add nsw i32 %mul123, %mul127, !dbg !2946
  %106 = load i32, i32* %bias, align 4, !dbg !2947
  %add129 = add nsw i32 %add128, %106, !dbg !2948
  %shr130 = ashr i32 %add129, 6, !dbg !2949
  %add131 = add nsw i32 %conv120, %shr130, !dbg !2950
  %add132 = add nsw i32 %add131, 1, !dbg !2951
  %shr133 = ashr i32 %add132, 1, !dbg !2952
  %conv134 = trunc i32 %shr133 to i8, !dbg !2953
  %107 = load i8*, i8** %dst.addr, align 8, !dbg !2954
  %arrayidx135 = getelementptr inbounds i8, i8* %107, i64 0, !dbg !2954
  store i8 %conv134, i8* %arrayidx135, align 1, !dbg !2955
  %108 = load i8*, i8** %dst.addr, align 8, !dbg !2956
  %arrayidx136 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !2956
  %109 = load i8, i8* %arrayidx136, align 1, !dbg !2956
  %conv137 = zext i8 %109 to i32, !dbg !2957
  %110 = load i32, i32* %A, align 4, !dbg !2958
  %111 = load i8*, i8** %src.addr, align 8, !dbg !2959
  %arrayidx138 = getelementptr inbounds i8, i8* %111, i64 1, !dbg !2959
  %112 = load i8, i8* %arrayidx138, align 1, !dbg !2959
  %conv139 = zext i8 %112 to i32, !dbg !2959
  %mul140 = mul nsw i32 %110, %conv139, !dbg !2960
  %113 = load i32, i32* %E, align 4, !dbg !2961
  %114 = load i64, i64* %step, align 8, !dbg !2962
  %add141 = add nsw i64 %114, 1, !dbg !2963
  %115 = load i8*, i8** %src.addr, align 8, !dbg !2964
  %arrayidx142 = getelementptr inbounds i8, i8* %115, i64 %add141, !dbg !2964
  %116 = load i8, i8* %arrayidx142, align 1, !dbg !2964
  %conv143 = zext i8 %116 to i32, !dbg !2964
  %mul144 = mul nsw i32 %113, %conv143, !dbg !2965
  %add145 = add nsw i32 %mul140, %mul144, !dbg !2966
  %117 = load i32, i32* %bias, align 4, !dbg !2967
  %add146 = add nsw i32 %add145, %117, !dbg !2968
  %shr147 = ashr i32 %add146, 6, !dbg !2969
  %add148 = add nsw i32 %conv137, %shr147, !dbg !2970
  %add149 = add nsw i32 %add148, 1, !dbg !2971
  %shr150 = ashr i32 %add149, 1, !dbg !2972
  %conv151 = trunc i32 %shr150 to i8, !dbg !2973
  %118 = load i8*, i8** %dst.addr, align 8, !dbg !2974
  %arrayidx152 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !2974
  store i8 %conv151, i8* %arrayidx152, align 1, !dbg !2975
  %119 = load i8*, i8** %dst.addr, align 8, !dbg !2976
  %arrayidx153 = getelementptr inbounds i8, i8* %119, i64 2, !dbg !2976
  %120 = load i8, i8* %arrayidx153, align 1, !dbg !2976
  %conv154 = zext i8 %120 to i32, !dbg !2977
  %121 = load i32, i32* %A, align 4, !dbg !2978
  %122 = load i8*, i8** %src.addr, align 8, !dbg !2979
  %arrayidx155 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !2979
  %123 = load i8, i8* %arrayidx155, align 1, !dbg !2979
  %conv156 = zext i8 %123 to i32, !dbg !2979
  %mul157 = mul nsw i32 %121, %conv156, !dbg !2980
  %124 = load i32, i32* %E, align 4, !dbg !2981
  %125 = load i64, i64* %step, align 8, !dbg !2982
  %add158 = add nsw i64 %125, 2, !dbg !2983
  %126 = load i8*, i8** %src.addr, align 8, !dbg !2984
  %arrayidx159 = getelementptr inbounds i8, i8* %126, i64 %add158, !dbg !2984
  %127 = load i8, i8* %arrayidx159, align 1, !dbg !2984
  %conv160 = zext i8 %127 to i32, !dbg !2984
  %mul161 = mul nsw i32 %124, %conv160, !dbg !2985
  %add162 = add nsw i32 %mul157, %mul161, !dbg !2986
  %128 = load i32, i32* %bias, align 4, !dbg !2987
  %add163 = add nsw i32 %add162, %128, !dbg !2988
  %shr164 = ashr i32 %add163, 6, !dbg !2989
  %add165 = add nsw i32 %conv154, %shr164, !dbg !2990
  %add166 = add nsw i32 %add165, 1, !dbg !2991
  %shr167 = ashr i32 %add166, 1, !dbg !2992
  %conv168 = trunc i32 %shr167 to i8, !dbg !2993
  %129 = load i8*, i8** %dst.addr, align 8, !dbg !2994
  %arrayidx169 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !2994
  store i8 %conv168, i8* %arrayidx169, align 1, !dbg !2995
  %130 = load i8*, i8** %dst.addr, align 8, !dbg !2996
  %arrayidx170 = getelementptr inbounds i8, i8* %130, i64 3, !dbg !2996
  %131 = load i8, i8* %arrayidx170, align 1, !dbg !2996
  %conv171 = zext i8 %131 to i32, !dbg !2997
  %132 = load i32, i32* %A, align 4, !dbg !2998
  %133 = load i8*, i8** %src.addr, align 8, !dbg !2999
  %arrayidx172 = getelementptr inbounds i8, i8* %133, i64 3, !dbg !2999
  %134 = load i8, i8* %arrayidx172, align 1, !dbg !2999
  %conv173 = zext i8 %134 to i32, !dbg !2999
  %mul174 = mul nsw i32 %132, %conv173, !dbg !3000
  %135 = load i32, i32* %E, align 4, !dbg !3001
  %136 = load i64, i64* %step, align 8, !dbg !3002
  %add175 = add nsw i64 %136, 3, !dbg !3003
  %137 = load i8*, i8** %src.addr, align 8, !dbg !3004
  %arrayidx176 = getelementptr inbounds i8, i8* %137, i64 %add175, !dbg !3004
  %138 = load i8, i8* %arrayidx176, align 1, !dbg !3004
  %conv177 = zext i8 %138 to i32, !dbg !3004
  %mul178 = mul nsw i32 %135, %conv177, !dbg !3005
  %add179 = add nsw i32 %mul174, %mul178, !dbg !3006
  %139 = load i32, i32* %bias, align 4, !dbg !3007
  %add180 = add nsw i32 %add179, %139, !dbg !3008
  %shr181 = ashr i32 %add180, 6, !dbg !3009
  %add182 = add nsw i32 %conv171, %shr181, !dbg !3010
  %add183 = add nsw i32 %add182, 1, !dbg !3011
  %shr184 = ashr i32 %add183, 1, !dbg !3012
  %conv185 = trunc i32 %shr184 to i8, !dbg !3013
  %140 = load i8*, i8** %dst.addr, align 8, !dbg !3014
  %arrayidx186 = getelementptr inbounds i8, i8* %140, i64 3, !dbg !3014
  store i8 %conv185, i8* %arrayidx186, align 1, !dbg !3015
  %141 = load i64, i64* %stride.addr, align 8, !dbg !3016
  %142 = load i8*, i8** %dst.addr, align 8, !dbg !3017
  %add.ptr187 = getelementptr inbounds i8, i8* %142, i64 %141, !dbg !3017
  store i8* %add.ptr187, i8** %dst.addr, align 8, !dbg !3017
  %143 = load i64, i64* %stride.addr, align 8, !dbg !3018
  %144 = load i8*, i8** %src.addr, align 8, !dbg !3019
  %add.ptr188 = getelementptr inbounds i8, i8* %144, i64 %143, !dbg !3019
  store i8* %add.ptr188, i8** %src.addr, align 8, !dbg !3019
  br label %for.inc189, !dbg !3020

for.inc189:                                       ; preds = %for.body118
  %145 = load i32, i32* %i, align 4, !dbg !3021
  %inc190 = add nsw i32 %145, 1, !dbg !3021
  store i32 %inc190, i32* %i, align 4, !dbg !3021
  br label %for.cond115, !dbg !3023, !llvm.loop !3024

for.end191:                                       ; preds = %for.cond115
  br label %if.end

if.end:                                           ; preds = %for.end191, %for.end
  ret void, !dbg !3026
}

; Function Attrs: nounwind uwtable
define internal void @rv40_weight_func_rnd_16(i8* %dst, i8* %src1, i8* %src2, i32 %w1, i32 %w2, i64 %stride) #3 !dbg !3028 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %w1.addr = alloca i32, align 4
  %w2.addr = alloca i32, align 4
  %stride.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3029, metadata !113), !dbg !3030
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !3031, metadata !113), !dbg !3032
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !3033, metadata !113), !dbg !3034
  store i32 %w1, i32* %w1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w1.addr, metadata !3035, metadata !113), !dbg !3036
  store i32 %w2, i32* %w2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr, metadata !3037, metadata !113), !dbg !3038
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3039, metadata !113), !dbg !3040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3041, metadata !113), !dbg !3042
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3043, metadata !113), !dbg !3044
  store i32 0, i32* %j, align 4, !dbg !3045
  br label %for.cond, !dbg !3047

for.cond:                                         ; preds = %for.inc16, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3048
  %cmp = icmp slt i32 %0, 16, !dbg !3051
  br i1 %cmp, label %for.body, label %for.end18, !dbg !3052

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3053
  br label %for.cond1, !dbg !3057

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !3058
  %cmp2 = icmp slt i32 %1, 16, !dbg !3061
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3062

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %w2.addr, align 4, !dbg !3063
  %3 = load i32, i32* %i, align 4, !dbg !3065
  %idxprom = sext i32 %3 to i64, !dbg !3066
  %4 = load i8*, i8** %src1.addr, align 8, !dbg !3066
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3066
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3066
  %conv = zext i8 %5 to i32, !dbg !3066
  %mul = mul nsw i32 %2, %conv, !dbg !3067
  %shr = ashr i32 %mul, 9, !dbg !3068
  %6 = load i32, i32* %w1.addr, align 4, !dbg !3069
  %7 = load i32, i32* %i, align 4, !dbg !3070
  %idxprom4 = sext i32 %7 to i64, !dbg !3071
  %8 = load i8*, i8** %src2.addr, align 8, !dbg !3071
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !3071
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3071
  %conv6 = zext i8 %9 to i32, !dbg !3071
  %mul7 = mul nsw i32 %6, %conv6, !dbg !3072
  %shr8 = ashr i32 %mul7, 9, !dbg !3073
  %add = add nsw i32 %shr, %shr8, !dbg !3074
  %add9 = add nsw i32 %add, 16, !dbg !3075
  %shr10 = ashr i32 %add9, 5, !dbg !3076
  %conv11 = trunc i32 %shr10 to i8, !dbg !3077
  %10 = load i32, i32* %i, align 4, !dbg !3078
  %idxprom12 = sext i32 %10 to i64, !dbg !3079
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3079
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 %idxprom12, !dbg !3079
  store i8 %conv11, i8* %arrayidx13, align 1, !dbg !3080
  br label %for.inc, !dbg !3079

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !3081
  %inc = add nsw i32 %12, 1, !dbg !3081
  store i32 %inc, i32* %i, align 4, !dbg !3081
  br label %for.cond1, !dbg !3083, !llvm.loop !3084

for.end:                                          ; preds = %for.cond1
  %13 = load i64, i64* %stride.addr, align 8, !dbg !3086
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !3088
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3088
  store i8* %add.ptr, i8** %src1.addr, align 8, !dbg !3088
  %15 = load i64, i64* %stride.addr, align 8, !dbg !3089
  %16 = load i8*, i8** %src2.addr, align 8, !dbg !3090
  %add.ptr14 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !3090
  store i8* %add.ptr14, i8** %src2.addr, align 8, !dbg !3090
  %17 = load i64, i64* %stride.addr, align 8, !dbg !3091
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3092
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !3092
  store i8* %add.ptr15, i8** %dst.addr, align 8, !dbg !3092
  br label %for.inc16, !dbg !3093

for.inc16:                                        ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !3094
  %inc17 = add nsw i32 %19, 1, !dbg !3094
  store i32 %inc17, i32* %j, align 4, !dbg !3094
  br label %for.cond, !dbg !3096, !llvm.loop !3097

for.end18:                                        ; preds = %for.cond
  ret void, !dbg !3099
}

; Function Attrs: nounwind uwtable
define internal void @rv40_weight_func_rnd_8(i8* %dst, i8* %src1, i8* %src2, i32 %w1, i32 %w2, i64 %stride) #3 !dbg !3101 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %w1.addr = alloca i32, align 4
  %w2.addr = alloca i32, align 4
  %stride.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3102, metadata !113), !dbg !3103
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !3104, metadata !113), !dbg !3105
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !3106, metadata !113), !dbg !3107
  store i32 %w1, i32* %w1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w1.addr, metadata !3108, metadata !113), !dbg !3109
  store i32 %w2, i32* %w2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr, metadata !3110, metadata !113), !dbg !3111
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3112, metadata !113), !dbg !3113
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3114, metadata !113), !dbg !3115
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3116, metadata !113), !dbg !3117
  store i32 0, i32* %j, align 4, !dbg !3118
  br label %for.cond, !dbg !3120

for.cond:                                         ; preds = %for.inc16, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3121
  %cmp = icmp slt i32 %0, 8, !dbg !3124
  br i1 %cmp, label %for.body, label %for.end18, !dbg !3125

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3126
  br label %for.cond1, !dbg !3130

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !3131
  %cmp2 = icmp slt i32 %1, 8, !dbg !3134
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3135

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %w2.addr, align 4, !dbg !3136
  %3 = load i32, i32* %i, align 4, !dbg !3138
  %idxprom = sext i32 %3 to i64, !dbg !3139
  %4 = load i8*, i8** %src1.addr, align 8, !dbg !3139
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3139
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3139
  %conv = zext i8 %5 to i32, !dbg !3139
  %mul = mul nsw i32 %2, %conv, !dbg !3140
  %shr = ashr i32 %mul, 9, !dbg !3141
  %6 = load i32, i32* %w1.addr, align 4, !dbg !3142
  %7 = load i32, i32* %i, align 4, !dbg !3143
  %idxprom4 = sext i32 %7 to i64, !dbg !3144
  %8 = load i8*, i8** %src2.addr, align 8, !dbg !3144
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !3144
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3144
  %conv6 = zext i8 %9 to i32, !dbg !3144
  %mul7 = mul nsw i32 %6, %conv6, !dbg !3145
  %shr8 = ashr i32 %mul7, 9, !dbg !3146
  %add = add nsw i32 %shr, %shr8, !dbg !3147
  %add9 = add nsw i32 %add, 16, !dbg !3148
  %shr10 = ashr i32 %add9, 5, !dbg !3149
  %conv11 = trunc i32 %shr10 to i8, !dbg !3150
  %10 = load i32, i32* %i, align 4, !dbg !3151
  %idxprom12 = sext i32 %10 to i64, !dbg !3152
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3152
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 %idxprom12, !dbg !3152
  store i8 %conv11, i8* %arrayidx13, align 1, !dbg !3153
  br label %for.inc, !dbg !3152

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !3154
  %inc = add nsw i32 %12, 1, !dbg !3154
  store i32 %inc, i32* %i, align 4, !dbg !3154
  br label %for.cond1, !dbg !3156, !llvm.loop !3157

for.end:                                          ; preds = %for.cond1
  %13 = load i64, i64* %stride.addr, align 8, !dbg !3159
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !3161
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3161
  store i8* %add.ptr, i8** %src1.addr, align 8, !dbg !3161
  %15 = load i64, i64* %stride.addr, align 8, !dbg !3162
  %16 = load i8*, i8** %src2.addr, align 8, !dbg !3163
  %add.ptr14 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !3163
  store i8* %add.ptr14, i8** %src2.addr, align 8, !dbg !3163
  %17 = load i64, i64* %stride.addr, align 8, !dbg !3164
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3165
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !3165
  store i8* %add.ptr15, i8** %dst.addr, align 8, !dbg !3165
  br label %for.inc16, !dbg !3166

for.inc16:                                        ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !3167
  %inc17 = add nsw i32 %19, 1, !dbg !3167
  store i32 %inc17, i32* %j, align 4, !dbg !3167
  br label %for.cond, !dbg !3169, !llvm.loop !3170

for.end18:                                        ; preds = %for.cond
  ret void, !dbg !3172
}

; Function Attrs: nounwind uwtable
define internal void @rv40_weight_func_nornd_16(i8* %dst, i8* %src1, i8* %src2, i32 %w1, i32 %w2, i64 %stride) #3 !dbg !3174 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %w1.addr = alloca i32, align 4
  %w2.addr = alloca i32, align 4
  %stride.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3175, metadata !113), !dbg !3176
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !3177, metadata !113), !dbg !3178
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !3179, metadata !113), !dbg !3180
  store i32 %w1, i32* %w1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w1.addr, metadata !3181, metadata !113), !dbg !3182
  store i32 %w2, i32* %w2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr, metadata !3183, metadata !113), !dbg !3184
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3185, metadata !113), !dbg !3186
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3187, metadata !113), !dbg !3188
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3189, metadata !113), !dbg !3190
  store i32 0, i32* %j, align 4, !dbg !3191
  br label %for.cond, !dbg !3193

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3194
  %cmp = icmp slt i32 %0, 16, !dbg !3197
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3198

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3199
  br label %for.cond1, !dbg !3203

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !3204
  %cmp2 = icmp slt i32 %1, 16, !dbg !3207
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3208

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %w2.addr, align 4, !dbg !3209
  %3 = load i32, i32* %i, align 4, !dbg !3211
  %idxprom = sext i32 %3 to i64, !dbg !3212
  %4 = load i8*, i8** %src1.addr, align 8, !dbg !3212
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3212
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3212
  %conv = zext i8 %5 to i32, !dbg !3212
  %mul = mul nsw i32 %2, %conv, !dbg !3213
  %6 = load i32, i32* %w1.addr, align 4, !dbg !3214
  %7 = load i32, i32* %i, align 4, !dbg !3215
  %idxprom4 = sext i32 %7 to i64, !dbg !3216
  %8 = load i8*, i8** %src2.addr, align 8, !dbg !3216
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !3216
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3216
  %conv6 = zext i8 %9 to i32, !dbg !3216
  %mul7 = mul nsw i32 %6, %conv6, !dbg !3217
  %add = add nsw i32 %mul, %mul7, !dbg !3218
  %add8 = add nsw i32 %add, 16, !dbg !3219
  %shr = ashr i32 %add8, 5, !dbg !3220
  %conv9 = trunc i32 %shr to i8, !dbg !3221
  %10 = load i32, i32* %i, align 4, !dbg !3222
  %idxprom10 = sext i32 %10 to i64, !dbg !3223
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3223
  %arrayidx11 = getelementptr inbounds i8, i8* %11, i64 %idxprom10, !dbg !3223
  store i8 %conv9, i8* %arrayidx11, align 1, !dbg !3224
  br label %for.inc, !dbg !3223

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !3225
  %inc = add nsw i32 %12, 1, !dbg !3225
  store i32 %inc, i32* %i, align 4, !dbg !3225
  br label %for.cond1, !dbg !3227, !llvm.loop !3228

for.end:                                          ; preds = %for.cond1
  %13 = load i64, i64* %stride.addr, align 8, !dbg !3230
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !3232
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3232
  store i8* %add.ptr, i8** %src1.addr, align 8, !dbg !3232
  %15 = load i64, i64* %stride.addr, align 8, !dbg !3233
  %16 = load i8*, i8** %src2.addr, align 8, !dbg !3234
  %add.ptr12 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !3234
  store i8* %add.ptr12, i8** %src2.addr, align 8, !dbg !3234
  %17 = load i64, i64* %stride.addr, align 8, !dbg !3235
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3236
  %add.ptr13 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !3236
  store i8* %add.ptr13, i8** %dst.addr, align 8, !dbg !3236
  br label %for.inc14, !dbg !3237

for.inc14:                                        ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !3238
  %inc15 = add nsw i32 %19, 1, !dbg !3238
  store i32 %inc15, i32* %j, align 4, !dbg !3238
  br label %for.cond, !dbg !3240, !llvm.loop !3241

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3243
}

; Function Attrs: nounwind uwtable
define internal void @rv40_weight_func_nornd_8(i8* %dst, i8* %src1, i8* %src2, i32 %w1, i32 %w2, i64 %stride) #3 !dbg !3245 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %w1.addr = alloca i32, align 4
  %w2.addr = alloca i32, align 4
  %stride.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3246, metadata !113), !dbg !3247
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !3248, metadata !113), !dbg !3249
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !3250, metadata !113), !dbg !3251
  store i32 %w1, i32* %w1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w1.addr, metadata !3252, metadata !113), !dbg !3253
  store i32 %w2, i32* %w2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr, metadata !3254, metadata !113), !dbg !3255
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3256, metadata !113), !dbg !3257
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3258, metadata !113), !dbg !3259
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3260, metadata !113), !dbg !3261
  store i32 0, i32* %j, align 4, !dbg !3262
  br label %for.cond, !dbg !3264

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3265
  %cmp = icmp slt i32 %0, 8, !dbg !3268
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3269

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3270
  br label %for.cond1, !dbg !3274

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !3275
  %cmp2 = icmp slt i32 %1, 8, !dbg !3278
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3279

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %w2.addr, align 4, !dbg !3280
  %3 = load i32, i32* %i, align 4, !dbg !3282
  %idxprom = sext i32 %3 to i64, !dbg !3283
  %4 = load i8*, i8** %src1.addr, align 8, !dbg !3283
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3283
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3283
  %conv = zext i8 %5 to i32, !dbg !3283
  %mul = mul nsw i32 %2, %conv, !dbg !3284
  %6 = load i32, i32* %w1.addr, align 4, !dbg !3285
  %7 = load i32, i32* %i, align 4, !dbg !3286
  %idxprom4 = sext i32 %7 to i64, !dbg !3287
  %8 = load i8*, i8** %src2.addr, align 8, !dbg !3287
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !3287
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3287
  %conv6 = zext i8 %9 to i32, !dbg !3287
  %mul7 = mul nsw i32 %6, %conv6, !dbg !3288
  %add = add nsw i32 %mul, %mul7, !dbg !3289
  %add8 = add nsw i32 %add, 16, !dbg !3290
  %shr = ashr i32 %add8, 5, !dbg !3291
  %conv9 = trunc i32 %shr to i8, !dbg !3292
  %10 = load i32, i32* %i, align 4, !dbg !3293
  %idxprom10 = sext i32 %10 to i64, !dbg !3294
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3294
  %arrayidx11 = getelementptr inbounds i8, i8* %11, i64 %idxprom10, !dbg !3294
  store i8 %conv9, i8* %arrayidx11, align 1, !dbg !3295
  br label %for.inc, !dbg !3294

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !3296
  %inc = add nsw i32 %12, 1, !dbg !3296
  store i32 %inc, i32* %i, align 4, !dbg !3296
  br label %for.cond1, !dbg !3298, !llvm.loop !3299

for.end:                                          ; preds = %for.cond1
  %13 = load i64, i64* %stride.addr, align 8, !dbg !3301
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !3303
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3303
  store i8* %add.ptr, i8** %src1.addr, align 8, !dbg !3303
  %15 = load i64, i64* %stride.addr, align 8, !dbg !3304
  %16 = load i8*, i8** %src2.addr, align 8, !dbg !3305
  %add.ptr12 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !3305
  store i8* %add.ptr12, i8** %src2.addr, align 8, !dbg !3305
  %17 = load i64, i64* %stride.addr, align 8, !dbg !3306
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3307
  %add.ptr13 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !3307
  store i8* %add.ptr13, i8** %dst.addr, align 8, !dbg !3307
  br label %for.inc14, !dbg !3308

for.inc14:                                        ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !3309
  %inc15 = add nsw i32 %19, 1, !dbg !3309
  store i32 %inc15, i32* %j, align 4, !dbg !3309
  br label %for.cond, !dbg !3311, !llvm.loop !3312

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3314
}

; Function Attrs: nounwind uwtable
define internal void @rv40_h_weak_loop_filter(i8* %src, i64 %stride, i32 %filter_p1, i32 %filter_q1, i32 %alpha, i32 %beta, i32 %lim_p0q0, i32 %lim_q1, i32 %lim_p1) #3 !dbg !3316 {
entry:
  %retval.i156.i = alloca i32, align 4
  %a.addr.i157.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157.i, metadata !3319, metadata !113), !dbg !3324
  %amin.addr.i158.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i158.i, metadata !3335, metadata !113), !dbg !3336
  %amax.addr.i159.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i159.i, metadata !3337, metadata !113), !dbg !3338
  %retval.i145.i = alloca i32, align 4
  %a.addr.i146.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i146.i, metadata !3319, metadata !113), !dbg !3339
  %amin.addr.i147.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i147.i, metadata !3335, metadata !113), !dbg !3343
  %amax.addr.i148.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i148.i, metadata !3337, metadata !113), !dbg !3344
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3319, metadata !113), !dbg !3345
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !3335, metadata !113), !dbg !3347
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !3337, metadata !113), !dbg !3348
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3349, metadata !113), !dbg !3350
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !3351, metadata !113), !dbg !3352
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !3353, metadata !113), !dbg !3354
  %filter_p1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_p1.addr.i, metadata !3355, metadata !113), !dbg !3356
  %filter_q1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_q1.addr.i, metadata !3357, metadata !113), !dbg !3358
  %alpha.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr.i, metadata !3359, metadata !113), !dbg !3360
  %beta.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr.i, metadata !3361, metadata !113), !dbg !3362
  %lim_p0q0.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p0q0.addr.i, metadata !3363, metadata !113), !dbg !3364
  %lim_q1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_q1.addr.i, metadata !3365, metadata !113), !dbg !3366
  %lim_p1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p1.addr.i, metadata !3367, metadata !113), !dbg !3368
  %cm.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %cm.i, metadata !3369, metadata !113), !dbg !3370
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3371, metadata !113), !dbg !3372
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !3373, metadata !113), !dbg !3374
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !3375, metadata !113), !dbg !3376
  %diff.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i, metadata !3377, metadata !113), !dbg !3378
  %diff_p1p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_p1p0.i, metadata !3379, metadata !113), !dbg !3380
  %diff_q1q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_q1q0.i, metadata !3381, metadata !113), !dbg !3382
  %diff_p1p2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_p1p2.i, metadata !3383, metadata !113), !dbg !3384
  %diff_q1q2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_q1q2.i, metadata !3385, metadata !113), !dbg !3386
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %filter_p1.addr = alloca i32, align 4
  %filter_q1.addr = alloca i32, align 4
  %alpha.addr = alloca i32, align 4
  %beta.addr = alloca i32, align 4
  %lim_p0q0.addr = alloca i32, align 4
  %lim_q1.addr = alloca i32, align 4
  %lim_p1.addr = alloca i32, align 4
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !3387, metadata !113), !dbg !3388
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3389, metadata !113), !dbg !3390
  store i32 %filter_p1, i32* %filter_p1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_p1.addr, metadata !3391, metadata !113), !dbg !3392
  store i32 %filter_q1, i32* %filter_q1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_q1.addr, metadata !3393, metadata !113), !dbg !3394
  store i32 %alpha, i32* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr, metadata !3395, metadata !113), !dbg !3396
  store i32 %beta, i32* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr, metadata !3397, metadata !113), !dbg !3398
  store i32 %lim_p0q0, i32* %lim_p0q0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p0q0.addr, metadata !3399, metadata !113), !dbg !3400
  store i32 %lim_q1, i32* %lim_q1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_q1.addr, metadata !3401, metadata !113), !dbg !3402
  store i32 %lim_p1, i32* %lim_p1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p1.addr, metadata !3403, metadata !113), !dbg !3404
  %0 = load i8*, i8** %src.addr, align 8, !dbg !3405
  %1 = load i64, i64* %stride.addr, align 8, !dbg !3406
  %conv = trunc i64 %1 to i32, !dbg !3406
  %2 = load i32, i32* %filter_p1.addr, align 4, !dbg !3407
  %3 = load i32, i32* %filter_q1.addr, align 4, !dbg !3408
  %4 = load i32, i32* %alpha.addr, align 4, !dbg !3409
  %5 = load i32, i32* %beta.addr, align 4, !dbg !3410
  %6 = load i32, i32* %lim_p0q0.addr, align 4, !dbg !3411
  %7 = load i32, i32* %lim_q1.addr, align 4, !dbg !3412
  %8 = load i32, i32* %lim_p1.addr, align 4, !dbg !3413
  store i8* %0, i8** %src.addr.i, align 8, !dbg !3414
  store i32 %conv, i32* %step.addr.i, align 4, !dbg !3414
  store i64 1, i64* %stride.addr.i, align 8, !dbg !3414
  store i32 %2, i32* %filter_p1.addr.i, align 4, !dbg !3414
  store i32 %3, i32* %filter_q1.addr.i, align 4, !dbg !3414
  store i32 %4, i32* %alpha.addr.i, align 4, !dbg !3414
  store i32 %5, i32* %beta.addr.i, align 4, !dbg !3414
  store i32 %6, i32* %lim_p0q0.addr.i, align 4, !dbg !3414
  store i32 %7, i32* %lim_q1.addr.i, align 4, !dbg !3414
  store i32 %8, i32* %lim_p1.addr.i, align 4, !dbg !3414
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm.i, align 8, !dbg !3370
  store i32 0, i32* %i.i, align 4, !dbg !3415
  br label %for.cond.i, !dbg !3416

for.cond.i:                                       ; preds = %for.inc.i, %entry
  %9 = load i32, i32* %i.i, align 4, !dbg !3417
  %cmp.i = icmp slt i32 %9, 4, !dbg !3419
  br i1 %cmp.i, label %for.body.i, label %rv40_weak_loop_filter.exit, !dbg !3420

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %step.addr.i, align 4, !dbg !3421
  %mul.i = mul nsw i32 -2, %10, !dbg !3422
  %idxprom.i = sext i32 %mul.i to i64, !dbg !3423
  %11 = load i8*, i8** %src.addr.i, align 8, !dbg !3423
  %arrayidx.i = getelementptr inbounds i8, i8* %11, i64 %idxprom.i, !dbg !3423
  %12 = load i8, i8* %arrayidx.i, align 1, !dbg !3423
  %conv.i = zext i8 %12 to i32, !dbg !3423
  %13 = load i32, i32* %step.addr.i, align 4, !dbg !3424
  %mul1.i = mul nsw i32 -1, %13, !dbg !3425
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !3426
  %14 = load i8*, i8** %src.addr.i, align 8, !dbg !3426
  %arrayidx3.i = getelementptr inbounds i8, i8* %14, i64 %idxprom2.i, !dbg !3426
  %15 = load i8, i8* %arrayidx3.i, align 1, !dbg !3426
  %conv4.i = zext i8 %15 to i32, !dbg !3426
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !3427
  store i32 %sub.i, i32* %diff_p1p0.i, align 4, !dbg !3380
  %16 = load i32, i32* %step.addr.i, align 4, !dbg !3428
  %idxprom6.i = sext i32 %16 to i64, !dbg !3429
  %17 = load i8*, i8** %src.addr.i, align 8, !dbg !3429
  %arrayidx7.i = getelementptr inbounds i8, i8* %17, i64 %idxprom6.i, !dbg !3429
  %18 = load i8, i8* %arrayidx7.i, align 1, !dbg !3429
  %conv8.i = zext i8 %18 to i32, !dbg !3429
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !3430
  %20 = load i8*, i8** %src.addr.i, align 8, !dbg !3431
  %21 = load i8, i8* %20, align 1, !dbg !3431
  %conv12.i = zext i8 %21 to i32, !dbg !3431
  %sub13.i = sub nsw i32 %conv8.i, %conv12.i, !dbg !3432
  store i32 %sub13.i, i32* %diff_q1q0.i, align 4, !dbg !3382
  %22 = load i32, i32* %step.addr.i, align 4, !dbg !3433
  %mul14.i = mul nsw i32 -2, %22, !dbg !3434
  %idxprom15.i = sext i32 %mul14.i to i64, !dbg !3435
  %23 = load i8*, i8** %src.addr.i, align 8, !dbg !3435
  %arrayidx16.i = getelementptr inbounds i8, i8* %23, i64 %idxprom15.i, !dbg !3435
  %24 = load i8, i8* %arrayidx16.i, align 1, !dbg !3435
  %conv17.i = zext i8 %24 to i32, !dbg !3435
  %25 = load i32, i32* %step.addr.i, align 4, !dbg !3436
  %mul18.i = mul nsw i32 -3, %25, !dbg !3437
  %idxprom19.i = sext i32 %mul18.i to i64, !dbg !3438
  %26 = load i8*, i8** %src.addr.i, align 8, !dbg !3438
  %arrayidx20.i = getelementptr inbounds i8, i8* %26, i64 %idxprom19.i, !dbg !3438
  %27 = load i8, i8* %arrayidx20.i, align 1, !dbg !3438
  %conv21.i = zext i8 %27 to i32, !dbg !3438
  %sub22.i = sub nsw i32 %conv17.i, %conv21.i, !dbg !3439
  store i32 %sub22.i, i32* %diff_p1p2.i, align 4, !dbg !3384
  %28 = load i32, i32* %step.addr.i, align 4, !dbg !3440
  %idxprom24.i = sext i32 %28 to i64, !dbg !3441
  %29 = load i8*, i8** %src.addr.i, align 8, !dbg !3441
  %arrayidx25.i = getelementptr inbounds i8, i8* %29, i64 %idxprom24.i, !dbg !3441
  %30 = load i8, i8* %arrayidx25.i, align 1, !dbg !3441
  %conv26.i = zext i8 %30 to i32, !dbg !3441
  %31 = load i32, i32* %step.addr.i, align 4, !dbg !3442
  %mul27.i = mul nsw i32 2, %31, !dbg !3443
  %idxprom28.i = sext i32 %mul27.i to i64, !dbg !3444
  %32 = load i8*, i8** %src.addr.i, align 8, !dbg !3444
  %arrayidx29.i = getelementptr inbounds i8, i8* %32, i64 %idxprom28.i, !dbg !3444
  %33 = load i8, i8* %arrayidx29.i, align 1, !dbg !3444
  %conv30.i = zext i8 %33 to i32, !dbg !3444
  %sub31.i = sub nsw i32 %conv26.i, %conv30.i, !dbg !3445
  store i32 %sub31.i, i32* %diff_q1q2.i, align 4, !dbg !3386
  %34 = load i32, i32* %step.addr.i, align 4, !dbg !3446
  %35 = load i8*, i8** %src.addr.i, align 8, !dbg !3447
  %36 = load i8, i8* %35, align 1, !dbg !3447
  %conv35.i = zext i8 %36 to i32, !dbg !3447
  %37 = load i32, i32* %step.addr.i, align 4, !dbg !3448
  %mul36.i = mul nsw i32 -1, %37, !dbg !3449
  %idxprom37.i = sext i32 %mul36.i to i64, !dbg !3450
  %38 = load i8*, i8** %src.addr.i, align 8, !dbg !3450
  %arrayidx38.i = getelementptr inbounds i8, i8* %38, i64 %idxprom37.i, !dbg !3450
  %39 = load i8, i8* %arrayidx38.i, align 1, !dbg !3450
  %conv39.i = zext i8 %39 to i32, !dbg !3450
  %sub40.i = sub nsw i32 %conv35.i, %conv39.i, !dbg !3451
  store i32 %sub40.i, i32* %t.i, align 4, !dbg !3452
  %40 = load i32, i32* %t.i, align 4, !dbg !3453
  %tobool.i = icmp ne i32 %40, 0, !dbg !3453
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !3455

if.then.i:                                        ; preds = %for.body.i
  br label %for.inc.i, !dbg !3456

if.end.i:                                         ; preds = %for.body.i
  %41 = load i32, i32* %alpha.addr.i, align 4, !dbg !3457
  %42 = load i32, i32* %t.i, align 4, !dbg !3458
  %cmp41.i = icmp sge i32 %42, 0, !dbg !3459
  br i1 %cmp41.i, label %cond.true.i, label %cond.false.i, !dbg !3460

cond.true.i:                                      ; preds = %if.end.i
  %43 = load i32, i32* %t.i, align 4, !dbg !3461
  br label %cond.end.i, !dbg !3463

cond.false.i:                                     ; preds = %if.end.i
  %44 = load i32, i32* %t.i, align 4, !dbg !3464
  %sub43.i = sub nsw i32 0, %44, !dbg !3466
  br label %cond.end.i, !dbg !3467

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %43, %cond.true.i ], [ %sub43.i, %cond.false.i ], !dbg !3468
  %mul44.i = mul nsw i32 %41, %cond.i, !dbg !3470
  %shr.i = ashr i32 %mul44.i, 7, !dbg !3471
  store i32 %shr.i, i32* %u.i, align 4, !dbg !3472
  %45 = load i32, i32* %u.i, align 4, !dbg !3473
  %46 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3475
  %tobool45.i = icmp ne i32 %46, 0, !dbg !3475
  br i1 %tobool45.i, label %land.rhs.i, label %land.end.i, !dbg !3476

land.rhs.i:                                       ; preds = %cond.end.i
  %47 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3477
  %tobool46.i = icmp ne i32 %47, 0, !dbg !3479
  br label %land.end.i, !dbg !3414

land.end.i:                                       ; preds = %land.rhs.i, %cond.end.i
  %48 = phi i1 [ false, %cond.end.i ], [ %tobool46.i, %land.rhs.i ], !dbg !3414
  %land.ext.i = zext i1 %48 to i32, !dbg !3480
  %sub47.i = sub nsw i32 3, %land.ext.i, !dbg !3482
  %cmp48.i = icmp sgt i32 %45, %sub47.i, !dbg !3483
  br i1 %cmp48.i, label %if.then50.i, label %if.end51.i, !dbg !3484

if.then50.i:                                      ; preds = %land.end.i
  br label %for.inc.i, !dbg !3485

if.end51.i:                                       ; preds = %land.end.i
  %49 = load i32, i32* %t.i, align 4, !dbg !3486
  %mul52.i = mul nsw i32 %49, 4, !dbg !3486
  store i32 %mul52.i, i32* %t.i, align 4, !dbg !3486
  %50 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3487
  %tobool53.i = icmp ne i32 %50, 0, !dbg !3487
  br i1 %tobool53.i, label %land.lhs.true.i, label %if.end65.i, !dbg !3489

land.lhs.true.i:                                  ; preds = %if.end51.i
  %51 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3490
  %tobool54.i = icmp ne i32 %51, 0, !dbg !3490
  br i1 %tobool54.i, label %if.then55.i, label %if.end65.i, !dbg !3492

if.then55.i:                                      ; preds = %land.lhs.true.i
  %52 = load i32, i32* %step.addr.i, align 4, !dbg !3493
  %mul56.i = mul nsw i32 -2, %52, !dbg !3494
  %idxprom57.i = sext i32 %mul56.i to i64, !dbg !3495
  %53 = load i8*, i8** %src.addr.i, align 8, !dbg !3495
  %arrayidx58.i = getelementptr inbounds i8, i8* %53, i64 %idxprom57.i, !dbg !3495
  %54 = load i8, i8* %arrayidx58.i, align 1, !dbg !3495
  %conv59.i = zext i8 %54 to i32, !dbg !3495
  %55 = load i32, i32* %step.addr.i, align 4, !dbg !3496
  %idxprom61.i = sext i32 %55 to i64, !dbg !3497
  %56 = load i8*, i8** %src.addr.i, align 8, !dbg !3497
  %arrayidx62.i = getelementptr inbounds i8, i8* %56, i64 %idxprom61.i, !dbg !3497
  %57 = load i8, i8* %arrayidx62.i, align 1, !dbg !3497
  %conv63.i = zext i8 %57 to i32, !dbg !3497
  %sub64.i = sub nsw i32 %conv59.i, %conv63.i, !dbg !3498
  %58 = load i32, i32* %t.i, align 4, !dbg !3499
  %add.i = add nsw i32 %58, %sub64.i, !dbg !3499
  store i32 %add.i, i32* %t.i, align 4, !dbg !3499
  br label %if.end65.i, !dbg !3500

if.end65.i:                                       ; preds = %if.then55.i, %land.lhs.true.i, %if.end51.i
  %59 = load i32, i32* %t.i, align 4, !dbg !3501
  %add66.i = add nsw i32 %59, 4, !dbg !3502
  %shr67.i = ashr i32 %add66.i, 3, !dbg !3503
  %60 = load i32, i32* %lim_p0q0.addr.i, align 4, !dbg !3504
  %sub68.i = sub nsw i32 0, %60, !dbg !3505
  %61 = load i32, i32* %lim_p0q0.addr.i, align 4, !dbg !3506
  store i32 %shr67.i, i32* %a.addr.i.i, align 4, !dbg !3507
  store i32 %sub68.i, i32* %amin.addr.i.i, align 4, !dbg !3507
  store i32 %61, i32* %amax.addr.i.i, align 4, !dbg !3507
  %62 = load i32, i32* %a.addr.i.i, align 4, !dbg !3508
  %63 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3510
  %cmp.i.i = icmp slt i32 %62, %63, !dbg !3511
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !3512

if.then.i.i:                                      ; preds = %if.end65.i
  %64 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3513
  store i32 %64, i32* %retval.i.i, align 4, !dbg !3515
  br label %av_clip_c.exit.i, !dbg !3515

if.else.i.i:                                      ; preds = %if.end65.i
  %65 = load i32, i32* %a.addr.i.i, align 4, !dbg !3516
  %66 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3518
  %cmp1.i.i = icmp sgt i32 %65, %66, !dbg !3519
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !3520

if.then2.i.i:                                     ; preds = %if.else.i.i
  %67 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3521
  store i32 %67, i32* %retval.i.i, align 4, !dbg !3523
  br label %av_clip_c.exit.i, !dbg !3523

if.else3.i.i:                                     ; preds = %if.else.i.i
  %68 = load i32, i32* %a.addr.i.i, align 4, !dbg !3524
  store i32 %68, i32* %retval.i.i, align 4, !dbg !3525
  br label %av_clip_c.exit.i, !dbg !3525

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %69 = load i32, i32* %retval.i.i, align 4, !dbg !3526
  store i32 %69, i32* %diff.i, align 4, !dbg !3527
  %70 = load i32, i32* %step.addr.i, align 4, !dbg !3528
  %mul69.i = mul nsw i32 -1, %70, !dbg !3529
  %idxprom70.i = sext i32 %mul69.i to i64, !dbg !3530
  %71 = load i8*, i8** %src.addr.i, align 8, !dbg !3530
  %arrayidx71.i = getelementptr inbounds i8, i8* %71, i64 %idxprom70.i, !dbg !3530
  %72 = load i8, i8* %arrayidx71.i, align 1, !dbg !3530
  %conv72.i = zext i8 %72 to i32, !dbg !3530
  %73 = load i32, i32* %diff.i, align 4, !dbg !3531
  %add73.i = add nsw i32 %conv72.i, %73, !dbg !3532
  %idxprom74.i = sext i32 %add73.i to i64, !dbg !3533
  %74 = load i8*, i8** %cm.i, align 8, !dbg !3533
  %arrayidx75.i = getelementptr inbounds i8, i8* %74, i64 %idxprom74.i, !dbg !3533
  %75 = load i8, i8* %arrayidx75.i, align 1, !dbg !3533
  %76 = load i32, i32* %step.addr.i, align 4, !dbg !3534
  %mul76.i = mul nsw i32 -1, %76, !dbg !3535
  %idxprom77.i = sext i32 %mul76.i to i64, !dbg !3536
  %77 = load i8*, i8** %src.addr.i, align 8, !dbg !3536
  %arrayidx78.i = getelementptr inbounds i8, i8* %77, i64 %idxprom77.i, !dbg !3536
  store i8 %75, i8* %arrayidx78.i, align 1, !dbg !3537
  %78 = load i32, i32* %step.addr.i, align 4, !dbg !3538
  %79 = load i8*, i8** %src.addr.i, align 8, !dbg !3539
  %80 = load i8, i8* %79, align 1, !dbg !3539
  %conv82.i = zext i8 %80 to i32, !dbg !3539
  %81 = load i32, i32* %diff.i, align 4, !dbg !3540
  %sub83.i = sub nsw i32 %conv82.i, %81, !dbg !3541
  %idxprom84.i = sext i32 %sub83.i to i64, !dbg !3542
  %82 = load i8*, i8** %cm.i, align 8, !dbg !3542
  %arrayidx85.i = getelementptr inbounds i8, i8* %82, i64 %idxprom84.i, !dbg !3542
  %83 = load i8, i8* %arrayidx85.i, align 1, !dbg !3542
  %84 = load i32, i32* %step.addr.i, align 4, !dbg !3543
  %85 = load i8*, i8** %src.addr.i, align 8, !dbg !3544
  store i8 %83, i8* %85, align 1, !dbg !3545
  %86 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3546
  %tobool89.i = icmp ne i32 %86, 0, !dbg !3546
  br i1 %tobool89.i, label %land.lhs.true90.i, label %if.end116.i, !dbg !3547

land.lhs.true90.i:                                ; preds = %av_clip_c.exit.i
  %87 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3548
  %cmp91.i = icmp sge i32 %87, 0, !dbg !3550
  br i1 %cmp91.i, label %cond.true93.i, label %cond.false94.i, !dbg !3551

cond.true93.i:                                    ; preds = %land.lhs.true90.i
  %88 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3552
  br label %cond.end96.i, !dbg !3554

cond.false94.i:                                   ; preds = %land.lhs.true90.i
  %89 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3555
  %sub95.i = sub nsw i32 0, %89, !dbg !3557
  br label %cond.end96.i, !dbg !3558

cond.end96.i:                                     ; preds = %cond.false94.i, %cond.true93.i
  %cond97.i = phi i32 [ %88, %cond.true93.i ], [ %sub95.i, %cond.false94.i ], !dbg !3559
  %90 = load i32, i32* %beta.addr.i, align 4, !dbg !3561
  %cmp98.i = icmp sle i32 %cond97.i, %90, !dbg !3562
  br i1 %cmp98.i, label %if.then100.i, label %if.end116.i, !dbg !3563

if.then100.i:                                     ; preds = %cond.end96.i
  %91 = load i32, i32* %diff_p1p0.i, align 4, !dbg !3564
  %92 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3565
  %add101.i = add nsw i32 %91, %92, !dbg !3566
  %93 = load i32, i32* %diff.i, align 4, !dbg !3567
  %sub102.i = sub nsw i32 %add101.i, %93, !dbg !3568
  %shr103.i = ashr i32 %sub102.i, 1, !dbg !3569
  store i32 %shr103.i, i32* %t.i, align 4, !dbg !3570
  %94 = load i32, i32* %step.addr.i, align 4, !dbg !3571
  %mul104.i = mul nsw i32 -2, %94, !dbg !3572
  %idxprom105.i = sext i32 %mul104.i to i64, !dbg !3573
  %95 = load i8*, i8** %src.addr.i, align 8, !dbg !3573
  %arrayidx106.i = getelementptr inbounds i8, i8* %95, i64 %idxprom105.i, !dbg !3573
  %96 = load i8, i8* %arrayidx106.i, align 1, !dbg !3573
  %conv107.i = zext i8 %96 to i32, !dbg !3573
  %97 = load i32, i32* %t.i, align 4, !dbg !3574
  %98 = load i32, i32* %lim_p1.addr.i, align 4, !dbg !3575
  %sub108.i = sub nsw i32 0, %98, !dbg !3576
  %99 = load i32, i32* %lim_p1.addr.i, align 4, !dbg !3577
  store i32 %97, i32* %a.addr.i157.i, align 4, !dbg !3578
  store i32 %sub108.i, i32* %amin.addr.i158.i, align 4, !dbg !3578
  store i32 %99, i32* %amax.addr.i159.i, align 4, !dbg !3578
  %100 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3579
  %101 = load i32, i32* %amin.addr.i158.i, align 4, !dbg !3580
  %cmp.i160.i = icmp slt i32 %100, %101, !dbg !3581
  br i1 %cmp.i160.i, label %if.then.i161.i, label %if.else.i163.i, !dbg !3582

if.then.i161.i:                                   ; preds = %if.then100.i
  %102 = load i32, i32* %amin.addr.i158.i, align 4, !dbg !3583
  store i32 %102, i32* %retval.i156.i, align 4, !dbg !3584
  br label %av_clip_c.exit166.i, !dbg !3584

if.else.i163.i:                                   ; preds = %if.then100.i
  %103 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3585
  %104 = load i32, i32* %amax.addr.i159.i, align 4, !dbg !3586
  %cmp1.i162.i = icmp sgt i32 %103, %104, !dbg !3587
  br i1 %cmp1.i162.i, label %if.then2.i164.i, label %if.else3.i165.i, !dbg !3588

if.then2.i164.i:                                  ; preds = %if.else.i163.i
  %105 = load i32, i32* %amax.addr.i159.i, align 4, !dbg !3589
  store i32 %105, i32* %retval.i156.i, align 4, !dbg !3590
  br label %av_clip_c.exit166.i, !dbg !3590

if.else3.i165.i:                                  ; preds = %if.else.i163.i
  %106 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3591
  store i32 %106, i32* %retval.i156.i, align 4, !dbg !3592
  br label %av_clip_c.exit166.i, !dbg !3592

av_clip_c.exit166.i:                              ; preds = %if.else3.i165.i, %if.then2.i164.i, %if.then.i161.i
  %107 = load i32, i32* %retval.i156.i, align 4, !dbg !3593
  %sub110.i = sub nsw i32 %conv107.i, %107, !dbg !3594
  %idxprom111.i = sext i32 %sub110.i to i64, !dbg !3595
  %108 = load i8*, i8** %cm.i, align 8, !dbg !3595
  %arrayidx112.i = getelementptr inbounds i8, i8* %108, i64 %idxprom111.i, !dbg !3595
  %109 = load i8, i8* %arrayidx112.i, align 1, !dbg !3595
  %110 = load i32, i32* %step.addr.i, align 4, !dbg !3596
  %mul113.i = mul nsw i32 -2, %110, !dbg !3597
  %idxprom114.i = sext i32 %mul113.i to i64, !dbg !3598
  %111 = load i8*, i8** %src.addr.i, align 8, !dbg !3598
  %arrayidx115.i = getelementptr inbounds i8, i8* %111, i64 %idxprom114.i, !dbg !3598
  store i8 %109, i8* %arrayidx115.i, align 1, !dbg !3599
  br label %if.end116.i, !dbg !3600

if.end116.i:                                      ; preds = %av_clip_c.exit166.i, %cond.end96.i, %av_clip_c.exit.i
  %112 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3601
  %tobool117.i = icmp ne i32 %112, 0, !dbg !3601
  br i1 %tobool117.i, label %land.lhs.true118.i, label %if.end144.i, !dbg !3602

land.lhs.true118.i:                               ; preds = %if.end116.i
  %113 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3603
  %cmp119.i = icmp sge i32 %113, 0, !dbg !3605
  br i1 %cmp119.i, label %cond.true121.i, label %cond.false122.i, !dbg !3606

cond.true121.i:                                   ; preds = %land.lhs.true118.i
  %114 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3607
  br label %cond.end124.i, !dbg !3609

cond.false122.i:                                  ; preds = %land.lhs.true118.i
  %115 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3610
  %sub123.i = sub nsw i32 0, %115, !dbg !3612
  br label %cond.end124.i, !dbg !3613

cond.end124.i:                                    ; preds = %cond.false122.i, %cond.true121.i
  %cond125.i = phi i32 [ %114, %cond.true121.i ], [ %sub123.i, %cond.false122.i ], !dbg !3614
  %116 = load i32, i32* %beta.addr.i, align 4, !dbg !3616
  %cmp126.i = icmp sle i32 %cond125.i, %116, !dbg !3617
  br i1 %cmp126.i, label %if.then128.i, label %if.end144.i, !dbg !3618

if.then128.i:                                     ; preds = %cond.end124.i
  %117 = load i32, i32* %diff_q1q0.i, align 4, !dbg !3619
  %118 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3620
  %add129.i = add nsw i32 %117, %118, !dbg !3621
  %119 = load i32, i32* %diff.i, align 4, !dbg !3622
  %add130.i = add nsw i32 %add129.i, %119, !dbg !3623
  %shr131.i = ashr i32 %add130.i, 1, !dbg !3624
  store i32 %shr131.i, i32* %t.i, align 4, !dbg !3625
  %120 = load i32, i32* %step.addr.i, align 4, !dbg !3626
  %idxprom133.i = sext i32 %120 to i64, !dbg !3627
  %121 = load i8*, i8** %src.addr.i, align 8, !dbg !3627
  %arrayidx134.i = getelementptr inbounds i8, i8* %121, i64 %idxprom133.i, !dbg !3627
  %122 = load i8, i8* %arrayidx134.i, align 1, !dbg !3627
  %conv135.i = zext i8 %122 to i32, !dbg !3627
  %123 = load i32, i32* %t.i, align 4, !dbg !3628
  %124 = load i32, i32* %lim_q1.addr.i, align 4, !dbg !3629
  %sub136.i = sub nsw i32 0, %124, !dbg !3630
  %125 = load i32, i32* %lim_q1.addr.i, align 4, !dbg !3631
  store i32 %123, i32* %a.addr.i146.i, align 4, !dbg !3632
  store i32 %sub136.i, i32* %amin.addr.i147.i, align 4, !dbg !3632
  store i32 %125, i32* %amax.addr.i148.i, align 4, !dbg !3632
  %126 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3633
  %127 = load i32, i32* %amin.addr.i147.i, align 4, !dbg !3634
  %cmp.i149.i = icmp slt i32 %126, %127, !dbg !3635
  br i1 %cmp.i149.i, label %if.then.i150.i, label %if.else.i152.i, !dbg !3636

if.then.i150.i:                                   ; preds = %if.then128.i
  %128 = load i32, i32* %amin.addr.i147.i, align 4, !dbg !3637
  store i32 %128, i32* %retval.i145.i, align 4, !dbg !3638
  br label %av_clip_c.exit155.i, !dbg !3638

if.else.i152.i:                                   ; preds = %if.then128.i
  %129 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3639
  %130 = load i32, i32* %amax.addr.i148.i, align 4, !dbg !3640
  %cmp1.i151.i = icmp sgt i32 %129, %130, !dbg !3641
  br i1 %cmp1.i151.i, label %if.then2.i153.i, label %if.else3.i154.i, !dbg !3642

if.then2.i153.i:                                  ; preds = %if.else.i152.i
  %131 = load i32, i32* %amax.addr.i148.i, align 4, !dbg !3643
  store i32 %131, i32* %retval.i145.i, align 4, !dbg !3644
  br label %av_clip_c.exit155.i, !dbg !3644

if.else3.i154.i:                                  ; preds = %if.else.i152.i
  %132 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3645
  store i32 %132, i32* %retval.i145.i, align 4, !dbg !3646
  br label %av_clip_c.exit155.i, !dbg !3646

av_clip_c.exit155.i:                              ; preds = %if.else3.i154.i, %if.then2.i153.i, %if.then.i150.i
  %133 = load i32, i32* %retval.i145.i, align 4, !dbg !3647
  %sub138.i = sub nsw i32 %conv135.i, %133, !dbg !3648
  %idxprom139.i = sext i32 %sub138.i to i64, !dbg !3649
  %134 = load i8*, i8** %cm.i, align 8, !dbg !3649
  %arrayidx140.i = getelementptr inbounds i8, i8* %134, i64 %idxprom139.i, !dbg !3649
  %135 = load i8, i8* %arrayidx140.i, align 1, !dbg !3649
  %136 = load i32, i32* %step.addr.i, align 4, !dbg !3650
  %idxprom142.i = sext i32 %136 to i64, !dbg !3651
  %137 = load i8*, i8** %src.addr.i, align 8, !dbg !3651
  %arrayidx143.i = getelementptr inbounds i8, i8* %137, i64 %idxprom142.i, !dbg !3651
  store i8 %135, i8* %arrayidx143.i, align 1, !dbg !3652
  br label %if.end144.i, !dbg !3653

if.end144.i:                                      ; preds = %av_clip_c.exit155.i, %cond.end124.i, %if.end116.i
  br label %for.inc.i, !dbg !3654

for.inc.i:                                        ; preds = %if.end144.i, %if.then50.i, %if.then.i
  %138 = load i32, i32* %i.i, align 4, !dbg !3655
  %inc.i = add nsw i32 %138, 1, !dbg !3655
  store i32 %inc.i, i32* %i.i, align 4, !dbg !3655
  %139 = load i64, i64* %stride.addr.i, align 8, !dbg !3657
  %140 = load i8*, i8** %src.addr.i, align 8, !dbg !3658
  %add.ptr.i = getelementptr inbounds i8, i8* %140, i64 %139, !dbg !3658
  store i8* %add.ptr.i, i8** %src.addr.i, align 8, !dbg !3658
  br label %for.cond.i, !dbg !3659, !llvm.loop !3660

rv40_weak_loop_filter.exit:                       ; preds = %for.cond.i
  ret void, !dbg !3662
}

; Function Attrs: nounwind uwtable
define internal void @rv40_v_weak_loop_filter(i8* %src, i64 %stride, i32 %filter_p1, i32 %filter_q1, i32 %alpha, i32 %beta, i32 %lim_p0q0, i32 %lim_q1, i32 %lim_p1) #3 !dbg !3663 {
entry:
  %retval.i156.i = alloca i32, align 4
  %a.addr.i157.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157.i, metadata !3319, metadata !113), !dbg !3664
  %amin.addr.i158.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i158.i, metadata !3335, metadata !113), !dbg !3667
  %amax.addr.i159.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i159.i, metadata !3337, metadata !113), !dbg !3668
  %retval.i145.i = alloca i32, align 4
  %a.addr.i146.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i146.i, metadata !3319, metadata !113), !dbg !3669
  %amin.addr.i147.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i147.i, metadata !3335, metadata !113), !dbg !3671
  %amax.addr.i148.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i148.i, metadata !3337, metadata !113), !dbg !3672
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3319, metadata !113), !dbg !3673
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !3335, metadata !113), !dbg !3675
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !3337, metadata !113), !dbg !3676
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3349, metadata !113), !dbg !3677
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !3351, metadata !113), !dbg !3678
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !3353, metadata !113), !dbg !3679
  %filter_p1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_p1.addr.i, metadata !3355, metadata !113), !dbg !3680
  %filter_q1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_q1.addr.i, metadata !3357, metadata !113), !dbg !3681
  %alpha.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr.i, metadata !3359, metadata !113), !dbg !3682
  %beta.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr.i, metadata !3361, metadata !113), !dbg !3683
  %lim_p0q0.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p0q0.addr.i, metadata !3363, metadata !113), !dbg !3684
  %lim_q1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_q1.addr.i, metadata !3365, metadata !113), !dbg !3685
  %lim_p1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p1.addr.i, metadata !3367, metadata !113), !dbg !3686
  %cm.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %cm.i, metadata !3369, metadata !113), !dbg !3687
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3371, metadata !113), !dbg !3688
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !3373, metadata !113), !dbg !3689
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !3375, metadata !113), !dbg !3690
  %diff.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i, metadata !3377, metadata !113), !dbg !3691
  %diff_p1p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_p1p0.i, metadata !3379, metadata !113), !dbg !3692
  %diff_q1q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_q1q0.i, metadata !3381, metadata !113), !dbg !3693
  %diff_p1p2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_p1p2.i, metadata !3383, metadata !113), !dbg !3694
  %diff_q1q2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff_q1q2.i, metadata !3385, metadata !113), !dbg !3695
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %filter_p1.addr = alloca i32, align 4
  %filter_q1.addr = alloca i32, align 4
  %alpha.addr = alloca i32, align 4
  %beta.addr = alloca i32, align 4
  %lim_p0q0.addr = alloca i32, align 4
  %lim_q1.addr = alloca i32, align 4
  %lim_p1.addr = alloca i32, align 4
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !3696, metadata !113), !dbg !3697
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3698, metadata !113), !dbg !3699
  store i32 %filter_p1, i32* %filter_p1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_p1.addr, metadata !3700, metadata !113), !dbg !3701
  store i32 %filter_q1, i32* %filter_q1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter_q1.addr, metadata !3702, metadata !113), !dbg !3703
  store i32 %alpha, i32* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr, metadata !3704, metadata !113), !dbg !3705
  store i32 %beta, i32* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr, metadata !3706, metadata !113), !dbg !3707
  store i32 %lim_p0q0, i32* %lim_p0q0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p0q0.addr, metadata !3708, metadata !113), !dbg !3709
  store i32 %lim_q1, i32* %lim_q1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_q1.addr, metadata !3710, metadata !113), !dbg !3711
  store i32 %lim_p1, i32* %lim_p1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lim_p1.addr, metadata !3712, metadata !113), !dbg !3713
  %0 = load i8*, i8** %src.addr, align 8, !dbg !3714
  %1 = load i64, i64* %stride.addr, align 8, !dbg !3715
  %2 = load i32, i32* %filter_p1.addr, align 4, !dbg !3716
  %3 = load i32, i32* %filter_q1.addr, align 4, !dbg !3717
  %4 = load i32, i32* %alpha.addr, align 4, !dbg !3718
  %5 = load i32, i32* %beta.addr, align 4, !dbg !3719
  %6 = load i32, i32* %lim_p0q0.addr, align 4, !dbg !3720
  %7 = load i32, i32* %lim_q1.addr, align 4, !dbg !3721
  %8 = load i32, i32* %lim_p1.addr, align 4, !dbg !3722
  store i8* %0, i8** %src.addr.i, align 8, !dbg !3723
  store i32 1, i32* %step.addr.i, align 4, !dbg !3723
  store i64 %1, i64* %stride.addr.i, align 8, !dbg !3723
  store i32 %2, i32* %filter_p1.addr.i, align 4, !dbg !3723
  store i32 %3, i32* %filter_q1.addr.i, align 4, !dbg !3723
  store i32 %4, i32* %alpha.addr.i, align 4, !dbg !3723
  store i32 %5, i32* %beta.addr.i, align 4, !dbg !3723
  store i32 %6, i32* %lim_p0q0.addr.i, align 4, !dbg !3723
  store i32 %7, i32* %lim_q1.addr.i, align 4, !dbg !3723
  store i32 %8, i32* %lim_p1.addr.i, align 4, !dbg !3723
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm.i, align 8, !dbg !3687
  store i32 0, i32* %i.i, align 4, !dbg !3724
  br label %for.cond.i, !dbg !3725

for.cond.i:                                       ; preds = %for.inc.i, %entry
  %9 = load i32, i32* %i.i, align 4, !dbg !3726
  %cmp.i = icmp slt i32 %9, 4, !dbg !3727
  br i1 %cmp.i, label %for.body.i, label %rv40_weak_loop_filter.exit, !dbg !3728

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %step.addr.i, align 4, !dbg !3729
  %mul.i = mul nsw i32 -2, %10, !dbg !3730
  %idxprom.i = sext i32 %mul.i to i64, !dbg !3731
  %11 = load i8*, i8** %src.addr.i, align 8, !dbg !3731
  %arrayidx.i = getelementptr inbounds i8, i8* %11, i64 %idxprom.i, !dbg !3731
  %12 = load i8, i8* %arrayidx.i, align 1, !dbg !3731
  %conv.i = zext i8 %12 to i32, !dbg !3731
  %13 = load i32, i32* %step.addr.i, align 4, !dbg !3732
  %mul1.i = mul nsw i32 -1, %13, !dbg !3733
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !3734
  %14 = load i8*, i8** %src.addr.i, align 8, !dbg !3734
  %arrayidx3.i = getelementptr inbounds i8, i8* %14, i64 %idxprom2.i, !dbg !3734
  %15 = load i8, i8* %arrayidx3.i, align 1, !dbg !3734
  %conv4.i = zext i8 %15 to i32, !dbg !3734
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !3735
  store i32 %sub.i, i32* %diff_p1p0.i, align 4, !dbg !3692
  %16 = load i32, i32* %step.addr.i, align 4, !dbg !3736
  %idxprom6.i = sext i32 %16 to i64, !dbg !3737
  %17 = load i8*, i8** %src.addr.i, align 8, !dbg !3737
  %arrayidx7.i = getelementptr inbounds i8, i8* %17, i64 %idxprom6.i, !dbg !3737
  %18 = load i8, i8* %arrayidx7.i, align 1, !dbg !3737
  %conv8.i = zext i8 %18 to i32, !dbg !3737
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !3738
  %20 = load i8*, i8** %src.addr.i, align 8, !dbg !3739
  %21 = load i8, i8* %20, align 1, !dbg !3739
  %conv12.i = zext i8 %21 to i32, !dbg !3739
  %sub13.i = sub nsw i32 %conv8.i, %conv12.i, !dbg !3740
  store i32 %sub13.i, i32* %diff_q1q0.i, align 4, !dbg !3693
  %22 = load i32, i32* %step.addr.i, align 4, !dbg !3741
  %mul14.i = mul nsw i32 -2, %22, !dbg !3742
  %idxprom15.i = sext i32 %mul14.i to i64, !dbg !3743
  %23 = load i8*, i8** %src.addr.i, align 8, !dbg !3743
  %arrayidx16.i = getelementptr inbounds i8, i8* %23, i64 %idxprom15.i, !dbg !3743
  %24 = load i8, i8* %arrayidx16.i, align 1, !dbg !3743
  %conv17.i = zext i8 %24 to i32, !dbg !3743
  %25 = load i32, i32* %step.addr.i, align 4, !dbg !3744
  %mul18.i = mul nsw i32 -3, %25, !dbg !3745
  %idxprom19.i = sext i32 %mul18.i to i64, !dbg !3746
  %26 = load i8*, i8** %src.addr.i, align 8, !dbg !3746
  %arrayidx20.i = getelementptr inbounds i8, i8* %26, i64 %idxprom19.i, !dbg !3746
  %27 = load i8, i8* %arrayidx20.i, align 1, !dbg !3746
  %conv21.i = zext i8 %27 to i32, !dbg !3746
  %sub22.i = sub nsw i32 %conv17.i, %conv21.i, !dbg !3747
  store i32 %sub22.i, i32* %diff_p1p2.i, align 4, !dbg !3694
  %28 = load i32, i32* %step.addr.i, align 4, !dbg !3748
  %idxprom24.i = sext i32 %28 to i64, !dbg !3749
  %29 = load i8*, i8** %src.addr.i, align 8, !dbg !3749
  %arrayidx25.i = getelementptr inbounds i8, i8* %29, i64 %idxprom24.i, !dbg !3749
  %30 = load i8, i8* %arrayidx25.i, align 1, !dbg !3749
  %conv26.i = zext i8 %30 to i32, !dbg !3749
  %31 = load i32, i32* %step.addr.i, align 4, !dbg !3750
  %mul27.i = mul nsw i32 2, %31, !dbg !3751
  %idxprom28.i = sext i32 %mul27.i to i64, !dbg !3752
  %32 = load i8*, i8** %src.addr.i, align 8, !dbg !3752
  %arrayidx29.i = getelementptr inbounds i8, i8* %32, i64 %idxprom28.i, !dbg !3752
  %33 = load i8, i8* %arrayidx29.i, align 1, !dbg !3752
  %conv30.i = zext i8 %33 to i32, !dbg !3752
  %sub31.i = sub nsw i32 %conv26.i, %conv30.i, !dbg !3753
  store i32 %sub31.i, i32* %diff_q1q2.i, align 4, !dbg !3695
  %34 = load i32, i32* %step.addr.i, align 4, !dbg !3754
  %35 = load i8*, i8** %src.addr.i, align 8, !dbg !3755
  %36 = load i8, i8* %35, align 1, !dbg !3755
  %conv35.i = zext i8 %36 to i32, !dbg !3755
  %37 = load i32, i32* %step.addr.i, align 4, !dbg !3756
  %mul36.i = mul nsw i32 -1, %37, !dbg !3757
  %idxprom37.i = sext i32 %mul36.i to i64, !dbg !3758
  %38 = load i8*, i8** %src.addr.i, align 8, !dbg !3758
  %arrayidx38.i = getelementptr inbounds i8, i8* %38, i64 %idxprom37.i, !dbg !3758
  %39 = load i8, i8* %arrayidx38.i, align 1, !dbg !3758
  %conv39.i = zext i8 %39 to i32, !dbg !3758
  %sub40.i = sub nsw i32 %conv35.i, %conv39.i, !dbg !3759
  store i32 %sub40.i, i32* %t.i, align 4, !dbg !3760
  %40 = load i32, i32* %t.i, align 4, !dbg !3761
  %tobool.i = icmp ne i32 %40, 0, !dbg !3761
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !3762

if.then.i:                                        ; preds = %for.body.i
  br label %for.inc.i, !dbg !3763

if.end.i:                                         ; preds = %for.body.i
  %41 = load i32, i32* %alpha.addr.i, align 4, !dbg !3764
  %42 = load i32, i32* %t.i, align 4, !dbg !3765
  %cmp41.i = icmp sge i32 %42, 0, !dbg !3766
  br i1 %cmp41.i, label %cond.true.i, label %cond.false.i, !dbg !3767

cond.true.i:                                      ; preds = %if.end.i
  %43 = load i32, i32* %t.i, align 4, !dbg !3768
  br label %cond.end.i, !dbg !3769

cond.false.i:                                     ; preds = %if.end.i
  %44 = load i32, i32* %t.i, align 4, !dbg !3770
  %sub43.i = sub nsw i32 0, %44, !dbg !3771
  br label %cond.end.i, !dbg !3772

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %43, %cond.true.i ], [ %sub43.i, %cond.false.i ], !dbg !3773
  %mul44.i = mul nsw i32 %41, %cond.i, !dbg !3774
  %shr.i = ashr i32 %mul44.i, 7, !dbg !3775
  store i32 %shr.i, i32* %u.i, align 4, !dbg !3776
  %45 = load i32, i32* %u.i, align 4, !dbg !3777
  %46 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3778
  %tobool45.i = icmp ne i32 %46, 0, !dbg !3778
  br i1 %tobool45.i, label %land.rhs.i, label %land.end.i, !dbg !3779

land.rhs.i:                                       ; preds = %cond.end.i
  %47 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3780
  %tobool46.i = icmp ne i32 %47, 0, !dbg !3781
  br label %land.end.i, !dbg !3723

land.end.i:                                       ; preds = %land.rhs.i, %cond.end.i
  %48 = phi i1 [ false, %cond.end.i ], [ %tobool46.i, %land.rhs.i ], !dbg !3723
  %land.ext.i = zext i1 %48 to i32, !dbg !3782
  %sub47.i = sub nsw i32 3, %land.ext.i, !dbg !3783
  %cmp48.i = icmp sgt i32 %45, %sub47.i, !dbg !3784
  br i1 %cmp48.i, label %if.then50.i, label %if.end51.i, !dbg !3785

if.then50.i:                                      ; preds = %land.end.i
  br label %for.inc.i, !dbg !3786

if.end51.i:                                       ; preds = %land.end.i
  %49 = load i32, i32* %t.i, align 4, !dbg !3787
  %mul52.i = mul nsw i32 %49, 4, !dbg !3787
  store i32 %mul52.i, i32* %t.i, align 4, !dbg !3787
  %50 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3788
  %tobool53.i = icmp ne i32 %50, 0, !dbg !3788
  br i1 %tobool53.i, label %land.lhs.true.i, label %if.end65.i, !dbg !3789

land.lhs.true.i:                                  ; preds = %if.end51.i
  %51 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3790
  %tobool54.i = icmp ne i32 %51, 0, !dbg !3790
  br i1 %tobool54.i, label %if.then55.i, label %if.end65.i, !dbg !3791

if.then55.i:                                      ; preds = %land.lhs.true.i
  %52 = load i32, i32* %step.addr.i, align 4, !dbg !3792
  %mul56.i = mul nsw i32 -2, %52, !dbg !3793
  %idxprom57.i = sext i32 %mul56.i to i64, !dbg !3794
  %53 = load i8*, i8** %src.addr.i, align 8, !dbg !3794
  %arrayidx58.i = getelementptr inbounds i8, i8* %53, i64 %idxprom57.i, !dbg !3794
  %54 = load i8, i8* %arrayidx58.i, align 1, !dbg !3794
  %conv59.i = zext i8 %54 to i32, !dbg !3794
  %55 = load i32, i32* %step.addr.i, align 4, !dbg !3795
  %idxprom61.i = sext i32 %55 to i64, !dbg !3796
  %56 = load i8*, i8** %src.addr.i, align 8, !dbg !3796
  %arrayidx62.i = getelementptr inbounds i8, i8* %56, i64 %idxprom61.i, !dbg !3796
  %57 = load i8, i8* %arrayidx62.i, align 1, !dbg !3796
  %conv63.i = zext i8 %57 to i32, !dbg !3796
  %sub64.i = sub nsw i32 %conv59.i, %conv63.i, !dbg !3797
  %58 = load i32, i32* %t.i, align 4, !dbg !3798
  %add.i = add nsw i32 %58, %sub64.i, !dbg !3798
  store i32 %add.i, i32* %t.i, align 4, !dbg !3798
  br label %if.end65.i, !dbg !3799

if.end65.i:                                       ; preds = %if.then55.i, %land.lhs.true.i, %if.end51.i
  %59 = load i32, i32* %t.i, align 4, !dbg !3800
  %add66.i = add nsw i32 %59, 4, !dbg !3801
  %shr67.i = ashr i32 %add66.i, 3, !dbg !3802
  %60 = load i32, i32* %lim_p0q0.addr.i, align 4, !dbg !3803
  %sub68.i = sub nsw i32 0, %60, !dbg !3804
  %61 = load i32, i32* %lim_p0q0.addr.i, align 4, !dbg !3805
  store i32 %shr67.i, i32* %a.addr.i.i, align 4, !dbg !3806
  store i32 %sub68.i, i32* %amin.addr.i.i, align 4, !dbg !3806
  store i32 %61, i32* %amax.addr.i.i, align 4, !dbg !3806
  %62 = load i32, i32* %a.addr.i.i, align 4, !dbg !3807
  %63 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3808
  %cmp.i.i = icmp slt i32 %62, %63, !dbg !3809
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !3810

if.then.i.i:                                      ; preds = %if.end65.i
  %64 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3811
  store i32 %64, i32* %retval.i.i, align 4, !dbg !3812
  br label %av_clip_c.exit.i, !dbg !3812

if.else.i.i:                                      ; preds = %if.end65.i
  %65 = load i32, i32* %a.addr.i.i, align 4, !dbg !3813
  %66 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3814
  %cmp1.i.i = icmp sgt i32 %65, %66, !dbg !3815
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !3816

if.then2.i.i:                                     ; preds = %if.else.i.i
  %67 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3817
  store i32 %67, i32* %retval.i.i, align 4, !dbg !3818
  br label %av_clip_c.exit.i, !dbg !3818

if.else3.i.i:                                     ; preds = %if.else.i.i
  %68 = load i32, i32* %a.addr.i.i, align 4, !dbg !3819
  store i32 %68, i32* %retval.i.i, align 4, !dbg !3820
  br label %av_clip_c.exit.i, !dbg !3820

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %69 = load i32, i32* %retval.i.i, align 4, !dbg !3821
  store i32 %69, i32* %diff.i, align 4, !dbg !3822
  %70 = load i32, i32* %step.addr.i, align 4, !dbg !3823
  %mul69.i = mul nsw i32 -1, %70, !dbg !3824
  %idxprom70.i = sext i32 %mul69.i to i64, !dbg !3825
  %71 = load i8*, i8** %src.addr.i, align 8, !dbg !3825
  %arrayidx71.i = getelementptr inbounds i8, i8* %71, i64 %idxprom70.i, !dbg !3825
  %72 = load i8, i8* %arrayidx71.i, align 1, !dbg !3825
  %conv72.i = zext i8 %72 to i32, !dbg !3825
  %73 = load i32, i32* %diff.i, align 4, !dbg !3826
  %add73.i = add nsw i32 %conv72.i, %73, !dbg !3827
  %idxprom74.i = sext i32 %add73.i to i64, !dbg !3828
  %74 = load i8*, i8** %cm.i, align 8, !dbg !3828
  %arrayidx75.i = getelementptr inbounds i8, i8* %74, i64 %idxprom74.i, !dbg !3828
  %75 = load i8, i8* %arrayidx75.i, align 1, !dbg !3828
  %76 = load i32, i32* %step.addr.i, align 4, !dbg !3829
  %mul76.i = mul nsw i32 -1, %76, !dbg !3830
  %idxprom77.i = sext i32 %mul76.i to i64, !dbg !3831
  %77 = load i8*, i8** %src.addr.i, align 8, !dbg !3831
  %arrayidx78.i = getelementptr inbounds i8, i8* %77, i64 %idxprom77.i, !dbg !3831
  store i8 %75, i8* %arrayidx78.i, align 1, !dbg !3832
  %78 = load i32, i32* %step.addr.i, align 4, !dbg !3833
  %79 = load i8*, i8** %src.addr.i, align 8, !dbg !3834
  %80 = load i8, i8* %79, align 1, !dbg !3834
  %conv82.i = zext i8 %80 to i32, !dbg !3834
  %81 = load i32, i32* %diff.i, align 4, !dbg !3835
  %sub83.i = sub nsw i32 %conv82.i, %81, !dbg !3836
  %idxprom84.i = sext i32 %sub83.i to i64, !dbg !3837
  %82 = load i8*, i8** %cm.i, align 8, !dbg !3837
  %arrayidx85.i = getelementptr inbounds i8, i8* %82, i64 %idxprom84.i, !dbg !3837
  %83 = load i8, i8* %arrayidx85.i, align 1, !dbg !3837
  %84 = load i32, i32* %step.addr.i, align 4, !dbg !3838
  %85 = load i8*, i8** %src.addr.i, align 8, !dbg !3839
  store i8 %83, i8* %85, align 1, !dbg !3840
  %86 = load i32, i32* %filter_p1.addr.i, align 4, !dbg !3841
  %tobool89.i = icmp ne i32 %86, 0, !dbg !3841
  br i1 %tobool89.i, label %land.lhs.true90.i, label %if.end116.i, !dbg !3842

land.lhs.true90.i:                                ; preds = %av_clip_c.exit.i
  %87 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3843
  %cmp91.i = icmp sge i32 %87, 0, !dbg !3844
  br i1 %cmp91.i, label %cond.true93.i, label %cond.false94.i, !dbg !3845

cond.true93.i:                                    ; preds = %land.lhs.true90.i
  %88 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3846
  br label %cond.end96.i, !dbg !3847

cond.false94.i:                                   ; preds = %land.lhs.true90.i
  %89 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3848
  %sub95.i = sub nsw i32 0, %89, !dbg !3849
  br label %cond.end96.i, !dbg !3850

cond.end96.i:                                     ; preds = %cond.false94.i, %cond.true93.i
  %cond97.i = phi i32 [ %88, %cond.true93.i ], [ %sub95.i, %cond.false94.i ], !dbg !3851
  %90 = load i32, i32* %beta.addr.i, align 4, !dbg !3852
  %cmp98.i = icmp sle i32 %cond97.i, %90, !dbg !3853
  br i1 %cmp98.i, label %if.then100.i, label %if.end116.i, !dbg !3854

if.then100.i:                                     ; preds = %cond.end96.i
  %91 = load i32, i32* %diff_p1p0.i, align 4, !dbg !3855
  %92 = load i32, i32* %diff_p1p2.i, align 4, !dbg !3856
  %add101.i = add nsw i32 %91, %92, !dbg !3857
  %93 = load i32, i32* %diff.i, align 4, !dbg !3858
  %sub102.i = sub nsw i32 %add101.i, %93, !dbg !3859
  %shr103.i = ashr i32 %sub102.i, 1, !dbg !3860
  store i32 %shr103.i, i32* %t.i, align 4, !dbg !3861
  %94 = load i32, i32* %step.addr.i, align 4, !dbg !3862
  %mul104.i = mul nsw i32 -2, %94, !dbg !3863
  %idxprom105.i = sext i32 %mul104.i to i64, !dbg !3864
  %95 = load i8*, i8** %src.addr.i, align 8, !dbg !3864
  %arrayidx106.i = getelementptr inbounds i8, i8* %95, i64 %idxprom105.i, !dbg !3864
  %96 = load i8, i8* %arrayidx106.i, align 1, !dbg !3864
  %conv107.i = zext i8 %96 to i32, !dbg !3864
  %97 = load i32, i32* %t.i, align 4, !dbg !3865
  %98 = load i32, i32* %lim_p1.addr.i, align 4, !dbg !3866
  %sub108.i = sub nsw i32 0, %98, !dbg !3867
  %99 = load i32, i32* %lim_p1.addr.i, align 4, !dbg !3868
  store i32 %97, i32* %a.addr.i157.i, align 4, !dbg !3869
  store i32 %sub108.i, i32* %amin.addr.i158.i, align 4, !dbg !3869
  store i32 %99, i32* %amax.addr.i159.i, align 4, !dbg !3869
  %100 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3870
  %101 = load i32, i32* %amin.addr.i158.i, align 4, !dbg !3871
  %cmp.i160.i = icmp slt i32 %100, %101, !dbg !3872
  br i1 %cmp.i160.i, label %if.then.i161.i, label %if.else.i163.i, !dbg !3873

if.then.i161.i:                                   ; preds = %if.then100.i
  %102 = load i32, i32* %amin.addr.i158.i, align 4, !dbg !3874
  store i32 %102, i32* %retval.i156.i, align 4, !dbg !3875
  br label %av_clip_c.exit166.i, !dbg !3875

if.else.i163.i:                                   ; preds = %if.then100.i
  %103 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3876
  %104 = load i32, i32* %amax.addr.i159.i, align 4, !dbg !3877
  %cmp1.i162.i = icmp sgt i32 %103, %104, !dbg !3878
  br i1 %cmp1.i162.i, label %if.then2.i164.i, label %if.else3.i165.i, !dbg !3879

if.then2.i164.i:                                  ; preds = %if.else.i163.i
  %105 = load i32, i32* %amax.addr.i159.i, align 4, !dbg !3880
  store i32 %105, i32* %retval.i156.i, align 4, !dbg !3881
  br label %av_clip_c.exit166.i, !dbg !3881

if.else3.i165.i:                                  ; preds = %if.else.i163.i
  %106 = load i32, i32* %a.addr.i157.i, align 4, !dbg !3882
  store i32 %106, i32* %retval.i156.i, align 4, !dbg !3883
  br label %av_clip_c.exit166.i, !dbg !3883

av_clip_c.exit166.i:                              ; preds = %if.else3.i165.i, %if.then2.i164.i, %if.then.i161.i
  %107 = load i32, i32* %retval.i156.i, align 4, !dbg !3884
  %sub110.i = sub nsw i32 %conv107.i, %107, !dbg !3885
  %idxprom111.i = sext i32 %sub110.i to i64, !dbg !3886
  %108 = load i8*, i8** %cm.i, align 8, !dbg !3886
  %arrayidx112.i = getelementptr inbounds i8, i8* %108, i64 %idxprom111.i, !dbg !3886
  %109 = load i8, i8* %arrayidx112.i, align 1, !dbg !3886
  %110 = load i32, i32* %step.addr.i, align 4, !dbg !3887
  %mul113.i = mul nsw i32 -2, %110, !dbg !3888
  %idxprom114.i = sext i32 %mul113.i to i64, !dbg !3889
  %111 = load i8*, i8** %src.addr.i, align 8, !dbg !3889
  %arrayidx115.i = getelementptr inbounds i8, i8* %111, i64 %idxprom114.i, !dbg !3889
  store i8 %109, i8* %arrayidx115.i, align 1, !dbg !3890
  br label %if.end116.i, !dbg !3891

if.end116.i:                                      ; preds = %av_clip_c.exit166.i, %cond.end96.i, %av_clip_c.exit.i
  %112 = load i32, i32* %filter_q1.addr.i, align 4, !dbg !3892
  %tobool117.i = icmp ne i32 %112, 0, !dbg !3892
  br i1 %tobool117.i, label %land.lhs.true118.i, label %if.end144.i, !dbg !3893

land.lhs.true118.i:                               ; preds = %if.end116.i
  %113 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3894
  %cmp119.i = icmp sge i32 %113, 0, !dbg !3895
  br i1 %cmp119.i, label %cond.true121.i, label %cond.false122.i, !dbg !3896

cond.true121.i:                                   ; preds = %land.lhs.true118.i
  %114 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3897
  br label %cond.end124.i, !dbg !3898

cond.false122.i:                                  ; preds = %land.lhs.true118.i
  %115 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3899
  %sub123.i = sub nsw i32 0, %115, !dbg !3900
  br label %cond.end124.i, !dbg !3901

cond.end124.i:                                    ; preds = %cond.false122.i, %cond.true121.i
  %cond125.i = phi i32 [ %114, %cond.true121.i ], [ %sub123.i, %cond.false122.i ], !dbg !3902
  %116 = load i32, i32* %beta.addr.i, align 4, !dbg !3903
  %cmp126.i = icmp sle i32 %cond125.i, %116, !dbg !3904
  br i1 %cmp126.i, label %if.then128.i, label %if.end144.i, !dbg !3905

if.then128.i:                                     ; preds = %cond.end124.i
  %117 = load i32, i32* %diff_q1q0.i, align 4, !dbg !3906
  %118 = load i32, i32* %diff_q1q2.i, align 4, !dbg !3907
  %add129.i = add nsw i32 %117, %118, !dbg !3908
  %119 = load i32, i32* %diff.i, align 4, !dbg !3909
  %add130.i = add nsw i32 %add129.i, %119, !dbg !3910
  %shr131.i = ashr i32 %add130.i, 1, !dbg !3911
  store i32 %shr131.i, i32* %t.i, align 4, !dbg !3912
  %120 = load i32, i32* %step.addr.i, align 4, !dbg !3913
  %idxprom133.i = sext i32 %120 to i64, !dbg !3914
  %121 = load i8*, i8** %src.addr.i, align 8, !dbg !3914
  %arrayidx134.i = getelementptr inbounds i8, i8* %121, i64 %idxprom133.i, !dbg !3914
  %122 = load i8, i8* %arrayidx134.i, align 1, !dbg !3914
  %conv135.i = zext i8 %122 to i32, !dbg !3914
  %123 = load i32, i32* %t.i, align 4, !dbg !3915
  %124 = load i32, i32* %lim_q1.addr.i, align 4, !dbg !3916
  %sub136.i = sub nsw i32 0, %124, !dbg !3917
  %125 = load i32, i32* %lim_q1.addr.i, align 4, !dbg !3918
  store i32 %123, i32* %a.addr.i146.i, align 4, !dbg !3919
  store i32 %sub136.i, i32* %amin.addr.i147.i, align 4, !dbg !3919
  store i32 %125, i32* %amax.addr.i148.i, align 4, !dbg !3919
  %126 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3920
  %127 = load i32, i32* %amin.addr.i147.i, align 4, !dbg !3921
  %cmp.i149.i = icmp slt i32 %126, %127, !dbg !3922
  br i1 %cmp.i149.i, label %if.then.i150.i, label %if.else.i152.i, !dbg !3923

if.then.i150.i:                                   ; preds = %if.then128.i
  %128 = load i32, i32* %amin.addr.i147.i, align 4, !dbg !3924
  store i32 %128, i32* %retval.i145.i, align 4, !dbg !3925
  br label %av_clip_c.exit155.i, !dbg !3925

if.else.i152.i:                                   ; preds = %if.then128.i
  %129 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3926
  %130 = load i32, i32* %amax.addr.i148.i, align 4, !dbg !3927
  %cmp1.i151.i = icmp sgt i32 %129, %130, !dbg !3928
  br i1 %cmp1.i151.i, label %if.then2.i153.i, label %if.else3.i154.i, !dbg !3929

if.then2.i153.i:                                  ; preds = %if.else.i152.i
  %131 = load i32, i32* %amax.addr.i148.i, align 4, !dbg !3930
  store i32 %131, i32* %retval.i145.i, align 4, !dbg !3931
  br label %av_clip_c.exit155.i, !dbg !3931

if.else3.i154.i:                                  ; preds = %if.else.i152.i
  %132 = load i32, i32* %a.addr.i146.i, align 4, !dbg !3932
  store i32 %132, i32* %retval.i145.i, align 4, !dbg !3933
  br label %av_clip_c.exit155.i, !dbg !3933

av_clip_c.exit155.i:                              ; preds = %if.else3.i154.i, %if.then2.i153.i, %if.then.i150.i
  %133 = load i32, i32* %retval.i145.i, align 4, !dbg !3934
  %sub138.i = sub nsw i32 %conv135.i, %133, !dbg !3935
  %idxprom139.i = sext i32 %sub138.i to i64, !dbg !3936
  %134 = load i8*, i8** %cm.i, align 8, !dbg !3936
  %arrayidx140.i = getelementptr inbounds i8, i8* %134, i64 %idxprom139.i, !dbg !3936
  %135 = load i8, i8* %arrayidx140.i, align 1, !dbg !3936
  %136 = load i32, i32* %step.addr.i, align 4, !dbg !3937
  %idxprom142.i = sext i32 %136 to i64, !dbg !3938
  %137 = load i8*, i8** %src.addr.i, align 8, !dbg !3938
  %arrayidx143.i = getelementptr inbounds i8, i8* %137, i64 %idxprom142.i, !dbg !3938
  store i8 %135, i8* %arrayidx143.i, align 1, !dbg !3939
  br label %if.end144.i, !dbg !3940

if.end144.i:                                      ; preds = %av_clip_c.exit155.i, %cond.end124.i, %if.end116.i
  br label %for.inc.i, !dbg !3941

for.inc.i:                                        ; preds = %if.end144.i, %if.then50.i, %if.then.i
  %138 = load i32, i32* %i.i, align 4, !dbg !3942
  %inc.i = add nsw i32 %138, 1, !dbg !3942
  store i32 %inc.i, i32* %i.i, align 4, !dbg !3942
  %139 = load i64, i64* %stride.addr.i, align 8, !dbg !3943
  %140 = load i8*, i8** %src.addr.i, align 8, !dbg !3944
  %add.ptr.i = getelementptr inbounds i8, i8* %140, i64 %139, !dbg !3944
  store i8* %add.ptr.i, i8** %src.addr.i, align 8, !dbg !3944
  br label %for.cond.i, !dbg !3945, !llvm.loop !3660

rv40_weak_loop_filter.exit:                       ; preds = %for.cond.i
  ret void, !dbg !3946
}

; Function Attrs: nounwind uwtable
define internal void @rv40_h_strong_loop_filter(i8* %src, i64 %stride, i32 %alpha, i32 %lims, i32 %dmode, i32 %chroma) #3 !dbg !3947 {
entry:
  %retval.i292.i = alloca i32, align 4
  %a.addr.i293.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i293.i, metadata !3319, metadata !113), !dbg !3950
  %amin.addr.i294.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i294.i, metadata !3335, metadata !113), !dbg !3961
  %amax.addr.i295.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i295.i, metadata !3337, metadata !113), !dbg !3962
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3319, metadata !113), !dbg !3963
  %amin.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i283.i, metadata !3335, metadata !113), !dbg !3967
  %amax.addr.i284.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i284.i, metadata !3337, metadata !113), !dbg !3968
  %retval.i270.i = alloca i32, align 4
  %a.addr.i271.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i271.i, metadata !3319, metadata !113), !dbg !3969
  %amin.addr.i272.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i272.i, metadata !3335, metadata !113), !dbg !3971
  %amax.addr.i273.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i273.i, metadata !3337, metadata !113), !dbg !3972
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3319, metadata !113), !dbg !3973
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !3335, metadata !113), !dbg !3975
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !3337, metadata !113), !dbg !3976
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3977, metadata !113), !dbg !3978
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !3979, metadata !113), !dbg !3980
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !3981, metadata !113), !dbg !3982
  %alpha.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr.i, metadata !3983, metadata !113), !dbg !3984
  %lims.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lims.addr.i, metadata !3985, metadata !113), !dbg !3986
  %dmode.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dmode.addr.i, metadata !3987, metadata !113), !dbg !3988
  %chroma.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr.i, metadata !3989, metadata !113), !dbg !3990
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3991, metadata !113), !dbg !3992
  %sflag.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sflag.i, metadata !3993, metadata !113), !dbg !3994
  %p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p0.i, metadata !3995, metadata !113), !dbg !3996
  %q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q0.i, metadata !3997, metadata !113), !dbg !3998
  %p1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p1.i, metadata !3999, metadata !113), !dbg !4000
  %q1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q1.i, metadata !4001, metadata !113), !dbg !4002
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !4003, metadata !113), !dbg !4004
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %alpha.addr = alloca i32, align 4
  %lims.addr = alloca i32, align 4
  %dmode.addr = alloca i32, align 4
  %chroma.addr = alloca i32, align 4
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4005, metadata !113), !dbg !4006
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4007, metadata !113), !dbg !4008
  store i32 %alpha, i32* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr, metadata !4009, metadata !113), !dbg !4010
  store i32 %lims, i32* %lims.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lims.addr, metadata !4011, metadata !113), !dbg !4012
  store i32 %dmode, i32* %dmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dmode.addr, metadata !4013, metadata !113), !dbg !4014
  store i32 %chroma, i32* %chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr, metadata !4015, metadata !113), !dbg !4016
  %0 = load i8*, i8** %src.addr, align 8, !dbg !4017
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4018
  %conv = trunc i64 %1 to i32, !dbg !4018
  %2 = load i32, i32* %alpha.addr, align 4, !dbg !4019
  %3 = load i32, i32* %lims.addr, align 4, !dbg !4020
  %4 = load i32, i32* %dmode.addr, align 4, !dbg !4021
  %5 = load i32, i32* %chroma.addr, align 4, !dbg !4022
  store i8* %0, i8** %src.addr.i, align 8, !dbg !4023
  store i32 %conv, i32* %step.addr.i, align 4, !dbg !4023
  store i64 1, i64* %stride.addr.i, align 8, !dbg !4023
  store i32 %2, i32* %alpha.addr.i, align 4, !dbg !4023
  store i32 %3, i32* %lims.addr.i, align 4, !dbg !4023
  store i32 %4, i32* %dmode.addr.i, align 4, !dbg !4023
  store i32 %5, i32* %chroma.addr.i, align 4, !dbg !4023
  store i32 0, i32* %i.i, align 4, !dbg !4024
  br label %for.cond.i, !dbg !4025

for.cond.i:                                       ; preds = %for.inc.i, %entry
  %6 = load i32, i32* %i.i, align 4, !dbg !4026
  %cmp.i = icmp slt i32 %6, 4, !dbg !4028
  br i1 %cmp.i, label %for.body.i, label %rv40_strong_loop_filter.exit, !dbg !4029

for.body.i:                                       ; preds = %for.cond.i
  %7 = load i32, i32* %step.addr.i, align 4, !dbg !4030
  %8 = load i8*, i8** %src.addr.i, align 8, !dbg !4031
  %9 = load i8, i8* %8, align 1, !dbg !4031
  %conv.i = zext i8 %9 to i32, !dbg !4031
  %10 = load i32, i32* %step.addr.i, align 4, !dbg !4032
  %mul1.i = mul nsw i32 -1, %10, !dbg !4033
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !4034
  %11 = load i8*, i8** %src.addr.i, align 8, !dbg !4034
  %arrayidx3.i = getelementptr inbounds i8, i8* %11, i64 %idxprom2.i, !dbg !4034
  %12 = load i8, i8* %arrayidx3.i, align 1, !dbg !4034
  %conv4.i = zext i8 %12 to i32, !dbg !4034
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !4035
  store i32 %sub.i, i32* %t.i, align 4, !dbg !4004
  %13 = load i32, i32* %t.i, align 4, !dbg !4036
  %tobool.i = icmp ne i32 %13, 0, !dbg !4036
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !4038

if.then.i:                                        ; preds = %for.body.i
  br label %for.inc.i, !dbg !4039

if.end.i:                                         ; preds = %for.body.i
  %14 = load i32, i32* %alpha.addr.i, align 4, !dbg !4040
  %15 = load i32, i32* %t.i, align 4, !dbg !4041
  %cmp5.i = icmp sge i32 %15, 0, !dbg !4042
  br i1 %cmp5.i, label %cond.true.i, label %cond.false.i, !dbg !4043

cond.true.i:                                      ; preds = %if.end.i
  %16 = load i32, i32* %t.i, align 4, !dbg !4044
  br label %cond.end.i, !dbg !4046

cond.false.i:                                     ; preds = %if.end.i
  %17 = load i32, i32* %t.i, align 4, !dbg !4047
  %sub7.i = sub nsw i32 0, %17, !dbg !4049
  br label %cond.end.i, !dbg !4050

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %16, %cond.true.i ], [ %sub7.i, %cond.false.i ], !dbg !4051
  %mul8.i = mul nsw i32 %14, %cond.i, !dbg !4053
  %shr.i = ashr i32 %mul8.i, 7, !dbg !4054
  store i32 %shr.i, i32* %sflag.i, align 4, !dbg !4055
  %18 = load i32, i32* %sflag.i, align 4, !dbg !4056
  %cmp9.i = icmp sgt i32 %18, 1, !dbg !4058
  br i1 %cmp9.i, label %if.then11.i, label %if.end12.i, !dbg !4059

if.then11.i:                                      ; preds = %cond.end.i
  br label %for.inc.i, !dbg !4060

if.end12.i:                                       ; preds = %cond.end.i
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !4061
  %mul13.i = mul nsw i32 -3, %19, !dbg !4062
  %idxprom14.i = sext i32 %mul13.i to i64, !dbg !4063
  %20 = load i8*, i8** %src.addr.i, align 8, !dbg !4063
  %arrayidx15.i = getelementptr inbounds i8, i8* %20, i64 %idxprom14.i, !dbg !4063
  %21 = load i8, i8* %arrayidx15.i, align 1, !dbg !4063
  %conv16.i = zext i8 %21 to i32, !dbg !4063
  %mul17.i = mul nsw i32 25, %conv16.i, !dbg !4064
  %22 = load i32, i32* %step.addr.i, align 4, !dbg !4065
  %mul18.i = mul nsw i32 -2, %22, !dbg !4066
  %idxprom19.i = sext i32 %mul18.i to i64, !dbg !4067
  %23 = load i8*, i8** %src.addr.i, align 8, !dbg !4067
  %arrayidx20.i = getelementptr inbounds i8, i8* %23, i64 %idxprom19.i, !dbg !4067
  %24 = load i8, i8* %arrayidx20.i, align 1, !dbg !4067
  %conv21.i = zext i8 %24 to i32, !dbg !4067
  %mul22.i = mul nsw i32 26, %conv21.i, !dbg !4068
  %add.i = add nsw i32 %mul17.i, %mul22.i, !dbg !4069
  %25 = load i32, i32* %step.addr.i, align 4, !dbg !4070
  %mul23.i = mul nsw i32 -1, %25, !dbg !4071
  %idxprom24.i = sext i32 %mul23.i to i64, !dbg !4072
  %26 = load i8*, i8** %src.addr.i, align 8, !dbg !4072
  %arrayidx25.i = getelementptr inbounds i8, i8* %26, i64 %idxprom24.i, !dbg !4072
  %27 = load i8, i8* %arrayidx25.i, align 1, !dbg !4072
  %conv26.i = zext i8 %27 to i32, !dbg !4072
  %mul27.i = mul nsw i32 26, %conv26.i, !dbg !4073
  %add28.i = add nsw i32 %add.i, %mul27.i, !dbg !4074
  %28 = load i32, i32* %step.addr.i, align 4, !dbg !4075
  %29 = load i8*, i8** %src.addr.i, align 8, !dbg !4076
  %30 = load i8, i8* %29, align 1, !dbg !4076
  %conv32.i = zext i8 %30 to i32, !dbg !4076
  %mul33.i = mul nsw i32 26, %conv32.i, !dbg !4077
  %add34.i = add nsw i32 %add28.i, %mul33.i, !dbg !4078
  %31 = load i32, i32* %step.addr.i, align 4, !dbg !4079
  %idxprom36.i = sext i32 %31 to i64, !dbg !4080
  %32 = load i8*, i8** %src.addr.i, align 8, !dbg !4080
  %arrayidx37.i = getelementptr inbounds i8, i8* %32, i64 %idxprom36.i, !dbg !4080
  %33 = load i8, i8* %arrayidx37.i, align 1, !dbg !4080
  %conv38.i = zext i8 %33 to i32, !dbg !4080
  %mul39.i = mul nsw i32 25, %conv38.i, !dbg !4081
  %add40.i = add nsw i32 %add34.i, %mul39.i, !dbg !4082
  %34 = load i32, i32* %dmode.addr.i, align 4, !dbg !4083
  %35 = load i32, i32* %i.i, align 4, !dbg !4084
  %add41.i = add nsw i32 %34, %35, !dbg !4085
  %idxprom42.i = sext i32 %add41.i to i64, !dbg !4086
  %arrayidx43.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_l, i64 0, i64 %idxprom42.i, !dbg !4086
  %36 = load i8, i8* %arrayidx43.i, align 1, !dbg !4086
  %conv44.i = zext i8 %36 to i32, !dbg !4086
  %add45.i = add nsw i32 %add40.i, %conv44.i, !dbg !4087
  %shr46.i = ashr i32 %add45.i, 7, !dbg !4088
  store i32 %shr46.i, i32* %p0.i, align 4, !dbg !4089
  %37 = load i32, i32* %step.addr.i, align 4, !dbg !4090
  %mul47.i = mul nsw i32 -2, %37, !dbg !4091
  %idxprom48.i = sext i32 %mul47.i to i64, !dbg !4092
  %38 = load i8*, i8** %src.addr.i, align 8, !dbg !4092
  %arrayidx49.i = getelementptr inbounds i8, i8* %38, i64 %idxprom48.i, !dbg !4092
  %39 = load i8, i8* %arrayidx49.i, align 1, !dbg !4092
  %conv50.i = zext i8 %39 to i32, !dbg !4092
  %mul51.i = mul nsw i32 25, %conv50.i, !dbg !4093
  %40 = load i32, i32* %step.addr.i, align 4, !dbg !4094
  %mul52.i = mul nsw i32 -1, %40, !dbg !4095
  %idxprom53.i = sext i32 %mul52.i to i64, !dbg !4096
  %41 = load i8*, i8** %src.addr.i, align 8, !dbg !4096
  %arrayidx54.i = getelementptr inbounds i8, i8* %41, i64 %idxprom53.i, !dbg !4096
  %42 = load i8, i8* %arrayidx54.i, align 1, !dbg !4096
  %conv55.i = zext i8 %42 to i32, !dbg !4096
  %mul56.i = mul nsw i32 26, %conv55.i, !dbg !4097
  %add57.i = add nsw i32 %mul51.i, %mul56.i, !dbg !4098
  %43 = load i32, i32* %step.addr.i, align 4, !dbg !4099
  %44 = load i8*, i8** %src.addr.i, align 8, !dbg !4100
  %45 = load i8, i8* %44, align 1, !dbg !4100
  %conv61.i = zext i8 %45 to i32, !dbg !4100
  %mul62.i = mul nsw i32 26, %conv61.i, !dbg !4101
  %add63.i = add nsw i32 %add57.i, %mul62.i, !dbg !4102
  %46 = load i32, i32* %step.addr.i, align 4, !dbg !4103
  %idxprom65.i = sext i32 %46 to i64, !dbg !4104
  %47 = load i8*, i8** %src.addr.i, align 8, !dbg !4104
  %arrayidx66.i = getelementptr inbounds i8, i8* %47, i64 %idxprom65.i, !dbg !4104
  %48 = load i8, i8* %arrayidx66.i, align 1, !dbg !4104
  %conv67.i = zext i8 %48 to i32, !dbg !4104
  %mul68.i = mul nsw i32 26, %conv67.i, !dbg !4105
  %add69.i = add nsw i32 %add63.i, %mul68.i, !dbg !4106
  %49 = load i32, i32* %step.addr.i, align 4, !dbg !4107
  %mul70.i = mul nsw i32 2, %49, !dbg !4108
  %idxprom71.i = sext i32 %mul70.i to i64, !dbg !4109
  %50 = load i8*, i8** %src.addr.i, align 8, !dbg !4109
  %arrayidx72.i = getelementptr inbounds i8, i8* %50, i64 %idxprom71.i, !dbg !4109
  %51 = load i8, i8* %arrayidx72.i, align 1, !dbg !4109
  %conv73.i = zext i8 %51 to i32, !dbg !4109
  %mul74.i = mul nsw i32 25, %conv73.i, !dbg !4110
  %add75.i = add nsw i32 %add69.i, %mul74.i, !dbg !4111
  %52 = load i32, i32* %dmode.addr.i, align 4, !dbg !4112
  %53 = load i32, i32* %i.i, align 4, !dbg !4113
  %add76.i = add nsw i32 %52, %53, !dbg !4114
  %idxprom77.i = sext i32 %add76.i to i64, !dbg !4115
  %arrayidx78.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_r, i64 0, i64 %idxprom77.i, !dbg !4115
  %54 = load i8, i8* %arrayidx78.i, align 1, !dbg !4115
  %conv79.i = zext i8 %54 to i32, !dbg !4115
  %add80.i = add nsw i32 %add75.i, %conv79.i, !dbg !4116
  %shr81.i = ashr i32 %add80.i, 7, !dbg !4117
  store i32 %shr81.i, i32* %q0.i, align 4, !dbg !4118
  %55 = load i32, i32* %sflag.i, align 4, !dbg !4119
  %tobool82.i = icmp ne i32 %55, 0, !dbg !4119
  br i1 %tobool82.i, label %if.then83.i, label %if.end105.i, !dbg !4120

if.then83.i:                                      ; preds = %if.end12.i
  %56 = load i32, i32* %p0.i, align 4, !dbg !4121
  %57 = load i32, i32* %step.addr.i, align 4, !dbg !4122
  %mul84.i = mul nsw i32 -1, %57, !dbg !4123
  %idxprom85.i = sext i32 %mul84.i to i64, !dbg !4124
  %58 = load i8*, i8** %src.addr.i, align 8, !dbg !4124
  %arrayidx86.i = getelementptr inbounds i8, i8* %58, i64 %idxprom85.i, !dbg !4124
  %59 = load i8, i8* %arrayidx86.i, align 1, !dbg !4124
  %conv87.i = zext i8 %59 to i32, !dbg !4124
  %60 = load i32, i32* %lims.addr.i, align 4, !dbg !4125
  %sub88.i = sub nsw i32 %conv87.i, %60, !dbg !4126
  %61 = load i32, i32* %step.addr.i, align 4, !dbg !4127
  %mul89.i = mul nsw i32 -1, %61, !dbg !4128
  %idxprom90.i = sext i32 %mul89.i to i64, !dbg !4129
  %62 = load i8*, i8** %src.addr.i, align 8, !dbg !4129
  %arrayidx91.i = getelementptr inbounds i8, i8* %62, i64 %idxprom90.i, !dbg !4129
  %63 = load i8, i8* %arrayidx91.i, align 1, !dbg !4129
  %conv92.i = zext i8 %63 to i32, !dbg !4129
  %64 = load i32, i32* %lims.addr.i, align 4, !dbg !4130
  %add93.i = add nsw i32 %conv92.i, %64, !dbg !4131
  store i32 %56, i32* %a.addr.i.i, align 4, !dbg !4132
  store i32 %sub88.i, i32* %amin.addr.i.i, align 4, !dbg !4132
  store i32 %add93.i, i32* %amax.addr.i.i, align 4, !dbg !4132
  %65 = load i32, i32* %a.addr.i.i, align 4, !dbg !4133
  %66 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4134
  %cmp.i.i = icmp slt i32 %65, %66, !dbg !4135
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !4136

if.then.i.i:                                      ; preds = %if.then83.i
  %67 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4137
  store i32 %67, i32* %retval.i.i, align 4, !dbg !4138
  br label %av_clip_c.exit.i, !dbg !4138

if.else.i.i:                                      ; preds = %if.then83.i
  %68 = load i32, i32* %a.addr.i.i, align 4, !dbg !4139
  %69 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4140
  %cmp1.i.i = icmp sgt i32 %68, %69, !dbg !4141
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !4142

if.then2.i.i:                                     ; preds = %if.else.i.i
  %70 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4143
  store i32 %70, i32* %retval.i.i, align 4, !dbg !4144
  br label %av_clip_c.exit.i, !dbg !4144

if.else3.i.i:                                     ; preds = %if.else.i.i
  %71 = load i32, i32* %a.addr.i.i, align 4, !dbg !4145
  store i32 %71, i32* %retval.i.i, align 4, !dbg !4146
  br label %av_clip_c.exit.i, !dbg !4146

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %72 = load i32, i32* %retval.i.i, align 4, !dbg !4147
  store i32 %72, i32* %p0.i, align 4, !dbg !4148
  %73 = load i32, i32* %q0.i, align 4, !dbg !4149
  %74 = load i32, i32* %step.addr.i, align 4, !dbg !4150
  %75 = load i8*, i8** %src.addr.i, align 8, !dbg !4151
  %76 = load i8, i8* %75, align 1, !dbg !4151
  %conv97.i = zext i8 %76 to i32, !dbg !4151
  %77 = load i32, i32* %lims.addr.i, align 4, !dbg !4152
  %sub98.i = sub nsw i32 %conv97.i, %77, !dbg !4153
  %78 = load i32, i32* %step.addr.i, align 4, !dbg !4154
  %79 = load i8*, i8** %src.addr.i, align 8, !dbg !4155
  %80 = load i8, i8* %79, align 1, !dbg !4155
  %conv102.i = zext i8 %80 to i32, !dbg !4155
  %81 = load i32, i32* %lims.addr.i, align 4, !dbg !4156
  %add103.i = add nsw i32 %conv102.i, %81, !dbg !4157
  store i32 %73, i32* %a.addr.i293.i, align 4, !dbg !4158
  store i32 %sub98.i, i32* %amin.addr.i294.i, align 4, !dbg !4158
  store i32 %add103.i, i32* %amax.addr.i295.i, align 4, !dbg !4158
  %82 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4159
  %83 = load i32, i32* %amin.addr.i294.i, align 4, !dbg !4160
  %cmp.i296.i = icmp slt i32 %82, %83, !dbg !4161
  br i1 %cmp.i296.i, label %if.then.i297.i, label %if.else.i299.i, !dbg !4162

if.then.i297.i:                                   ; preds = %av_clip_c.exit.i
  %84 = load i32, i32* %amin.addr.i294.i, align 4, !dbg !4163
  store i32 %84, i32* %retval.i292.i, align 4, !dbg !4164
  br label %av_clip_c.exit302.i, !dbg !4164

if.else.i299.i:                                   ; preds = %av_clip_c.exit.i
  %85 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4165
  %86 = load i32, i32* %amax.addr.i295.i, align 4, !dbg !4166
  %cmp1.i298.i = icmp sgt i32 %85, %86, !dbg !4167
  br i1 %cmp1.i298.i, label %if.then2.i300.i, label %if.else3.i301.i, !dbg !4168

if.then2.i300.i:                                  ; preds = %if.else.i299.i
  %87 = load i32, i32* %amax.addr.i295.i, align 4, !dbg !4169
  store i32 %87, i32* %retval.i292.i, align 4, !dbg !4170
  br label %av_clip_c.exit302.i, !dbg !4170

if.else3.i301.i:                                  ; preds = %if.else.i299.i
  %88 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4171
  store i32 %88, i32* %retval.i292.i, align 4, !dbg !4172
  br label %av_clip_c.exit302.i, !dbg !4172

av_clip_c.exit302.i:                              ; preds = %if.else3.i301.i, %if.then2.i300.i, %if.then.i297.i
  %89 = load i32, i32* %retval.i292.i, align 4, !dbg !4173
  store i32 %89, i32* %q0.i, align 4, !dbg !4174
  br label %if.end105.i, !dbg !4175

if.end105.i:                                      ; preds = %av_clip_c.exit302.i, %if.end12.i
  %90 = load i32, i32* %step.addr.i, align 4, !dbg !4176
  %mul106.i = mul nsw i32 -4, %90, !dbg !4177
  %idxprom107.i = sext i32 %mul106.i to i64, !dbg !4178
  %91 = load i8*, i8** %src.addr.i, align 8, !dbg !4178
  %arrayidx108.i = getelementptr inbounds i8, i8* %91, i64 %idxprom107.i, !dbg !4178
  %92 = load i8, i8* %arrayidx108.i, align 1, !dbg !4178
  %conv109.i = zext i8 %92 to i32, !dbg !4178
  %mul110.i = mul nsw i32 25, %conv109.i, !dbg !4179
  %93 = load i32, i32* %step.addr.i, align 4, !dbg !4180
  %mul111.i = mul nsw i32 -3, %93, !dbg !4181
  %idxprom112.i = sext i32 %mul111.i to i64, !dbg !4182
  %94 = load i8*, i8** %src.addr.i, align 8, !dbg !4182
  %arrayidx113.i = getelementptr inbounds i8, i8* %94, i64 %idxprom112.i, !dbg !4182
  %95 = load i8, i8* %arrayidx113.i, align 1, !dbg !4182
  %conv114.i = zext i8 %95 to i32, !dbg !4182
  %mul115.i = mul nsw i32 26, %conv114.i, !dbg !4183
  %add116.i = add nsw i32 %mul110.i, %mul115.i, !dbg !4184
  %96 = load i32, i32* %step.addr.i, align 4, !dbg !4185
  %mul117.i = mul nsw i32 -2, %96, !dbg !4186
  %idxprom118.i = sext i32 %mul117.i to i64, !dbg !4187
  %97 = load i8*, i8** %src.addr.i, align 8, !dbg !4187
  %arrayidx119.i = getelementptr inbounds i8, i8* %97, i64 %idxprom118.i, !dbg !4187
  %98 = load i8, i8* %arrayidx119.i, align 1, !dbg !4187
  %conv120.i = zext i8 %98 to i32, !dbg !4187
  %mul121.i = mul nsw i32 26, %conv120.i, !dbg !4188
  %add122.i = add nsw i32 %add116.i, %mul121.i, !dbg !4189
  %99 = load i32, i32* %p0.i, align 4, !dbg !4190
  %mul123.i = mul nsw i32 26, %99, !dbg !4191
  %add124.i = add nsw i32 %add122.i, %mul123.i, !dbg !4192
  %100 = load i32, i32* %step.addr.i, align 4, !dbg !4193
  %101 = load i8*, i8** %src.addr.i, align 8, !dbg !4194
  %102 = load i8, i8* %101, align 1, !dbg !4194
  %conv128.i = zext i8 %102 to i32, !dbg !4194
  %mul129.i = mul nsw i32 25, %conv128.i, !dbg !4195
  %add130.i = add nsw i32 %add124.i, %mul129.i, !dbg !4196
  %103 = load i32, i32* %dmode.addr.i, align 4, !dbg !4197
  %104 = load i32, i32* %i.i, align 4, !dbg !4198
  %add131.i = add nsw i32 %103, %104, !dbg !4199
  %idxprom132.i = sext i32 %add131.i to i64, !dbg !4200
  %arrayidx133.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_l, i64 0, i64 %idxprom132.i, !dbg !4200
  %105 = load i8, i8* %arrayidx133.i, align 1, !dbg !4200
  %conv134.i = zext i8 %105 to i32, !dbg !4200
  %add135.i = add nsw i32 %add130.i, %conv134.i, !dbg !4201
  %shr136.i = ashr i32 %add135.i, 7, !dbg !4202
  store i32 %shr136.i, i32* %p1.i, align 4, !dbg !4203
  %106 = load i32, i32* %step.addr.i, align 4, !dbg !4204
  %mul137.i = mul nsw i32 -1, %106, !dbg !4205
  %idxprom138.i = sext i32 %mul137.i to i64, !dbg !4206
  %107 = load i8*, i8** %src.addr.i, align 8, !dbg !4206
  %arrayidx139.i = getelementptr inbounds i8, i8* %107, i64 %idxprom138.i, !dbg !4206
  %108 = load i8, i8* %arrayidx139.i, align 1, !dbg !4206
  %conv140.i = zext i8 %108 to i32, !dbg !4206
  %mul141.i = mul nsw i32 25, %conv140.i, !dbg !4207
  %109 = load i32, i32* %q0.i, align 4, !dbg !4208
  %mul142.i = mul nsw i32 26, %109, !dbg !4209
  %add143.i = add nsw i32 %mul141.i, %mul142.i, !dbg !4210
  %110 = load i32, i32* %step.addr.i, align 4, !dbg !4211
  %idxprom145.i = sext i32 %110 to i64, !dbg !4212
  %111 = load i8*, i8** %src.addr.i, align 8, !dbg !4212
  %arrayidx146.i = getelementptr inbounds i8, i8* %111, i64 %idxprom145.i, !dbg !4212
  %112 = load i8, i8* %arrayidx146.i, align 1, !dbg !4212
  %conv147.i = zext i8 %112 to i32, !dbg !4212
  %mul148.i = mul nsw i32 26, %conv147.i, !dbg !4213
  %add149.i = add nsw i32 %add143.i, %mul148.i, !dbg !4214
  %113 = load i32, i32* %step.addr.i, align 4, !dbg !4215
  %mul150.i = mul nsw i32 2, %113, !dbg !4216
  %idxprom151.i = sext i32 %mul150.i to i64, !dbg !4217
  %114 = load i8*, i8** %src.addr.i, align 8, !dbg !4217
  %arrayidx152.i = getelementptr inbounds i8, i8* %114, i64 %idxprom151.i, !dbg !4217
  %115 = load i8, i8* %arrayidx152.i, align 1, !dbg !4217
  %conv153.i = zext i8 %115 to i32, !dbg !4217
  %mul154.i = mul nsw i32 26, %conv153.i, !dbg !4218
  %add155.i = add nsw i32 %add149.i, %mul154.i, !dbg !4219
  %116 = load i32, i32* %step.addr.i, align 4, !dbg !4220
  %mul156.i = mul nsw i32 3, %116, !dbg !4221
  %idxprom157.i = sext i32 %mul156.i to i64, !dbg !4222
  %117 = load i8*, i8** %src.addr.i, align 8, !dbg !4222
  %arrayidx158.i = getelementptr inbounds i8, i8* %117, i64 %idxprom157.i, !dbg !4222
  %118 = load i8, i8* %arrayidx158.i, align 1, !dbg !4222
  %conv159.i = zext i8 %118 to i32, !dbg !4222
  %mul160.i = mul nsw i32 25, %conv159.i, !dbg !4223
  %add161.i = add nsw i32 %add155.i, %mul160.i, !dbg !4224
  %119 = load i32, i32* %dmode.addr.i, align 4, !dbg !4225
  %120 = load i32, i32* %i.i, align 4, !dbg !4226
  %add162.i = add nsw i32 %119, %120, !dbg !4227
  %idxprom163.i = sext i32 %add162.i to i64, !dbg !4228
  %arrayidx164.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_r, i64 0, i64 %idxprom163.i, !dbg !4228
  %121 = load i8, i8* %arrayidx164.i, align 1, !dbg !4228
  %conv165.i = zext i8 %121 to i32, !dbg !4228
  %add166.i = add nsw i32 %add161.i, %conv165.i, !dbg !4229
  %shr167.i = ashr i32 %add166.i, 7, !dbg !4230
  store i32 %shr167.i, i32* %q1.i, align 4, !dbg !4231
  %122 = load i32, i32* %sflag.i, align 4, !dbg !4232
  %tobool168.i = icmp ne i32 %122, 0, !dbg !4232
  br i1 %tobool168.i, label %if.then169.i, label %if.end192.i, !dbg !4233

if.then169.i:                                     ; preds = %if.end105.i
  %123 = load i32, i32* %p1.i, align 4, !dbg !4234
  %124 = load i32, i32* %step.addr.i, align 4, !dbg !4235
  %mul170.i = mul nsw i32 -2, %124, !dbg !4236
  %idxprom171.i = sext i32 %mul170.i to i64, !dbg !4237
  %125 = load i8*, i8** %src.addr.i, align 8, !dbg !4237
  %arrayidx172.i = getelementptr inbounds i8, i8* %125, i64 %idxprom171.i, !dbg !4237
  %126 = load i8, i8* %arrayidx172.i, align 1, !dbg !4237
  %conv173.i = zext i8 %126 to i32, !dbg !4237
  %127 = load i32, i32* %lims.addr.i, align 4, !dbg !4238
  %sub174.i = sub nsw i32 %conv173.i, %127, !dbg !4239
  %128 = load i32, i32* %step.addr.i, align 4, !dbg !4240
  %mul175.i = mul nsw i32 -2, %128, !dbg !4241
  %idxprom176.i = sext i32 %mul175.i to i64, !dbg !4242
  %129 = load i8*, i8** %src.addr.i, align 8, !dbg !4242
  %arrayidx177.i = getelementptr inbounds i8, i8* %129, i64 %idxprom176.i, !dbg !4242
  %130 = load i8, i8* %arrayidx177.i, align 1, !dbg !4242
  %conv178.i = zext i8 %130 to i32, !dbg !4242
  %131 = load i32, i32* %lims.addr.i, align 4, !dbg !4243
  %add179.i = add nsw i32 %conv178.i, %131, !dbg !4244
  store i32 %123, i32* %a.addr.i282.i, align 4, !dbg !4245
  store i32 %sub174.i, i32* %amin.addr.i283.i, align 4, !dbg !4245
  store i32 %add179.i, i32* %amax.addr.i284.i, align 4, !dbg !4245
  %132 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4246
  %133 = load i32, i32* %amin.addr.i283.i, align 4, !dbg !4247
  %cmp.i285.i = icmp slt i32 %132, %133, !dbg !4248
  br i1 %cmp.i285.i, label %if.then.i286.i, label %if.else.i288.i, !dbg !4249

if.then.i286.i:                                   ; preds = %if.then169.i
  %134 = load i32, i32* %amin.addr.i283.i, align 4, !dbg !4250
  store i32 %134, i32* %retval.i281.i, align 4, !dbg !4251
  br label %av_clip_c.exit291.i, !dbg !4251

if.else.i288.i:                                   ; preds = %if.then169.i
  %135 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4252
  %136 = load i32, i32* %amax.addr.i284.i, align 4, !dbg !4253
  %cmp1.i287.i = icmp sgt i32 %135, %136, !dbg !4254
  br i1 %cmp1.i287.i, label %if.then2.i289.i, label %if.else3.i290.i, !dbg !4255

if.then2.i289.i:                                  ; preds = %if.else.i288.i
  %137 = load i32, i32* %amax.addr.i284.i, align 4, !dbg !4256
  store i32 %137, i32* %retval.i281.i, align 4, !dbg !4257
  br label %av_clip_c.exit291.i, !dbg !4257

if.else3.i290.i:                                  ; preds = %if.else.i288.i
  %138 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4258
  store i32 %138, i32* %retval.i281.i, align 4, !dbg !4259
  br label %av_clip_c.exit291.i, !dbg !4259

av_clip_c.exit291.i:                              ; preds = %if.else3.i290.i, %if.then2.i289.i, %if.then.i286.i
  %139 = load i32, i32* %retval.i281.i, align 4, !dbg !4260
  store i32 %139, i32* %p1.i, align 4, !dbg !4261
  %140 = load i32, i32* %q1.i, align 4, !dbg !4262
  %141 = load i32, i32* %step.addr.i, align 4, !dbg !4263
  %idxprom182.i = sext i32 %141 to i64, !dbg !4264
  %142 = load i8*, i8** %src.addr.i, align 8, !dbg !4264
  %arrayidx183.i = getelementptr inbounds i8, i8* %142, i64 %idxprom182.i, !dbg !4264
  %143 = load i8, i8* %arrayidx183.i, align 1, !dbg !4264
  %conv184.i = zext i8 %143 to i32, !dbg !4264
  %144 = load i32, i32* %lims.addr.i, align 4, !dbg !4265
  %sub185.i = sub nsw i32 %conv184.i, %144, !dbg !4266
  %145 = load i32, i32* %step.addr.i, align 4, !dbg !4267
  %idxprom187.i = sext i32 %145 to i64, !dbg !4268
  %146 = load i8*, i8** %src.addr.i, align 8, !dbg !4268
  %arrayidx188.i = getelementptr inbounds i8, i8* %146, i64 %idxprom187.i, !dbg !4268
  %147 = load i8, i8* %arrayidx188.i, align 1, !dbg !4268
  %conv189.i = zext i8 %147 to i32, !dbg !4268
  %148 = load i32, i32* %lims.addr.i, align 4, !dbg !4269
  %add190.i = add nsw i32 %conv189.i, %148, !dbg !4270
  store i32 %140, i32* %a.addr.i271.i, align 4, !dbg !4271
  store i32 %sub185.i, i32* %amin.addr.i272.i, align 4, !dbg !4271
  store i32 %add190.i, i32* %amax.addr.i273.i, align 4, !dbg !4271
  %149 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4272
  %150 = load i32, i32* %amin.addr.i272.i, align 4, !dbg !4273
  %cmp.i274.i = icmp slt i32 %149, %150, !dbg !4274
  br i1 %cmp.i274.i, label %if.then.i275.i, label %if.else.i277.i, !dbg !4275

if.then.i275.i:                                   ; preds = %av_clip_c.exit291.i
  %151 = load i32, i32* %amin.addr.i272.i, align 4, !dbg !4276
  store i32 %151, i32* %retval.i270.i, align 4, !dbg !4277
  br label %av_clip_c.exit280.i, !dbg !4277

if.else.i277.i:                                   ; preds = %av_clip_c.exit291.i
  %152 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4278
  %153 = load i32, i32* %amax.addr.i273.i, align 4, !dbg !4279
  %cmp1.i276.i = icmp sgt i32 %152, %153, !dbg !4280
  br i1 %cmp1.i276.i, label %if.then2.i278.i, label %if.else3.i279.i, !dbg !4281

if.then2.i278.i:                                  ; preds = %if.else.i277.i
  %154 = load i32, i32* %amax.addr.i273.i, align 4, !dbg !4282
  store i32 %154, i32* %retval.i270.i, align 4, !dbg !4283
  br label %av_clip_c.exit280.i, !dbg !4283

if.else3.i279.i:                                  ; preds = %if.else.i277.i
  %155 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4284
  store i32 %155, i32* %retval.i270.i, align 4, !dbg !4285
  br label %av_clip_c.exit280.i, !dbg !4285

av_clip_c.exit280.i:                              ; preds = %if.else3.i279.i, %if.then2.i278.i, %if.then.i275.i
  %156 = load i32, i32* %retval.i270.i, align 4, !dbg !4286
  store i32 %156, i32* %q1.i, align 4, !dbg !4287
  br label %if.end192.i, !dbg !4288

if.end192.i:                                      ; preds = %av_clip_c.exit280.i, %if.end105.i
  %157 = load i32, i32* %p1.i, align 4, !dbg !4289
  %conv193.i = trunc i32 %157 to i8, !dbg !4289
  %158 = load i32, i32* %step.addr.i, align 4, !dbg !4290
  %mul194.i = mul nsw i32 -2, %158, !dbg !4291
  %idxprom195.i = sext i32 %mul194.i to i64, !dbg !4292
  %159 = load i8*, i8** %src.addr.i, align 8, !dbg !4292
  %arrayidx196.i = getelementptr inbounds i8, i8* %159, i64 %idxprom195.i, !dbg !4292
  store i8 %conv193.i, i8* %arrayidx196.i, align 1, !dbg !4293
  %160 = load i32, i32* %p0.i, align 4, !dbg !4294
  %conv197.i = trunc i32 %160 to i8, !dbg !4294
  %161 = load i32, i32* %step.addr.i, align 4, !dbg !4295
  %mul198.i = mul nsw i32 -1, %161, !dbg !4296
  %idxprom199.i = sext i32 %mul198.i to i64, !dbg !4297
  %162 = load i8*, i8** %src.addr.i, align 8, !dbg !4297
  %arrayidx200.i = getelementptr inbounds i8, i8* %162, i64 %idxprom199.i, !dbg !4297
  store i8 %conv197.i, i8* %arrayidx200.i, align 1, !dbg !4298
  %163 = load i32, i32* %q0.i, align 4, !dbg !4299
  %conv201.i = trunc i32 %163 to i8, !dbg !4299
  %164 = load i32, i32* %step.addr.i, align 4, !dbg !4300
  %165 = load i8*, i8** %src.addr.i, align 8, !dbg !4301
  store i8 %conv201.i, i8* %165, align 1, !dbg !4302
  %166 = load i32, i32* %q1.i, align 4, !dbg !4303
  %conv205.i = trunc i32 %166 to i8, !dbg !4303
  %167 = load i32, i32* %step.addr.i, align 4, !dbg !4304
  %idxprom207.i = sext i32 %167 to i64, !dbg !4305
  %168 = load i8*, i8** %src.addr.i, align 8, !dbg !4305
  %arrayidx208.i = getelementptr inbounds i8, i8* %168, i64 %idxprom207.i, !dbg !4305
  store i8 %conv205.i, i8* %arrayidx208.i, align 1, !dbg !4306
  %169 = load i32, i32* %chroma.addr.i, align 4, !dbg !4307
  %tobool209.i = icmp ne i32 %169, 0, !dbg !4307
  br i1 %tobool209.i, label %if.end269.i, label %if.then210.i, !dbg !4309

if.then210.i:                                     ; preds = %if.end192.i
  %170 = load i32, i32* %step.addr.i, align 4, !dbg !4310
  %mul211.i = mul nsw i32 -1, %170, !dbg !4312
  %idxprom212.i = sext i32 %mul211.i to i64, !dbg !4313
  %171 = load i8*, i8** %src.addr.i, align 8, !dbg !4313
  %arrayidx213.i = getelementptr inbounds i8, i8* %171, i64 %idxprom212.i, !dbg !4313
  %172 = load i8, i8* %arrayidx213.i, align 1, !dbg !4313
  %conv214.i = zext i8 %172 to i32, !dbg !4313
  %mul215.i = mul nsw i32 25, %conv214.i, !dbg !4314
  %173 = load i32, i32* %step.addr.i, align 4, !dbg !4315
  %mul216.i = mul nsw i32 -2, %173, !dbg !4316
  %idxprom217.i = sext i32 %mul216.i to i64, !dbg !4317
  %174 = load i8*, i8** %src.addr.i, align 8, !dbg !4317
  %arrayidx218.i = getelementptr inbounds i8, i8* %174, i64 %idxprom217.i, !dbg !4317
  %175 = load i8, i8* %arrayidx218.i, align 1, !dbg !4317
  %conv219.i = zext i8 %175 to i32, !dbg !4317
  %mul220.i = mul nsw i32 26, %conv219.i, !dbg !4318
  %add221.i = add nsw i32 %mul215.i, %mul220.i, !dbg !4319
  %176 = load i32, i32* %step.addr.i, align 4, !dbg !4320
  %mul222.i = mul nsw i32 -3, %176, !dbg !4321
  %idxprom223.i = sext i32 %mul222.i to i64, !dbg !4322
  %177 = load i8*, i8** %src.addr.i, align 8, !dbg !4322
  %arrayidx224.i = getelementptr inbounds i8, i8* %177, i64 %idxprom223.i, !dbg !4322
  %178 = load i8, i8* %arrayidx224.i, align 1, !dbg !4322
  %conv225.i = zext i8 %178 to i32, !dbg !4322
  %mul226.i = mul nsw i32 51, %conv225.i, !dbg !4323
  %add227.i = add nsw i32 %add221.i, %mul226.i, !dbg !4324
  %179 = load i32, i32* %step.addr.i, align 4, !dbg !4325
  %mul228.i = mul nsw i32 -4, %179, !dbg !4326
  %idxprom229.i = sext i32 %mul228.i to i64, !dbg !4327
  %180 = load i8*, i8** %src.addr.i, align 8, !dbg !4327
  %arrayidx230.i = getelementptr inbounds i8, i8* %180, i64 %idxprom229.i, !dbg !4327
  %181 = load i8, i8* %arrayidx230.i, align 1, !dbg !4327
  %conv231.i = zext i8 %181 to i32, !dbg !4327
  %mul232.i = mul nsw i32 26, %conv231.i, !dbg !4328
  %add233.i = add nsw i32 %add227.i, %mul232.i, !dbg !4329
  %add234.i = add nsw i32 %add233.i, 64, !dbg !4330
  %shr235.i = ashr i32 %add234.i, 7, !dbg !4331
  %conv236.i = trunc i32 %shr235.i to i8, !dbg !4332
  %182 = load i32, i32* %step.addr.i, align 4, !dbg !4333
  %mul237.i = mul nsw i32 -3, %182, !dbg !4334
  %idxprom238.i = sext i32 %mul237.i to i64, !dbg !4335
  %183 = load i8*, i8** %src.addr.i, align 8, !dbg !4335
  %arrayidx239.i = getelementptr inbounds i8, i8* %183, i64 %idxprom238.i, !dbg !4335
  store i8 %conv236.i, i8* %arrayidx239.i, align 1, !dbg !4336
  %184 = load i32, i32* %step.addr.i, align 4, !dbg !4337
  %185 = load i8*, i8** %src.addr.i, align 8, !dbg !4338
  %186 = load i8, i8* %185, align 1, !dbg !4338
  %conv243.i = zext i8 %186 to i32, !dbg !4338
  %mul244.i = mul nsw i32 25, %conv243.i, !dbg !4339
  %187 = load i32, i32* %step.addr.i, align 4, !dbg !4340
  %idxprom246.i = sext i32 %187 to i64, !dbg !4341
  %188 = load i8*, i8** %src.addr.i, align 8, !dbg !4341
  %arrayidx247.i = getelementptr inbounds i8, i8* %188, i64 %idxprom246.i, !dbg !4341
  %189 = load i8, i8* %arrayidx247.i, align 1, !dbg !4341
  %conv248.i = zext i8 %189 to i32, !dbg !4341
  %mul249.i = mul nsw i32 26, %conv248.i, !dbg !4342
  %add250.i = add nsw i32 %mul244.i, %mul249.i, !dbg !4343
  %190 = load i32, i32* %step.addr.i, align 4, !dbg !4344
  %mul251.i = mul nsw i32 2, %190, !dbg !4345
  %idxprom252.i = sext i32 %mul251.i to i64, !dbg !4346
  %191 = load i8*, i8** %src.addr.i, align 8, !dbg !4346
  %arrayidx253.i = getelementptr inbounds i8, i8* %191, i64 %idxprom252.i, !dbg !4346
  %192 = load i8, i8* %arrayidx253.i, align 1, !dbg !4346
  %conv254.i = zext i8 %192 to i32, !dbg !4346
  %mul255.i = mul nsw i32 51, %conv254.i, !dbg !4347
  %add256.i = add nsw i32 %add250.i, %mul255.i, !dbg !4348
  %193 = load i32, i32* %step.addr.i, align 4, !dbg !4349
  %mul257.i = mul nsw i32 3, %193, !dbg !4350
  %idxprom258.i = sext i32 %mul257.i to i64, !dbg !4351
  %194 = load i8*, i8** %src.addr.i, align 8, !dbg !4351
  %arrayidx259.i = getelementptr inbounds i8, i8* %194, i64 %idxprom258.i, !dbg !4351
  %195 = load i8, i8* %arrayidx259.i, align 1, !dbg !4351
  %conv260.i = zext i8 %195 to i32, !dbg !4351
  %mul261.i = mul nsw i32 26, %conv260.i, !dbg !4352
  %add262.i = add nsw i32 %add256.i, %mul261.i, !dbg !4353
  %add263.i = add nsw i32 %add262.i, 64, !dbg !4354
  %shr264.i = ashr i32 %add263.i, 7, !dbg !4355
  %conv265.i = trunc i32 %shr264.i to i8, !dbg !4356
  %196 = load i32, i32* %step.addr.i, align 4, !dbg !4357
  %mul266.i = mul nsw i32 2, %196, !dbg !4358
  %idxprom267.i = sext i32 %mul266.i to i64, !dbg !4359
  %197 = load i8*, i8** %src.addr.i, align 8, !dbg !4359
  %arrayidx268.i = getelementptr inbounds i8, i8* %197, i64 %idxprom267.i, !dbg !4359
  store i8 %conv265.i, i8* %arrayidx268.i, align 1, !dbg !4360
  br label %if.end269.i, !dbg !4361

if.end269.i:                                      ; preds = %if.then210.i, %if.end192.i
  br label %for.inc.i, !dbg !4362

for.inc.i:                                        ; preds = %if.end269.i, %if.then11.i, %if.then.i
  %198 = load i32, i32* %i.i, align 4, !dbg !4363
  %inc.i = add nsw i32 %198, 1, !dbg !4363
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4363
  %199 = load i64, i64* %stride.addr.i, align 8, !dbg !4365
  %200 = load i8*, i8** %src.addr.i, align 8, !dbg !4366
  %add.ptr.i = getelementptr inbounds i8, i8* %200, i64 %199, !dbg !4366
  store i8* %add.ptr.i, i8** %src.addr.i, align 8, !dbg !4366
  br label %for.cond.i, !dbg !4367, !llvm.loop !4368

rv40_strong_loop_filter.exit:                     ; preds = %for.cond.i
  ret void, !dbg !4370
}

; Function Attrs: nounwind uwtable
define internal void @rv40_v_strong_loop_filter(i8* %src, i64 %stride, i32 %alpha, i32 %lims, i32 %dmode, i32 %chroma) #3 !dbg !4371 {
entry:
  %retval.i292.i = alloca i32, align 4
  %a.addr.i293.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i293.i, metadata !3319, metadata !113), !dbg !4372
  %amin.addr.i294.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i294.i, metadata !3335, metadata !113), !dbg !4375
  %amax.addr.i295.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i295.i, metadata !3337, metadata !113), !dbg !4376
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3319, metadata !113), !dbg !4377
  %amin.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i283.i, metadata !3335, metadata !113), !dbg !4379
  %amax.addr.i284.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i284.i, metadata !3337, metadata !113), !dbg !4380
  %retval.i270.i = alloca i32, align 4
  %a.addr.i271.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i271.i, metadata !3319, metadata !113), !dbg !4381
  %amin.addr.i272.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i272.i, metadata !3335, metadata !113), !dbg !4383
  %amax.addr.i273.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i273.i, metadata !3337, metadata !113), !dbg !4384
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3319, metadata !113), !dbg !4385
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !3335, metadata !113), !dbg !4387
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !3337, metadata !113), !dbg !4388
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3977, metadata !113), !dbg !4389
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !3979, metadata !113), !dbg !4390
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !3981, metadata !113), !dbg !4391
  %alpha.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr.i, metadata !3983, metadata !113), !dbg !4392
  %lims.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %lims.addr.i, metadata !3985, metadata !113), !dbg !4393
  %dmode.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dmode.addr.i, metadata !3987, metadata !113), !dbg !4394
  %chroma.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr.i, metadata !3989, metadata !113), !dbg !4395
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3991, metadata !113), !dbg !4396
  %sflag.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sflag.i, metadata !3993, metadata !113), !dbg !4397
  %p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p0.i, metadata !3995, metadata !113), !dbg !4398
  %q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q0.i, metadata !3997, metadata !113), !dbg !4399
  %p1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p1.i, metadata !3999, metadata !113), !dbg !4400
  %q1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q1.i, metadata !4001, metadata !113), !dbg !4401
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !4003, metadata !113), !dbg !4402
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %alpha.addr = alloca i32, align 4
  %lims.addr = alloca i32, align 4
  %dmode.addr = alloca i32, align 4
  %chroma.addr = alloca i32, align 4
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4403, metadata !113), !dbg !4404
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4405, metadata !113), !dbg !4406
  store i32 %alpha, i32* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha.addr, metadata !4407, metadata !113), !dbg !4408
  store i32 %lims, i32* %lims.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lims.addr, metadata !4409, metadata !113), !dbg !4410
  store i32 %dmode, i32* %dmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dmode.addr, metadata !4411, metadata !113), !dbg !4412
  store i32 %chroma, i32* %chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr, metadata !4413, metadata !113), !dbg !4414
  %0 = load i8*, i8** %src.addr, align 8, !dbg !4415
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4416
  %2 = load i32, i32* %alpha.addr, align 4, !dbg !4417
  %3 = load i32, i32* %lims.addr, align 4, !dbg !4418
  %4 = load i32, i32* %dmode.addr, align 4, !dbg !4419
  %5 = load i32, i32* %chroma.addr, align 4, !dbg !4420
  store i8* %0, i8** %src.addr.i, align 8, !dbg !4421
  store i32 1, i32* %step.addr.i, align 4, !dbg !4421
  store i64 %1, i64* %stride.addr.i, align 8, !dbg !4421
  store i32 %2, i32* %alpha.addr.i, align 4, !dbg !4421
  store i32 %3, i32* %lims.addr.i, align 4, !dbg !4421
  store i32 %4, i32* %dmode.addr.i, align 4, !dbg !4421
  store i32 %5, i32* %chroma.addr.i, align 4, !dbg !4421
  store i32 0, i32* %i.i, align 4, !dbg !4422
  br label %for.cond.i, !dbg !4423

for.cond.i:                                       ; preds = %for.inc.i, %entry
  %6 = load i32, i32* %i.i, align 4, !dbg !4424
  %cmp.i = icmp slt i32 %6, 4, !dbg !4425
  br i1 %cmp.i, label %for.body.i, label %rv40_strong_loop_filter.exit, !dbg !4426

for.body.i:                                       ; preds = %for.cond.i
  %7 = load i32, i32* %step.addr.i, align 4, !dbg !4427
  %8 = load i8*, i8** %src.addr.i, align 8, !dbg !4428
  %9 = load i8, i8* %8, align 1, !dbg !4428
  %conv.i = zext i8 %9 to i32, !dbg !4428
  %10 = load i32, i32* %step.addr.i, align 4, !dbg !4429
  %mul1.i = mul nsw i32 -1, %10, !dbg !4430
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !4431
  %11 = load i8*, i8** %src.addr.i, align 8, !dbg !4431
  %arrayidx3.i = getelementptr inbounds i8, i8* %11, i64 %idxprom2.i, !dbg !4431
  %12 = load i8, i8* %arrayidx3.i, align 1, !dbg !4431
  %conv4.i = zext i8 %12 to i32, !dbg !4431
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !4432
  store i32 %sub.i, i32* %t.i, align 4, !dbg !4402
  %13 = load i32, i32* %t.i, align 4, !dbg !4433
  %tobool.i = icmp ne i32 %13, 0, !dbg !4433
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !4434

if.then.i:                                        ; preds = %for.body.i
  br label %for.inc.i, !dbg !4435

if.end.i:                                         ; preds = %for.body.i
  %14 = load i32, i32* %alpha.addr.i, align 4, !dbg !4436
  %15 = load i32, i32* %t.i, align 4, !dbg !4437
  %cmp5.i = icmp sge i32 %15, 0, !dbg !4438
  br i1 %cmp5.i, label %cond.true.i, label %cond.false.i, !dbg !4439

cond.true.i:                                      ; preds = %if.end.i
  %16 = load i32, i32* %t.i, align 4, !dbg !4440
  br label %cond.end.i, !dbg !4441

cond.false.i:                                     ; preds = %if.end.i
  %17 = load i32, i32* %t.i, align 4, !dbg !4442
  %sub7.i = sub nsw i32 0, %17, !dbg !4443
  br label %cond.end.i, !dbg !4444

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %16, %cond.true.i ], [ %sub7.i, %cond.false.i ], !dbg !4445
  %mul8.i = mul nsw i32 %14, %cond.i, !dbg !4446
  %shr.i = ashr i32 %mul8.i, 7, !dbg !4447
  store i32 %shr.i, i32* %sflag.i, align 4, !dbg !4448
  %18 = load i32, i32* %sflag.i, align 4, !dbg !4449
  %cmp9.i = icmp sgt i32 %18, 1, !dbg !4450
  br i1 %cmp9.i, label %if.then11.i, label %if.end12.i, !dbg !4451

if.then11.i:                                      ; preds = %cond.end.i
  br label %for.inc.i, !dbg !4452

if.end12.i:                                       ; preds = %cond.end.i
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !4453
  %mul13.i = mul nsw i32 -3, %19, !dbg !4454
  %idxprom14.i = sext i32 %mul13.i to i64, !dbg !4455
  %20 = load i8*, i8** %src.addr.i, align 8, !dbg !4455
  %arrayidx15.i = getelementptr inbounds i8, i8* %20, i64 %idxprom14.i, !dbg !4455
  %21 = load i8, i8* %arrayidx15.i, align 1, !dbg !4455
  %conv16.i = zext i8 %21 to i32, !dbg !4455
  %mul17.i = mul nsw i32 25, %conv16.i, !dbg !4456
  %22 = load i32, i32* %step.addr.i, align 4, !dbg !4457
  %mul18.i = mul nsw i32 -2, %22, !dbg !4458
  %idxprom19.i = sext i32 %mul18.i to i64, !dbg !4459
  %23 = load i8*, i8** %src.addr.i, align 8, !dbg !4459
  %arrayidx20.i = getelementptr inbounds i8, i8* %23, i64 %idxprom19.i, !dbg !4459
  %24 = load i8, i8* %arrayidx20.i, align 1, !dbg !4459
  %conv21.i = zext i8 %24 to i32, !dbg !4459
  %mul22.i = mul nsw i32 26, %conv21.i, !dbg !4460
  %add.i = add nsw i32 %mul17.i, %mul22.i, !dbg !4461
  %25 = load i32, i32* %step.addr.i, align 4, !dbg !4462
  %mul23.i = mul nsw i32 -1, %25, !dbg !4463
  %idxprom24.i = sext i32 %mul23.i to i64, !dbg !4464
  %26 = load i8*, i8** %src.addr.i, align 8, !dbg !4464
  %arrayidx25.i = getelementptr inbounds i8, i8* %26, i64 %idxprom24.i, !dbg !4464
  %27 = load i8, i8* %arrayidx25.i, align 1, !dbg !4464
  %conv26.i = zext i8 %27 to i32, !dbg !4464
  %mul27.i = mul nsw i32 26, %conv26.i, !dbg !4465
  %add28.i = add nsw i32 %add.i, %mul27.i, !dbg !4466
  %28 = load i32, i32* %step.addr.i, align 4, !dbg !4467
  %29 = load i8*, i8** %src.addr.i, align 8, !dbg !4468
  %30 = load i8, i8* %29, align 1, !dbg !4468
  %conv32.i = zext i8 %30 to i32, !dbg !4468
  %mul33.i = mul nsw i32 26, %conv32.i, !dbg !4469
  %add34.i = add nsw i32 %add28.i, %mul33.i, !dbg !4470
  %31 = load i32, i32* %step.addr.i, align 4, !dbg !4471
  %idxprom36.i = sext i32 %31 to i64, !dbg !4472
  %32 = load i8*, i8** %src.addr.i, align 8, !dbg !4472
  %arrayidx37.i = getelementptr inbounds i8, i8* %32, i64 %idxprom36.i, !dbg !4472
  %33 = load i8, i8* %arrayidx37.i, align 1, !dbg !4472
  %conv38.i = zext i8 %33 to i32, !dbg !4472
  %mul39.i = mul nsw i32 25, %conv38.i, !dbg !4473
  %add40.i = add nsw i32 %add34.i, %mul39.i, !dbg !4474
  %34 = load i32, i32* %dmode.addr.i, align 4, !dbg !4475
  %35 = load i32, i32* %i.i, align 4, !dbg !4476
  %add41.i = add nsw i32 %34, %35, !dbg !4477
  %idxprom42.i = sext i32 %add41.i to i64, !dbg !4478
  %arrayidx43.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_l, i64 0, i64 %idxprom42.i, !dbg !4478
  %36 = load i8, i8* %arrayidx43.i, align 1, !dbg !4478
  %conv44.i = zext i8 %36 to i32, !dbg !4478
  %add45.i = add nsw i32 %add40.i, %conv44.i, !dbg !4479
  %shr46.i = ashr i32 %add45.i, 7, !dbg !4480
  store i32 %shr46.i, i32* %p0.i, align 4, !dbg !4481
  %37 = load i32, i32* %step.addr.i, align 4, !dbg !4482
  %mul47.i = mul nsw i32 -2, %37, !dbg !4483
  %idxprom48.i = sext i32 %mul47.i to i64, !dbg !4484
  %38 = load i8*, i8** %src.addr.i, align 8, !dbg !4484
  %arrayidx49.i = getelementptr inbounds i8, i8* %38, i64 %idxprom48.i, !dbg !4484
  %39 = load i8, i8* %arrayidx49.i, align 1, !dbg !4484
  %conv50.i = zext i8 %39 to i32, !dbg !4484
  %mul51.i = mul nsw i32 25, %conv50.i, !dbg !4485
  %40 = load i32, i32* %step.addr.i, align 4, !dbg !4486
  %mul52.i = mul nsw i32 -1, %40, !dbg !4487
  %idxprom53.i = sext i32 %mul52.i to i64, !dbg !4488
  %41 = load i8*, i8** %src.addr.i, align 8, !dbg !4488
  %arrayidx54.i = getelementptr inbounds i8, i8* %41, i64 %idxprom53.i, !dbg !4488
  %42 = load i8, i8* %arrayidx54.i, align 1, !dbg !4488
  %conv55.i = zext i8 %42 to i32, !dbg !4488
  %mul56.i = mul nsw i32 26, %conv55.i, !dbg !4489
  %add57.i = add nsw i32 %mul51.i, %mul56.i, !dbg !4490
  %43 = load i32, i32* %step.addr.i, align 4, !dbg !4491
  %44 = load i8*, i8** %src.addr.i, align 8, !dbg !4492
  %45 = load i8, i8* %44, align 1, !dbg !4492
  %conv61.i = zext i8 %45 to i32, !dbg !4492
  %mul62.i = mul nsw i32 26, %conv61.i, !dbg !4493
  %add63.i = add nsw i32 %add57.i, %mul62.i, !dbg !4494
  %46 = load i32, i32* %step.addr.i, align 4, !dbg !4495
  %idxprom65.i = sext i32 %46 to i64, !dbg !4496
  %47 = load i8*, i8** %src.addr.i, align 8, !dbg !4496
  %arrayidx66.i = getelementptr inbounds i8, i8* %47, i64 %idxprom65.i, !dbg !4496
  %48 = load i8, i8* %arrayidx66.i, align 1, !dbg !4496
  %conv67.i = zext i8 %48 to i32, !dbg !4496
  %mul68.i = mul nsw i32 26, %conv67.i, !dbg !4497
  %add69.i = add nsw i32 %add63.i, %mul68.i, !dbg !4498
  %49 = load i32, i32* %step.addr.i, align 4, !dbg !4499
  %mul70.i = mul nsw i32 2, %49, !dbg !4500
  %idxprom71.i = sext i32 %mul70.i to i64, !dbg !4501
  %50 = load i8*, i8** %src.addr.i, align 8, !dbg !4501
  %arrayidx72.i = getelementptr inbounds i8, i8* %50, i64 %idxprom71.i, !dbg !4501
  %51 = load i8, i8* %arrayidx72.i, align 1, !dbg !4501
  %conv73.i = zext i8 %51 to i32, !dbg !4501
  %mul74.i = mul nsw i32 25, %conv73.i, !dbg !4502
  %add75.i = add nsw i32 %add69.i, %mul74.i, !dbg !4503
  %52 = load i32, i32* %dmode.addr.i, align 4, !dbg !4504
  %53 = load i32, i32* %i.i, align 4, !dbg !4505
  %add76.i = add nsw i32 %52, %53, !dbg !4506
  %idxprom77.i = sext i32 %add76.i to i64, !dbg !4507
  %arrayidx78.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_r, i64 0, i64 %idxprom77.i, !dbg !4507
  %54 = load i8, i8* %arrayidx78.i, align 1, !dbg !4507
  %conv79.i = zext i8 %54 to i32, !dbg !4507
  %add80.i = add nsw i32 %add75.i, %conv79.i, !dbg !4508
  %shr81.i = ashr i32 %add80.i, 7, !dbg !4509
  store i32 %shr81.i, i32* %q0.i, align 4, !dbg !4510
  %55 = load i32, i32* %sflag.i, align 4, !dbg !4511
  %tobool82.i = icmp ne i32 %55, 0, !dbg !4511
  br i1 %tobool82.i, label %if.then83.i, label %if.end105.i, !dbg !4512

if.then83.i:                                      ; preds = %if.end12.i
  %56 = load i32, i32* %p0.i, align 4, !dbg !4513
  %57 = load i32, i32* %step.addr.i, align 4, !dbg !4514
  %mul84.i = mul nsw i32 -1, %57, !dbg !4515
  %idxprom85.i = sext i32 %mul84.i to i64, !dbg !4516
  %58 = load i8*, i8** %src.addr.i, align 8, !dbg !4516
  %arrayidx86.i = getelementptr inbounds i8, i8* %58, i64 %idxprom85.i, !dbg !4516
  %59 = load i8, i8* %arrayidx86.i, align 1, !dbg !4516
  %conv87.i = zext i8 %59 to i32, !dbg !4516
  %60 = load i32, i32* %lims.addr.i, align 4, !dbg !4517
  %sub88.i = sub nsw i32 %conv87.i, %60, !dbg !4518
  %61 = load i32, i32* %step.addr.i, align 4, !dbg !4519
  %mul89.i = mul nsw i32 -1, %61, !dbg !4520
  %idxprom90.i = sext i32 %mul89.i to i64, !dbg !4521
  %62 = load i8*, i8** %src.addr.i, align 8, !dbg !4521
  %arrayidx91.i = getelementptr inbounds i8, i8* %62, i64 %idxprom90.i, !dbg !4521
  %63 = load i8, i8* %arrayidx91.i, align 1, !dbg !4521
  %conv92.i = zext i8 %63 to i32, !dbg !4521
  %64 = load i32, i32* %lims.addr.i, align 4, !dbg !4522
  %add93.i = add nsw i32 %conv92.i, %64, !dbg !4523
  store i32 %56, i32* %a.addr.i.i, align 4, !dbg !4524
  store i32 %sub88.i, i32* %amin.addr.i.i, align 4, !dbg !4524
  store i32 %add93.i, i32* %amax.addr.i.i, align 4, !dbg !4524
  %65 = load i32, i32* %a.addr.i.i, align 4, !dbg !4525
  %66 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4526
  %cmp.i.i = icmp slt i32 %65, %66, !dbg !4527
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !4528

if.then.i.i:                                      ; preds = %if.then83.i
  %67 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4529
  store i32 %67, i32* %retval.i.i, align 4, !dbg !4530
  br label %av_clip_c.exit.i, !dbg !4530

if.else.i.i:                                      ; preds = %if.then83.i
  %68 = load i32, i32* %a.addr.i.i, align 4, !dbg !4531
  %69 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4532
  %cmp1.i.i = icmp sgt i32 %68, %69, !dbg !4533
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !4534

if.then2.i.i:                                     ; preds = %if.else.i.i
  %70 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4535
  store i32 %70, i32* %retval.i.i, align 4, !dbg !4536
  br label %av_clip_c.exit.i, !dbg !4536

if.else3.i.i:                                     ; preds = %if.else.i.i
  %71 = load i32, i32* %a.addr.i.i, align 4, !dbg !4537
  store i32 %71, i32* %retval.i.i, align 4, !dbg !4538
  br label %av_clip_c.exit.i, !dbg !4538

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %72 = load i32, i32* %retval.i.i, align 4, !dbg !4539
  store i32 %72, i32* %p0.i, align 4, !dbg !4540
  %73 = load i32, i32* %q0.i, align 4, !dbg !4541
  %74 = load i32, i32* %step.addr.i, align 4, !dbg !4542
  %75 = load i8*, i8** %src.addr.i, align 8, !dbg !4543
  %76 = load i8, i8* %75, align 1, !dbg !4543
  %conv97.i = zext i8 %76 to i32, !dbg !4543
  %77 = load i32, i32* %lims.addr.i, align 4, !dbg !4544
  %sub98.i = sub nsw i32 %conv97.i, %77, !dbg !4545
  %78 = load i32, i32* %step.addr.i, align 4, !dbg !4546
  %79 = load i8*, i8** %src.addr.i, align 8, !dbg !4547
  %80 = load i8, i8* %79, align 1, !dbg !4547
  %conv102.i = zext i8 %80 to i32, !dbg !4547
  %81 = load i32, i32* %lims.addr.i, align 4, !dbg !4548
  %add103.i = add nsw i32 %conv102.i, %81, !dbg !4549
  store i32 %73, i32* %a.addr.i293.i, align 4, !dbg !4550
  store i32 %sub98.i, i32* %amin.addr.i294.i, align 4, !dbg !4550
  store i32 %add103.i, i32* %amax.addr.i295.i, align 4, !dbg !4550
  %82 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4551
  %83 = load i32, i32* %amin.addr.i294.i, align 4, !dbg !4552
  %cmp.i296.i = icmp slt i32 %82, %83, !dbg !4553
  br i1 %cmp.i296.i, label %if.then.i297.i, label %if.else.i299.i, !dbg !4554

if.then.i297.i:                                   ; preds = %av_clip_c.exit.i
  %84 = load i32, i32* %amin.addr.i294.i, align 4, !dbg !4555
  store i32 %84, i32* %retval.i292.i, align 4, !dbg !4556
  br label %av_clip_c.exit302.i, !dbg !4556

if.else.i299.i:                                   ; preds = %av_clip_c.exit.i
  %85 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4557
  %86 = load i32, i32* %amax.addr.i295.i, align 4, !dbg !4558
  %cmp1.i298.i = icmp sgt i32 %85, %86, !dbg !4559
  br i1 %cmp1.i298.i, label %if.then2.i300.i, label %if.else3.i301.i, !dbg !4560

if.then2.i300.i:                                  ; preds = %if.else.i299.i
  %87 = load i32, i32* %amax.addr.i295.i, align 4, !dbg !4561
  store i32 %87, i32* %retval.i292.i, align 4, !dbg !4562
  br label %av_clip_c.exit302.i, !dbg !4562

if.else3.i301.i:                                  ; preds = %if.else.i299.i
  %88 = load i32, i32* %a.addr.i293.i, align 4, !dbg !4563
  store i32 %88, i32* %retval.i292.i, align 4, !dbg !4564
  br label %av_clip_c.exit302.i, !dbg !4564

av_clip_c.exit302.i:                              ; preds = %if.else3.i301.i, %if.then2.i300.i, %if.then.i297.i
  %89 = load i32, i32* %retval.i292.i, align 4, !dbg !4565
  store i32 %89, i32* %q0.i, align 4, !dbg !4566
  br label %if.end105.i, !dbg !4567

if.end105.i:                                      ; preds = %av_clip_c.exit302.i, %if.end12.i
  %90 = load i32, i32* %step.addr.i, align 4, !dbg !4568
  %mul106.i = mul nsw i32 -4, %90, !dbg !4569
  %idxprom107.i = sext i32 %mul106.i to i64, !dbg !4570
  %91 = load i8*, i8** %src.addr.i, align 8, !dbg !4570
  %arrayidx108.i = getelementptr inbounds i8, i8* %91, i64 %idxprom107.i, !dbg !4570
  %92 = load i8, i8* %arrayidx108.i, align 1, !dbg !4570
  %conv109.i = zext i8 %92 to i32, !dbg !4570
  %mul110.i = mul nsw i32 25, %conv109.i, !dbg !4571
  %93 = load i32, i32* %step.addr.i, align 4, !dbg !4572
  %mul111.i = mul nsw i32 -3, %93, !dbg !4573
  %idxprom112.i = sext i32 %mul111.i to i64, !dbg !4574
  %94 = load i8*, i8** %src.addr.i, align 8, !dbg !4574
  %arrayidx113.i = getelementptr inbounds i8, i8* %94, i64 %idxprom112.i, !dbg !4574
  %95 = load i8, i8* %arrayidx113.i, align 1, !dbg !4574
  %conv114.i = zext i8 %95 to i32, !dbg !4574
  %mul115.i = mul nsw i32 26, %conv114.i, !dbg !4575
  %add116.i = add nsw i32 %mul110.i, %mul115.i, !dbg !4576
  %96 = load i32, i32* %step.addr.i, align 4, !dbg !4577
  %mul117.i = mul nsw i32 -2, %96, !dbg !4578
  %idxprom118.i = sext i32 %mul117.i to i64, !dbg !4579
  %97 = load i8*, i8** %src.addr.i, align 8, !dbg !4579
  %arrayidx119.i = getelementptr inbounds i8, i8* %97, i64 %idxprom118.i, !dbg !4579
  %98 = load i8, i8* %arrayidx119.i, align 1, !dbg !4579
  %conv120.i = zext i8 %98 to i32, !dbg !4579
  %mul121.i = mul nsw i32 26, %conv120.i, !dbg !4580
  %add122.i = add nsw i32 %add116.i, %mul121.i, !dbg !4581
  %99 = load i32, i32* %p0.i, align 4, !dbg !4582
  %mul123.i = mul nsw i32 26, %99, !dbg !4583
  %add124.i = add nsw i32 %add122.i, %mul123.i, !dbg !4584
  %100 = load i32, i32* %step.addr.i, align 4, !dbg !4585
  %101 = load i8*, i8** %src.addr.i, align 8, !dbg !4586
  %102 = load i8, i8* %101, align 1, !dbg !4586
  %conv128.i = zext i8 %102 to i32, !dbg !4586
  %mul129.i = mul nsw i32 25, %conv128.i, !dbg !4587
  %add130.i = add nsw i32 %add124.i, %mul129.i, !dbg !4588
  %103 = load i32, i32* %dmode.addr.i, align 4, !dbg !4589
  %104 = load i32, i32* %i.i, align 4, !dbg !4590
  %add131.i = add nsw i32 %103, %104, !dbg !4591
  %idxprom132.i = sext i32 %add131.i to i64, !dbg !4592
  %arrayidx133.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_l, i64 0, i64 %idxprom132.i, !dbg !4592
  %105 = load i8, i8* %arrayidx133.i, align 1, !dbg !4592
  %conv134.i = zext i8 %105 to i32, !dbg !4592
  %add135.i = add nsw i32 %add130.i, %conv134.i, !dbg !4593
  %shr136.i = ashr i32 %add135.i, 7, !dbg !4594
  store i32 %shr136.i, i32* %p1.i, align 4, !dbg !4595
  %106 = load i32, i32* %step.addr.i, align 4, !dbg !4596
  %mul137.i = mul nsw i32 -1, %106, !dbg !4597
  %idxprom138.i = sext i32 %mul137.i to i64, !dbg !4598
  %107 = load i8*, i8** %src.addr.i, align 8, !dbg !4598
  %arrayidx139.i = getelementptr inbounds i8, i8* %107, i64 %idxprom138.i, !dbg !4598
  %108 = load i8, i8* %arrayidx139.i, align 1, !dbg !4598
  %conv140.i = zext i8 %108 to i32, !dbg !4598
  %mul141.i = mul nsw i32 25, %conv140.i, !dbg !4599
  %109 = load i32, i32* %q0.i, align 4, !dbg !4600
  %mul142.i = mul nsw i32 26, %109, !dbg !4601
  %add143.i = add nsw i32 %mul141.i, %mul142.i, !dbg !4602
  %110 = load i32, i32* %step.addr.i, align 4, !dbg !4603
  %idxprom145.i = sext i32 %110 to i64, !dbg !4604
  %111 = load i8*, i8** %src.addr.i, align 8, !dbg !4604
  %arrayidx146.i = getelementptr inbounds i8, i8* %111, i64 %idxprom145.i, !dbg !4604
  %112 = load i8, i8* %arrayidx146.i, align 1, !dbg !4604
  %conv147.i = zext i8 %112 to i32, !dbg !4604
  %mul148.i = mul nsw i32 26, %conv147.i, !dbg !4605
  %add149.i = add nsw i32 %add143.i, %mul148.i, !dbg !4606
  %113 = load i32, i32* %step.addr.i, align 4, !dbg !4607
  %mul150.i = mul nsw i32 2, %113, !dbg !4608
  %idxprom151.i = sext i32 %mul150.i to i64, !dbg !4609
  %114 = load i8*, i8** %src.addr.i, align 8, !dbg !4609
  %arrayidx152.i = getelementptr inbounds i8, i8* %114, i64 %idxprom151.i, !dbg !4609
  %115 = load i8, i8* %arrayidx152.i, align 1, !dbg !4609
  %conv153.i = zext i8 %115 to i32, !dbg !4609
  %mul154.i = mul nsw i32 26, %conv153.i, !dbg !4610
  %add155.i = add nsw i32 %add149.i, %mul154.i, !dbg !4611
  %116 = load i32, i32* %step.addr.i, align 4, !dbg !4612
  %mul156.i = mul nsw i32 3, %116, !dbg !4613
  %idxprom157.i = sext i32 %mul156.i to i64, !dbg !4614
  %117 = load i8*, i8** %src.addr.i, align 8, !dbg !4614
  %arrayidx158.i = getelementptr inbounds i8, i8* %117, i64 %idxprom157.i, !dbg !4614
  %118 = load i8, i8* %arrayidx158.i, align 1, !dbg !4614
  %conv159.i = zext i8 %118 to i32, !dbg !4614
  %mul160.i = mul nsw i32 25, %conv159.i, !dbg !4615
  %add161.i = add nsw i32 %add155.i, %mul160.i, !dbg !4616
  %119 = load i32, i32* %dmode.addr.i, align 4, !dbg !4617
  %120 = load i32, i32* %i.i, align 4, !dbg !4618
  %add162.i = add nsw i32 %119, %120, !dbg !4619
  %idxprom163.i = sext i32 %add162.i to i64, !dbg !4620
  %arrayidx164.i = getelementptr inbounds [16 x i8], [16 x i8]* @rv40_dither_r, i64 0, i64 %idxprom163.i, !dbg !4620
  %121 = load i8, i8* %arrayidx164.i, align 1, !dbg !4620
  %conv165.i = zext i8 %121 to i32, !dbg !4620
  %add166.i = add nsw i32 %add161.i, %conv165.i, !dbg !4621
  %shr167.i = ashr i32 %add166.i, 7, !dbg !4622
  store i32 %shr167.i, i32* %q1.i, align 4, !dbg !4623
  %122 = load i32, i32* %sflag.i, align 4, !dbg !4624
  %tobool168.i = icmp ne i32 %122, 0, !dbg !4624
  br i1 %tobool168.i, label %if.then169.i, label %if.end192.i, !dbg !4625

if.then169.i:                                     ; preds = %if.end105.i
  %123 = load i32, i32* %p1.i, align 4, !dbg !4626
  %124 = load i32, i32* %step.addr.i, align 4, !dbg !4627
  %mul170.i = mul nsw i32 -2, %124, !dbg !4628
  %idxprom171.i = sext i32 %mul170.i to i64, !dbg !4629
  %125 = load i8*, i8** %src.addr.i, align 8, !dbg !4629
  %arrayidx172.i = getelementptr inbounds i8, i8* %125, i64 %idxprom171.i, !dbg !4629
  %126 = load i8, i8* %arrayidx172.i, align 1, !dbg !4629
  %conv173.i = zext i8 %126 to i32, !dbg !4629
  %127 = load i32, i32* %lims.addr.i, align 4, !dbg !4630
  %sub174.i = sub nsw i32 %conv173.i, %127, !dbg !4631
  %128 = load i32, i32* %step.addr.i, align 4, !dbg !4632
  %mul175.i = mul nsw i32 -2, %128, !dbg !4633
  %idxprom176.i = sext i32 %mul175.i to i64, !dbg !4634
  %129 = load i8*, i8** %src.addr.i, align 8, !dbg !4634
  %arrayidx177.i = getelementptr inbounds i8, i8* %129, i64 %idxprom176.i, !dbg !4634
  %130 = load i8, i8* %arrayidx177.i, align 1, !dbg !4634
  %conv178.i = zext i8 %130 to i32, !dbg !4634
  %131 = load i32, i32* %lims.addr.i, align 4, !dbg !4635
  %add179.i = add nsw i32 %conv178.i, %131, !dbg !4636
  store i32 %123, i32* %a.addr.i282.i, align 4, !dbg !4637
  store i32 %sub174.i, i32* %amin.addr.i283.i, align 4, !dbg !4637
  store i32 %add179.i, i32* %amax.addr.i284.i, align 4, !dbg !4637
  %132 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4638
  %133 = load i32, i32* %amin.addr.i283.i, align 4, !dbg !4639
  %cmp.i285.i = icmp slt i32 %132, %133, !dbg !4640
  br i1 %cmp.i285.i, label %if.then.i286.i, label %if.else.i288.i, !dbg !4641

if.then.i286.i:                                   ; preds = %if.then169.i
  %134 = load i32, i32* %amin.addr.i283.i, align 4, !dbg !4642
  store i32 %134, i32* %retval.i281.i, align 4, !dbg !4643
  br label %av_clip_c.exit291.i, !dbg !4643

if.else.i288.i:                                   ; preds = %if.then169.i
  %135 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4644
  %136 = load i32, i32* %amax.addr.i284.i, align 4, !dbg !4645
  %cmp1.i287.i = icmp sgt i32 %135, %136, !dbg !4646
  br i1 %cmp1.i287.i, label %if.then2.i289.i, label %if.else3.i290.i, !dbg !4647

if.then2.i289.i:                                  ; preds = %if.else.i288.i
  %137 = load i32, i32* %amax.addr.i284.i, align 4, !dbg !4648
  store i32 %137, i32* %retval.i281.i, align 4, !dbg !4649
  br label %av_clip_c.exit291.i, !dbg !4649

if.else3.i290.i:                                  ; preds = %if.else.i288.i
  %138 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4650
  store i32 %138, i32* %retval.i281.i, align 4, !dbg !4651
  br label %av_clip_c.exit291.i, !dbg !4651

av_clip_c.exit291.i:                              ; preds = %if.else3.i290.i, %if.then2.i289.i, %if.then.i286.i
  %139 = load i32, i32* %retval.i281.i, align 4, !dbg !4652
  store i32 %139, i32* %p1.i, align 4, !dbg !4653
  %140 = load i32, i32* %q1.i, align 4, !dbg !4654
  %141 = load i32, i32* %step.addr.i, align 4, !dbg !4655
  %idxprom182.i = sext i32 %141 to i64, !dbg !4656
  %142 = load i8*, i8** %src.addr.i, align 8, !dbg !4656
  %arrayidx183.i = getelementptr inbounds i8, i8* %142, i64 %idxprom182.i, !dbg !4656
  %143 = load i8, i8* %arrayidx183.i, align 1, !dbg !4656
  %conv184.i = zext i8 %143 to i32, !dbg !4656
  %144 = load i32, i32* %lims.addr.i, align 4, !dbg !4657
  %sub185.i = sub nsw i32 %conv184.i, %144, !dbg !4658
  %145 = load i32, i32* %step.addr.i, align 4, !dbg !4659
  %idxprom187.i = sext i32 %145 to i64, !dbg !4660
  %146 = load i8*, i8** %src.addr.i, align 8, !dbg !4660
  %arrayidx188.i = getelementptr inbounds i8, i8* %146, i64 %idxprom187.i, !dbg !4660
  %147 = load i8, i8* %arrayidx188.i, align 1, !dbg !4660
  %conv189.i = zext i8 %147 to i32, !dbg !4660
  %148 = load i32, i32* %lims.addr.i, align 4, !dbg !4661
  %add190.i = add nsw i32 %conv189.i, %148, !dbg !4662
  store i32 %140, i32* %a.addr.i271.i, align 4, !dbg !4663
  store i32 %sub185.i, i32* %amin.addr.i272.i, align 4, !dbg !4663
  store i32 %add190.i, i32* %amax.addr.i273.i, align 4, !dbg !4663
  %149 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4664
  %150 = load i32, i32* %amin.addr.i272.i, align 4, !dbg !4665
  %cmp.i274.i = icmp slt i32 %149, %150, !dbg !4666
  br i1 %cmp.i274.i, label %if.then.i275.i, label %if.else.i277.i, !dbg !4667

if.then.i275.i:                                   ; preds = %av_clip_c.exit291.i
  %151 = load i32, i32* %amin.addr.i272.i, align 4, !dbg !4668
  store i32 %151, i32* %retval.i270.i, align 4, !dbg !4669
  br label %av_clip_c.exit280.i, !dbg !4669

if.else.i277.i:                                   ; preds = %av_clip_c.exit291.i
  %152 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4670
  %153 = load i32, i32* %amax.addr.i273.i, align 4, !dbg !4671
  %cmp1.i276.i = icmp sgt i32 %152, %153, !dbg !4672
  br i1 %cmp1.i276.i, label %if.then2.i278.i, label %if.else3.i279.i, !dbg !4673

if.then2.i278.i:                                  ; preds = %if.else.i277.i
  %154 = load i32, i32* %amax.addr.i273.i, align 4, !dbg !4674
  store i32 %154, i32* %retval.i270.i, align 4, !dbg !4675
  br label %av_clip_c.exit280.i, !dbg !4675

if.else3.i279.i:                                  ; preds = %if.else.i277.i
  %155 = load i32, i32* %a.addr.i271.i, align 4, !dbg !4676
  store i32 %155, i32* %retval.i270.i, align 4, !dbg !4677
  br label %av_clip_c.exit280.i, !dbg !4677

av_clip_c.exit280.i:                              ; preds = %if.else3.i279.i, %if.then2.i278.i, %if.then.i275.i
  %156 = load i32, i32* %retval.i270.i, align 4, !dbg !4678
  store i32 %156, i32* %q1.i, align 4, !dbg !4679
  br label %if.end192.i, !dbg !4680

if.end192.i:                                      ; preds = %av_clip_c.exit280.i, %if.end105.i
  %157 = load i32, i32* %p1.i, align 4, !dbg !4681
  %conv193.i = trunc i32 %157 to i8, !dbg !4681
  %158 = load i32, i32* %step.addr.i, align 4, !dbg !4682
  %mul194.i = mul nsw i32 -2, %158, !dbg !4683
  %idxprom195.i = sext i32 %mul194.i to i64, !dbg !4684
  %159 = load i8*, i8** %src.addr.i, align 8, !dbg !4684
  %arrayidx196.i = getelementptr inbounds i8, i8* %159, i64 %idxprom195.i, !dbg !4684
  store i8 %conv193.i, i8* %arrayidx196.i, align 1, !dbg !4685
  %160 = load i32, i32* %p0.i, align 4, !dbg !4686
  %conv197.i = trunc i32 %160 to i8, !dbg !4686
  %161 = load i32, i32* %step.addr.i, align 4, !dbg !4687
  %mul198.i = mul nsw i32 -1, %161, !dbg !4688
  %idxprom199.i = sext i32 %mul198.i to i64, !dbg !4689
  %162 = load i8*, i8** %src.addr.i, align 8, !dbg !4689
  %arrayidx200.i = getelementptr inbounds i8, i8* %162, i64 %idxprom199.i, !dbg !4689
  store i8 %conv197.i, i8* %arrayidx200.i, align 1, !dbg !4690
  %163 = load i32, i32* %q0.i, align 4, !dbg !4691
  %conv201.i = trunc i32 %163 to i8, !dbg !4691
  %164 = load i32, i32* %step.addr.i, align 4, !dbg !4692
  %165 = load i8*, i8** %src.addr.i, align 8, !dbg !4693
  store i8 %conv201.i, i8* %165, align 1, !dbg !4694
  %166 = load i32, i32* %q1.i, align 4, !dbg !4695
  %conv205.i = trunc i32 %166 to i8, !dbg !4695
  %167 = load i32, i32* %step.addr.i, align 4, !dbg !4696
  %idxprom207.i = sext i32 %167 to i64, !dbg !4697
  %168 = load i8*, i8** %src.addr.i, align 8, !dbg !4697
  %arrayidx208.i = getelementptr inbounds i8, i8* %168, i64 %idxprom207.i, !dbg !4697
  store i8 %conv205.i, i8* %arrayidx208.i, align 1, !dbg !4698
  %169 = load i32, i32* %chroma.addr.i, align 4, !dbg !4699
  %tobool209.i = icmp ne i32 %169, 0, !dbg !4699
  br i1 %tobool209.i, label %if.end269.i, label %if.then210.i, !dbg !4700

if.then210.i:                                     ; preds = %if.end192.i
  %170 = load i32, i32* %step.addr.i, align 4, !dbg !4701
  %mul211.i = mul nsw i32 -1, %170, !dbg !4702
  %idxprom212.i = sext i32 %mul211.i to i64, !dbg !4703
  %171 = load i8*, i8** %src.addr.i, align 8, !dbg !4703
  %arrayidx213.i = getelementptr inbounds i8, i8* %171, i64 %idxprom212.i, !dbg !4703
  %172 = load i8, i8* %arrayidx213.i, align 1, !dbg !4703
  %conv214.i = zext i8 %172 to i32, !dbg !4703
  %mul215.i = mul nsw i32 25, %conv214.i, !dbg !4704
  %173 = load i32, i32* %step.addr.i, align 4, !dbg !4705
  %mul216.i = mul nsw i32 -2, %173, !dbg !4706
  %idxprom217.i = sext i32 %mul216.i to i64, !dbg !4707
  %174 = load i8*, i8** %src.addr.i, align 8, !dbg !4707
  %arrayidx218.i = getelementptr inbounds i8, i8* %174, i64 %idxprom217.i, !dbg !4707
  %175 = load i8, i8* %arrayidx218.i, align 1, !dbg !4707
  %conv219.i = zext i8 %175 to i32, !dbg !4707
  %mul220.i = mul nsw i32 26, %conv219.i, !dbg !4708
  %add221.i = add nsw i32 %mul215.i, %mul220.i, !dbg !4709
  %176 = load i32, i32* %step.addr.i, align 4, !dbg !4710
  %mul222.i = mul nsw i32 -3, %176, !dbg !4711
  %idxprom223.i = sext i32 %mul222.i to i64, !dbg !4712
  %177 = load i8*, i8** %src.addr.i, align 8, !dbg !4712
  %arrayidx224.i = getelementptr inbounds i8, i8* %177, i64 %idxprom223.i, !dbg !4712
  %178 = load i8, i8* %arrayidx224.i, align 1, !dbg !4712
  %conv225.i = zext i8 %178 to i32, !dbg !4712
  %mul226.i = mul nsw i32 51, %conv225.i, !dbg !4713
  %add227.i = add nsw i32 %add221.i, %mul226.i, !dbg !4714
  %179 = load i32, i32* %step.addr.i, align 4, !dbg !4715
  %mul228.i = mul nsw i32 -4, %179, !dbg !4716
  %idxprom229.i = sext i32 %mul228.i to i64, !dbg !4717
  %180 = load i8*, i8** %src.addr.i, align 8, !dbg !4717
  %arrayidx230.i = getelementptr inbounds i8, i8* %180, i64 %idxprom229.i, !dbg !4717
  %181 = load i8, i8* %arrayidx230.i, align 1, !dbg !4717
  %conv231.i = zext i8 %181 to i32, !dbg !4717
  %mul232.i = mul nsw i32 26, %conv231.i, !dbg !4718
  %add233.i = add nsw i32 %add227.i, %mul232.i, !dbg !4719
  %add234.i = add nsw i32 %add233.i, 64, !dbg !4720
  %shr235.i = ashr i32 %add234.i, 7, !dbg !4721
  %conv236.i = trunc i32 %shr235.i to i8, !dbg !4722
  %182 = load i32, i32* %step.addr.i, align 4, !dbg !4723
  %mul237.i = mul nsw i32 -3, %182, !dbg !4724
  %idxprom238.i = sext i32 %mul237.i to i64, !dbg !4725
  %183 = load i8*, i8** %src.addr.i, align 8, !dbg !4725
  %arrayidx239.i = getelementptr inbounds i8, i8* %183, i64 %idxprom238.i, !dbg !4725
  store i8 %conv236.i, i8* %arrayidx239.i, align 1, !dbg !4726
  %184 = load i32, i32* %step.addr.i, align 4, !dbg !4727
  %185 = load i8*, i8** %src.addr.i, align 8, !dbg !4728
  %186 = load i8, i8* %185, align 1, !dbg !4728
  %conv243.i = zext i8 %186 to i32, !dbg !4728
  %mul244.i = mul nsw i32 25, %conv243.i, !dbg !4729
  %187 = load i32, i32* %step.addr.i, align 4, !dbg !4730
  %idxprom246.i = sext i32 %187 to i64, !dbg !4731
  %188 = load i8*, i8** %src.addr.i, align 8, !dbg !4731
  %arrayidx247.i = getelementptr inbounds i8, i8* %188, i64 %idxprom246.i, !dbg !4731
  %189 = load i8, i8* %arrayidx247.i, align 1, !dbg !4731
  %conv248.i = zext i8 %189 to i32, !dbg !4731
  %mul249.i = mul nsw i32 26, %conv248.i, !dbg !4732
  %add250.i = add nsw i32 %mul244.i, %mul249.i, !dbg !4733
  %190 = load i32, i32* %step.addr.i, align 4, !dbg !4734
  %mul251.i = mul nsw i32 2, %190, !dbg !4735
  %idxprom252.i = sext i32 %mul251.i to i64, !dbg !4736
  %191 = load i8*, i8** %src.addr.i, align 8, !dbg !4736
  %arrayidx253.i = getelementptr inbounds i8, i8* %191, i64 %idxprom252.i, !dbg !4736
  %192 = load i8, i8* %arrayidx253.i, align 1, !dbg !4736
  %conv254.i = zext i8 %192 to i32, !dbg !4736
  %mul255.i = mul nsw i32 51, %conv254.i, !dbg !4737
  %add256.i = add nsw i32 %add250.i, %mul255.i, !dbg !4738
  %193 = load i32, i32* %step.addr.i, align 4, !dbg !4739
  %mul257.i = mul nsw i32 3, %193, !dbg !4740
  %idxprom258.i = sext i32 %mul257.i to i64, !dbg !4741
  %194 = load i8*, i8** %src.addr.i, align 8, !dbg !4741
  %arrayidx259.i = getelementptr inbounds i8, i8* %194, i64 %idxprom258.i, !dbg !4741
  %195 = load i8, i8* %arrayidx259.i, align 1, !dbg !4741
  %conv260.i = zext i8 %195 to i32, !dbg !4741
  %mul261.i = mul nsw i32 26, %conv260.i, !dbg !4742
  %add262.i = add nsw i32 %add256.i, %mul261.i, !dbg !4743
  %add263.i = add nsw i32 %add262.i, 64, !dbg !4744
  %shr264.i = ashr i32 %add263.i, 7, !dbg !4745
  %conv265.i = trunc i32 %shr264.i to i8, !dbg !4746
  %196 = load i32, i32* %step.addr.i, align 4, !dbg !4747
  %mul266.i = mul nsw i32 2, %196, !dbg !4748
  %idxprom267.i = sext i32 %mul266.i to i64, !dbg !4749
  %197 = load i8*, i8** %src.addr.i, align 8, !dbg !4749
  %arrayidx268.i = getelementptr inbounds i8, i8* %197, i64 %idxprom267.i, !dbg !4749
  store i8 %conv265.i, i8* %arrayidx268.i, align 1, !dbg !4750
  br label %if.end269.i, !dbg !4751

if.end269.i:                                      ; preds = %if.then210.i, %if.end192.i
  br label %for.inc.i, !dbg !4752

for.inc.i:                                        ; preds = %if.end269.i, %if.then11.i, %if.then.i
  %198 = load i32, i32* %i.i, align 4, !dbg !4753
  %inc.i = add nsw i32 %198, 1, !dbg !4753
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4753
  %199 = load i64, i64* %stride.addr.i, align 8, !dbg !4754
  %200 = load i8*, i8** %src.addr.i, align 8, !dbg !4755
  %add.ptr.i = getelementptr inbounds i8, i8* %200, i64 %199, !dbg !4755
  store i8* %add.ptr.i, i8** %src.addr.i, align 8, !dbg !4755
  br label %for.cond.i, !dbg !4756, !llvm.loop !4368

rv40_strong_loop_filter.exit:                     ; preds = %for.cond.i
  ret void, !dbg !4757
}

; Function Attrs: nounwind uwtable
define internal i32 @rv40_h_loop_filter_strength(i8* %src, i64 %stride, i32 %beta, i32 %beta2, i32 %edge, i32* %p1, i32* %q1) #3 !dbg !4758 {
entry:
  %retval.i = alloca i32, align 4
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !4759, metadata !113), !dbg !4763
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !4765, metadata !113), !dbg !4766
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !4767, metadata !113), !dbg !4768
  %beta.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr.i, metadata !4769, metadata !113), !dbg !4770
  %beta2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta2.addr.i, metadata !4771, metadata !113), !dbg !4772
  %edge.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr.i, metadata !4773, metadata !113), !dbg !4774
  %p1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr.i, metadata !4775, metadata !113), !dbg !4776
  %q1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %q1.addr.i, metadata !4777, metadata !113), !dbg !4778
  %sum_p1p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_p1p0.i, metadata !4779, metadata !113), !dbg !4780
  %sum_q1q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_q1q0.i, metadata !4781, metadata !113), !dbg !4782
  %sum_p1p2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_p1p2.i, metadata !4783, metadata !113), !dbg !4784
  %sum_q1q2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_q1q2.i, metadata !4785, metadata !113), !dbg !4786
  %strong0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %strong0.i, metadata !4787, metadata !113), !dbg !4788
  %strong1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %strong1.i, metadata !4789, metadata !113), !dbg !4790
  %ptr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.i, metadata !4791, metadata !113), !dbg !4792
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4793, metadata !113), !dbg !4794
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %beta.addr = alloca i32, align 4
  %beta2.addr = alloca i32, align 4
  %edge.addr = alloca i32, align 4
  %p1.addr = alloca i32*, align 8
  %q1.addr = alloca i32*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4795, metadata !113), !dbg !4796
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4797, metadata !113), !dbg !4798
  store i32 %beta, i32* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr, metadata !4799, metadata !113), !dbg !4800
  store i32 %beta2, i32* %beta2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta2.addr, metadata !4801, metadata !113), !dbg !4802
  store i32 %edge, i32* %edge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr, metadata !4803, metadata !113), !dbg !4804
  store i32* %p1, i32** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr, metadata !4805, metadata !113), !dbg !4806
  store i32* %q1, i32** %q1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %q1.addr, metadata !4807, metadata !113), !dbg !4808
  %0 = load i8*, i8** %src.addr, align 8, !dbg !4809
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4810
  %conv = trunc i64 %1 to i32, !dbg !4810
  %2 = load i32, i32* %beta.addr, align 4, !dbg !4811
  %3 = load i32, i32* %beta2.addr, align 4, !dbg !4812
  %4 = load i32, i32* %edge.addr, align 4, !dbg !4813
  %5 = load i32*, i32** %p1.addr, align 8, !dbg !4814
  %6 = load i32*, i32** %q1.addr, align 8, !dbg !4815
  store i8* %0, i8** %src.addr.i, align 8, !dbg !4816
  store i32 %conv, i32* %step.addr.i, align 4, !dbg !4816
  store i64 1, i64* %stride.addr.i, align 8, !dbg !4816
  store i32 %2, i32* %beta.addr.i, align 4, !dbg !4816
  store i32 %3, i32* %beta2.addr.i, align 4, !dbg !4816
  store i32 %4, i32* %edge.addr.i, align 4, !dbg !4816
  store i32* %5, i32** %p1.addr.i, align 8, !dbg !4816
  store i32* %6, i32** %q1.addr.i, align 8, !dbg !4816
  store i32 0, i32* %sum_p1p0.i, align 4, !dbg !4780
  store i32 0, i32* %sum_q1q0.i, align 4, !dbg !4782
  store i32 0, i32* %sum_p1p2.i, align 4, !dbg !4784
  store i32 0, i32* %sum_q1q2.i, align 4, !dbg !4786
  store i32 0, i32* %strong0.i, align 4, !dbg !4788
  store i32 0, i32* %strong1.i, align 4, !dbg !4790
  store i32 0, i32* %i.i, align 4, !dbg !4817
  %7 = load i8*, i8** %src.addr.i, align 8, !dbg !4819
  store i8* %7, i8** %ptr.i, align 8, !dbg !4820
  br label %for.cond.i, !dbg !4821

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %i.i, align 4, !dbg !4822
  %cmp.i = icmp slt i32 %8, 4, !dbg !4825
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !4826

for.body.i:                                       ; preds = %for.cond.i
  %9 = load i32, i32* %step.addr.i, align 4, !dbg !4827
  %mul.i = mul nsw i32 -2, %9, !dbg !4829
  %idxprom.i = sext i32 %mul.i to i64, !dbg !4830
  %10 = load i8*, i8** %ptr.i, align 8, !dbg !4830
  %arrayidx.i = getelementptr inbounds i8, i8* %10, i64 %idxprom.i, !dbg !4830
  %11 = load i8, i8* %arrayidx.i, align 1, !dbg !4830
  %conv.i = zext i8 %11 to i32, !dbg !4830
  %12 = load i32, i32* %step.addr.i, align 4, !dbg !4831
  %mul1.i = mul nsw i32 -1, %12, !dbg !4832
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !4833
  %13 = load i8*, i8** %ptr.i, align 8, !dbg !4833
  %arrayidx3.i = getelementptr inbounds i8, i8* %13, i64 %idxprom2.i, !dbg !4833
  %14 = load i8, i8* %arrayidx3.i, align 1, !dbg !4833
  %conv4.i = zext i8 %14 to i32, !dbg !4833
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !4834
  %15 = load i32, i32* %sum_p1p0.i, align 4, !dbg !4835
  %add.i = add nsw i32 %15, %sub.i, !dbg !4835
  store i32 %add.i, i32* %sum_p1p0.i, align 4, !dbg !4835
  %16 = load i32, i32* %step.addr.i, align 4, !dbg !4836
  %idxprom6.i = sext i32 %16 to i64, !dbg !4837
  %17 = load i8*, i8** %ptr.i, align 8, !dbg !4837
  %arrayidx7.i = getelementptr inbounds i8, i8* %17, i64 %idxprom6.i, !dbg !4837
  %18 = load i8, i8* %arrayidx7.i, align 1, !dbg !4837
  %conv8.i = zext i8 %18 to i32, !dbg !4837
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !4838
  %20 = load i8*, i8** %ptr.i, align 8, !dbg !4839
  %21 = load i8, i8* %20, align 1, !dbg !4839
  %conv12.i = zext i8 %21 to i32, !dbg !4839
  %sub13.i = sub nsw i32 %conv8.i, %conv12.i, !dbg !4840
  %22 = load i32, i32* %sum_q1q0.i, align 4, !dbg !4841
  %add14.i = add nsw i32 %22, %sub13.i, !dbg !4841
  store i32 %add14.i, i32* %sum_q1q0.i, align 4, !dbg !4841
  %23 = load i32, i32* %i.i, align 4, !dbg !4842
  %inc.i = add nsw i32 %23, 1, !dbg !4842
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4842
  %24 = load i64, i64* %stride.addr.i, align 8, !dbg !4844
  %25 = load i8*, i8** %ptr.i, align 8, !dbg !4845
  %add.ptr.i = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !4845
  store i8* %add.ptr.i, i8** %ptr.i, align 8, !dbg !4845
  br label %for.cond.i, !dbg !4846, !llvm.loop !4847

for.end.i:                                        ; preds = %for.cond.i
  %26 = load i32, i32* %sum_p1p0.i, align 4, !dbg !4849
  %cmp15.i = icmp sge i32 %26, 0, !dbg !4850
  br i1 %cmp15.i, label %cond.true.i, label %cond.false.i, !dbg !4851

cond.true.i:                                      ; preds = %for.end.i
  %27 = load i32, i32* %sum_p1p0.i, align 4, !dbg !4852
  br label %cond.end.i, !dbg !4854

cond.false.i:                                     ; preds = %for.end.i
  %28 = load i32, i32* %sum_p1p0.i, align 4, !dbg !4855
  %sub17.i = sub nsw i32 0, %28, !dbg !4857
  br label %cond.end.i, !dbg !4858

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %27, %cond.true.i ], [ %sub17.i, %cond.false.i ], !dbg !4859
  %29 = load i32, i32* %beta.addr.i, align 4, !dbg !4861
  %shl.i = shl i32 %29, 2, !dbg !4862
  %cmp18.i = icmp slt i32 %cond.i, %shl.i, !dbg !4863
  %conv19.i = zext i1 %cmp18.i to i32, !dbg !4863
  %30 = load i32*, i32** %p1.addr.i, align 8, !dbg !4864
  store i32 %conv19.i, i32* %30, align 4, !dbg !4865
  %31 = load i32, i32* %sum_q1q0.i, align 4, !dbg !4866
  %cmp20.i = icmp sge i32 %31, 0, !dbg !4867
  br i1 %cmp20.i, label %cond.true22.i, label %cond.false23.i, !dbg !4868

cond.true22.i:                                    ; preds = %cond.end.i
  %32 = load i32, i32* %sum_q1q0.i, align 4, !dbg !4869
  br label %cond.end25.i, !dbg !4870

cond.false23.i:                                   ; preds = %cond.end.i
  %33 = load i32, i32* %sum_q1q0.i, align 4, !dbg !4871
  %sub24.i = sub nsw i32 0, %33, !dbg !4872
  br label %cond.end25.i, !dbg !4873

cond.end25.i:                                     ; preds = %cond.false23.i, %cond.true22.i
  %cond26.i = phi i32 [ %32, %cond.true22.i ], [ %sub24.i, %cond.false23.i ], !dbg !4874
  %34 = load i32, i32* %beta.addr.i, align 4, !dbg !4875
  %shl27.i = shl i32 %34, 2, !dbg !4876
  %cmp28.i = icmp slt i32 %cond26.i, %shl27.i, !dbg !4877
  %conv29.i = zext i1 %cmp28.i to i32, !dbg !4877
  %35 = load i32*, i32** %q1.addr.i, align 8, !dbg !4878
  store i32 %conv29.i, i32* %35, align 4, !dbg !4879
  %36 = load i32*, i32** %p1.addr.i, align 8, !dbg !4880
  %37 = load i32, i32* %36, align 4, !dbg !4882
  %tobool.i = icmp ne i32 %37, 0, !dbg !4882
  br i1 %tobool.i, label %if.end.i, label %land.lhs.true.i, !dbg !4883

land.lhs.true.i:                                  ; preds = %cond.end25.i
  %38 = load i32*, i32** %q1.addr.i, align 8, !dbg !4884
  %39 = load i32, i32* %38, align 4, !dbg !4886
  %tobool30.i = icmp ne i32 %39, 0, !dbg !4886
  br i1 %tobool30.i, label %if.end.i, label %if.then.i, !dbg !4887

if.then.i:                                        ; preds = %land.lhs.true.i
  store i32 0, i32* %retval.i, align 4, !dbg !4888
  br label %rv40_loop_filter_strength.exit, !dbg !4888

if.end.i:                                         ; preds = %land.lhs.true.i, %cond.end25.i
  %40 = load i32, i32* %edge.addr.i, align 4, !dbg !4889
  %tobool31.i = icmp ne i32 %40, 0, !dbg !4889
  br i1 %tobool31.i, label %if.end33.i, label %if.then32.i, !dbg !4891

if.then32.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i, align 4, !dbg !4892
  br label %rv40_loop_filter_strength.exit, !dbg !4892

if.end33.i:                                       ; preds = %if.end.i
  store i32 0, i32* %i.i, align 4, !dbg !4893
  %41 = load i8*, i8** %src.addr.i, align 8, !dbg !4895
  store i8* %41, i8** %ptr.i, align 8, !dbg !4896
  br label %for.cond34.i, !dbg !4897

for.cond34.i:                                     ; preds = %for.body37.i, %if.end33.i
  %42 = load i32, i32* %i.i, align 4, !dbg !4898
  %cmp35.i = icmp slt i32 %42, 4, !dbg !4901
  br i1 %cmp35.i, label %for.body37.i, label %for.end61.i, !dbg !4902

for.body37.i:                                     ; preds = %for.cond34.i
  %43 = load i32, i32* %step.addr.i, align 4, !dbg !4903
  %mul38.i = mul nsw i32 -2, %43, !dbg !4905
  %idxprom39.i = sext i32 %mul38.i to i64, !dbg !4906
  %44 = load i8*, i8** %ptr.i, align 8, !dbg !4906
  %arrayidx40.i = getelementptr inbounds i8, i8* %44, i64 %idxprom39.i, !dbg !4906
  %45 = load i8, i8* %arrayidx40.i, align 1, !dbg !4906
  %conv41.i = zext i8 %45 to i32, !dbg !4906
  %46 = load i32, i32* %step.addr.i, align 4, !dbg !4907
  %mul42.i = mul nsw i32 -3, %46, !dbg !4908
  %idxprom43.i = sext i32 %mul42.i to i64, !dbg !4909
  %47 = load i8*, i8** %ptr.i, align 8, !dbg !4909
  %arrayidx44.i = getelementptr inbounds i8, i8* %47, i64 %idxprom43.i, !dbg !4909
  %48 = load i8, i8* %arrayidx44.i, align 1, !dbg !4909
  %conv45.i = zext i8 %48 to i32, !dbg !4909
  %sub46.i = sub nsw i32 %conv41.i, %conv45.i, !dbg !4910
  %49 = load i32, i32* %sum_p1p2.i, align 4, !dbg !4911
  %add47.i = add nsw i32 %49, %sub46.i, !dbg !4911
  store i32 %add47.i, i32* %sum_p1p2.i, align 4, !dbg !4911
  %50 = load i32, i32* %step.addr.i, align 4, !dbg !4912
  %idxprom49.i = sext i32 %50 to i64, !dbg !4913
  %51 = load i8*, i8** %ptr.i, align 8, !dbg !4913
  %arrayidx50.i = getelementptr inbounds i8, i8* %51, i64 %idxprom49.i, !dbg !4913
  %52 = load i8, i8* %arrayidx50.i, align 1, !dbg !4913
  %conv51.i = zext i8 %52 to i32, !dbg !4913
  %53 = load i32, i32* %step.addr.i, align 4, !dbg !4914
  %mul52.i = mul nsw i32 2, %53, !dbg !4915
  %idxprom53.i = sext i32 %mul52.i to i64, !dbg !4916
  %54 = load i8*, i8** %ptr.i, align 8, !dbg !4916
  %arrayidx54.i = getelementptr inbounds i8, i8* %54, i64 %idxprom53.i, !dbg !4916
  %55 = load i8, i8* %arrayidx54.i, align 1, !dbg !4916
  %conv55.i = zext i8 %55 to i32, !dbg !4916
  %sub56.i = sub nsw i32 %conv51.i, %conv55.i, !dbg !4917
  %56 = load i32, i32* %sum_q1q2.i, align 4, !dbg !4918
  %add57.i = add nsw i32 %56, %sub56.i, !dbg !4918
  store i32 %add57.i, i32* %sum_q1q2.i, align 4, !dbg !4918
  %57 = load i32, i32* %i.i, align 4, !dbg !4919
  %inc59.i = add nsw i32 %57, 1, !dbg !4919
  store i32 %inc59.i, i32* %i.i, align 4, !dbg !4919
  %58 = load i64, i64* %stride.addr.i, align 8, !dbg !4921
  %59 = load i8*, i8** %ptr.i, align 8, !dbg !4922
  %add.ptr60.i = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !4922
  store i8* %add.ptr60.i, i8** %ptr.i, align 8, !dbg !4922
  br label %for.cond34.i, !dbg !4923, !llvm.loop !4924

for.end61.i:                                      ; preds = %for.cond34.i
  %60 = load i32*, i32** %p1.addr.i, align 8, !dbg !4926
  %61 = load i32, i32* %60, align 4, !dbg !4927
  %tobool62.i = icmp ne i32 %61, 0, !dbg !4927
  br i1 %tobool62.i, label %land.rhs.i, label %land.end.i, !dbg !4928

land.rhs.i:                                       ; preds = %for.end61.i
  %62 = load i32, i32* %sum_p1p2.i, align 4, !dbg !4929
  %cmp63.i = icmp sge i32 %62, 0, !dbg !4930
  br i1 %cmp63.i, label %cond.true65.i, label %cond.false66.i, !dbg !4931

cond.true65.i:                                    ; preds = %land.rhs.i
  %63 = load i32, i32* %sum_p1p2.i, align 4, !dbg !4932
  br label %cond.end68.i, !dbg !4933

cond.false66.i:                                   ; preds = %land.rhs.i
  %64 = load i32, i32* %sum_p1p2.i, align 4, !dbg !4934
  %sub67.i = sub nsw i32 0, %64, !dbg !4935
  br label %cond.end68.i, !dbg !4936

cond.end68.i:                                     ; preds = %cond.false66.i, %cond.true65.i
  %cond69.i = phi i32 [ %63, %cond.true65.i ], [ %sub67.i, %cond.false66.i ], !dbg !4937
  %65 = load i32, i32* %beta2.addr.i, align 4, !dbg !4939
  %cmp70.i = icmp slt i32 %cond69.i, %65, !dbg !4940
  br label %land.end.i, !dbg !4816

land.end.i:                                       ; preds = %cond.end68.i, %for.end61.i
  %66 = phi i1 [ false, %for.end61.i ], [ %cmp70.i, %cond.end68.i ], !dbg !4816
  %land.ext.i = zext i1 %66 to i32, !dbg !4941
  store i32 %land.ext.i, i32* %strong0.i, align 4, !dbg !4943
  %67 = load i32*, i32** %q1.addr.i, align 8, !dbg !4944
  %68 = load i32, i32* %67, align 4, !dbg !4945
  %tobool72.i = icmp ne i32 %68, 0, !dbg !4945
  br i1 %tobool72.i, label %land.rhs73.i, label %land.end83.i, !dbg !4946

land.rhs73.i:                                     ; preds = %land.end.i
  %69 = load i32, i32* %sum_q1q2.i, align 4, !dbg !4947
  %cmp74.i = icmp sge i32 %69, 0, !dbg !4948
  br i1 %cmp74.i, label %cond.true76.i, label %cond.false77.i, !dbg !4949

cond.true76.i:                                    ; preds = %land.rhs73.i
  %70 = load i32, i32* %sum_q1q2.i, align 4, !dbg !4950
  br label %cond.end79.i, !dbg !4951

cond.false77.i:                                   ; preds = %land.rhs73.i
  %71 = load i32, i32* %sum_q1q2.i, align 4, !dbg !4952
  %sub78.i = sub nsw i32 0, %71, !dbg !4953
  br label %cond.end79.i, !dbg !4954

cond.end79.i:                                     ; preds = %cond.false77.i, %cond.true76.i
  %cond80.i = phi i32 [ %70, %cond.true76.i ], [ %sub78.i, %cond.false77.i ], !dbg !4955
  %72 = load i32, i32* %beta2.addr.i, align 4, !dbg !4956
  %cmp81.i = icmp slt i32 %cond80.i, %72, !dbg !4957
  br label %land.end83.i, !dbg !4816

land.end83.i:                                     ; preds = %cond.end79.i, %land.end.i
  %73 = phi i1 [ false, %land.end.i ], [ %cmp81.i, %cond.end79.i ], !dbg !4816
  %land.ext84.i = zext i1 %73 to i32, !dbg !4958
  store i32 %land.ext84.i, i32* %strong1.i, align 4, !dbg !4959
  %74 = load i32, i32* %strong0.i, align 4, !dbg !4960
  %tobool85.i = icmp ne i32 %74, 0, !dbg !4960
  br i1 %tobool85.i, label %land.rhs86.i, label %land.end88.i, !dbg !4961

land.rhs86.i:                                     ; preds = %land.end83.i
  %75 = load i32, i32* %strong1.i, align 4, !dbg !4962
  %tobool87.i = icmp ne i32 %75, 0, !dbg !4963
  br label %land.end88.i, !dbg !4816

land.end88.i:                                     ; preds = %land.rhs86.i, %land.end83.i
  %76 = phi i1 [ false, %land.end83.i ], [ %tobool87.i, %land.rhs86.i ], !dbg !4816
  %land.ext89.i = zext i1 %76 to i32, !dbg !4964
  store i32 %land.ext89.i, i32* %retval.i, align 4, !dbg !4965
  br label %rv40_loop_filter_strength.exit, !dbg !4965

rv40_loop_filter_strength.exit:                   ; preds = %if.then.i, %if.then32.i, %land.end88.i
  %77 = load i32, i32* %retval.i, align 4, !dbg !4966
  ret i32 %77, !dbg !4967
}

; Function Attrs: nounwind uwtable
define internal i32 @rv40_v_loop_filter_strength(i8* %src, i64 %stride, i32 %beta, i32 %beta2, i32 %edge, i32* %p1, i32* %q1) #3 !dbg !4968 {
entry:
  %retval.i = alloca i32, align 4
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !4759, metadata !113), !dbg !4969
  %step.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr.i, metadata !4765, metadata !113), !dbg !4971
  %stride.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr.i, metadata !4767, metadata !113), !dbg !4972
  %beta.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr.i, metadata !4769, metadata !113), !dbg !4973
  %beta2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %beta2.addr.i, metadata !4771, metadata !113), !dbg !4974
  %edge.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr.i, metadata !4773, metadata !113), !dbg !4975
  %p1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr.i, metadata !4775, metadata !113), !dbg !4976
  %q1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %q1.addr.i, metadata !4777, metadata !113), !dbg !4977
  %sum_p1p0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_p1p0.i, metadata !4779, metadata !113), !dbg !4978
  %sum_q1q0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_q1q0.i, metadata !4781, metadata !113), !dbg !4979
  %sum_p1p2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_p1p2.i, metadata !4783, metadata !113), !dbg !4980
  %sum_q1q2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sum_q1q2.i, metadata !4785, metadata !113), !dbg !4981
  %strong0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %strong0.i, metadata !4787, metadata !113), !dbg !4982
  %strong1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %strong1.i, metadata !4789, metadata !113), !dbg !4983
  %ptr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.i, metadata !4791, metadata !113), !dbg !4984
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4793, metadata !113), !dbg !4985
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %beta.addr = alloca i32, align 4
  %beta2.addr = alloca i32, align 4
  %edge.addr = alloca i32, align 4
  %p1.addr = alloca i32*, align 8
  %q1.addr = alloca i32*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4986, metadata !113), !dbg !4987
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4988, metadata !113), !dbg !4989
  store i32 %beta, i32* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta.addr, metadata !4990, metadata !113), !dbg !4991
  store i32 %beta2, i32* %beta2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beta2.addr, metadata !4992, metadata !113), !dbg !4993
  store i32 %edge, i32* %edge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr, metadata !4994, metadata !113), !dbg !4995
  store i32* %p1, i32** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr, metadata !4996, metadata !113), !dbg !4997
  store i32* %q1, i32** %q1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %q1.addr, metadata !4998, metadata !113), !dbg !4999
  %0 = load i8*, i8** %src.addr, align 8, !dbg !5000
  %1 = load i64, i64* %stride.addr, align 8, !dbg !5001
  %2 = load i32, i32* %beta.addr, align 4, !dbg !5002
  %3 = load i32, i32* %beta2.addr, align 4, !dbg !5003
  %4 = load i32, i32* %edge.addr, align 4, !dbg !5004
  %5 = load i32*, i32** %p1.addr, align 8, !dbg !5005
  %6 = load i32*, i32** %q1.addr, align 8, !dbg !5006
  store i8* %0, i8** %src.addr.i, align 8, !dbg !5007
  store i32 1, i32* %step.addr.i, align 4, !dbg !5007
  store i64 %1, i64* %stride.addr.i, align 8, !dbg !5007
  store i32 %2, i32* %beta.addr.i, align 4, !dbg !5007
  store i32 %3, i32* %beta2.addr.i, align 4, !dbg !5007
  store i32 %4, i32* %edge.addr.i, align 4, !dbg !5007
  store i32* %5, i32** %p1.addr.i, align 8, !dbg !5007
  store i32* %6, i32** %q1.addr.i, align 8, !dbg !5007
  store i32 0, i32* %sum_p1p0.i, align 4, !dbg !4978
  store i32 0, i32* %sum_q1q0.i, align 4, !dbg !4979
  store i32 0, i32* %sum_p1p2.i, align 4, !dbg !4980
  store i32 0, i32* %sum_q1q2.i, align 4, !dbg !4981
  store i32 0, i32* %strong0.i, align 4, !dbg !4982
  store i32 0, i32* %strong1.i, align 4, !dbg !4983
  store i32 0, i32* %i.i, align 4, !dbg !5008
  %7 = load i8*, i8** %src.addr.i, align 8, !dbg !5009
  store i8* %7, i8** %ptr.i, align 8, !dbg !5010
  br label %for.cond.i, !dbg !5011

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %i.i, align 4, !dbg !5012
  %cmp.i = icmp slt i32 %8, 4, !dbg !5013
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !5014

for.body.i:                                       ; preds = %for.cond.i
  %9 = load i32, i32* %step.addr.i, align 4, !dbg !5015
  %mul.i = mul nsw i32 -2, %9, !dbg !5016
  %idxprom.i = sext i32 %mul.i to i64, !dbg !5017
  %10 = load i8*, i8** %ptr.i, align 8, !dbg !5017
  %arrayidx.i = getelementptr inbounds i8, i8* %10, i64 %idxprom.i, !dbg !5017
  %11 = load i8, i8* %arrayidx.i, align 1, !dbg !5017
  %conv.i = zext i8 %11 to i32, !dbg !5017
  %12 = load i32, i32* %step.addr.i, align 4, !dbg !5018
  %mul1.i = mul nsw i32 -1, %12, !dbg !5019
  %idxprom2.i = sext i32 %mul1.i to i64, !dbg !5020
  %13 = load i8*, i8** %ptr.i, align 8, !dbg !5020
  %arrayidx3.i = getelementptr inbounds i8, i8* %13, i64 %idxprom2.i, !dbg !5020
  %14 = load i8, i8* %arrayidx3.i, align 1, !dbg !5020
  %conv4.i = zext i8 %14 to i32, !dbg !5020
  %sub.i = sub nsw i32 %conv.i, %conv4.i, !dbg !5021
  %15 = load i32, i32* %sum_p1p0.i, align 4, !dbg !5022
  %add.i = add nsw i32 %15, %sub.i, !dbg !5022
  store i32 %add.i, i32* %sum_p1p0.i, align 4, !dbg !5022
  %16 = load i32, i32* %step.addr.i, align 4, !dbg !5023
  %idxprom6.i = sext i32 %16 to i64, !dbg !5024
  %17 = load i8*, i8** %ptr.i, align 8, !dbg !5024
  %arrayidx7.i = getelementptr inbounds i8, i8* %17, i64 %idxprom6.i, !dbg !5024
  %18 = load i8, i8* %arrayidx7.i, align 1, !dbg !5024
  %conv8.i = zext i8 %18 to i32, !dbg !5024
  %19 = load i32, i32* %step.addr.i, align 4, !dbg !5025
  %20 = load i8*, i8** %ptr.i, align 8, !dbg !5026
  %21 = load i8, i8* %20, align 1, !dbg !5026
  %conv12.i = zext i8 %21 to i32, !dbg !5026
  %sub13.i = sub nsw i32 %conv8.i, %conv12.i, !dbg !5027
  %22 = load i32, i32* %sum_q1q0.i, align 4, !dbg !5028
  %add14.i = add nsw i32 %22, %sub13.i, !dbg !5028
  store i32 %add14.i, i32* %sum_q1q0.i, align 4, !dbg !5028
  %23 = load i32, i32* %i.i, align 4, !dbg !5029
  %inc.i = add nsw i32 %23, 1, !dbg !5029
  store i32 %inc.i, i32* %i.i, align 4, !dbg !5029
  %24 = load i64, i64* %stride.addr.i, align 8, !dbg !5030
  %25 = load i8*, i8** %ptr.i, align 8, !dbg !5031
  %add.ptr.i = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !5031
  store i8* %add.ptr.i, i8** %ptr.i, align 8, !dbg !5031
  br label %for.cond.i, !dbg !5032, !llvm.loop !4847

for.end.i:                                        ; preds = %for.cond.i
  %26 = load i32, i32* %sum_p1p0.i, align 4, !dbg !5033
  %cmp15.i = icmp sge i32 %26, 0, !dbg !5034
  br i1 %cmp15.i, label %cond.true.i, label %cond.false.i, !dbg !5035

cond.true.i:                                      ; preds = %for.end.i
  %27 = load i32, i32* %sum_p1p0.i, align 4, !dbg !5036
  br label %cond.end.i, !dbg !5037

cond.false.i:                                     ; preds = %for.end.i
  %28 = load i32, i32* %sum_p1p0.i, align 4, !dbg !5038
  %sub17.i = sub nsw i32 0, %28, !dbg !5039
  br label %cond.end.i, !dbg !5040

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %27, %cond.true.i ], [ %sub17.i, %cond.false.i ], !dbg !5041
  %29 = load i32, i32* %beta.addr.i, align 4, !dbg !5042
  %shl.i = shl i32 %29, 2, !dbg !5043
  %cmp18.i = icmp slt i32 %cond.i, %shl.i, !dbg !5044
  %conv19.i = zext i1 %cmp18.i to i32, !dbg !5044
  %30 = load i32*, i32** %p1.addr.i, align 8, !dbg !5045
  store i32 %conv19.i, i32* %30, align 4, !dbg !5046
  %31 = load i32, i32* %sum_q1q0.i, align 4, !dbg !5047
  %cmp20.i = icmp sge i32 %31, 0, !dbg !5048
  br i1 %cmp20.i, label %cond.true22.i, label %cond.false23.i, !dbg !5049

cond.true22.i:                                    ; preds = %cond.end.i
  %32 = load i32, i32* %sum_q1q0.i, align 4, !dbg !5050
  br label %cond.end25.i, !dbg !5051

cond.false23.i:                                   ; preds = %cond.end.i
  %33 = load i32, i32* %sum_q1q0.i, align 4, !dbg !5052
  %sub24.i = sub nsw i32 0, %33, !dbg !5053
  br label %cond.end25.i, !dbg !5054

cond.end25.i:                                     ; preds = %cond.false23.i, %cond.true22.i
  %cond26.i = phi i32 [ %32, %cond.true22.i ], [ %sub24.i, %cond.false23.i ], !dbg !5055
  %34 = load i32, i32* %beta.addr.i, align 4, !dbg !5056
  %shl27.i = shl i32 %34, 2, !dbg !5057
  %cmp28.i = icmp slt i32 %cond26.i, %shl27.i, !dbg !5058
  %conv29.i = zext i1 %cmp28.i to i32, !dbg !5058
  %35 = load i32*, i32** %q1.addr.i, align 8, !dbg !5059
  store i32 %conv29.i, i32* %35, align 4, !dbg !5060
  %36 = load i32*, i32** %p1.addr.i, align 8, !dbg !5061
  %37 = load i32, i32* %36, align 4, !dbg !5062
  %tobool.i = icmp ne i32 %37, 0, !dbg !5062
  br i1 %tobool.i, label %if.end.i, label %land.lhs.true.i, !dbg !5063

land.lhs.true.i:                                  ; preds = %cond.end25.i
  %38 = load i32*, i32** %q1.addr.i, align 8, !dbg !5064
  %39 = load i32, i32* %38, align 4, !dbg !5065
  %tobool30.i = icmp ne i32 %39, 0, !dbg !5065
  br i1 %tobool30.i, label %if.end.i, label %if.then.i, !dbg !5066

if.then.i:                                        ; preds = %land.lhs.true.i
  store i32 0, i32* %retval.i, align 4, !dbg !5067
  br label %rv40_loop_filter_strength.exit, !dbg !5067

if.end.i:                                         ; preds = %land.lhs.true.i, %cond.end25.i
  %40 = load i32, i32* %edge.addr.i, align 4, !dbg !5068
  %tobool31.i = icmp ne i32 %40, 0, !dbg !5068
  br i1 %tobool31.i, label %if.end33.i, label %if.then32.i, !dbg !5069

if.then32.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i, align 4, !dbg !5070
  br label %rv40_loop_filter_strength.exit, !dbg !5070

if.end33.i:                                       ; preds = %if.end.i
  store i32 0, i32* %i.i, align 4, !dbg !5071
  %41 = load i8*, i8** %src.addr.i, align 8, !dbg !5072
  store i8* %41, i8** %ptr.i, align 8, !dbg !5073
  br label %for.cond34.i, !dbg !5074

for.cond34.i:                                     ; preds = %for.body37.i, %if.end33.i
  %42 = load i32, i32* %i.i, align 4, !dbg !5075
  %cmp35.i = icmp slt i32 %42, 4, !dbg !5076
  br i1 %cmp35.i, label %for.body37.i, label %for.end61.i, !dbg !5077

for.body37.i:                                     ; preds = %for.cond34.i
  %43 = load i32, i32* %step.addr.i, align 4, !dbg !5078
  %mul38.i = mul nsw i32 -2, %43, !dbg !5079
  %idxprom39.i = sext i32 %mul38.i to i64, !dbg !5080
  %44 = load i8*, i8** %ptr.i, align 8, !dbg !5080
  %arrayidx40.i = getelementptr inbounds i8, i8* %44, i64 %idxprom39.i, !dbg !5080
  %45 = load i8, i8* %arrayidx40.i, align 1, !dbg !5080
  %conv41.i = zext i8 %45 to i32, !dbg !5080
  %46 = load i32, i32* %step.addr.i, align 4, !dbg !5081
  %mul42.i = mul nsw i32 -3, %46, !dbg !5082
  %idxprom43.i = sext i32 %mul42.i to i64, !dbg !5083
  %47 = load i8*, i8** %ptr.i, align 8, !dbg !5083
  %arrayidx44.i = getelementptr inbounds i8, i8* %47, i64 %idxprom43.i, !dbg !5083
  %48 = load i8, i8* %arrayidx44.i, align 1, !dbg !5083
  %conv45.i = zext i8 %48 to i32, !dbg !5083
  %sub46.i = sub nsw i32 %conv41.i, %conv45.i, !dbg !5084
  %49 = load i32, i32* %sum_p1p2.i, align 4, !dbg !5085
  %add47.i = add nsw i32 %49, %sub46.i, !dbg !5085
  store i32 %add47.i, i32* %sum_p1p2.i, align 4, !dbg !5085
  %50 = load i32, i32* %step.addr.i, align 4, !dbg !5086
  %idxprom49.i = sext i32 %50 to i64, !dbg !5087
  %51 = load i8*, i8** %ptr.i, align 8, !dbg !5087
  %arrayidx50.i = getelementptr inbounds i8, i8* %51, i64 %idxprom49.i, !dbg !5087
  %52 = load i8, i8* %arrayidx50.i, align 1, !dbg !5087
  %conv51.i = zext i8 %52 to i32, !dbg !5087
  %53 = load i32, i32* %step.addr.i, align 4, !dbg !5088
  %mul52.i = mul nsw i32 2, %53, !dbg !5089
  %idxprom53.i = sext i32 %mul52.i to i64, !dbg !5090
  %54 = load i8*, i8** %ptr.i, align 8, !dbg !5090
  %arrayidx54.i = getelementptr inbounds i8, i8* %54, i64 %idxprom53.i, !dbg !5090
  %55 = load i8, i8* %arrayidx54.i, align 1, !dbg !5090
  %conv55.i = zext i8 %55 to i32, !dbg !5090
  %sub56.i = sub nsw i32 %conv51.i, %conv55.i, !dbg !5091
  %56 = load i32, i32* %sum_q1q2.i, align 4, !dbg !5092
  %add57.i = add nsw i32 %56, %sub56.i, !dbg !5092
  store i32 %add57.i, i32* %sum_q1q2.i, align 4, !dbg !5092
  %57 = load i32, i32* %i.i, align 4, !dbg !5093
  %inc59.i = add nsw i32 %57, 1, !dbg !5093
  store i32 %inc59.i, i32* %i.i, align 4, !dbg !5093
  %58 = load i64, i64* %stride.addr.i, align 8, !dbg !5094
  %59 = load i8*, i8** %ptr.i, align 8, !dbg !5095
  %add.ptr60.i = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !5095
  store i8* %add.ptr60.i, i8** %ptr.i, align 8, !dbg !5095
  br label %for.cond34.i, !dbg !5096, !llvm.loop !4924

for.end61.i:                                      ; preds = %for.cond34.i
  %60 = load i32*, i32** %p1.addr.i, align 8, !dbg !5097
  %61 = load i32, i32* %60, align 4, !dbg !5098
  %tobool62.i = icmp ne i32 %61, 0, !dbg !5098
  br i1 %tobool62.i, label %land.rhs.i, label %land.end.i, !dbg !5099

land.rhs.i:                                       ; preds = %for.end61.i
  %62 = load i32, i32* %sum_p1p2.i, align 4, !dbg !5100
  %cmp63.i = icmp sge i32 %62, 0, !dbg !5101
  br i1 %cmp63.i, label %cond.true65.i, label %cond.false66.i, !dbg !5102

cond.true65.i:                                    ; preds = %land.rhs.i
  %63 = load i32, i32* %sum_p1p2.i, align 4, !dbg !5103
  br label %cond.end68.i, !dbg !5104

cond.false66.i:                                   ; preds = %land.rhs.i
  %64 = load i32, i32* %sum_p1p2.i, align 4, !dbg !5105
  %sub67.i = sub nsw i32 0, %64, !dbg !5106
  br label %cond.end68.i, !dbg !5107

cond.end68.i:                                     ; preds = %cond.false66.i, %cond.true65.i
  %cond69.i = phi i32 [ %63, %cond.true65.i ], [ %sub67.i, %cond.false66.i ], !dbg !5108
  %65 = load i32, i32* %beta2.addr.i, align 4, !dbg !5109
  %cmp70.i = icmp slt i32 %cond69.i, %65, !dbg !5110
  br label %land.end.i, !dbg !5007

land.end.i:                                       ; preds = %cond.end68.i, %for.end61.i
  %66 = phi i1 [ false, %for.end61.i ], [ %cmp70.i, %cond.end68.i ], !dbg !5007
  %land.ext.i = zext i1 %66 to i32, !dbg !5111
  store i32 %land.ext.i, i32* %strong0.i, align 4, !dbg !5112
  %67 = load i32*, i32** %q1.addr.i, align 8, !dbg !5113
  %68 = load i32, i32* %67, align 4, !dbg !5114
  %tobool72.i = icmp ne i32 %68, 0, !dbg !5114
  br i1 %tobool72.i, label %land.rhs73.i, label %land.end83.i, !dbg !5115

land.rhs73.i:                                     ; preds = %land.end.i
  %69 = load i32, i32* %sum_q1q2.i, align 4, !dbg !5116
  %cmp74.i = icmp sge i32 %69, 0, !dbg !5117
  br i1 %cmp74.i, label %cond.true76.i, label %cond.false77.i, !dbg !5118

cond.true76.i:                                    ; preds = %land.rhs73.i
  %70 = load i32, i32* %sum_q1q2.i, align 4, !dbg !5119
  br label %cond.end79.i, !dbg !5120

cond.false77.i:                                   ; preds = %land.rhs73.i
  %71 = load i32, i32* %sum_q1q2.i, align 4, !dbg !5121
  %sub78.i = sub nsw i32 0, %71, !dbg !5122
  br label %cond.end79.i, !dbg !5123

cond.end79.i:                                     ; preds = %cond.false77.i, %cond.true76.i
  %cond80.i = phi i32 [ %70, %cond.true76.i ], [ %sub78.i, %cond.false77.i ], !dbg !5124
  %72 = load i32, i32* %beta2.addr.i, align 4, !dbg !5125
  %cmp81.i = icmp slt i32 %cond80.i, %72, !dbg !5126
  br label %land.end83.i, !dbg !5007

land.end83.i:                                     ; preds = %cond.end79.i, %land.end.i
  %73 = phi i1 [ false, %land.end.i ], [ %cmp81.i, %cond.end79.i ], !dbg !5007
  %land.ext84.i = zext i1 %73 to i32, !dbg !5127
  store i32 %land.ext84.i, i32* %strong1.i, align 4, !dbg !5128
  %74 = load i32, i32* %strong0.i, align 4, !dbg !5129
  %tobool85.i = icmp ne i32 %74, 0, !dbg !5129
  br i1 %tobool85.i, label %land.rhs86.i, label %land.end88.i, !dbg !5130

land.rhs86.i:                                     ; preds = %land.end83.i
  %75 = load i32, i32* %strong1.i, align 4, !dbg !5131
  %tobool87.i = icmp ne i32 %75, 0, !dbg !5132
  br label %land.end88.i, !dbg !5007

land.end88.i:                                     ; preds = %land.rhs86.i, %land.end83.i
  %76 = phi i1 [ false, %land.end83.i ], [ %tobool87.i, %land.rhs86.i ], !dbg !5007
  %land.ext89.i = zext i1 %76 to i32, !dbg !5133
  store i32 %land.ext89.i, i32* %retval.i, align 4, !dbg !5134
  br label %rv40_loop_filter_strength.exit, !dbg !5134

rv40_loop_filter_strength.exit:                   ; preds = %if.then.i, %if.then32.i, %land.end88.i
  %77 = load i32, i32* %retval.i, align 4, !dbg !5135
  ret i32 %77, !dbg !5136
}

declare void @ff_rv40dsp_init_x86(%struct.RV34DSPContext*) #2

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_h_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %h, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !5137 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5140, metadata !113), !dbg !5141
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5142, metadata !113), !dbg !5143
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !5144, metadata !113), !dbg !5145
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !5146, metadata !113), !dbg !5147
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5148, metadata !113), !dbg !5149
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !5150, metadata !113), !dbg !5151
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !5152, metadata !113), !dbg !5153
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !5154, metadata !113), !dbg !5155
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !5156
  %1 = load i8*, i8** %src.addr, align 8, !dbg !5157
  %2 = load i32, i32* %dstStride.addr, align 4, !dbg !5158
  %3 = load i32, i32* %srcStride.addr, align 4, !dbg !5159
  %4 = load i32, i32* %C1.addr, align 4, !dbg !5160
  %5 = load i32, i32* %C2.addr, align 4, !dbg !5161
  %6 = load i32, i32* %SHIFT.addr, align 4, !dbg !5162
  call void @put_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %2, i32 %3, i32 8, i32 %4, i32 %5, i32 %6), !dbg !5163
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !5164
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8, !dbg !5165
  %8 = load i8*, i8** %src.addr, align 8, !dbg !5166
  %add.ptr1 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !5167
  %9 = load i32, i32* %dstStride.addr, align 4, !dbg !5168
  %10 = load i32, i32* %srcStride.addr, align 4, !dbg !5169
  %11 = load i32, i32* %C1.addr, align 4, !dbg !5170
  %12 = load i32, i32* %C2.addr, align 4, !dbg !5171
  %13 = load i32, i32* %SHIFT.addr, align 4, !dbg !5172
  call void @put_rv40_qpel8_h_lowpass(i8* %add.ptr, i8* %add.ptr1, i32 %9, i32 %10, i32 8, i32 %11, i32 %12, i32 %13), !dbg !5173
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !5175
  %mul = mul nsw i32 8, %14, !dbg !5176
  %15 = load i8*, i8** %src.addr, align 8, !dbg !5177
  %idx.ext = sext i32 %mul to i64, !dbg !5177
  %add.ptr2 = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !5177
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !5177
  %16 = load i32, i32* %dstStride.addr, align 4, !dbg !5178
  %mul3 = mul nsw i32 8, %16, !dbg !5179
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !5180
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5180
  %add.ptr5 = getelementptr inbounds i8, i8* %17, i64 %idx.ext4, !dbg !5180
  store i8* %add.ptr5, i8** %dst.addr, align 8, !dbg !5180
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !5181
  %19 = load i8*, i8** %src.addr, align 8, !dbg !5182
  %20 = load i32, i32* %dstStride.addr, align 4, !dbg !5183
  %21 = load i32, i32* %srcStride.addr, align 4, !dbg !5184
  %22 = load i32, i32* %h.addr, align 4, !dbg !5185
  %sub = sub nsw i32 %22, 8, !dbg !5186
  %23 = load i32, i32* %C1.addr, align 4, !dbg !5187
  %24 = load i32, i32* %C2.addr, align 4, !dbg !5188
  %25 = load i32, i32* %SHIFT.addr, align 4, !dbg !5189
  call void @put_rv40_qpel8_h_lowpass(i8* %18, i8* %19, i32 %20, i32 %21, i32 %sub, i32 %23, i32 %24, i32 %25), !dbg !5190
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !5192
  %add.ptr6 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !5193
  %27 = load i8*, i8** %src.addr, align 8, !dbg !5194
  %add.ptr7 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !5195
  %28 = load i32, i32* %dstStride.addr, align 4, !dbg !5196
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !5197
  %30 = load i32, i32* %h.addr, align 4, !dbg !5198
  %sub8 = sub nsw i32 %30, 8, !dbg !5199
  %31 = load i32, i32* %C1.addr, align 4, !dbg !5200
  %32 = load i32, i32* %C2.addr, align 4, !dbg !5201
  %33 = load i32, i32* %SHIFT.addr, align 4, !dbg !5202
  call void @put_rv40_qpel8_h_lowpass(i8* %add.ptr6, i8* %add.ptr7, i32 %28, i32 %29, i32 %sub8, i32 %31, i32 %32, i32 %33), !dbg !5203
  ret void, !dbg !5205
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_h_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %h, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !5206 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  %cm = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5207, metadata !113), !dbg !5208
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5209, metadata !113), !dbg !5210
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !5211, metadata !113), !dbg !5212
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !5213, metadata !113), !dbg !5214
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5215, metadata !113), !dbg !5216
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !5217, metadata !113), !dbg !5218
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !5219, metadata !113), !dbg !5220
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !5221, metadata !113), !dbg !5222
  call void @llvm.dbg.declare(metadata i8** %cm, metadata !5223, metadata !113), !dbg !5224
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm, align 8, !dbg !5224
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5225, metadata !113), !dbg !5226
  store i32 0, i32* %i, align 4, !dbg !5227
  br label %for.cond, !dbg !5229

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5230
  %1 = load i32, i32* %h.addr, align 4, !dbg !5233
  %cmp = icmp slt i32 %0, %1, !dbg !5234
  br i1 %cmp, label %for.body, label %for.end, !dbg !5235

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %src.addr, align 8, !dbg !5236
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 -2, !dbg !5236
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5236
  %conv = zext i8 %3 to i32, !dbg !5236
  %4 = load i8*, i8** %src.addr, align 8, !dbg !5239
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 3, !dbg !5239
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !5239
  %conv2 = zext i8 %5 to i32, !dbg !5239
  %add = add nsw i32 %conv, %conv2, !dbg !5240
  %6 = load i8*, i8** %src.addr, align 8, !dbg !5241
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 -1, !dbg !5241
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !5241
  %conv4 = zext i8 %7 to i32, !dbg !5241
  %8 = load i8*, i8** %src.addr, align 8, !dbg !5242
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !5242
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !5242
  %conv6 = zext i8 %9 to i32, !dbg !5242
  %add7 = add nsw i32 %conv4, %conv6, !dbg !5243
  %mul = mul nsw i32 5, %add7, !dbg !5244
  %sub = sub nsw i32 %add, %mul, !dbg !5245
  %10 = load i8*, i8** %src.addr, align 8, !dbg !5246
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !5246
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !5246
  %conv9 = zext i8 %11 to i32, !dbg !5246
  %12 = load i32, i32* %C1.addr, align 4, !dbg !5247
  %mul10 = mul nsw i32 %conv9, %12, !dbg !5248
  %add11 = add nsw i32 %sub, %mul10, !dbg !5249
  %13 = load i8*, i8** %src.addr, align 8, !dbg !5250
  %arrayidx12 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !5250
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !5250
  %conv13 = zext i8 %14 to i32, !dbg !5250
  %15 = load i32, i32* %C2.addr, align 4, !dbg !5251
  %mul14 = mul nsw i32 %conv13, %15, !dbg !5252
  %add15 = add nsw i32 %add11, %mul14, !dbg !5253
  %16 = load i32, i32* %SHIFT.addr, align 4, !dbg !5254
  %sub16 = sub nsw i32 %16, 1, !dbg !5255
  %shl = shl i32 1, %sub16, !dbg !5256
  %add17 = add nsw i32 %add15, %shl, !dbg !5257
  %17 = load i32, i32* %SHIFT.addr, align 4, !dbg !5258
  %shr = ashr i32 %add17, %17, !dbg !5259
  %idxprom = sext i32 %shr to i64, !dbg !5260
  %18 = load i8*, i8** %cm, align 8, !dbg !5260
  %arrayidx18 = getelementptr inbounds i8, i8* %18, i64 %idxprom, !dbg !5260
  %19 = load i8, i8* %arrayidx18, align 1, !dbg !5260
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !5261
  %arrayidx19 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !5261
  store i8 %19, i8* %arrayidx19, align 1, !dbg !5262
  %21 = load i8*, i8** %src.addr, align 8, !dbg !5263
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !5263
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !5263
  %conv21 = zext i8 %22 to i32, !dbg !5263
  %23 = load i8*, i8** %src.addr, align 8, !dbg !5264
  %arrayidx22 = getelementptr inbounds i8, i8* %23, i64 4, !dbg !5264
  %24 = load i8, i8* %arrayidx22, align 1, !dbg !5264
  %conv23 = zext i8 %24 to i32, !dbg !5264
  %add24 = add nsw i32 %conv21, %conv23, !dbg !5265
  %25 = load i8*, i8** %src.addr, align 8, !dbg !5266
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !5266
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !5266
  %conv26 = zext i8 %26 to i32, !dbg !5266
  %27 = load i8*, i8** %src.addr, align 8, !dbg !5267
  %arrayidx27 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !5267
  %28 = load i8, i8* %arrayidx27, align 1, !dbg !5267
  %conv28 = zext i8 %28 to i32, !dbg !5267
  %add29 = add nsw i32 %conv26, %conv28, !dbg !5268
  %mul30 = mul nsw i32 5, %add29, !dbg !5269
  %sub31 = sub nsw i32 %add24, %mul30, !dbg !5270
  %29 = load i8*, i8** %src.addr, align 8, !dbg !5271
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !5271
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !5271
  %conv33 = zext i8 %30 to i32, !dbg !5271
  %31 = load i32, i32* %C1.addr, align 4, !dbg !5272
  %mul34 = mul nsw i32 %conv33, %31, !dbg !5273
  %add35 = add nsw i32 %sub31, %mul34, !dbg !5274
  %32 = load i8*, i8** %src.addr, align 8, !dbg !5275
  %arrayidx36 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !5275
  %33 = load i8, i8* %arrayidx36, align 1, !dbg !5275
  %conv37 = zext i8 %33 to i32, !dbg !5275
  %34 = load i32, i32* %C2.addr, align 4, !dbg !5276
  %mul38 = mul nsw i32 %conv37, %34, !dbg !5277
  %add39 = add nsw i32 %add35, %mul38, !dbg !5278
  %35 = load i32, i32* %SHIFT.addr, align 4, !dbg !5279
  %sub40 = sub nsw i32 %35, 1, !dbg !5280
  %shl41 = shl i32 1, %sub40, !dbg !5281
  %add42 = add nsw i32 %add39, %shl41, !dbg !5282
  %36 = load i32, i32* %SHIFT.addr, align 4, !dbg !5283
  %shr43 = ashr i32 %add42, %36, !dbg !5284
  %idxprom44 = sext i32 %shr43 to i64, !dbg !5285
  %37 = load i8*, i8** %cm, align 8, !dbg !5285
  %arrayidx45 = getelementptr inbounds i8, i8* %37, i64 %idxprom44, !dbg !5285
  %38 = load i8, i8* %arrayidx45, align 1, !dbg !5285
  %39 = load i8*, i8** %dst.addr, align 8, !dbg !5286
  %arrayidx46 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !5286
  store i8 %38, i8* %arrayidx46, align 1, !dbg !5287
  %40 = load i8*, i8** %src.addr, align 8, !dbg !5288
  %arrayidx47 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !5288
  %41 = load i8, i8* %arrayidx47, align 1, !dbg !5288
  %conv48 = zext i8 %41 to i32, !dbg !5288
  %42 = load i8*, i8** %src.addr, align 8, !dbg !5289
  %arrayidx49 = getelementptr inbounds i8, i8* %42, i64 5, !dbg !5289
  %43 = load i8, i8* %arrayidx49, align 1, !dbg !5289
  %conv50 = zext i8 %43 to i32, !dbg !5289
  %add51 = add nsw i32 %conv48, %conv50, !dbg !5290
  %44 = load i8*, i8** %src.addr, align 8, !dbg !5291
  %arrayidx52 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !5291
  %45 = load i8, i8* %arrayidx52, align 1, !dbg !5291
  %conv53 = zext i8 %45 to i32, !dbg !5291
  %46 = load i8*, i8** %src.addr, align 8, !dbg !5292
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 4, !dbg !5292
  %47 = load i8, i8* %arrayidx54, align 1, !dbg !5292
  %conv55 = zext i8 %47 to i32, !dbg !5292
  %add56 = add nsw i32 %conv53, %conv55, !dbg !5293
  %mul57 = mul nsw i32 5, %add56, !dbg !5294
  %sub58 = sub nsw i32 %add51, %mul57, !dbg !5295
  %48 = load i8*, i8** %src.addr, align 8, !dbg !5296
  %arrayidx59 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !5296
  %49 = load i8, i8* %arrayidx59, align 1, !dbg !5296
  %conv60 = zext i8 %49 to i32, !dbg !5296
  %50 = load i32, i32* %C1.addr, align 4, !dbg !5297
  %mul61 = mul nsw i32 %conv60, %50, !dbg !5298
  %add62 = add nsw i32 %sub58, %mul61, !dbg !5299
  %51 = load i8*, i8** %src.addr, align 8, !dbg !5300
  %arrayidx63 = getelementptr inbounds i8, i8* %51, i64 3, !dbg !5300
  %52 = load i8, i8* %arrayidx63, align 1, !dbg !5300
  %conv64 = zext i8 %52 to i32, !dbg !5300
  %53 = load i32, i32* %C2.addr, align 4, !dbg !5301
  %mul65 = mul nsw i32 %conv64, %53, !dbg !5302
  %add66 = add nsw i32 %add62, %mul65, !dbg !5303
  %54 = load i32, i32* %SHIFT.addr, align 4, !dbg !5304
  %sub67 = sub nsw i32 %54, 1, !dbg !5305
  %shl68 = shl i32 1, %sub67, !dbg !5306
  %add69 = add nsw i32 %add66, %shl68, !dbg !5307
  %55 = load i32, i32* %SHIFT.addr, align 4, !dbg !5308
  %shr70 = ashr i32 %add69, %55, !dbg !5309
  %idxprom71 = sext i32 %shr70 to i64, !dbg !5310
  %56 = load i8*, i8** %cm, align 8, !dbg !5310
  %arrayidx72 = getelementptr inbounds i8, i8* %56, i64 %idxprom71, !dbg !5310
  %57 = load i8, i8* %arrayidx72, align 1, !dbg !5310
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !5311
  %arrayidx73 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !5311
  store i8 %57, i8* %arrayidx73, align 1, !dbg !5312
  %59 = load i8*, i8** %src.addr, align 8, !dbg !5313
  %arrayidx74 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !5313
  %60 = load i8, i8* %arrayidx74, align 1, !dbg !5313
  %conv75 = zext i8 %60 to i32, !dbg !5313
  %61 = load i8*, i8** %src.addr, align 8, !dbg !5314
  %arrayidx76 = getelementptr inbounds i8, i8* %61, i64 6, !dbg !5314
  %62 = load i8, i8* %arrayidx76, align 1, !dbg !5314
  %conv77 = zext i8 %62 to i32, !dbg !5314
  %add78 = add nsw i32 %conv75, %conv77, !dbg !5315
  %63 = load i8*, i8** %src.addr, align 8, !dbg !5316
  %arrayidx79 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !5316
  %64 = load i8, i8* %arrayidx79, align 1, !dbg !5316
  %conv80 = zext i8 %64 to i32, !dbg !5316
  %65 = load i8*, i8** %src.addr, align 8, !dbg !5317
  %arrayidx81 = getelementptr inbounds i8, i8* %65, i64 5, !dbg !5317
  %66 = load i8, i8* %arrayidx81, align 1, !dbg !5317
  %conv82 = zext i8 %66 to i32, !dbg !5317
  %add83 = add nsw i32 %conv80, %conv82, !dbg !5318
  %mul84 = mul nsw i32 5, %add83, !dbg !5319
  %sub85 = sub nsw i32 %add78, %mul84, !dbg !5320
  %67 = load i8*, i8** %src.addr, align 8, !dbg !5321
  %arrayidx86 = getelementptr inbounds i8, i8* %67, i64 3, !dbg !5321
  %68 = load i8, i8* %arrayidx86, align 1, !dbg !5321
  %conv87 = zext i8 %68 to i32, !dbg !5321
  %69 = load i32, i32* %C1.addr, align 4, !dbg !5322
  %mul88 = mul nsw i32 %conv87, %69, !dbg !5323
  %add89 = add nsw i32 %sub85, %mul88, !dbg !5324
  %70 = load i8*, i8** %src.addr, align 8, !dbg !5325
  %arrayidx90 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !5325
  %71 = load i8, i8* %arrayidx90, align 1, !dbg !5325
  %conv91 = zext i8 %71 to i32, !dbg !5325
  %72 = load i32, i32* %C2.addr, align 4, !dbg !5326
  %mul92 = mul nsw i32 %conv91, %72, !dbg !5327
  %add93 = add nsw i32 %add89, %mul92, !dbg !5328
  %73 = load i32, i32* %SHIFT.addr, align 4, !dbg !5329
  %sub94 = sub nsw i32 %73, 1, !dbg !5330
  %shl95 = shl i32 1, %sub94, !dbg !5331
  %add96 = add nsw i32 %add93, %shl95, !dbg !5332
  %74 = load i32, i32* %SHIFT.addr, align 4, !dbg !5333
  %shr97 = ashr i32 %add96, %74, !dbg !5334
  %idxprom98 = sext i32 %shr97 to i64, !dbg !5335
  %75 = load i8*, i8** %cm, align 8, !dbg !5335
  %arrayidx99 = getelementptr inbounds i8, i8* %75, i64 %idxprom98, !dbg !5335
  %76 = load i8, i8* %arrayidx99, align 1, !dbg !5335
  %77 = load i8*, i8** %dst.addr, align 8, !dbg !5336
  %arrayidx100 = getelementptr inbounds i8, i8* %77, i64 3, !dbg !5336
  store i8 %76, i8* %arrayidx100, align 1, !dbg !5337
  %78 = load i8*, i8** %src.addr, align 8, !dbg !5338
  %arrayidx101 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !5338
  %79 = load i8, i8* %arrayidx101, align 1, !dbg !5338
  %conv102 = zext i8 %79 to i32, !dbg !5338
  %80 = load i8*, i8** %src.addr, align 8, !dbg !5339
  %arrayidx103 = getelementptr inbounds i8, i8* %80, i64 7, !dbg !5339
  %81 = load i8, i8* %arrayidx103, align 1, !dbg !5339
  %conv104 = zext i8 %81 to i32, !dbg !5339
  %add105 = add nsw i32 %conv102, %conv104, !dbg !5340
  %82 = load i8*, i8** %src.addr, align 8, !dbg !5341
  %arrayidx106 = getelementptr inbounds i8, i8* %82, i64 3, !dbg !5341
  %83 = load i8, i8* %arrayidx106, align 1, !dbg !5341
  %conv107 = zext i8 %83 to i32, !dbg !5341
  %84 = load i8*, i8** %src.addr, align 8, !dbg !5342
  %arrayidx108 = getelementptr inbounds i8, i8* %84, i64 6, !dbg !5342
  %85 = load i8, i8* %arrayidx108, align 1, !dbg !5342
  %conv109 = zext i8 %85 to i32, !dbg !5342
  %add110 = add nsw i32 %conv107, %conv109, !dbg !5343
  %mul111 = mul nsw i32 5, %add110, !dbg !5344
  %sub112 = sub nsw i32 %add105, %mul111, !dbg !5345
  %86 = load i8*, i8** %src.addr, align 8, !dbg !5346
  %arrayidx113 = getelementptr inbounds i8, i8* %86, i64 4, !dbg !5346
  %87 = load i8, i8* %arrayidx113, align 1, !dbg !5346
  %conv114 = zext i8 %87 to i32, !dbg !5346
  %88 = load i32, i32* %C1.addr, align 4, !dbg !5347
  %mul115 = mul nsw i32 %conv114, %88, !dbg !5348
  %add116 = add nsw i32 %sub112, %mul115, !dbg !5349
  %89 = load i8*, i8** %src.addr, align 8, !dbg !5350
  %arrayidx117 = getelementptr inbounds i8, i8* %89, i64 5, !dbg !5350
  %90 = load i8, i8* %arrayidx117, align 1, !dbg !5350
  %conv118 = zext i8 %90 to i32, !dbg !5350
  %91 = load i32, i32* %C2.addr, align 4, !dbg !5351
  %mul119 = mul nsw i32 %conv118, %91, !dbg !5352
  %add120 = add nsw i32 %add116, %mul119, !dbg !5353
  %92 = load i32, i32* %SHIFT.addr, align 4, !dbg !5354
  %sub121 = sub nsw i32 %92, 1, !dbg !5355
  %shl122 = shl i32 1, %sub121, !dbg !5356
  %add123 = add nsw i32 %add120, %shl122, !dbg !5357
  %93 = load i32, i32* %SHIFT.addr, align 4, !dbg !5358
  %shr124 = ashr i32 %add123, %93, !dbg !5359
  %idxprom125 = sext i32 %shr124 to i64, !dbg !5360
  %94 = load i8*, i8** %cm, align 8, !dbg !5360
  %arrayidx126 = getelementptr inbounds i8, i8* %94, i64 %idxprom125, !dbg !5360
  %95 = load i8, i8* %arrayidx126, align 1, !dbg !5360
  %96 = load i8*, i8** %dst.addr, align 8, !dbg !5361
  %arrayidx127 = getelementptr inbounds i8, i8* %96, i64 4, !dbg !5361
  store i8 %95, i8* %arrayidx127, align 1, !dbg !5362
  %97 = load i8*, i8** %src.addr, align 8, !dbg !5363
  %arrayidx128 = getelementptr inbounds i8, i8* %97, i64 3, !dbg !5363
  %98 = load i8, i8* %arrayidx128, align 1, !dbg !5363
  %conv129 = zext i8 %98 to i32, !dbg !5363
  %99 = load i8*, i8** %src.addr, align 8, !dbg !5364
  %arrayidx130 = getelementptr inbounds i8, i8* %99, i64 8, !dbg !5364
  %100 = load i8, i8* %arrayidx130, align 1, !dbg !5364
  %conv131 = zext i8 %100 to i32, !dbg !5364
  %add132 = add nsw i32 %conv129, %conv131, !dbg !5365
  %101 = load i8*, i8** %src.addr, align 8, !dbg !5366
  %arrayidx133 = getelementptr inbounds i8, i8* %101, i64 4, !dbg !5366
  %102 = load i8, i8* %arrayidx133, align 1, !dbg !5366
  %conv134 = zext i8 %102 to i32, !dbg !5366
  %103 = load i8*, i8** %src.addr, align 8, !dbg !5367
  %arrayidx135 = getelementptr inbounds i8, i8* %103, i64 7, !dbg !5367
  %104 = load i8, i8* %arrayidx135, align 1, !dbg !5367
  %conv136 = zext i8 %104 to i32, !dbg !5367
  %add137 = add nsw i32 %conv134, %conv136, !dbg !5368
  %mul138 = mul nsw i32 5, %add137, !dbg !5369
  %sub139 = sub nsw i32 %add132, %mul138, !dbg !5370
  %105 = load i8*, i8** %src.addr, align 8, !dbg !5371
  %arrayidx140 = getelementptr inbounds i8, i8* %105, i64 5, !dbg !5371
  %106 = load i8, i8* %arrayidx140, align 1, !dbg !5371
  %conv141 = zext i8 %106 to i32, !dbg !5371
  %107 = load i32, i32* %C1.addr, align 4, !dbg !5372
  %mul142 = mul nsw i32 %conv141, %107, !dbg !5373
  %add143 = add nsw i32 %sub139, %mul142, !dbg !5374
  %108 = load i8*, i8** %src.addr, align 8, !dbg !5375
  %arrayidx144 = getelementptr inbounds i8, i8* %108, i64 6, !dbg !5375
  %109 = load i8, i8* %arrayidx144, align 1, !dbg !5375
  %conv145 = zext i8 %109 to i32, !dbg !5375
  %110 = load i32, i32* %C2.addr, align 4, !dbg !5376
  %mul146 = mul nsw i32 %conv145, %110, !dbg !5377
  %add147 = add nsw i32 %add143, %mul146, !dbg !5378
  %111 = load i32, i32* %SHIFT.addr, align 4, !dbg !5379
  %sub148 = sub nsw i32 %111, 1, !dbg !5380
  %shl149 = shl i32 1, %sub148, !dbg !5381
  %add150 = add nsw i32 %add147, %shl149, !dbg !5382
  %112 = load i32, i32* %SHIFT.addr, align 4, !dbg !5383
  %shr151 = ashr i32 %add150, %112, !dbg !5384
  %idxprom152 = sext i32 %shr151 to i64, !dbg !5385
  %113 = load i8*, i8** %cm, align 8, !dbg !5385
  %arrayidx153 = getelementptr inbounds i8, i8* %113, i64 %idxprom152, !dbg !5385
  %114 = load i8, i8* %arrayidx153, align 1, !dbg !5385
  %115 = load i8*, i8** %dst.addr, align 8, !dbg !5386
  %arrayidx154 = getelementptr inbounds i8, i8* %115, i64 5, !dbg !5386
  store i8 %114, i8* %arrayidx154, align 1, !dbg !5387
  %116 = load i8*, i8** %src.addr, align 8, !dbg !5388
  %arrayidx155 = getelementptr inbounds i8, i8* %116, i64 4, !dbg !5388
  %117 = load i8, i8* %arrayidx155, align 1, !dbg !5388
  %conv156 = zext i8 %117 to i32, !dbg !5388
  %118 = load i8*, i8** %src.addr, align 8, !dbg !5389
  %arrayidx157 = getelementptr inbounds i8, i8* %118, i64 9, !dbg !5389
  %119 = load i8, i8* %arrayidx157, align 1, !dbg !5389
  %conv158 = zext i8 %119 to i32, !dbg !5389
  %add159 = add nsw i32 %conv156, %conv158, !dbg !5390
  %120 = load i8*, i8** %src.addr, align 8, !dbg !5391
  %arrayidx160 = getelementptr inbounds i8, i8* %120, i64 5, !dbg !5391
  %121 = load i8, i8* %arrayidx160, align 1, !dbg !5391
  %conv161 = zext i8 %121 to i32, !dbg !5391
  %122 = load i8*, i8** %src.addr, align 8, !dbg !5392
  %arrayidx162 = getelementptr inbounds i8, i8* %122, i64 8, !dbg !5392
  %123 = load i8, i8* %arrayidx162, align 1, !dbg !5392
  %conv163 = zext i8 %123 to i32, !dbg !5392
  %add164 = add nsw i32 %conv161, %conv163, !dbg !5393
  %mul165 = mul nsw i32 5, %add164, !dbg !5394
  %sub166 = sub nsw i32 %add159, %mul165, !dbg !5395
  %124 = load i8*, i8** %src.addr, align 8, !dbg !5396
  %arrayidx167 = getelementptr inbounds i8, i8* %124, i64 6, !dbg !5396
  %125 = load i8, i8* %arrayidx167, align 1, !dbg !5396
  %conv168 = zext i8 %125 to i32, !dbg !5396
  %126 = load i32, i32* %C1.addr, align 4, !dbg !5397
  %mul169 = mul nsw i32 %conv168, %126, !dbg !5398
  %add170 = add nsw i32 %sub166, %mul169, !dbg !5399
  %127 = load i8*, i8** %src.addr, align 8, !dbg !5400
  %arrayidx171 = getelementptr inbounds i8, i8* %127, i64 7, !dbg !5400
  %128 = load i8, i8* %arrayidx171, align 1, !dbg !5400
  %conv172 = zext i8 %128 to i32, !dbg !5400
  %129 = load i32, i32* %C2.addr, align 4, !dbg !5401
  %mul173 = mul nsw i32 %conv172, %129, !dbg !5402
  %add174 = add nsw i32 %add170, %mul173, !dbg !5403
  %130 = load i32, i32* %SHIFT.addr, align 4, !dbg !5404
  %sub175 = sub nsw i32 %130, 1, !dbg !5405
  %shl176 = shl i32 1, %sub175, !dbg !5406
  %add177 = add nsw i32 %add174, %shl176, !dbg !5407
  %131 = load i32, i32* %SHIFT.addr, align 4, !dbg !5408
  %shr178 = ashr i32 %add177, %131, !dbg !5409
  %idxprom179 = sext i32 %shr178 to i64, !dbg !5410
  %132 = load i8*, i8** %cm, align 8, !dbg !5410
  %arrayidx180 = getelementptr inbounds i8, i8* %132, i64 %idxprom179, !dbg !5410
  %133 = load i8, i8* %arrayidx180, align 1, !dbg !5410
  %134 = load i8*, i8** %dst.addr, align 8, !dbg !5411
  %arrayidx181 = getelementptr inbounds i8, i8* %134, i64 6, !dbg !5411
  store i8 %133, i8* %arrayidx181, align 1, !dbg !5412
  %135 = load i8*, i8** %src.addr, align 8, !dbg !5413
  %arrayidx182 = getelementptr inbounds i8, i8* %135, i64 5, !dbg !5413
  %136 = load i8, i8* %arrayidx182, align 1, !dbg !5413
  %conv183 = zext i8 %136 to i32, !dbg !5413
  %137 = load i8*, i8** %src.addr, align 8, !dbg !5414
  %arrayidx184 = getelementptr inbounds i8, i8* %137, i64 10, !dbg !5414
  %138 = load i8, i8* %arrayidx184, align 1, !dbg !5414
  %conv185 = zext i8 %138 to i32, !dbg !5414
  %add186 = add nsw i32 %conv183, %conv185, !dbg !5415
  %139 = load i8*, i8** %src.addr, align 8, !dbg !5416
  %arrayidx187 = getelementptr inbounds i8, i8* %139, i64 6, !dbg !5416
  %140 = load i8, i8* %arrayidx187, align 1, !dbg !5416
  %conv188 = zext i8 %140 to i32, !dbg !5416
  %141 = load i8*, i8** %src.addr, align 8, !dbg !5417
  %arrayidx189 = getelementptr inbounds i8, i8* %141, i64 9, !dbg !5417
  %142 = load i8, i8* %arrayidx189, align 1, !dbg !5417
  %conv190 = zext i8 %142 to i32, !dbg !5417
  %add191 = add nsw i32 %conv188, %conv190, !dbg !5418
  %mul192 = mul nsw i32 5, %add191, !dbg !5419
  %sub193 = sub nsw i32 %add186, %mul192, !dbg !5420
  %143 = load i8*, i8** %src.addr, align 8, !dbg !5421
  %arrayidx194 = getelementptr inbounds i8, i8* %143, i64 7, !dbg !5421
  %144 = load i8, i8* %arrayidx194, align 1, !dbg !5421
  %conv195 = zext i8 %144 to i32, !dbg !5421
  %145 = load i32, i32* %C1.addr, align 4, !dbg !5422
  %mul196 = mul nsw i32 %conv195, %145, !dbg !5423
  %add197 = add nsw i32 %sub193, %mul196, !dbg !5424
  %146 = load i8*, i8** %src.addr, align 8, !dbg !5425
  %arrayidx198 = getelementptr inbounds i8, i8* %146, i64 8, !dbg !5425
  %147 = load i8, i8* %arrayidx198, align 1, !dbg !5425
  %conv199 = zext i8 %147 to i32, !dbg !5425
  %148 = load i32, i32* %C2.addr, align 4, !dbg !5426
  %mul200 = mul nsw i32 %conv199, %148, !dbg !5427
  %add201 = add nsw i32 %add197, %mul200, !dbg !5428
  %149 = load i32, i32* %SHIFT.addr, align 4, !dbg !5429
  %sub202 = sub nsw i32 %149, 1, !dbg !5430
  %shl203 = shl i32 1, %sub202, !dbg !5431
  %add204 = add nsw i32 %add201, %shl203, !dbg !5432
  %150 = load i32, i32* %SHIFT.addr, align 4, !dbg !5433
  %shr205 = ashr i32 %add204, %150, !dbg !5434
  %idxprom206 = sext i32 %shr205 to i64, !dbg !5435
  %151 = load i8*, i8** %cm, align 8, !dbg !5435
  %arrayidx207 = getelementptr inbounds i8, i8* %151, i64 %idxprom206, !dbg !5435
  %152 = load i8, i8* %arrayidx207, align 1, !dbg !5435
  %153 = load i8*, i8** %dst.addr, align 8, !dbg !5436
  %arrayidx208 = getelementptr inbounds i8, i8* %153, i64 7, !dbg !5436
  store i8 %152, i8* %arrayidx208, align 1, !dbg !5437
  %154 = load i32, i32* %dstStride.addr, align 4, !dbg !5438
  %155 = load i8*, i8** %dst.addr, align 8, !dbg !5439
  %idx.ext = sext i32 %154 to i64, !dbg !5439
  %add.ptr = getelementptr inbounds i8, i8* %155, i64 %idx.ext, !dbg !5439
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !5439
  %156 = load i32, i32* %srcStride.addr, align 4, !dbg !5440
  %157 = load i8*, i8** %src.addr, align 8, !dbg !5441
  %idx.ext209 = sext i32 %156 to i64, !dbg !5441
  %add.ptr210 = getelementptr inbounds i8, i8* %157, i64 %idx.ext209, !dbg !5441
  store i8* %add.ptr210, i8** %src.addr, align 8, !dbg !5441
  br label %for.inc, !dbg !5442

for.inc:                                          ; preds = %for.body
  %158 = load i32, i32* %i, align 4, !dbg !5443
  %inc = add nsw i32 %158, 1, !dbg !5443
  store i32 %inc, i32* %i, align 4, !dbg !5443
  br label %for.cond, !dbg !5445, !llvm.loop !5446

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5448
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel16_v_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %w, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !5450 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5451, metadata !113), !dbg !5452
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5453, metadata !113), !dbg !5454
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !5455, metadata !113), !dbg !5456
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !5457, metadata !113), !dbg !5458
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5459, metadata !113), !dbg !5460
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !5461, metadata !113), !dbg !5462
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !5463, metadata !113), !dbg !5464
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !5465, metadata !113), !dbg !5466
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !5467
  %1 = load i8*, i8** %src.addr, align 8, !dbg !5468
  %2 = load i32, i32* %dstStride.addr, align 4, !dbg !5469
  %3 = load i32, i32* %srcStride.addr, align 4, !dbg !5470
  %4 = load i32, i32* %C1.addr, align 4, !dbg !5471
  %5 = load i32, i32* %C2.addr, align 4, !dbg !5472
  %6 = load i32, i32* %SHIFT.addr, align 4, !dbg !5473
  call void @put_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %2, i32 %3, i32 8, i32 %4, i32 %5, i32 %6), !dbg !5474
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !5475
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8, !dbg !5476
  %8 = load i8*, i8** %src.addr, align 8, !dbg !5477
  %add.ptr1 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !5478
  %9 = load i32, i32* %dstStride.addr, align 4, !dbg !5479
  %10 = load i32, i32* %srcStride.addr, align 4, !dbg !5480
  %11 = load i32, i32* %C1.addr, align 4, !dbg !5481
  %12 = load i32, i32* %C2.addr, align 4, !dbg !5482
  %13 = load i32, i32* %SHIFT.addr, align 4, !dbg !5483
  call void @put_rv40_qpel8_v_lowpass(i8* %add.ptr, i8* %add.ptr1, i32 %9, i32 %10, i32 8, i32 %11, i32 %12, i32 %13), !dbg !5484
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !5486
  %mul = mul nsw i32 8, %14, !dbg !5487
  %15 = load i8*, i8** %src.addr, align 8, !dbg !5488
  %idx.ext = sext i32 %mul to i64, !dbg !5488
  %add.ptr2 = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !5488
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !5488
  %16 = load i32, i32* %dstStride.addr, align 4, !dbg !5489
  %mul3 = mul nsw i32 8, %16, !dbg !5490
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !5491
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5491
  %add.ptr5 = getelementptr inbounds i8, i8* %17, i64 %idx.ext4, !dbg !5491
  store i8* %add.ptr5, i8** %dst.addr, align 8, !dbg !5491
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !5492
  %19 = load i8*, i8** %src.addr, align 8, !dbg !5493
  %20 = load i32, i32* %dstStride.addr, align 4, !dbg !5494
  %21 = load i32, i32* %srcStride.addr, align 4, !dbg !5495
  %22 = load i32, i32* %w.addr, align 4, !dbg !5496
  %sub = sub nsw i32 %22, 8, !dbg !5497
  %23 = load i32, i32* %C1.addr, align 4, !dbg !5498
  %24 = load i32, i32* %C2.addr, align 4, !dbg !5499
  %25 = load i32, i32* %SHIFT.addr, align 4, !dbg !5500
  call void @put_rv40_qpel8_v_lowpass(i8* %18, i8* %19, i32 %20, i32 %21, i32 %sub, i32 %23, i32 %24, i32 %25), !dbg !5501
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !5503
  %add.ptr6 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !5504
  %27 = load i8*, i8** %src.addr, align 8, !dbg !5505
  %add.ptr7 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !5506
  %28 = load i32, i32* %dstStride.addr, align 4, !dbg !5507
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !5508
  %30 = load i32, i32* %w.addr, align 4, !dbg !5509
  %sub8 = sub nsw i32 %30, 8, !dbg !5510
  %31 = load i32, i32* %C1.addr, align 4, !dbg !5511
  %32 = load i32, i32* %C2.addr, align 4, !dbg !5512
  %33 = load i32, i32* %SHIFT.addr, align 4, !dbg !5513
  call void @put_rv40_qpel8_v_lowpass(i8* %add.ptr6, i8* %add.ptr7, i32 %28, i32 %29, i32 %sub8, i32 %31, i32 %32, i32 %33), !dbg !5514
  ret void, !dbg !5516
}

; Function Attrs: nounwind uwtable
define internal void @put_rv40_qpel8_v_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %w, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !5517 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  %cm = alloca i8*, align 8
  %i = alloca i32, align 4
  %srcB = alloca i32, align 4
  %srcA = alloca i32, align 4
  %src0 = alloca i32, align 4
  %src1 = alloca i32, align 4
  %src2 = alloca i32, align 4
  %src3 = alloca i32, align 4
  %src4 = alloca i32, align 4
  %src5 = alloca i32, align 4
  %src6 = alloca i32, align 4
  %src7 = alloca i32, align 4
  %src8 = alloca i32, align 4
  %src9 = alloca i32, align 4
  %src10 = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5518, metadata !113), !dbg !5519
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5520, metadata !113), !dbg !5521
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !5522, metadata !113), !dbg !5523
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !5524, metadata !113), !dbg !5525
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5526, metadata !113), !dbg !5527
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !5528, metadata !113), !dbg !5529
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !5530, metadata !113), !dbg !5531
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !5532, metadata !113), !dbg !5533
  call void @llvm.dbg.declare(metadata i8** %cm, metadata !5534, metadata !113), !dbg !5535
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm, align 8, !dbg !5535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5536, metadata !113), !dbg !5537
  store i32 0, i32* %i, align 4, !dbg !5538
  br label %for.cond, !dbg !5540

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5541
  %1 = load i32, i32* %w.addr, align 4, !dbg !5544
  %cmp = icmp slt i32 %0, %1, !dbg !5545
  br i1 %cmp, label %for.body, label %for.end, !dbg !5546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %srcB, metadata !5547, metadata !113), !dbg !5549
  %2 = load i32, i32* %srcStride.addr, align 4, !dbg !5550
  %mul = mul nsw i32 -2, %2, !dbg !5552
  %idxprom = sext i32 %mul to i64, !dbg !5553
  %3 = load i8*, i8** %src.addr, align 8, !dbg !5553
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !5553
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5553
  %conv = zext i8 %4 to i32, !dbg !5553
  store i32 %conv, i32* %srcB, align 4, !dbg !5554
  call void @llvm.dbg.declare(metadata i32* %srcA, metadata !5555, metadata !113), !dbg !5556
  %5 = load i32, i32* %srcStride.addr, align 4, !dbg !5557
  %mul1 = mul nsw i32 -1, %5, !dbg !5558
  %idxprom2 = sext i32 %mul1 to i64, !dbg !5559
  %6 = load i8*, i8** %src.addr, align 8, !dbg !5559
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !5559
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !5559
  %conv4 = zext i8 %7 to i32, !dbg !5559
  store i32 %conv4, i32* %srcA, align 4, !dbg !5560
  call void @llvm.dbg.declare(metadata i32* %src0, metadata !5561, metadata !113), !dbg !5562
  %8 = load i32, i32* %srcStride.addr, align 4, !dbg !5563
  %mul5 = mul nsw i32 0, %8, !dbg !5564
  %idxprom6 = sext i32 %mul5 to i64, !dbg !5565
  %9 = load i8*, i8** %src.addr, align 8, !dbg !5565
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %idxprom6, !dbg !5565
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !5565
  %conv8 = zext i8 %10 to i32, !dbg !5565
  store i32 %conv8, i32* %src0, align 4, !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %src1, metadata !5567, metadata !113), !dbg !5568
  %11 = load i32, i32* %srcStride.addr, align 4, !dbg !5569
  %mul9 = mul nsw i32 1, %11, !dbg !5570
  %idxprom10 = sext i32 %mul9 to i64, !dbg !5571
  %12 = load i8*, i8** %src.addr, align 8, !dbg !5571
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 %idxprom10, !dbg !5571
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !5571
  %conv12 = zext i8 %13 to i32, !dbg !5571
  store i32 %conv12, i32* %src1, align 4, !dbg !5572
  call void @llvm.dbg.declare(metadata i32* %src2, metadata !5573, metadata !113), !dbg !5574
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !5575
  %mul13 = mul nsw i32 2, %14, !dbg !5576
  %idxprom14 = sext i32 %mul13 to i64, !dbg !5577
  %15 = load i8*, i8** %src.addr, align 8, !dbg !5577
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i64 %idxprom14, !dbg !5577
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !5577
  %conv16 = zext i8 %16 to i32, !dbg !5577
  store i32 %conv16, i32* %src2, align 4, !dbg !5578
  call void @llvm.dbg.declare(metadata i32* %src3, metadata !5579, metadata !113), !dbg !5580
  %17 = load i32, i32* %srcStride.addr, align 4, !dbg !5581
  %mul17 = mul nsw i32 3, %17, !dbg !5582
  %idxprom18 = sext i32 %mul17 to i64, !dbg !5583
  %18 = load i8*, i8** %src.addr, align 8, !dbg !5583
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 %idxprom18, !dbg !5583
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !5583
  %conv20 = zext i8 %19 to i32, !dbg !5583
  store i32 %conv20, i32* %src3, align 4, !dbg !5584
  call void @llvm.dbg.declare(metadata i32* %src4, metadata !5585, metadata !113), !dbg !5586
  %20 = load i32, i32* %srcStride.addr, align 4, !dbg !5587
  %mul21 = mul nsw i32 4, %20, !dbg !5588
  %idxprom22 = sext i32 %mul21 to i64, !dbg !5589
  %21 = load i8*, i8** %src.addr, align 8, !dbg !5589
  %arrayidx23 = getelementptr inbounds i8, i8* %21, i64 %idxprom22, !dbg !5589
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !5589
  %conv24 = zext i8 %22 to i32, !dbg !5589
  store i32 %conv24, i32* %src4, align 4, !dbg !5590
  call void @llvm.dbg.declare(metadata i32* %src5, metadata !5591, metadata !113), !dbg !5592
  %23 = load i32, i32* %srcStride.addr, align 4, !dbg !5593
  %mul25 = mul nsw i32 5, %23, !dbg !5594
  %idxprom26 = sext i32 %mul25 to i64, !dbg !5595
  %24 = load i8*, i8** %src.addr, align 8, !dbg !5595
  %arrayidx27 = getelementptr inbounds i8, i8* %24, i64 %idxprom26, !dbg !5595
  %25 = load i8, i8* %arrayidx27, align 1, !dbg !5595
  %conv28 = zext i8 %25 to i32, !dbg !5595
  store i32 %conv28, i32* %src5, align 4, !dbg !5596
  call void @llvm.dbg.declare(metadata i32* %src6, metadata !5597, metadata !113), !dbg !5598
  %26 = load i32, i32* %srcStride.addr, align 4, !dbg !5599
  %mul29 = mul nsw i32 6, %26, !dbg !5600
  %idxprom30 = sext i32 %mul29 to i64, !dbg !5601
  %27 = load i8*, i8** %src.addr, align 8, !dbg !5601
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 %idxprom30, !dbg !5601
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !5601
  %conv32 = zext i8 %28 to i32, !dbg !5601
  store i32 %conv32, i32* %src6, align 4, !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %src7, metadata !5603, metadata !113), !dbg !5604
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !5605
  %mul33 = mul nsw i32 7, %29, !dbg !5606
  %idxprom34 = sext i32 %mul33 to i64, !dbg !5607
  %30 = load i8*, i8** %src.addr, align 8, !dbg !5607
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %idxprom34, !dbg !5607
  %31 = load i8, i8* %arrayidx35, align 1, !dbg !5607
  %conv36 = zext i8 %31 to i32, !dbg !5607
  store i32 %conv36, i32* %src7, align 4, !dbg !5608
  call void @llvm.dbg.declare(metadata i32* %src8, metadata !5609, metadata !113), !dbg !5610
  %32 = load i32, i32* %srcStride.addr, align 4, !dbg !5611
  %mul37 = mul nsw i32 8, %32, !dbg !5612
  %idxprom38 = sext i32 %mul37 to i64, !dbg !5613
  %33 = load i8*, i8** %src.addr, align 8, !dbg !5613
  %arrayidx39 = getelementptr inbounds i8, i8* %33, i64 %idxprom38, !dbg !5613
  %34 = load i8, i8* %arrayidx39, align 1, !dbg !5613
  %conv40 = zext i8 %34 to i32, !dbg !5613
  store i32 %conv40, i32* %src8, align 4, !dbg !5614
  call void @llvm.dbg.declare(metadata i32* %src9, metadata !5615, metadata !113), !dbg !5616
  %35 = load i32, i32* %srcStride.addr, align 4, !dbg !5617
  %mul41 = mul nsw i32 9, %35, !dbg !5618
  %idxprom42 = sext i32 %mul41 to i64, !dbg !5619
  %36 = load i8*, i8** %src.addr, align 8, !dbg !5619
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 %idxprom42, !dbg !5619
  %37 = load i8, i8* %arrayidx43, align 1, !dbg !5619
  %conv44 = zext i8 %37 to i32, !dbg !5619
  store i32 %conv44, i32* %src9, align 4, !dbg !5620
  call void @llvm.dbg.declare(metadata i32* %src10, metadata !5621, metadata !113), !dbg !5622
  %38 = load i32, i32* %srcStride.addr, align 4, !dbg !5623
  %mul45 = mul nsw i32 10, %38, !dbg !5624
  %idxprom46 = sext i32 %mul45 to i64, !dbg !5625
  %39 = load i8*, i8** %src.addr, align 8, !dbg !5625
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 %idxprom46, !dbg !5625
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !5625
  %conv48 = zext i8 %40 to i32, !dbg !5625
  store i32 %conv48, i32* %src10, align 4, !dbg !5626
  %41 = load i32, i32* %srcB, align 4, !dbg !5627
  %42 = load i32, i32* %src3, align 4, !dbg !5628
  %add = add nsw i32 %41, %42, !dbg !5629
  %43 = load i32, i32* %srcA, align 4, !dbg !5630
  %44 = load i32, i32* %src2, align 4, !dbg !5631
  %add49 = add nsw i32 %43, %44, !dbg !5632
  %mul50 = mul nsw i32 5, %add49, !dbg !5633
  %sub = sub nsw i32 %add, %mul50, !dbg !5634
  %45 = load i32, i32* %src0, align 4, !dbg !5635
  %46 = load i32, i32* %C1.addr, align 4, !dbg !5636
  %mul51 = mul nsw i32 %45, %46, !dbg !5637
  %add52 = add nsw i32 %sub, %mul51, !dbg !5638
  %47 = load i32, i32* %src1, align 4, !dbg !5639
  %48 = load i32, i32* %C2.addr, align 4, !dbg !5640
  %mul53 = mul nsw i32 %47, %48, !dbg !5641
  %add54 = add nsw i32 %add52, %mul53, !dbg !5642
  %49 = load i32, i32* %SHIFT.addr, align 4, !dbg !5643
  %sub55 = sub nsw i32 %49, 1, !dbg !5644
  %shl = shl i32 1, %sub55, !dbg !5645
  %add56 = add nsw i32 %add54, %shl, !dbg !5646
  %50 = load i32, i32* %SHIFT.addr, align 4, !dbg !5647
  %shr = ashr i32 %add56, %50, !dbg !5648
  %idxprom57 = sext i32 %shr to i64, !dbg !5649
  %51 = load i8*, i8** %cm, align 8, !dbg !5649
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 %idxprom57, !dbg !5649
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !5649
  %53 = load i32, i32* %dstStride.addr, align 4, !dbg !5650
  %mul59 = mul nsw i32 0, %53, !dbg !5651
  %idxprom60 = sext i32 %mul59 to i64, !dbg !5652
  %54 = load i8*, i8** %dst.addr, align 8, !dbg !5652
  %arrayidx61 = getelementptr inbounds i8, i8* %54, i64 %idxprom60, !dbg !5652
  store i8 %52, i8* %arrayidx61, align 1, !dbg !5653
  %55 = load i32, i32* %srcA, align 4, !dbg !5654
  %56 = load i32, i32* %src4, align 4, !dbg !5655
  %add62 = add nsw i32 %55, %56, !dbg !5656
  %57 = load i32, i32* %src0, align 4, !dbg !5657
  %58 = load i32, i32* %src3, align 4, !dbg !5658
  %add63 = add nsw i32 %57, %58, !dbg !5659
  %mul64 = mul nsw i32 5, %add63, !dbg !5660
  %sub65 = sub nsw i32 %add62, %mul64, !dbg !5661
  %59 = load i32, i32* %src1, align 4, !dbg !5662
  %60 = load i32, i32* %C1.addr, align 4, !dbg !5663
  %mul66 = mul nsw i32 %59, %60, !dbg !5664
  %add67 = add nsw i32 %sub65, %mul66, !dbg !5665
  %61 = load i32, i32* %src2, align 4, !dbg !5666
  %62 = load i32, i32* %C2.addr, align 4, !dbg !5667
  %mul68 = mul nsw i32 %61, %62, !dbg !5668
  %add69 = add nsw i32 %add67, %mul68, !dbg !5669
  %63 = load i32, i32* %SHIFT.addr, align 4, !dbg !5670
  %sub70 = sub nsw i32 %63, 1, !dbg !5671
  %shl71 = shl i32 1, %sub70, !dbg !5672
  %add72 = add nsw i32 %add69, %shl71, !dbg !5673
  %64 = load i32, i32* %SHIFT.addr, align 4, !dbg !5674
  %shr73 = ashr i32 %add72, %64, !dbg !5675
  %idxprom74 = sext i32 %shr73 to i64, !dbg !5676
  %65 = load i8*, i8** %cm, align 8, !dbg !5676
  %arrayidx75 = getelementptr inbounds i8, i8* %65, i64 %idxprom74, !dbg !5676
  %66 = load i8, i8* %arrayidx75, align 1, !dbg !5676
  %67 = load i32, i32* %dstStride.addr, align 4, !dbg !5677
  %mul76 = mul nsw i32 1, %67, !dbg !5678
  %idxprom77 = sext i32 %mul76 to i64, !dbg !5679
  %68 = load i8*, i8** %dst.addr, align 8, !dbg !5679
  %arrayidx78 = getelementptr inbounds i8, i8* %68, i64 %idxprom77, !dbg !5679
  store i8 %66, i8* %arrayidx78, align 1, !dbg !5680
  %69 = load i32, i32* %src0, align 4, !dbg !5681
  %70 = load i32, i32* %src5, align 4, !dbg !5682
  %add79 = add nsw i32 %69, %70, !dbg !5683
  %71 = load i32, i32* %src1, align 4, !dbg !5684
  %72 = load i32, i32* %src4, align 4, !dbg !5685
  %add80 = add nsw i32 %71, %72, !dbg !5686
  %mul81 = mul nsw i32 5, %add80, !dbg !5687
  %sub82 = sub nsw i32 %add79, %mul81, !dbg !5688
  %73 = load i32, i32* %src2, align 4, !dbg !5689
  %74 = load i32, i32* %C1.addr, align 4, !dbg !5690
  %mul83 = mul nsw i32 %73, %74, !dbg !5691
  %add84 = add nsw i32 %sub82, %mul83, !dbg !5692
  %75 = load i32, i32* %src3, align 4, !dbg !5693
  %76 = load i32, i32* %C2.addr, align 4, !dbg !5694
  %mul85 = mul nsw i32 %75, %76, !dbg !5695
  %add86 = add nsw i32 %add84, %mul85, !dbg !5696
  %77 = load i32, i32* %SHIFT.addr, align 4, !dbg !5697
  %sub87 = sub nsw i32 %77, 1, !dbg !5698
  %shl88 = shl i32 1, %sub87, !dbg !5699
  %add89 = add nsw i32 %add86, %shl88, !dbg !5700
  %78 = load i32, i32* %SHIFT.addr, align 4, !dbg !5701
  %shr90 = ashr i32 %add89, %78, !dbg !5702
  %idxprom91 = sext i32 %shr90 to i64, !dbg !5703
  %79 = load i8*, i8** %cm, align 8, !dbg !5703
  %arrayidx92 = getelementptr inbounds i8, i8* %79, i64 %idxprom91, !dbg !5703
  %80 = load i8, i8* %arrayidx92, align 1, !dbg !5703
  %81 = load i32, i32* %dstStride.addr, align 4, !dbg !5704
  %mul93 = mul nsw i32 2, %81, !dbg !5705
  %idxprom94 = sext i32 %mul93 to i64, !dbg !5706
  %82 = load i8*, i8** %dst.addr, align 8, !dbg !5706
  %arrayidx95 = getelementptr inbounds i8, i8* %82, i64 %idxprom94, !dbg !5706
  store i8 %80, i8* %arrayidx95, align 1, !dbg !5707
  %83 = load i32, i32* %src1, align 4, !dbg !5708
  %84 = load i32, i32* %src6, align 4, !dbg !5709
  %add96 = add nsw i32 %83, %84, !dbg !5710
  %85 = load i32, i32* %src2, align 4, !dbg !5711
  %86 = load i32, i32* %src5, align 4, !dbg !5712
  %add97 = add nsw i32 %85, %86, !dbg !5713
  %mul98 = mul nsw i32 5, %add97, !dbg !5714
  %sub99 = sub nsw i32 %add96, %mul98, !dbg !5715
  %87 = load i32, i32* %src3, align 4, !dbg !5716
  %88 = load i32, i32* %C1.addr, align 4, !dbg !5717
  %mul100 = mul nsw i32 %87, %88, !dbg !5718
  %add101 = add nsw i32 %sub99, %mul100, !dbg !5719
  %89 = load i32, i32* %src4, align 4, !dbg !5720
  %90 = load i32, i32* %C2.addr, align 4, !dbg !5721
  %mul102 = mul nsw i32 %89, %90, !dbg !5722
  %add103 = add nsw i32 %add101, %mul102, !dbg !5723
  %91 = load i32, i32* %SHIFT.addr, align 4, !dbg !5724
  %sub104 = sub nsw i32 %91, 1, !dbg !5725
  %shl105 = shl i32 1, %sub104, !dbg !5726
  %add106 = add nsw i32 %add103, %shl105, !dbg !5727
  %92 = load i32, i32* %SHIFT.addr, align 4, !dbg !5728
  %shr107 = ashr i32 %add106, %92, !dbg !5729
  %idxprom108 = sext i32 %shr107 to i64, !dbg !5730
  %93 = load i8*, i8** %cm, align 8, !dbg !5730
  %arrayidx109 = getelementptr inbounds i8, i8* %93, i64 %idxprom108, !dbg !5730
  %94 = load i8, i8* %arrayidx109, align 1, !dbg !5730
  %95 = load i32, i32* %dstStride.addr, align 4, !dbg !5731
  %mul110 = mul nsw i32 3, %95, !dbg !5732
  %idxprom111 = sext i32 %mul110 to i64, !dbg !5733
  %96 = load i8*, i8** %dst.addr, align 8, !dbg !5733
  %arrayidx112 = getelementptr inbounds i8, i8* %96, i64 %idxprom111, !dbg !5733
  store i8 %94, i8* %arrayidx112, align 1, !dbg !5734
  %97 = load i32, i32* %src2, align 4, !dbg !5735
  %98 = load i32, i32* %src7, align 4, !dbg !5736
  %add113 = add nsw i32 %97, %98, !dbg !5737
  %99 = load i32, i32* %src3, align 4, !dbg !5738
  %100 = load i32, i32* %src6, align 4, !dbg !5739
  %add114 = add nsw i32 %99, %100, !dbg !5740
  %mul115 = mul nsw i32 5, %add114, !dbg !5741
  %sub116 = sub nsw i32 %add113, %mul115, !dbg !5742
  %101 = load i32, i32* %src4, align 4, !dbg !5743
  %102 = load i32, i32* %C1.addr, align 4, !dbg !5744
  %mul117 = mul nsw i32 %101, %102, !dbg !5745
  %add118 = add nsw i32 %sub116, %mul117, !dbg !5746
  %103 = load i32, i32* %src5, align 4, !dbg !5747
  %104 = load i32, i32* %C2.addr, align 4, !dbg !5748
  %mul119 = mul nsw i32 %103, %104, !dbg !5749
  %add120 = add nsw i32 %add118, %mul119, !dbg !5750
  %105 = load i32, i32* %SHIFT.addr, align 4, !dbg !5751
  %sub121 = sub nsw i32 %105, 1, !dbg !5752
  %shl122 = shl i32 1, %sub121, !dbg !5753
  %add123 = add nsw i32 %add120, %shl122, !dbg !5754
  %106 = load i32, i32* %SHIFT.addr, align 4, !dbg !5755
  %shr124 = ashr i32 %add123, %106, !dbg !5756
  %idxprom125 = sext i32 %shr124 to i64, !dbg !5757
  %107 = load i8*, i8** %cm, align 8, !dbg !5757
  %arrayidx126 = getelementptr inbounds i8, i8* %107, i64 %idxprom125, !dbg !5757
  %108 = load i8, i8* %arrayidx126, align 1, !dbg !5757
  %109 = load i32, i32* %dstStride.addr, align 4, !dbg !5758
  %mul127 = mul nsw i32 4, %109, !dbg !5759
  %idxprom128 = sext i32 %mul127 to i64, !dbg !5760
  %110 = load i8*, i8** %dst.addr, align 8, !dbg !5760
  %arrayidx129 = getelementptr inbounds i8, i8* %110, i64 %idxprom128, !dbg !5760
  store i8 %108, i8* %arrayidx129, align 1, !dbg !5761
  %111 = load i32, i32* %src3, align 4, !dbg !5762
  %112 = load i32, i32* %src8, align 4, !dbg !5763
  %add130 = add nsw i32 %111, %112, !dbg !5764
  %113 = load i32, i32* %src4, align 4, !dbg !5765
  %114 = load i32, i32* %src7, align 4, !dbg !5766
  %add131 = add nsw i32 %113, %114, !dbg !5767
  %mul132 = mul nsw i32 5, %add131, !dbg !5768
  %sub133 = sub nsw i32 %add130, %mul132, !dbg !5769
  %115 = load i32, i32* %src5, align 4, !dbg !5770
  %116 = load i32, i32* %C1.addr, align 4, !dbg !5771
  %mul134 = mul nsw i32 %115, %116, !dbg !5772
  %add135 = add nsw i32 %sub133, %mul134, !dbg !5773
  %117 = load i32, i32* %src6, align 4, !dbg !5774
  %118 = load i32, i32* %C2.addr, align 4, !dbg !5775
  %mul136 = mul nsw i32 %117, %118, !dbg !5776
  %add137 = add nsw i32 %add135, %mul136, !dbg !5777
  %119 = load i32, i32* %SHIFT.addr, align 4, !dbg !5778
  %sub138 = sub nsw i32 %119, 1, !dbg !5779
  %shl139 = shl i32 1, %sub138, !dbg !5780
  %add140 = add nsw i32 %add137, %shl139, !dbg !5781
  %120 = load i32, i32* %SHIFT.addr, align 4, !dbg !5782
  %shr141 = ashr i32 %add140, %120, !dbg !5783
  %idxprom142 = sext i32 %shr141 to i64, !dbg !5784
  %121 = load i8*, i8** %cm, align 8, !dbg !5784
  %arrayidx143 = getelementptr inbounds i8, i8* %121, i64 %idxprom142, !dbg !5784
  %122 = load i8, i8* %arrayidx143, align 1, !dbg !5784
  %123 = load i32, i32* %dstStride.addr, align 4, !dbg !5785
  %mul144 = mul nsw i32 5, %123, !dbg !5786
  %idxprom145 = sext i32 %mul144 to i64, !dbg !5787
  %124 = load i8*, i8** %dst.addr, align 8, !dbg !5787
  %arrayidx146 = getelementptr inbounds i8, i8* %124, i64 %idxprom145, !dbg !5787
  store i8 %122, i8* %arrayidx146, align 1, !dbg !5788
  %125 = load i32, i32* %src4, align 4, !dbg !5789
  %126 = load i32, i32* %src9, align 4, !dbg !5790
  %add147 = add nsw i32 %125, %126, !dbg !5791
  %127 = load i32, i32* %src5, align 4, !dbg !5792
  %128 = load i32, i32* %src8, align 4, !dbg !5793
  %add148 = add nsw i32 %127, %128, !dbg !5794
  %mul149 = mul nsw i32 5, %add148, !dbg !5795
  %sub150 = sub nsw i32 %add147, %mul149, !dbg !5796
  %129 = load i32, i32* %src6, align 4, !dbg !5797
  %130 = load i32, i32* %C1.addr, align 4, !dbg !5798
  %mul151 = mul nsw i32 %129, %130, !dbg !5799
  %add152 = add nsw i32 %sub150, %mul151, !dbg !5800
  %131 = load i32, i32* %src7, align 4, !dbg !5801
  %132 = load i32, i32* %C2.addr, align 4, !dbg !5802
  %mul153 = mul nsw i32 %131, %132, !dbg !5803
  %add154 = add nsw i32 %add152, %mul153, !dbg !5804
  %133 = load i32, i32* %SHIFT.addr, align 4, !dbg !5805
  %sub155 = sub nsw i32 %133, 1, !dbg !5806
  %shl156 = shl i32 1, %sub155, !dbg !5807
  %add157 = add nsw i32 %add154, %shl156, !dbg !5808
  %134 = load i32, i32* %SHIFT.addr, align 4, !dbg !5809
  %shr158 = ashr i32 %add157, %134, !dbg !5810
  %idxprom159 = sext i32 %shr158 to i64, !dbg !5811
  %135 = load i8*, i8** %cm, align 8, !dbg !5811
  %arrayidx160 = getelementptr inbounds i8, i8* %135, i64 %idxprom159, !dbg !5811
  %136 = load i8, i8* %arrayidx160, align 1, !dbg !5811
  %137 = load i32, i32* %dstStride.addr, align 4, !dbg !5812
  %mul161 = mul nsw i32 6, %137, !dbg !5813
  %idxprom162 = sext i32 %mul161 to i64, !dbg !5814
  %138 = load i8*, i8** %dst.addr, align 8, !dbg !5814
  %arrayidx163 = getelementptr inbounds i8, i8* %138, i64 %idxprom162, !dbg !5814
  store i8 %136, i8* %arrayidx163, align 1, !dbg !5815
  %139 = load i32, i32* %src5, align 4, !dbg !5816
  %140 = load i32, i32* %src10, align 4, !dbg !5817
  %add164 = add nsw i32 %139, %140, !dbg !5818
  %141 = load i32, i32* %src6, align 4, !dbg !5819
  %142 = load i32, i32* %src9, align 4, !dbg !5820
  %add165 = add nsw i32 %141, %142, !dbg !5821
  %mul166 = mul nsw i32 5, %add165, !dbg !5822
  %sub167 = sub nsw i32 %add164, %mul166, !dbg !5823
  %143 = load i32, i32* %src7, align 4, !dbg !5824
  %144 = load i32, i32* %C1.addr, align 4, !dbg !5825
  %mul168 = mul nsw i32 %143, %144, !dbg !5826
  %add169 = add nsw i32 %sub167, %mul168, !dbg !5827
  %145 = load i32, i32* %src8, align 4, !dbg !5828
  %146 = load i32, i32* %C2.addr, align 4, !dbg !5829
  %mul170 = mul nsw i32 %145, %146, !dbg !5830
  %add171 = add nsw i32 %add169, %mul170, !dbg !5831
  %147 = load i32, i32* %SHIFT.addr, align 4, !dbg !5832
  %sub172 = sub nsw i32 %147, 1, !dbg !5833
  %shl173 = shl i32 1, %sub172, !dbg !5834
  %add174 = add nsw i32 %add171, %shl173, !dbg !5835
  %148 = load i32, i32* %SHIFT.addr, align 4, !dbg !5836
  %shr175 = ashr i32 %add174, %148, !dbg !5837
  %idxprom176 = sext i32 %shr175 to i64, !dbg !5838
  %149 = load i8*, i8** %cm, align 8, !dbg !5838
  %arrayidx177 = getelementptr inbounds i8, i8* %149, i64 %idxprom176, !dbg !5838
  %150 = load i8, i8* %arrayidx177, align 1, !dbg !5838
  %151 = load i32, i32* %dstStride.addr, align 4, !dbg !5839
  %mul178 = mul nsw i32 7, %151, !dbg !5840
  %idxprom179 = sext i32 %mul178 to i64, !dbg !5841
  %152 = load i8*, i8** %dst.addr, align 8, !dbg !5841
  %arrayidx180 = getelementptr inbounds i8, i8* %152, i64 %idxprom179, !dbg !5841
  store i8 %150, i8* %arrayidx180, align 1, !dbg !5842
  %153 = load i8*, i8** %dst.addr, align 8, !dbg !5843
  %incdec.ptr = getelementptr inbounds i8, i8* %153, i32 1, !dbg !5843
  store i8* %incdec.ptr, i8** %dst.addr, align 8, !dbg !5843
  %154 = load i8*, i8** %src.addr, align 8, !dbg !5844
  %incdec.ptr181 = getelementptr inbounds i8, i8* %154, i32 1, !dbg !5844
  store i8* %incdec.ptr181, i8** %src.addr, align 8, !dbg !5844
  br label %for.inc, !dbg !5845

for.inc:                                          ; preds = %for.body
  %155 = load i32, i32* %i, align 4, !dbg !5846
  %inc = add nsw i32 %155, 1, !dbg !5846
  store i32 %inc, i32* %i, align 4, !dbg !5846
  br label %for.cond, !dbg !5848, !llvm.loop !5849

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5851
}

; Function Attrs: nounwind uwtable
define internal void @put_pixels16_xy2_8_c(i8* %block, i8* %pixels, i64 %line_size, i32 %h) #3 !dbg !5853 {
entry:
  %block.addr = alloca i8*, align 8
  %pixels.addr = alloca i8*, align 8
  %line_size.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  store i8* %block, i8** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %block.addr, metadata !5856, metadata !113), !dbg !5857
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !5858, metadata !113), !dbg !5859
  store i64 %line_size, i64* %line_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %line_size.addr, metadata !5860, metadata !113), !dbg !5861
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5862, metadata !113), !dbg !5863
  %0 = load i8*, i8** %block.addr, align 8, !dbg !5864
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !5865
  %2 = load i64, i64* %line_size.addr, align 8, !dbg !5866
  %3 = load i32, i32* %h.addr, align 4, !dbg !5867
  call void @put_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3), !dbg !5868
  %4 = load i8*, i8** %block.addr, align 8, !dbg !5869
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 8, !dbg !5870
  %5 = load i8*, i8** %pixels.addr, align 8, !dbg !5871
  %add.ptr1 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5872
  %6 = load i64, i64* %line_size.addr, align 8, !dbg !5873
  %7 = load i32, i32* %h.addr, align 4, !dbg !5874
  call void @put_pixels8_xy2_8_c(i8* %add.ptr, i8* %add.ptr1, i64 %6, i32 %7), !dbg !5875
  ret void, !dbg !5877
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_pixels8_xy2_8_c(i8* %block, i8* %pixels, i64 %line_size, i32 %h) #4 !dbg !5878 {
entry:
  %block.addr = alloca i8*, align 8
  %pixels.addr = alloca i8*, align 8
  %line_size.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %l0 = alloca i32, align 4
  %h0 = alloca i32, align 4
  %l113 = alloca i32, align 4
  %h1 = alloca i32, align 4
  %a19 = alloca i32, align 4
  %b21 = alloca i32, align 4
  store i8* %block, i8** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %block.addr, metadata !5879, metadata !113), !dbg !5880
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !5881, metadata !113), !dbg !5882
  store i64 %line_size, i64* %line_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %line_size.addr, metadata !5883, metadata !113), !dbg !5884
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5885, metadata !113), !dbg !5886
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5887, metadata !113), !dbg !5888
  store i32 0, i32* %j, align 4, !dbg !5889
  br label %for.cond, !dbg !5891

for.cond:                                         ; preds = %for.inc84, %entry
  %0 = load i32, i32* %j, align 4, !dbg !5892
  %cmp = icmp slt i32 %0, 2, !dbg !5895
  br i1 %cmp, label %for.body, label %for.end85, !dbg !5896

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5897, metadata !113), !dbg !5899
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5900, metadata !113), !dbg !5902
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !5903
  %2 = bitcast i8* %1 to %union.unaligned_32*, !dbg !5905
  %l = bitcast %union.unaligned_32* %2 to i32*, !dbg !5905
  %3 = load i32, i32* %l, align 1, !dbg !5905
  store i32 %3, i32* %a, align 4, !dbg !5906
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5907, metadata !113), !dbg !5908
  %4 = load i8*, i8** %pixels.addr, align 8, !dbg !5909
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5910
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !5911
  %l1 = bitcast %union.unaligned_32* %5 to i32*, !dbg !5911
  %6 = load i32, i32* %l1, align 1, !dbg !5911
  store i32 %6, i32* %b, align 4, !dbg !5912
  call void @llvm.dbg.declare(metadata i32* %l0, metadata !5913, metadata !113), !dbg !5914
  %7 = load i32, i32* %a, align 4, !dbg !5915
  %conv = zext i32 %7 to i64, !dbg !5915
  %and = and i64 %conv, 50529027, !dbg !5916
  %8 = load i32, i32* %b, align 4, !dbg !5917
  %conv2 = zext i32 %8 to i64, !dbg !5917
  %and3 = and i64 %conv2, 50529027, !dbg !5918
  %add = add i64 %and, %and3, !dbg !5919
  %add4 = add i64 %add, 33686018, !dbg !5920
  %conv5 = trunc i64 %add4 to i32, !dbg !5921
  store i32 %conv5, i32* %l0, align 4, !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %h0, metadata !5923, metadata !113), !dbg !5924
  %9 = load i32, i32* %a, align 4, !dbg !5925
  %conv6 = zext i32 %9 to i64, !dbg !5925
  %and7 = and i64 %conv6, 4244438268, !dbg !5926
  %shr = lshr i64 %and7, 2, !dbg !5927
  %10 = load i32, i32* %b, align 4, !dbg !5928
  %conv8 = zext i32 %10 to i64, !dbg !5928
  %and9 = and i64 %conv8, 4244438268, !dbg !5929
  %shr10 = lshr i64 %and9, 2, !dbg !5930
  %add11 = add i64 %shr, %shr10, !dbg !5931
  %conv12 = trunc i64 %add11 to i32, !dbg !5932
  store i32 %conv12, i32* %h0, align 4, !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %l113, metadata !5934, metadata !113), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %h1, metadata !5936, metadata !113), !dbg !5937
  %11 = load i64, i64* %line_size.addr, align 8, !dbg !5938
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !5939
  %add.ptr14 = getelementptr inbounds i8, i8* %12, i64 %11, !dbg !5939
  store i8* %add.ptr14, i8** %pixels.addr, align 8, !dbg !5939
  store i32 0, i32* %i, align 4, !dbg !5940
  br label %for.cond15, !dbg !5941

for.cond15:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !5942
  %14 = load i32, i32* %h.addr, align 4, !dbg !5946
  %cmp16 = icmp slt i32 %13, %14, !dbg !5947
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !5948

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !5949, metadata !113), !dbg !5951
  %15 = load i8*, i8** %pixels.addr, align 8, !dbg !5952
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !5954
  %l20 = bitcast %union.unaligned_32* %16 to i32*, !dbg !5954
  %17 = load i32, i32* %l20, align 1, !dbg !5954
  store i32 %17, i32* %a19, align 4, !dbg !5955
  call void @llvm.dbg.declare(metadata i32* %b21, metadata !5956, metadata !113), !dbg !5957
  %18 = load i8*, i8** %pixels.addr, align 8, !dbg !5958
  %add.ptr22 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5959
  %19 = bitcast i8* %add.ptr22 to %union.unaligned_32*, !dbg !5960
  %l23 = bitcast %union.unaligned_32* %19 to i32*, !dbg !5960
  %20 = load i32, i32* %l23, align 1, !dbg !5960
  store i32 %20, i32* %b21, align 4, !dbg !5961
  %21 = load i32, i32* %a19, align 4, !dbg !5962
  %conv24 = zext i32 %21 to i64, !dbg !5962
  %and25 = and i64 %conv24, 50529027, !dbg !5963
  %22 = load i32, i32* %b21, align 4, !dbg !5964
  %conv26 = zext i32 %22 to i64, !dbg !5964
  %and27 = and i64 %conv26, 50529027, !dbg !5965
  %add28 = add i64 %and25, %and27, !dbg !5966
  %conv29 = trunc i64 %add28 to i32, !dbg !5967
  store i32 %conv29, i32* %l113, align 4, !dbg !5968
  %23 = load i32, i32* %a19, align 4, !dbg !5969
  %conv30 = zext i32 %23 to i64, !dbg !5969
  %and31 = and i64 %conv30, 4244438268, !dbg !5970
  %shr32 = lshr i64 %and31, 2, !dbg !5971
  %24 = load i32, i32* %b21, align 4, !dbg !5972
  %conv33 = zext i32 %24 to i64, !dbg !5972
  %and34 = and i64 %conv33, 4244438268, !dbg !5973
  %shr35 = lshr i64 %and34, 2, !dbg !5974
  %add36 = add i64 %shr32, %shr35, !dbg !5975
  %conv37 = trunc i64 %add36 to i32, !dbg !5976
  store i32 %conv37, i32* %h1, align 4, !dbg !5977
  %25 = load i32, i32* %h0, align 4, !dbg !5978
  %26 = load i32, i32* %h1, align 4, !dbg !5979
  %add38 = add i32 %25, %26, !dbg !5980
  %conv39 = zext i32 %add38 to i64, !dbg !5978
  %27 = load i32, i32* %l0, align 4, !dbg !5981
  %28 = load i32, i32* %l113, align 4, !dbg !5982
  %add40 = add i32 %27, %28, !dbg !5983
  %shr41 = lshr i32 %add40, 2, !dbg !5984
  %conv42 = zext i32 %shr41 to i64, !dbg !5985
  %and43 = and i64 %conv42, 252645135, !dbg !5986
  %add44 = add i64 %conv39, %and43, !dbg !5987
  %conv45 = trunc i64 %add44 to i32, !dbg !5978
  %29 = load i8*, i8** %block.addr, align 8, !dbg !5988
  %30 = bitcast i8* %29 to i32*, !dbg !5989
  store i32 %conv45, i32* %30, align 4, !dbg !5990
  %31 = load i64, i64* %line_size.addr, align 8, !dbg !5991
  %32 = load i8*, i8** %pixels.addr, align 8, !dbg !5992
  %add.ptr46 = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !5992
  store i8* %add.ptr46, i8** %pixels.addr, align 8, !dbg !5992
  %33 = load i64, i64* %line_size.addr, align 8, !dbg !5993
  %34 = load i8*, i8** %block.addr, align 8, !dbg !5994
  %add.ptr47 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !5994
  store i8* %add.ptr47, i8** %block.addr, align 8, !dbg !5994
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !5995
  %36 = bitcast i8* %35 to %union.unaligned_32*, !dbg !5996
  %l48 = bitcast %union.unaligned_32* %36 to i32*, !dbg !5996
  %37 = load i32, i32* %l48, align 1, !dbg !5996
  store i32 %37, i32* %a19, align 4, !dbg !5997
  %38 = load i8*, i8** %pixels.addr, align 8, !dbg !5998
  %add.ptr49 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !5999
  %39 = bitcast i8* %add.ptr49 to %union.unaligned_32*, !dbg !6000
  %l50 = bitcast %union.unaligned_32* %39 to i32*, !dbg !6000
  %40 = load i32, i32* %l50, align 1, !dbg !6000
  store i32 %40, i32* %b21, align 4, !dbg !6001
  %41 = load i32, i32* %a19, align 4, !dbg !6002
  %conv51 = zext i32 %41 to i64, !dbg !6002
  %and52 = and i64 %conv51, 50529027, !dbg !6003
  %42 = load i32, i32* %b21, align 4, !dbg !6004
  %conv53 = zext i32 %42 to i64, !dbg !6004
  %and54 = and i64 %conv53, 50529027, !dbg !6005
  %add55 = add i64 %and52, %and54, !dbg !6006
  %add56 = add i64 %add55, 33686018, !dbg !6007
  %conv57 = trunc i64 %add56 to i32, !dbg !6008
  store i32 %conv57, i32* %l0, align 4, !dbg !6009
  %43 = load i32, i32* %a19, align 4, !dbg !6010
  %conv58 = zext i32 %43 to i64, !dbg !6010
  %and59 = and i64 %conv58, 4244438268, !dbg !6011
  %shr60 = lshr i64 %and59, 2, !dbg !6012
  %44 = load i32, i32* %b21, align 4, !dbg !6013
  %conv61 = zext i32 %44 to i64, !dbg !6013
  %and62 = and i64 %conv61, 4244438268, !dbg !6014
  %shr63 = lshr i64 %and62, 2, !dbg !6015
  %add64 = add i64 %shr60, %shr63, !dbg !6016
  %conv65 = trunc i64 %add64 to i32, !dbg !6017
  store i32 %conv65, i32* %h0, align 4, !dbg !6018
  %45 = load i32, i32* %h0, align 4, !dbg !6019
  %46 = load i32, i32* %h1, align 4, !dbg !6020
  %add66 = add i32 %45, %46, !dbg !6021
  %conv67 = zext i32 %add66 to i64, !dbg !6019
  %47 = load i32, i32* %l0, align 4, !dbg !6022
  %48 = load i32, i32* %l113, align 4, !dbg !6023
  %add68 = add i32 %47, %48, !dbg !6024
  %shr69 = lshr i32 %add68, 2, !dbg !6025
  %conv70 = zext i32 %shr69 to i64, !dbg !6026
  %and71 = and i64 %conv70, 252645135, !dbg !6027
  %add72 = add i64 %conv67, %and71, !dbg !6028
  %conv73 = trunc i64 %add72 to i32, !dbg !6019
  %49 = load i8*, i8** %block.addr, align 8, !dbg !6029
  %50 = bitcast i8* %49 to i32*, !dbg !6030
  store i32 %conv73, i32* %50, align 4, !dbg !6031
  %51 = load i64, i64* %line_size.addr, align 8, !dbg !6032
  %52 = load i8*, i8** %pixels.addr, align 8, !dbg !6033
  %add.ptr74 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !6033
  store i8* %add.ptr74, i8** %pixels.addr, align 8, !dbg !6033
  %53 = load i64, i64* %line_size.addr, align 8, !dbg !6034
  %54 = load i8*, i8** %block.addr, align 8, !dbg !6035
  %add.ptr75 = getelementptr inbounds i8, i8* %54, i64 %53, !dbg !6035
  store i8* %add.ptr75, i8** %block.addr, align 8, !dbg !6035
  br label %for.inc, !dbg !6036

for.inc:                                          ; preds = %for.body18
  %55 = load i32, i32* %i, align 4, !dbg !6037
  %add76 = add nsw i32 %55, 2, !dbg !6037
  store i32 %add76, i32* %i, align 4, !dbg !6037
  br label %for.cond15, !dbg !6039, !llvm.loop !6040

for.end:                                          ; preds = %for.cond15
  %56 = load i64, i64* %line_size.addr, align 8, !dbg !6042
  %57 = load i32, i32* %h.addr, align 4, !dbg !6044
  %add77 = add nsw i32 %57, 1, !dbg !6045
  %conv78 = sext i32 %add77 to i64, !dbg !6046
  %mul = mul nsw i64 %56, %conv78, !dbg !6047
  %sub = sub nsw i64 4, %mul, !dbg !6048
  %58 = load i8*, i8** %pixels.addr, align 8, !dbg !6049
  %add.ptr79 = getelementptr inbounds i8, i8* %58, i64 %sub, !dbg !6049
  store i8* %add.ptr79, i8** %pixels.addr, align 8, !dbg !6049
  %59 = load i64, i64* %line_size.addr, align 8, !dbg !6050
  %60 = load i32, i32* %h.addr, align 4, !dbg !6051
  %conv80 = sext i32 %60 to i64, !dbg !6051
  %mul81 = mul nsw i64 %59, %conv80, !dbg !6052
  %sub82 = sub nsw i64 4, %mul81, !dbg !6053
  %61 = load i8*, i8** %block.addr, align 8, !dbg !6054
  %add.ptr83 = getelementptr inbounds i8, i8* %61, i64 %sub82, !dbg !6054
  store i8* %add.ptr83, i8** %block.addr, align 8, !dbg !6054
  br label %for.inc84, !dbg !6055

for.inc84:                                        ; preds = %for.end
  %62 = load i32, i32* %j, align 4, !dbg !6056
  %inc = add nsw i32 %62, 1, !dbg !6056
  store i32 %inc, i32* %j, align 4, !dbg !6056
  br label %for.cond, !dbg !6058, !llvm.loop !6059

for.end85:                                        ; preds = %for.cond
  ret void, !dbg !6061
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_h_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %h, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !6063 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6064, metadata !113), !dbg !6065
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6066, metadata !113), !dbg !6067
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !6068, metadata !113), !dbg !6069
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !6070, metadata !113), !dbg !6071
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6072, metadata !113), !dbg !6073
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !6074, metadata !113), !dbg !6075
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !6076, metadata !113), !dbg !6077
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !6078, metadata !113), !dbg !6079
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !6080
  %1 = load i8*, i8** %src.addr, align 8, !dbg !6081
  %2 = load i32, i32* %dstStride.addr, align 4, !dbg !6082
  %3 = load i32, i32* %srcStride.addr, align 4, !dbg !6083
  %4 = load i32, i32* %C1.addr, align 4, !dbg !6084
  %5 = load i32, i32* %C2.addr, align 4, !dbg !6085
  %6 = load i32, i32* %SHIFT.addr, align 4, !dbg !6086
  call void @avg_rv40_qpel8_h_lowpass(i8* %0, i8* %1, i32 %2, i32 %3, i32 8, i32 %4, i32 %5, i32 %6), !dbg !6087
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !6088
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8, !dbg !6089
  %8 = load i8*, i8** %src.addr, align 8, !dbg !6090
  %add.ptr1 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !6091
  %9 = load i32, i32* %dstStride.addr, align 4, !dbg !6092
  %10 = load i32, i32* %srcStride.addr, align 4, !dbg !6093
  %11 = load i32, i32* %C1.addr, align 4, !dbg !6094
  %12 = load i32, i32* %C2.addr, align 4, !dbg !6095
  %13 = load i32, i32* %SHIFT.addr, align 4, !dbg !6096
  call void @avg_rv40_qpel8_h_lowpass(i8* %add.ptr, i8* %add.ptr1, i32 %9, i32 %10, i32 8, i32 %11, i32 %12, i32 %13), !dbg !6097
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !6099
  %mul = mul nsw i32 8, %14, !dbg !6100
  %15 = load i8*, i8** %src.addr, align 8, !dbg !6101
  %idx.ext = sext i32 %mul to i64, !dbg !6101
  %add.ptr2 = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !6101
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !6101
  %16 = load i32, i32* %dstStride.addr, align 4, !dbg !6102
  %mul3 = mul nsw i32 8, %16, !dbg !6103
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !6104
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !6104
  %add.ptr5 = getelementptr inbounds i8, i8* %17, i64 %idx.ext4, !dbg !6104
  store i8* %add.ptr5, i8** %dst.addr, align 8, !dbg !6104
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !6105
  %19 = load i8*, i8** %src.addr, align 8, !dbg !6106
  %20 = load i32, i32* %dstStride.addr, align 4, !dbg !6107
  %21 = load i32, i32* %srcStride.addr, align 4, !dbg !6108
  %22 = load i32, i32* %h.addr, align 4, !dbg !6109
  %sub = sub nsw i32 %22, 8, !dbg !6110
  %23 = load i32, i32* %C1.addr, align 4, !dbg !6111
  %24 = load i32, i32* %C2.addr, align 4, !dbg !6112
  %25 = load i32, i32* %SHIFT.addr, align 4, !dbg !6113
  call void @avg_rv40_qpel8_h_lowpass(i8* %18, i8* %19, i32 %20, i32 %21, i32 %sub, i32 %23, i32 %24, i32 %25), !dbg !6114
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !6116
  %add.ptr6 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !6117
  %27 = load i8*, i8** %src.addr, align 8, !dbg !6118
  %add.ptr7 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !6119
  %28 = load i32, i32* %dstStride.addr, align 4, !dbg !6120
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !6121
  %30 = load i32, i32* %h.addr, align 4, !dbg !6122
  %sub8 = sub nsw i32 %30, 8, !dbg !6123
  %31 = load i32, i32* %C1.addr, align 4, !dbg !6124
  %32 = load i32, i32* %C2.addr, align 4, !dbg !6125
  %33 = load i32, i32* %SHIFT.addr, align 4, !dbg !6126
  call void @avg_rv40_qpel8_h_lowpass(i8* %add.ptr6, i8* %add.ptr7, i32 %28, i32 %29, i32 %sub8, i32 %31, i32 %32, i32 %33), !dbg !6127
  ret void, !dbg !6129
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_h_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %h, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !6130 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  %cm = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6131, metadata !113), !dbg !6132
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6133, metadata !113), !dbg !6134
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !6135, metadata !113), !dbg !6136
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !6137, metadata !113), !dbg !6138
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6139, metadata !113), !dbg !6140
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !6141, metadata !113), !dbg !6142
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !6143, metadata !113), !dbg !6144
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !6145, metadata !113), !dbg !6146
  call void @llvm.dbg.declare(metadata i8** %cm, metadata !6147, metadata !113), !dbg !6148
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm, align 8, !dbg !6148
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6149, metadata !113), !dbg !6150
  store i32 0, i32* %i, align 4, !dbg !6151
  br label %for.cond, !dbg !6153

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6154
  %1 = load i32, i32* %h.addr, align 4, !dbg !6157
  %cmp = icmp slt i32 %0, %1, !dbg !6158
  br i1 %cmp, label %for.body, label %for.end, !dbg !6159

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %dst.addr, align 8, !dbg !6160
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6160
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6160
  %conv = zext i8 %3 to i32, !dbg !6163
  %4 = load i8*, i8** %src.addr, align 8, !dbg !6164
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 -2, !dbg !6164
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !6164
  %conv2 = zext i8 %5 to i32, !dbg !6164
  %6 = load i8*, i8** %src.addr, align 8, !dbg !6165
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !6165
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !6165
  %conv4 = zext i8 %7 to i32, !dbg !6165
  %add = add nsw i32 %conv2, %conv4, !dbg !6166
  %8 = load i8*, i8** %src.addr, align 8, !dbg !6167
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 -1, !dbg !6167
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !6167
  %conv6 = zext i8 %9 to i32, !dbg !6167
  %10 = load i8*, i8** %src.addr, align 8, !dbg !6168
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !6168
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !6168
  %conv8 = zext i8 %11 to i32, !dbg !6168
  %add9 = add nsw i32 %conv6, %conv8, !dbg !6169
  %mul = mul nsw i32 5, %add9, !dbg !6170
  %sub = sub nsw i32 %add, %mul, !dbg !6171
  %12 = load i8*, i8** %src.addr, align 8, !dbg !6172
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !6172
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !6172
  %conv11 = zext i8 %13 to i32, !dbg !6172
  %14 = load i32, i32* %C1.addr, align 4, !dbg !6173
  %mul12 = mul nsw i32 %conv11, %14, !dbg !6174
  %add13 = add nsw i32 %sub, %mul12, !dbg !6175
  %15 = load i8*, i8** %src.addr, align 8, !dbg !6176
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !6176
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !6176
  %conv15 = zext i8 %16 to i32, !dbg !6176
  %17 = load i32, i32* %C2.addr, align 4, !dbg !6177
  %mul16 = mul nsw i32 %conv15, %17, !dbg !6178
  %add17 = add nsw i32 %add13, %mul16, !dbg !6179
  %18 = load i32, i32* %SHIFT.addr, align 4, !dbg !6180
  %sub18 = sub nsw i32 %18, 1, !dbg !6181
  %shl = shl i32 1, %sub18, !dbg !6182
  %add19 = add nsw i32 %add17, %shl, !dbg !6183
  %19 = load i32, i32* %SHIFT.addr, align 4, !dbg !6184
  %shr = ashr i32 %add19, %19, !dbg !6185
  %idxprom = sext i32 %shr to i64, !dbg !6186
  %20 = load i8*, i8** %cm, align 8, !dbg !6186
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 %idxprom, !dbg !6186
  %21 = load i8, i8* %arrayidx20, align 1, !dbg !6186
  %conv21 = zext i8 %21 to i32, !dbg !6186
  %add22 = add nsw i32 %conv, %conv21, !dbg !6187
  %add23 = add nsw i32 %add22, 1, !dbg !6188
  %shr24 = ashr i32 %add23, 1, !dbg !6189
  %conv25 = trunc i32 %shr24 to i8, !dbg !6190
  %22 = load i8*, i8** %dst.addr, align 8, !dbg !6191
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !6191
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !6192
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !6193
  %arrayidx27 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !6193
  %24 = load i8, i8* %arrayidx27, align 1, !dbg !6193
  %conv28 = zext i8 %24 to i32, !dbg !6194
  %25 = load i8*, i8** %src.addr, align 8, !dbg !6195
  %arrayidx29 = getelementptr inbounds i8, i8* %25, i64 -1, !dbg !6195
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !6195
  %conv30 = zext i8 %26 to i32, !dbg !6195
  %27 = load i8*, i8** %src.addr, align 8, !dbg !6196
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 4, !dbg !6196
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !6196
  %conv32 = zext i8 %28 to i32, !dbg !6196
  %add33 = add nsw i32 %conv30, %conv32, !dbg !6197
  %29 = load i8*, i8** %src.addr, align 8, !dbg !6198
  %arrayidx34 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !6198
  %30 = load i8, i8* %arrayidx34, align 1, !dbg !6198
  %conv35 = zext i8 %30 to i32, !dbg !6198
  %31 = load i8*, i8** %src.addr, align 8, !dbg !6199
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !6199
  %32 = load i8, i8* %arrayidx36, align 1, !dbg !6199
  %conv37 = zext i8 %32 to i32, !dbg !6199
  %add38 = add nsw i32 %conv35, %conv37, !dbg !6200
  %mul39 = mul nsw i32 5, %add38, !dbg !6201
  %sub40 = sub nsw i32 %add33, %mul39, !dbg !6202
  %33 = load i8*, i8** %src.addr, align 8, !dbg !6203
  %arrayidx41 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !6203
  %34 = load i8, i8* %arrayidx41, align 1, !dbg !6203
  %conv42 = zext i8 %34 to i32, !dbg !6203
  %35 = load i32, i32* %C1.addr, align 4, !dbg !6204
  %mul43 = mul nsw i32 %conv42, %35, !dbg !6205
  %add44 = add nsw i32 %sub40, %mul43, !dbg !6206
  %36 = load i8*, i8** %src.addr, align 8, !dbg !6207
  %arrayidx45 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !6207
  %37 = load i8, i8* %arrayidx45, align 1, !dbg !6207
  %conv46 = zext i8 %37 to i32, !dbg !6207
  %38 = load i32, i32* %C2.addr, align 4, !dbg !6208
  %mul47 = mul nsw i32 %conv46, %38, !dbg !6209
  %add48 = add nsw i32 %add44, %mul47, !dbg !6210
  %39 = load i32, i32* %SHIFT.addr, align 4, !dbg !6211
  %sub49 = sub nsw i32 %39, 1, !dbg !6212
  %shl50 = shl i32 1, %sub49, !dbg !6213
  %add51 = add nsw i32 %add48, %shl50, !dbg !6214
  %40 = load i32, i32* %SHIFT.addr, align 4, !dbg !6215
  %shr52 = ashr i32 %add51, %40, !dbg !6216
  %idxprom53 = sext i32 %shr52 to i64, !dbg !6217
  %41 = load i8*, i8** %cm, align 8, !dbg !6217
  %arrayidx54 = getelementptr inbounds i8, i8* %41, i64 %idxprom53, !dbg !6217
  %42 = load i8, i8* %arrayidx54, align 1, !dbg !6217
  %conv55 = zext i8 %42 to i32, !dbg !6217
  %add56 = add nsw i32 %conv28, %conv55, !dbg !6218
  %add57 = add nsw i32 %add56, 1, !dbg !6219
  %shr58 = ashr i32 %add57, 1, !dbg !6220
  %conv59 = trunc i32 %shr58 to i8, !dbg !6221
  %43 = load i8*, i8** %dst.addr, align 8, !dbg !6222
  %arrayidx60 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !6222
  store i8 %conv59, i8* %arrayidx60, align 1, !dbg !6223
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !6224
  %arrayidx61 = getelementptr inbounds i8, i8* %44, i64 2, !dbg !6224
  %45 = load i8, i8* %arrayidx61, align 1, !dbg !6224
  %conv62 = zext i8 %45 to i32, !dbg !6225
  %46 = load i8*, i8** %src.addr, align 8, !dbg !6226
  %arrayidx63 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !6226
  %47 = load i8, i8* %arrayidx63, align 1, !dbg !6226
  %conv64 = zext i8 %47 to i32, !dbg !6226
  %48 = load i8*, i8** %src.addr, align 8, !dbg !6227
  %arrayidx65 = getelementptr inbounds i8, i8* %48, i64 5, !dbg !6227
  %49 = load i8, i8* %arrayidx65, align 1, !dbg !6227
  %conv66 = zext i8 %49 to i32, !dbg !6227
  %add67 = add nsw i32 %conv64, %conv66, !dbg !6228
  %50 = load i8*, i8** %src.addr, align 8, !dbg !6229
  %arrayidx68 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !6229
  %51 = load i8, i8* %arrayidx68, align 1, !dbg !6229
  %conv69 = zext i8 %51 to i32, !dbg !6229
  %52 = load i8*, i8** %src.addr, align 8, !dbg !6230
  %arrayidx70 = getelementptr inbounds i8, i8* %52, i64 4, !dbg !6230
  %53 = load i8, i8* %arrayidx70, align 1, !dbg !6230
  %conv71 = zext i8 %53 to i32, !dbg !6230
  %add72 = add nsw i32 %conv69, %conv71, !dbg !6231
  %mul73 = mul nsw i32 5, %add72, !dbg !6232
  %sub74 = sub nsw i32 %add67, %mul73, !dbg !6233
  %54 = load i8*, i8** %src.addr, align 8, !dbg !6234
  %arrayidx75 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !6234
  %55 = load i8, i8* %arrayidx75, align 1, !dbg !6234
  %conv76 = zext i8 %55 to i32, !dbg !6234
  %56 = load i32, i32* %C1.addr, align 4, !dbg !6235
  %mul77 = mul nsw i32 %conv76, %56, !dbg !6236
  %add78 = add nsw i32 %sub74, %mul77, !dbg !6237
  %57 = load i8*, i8** %src.addr, align 8, !dbg !6238
  %arrayidx79 = getelementptr inbounds i8, i8* %57, i64 3, !dbg !6238
  %58 = load i8, i8* %arrayidx79, align 1, !dbg !6238
  %conv80 = zext i8 %58 to i32, !dbg !6238
  %59 = load i32, i32* %C2.addr, align 4, !dbg !6239
  %mul81 = mul nsw i32 %conv80, %59, !dbg !6240
  %add82 = add nsw i32 %add78, %mul81, !dbg !6241
  %60 = load i32, i32* %SHIFT.addr, align 4, !dbg !6242
  %sub83 = sub nsw i32 %60, 1, !dbg !6243
  %shl84 = shl i32 1, %sub83, !dbg !6244
  %add85 = add nsw i32 %add82, %shl84, !dbg !6245
  %61 = load i32, i32* %SHIFT.addr, align 4, !dbg !6246
  %shr86 = ashr i32 %add85, %61, !dbg !6247
  %idxprom87 = sext i32 %shr86 to i64, !dbg !6248
  %62 = load i8*, i8** %cm, align 8, !dbg !6248
  %arrayidx88 = getelementptr inbounds i8, i8* %62, i64 %idxprom87, !dbg !6248
  %63 = load i8, i8* %arrayidx88, align 1, !dbg !6248
  %conv89 = zext i8 %63 to i32, !dbg !6248
  %add90 = add nsw i32 %conv62, %conv89, !dbg !6249
  %add91 = add nsw i32 %add90, 1, !dbg !6250
  %shr92 = ashr i32 %add91, 1, !dbg !6251
  %conv93 = trunc i32 %shr92 to i8, !dbg !6252
  %64 = load i8*, i8** %dst.addr, align 8, !dbg !6253
  %arrayidx94 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !6253
  store i8 %conv93, i8* %arrayidx94, align 1, !dbg !6254
  %65 = load i8*, i8** %dst.addr, align 8, !dbg !6255
  %arrayidx95 = getelementptr inbounds i8, i8* %65, i64 3, !dbg !6255
  %66 = load i8, i8* %arrayidx95, align 1, !dbg !6255
  %conv96 = zext i8 %66 to i32, !dbg !6256
  %67 = load i8*, i8** %src.addr, align 8, !dbg !6257
  %arrayidx97 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !6257
  %68 = load i8, i8* %arrayidx97, align 1, !dbg !6257
  %conv98 = zext i8 %68 to i32, !dbg !6257
  %69 = load i8*, i8** %src.addr, align 8, !dbg !6258
  %arrayidx99 = getelementptr inbounds i8, i8* %69, i64 6, !dbg !6258
  %70 = load i8, i8* %arrayidx99, align 1, !dbg !6258
  %conv100 = zext i8 %70 to i32, !dbg !6258
  %add101 = add nsw i32 %conv98, %conv100, !dbg !6259
  %71 = load i8*, i8** %src.addr, align 8, !dbg !6260
  %arrayidx102 = getelementptr inbounds i8, i8* %71, i64 2, !dbg !6260
  %72 = load i8, i8* %arrayidx102, align 1, !dbg !6260
  %conv103 = zext i8 %72 to i32, !dbg !6260
  %73 = load i8*, i8** %src.addr, align 8, !dbg !6261
  %arrayidx104 = getelementptr inbounds i8, i8* %73, i64 5, !dbg !6261
  %74 = load i8, i8* %arrayidx104, align 1, !dbg !6261
  %conv105 = zext i8 %74 to i32, !dbg !6261
  %add106 = add nsw i32 %conv103, %conv105, !dbg !6262
  %mul107 = mul nsw i32 5, %add106, !dbg !6263
  %sub108 = sub nsw i32 %add101, %mul107, !dbg !6264
  %75 = load i8*, i8** %src.addr, align 8, !dbg !6265
  %arrayidx109 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !6265
  %76 = load i8, i8* %arrayidx109, align 1, !dbg !6265
  %conv110 = zext i8 %76 to i32, !dbg !6265
  %77 = load i32, i32* %C1.addr, align 4, !dbg !6266
  %mul111 = mul nsw i32 %conv110, %77, !dbg !6267
  %add112 = add nsw i32 %sub108, %mul111, !dbg !6268
  %78 = load i8*, i8** %src.addr, align 8, !dbg !6269
  %arrayidx113 = getelementptr inbounds i8, i8* %78, i64 4, !dbg !6269
  %79 = load i8, i8* %arrayidx113, align 1, !dbg !6269
  %conv114 = zext i8 %79 to i32, !dbg !6269
  %80 = load i32, i32* %C2.addr, align 4, !dbg !6270
  %mul115 = mul nsw i32 %conv114, %80, !dbg !6271
  %add116 = add nsw i32 %add112, %mul115, !dbg !6272
  %81 = load i32, i32* %SHIFT.addr, align 4, !dbg !6273
  %sub117 = sub nsw i32 %81, 1, !dbg !6274
  %shl118 = shl i32 1, %sub117, !dbg !6275
  %add119 = add nsw i32 %add116, %shl118, !dbg !6276
  %82 = load i32, i32* %SHIFT.addr, align 4, !dbg !6277
  %shr120 = ashr i32 %add119, %82, !dbg !6278
  %idxprom121 = sext i32 %shr120 to i64, !dbg !6279
  %83 = load i8*, i8** %cm, align 8, !dbg !6279
  %arrayidx122 = getelementptr inbounds i8, i8* %83, i64 %idxprom121, !dbg !6279
  %84 = load i8, i8* %arrayidx122, align 1, !dbg !6279
  %conv123 = zext i8 %84 to i32, !dbg !6279
  %add124 = add nsw i32 %conv96, %conv123, !dbg !6280
  %add125 = add nsw i32 %add124, 1, !dbg !6281
  %shr126 = ashr i32 %add125, 1, !dbg !6282
  %conv127 = trunc i32 %shr126 to i8, !dbg !6283
  %85 = load i8*, i8** %dst.addr, align 8, !dbg !6284
  %arrayidx128 = getelementptr inbounds i8, i8* %85, i64 3, !dbg !6284
  store i8 %conv127, i8* %arrayidx128, align 1, !dbg !6285
  %86 = load i8*, i8** %dst.addr, align 8, !dbg !6286
  %arrayidx129 = getelementptr inbounds i8, i8* %86, i64 4, !dbg !6286
  %87 = load i8, i8* %arrayidx129, align 1, !dbg !6286
  %conv130 = zext i8 %87 to i32, !dbg !6287
  %88 = load i8*, i8** %src.addr, align 8, !dbg !6288
  %arrayidx131 = getelementptr inbounds i8, i8* %88, i64 2, !dbg !6288
  %89 = load i8, i8* %arrayidx131, align 1, !dbg !6288
  %conv132 = zext i8 %89 to i32, !dbg !6288
  %90 = load i8*, i8** %src.addr, align 8, !dbg !6289
  %arrayidx133 = getelementptr inbounds i8, i8* %90, i64 7, !dbg !6289
  %91 = load i8, i8* %arrayidx133, align 1, !dbg !6289
  %conv134 = zext i8 %91 to i32, !dbg !6289
  %add135 = add nsw i32 %conv132, %conv134, !dbg !6290
  %92 = load i8*, i8** %src.addr, align 8, !dbg !6291
  %arrayidx136 = getelementptr inbounds i8, i8* %92, i64 3, !dbg !6291
  %93 = load i8, i8* %arrayidx136, align 1, !dbg !6291
  %conv137 = zext i8 %93 to i32, !dbg !6291
  %94 = load i8*, i8** %src.addr, align 8, !dbg !6292
  %arrayidx138 = getelementptr inbounds i8, i8* %94, i64 6, !dbg !6292
  %95 = load i8, i8* %arrayidx138, align 1, !dbg !6292
  %conv139 = zext i8 %95 to i32, !dbg !6292
  %add140 = add nsw i32 %conv137, %conv139, !dbg !6293
  %mul141 = mul nsw i32 5, %add140, !dbg !6294
  %sub142 = sub nsw i32 %add135, %mul141, !dbg !6295
  %96 = load i8*, i8** %src.addr, align 8, !dbg !6296
  %arrayidx143 = getelementptr inbounds i8, i8* %96, i64 4, !dbg !6296
  %97 = load i8, i8* %arrayidx143, align 1, !dbg !6296
  %conv144 = zext i8 %97 to i32, !dbg !6296
  %98 = load i32, i32* %C1.addr, align 4, !dbg !6297
  %mul145 = mul nsw i32 %conv144, %98, !dbg !6298
  %add146 = add nsw i32 %sub142, %mul145, !dbg !6299
  %99 = load i8*, i8** %src.addr, align 8, !dbg !6300
  %arrayidx147 = getelementptr inbounds i8, i8* %99, i64 5, !dbg !6300
  %100 = load i8, i8* %arrayidx147, align 1, !dbg !6300
  %conv148 = zext i8 %100 to i32, !dbg !6300
  %101 = load i32, i32* %C2.addr, align 4, !dbg !6301
  %mul149 = mul nsw i32 %conv148, %101, !dbg !6302
  %add150 = add nsw i32 %add146, %mul149, !dbg !6303
  %102 = load i32, i32* %SHIFT.addr, align 4, !dbg !6304
  %sub151 = sub nsw i32 %102, 1, !dbg !6305
  %shl152 = shl i32 1, %sub151, !dbg !6306
  %add153 = add nsw i32 %add150, %shl152, !dbg !6307
  %103 = load i32, i32* %SHIFT.addr, align 4, !dbg !6308
  %shr154 = ashr i32 %add153, %103, !dbg !6309
  %idxprom155 = sext i32 %shr154 to i64, !dbg !6310
  %104 = load i8*, i8** %cm, align 8, !dbg !6310
  %arrayidx156 = getelementptr inbounds i8, i8* %104, i64 %idxprom155, !dbg !6310
  %105 = load i8, i8* %arrayidx156, align 1, !dbg !6310
  %conv157 = zext i8 %105 to i32, !dbg !6310
  %add158 = add nsw i32 %conv130, %conv157, !dbg !6311
  %add159 = add nsw i32 %add158, 1, !dbg !6312
  %shr160 = ashr i32 %add159, 1, !dbg !6313
  %conv161 = trunc i32 %shr160 to i8, !dbg !6314
  %106 = load i8*, i8** %dst.addr, align 8, !dbg !6315
  %arrayidx162 = getelementptr inbounds i8, i8* %106, i64 4, !dbg !6315
  store i8 %conv161, i8* %arrayidx162, align 1, !dbg !6316
  %107 = load i8*, i8** %dst.addr, align 8, !dbg !6317
  %arrayidx163 = getelementptr inbounds i8, i8* %107, i64 5, !dbg !6317
  %108 = load i8, i8* %arrayidx163, align 1, !dbg !6317
  %conv164 = zext i8 %108 to i32, !dbg !6318
  %109 = load i8*, i8** %src.addr, align 8, !dbg !6319
  %arrayidx165 = getelementptr inbounds i8, i8* %109, i64 3, !dbg !6319
  %110 = load i8, i8* %arrayidx165, align 1, !dbg !6319
  %conv166 = zext i8 %110 to i32, !dbg !6319
  %111 = load i8*, i8** %src.addr, align 8, !dbg !6320
  %arrayidx167 = getelementptr inbounds i8, i8* %111, i64 8, !dbg !6320
  %112 = load i8, i8* %arrayidx167, align 1, !dbg !6320
  %conv168 = zext i8 %112 to i32, !dbg !6320
  %add169 = add nsw i32 %conv166, %conv168, !dbg !6321
  %113 = load i8*, i8** %src.addr, align 8, !dbg !6322
  %arrayidx170 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !6322
  %114 = load i8, i8* %arrayidx170, align 1, !dbg !6322
  %conv171 = zext i8 %114 to i32, !dbg !6322
  %115 = load i8*, i8** %src.addr, align 8, !dbg !6323
  %arrayidx172 = getelementptr inbounds i8, i8* %115, i64 7, !dbg !6323
  %116 = load i8, i8* %arrayidx172, align 1, !dbg !6323
  %conv173 = zext i8 %116 to i32, !dbg !6323
  %add174 = add nsw i32 %conv171, %conv173, !dbg !6324
  %mul175 = mul nsw i32 5, %add174, !dbg !6325
  %sub176 = sub nsw i32 %add169, %mul175, !dbg !6326
  %117 = load i8*, i8** %src.addr, align 8, !dbg !6327
  %arrayidx177 = getelementptr inbounds i8, i8* %117, i64 5, !dbg !6327
  %118 = load i8, i8* %arrayidx177, align 1, !dbg !6327
  %conv178 = zext i8 %118 to i32, !dbg !6327
  %119 = load i32, i32* %C1.addr, align 4, !dbg !6328
  %mul179 = mul nsw i32 %conv178, %119, !dbg !6329
  %add180 = add nsw i32 %sub176, %mul179, !dbg !6330
  %120 = load i8*, i8** %src.addr, align 8, !dbg !6331
  %arrayidx181 = getelementptr inbounds i8, i8* %120, i64 6, !dbg !6331
  %121 = load i8, i8* %arrayidx181, align 1, !dbg !6331
  %conv182 = zext i8 %121 to i32, !dbg !6331
  %122 = load i32, i32* %C2.addr, align 4, !dbg !6332
  %mul183 = mul nsw i32 %conv182, %122, !dbg !6333
  %add184 = add nsw i32 %add180, %mul183, !dbg !6334
  %123 = load i32, i32* %SHIFT.addr, align 4, !dbg !6335
  %sub185 = sub nsw i32 %123, 1, !dbg !6336
  %shl186 = shl i32 1, %sub185, !dbg !6337
  %add187 = add nsw i32 %add184, %shl186, !dbg !6338
  %124 = load i32, i32* %SHIFT.addr, align 4, !dbg !6339
  %shr188 = ashr i32 %add187, %124, !dbg !6340
  %idxprom189 = sext i32 %shr188 to i64, !dbg !6341
  %125 = load i8*, i8** %cm, align 8, !dbg !6341
  %arrayidx190 = getelementptr inbounds i8, i8* %125, i64 %idxprom189, !dbg !6341
  %126 = load i8, i8* %arrayidx190, align 1, !dbg !6341
  %conv191 = zext i8 %126 to i32, !dbg !6341
  %add192 = add nsw i32 %conv164, %conv191, !dbg !6342
  %add193 = add nsw i32 %add192, 1, !dbg !6343
  %shr194 = ashr i32 %add193, 1, !dbg !6344
  %conv195 = trunc i32 %shr194 to i8, !dbg !6345
  %127 = load i8*, i8** %dst.addr, align 8, !dbg !6346
  %arrayidx196 = getelementptr inbounds i8, i8* %127, i64 5, !dbg !6346
  store i8 %conv195, i8* %arrayidx196, align 1, !dbg !6347
  %128 = load i8*, i8** %dst.addr, align 8, !dbg !6348
  %arrayidx197 = getelementptr inbounds i8, i8* %128, i64 6, !dbg !6348
  %129 = load i8, i8* %arrayidx197, align 1, !dbg !6348
  %conv198 = zext i8 %129 to i32, !dbg !6349
  %130 = load i8*, i8** %src.addr, align 8, !dbg !6350
  %arrayidx199 = getelementptr inbounds i8, i8* %130, i64 4, !dbg !6350
  %131 = load i8, i8* %arrayidx199, align 1, !dbg !6350
  %conv200 = zext i8 %131 to i32, !dbg !6350
  %132 = load i8*, i8** %src.addr, align 8, !dbg !6351
  %arrayidx201 = getelementptr inbounds i8, i8* %132, i64 9, !dbg !6351
  %133 = load i8, i8* %arrayidx201, align 1, !dbg !6351
  %conv202 = zext i8 %133 to i32, !dbg !6351
  %add203 = add nsw i32 %conv200, %conv202, !dbg !6352
  %134 = load i8*, i8** %src.addr, align 8, !dbg !6353
  %arrayidx204 = getelementptr inbounds i8, i8* %134, i64 5, !dbg !6353
  %135 = load i8, i8* %arrayidx204, align 1, !dbg !6353
  %conv205 = zext i8 %135 to i32, !dbg !6353
  %136 = load i8*, i8** %src.addr, align 8, !dbg !6354
  %arrayidx206 = getelementptr inbounds i8, i8* %136, i64 8, !dbg !6354
  %137 = load i8, i8* %arrayidx206, align 1, !dbg !6354
  %conv207 = zext i8 %137 to i32, !dbg !6354
  %add208 = add nsw i32 %conv205, %conv207, !dbg !6355
  %mul209 = mul nsw i32 5, %add208, !dbg !6356
  %sub210 = sub nsw i32 %add203, %mul209, !dbg !6357
  %138 = load i8*, i8** %src.addr, align 8, !dbg !6358
  %arrayidx211 = getelementptr inbounds i8, i8* %138, i64 6, !dbg !6358
  %139 = load i8, i8* %arrayidx211, align 1, !dbg !6358
  %conv212 = zext i8 %139 to i32, !dbg !6358
  %140 = load i32, i32* %C1.addr, align 4, !dbg !6359
  %mul213 = mul nsw i32 %conv212, %140, !dbg !6360
  %add214 = add nsw i32 %sub210, %mul213, !dbg !6361
  %141 = load i8*, i8** %src.addr, align 8, !dbg !6362
  %arrayidx215 = getelementptr inbounds i8, i8* %141, i64 7, !dbg !6362
  %142 = load i8, i8* %arrayidx215, align 1, !dbg !6362
  %conv216 = zext i8 %142 to i32, !dbg !6362
  %143 = load i32, i32* %C2.addr, align 4, !dbg !6363
  %mul217 = mul nsw i32 %conv216, %143, !dbg !6364
  %add218 = add nsw i32 %add214, %mul217, !dbg !6365
  %144 = load i32, i32* %SHIFT.addr, align 4, !dbg !6366
  %sub219 = sub nsw i32 %144, 1, !dbg !6367
  %shl220 = shl i32 1, %sub219, !dbg !6368
  %add221 = add nsw i32 %add218, %shl220, !dbg !6369
  %145 = load i32, i32* %SHIFT.addr, align 4, !dbg !6370
  %shr222 = ashr i32 %add221, %145, !dbg !6371
  %idxprom223 = sext i32 %shr222 to i64, !dbg !6372
  %146 = load i8*, i8** %cm, align 8, !dbg !6372
  %arrayidx224 = getelementptr inbounds i8, i8* %146, i64 %idxprom223, !dbg !6372
  %147 = load i8, i8* %arrayidx224, align 1, !dbg !6372
  %conv225 = zext i8 %147 to i32, !dbg !6372
  %add226 = add nsw i32 %conv198, %conv225, !dbg !6373
  %add227 = add nsw i32 %add226, 1, !dbg !6374
  %shr228 = ashr i32 %add227, 1, !dbg !6375
  %conv229 = trunc i32 %shr228 to i8, !dbg !6376
  %148 = load i8*, i8** %dst.addr, align 8, !dbg !6377
  %arrayidx230 = getelementptr inbounds i8, i8* %148, i64 6, !dbg !6377
  store i8 %conv229, i8* %arrayidx230, align 1, !dbg !6378
  %149 = load i8*, i8** %dst.addr, align 8, !dbg !6379
  %arrayidx231 = getelementptr inbounds i8, i8* %149, i64 7, !dbg !6379
  %150 = load i8, i8* %arrayidx231, align 1, !dbg !6379
  %conv232 = zext i8 %150 to i32, !dbg !6380
  %151 = load i8*, i8** %src.addr, align 8, !dbg !6381
  %arrayidx233 = getelementptr inbounds i8, i8* %151, i64 5, !dbg !6381
  %152 = load i8, i8* %arrayidx233, align 1, !dbg !6381
  %conv234 = zext i8 %152 to i32, !dbg !6381
  %153 = load i8*, i8** %src.addr, align 8, !dbg !6382
  %arrayidx235 = getelementptr inbounds i8, i8* %153, i64 10, !dbg !6382
  %154 = load i8, i8* %arrayidx235, align 1, !dbg !6382
  %conv236 = zext i8 %154 to i32, !dbg !6382
  %add237 = add nsw i32 %conv234, %conv236, !dbg !6383
  %155 = load i8*, i8** %src.addr, align 8, !dbg !6384
  %arrayidx238 = getelementptr inbounds i8, i8* %155, i64 6, !dbg !6384
  %156 = load i8, i8* %arrayidx238, align 1, !dbg !6384
  %conv239 = zext i8 %156 to i32, !dbg !6384
  %157 = load i8*, i8** %src.addr, align 8, !dbg !6385
  %arrayidx240 = getelementptr inbounds i8, i8* %157, i64 9, !dbg !6385
  %158 = load i8, i8* %arrayidx240, align 1, !dbg !6385
  %conv241 = zext i8 %158 to i32, !dbg !6385
  %add242 = add nsw i32 %conv239, %conv241, !dbg !6386
  %mul243 = mul nsw i32 5, %add242, !dbg !6387
  %sub244 = sub nsw i32 %add237, %mul243, !dbg !6388
  %159 = load i8*, i8** %src.addr, align 8, !dbg !6389
  %arrayidx245 = getelementptr inbounds i8, i8* %159, i64 7, !dbg !6389
  %160 = load i8, i8* %arrayidx245, align 1, !dbg !6389
  %conv246 = zext i8 %160 to i32, !dbg !6389
  %161 = load i32, i32* %C1.addr, align 4, !dbg !6390
  %mul247 = mul nsw i32 %conv246, %161, !dbg !6391
  %add248 = add nsw i32 %sub244, %mul247, !dbg !6392
  %162 = load i8*, i8** %src.addr, align 8, !dbg !6393
  %arrayidx249 = getelementptr inbounds i8, i8* %162, i64 8, !dbg !6393
  %163 = load i8, i8* %arrayidx249, align 1, !dbg !6393
  %conv250 = zext i8 %163 to i32, !dbg !6393
  %164 = load i32, i32* %C2.addr, align 4, !dbg !6394
  %mul251 = mul nsw i32 %conv250, %164, !dbg !6395
  %add252 = add nsw i32 %add248, %mul251, !dbg !6396
  %165 = load i32, i32* %SHIFT.addr, align 4, !dbg !6397
  %sub253 = sub nsw i32 %165, 1, !dbg !6398
  %shl254 = shl i32 1, %sub253, !dbg !6399
  %add255 = add nsw i32 %add252, %shl254, !dbg !6400
  %166 = load i32, i32* %SHIFT.addr, align 4, !dbg !6401
  %shr256 = ashr i32 %add255, %166, !dbg !6402
  %idxprom257 = sext i32 %shr256 to i64, !dbg !6403
  %167 = load i8*, i8** %cm, align 8, !dbg !6403
  %arrayidx258 = getelementptr inbounds i8, i8* %167, i64 %idxprom257, !dbg !6403
  %168 = load i8, i8* %arrayidx258, align 1, !dbg !6403
  %conv259 = zext i8 %168 to i32, !dbg !6403
  %add260 = add nsw i32 %conv232, %conv259, !dbg !6404
  %add261 = add nsw i32 %add260, 1, !dbg !6405
  %shr262 = ashr i32 %add261, 1, !dbg !6406
  %conv263 = trunc i32 %shr262 to i8, !dbg !6407
  %169 = load i8*, i8** %dst.addr, align 8, !dbg !6408
  %arrayidx264 = getelementptr inbounds i8, i8* %169, i64 7, !dbg !6408
  store i8 %conv263, i8* %arrayidx264, align 1, !dbg !6409
  %170 = load i32, i32* %dstStride.addr, align 4, !dbg !6410
  %171 = load i8*, i8** %dst.addr, align 8, !dbg !6411
  %idx.ext = sext i32 %170 to i64, !dbg !6411
  %add.ptr = getelementptr inbounds i8, i8* %171, i64 %idx.ext, !dbg !6411
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !6411
  %172 = load i32, i32* %srcStride.addr, align 4, !dbg !6412
  %173 = load i8*, i8** %src.addr, align 8, !dbg !6413
  %idx.ext265 = sext i32 %172 to i64, !dbg !6413
  %add.ptr266 = getelementptr inbounds i8, i8* %173, i64 %idx.ext265, !dbg !6413
  store i8* %add.ptr266, i8** %src.addr, align 8, !dbg !6413
  br label %for.inc, !dbg !6414

for.inc:                                          ; preds = %for.body
  %174 = load i32, i32* %i, align 4, !dbg !6415
  %inc = add nsw i32 %174, 1, !dbg !6415
  store i32 %inc, i32* %i, align 4, !dbg !6415
  br label %for.cond, !dbg !6417, !llvm.loop !6418

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6420
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel16_v_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %w, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !6422 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6423, metadata !113), !dbg !6424
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6425, metadata !113), !dbg !6426
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !6427, metadata !113), !dbg !6428
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !6429, metadata !113), !dbg !6430
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6431, metadata !113), !dbg !6432
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !6433, metadata !113), !dbg !6434
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !6435, metadata !113), !dbg !6436
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !6437, metadata !113), !dbg !6438
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !6439
  %1 = load i8*, i8** %src.addr, align 8, !dbg !6440
  %2 = load i32, i32* %dstStride.addr, align 4, !dbg !6441
  %3 = load i32, i32* %srcStride.addr, align 4, !dbg !6442
  %4 = load i32, i32* %C1.addr, align 4, !dbg !6443
  %5 = load i32, i32* %C2.addr, align 4, !dbg !6444
  %6 = load i32, i32* %SHIFT.addr, align 4, !dbg !6445
  call void @avg_rv40_qpel8_v_lowpass(i8* %0, i8* %1, i32 %2, i32 %3, i32 8, i32 %4, i32 %5, i32 %6), !dbg !6446
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !6447
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8, !dbg !6448
  %8 = load i8*, i8** %src.addr, align 8, !dbg !6449
  %add.ptr1 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !6450
  %9 = load i32, i32* %dstStride.addr, align 4, !dbg !6451
  %10 = load i32, i32* %srcStride.addr, align 4, !dbg !6452
  %11 = load i32, i32* %C1.addr, align 4, !dbg !6453
  %12 = load i32, i32* %C2.addr, align 4, !dbg !6454
  %13 = load i32, i32* %SHIFT.addr, align 4, !dbg !6455
  call void @avg_rv40_qpel8_v_lowpass(i8* %add.ptr, i8* %add.ptr1, i32 %9, i32 %10, i32 8, i32 %11, i32 %12, i32 %13), !dbg !6456
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !6458
  %mul = mul nsw i32 8, %14, !dbg !6459
  %15 = load i8*, i8** %src.addr, align 8, !dbg !6460
  %idx.ext = sext i32 %mul to i64, !dbg !6460
  %add.ptr2 = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !6460
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !6460
  %16 = load i32, i32* %dstStride.addr, align 4, !dbg !6461
  %mul3 = mul nsw i32 8, %16, !dbg !6462
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !6463
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !6463
  %add.ptr5 = getelementptr inbounds i8, i8* %17, i64 %idx.ext4, !dbg !6463
  store i8* %add.ptr5, i8** %dst.addr, align 8, !dbg !6463
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !6464
  %19 = load i8*, i8** %src.addr, align 8, !dbg !6465
  %20 = load i32, i32* %dstStride.addr, align 4, !dbg !6466
  %21 = load i32, i32* %srcStride.addr, align 4, !dbg !6467
  %22 = load i32, i32* %w.addr, align 4, !dbg !6468
  %sub = sub nsw i32 %22, 8, !dbg !6469
  %23 = load i32, i32* %C1.addr, align 4, !dbg !6470
  %24 = load i32, i32* %C2.addr, align 4, !dbg !6471
  %25 = load i32, i32* %SHIFT.addr, align 4, !dbg !6472
  call void @avg_rv40_qpel8_v_lowpass(i8* %18, i8* %19, i32 %20, i32 %21, i32 %sub, i32 %23, i32 %24, i32 %25), !dbg !6473
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !6475
  %add.ptr6 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !6476
  %27 = load i8*, i8** %src.addr, align 8, !dbg !6477
  %add.ptr7 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !6478
  %28 = load i32, i32* %dstStride.addr, align 4, !dbg !6479
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !6480
  %30 = load i32, i32* %w.addr, align 4, !dbg !6481
  %sub8 = sub nsw i32 %30, 8, !dbg !6482
  %31 = load i32, i32* %C1.addr, align 4, !dbg !6483
  %32 = load i32, i32* %C2.addr, align 4, !dbg !6484
  %33 = load i32, i32* %SHIFT.addr, align 4, !dbg !6485
  call void @avg_rv40_qpel8_v_lowpass(i8* %add.ptr6, i8* %add.ptr7, i32 %28, i32 %29, i32 %sub8, i32 %31, i32 %32, i32 %33), !dbg !6486
  ret void, !dbg !6488
}

; Function Attrs: nounwind uwtable
define internal void @avg_rv40_qpel8_v_lowpass(i8* %dst, i8* %src, i32 %dstStride, i32 %srcStride, i32 %w, i32 %C1, i32 %C2, i32 %SHIFT) #3 !dbg !6489 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i32, align 4
  %srcStride.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %C1.addr = alloca i32, align 4
  %C2.addr = alloca i32, align 4
  %SHIFT.addr = alloca i32, align 4
  %cm = alloca i8*, align 8
  %i = alloca i32, align 4
  %srcB = alloca i32, align 4
  %srcA = alloca i32, align 4
  %src0 = alloca i32, align 4
  %src1 = alloca i32, align 4
  %src2 = alloca i32, align 4
  %src3 = alloca i32, align 4
  %src4 = alloca i32, align 4
  %src5 = alloca i32, align 4
  %src6 = alloca i32, align 4
  %src7 = alloca i32, align 4
  %src8 = alloca i32, align 4
  %src9 = alloca i32, align 4
  %src10 = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6490, metadata !113), !dbg !6491
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6492, metadata !113), !dbg !6493
  store i32 %dstStride, i32* %dstStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstStride.addr, metadata !6494, metadata !113), !dbg !6495
  store i32 %srcStride, i32* %srcStride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStride.addr, metadata !6496, metadata !113), !dbg !6497
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6498, metadata !113), !dbg !6499
  store i32 %C1, i32* %C1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C1.addr, metadata !6500, metadata !113), !dbg !6501
  store i32 %C2, i32* %C2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %C2.addr, metadata !6502, metadata !113), !dbg !6503
  store i32 %SHIFT, i32* %SHIFT.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %SHIFT.addr, metadata !6504, metadata !113), !dbg !6505
  call void @llvm.dbg.declare(metadata i8** %cm, metadata !6506, metadata !113), !dbg !6507
  store i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i32 0, i64 1024), i8** %cm, align 8, !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6508, metadata !113), !dbg !6509
  store i32 0, i32* %i, align 4, !dbg !6510
  br label %for.cond, !dbg !6512

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6513
  %1 = load i32, i32* %w.addr, align 4, !dbg !6516
  %cmp = icmp slt i32 %0, %1, !dbg !6517
  br i1 %cmp, label %for.body, label %for.end, !dbg !6518

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %srcB, metadata !6519, metadata !113), !dbg !6521
  %2 = load i32, i32* %srcStride.addr, align 4, !dbg !6522
  %mul = mul nsw i32 -2, %2, !dbg !6524
  %idxprom = sext i32 %mul to i64, !dbg !6525
  %3 = load i8*, i8** %src.addr, align 8, !dbg !6525
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !6525
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6525
  %conv = zext i8 %4 to i32, !dbg !6525
  store i32 %conv, i32* %srcB, align 4, !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %srcA, metadata !6527, metadata !113), !dbg !6528
  %5 = load i32, i32* %srcStride.addr, align 4, !dbg !6529
  %mul1 = mul nsw i32 -1, %5, !dbg !6530
  %idxprom2 = sext i32 %mul1 to i64, !dbg !6531
  %6 = load i8*, i8** %src.addr, align 8, !dbg !6531
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !6531
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !6531
  %conv4 = zext i8 %7 to i32, !dbg !6531
  store i32 %conv4, i32* %srcA, align 4, !dbg !6532
  call void @llvm.dbg.declare(metadata i32* %src0, metadata !6533, metadata !113), !dbg !6534
  %8 = load i32, i32* %srcStride.addr, align 4, !dbg !6535
  %mul5 = mul nsw i32 0, %8, !dbg !6536
  %idxprom6 = sext i32 %mul5 to i64, !dbg !6537
  %9 = load i8*, i8** %src.addr, align 8, !dbg !6537
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %idxprom6, !dbg !6537
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !6537
  %conv8 = zext i8 %10 to i32, !dbg !6537
  store i32 %conv8, i32* %src0, align 4, !dbg !6538
  call void @llvm.dbg.declare(metadata i32* %src1, metadata !6539, metadata !113), !dbg !6540
  %11 = load i32, i32* %srcStride.addr, align 4, !dbg !6541
  %mul9 = mul nsw i32 1, %11, !dbg !6542
  %idxprom10 = sext i32 %mul9 to i64, !dbg !6543
  %12 = load i8*, i8** %src.addr, align 8, !dbg !6543
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 %idxprom10, !dbg !6543
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !6543
  %conv12 = zext i8 %13 to i32, !dbg !6543
  store i32 %conv12, i32* %src1, align 4, !dbg !6544
  call void @llvm.dbg.declare(metadata i32* %src2, metadata !6545, metadata !113), !dbg !6546
  %14 = load i32, i32* %srcStride.addr, align 4, !dbg !6547
  %mul13 = mul nsw i32 2, %14, !dbg !6548
  %idxprom14 = sext i32 %mul13 to i64, !dbg !6549
  %15 = load i8*, i8** %src.addr, align 8, !dbg !6549
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i64 %idxprom14, !dbg !6549
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !6549
  %conv16 = zext i8 %16 to i32, !dbg !6549
  store i32 %conv16, i32* %src2, align 4, !dbg !6550
  call void @llvm.dbg.declare(metadata i32* %src3, metadata !6551, metadata !113), !dbg !6552
  %17 = load i32, i32* %srcStride.addr, align 4, !dbg !6553
  %mul17 = mul nsw i32 3, %17, !dbg !6554
  %idxprom18 = sext i32 %mul17 to i64, !dbg !6555
  %18 = load i8*, i8** %src.addr, align 8, !dbg !6555
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 %idxprom18, !dbg !6555
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !6555
  %conv20 = zext i8 %19 to i32, !dbg !6555
  store i32 %conv20, i32* %src3, align 4, !dbg !6556
  call void @llvm.dbg.declare(metadata i32* %src4, metadata !6557, metadata !113), !dbg !6558
  %20 = load i32, i32* %srcStride.addr, align 4, !dbg !6559
  %mul21 = mul nsw i32 4, %20, !dbg !6560
  %idxprom22 = sext i32 %mul21 to i64, !dbg !6561
  %21 = load i8*, i8** %src.addr, align 8, !dbg !6561
  %arrayidx23 = getelementptr inbounds i8, i8* %21, i64 %idxprom22, !dbg !6561
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !6561
  %conv24 = zext i8 %22 to i32, !dbg !6561
  store i32 %conv24, i32* %src4, align 4, !dbg !6562
  call void @llvm.dbg.declare(metadata i32* %src5, metadata !6563, metadata !113), !dbg !6564
  %23 = load i32, i32* %srcStride.addr, align 4, !dbg !6565
  %mul25 = mul nsw i32 5, %23, !dbg !6566
  %idxprom26 = sext i32 %mul25 to i64, !dbg !6567
  %24 = load i8*, i8** %src.addr, align 8, !dbg !6567
  %arrayidx27 = getelementptr inbounds i8, i8* %24, i64 %idxprom26, !dbg !6567
  %25 = load i8, i8* %arrayidx27, align 1, !dbg !6567
  %conv28 = zext i8 %25 to i32, !dbg !6567
  store i32 %conv28, i32* %src5, align 4, !dbg !6568
  call void @llvm.dbg.declare(metadata i32* %src6, metadata !6569, metadata !113), !dbg !6570
  %26 = load i32, i32* %srcStride.addr, align 4, !dbg !6571
  %mul29 = mul nsw i32 6, %26, !dbg !6572
  %idxprom30 = sext i32 %mul29 to i64, !dbg !6573
  %27 = load i8*, i8** %src.addr, align 8, !dbg !6573
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 %idxprom30, !dbg !6573
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !6573
  %conv32 = zext i8 %28 to i32, !dbg !6573
  store i32 %conv32, i32* %src6, align 4, !dbg !6574
  call void @llvm.dbg.declare(metadata i32* %src7, metadata !6575, metadata !113), !dbg !6576
  %29 = load i32, i32* %srcStride.addr, align 4, !dbg !6577
  %mul33 = mul nsw i32 7, %29, !dbg !6578
  %idxprom34 = sext i32 %mul33 to i64, !dbg !6579
  %30 = load i8*, i8** %src.addr, align 8, !dbg !6579
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %idxprom34, !dbg !6579
  %31 = load i8, i8* %arrayidx35, align 1, !dbg !6579
  %conv36 = zext i8 %31 to i32, !dbg !6579
  store i32 %conv36, i32* %src7, align 4, !dbg !6580
  call void @llvm.dbg.declare(metadata i32* %src8, metadata !6581, metadata !113), !dbg !6582
  %32 = load i32, i32* %srcStride.addr, align 4, !dbg !6583
  %mul37 = mul nsw i32 8, %32, !dbg !6584
  %idxprom38 = sext i32 %mul37 to i64, !dbg !6585
  %33 = load i8*, i8** %src.addr, align 8, !dbg !6585
  %arrayidx39 = getelementptr inbounds i8, i8* %33, i64 %idxprom38, !dbg !6585
  %34 = load i8, i8* %arrayidx39, align 1, !dbg !6585
  %conv40 = zext i8 %34 to i32, !dbg !6585
  store i32 %conv40, i32* %src8, align 4, !dbg !6586
  call void @llvm.dbg.declare(metadata i32* %src9, metadata !6587, metadata !113), !dbg !6588
  %35 = load i32, i32* %srcStride.addr, align 4, !dbg !6589
  %mul41 = mul nsw i32 9, %35, !dbg !6590
  %idxprom42 = sext i32 %mul41 to i64, !dbg !6591
  %36 = load i8*, i8** %src.addr, align 8, !dbg !6591
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 %idxprom42, !dbg !6591
  %37 = load i8, i8* %arrayidx43, align 1, !dbg !6591
  %conv44 = zext i8 %37 to i32, !dbg !6591
  store i32 %conv44, i32* %src9, align 4, !dbg !6592
  call void @llvm.dbg.declare(metadata i32* %src10, metadata !6593, metadata !113), !dbg !6594
  %38 = load i32, i32* %srcStride.addr, align 4, !dbg !6595
  %mul45 = mul nsw i32 10, %38, !dbg !6596
  %idxprom46 = sext i32 %mul45 to i64, !dbg !6597
  %39 = load i8*, i8** %src.addr, align 8, !dbg !6597
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 %idxprom46, !dbg !6597
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !6597
  %conv48 = zext i8 %40 to i32, !dbg !6597
  store i32 %conv48, i32* %src10, align 4, !dbg !6598
  %41 = load i32, i32* %dstStride.addr, align 4, !dbg !6599
  %mul49 = mul nsw i32 0, %41, !dbg !6600
  %idxprom50 = sext i32 %mul49 to i64, !dbg !6601
  %42 = load i8*, i8** %dst.addr, align 8, !dbg !6601
  %arrayidx51 = getelementptr inbounds i8, i8* %42, i64 %idxprom50, !dbg !6601
  %43 = load i8, i8* %arrayidx51, align 1, !dbg !6601
  %conv52 = zext i8 %43 to i32, !dbg !6602
  %44 = load i32, i32* %srcB, align 4, !dbg !6603
  %45 = load i32, i32* %src3, align 4, !dbg !6604
  %add = add nsw i32 %44, %45, !dbg !6605
  %46 = load i32, i32* %srcA, align 4, !dbg !6606
  %47 = load i32, i32* %src2, align 4, !dbg !6607
  %add53 = add nsw i32 %46, %47, !dbg !6608
  %mul54 = mul nsw i32 5, %add53, !dbg !6609
  %sub = sub nsw i32 %add, %mul54, !dbg !6610
  %48 = load i32, i32* %src0, align 4, !dbg !6611
  %49 = load i32, i32* %C1.addr, align 4, !dbg !6612
  %mul55 = mul nsw i32 %48, %49, !dbg !6613
  %add56 = add nsw i32 %sub, %mul55, !dbg !6614
  %50 = load i32, i32* %src1, align 4, !dbg !6615
  %51 = load i32, i32* %C2.addr, align 4, !dbg !6616
  %mul57 = mul nsw i32 %50, %51, !dbg !6617
  %add58 = add nsw i32 %add56, %mul57, !dbg !6618
  %52 = load i32, i32* %SHIFT.addr, align 4, !dbg !6619
  %sub59 = sub nsw i32 %52, 1, !dbg !6620
  %shl = shl i32 1, %sub59, !dbg !6621
  %add60 = add nsw i32 %add58, %shl, !dbg !6622
  %53 = load i32, i32* %SHIFT.addr, align 4, !dbg !6623
  %shr = ashr i32 %add60, %53, !dbg !6624
  %idxprom61 = sext i32 %shr to i64, !dbg !6625
  %54 = load i8*, i8** %cm, align 8, !dbg !6625
  %arrayidx62 = getelementptr inbounds i8, i8* %54, i64 %idxprom61, !dbg !6625
  %55 = load i8, i8* %arrayidx62, align 1, !dbg !6625
  %conv63 = zext i8 %55 to i32, !dbg !6625
  %add64 = add nsw i32 %conv52, %conv63, !dbg !6626
  %add65 = add nsw i32 %add64, 1, !dbg !6627
  %shr66 = ashr i32 %add65, 1, !dbg !6628
  %conv67 = trunc i32 %shr66 to i8, !dbg !6629
  %56 = load i32, i32* %dstStride.addr, align 4, !dbg !6630
  %mul68 = mul nsw i32 0, %56, !dbg !6631
  %idxprom69 = sext i32 %mul68 to i64, !dbg !6632
  %57 = load i8*, i8** %dst.addr, align 8, !dbg !6632
  %arrayidx70 = getelementptr inbounds i8, i8* %57, i64 %idxprom69, !dbg !6632
  store i8 %conv67, i8* %arrayidx70, align 1, !dbg !6633
  %58 = load i32, i32* %dstStride.addr, align 4, !dbg !6634
  %mul71 = mul nsw i32 1, %58, !dbg !6635
  %idxprom72 = sext i32 %mul71 to i64, !dbg !6636
  %59 = load i8*, i8** %dst.addr, align 8, !dbg !6636
  %arrayidx73 = getelementptr inbounds i8, i8* %59, i64 %idxprom72, !dbg !6636
  %60 = load i8, i8* %arrayidx73, align 1, !dbg !6636
  %conv74 = zext i8 %60 to i32, !dbg !6637
  %61 = load i32, i32* %srcA, align 4, !dbg !6638
  %62 = load i32, i32* %src4, align 4, !dbg !6639
  %add75 = add nsw i32 %61, %62, !dbg !6640
  %63 = load i32, i32* %src0, align 4, !dbg !6641
  %64 = load i32, i32* %src3, align 4, !dbg !6642
  %add76 = add nsw i32 %63, %64, !dbg !6643
  %mul77 = mul nsw i32 5, %add76, !dbg !6644
  %sub78 = sub nsw i32 %add75, %mul77, !dbg !6645
  %65 = load i32, i32* %src1, align 4, !dbg !6646
  %66 = load i32, i32* %C1.addr, align 4, !dbg !6647
  %mul79 = mul nsw i32 %65, %66, !dbg !6648
  %add80 = add nsw i32 %sub78, %mul79, !dbg !6649
  %67 = load i32, i32* %src2, align 4, !dbg !6650
  %68 = load i32, i32* %C2.addr, align 4, !dbg !6651
  %mul81 = mul nsw i32 %67, %68, !dbg !6652
  %add82 = add nsw i32 %add80, %mul81, !dbg !6653
  %69 = load i32, i32* %SHIFT.addr, align 4, !dbg !6654
  %sub83 = sub nsw i32 %69, 1, !dbg !6655
  %shl84 = shl i32 1, %sub83, !dbg !6656
  %add85 = add nsw i32 %add82, %shl84, !dbg !6657
  %70 = load i32, i32* %SHIFT.addr, align 4, !dbg !6658
  %shr86 = ashr i32 %add85, %70, !dbg !6659
  %idxprom87 = sext i32 %shr86 to i64, !dbg !6660
  %71 = load i8*, i8** %cm, align 8, !dbg !6660
  %arrayidx88 = getelementptr inbounds i8, i8* %71, i64 %idxprom87, !dbg !6660
  %72 = load i8, i8* %arrayidx88, align 1, !dbg !6660
  %conv89 = zext i8 %72 to i32, !dbg !6660
  %add90 = add nsw i32 %conv74, %conv89, !dbg !6661
  %add91 = add nsw i32 %add90, 1, !dbg !6662
  %shr92 = ashr i32 %add91, 1, !dbg !6663
  %conv93 = trunc i32 %shr92 to i8, !dbg !6664
  %73 = load i32, i32* %dstStride.addr, align 4, !dbg !6665
  %mul94 = mul nsw i32 1, %73, !dbg !6666
  %idxprom95 = sext i32 %mul94 to i64, !dbg !6667
  %74 = load i8*, i8** %dst.addr, align 8, !dbg !6667
  %arrayidx96 = getelementptr inbounds i8, i8* %74, i64 %idxprom95, !dbg !6667
  store i8 %conv93, i8* %arrayidx96, align 1, !dbg !6668
  %75 = load i32, i32* %dstStride.addr, align 4, !dbg !6669
  %mul97 = mul nsw i32 2, %75, !dbg !6670
  %idxprom98 = sext i32 %mul97 to i64, !dbg !6671
  %76 = load i8*, i8** %dst.addr, align 8, !dbg !6671
  %arrayidx99 = getelementptr inbounds i8, i8* %76, i64 %idxprom98, !dbg !6671
  %77 = load i8, i8* %arrayidx99, align 1, !dbg !6671
  %conv100 = zext i8 %77 to i32, !dbg !6672
  %78 = load i32, i32* %src0, align 4, !dbg !6673
  %79 = load i32, i32* %src5, align 4, !dbg !6674
  %add101 = add nsw i32 %78, %79, !dbg !6675
  %80 = load i32, i32* %src1, align 4, !dbg !6676
  %81 = load i32, i32* %src4, align 4, !dbg !6677
  %add102 = add nsw i32 %80, %81, !dbg !6678
  %mul103 = mul nsw i32 5, %add102, !dbg !6679
  %sub104 = sub nsw i32 %add101, %mul103, !dbg !6680
  %82 = load i32, i32* %src2, align 4, !dbg !6681
  %83 = load i32, i32* %C1.addr, align 4, !dbg !6682
  %mul105 = mul nsw i32 %82, %83, !dbg !6683
  %add106 = add nsw i32 %sub104, %mul105, !dbg !6684
  %84 = load i32, i32* %src3, align 4, !dbg !6685
  %85 = load i32, i32* %C2.addr, align 4, !dbg !6686
  %mul107 = mul nsw i32 %84, %85, !dbg !6687
  %add108 = add nsw i32 %add106, %mul107, !dbg !6688
  %86 = load i32, i32* %SHIFT.addr, align 4, !dbg !6689
  %sub109 = sub nsw i32 %86, 1, !dbg !6690
  %shl110 = shl i32 1, %sub109, !dbg !6691
  %add111 = add nsw i32 %add108, %shl110, !dbg !6692
  %87 = load i32, i32* %SHIFT.addr, align 4, !dbg !6693
  %shr112 = ashr i32 %add111, %87, !dbg !6694
  %idxprom113 = sext i32 %shr112 to i64, !dbg !6695
  %88 = load i8*, i8** %cm, align 8, !dbg !6695
  %arrayidx114 = getelementptr inbounds i8, i8* %88, i64 %idxprom113, !dbg !6695
  %89 = load i8, i8* %arrayidx114, align 1, !dbg !6695
  %conv115 = zext i8 %89 to i32, !dbg !6695
  %add116 = add nsw i32 %conv100, %conv115, !dbg !6696
  %add117 = add nsw i32 %add116, 1, !dbg !6697
  %shr118 = ashr i32 %add117, 1, !dbg !6698
  %conv119 = trunc i32 %shr118 to i8, !dbg !6699
  %90 = load i32, i32* %dstStride.addr, align 4, !dbg !6700
  %mul120 = mul nsw i32 2, %90, !dbg !6701
  %idxprom121 = sext i32 %mul120 to i64, !dbg !6702
  %91 = load i8*, i8** %dst.addr, align 8, !dbg !6702
  %arrayidx122 = getelementptr inbounds i8, i8* %91, i64 %idxprom121, !dbg !6702
  store i8 %conv119, i8* %arrayidx122, align 1, !dbg !6703
  %92 = load i32, i32* %dstStride.addr, align 4, !dbg !6704
  %mul123 = mul nsw i32 3, %92, !dbg !6705
  %idxprom124 = sext i32 %mul123 to i64, !dbg !6706
  %93 = load i8*, i8** %dst.addr, align 8, !dbg !6706
  %arrayidx125 = getelementptr inbounds i8, i8* %93, i64 %idxprom124, !dbg !6706
  %94 = load i8, i8* %arrayidx125, align 1, !dbg !6706
  %conv126 = zext i8 %94 to i32, !dbg !6707
  %95 = load i32, i32* %src1, align 4, !dbg !6708
  %96 = load i32, i32* %src6, align 4, !dbg !6709
  %add127 = add nsw i32 %95, %96, !dbg !6710
  %97 = load i32, i32* %src2, align 4, !dbg !6711
  %98 = load i32, i32* %src5, align 4, !dbg !6712
  %add128 = add nsw i32 %97, %98, !dbg !6713
  %mul129 = mul nsw i32 5, %add128, !dbg !6714
  %sub130 = sub nsw i32 %add127, %mul129, !dbg !6715
  %99 = load i32, i32* %src3, align 4, !dbg !6716
  %100 = load i32, i32* %C1.addr, align 4, !dbg !6717
  %mul131 = mul nsw i32 %99, %100, !dbg !6718
  %add132 = add nsw i32 %sub130, %mul131, !dbg !6719
  %101 = load i32, i32* %src4, align 4, !dbg !6720
  %102 = load i32, i32* %C2.addr, align 4, !dbg !6721
  %mul133 = mul nsw i32 %101, %102, !dbg !6722
  %add134 = add nsw i32 %add132, %mul133, !dbg !6723
  %103 = load i32, i32* %SHIFT.addr, align 4, !dbg !6724
  %sub135 = sub nsw i32 %103, 1, !dbg !6725
  %shl136 = shl i32 1, %sub135, !dbg !6726
  %add137 = add nsw i32 %add134, %shl136, !dbg !6727
  %104 = load i32, i32* %SHIFT.addr, align 4, !dbg !6728
  %shr138 = ashr i32 %add137, %104, !dbg !6729
  %idxprom139 = sext i32 %shr138 to i64, !dbg !6730
  %105 = load i8*, i8** %cm, align 8, !dbg !6730
  %arrayidx140 = getelementptr inbounds i8, i8* %105, i64 %idxprom139, !dbg !6730
  %106 = load i8, i8* %arrayidx140, align 1, !dbg !6730
  %conv141 = zext i8 %106 to i32, !dbg !6730
  %add142 = add nsw i32 %conv126, %conv141, !dbg !6731
  %add143 = add nsw i32 %add142, 1, !dbg !6732
  %shr144 = ashr i32 %add143, 1, !dbg !6733
  %conv145 = trunc i32 %shr144 to i8, !dbg !6734
  %107 = load i32, i32* %dstStride.addr, align 4, !dbg !6735
  %mul146 = mul nsw i32 3, %107, !dbg !6736
  %idxprom147 = sext i32 %mul146 to i64, !dbg !6737
  %108 = load i8*, i8** %dst.addr, align 8, !dbg !6737
  %arrayidx148 = getelementptr inbounds i8, i8* %108, i64 %idxprom147, !dbg !6737
  store i8 %conv145, i8* %arrayidx148, align 1, !dbg !6738
  %109 = load i32, i32* %dstStride.addr, align 4, !dbg !6739
  %mul149 = mul nsw i32 4, %109, !dbg !6740
  %idxprom150 = sext i32 %mul149 to i64, !dbg !6741
  %110 = load i8*, i8** %dst.addr, align 8, !dbg !6741
  %arrayidx151 = getelementptr inbounds i8, i8* %110, i64 %idxprom150, !dbg !6741
  %111 = load i8, i8* %arrayidx151, align 1, !dbg !6741
  %conv152 = zext i8 %111 to i32, !dbg !6742
  %112 = load i32, i32* %src2, align 4, !dbg !6743
  %113 = load i32, i32* %src7, align 4, !dbg !6744
  %add153 = add nsw i32 %112, %113, !dbg !6745
  %114 = load i32, i32* %src3, align 4, !dbg !6746
  %115 = load i32, i32* %src6, align 4, !dbg !6747
  %add154 = add nsw i32 %114, %115, !dbg !6748
  %mul155 = mul nsw i32 5, %add154, !dbg !6749
  %sub156 = sub nsw i32 %add153, %mul155, !dbg !6750
  %116 = load i32, i32* %src4, align 4, !dbg !6751
  %117 = load i32, i32* %C1.addr, align 4, !dbg !6752
  %mul157 = mul nsw i32 %116, %117, !dbg !6753
  %add158 = add nsw i32 %sub156, %mul157, !dbg !6754
  %118 = load i32, i32* %src5, align 4, !dbg !6755
  %119 = load i32, i32* %C2.addr, align 4, !dbg !6756
  %mul159 = mul nsw i32 %118, %119, !dbg !6757
  %add160 = add nsw i32 %add158, %mul159, !dbg !6758
  %120 = load i32, i32* %SHIFT.addr, align 4, !dbg !6759
  %sub161 = sub nsw i32 %120, 1, !dbg !6760
  %shl162 = shl i32 1, %sub161, !dbg !6761
  %add163 = add nsw i32 %add160, %shl162, !dbg !6762
  %121 = load i32, i32* %SHIFT.addr, align 4, !dbg !6763
  %shr164 = ashr i32 %add163, %121, !dbg !6764
  %idxprom165 = sext i32 %shr164 to i64, !dbg !6765
  %122 = load i8*, i8** %cm, align 8, !dbg !6765
  %arrayidx166 = getelementptr inbounds i8, i8* %122, i64 %idxprom165, !dbg !6765
  %123 = load i8, i8* %arrayidx166, align 1, !dbg !6765
  %conv167 = zext i8 %123 to i32, !dbg !6765
  %add168 = add nsw i32 %conv152, %conv167, !dbg !6766
  %add169 = add nsw i32 %add168, 1, !dbg !6767
  %shr170 = ashr i32 %add169, 1, !dbg !6768
  %conv171 = trunc i32 %shr170 to i8, !dbg !6769
  %124 = load i32, i32* %dstStride.addr, align 4, !dbg !6770
  %mul172 = mul nsw i32 4, %124, !dbg !6771
  %idxprom173 = sext i32 %mul172 to i64, !dbg !6772
  %125 = load i8*, i8** %dst.addr, align 8, !dbg !6772
  %arrayidx174 = getelementptr inbounds i8, i8* %125, i64 %idxprom173, !dbg !6772
  store i8 %conv171, i8* %arrayidx174, align 1, !dbg !6773
  %126 = load i32, i32* %dstStride.addr, align 4, !dbg !6774
  %mul175 = mul nsw i32 5, %126, !dbg !6775
  %idxprom176 = sext i32 %mul175 to i64, !dbg !6776
  %127 = load i8*, i8** %dst.addr, align 8, !dbg !6776
  %arrayidx177 = getelementptr inbounds i8, i8* %127, i64 %idxprom176, !dbg !6776
  %128 = load i8, i8* %arrayidx177, align 1, !dbg !6776
  %conv178 = zext i8 %128 to i32, !dbg !6777
  %129 = load i32, i32* %src3, align 4, !dbg !6778
  %130 = load i32, i32* %src8, align 4, !dbg !6779
  %add179 = add nsw i32 %129, %130, !dbg !6780
  %131 = load i32, i32* %src4, align 4, !dbg !6781
  %132 = load i32, i32* %src7, align 4, !dbg !6782
  %add180 = add nsw i32 %131, %132, !dbg !6783
  %mul181 = mul nsw i32 5, %add180, !dbg !6784
  %sub182 = sub nsw i32 %add179, %mul181, !dbg !6785
  %133 = load i32, i32* %src5, align 4, !dbg !6786
  %134 = load i32, i32* %C1.addr, align 4, !dbg !6787
  %mul183 = mul nsw i32 %133, %134, !dbg !6788
  %add184 = add nsw i32 %sub182, %mul183, !dbg !6789
  %135 = load i32, i32* %src6, align 4, !dbg !6790
  %136 = load i32, i32* %C2.addr, align 4, !dbg !6791
  %mul185 = mul nsw i32 %135, %136, !dbg !6792
  %add186 = add nsw i32 %add184, %mul185, !dbg !6793
  %137 = load i32, i32* %SHIFT.addr, align 4, !dbg !6794
  %sub187 = sub nsw i32 %137, 1, !dbg !6795
  %shl188 = shl i32 1, %sub187, !dbg !6796
  %add189 = add nsw i32 %add186, %shl188, !dbg !6797
  %138 = load i32, i32* %SHIFT.addr, align 4, !dbg !6798
  %shr190 = ashr i32 %add189, %138, !dbg !6799
  %idxprom191 = sext i32 %shr190 to i64, !dbg !6800
  %139 = load i8*, i8** %cm, align 8, !dbg !6800
  %arrayidx192 = getelementptr inbounds i8, i8* %139, i64 %idxprom191, !dbg !6800
  %140 = load i8, i8* %arrayidx192, align 1, !dbg !6800
  %conv193 = zext i8 %140 to i32, !dbg !6800
  %add194 = add nsw i32 %conv178, %conv193, !dbg !6801
  %add195 = add nsw i32 %add194, 1, !dbg !6802
  %shr196 = ashr i32 %add195, 1, !dbg !6803
  %conv197 = trunc i32 %shr196 to i8, !dbg !6804
  %141 = load i32, i32* %dstStride.addr, align 4, !dbg !6805
  %mul198 = mul nsw i32 5, %141, !dbg !6806
  %idxprom199 = sext i32 %mul198 to i64, !dbg !6807
  %142 = load i8*, i8** %dst.addr, align 8, !dbg !6807
  %arrayidx200 = getelementptr inbounds i8, i8* %142, i64 %idxprom199, !dbg !6807
  store i8 %conv197, i8* %arrayidx200, align 1, !dbg !6808
  %143 = load i32, i32* %dstStride.addr, align 4, !dbg !6809
  %mul201 = mul nsw i32 6, %143, !dbg !6810
  %idxprom202 = sext i32 %mul201 to i64, !dbg !6811
  %144 = load i8*, i8** %dst.addr, align 8, !dbg !6811
  %arrayidx203 = getelementptr inbounds i8, i8* %144, i64 %idxprom202, !dbg !6811
  %145 = load i8, i8* %arrayidx203, align 1, !dbg !6811
  %conv204 = zext i8 %145 to i32, !dbg !6812
  %146 = load i32, i32* %src4, align 4, !dbg !6813
  %147 = load i32, i32* %src9, align 4, !dbg !6814
  %add205 = add nsw i32 %146, %147, !dbg !6815
  %148 = load i32, i32* %src5, align 4, !dbg !6816
  %149 = load i32, i32* %src8, align 4, !dbg !6817
  %add206 = add nsw i32 %148, %149, !dbg !6818
  %mul207 = mul nsw i32 5, %add206, !dbg !6819
  %sub208 = sub nsw i32 %add205, %mul207, !dbg !6820
  %150 = load i32, i32* %src6, align 4, !dbg !6821
  %151 = load i32, i32* %C1.addr, align 4, !dbg !6822
  %mul209 = mul nsw i32 %150, %151, !dbg !6823
  %add210 = add nsw i32 %sub208, %mul209, !dbg !6824
  %152 = load i32, i32* %src7, align 4, !dbg !6825
  %153 = load i32, i32* %C2.addr, align 4, !dbg !6826
  %mul211 = mul nsw i32 %152, %153, !dbg !6827
  %add212 = add nsw i32 %add210, %mul211, !dbg !6828
  %154 = load i32, i32* %SHIFT.addr, align 4, !dbg !6829
  %sub213 = sub nsw i32 %154, 1, !dbg !6830
  %shl214 = shl i32 1, %sub213, !dbg !6831
  %add215 = add nsw i32 %add212, %shl214, !dbg !6832
  %155 = load i32, i32* %SHIFT.addr, align 4, !dbg !6833
  %shr216 = ashr i32 %add215, %155, !dbg !6834
  %idxprom217 = sext i32 %shr216 to i64, !dbg !6835
  %156 = load i8*, i8** %cm, align 8, !dbg !6835
  %arrayidx218 = getelementptr inbounds i8, i8* %156, i64 %idxprom217, !dbg !6835
  %157 = load i8, i8* %arrayidx218, align 1, !dbg !6835
  %conv219 = zext i8 %157 to i32, !dbg !6835
  %add220 = add nsw i32 %conv204, %conv219, !dbg !6836
  %add221 = add nsw i32 %add220, 1, !dbg !6837
  %shr222 = ashr i32 %add221, 1, !dbg !6838
  %conv223 = trunc i32 %shr222 to i8, !dbg !6839
  %158 = load i32, i32* %dstStride.addr, align 4, !dbg !6840
  %mul224 = mul nsw i32 6, %158, !dbg !6841
  %idxprom225 = sext i32 %mul224 to i64, !dbg !6842
  %159 = load i8*, i8** %dst.addr, align 8, !dbg !6842
  %arrayidx226 = getelementptr inbounds i8, i8* %159, i64 %idxprom225, !dbg !6842
  store i8 %conv223, i8* %arrayidx226, align 1, !dbg !6843
  %160 = load i32, i32* %dstStride.addr, align 4, !dbg !6844
  %mul227 = mul nsw i32 7, %160, !dbg !6845
  %idxprom228 = sext i32 %mul227 to i64, !dbg !6846
  %161 = load i8*, i8** %dst.addr, align 8, !dbg !6846
  %arrayidx229 = getelementptr inbounds i8, i8* %161, i64 %idxprom228, !dbg !6846
  %162 = load i8, i8* %arrayidx229, align 1, !dbg !6846
  %conv230 = zext i8 %162 to i32, !dbg !6847
  %163 = load i32, i32* %src5, align 4, !dbg !6848
  %164 = load i32, i32* %src10, align 4, !dbg !6849
  %add231 = add nsw i32 %163, %164, !dbg !6850
  %165 = load i32, i32* %src6, align 4, !dbg !6851
  %166 = load i32, i32* %src9, align 4, !dbg !6852
  %add232 = add nsw i32 %165, %166, !dbg !6853
  %mul233 = mul nsw i32 5, %add232, !dbg !6854
  %sub234 = sub nsw i32 %add231, %mul233, !dbg !6855
  %167 = load i32, i32* %src7, align 4, !dbg !6856
  %168 = load i32, i32* %C1.addr, align 4, !dbg !6857
  %mul235 = mul nsw i32 %167, %168, !dbg !6858
  %add236 = add nsw i32 %sub234, %mul235, !dbg !6859
  %169 = load i32, i32* %src8, align 4, !dbg !6860
  %170 = load i32, i32* %C2.addr, align 4, !dbg !6861
  %mul237 = mul nsw i32 %169, %170, !dbg !6862
  %add238 = add nsw i32 %add236, %mul237, !dbg !6863
  %171 = load i32, i32* %SHIFT.addr, align 4, !dbg !6864
  %sub239 = sub nsw i32 %171, 1, !dbg !6865
  %shl240 = shl i32 1, %sub239, !dbg !6866
  %add241 = add nsw i32 %add238, %shl240, !dbg !6867
  %172 = load i32, i32* %SHIFT.addr, align 4, !dbg !6868
  %shr242 = ashr i32 %add241, %172, !dbg !6869
  %idxprom243 = sext i32 %shr242 to i64, !dbg !6870
  %173 = load i8*, i8** %cm, align 8, !dbg !6870
  %arrayidx244 = getelementptr inbounds i8, i8* %173, i64 %idxprom243, !dbg !6870
  %174 = load i8, i8* %arrayidx244, align 1, !dbg !6870
  %conv245 = zext i8 %174 to i32, !dbg !6870
  %add246 = add nsw i32 %conv230, %conv245, !dbg !6871
  %add247 = add nsw i32 %add246, 1, !dbg !6872
  %shr248 = ashr i32 %add247, 1, !dbg !6873
  %conv249 = trunc i32 %shr248 to i8, !dbg !6874
  %175 = load i32, i32* %dstStride.addr, align 4, !dbg !6875
  %mul250 = mul nsw i32 7, %175, !dbg !6876
  %idxprom251 = sext i32 %mul250 to i64, !dbg !6877
  %176 = load i8*, i8** %dst.addr, align 8, !dbg !6877
  %arrayidx252 = getelementptr inbounds i8, i8* %176, i64 %idxprom251, !dbg !6877
  store i8 %conv249, i8* %arrayidx252, align 1, !dbg !6878
  %177 = load i8*, i8** %dst.addr, align 8, !dbg !6879
  %incdec.ptr = getelementptr inbounds i8, i8* %177, i32 1, !dbg !6879
  store i8* %incdec.ptr, i8** %dst.addr, align 8, !dbg !6879
  %178 = load i8*, i8** %src.addr, align 8, !dbg !6880
  %incdec.ptr253 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !6880
  store i8* %incdec.ptr253, i8** %src.addr, align 8, !dbg !6880
  br label %for.inc, !dbg !6881

for.inc:                                          ; preds = %for.body
  %179 = load i32, i32* %i, align 4, !dbg !6882
  %inc = add nsw i32 %179, 1, !dbg !6882
  store i32 %inc, i32* %i, align 4, !dbg !6882
  br label %for.cond, !dbg !6884, !llvm.loop !6885

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6887
}

; Function Attrs: nounwind uwtable
define internal void @avg_pixels16_xy2_8_c(i8* %block, i8* %pixels, i64 %line_size, i32 %h) #3 !dbg !6889 {
entry:
  %block.addr = alloca i8*, align 8
  %pixels.addr = alloca i8*, align 8
  %line_size.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  store i8* %block, i8** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %block.addr, metadata !6890, metadata !113), !dbg !6891
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !6892, metadata !113), !dbg !6893
  store i64 %line_size, i64* %line_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %line_size.addr, metadata !6894, metadata !113), !dbg !6895
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6896, metadata !113), !dbg !6897
  %0 = load i8*, i8** %block.addr, align 8, !dbg !6898
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !6899
  %2 = load i64, i64* %line_size.addr, align 8, !dbg !6900
  %3 = load i32, i32* %h.addr, align 4, !dbg !6901
  call void @avg_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3), !dbg !6902
  %4 = load i8*, i8** %block.addr, align 8, !dbg !6903
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 8, !dbg !6904
  %5 = load i8*, i8** %pixels.addr, align 8, !dbg !6905
  %add.ptr1 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !6906
  %6 = load i64, i64* %line_size.addr, align 8, !dbg !6907
  %7 = load i32, i32* %h.addr, align 4, !dbg !6908
  call void @avg_pixels8_xy2_8_c(i8* %add.ptr, i8* %add.ptr1, i64 %6, i32 %7), !dbg !6909
  ret void, !dbg !6911
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @avg_pixels8_xy2_8_c(i8* %block, i8* %pixels, i64 %line_size, i32 %h) #4 !dbg !6912 {
entry:
  %block.addr = alloca i8*, align 8
  %pixels.addr = alloca i8*, align 8
  %line_size.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %l0 = alloca i32, align 4
  %h0 = alloca i32, align 4
  %l113 = alloca i32, align 4
  %h1 = alloca i32, align 4
  %a19 = alloca i32, align 4
  %b21 = alloca i32, align 4
  store i8* %block, i8** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %block.addr, metadata !6913, metadata !113), !dbg !6914
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !6915, metadata !113), !dbg !6916
  store i64 %line_size, i64* %line_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %line_size.addr, metadata !6917, metadata !113), !dbg !6918
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6919, metadata !113), !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6921, metadata !113), !dbg !6922
  store i32 0, i32* %j, align 4, !dbg !6923
  br label %for.cond, !dbg !6925

for.cond:                                         ; preds = %for.inc85, %entry
  %0 = load i32, i32* %j, align 4, !dbg !6926
  %cmp = icmp slt i32 %0, 2, !dbg !6929
  br i1 %cmp, label %for.body, label %for.end86, !dbg !6930

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6931, metadata !113), !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6934, metadata !113), !dbg !6935
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !6936
  %2 = bitcast i8* %1 to %union.unaligned_32*, !dbg !6938
  %l = bitcast %union.unaligned_32* %2 to i32*, !dbg !6938
  %3 = load i32, i32* %l, align 1, !dbg !6938
  store i32 %3, i32* %a, align 4, !dbg !6939
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6940, metadata !113), !dbg !6941
  %4 = load i8*, i8** %pixels.addr, align 8, !dbg !6942
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !6943
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6944
  %l1 = bitcast %union.unaligned_32* %5 to i32*, !dbg !6944
  %6 = load i32, i32* %l1, align 1, !dbg !6944
  store i32 %6, i32* %b, align 4, !dbg !6945
  call void @llvm.dbg.declare(metadata i32* %l0, metadata !6946, metadata !113), !dbg !6947
  %7 = load i32, i32* %a, align 4, !dbg !6948
  %conv = zext i32 %7 to i64, !dbg !6948
  %and = and i64 %conv, 50529027, !dbg !6949
  %8 = load i32, i32* %b, align 4, !dbg !6950
  %conv2 = zext i32 %8 to i64, !dbg !6950
  %and3 = and i64 %conv2, 50529027, !dbg !6951
  %add = add i64 %and, %and3, !dbg !6952
  %add4 = add i64 %add, 33686018, !dbg !6953
  %conv5 = trunc i64 %add4 to i32, !dbg !6954
  store i32 %conv5, i32* %l0, align 4, !dbg !6955
  call void @llvm.dbg.declare(metadata i32* %h0, metadata !6956, metadata !113), !dbg !6957
  %9 = load i32, i32* %a, align 4, !dbg !6958
  %conv6 = zext i32 %9 to i64, !dbg !6958
  %and7 = and i64 %conv6, 4244438268, !dbg !6959
  %shr = lshr i64 %and7, 2, !dbg !6960
  %10 = load i32, i32* %b, align 4, !dbg !6961
  %conv8 = zext i32 %10 to i64, !dbg !6961
  %and9 = and i64 %conv8, 4244438268, !dbg !6962
  %shr10 = lshr i64 %and9, 2, !dbg !6963
  %add11 = add i64 %shr, %shr10, !dbg !6964
  %conv12 = trunc i64 %add11 to i32, !dbg !6965
  store i32 %conv12, i32* %h0, align 4, !dbg !6966
  call void @llvm.dbg.declare(metadata i32* %l113, metadata !6967, metadata !113), !dbg !6968
  call void @llvm.dbg.declare(metadata i32* %h1, metadata !6969, metadata !113), !dbg !6970
  %11 = load i64, i64* %line_size.addr, align 8, !dbg !6971
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !6972
  %add.ptr14 = getelementptr inbounds i8, i8* %12, i64 %11, !dbg !6972
  store i8* %add.ptr14, i8** %pixels.addr, align 8, !dbg !6972
  store i32 0, i32* %i, align 4, !dbg !6973
  br label %for.cond15, !dbg !6974

for.cond15:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !6975
  %14 = load i32, i32* %h.addr, align 4, !dbg !6979
  %cmp16 = icmp slt i32 %13, %14, !dbg !6980
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !6981

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !6982, metadata !113), !dbg !6984
  %15 = load i8*, i8** %pixels.addr, align 8, !dbg !6985
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !6987
  %l20 = bitcast %union.unaligned_32* %16 to i32*, !dbg !6987
  %17 = load i32, i32* %l20, align 1, !dbg !6987
  store i32 %17, i32* %a19, align 4, !dbg !6988
  call void @llvm.dbg.declare(metadata i32* %b21, metadata !6989, metadata !113), !dbg !6990
  %18 = load i8*, i8** %pixels.addr, align 8, !dbg !6991
  %add.ptr22 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !6992
  %19 = bitcast i8* %add.ptr22 to %union.unaligned_32*, !dbg !6993
  %l23 = bitcast %union.unaligned_32* %19 to i32*, !dbg !6993
  %20 = load i32, i32* %l23, align 1, !dbg !6993
  store i32 %20, i32* %b21, align 4, !dbg !6994
  %21 = load i32, i32* %a19, align 4, !dbg !6995
  %conv24 = zext i32 %21 to i64, !dbg !6995
  %and25 = and i64 %conv24, 50529027, !dbg !6996
  %22 = load i32, i32* %b21, align 4, !dbg !6997
  %conv26 = zext i32 %22 to i64, !dbg !6997
  %and27 = and i64 %conv26, 50529027, !dbg !6998
  %add28 = add i64 %and25, %and27, !dbg !6999
  %conv29 = trunc i64 %add28 to i32, !dbg !7000
  store i32 %conv29, i32* %l113, align 4, !dbg !7001
  %23 = load i32, i32* %a19, align 4, !dbg !7002
  %conv30 = zext i32 %23 to i64, !dbg !7002
  %and31 = and i64 %conv30, 4244438268, !dbg !7003
  %shr32 = lshr i64 %and31, 2, !dbg !7004
  %24 = load i32, i32* %b21, align 4, !dbg !7005
  %conv33 = zext i32 %24 to i64, !dbg !7005
  %and34 = and i64 %conv33, 4244438268, !dbg !7006
  %shr35 = lshr i64 %and34, 2, !dbg !7007
  %add36 = add i64 %shr32, %shr35, !dbg !7008
  %conv37 = trunc i64 %add36 to i32, !dbg !7009
  store i32 %conv37, i32* %h1, align 4, !dbg !7010
  %25 = load i8*, i8** %block.addr, align 8, !dbg !7011
  %26 = bitcast i8* %25 to i32*, !dbg !7012
  %27 = load i32, i32* %26, align 4, !dbg !7012
  %28 = load i32, i32* %h0, align 4, !dbg !7013
  %29 = load i32, i32* %h1, align 4, !dbg !7014
  %add38 = add i32 %28, %29, !dbg !7015
  %conv39 = zext i32 %add38 to i64, !dbg !7013
  %30 = load i32, i32* %l0, align 4, !dbg !7016
  %31 = load i32, i32* %l113, align 4, !dbg !7017
  %add40 = add i32 %30, %31, !dbg !7018
  %shr41 = lshr i32 %add40, 2, !dbg !7019
  %conv42 = zext i32 %shr41 to i64, !dbg !7020
  %and43 = and i64 %conv42, 252645135, !dbg !7021
  %add44 = add i64 %conv39, %and43, !dbg !7022
  %conv45 = trunc i64 %add44 to i32, !dbg !7013
  %call = call i32 @rnd_avg32(i32 %27, i32 %conv45), !dbg !7023
  %32 = load i8*, i8** %block.addr, align 8, !dbg !7024
  %33 = bitcast i8* %32 to i32*, !dbg !7025
  store i32 %call, i32* %33, align 4, !dbg !7026
  %34 = load i64, i64* %line_size.addr, align 8, !dbg !7027
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !7028
  %add.ptr46 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !7028
  store i8* %add.ptr46, i8** %pixels.addr, align 8, !dbg !7028
  %36 = load i64, i64* %line_size.addr, align 8, !dbg !7029
  %37 = load i8*, i8** %block.addr, align 8, !dbg !7030
  %add.ptr47 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !7030
  store i8* %add.ptr47, i8** %block.addr, align 8, !dbg !7030
  %38 = load i8*, i8** %pixels.addr, align 8, !dbg !7031
  %39 = bitcast i8* %38 to %union.unaligned_32*, !dbg !7032
  %l48 = bitcast %union.unaligned_32* %39 to i32*, !dbg !7032
  %40 = load i32, i32* %l48, align 1, !dbg !7032
  store i32 %40, i32* %a19, align 4, !dbg !7033
  %41 = load i8*, i8** %pixels.addr, align 8, !dbg !7034
  %add.ptr49 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !7035
  %42 = bitcast i8* %add.ptr49 to %union.unaligned_32*, !dbg !7036
  %l50 = bitcast %union.unaligned_32* %42 to i32*, !dbg !7036
  %43 = load i32, i32* %l50, align 1, !dbg !7036
  store i32 %43, i32* %b21, align 4, !dbg !7037
  %44 = load i32, i32* %a19, align 4, !dbg !7038
  %conv51 = zext i32 %44 to i64, !dbg !7038
  %and52 = and i64 %conv51, 50529027, !dbg !7039
  %45 = load i32, i32* %b21, align 4, !dbg !7040
  %conv53 = zext i32 %45 to i64, !dbg !7040
  %and54 = and i64 %conv53, 50529027, !dbg !7041
  %add55 = add i64 %and52, %and54, !dbg !7042
  %add56 = add i64 %add55, 33686018, !dbg !7043
  %conv57 = trunc i64 %add56 to i32, !dbg !7044
  store i32 %conv57, i32* %l0, align 4, !dbg !7045
  %46 = load i32, i32* %a19, align 4, !dbg !7046
  %conv58 = zext i32 %46 to i64, !dbg !7046
  %and59 = and i64 %conv58, 4244438268, !dbg !7047
  %shr60 = lshr i64 %and59, 2, !dbg !7048
  %47 = load i32, i32* %b21, align 4, !dbg !7049
  %conv61 = zext i32 %47 to i64, !dbg !7049
  %and62 = and i64 %conv61, 4244438268, !dbg !7050
  %shr63 = lshr i64 %and62, 2, !dbg !7051
  %add64 = add i64 %shr60, %shr63, !dbg !7052
  %conv65 = trunc i64 %add64 to i32, !dbg !7053
  store i32 %conv65, i32* %h0, align 4, !dbg !7054
  %48 = load i8*, i8** %block.addr, align 8, !dbg !7055
  %49 = bitcast i8* %48 to i32*, !dbg !7056
  %50 = load i32, i32* %49, align 4, !dbg !7056
  %51 = load i32, i32* %h0, align 4, !dbg !7057
  %52 = load i32, i32* %h1, align 4, !dbg !7058
  %add66 = add i32 %51, %52, !dbg !7059
  %conv67 = zext i32 %add66 to i64, !dbg !7057
  %53 = load i32, i32* %l0, align 4, !dbg !7060
  %54 = load i32, i32* %l113, align 4, !dbg !7061
  %add68 = add i32 %53, %54, !dbg !7062
  %shr69 = lshr i32 %add68, 2, !dbg !7063
  %conv70 = zext i32 %shr69 to i64, !dbg !7064
  %and71 = and i64 %conv70, 252645135, !dbg !7065
  %add72 = add i64 %conv67, %and71, !dbg !7066
  %conv73 = trunc i64 %add72 to i32, !dbg !7057
  %call74 = call i32 @rnd_avg32(i32 %50, i32 %conv73), !dbg !7067
  %55 = load i8*, i8** %block.addr, align 8, !dbg !7069
  %56 = bitcast i8* %55 to i32*, !dbg !7070
  store i32 %call74, i32* %56, align 4, !dbg !7071
  %57 = load i64, i64* %line_size.addr, align 8, !dbg !7072
  %58 = load i8*, i8** %pixels.addr, align 8, !dbg !7073
  %add.ptr75 = getelementptr inbounds i8, i8* %58, i64 %57, !dbg !7073
  store i8* %add.ptr75, i8** %pixels.addr, align 8, !dbg !7073
  %59 = load i64, i64* %line_size.addr, align 8, !dbg !7074
  %60 = load i8*, i8** %block.addr, align 8, !dbg !7075
  %add.ptr76 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !7075
  store i8* %add.ptr76, i8** %block.addr, align 8, !dbg !7075
  br label %for.inc, !dbg !7076

for.inc:                                          ; preds = %for.body18
  %61 = load i32, i32* %i, align 4, !dbg !7077
  %add77 = add nsw i32 %61, 2, !dbg !7077
  store i32 %add77, i32* %i, align 4, !dbg !7077
  br label %for.cond15, !dbg !7079, !llvm.loop !7080

for.end:                                          ; preds = %for.cond15
  %62 = load i64, i64* %line_size.addr, align 8, !dbg !7082
  %63 = load i32, i32* %h.addr, align 4, !dbg !7084
  %add78 = add nsw i32 %63, 1, !dbg !7085
  %conv79 = sext i32 %add78 to i64, !dbg !7086
  %mul = mul nsw i64 %62, %conv79, !dbg !7087
  %sub = sub nsw i64 4, %mul, !dbg !7088
  %64 = load i8*, i8** %pixels.addr, align 8, !dbg !7089
  %add.ptr80 = getelementptr inbounds i8, i8* %64, i64 %sub, !dbg !7089
  store i8* %add.ptr80, i8** %pixels.addr, align 8, !dbg !7089
  %65 = load i64, i64* %line_size.addr, align 8, !dbg !7090
  %66 = load i32, i32* %h.addr, align 4, !dbg !7091
  %conv81 = sext i32 %66 to i64, !dbg !7091
  %mul82 = mul nsw i64 %65, %conv81, !dbg !7092
  %sub83 = sub nsw i64 4, %mul82, !dbg !7093
  %67 = load i8*, i8** %block.addr, align 8, !dbg !7094
  %add.ptr84 = getelementptr inbounds i8, i8* %67, i64 %sub83, !dbg !7094
  store i8* %add.ptr84, i8** %block.addr, align 8, !dbg !7094
  br label %for.inc85, !dbg !7095

for.inc85:                                        ; preds = %for.end
  %68 = load i32, i32* %j, align 4, !dbg !7096
  %inc = add nsw i32 %68, 1, !dbg !7096
  store i32 %inc, i32* %j, align 4, !dbg !7096
  br label %for.cond, !dbg !7098, !llvm.loop !7099

for.end86:                                        ; preds = %for.cond
  ret void, !dbg !7101
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rnd_avg32(i32 %a, i32 %b) #4 !dbg !7103 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7107, metadata !113), !dbg !7108
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7109, metadata !113), !dbg !7110
  %0 = load i32, i32* %a.addr, align 4, !dbg !7111
  %1 = load i32, i32* %b.addr, align 4, !dbg !7112
  %or = or i32 %0, %1, !dbg !7113
  %conv = zext i32 %or to i64, !dbg !7114
  %2 = load i32, i32* %a.addr, align 4, !dbg !7115
  %3 = load i32, i32* %b.addr, align 4, !dbg !7116
  %xor = xor i32 %2, %3, !dbg !7117
  %conv1 = zext i32 %xor to i64, !dbg !7118
  %and = and i64 %conv1, -16843010, !dbg !7119
  %shr = lshr i64 %and, 1, !dbg !7120
  %sub = sub i64 %conv, %shr, !dbg !7121
  %conv2 = trunc i64 %sub to i32, !dbg !7114
  ret i32 %conv2, !dbg !7122
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!30, !31}
!llvm.ident = !{!32}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, globals: !14)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--rv40dsp.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{}
!3 = !{!4, !13}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!6 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !7, line: 221, size: 32, align: 8, elements: !8)
!7 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8 = !{!9}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !6, file: !7, line: 221, baseType: !10, size: 32, align: 32)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !11, line: 51, baseType: !12)
!11 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!12 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!14 = !{!15, !22, !29}
!15 = distinct !DIGlobalVariable(name: "rv40_bias", scope: !0, file: !16, line: 287, type: !17, isLocal: true, isDefinition: true, variable: [4 x [4 x i32]]* @rv40_bias)
!16 = !DIFile(filename: "libavcodec/rv40dsp.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 512, align: 32, elements: !20)
!18 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!19 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!20 = !{!21, !21}
!21 = !DISubrange(count: 4)
!22 = distinct !DIGlobalVariable(name: "rv40_dither_l", scope: !0, file: !16, line: 413, type: !23, isLocal: true, isDefinition: true, variable: [16 x i8]* @rv40_dither_l)
!23 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 128, align: 8, elements: !27)
!24 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !11, line: 48, baseType: !26)
!26 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!27 = !{!28}
!28 = !DISubrange(count: 16)
!29 = distinct !DIGlobalVariable(name: "rv40_dither_r", scope: !0, file: !16, line: 421, type: !23, isLocal: true, isDefinition: true, variable: [16 x i8]* @rv40_dither_r)
!30 = !{i32 2, !"Dwarf Version", i32 4}
!31 = !{i32 2, !"Debug Info Version", i32 3}
!32 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!33 = distinct !DISubprogram(name: "ff_rv40dsp_init", scope: !16, file: !16, line: 620, type: !34, isLocal: false, isDefinition: true, scopeLine: 621, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!34 = !DISubroutineType(types: !35)
!35 = !{null, !36}
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "RV34DSPContext", file: !38, line: 75, baseType: !39)
!38 = !DIFile(filename: "libavcodec/rv34dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!39 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RV34DSPContext", file: !38, line: 57, size: 9472, align: 64, elements: !40)
!40 = !{!41, !54, !55, !64, !65, !73, !81, !82, !87, !92, !99, !105}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !39, file: !38, line: 58, baseType: !42, size: 4096, align: 64)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 4096, align: 64, elements: !53)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !44, line: 65, baseType: !45)
!44 = !DIFile(filename: "libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!46 = !DISubroutineType(types: !47)
!47 = !{null, !48, !49, !50}
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !51, line: 149, baseType: !52)
!51 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!52 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!53 = !{!21, !28}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !39, file: !38, line: 59, baseType: !42, size: 4096, align: 64, offset: 4096)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "put_chroma_pixels_tab", scope: !39, file: !38, line: 60, baseType: !56, size: 192, align: 64, offset: 8192)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 192, align: 64, elements: !62)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_chroma_mc_func", file: !58, line: 25, baseType: !59)
!58 = !DIFile(filename: "libavcodec/h264chroma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64, align: 64)
!60 = !DISubroutineType(types: !61)
!61 = !{null, !48, !48, !50, !19, !19, !19}
!62 = !{!63}
!63 = !DISubrange(count: 3)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "avg_chroma_pixels_tab", scope: !39, file: !38, line: 61, baseType: !56, size: 192, align: 64, offset: 8384)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "rv40_weight_pixels_tab", scope: !39, file: !38, line: 67, baseType: !66, size: 256, align: 64, offset: 8576)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, align: 64, elements: !71)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv40_weight_func", file: !38, line: 33, baseType: !68)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64, align: 64)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !48, !48, !48, !19, !19, !50}
!71 = !{!72, !72}
!72 = !DISubrange(count: 2)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "rv34_inv_transform", scope: !39, file: !38, line: 68, baseType: !74, size: 64, align: 64, offset: 8832)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv34_inv_transform_func", file: !38, line: 38, baseType: !75)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64, align: 64)
!76 = !DISubroutineType(types: !77)
!77 = !{null, !78}
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !11, line: 37, baseType: !80)
!80 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "rv34_inv_transform_dc", scope: !39, file: !38, line: 69, baseType: !74, size: 64, align: 64, offset: 8896)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "rv34_idct_add", scope: !39, file: !38, line: 70, baseType: !83, size: 64, align: 64, offset: 8960)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv34_idct_add_func", file: !38, line: 40, baseType: !84)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DISubroutineType(types: !86)
!86 = !{null, !48, !50, !78}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "rv34_idct_dc_add", scope: !39, file: !38, line: 71, baseType: !88, size: 64, align: 64, offset: 9024)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv34_idct_dc_add_func", file: !38, line: 41, baseType: !89)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, align: 64)
!90 = !DISubroutineType(types: !91)
!91 = !{null, !48, !50, !19}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rv40_weak_loop_filter", scope: !39, file: !38, line: 72, baseType: !93, size: 128, align: 64, offset: 9088)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 128, align: 64, elements: !98)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv40_weak_loop_filter_func", file: !38, line: 44, baseType: !95)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64, align: 64)
!96 = !DISubroutineType(types: !97)
!97 = !{null, !48, !50, !19, !19, !19, !19, !19, !19, !19}
!98 = !{!72}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "rv40_strong_loop_filter", scope: !39, file: !38, line: 73, baseType: !100, size: 128, align: 64, offset: 9216)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 128, align: 64, elements: !98)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv40_strong_loop_filter_func", file: !38, line: 49, baseType: !102)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64, align: 64)
!103 = !DISubroutineType(types: !104)
!104 = !{null, !48, !50, !19, !19, !19, !19}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "rv40_loop_filter_strength", scope: !39, file: !38, line: 74, baseType: !106, size: 128, align: 64, offset: 9344)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 128, align: 64, elements: !98)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "rv40_loop_filter_strength_func", file: !38, line: 53, baseType: !108)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64, align: 64)
!109 = !DISubroutineType(types: !110)
!110 = !{!19, !48, !50, !19, !19, !19, !111, !111}
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!112 = !DILocalVariable(name: "c", arg: 1, scope: !33, file: !16, line: 620, type: !36)
!113 = !DIExpression()
!114 = !DILocation(line: 620, column: 60, scope: !33)
!115 = !DILocalVariable(name: "qpel", scope: !33, file: !16, line: 622, type: !116)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264QpelContext", file: !117, line: 30, baseType: !118)
!117 = !DIFile(filename: "libavcodec/h264qpel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264QpelContext", file: !117, line: 27, size: 8192, align: 64, elements: !119)
!119 = !{!120, !121}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "put_h264_qpel_pixels_tab", scope: !118, file: !117, line: 28, baseType: !42, size: 4096, align: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "avg_h264_qpel_pixels_tab", scope: !118, file: !117, line: 29, baseType: !42, size: 4096, align: 64, offset: 4096)
!122 = !DILocation(line: 622, column: 21, scope: !33)
!123 = !DILocation(line: 624, column: 21, scope: !33)
!124 = !DILocation(line: 624, column: 5, scope: !33)
!125 = !DILocation(line: 625, column: 5, scope: !33)
!126 = !DILocation(line: 627, column: 37, scope: !33)
!127 = !DILocation(line: 627, column: 32, scope: !33)
!128 = !DILocation(line: 627, column: 5, scope: !33)
!129 = !DILocation(line: 627, column: 8, scope: !33)
!130 = !DILocation(line: 627, column: 30, scope: !33)
!131 = !DILocation(line: 628, column: 5, scope: !33)
!132 = !DILocation(line: 628, column: 8, scope: !33)
!133 = !DILocation(line: 628, column: 30, scope: !33)
!134 = !DILocation(line: 629, column: 37, scope: !33)
!135 = !DILocation(line: 629, column: 32, scope: !33)
!136 = !DILocation(line: 629, column: 5, scope: !33)
!137 = !DILocation(line: 629, column: 8, scope: !33)
!138 = !DILocation(line: 629, column: 30, scope: !33)
!139 = !DILocation(line: 630, column: 5, scope: !33)
!140 = !DILocation(line: 630, column: 8, scope: !33)
!141 = !DILocation(line: 630, column: 30, scope: !33)
!142 = !DILocation(line: 631, column: 5, scope: !33)
!143 = !DILocation(line: 631, column: 8, scope: !33)
!144 = !DILocation(line: 631, column: 30, scope: !33)
!145 = !DILocation(line: 632, column: 5, scope: !33)
!146 = !DILocation(line: 632, column: 8, scope: !33)
!147 = !DILocation(line: 632, column: 30, scope: !33)
!148 = !DILocation(line: 633, column: 5, scope: !33)
!149 = !DILocation(line: 633, column: 8, scope: !33)
!150 = !DILocation(line: 633, column: 30, scope: !33)
!151 = !DILocation(line: 634, column: 5, scope: !33)
!152 = !DILocation(line: 634, column: 8, scope: !33)
!153 = !DILocation(line: 634, column: 30, scope: !33)
!154 = !DILocation(line: 635, column: 37, scope: !33)
!155 = !DILocation(line: 635, column: 32, scope: !33)
!156 = !DILocation(line: 635, column: 5, scope: !33)
!157 = !DILocation(line: 635, column: 8, scope: !33)
!158 = !DILocation(line: 635, column: 30, scope: !33)
!159 = !DILocation(line: 636, column: 5, scope: !33)
!160 = !DILocation(line: 636, column: 8, scope: !33)
!161 = !DILocation(line: 636, column: 30, scope: !33)
!162 = !DILocation(line: 637, column: 5, scope: !33)
!163 = !DILocation(line: 637, column: 8, scope: !33)
!164 = !DILocation(line: 637, column: 30, scope: !33)
!165 = !DILocation(line: 638, column: 5, scope: !33)
!166 = !DILocation(line: 638, column: 8, scope: !33)
!167 = !DILocation(line: 638, column: 30, scope: !33)
!168 = !DILocation(line: 639, column: 5, scope: !33)
!169 = !DILocation(line: 639, column: 8, scope: !33)
!170 = !DILocation(line: 639, column: 30, scope: !33)
!171 = !DILocation(line: 640, column: 5, scope: !33)
!172 = !DILocation(line: 640, column: 8, scope: !33)
!173 = !DILocation(line: 640, column: 30, scope: !33)
!174 = !DILocation(line: 641, column: 5, scope: !33)
!175 = !DILocation(line: 641, column: 8, scope: !33)
!176 = !DILocation(line: 641, column: 30, scope: !33)
!177 = !DILocation(line: 642, column: 5, scope: !33)
!178 = !DILocation(line: 642, column: 8, scope: !33)
!179 = !DILocation(line: 642, column: 30, scope: !33)
!180 = !DILocation(line: 643, column: 37, scope: !33)
!181 = !DILocation(line: 643, column: 32, scope: !33)
!182 = !DILocation(line: 643, column: 5, scope: !33)
!183 = !DILocation(line: 643, column: 8, scope: !33)
!184 = !DILocation(line: 643, column: 30, scope: !33)
!185 = !DILocation(line: 644, column: 5, scope: !33)
!186 = !DILocation(line: 644, column: 8, scope: !33)
!187 = !DILocation(line: 644, column: 30, scope: !33)
!188 = !DILocation(line: 645, column: 37, scope: !33)
!189 = !DILocation(line: 645, column: 32, scope: !33)
!190 = !DILocation(line: 645, column: 5, scope: !33)
!191 = !DILocation(line: 645, column: 8, scope: !33)
!192 = !DILocation(line: 645, column: 30, scope: !33)
!193 = !DILocation(line: 646, column: 5, scope: !33)
!194 = !DILocation(line: 646, column: 8, scope: !33)
!195 = !DILocation(line: 646, column: 30, scope: !33)
!196 = !DILocation(line: 647, column: 5, scope: !33)
!197 = !DILocation(line: 647, column: 8, scope: !33)
!198 = !DILocation(line: 647, column: 30, scope: !33)
!199 = !DILocation(line: 648, column: 5, scope: !33)
!200 = !DILocation(line: 648, column: 8, scope: !33)
!201 = !DILocation(line: 648, column: 30, scope: !33)
!202 = !DILocation(line: 649, column: 5, scope: !33)
!203 = !DILocation(line: 649, column: 8, scope: !33)
!204 = !DILocation(line: 649, column: 30, scope: !33)
!205 = !DILocation(line: 650, column: 5, scope: !33)
!206 = !DILocation(line: 650, column: 8, scope: !33)
!207 = !DILocation(line: 650, column: 30, scope: !33)
!208 = !DILocation(line: 651, column: 37, scope: !33)
!209 = !DILocation(line: 651, column: 32, scope: !33)
!210 = !DILocation(line: 651, column: 5, scope: !33)
!211 = !DILocation(line: 651, column: 8, scope: !33)
!212 = !DILocation(line: 651, column: 30, scope: !33)
!213 = !DILocation(line: 652, column: 5, scope: !33)
!214 = !DILocation(line: 652, column: 8, scope: !33)
!215 = !DILocation(line: 652, column: 30, scope: !33)
!216 = !DILocation(line: 653, column: 5, scope: !33)
!217 = !DILocation(line: 653, column: 8, scope: !33)
!218 = !DILocation(line: 653, column: 30, scope: !33)
!219 = !DILocation(line: 654, column: 5, scope: !33)
!220 = !DILocation(line: 654, column: 8, scope: !33)
!221 = !DILocation(line: 654, column: 30, scope: !33)
!222 = !DILocation(line: 655, column: 5, scope: !33)
!223 = !DILocation(line: 655, column: 8, scope: !33)
!224 = !DILocation(line: 655, column: 30, scope: !33)
!225 = !DILocation(line: 656, column: 5, scope: !33)
!226 = !DILocation(line: 656, column: 8, scope: !33)
!227 = !DILocation(line: 656, column: 30, scope: !33)
!228 = !DILocation(line: 657, column: 5, scope: !33)
!229 = !DILocation(line: 657, column: 8, scope: !33)
!230 = !DILocation(line: 657, column: 30, scope: !33)
!231 = !DILocation(line: 658, column: 5, scope: !33)
!232 = !DILocation(line: 658, column: 8, scope: !33)
!233 = !DILocation(line: 658, column: 30, scope: !33)
!234 = !DILocation(line: 659, column: 37, scope: !33)
!235 = !DILocation(line: 659, column: 32, scope: !33)
!236 = !DILocation(line: 659, column: 5, scope: !33)
!237 = !DILocation(line: 659, column: 8, scope: !33)
!238 = !DILocation(line: 659, column: 30, scope: !33)
!239 = !DILocation(line: 660, column: 5, scope: !33)
!240 = !DILocation(line: 660, column: 8, scope: !33)
!241 = !DILocation(line: 660, column: 30, scope: !33)
!242 = !DILocation(line: 661, column: 37, scope: !33)
!243 = !DILocation(line: 661, column: 32, scope: !33)
!244 = !DILocation(line: 661, column: 5, scope: !33)
!245 = !DILocation(line: 661, column: 8, scope: !33)
!246 = !DILocation(line: 661, column: 30, scope: !33)
!247 = !DILocation(line: 662, column: 5, scope: !33)
!248 = !DILocation(line: 662, column: 8, scope: !33)
!249 = !DILocation(line: 662, column: 30, scope: !33)
!250 = !DILocation(line: 663, column: 5, scope: !33)
!251 = !DILocation(line: 663, column: 8, scope: !33)
!252 = !DILocation(line: 663, column: 30, scope: !33)
!253 = !DILocation(line: 664, column: 5, scope: !33)
!254 = !DILocation(line: 664, column: 8, scope: !33)
!255 = !DILocation(line: 664, column: 30, scope: !33)
!256 = !DILocation(line: 665, column: 5, scope: !33)
!257 = !DILocation(line: 665, column: 8, scope: !33)
!258 = !DILocation(line: 665, column: 30, scope: !33)
!259 = !DILocation(line: 666, column: 5, scope: !33)
!260 = !DILocation(line: 666, column: 8, scope: !33)
!261 = !DILocation(line: 666, column: 30, scope: !33)
!262 = !DILocation(line: 667, column: 37, scope: !33)
!263 = !DILocation(line: 667, column: 32, scope: !33)
!264 = !DILocation(line: 667, column: 5, scope: !33)
!265 = !DILocation(line: 667, column: 8, scope: !33)
!266 = !DILocation(line: 667, column: 30, scope: !33)
!267 = !DILocation(line: 668, column: 5, scope: !33)
!268 = !DILocation(line: 668, column: 8, scope: !33)
!269 = !DILocation(line: 668, column: 30, scope: !33)
!270 = !DILocation(line: 669, column: 5, scope: !33)
!271 = !DILocation(line: 669, column: 8, scope: !33)
!272 = !DILocation(line: 669, column: 30, scope: !33)
!273 = !DILocation(line: 670, column: 5, scope: !33)
!274 = !DILocation(line: 670, column: 8, scope: !33)
!275 = !DILocation(line: 670, column: 30, scope: !33)
!276 = !DILocation(line: 671, column: 5, scope: !33)
!277 = !DILocation(line: 671, column: 8, scope: !33)
!278 = !DILocation(line: 671, column: 30, scope: !33)
!279 = !DILocation(line: 672, column: 5, scope: !33)
!280 = !DILocation(line: 672, column: 8, scope: !33)
!281 = !DILocation(line: 672, column: 30, scope: !33)
!282 = !DILocation(line: 673, column: 5, scope: !33)
!283 = !DILocation(line: 673, column: 8, scope: !33)
!284 = !DILocation(line: 673, column: 30, scope: !33)
!285 = !DILocation(line: 674, column: 5, scope: !33)
!286 = !DILocation(line: 674, column: 8, scope: !33)
!287 = !DILocation(line: 674, column: 30, scope: !33)
!288 = !DILocation(line: 675, column: 37, scope: !33)
!289 = !DILocation(line: 675, column: 32, scope: !33)
!290 = !DILocation(line: 675, column: 5, scope: !33)
!291 = !DILocation(line: 675, column: 8, scope: !33)
!292 = !DILocation(line: 675, column: 30, scope: !33)
!293 = !DILocation(line: 676, column: 5, scope: !33)
!294 = !DILocation(line: 676, column: 8, scope: !33)
!295 = !DILocation(line: 676, column: 30, scope: !33)
!296 = !DILocation(line: 677, column: 37, scope: !33)
!297 = !DILocation(line: 677, column: 32, scope: !33)
!298 = !DILocation(line: 677, column: 5, scope: !33)
!299 = !DILocation(line: 677, column: 8, scope: !33)
!300 = !DILocation(line: 677, column: 30, scope: !33)
!301 = !DILocation(line: 678, column: 5, scope: !33)
!302 = !DILocation(line: 678, column: 8, scope: !33)
!303 = !DILocation(line: 678, column: 30, scope: !33)
!304 = !DILocation(line: 679, column: 5, scope: !33)
!305 = !DILocation(line: 679, column: 8, scope: !33)
!306 = !DILocation(line: 679, column: 30, scope: !33)
!307 = !DILocation(line: 680, column: 5, scope: !33)
!308 = !DILocation(line: 680, column: 8, scope: !33)
!309 = !DILocation(line: 680, column: 30, scope: !33)
!310 = !DILocation(line: 681, column: 5, scope: !33)
!311 = !DILocation(line: 681, column: 8, scope: !33)
!312 = !DILocation(line: 681, column: 30, scope: !33)
!313 = !DILocation(line: 682, column: 5, scope: !33)
!314 = !DILocation(line: 682, column: 8, scope: !33)
!315 = !DILocation(line: 682, column: 30, scope: !33)
!316 = !DILocation(line: 683, column: 37, scope: !33)
!317 = !DILocation(line: 683, column: 32, scope: !33)
!318 = !DILocation(line: 683, column: 5, scope: !33)
!319 = !DILocation(line: 683, column: 8, scope: !33)
!320 = !DILocation(line: 683, column: 30, scope: !33)
!321 = !DILocation(line: 684, column: 5, scope: !33)
!322 = !DILocation(line: 684, column: 8, scope: !33)
!323 = !DILocation(line: 684, column: 30, scope: !33)
!324 = !DILocation(line: 685, column: 5, scope: !33)
!325 = !DILocation(line: 685, column: 8, scope: !33)
!326 = !DILocation(line: 685, column: 30, scope: !33)
!327 = !DILocation(line: 686, column: 5, scope: !33)
!328 = !DILocation(line: 686, column: 8, scope: !33)
!329 = !DILocation(line: 686, column: 30, scope: !33)
!330 = !DILocation(line: 687, column: 5, scope: !33)
!331 = !DILocation(line: 687, column: 8, scope: !33)
!332 = !DILocation(line: 687, column: 30, scope: !33)
!333 = !DILocation(line: 688, column: 5, scope: !33)
!334 = !DILocation(line: 688, column: 8, scope: !33)
!335 = !DILocation(line: 688, column: 30, scope: !33)
!336 = !DILocation(line: 689, column: 5, scope: !33)
!337 = !DILocation(line: 689, column: 8, scope: !33)
!338 = !DILocation(line: 689, column: 30, scope: !33)
!339 = !DILocation(line: 690, column: 5, scope: !33)
!340 = !DILocation(line: 690, column: 8, scope: !33)
!341 = !DILocation(line: 690, column: 30, scope: !33)
!342 = !DILocation(line: 692, column: 5, scope: !33)
!343 = !DILocation(line: 692, column: 8, scope: !33)
!344 = !DILocation(line: 692, column: 33, scope: !33)
!345 = !DILocation(line: 693, column: 5, scope: !33)
!346 = !DILocation(line: 693, column: 8, scope: !33)
!347 = !DILocation(line: 693, column: 33, scope: !33)
!348 = !DILocation(line: 694, column: 5, scope: !33)
!349 = !DILocation(line: 694, column: 8, scope: !33)
!350 = !DILocation(line: 694, column: 33, scope: !33)
!351 = !DILocation(line: 695, column: 5, scope: !33)
!352 = !DILocation(line: 695, column: 8, scope: !33)
!353 = !DILocation(line: 695, column: 33, scope: !33)
!354 = !DILocation(line: 697, column: 5, scope: !33)
!355 = !DILocation(line: 697, column: 8, scope: !33)
!356 = !DILocation(line: 697, column: 37, scope: !33)
!357 = !DILocation(line: 698, column: 5, scope: !33)
!358 = !DILocation(line: 698, column: 8, scope: !33)
!359 = !DILocation(line: 698, column: 37, scope: !33)
!360 = !DILocation(line: 699, column: 5, scope: !33)
!361 = !DILocation(line: 699, column: 8, scope: !33)
!362 = !DILocation(line: 699, column: 37, scope: !33)
!363 = !DILocation(line: 700, column: 5, scope: !33)
!364 = !DILocation(line: 700, column: 8, scope: !33)
!365 = !DILocation(line: 700, column: 37, scope: !33)
!366 = !DILocation(line: 702, column: 5, scope: !33)
!367 = !DILocation(line: 702, column: 8, scope: !33)
!368 = !DILocation(line: 702, column: 33, scope: !33)
!369 = !DILocation(line: 703, column: 5, scope: !33)
!370 = !DILocation(line: 703, column: 8, scope: !33)
!371 = !DILocation(line: 703, column: 33, scope: !33)
!372 = !DILocation(line: 704, column: 5, scope: !33)
!373 = !DILocation(line: 704, column: 8, scope: !33)
!374 = !DILocation(line: 704, column: 35, scope: !33)
!375 = !DILocation(line: 705, column: 5, scope: !33)
!376 = !DILocation(line: 705, column: 8, scope: !33)
!377 = !DILocation(line: 705, column: 35, scope: !33)
!378 = !DILocation(line: 706, column: 5, scope: !33)
!379 = !DILocation(line: 706, column: 8, scope: !33)
!380 = !DILocation(line: 706, column: 37, scope: !33)
!381 = !DILocation(line: 707, column: 5, scope: !33)
!382 = !DILocation(line: 707, column: 8, scope: !33)
!383 = !DILocation(line: 707, column: 37, scope: !33)
!384 = !DILocation(line: 714, column: 29, scope: !385)
!385 = distinct !DILexicalBlock(scope: !33, file: !16, line: 713, column: 9)
!386 = !DILocation(line: 714, column: 9, scope: !385)
!387 = !DILocation(line: 715, column: 1, scope: !33)
!388 = distinct !DISubprogram(name: "put_rv40_qpel16_mc10_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!389 = !DILocalVariable(name: "dst", arg: 1, scope: !388, file: !16, line: 206, type: !48)
!390 = !DILocation(line: 206, column: 45, scope: !388)
!391 = !DILocalVariable(name: "src", arg: 2, scope: !388, file: !16, line: 206, type: !49)
!392 = !DILocation(line: 206, column: 65, scope: !388)
!393 = !DILocalVariable(name: "stride", arg: 3, scope: !388, file: !16, line: 206, type: !50)
!394 = !DILocation(line: 206, column: 80, scope: !388)
!395 = !DILocation(line: 206, column: 115, scope: !388)
!396 = !DILocation(line: 206, column: 120, scope: !388)
!397 = !DILocation(line: 206, column: 125, scope: !388)
!398 = !DILocation(line: 206, column: 133, scope: !388)
!399 = !DILocation(line: 206, column: 89, scope: !388)
!400 = !DILocation(line: 206, column: 156, scope: !388)
!401 = distinct !DISubprogram(name: "put_rv40_qpel16_mc30_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!402 = !DILocalVariable(name: "dst", arg: 1, scope: !401, file: !16, line: 206, type: !48)
!403 = !DILocation(line: 206, column: 201, scope: !401)
!404 = !DILocalVariable(name: "src", arg: 2, scope: !401, file: !16, line: 206, type: !49)
!405 = !DILocation(line: 206, column: 221, scope: !401)
!406 = !DILocalVariable(name: "stride", arg: 3, scope: !401, file: !16, line: 206, type: !50)
!407 = !DILocation(line: 206, column: 236, scope: !401)
!408 = !DILocation(line: 206, column: 271, scope: !401)
!409 = !DILocation(line: 206, column: 276, scope: !401)
!410 = !DILocation(line: 206, column: 281, scope: !401)
!411 = !DILocation(line: 206, column: 289, scope: !401)
!412 = !DILocation(line: 206, column: 245, scope: !401)
!413 = !DILocation(line: 206, column: 312, scope: !401)
!414 = distinct !DISubprogram(name: "put_rv40_qpel16_mc01_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!415 = !DILocalVariable(name: "dst", arg: 1, scope: !414, file: !16, line: 206, type: !48)
!416 = !DILocation(line: 206, column: 357, scope: !414)
!417 = !DILocalVariable(name: "src", arg: 2, scope: !414, file: !16, line: 206, type: !49)
!418 = !DILocation(line: 206, column: 377, scope: !414)
!419 = !DILocalVariable(name: "stride", arg: 3, scope: !414, file: !16, line: 206, type: !50)
!420 = !DILocation(line: 206, column: 392, scope: !414)
!421 = !DILocation(line: 206, column: 427, scope: !414)
!422 = !DILocation(line: 206, column: 432, scope: !414)
!423 = !DILocation(line: 206, column: 437, scope: !414)
!424 = !DILocation(line: 206, column: 445, scope: !414)
!425 = !DILocation(line: 206, column: 401, scope: !414)
!426 = !DILocation(line: 206, column: 468, scope: !414)
!427 = distinct !DISubprogram(name: "put_rv40_qpel16_mc11_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!428 = !DILocalVariable(name: "dst", arg: 1, scope: !427, file: !16, line: 206, type: !48)
!429 = !DILocation(line: 206, column: 513, scope: !427)
!430 = !DILocalVariable(name: "src", arg: 2, scope: !427, file: !16, line: 206, type: !49)
!431 = !DILocation(line: 206, column: 533, scope: !427)
!432 = !DILocalVariable(name: "stride", arg: 3, scope: !427, file: !16, line: 206, type: !50)
!433 = !DILocation(line: 206, column: 548, scope: !427)
!434 = !DILocalVariable(name: "full", scope: !427, file: !16, line: 206, type: !435)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 2688, align: 8, elements: !436)
!436 = !{!437}
!437 = !DISubrange(count: 336)
!438 = !DILocation(line: 206, column: 565, scope: !427)
!439 = !DILocalVariable(name: "full_mid", scope: !427, file: !16, line: 206, type: !440)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!441 = !DILocation(line: 206, column: 599, scope: !427)
!442 = !DILocation(line: 206, column: 610, scope: !427)
!443 = !DILocation(line: 206, column: 615, scope: !427)
!444 = !DILocation(line: 206, column: 649, scope: !427)
!445 = !DILocation(line: 206, column: 655, scope: !427)
!446 = !DILocation(line: 206, column: 663, scope: !427)
!447 = !DILocation(line: 206, column: 662, scope: !427)
!448 = !DILocation(line: 206, column: 659, scope: !427)
!449 = !DILocation(line: 206, column: 675, scope: !427)
!450 = !DILocation(line: 206, column: 623, scope: !427)
!451 = !DILocation(line: 206, column: 728, scope: !427)
!452 = !DILocation(line: 206, column: 733, scope: !427)
!453 = !DILocation(line: 206, column: 743, scope: !427)
!454 = !DILocation(line: 206, column: 702, scope: !455)
!455 = !DILexicalBlockFile(scope: !427, file: !16, discriminator: 1)
!456 = !DILocation(line: 206, column: 770, scope: !427)
!457 = distinct !DISubprogram(name: "put_rv40_qpel16_mc21_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!458 = !DILocalVariable(name: "dst", arg: 1, scope: !457, file: !16, line: 206, type: !48)
!459 = !DILocation(line: 206, column: 815, scope: !457)
!460 = !DILocalVariable(name: "src", arg: 2, scope: !457, file: !16, line: 206, type: !49)
!461 = !DILocation(line: 206, column: 835, scope: !457)
!462 = !DILocalVariable(name: "stride", arg: 3, scope: !457, file: !16, line: 206, type: !50)
!463 = !DILocation(line: 206, column: 850, scope: !457)
!464 = !DILocalVariable(name: "full", scope: !457, file: !16, line: 206, type: !435)
!465 = !DILocation(line: 206, column: 867, scope: !457)
!466 = !DILocalVariable(name: "full_mid", scope: !457, file: !16, line: 206, type: !440)
!467 = !DILocation(line: 206, column: 901, scope: !457)
!468 = !DILocation(line: 206, column: 912, scope: !457)
!469 = !DILocation(line: 206, column: 917, scope: !457)
!470 = !DILocation(line: 206, column: 951, scope: !457)
!471 = !DILocation(line: 206, column: 957, scope: !457)
!472 = !DILocation(line: 206, column: 965, scope: !457)
!473 = !DILocation(line: 206, column: 964, scope: !457)
!474 = !DILocation(line: 206, column: 961, scope: !457)
!475 = !DILocation(line: 206, column: 977, scope: !457)
!476 = !DILocation(line: 206, column: 925, scope: !457)
!477 = !DILocation(line: 206, column: 1030, scope: !457)
!478 = !DILocation(line: 206, column: 1035, scope: !457)
!479 = !DILocation(line: 206, column: 1045, scope: !457)
!480 = !DILocation(line: 206, column: 1004, scope: !481)
!481 = !DILexicalBlockFile(scope: !457, file: !16, discriminator: 1)
!482 = !DILocation(line: 206, column: 1072, scope: !457)
!483 = distinct !DISubprogram(name: "put_rv40_qpel16_mc31_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!484 = !DILocalVariable(name: "dst", arg: 1, scope: !483, file: !16, line: 206, type: !48)
!485 = !DILocation(line: 206, column: 1117, scope: !483)
!486 = !DILocalVariable(name: "src", arg: 2, scope: !483, file: !16, line: 206, type: !49)
!487 = !DILocation(line: 206, column: 1137, scope: !483)
!488 = !DILocalVariable(name: "stride", arg: 3, scope: !483, file: !16, line: 206, type: !50)
!489 = !DILocation(line: 206, column: 1152, scope: !483)
!490 = !DILocalVariable(name: "full", scope: !483, file: !16, line: 206, type: !435)
!491 = !DILocation(line: 206, column: 1169, scope: !483)
!492 = !DILocalVariable(name: "full_mid", scope: !483, file: !16, line: 206, type: !440)
!493 = !DILocation(line: 206, column: 1203, scope: !483)
!494 = !DILocation(line: 206, column: 1214, scope: !483)
!495 = !DILocation(line: 206, column: 1219, scope: !483)
!496 = !DILocation(line: 206, column: 1253, scope: !483)
!497 = !DILocation(line: 206, column: 1259, scope: !483)
!498 = !DILocation(line: 206, column: 1267, scope: !483)
!499 = !DILocation(line: 206, column: 1266, scope: !483)
!500 = !DILocation(line: 206, column: 1263, scope: !483)
!501 = !DILocation(line: 206, column: 1279, scope: !483)
!502 = !DILocation(line: 206, column: 1227, scope: !483)
!503 = !DILocation(line: 206, column: 1332, scope: !483)
!504 = !DILocation(line: 206, column: 1337, scope: !483)
!505 = !DILocation(line: 206, column: 1347, scope: !483)
!506 = !DILocation(line: 206, column: 1306, scope: !507)
!507 = !DILexicalBlockFile(scope: !483, file: !16, discriminator: 1)
!508 = !DILocation(line: 206, column: 1374, scope: !483)
!509 = distinct !DISubprogram(name: "put_rv40_qpel16_mc12_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!510 = !DILocalVariable(name: "dst", arg: 1, scope: !509, file: !16, line: 206, type: !48)
!511 = !DILocation(line: 206, column: 1419, scope: !509)
!512 = !DILocalVariable(name: "src", arg: 2, scope: !509, file: !16, line: 206, type: !49)
!513 = !DILocation(line: 206, column: 1439, scope: !509)
!514 = !DILocalVariable(name: "stride", arg: 3, scope: !509, file: !16, line: 206, type: !50)
!515 = !DILocation(line: 206, column: 1454, scope: !509)
!516 = !DILocalVariable(name: "full", scope: !509, file: !16, line: 206, type: !435)
!517 = !DILocation(line: 206, column: 1471, scope: !509)
!518 = !DILocalVariable(name: "full_mid", scope: !509, file: !16, line: 206, type: !440)
!519 = !DILocation(line: 206, column: 1505, scope: !509)
!520 = !DILocation(line: 206, column: 1516, scope: !509)
!521 = !DILocation(line: 206, column: 1521, scope: !509)
!522 = !DILocation(line: 206, column: 1555, scope: !509)
!523 = !DILocation(line: 206, column: 1561, scope: !509)
!524 = !DILocation(line: 206, column: 1569, scope: !509)
!525 = !DILocation(line: 206, column: 1568, scope: !509)
!526 = !DILocation(line: 206, column: 1565, scope: !509)
!527 = !DILocation(line: 206, column: 1581, scope: !509)
!528 = !DILocation(line: 206, column: 1529, scope: !509)
!529 = !DILocation(line: 206, column: 1634, scope: !509)
!530 = !DILocation(line: 206, column: 1639, scope: !509)
!531 = !DILocation(line: 206, column: 1649, scope: !509)
!532 = !DILocation(line: 206, column: 1608, scope: !533)
!533 = !DILexicalBlockFile(scope: !509, file: !16, discriminator: 1)
!534 = !DILocation(line: 206, column: 1676, scope: !509)
!535 = distinct !DISubprogram(name: "put_rv40_qpel16_mc22_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!536 = !DILocalVariable(name: "dst", arg: 1, scope: !535, file: !16, line: 206, type: !48)
!537 = !DILocation(line: 206, column: 1721, scope: !535)
!538 = !DILocalVariable(name: "src", arg: 2, scope: !535, file: !16, line: 206, type: !49)
!539 = !DILocation(line: 206, column: 1741, scope: !535)
!540 = !DILocalVariable(name: "stride", arg: 3, scope: !535, file: !16, line: 206, type: !50)
!541 = !DILocation(line: 206, column: 1756, scope: !535)
!542 = !DILocalVariable(name: "full", scope: !535, file: !16, line: 206, type: !435)
!543 = !DILocation(line: 206, column: 1773, scope: !535)
!544 = !DILocalVariable(name: "full_mid", scope: !535, file: !16, line: 206, type: !440)
!545 = !DILocation(line: 206, column: 1807, scope: !535)
!546 = !DILocation(line: 206, column: 1818, scope: !535)
!547 = !DILocation(line: 206, column: 1823, scope: !535)
!548 = !DILocation(line: 206, column: 1857, scope: !535)
!549 = !DILocation(line: 206, column: 1863, scope: !535)
!550 = !DILocation(line: 206, column: 1871, scope: !535)
!551 = !DILocation(line: 206, column: 1870, scope: !535)
!552 = !DILocation(line: 206, column: 1867, scope: !535)
!553 = !DILocation(line: 206, column: 1883, scope: !535)
!554 = !DILocation(line: 206, column: 1831, scope: !535)
!555 = !DILocation(line: 206, column: 1936, scope: !535)
!556 = !DILocation(line: 206, column: 1941, scope: !535)
!557 = !DILocation(line: 206, column: 1951, scope: !535)
!558 = !DILocation(line: 206, column: 1910, scope: !559)
!559 = !DILexicalBlockFile(scope: !535, file: !16, discriminator: 1)
!560 = !DILocation(line: 206, column: 1978, scope: !535)
!561 = distinct !DISubprogram(name: "put_rv40_qpel16_mc32_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!562 = !DILocalVariable(name: "dst", arg: 1, scope: !561, file: !16, line: 206, type: !48)
!563 = !DILocation(line: 206, column: 2023, scope: !561)
!564 = !DILocalVariable(name: "src", arg: 2, scope: !561, file: !16, line: 206, type: !49)
!565 = !DILocation(line: 206, column: 2043, scope: !561)
!566 = !DILocalVariable(name: "stride", arg: 3, scope: !561, file: !16, line: 206, type: !50)
!567 = !DILocation(line: 206, column: 2058, scope: !561)
!568 = !DILocalVariable(name: "full", scope: !561, file: !16, line: 206, type: !435)
!569 = !DILocation(line: 206, column: 2075, scope: !561)
!570 = !DILocalVariable(name: "full_mid", scope: !561, file: !16, line: 206, type: !440)
!571 = !DILocation(line: 206, column: 2109, scope: !561)
!572 = !DILocation(line: 206, column: 2120, scope: !561)
!573 = !DILocation(line: 206, column: 2125, scope: !561)
!574 = !DILocation(line: 206, column: 2159, scope: !561)
!575 = !DILocation(line: 206, column: 2165, scope: !561)
!576 = !DILocation(line: 206, column: 2173, scope: !561)
!577 = !DILocation(line: 206, column: 2172, scope: !561)
!578 = !DILocation(line: 206, column: 2169, scope: !561)
!579 = !DILocation(line: 206, column: 2185, scope: !561)
!580 = !DILocation(line: 206, column: 2133, scope: !561)
!581 = !DILocation(line: 206, column: 2238, scope: !561)
!582 = !DILocation(line: 206, column: 2243, scope: !561)
!583 = !DILocation(line: 206, column: 2253, scope: !561)
!584 = !DILocation(line: 206, column: 2212, scope: !585)
!585 = !DILexicalBlockFile(scope: !561, file: !16, discriminator: 1)
!586 = !DILocation(line: 206, column: 2280, scope: !561)
!587 = distinct !DISubprogram(name: "put_rv40_qpel16_mc03_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!588 = !DILocalVariable(name: "dst", arg: 1, scope: !587, file: !16, line: 206, type: !48)
!589 = !DILocation(line: 206, column: 2325, scope: !587)
!590 = !DILocalVariable(name: "src", arg: 2, scope: !587, file: !16, line: 206, type: !49)
!591 = !DILocation(line: 206, column: 2345, scope: !587)
!592 = !DILocalVariable(name: "stride", arg: 3, scope: !587, file: !16, line: 206, type: !50)
!593 = !DILocation(line: 206, column: 2360, scope: !587)
!594 = !DILocation(line: 206, column: 2395, scope: !587)
!595 = !DILocation(line: 206, column: 2400, scope: !587)
!596 = !DILocation(line: 206, column: 2405, scope: !587)
!597 = !DILocation(line: 206, column: 2413, scope: !587)
!598 = !DILocation(line: 206, column: 2369, scope: !587)
!599 = !DILocation(line: 206, column: 2436, scope: !587)
!600 = distinct !DISubprogram(name: "put_rv40_qpel16_mc13_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!601 = !DILocalVariable(name: "dst", arg: 1, scope: !600, file: !16, line: 206, type: !48)
!602 = !DILocation(line: 206, column: 2481, scope: !600)
!603 = !DILocalVariable(name: "src", arg: 2, scope: !600, file: !16, line: 206, type: !49)
!604 = !DILocation(line: 206, column: 2501, scope: !600)
!605 = !DILocalVariable(name: "stride", arg: 3, scope: !600, file: !16, line: 206, type: !50)
!606 = !DILocation(line: 206, column: 2516, scope: !600)
!607 = !DILocalVariable(name: "full", scope: !600, file: !16, line: 206, type: !435)
!608 = !DILocation(line: 206, column: 2533, scope: !600)
!609 = !DILocalVariable(name: "full_mid", scope: !600, file: !16, line: 206, type: !440)
!610 = !DILocation(line: 206, column: 2567, scope: !600)
!611 = !DILocation(line: 206, column: 2578, scope: !600)
!612 = !DILocation(line: 206, column: 2583, scope: !600)
!613 = !DILocation(line: 206, column: 2617, scope: !600)
!614 = !DILocation(line: 206, column: 2623, scope: !600)
!615 = !DILocation(line: 206, column: 2631, scope: !600)
!616 = !DILocation(line: 206, column: 2630, scope: !600)
!617 = !DILocation(line: 206, column: 2627, scope: !600)
!618 = !DILocation(line: 206, column: 2643, scope: !600)
!619 = !DILocation(line: 206, column: 2591, scope: !600)
!620 = !DILocation(line: 206, column: 2696, scope: !600)
!621 = !DILocation(line: 206, column: 2701, scope: !600)
!622 = !DILocation(line: 206, column: 2711, scope: !600)
!623 = !DILocation(line: 206, column: 2670, scope: !624)
!624 = !DILexicalBlockFile(scope: !600, file: !16, discriminator: 1)
!625 = !DILocation(line: 206, column: 2738, scope: !600)
!626 = distinct !DISubprogram(name: "put_rv40_qpel16_mc23_c", scope: !16, file: !16, line: 206, type: !46, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!627 = !DILocalVariable(name: "dst", arg: 1, scope: !626, file: !16, line: 206, type: !48)
!628 = !DILocation(line: 206, column: 2783, scope: !626)
!629 = !DILocalVariable(name: "src", arg: 2, scope: !626, file: !16, line: 206, type: !49)
!630 = !DILocation(line: 206, column: 2803, scope: !626)
!631 = !DILocalVariable(name: "stride", arg: 3, scope: !626, file: !16, line: 206, type: !50)
!632 = !DILocation(line: 206, column: 2818, scope: !626)
!633 = !DILocalVariable(name: "full", scope: !626, file: !16, line: 206, type: !435)
!634 = !DILocation(line: 206, column: 2835, scope: !626)
!635 = !DILocalVariable(name: "full_mid", scope: !626, file: !16, line: 206, type: !440)
!636 = !DILocation(line: 206, column: 2869, scope: !626)
!637 = !DILocation(line: 206, column: 2880, scope: !626)
!638 = !DILocation(line: 206, column: 2885, scope: !626)
!639 = !DILocation(line: 206, column: 2919, scope: !626)
!640 = !DILocation(line: 206, column: 2925, scope: !626)
!641 = !DILocation(line: 206, column: 2933, scope: !626)
!642 = !DILocation(line: 206, column: 2932, scope: !626)
!643 = !DILocation(line: 206, column: 2929, scope: !626)
!644 = !DILocation(line: 206, column: 2945, scope: !626)
!645 = !DILocation(line: 206, column: 2893, scope: !626)
!646 = !DILocation(line: 206, column: 2998, scope: !626)
!647 = !DILocation(line: 206, column: 3003, scope: !626)
!648 = !DILocation(line: 206, column: 3013, scope: !626)
!649 = !DILocation(line: 206, column: 2972, scope: !650)
!650 = !DILexicalBlockFile(scope: !626, file: !16, discriminator: 1)
!651 = !DILocation(line: 206, column: 3040, scope: !626)
!652 = distinct !DISubprogram(name: "put_rv40_qpel16_mc33_c", scope: !16, file: !16, line: 270, type: !46, isLocal: true, isDefinition: true, scopeLine: 271, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!653 = !DILocalVariable(name: "dst", arg: 1, scope: !652, file: !16, line: 270, type: !48)
!654 = !DILocation(line: 270, column: 45, scope: !652)
!655 = !DILocalVariable(name: "src", arg: 2, scope: !652, file: !16, line: 270, type: !49)
!656 = !DILocation(line: 270, column: 65, scope: !652)
!657 = !DILocalVariable(name: "stride", arg: 3, scope: !652, file: !16, line: 270, type: !50)
!658 = !DILocation(line: 270, column: 80, scope: !652)
!659 = !DILocation(line: 272, column: 26, scope: !652)
!660 = !DILocation(line: 272, column: 31, scope: !652)
!661 = !DILocation(line: 272, column: 36, scope: !652)
!662 = !DILocation(line: 272, column: 5, scope: !652)
!663 = !DILocation(line: 273, column: 1, scope: !652)
!664 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc10_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!665 = !DILocalVariable(name: "dst", arg: 1, scope: !664, file: !16, line: 208, type: !48)
!666 = !DILocation(line: 208, column: 45, scope: !664)
!667 = !DILocalVariable(name: "src", arg: 2, scope: !664, file: !16, line: 208, type: !49)
!668 = !DILocation(line: 208, column: 65, scope: !664)
!669 = !DILocalVariable(name: "stride", arg: 3, scope: !664, file: !16, line: 208, type: !50)
!670 = !DILocation(line: 208, column: 80, scope: !664)
!671 = !DILocation(line: 208, column: 115, scope: !664)
!672 = !DILocation(line: 208, column: 120, scope: !664)
!673 = !DILocation(line: 208, column: 125, scope: !664)
!674 = !DILocation(line: 208, column: 133, scope: !664)
!675 = !DILocation(line: 208, column: 89, scope: !664)
!676 = !DILocation(line: 208, column: 156, scope: !664)
!677 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc30_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!678 = !DILocalVariable(name: "dst", arg: 1, scope: !677, file: !16, line: 208, type: !48)
!679 = !DILocation(line: 208, column: 201, scope: !677)
!680 = !DILocalVariable(name: "src", arg: 2, scope: !677, file: !16, line: 208, type: !49)
!681 = !DILocation(line: 208, column: 221, scope: !677)
!682 = !DILocalVariable(name: "stride", arg: 3, scope: !677, file: !16, line: 208, type: !50)
!683 = !DILocation(line: 208, column: 236, scope: !677)
!684 = !DILocation(line: 208, column: 271, scope: !677)
!685 = !DILocation(line: 208, column: 276, scope: !677)
!686 = !DILocation(line: 208, column: 281, scope: !677)
!687 = !DILocation(line: 208, column: 289, scope: !677)
!688 = !DILocation(line: 208, column: 245, scope: !677)
!689 = !DILocation(line: 208, column: 312, scope: !677)
!690 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc01_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!691 = !DILocalVariable(name: "dst", arg: 1, scope: !690, file: !16, line: 208, type: !48)
!692 = !DILocation(line: 208, column: 357, scope: !690)
!693 = !DILocalVariable(name: "src", arg: 2, scope: !690, file: !16, line: 208, type: !49)
!694 = !DILocation(line: 208, column: 377, scope: !690)
!695 = !DILocalVariable(name: "stride", arg: 3, scope: !690, file: !16, line: 208, type: !50)
!696 = !DILocation(line: 208, column: 392, scope: !690)
!697 = !DILocation(line: 208, column: 427, scope: !690)
!698 = !DILocation(line: 208, column: 432, scope: !690)
!699 = !DILocation(line: 208, column: 437, scope: !690)
!700 = !DILocation(line: 208, column: 445, scope: !690)
!701 = !DILocation(line: 208, column: 401, scope: !690)
!702 = !DILocation(line: 208, column: 468, scope: !690)
!703 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc11_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!704 = !DILocalVariable(name: "dst", arg: 1, scope: !703, file: !16, line: 208, type: !48)
!705 = !DILocation(line: 208, column: 513, scope: !703)
!706 = !DILocalVariable(name: "src", arg: 2, scope: !703, file: !16, line: 208, type: !49)
!707 = !DILocation(line: 208, column: 533, scope: !703)
!708 = !DILocalVariable(name: "stride", arg: 3, scope: !703, file: !16, line: 208, type: !50)
!709 = !DILocation(line: 208, column: 548, scope: !703)
!710 = !DILocalVariable(name: "full", scope: !703, file: !16, line: 208, type: !435)
!711 = !DILocation(line: 208, column: 565, scope: !703)
!712 = !DILocalVariable(name: "full_mid", scope: !703, file: !16, line: 208, type: !440)
!713 = !DILocation(line: 208, column: 599, scope: !703)
!714 = !DILocation(line: 208, column: 610, scope: !703)
!715 = !DILocation(line: 208, column: 615, scope: !703)
!716 = !DILocation(line: 208, column: 649, scope: !703)
!717 = !DILocation(line: 208, column: 655, scope: !703)
!718 = !DILocation(line: 208, column: 663, scope: !703)
!719 = !DILocation(line: 208, column: 662, scope: !703)
!720 = !DILocation(line: 208, column: 659, scope: !703)
!721 = !DILocation(line: 208, column: 675, scope: !703)
!722 = !DILocation(line: 208, column: 623, scope: !703)
!723 = !DILocation(line: 208, column: 728, scope: !703)
!724 = !DILocation(line: 208, column: 733, scope: !703)
!725 = !DILocation(line: 208, column: 743, scope: !703)
!726 = !DILocation(line: 208, column: 702, scope: !727)
!727 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 1)
!728 = !DILocation(line: 208, column: 770, scope: !703)
!729 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc21_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!730 = !DILocalVariable(name: "dst", arg: 1, scope: !729, file: !16, line: 208, type: !48)
!731 = !DILocation(line: 208, column: 815, scope: !729)
!732 = !DILocalVariable(name: "src", arg: 2, scope: !729, file: !16, line: 208, type: !49)
!733 = !DILocation(line: 208, column: 835, scope: !729)
!734 = !DILocalVariable(name: "stride", arg: 3, scope: !729, file: !16, line: 208, type: !50)
!735 = !DILocation(line: 208, column: 850, scope: !729)
!736 = !DILocalVariable(name: "full", scope: !729, file: !16, line: 208, type: !435)
!737 = !DILocation(line: 208, column: 867, scope: !729)
!738 = !DILocalVariable(name: "full_mid", scope: !729, file: !16, line: 208, type: !440)
!739 = !DILocation(line: 208, column: 901, scope: !729)
!740 = !DILocation(line: 208, column: 912, scope: !729)
!741 = !DILocation(line: 208, column: 917, scope: !729)
!742 = !DILocation(line: 208, column: 951, scope: !729)
!743 = !DILocation(line: 208, column: 957, scope: !729)
!744 = !DILocation(line: 208, column: 965, scope: !729)
!745 = !DILocation(line: 208, column: 964, scope: !729)
!746 = !DILocation(line: 208, column: 961, scope: !729)
!747 = !DILocation(line: 208, column: 977, scope: !729)
!748 = !DILocation(line: 208, column: 925, scope: !729)
!749 = !DILocation(line: 208, column: 1030, scope: !729)
!750 = !DILocation(line: 208, column: 1035, scope: !729)
!751 = !DILocation(line: 208, column: 1045, scope: !729)
!752 = !DILocation(line: 208, column: 1004, scope: !753)
!753 = !DILexicalBlockFile(scope: !729, file: !16, discriminator: 1)
!754 = !DILocation(line: 208, column: 1072, scope: !729)
!755 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc31_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!756 = !DILocalVariable(name: "dst", arg: 1, scope: !755, file: !16, line: 208, type: !48)
!757 = !DILocation(line: 208, column: 1117, scope: !755)
!758 = !DILocalVariable(name: "src", arg: 2, scope: !755, file: !16, line: 208, type: !49)
!759 = !DILocation(line: 208, column: 1137, scope: !755)
!760 = !DILocalVariable(name: "stride", arg: 3, scope: !755, file: !16, line: 208, type: !50)
!761 = !DILocation(line: 208, column: 1152, scope: !755)
!762 = !DILocalVariable(name: "full", scope: !755, file: !16, line: 208, type: !435)
!763 = !DILocation(line: 208, column: 1169, scope: !755)
!764 = !DILocalVariable(name: "full_mid", scope: !755, file: !16, line: 208, type: !440)
!765 = !DILocation(line: 208, column: 1203, scope: !755)
!766 = !DILocation(line: 208, column: 1214, scope: !755)
!767 = !DILocation(line: 208, column: 1219, scope: !755)
!768 = !DILocation(line: 208, column: 1253, scope: !755)
!769 = !DILocation(line: 208, column: 1259, scope: !755)
!770 = !DILocation(line: 208, column: 1267, scope: !755)
!771 = !DILocation(line: 208, column: 1266, scope: !755)
!772 = !DILocation(line: 208, column: 1263, scope: !755)
!773 = !DILocation(line: 208, column: 1279, scope: !755)
!774 = !DILocation(line: 208, column: 1227, scope: !755)
!775 = !DILocation(line: 208, column: 1332, scope: !755)
!776 = !DILocation(line: 208, column: 1337, scope: !755)
!777 = !DILocation(line: 208, column: 1347, scope: !755)
!778 = !DILocation(line: 208, column: 1306, scope: !779)
!779 = !DILexicalBlockFile(scope: !755, file: !16, discriminator: 1)
!780 = !DILocation(line: 208, column: 1374, scope: !755)
!781 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc12_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!782 = !DILocalVariable(name: "dst", arg: 1, scope: !781, file: !16, line: 208, type: !48)
!783 = !DILocation(line: 208, column: 1419, scope: !781)
!784 = !DILocalVariable(name: "src", arg: 2, scope: !781, file: !16, line: 208, type: !49)
!785 = !DILocation(line: 208, column: 1439, scope: !781)
!786 = !DILocalVariable(name: "stride", arg: 3, scope: !781, file: !16, line: 208, type: !50)
!787 = !DILocation(line: 208, column: 1454, scope: !781)
!788 = !DILocalVariable(name: "full", scope: !781, file: !16, line: 208, type: !435)
!789 = !DILocation(line: 208, column: 1471, scope: !781)
!790 = !DILocalVariable(name: "full_mid", scope: !781, file: !16, line: 208, type: !440)
!791 = !DILocation(line: 208, column: 1505, scope: !781)
!792 = !DILocation(line: 208, column: 1516, scope: !781)
!793 = !DILocation(line: 208, column: 1521, scope: !781)
!794 = !DILocation(line: 208, column: 1555, scope: !781)
!795 = !DILocation(line: 208, column: 1561, scope: !781)
!796 = !DILocation(line: 208, column: 1569, scope: !781)
!797 = !DILocation(line: 208, column: 1568, scope: !781)
!798 = !DILocation(line: 208, column: 1565, scope: !781)
!799 = !DILocation(line: 208, column: 1581, scope: !781)
!800 = !DILocation(line: 208, column: 1529, scope: !781)
!801 = !DILocation(line: 208, column: 1634, scope: !781)
!802 = !DILocation(line: 208, column: 1639, scope: !781)
!803 = !DILocation(line: 208, column: 1649, scope: !781)
!804 = !DILocation(line: 208, column: 1608, scope: !805)
!805 = !DILexicalBlockFile(scope: !781, file: !16, discriminator: 1)
!806 = !DILocation(line: 208, column: 1676, scope: !781)
!807 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc22_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!808 = !DILocalVariable(name: "dst", arg: 1, scope: !807, file: !16, line: 208, type: !48)
!809 = !DILocation(line: 208, column: 1721, scope: !807)
!810 = !DILocalVariable(name: "src", arg: 2, scope: !807, file: !16, line: 208, type: !49)
!811 = !DILocation(line: 208, column: 1741, scope: !807)
!812 = !DILocalVariable(name: "stride", arg: 3, scope: !807, file: !16, line: 208, type: !50)
!813 = !DILocation(line: 208, column: 1756, scope: !807)
!814 = !DILocalVariable(name: "full", scope: !807, file: !16, line: 208, type: !435)
!815 = !DILocation(line: 208, column: 1773, scope: !807)
!816 = !DILocalVariable(name: "full_mid", scope: !807, file: !16, line: 208, type: !440)
!817 = !DILocation(line: 208, column: 1807, scope: !807)
!818 = !DILocation(line: 208, column: 1818, scope: !807)
!819 = !DILocation(line: 208, column: 1823, scope: !807)
!820 = !DILocation(line: 208, column: 1857, scope: !807)
!821 = !DILocation(line: 208, column: 1863, scope: !807)
!822 = !DILocation(line: 208, column: 1871, scope: !807)
!823 = !DILocation(line: 208, column: 1870, scope: !807)
!824 = !DILocation(line: 208, column: 1867, scope: !807)
!825 = !DILocation(line: 208, column: 1883, scope: !807)
!826 = !DILocation(line: 208, column: 1831, scope: !807)
!827 = !DILocation(line: 208, column: 1936, scope: !807)
!828 = !DILocation(line: 208, column: 1941, scope: !807)
!829 = !DILocation(line: 208, column: 1951, scope: !807)
!830 = !DILocation(line: 208, column: 1910, scope: !831)
!831 = !DILexicalBlockFile(scope: !807, file: !16, discriminator: 1)
!832 = !DILocation(line: 208, column: 1978, scope: !807)
!833 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc32_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!834 = !DILocalVariable(name: "dst", arg: 1, scope: !833, file: !16, line: 208, type: !48)
!835 = !DILocation(line: 208, column: 2023, scope: !833)
!836 = !DILocalVariable(name: "src", arg: 2, scope: !833, file: !16, line: 208, type: !49)
!837 = !DILocation(line: 208, column: 2043, scope: !833)
!838 = !DILocalVariable(name: "stride", arg: 3, scope: !833, file: !16, line: 208, type: !50)
!839 = !DILocation(line: 208, column: 2058, scope: !833)
!840 = !DILocalVariable(name: "full", scope: !833, file: !16, line: 208, type: !435)
!841 = !DILocation(line: 208, column: 2075, scope: !833)
!842 = !DILocalVariable(name: "full_mid", scope: !833, file: !16, line: 208, type: !440)
!843 = !DILocation(line: 208, column: 2109, scope: !833)
!844 = !DILocation(line: 208, column: 2120, scope: !833)
!845 = !DILocation(line: 208, column: 2125, scope: !833)
!846 = !DILocation(line: 208, column: 2159, scope: !833)
!847 = !DILocation(line: 208, column: 2165, scope: !833)
!848 = !DILocation(line: 208, column: 2173, scope: !833)
!849 = !DILocation(line: 208, column: 2172, scope: !833)
!850 = !DILocation(line: 208, column: 2169, scope: !833)
!851 = !DILocation(line: 208, column: 2185, scope: !833)
!852 = !DILocation(line: 208, column: 2133, scope: !833)
!853 = !DILocation(line: 208, column: 2238, scope: !833)
!854 = !DILocation(line: 208, column: 2243, scope: !833)
!855 = !DILocation(line: 208, column: 2253, scope: !833)
!856 = !DILocation(line: 208, column: 2212, scope: !857)
!857 = !DILexicalBlockFile(scope: !833, file: !16, discriminator: 1)
!858 = !DILocation(line: 208, column: 2280, scope: !833)
!859 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc03_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!860 = !DILocalVariable(name: "dst", arg: 1, scope: !859, file: !16, line: 208, type: !48)
!861 = !DILocation(line: 208, column: 2325, scope: !859)
!862 = !DILocalVariable(name: "src", arg: 2, scope: !859, file: !16, line: 208, type: !49)
!863 = !DILocation(line: 208, column: 2345, scope: !859)
!864 = !DILocalVariable(name: "stride", arg: 3, scope: !859, file: !16, line: 208, type: !50)
!865 = !DILocation(line: 208, column: 2360, scope: !859)
!866 = !DILocation(line: 208, column: 2395, scope: !859)
!867 = !DILocation(line: 208, column: 2400, scope: !859)
!868 = !DILocation(line: 208, column: 2405, scope: !859)
!869 = !DILocation(line: 208, column: 2413, scope: !859)
!870 = !DILocation(line: 208, column: 2369, scope: !859)
!871 = !DILocation(line: 208, column: 2436, scope: !859)
!872 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc13_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!873 = !DILocalVariable(name: "dst", arg: 1, scope: !872, file: !16, line: 208, type: !48)
!874 = !DILocation(line: 208, column: 2481, scope: !872)
!875 = !DILocalVariable(name: "src", arg: 2, scope: !872, file: !16, line: 208, type: !49)
!876 = !DILocation(line: 208, column: 2501, scope: !872)
!877 = !DILocalVariable(name: "stride", arg: 3, scope: !872, file: !16, line: 208, type: !50)
!878 = !DILocation(line: 208, column: 2516, scope: !872)
!879 = !DILocalVariable(name: "full", scope: !872, file: !16, line: 208, type: !435)
!880 = !DILocation(line: 208, column: 2533, scope: !872)
!881 = !DILocalVariable(name: "full_mid", scope: !872, file: !16, line: 208, type: !440)
!882 = !DILocation(line: 208, column: 2567, scope: !872)
!883 = !DILocation(line: 208, column: 2578, scope: !872)
!884 = !DILocation(line: 208, column: 2583, scope: !872)
!885 = !DILocation(line: 208, column: 2617, scope: !872)
!886 = !DILocation(line: 208, column: 2623, scope: !872)
!887 = !DILocation(line: 208, column: 2631, scope: !872)
!888 = !DILocation(line: 208, column: 2630, scope: !872)
!889 = !DILocation(line: 208, column: 2627, scope: !872)
!890 = !DILocation(line: 208, column: 2643, scope: !872)
!891 = !DILocation(line: 208, column: 2591, scope: !872)
!892 = !DILocation(line: 208, column: 2696, scope: !872)
!893 = !DILocation(line: 208, column: 2701, scope: !872)
!894 = !DILocation(line: 208, column: 2711, scope: !872)
!895 = !DILocation(line: 208, column: 2670, scope: !896)
!896 = !DILexicalBlockFile(scope: !872, file: !16, discriminator: 1)
!897 = !DILocation(line: 208, column: 2738, scope: !872)
!898 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc23_c", scope: !16, file: !16, line: 208, type: !46, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!899 = !DILocalVariable(name: "dst", arg: 1, scope: !898, file: !16, line: 208, type: !48)
!900 = !DILocation(line: 208, column: 2783, scope: !898)
!901 = !DILocalVariable(name: "src", arg: 2, scope: !898, file: !16, line: 208, type: !49)
!902 = !DILocation(line: 208, column: 2803, scope: !898)
!903 = !DILocalVariable(name: "stride", arg: 3, scope: !898, file: !16, line: 208, type: !50)
!904 = !DILocation(line: 208, column: 2818, scope: !898)
!905 = !DILocalVariable(name: "full", scope: !898, file: !16, line: 208, type: !435)
!906 = !DILocation(line: 208, column: 2835, scope: !898)
!907 = !DILocalVariable(name: "full_mid", scope: !898, file: !16, line: 208, type: !440)
!908 = !DILocation(line: 208, column: 2869, scope: !898)
!909 = !DILocation(line: 208, column: 2880, scope: !898)
!910 = !DILocation(line: 208, column: 2885, scope: !898)
!911 = !DILocation(line: 208, column: 2919, scope: !898)
!912 = !DILocation(line: 208, column: 2925, scope: !898)
!913 = !DILocation(line: 208, column: 2933, scope: !898)
!914 = !DILocation(line: 208, column: 2932, scope: !898)
!915 = !DILocation(line: 208, column: 2929, scope: !898)
!916 = !DILocation(line: 208, column: 2945, scope: !898)
!917 = !DILocation(line: 208, column: 2893, scope: !898)
!918 = !DILocation(line: 208, column: 2998, scope: !898)
!919 = !DILocation(line: 208, column: 3003, scope: !898)
!920 = !DILocation(line: 208, column: 3013, scope: !898)
!921 = !DILocation(line: 208, column: 2972, scope: !922)
!922 = !DILexicalBlockFile(scope: !898, file: !16, discriminator: 1)
!923 = !DILocation(line: 208, column: 3040, scope: !898)
!924 = distinct !DISubprogram(name: "avg_rv40_qpel16_mc33_c", scope: !16, file: !16, line: 274, type: !46, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!925 = !DILocalVariable(name: "dst", arg: 1, scope: !924, file: !16, line: 274, type: !48)
!926 = !DILocation(line: 274, column: 45, scope: !924)
!927 = !DILocalVariable(name: "src", arg: 2, scope: !924, file: !16, line: 274, type: !49)
!928 = !DILocation(line: 274, column: 65, scope: !924)
!929 = !DILocalVariable(name: "stride", arg: 3, scope: !924, file: !16, line: 274, type: !50)
!930 = !DILocation(line: 274, column: 80, scope: !924)
!931 = !DILocation(line: 276, column: 26, scope: !924)
!932 = !DILocation(line: 276, column: 31, scope: !924)
!933 = !DILocation(line: 276, column: 36, scope: !924)
!934 = !DILocation(line: 276, column: 5, scope: !924)
!935 = !DILocation(line: 277, column: 1, scope: !924)
!936 = distinct !DISubprogram(name: "put_rv40_qpel8_mc10_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!937 = !DILocalVariable(name: "dst", arg: 1, scope: !936, file: !16, line: 205, type: !48)
!938 = !DILocation(line: 205, column: 44, scope: !936)
!939 = !DILocalVariable(name: "src", arg: 2, scope: !936, file: !16, line: 205, type: !49)
!940 = !DILocation(line: 205, column: 64, scope: !936)
!941 = !DILocalVariable(name: "stride", arg: 3, scope: !936, file: !16, line: 205, type: !50)
!942 = !DILocation(line: 205, column: 79, scope: !936)
!943 = !DILocation(line: 205, column: 113, scope: !936)
!944 = !DILocation(line: 205, column: 118, scope: !936)
!945 = !DILocation(line: 205, column: 123, scope: !936)
!946 = !DILocation(line: 205, column: 131, scope: !936)
!947 = !DILocation(line: 205, column: 88, scope: !936)
!948 = !DILocation(line: 205, column: 153, scope: !936)
!949 = distinct !DISubprogram(name: "put_rv40_qpel8_mc30_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!950 = !DILocalVariable(name: "dst", arg: 1, scope: !949, file: !16, line: 205, type: !48)
!951 = !DILocation(line: 205, column: 197, scope: !949)
!952 = !DILocalVariable(name: "src", arg: 2, scope: !949, file: !16, line: 205, type: !49)
!953 = !DILocation(line: 205, column: 217, scope: !949)
!954 = !DILocalVariable(name: "stride", arg: 3, scope: !949, file: !16, line: 205, type: !50)
!955 = !DILocation(line: 205, column: 232, scope: !949)
!956 = !DILocation(line: 205, column: 266, scope: !949)
!957 = !DILocation(line: 205, column: 271, scope: !949)
!958 = !DILocation(line: 205, column: 276, scope: !949)
!959 = !DILocation(line: 205, column: 284, scope: !949)
!960 = !DILocation(line: 205, column: 241, scope: !949)
!961 = !DILocation(line: 205, column: 306, scope: !949)
!962 = distinct !DISubprogram(name: "put_rv40_qpel8_mc01_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!963 = !DILocalVariable(name: "dst", arg: 1, scope: !962, file: !16, line: 205, type: !48)
!964 = !DILocation(line: 205, column: 350, scope: !962)
!965 = !DILocalVariable(name: "src", arg: 2, scope: !962, file: !16, line: 205, type: !49)
!966 = !DILocation(line: 205, column: 370, scope: !962)
!967 = !DILocalVariable(name: "stride", arg: 3, scope: !962, file: !16, line: 205, type: !50)
!968 = !DILocation(line: 205, column: 385, scope: !962)
!969 = !DILocation(line: 205, column: 419, scope: !962)
!970 = !DILocation(line: 205, column: 424, scope: !962)
!971 = !DILocation(line: 205, column: 429, scope: !962)
!972 = !DILocation(line: 205, column: 437, scope: !962)
!973 = !DILocation(line: 205, column: 394, scope: !962)
!974 = !DILocation(line: 205, column: 459, scope: !962)
!975 = distinct !DISubprogram(name: "put_rv40_qpel8_mc11_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!976 = !DILocalVariable(name: "dst", arg: 1, scope: !975, file: !16, line: 205, type: !48)
!977 = !DILocation(line: 205, column: 503, scope: !975)
!978 = !DILocalVariable(name: "src", arg: 2, scope: !975, file: !16, line: 205, type: !49)
!979 = !DILocation(line: 205, column: 523, scope: !975)
!980 = !DILocalVariable(name: "stride", arg: 3, scope: !975, file: !16, line: 205, type: !50)
!981 = !DILocation(line: 205, column: 538, scope: !975)
!982 = !DILocalVariable(name: "full", scope: !975, file: !16, line: 205, type: !983)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 832, align: 8, elements: !984)
!984 = !{!985}
!985 = !DISubrange(count: 104)
!986 = !DILocation(line: 205, column: 555, scope: !975)
!987 = !DILocalVariable(name: "full_mid", scope: !975, file: !16, line: 205, type: !440)
!988 = !DILocation(line: 205, column: 587, scope: !975)
!989 = !DILocation(line: 205, column: 598, scope: !975)
!990 = !DILocation(line: 205, column: 603, scope: !975)
!991 = !DILocation(line: 205, column: 635, scope: !975)
!992 = !DILocation(line: 205, column: 641, scope: !975)
!993 = !DILocation(line: 205, column: 649, scope: !975)
!994 = !DILocation(line: 205, column: 648, scope: !975)
!995 = !DILocation(line: 205, column: 645, scope: !975)
!996 = !DILocation(line: 205, column: 660, scope: !975)
!997 = !DILocation(line: 205, column: 610, scope: !975)
!998 = !DILocation(line: 205, column: 711, scope: !975)
!999 = !DILocation(line: 205, column: 716, scope: !975)
!1000 = !DILocation(line: 205, column: 726, scope: !975)
!1001 = !DILocation(line: 205, column: 686, scope: !1002)
!1002 = !DILexicalBlockFile(scope: !975, file: !16, discriminator: 1)
!1003 = !DILocation(line: 205, column: 751, scope: !975)
!1004 = distinct !DISubprogram(name: "put_rv40_qpel8_mc21_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1005 = !DILocalVariable(name: "dst", arg: 1, scope: !1004, file: !16, line: 205, type: !48)
!1006 = !DILocation(line: 205, column: 795, scope: !1004)
!1007 = !DILocalVariable(name: "src", arg: 2, scope: !1004, file: !16, line: 205, type: !49)
!1008 = !DILocation(line: 205, column: 815, scope: !1004)
!1009 = !DILocalVariable(name: "stride", arg: 3, scope: !1004, file: !16, line: 205, type: !50)
!1010 = !DILocation(line: 205, column: 830, scope: !1004)
!1011 = !DILocalVariable(name: "full", scope: !1004, file: !16, line: 205, type: !983)
!1012 = !DILocation(line: 205, column: 847, scope: !1004)
!1013 = !DILocalVariable(name: "full_mid", scope: !1004, file: !16, line: 205, type: !440)
!1014 = !DILocation(line: 205, column: 879, scope: !1004)
!1015 = !DILocation(line: 205, column: 890, scope: !1004)
!1016 = !DILocation(line: 205, column: 895, scope: !1004)
!1017 = !DILocation(line: 205, column: 927, scope: !1004)
!1018 = !DILocation(line: 205, column: 933, scope: !1004)
!1019 = !DILocation(line: 205, column: 941, scope: !1004)
!1020 = !DILocation(line: 205, column: 940, scope: !1004)
!1021 = !DILocation(line: 205, column: 937, scope: !1004)
!1022 = !DILocation(line: 205, column: 952, scope: !1004)
!1023 = !DILocation(line: 205, column: 902, scope: !1004)
!1024 = !DILocation(line: 205, column: 1003, scope: !1004)
!1025 = !DILocation(line: 205, column: 1008, scope: !1004)
!1026 = !DILocation(line: 205, column: 1018, scope: !1004)
!1027 = !DILocation(line: 205, column: 978, scope: !1028)
!1028 = !DILexicalBlockFile(scope: !1004, file: !16, discriminator: 1)
!1029 = !DILocation(line: 205, column: 1043, scope: !1004)
!1030 = distinct !DISubprogram(name: "put_rv40_qpel8_mc31_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1031 = !DILocalVariable(name: "dst", arg: 1, scope: !1030, file: !16, line: 205, type: !48)
!1032 = !DILocation(line: 205, column: 1087, scope: !1030)
!1033 = !DILocalVariable(name: "src", arg: 2, scope: !1030, file: !16, line: 205, type: !49)
!1034 = !DILocation(line: 205, column: 1107, scope: !1030)
!1035 = !DILocalVariable(name: "stride", arg: 3, scope: !1030, file: !16, line: 205, type: !50)
!1036 = !DILocation(line: 205, column: 1122, scope: !1030)
!1037 = !DILocalVariable(name: "full", scope: !1030, file: !16, line: 205, type: !983)
!1038 = !DILocation(line: 205, column: 1139, scope: !1030)
!1039 = !DILocalVariable(name: "full_mid", scope: !1030, file: !16, line: 205, type: !440)
!1040 = !DILocation(line: 205, column: 1171, scope: !1030)
!1041 = !DILocation(line: 205, column: 1182, scope: !1030)
!1042 = !DILocation(line: 205, column: 1187, scope: !1030)
!1043 = !DILocation(line: 205, column: 1219, scope: !1030)
!1044 = !DILocation(line: 205, column: 1225, scope: !1030)
!1045 = !DILocation(line: 205, column: 1233, scope: !1030)
!1046 = !DILocation(line: 205, column: 1232, scope: !1030)
!1047 = !DILocation(line: 205, column: 1229, scope: !1030)
!1048 = !DILocation(line: 205, column: 1244, scope: !1030)
!1049 = !DILocation(line: 205, column: 1194, scope: !1030)
!1050 = !DILocation(line: 205, column: 1295, scope: !1030)
!1051 = !DILocation(line: 205, column: 1300, scope: !1030)
!1052 = !DILocation(line: 205, column: 1310, scope: !1030)
!1053 = !DILocation(line: 205, column: 1270, scope: !1054)
!1054 = !DILexicalBlockFile(scope: !1030, file: !16, discriminator: 1)
!1055 = !DILocation(line: 205, column: 1335, scope: !1030)
!1056 = distinct !DISubprogram(name: "put_rv40_qpel8_mc12_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1057 = !DILocalVariable(name: "dst", arg: 1, scope: !1056, file: !16, line: 205, type: !48)
!1058 = !DILocation(line: 205, column: 1379, scope: !1056)
!1059 = !DILocalVariable(name: "src", arg: 2, scope: !1056, file: !16, line: 205, type: !49)
!1060 = !DILocation(line: 205, column: 1399, scope: !1056)
!1061 = !DILocalVariable(name: "stride", arg: 3, scope: !1056, file: !16, line: 205, type: !50)
!1062 = !DILocation(line: 205, column: 1414, scope: !1056)
!1063 = !DILocalVariable(name: "full", scope: !1056, file: !16, line: 205, type: !983)
!1064 = !DILocation(line: 205, column: 1431, scope: !1056)
!1065 = !DILocalVariable(name: "full_mid", scope: !1056, file: !16, line: 205, type: !440)
!1066 = !DILocation(line: 205, column: 1463, scope: !1056)
!1067 = !DILocation(line: 205, column: 1474, scope: !1056)
!1068 = !DILocation(line: 205, column: 1479, scope: !1056)
!1069 = !DILocation(line: 205, column: 1511, scope: !1056)
!1070 = !DILocation(line: 205, column: 1517, scope: !1056)
!1071 = !DILocation(line: 205, column: 1525, scope: !1056)
!1072 = !DILocation(line: 205, column: 1524, scope: !1056)
!1073 = !DILocation(line: 205, column: 1521, scope: !1056)
!1074 = !DILocation(line: 205, column: 1536, scope: !1056)
!1075 = !DILocation(line: 205, column: 1486, scope: !1056)
!1076 = !DILocation(line: 205, column: 1587, scope: !1056)
!1077 = !DILocation(line: 205, column: 1592, scope: !1056)
!1078 = !DILocation(line: 205, column: 1602, scope: !1056)
!1079 = !DILocation(line: 205, column: 1562, scope: !1080)
!1080 = !DILexicalBlockFile(scope: !1056, file: !16, discriminator: 1)
!1081 = !DILocation(line: 205, column: 1627, scope: !1056)
!1082 = distinct !DISubprogram(name: "put_rv40_qpel8_mc22_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1083 = !DILocalVariable(name: "dst", arg: 1, scope: !1082, file: !16, line: 205, type: !48)
!1084 = !DILocation(line: 205, column: 1671, scope: !1082)
!1085 = !DILocalVariable(name: "src", arg: 2, scope: !1082, file: !16, line: 205, type: !49)
!1086 = !DILocation(line: 205, column: 1691, scope: !1082)
!1087 = !DILocalVariable(name: "stride", arg: 3, scope: !1082, file: !16, line: 205, type: !50)
!1088 = !DILocation(line: 205, column: 1706, scope: !1082)
!1089 = !DILocalVariable(name: "full", scope: !1082, file: !16, line: 205, type: !983)
!1090 = !DILocation(line: 205, column: 1723, scope: !1082)
!1091 = !DILocalVariable(name: "full_mid", scope: !1082, file: !16, line: 205, type: !440)
!1092 = !DILocation(line: 205, column: 1755, scope: !1082)
!1093 = !DILocation(line: 205, column: 1766, scope: !1082)
!1094 = !DILocation(line: 205, column: 1771, scope: !1082)
!1095 = !DILocation(line: 205, column: 1803, scope: !1082)
!1096 = !DILocation(line: 205, column: 1809, scope: !1082)
!1097 = !DILocation(line: 205, column: 1817, scope: !1082)
!1098 = !DILocation(line: 205, column: 1816, scope: !1082)
!1099 = !DILocation(line: 205, column: 1813, scope: !1082)
!1100 = !DILocation(line: 205, column: 1828, scope: !1082)
!1101 = !DILocation(line: 205, column: 1778, scope: !1082)
!1102 = !DILocation(line: 205, column: 1879, scope: !1082)
!1103 = !DILocation(line: 205, column: 1884, scope: !1082)
!1104 = !DILocation(line: 205, column: 1894, scope: !1082)
!1105 = !DILocation(line: 205, column: 1854, scope: !1106)
!1106 = !DILexicalBlockFile(scope: !1082, file: !16, discriminator: 1)
!1107 = !DILocation(line: 205, column: 1919, scope: !1082)
!1108 = distinct !DISubprogram(name: "put_rv40_qpel8_mc32_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1109 = !DILocalVariable(name: "dst", arg: 1, scope: !1108, file: !16, line: 205, type: !48)
!1110 = !DILocation(line: 205, column: 1963, scope: !1108)
!1111 = !DILocalVariable(name: "src", arg: 2, scope: !1108, file: !16, line: 205, type: !49)
!1112 = !DILocation(line: 205, column: 1983, scope: !1108)
!1113 = !DILocalVariable(name: "stride", arg: 3, scope: !1108, file: !16, line: 205, type: !50)
!1114 = !DILocation(line: 205, column: 1998, scope: !1108)
!1115 = !DILocalVariable(name: "full", scope: !1108, file: !16, line: 205, type: !983)
!1116 = !DILocation(line: 205, column: 2015, scope: !1108)
!1117 = !DILocalVariable(name: "full_mid", scope: !1108, file: !16, line: 205, type: !440)
!1118 = !DILocation(line: 205, column: 2047, scope: !1108)
!1119 = !DILocation(line: 205, column: 2058, scope: !1108)
!1120 = !DILocation(line: 205, column: 2063, scope: !1108)
!1121 = !DILocation(line: 205, column: 2095, scope: !1108)
!1122 = !DILocation(line: 205, column: 2101, scope: !1108)
!1123 = !DILocation(line: 205, column: 2109, scope: !1108)
!1124 = !DILocation(line: 205, column: 2108, scope: !1108)
!1125 = !DILocation(line: 205, column: 2105, scope: !1108)
!1126 = !DILocation(line: 205, column: 2120, scope: !1108)
!1127 = !DILocation(line: 205, column: 2070, scope: !1108)
!1128 = !DILocation(line: 205, column: 2171, scope: !1108)
!1129 = !DILocation(line: 205, column: 2176, scope: !1108)
!1130 = !DILocation(line: 205, column: 2186, scope: !1108)
!1131 = !DILocation(line: 205, column: 2146, scope: !1132)
!1132 = !DILexicalBlockFile(scope: !1108, file: !16, discriminator: 1)
!1133 = !DILocation(line: 205, column: 2211, scope: !1108)
!1134 = distinct !DISubprogram(name: "put_rv40_qpel8_mc03_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1135 = !DILocalVariable(name: "dst", arg: 1, scope: !1134, file: !16, line: 205, type: !48)
!1136 = !DILocation(line: 205, column: 2255, scope: !1134)
!1137 = !DILocalVariable(name: "src", arg: 2, scope: !1134, file: !16, line: 205, type: !49)
!1138 = !DILocation(line: 205, column: 2275, scope: !1134)
!1139 = !DILocalVariable(name: "stride", arg: 3, scope: !1134, file: !16, line: 205, type: !50)
!1140 = !DILocation(line: 205, column: 2290, scope: !1134)
!1141 = !DILocation(line: 205, column: 2324, scope: !1134)
!1142 = !DILocation(line: 205, column: 2329, scope: !1134)
!1143 = !DILocation(line: 205, column: 2334, scope: !1134)
!1144 = !DILocation(line: 205, column: 2342, scope: !1134)
!1145 = !DILocation(line: 205, column: 2299, scope: !1134)
!1146 = !DILocation(line: 205, column: 2364, scope: !1134)
!1147 = distinct !DISubprogram(name: "put_rv40_qpel8_mc13_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1148 = !DILocalVariable(name: "dst", arg: 1, scope: !1147, file: !16, line: 205, type: !48)
!1149 = !DILocation(line: 205, column: 2408, scope: !1147)
!1150 = !DILocalVariable(name: "src", arg: 2, scope: !1147, file: !16, line: 205, type: !49)
!1151 = !DILocation(line: 205, column: 2428, scope: !1147)
!1152 = !DILocalVariable(name: "stride", arg: 3, scope: !1147, file: !16, line: 205, type: !50)
!1153 = !DILocation(line: 205, column: 2443, scope: !1147)
!1154 = !DILocalVariable(name: "full", scope: !1147, file: !16, line: 205, type: !983)
!1155 = !DILocation(line: 205, column: 2460, scope: !1147)
!1156 = !DILocalVariable(name: "full_mid", scope: !1147, file: !16, line: 205, type: !440)
!1157 = !DILocation(line: 205, column: 2492, scope: !1147)
!1158 = !DILocation(line: 205, column: 2503, scope: !1147)
!1159 = !DILocation(line: 205, column: 2508, scope: !1147)
!1160 = !DILocation(line: 205, column: 2540, scope: !1147)
!1161 = !DILocation(line: 205, column: 2546, scope: !1147)
!1162 = !DILocation(line: 205, column: 2554, scope: !1147)
!1163 = !DILocation(line: 205, column: 2553, scope: !1147)
!1164 = !DILocation(line: 205, column: 2550, scope: !1147)
!1165 = !DILocation(line: 205, column: 2565, scope: !1147)
!1166 = !DILocation(line: 205, column: 2515, scope: !1147)
!1167 = !DILocation(line: 205, column: 2616, scope: !1147)
!1168 = !DILocation(line: 205, column: 2621, scope: !1147)
!1169 = !DILocation(line: 205, column: 2631, scope: !1147)
!1170 = !DILocation(line: 205, column: 2591, scope: !1171)
!1171 = !DILexicalBlockFile(scope: !1147, file: !16, discriminator: 1)
!1172 = !DILocation(line: 205, column: 2656, scope: !1147)
!1173 = distinct !DISubprogram(name: "put_rv40_qpel8_mc23_c", scope: !16, file: !16, line: 205, type: !46, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1174 = !DILocalVariable(name: "dst", arg: 1, scope: !1173, file: !16, line: 205, type: !48)
!1175 = !DILocation(line: 205, column: 2700, scope: !1173)
!1176 = !DILocalVariable(name: "src", arg: 2, scope: !1173, file: !16, line: 205, type: !49)
!1177 = !DILocation(line: 205, column: 2720, scope: !1173)
!1178 = !DILocalVariable(name: "stride", arg: 3, scope: !1173, file: !16, line: 205, type: !50)
!1179 = !DILocation(line: 205, column: 2735, scope: !1173)
!1180 = !DILocalVariable(name: "full", scope: !1173, file: !16, line: 205, type: !983)
!1181 = !DILocation(line: 205, column: 2752, scope: !1173)
!1182 = !DILocalVariable(name: "full_mid", scope: !1173, file: !16, line: 205, type: !440)
!1183 = !DILocation(line: 205, column: 2784, scope: !1173)
!1184 = !DILocation(line: 205, column: 2795, scope: !1173)
!1185 = !DILocation(line: 205, column: 2800, scope: !1173)
!1186 = !DILocation(line: 205, column: 2832, scope: !1173)
!1187 = !DILocation(line: 205, column: 2838, scope: !1173)
!1188 = !DILocation(line: 205, column: 2846, scope: !1173)
!1189 = !DILocation(line: 205, column: 2845, scope: !1173)
!1190 = !DILocation(line: 205, column: 2842, scope: !1173)
!1191 = !DILocation(line: 205, column: 2857, scope: !1173)
!1192 = !DILocation(line: 205, column: 2807, scope: !1173)
!1193 = !DILocation(line: 205, column: 2908, scope: !1173)
!1194 = !DILocation(line: 205, column: 2913, scope: !1173)
!1195 = !DILocation(line: 205, column: 2923, scope: !1173)
!1196 = !DILocation(line: 205, column: 2883, scope: !1197)
!1197 = !DILexicalBlockFile(scope: !1173, file: !16, discriminator: 1)
!1198 = !DILocation(line: 205, column: 2948, scope: !1173)
!1199 = distinct !DISubprogram(name: "put_rv40_qpel8_mc33_c", scope: !16, file: !16, line: 278, type: !46, isLocal: true, isDefinition: true, scopeLine: 279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1200 = !DILocalVariable(name: "dst", arg: 1, scope: !1199, file: !16, line: 278, type: !48)
!1201 = !DILocation(line: 278, column: 44, scope: !1199)
!1202 = !DILocalVariable(name: "src", arg: 2, scope: !1199, file: !16, line: 278, type: !49)
!1203 = !DILocation(line: 278, column: 64, scope: !1199)
!1204 = !DILocalVariable(name: "stride", arg: 3, scope: !1199, file: !16, line: 278, type: !50)
!1205 = !DILocation(line: 278, column: 79, scope: !1199)
!1206 = !DILocation(line: 280, column: 25, scope: !1199)
!1207 = !DILocation(line: 280, column: 30, scope: !1199)
!1208 = !DILocation(line: 280, column: 35, scope: !1199)
!1209 = !DILocation(line: 280, column: 5, scope: !1199)
!1210 = !DILocation(line: 281, column: 1, scope: !1199)
!1211 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc10_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1212 = !DILocalVariable(name: "dst", arg: 1, scope: !1211, file: !16, line: 207, type: !48)
!1213 = !DILocation(line: 207, column: 44, scope: !1211)
!1214 = !DILocalVariable(name: "src", arg: 2, scope: !1211, file: !16, line: 207, type: !49)
!1215 = !DILocation(line: 207, column: 64, scope: !1211)
!1216 = !DILocalVariable(name: "stride", arg: 3, scope: !1211, file: !16, line: 207, type: !50)
!1217 = !DILocation(line: 207, column: 79, scope: !1211)
!1218 = !DILocation(line: 207, column: 113, scope: !1211)
!1219 = !DILocation(line: 207, column: 118, scope: !1211)
!1220 = !DILocation(line: 207, column: 123, scope: !1211)
!1221 = !DILocation(line: 207, column: 131, scope: !1211)
!1222 = !DILocation(line: 207, column: 88, scope: !1211)
!1223 = !DILocation(line: 207, column: 153, scope: !1211)
!1224 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc30_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1225 = !DILocalVariable(name: "dst", arg: 1, scope: !1224, file: !16, line: 207, type: !48)
!1226 = !DILocation(line: 207, column: 197, scope: !1224)
!1227 = !DILocalVariable(name: "src", arg: 2, scope: !1224, file: !16, line: 207, type: !49)
!1228 = !DILocation(line: 207, column: 217, scope: !1224)
!1229 = !DILocalVariable(name: "stride", arg: 3, scope: !1224, file: !16, line: 207, type: !50)
!1230 = !DILocation(line: 207, column: 232, scope: !1224)
!1231 = !DILocation(line: 207, column: 266, scope: !1224)
!1232 = !DILocation(line: 207, column: 271, scope: !1224)
!1233 = !DILocation(line: 207, column: 276, scope: !1224)
!1234 = !DILocation(line: 207, column: 284, scope: !1224)
!1235 = !DILocation(line: 207, column: 241, scope: !1224)
!1236 = !DILocation(line: 207, column: 306, scope: !1224)
!1237 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc01_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1238 = !DILocalVariable(name: "dst", arg: 1, scope: !1237, file: !16, line: 207, type: !48)
!1239 = !DILocation(line: 207, column: 350, scope: !1237)
!1240 = !DILocalVariable(name: "src", arg: 2, scope: !1237, file: !16, line: 207, type: !49)
!1241 = !DILocation(line: 207, column: 370, scope: !1237)
!1242 = !DILocalVariable(name: "stride", arg: 3, scope: !1237, file: !16, line: 207, type: !50)
!1243 = !DILocation(line: 207, column: 385, scope: !1237)
!1244 = !DILocation(line: 207, column: 419, scope: !1237)
!1245 = !DILocation(line: 207, column: 424, scope: !1237)
!1246 = !DILocation(line: 207, column: 429, scope: !1237)
!1247 = !DILocation(line: 207, column: 437, scope: !1237)
!1248 = !DILocation(line: 207, column: 394, scope: !1237)
!1249 = !DILocation(line: 207, column: 459, scope: !1237)
!1250 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc11_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1251 = !DILocalVariable(name: "dst", arg: 1, scope: !1250, file: !16, line: 207, type: !48)
!1252 = !DILocation(line: 207, column: 503, scope: !1250)
!1253 = !DILocalVariable(name: "src", arg: 2, scope: !1250, file: !16, line: 207, type: !49)
!1254 = !DILocation(line: 207, column: 523, scope: !1250)
!1255 = !DILocalVariable(name: "stride", arg: 3, scope: !1250, file: !16, line: 207, type: !50)
!1256 = !DILocation(line: 207, column: 538, scope: !1250)
!1257 = !DILocalVariable(name: "full", scope: !1250, file: !16, line: 207, type: !983)
!1258 = !DILocation(line: 207, column: 555, scope: !1250)
!1259 = !DILocalVariable(name: "full_mid", scope: !1250, file: !16, line: 207, type: !440)
!1260 = !DILocation(line: 207, column: 587, scope: !1250)
!1261 = !DILocation(line: 207, column: 598, scope: !1250)
!1262 = !DILocation(line: 207, column: 603, scope: !1250)
!1263 = !DILocation(line: 207, column: 635, scope: !1250)
!1264 = !DILocation(line: 207, column: 641, scope: !1250)
!1265 = !DILocation(line: 207, column: 649, scope: !1250)
!1266 = !DILocation(line: 207, column: 648, scope: !1250)
!1267 = !DILocation(line: 207, column: 645, scope: !1250)
!1268 = !DILocation(line: 207, column: 660, scope: !1250)
!1269 = !DILocation(line: 207, column: 610, scope: !1250)
!1270 = !DILocation(line: 207, column: 711, scope: !1250)
!1271 = !DILocation(line: 207, column: 716, scope: !1250)
!1272 = !DILocation(line: 207, column: 726, scope: !1250)
!1273 = !DILocation(line: 207, column: 686, scope: !1274)
!1274 = !DILexicalBlockFile(scope: !1250, file: !16, discriminator: 1)
!1275 = !DILocation(line: 207, column: 751, scope: !1250)
!1276 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc21_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1277 = !DILocalVariable(name: "dst", arg: 1, scope: !1276, file: !16, line: 207, type: !48)
!1278 = !DILocation(line: 207, column: 795, scope: !1276)
!1279 = !DILocalVariable(name: "src", arg: 2, scope: !1276, file: !16, line: 207, type: !49)
!1280 = !DILocation(line: 207, column: 815, scope: !1276)
!1281 = !DILocalVariable(name: "stride", arg: 3, scope: !1276, file: !16, line: 207, type: !50)
!1282 = !DILocation(line: 207, column: 830, scope: !1276)
!1283 = !DILocalVariable(name: "full", scope: !1276, file: !16, line: 207, type: !983)
!1284 = !DILocation(line: 207, column: 847, scope: !1276)
!1285 = !DILocalVariable(name: "full_mid", scope: !1276, file: !16, line: 207, type: !440)
!1286 = !DILocation(line: 207, column: 879, scope: !1276)
!1287 = !DILocation(line: 207, column: 890, scope: !1276)
!1288 = !DILocation(line: 207, column: 895, scope: !1276)
!1289 = !DILocation(line: 207, column: 927, scope: !1276)
!1290 = !DILocation(line: 207, column: 933, scope: !1276)
!1291 = !DILocation(line: 207, column: 941, scope: !1276)
!1292 = !DILocation(line: 207, column: 940, scope: !1276)
!1293 = !DILocation(line: 207, column: 937, scope: !1276)
!1294 = !DILocation(line: 207, column: 952, scope: !1276)
!1295 = !DILocation(line: 207, column: 902, scope: !1276)
!1296 = !DILocation(line: 207, column: 1003, scope: !1276)
!1297 = !DILocation(line: 207, column: 1008, scope: !1276)
!1298 = !DILocation(line: 207, column: 1018, scope: !1276)
!1299 = !DILocation(line: 207, column: 978, scope: !1300)
!1300 = !DILexicalBlockFile(scope: !1276, file: !16, discriminator: 1)
!1301 = !DILocation(line: 207, column: 1043, scope: !1276)
!1302 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc31_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1303 = !DILocalVariable(name: "dst", arg: 1, scope: !1302, file: !16, line: 207, type: !48)
!1304 = !DILocation(line: 207, column: 1087, scope: !1302)
!1305 = !DILocalVariable(name: "src", arg: 2, scope: !1302, file: !16, line: 207, type: !49)
!1306 = !DILocation(line: 207, column: 1107, scope: !1302)
!1307 = !DILocalVariable(name: "stride", arg: 3, scope: !1302, file: !16, line: 207, type: !50)
!1308 = !DILocation(line: 207, column: 1122, scope: !1302)
!1309 = !DILocalVariable(name: "full", scope: !1302, file: !16, line: 207, type: !983)
!1310 = !DILocation(line: 207, column: 1139, scope: !1302)
!1311 = !DILocalVariable(name: "full_mid", scope: !1302, file: !16, line: 207, type: !440)
!1312 = !DILocation(line: 207, column: 1171, scope: !1302)
!1313 = !DILocation(line: 207, column: 1182, scope: !1302)
!1314 = !DILocation(line: 207, column: 1187, scope: !1302)
!1315 = !DILocation(line: 207, column: 1219, scope: !1302)
!1316 = !DILocation(line: 207, column: 1225, scope: !1302)
!1317 = !DILocation(line: 207, column: 1233, scope: !1302)
!1318 = !DILocation(line: 207, column: 1232, scope: !1302)
!1319 = !DILocation(line: 207, column: 1229, scope: !1302)
!1320 = !DILocation(line: 207, column: 1244, scope: !1302)
!1321 = !DILocation(line: 207, column: 1194, scope: !1302)
!1322 = !DILocation(line: 207, column: 1295, scope: !1302)
!1323 = !DILocation(line: 207, column: 1300, scope: !1302)
!1324 = !DILocation(line: 207, column: 1310, scope: !1302)
!1325 = !DILocation(line: 207, column: 1270, scope: !1326)
!1326 = !DILexicalBlockFile(scope: !1302, file: !16, discriminator: 1)
!1327 = !DILocation(line: 207, column: 1335, scope: !1302)
!1328 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc12_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1329 = !DILocalVariable(name: "dst", arg: 1, scope: !1328, file: !16, line: 207, type: !48)
!1330 = !DILocation(line: 207, column: 1379, scope: !1328)
!1331 = !DILocalVariable(name: "src", arg: 2, scope: !1328, file: !16, line: 207, type: !49)
!1332 = !DILocation(line: 207, column: 1399, scope: !1328)
!1333 = !DILocalVariable(name: "stride", arg: 3, scope: !1328, file: !16, line: 207, type: !50)
!1334 = !DILocation(line: 207, column: 1414, scope: !1328)
!1335 = !DILocalVariable(name: "full", scope: !1328, file: !16, line: 207, type: !983)
!1336 = !DILocation(line: 207, column: 1431, scope: !1328)
!1337 = !DILocalVariable(name: "full_mid", scope: !1328, file: !16, line: 207, type: !440)
!1338 = !DILocation(line: 207, column: 1463, scope: !1328)
!1339 = !DILocation(line: 207, column: 1474, scope: !1328)
!1340 = !DILocation(line: 207, column: 1479, scope: !1328)
!1341 = !DILocation(line: 207, column: 1511, scope: !1328)
!1342 = !DILocation(line: 207, column: 1517, scope: !1328)
!1343 = !DILocation(line: 207, column: 1525, scope: !1328)
!1344 = !DILocation(line: 207, column: 1524, scope: !1328)
!1345 = !DILocation(line: 207, column: 1521, scope: !1328)
!1346 = !DILocation(line: 207, column: 1536, scope: !1328)
!1347 = !DILocation(line: 207, column: 1486, scope: !1328)
!1348 = !DILocation(line: 207, column: 1587, scope: !1328)
!1349 = !DILocation(line: 207, column: 1592, scope: !1328)
!1350 = !DILocation(line: 207, column: 1602, scope: !1328)
!1351 = !DILocation(line: 207, column: 1562, scope: !1352)
!1352 = !DILexicalBlockFile(scope: !1328, file: !16, discriminator: 1)
!1353 = !DILocation(line: 207, column: 1627, scope: !1328)
!1354 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc22_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1355 = !DILocalVariable(name: "dst", arg: 1, scope: !1354, file: !16, line: 207, type: !48)
!1356 = !DILocation(line: 207, column: 1671, scope: !1354)
!1357 = !DILocalVariable(name: "src", arg: 2, scope: !1354, file: !16, line: 207, type: !49)
!1358 = !DILocation(line: 207, column: 1691, scope: !1354)
!1359 = !DILocalVariable(name: "stride", arg: 3, scope: !1354, file: !16, line: 207, type: !50)
!1360 = !DILocation(line: 207, column: 1706, scope: !1354)
!1361 = !DILocalVariable(name: "full", scope: !1354, file: !16, line: 207, type: !983)
!1362 = !DILocation(line: 207, column: 1723, scope: !1354)
!1363 = !DILocalVariable(name: "full_mid", scope: !1354, file: !16, line: 207, type: !440)
!1364 = !DILocation(line: 207, column: 1755, scope: !1354)
!1365 = !DILocation(line: 207, column: 1766, scope: !1354)
!1366 = !DILocation(line: 207, column: 1771, scope: !1354)
!1367 = !DILocation(line: 207, column: 1803, scope: !1354)
!1368 = !DILocation(line: 207, column: 1809, scope: !1354)
!1369 = !DILocation(line: 207, column: 1817, scope: !1354)
!1370 = !DILocation(line: 207, column: 1816, scope: !1354)
!1371 = !DILocation(line: 207, column: 1813, scope: !1354)
!1372 = !DILocation(line: 207, column: 1828, scope: !1354)
!1373 = !DILocation(line: 207, column: 1778, scope: !1354)
!1374 = !DILocation(line: 207, column: 1879, scope: !1354)
!1375 = !DILocation(line: 207, column: 1884, scope: !1354)
!1376 = !DILocation(line: 207, column: 1894, scope: !1354)
!1377 = !DILocation(line: 207, column: 1854, scope: !1378)
!1378 = !DILexicalBlockFile(scope: !1354, file: !16, discriminator: 1)
!1379 = !DILocation(line: 207, column: 1919, scope: !1354)
!1380 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc32_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1381 = !DILocalVariable(name: "dst", arg: 1, scope: !1380, file: !16, line: 207, type: !48)
!1382 = !DILocation(line: 207, column: 1963, scope: !1380)
!1383 = !DILocalVariable(name: "src", arg: 2, scope: !1380, file: !16, line: 207, type: !49)
!1384 = !DILocation(line: 207, column: 1983, scope: !1380)
!1385 = !DILocalVariable(name: "stride", arg: 3, scope: !1380, file: !16, line: 207, type: !50)
!1386 = !DILocation(line: 207, column: 1998, scope: !1380)
!1387 = !DILocalVariable(name: "full", scope: !1380, file: !16, line: 207, type: !983)
!1388 = !DILocation(line: 207, column: 2015, scope: !1380)
!1389 = !DILocalVariable(name: "full_mid", scope: !1380, file: !16, line: 207, type: !440)
!1390 = !DILocation(line: 207, column: 2047, scope: !1380)
!1391 = !DILocation(line: 207, column: 2058, scope: !1380)
!1392 = !DILocation(line: 207, column: 2063, scope: !1380)
!1393 = !DILocation(line: 207, column: 2095, scope: !1380)
!1394 = !DILocation(line: 207, column: 2101, scope: !1380)
!1395 = !DILocation(line: 207, column: 2109, scope: !1380)
!1396 = !DILocation(line: 207, column: 2108, scope: !1380)
!1397 = !DILocation(line: 207, column: 2105, scope: !1380)
!1398 = !DILocation(line: 207, column: 2120, scope: !1380)
!1399 = !DILocation(line: 207, column: 2070, scope: !1380)
!1400 = !DILocation(line: 207, column: 2171, scope: !1380)
!1401 = !DILocation(line: 207, column: 2176, scope: !1380)
!1402 = !DILocation(line: 207, column: 2186, scope: !1380)
!1403 = !DILocation(line: 207, column: 2146, scope: !1404)
!1404 = !DILexicalBlockFile(scope: !1380, file: !16, discriminator: 1)
!1405 = !DILocation(line: 207, column: 2211, scope: !1380)
!1406 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc03_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1407 = !DILocalVariable(name: "dst", arg: 1, scope: !1406, file: !16, line: 207, type: !48)
!1408 = !DILocation(line: 207, column: 2255, scope: !1406)
!1409 = !DILocalVariable(name: "src", arg: 2, scope: !1406, file: !16, line: 207, type: !49)
!1410 = !DILocation(line: 207, column: 2275, scope: !1406)
!1411 = !DILocalVariable(name: "stride", arg: 3, scope: !1406, file: !16, line: 207, type: !50)
!1412 = !DILocation(line: 207, column: 2290, scope: !1406)
!1413 = !DILocation(line: 207, column: 2324, scope: !1406)
!1414 = !DILocation(line: 207, column: 2329, scope: !1406)
!1415 = !DILocation(line: 207, column: 2334, scope: !1406)
!1416 = !DILocation(line: 207, column: 2342, scope: !1406)
!1417 = !DILocation(line: 207, column: 2299, scope: !1406)
!1418 = !DILocation(line: 207, column: 2364, scope: !1406)
!1419 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc13_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1420 = !DILocalVariable(name: "dst", arg: 1, scope: !1419, file: !16, line: 207, type: !48)
!1421 = !DILocation(line: 207, column: 2408, scope: !1419)
!1422 = !DILocalVariable(name: "src", arg: 2, scope: !1419, file: !16, line: 207, type: !49)
!1423 = !DILocation(line: 207, column: 2428, scope: !1419)
!1424 = !DILocalVariable(name: "stride", arg: 3, scope: !1419, file: !16, line: 207, type: !50)
!1425 = !DILocation(line: 207, column: 2443, scope: !1419)
!1426 = !DILocalVariable(name: "full", scope: !1419, file: !16, line: 207, type: !983)
!1427 = !DILocation(line: 207, column: 2460, scope: !1419)
!1428 = !DILocalVariable(name: "full_mid", scope: !1419, file: !16, line: 207, type: !440)
!1429 = !DILocation(line: 207, column: 2492, scope: !1419)
!1430 = !DILocation(line: 207, column: 2503, scope: !1419)
!1431 = !DILocation(line: 207, column: 2508, scope: !1419)
!1432 = !DILocation(line: 207, column: 2540, scope: !1419)
!1433 = !DILocation(line: 207, column: 2546, scope: !1419)
!1434 = !DILocation(line: 207, column: 2554, scope: !1419)
!1435 = !DILocation(line: 207, column: 2553, scope: !1419)
!1436 = !DILocation(line: 207, column: 2550, scope: !1419)
!1437 = !DILocation(line: 207, column: 2565, scope: !1419)
!1438 = !DILocation(line: 207, column: 2515, scope: !1419)
!1439 = !DILocation(line: 207, column: 2616, scope: !1419)
!1440 = !DILocation(line: 207, column: 2621, scope: !1419)
!1441 = !DILocation(line: 207, column: 2631, scope: !1419)
!1442 = !DILocation(line: 207, column: 2591, scope: !1443)
!1443 = !DILexicalBlockFile(scope: !1419, file: !16, discriminator: 1)
!1444 = !DILocation(line: 207, column: 2656, scope: !1419)
!1445 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc23_c", scope: !16, file: !16, line: 207, type: !46, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1446 = !DILocalVariable(name: "dst", arg: 1, scope: !1445, file: !16, line: 207, type: !48)
!1447 = !DILocation(line: 207, column: 2700, scope: !1445)
!1448 = !DILocalVariable(name: "src", arg: 2, scope: !1445, file: !16, line: 207, type: !49)
!1449 = !DILocation(line: 207, column: 2720, scope: !1445)
!1450 = !DILocalVariable(name: "stride", arg: 3, scope: !1445, file: !16, line: 207, type: !50)
!1451 = !DILocation(line: 207, column: 2735, scope: !1445)
!1452 = !DILocalVariable(name: "full", scope: !1445, file: !16, line: 207, type: !983)
!1453 = !DILocation(line: 207, column: 2752, scope: !1445)
!1454 = !DILocalVariable(name: "full_mid", scope: !1445, file: !16, line: 207, type: !440)
!1455 = !DILocation(line: 207, column: 2784, scope: !1445)
!1456 = !DILocation(line: 207, column: 2795, scope: !1445)
!1457 = !DILocation(line: 207, column: 2800, scope: !1445)
!1458 = !DILocation(line: 207, column: 2832, scope: !1445)
!1459 = !DILocation(line: 207, column: 2838, scope: !1445)
!1460 = !DILocation(line: 207, column: 2846, scope: !1445)
!1461 = !DILocation(line: 207, column: 2845, scope: !1445)
!1462 = !DILocation(line: 207, column: 2842, scope: !1445)
!1463 = !DILocation(line: 207, column: 2857, scope: !1445)
!1464 = !DILocation(line: 207, column: 2807, scope: !1445)
!1465 = !DILocation(line: 207, column: 2908, scope: !1445)
!1466 = !DILocation(line: 207, column: 2913, scope: !1445)
!1467 = !DILocation(line: 207, column: 2923, scope: !1445)
!1468 = !DILocation(line: 207, column: 2883, scope: !1469)
!1469 = !DILexicalBlockFile(scope: !1445, file: !16, discriminator: 1)
!1470 = !DILocation(line: 207, column: 2948, scope: !1445)
!1471 = distinct !DISubprogram(name: "avg_rv40_qpel8_mc33_c", scope: !16, file: !16, line: 282, type: !46, isLocal: true, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1472 = !DILocalVariable(name: "dst", arg: 1, scope: !1471, file: !16, line: 282, type: !48)
!1473 = !DILocation(line: 282, column: 44, scope: !1471)
!1474 = !DILocalVariable(name: "src", arg: 2, scope: !1471, file: !16, line: 282, type: !49)
!1475 = !DILocation(line: 282, column: 64, scope: !1471)
!1476 = !DILocalVariable(name: "stride", arg: 3, scope: !1471, file: !16, line: 282, type: !50)
!1477 = !DILocation(line: 282, column: 79, scope: !1471)
!1478 = !DILocation(line: 284, column: 25, scope: !1471)
!1479 = !DILocation(line: 284, column: 30, scope: !1471)
!1480 = !DILocation(line: 284, column: 35, scope: !1471)
!1481 = !DILocation(line: 284, column: 5, scope: !1471)
!1482 = !DILocation(line: 285, column: 1, scope: !1471)
!1483 = distinct !DISubprogram(name: "put_rv40_chroma_mc8_c", scope: !16, file: !16, line: 378, type: !60, isLocal: true, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1484 = !DILocalVariable(name: "dst", arg: 1, scope: !1483, file: !16, line: 378, type: !48)
!1485 = !DILocation(line: 378, column: 1032, scope: !1483)
!1486 = !DILocalVariable(name: "src", arg: 2, scope: !1483, file: !16, line: 378, type: !48)
!1487 = !DILocation(line: 378, column: 1047, scope: !1483)
!1488 = !DILocalVariable(name: "stride", arg: 3, scope: !1483, file: !16, line: 378, type: !50)
!1489 = !DILocation(line: 378, column: 1063, scope: !1483)
!1490 = !DILocalVariable(name: "h", arg: 4, scope: !1483, file: !16, line: 378, type: !19)
!1491 = !DILocation(line: 378, column: 1075, scope: !1483)
!1492 = !DILocalVariable(name: "x", arg: 5, scope: !1483, file: !16, line: 378, type: !19)
!1493 = !DILocation(line: 378, column: 1082, scope: !1483)
!1494 = !DILocalVariable(name: "y", arg: 6, scope: !1483, file: !16, line: 378, type: !19)
!1495 = !DILocation(line: 378, column: 1089, scope: !1483)
!1496 = !DILocalVariable(name: "A", scope: !1483, file: !16, line: 378, type: !18)
!1497 = !DILocation(line: 378, column: 1103, scope: !1483)
!1498 = !DILocation(line: 378, column: 1110, scope: !1483)
!1499 = !DILocation(line: 378, column: 1109, scope: !1483)
!1500 = !DILocation(line: 378, column: 1118, scope: !1483)
!1501 = !DILocation(line: 378, column: 1117, scope: !1483)
!1502 = !DILocation(line: 378, column: 1113, scope: !1483)
!1503 = !DILocalVariable(name: "B", scope: !1483, file: !16, line: 378, type: !18)
!1504 = !DILocation(line: 378, column: 1132, scope: !1483)
!1505 = !DILocation(line: 378, column: 1138, scope: !1483)
!1506 = !DILocation(line: 378, column: 1146, scope: !1483)
!1507 = !DILocation(line: 378, column: 1145, scope: !1483)
!1508 = !DILocation(line: 378, column: 1141, scope: !1483)
!1509 = !DILocalVariable(name: "C", scope: !1483, file: !16, line: 378, type: !18)
!1510 = !DILocation(line: 378, column: 1160, scope: !1483)
!1511 = !DILocation(line: 378, column: 1167, scope: !1483)
!1512 = !DILocation(line: 378, column: 1166, scope: !1483)
!1513 = !DILocation(line: 378, column: 1174, scope: !1483)
!1514 = !DILocation(line: 378, column: 1170, scope: !1483)
!1515 = !DILocalVariable(name: "D", scope: !1483, file: !16, line: 378, type: !18)
!1516 = !DILocation(line: 378, column: 1188, scope: !1483)
!1517 = !DILocation(line: 378, column: 1194, scope: !1483)
!1518 = !DILocation(line: 378, column: 1201, scope: !1483)
!1519 = !DILocation(line: 378, column: 1197, scope: !1483)
!1520 = !DILocalVariable(name: "i", scope: !1483, file: !16, line: 378, type: !19)
!1521 = !DILocation(line: 378, column: 1209, scope: !1483)
!1522 = !DILocalVariable(name: "bias", scope: !1483, file: !16, line: 378, type: !19)
!1523 = !DILocation(line: 378, column: 1216, scope: !1483)
!1524 = !DILocation(line: 378, column: 1239, scope: !1483)
!1525 = !DILocation(line: 378, column: 1240, scope: !1483)
!1526 = !DILocation(line: 378, column: 1223, scope: !1483)
!1527 = !DILocation(line: 378, column: 1233, scope: !1483)
!1528 = !DILocation(line: 378, column: 1234, scope: !1483)
!1529 = !DILocation(line: 378, column: 1260, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1483, file: !16, line: 378, column: 1260)
!1531 = !DILocation(line: 378, column: 1260, scope: !1483)
!1532 = !DILocation(line: 378, column: 1270, scope: !1533)
!1533 = !DILexicalBlockFile(scope: !1534, file: !16, discriminator: 1)
!1534 = distinct !DILexicalBlock(scope: !1535, file: !16, line: 378, column: 1264)
!1535 = distinct !DILexicalBlock(scope: !1530, file: !16, line: 378, column: 1262)
!1536 = !DILocation(line: 378, column: 1268, scope: !1533)
!1537 = !DILocation(line: 378, column: 1275, scope: !1538)
!1538 = !DILexicalBlockFile(scope: !1539, file: !16, discriminator: 2)
!1539 = distinct !DILexicalBlock(scope: !1534, file: !16, line: 378, column: 1264)
!1540 = !DILocation(line: 378, column: 1279, scope: !1538)
!1541 = !DILocation(line: 378, column: 1277, scope: !1538)
!1542 = !DILocation(line: 378, column: 1264, scope: !1538)
!1543 = !DILocation(line: 378, column: 1300, scope: !1544)
!1544 = !DILexicalBlockFile(scope: !1545, file: !16, discriminator: 3)
!1545 = distinct !DILexicalBlock(scope: !1539, file: !16, line: 378, column: 1286)
!1546 = !DILocation(line: 378, column: 1302, scope: !1544)
!1547 = !DILocation(line: 378, column: 1301, scope: !1544)
!1548 = !DILocation(line: 378, column: 1311, scope: !1544)
!1549 = !DILocation(line: 378, column: 1313, scope: !1544)
!1550 = !DILocation(line: 378, column: 1312, scope: !1544)
!1551 = !DILocation(line: 378, column: 1309, scope: !1544)
!1552 = !DILocation(line: 378, column: 1322, scope: !1544)
!1553 = !DILocation(line: 378, column: 1328, scope: !1544)
!1554 = !DILocation(line: 378, column: 1334, scope: !1544)
!1555 = !DILocation(line: 378, column: 1324, scope: !1544)
!1556 = !DILocation(line: 378, column: 1323, scope: !1544)
!1557 = !DILocation(line: 378, column: 1320, scope: !1544)
!1558 = !DILocation(line: 378, column: 1340, scope: !1544)
!1559 = !DILocation(line: 378, column: 1346, scope: !1544)
!1560 = !DILocation(line: 378, column: 1352, scope: !1544)
!1561 = !DILocation(line: 378, column: 1342, scope: !1544)
!1562 = !DILocation(line: 378, column: 1341, scope: !1544)
!1563 = !DILocation(line: 378, column: 1338, scope: !1544)
!1564 = !DILocation(line: 378, column: 1358, scope: !1544)
!1565 = !DILocation(line: 378, column: 1356, scope: !1544)
!1566 = !DILocation(line: 378, column: 1364, scope: !1544)
!1567 = !DILocation(line: 378, column: 1297, scope: !1544)
!1568 = !DILocation(line: 378, column: 1288, scope: !1544)
!1569 = !DILocation(line: 378, column: 1295, scope: !1544)
!1570 = !DILocation(line: 378, column: 1382, scope: !1544)
!1571 = !DILocation(line: 378, column: 1384, scope: !1544)
!1572 = !DILocation(line: 378, column: 1383, scope: !1544)
!1573 = !DILocation(line: 378, column: 1393, scope: !1544)
!1574 = !DILocation(line: 378, column: 1395, scope: !1544)
!1575 = !DILocation(line: 378, column: 1394, scope: !1544)
!1576 = !DILocation(line: 378, column: 1391, scope: !1544)
!1577 = !DILocation(line: 378, column: 1404, scope: !1544)
!1578 = !DILocation(line: 378, column: 1410, scope: !1544)
!1579 = !DILocation(line: 378, column: 1416, scope: !1544)
!1580 = !DILocation(line: 378, column: 1406, scope: !1544)
!1581 = !DILocation(line: 378, column: 1405, scope: !1544)
!1582 = !DILocation(line: 378, column: 1402, scope: !1544)
!1583 = !DILocation(line: 378, column: 1422, scope: !1544)
!1584 = !DILocation(line: 378, column: 1428, scope: !1544)
!1585 = !DILocation(line: 378, column: 1434, scope: !1544)
!1586 = !DILocation(line: 378, column: 1424, scope: !1544)
!1587 = !DILocation(line: 378, column: 1423, scope: !1544)
!1588 = !DILocation(line: 378, column: 1420, scope: !1544)
!1589 = !DILocation(line: 378, column: 1440, scope: !1544)
!1590 = !DILocation(line: 378, column: 1438, scope: !1544)
!1591 = !DILocation(line: 378, column: 1446, scope: !1544)
!1592 = !DILocation(line: 378, column: 1379, scope: !1544)
!1593 = !DILocation(line: 378, column: 1370, scope: !1544)
!1594 = !DILocation(line: 378, column: 1377, scope: !1544)
!1595 = !DILocation(line: 378, column: 1464, scope: !1544)
!1596 = !DILocation(line: 378, column: 1466, scope: !1544)
!1597 = !DILocation(line: 378, column: 1465, scope: !1544)
!1598 = !DILocation(line: 378, column: 1475, scope: !1544)
!1599 = !DILocation(line: 378, column: 1477, scope: !1544)
!1600 = !DILocation(line: 378, column: 1476, scope: !1544)
!1601 = !DILocation(line: 378, column: 1473, scope: !1544)
!1602 = !DILocation(line: 378, column: 1486, scope: !1544)
!1603 = !DILocation(line: 378, column: 1492, scope: !1544)
!1604 = !DILocation(line: 378, column: 1498, scope: !1544)
!1605 = !DILocation(line: 378, column: 1488, scope: !1544)
!1606 = !DILocation(line: 378, column: 1487, scope: !1544)
!1607 = !DILocation(line: 378, column: 1484, scope: !1544)
!1608 = !DILocation(line: 378, column: 1504, scope: !1544)
!1609 = !DILocation(line: 378, column: 1510, scope: !1544)
!1610 = !DILocation(line: 378, column: 1516, scope: !1544)
!1611 = !DILocation(line: 378, column: 1506, scope: !1544)
!1612 = !DILocation(line: 378, column: 1505, scope: !1544)
!1613 = !DILocation(line: 378, column: 1502, scope: !1544)
!1614 = !DILocation(line: 378, column: 1522, scope: !1544)
!1615 = !DILocation(line: 378, column: 1520, scope: !1544)
!1616 = !DILocation(line: 378, column: 1528, scope: !1544)
!1617 = !DILocation(line: 378, column: 1461, scope: !1544)
!1618 = !DILocation(line: 378, column: 1452, scope: !1544)
!1619 = !DILocation(line: 378, column: 1459, scope: !1544)
!1620 = !DILocation(line: 378, column: 1546, scope: !1544)
!1621 = !DILocation(line: 378, column: 1548, scope: !1544)
!1622 = !DILocation(line: 378, column: 1547, scope: !1544)
!1623 = !DILocation(line: 378, column: 1557, scope: !1544)
!1624 = !DILocation(line: 378, column: 1559, scope: !1544)
!1625 = !DILocation(line: 378, column: 1558, scope: !1544)
!1626 = !DILocation(line: 378, column: 1555, scope: !1544)
!1627 = !DILocation(line: 378, column: 1568, scope: !1544)
!1628 = !DILocation(line: 378, column: 1574, scope: !1544)
!1629 = !DILocation(line: 378, column: 1580, scope: !1544)
!1630 = !DILocation(line: 378, column: 1570, scope: !1544)
!1631 = !DILocation(line: 378, column: 1569, scope: !1544)
!1632 = !DILocation(line: 378, column: 1566, scope: !1544)
!1633 = !DILocation(line: 378, column: 1586, scope: !1544)
!1634 = !DILocation(line: 378, column: 1592, scope: !1544)
!1635 = !DILocation(line: 378, column: 1598, scope: !1544)
!1636 = !DILocation(line: 378, column: 1588, scope: !1544)
!1637 = !DILocation(line: 378, column: 1587, scope: !1544)
!1638 = !DILocation(line: 378, column: 1584, scope: !1544)
!1639 = !DILocation(line: 378, column: 1604, scope: !1544)
!1640 = !DILocation(line: 378, column: 1602, scope: !1544)
!1641 = !DILocation(line: 378, column: 1610, scope: !1544)
!1642 = !DILocation(line: 378, column: 1543, scope: !1544)
!1643 = !DILocation(line: 378, column: 1534, scope: !1544)
!1644 = !DILocation(line: 378, column: 1541, scope: !1544)
!1645 = !DILocation(line: 378, column: 1628, scope: !1544)
!1646 = !DILocation(line: 378, column: 1630, scope: !1544)
!1647 = !DILocation(line: 378, column: 1629, scope: !1544)
!1648 = !DILocation(line: 378, column: 1639, scope: !1544)
!1649 = !DILocation(line: 378, column: 1641, scope: !1544)
!1650 = !DILocation(line: 378, column: 1640, scope: !1544)
!1651 = !DILocation(line: 378, column: 1637, scope: !1544)
!1652 = !DILocation(line: 378, column: 1650, scope: !1544)
!1653 = !DILocation(line: 378, column: 1656, scope: !1544)
!1654 = !DILocation(line: 378, column: 1662, scope: !1544)
!1655 = !DILocation(line: 378, column: 1652, scope: !1544)
!1656 = !DILocation(line: 378, column: 1651, scope: !1544)
!1657 = !DILocation(line: 378, column: 1648, scope: !1544)
!1658 = !DILocation(line: 378, column: 1668, scope: !1544)
!1659 = !DILocation(line: 378, column: 1674, scope: !1544)
!1660 = !DILocation(line: 378, column: 1680, scope: !1544)
!1661 = !DILocation(line: 378, column: 1670, scope: !1544)
!1662 = !DILocation(line: 378, column: 1669, scope: !1544)
!1663 = !DILocation(line: 378, column: 1666, scope: !1544)
!1664 = !DILocation(line: 378, column: 1686, scope: !1544)
!1665 = !DILocation(line: 378, column: 1684, scope: !1544)
!1666 = !DILocation(line: 378, column: 1692, scope: !1544)
!1667 = !DILocation(line: 378, column: 1625, scope: !1544)
!1668 = !DILocation(line: 378, column: 1616, scope: !1544)
!1669 = !DILocation(line: 378, column: 1623, scope: !1544)
!1670 = !DILocation(line: 378, column: 1710, scope: !1544)
!1671 = !DILocation(line: 378, column: 1712, scope: !1544)
!1672 = !DILocation(line: 378, column: 1711, scope: !1544)
!1673 = !DILocation(line: 378, column: 1721, scope: !1544)
!1674 = !DILocation(line: 378, column: 1723, scope: !1544)
!1675 = !DILocation(line: 378, column: 1722, scope: !1544)
!1676 = !DILocation(line: 378, column: 1719, scope: !1544)
!1677 = !DILocation(line: 378, column: 1732, scope: !1544)
!1678 = !DILocation(line: 378, column: 1738, scope: !1544)
!1679 = !DILocation(line: 378, column: 1744, scope: !1544)
!1680 = !DILocation(line: 378, column: 1734, scope: !1544)
!1681 = !DILocation(line: 378, column: 1733, scope: !1544)
!1682 = !DILocation(line: 378, column: 1730, scope: !1544)
!1683 = !DILocation(line: 378, column: 1750, scope: !1544)
!1684 = !DILocation(line: 378, column: 1756, scope: !1544)
!1685 = !DILocation(line: 378, column: 1762, scope: !1544)
!1686 = !DILocation(line: 378, column: 1752, scope: !1544)
!1687 = !DILocation(line: 378, column: 1751, scope: !1544)
!1688 = !DILocation(line: 378, column: 1748, scope: !1544)
!1689 = !DILocation(line: 378, column: 1768, scope: !1544)
!1690 = !DILocation(line: 378, column: 1766, scope: !1544)
!1691 = !DILocation(line: 378, column: 1774, scope: !1544)
!1692 = !DILocation(line: 378, column: 1707, scope: !1544)
!1693 = !DILocation(line: 378, column: 1698, scope: !1544)
!1694 = !DILocation(line: 378, column: 1705, scope: !1544)
!1695 = !DILocation(line: 378, column: 1792, scope: !1544)
!1696 = !DILocation(line: 378, column: 1794, scope: !1544)
!1697 = !DILocation(line: 378, column: 1793, scope: !1544)
!1698 = !DILocation(line: 378, column: 1803, scope: !1544)
!1699 = !DILocation(line: 378, column: 1805, scope: !1544)
!1700 = !DILocation(line: 378, column: 1804, scope: !1544)
!1701 = !DILocation(line: 378, column: 1801, scope: !1544)
!1702 = !DILocation(line: 378, column: 1814, scope: !1544)
!1703 = !DILocation(line: 378, column: 1820, scope: !1544)
!1704 = !DILocation(line: 378, column: 1826, scope: !1544)
!1705 = !DILocation(line: 378, column: 1816, scope: !1544)
!1706 = !DILocation(line: 378, column: 1815, scope: !1544)
!1707 = !DILocation(line: 378, column: 1812, scope: !1544)
!1708 = !DILocation(line: 378, column: 1832, scope: !1544)
!1709 = !DILocation(line: 378, column: 1838, scope: !1544)
!1710 = !DILocation(line: 378, column: 1844, scope: !1544)
!1711 = !DILocation(line: 378, column: 1834, scope: !1544)
!1712 = !DILocation(line: 378, column: 1833, scope: !1544)
!1713 = !DILocation(line: 378, column: 1830, scope: !1544)
!1714 = !DILocation(line: 378, column: 1850, scope: !1544)
!1715 = !DILocation(line: 378, column: 1848, scope: !1544)
!1716 = !DILocation(line: 378, column: 1856, scope: !1544)
!1717 = !DILocation(line: 378, column: 1789, scope: !1544)
!1718 = !DILocation(line: 378, column: 1780, scope: !1544)
!1719 = !DILocation(line: 378, column: 1787, scope: !1544)
!1720 = !DILocation(line: 378, column: 1874, scope: !1544)
!1721 = !DILocation(line: 378, column: 1876, scope: !1544)
!1722 = !DILocation(line: 378, column: 1875, scope: !1544)
!1723 = !DILocation(line: 378, column: 1885, scope: !1544)
!1724 = !DILocation(line: 378, column: 1887, scope: !1544)
!1725 = !DILocation(line: 378, column: 1886, scope: !1544)
!1726 = !DILocation(line: 378, column: 1883, scope: !1544)
!1727 = !DILocation(line: 378, column: 1896, scope: !1544)
!1728 = !DILocation(line: 378, column: 1902, scope: !1544)
!1729 = !DILocation(line: 378, column: 1908, scope: !1544)
!1730 = !DILocation(line: 378, column: 1898, scope: !1544)
!1731 = !DILocation(line: 378, column: 1897, scope: !1544)
!1732 = !DILocation(line: 378, column: 1894, scope: !1544)
!1733 = !DILocation(line: 378, column: 1914, scope: !1544)
!1734 = !DILocation(line: 378, column: 1920, scope: !1544)
!1735 = !DILocation(line: 378, column: 1926, scope: !1544)
!1736 = !DILocation(line: 378, column: 1916, scope: !1544)
!1737 = !DILocation(line: 378, column: 1915, scope: !1544)
!1738 = !DILocation(line: 378, column: 1912, scope: !1544)
!1739 = !DILocation(line: 378, column: 1932, scope: !1544)
!1740 = !DILocation(line: 378, column: 1930, scope: !1544)
!1741 = !DILocation(line: 378, column: 1938, scope: !1544)
!1742 = !DILocation(line: 378, column: 1871, scope: !1544)
!1743 = !DILocation(line: 378, column: 1862, scope: !1544)
!1744 = !DILocation(line: 378, column: 1869, scope: !1544)
!1745 = !DILocation(line: 378, column: 1951, scope: !1544)
!1746 = !DILocation(line: 378, column: 1948, scope: !1544)
!1747 = !DILocation(line: 378, column: 1966, scope: !1544)
!1748 = !DILocation(line: 378, column: 1963, scope: !1544)
!1749 = !DILocation(line: 378, column: 1974, scope: !1544)
!1750 = !DILocation(line: 378, column: 1283, scope: !1751)
!1751 = !DILexicalBlockFile(scope: !1539, file: !16, discriminator: 4)
!1752 = !DILocation(line: 378, column: 1264, scope: !1751)
!1753 = distinct !{!1753, !1754}
!1754 = !DILocation(line: 378, column: 1264, scope: !1535)
!1755 = !DILocation(line: 378, column: 1976, scope: !1756)
!1756 = !DILexicalBlockFile(scope: !1535, file: !16, discriminator: 5)
!1757 = !DILocalVariable(name: "E", scope: !1758, file: !16, line: 378, type: !18)
!1758 = distinct !DILexicalBlock(scope: !1530, file: !16, line: 378, column: 1981)
!1759 = !DILocation(line: 378, column: 1993, scope: !1758)
!1760 = !DILocation(line: 378, column: 1997, scope: !1761)
!1761 = !DILexicalBlockFile(scope: !1758, file: !16, discriminator: 6)
!1762 = !DILocation(line: 378, column: 2001, scope: !1761)
!1763 = !DILocation(line: 378, column: 1999, scope: !1761)
!1764 = !DILocation(line: 378, column: 1993, scope: !1761)
!1765 = !DILocalVariable(name: "step", scope: !1758, file: !16, line: 378, type: !1766)
!1766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !50)
!1767 = !DILocation(line: 378, column: 2020, scope: !1758)
!1768 = !DILocation(line: 378, column: 2027, scope: !1761)
!1769 = !DILocation(line: 378, column: 2031, scope: !1770)
!1770 = !DILexicalBlockFile(scope: !1758, file: !16, discriminator: 7)
!1771 = !DILocation(line: 378, column: 2027, scope: !1770)
!1772 = !DILocation(line: 378, column: 2027, scope: !1773)
!1773 = !DILexicalBlockFile(scope: !1758, file: !16, discriminator: 8)
!1774 = !DILocation(line: 378, column: 2027, scope: !1775)
!1775 = !DILexicalBlockFile(scope: !1758, file: !16, discriminator: 9)
!1776 = !DILocation(line: 378, column: 2020, scope: !1775)
!1777 = !DILocation(line: 378, column: 2049, scope: !1775)
!1778 = !DILocation(line: 378, column: 2047, scope: !1775)
!1779 = !DILocation(line: 378, column: 2054, scope: !1780)
!1780 = !DILexicalBlockFile(scope: !1781, file: !16, discriminator: 10)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !16, line: 378, column: 2043)
!1782 = distinct !DILexicalBlock(scope: !1758, file: !16, line: 378, column: 2043)
!1783 = !DILocation(line: 378, column: 2058, scope: !1780)
!1784 = !DILocation(line: 378, column: 2056, scope: !1780)
!1785 = !DILocation(line: 378, column: 2043, scope: !1780)
!1786 = !DILocation(line: 378, column: 2079, scope: !1787)
!1787 = !DILexicalBlockFile(scope: !1788, file: !16, discriminator: 11)
!1788 = distinct !DILexicalBlock(scope: !1781, file: !16, line: 378, column: 2065)
!1789 = !DILocation(line: 378, column: 2081, scope: !1787)
!1790 = !DILocation(line: 378, column: 2080, scope: !1787)
!1791 = !DILocation(line: 378, column: 2090, scope: !1787)
!1792 = !DILocation(line: 378, column: 2096, scope: !1787)
!1793 = !DILocation(line: 378, column: 2100, scope: !1787)
!1794 = !DILocation(line: 378, column: 2092, scope: !1787)
!1795 = !DILocation(line: 378, column: 2091, scope: !1787)
!1796 = !DILocation(line: 378, column: 2088, scope: !1787)
!1797 = !DILocation(line: 378, column: 2106, scope: !1787)
!1798 = !DILocation(line: 378, column: 2104, scope: !1787)
!1799 = !DILocation(line: 378, column: 2112, scope: !1787)
!1800 = !DILocation(line: 378, column: 2076, scope: !1787)
!1801 = !DILocation(line: 378, column: 2067, scope: !1787)
!1802 = !DILocation(line: 378, column: 2074, scope: !1787)
!1803 = !DILocation(line: 378, column: 2130, scope: !1787)
!1804 = !DILocation(line: 378, column: 2132, scope: !1787)
!1805 = !DILocation(line: 378, column: 2131, scope: !1787)
!1806 = !DILocation(line: 378, column: 2141, scope: !1787)
!1807 = !DILocation(line: 378, column: 2147, scope: !1787)
!1808 = !DILocation(line: 378, column: 2151, scope: !1787)
!1809 = !DILocation(line: 378, column: 2143, scope: !1787)
!1810 = !DILocation(line: 378, column: 2142, scope: !1787)
!1811 = !DILocation(line: 378, column: 2139, scope: !1787)
!1812 = !DILocation(line: 378, column: 2157, scope: !1787)
!1813 = !DILocation(line: 378, column: 2155, scope: !1787)
!1814 = !DILocation(line: 378, column: 2163, scope: !1787)
!1815 = !DILocation(line: 378, column: 2127, scope: !1787)
!1816 = !DILocation(line: 378, column: 2118, scope: !1787)
!1817 = !DILocation(line: 378, column: 2125, scope: !1787)
!1818 = !DILocation(line: 378, column: 2181, scope: !1787)
!1819 = !DILocation(line: 378, column: 2183, scope: !1787)
!1820 = !DILocation(line: 378, column: 2182, scope: !1787)
!1821 = !DILocation(line: 378, column: 2192, scope: !1787)
!1822 = !DILocation(line: 378, column: 2198, scope: !1787)
!1823 = !DILocation(line: 378, column: 2202, scope: !1787)
!1824 = !DILocation(line: 378, column: 2194, scope: !1787)
!1825 = !DILocation(line: 378, column: 2193, scope: !1787)
!1826 = !DILocation(line: 378, column: 2190, scope: !1787)
!1827 = !DILocation(line: 378, column: 2208, scope: !1787)
!1828 = !DILocation(line: 378, column: 2206, scope: !1787)
!1829 = !DILocation(line: 378, column: 2214, scope: !1787)
!1830 = !DILocation(line: 378, column: 2178, scope: !1787)
!1831 = !DILocation(line: 378, column: 2169, scope: !1787)
!1832 = !DILocation(line: 378, column: 2176, scope: !1787)
!1833 = !DILocation(line: 378, column: 2232, scope: !1787)
!1834 = !DILocation(line: 378, column: 2234, scope: !1787)
!1835 = !DILocation(line: 378, column: 2233, scope: !1787)
!1836 = !DILocation(line: 378, column: 2243, scope: !1787)
!1837 = !DILocation(line: 378, column: 2249, scope: !1787)
!1838 = !DILocation(line: 378, column: 2253, scope: !1787)
!1839 = !DILocation(line: 378, column: 2245, scope: !1787)
!1840 = !DILocation(line: 378, column: 2244, scope: !1787)
!1841 = !DILocation(line: 378, column: 2241, scope: !1787)
!1842 = !DILocation(line: 378, column: 2259, scope: !1787)
!1843 = !DILocation(line: 378, column: 2257, scope: !1787)
!1844 = !DILocation(line: 378, column: 2265, scope: !1787)
!1845 = !DILocation(line: 378, column: 2229, scope: !1787)
!1846 = !DILocation(line: 378, column: 2220, scope: !1787)
!1847 = !DILocation(line: 378, column: 2227, scope: !1787)
!1848 = !DILocation(line: 378, column: 2283, scope: !1787)
!1849 = !DILocation(line: 378, column: 2285, scope: !1787)
!1850 = !DILocation(line: 378, column: 2284, scope: !1787)
!1851 = !DILocation(line: 378, column: 2294, scope: !1787)
!1852 = !DILocation(line: 378, column: 2300, scope: !1787)
!1853 = !DILocation(line: 378, column: 2304, scope: !1787)
!1854 = !DILocation(line: 378, column: 2296, scope: !1787)
!1855 = !DILocation(line: 378, column: 2295, scope: !1787)
!1856 = !DILocation(line: 378, column: 2292, scope: !1787)
!1857 = !DILocation(line: 378, column: 2310, scope: !1787)
!1858 = !DILocation(line: 378, column: 2308, scope: !1787)
!1859 = !DILocation(line: 378, column: 2316, scope: !1787)
!1860 = !DILocation(line: 378, column: 2280, scope: !1787)
!1861 = !DILocation(line: 378, column: 2271, scope: !1787)
!1862 = !DILocation(line: 378, column: 2278, scope: !1787)
!1863 = !DILocation(line: 378, column: 2334, scope: !1787)
!1864 = !DILocation(line: 378, column: 2336, scope: !1787)
!1865 = !DILocation(line: 378, column: 2335, scope: !1787)
!1866 = !DILocation(line: 378, column: 2345, scope: !1787)
!1867 = !DILocation(line: 378, column: 2351, scope: !1787)
!1868 = !DILocation(line: 378, column: 2355, scope: !1787)
!1869 = !DILocation(line: 378, column: 2347, scope: !1787)
!1870 = !DILocation(line: 378, column: 2346, scope: !1787)
!1871 = !DILocation(line: 378, column: 2343, scope: !1787)
!1872 = !DILocation(line: 378, column: 2361, scope: !1787)
!1873 = !DILocation(line: 378, column: 2359, scope: !1787)
!1874 = !DILocation(line: 378, column: 2367, scope: !1787)
!1875 = !DILocation(line: 378, column: 2331, scope: !1787)
!1876 = !DILocation(line: 378, column: 2322, scope: !1787)
!1877 = !DILocation(line: 378, column: 2329, scope: !1787)
!1878 = !DILocation(line: 378, column: 2385, scope: !1787)
!1879 = !DILocation(line: 378, column: 2387, scope: !1787)
!1880 = !DILocation(line: 378, column: 2386, scope: !1787)
!1881 = !DILocation(line: 378, column: 2396, scope: !1787)
!1882 = !DILocation(line: 378, column: 2402, scope: !1787)
!1883 = !DILocation(line: 378, column: 2406, scope: !1787)
!1884 = !DILocation(line: 378, column: 2398, scope: !1787)
!1885 = !DILocation(line: 378, column: 2397, scope: !1787)
!1886 = !DILocation(line: 378, column: 2394, scope: !1787)
!1887 = !DILocation(line: 378, column: 2412, scope: !1787)
!1888 = !DILocation(line: 378, column: 2410, scope: !1787)
!1889 = !DILocation(line: 378, column: 2418, scope: !1787)
!1890 = !DILocation(line: 378, column: 2382, scope: !1787)
!1891 = !DILocation(line: 378, column: 2373, scope: !1787)
!1892 = !DILocation(line: 378, column: 2380, scope: !1787)
!1893 = !DILocation(line: 378, column: 2436, scope: !1787)
!1894 = !DILocation(line: 378, column: 2438, scope: !1787)
!1895 = !DILocation(line: 378, column: 2437, scope: !1787)
!1896 = !DILocation(line: 378, column: 2447, scope: !1787)
!1897 = !DILocation(line: 378, column: 2453, scope: !1787)
!1898 = !DILocation(line: 378, column: 2457, scope: !1787)
!1899 = !DILocation(line: 378, column: 2449, scope: !1787)
!1900 = !DILocation(line: 378, column: 2448, scope: !1787)
!1901 = !DILocation(line: 378, column: 2445, scope: !1787)
!1902 = !DILocation(line: 378, column: 2463, scope: !1787)
!1903 = !DILocation(line: 378, column: 2461, scope: !1787)
!1904 = !DILocation(line: 378, column: 2469, scope: !1787)
!1905 = !DILocation(line: 378, column: 2433, scope: !1787)
!1906 = !DILocation(line: 378, column: 2424, scope: !1787)
!1907 = !DILocation(line: 378, column: 2431, scope: !1787)
!1908 = !DILocation(line: 378, column: 2482, scope: !1787)
!1909 = !DILocation(line: 378, column: 2479, scope: !1787)
!1910 = !DILocation(line: 378, column: 2497, scope: !1787)
!1911 = !DILocation(line: 378, column: 2494, scope: !1787)
!1912 = !DILocation(line: 378, column: 2505, scope: !1787)
!1913 = !DILocation(line: 378, column: 2062, scope: !1914)
!1914 = !DILexicalBlockFile(scope: !1781, file: !16, discriminator: 12)
!1915 = !DILocation(line: 378, column: 2043, scope: !1914)
!1916 = distinct !{!1916, !1917}
!1917 = !DILocation(line: 378, column: 2043, scope: !1758)
!1918 = !DILocation(line: 378, column: 2508, scope: !1919)
!1919 = !DILexicalBlockFile(scope: !1483, file: !16, discriminator: 13)
!1920 = distinct !DISubprogram(name: "put_rv40_chroma_mc4_c", scope: !16, file: !16, line: 378, type: !60, isLocal: true, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1921 = !DILocalVariable(name: "dst", arg: 1, scope: !1920, file: !16, line: 378, type: !48)
!1922 = !DILocation(line: 378, column: 44, scope: !1920)
!1923 = !DILocalVariable(name: "src", arg: 2, scope: !1920, file: !16, line: 378, type: !48)
!1924 = !DILocation(line: 378, column: 59, scope: !1920)
!1925 = !DILocalVariable(name: "stride", arg: 3, scope: !1920, file: !16, line: 378, type: !50)
!1926 = !DILocation(line: 378, column: 75, scope: !1920)
!1927 = !DILocalVariable(name: "h", arg: 4, scope: !1920, file: !16, line: 378, type: !19)
!1928 = !DILocation(line: 378, column: 87, scope: !1920)
!1929 = !DILocalVariable(name: "x", arg: 5, scope: !1920, file: !16, line: 378, type: !19)
!1930 = !DILocation(line: 378, column: 94, scope: !1920)
!1931 = !DILocalVariable(name: "y", arg: 6, scope: !1920, file: !16, line: 378, type: !19)
!1932 = !DILocation(line: 378, column: 101, scope: !1920)
!1933 = !DILocalVariable(name: "A", scope: !1920, file: !16, line: 378, type: !18)
!1934 = !DILocation(line: 378, column: 115, scope: !1920)
!1935 = !DILocation(line: 378, column: 122, scope: !1920)
!1936 = !DILocation(line: 378, column: 121, scope: !1920)
!1937 = !DILocation(line: 378, column: 130, scope: !1920)
!1938 = !DILocation(line: 378, column: 129, scope: !1920)
!1939 = !DILocation(line: 378, column: 125, scope: !1920)
!1940 = !DILocalVariable(name: "B", scope: !1920, file: !16, line: 378, type: !18)
!1941 = !DILocation(line: 378, column: 144, scope: !1920)
!1942 = !DILocation(line: 378, column: 150, scope: !1920)
!1943 = !DILocation(line: 378, column: 158, scope: !1920)
!1944 = !DILocation(line: 378, column: 157, scope: !1920)
!1945 = !DILocation(line: 378, column: 153, scope: !1920)
!1946 = !DILocalVariable(name: "C", scope: !1920, file: !16, line: 378, type: !18)
!1947 = !DILocation(line: 378, column: 172, scope: !1920)
!1948 = !DILocation(line: 378, column: 179, scope: !1920)
!1949 = !DILocation(line: 378, column: 178, scope: !1920)
!1950 = !DILocation(line: 378, column: 186, scope: !1920)
!1951 = !DILocation(line: 378, column: 182, scope: !1920)
!1952 = !DILocalVariable(name: "D", scope: !1920, file: !16, line: 378, type: !18)
!1953 = !DILocation(line: 378, column: 200, scope: !1920)
!1954 = !DILocation(line: 378, column: 206, scope: !1920)
!1955 = !DILocation(line: 378, column: 213, scope: !1920)
!1956 = !DILocation(line: 378, column: 209, scope: !1920)
!1957 = !DILocalVariable(name: "i", scope: !1920, file: !16, line: 378, type: !19)
!1958 = !DILocation(line: 378, column: 221, scope: !1920)
!1959 = !DILocalVariable(name: "bias", scope: !1920, file: !16, line: 378, type: !19)
!1960 = !DILocation(line: 378, column: 228, scope: !1920)
!1961 = !DILocation(line: 378, column: 251, scope: !1920)
!1962 = !DILocation(line: 378, column: 252, scope: !1920)
!1963 = !DILocation(line: 378, column: 235, scope: !1920)
!1964 = !DILocation(line: 378, column: 245, scope: !1920)
!1965 = !DILocation(line: 378, column: 246, scope: !1920)
!1966 = !DILocation(line: 378, column: 272, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1920, file: !16, line: 378, column: 272)
!1968 = !DILocation(line: 378, column: 272, scope: !1920)
!1969 = !DILocation(line: 378, column: 282, scope: !1970)
!1970 = !DILexicalBlockFile(scope: !1971, file: !16, discriminator: 1)
!1971 = distinct !DILexicalBlock(scope: !1972, file: !16, line: 378, column: 276)
!1972 = distinct !DILexicalBlock(scope: !1967, file: !16, line: 378, column: 274)
!1973 = !DILocation(line: 378, column: 280, scope: !1970)
!1974 = !DILocation(line: 378, column: 287, scope: !1975)
!1975 = !DILexicalBlockFile(scope: !1976, file: !16, discriminator: 2)
!1976 = distinct !DILexicalBlock(scope: !1971, file: !16, line: 378, column: 276)
!1977 = !DILocation(line: 378, column: 291, scope: !1975)
!1978 = !DILocation(line: 378, column: 289, scope: !1975)
!1979 = !DILocation(line: 378, column: 276, scope: !1975)
!1980 = !DILocation(line: 378, column: 312, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !1982, file: !16, discriminator: 3)
!1982 = distinct !DILexicalBlock(scope: !1976, file: !16, line: 378, column: 298)
!1983 = !DILocation(line: 378, column: 314, scope: !1981)
!1984 = !DILocation(line: 378, column: 313, scope: !1981)
!1985 = !DILocation(line: 378, column: 323, scope: !1981)
!1986 = !DILocation(line: 378, column: 325, scope: !1981)
!1987 = !DILocation(line: 378, column: 324, scope: !1981)
!1988 = !DILocation(line: 378, column: 321, scope: !1981)
!1989 = !DILocation(line: 378, column: 334, scope: !1981)
!1990 = !DILocation(line: 378, column: 340, scope: !1981)
!1991 = !DILocation(line: 378, column: 346, scope: !1981)
!1992 = !DILocation(line: 378, column: 336, scope: !1981)
!1993 = !DILocation(line: 378, column: 335, scope: !1981)
!1994 = !DILocation(line: 378, column: 332, scope: !1981)
!1995 = !DILocation(line: 378, column: 352, scope: !1981)
!1996 = !DILocation(line: 378, column: 358, scope: !1981)
!1997 = !DILocation(line: 378, column: 364, scope: !1981)
!1998 = !DILocation(line: 378, column: 354, scope: !1981)
!1999 = !DILocation(line: 378, column: 353, scope: !1981)
!2000 = !DILocation(line: 378, column: 350, scope: !1981)
!2001 = !DILocation(line: 378, column: 370, scope: !1981)
!2002 = !DILocation(line: 378, column: 368, scope: !1981)
!2003 = !DILocation(line: 378, column: 376, scope: !1981)
!2004 = !DILocation(line: 378, column: 309, scope: !1981)
!2005 = !DILocation(line: 378, column: 300, scope: !1981)
!2006 = !DILocation(line: 378, column: 307, scope: !1981)
!2007 = !DILocation(line: 378, column: 394, scope: !1981)
!2008 = !DILocation(line: 378, column: 396, scope: !1981)
!2009 = !DILocation(line: 378, column: 395, scope: !1981)
!2010 = !DILocation(line: 378, column: 405, scope: !1981)
!2011 = !DILocation(line: 378, column: 407, scope: !1981)
!2012 = !DILocation(line: 378, column: 406, scope: !1981)
!2013 = !DILocation(line: 378, column: 403, scope: !1981)
!2014 = !DILocation(line: 378, column: 416, scope: !1981)
!2015 = !DILocation(line: 378, column: 422, scope: !1981)
!2016 = !DILocation(line: 378, column: 428, scope: !1981)
!2017 = !DILocation(line: 378, column: 418, scope: !1981)
!2018 = !DILocation(line: 378, column: 417, scope: !1981)
!2019 = !DILocation(line: 378, column: 414, scope: !1981)
!2020 = !DILocation(line: 378, column: 434, scope: !1981)
!2021 = !DILocation(line: 378, column: 440, scope: !1981)
!2022 = !DILocation(line: 378, column: 446, scope: !1981)
!2023 = !DILocation(line: 378, column: 436, scope: !1981)
!2024 = !DILocation(line: 378, column: 435, scope: !1981)
!2025 = !DILocation(line: 378, column: 432, scope: !1981)
!2026 = !DILocation(line: 378, column: 452, scope: !1981)
!2027 = !DILocation(line: 378, column: 450, scope: !1981)
!2028 = !DILocation(line: 378, column: 458, scope: !1981)
!2029 = !DILocation(line: 378, column: 391, scope: !1981)
!2030 = !DILocation(line: 378, column: 382, scope: !1981)
!2031 = !DILocation(line: 378, column: 389, scope: !1981)
!2032 = !DILocation(line: 378, column: 476, scope: !1981)
!2033 = !DILocation(line: 378, column: 478, scope: !1981)
!2034 = !DILocation(line: 378, column: 477, scope: !1981)
!2035 = !DILocation(line: 378, column: 487, scope: !1981)
!2036 = !DILocation(line: 378, column: 489, scope: !1981)
!2037 = !DILocation(line: 378, column: 488, scope: !1981)
!2038 = !DILocation(line: 378, column: 485, scope: !1981)
!2039 = !DILocation(line: 378, column: 498, scope: !1981)
!2040 = !DILocation(line: 378, column: 504, scope: !1981)
!2041 = !DILocation(line: 378, column: 510, scope: !1981)
!2042 = !DILocation(line: 378, column: 500, scope: !1981)
!2043 = !DILocation(line: 378, column: 499, scope: !1981)
!2044 = !DILocation(line: 378, column: 496, scope: !1981)
!2045 = !DILocation(line: 378, column: 516, scope: !1981)
!2046 = !DILocation(line: 378, column: 522, scope: !1981)
!2047 = !DILocation(line: 378, column: 528, scope: !1981)
!2048 = !DILocation(line: 378, column: 518, scope: !1981)
!2049 = !DILocation(line: 378, column: 517, scope: !1981)
!2050 = !DILocation(line: 378, column: 514, scope: !1981)
!2051 = !DILocation(line: 378, column: 534, scope: !1981)
!2052 = !DILocation(line: 378, column: 532, scope: !1981)
!2053 = !DILocation(line: 378, column: 540, scope: !1981)
!2054 = !DILocation(line: 378, column: 473, scope: !1981)
!2055 = !DILocation(line: 378, column: 464, scope: !1981)
!2056 = !DILocation(line: 378, column: 471, scope: !1981)
!2057 = !DILocation(line: 378, column: 558, scope: !1981)
!2058 = !DILocation(line: 378, column: 560, scope: !1981)
!2059 = !DILocation(line: 378, column: 559, scope: !1981)
!2060 = !DILocation(line: 378, column: 569, scope: !1981)
!2061 = !DILocation(line: 378, column: 571, scope: !1981)
!2062 = !DILocation(line: 378, column: 570, scope: !1981)
!2063 = !DILocation(line: 378, column: 567, scope: !1981)
!2064 = !DILocation(line: 378, column: 580, scope: !1981)
!2065 = !DILocation(line: 378, column: 586, scope: !1981)
!2066 = !DILocation(line: 378, column: 592, scope: !1981)
!2067 = !DILocation(line: 378, column: 582, scope: !1981)
!2068 = !DILocation(line: 378, column: 581, scope: !1981)
!2069 = !DILocation(line: 378, column: 578, scope: !1981)
!2070 = !DILocation(line: 378, column: 598, scope: !1981)
!2071 = !DILocation(line: 378, column: 604, scope: !1981)
!2072 = !DILocation(line: 378, column: 610, scope: !1981)
!2073 = !DILocation(line: 378, column: 600, scope: !1981)
!2074 = !DILocation(line: 378, column: 599, scope: !1981)
!2075 = !DILocation(line: 378, column: 596, scope: !1981)
!2076 = !DILocation(line: 378, column: 616, scope: !1981)
!2077 = !DILocation(line: 378, column: 614, scope: !1981)
!2078 = !DILocation(line: 378, column: 622, scope: !1981)
!2079 = !DILocation(line: 378, column: 555, scope: !1981)
!2080 = !DILocation(line: 378, column: 546, scope: !1981)
!2081 = !DILocation(line: 378, column: 553, scope: !1981)
!2082 = !DILocation(line: 378, column: 635, scope: !1981)
!2083 = !DILocation(line: 378, column: 632, scope: !1981)
!2084 = !DILocation(line: 378, column: 650, scope: !1981)
!2085 = !DILocation(line: 378, column: 647, scope: !1981)
!2086 = !DILocation(line: 378, column: 658, scope: !1981)
!2087 = !DILocation(line: 378, column: 295, scope: !2088)
!2088 = !DILexicalBlockFile(scope: !1976, file: !16, discriminator: 4)
!2089 = !DILocation(line: 378, column: 276, scope: !2088)
!2090 = distinct !{!2090, !2091}
!2091 = !DILocation(line: 378, column: 276, scope: !1972)
!2092 = !DILocation(line: 378, column: 660, scope: !2093)
!2093 = !DILexicalBlockFile(scope: !1972, file: !16, discriminator: 5)
!2094 = !DILocalVariable(name: "E", scope: !2095, file: !16, line: 378, type: !18)
!2095 = distinct !DILexicalBlock(scope: !1967, file: !16, line: 378, column: 665)
!2096 = !DILocation(line: 378, column: 677, scope: !2095)
!2097 = !DILocation(line: 378, column: 681, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !2095, file: !16, discriminator: 6)
!2099 = !DILocation(line: 378, column: 685, scope: !2098)
!2100 = !DILocation(line: 378, column: 683, scope: !2098)
!2101 = !DILocation(line: 378, column: 677, scope: !2098)
!2102 = !DILocalVariable(name: "step", scope: !2095, file: !16, line: 378, type: !1766)
!2103 = !DILocation(line: 378, column: 704, scope: !2095)
!2104 = !DILocation(line: 378, column: 711, scope: !2098)
!2105 = !DILocation(line: 378, column: 715, scope: !2106)
!2106 = !DILexicalBlockFile(scope: !2095, file: !16, discriminator: 7)
!2107 = !DILocation(line: 378, column: 711, scope: !2106)
!2108 = !DILocation(line: 378, column: 711, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !2095, file: !16, discriminator: 8)
!2110 = !DILocation(line: 378, column: 711, scope: !2111)
!2111 = !DILexicalBlockFile(scope: !2095, file: !16, discriminator: 9)
!2112 = !DILocation(line: 378, column: 704, scope: !2111)
!2113 = !DILocation(line: 378, column: 733, scope: !2111)
!2114 = !DILocation(line: 378, column: 731, scope: !2111)
!2115 = !DILocation(line: 378, column: 738, scope: !2116)
!2116 = !DILexicalBlockFile(scope: !2117, file: !16, discriminator: 10)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !16, line: 378, column: 727)
!2118 = distinct !DILexicalBlock(scope: !2095, file: !16, line: 378, column: 727)
!2119 = !DILocation(line: 378, column: 742, scope: !2116)
!2120 = !DILocation(line: 378, column: 740, scope: !2116)
!2121 = !DILocation(line: 378, column: 727, scope: !2116)
!2122 = !DILocation(line: 378, column: 763, scope: !2123)
!2123 = !DILexicalBlockFile(scope: !2124, file: !16, discriminator: 11)
!2124 = distinct !DILexicalBlock(scope: !2117, file: !16, line: 378, column: 749)
!2125 = !DILocation(line: 378, column: 765, scope: !2123)
!2126 = !DILocation(line: 378, column: 764, scope: !2123)
!2127 = !DILocation(line: 378, column: 774, scope: !2123)
!2128 = !DILocation(line: 378, column: 780, scope: !2123)
!2129 = !DILocation(line: 378, column: 784, scope: !2123)
!2130 = !DILocation(line: 378, column: 776, scope: !2123)
!2131 = !DILocation(line: 378, column: 775, scope: !2123)
!2132 = !DILocation(line: 378, column: 772, scope: !2123)
!2133 = !DILocation(line: 378, column: 790, scope: !2123)
!2134 = !DILocation(line: 378, column: 788, scope: !2123)
!2135 = !DILocation(line: 378, column: 796, scope: !2123)
!2136 = !DILocation(line: 378, column: 760, scope: !2123)
!2137 = !DILocation(line: 378, column: 751, scope: !2123)
!2138 = !DILocation(line: 378, column: 758, scope: !2123)
!2139 = !DILocation(line: 378, column: 814, scope: !2123)
!2140 = !DILocation(line: 378, column: 816, scope: !2123)
!2141 = !DILocation(line: 378, column: 815, scope: !2123)
!2142 = !DILocation(line: 378, column: 825, scope: !2123)
!2143 = !DILocation(line: 378, column: 831, scope: !2123)
!2144 = !DILocation(line: 378, column: 835, scope: !2123)
!2145 = !DILocation(line: 378, column: 827, scope: !2123)
!2146 = !DILocation(line: 378, column: 826, scope: !2123)
!2147 = !DILocation(line: 378, column: 823, scope: !2123)
!2148 = !DILocation(line: 378, column: 841, scope: !2123)
!2149 = !DILocation(line: 378, column: 839, scope: !2123)
!2150 = !DILocation(line: 378, column: 847, scope: !2123)
!2151 = !DILocation(line: 378, column: 811, scope: !2123)
!2152 = !DILocation(line: 378, column: 802, scope: !2123)
!2153 = !DILocation(line: 378, column: 809, scope: !2123)
!2154 = !DILocation(line: 378, column: 865, scope: !2123)
!2155 = !DILocation(line: 378, column: 867, scope: !2123)
!2156 = !DILocation(line: 378, column: 866, scope: !2123)
!2157 = !DILocation(line: 378, column: 876, scope: !2123)
!2158 = !DILocation(line: 378, column: 882, scope: !2123)
!2159 = !DILocation(line: 378, column: 886, scope: !2123)
!2160 = !DILocation(line: 378, column: 878, scope: !2123)
!2161 = !DILocation(line: 378, column: 877, scope: !2123)
!2162 = !DILocation(line: 378, column: 874, scope: !2123)
!2163 = !DILocation(line: 378, column: 892, scope: !2123)
!2164 = !DILocation(line: 378, column: 890, scope: !2123)
!2165 = !DILocation(line: 378, column: 898, scope: !2123)
!2166 = !DILocation(line: 378, column: 862, scope: !2123)
!2167 = !DILocation(line: 378, column: 853, scope: !2123)
!2168 = !DILocation(line: 378, column: 860, scope: !2123)
!2169 = !DILocation(line: 378, column: 916, scope: !2123)
!2170 = !DILocation(line: 378, column: 918, scope: !2123)
!2171 = !DILocation(line: 378, column: 917, scope: !2123)
!2172 = !DILocation(line: 378, column: 927, scope: !2123)
!2173 = !DILocation(line: 378, column: 933, scope: !2123)
!2174 = !DILocation(line: 378, column: 937, scope: !2123)
!2175 = !DILocation(line: 378, column: 929, scope: !2123)
!2176 = !DILocation(line: 378, column: 928, scope: !2123)
!2177 = !DILocation(line: 378, column: 925, scope: !2123)
!2178 = !DILocation(line: 378, column: 943, scope: !2123)
!2179 = !DILocation(line: 378, column: 941, scope: !2123)
!2180 = !DILocation(line: 378, column: 949, scope: !2123)
!2181 = !DILocation(line: 378, column: 913, scope: !2123)
!2182 = !DILocation(line: 378, column: 904, scope: !2123)
!2183 = !DILocation(line: 378, column: 911, scope: !2123)
!2184 = !DILocation(line: 378, column: 962, scope: !2123)
!2185 = !DILocation(line: 378, column: 959, scope: !2123)
!2186 = !DILocation(line: 378, column: 977, scope: !2123)
!2187 = !DILocation(line: 378, column: 974, scope: !2123)
!2188 = !DILocation(line: 378, column: 985, scope: !2123)
!2189 = !DILocation(line: 378, column: 746, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !2117, file: !16, discriminator: 12)
!2191 = !DILocation(line: 378, column: 727, scope: !2190)
!2192 = distinct !{!2192, !2193}
!2193 = !DILocation(line: 378, column: 727, scope: !2095)
!2194 = !DILocation(line: 378, column: 988, scope: !2195)
!2195 = !DILexicalBlockFile(scope: !1920, file: !16, discriminator: 13)
!2196 = distinct !DISubprogram(name: "avg_rv40_chroma_mc8_c", scope: !16, file: !16, line: 379, type: !60, isLocal: true, isDefinition: true, scopeLine: 379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2197 = !DILocalVariable(name: "dst", arg: 1, scope: !2196, file: !16, line: 379, type: !48)
!2198 = !DILocation(line: 379, column: 1176, scope: !2196)
!2199 = !DILocalVariable(name: "src", arg: 2, scope: !2196, file: !16, line: 379, type: !48)
!2200 = !DILocation(line: 379, column: 1191, scope: !2196)
!2201 = !DILocalVariable(name: "stride", arg: 3, scope: !2196, file: !16, line: 379, type: !50)
!2202 = !DILocation(line: 379, column: 1207, scope: !2196)
!2203 = !DILocalVariable(name: "h", arg: 4, scope: !2196, file: !16, line: 379, type: !19)
!2204 = !DILocation(line: 379, column: 1219, scope: !2196)
!2205 = !DILocalVariable(name: "x", arg: 5, scope: !2196, file: !16, line: 379, type: !19)
!2206 = !DILocation(line: 379, column: 1226, scope: !2196)
!2207 = !DILocalVariable(name: "y", arg: 6, scope: !2196, file: !16, line: 379, type: !19)
!2208 = !DILocation(line: 379, column: 1233, scope: !2196)
!2209 = !DILocalVariable(name: "A", scope: !2196, file: !16, line: 379, type: !18)
!2210 = !DILocation(line: 379, column: 1247, scope: !2196)
!2211 = !DILocation(line: 379, column: 1254, scope: !2196)
!2212 = !DILocation(line: 379, column: 1253, scope: !2196)
!2213 = !DILocation(line: 379, column: 1262, scope: !2196)
!2214 = !DILocation(line: 379, column: 1261, scope: !2196)
!2215 = !DILocation(line: 379, column: 1257, scope: !2196)
!2216 = !DILocalVariable(name: "B", scope: !2196, file: !16, line: 379, type: !18)
!2217 = !DILocation(line: 379, column: 1276, scope: !2196)
!2218 = !DILocation(line: 379, column: 1282, scope: !2196)
!2219 = !DILocation(line: 379, column: 1290, scope: !2196)
!2220 = !DILocation(line: 379, column: 1289, scope: !2196)
!2221 = !DILocation(line: 379, column: 1285, scope: !2196)
!2222 = !DILocalVariable(name: "C", scope: !2196, file: !16, line: 379, type: !18)
!2223 = !DILocation(line: 379, column: 1304, scope: !2196)
!2224 = !DILocation(line: 379, column: 1311, scope: !2196)
!2225 = !DILocation(line: 379, column: 1310, scope: !2196)
!2226 = !DILocation(line: 379, column: 1318, scope: !2196)
!2227 = !DILocation(line: 379, column: 1314, scope: !2196)
!2228 = !DILocalVariable(name: "D", scope: !2196, file: !16, line: 379, type: !18)
!2229 = !DILocation(line: 379, column: 1332, scope: !2196)
!2230 = !DILocation(line: 379, column: 1338, scope: !2196)
!2231 = !DILocation(line: 379, column: 1345, scope: !2196)
!2232 = !DILocation(line: 379, column: 1341, scope: !2196)
!2233 = !DILocalVariable(name: "i", scope: !2196, file: !16, line: 379, type: !19)
!2234 = !DILocation(line: 379, column: 1353, scope: !2196)
!2235 = !DILocalVariable(name: "bias", scope: !2196, file: !16, line: 379, type: !19)
!2236 = !DILocation(line: 379, column: 1360, scope: !2196)
!2237 = !DILocation(line: 379, column: 1383, scope: !2196)
!2238 = !DILocation(line: 379, column: 1384, scope: !2196)
!2239 = !DILocation(line: 379, column: 1367, scope: !2196)
!2240 = !DILocation(line: 379, column: 1377, scope: !2196)
!2241 = !DILocation(line: 379, column: 1378, scope: !2196)
!2242 = !DILocation(line: 379, column: 1404, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2196, file: !16, line: 379, column: 1404)
!2244 = !DILocation(line: 379, column: 1404, scope: !2196)
!2245 = !DILocation(line: 379, column: 1414, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2247, file: !16, discriminator: 1)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !16, line: 379, column: 1408)
!2248 = distinct !DILexicalBlock(scope: !2243, file: !16, line: 379, column: 1406)
!2249 = !DILocation(line: 379, column: 1412, scope: !2246)
!2250 = !DILocation(line: 379, column: 1419, scope: !2251)
!2251 = !DILexicalBlockFile(scope: !2252, file: !16, discriminator: 2)
!2252 = distinct !DILexicalBlock(scope: !2247, file: !16, line: 379, column: 1408)
!2253 = !DILocation(line: 379, column: 1423, scope: !2251)
!2254 = !DILocation(line: 379, column: 1421, scope: !2251)
!2255 = !DILocation(line: 379, column: 1408, scope: !2251)
!2256 = !DILocation(line: 379, column: 1444, scope: !2257)
!2257 = !DILexicalBlockFile(scope: !2258, file: !16, discriminator: 3)
!2258 = distinct !DILexicalBlock(scope: !2252, file: !16, line: 379, column: 1430)
!2259 = !DILocation(line: 379, column: 1443, scope: !2257)
!2260 = !DILocation(line: 379, column: 1455, scope: !2257)
!2261 = !DILocation(line: 379, column: 1457, scope: !2257)
!2262 = !DILocation(line: 379, column: 1456, scope: !2257)
!2263 = !DILocation(line: 379, column: 1466, scope: !2257)
!2264 = !DILocation(line: 379, column: 1468, scope: !2257)
!2265 = !DILocation(line: 379, column: 1467, scope: !2257)
!2266 = !DILocation(line: 379, column: 1464, scope: !2257)
!2267 = !DILocation(line: 379, column: 1477, scope: !2257)
!2268 = !DILocation(line: 379, column: 1483, scope: !2257)
!2269 = !DILocation(line: 379, column: 1489, scope: !2257)
!2270 = !DILocation(line: 379, column: 1479, scope: !2257)
!2271 = !DILocation(line: 379, column: 1478, scope: !2257)
!2272 = !DILocation(line: 379, column: 1475, scope: !2257)
!2273 = !DILocation(line: 379, column: 1495, scope: !2257)
!2274 = !DILocation(line: 379, column: 1501, scope: !2257)
!2275 = !DILocation(line: 379, column: 1507, scope: !2257)
!2276 = !DILocation(line: 379, column: 1497, scope: !2257)
!2277 = !DILocation(line: 379, column: 1496, scope: !2257)
!2278 = !DILocation(line: 379, column: 1493, scope: !2257)
!2279 = !DILocation(line: 379, column: 1513, scope: !2257)
!2280 = !DILocation(line: 379, column: 1511, scope: !2257)
!2281 = !DILocation(line: 379, column: 1519, scope: !2257)
!2282 = !DILocation(line: 379, column: 1451, scope: !2257)
!2283 = !DILocation(line: 379, column: 1523, scope: !2257)
!2284 = !DILocation(line: 379, column: 1526, scope: !2257)
!2285 = !DILocation(line: 379, column: 1441, scope: !2257)
!2286 = !DILocation(line: 379, column: 1432, scope: !2257)
!2287 = !DILocation(line: 379, column: 1439, scope: !2257)
!2288 = !DILocation(line: 379, column: 1544, scope: !2257)
!2289 = !DILocation(line: 379, column: 1543, scope: !2257)
!2290 = !DILocation(line: 379, column: 1555, scope: !2257)
!2291 = !DILocation(line: 379, column: 1557, scope: !2257)
!2292 = !DILocation(line: 379, column: 1556, scope: !2257)
!2293 = !DILocation(line: 379, column: 1566, scope: !2257)
!2294 = !DILocation(line: 379, column: 1568, scope: !2257)
!2295 = !DILocation(line: 379, column: 1567, scope: !2257)
!2296 = !DILocation(line: 379, column: 1564, scope: !2257)
!2297 = !DILocation(line: 379, column: 1577, scope: !2257)
!2298 = !DILocation(line: 379, column: 1583, scope: !2257)
!2299 = !DILocation(line: 379, column: 1589, scope: !2257)
!2300 = !DILocation(line: 379, column: 1579, scope: !2257)
!2301 = !DILocation(line: 379, column: 1578, scope: !2257)
!2302 = !DILocation(line: 379, column: 1575, scope: !2257)
!2303 = !DILocation(line: 379, column: 1595, scope: !2257)
!2304 = !DILocation(line: 379, column: 1601, scope: !2257)
!2305 = !DILocation(line: 379, column: 1607, scope: !2257)
!2306 = !DILocation(line: 379, column: 1597, scope: !2257)
!2307 = !DILocation(line: 379, column: 1596, scope: !2257)
!2308 = !DILocation(line: 379, column: 1593, scope: !2257)
!2309 = !DILocation(line: 379, column: 1613, scope: !2257)
!2310 = !DILocation(line: 379, column: 1611, scope: !2257)
!2311 = !DILocation(line: 379, column: 1619, scope: !2257)
!2312 = !DILocation(line: 379, column: 1551, scope: !2257)
!2313 = !DILocation(line: 379, column: 1623, scope: !2257)
!2314 = !DILocation(line: 379, column: 1626, scope: !2257)
!2315 = !DILocation(line: 379, column: 1541, scope: !2257)
!2316 = !DILocation(line: 379, column: 1532, scope: !2257)
!2317 = !DILocation(line: 379, column: 1539, scope: !2257)
!2318 = !DILocation(line: 379, column: 1644, scope: !2257)
!2319 = !DILocation(line: 379, column: 1643, scope: !2257)
!2320 = !DILocation(line: 379, column: 1655, scope: !2257)
!2321 = !DILocation(line: 379, column: 1657, scope: !2257)
!2322 = !DILocation(line: 379, column: 1656, scope: !2257)
!2323 = !DILocation(line: 379, column: 1666, scope: !2257)
!2324 = !DILocation(line: 379, column: 1668, scope: !2257)
!2325 = !DILocation(line: 379, column: 1667, scope: !2257)
!2326 = !DILocation(line: 379, column: 1664, scope: !2257)
!2327 = !DILocation(line: 379, column: 1677, scope: !2257)
!2328 = !DILocation(line: 379, column: 1683, scope: !2257)
!2329 = !DILocation(line: 379, column: 1689, scope: !2257)
!2330 = !DILocation(line: 379, column: 1679, scope: !2257)
!2331 = !DILocation(line: 379, column: 1678, scope: !2257)
!2332 = !DILocation(line: 379, column: 1675, scope: !2257)
!2333 = !DILocation(line: 379, column: 1695, scope: !2257)
!2334 = !DILocation(line: 379, column: 1701, scope: !2257)
!2335 = !DILocation(line: 379, column: 1707, scope: !2257)
!2336 = !DILocation(line: 379, column: 1697, scope: !2257)
!2337 = !DILocation(line: 379, column: 1696, scope: !2257)
!2338 = !DILocation(line: 379, column: 1693, scope: !2257)
!2339 = !DILocation(line: 379, column: 1713, scope: !2257)
!2340 = !DILocation(line: 379, column: 1711, scope: !2257)
!2341 = !DILocation(line: 379, column: 1719, scope: !2257)
!2342 = !DILocation(line: 379, column: 1651, scope: !2257)
!2343 = !DILocation(line: 379, column: 1723, scope: !2257)
!2344 = !DILocation(line: 379, column: 1726, scope: !2257)
!2345 = !DILocation(line: 379, column: 1641, scope: !2257)
!2346 = !DILocation(line: 379, column: 1632, scope: !2257)
!2347 = !DILocation(line: 379, column: 1639, scope: !2257)
!2348 = !DILocation(line: 379, column: 1744, scope: !2257)
!2349 = !DILocation(line: 379, column: 1743, scope: !2257)
!2350 = !DILocation(line: 379, column: 1755, scope: !2257)
!2351 = !DILocation(line: 379, column: 1757, scope: !2257)
!2352 = !DILocation(line: 379, column: 1756, scope: !2257)
!2353 = !DILocation(line: 379, column: 1766, scope: !2257)
!2354 = !DILocation(line: 379, column: 1768, scope: !2257)
!2355 = !DILocation(line: 379, column: 1767, scope: !2257)
!2356 = !DILocation(line: 379, column: 1764, scope: !2257)
!2357 = !DILocation(line: 379, column: 1777, scope: !2257)
!2358 = !DILocation(line: 379, column: 1783, scope: !2257)
!2359 = !DILocation(line: 379, column: 1789, scope: !2257)
!2360 = !DILocation(line: 379, column: 1779, scope: !2257)
!2361 = !DILocation(line: 379, column: 1778, scope: !2257)
!2362 = !DILocation(line: 379, column: 1775, scope: !2257)
!2363 = !DILocation(line: 379, column: 1795, scope: !2257)
!2364 = !DILocation(line: 379, column: 1801, scope: !2257)
!2365 = !DILocation(line: 379, column: 1807, scope: !2257)
!2366 = !DILocation(line: 379, column: 1797, scope: !2257)
!2367 = !DILocation(line: 379, column: 1796, scope: !2257)
!2368 = !DILocation(line: 379, column: 1793, scope: !2257)
!2369 = !DILocation(line: 379, column: 1813, scope: !2257)
!2370 = !DILocation(line: 379, column: 1811, scope: !2257)
!2371 = !DILocation(line: 379, column: 1819, scope: !2257)
!2372 = !DILocation(line: 379, column: 1751, scope: !2257)
!2373 = !DILocation(line: 379, column: 1823, scope: !2257)
!2374 = !DILocation(line: 379, column: 1826, scope: !2257)
!2375 = !DILocation(line: 379, column: 1741, scope: !2257)
!2376 = !DILocation(line: 379, column: 1732, scope: !2257)
!2377 = !DILocation(line: 379, column: 1739, scope: !2257)
!2378 = !DILocation(line: 379, column: 1844, scope: !2257)
!2379 = !DILocation(line: 379, column: 1843, scope: !2257)
!2380 = !DILocation(line: 379, column: 1855, scope: !2257)
!2381 = !DILocation(line: 379, column: 1857, scope: !2257)
!2382 = !DILocation(line: 379, column: 1856, scope: !2257)
!2383 = !DILocation(line: 379, column: 1866, scope: !2257)
!2384 = !DILocation(line: 379, column: 1868, scope: !2257)
!2385 = !DILocation(line: 379, column: 1867, scope: !2257)
!2386 = !DILocation(line: 379, column: 1864, scope: !2257)
!2387 = !DILocation(line: 379, column: 1877, scope: !2257)
!2388 = !DILocation(line: 379, column: 1883, scope: !2257)
!2389 = !DILocation(line: 379, column: 1889, scope: !2257)
!2390 = !DILocation(line: 379, column: 1879, scope: !2257)
!2391 = !DILocation(line: 379, column: 1878, scope: !2257)
!2392 = !DILocation(line: 379, column: 1875, scope: !2257)
!2393 = !DILocation(line: 379, column: 1895, scope: !2257)
!2394 = !DILocation(line: 379, column: 1901, scope: !2257)
!2395 = !DILocation(line: 379, column: 1907, scope: !2257)
!2396 = !DILocation(line: 379, column: 1897, scope: !2257)
!2397 = !DILocation(line: 379, column: 1896, scope: !2257)
!2398 = !DILocation(line: 379, column: 1893, scope: !2257)
!2399 = !DILocation(line: 379, column: 1913, scope: !2257)
!2400 = !DILocation(line: 379, column: 1911, scope: !2257)
!2401 = !DILocation(line: 379, column: 1919, scope: !2257)
!2402 = !DILocation(line: 379, column: 1851, scope: !2257)
!2403 = !DILocation(line: 379, column: 1923, scope: !2257)
!2404 = !DILocation(line: 379, column: 1926, scope: !2257)
!2405 = !DILocation(line: 379, column: 1841, scope: !2257)
!2406 = !DILocation(line: 379, column: 1832, scope: !2257)
!2407 = !DILocation(line: 379, column: 1839, scope: !2257)
!2408 = !DILocation(line: 379, column: 1944, scope: !2257)
!2409 = !DILocation(line: 379, column: 1943, scope: !2257)
!2410 = !DILocation(line: 379, column: 1955, scope: !2257)
!2411 = !DILocation(line: 379, column: 1957, scope: !2257)
!2412 = !DILocation(line: 379, column: 1956, scope: !2257)
!2413 = !DILocation(line: 379, column: 1966, scope: !2257)
!2414 = !DILocation(line: 379, column: 1968, scope: !2257)
!2415 = !DILocation(line: 379, column: 1967, scope: !2257)
!2416 = !DILocation(line: 379, column: 1964, scope: !2257)
!2417 = !DILocation(line: 379, column: 1977, scope: !2257)
!2418 = !DILocation(line: 379, column: 1983, scope: !2257)
!2419 = !DILocation(line: 379, column: 1989, scope: !2257)
!2420 = !DILocation(line: 379, column: 1979, scope: !2257)
!2421 = !DILocation(line: 379, column: 1978, scope: !2257)
!2422 = !DILocation(line: 379, column: 1975, scope: !2257)
!2423 = !DILocation(line: 379, column: 1995, scope: !2257)
!2424 = !DILocation(line: 379, column: 2001, scope: !2257)
!2425 = !DILocation(line: 379, column: 2007, scope: !2257)
!2426 = !DILocation(line: 379, column: 1997, scope: !2257)
!2427 = !DILocation(line: 379, column: 1996, scope: !2257)
!2428 = !DILocation(line: 379, column: 1993, scope: !2257)
!2429 = !DILocation(line: 379, column: 2013, scope: !2257)
!2430 = !DILocation(line: 379, column: 2011, scope: !2257)
!2431 = !DILocation(line: 379, column: 2019, scope: !2257)
!2432 = !DILocation(line: 379, column: 1951, scope: !2257)
!2433 = !DILocation(line: 379, column: 2023, scope: !2257)
!2434 = !DILocation(line: 379, column: 2026, scope: !2257)
!2435 = !DILocation(line: 379, column: 1941, scope: !2257)
!2436 = !DILocation(line: 379, column: 1932, scope: !2257)
!2437 = !DILocation(line: 379, column: 1939, scope: !2257)
!2438 = !DILocation(line: 379, column: 2044, scope: !2257)
!2439 = !DILocation(line: 379, column: 2043, scope: !2257)
!2440 = !DILocation(line: 379, column: 2055, scope: !2257)
!2441 = !DILocation(line: 379, column: 2057, scope: !2257)
!2442 = !DILocation(line: 379, column: 2056, scope: !2257)
!2443 = !DILocation(line: 379, column: 2066, scope: !2257)
!2444 = !DILocation(line: 379, column: 2068, scope: !2257)
!2445 = !DILocation(line: 379, column: 2067, scope: !2257)
!2446 = !DILocation(line: 379, column: 2064, scope: !2257)
!2447 = !DILocation(line: 379, column: 2077, scope: !2257)
!2448 = !DILocation(line: 379, column: 2083, scope: !2257)
!2449 = !DILocation(line: 379, column: 2089, scope: !2257)
!2450 = !DILocation(line: 379, column: 2079, scope: !2257)
!2451 = !DILocation(line: 379, column: 2078, scope: !2257)
!2452 = !DILocation(line: 379, column: 2075, scope: !2257)
!2453 = !DILocation(line: 379, column: 2095, scope: !2257)
!2454 = !DILocation(line: 379, column: 2101, scope: !2257)
!2455 = !DILocation(line: 379, column: 2107, scope: !2257)
!2456 = !DILocation(line: 379, column: 2097, scope: !2257)
!2457 = !DILocation(line: 379, column: 2096, scope: !2257)
!2458 = !DILocation(line: 379, column: 2093, scope: !2257)
!2459 = !DILocation(line: 379, column: 2113, scope: !2257)
!2460 = !DILocation(line: 379, column: 2111, scope: !2257)
!2461 = !DILocation(line: 379, column: 2119, scope: !2257)
!2462 = !DILocation(line: 379, column: 2051, scope: !2257)
!2463 = !DILocation(line: 379, column: 2123, scope: !2257)
!2464 = !DILocation(line: 379, column: 2126, scope: !2257)
!2465 = !DILocation(line: 379, column: 2041, scope: !2257)
!2466 = !DILocation(line: 379, column: 2032, scope: !2257)
!2467 = !DILocation(line: 379, column: 2039, scope: !2257)
!2468 = !DILocation(line: 379, column: 2144, scope: !2257)
!2469 = !DILocation(line: 379, column: 2143, scope: !2257)
!2470 = !DILocation(line: 379, column: 2155, scope: !2257)
!2471 = !DILocation(line: 379, column: 2157, scope: !2257)
!2472 = !DILocation(line: 379, column: 2156, scope: !2257)
!2473 = !DILocation(line: 379, column: 2166, scope: !2257)
!2474 = !DILocation(line: 379, column: 2168, scope: !2257)
!2475 = !DILocation(line: 379, column: 2167, scope: !2257)
!2476 = !DILocation(line: 379, column: 2164, scope: !2257)
!2477 = !DILocation(line: 379, column: 2177, scope: !2257)
!2478 = !DILocation(line: 379, column: 2183, scope: !2257)
!2479 = !DILocation(line: 379, column: 2189, scope: !2257)
!2480 = !DILocation(line: 379, column: 2179, scope: !2257)
!2481 = !DILocation(line: 379, column: 2178, scope: !2257)
!2482 = !DILocation(line: 379, column: 2175, scope: !2257)
!2483 = !DILocation(line: 379, column: 2195, scope: !2257)
!2484 = !DILocation(line: 379, column: 2201, scope: !2257)
!2485 = !DILocation(line: 379, column: 2207, scope: !2257)
!2486 = !DILocation(line: 379, column: 2197, scope: !2257)
!2487 = !DILocation(line: 379, column: 2196, scope: !2257)
!2488 = !DILocation(line: 379, column: 2193, scope: !2257)
!2489 = !DILocation(line: 379, column: 2213, scope: !2257)
!2490 = !DILocation(line: 379, column: 2211, scope: !2257)
!2491 = !DILocation(line: 379, column: 2219, scope: !2257)
!2492 = !DILocation(line: 379, column: 2151, scope: !2257)
!2493 = !DILocation(line: 379, column: 2223, scope: !2257)
!2494 = !DILocation(line: 379, column: 2226, scope: !2257)
!2495 = !DILocation(line: 379, column: 2141, scope: !2257)
!2496 = !DILocation(line: 379, column: 2132, scope: !2257)
!2497 = !DILocation(line: 379, column: 2139, scope: !2257)
!2498 = !DILocation(line: 379, column: 2239, scope: !2257)
!2499 = !DILocation(line: 379, column: 2236, scope: !2257)
!2500 = !DILocation(line: 379, column: 2254, scope: !2257)
!2501 = !DILocation(line: 379, column: 2251, scope: !2257)
!2502 = !DILocation(line: 379, column: 2262, scope: !2257)
!2503 = !DILocation(line: 379, column: 1427, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !2252, file: !16, discriminator: 4)
!2505 = !DILocation(line: 379, column: 1408, scope: !2504)
!2506 = distinct !{!2506, !2507}
!2507 = !DILocation(line: 379, column: 1408, scope: !2248)
!2508 = !DILocation(line: 379, column: 2264, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !2248, file: !16, discriminator: 5)
!2510 = !DILocalVariable(name: "E", scope: !2511, file: !16, line: 379, type: !18)
!2511 = distinct !DILexicalBlock(scope: !2243, file: !16, line: 379, column: 2269)
!2512 = !DILocation(line: 379, column: 2281, scope: !2511)
!2513 = !DILocation(line: 379, column: 2285, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2511, file: !16, discriminator: 6)
!2515 = !DILocation(line: 379, column: 2289, scope: !2514)
!2516 = !DILocation(line: 379, column: 2287, scope: !2514)
!2517 = !DILocation(line: 379, column: 2281, scope: !2514)
!2518 = !DILocalVariable(name: "step", scope: !2511, file: !16, line: 379, type: !1766)
!2519 = !DILocation(line: 379, column: 2308, scope: !2511)
!2520 = !DILocation(line: 379, column: 2315, scope: !2514)
!2521 = !DILocation(line: 379, column: 2319, scope: !2522)
!2522 = !DILexicalBlockFile(scope: !2511, file: !16, discriminator: 7)
!2523 = !DILocation(line: 379, column: 2315, scope: !2522)
!2524 = !DILocation(line: 379, column: 2315, scope: !2525)
!2525 = !DILexicalBlockFile(scope: !2511, file: !16, discriminator: 8)
!2526 = !DILocation(line: 379, column: 2315, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2511, file: !16, discriminator: 9)
!2528 = !DILocation(line: 379, column: 2308, scope: !2527)
!2529 = !DILocation(line: 379, column: 2337, scope: !2527)
!2530 = !DILocation(line: 379, column: 2335, scope: !2527)
!2531 = !DILocation(line: 379, column: 2342, scope: !2532)
!2532 = !DILexicalBlockFile(scope: !2533, file: !16, discriminator: 10)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !16, line: 379, column: 2331)
!2534 = distinct !DILexicalBlock(scope: !2511, file: !16, line: 379, column: 2331)
!2535 = !DILocation(line: 379, column: 2346, scope: !2532)
!2536 = !DILocation(line: 379, column: 2344, scope: !2532)
!2537 = !DILocation(line: 379, column: 2331, scope: !2532)
!2538 = !DILocation(line: 379, column: 2367, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !2540, file: !16, discriminator: 11)
!2540 = distinct !DILexicalBlock(scope: !2533, file: !16, line: 379, column: 2353)
!2541 = !DILocation(line: 379, column: 2366, scope: !2539)
!2542 = !DILocation(line: 379, column: 2378, scope: !2539)
!2543 = !DILocation(line: 379, column: 2380, scope: !2539)
!2544 = !DILocation(line: 379, column: 2379, scope: !2539)
!2545 = !DILocation(line: 379, column: 2389, scope: !2539)
!2546 = !DILocation(line: 379, column: 2395, scope: !2539)
!2547 = !DILocation(line: 379, column: 2399, scope: !2539)
!2548 = !DILocation(line: 379, column: 2391, scope: !2539)
!2549 = !DILocation(line: 379, column: 2390, scope: !2539)
!2550 = !DILocation(line: 379, column: 2387, scope: !2539)
!2551 = !DILocation(line: 379, column: 2405, scope: !2539)
!2552 = !DILocation(line: 379, column: 2403, scope: !2539)
!2553 = !DILocation(line: 379, column: 2411, scope: !2539)
!2554 = !DILocation(line: 379, column: 2374, scope: !2539)
!2555 = !DILocation(line: 379, column: 2415, scope: !2539)
!2556 = !DILocation(line: 379, column: 2418, scope: !2539)
!2557 = !DILocation(line: 379, column: 2364, scope: !2539)
!2558 = !DILocation(line: 379, column: 2355, scope: !2539)
!2559 = !DILocation(line: 379, column: 2362, scope: !2539)
!2560 = !DILocation(line: 379, column: 2436, scope: !2539)
!2561 = !DILocation(line: 379, column: 2435, scope: !2539)
!2562 = !DILocation(line: 379, column: 2447, scope: !2539)
!2563 = !DILocation(line: 379, column: 2449, scope: !2539)
!2564 = !DILocation(line: 379, column: 2448, scope: !2539)
!2565 = !DILocation(line: 379, column: 2458, scope: !2539)
!2566 = !DILocation(line: 379, column: 2464, scope: !2539)
!2567 = !DILocation(line: 379, column: 2468, scope: !2539)
!2568 = !DILocation(line: 379, column: 2460, scope: !2539)
!2569 = !DILocation(line: 379, column: 2459, scope: !2539)
!2570 = !DILocation(line: 379, column: 2456, scope: !2539)
!2571 = !DILocation(line: 379, column: 2474, scope: !2539)
!2572 = !DILocation(line: 379, column: 2472, scope: !2539)
!2573 = !DILocation(line: 379, column: 2480, scope: !2539)
!2574 = !DILocation(line: 379, column: 2443, scope: !2539)
!2575 = !DILocation(line: 379, column: 2484, scope: !2539)
!2576 = !DILocation(line: 379, column: 2487, scope: !2539)
!2577 = !DILocation(line: 379, column: 2433, scope: !2539)
!2578 = !DILocation(line: 379, column: 2424, scope: !2539)
!2579 = !DILocation(line: 379, column: 2431, scope: !2539)
!2580 = !DILocation(line: 379, column: 2505, scope: !2539)
!2581 = !DILocation(line: 379, column: 2504, scope: !2539)
!2582 = !DILocation(line: 379, column: 2516, scope: !2539)
!2583 = !DILocation(line: 379, column: 2518, scope: !2539)
!2584 = !DILocation(line: 379, column: 2517, scope: !2539)
!2585 = !DILocation(line: 379, column: 2527, scope: !2539)
!2586 = !DILocation(line: 379, column: 2533, scope: !2539)
!2587 = !DILocation(line: 379, column: 2537, scope: !2539)
!2588 = !DILocation(line: 379, column: 2529, scope: !2539)
!2589 = !DILocation(line: 379, column: 2528, scope: !2539)
!2590 = !DILocation(line: 379, column: 2525, scope: !2539)
!2591 = !DILocation(line: 379, column: 2543, scope: !2539)
!2592 = !DILocation(line: 379, column: 2541, scope: !2539)
!2593 = !DILocation(line: 379, column: 2549, scope: !2539)
!2594 = !DILocation(line: 379, column: 2512, scope: !2539)
!2595 = !DILocation(line: 379, column: 2553, scope: !2539)
!2596 = !DILocation(line: 379, column: 2556, scope: !2539)
!2597 = !DILocation(line: 379, column: 2502, scope: !2539)
!2598 = !DILocation(line: 379, column: 2493, scope: !2539)
!2599 = !DILocation(line: 379, column: 2500, scope: !2539)
!2600 = !DILocation(line: 379, column: 2574, scope: !2539)
!2601 = !DILocation(line: 379, column: 2573, scope: !2539)
!2602 = !DILocation(line: 379, column: 2585, scope: !2539)
!2603 = !DILocation(line: 379, column: 2587, scope: !2539)
!2604 = !DILocation(line: 379, column: 2586, scope: !2539)
!2605 = !DILocation(line: 379, column: 2596, scope: !2539)
!2606 = !DILocation(line: 379, column: 2602, scope: !2539)
!2607 = !DILocation(line: 379, column: 2606, scope: !2539)
!2608 = !DILocation(line: 379, column: 2598, scope: !2539)
!2609 = !DILocation(line: 379, column: 2597, scope: !2539)
!2610 = !DILocation(line: 379, column: 2594, scope: !2539)
!2611 = !DILocation(line: 379, column: 2612, scope: !2539)
!2612 = !DILocation(line: 379, column: 2610, scope: !2539)
!2613 = !DILocation(line: 379, column: 2618, scope: !2539)
!2614 = !DILocation(line: 379, column: 2581, scope: !2539)
!2615 = !DILocation(line: 379, column: 2622, scope: !2539)
!2616 = !DILocation(line: 379, column: 2625, scope: !2539)
!2617 = !DILocation(line: 379, column: 2571, scope: !2539)
!2618 = !DILocation(line: 379, column: 2562, scope: !2539)
!2619 = !DILocation(line: 379, column: 2569, scope: !2539)
!2620 = !DILocation(line: 379, column: 2643, scope: !2539)
!2621 = !DILocation(line: 379, column: 2642, scope: !2539)
!2622 = !DILocation(line: 379, column: 2654, scope: !2539)
!2623 = !DILocation(line: 379, column: 2656, scope: !2539)
!2624 = !DILocation(line: 379, column: 2655, scope: !2539)
!2625 = !DILocation(line: 379, column: 2665, scope: !2539)
!2626 = !DILocation(line: 379, column: 2671, scope: !2539)
!2627 = !DILocation(line: 379, column: 2675, scope: !2539)
!2628 = !DILocation(line: 379, column: 2667, scope: !2539)
!2629 = !DILocation(line: 379, column: 2666, scope: !2539)
!2630 = !DILocation(line: 379, column: 2663, scope: !2539)
!2631 = !DILocation(line: 379, column: 2681, scope: !2539)
!2632 = !DILocation(line: 379, column: 2679, scope: !2539)
!2633 = !DILocation(line: 379, column: 2687, scope: !2539)
!2634 = !DILocation(line: 379, column: 2650, scope: !2539)
!2635 = !DILocation(line: 379, column: 2691, scope: !2539)
!2636 = !DILocation(line: 379, column: 2694, scope: !2539)
!2637 = !DILocation(line: 379, column: 2640, scope: !2539)
!2638 = !DILocation(line: 379, column: 2631, scope: !2539)
!2639 = !DILocation(line: 379, column: 2638, scope: !2539)
!2640 = !DILocation(line: 379, column: 2712, scope: !2539)
!2641 = !DILocation(line: 379, column: 2711, scope: !2539)
!2642 = !DILocation(line: 379, column: 2723, scope: !2539)
!2643 = !DILocation(line: 379, column: 2725, scope: !2539)
!2644 = !DILocation(line: 379, column: 2724, scope: !2539)
!2645 = !DILocation(line: 379, column: 2734, scope: !2539)
!2646 = !DILocation(line: 379, column: 2740, scope: !2539)
!2647 = !DILocation(line: 379, column: 2744, scope: !2539)
!2648 = !DILocation(line: 379, column: 2736, scope: !2539)
!2649 = !DILocation(line: 379, column: 2735, scope: !2539)
!2650 = !DILocation(line: 379, column: 2732, scope: !2539)
!2651 = !DILocation(line: 379, column: 2750, scope: !2539)
!2652 = !DILocation(line: 379, column: 2748, scope: !2539)
!2653 = !DILocation(line: 379, column: 2756, scope: !2539)
!2654 = !DILocation(line: 379, column: 2719, scope: !2539)
!2655 = !DILocation(line: 379, column: 2760, scope: !2539)
!2656 = !DILocation(line: 379, column: 2763, scope: !2539)
!2657 = !DILocation(line: 379, column: 2709, scope: !2539)
!2658 = !DILocation(line: 379, column: 2700, scope: !2539)
!2659 = !DILocation(line: 379, column: 2707, scope: !2539)
!2660 = !DILocation(line: 379, column: 2781, scope: !2539)
!2661 = !DILocation(line: 379, column: 2780, scope: !2539)
!2662 = !DILocation(line: 379, column: 2792, scope: !2539)
!2663 = !DILocation(line: 379, column: 2794, scope: !2539)
!2664 = !DILocation(line: 379, column: 2793, scope: !2539)
!2665 = !DILocation(line: 379, column: 2803, scope: !2539)
!2666 = !DILocation(line: 379, column: 2809, scope: !2539)
!2667 = !DILocation(line: 379, column: 2813, scope: !2539)
!2668 = !DILocation(line: 379, column: 2805, scope: !2539)
!2669 = !DILocation(line: 379, column: 2804, scope: !2539)
!2670 = !DILocation(line: 379, column: 2801, scope: !2539)
!2671 = !DILocation(line: 379, column: 2819, scope: !2539)
!2672 = !DILocation(line: 379, column: 2817, scope: !2539)
!2673 = !DILocation(line: 379, column: 2825, scope: !2539)
!2674 = !DILocation(line: 379, column: 2788, scope: !2539)
!2675 = !DILocation(line: 379, column: 2829, scope: !2539)
!2676 = !DILocation(line: 379, column: 2832, scope: !2539)
!2677 = !DILocation(line: 379, column: 2778, scope: !2539)
!2678 = !DILocation(line: 379, column: 2769, scope: !2539)
!2679 = !DILocation(line: 379, column: 2776, scope: !2539)
!2680 = !DILocation(line: 379, column: 2850, scope: !2539)
!2681 = !DILocation(line: 379, column: 2849, scope: !2539)
!2682 = !DILocation(line: 379, column: 2861, scope: !2539)
!2683 = !DILocation(line: 379, column: 2863, scope: !2539)
!2684 = !DILocation(line: 379, column: 2862, scope: !2539)
!2685 = !DILocation(line: 379, column: 2872, scope: !2539)
!2686 = !DILocation(line: 379, column: 2878, scope: !2539)
!2687 = !DILocation(line: 379, column: 2882, scope: !2539)
!2688 = !DILocation(line: 379, column: 2874, scope: !2539)
!2689 = !DILocation(line: 379, column: 2873, scope: !2539)
!2690 = !DILocation(line: 379, column: 2870, scope: !2539)
!2691 = !DILocation(line: 379, column: 2888, scope: !2539)
!2692 = !DILocation(line: 379, column: 2886, scope: !2539)
!2693 = !DILocation(line: 379, column: 2894, scope: !2539)
!2694 = !DILocation(line: 379, column: 2857, scope: !2539)
!2695 = !DILocation(line: 379, column: 2898, scope: !2539)
!2696 = !DILocation(line: 379, column: 2901, scope: !2539)
!2697 = !DILocation(line: 379, column: 2847, scope: !2539)
!2698 = !DILocation(line: 379, column: 2838, scope: !2539)
!2699 = !DILocation(line: 379, column: 2845, scope: !2539)
!2700 = !DILocation(line: 379, column: 2914, scope: !2539)
!2701 = !DILocation(line: 379, column: 2911, scope: !2539)
!2702 = !DILocation(line: 379, column: 2929, scope: !2539)
!2703 = !DILocation(line: 379, column: 2926, scope: !2539)
!2704 = !DILocation(line: 379, column: 2937, scope: !2539)
!2705 = !DILocation(line: 379, column: 2350, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2533, file: !16, discriminator: 12)
!2707 = !DILocation(line: 379, column: 2331, scope: !2706)
!2708 = distinct !{!2708, !2709}
!2709 = !DILocation(line: 379, column: 2331, scope: !2511)
!2710 = !DILocation(line: 379, column: 2940, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !2196, file: !16, discriminator: 13)
!2712 = distinct !DISubprogram(name: "avg_rv40_chroma_mc4_c", scope: !16, file: !16, line: 379, type: !60, isLocal: true, isDefinition: true, scopeLine: 379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2713 = !DILocalVariable(name: "dst", arg: 1, scope: !2712, file: !16, line: 379, type: !48)
!2714 = !DILocation(line: 379, column: 44, scope: !2712)
!2715 = !DILocalVariable(name: "src", arg: 2, scope: !2712, file: !16, line: 379, type: !48)
!2716 = !DILocation(line: 379, column: 59, scope: !2712)
!2717 = !DILocalVariable(name: "stride", arg: 3, scope: !2712, file: !16, line: 379, type: !50)
!2718 = !DILocation(line: 379, column: 75, scope: !2712)
!2719 = !DILocalVariable(name: "h", arg: 4, scope: !2712, file: !16, line: 379, type: !19)
!2720 = !DILocation(line: 379, column: 87, scope: !2712)
!2721 = !DILocalVariable(name: "x", arg: 5, scope: !2712, file: !16, line: 379, type: !19)
!2722 = !DILocation(line: 379, column: 94, scope: !2712)
!2723 = !DILocalVariable(name: "y", arg: 6, scope: !2712, file: !16, line: 379, type: !19)
!2724 = !DILocation(line: 379, column: 101, scope: !2712)
!2725 = !DILocalVariable(name: "A", scope: !2712, file: !16, line: 379, type: !18)
!2726 = !DILocation(line: 379, column: 115, scope: !2712)
!2727 = !DILocation(line: 379, column: 122, scope: !2712)
!2728 = !DILocation(line: 379, column: 121, scope: !2712)
!2729 = !DILocation(line: 379, column: 130, scope: !2712)
!2730 = !DILocation(line: 379, column: 129, scope: !2712)
!2731 = !DILocation(line: 379, column: 125, scope: !2712)
!2732 = !DILocalVariable(name: "B", scope: !2712, file: !16, line: 379, type: !18)
!2733 = !DILocation(line: 379, column: 144, scope: !2712)
!2734 = !DILocation(line: 379, column: 150, scope: !2712)
!2735 = !DILocation(line: 379, column: 158, scope: !2712)
!2736 = !DILocation(line: 379, column: 157, scope: !2712)
!2737 = !DILocation(line: 379, column: 153, scope: !2712)
!2738 = !DILocalVariable(name: "C", scope: !2712, file: !16, line: 379, type: !18)
!2739 = !DILocation(line: 379, column: 172, scope: !2712)
!2740 = !DILocation(line: 379, column: 179, scope: !2712)
!2741 = !DILocation(line: 379, column: 178, scope: !2712)
!2742 = !DILocation(line: 379, column: 186, scope: !2712)
!2743 = !DILocation(line: 379, column: 182, scope: !2712)
!2744 = !DILocalVariable(name: "D", scope: !2712, file: !16, line: 379, type: !18)
!2745 = !DILocation(line: 379, column: 200, scope: !2712)
!2746 = !DILocation(line: 379, column: 206, scope: !2712)
!2747 = !DILocation(line: 379, column: 213, scope: !2712)
!2748 = !DILocation(line: 379, column: 209, scope: !2712)
!2749 = !DILocalVariable(name: "i", scope: !2712, file: !16, line: 379, type: !19)
!2750 = !DILocation(line: 379, column: 221, scope: !2712)
!2751 = !DILocalVariable(name: "bias", scope: !2712, file: !16, line: 379, type: !19)
!2752 = !DILocation(line: 379, column: 228, scope: !2712)
!2753 = !DILocation(line: 379, column: 251, scope: !2712)
!2754 = !DILocation(line: 379, column: 252, scope: !2712)
!2755 = !DILocation(line: 379, column: 235, scope: !2712)
!2756 = !DILocation(line: 379, column: 245, scope: !2712)
!2757 = !DILocation(line: 379, column: 246, scope: !2712)
!2758 = !DILocation(line: 379, column: 272, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2712, file: !16, line: 379, column: 272)
!2760 = !DILocation(line: 379, column: 272, scope: !2712)
!2761 = !DILocation(line: 379, column: 282, scope: !2762)
!2762 = !DILexicalBlockFile(scope: !2763, file: !16, discriminator: 1)
!2763 = distinct !DILexicalBlock(scope: !2764, file: !16, line: 379, column: 276)
!2764 = distinct !DILexicalBlock(scope: !2759, file: !16, line: 379, column: 274)
!2765 = !DILocation(line: 379, column: 280, scope: !2762)
!2766 = !DILocation(line: 379, column: 287, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2768, file: !16, discriminator: 2)
!2768 = distinct !DILexicalBlock(scope: !2763, file: !16, line: 379, column: 276)
!2769 = !DILocation(line: 379, column: 291, scope: !2767)
!2770 = !DILocation(line: 379, column: 289, scope: !2767)
!2771 = !DILocation(line: 379, column: 276, scope: !2767)
!2772 = !DILocation(line: 379, column: 312, scope: !2773)
!2773 = !DILexicalBlockFile(scope: !2774, file: !16, discriminator: 3)
!2774 = distinct !DILexicalBlock(scope: !2768, file: !16, line: 379, column: 298)
!2775 = !DILocation(line: 379, column: 311, scope: !2773)
!2776 = !DILocation(line: 379, column: 323, scope: !2773)
!2777 = !DILocation(line: 379, column: 325, scope: !2773)
!2778 = !DILocation(line: 379, column: 324, scope: !2773)
!2779 = !DILocation(line: 379, column: 334, scope: !2773)
!2780 = !DILocation(line: 379, column: 336, scope: !2773)
!2781 = !DILocation(line: 379, column: 335, scope: !2773)
!2782 = !DILocation(line: 379, column: 332, scope: !2773)
!2783 = !DILocation(line: 379, column: 345, scope: !2773)
!2784 = !DILocation(line: 379, column: 351, scope: !2773)
!2785 = !DILocation(line: 379, column: 357, scope: !2773)
!2786 = !DILocation(line: 379, column: 347, scope: !2773)
!2787 = !DILocation(line: 379, column: 346, scope: !2773)
!2788 = !DILocation(line: 379, column: 343, scope: !2773)
!2789 = !DILocation(line: 379, column: 363, scope: !2773)
!2790 = !DILocation(line: 379, column: 369, scope: !2773)
!2791 = !DILocation(line: 379, column: 375, scope: !2773)
!2792 = !DILocation(line: 379, column: 365, scope: !2773)
!2793 = !DILocation(line: 379, column: 364, scope: !2773)
!2794 = !DILocation(line: 379, column: 361, scope: !2773)
!2795 = !DILocation(line: 379, column: 381, scope: !2773)
!2796 = !DILocation(line: 379, column: 379, scope: !2773)
!2797 = !DILocation(line: 379, column: 387, scope: !2773)
!2798 = !DILocation(line: 379, column: 319, scope: !2773)
!2799 = !DILocation(line: 379, column: 391, scope: !2773)
!2800 = !DILocation(line: 379, column: 394, scope: !2773)
!2801 = !DILocation(line: 379, column: 309, scope: !2773)
!2802 = !DILocation(line: 379, column: 300, scope: !2773)
!2803 = !DILocation(line: 379, column: 307, scope: !2773)
!2804 = !DILocation(line: 379, column: 412, scope: !2773)
!2805 = !DILocation(line: 379, column: 411, scope: !2773)
!2806 = !DILocation(line: 379, column: 423, scope: !2773)
!2807 = !DILocation(line: 379, column: 425, scope: !2773)
!2808 = !DILocation(line: 379, column: 424, scope: !2773)
!2809 = !DILocation(line: 379, column: 434, scope: !2773)
!2810 = !DILocation(line: 379, column: 436, scope: !2773)
!2811 = !DILocation(line: 379, column: 435, scope: !2773)
!2812 = !DILocation(line: 379, column: 432, scope: !2773)
!2813 = !DILocation(line: 379, column: 445, scope: !2773)
!2814 = !DILocation(line: 379, column: 451, scope: !2773)
!2815 = !DILocation(line: 379, column: 457, scope: !2773)
!2816 = !DILocation(line: 379, column: 447, scope: !2773)
!2817 = !DILocation(line: 379, column: 446, scope: !2773)
!2818 = !DILocation(line: 379, column: 443, scope: !2773)
!2819 = !DILocation(line: 379, column: 463, scope: !2773)
!2820 = !DILocation(line: 379, column: 469, scope: !2773)
!2821 = !DILocation(line: 379, column: 475, scope: !2773)
!2822 = !DILocation(line: 379, column: 465, scope: !2773)
!2823 = !DILocation(line: 379, column: 464, scope: !2773)
!2824 = !DILocation(line: 379, column: 461, scope: !2773)
!2825 = !DILocation(line: 379, column: 481, scope: !2773)
!2826 = !DILocation(line: 379, column: 479, scope: !2773)
!2827 = !DILocation(line: 379, column: 487, scope: !2773)
!2828 = !DILocation(line: 379, column: 419, scope: !2773)
!2829 = !DILocation(line: 379, column: 491, scope: !2773)
!2830 = !DILocation(line: 379, column: 494, scope: !2773)
!2831 = !DILocation(line: 379, column: 409, scope: !2773)
!2832 = !DILocation(line: 379, column: 400, scope: !2773)
!2833 = !DILocation(line: 379, column: 407, scope: !2773)
!2834 = !DILocation(line: 379, column: 512, scope: !2773)
!2835 = !DILocation(line: 379, column: 511, scope: !2773)
!2836 = !DILocation(line: 379, column: 523, scope: !2773)
!2837 = !DILocation(line: 379, column: 525, scope: !2773)
!2838 = !DILocation(line: 379, column: 524, scope: !2773)
!2839 = !DILocation(line: 379, column: 534, scope: !2773)
!2840 = !DILocation(line: 379, column: 536, scope: !2773)
!2841 = !DILocation(line: 379, column: 535, scope: !2773)
!2842 = !DILocation(line: 379, column: 532, scope: !2773)
!2843 = !DILocation(line: 379, column: 545, scope: !2773)
!2844 = !DILocation(line: 379, column: 551, scope: !2773)
!2845 = !DILocation(line: 379, column: 557, scope: !2773)
!2846 = !DILocation(line: 379, column: 547, scope: !2773)
!2847 = !DILocation(line: 379, column: 546, scope: !2773)
!2848 = !DILocation(line: 379, column: 543, scope: !2773)
!2849 = !DILocation(line: 379, column: 563, scope: !2773)
!2850 = !DILocation(line: 379, column: 569, scope: !2773)
!2851 = !DILocation(line: 379, column: 575, scope: !2773)
!2852 = !DILocation(line: 379, column: 565, scope: !2773)
!2853 = !DILocation(line: 379, column: 564, scope: !2773)
!2854 = !DILocation(line: 379, column: 561, scope: !2773)
!2855 = !DILocation(line: 379, column: 581, scope: !2773)
!2856 = !DILocation(line: 379, column: 579, scope: !2773)
!2857 = !DILocation(line: 379, column: 587, scope: !2773)
!2858 = !DILocation(line: 379, column: 519, scope: !2773)
!2859 = !DILocation(line: 379, column: 591, scope: !2773)
!2860 = !DILocation(line: 379, column: 594, scope: !2773)
!2861 = !DILocation(line: 379, column: 509, scope: !2773)
!2862 = !DILocation(line: 379, column: 500, scope: !2773)
!2863 = !DILocation(line: 379, column: 507, scope: !2773)
!2864 = !DILocation(line: 379, column: 612, scope: !2773)
!2865 = !DILocation(line: 379, column: 611, scope: !2773)
!2866 = !DILocation(line: 379, column: 623, scope: !2773)
!2867 = !DILocation(line: 379, column: 625, scope: !2773)
!2868 = !DILocation(line: 379, column: 624, scope: !2773)
!2869 = !DILocation(line: 379, column: 634, scope: !2773)
!2870 = !DILocation(line: 379, column: 636, scope: !2773)
!2871 = !DILocation(line: 379, column: 635, scope: !2773)
!2872 = !DILocation(line: 379, column: 632, scope: !2773)
!2873 = !DILocation(line: 379, column: 645, scope: !2773)
!2874 = !DILocation(line: 379, column: 651, scope: !2773)
!2875 = !DILocation(line: 379, column: 657, scope: !2773)
!2876 = !DILocation(line: 379, column: 647, scope: !2773)
!2877 = !DILocation(line: 379, column: 646, scope: !2773)
!2878 = !DILocation(line: 379, column: 643, scope: !2773)
!2879 = !DILocation(line: 379, column: 663, scope: !2773)
!2880 = !DILocation(line: 379, column: 669, scope: !2773)
!2881 = !DILocation(line: 379, column: 675, scope: !2773)
!2882 = !DILocation(line: 379, column: 665, scope: !2773)
!2883 = !DILocation(line: 379, column: 664, scope: !2773)
!2884 = !DILocation(line: 379, column: 661, scope: !2773)
!2885 = !DILocation(line: 379, column: 681, scope: !2773)
!2886 = !DILocation(line: 379, column: 679, scope: !2773)
!2887 = !DILocation(line: 379, column: 687, scope: !2773)
!2888 = !DILocation(line: 379, column: 619, scope: !2773)
!2889 = !DILocation(line: 379, column: 691, scope: !2773)
!2890 = !DILocation(line: 379, column: 694, scope: !2773)
!2891 = !DILocation(line: 379, column: 609, scope: !2773)
!2892 = !DILocation(line: 379, column: 600, scope: !2773)
!2893 = !DILocation(line: 379, column: 607, scope: !2773)
!2894 = !DILocation(line: 379, column: 707, scope: !2773)
!2895 = !DILocation(line: 379, column: 704, scope: !2773)
!2896 = !DILocation(line: 379, column: 722, scope: !2773)
!2897 = !DILocation(line: 379, column: 719, scope: !2773)
!2898 = !DILocation(line: 379, column: 730, scope: !2773)
!2899 = !DILocation(line: 379, column: 295, scope: !2900)
!2900 = !DILexicalBlockFile(scope: !2768, file: !16, discriminator: 4)
!2901 = !DILocation(line: 379, column: 276, scope: !2900)
!2902 = distinct !{!2902, !2903}
!2903 = !DILocation(line: 379, column: 276, scope: !2764)
!2904 = !DILocation(line: 379, column: 732, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !2764, file: !16, discriminator: 5)
!2906 = !DILocalVariable(name: "E", scope: !2907, file: !16, line: 379, type: !18)
!2907 = distinct !DILexicalBlock(scope: !2759, file: !16, line: 379, column: 737)
!2908 = !DILocation(line: 379, column: 749, scope: !2907)
!2909 = !DILocation(line: 379, column: 753, scope: !2910)
!2910 = !DILexicalBlockFile(scope: !2907, file: !16, discriminator: 6)
!2911 = !DILocation(line: 379, column: 757, scope: !2910)
!2912 = !DILocation(line: 379, column: 755, scope: !2910)
!2913 = !DILocation(line: 379, column: 749, scope: !2910)
!2914 = !DILocalVariable(name: "step", scope: !2907, file: !16, line: 379, type: !1766)
!2915 = !DILocation(line: 379, column: 776, scope: !2907)
!2916 = !DILocation(line: 379, column: 783, scope: !2910)
!2917 = !DILocation(line: 379, column: 787, scope: !2918)
!2918 = !DILexicalBlockFile(scope: !2907, file: !16, discriminator: 7)
!2919 = !DILocation(line: 379, column: 783, scope: !2918)
!2920 = !DILocation(line: 379, column: 783, scope: !2921)
!2921 = !DILexicalBlockFile(scope: !2907, file: !16, discriminator: 8)
!2922 = !DILocation(line: 379, column: 783, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2907, file: !16, discriminator: 9)
!2924 = !DILocation(line: 379, column: 776, scope: !2923)
!2925 = !DILocation(line: 379, column: 805, scope: !2923)
!2926 = !DILocation(line: 379, column: 803, scope: !2923)
!2927 = !DILocation(line: 379, column: 810, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2929, file: !16, discriminator: 10)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !16, line: 379, column: 799)
!2930 = distinct !DILexicalBlock(scope: !2907, file: !16, line: 379, column: 799)
!2931 = !DILocation(line: 379, column: 814, scope: !2928)
!2932 = !DILocation(line: 379, column: 812, scope: !2928)
!2933 = !DILocation(line: 379, column: 799, scope: !2928)
!2934 = !DILocation(line: 379, column: 835, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2936, file: !16, discriminator: 11)
!2936 = distinct !DILexicalBlock(scope: !2929, file: !16, line: 379, column: 821)
!2937 = !DILocation(line: 379, column: 834, scope: !2935)
!2938 = !DILocation(line: 379, column: 846, scope: !2935)
!2939 = !DILocation(line: 379, column: 848, scope: !2935)
!2940 = !DILocation(line: 379, column: 847, scope: !2935)
!2941 = !DILocation(line: 379, column: 857, scope: !2935)
!2942 = !DILocation(line: 379, column: 863, scope: !2935)
!2943 = !DILocation(line: 379, column: 867, scope: !2935)
!2944 = !DILocation(line: 379, column: 859, scope: !2935)
!2945 = !DILocation(line: 379, column: 858, scope: !2935)
!2946 = !DILocation(line: 379, column: 855, scope: !2935)
!2947 = !DILocation(line: 379, column: 873, scope: !2935)
!2948 = !DILocation(line: 379, column: 871, scope: !2935)
!2949 = !DILocation(line: 379, column: 879, scope: !2935)
!2950 = !DILocation(line: 379, column: 842, scope: !2935)
!2951 = !DILocation(line: 379, column: 883, scope: !2935)
!2952 = !DILocation(line: 379, column: 886, scope: !2935)
!2953 = !DILocation(line: 379, column: 832, scope: !2935)
!2954 = !DILocation(line: 379, column: 823, scope: !2935)
!2955 = !DILocation(line: 379, column: 830, scope: !2935)
!2956 = !DILocation(line: 379, column: 904, scope: !2935)
!2957 = !DILocation(line: 379, column: 903, scope: !2935)
!2958 = !DILocation(line: 379, column: 915, scope: !2935)
!2959 = !DILocation(line: 379, column: 917, scope: !2935)
!2960 = !DILocation(line: 379, column: 916, scope: !2935)
!2961 = !DILocation(line: 379, column: 926, scope: !2935)
!2962 = !DILocation(line: 379, column: 932, scope: !2935)
!2963 = !DILocation(line: 379, column: 936, scope: !2935)
!2964 = !DILocation(line: 379, column: 928, scope: !2935)
!2965 = !DILocation(line: 379, column: 927, scope: !2935)
!2966 = !DILocation(line: 379, column: 924, scope: !2935)
!2967 = !DILocation(line: 379, column: 942, scope: !2935)
!2968 = !DILocation(line: 379, column: 940, scope: !2935)
!2969 = !DILocation(line: 379, column: 948, scope: !2935)
!2970 = !DILocation(line: 379, column: 911, scope: !2935)
!2971 = !DILocation(line: 379, column: 952, scope: !2935)
!2972 = !DILocation(line: 379, column: 955, scope: !2935)
!2973 = !DILocation(line: 379, column: 901, scope: !2935)
!2974 = !DILocation(line: 379, column: 892, scope: !2935)
!2975 = !DILocation(line: 379, column: 899, scope: !2935)
!2976 = !DILocation(line: 379, column: 973, scope: !2935)
!2977 = !DILocation(line: 379, column: 972, scope: !2935)
!2978 = !DILocation(line: 379, column: 984, scope: !2935)
!2979 = !DILocation(line: 379, column: 986, scope: !2935)
!2980 = !DILocation(line: 379, column: 985, scope: !2935)
!2981 = !DILocation(line: 379, column: 995, scope: !2935)
!2982 = !DILocation(line: 379, column: 1001, scope: !2935)
!2983 = !DILocation(line: 379, column: 1005, scope: !2935)
!2984 = !DILocation(line: 379, column: 997, scope: !2935)
!2985 = !DILocation(line: 379, column: 996, scope: !2935)
!2986 = !DILocation(line: 379, column: 993, scope: !2935)
!2987 = !DILocation(line: 379, column: 1011, scope: !2935)
!2988 = !DILocation(line: 379, column: 1009, scope: !2935)
!2989 = !DILocation(line: 379, column: 1017, scope: !2935)
!2990 = !DILocation(line: 379, column: 980, scope: !2935)
!2991 = !DILocation(line: 379, column: 1021, scope: !2935)
!2992 = !DILocation(line: 379, column: 1024, scope: !2935)
!2993 = !DILocation(line: 379, column: 970, scope: !2935)
!2994 = !DILocation(line: 379, column: 961, scope: !2935)
!2995 = !DILocation(line: 379, column: 968, scope: !2935)
!2996 = !DILocation(line: 379, column: 1042, scope: !2935)
!2997 = !DILocation(line: 379, column: 1041, scope: !2935)
!2998 = !DILocation(line: 379, column: 1053, scope: !2935)
!2999 = !DILocation(line: 379, column: 1055, scope: !2935)
!3000 = !DILocation(line: 379, column: 1054, scope: !2935)
!3001 = !DILocation(line: 379, column: 1064, scope: !2935)
!3002 = !DILocation(line: 379, column: 1070, scope: !2935)
!3003 = !DILocation(line: 379, column: 1074, scope: !2935)
!3004 = !DILocation(line: 379, column: 1066, scope: !2935)
!3005 = !DILocation(line: 379, column: 1065, scope: !2935)
!3006 = !DILocation(line: 379, column: 1062, scope: !2935)
!3007 = !DILocation(line: 379, column: 1080, scope: !2935)
!3008 = !DILocation(line: 379, column: 1078, scope: !2935)
!3009 = !DILocation(line: 379, column: 1086, scope: !2935)
!3010 = !DILocation(line: 379, column: 1049, scope: !2935)
!3011 = !DILocation(line: 379, column: 1090, scope: !2935)
!3012 = !DILocation(line: 379, column: 1093, scope: !2935)
!3013 = !DILocation(line: 379, column: 1039, scope: !2935)
!3014 = !DILocation(line: 379, column: 1030, scope: !2935)
!3015 = !DILocation(line: 379, column: 1037, scope: !2935)
!3016 = !DILocation(line: 379, column: 1106, scope: !2935)
!3017 = !DILocation(line: 379, column: 1103, scope: !2935)
!3018 = !DILocation(line: 379, column: 1121, scope: !2935)
!3019 = !DILocation(line: 379, column: 1118, scope: !2935)
!3020 = !DILocation(line: 379, column: 1129, scope: !2935)
!3021 = !DILocation(line: 379, column: 818, scope: !3022)
!3022 = !DILexicalBlockFile(scope: !2929, file: !16, discriminator: 12)
!3023 = !DILocation(line: 379, column: 799, scope: !3022)
!3024 = distinct !{!3024, !3025}
!3025 = !DILocation(line: 379, column: 799, scope: !2907)
!3026 = !DILocation(line: 379, column: 1132, scope: !3027)
!3027 = !DILexicalBlockFile(scope: !2712, file: !16, discriminator: 13)
!3028 = distinct !DISubprogram(name: "rv40_weight_func_rnd_16", scope: !16, file: !16, line: 407, type: !69, isLocal: true, isDefinition: true, scopeLine: 407, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3029 = !DILocalVariable(name: "dst", arg: 1, scope: !3028, file: !16, line: 407, type: !48)
!3030 = !DILocation(line: 407, column: 47, scope: !3028)
!3031 = !DILocalVariable(name: "src1", arg: 2, scope: !3028, file: !16, line: 407, type: !48)
!3032 = !DILocation(line: 407, column: 61, scope: !3028)
!3033 = !DILocalVariable(name: "src2", arg: 3, scope: !3028, file: !16, line: 407, type: !48)
!3034 = !DILocation(line: 407, column: 76, scope: !3028)
!3035 = !DILocalVariable(name: "w1", arg: 4, scope: !3028, file: !16, line: 407, type: !19)
!3036 = !DILocation(line: 407, column: 86, scope: !3028)
!3037 = !DILocalVariable(name: "w2", arg: 5, scope: !3028, file: !16, line: 407, type: !19)
!3038 = !DILocation(line: 407, column: 94, scope: !3028)
!3039 = !DILocalVariable(name: "stride", arg: 6, scope: !3028, file: !16, line: 407, type: !50)
!3040 = !DILocation(line: 407, column: 108, scope: !3028)
!3041 = !DILocalVariable(name: "i", scope: !3028, file: !16, line: 407, type: !19)
!3042 = !DILocation(line: 407, column: 121, scope: !3028)
!3043 = !DILocalVariable(name: "j", scope: !3028, file: !16, line: 407, type: !19)
!3044 = !DILocation(line: 407, column: 124, scope: !3028)
!3045 = !DILocation(line: 407, column: 134, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3028, file: !16, line: 407, column: 127)
!3047 = !DILocation(line: 407, column: 132, scope: !3046)
!3048 = !DILocation(line: 407, column: 139, scope: !3049)
!3049 = !DILexicalBlockFile(scope: !3050, file: !16, discriminator: 1)
!3050 = distinct !DILexicalBlock(scope: !3046, file: !16, line: 407, column: 127)
!3051 = !DILocation(line: 407, column: 141, scope: !3049)
!3052 = !DILocation(line: 407, column: 127, scope: !3049)
!3053 = !DILocation(line: 407, column: 161, scope: !3054)
!3054 = !DILexicalBlockFile(scope: !3055, file: !16, discriminator: 2)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !16, line: 407, column: 154)
!3056 = distinct !DILexicalBlock(scope: !3050, file: !16, line: 407, column: 152)
!3057 = !DILocation(line: 407, column: 159, scope: !3054)
!3058 = !DILocation(line: 407, column: 166, scope: !3059)
!3059 = !DILexicalBlockFile(scope: !3060, file: !16, discriminator: 3)
!3060 = distinct !DILexicalBlock(scope: !3055, file: !16, line: 407, column: 154)
!3061 = !DILocation(line: 407, column: 168, scope: !3059)
!3062 = !DILocation(line: 407, column: 154, scope: !3059)
!3063 = !DILocation(line: 407, column: 191, scope: !3064)
!3064 = !DILexicalBlockFile(scope: !3060, file: !16, discriminator: 4)
!3065 = !DILocation(line: 407, column: 201, scope: !3064)
!3066 = !DILocation(line: 407, column: 196, scope: !3064)
!3067 = !DILocation(line: 407, column: 194, scope: !3064)
!3068 = !DILocation(line: 407, column: 205, scope: !3064)
!3069 = !DILocation(line: 407, column: 215, scope: !3064)
!3070 = !DILocation(line: 407, column: 225, scope: !3064)
!3071 = !DILocation(line: 407, column: 220, scope: !3064)
!3072 = !DILocation(line: 407, column: 218, scope: !3064)
!3073 = !DILocation(line: 407, column: 229, scope: !3064)
!3074 = !DILocation(line: 407, column: 211, scope: !3064)
!3075 = !DILocation(line: 407, column: 235, scope: !3064)
!3076 = !DILocation(line: 407, column: 243, scope: !3064)
!3077 = !DILocation(line: 407, column: 188, scope: !3064)
!3078 = !DILocation(line: 407, column: 183, scope: !3064)
!3079 = !DILocation(line: 407, column: 179, scope: !3064)
!3080 = !DILocation(line: 407, column: 186, scope: !3064)
!3081 = !DILocation(line: 407, column: 175, scope: !3082)
!3082 = !DILexicalBlockFile(scope: !3060, file: !16, discriminator: 5)
!3083 = !DILocation(line: 407, column: 154, scope: !3082)
!3084 = distinct !{!3084, !3085}
!3085 = !DILocation(line: 407, column: 154, scope: !3056)
!3086 = !DILocation(line: 407, column: 257, scope: !3087)
!3087 = !DILexicalBlockFile(scope: !3056, file: !16, discriminator: 6)
!3088 = !DILocation(line: 407, column: 254, scope: !3087)
!3089 = !DILocation(line: 407, column: 273, scope: !3087)
!3090 = !DILocation(line: 407, column: 270, scope: !3087)
!3091 = !DILocation(line: 407, column: 288, scope: !3087)
!3092 = !DILocation(line: 407, column: 285, scope: !3087)
!3093 = !DILocation(line: 407, column: 296, scope: !3087)
!3094 = !DILocation(line: 407, column: 148, scope: !3095)
!3095 = !DILexicalBlockFile(scope: !3050, file: !16, discriminator: 7)
!3096 = !DILocation(line: 407, column: 127, scope: !3095)
!3097 = distinct !{!3097, !3098}
!3098 = !DILocation(line: 407, column: 127, scope: !3028)
!3099 = !DILocation(line: 407, column: 297, scope: !3100)
!3100 = !DILexicalBlockFile(scope: !3028, file: !16, discriminator: 8)
!3101 = distinct !DISubprogram(name: "rv40_weight_func_rnd_8", scope: !16, file: !16, line: 408, type: !69, isLocal: true, isDefinition: true, scopeLine: 408, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3102 = !DILocalVariable(name: "dst", arg: 1, scope: !3101, file: !16, line: 408, type: !48)
!3103 = !DILocation(line: 408, column: 46, scope: !3101)
!3104 = !DILocalVariable(name: "src1", arg: 2, scope: !3101, file: !16, line: 408, type: !48)
!3105 = !DILocation(line: 408, column: 60, scope: !3101)
!3106 = !DILocalVariable(name: "src2", arg: 3, scope: !3101, file: !16, line: 408, type: !48)
!3107 = !DILocation(line: 408, column: 75, scope: !3101)
!3108 = !DILocalVariable(name: "w1", arg: 4, scope: !3101, file: !16, line: 408, type: !19)
!3109 = !DILocation(line: 408, column: 85, scope: !3101)
!3110 = !DILocalVariable(name: "w2", arg: 5, scope: !3101, file: !16, line: 408, type: !19)
!3111 = !DILocation(line: 408, column: 93, scope: !3101)
!3112 = !DILocalVariable(name: "stride", arg: 6, scope: !3101, file: !16, line: 408, type: !50)
!3113 = !DILocation(line: 408, column: 107, scope: !3101)
!3114 = !DILocalVariable(name: "i", scope: !3101, file: !16, line: 408, type: !19)
!3115 = !DILocation(line: 408, column: 120, scope: !3101)
!3116 = !DILocalVariable(name: "j", scope: !3101, file: !16, line: 408, type: !19)
!3117 = !DILocation(line: 408, column: 123, scope: !3101)
!3118 = !DILocation(line: 408, column: 133, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3101, file: !16, line: 408, column: 126)
!3120 = !DILocation(line: 408, column: 131, scope: !3119)
!3121 = !DILocation(line: 408, column: 138, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3123, file: !16, discriminator: 1)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !16, line: 408, column: 126)
!3124 = !DILocation(line: 408, column: 140, scope: !3122)
!3125 = !DILocation(line: 408, column: 126, scope: !3122)
!3126 = !DILocation(line: 408, column: 159, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !3128, file: !16, discriminator: 2)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !16, line: 408, column: 152)
!3129 = distinct !DILexicalBlock(scope: !3123, file: !16, line: 408, column: 150)
!3130 = !DILocation(line: 408, column: 157, scope: !3127)
!3131 = !DILocation(line: 408, column: 164, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !3133, file: !16, discriminator: 3)
!3133 = distinct !DILexicalBlock(scope: !3128, file: !16, line: 408, column: 152)
!3134 = !DILocation(line: 408, column: 166, scope: !3132)
!3135 = !DILocation(line: 408, column: 152, scope: !3132)
!3136 = !DILocation(line: 408, column: 188, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3133, file: !16, discriminator: 4)
!3138 = !DILocation(line: 408, column: 198, scope: !3137)
!3139 = !DILocation(line: 408, column: 193, scope: !3137)
!3140 = !DILocation(line: 408, column: 191, scope: !3137)
!3141 = !DILocation(line: 408, column: 202, scope: !3137)
!3142 = !DILocation(line: 408, column: 212, scope: !3137)
!3143 = !DILocation(line: 408, column: 222, scope: !3137)
!3144 = !DILocation(line: 408, column: 217, scope: !3137)
!3145 = !DILocation(line: 408, column: 215, scope: !3137)
!3146 = !DILocation(line: 408, column: 226, scope: !3137)
!3147 = !DILocation(line: 408, column: 208, scope: !3137)
!3148 = !DILocation(line: 408, column: 232, scope: !3137)
!3149 = !DILocation(line: 408, column: 240, scope: !3137)
!3150 = !DILocation(line: 408, column: 185, scope: !3137)
!3151 = !DILocation(line: 408, column: 180, scope: !3137)
!3152 = !DILocation(line: 408, column: 176, scope: !3137)
!3153 = !DILocation(line: 408, column: 183, scope: !3137)
!3154 = !DILocation(line: 408, column: 172, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3133, file: !16, discriminator: 5)
!3156 = !DILocation(line: 408, column: 152, scope: !3155)
!3157 = distinct !{!3157, !3158}
!3158 = !DILocation(line: 408, column: 152, scope: !3129)
!3159 = !DILocation(line: 408, column: 254, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !3129, file: !16, discriminator: 6)
!3161 = !DILocation(line: 408, column: 251, scope: !3160)
!3162 = !DILocation(line: 408, column: 270, scope: !3160)
!3163 = !DILocation(line: 408, column: 267, scope: !3160)
!3164 = !DILocation(line: 408, column: 285, scope: !3160)
!3165 = !DILocation(line: 408, column: 282, scope: !3160)
!3166 = !DILocation(line: 408, column: 293, scope: !3160)
!3167 = !DILocation(line: 408, column: 146, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3123, file: !16, discriminator: 7)
!3169 = !DILocation(line: 408, column: 126, scope: !3168)
!3170 = distinct !{!3170, !3171}
!3171 = !DILocation(line: 408, column: 126, scope: !3101)
!3172 = !DILocation(line: 408, column: 294, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3101, file: !16, discriminator: 8)
!3174 = distinct !DISubprogram(name: "rv40_weight_func_nornd_16", scope: !16, file: !16, line: 407, type: !69, isLocal: true, isDefinition: true, scopeLine: 407, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3175 = !DILocalVariable(name: "dst", arg: 1, scope: !3174, file: !16, line: 407, type: !48)
!3176 = !DILocation(line: 407, column: 346, scope: !3174)
!3177 = !DILocalVariable(name: "src1", arg: 2, scope: !3174, file: !16, line: 407, type: !48)
!3178 = !DILocation(line: 407, column: 360, scope: !3174)
!3179 = !DILocalVariable(name: "src2", arg: 3, scope: !3174, file: !16, line: 407, type: !48)
!3180 = !DILocation(line: 407, column: 375, scope: !3174)
!3181 = !DILocalVariable(name: "w1", arg: 4, scope: !3174, file: !16, line: 407, type: !19)
!3182 = !DILocation(line: 407, column: 385, scope: !3174)
!3183 = !DILocalVariable(name: "w2", arg: 5, scope: !3174, file: !16, line: 407, type: !19)
!3184 = !DILocation(line: 407, column: 393, scope: !3174)
!3185 = !DILocalVariable(name: "stride", arg: 6, scope: !3174, file: !16, line: 407, type: !50)
!3186 = !DILocation(line: 407, column: 407, scope: !3174)
!3187 = !DILocalVariable(name: "i", scope: !3174, file: !16, line: 407, type: !19)
!3188 = !DILocation(line: 407, column: 420, scope: !3174)
!3189 = !DILocalVariable(name: "j", scope: !3174, file: !16, line: 407, type: !19)
!3190 = !DILocation(line: 407, column: 423, scope: !3174)
!3191 = !DILocation(line: 407, column: 433, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3174, file: !16, line: 407, column: 426)
!3193 = !DILocation(line: 407, column: 431, scope: !3192)
!3194 = !DILocation(line: 407, column: 438, scope: !3195)
!3195 = !DILexicalBlockFile(scope: !3196, file: !16, discriminator: 1)
!3196 = distinct !DILexicalBlock(scope: !3192, file: !16, line: 407, column: 426)
!3197 = !DILocation(line: 407, column: 440, scope: !3195)
!3198 = !DILocation(line: 407, column: 426, scope: !3195)
!3199 = !DILocation(line: 407, column: 460, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !3201, file: !16, discriminator: 2)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !16, line: 407, column: 453)
!3202 = distinct !DILexicalBlock(scope: !3196, file: !16, line: 407, column: 451)
!3203 = !DILocation(line: 407, column: 458, scope: !3200)
!3204 = !DILocation(line: 407, column: 465, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3206, file: !16, discriminator: 3)
!3206 = distinct !DILexicalBlock(scope: !3201, file: !16, line: 407, column: 453)
!3207 = !DILocation(line: 407, column: 467, scope: !3205)
!3208 = !DILocation(line: 407, column: 453, scope: !3205)
!3209 = !DILocation(line: 407, column: 488, scope: !3210)
!3210 = !DILexicalBlockFile(scope: !3206, file: !16, discriminator: 4)
!3211 = !DILocation(line: 407, column: 498, scope: !3210)
!3212 = !DILocation(line: 407, column: 493, scope: !3210)
!3213 = !DILocation(line: 407, column: 491, scope: !3210)
!3214 = !DILocation(line: 407, column: 503, scope: !3210)
!3215 = !DILocation(line: 407, column: 513, scope: !3210)
!3216 = !DILocation(line: 407, column: 508, scope: !3210)
!3217 = !DILocation(line: 407, column: 506, scope: !3210)
!3218 = !DILocation(line: 407, column: 501, scope: !3210)
!3219 = !DILocation(line: 407, column: 516, scope: !3210)
!3220 = !DILocation(line: 407, column: 524, scope: !3210)
!3221 = !DILocation(line: 407, column: 487, scope: !3210)
!3222 = !DILocation(line: 407, column: 482, scope: !3210)
!3223 = !DILocation(line: 407, column: 478, scope: !3210)
!3224 = !DILocation(line: 407, column: 485, scope: !3210)
!3225 = !DILocation(line: 407, column: 474, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3206, file: !16, discriminator: 5)
!3227 = !DILocation(line: 407, column: 453, scope: !3226)
!3228 = distinct !{!3228, !3229}
!3229 = !DILocation(line: 407, column: 453, scope: !3202)
!3230 = !DILocation(line: 407, column: 538, scope: !3231)
!3231 = !DILexicalBlockFile(scope: !3202, file: !16, discriminator: 6)
!3232 = !DILocation(line: 407, column: 535, scope: !3231)
!3233 = !DILocation(line: 407, column: 554, scope: !3231)
!3234 = !DILocation(line: 407, column: 551, scope: !3231)
!3235 = !DILocation(line: 407, column: 569, scope: !3231)
!3236 = !DILocation(line: 407, column: 566, scope: !3231)
!3237 = !DILocation(line: 407, column: 577, scope: !3231)
!3238 = !DILocation(line: 407, column: 447, scope: !3239)
!3239 = !DILexicalBlockFile(scope: !3196, file: !16, discriminator: 7)
!3240 = !DILocation(line: 407, column: 426, scope: !3239)
!3241 = distinct !{!3241, !3242}
!3242 = !DILocation(line: 407, column: 426, scope: !3174)
!3243 = !DILocation(line: 407, column: 578, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3174, file: !16, discriminator: 8)
!3245 = distinct !DISubprogram(name: "rv40_weight_func_nornd_8", scope: !16, file: !16, line: 408, type: !69, isLocal: true, isDefinition: true, scopeLine: 408, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3246 = !DILocalVariable(name: "dst", arg: 1, scope: !3245, file: !16, line: 408, type: !48)
!3247 = !DILocation(line: 408, column: 342, scope: !3245)
!3248 = !DILocalVariable(name: "src1", arg: 2, scope: !3245, file: !16, line: 408, type: !48)
!3249 = !DILocation(line: 408, column: 356, scope: !3245)
!3250 = !DILocalVariable(name: "src2", arg: 3, scope: !3245, file: !16, line: 408, type: !48)
!3251 = !DILocation(line: 408, column: 371, scope: !3245)
!3252 = !DILocalVariable(name: "w1", arg: 4, scope: !3245, file: !16, line: 408, type: !19)
!3253 = !DILocation(line: 408, column: 381, scope: !3245)
!3254 = !DILocalVariable(name: "w2", arg: 5, scope: !3245, file: !16, line: 408, type: !19)
!3255 = !DILocation(line: 408, column: 389, scope: !3245)
!3256 = !DILocalVariable(name: "stride", arg: 6, scope: !3245, file: !16, line: 408, type: !50)
!3257 = !DILocation(line: 408, column: 403, scope: !3245)
!3258 = !DILocalVariable(name: "i", scope: !3245, file: !16, line: 408, type: !19)
!3259 = !DILocation(line: 408, column: 416, scope: !3245)
!3260 = !DILocalVariable(name: "j", scope: !3245, file: !16, line: 408, type: !19)
!3261 = !DILocation(line: 408, column: 419, scope: !3245)
!3262 = !DILocation(line: 408, column: 429, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3245, file: !16, line: 408, column: 422)
!3264 = !DILocation(line: 408, column: 427, scope: !3263)
!3265 = !DILocation(line: 408, column: 434, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3267, file: !16, discriminator: 1)
!3267 = distinct !DILexicalBlock(scope: !3263, file: !16, line: 408, column: 422)
!3268 = !DILocation(line: 408, column: 436, scope: !3266)
!3269 = !DILocation(line: 408, column: 422, scope: !3266)
!3270 = !DILocation(line: 408, column: 455, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3272, file: !16, discriminator: 2)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !16, line: 408, column: 448)
!3273 = distinct !DILexicalBlock(scope: !3267, file: !16, line: 408, column: 446)
!3274 = !DILocation(line: 408, column: 453, scope: !3271)
!3275 = !DILocation(line: 408, column: 460, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3277, file: !16, discriminator: 3)
!3277 = distinct !DILexicalBlock(scope: !3272, file: !16, line: 408, column: 448)
!3278 = !DILocation(line: 408, column: 462, scope: !3276)
!3279 = !DILocation(line: 408, column: 448, scope: !3276)
!3280 = !DILocation(line: 408, column: 482, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !3277, file: !16, discriminator: 4)
!3282 = !DILocation(line: 408, column: 492, scope: !3281)
!3283 = !DILocation(line: 408, column: 487, scope: !3281)
!3284 = !DILocation(line: 408, column: 485, scope: !3281)
!3285 = !DILocation(line: 408, column: 497, scope: !3281)
!3286 = !DILocation(line: 408, column: 507, scope: !3281)
!3287 = !DILocation(line: 408, column: 502, scope: !3281)
!3288 = !DILocation(line: 408, column: 500, scope: !3281)
!3289 = !DILocation(line: 408, column: 495, scope: !3281)
!3290 = !DILocation(line: 408, column: 510, scope: !3281)
!3291 = !DILocation(line: 408, column: 518, scope: !3281)
!3292 = !DILocation(line: 408, column: 481, scope: !3281)
!3293 = !DILocation(line: 408, column: 476, scope: !3281)
!3294 = !DILocation(line: 408, column: 472, scope: !3281)
!3295 = !DILocation(line: 408, column: 479, scope: !3281)
!3296 = !DILocation(line: 408, column: 468, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3277, file: !16, discriminator: 5)
!3298 = !DILocation(line: 408, column: 448, scope: !3297)
!3299 = distinct !{!3299, !3300}
!3300 = !DILocation(line: 408, column: 448, scope: !3273)
!3301 = !DILocation(line: 408, column: 532, scope: !3302)
!3302 = !DILexicalBlockFile(scope: !3273, file: !16, discriminator: 6)
!3303 = !DILocation(line: 408, column: 529, scope: !3302)
!3304 = !DILocation(line: 408, column: 548, scope: !3302)
!3305 = !DILocation(line: 408, column: 545, scope: !3302)
!3306 = !DILocation(line: 408, column: 563, scope: !3302)
!3307 = !DILocation(line: 408, column: 560, scope: !3302)
!3308 = !DILocation(line: 408, column: 571, scope: !3302)
!3309 = !DILocation(line: 408, column: 442, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !3267, file: !16, discriminator: 7)
!3311 = !DILocation(line: 408, column: 422, scope: !3310)
!3312 = distinct !{!3312, !3313}
!3313 = !DILocation(line: 408, column: 422, scope: !3245)
!3314 = !DILocation(line: 408, column: 572, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3245, file: !16, discriminator: 8)
!3316 = distinct !DISubprogram(name: "rv40_h_weak_loop_filter", scope: !16, file: !16, line: 478, type: !3317, isLocal: true, isDefinition: true, scopeLine: 483, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{null, !48, !1766, !18, !18, !18, !18, !18, !18, !18}
!3319 = !DILocalVariable(name: "a", arg: 1, scope: !3320, file: !3321, line: 127, type: !19)
!3320 = distinct !DISubprogram(name: "av_clip_c", scope: !3321, file: !3321, line: 127, type: !3322, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3321 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!19, !19, !19, !19}
!3324 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 468, column: 46, scope: !3326, inlinedAt: !3334)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !16, line: 466, column: 85)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !16, line: 466, column: 13)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !16, line: 444, column: 44)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !16, line: 444, column: 5)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !16, line: 444, column: 5)
!3331 = distinct !DISubprogram(name: "rv40_weak_loop_filter", scope: !16, file: !16, line: 430, type: !3332, isLocal: true, isDefinition: true, scopeLine: 440, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !48, !18, !1766, !18, !18, !18, !18, !18, !18, !18}
!3334 = distinct !DILocation(line: 484, column: 5, scope: !3316)
!3335 = !DILocalVariable(name: "amin", arg: 2, scope: !3320, file: !3321, line: 127, type: !19)
!3336 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3325)
!3337 = !DILocalVariable(name: "amax", arg: 3, scope: !3320, file: !3321, line: 127, type: !19)
!3338 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3325)
!3339 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3340)
!3340 = distinct !DILocation(line: 473, column: 46, scope: !3341, inlinedAt: !3334)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !16, line: 471, column: 85)
!3342 = distinct !DILexicalBlock(scope: !3328, file: !16, line: 471, column: 13)
!3343 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3340)
!3344 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3340)
!3345 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3346)
!3346 = distinct !DILocation(line: 462, column: 16, scope: !3328, inlinedAt: !3334)
!3347 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3346)
!3348 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3346)
!3349 = !DILocalVariable(name: "src", arg: 1, scope: !3331, file: !16, line: 430, type: !48)
!3350 = !DILocation(line: 430, column: 82, scope: !3331, inlinedAt: !3334)
!3351 = !DILocalVariable(name: "step", arg: 2, scope: !3331, file: !16, line: 431, type: !18)
!3352 = !DILocation(line: 431, column: 62, scope: !3331, inlinedAt: !3334)
!3353 = !DILocalVariable(name: "stride", arg: 3, scope: !3331, file: !16, line: 432, type: !1766)
!3354 = !DILocation(line: 432, column: 68, scope: !3331, inlinedAt: !3334)
!3355 = !DILocalVariable(name: "filter_p1", arg: 4, scope: !3331, file: !16, line: 433, type: !18)
!3356 = !DILocation(line: 433, column: 62, scope: !3331, inlinedAt: !3334)
!3357 = !DILocalVariable(name: "filter_q1", arg: 5, scope: !3331, file: !16, line: 434, type: !18)
!3358 = !DILocation(line: 434, column: 62, scope: !3331, inlinedAt: !3334)
!3359 = !DILocalVariable(name: "alpha", arg: 6, scope: !3331, file: !16, line: 435, type: !18)
!3360 = !DILocation(line: 435, column: 62, scope: !3331, inlinedAt: !3334)
!3361 = !DILocalVariable(name: "beta", arg: 7, scope: !3331, file: !16, line: 436, type: !18)
!3362 = !DILocation(line: 436, column: 62, scope: !3331, inlinedAt: !3334)
!3363 = !DILocalVariable(name: "lim_p0q0", arg: 8, scope: !3331, file: !16, line: 437, type: !18)
!3364 = !DILocation(line: 437, column: 62, scope: !3331, inlinedAt: !3334)
!3365 = !DILocalVariable(name: "lim_q1", arg: 9, scope: !3331, file: !16, line: 438, type: !18)
!3366 = !DILocation(line: 438, column: 62, scope: !3331, inlinedAt: !3334)
!3367 = !DILocalVariable(name: "lim_p1", arg: 10, scope: !3331, file: !16, line: 439, type: !18)
!3368 = !DILocation(line: 439, column: 62, scope: !3331, inlinedAt: !3334)
!3369 = !DILocalVariable(name: "cm", scope: !3331, file: !16, line: 441, type: !49)
!3370 = !DILocation(line: 441, column: 20, scope: !3331, inlinedAt: !3334)
!3371 = !DILocalVariable(name: "i", scope: !3331, file: !16, line: 442, type: !19)
!3372 = !DILocation(line: 442, column: 9, scope: !3331, inlinedAt: !3334)
!3373 = !DILocalVariable(name: "t", scope: !3331, file: !16, line: 442, type: !19)
!3374 = !DILocation(line: 442, column: 12, scope: !3331, inlinedAt: !3334)
!3375 = !DILocalVariable(name: "u", scope: !3331, file: !16, line: 442, type: !19)
!3376 = !DILocation(line: 442, column: 15, scope: !3331, inlinedAt: !3334)
!3377 = !DILocalVariable(name: "diff", scope: !3331, file: !16, line: 442, type: !19)
!3378 = !DILocation(line: 442, column: 18, scope: !3331, inlinedAt: !3334)
!3379 = !DILocalVariable(name: "diff_p1p0", scope: !3328, file: !16, line: 445, type: !19)
!3380 = !DILocation(line: 445, column: 13, scope: !3328, inlinedAt: !3334)
!3381 = !DILocalVariable(name: "diff_q1q0", scope: !3328, file: !16, line: 446, type: !19)
!3382 = !DILocation(line: 446, column: 13, scope: !3328, inlinedAt: !3334)
!3383 = !DILocalVariable(name: "diff_p1p2", scope: !3328, file: !16, line: 447, type: !19)
!3384 = !DILocation(line: 447, column: 13, scope: !3328, inlinedAt: !3334)
!3385 = !DILocalVariable(name: "diff_q1q2", scope: !3328, file: !16, line: 448, type: !19)
!3386 = !DILocation(line: 448, column: 13, scope: !3328, inlinedAt: !3334)
!3387 = !DILocalVariable(name: "src", arg: 1, scope: !3316, file: !16, line: 478, type: !48)
!3388 = !DILocation(line: 478, column: 46, scope: !3316)
!3389 = !DILocalVariable(name: "stride", arg: 2, scope: !3316, file: !16, line: 478, type: !1766)
!3390 = !DILocation(line: 478, column: 67, scope: !3316)
!3391 = !DILocalVariable(name: "filter_p1", arg: 3, scope: !3316, file: !16, line: 479, type: !18)
!3392 = !DILocation(line: 479, column: 47, scope: !3316)
!3393 = !DILocalVariable(name: "filter_q1", arg: 4, scope: !3316, file: !16, line: 479, type: !18)
!3394 = !DILocation(line: 479, column: 68, scope: !3316)
!3395 = !DILocalVariable(name: "alpha", arg: 5, scope: !3316, file: !16, line: 480, type: !18)
!3396 = !DILocation(line: 480, column: 47, scope: !3316)
!3397 = !DILocalVariable(name: "beta", arg: 6, scope: !3316, file: !16, line: 480, type: !18)
!3398 = !DILocation(line: 480, column: 64, scope: !3316)
!3399 = !DILocalVariable(name: "lim_p0q0", arg: 7, scope: !3316, file: !16, line: 481, type: !18)
!3400 = !DILocation(line: 481, column: 47, scope: !3316)
!3401 = !DILocalVariable(name: "lim_q1", arg: 8, scope: !3316, file: !16, line: 481, type: !18)
!3402 = !DILocation(line: 481, column: 67, scope: !3316)
!3403 = !DILocalVariable(name: "lim_p1", arg: 9, scope: !3316, file: !16, line: 482, type: !18)
!3404 = !DILocation(line: 482, column: 47, scope: !3316)
!3405 = !DILocation(line: 484, column: 27, scope: !3316)
!3406 = !DILocation(line: 484, column: 32, scope: !3316)
!3407 = !DILocation(line: 484, column: 43, scope: !3316)
!3408 = !DILocation(line: 484, column: 54, scope: !3316)
!3409 = !DILocation(line: 485, column: 27, scope: !3316)
!3410 = !DILocation(line: 485, column: 34, scope: !3316)
!3411 = !DILocation(line: 485, column: 40, scope: !3316)
!3412 = !DILocation(line: 485, column: 50, scope: !3316)
!3413 = !DILocation(line: 485, column: 58, scope: !3316)
!3414 = !DILocation(line: 484, column: 5, scope: !3316)
!3415 = !DILocation(line: 444, column: 12, scope: !3330, inlinedAt: !3334)
!3416 = !DILocation(line: 444, column: 10, scope: !3330, inlinedAt: !3334)
!3417 = !DILocation(line: 444, column: 17, scope: !3418, inlinedAt: !3334)
!3418 = !DILexicalBlockFile(scope: !3329, file: !16, discriminator: 1)
!3419 = !DILocation(line: 444, column: 19, scope: !3418, inlinedAt: !3334)
!3420 = !DILocation(line: 444, column: 5, scope: !3418, inlinedAt: !3334)
!3421 = !DILocation(line: 445, column: 32, scope: !3328, inlinedAt: !3334)
!3422 = !DILocation(line: 445, column: 31, scope: !3328, inlinedAt: !3334)
!3423 = !DILocation(line: 445, column: 25, scope: !3328, inlinedAt: !3334)
!3424 = !DILocation(line: 445, column: 47, scope: !3328, inlinedAt: !3334)
!3425 = !DILocation(line: 445, column: 46, scope: !3328, inlinedAt: !3334)
!3426 = !DILocation(line: 445, column: 40, scope: !3328, inlinedAt: !3334)
!3427 = !DILocation(line: 445, column: 38, scope: !3328, inlinedAt: !3334)
!3428 = !DILocation(line: 446, column: 32, scope: !3328, inlinedAt: !3334)
!3429 = !DILocation(line: 446, column: 25, scope: !3328, inlinedAt: !3334)
!3430 = !DILocation(line: 446, column: 47, scope: !3328, inlinedAt: !3334)
!3431 = !DILocation(line: 446, column: 40, scope: !3328, inlinedAt: !3334)
!3432 = !DILocation(line: 446, column: 38, scope: !3328, inlinedAt: !3334)
!3433 = !DILocation(line: 447, column: 32, scope: !3328, inlinedAt: !3334)
!3434 = !DILocation(line: 447, column: 31, scope: !3328, inlinedAt: !3334)
!3435 = !DILocation(line: 447, column: 25, scope: !3328, inlinedAt: !3334)
!3436 = !DILocation(line: 447, column: 47, scope: !3328, inlinedAt: !3334)
!3437 = !DILocation(line: 447, column: 46, scope: !3328, inlinedAt: !3334)
!3438 = !DILocation(line: 447, column: 40, scope: !3328, inlinedAt: !3334)
!3439 = !DILocation(line: 447, column: 38, scope: !3328, inlinedAt: !3334)
!3440 = !DILocation(line: 448, column: 32, scope: !3328, inlinedAt: !3334)
!3441 = !DILocation(line: 448, column: 25, scope: !3328, inlinedAt: !3334)
!3442 = !DILocation(line: 448, column: 47, scope: !3328, inlinedAt: !3334)
!3443 = !DILocation(line: 448, column: 46, scope: !3328, inlinedAt: !3334)
!3444 = !DILocation(line: 448, column: 40, scope: !3328, inlinedAt: !3334)
!3445 = !DILocation(line: 448, column: 38, scope: !3328, inlinedAt: !3334)
!3446 = !DILocation(line: 450, column: 19, scope: !3328, inlinedAt: !3334)
!3447 = !DILocation(line: 450, column: 13, scope: !3328, inlinedAt: !3334)
!3448 = !DILocation(line: 450, column: 34, scope: !3328, inlinedAt: !3334)
!3449 = !DILocation(line: 450, column: 33, scope: !3328, inlinedAt: !3334)
!3450 = !DILocation(line: 450, column: 27, scope: !3328, inlinedAt: !3334)
!3451 = !DILocation(line: 450, column: 25, scope: !3328, inlinedAt: !3334)
!3452 = !DILocation(line: 450, column: 11, scope: !3328, inlinedAt: !3334)
!3453 = !DILocation(line: 451, column: 14, scope: !3454, inlinedAt: !3334)
!3454 = distinct !DILexicalBlock(scope: !3328, file: !16, line: 451, column: 13)
!3455 = !DILocation(line: 451, column: 13, scope: !3328, inlinedAt: !3334)
!3456 = !DILocation(line: 452, column: 13, scope: !3454, inlinedAt: !3334)
!3457 = !DILocation(line: 454, column: 14, scope: !3328, inlinedAt: !3334)
!3458 = !DILocation(line: 454, column: 24, scope: !3328, inlinedAt: !3334)
!3459 = !DILocation(line: 454, column: 27, scope: !3328, inlinedAt: !3334)
!3460 = !DILocation(line: 454, column: 23, scope: !3328, inlinedAt: !3334)
!3461 = !DILocation(line: 454, column: 35, scope: !3462, inlinedAt: !3334)
!3462 = !DILexicalBlockFile(scope: !3328, file: !16, discriminator: 1)
!3463 = !DILocation(line: 454, column: 23, scope: !3462, inlinedAt: !3334)
!3464 = !DILocation(line: 454, column: 43, scope: !3465, inlinedAt: !3334)
!3465 = !DILexicalBlockFile(scope: !3328, file: !16, discriminator: 2)
!3466 = !DILocation(line: 454, column: 41, scope: !3465, inlinedAt: !3334)
!3467 = !DILocation(line: 454, column: 23, scope: !3465, inlinedAt: !3334)
!3468 = !DILocation(line: 454, column: 23, scope: !3469, inlinedAt: !3334)
!3469 = !DILexicalBlockFile(scope: !3328, file: !16, discriminator: 3)
!3470 = !DILocation(line: 454, column: 20, scope: !3469, inlinedAt: !3334)
!3471 = !DILocation(line: 454, column: 49, scope: !3469, inlinedAt: !3334)
!3472 = !DILocation(line: 454, column: 11, scope: !3469, inlinedAt: !3334)
!3473 = !DILocation(line: 455, column: 13, scope: !3474, inlinedAt: !3334)
!3474 = distinct !DILexicalBlock(scope: !3328, file: !16, line: 455, column: 13)
!3475 = !DILocation(line: 455, column: 22, scope: !3474, inlinedAt: !3334)
!3476 = !DILocation(line: 455, column: 32, scope: !3474, inlinedAt: !3334)
!3477 = !DILocation(line: 455, column: 35, scope: !3478, inlinedAt: !3334)
!3478 = !DILexicalBlockFile(scope: !3474, file: !16, discriminator: 1)
!3479 = !DILocation(line: 455, column: 32, scope: !3478, inlinedAt: !3334)
!3480 = !DILocation(line: 455, column: 32, scope: !3481, inlinedAt: !3334)
!3481 = !DILexicalBlockFile(scope: !3474, file: !16, discriminator: 2)
!3482 = !DILocation(line: 455, column: 19, scope: !3481, inlinedAt: !3334)
!3483 = !DILocation(line: 455, column: 15, scope: !3481, inlinedAt: !3334)
!3484 = !DILocation(line: 455, column: 13, scope: !3481, inlinedAt: !3334)
!3485 = !DILocation(line: 456, column: 13, scope: !3474, inlinedAt: !3334)
!3486 = !DILocation(line: 458, column: 11, scope: !3328, inlinedAt: !3334)
!3487 = !DILocation(line: 459, column: 13, scope: !3488, inlinedAt: !3334)
!3488 = distinct !DILexicalBlock(scope: !3328, file: !16, line: 459, column: 13)
!3489 = !DILocation(line: 459, column: 23, scope: !3488, inlinedAt: !3334)
!3490 = !DILocation(line: 459, column: 26, scope: !3491, inlinedAt: !3334)
!3491 = !DILexicalBlockFile(scope: !3488, file: !16, discriminator: 1)
!3492 = !DILocation(line: 459, column: 13, scope: !3491, inlinedAt: !3334)
!3493 = !DILocation(line: 460, column: 25, scope: !3488, inlinedAt: !3334)
!3494 = !DILocation(line: 460, column: 24, scope: !3488, inlinedAt: !3334)
!3495 = !DILocation(line: 460, column: 18, scope: !3488, inlinedAt: !3334)
!3496 = !DILocation(line: 460, column: 39, scope: !3488, inlinedAt: !3334)
!3497 = !DILocation(line: 460, column: 33, scope: !3488, inlinedAt: !3334)
!3498 = !DILocation(line: 460, column: 31, scope: !3488, inlinedAt: !3334)
!3499 = !DILocation(line: 460, column: 15, scope: !3488, inlinedAt: !3334)
!3500 = !DILocation(line: 460, column: 13, scope: !3488, inlinedAt: !3334)
!3501 = !DILocation(line: 462, column: 27, scope: !3328, inlinedAt: !3334)
!3502 = !DILocation(line: 462, column: 29, scope: !3328, inlinedAt: !3334)
!3503 = !DILocation(line: 462, column: 34, scope: !3328, inlinedAt: !3334)
!3504 = !DILocation(line: 462, column: 42, scope: !3328, inlinedAt: !3334)
!3505 = !DILocation(line: 462, column: 40, scope: !3328, inlinedAt: !3334)
!3506 = !DILocation(line: 462, column: 53, scope: !3328, inlinedAt: !3334)
!3507 = !DILocation(line: 462, column: 16, scope: !3328, inlinedAt: !3334)
!3508 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3346)
!3509 = distinct !DILexicalBlock(scope: !3320, file: !3321, line: 132, column: 9)
!3510 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3346)
!3511 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3346)
!3512 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3346)
!3513 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3346)
!3514 = !DILexicalBlockFile(scope: !3509, file: !3321, discriminator: 1)
!3515 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3346)
!3516 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3346)
!3517 = distinct !DILexicalBlock(scope: !3509, file: !3321, line: 133, column: 14)
!3518 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3346)
!3519 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3346)
!3520 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3346)
!3521 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3346)
!3522 = !DILexicalBlockFile(scope: !3517, file: !3321, discriminator: 1)
!3523 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3346)
!3524 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3346)
!3525 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3346)
!3526 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3346)
!3527 = !DILocation(line: 462, column: 14, scope: !3328, inlinedAt: !3334)
!3528 = !DILocation(line: 463, column: 34, scope: !3328, inlinedAt: !3334)
!3529 = !DILocation(line: 463, column: 33, scope: !3328, inlinedAt: !3334)
!3530 = !DILocation(line: 463, column: 27, scope: !3328, inlinedAt: !3334)
!3531 = !DILocation(line: 463, column: 42, scope: !3328, inlinedAt: !3334)
!3532 = !DILocation(line: 463, column: 40, scope: !3328, inlinedAt: !3334)
!3533 = !DILocation(line: 463, column: 24, scope: !3328, inlinedAt: !3334)
!3534 = !DILocation(line: 463, column: 16, scope: !3328, inlinedAt: !3334)
!3535 = !DILocation(line: 463, column: 15, scope: !3328, inlinedAt: !3334)
!3536 = !DILocation(line: 463, column: 9, scope: !3328, inlinedAt: !3334)
!3537 = !DILocation(line: 463, column: 22, scope: !3328, inlinedAt: !3334)
!3538 = !DILocation(line: 464, column: 34, scope: !3328, inlinedAt: !3334)
!3539 = !DILocation(line: 464, column: 27, scope: !3328, inlinedAt: !3334)
!3540 = !DILocation(line: 464, column: 42, scope: !3328, inlinedAt: !3334)
!3541 = !DILocation(line: 464, column: 40, scope: !3328, inlinedAt: !3334)
!3542 = !DILocation(line: 464, column: 24, scope: !3328, inlinedAt: !3334)
!3543 = !DILocation(line: 464, column: 16, scope: !3328, inlinedAt: !3334)
!3544 = !DILocation(line: 464, column: 9, scope: !3328, inlinedAt: !3334)
!3545 = !DILocation(line: 464, column: 22, scope: !3328, inlinedAt: !3334)
!3546 = !DILocation(line: 466, column: 13, scope: !3327, inlinedAt: !3334)
!3547 = !DILocation(line: 466, column: 23, scope: !3327, inlinedAt: !3334)
!3548 = !DILocation(line: 466, column: 28, scope: !3549, inlinedAt: !3334)
!3549 = !DILexicalBlockFile(scope: !3327, file: !16, discriminator: 1)
!3550 = !DILocation(line: 466, column: 39, scope: !3549, inlinedAt: !3334)
!3551 = !DILocation(line: 466, column: 27, scope: !3549, inlinedAt: !3334)
!3552 = !DILocation(line: 466, column: 47, scope: !3553, inlinedAt: !3334)
!3553 = !DILexicalBlockFile(scope: !3327, file: !16, discriminator: 2)
!3554 = !DILocation(line: 466, column: 27, scope: !3553, inlinedAt: !3334)
!3555 = !DILocation(line: 466, column: 63, scope: !3556, inlinedAt: !3334)
!3556 = !DILexicalBlockFile(scope: !3327, file: !16, discriminator: 3)
!3557 = !DILocation(line: 466, column: 61, scope: !3556, inlinedAt: !3334)
!3558 = !DILocation(line: 466, column: 27, scope: !3556, inlinedAt: !3334)
!3559 = !DILocation(line: 466, column: 27, scope: !3560, inlinedAt: !3334)
!3560 = !DILexicalBlockFile(scope: !3327, file: !16, discriminator: 4)
!3561 = !DILocation(line: 466, column: 79, scope: !3560, inlinedAt: !3334)
!3562 = !DILocation(line: 466, column: 76, scope: !3560, inlinedAt: !3334)
!3563 = !DILocation(line: 466, column: 13, scope: !3560, inlinedAt: !3334)
!3564 = !DILocation(line: 467, column: 18, scope: !3326, inlinedAt: !3334)
!3565 = !DILocation(line: 467, column: 30, scope: !3326, inlinedAt: !3334)
!3566 = !DILocation(line: 467, column: 28, scope: !3326, inlinedAt: !3334)
!3567 = !DILocation(line: 467, column: 42, scope: !3326, inlinedAt: !3334)
!3568 = !DILocation(line: 467, column: 40, scope: !3326, inlinedAt: !3334)
!3569 = !DILocation(line: 467, column: 48, scope: !3326, inlinedAt: !3334)
!3570 = !DILocation(line: 467, column: 15, scope: !3326, inlinedAt: !3334)
!3571 = !DILocation(line: 468, column: 38, scope: !3326, inlinedAt: !3334)
!3572 = !DILocation(line: 468, column: 37, scope: !3326, inlinedAt: !3334)
!3573 = !DILocation(line: 468, column: 31, scope: !3326, inlinedAt: !3334)
!3574 = !DILocation(line: 468, column: 56, scope: !3326, inlinedAt: !3334)
!3575 = !DILocation(line: 468, column: 61, scope: !3326, inlinedAt: !3334)
!3576 = !DILocation(line: 468, column: 59, scope: !3326, inlinedAt: !3334)
!3577 = !DILocation(line: 468, column: 70, scope: !3326, inlinedAt: !3334)
!3578 = !DILocation(line: 468, column: 46, scope: !3326, inlinedAt: !3334)
!3579 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3325)
!3580 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3325)
!3581 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3325)
!3582 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3325)
!3583 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3325)
!3584 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3325)
!3585 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3325)
!3586 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3325)
!3587 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3325)
!3588 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3325)
!3589 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3325)
!3590 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3325)
!3591 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3325)
!3592 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3325)
!3593 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3325)
!3594 = !DILocation(line: 468, column: 44, scope: !3326, inlinedAt: !3334)
!3595 = !DILocation(line: 468, column: 28, scope: !3326, inlinedAt: !3334)
!3596 = !DILocation(line: 468, column: 20, scope: !3326, inlinedAt: !3334)
!3597 = !DILocation(line: 468, column: 19, scope: !3326, inlinedAt: !3334)
!3598 = !DILocation(line: 468, column: 13, scope: !3326, inlinedAt: !3334)
!3599 = !DILocation(line: 468, column: 26, scope: !3326, inlinedAt: !3334)
!3600 = !DILocation(line: 469, column: 9, scope: !3326, inlinedAt: !3334)
!3601 = !DILocation(line: 471, column: 13, scope: !3342, inlinedAt: !3334)
!3602 = !DILocation(line: 471, column: 23, scope: !3342, inlinedAt: !3334)
!3603 = !DILocation(line: 471, column: 28, scope: !3604, inlinedAt: !3334)
!3604 = !DILexicalBlockFile(scope: !3342, file: !16, discriminator: 1)
!3605 = !DILocation(line: 471, column: 39, scope: !3604, inlinedAt: !3334)
!3606 = !DILocation(line: 471, column: 27, scope: !3604, inlinedAt: !3334)
!3607 = !DILocation(line: 471, column: 47, scope: !3608, inlinedAt: !3334)
!3608 = !DILexicalBlockFile(scope: !3342, file: !16, discriminator: 2)
!3609 = !DILocation(line: 471, column: 27, scope: !3608, inlinedAt: !3334)
!3610 = !DILocation(line: 471, column: 63, scope: !3611, inlinedAt: !3334)
!3611 = !DILexicalBlockFile(scope: !3342, file: !16, discriminator: 3)
!3612 = !DILocation(line: 471, column: 61, scope: !3611, inlinedAt: !3334)
!3613 = !DILocation(line: 471, column: 27, scope: !3611, inlinedAt: !3334)
!3614 = !DILocation(line: 471, column: 27, scope: !3615, inlinedAt: !3334)
!3615 = !DILexicalBlockFile(scope: !3342, file: !16, discriminator: 4)
!3616 = !DILocation(line: 471, column: 79, scope: !3615, inlinedAt: !3334)
!3617 = !DILocation(line: 471, column: 76, scope: !3615, inlinedAt: !3334)
!3618 = !DILocation(line: 471, column: 13, scope: !3615, inlinedAt: !3334)
!3619 = !DILocation(line: 472, column: 18, scope: !3341, inlinedAt: !3334)
!3620 = !DILocation(line: 472, column: 30, scope: !3341, inlinedAt: !3334)
!3621 = !DILocation(line: 472, column: 28, scope: !3341, inlinedAt: !3334)
!3622 = !DILocation(line: 472, column: 42, scope: !3341, inlinedAt: !3334)
!3623 = !DILocation(line: 472, column: 40, scope: !3341, inlinedAt: !3334)
!3624 = !DILocation(line: 472, column: 48, scope: !3341, inlinedAt: !3334)
!3625 = !DILocation(line: 472, column: 15, scope: !3341, inlinedAt: !3334)
!3626 = !DILocation(line: 473, column: 38, scope: !3341, inlinedAt: !3334)
!3627 = !DILocation(line: 473, column: 31, scope: !3341, inlinedAt: !3334)
!3628 = !DILocation(line: 473, column: 56, scope: !3341, inlinedAt: !3334)
!3629 = !DILocation(line: 473, column: 61, scope: !3341, inlinedAt: !3334)
!3630 = !DILocation(line: 473, column: 59, scope: !3341, inlinedAt: !3334)
!3631 = !DILocation(line: 473, column: 70, scope: !3341, inlinedAt: !3334)
!3632 = !DILocation(line: 473, column: 46, scope: !3341, inlinedAt: !3334)
!3633 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3340)
!3634 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3340)
!3635 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3340)
!3636 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3340)
!3637 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3340)
!3638 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3340)
!3639 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3340)
!3640 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3340)
!3641 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3340)
!3642 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3340)
!3643 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3340)
!3644 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3340)
!3645 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3340)
!3646 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3340)
!3647 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3340)
!3648 = !DILocation(line: 473, column: 44, scope: !3341, inlinedAt: !3334)
!3649 = !DILocation(line: 473, column: 28, scope: !3341, inlinedAt: !3334)
!3650 = !DILocation(line: 473, column: 20, scope: !3341, inlinedAt: !3334)
!3651 = !DILocation(line: 473, column: 13, scope: !3341, inlinedAt: !3334)
!3652 = !DILocation(line: 473, column: 26, scope: !3341, inlinedAt: !3334)
!3653 = !DILocation(line: 474, column: 9, scope: !3341, inlinedAt: !3334)
!3654 = !DILocation(line: 475, column: 5, scope: !3328, inlinedAt: !3334)
!3655 = !DILocation(line: 444, column: 25, scope: !3656, inlinedAt: !3334)
!3656 = !DILexicalBlockFile(scope: !3329, file: !16, discriminator: 2)
!3657 = !DILocation(line: 444, column: 36, scope: !3656, inlinedAt: !3334)
!3658 = !DILocation(line: 444, column: 33, scope: !3656, inlinedAt: !3334)
!3659 = !DILocation(line: 444, column: 5, scope: !3656, inlinedAt: !3334)
!3660 = distinct !{!3660, !3661}
!3661 = !DILocation(line: 444, column: 5, scope: !3331)
!3662 = !DILocation(line: 486, column: 1, scope: !3316)
!3663 = distinct !DISubprogram(name: "rv40_v_weak_loop_filter", scope: !16, file: !16, line: 488, type: !3317, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3664 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3665)
!3665 = distinct !DILocation(line: 468, column: 46, scope: !3326, inlinedAt: !3666)
!3666 = distinct !DILocation(line: 494, column: 5, scope: !3663)
!3667 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3665)
!3668 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3665)
!3669 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3670)
!3670 = distinct !DILocation(line: 473, column: 46, scope: !3341, inlinedAt: !3666)
!3671 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3670)
!3672 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3670)
!3673 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3674)
!3674 = distinct !DILocation(line: 462, column: 16, scope: !3328, inlinedAt: !3666)
!3675 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3674)
!3676 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3674)
!3677 = !DILocation(line: 430, column: 82, scope: !3331, inlinedAt: !3666)
!3678 = !DILocation(line: 431, column: 62, scope: !3331, inlinedAt: !3666)
!3679 = !DILocation(line: 432, column: 68, scope: !3331, inlinedAt: !3666)
!3680 = !DILocation(line: 433, column: 62, scope: !3331, inlinedAt: !3666)
!3681 = !DILocation(line: 434, column: 62, scope: !3331, inlinedAt: !3666)
!3682 = !DILocation(line: 435, column: 62, scope: !3331, inlinedAt: !3666)
!3683 = !DILocation(line: 436, column: 62, scope: !3331, inlinedAt: !3666)
!3684 = !DILocation(line: 437, column: 62, scope: !3331, inlinedAt: !3666)
!3685 = !DILocation(line: 438, column: 62, scope: !3331, inlinedAt: !3666)
!3686 = !DILocation(line: 439, column: 62, scope: !3331, inlinedAt: !3666)
!3687 = !DILocation(line: 441, column: 20, scope: !3331, inlinedAt: !3666)
!3688 = !DILocation(line: 442, column: 9, scope: !3331, inlinedAt: !3666)
!3689 = !DILocation(line: 442, column: 12, scope: !3331, inlinedAt: !3666)
!3690 = !DILocation(line: 442, column: 15, scope: !3331, inlinedAt: !3666)
!3691 = !DILocation(line: 442, column: 18, scope: !3331, inlinedAt: !3666)
!3692 = !DILocation(line: 445, column: 13, scope: !3328, inlinedAt: !3666)
!3693 = !DILocation(line: 446, column: 13, scope: !3328, inlinedAt: !3666)
!3694 = !DILocation(line: 447, column: 13, scope: !3328, inlinedAt: !3666)
!3695 = !DILocation(line: 448, column: 13, scope: !3328, inlinedAt: !3666)
!3696 = !DILocalVariable(name: "src", arg: 1, scope: !3663, file: !16, line: 488, type: !48)
!3697 = !DILocation(line: 488, column: 46, scope: !3663)
!3698 = !DILocalVariable(name: "stride", arg: 2, scope: !3663, file: !16, line: 488, type: !1766)
!3699 = !DILocation(line: 488, column: 67, scope: !3663)
!3700 = !DILocalVariable(name: "filter_p1", arg: 3, scope: !3663, file: !16, line: 489, type: !18)
!3701 = !DILocation(line: 489, column: 47, scope: !3663)
!3702 = !DILocalVariable(name: "filter_q1", arg: 4, scope: !3663, file: !16, line: 489, type: !18)
!3703 = !DILocation(line: 489, column: 68, scope: !3663)
!3704 = !DILocalVariable(name: "alpha", arg: 5, scope: !3663, file: !16, line: 490, type: !18)
!3705 = !DILocation(line: 490, column: 47, scope: !3663)
!3706 = !DILocalVariable(name: "beta", arg: 6, scope: !3663, file: !16, line: 490, type: !18)
!3707 = !DILocation(line: 490, column: 64, scope: !3663)
!3708 = !DILocalVariable(name: "lim_p0q0", arg: 7, scope: !3663, file: !16, line: 491, type: !18)
!3709 = !DILocation(line: 491, column: 47, scope: !3663)
!3710 = !DILocalVariable(name: "lim_q1", arg: 8, scope: !3663, file: !16, line: 491, type: !18)
!3711 = !DILocation(line: 491, column: 67, scope: !3663)
!3712 = !DILocalVariable(name: "lim_p1", arg: 9, scope: !3663, file: !16, line: 492, type: !18)
!3713 = !DILocation(line: 492, column: 47, scope: !3663)
!3714 = !DILocation(line: 494, column: 27, scope: !3663)
!3715 = !DILocation(line: 494, column: 35, scope: !3663)
!3716 = !DILocation(line: 494, column: 43, scope: !3663)
!3717 = !DILocation(line: 494, column: 54, scope: !3663)
!3718 = !DILocation(line: 495, column: 27, scope: !3663)
!3719 = !DILocation(line: 495, column: 34, scope: !3663)
!3720 = !DILocation(line: 495, column: 40, scope: !3663)
!3721 = !DILocation(line: 495, column: 50, scope: !3663)
!3722 = !DILocation(line: 495, column: 58, scope: !3663)
!3723 = !DILocation(line: 494, column: 5, scope: !3663)
!3724 = !DILocation(line: 444, column: 12, scope: !3330, inlinedAt: !3666)
!3725 = !DILocation(line: 444, column: 10, scope: !3330, inlinedAt: !3666)
!3726 = !DILocation(line: 444, column: 17, scope: !3418, inlinedAt: !3666)
!3727 = !DILocation(line: 444, column: 19, scope: !3418, inlinedAt: !3666)
!3728 = !DILocation(line: 444, column: 5, scope: !3418, inlinedAt: !3666)
!3729 = !DILocation(line: 445, column: 32, scope: !3328, inlinedAt: !3666)
!3730 = !DILocation(line: 445, column: 31, scope: !3328, inlinedAt: !3666)
!3731 = !DILocation(line: 445, column: 25, scope: !3328, inlinedAt: !3666)
!3732 = !DILocation(line: 445, column: 47, scope: !3328, inlinedAt: !3666)
!3733 = !DILocation(line: 445, column: 46, scope: !3328, inlinedAt: !3666)
!3734 = !DILocation(line: 445, column: 40, scope: !3328, inlinedAt: !3666)
!3735 = !DILocation(line: 445, column: 38, scope: !3328, inlinedAt: !3666)
!3736 = !DILocation(line: 446, column: 32, scope: !3328, inlinedAt: !3666)
!3737 = !DILocation(line: 446, column: 25, scope: !3328, inlinedAt: !3666)
!3738 = !DILocation(line: 446, column: 47, scope: !3328, inlinedAt: !3666)
!3739 = !DILocation(line: 446, column: 40, scope: !3328, inlinedAt: !3666)
!3740 = !DILocation(line: 446, column: 38, scope: !3328, inlinedAt: !3666)
!3741 = !DILocation(line: 447, column: 32, scope: !3328, inlinedAt: !3666)
!3742 = !DILocation(line: 447, column: 31, scope: !3328, inlinedAt: !3666)
!3743 = !DILocation(line: 447, column: 25, scope: !3328, inlinedAt: !3666)
!3744 = !DILocation(line: 447, column: 47, scope: !3328, inlinedAt: !3666)
!3745 = !DILocation(line: 447, column: 46, scope: !3328, inlinedAt: !3666)
!3746 = !DILocation(line: 447, column: 40, scope: !3328, inlinedAt: !3666)
!3747 = !DILocation(line: 447, column: 38, scope: !3328, inlinedAt: !3666)
!3748 = !DILocation(line: 448, column: 32, scope: !3328, inlinedAt: !3666)
!3749 = !DILocation(line: 448, column: 25, scope: !3328, inlinedAt: !3666)
!3750 = !DILocation(line: 448, column: 47, scope: !3328, inlinedAt: !3666)
!3751 = !DILocation(line: 448, column: 46, scope: !3328, inlinedAt: !3666)
!3752 = !DILocation(line: 448, column: 40, scope: !3328, inlinedAt: !3666)
!3753 = !DILocation(line: 448, column: 38, scope: !3328, inlinedAt: !3666)
!3754 = !DILocation(line: 450, column: 19, scope: !3328, inlinedAt: !3666)
!3755 = !DILocation(line: 450, column: 13, scope: !3328, inlinedAt: !3666)
!3756 = !DILocation(line: 450, column: 34, scope: !3328, inlinedAt: !3666)
!3757 = !DILocation(line: 450, column: 33, scope: !3328, inlinedAt: !3666)
!3758 = !DILocation(line: 450, column: 27, scope: !3328, inlinedAt: !3666)
!3759 = !DILocation(line: 450, column: 25, scope: !3328, inlinedAt: !3666)
!3760 = !DILocation(line: 450, column: 11, scope: !3328, inlinedAt: !3666)
!3761 = !DILocation(line: 451, column: 14, scope: !3454, inlinedAt: !3666)
!3762 = !DILocation(line: 451, column: 13, scope: !3328, inlinedAt: !3666)
!3763 = !DILocation(line: 452, column: 13, scope: !3454, inlinedAt: !3666)
!3764 = !DILocation(line: 454, column: 14, scope: !3328, inlinedAt: !3666)
!3765 = !DILocation(line: 454, column: 24, scope: !3328, inlinedAt: !3666)
!3766 = !DILocation(line: 454, column: 27, scope: !3328, inlinedAt: !3666)
!3767 = !DILocation(line: 454, column: 23, scope: !3328, inlinedAt: !3666)
!3768 = !DILocation(line: 454, column: 35, scope: !3462, inlinedAt: !3666)
!3769 = !DILocation(line: 454, column: 23, scope: !3462, inlinedAt: !3666)
!3770 = !DILocation(line: 454, column: 43, scope: !3465, inlinedAt: !3666)
!3771 = !DILocation(line: 454, column: 41, scope: !3465, inlinedAt: !3666)
!3772 = !DILocation(line: 454, column: 23, scope: !3465, inlinedAt: !3666)
!3773 = !DILocation(line: 454, column: 23, scope: !3469, inlinedAt: !3666)
!3774 = !DILocation(line: 454, column: 20, scope: !3469, inlinedAt: !3666)
!3775 = !DILocation(line: 454, column: 49, scope: !3469, inlinedAt: !3666)
!3776 = !DILocation(line: 454, column: 11, scope: !3469, inlinedAt: !3666)
!3777 = !DILocation(line: 455, column: 13, scope: !3474, inlinedAt: !3666)
!3778 = !DILocation(line: 455, column: 22, scope: !3474, inlinedAt: !3666)
!3779 = !DILocation(line: 455, column: 32, scope: !3474, inlinedAt: !3666)
!3780 = !DILocation(line: 455, column: 35, scope: !3478, inlinedAt: !3666)
!3781 = !DILocation(line: 455, column: 32, scope: !3478, inlinedAt: !3666)
!3782 = !DILocation(line: 455, column: 32, scope: !3481, inlinedAt: !3666)
!3783 = !DILocation(line: 455, column: 19, scope: !3481, inlinedAt: !3666)
!3784 = !DILocation(line: 455, column: 15, scope: !3481, inlinedAt: !3666)
!3785 = !DILocation(line: 455, column: 13, scope: !3481, inlinedAt: !3666)
!3786 = !DILocation(line: 456, column: 13, scope: !3474, inlinedAt: !3666)
!3787 = !DILocation(line: 458, column: 11, scope: !3328, inlinedAt: !3666)
!3788 = !DILocation(line: 459, column: 13, scope: !3488, inlinedAt: !3666)
!3789 = !DILocation(line: 459, column: 23, scope: !3488, inlinedAt: !3666)
!3790 = !DILocation(line: 459, column: 26, scope: !3491, inlinedAt: !3666)
!3791 = !DILocation(line: 459, column: 13, scope: !3491, inlinedAt: !3666)
!3792 = !DILocation(line: 460, column: 25, scope: !3488, inlinedAt: !3666)
!3793 = !DILocation(line: 460, column: 24, scope: !3488, inlinedAt: !3666)
!3794 = !DILocation(line: 460, column: 18, scope: !3488, inlinedAt: !3666)
!3795 = !DILocation(line: 460, column: 39, scope: !3488, inlinedAt: !3666)
!3796 = !DILocation(line: 460, column: 33, scope: !3488, inlinedAt: !3666)
!3797 = !DILocation(line: 460, column: 31, scope: !3488, inlinedAt: !3666)
!3798 = !DILocation(line: 460, column: 15, scope: !3488, inlinedAt: !3666)
!3799 = !DILocation(line: 460, column: 13, scope: !3488, inlinedAt: !3666)
!3800 = !DILocation(line: 462, column: 27, scope: !3328, inlinedAt: !3666)
!3801 = !DILocation(line: 462, column: 29, scope: !3328, inlinedAt: !3666)
!3802 = !DILocation(line: 462, column: 34, scope: !3328, inlinedAt: !3666)
!3803 = !DILocation(line: 462, column: 42, scope: !3328, inlinedAt: !3666)
!3804 = !DILocation(line: 462, column: 40, scope: !3328, inlinedAt: !3666)
!3805 = !DILocation(line: 462, column: 53, scope: !3328, inlinedAt: !3666)
!3806 = !DILocation(line: 462, column: 16, scope: !3328, inlinedAt: !3666)
!3807 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3674)
!3808 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3674)
!3809 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3674)
!3810 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3674)
!3811 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3674)
!3812 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3674)
!3813 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3674)
!3814 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3674)
!3815 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3674)
!3816 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3674)
!3817 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3674)
!3818 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3674)
!3819 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3674)
!3820 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3674)
!3821 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3674)
!3822 = !DILocation(line: 462, column: 14, scope: !3328, inlinedAt: !3666)
!3823 = !DILocation(line: 463, column: 34, scope: !3328, inlinedAt: !3666)
!3824 = !DILocation(line: 463, column: 33, scope: !3328, inlinedAt: !3666)
!3825 = !DILocation(line: 463, column: 27, scope: !3328, inlinedAt: !3666)
!3826 = !DILocation(line: 463, column: 42, scope: !3328, inlinedAt: !3666)
!3827 = !DILocation(line: 463, column: 40, scope: !3328, inlinedAt: !3666)
!3828 = !DILocation(line: 463, column: 24, scope: !3328, inlinedAt: !3666)
!3829 = !DILocation(line: 463, column: 16, scope: !3328, inlinedAt: !3666)
!3830 = !DILocation(line: 463, column: 15, scope: !3328, inlinedAt: !3666)
!3831 = !DILocation(line: 463, column: 9, scope: !3328, inlinedAt: !3666)
!3832 = !DILocation(line: 463, column: 22, scope: !3328, inlinedAt: !3666)
!3833 = !DILocation(line: 464, column: 34, scope: !3328, inlinedAt: !3666)
!3834 = !DILocation(line: 464, column: 27, scope: !3328, inlinedAt: !3666)
!3835 = !DILocation(line: 464, column: 42, scope: !3328, inlinedAt: !3666)
!3836 = !DILocation(line: 464, column: 40, scope: !3328, inlinedAt: !3666)
!3837 = !DILocation(line: 464, column: 24, scope: !3328, inlinedAt: !3666)
!3838 = !DILocation(line: 464, column: 16, scope: !3328, inlinedAt: !3666)
!3839 = !DILocation(line: 464, column: 9, scope: !3328, inlinedAt: !3666)
!3840 = !DILocation(line: 464, column: 22, scope: !3328, inlinedAt: !3666)
!3841 = !DILocation(line: 466, column: 13, scope: !3327, inlinedAt: !3666)
!3842 = !DILocation(line: 466, column: 23, scope: !3327, inlinedAt: !3666)
!3843 = !DILocation(line: 466, column: 28, scope: !3549, inlinedAt: !3666)
!3844 = !DILocation(line: 466, column: 39, scope: !3549, inlinedAt: !3666)
!3845 = !DILocation(line: 466, column: 27, scope: !3549, inlinedAt: !3666)
!3846 = !DILocation(line: 466, column: 47, scope: !3553, inlinedAt: !3666)
!3847 = !DILocation(line: 466, column: 27, scope: !3553, inlinedAt: !3666)
!3848 = !DILocation(line: 466, column: 63, scope: !3556, inlinedAt: !3666)
!3849 = !DILocation(line: 466, column: 61, scope: !3556, inlinedAt: !3666)
!3850 = !DILocation(line: 466, column: 27, scope: !3556, inlinedAt: !3666)
!3851 = !DILocation(line: 466, column: 27, scope: !3560, inlinedAt: !3666)
!3852 = !DILocation(line: 466, column: 79, scope: !3560, inlinedAt: !3666)
!3853 = !DILocation(line: 466, column: 76, scope: !3560, inlinedAt: !3666)
!3854 = !DILocation(line: 466, column: 13, scope: !3560, inlinedAt: !3666)
!3855 = !DILocation(line: 467, column: 18, scope: !3326, inlinedAt: !3666)
!3856 = !DILocation(line: 467, column: 30, scope: !3326, inlinedAt: !3666)
!3857 = !DILocation(line: 467, column: 28, scope: !3326, inlinedAt: !3666)
!3858 = !DILocation(line: 467, column: 42, scope: !3326, inlinedAt: !3666)
!3859 = !DILocation(line: 467, column: 40, scope: !3326, inlinedAt: !3666)
!3860 = !DILocation(line: 467, column: 48, scope: !3326, inlinedAt: !3666)
!3861 = !DILocation(line: 467, column: 15, scope: !3326, inlinedAt: !3666)
!3862 = !DILocation(line: 468, column: 38, scope: !3326, inlinedAt: !3666)
!3863 = !DILocation(line: 468, column: 37, scope: !3326, inlinedAt: !3666)
!3864 = !DILocation(line: 468, column: 31, scope: !3326, inlinedAt: !3666)
!3865 = !DILocation(line: 468, column: 56, scope: !3326, inlinedAt: !3666)
!3866 = !DILocation(line: 468, column: 61, scope: !3326, inlinedAt: !3666)
!3867 = !DILocation(line: 468, column: 59, scope: !3326, inlinedAt: !3666)
!3868 = !DILocation(line: 468, column: 70, scope: !3326, inlinedAt: !3666)
!3869 = !DILocation(line: 468, column: 46, scope: !3326, inlinedAt: !3666)
!3870 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3665)
!3871 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3665)
!3872 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3665)
!3873 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3665)
!3874 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3665)
!3875 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3665)
!3876 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3665)
!3877 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3665)
!3878 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3665)
!3879 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3665)
!3880 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3665)
!3881 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3665)
!3882 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3665)
!3883 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3665)
!3884 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3665)
!3885 = !DILocation(line: 468, column: 44, scope: !3326, inlinedAt: !3666)
!3886 = !DILocation(line: 468, column: 28, scope: !3326, inlinedAt: !3666)
!3887 = !DILocation(line: 468, column: 20, scope: !3326, inlinedAt: !3666)
!3888 = !DILocation(line: 468, column: 19, scope: !3326, inlinedAt: !3666)
!3889 = !DILocation(line: 468, column: 13, scope: !3326, inlinedAt: !3666)
!3890 = !DILocation(line: 468, column: 26, scope: !3326, inlinedAt: !3666)
!3891 = !DILocation(line: 469, column: 9, scope: !3326, inlinedAt: !3666)
!3892 = !DILocation(line: 471, column: 13, scope: !3342, inlinedAt: !3666)
!3893 = !DILocation(line: 471, column: 23, scope: !3342, inlinedAt: !3666)
!3894 = !DILocation(line: 471, column: 28, scope: !3604, inlinedAt: !3666)
!3895 = !DILocation(line: 471, column: 39, scope: !3604, inlinedAt: !3666)
!3896 = !DILocation(line: 471, column: 27, scope: !3604, inlinedAt: !3666)
!3897 = !DILocation(line: 471, column: 47, scope: !3608, inlinedAt: !3666)
!3898 = !DILocation(line: 471, column: 27, scope: !3608, inlinedAt: !3666)
!3899 = !DILocation(line: 471, column: 63, scope: !3611, inlinedAt: !3666)
!3900 = !DILocation(line: 471, column: 61, scope: !3611, inlinedAt: !3666)
!3901 = !DILocation(line: 471, column: 27, scope: !3611, inlinedAt: !3666)
!3902 = !DILocation(line: 471, column: 27, scope: !3615, inlinedAt: !3666)
!3903 = !DILocation(line: 471, column: 79, scope: !3615, inlinedAt: !3666)
!3904 = !DILocation(line: 471, column: 76, scope: !3615, inlinedAt: !3666)
!3905 = !DILocation(line: 471, column: 13, scope: !3615, inlinedAt: !3666)
!3906 = !DILocation(line: 472, column: 18, scope: !3341, inlinedAt: !3666)
!3907 = !DILocation(line: 472, column: 30, scope: !3341, inlinedAt: !3666)
!3908 = !DILocation(line: 472, column: 28, scope: !3341, inlinedAt: !3666)
!3909 = !DILocation(line: 472, column: 42, scope: !3341, inlinedAt: !3666)
!3910 = !DILocation(line: 472, column: 40, scope: !3341, inlinedAt: !3666)
!3911 = !DILocation(line: 472, column: 48, scope: !3341, inlinedAt: !3666)
!3912 = !DILocation(line: 472, column: 15, scope: !3341, inlinedAt: !3666)
!3913 = !DILocation(line: 473, column: 38, scope: !3341, inlinedAt: !3666)
!3914 = !DILocation(line: 473, column: 31, scope: !3341, inlinedAt: !3666)
!3915 = !DILocation(line: 473, column: 56, scope: !3341, inlinedAt: !3666)
!3916 = !DILocation(line: 473, column: 61, scope: !3341, inlinedAt: !3666)
!3917 = !DILocation(line: 473, column: 59, scope: !3341, inlinedAt: !3666)
!3918 = !DILocation(line: 473, column: 70, scope: !3341, inlinedAt: !3666)
!3919 = !DILocation(line: 473, column: 46, scope: !3341, inlinedAt: !3666)
!3920 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3670)
!3921 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3670)
!3922 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3670)
!3923 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3670)
!3924 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3670)
!3925 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3670)
!3926 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3670)
!3927 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3670)
!3928 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3670)
!3929 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3670)
!3930 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3670)
!3931 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3670)
!3932 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3670)
!3933 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3670)
!3934 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3670)
!3935 = !DILocation(line: 473, column: 44, scope: !3341, inlinedAt: !3666)
!3936 = !DILocation(line: 473, column: 28, scope: !3341, inlinedAt: !3666)
!3937 = !DILocation(line: 473, column: 20, scope: !3341, inlinedAt: !3666)
!3938 = !DILocation(line: 473, column: 13, scope: !3341, inlinedAt: !3666)
!3939 = !DILocation(line: 473, column: 26, scope: !3341, inlinedAt: !3666)
!3940 = !DILocation(line: 474, column: 9, scope: !3341, inlinedAt: !3666)
!3941 = !DILocation(line: 475, column: 5, scope: !3328, inlinedAt: !3666)
!3942 = !DILocation(line: 444, column: 25, scope: !3656, inlinedAt: !3666)
!3943 = !DILocation(line: 444, column: 36, scope: !3656, inlinedAt: !3666)
!3944 = !DILocation(line: 444, column: 33, scope: !3656, inlinedAt: !3666)
!3945 = !DILocation(line: 444, column: 5, scope: !3656, inlinedAt: !3666)
!3946 = !DILocation(line: 496, column: 1, scope: !3663)
!3947 = distinct !DISubprogram(name: "rv40_h_strong_loop_filter", scope: !16, file: !16, line: 556, type: !3948, isLocal: true, isDefinition: true, scopeLine: 559, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{null, !48, !1766, !18, !18, !18, !18}
!3950 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3951)
!3951 = distinct !DILocation(line: 529, column: 18, scope: !3952, inlinedAt: !3960)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !16, line: 527, column: 20)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 527, column: 13)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !16, line: 508, column: 42)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !16, line: 508, column: 5)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !16, line: 508, column: 5)
!3957 = distinct !DISubprogram(name: "rv40_strong_loop_filter", scope: !16, file: !16, line: 498, type: !3958, isLocal: true, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{null, !48, !18, !1766, !18, !18, !18, !18}
!3960 = distinct !DILocation(line: 560, column: 5, scope: !3947)
!3961 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3951)
!3962 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3951)
!3963 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3964)
!3964 = distinct !DILocation(line: 538, column: 18, scope: !3965, inlinedAt: !3960)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !16, line: 537, column: 20)
!3966 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 537, column: 13)
!3967 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3964)
!3968 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3964)
!3969 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3970)
!3970 = distinct !DILocation(line: 539, column: 18, scope: !3965, inlinedAt: !3960)
!3971 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3970)
!3972 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3970)
!3973 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !3974)
!3974 = distinct !DILocation(line: 528, column: 18, scope: !3952, inlinedAt: !3960)
!3975 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !3974)
!3976 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !3974)
!3977 = !DILocalVariable(name: "src", arg: 1, scope: !3957, file: !16, line: 498, type: !48)
!3978 = !DILocation(line: 498, column: 84, scope: !3957, inlinedAt: !3960)
!3979 = !DILocalVariable(name: "step", arg: 2, scope: !3957, file: !16, line: 499, type: !18)
!3980 = !DILocation(line: 499, column: 64, scope: !3957, inlinedAt: !3960)
!3981 = !DILocalVariable(name: "stride", arg: 3, scope: !3957, file: !16, line: 500, type: !1766)
!3982 = !DILocation(line: 500, column: 70, scope: !3957, inlinedAt: !3960)
!3983 = !DILocalVariable(name: "alpha", arg: 4, scope: !3957, file: !16, line: 501, type: !18)
!3984 = !DILocation(line: 501, column: 64, scope: !3957, inlinedAt: !3960)
!3985 = !DILocalVariable(name: "lims", arg: 5, scope: !3957, file: !16, line: 502, type: !18)
!3986 = !DILocation(line: 502, column: 64, scope: !3957, inlinedAt: !3960)
!3987 = !DILocalVariable(name: "dmode", arg: 6, scope: !3957, file: !16, line: 503, type: !18)
!3988 = !DILocation(line: 503, column: 64, scope: !3957, inlinedAt: !3960)
!3989 = !DILocalVariable(name: "chroma", arg: 7, scope: !3957, file: !16, line: 504, type: !18)
!3990 = !DILocation(line: 504, column: 64, scope: !3957, inlinedAt: !3960)
!3991 = !DILocalVariable(name: "i", scope: !3957, file: !16, line: 506, type: !19)
!3992 = !DILocation(line: 506, column: 9, scope: !3957, inlinedAt: !3960)
!3993 = !DILocalVariable(name: "sflag", scope: !3954, file: !16, line: 509, type: !19)
!3994 = !DILocation(line: 509, column: 13, scope: !3954, inlinedAt: !3960)
!3995 = !DILocalVariable(name: "p0", scope: !3954, file: !16, line: 509, type: !19)
!3996 = !DILocation(line: 509, column: 20, scope: !3954, inlinedAt: !3960)
!3997 = !DILocalVariable(name: "q0", scope: !3954, file: !16, line: 509, type: !19)
!3998 = !DILocation(line: 509, column: 24, scope: !3954, inlinedAt: !3960)
!3999 = !DILocalVariable(name: "p1", scope: !3954, file: !16, line: 509, type: !19)
!4000 = !DILocation(line: 509, column: 28, scope: !3954, inlinedAt: !3960)
!4001 = !DILocalVariable(name: "q1", scope: !3954, file: !16, line: 509, type: !19)
!4002 = !DILocation(line: 509, column: 32, scope: !3954, inlinedAt: !3960)
!4003 = !DILocalVariable(name: "t", scope: !3954, file: !16, line: 510, type: !19)
!4004 = !DILocation(line: 510, column: 13, scope: !3954, inlinedAt: !3960)
!4005 = !DILocalVariable(name: "src", arg: 1, scope: !3947, file: !16, line: 556, type: !48)
!4006 = !DILocation(line: 556, column: 48, scope: !3947)
!4007 = !DILocalVariable(name: "stride", arg: 2, scope: !3947, file: !16, line: 556, type: !1766)
!4008 = !DILocation(line: 556, column: 69, scope: !3947)
!4009 = !DILocalVariable(name: "alpha", arg: 3, scope: !3947, file: !16, line: 557, type: !18)
!4010 = !DILocation(line: 557, column: 49, scope: !3947)
!4011 = !DILocalVariable(name: "lims", arg: 4, scope: !3947, file: !16, line: 557, type: !18)
!4012 = !DILocation(line: 557, column: 66, scope: !3947)
!4013 = !DILocalVariable(name: "dmode", arg: 5, scope: !3947, file: !16, line: 558, type: !18)
!4014 = !DILocation(line: 558, column: 49, scope: !3947)
!4015 = !DILocalVariable(name: "chroma", arg: 6, scope: !3947, file: !16, line: 558, type: !18)
!4016 = !DILocation(line: 558, column: 66, scope: !3947)
!4017 = !DILocation(line: 560, column: 29, scope: !3947)
!4018 = !DILocation(line: 560, column: 34, scope: !3947)
!4019 = !DILocation(line: 560, column: 45, scope: !3947)
!4020 = !DILocation(line: 560, column: 52, scope: !3947)
!4021 = !DILocation(line: 560, column: 58, scope: !3947)
!4022 = !DILocation(line: 560, column: 65, scope: !3947)
!4023 = !DILocation(line: 560, column: 5, scope: !3947)
!4024 = !DILocation(line: 508, column: 11, scope: !3956, inlinedAt: !3960)
!4025 = !DILocation(line: 508, column: 9, scope: !3956, inlinedAt: !3960)
!4026 = !DILocation(line: 508, column: 16, scope: !4027, inlinedAt: !3960)
!4027 = !DILexicalBlockFile(scope: !3955, file: !16, discriminator: 1)
!4028 = !DILocation(line: 508, column: 18, scope: !4027, inlinedAt: !3960)
!4029 = !DILocation(line: 508, column: 5, scope: !4027, inlinedAt: !3960)
!4030 = !DILocation(line: 510, column: 23, scope: !3954, inlinedAt: !3960)
!4031 = !DILocation(line: 510, column: 17, scope: !3954, inlinedAt: !3960)
!4032 = !DILocation(line: 510, column: 38, scope: !3954, inlinedAt: !3960)
!4033 = !DILocation(line: 510, column: 37, scope: !3954, inlinedAt: !3960)
!4034 = !DILocation(line: 510, column: 31, scope: !3954, inlinedAt: !3960)
!4035 = !DILocation(line: 510, column: 29, scope: !3954, inlinedAt: !3960)
!4036 = !DILocation(line: 512, column: 14, scope: !4037, inlinedAt: !3960)
!4037 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 512, column: 13)
!4038 = !DILocation(line: 512, column: 13, scope: !3954, inlinedAt: !3960)
!4039 = !DILocation(line: 513, column: 13, scope: !4037, inlinedAt: !3960)
!4040 = !DILocation(line: 515, column: 18, scope: !3954, inlinedAt: !3960)
!4041 = !DILocation(line: 515, column: 28, scope: !3954, inlinedAt: !3960)
!4042 = !DILocation(line: 515, column: 31, scope: !3954, inlinedAt: !3960)
!4043 = !DILocation(line: 515, column: 27, scope: !3954, inlinedAt: !3960)
!4044 = !DILocation(line: 515, column: 39, scope: !4045, inlinedAt: !3960)
!4045 = !DILexicalBlockFile(scope: !3954, file: !16, discriminator: 1)
!4046 = !DILocation(line: 515, column: 27, scope: !4045, inlinedAt: !3960)
!4047 = !DILocation(line: 515, column: 47, scope: !4048, inlinedAt: !3960)
!4048 = !DILexicalBlockFile(scope: !3954, file: !16, discriminator: 2)
!4049 = !DILocation(line: 515, column: 45, scope: !4048, inlinedAt: !3960)
!4050 = !DILocation(line: 515, column: 27, scope: !4048, inlinedAt: !3960)
!4051 = !DILocation(line: 515, column: 27, scope: !4052, inlinedAt: !3960)
!4052 = !DILexicalBlockFile(scope: !3954, file: !16, discriminator: 3)
!4053 = !DILocation(line: 515, column: 24, scope: !4052, inlinedAt: !3960)
!4054 = !DILocation(line: 515, column: 53, scope: !4052, inlinedAt: !3960)
!4055 = !DILocation(line: 515, column: 15, scope: !4052, inlinedAt: !3960)
!4056 = !DILocation(line: 516, column: 13, scope: !4057, inlinedAt: !3960)
!4057 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 516, column: 13)
!4058 = !DILocation(line: 516, column: 19, scope: !4057, inlinedAt: !3960)
!4059 = !DILocation(line: 516, column: 13, scope: !3954, inlinedAt: !3960)
!4060 = !DILocation(line: 517, column: 13, scope: !4057, inlinedAt: !3960)
!4061 = !DILocation(line: 519, column: 25, scope: !3954, inlinedAt: !3960)
!4062 = !DILocation(line: 519, column: 24, scope: !3954, inlinedAt: !3960)
!4063 = !DILocation(line: 519, column: 18, scope: !3954, inlinedAt: !3960)
!4064 = !DILocation(line: 519, column: 17, scope: !3954, inlinedAt: !3960)
!4065 = !DILocation(line: 519, column: 43, scope: !3954, inlinedAt: !3960)
!4066 = !DILocation(line: 519, column: 42, scope: !3954, inlinedAt: !3960)
!4067 = !DILocation(line: 519, column: 36, scope: !3954, inlinedAt: !3960)
!4068 = !DILocation(line: 519, column: 35, scope: !3954, inlinedAt: !3960)
!4069 = !DILocation(line: 519, column: 31, scope: !3954, inlinedAt: !3960)
!4070 = !DILocation(line: 519, column: 61, scope: !3954, inlinedAt: !3960)
!4071 = !DILocation(line: 519, column: 60, scope: !3954, inlinedAt: !3960)
!4072 = !DILocation(line: 519, column: 54, scope: !3954, inlinedAt: !3960)
!4073 = !DILocation(line: 519, column: 53, scope: !3954, inlinedAt: !3960)
!4074 = !DILocation(line: 519, column: 49, scope: !3954, inlinedAt: !3960)
!4075 = !DILocation(line: 520, column: 25, scope: !3954, inlinedAt: !3960)
!4076 = !DILocation(line: 520, column: 18, scope: !3954, inlinedAt: !3960)
!4077 = !DILocation(line: 520, column: 17, scope: !3954, inlinedAt: !3960)
!4078 = !DILocation(line: 519, column: 67, scope: !3954, inlinedAt: !3960)
!4079 = !DILocation(line: 520, column: 43, scope: !3954, inlinedAt: !3960)
!4080 = !DILocation(line: 520, column: 36, scope: !3954, inlinedAt: !3960)
!4081 = !DILocation(line: 520, column: 35, scope: !3954, inlinedAt: !3960)
!4082 = !DILocation(line: 520, column: 31, scope: !3954, inlinedAt: !3960)
!4083 = !DILocation(line: 521, column: 29, scope: !3954, inlinedAt: !3960)
!4084 = !DILocation(line: 521, column: 37, scope: !3954, inlinedAt: !3960)
!4085 = !DILocation(line: 521, column: 35, scope: !3954, inlinedAt: !3960)
!4086 = !DILocation(line: 521, column: 15, scope: !3954, inlinedAt: !3960)
!4087 = !DILocation(line: 520, column: 49, scope: !3954, inlinedAt: !3960)
!4088 = !DILocation(line: 521, column: 41, scope: !3954, inlinedAt: !3960)
!4089 = !DILocation(line: 519, column: 12, scope: !3954, inlinedAt: !3960)
!4090 = !DILocation(line: 523, column: 25, scope: !3954, inlinedAt: !3960)
!4091 = !DILocation(line: 523, column: 24, scope: !3954, inlinedAt: !3960)
!4092 = !DILocation(line: 523, column: 18, scope: !3954, inlinedAt: !3960)
!4093 = !DILocation(line: 523, column: 17, scope: !3954, inlinedAt: !3960)
!4094 = !DILocation(line: 523, column: 43, scope: !3954, inlinedAt: !3960)
!4095 = !DILocation(line: 523, column: 42, scope: !3954, inlinedAt: !3960)
!4096 = !DILocation(line: 523, column: 36, scope: !3954, inlinedAt: !3960)
!4097 = !DILocation(line: 523, column: 35, scope: !3954, inlinedAt: !3960)
!4098 = !DILocation(line: 523, column: 31, scope: !3954, inlinedAt: !3960)
!4099 = !DILocation(line: 523, column: 61, scope: !3954, inlinedAt: !3960)
!4100 = !DILocation(line: 523, column: 54, scope: !3954, inlinedAt: !3960)
!4101 = !DILocation(line: 523, column: 53, scope: !3954, inlinedAt: !3960)
!4102 = !DILocation(line: 523, column: 49, scope: !3954, inlinedAt: !3960)
!4103 = !DILocation(line: 524, column: 25, scope: !3954, inlinedAt: !3960)
!4104 = !DILocation(line: 524, column: 18, scope: !3954, inlinedAt: !3960)
!4105 = !DILocation(line: 524, column: 17, scope: !3954, inlinedAt: !3960)
!4106 = !DILocation(line: 523, column: 67, scope: !3954, inlinedAt: !3960)
!4107 = !DILocation(line: 524, column: 43, scope: !3954, inlinedAt: !3960)
!4108 = !DILocation(line: 524, column: 42, scope: !3954, inlinedAt: !3960)
!4109 = !DILocation(line: 524, column: 36, scope: !3954, inlinedAt: !3960)
!4110 = !DILocation(line: 524, column: 35, scope: !3954, inlinedAt: !3960)
!4111 = !DILocation(line: 524, column: 31, scope: !3954, inlinedAt: !3960)
!4112 = !DILocation(line: 525, column: 29, scope: !3954, inlinedAt: !3960)
!4113 = !DILocation(line: 525, column: 37, scope: !3954, inlinedAt: !3960)
!4114 = !DILocation(line: 525, column: 35, scope: !3954, inlinedAt: !3960)
!4115 = !DILocation(line: 525, column: 15, scope: !3954, inlinedAt: !3960)
!4116 = !DILocation(line: 524, column: 49, scope: !3954, inlinedAt: !3960)
!4117 = !DILocation(line: 525, column: 41, scope: !3954, inlinedAt: !3960)
!4118 = !DILocation(line: 523, column: 12, scope: !3954, inlinedAt: !3960)
!4119 = !DILocation(line: 527, column: 13, scope: !3953, inlinedAt: !3960)
!4120 = !DILocation(line: 527, column: 13, scope: !3954, inlinedAt: !3960)
!4121 = !DILocation(line: 528, column: 28, scope: !3952, inlinedAt: !3960)
!4122 = !DILocation(line: 528, column: 39, scope: !3952, inlinedAt: !3960)
!4123 = !DILocation(line: 528, column: 38, scope: !3952, inlinedAt: !3960)
!4124 = !DILocation(line: 528, column: 32, scope: !3952, inlinedAt: !3960)
!4125 = !DILocation(line: 528, column: 47, scope: !3952, inlinedAt: !3960)
!4126 = !DILocation(line: 528, column: 45, scope: !3952, inlinedAt: !3960)
!4127 = !DILocation(line: 528, column: 60, scope: !3952, inlinedAt: !3960)
!4128 = !DILocation(line: 528, column: 59, scope: !3952, inlinedAt: !3960)
!4129 = !DILocation(line: 528, column: 53, scope: !3952, inlinedAt: !3960)
!4130 = !DILocation(line: 528, column: 68, scope: !3952, inlinedAt: !3960)
!4131 = !DILocation(line: 528, column: 66, scope: !3952, inlinedAt: !3960)
!4132 = !DILocation(line: 528, column: 18, scope: !3952, inlinedAt: !3960)
!4133 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3974)
!4134 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3974)
!4135 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3974)
!4136 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3974)
!4137 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3974)
!4138 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3974)
!4139 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3974)
!4140 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3974)
!4141 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3974)
!4142 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3974)
!4143 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3974)
!4144 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3974)
!4145 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3974)
!4146 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3974)
!4147 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3974)
!4148 = !DILocation(line: 528, column: 16, scope: !3952, inlinedAt: !3960)
!4149 = !DILocation(line: 529, column: 28, scope: !3952, inlinedAt: !3960)
!4150 = !DILocation(line: 529, column: 39, scope: !3952, inlinedAt: !3960)
!4151 = !DILocation(line: 529, column: 32, scope: !3952, inlinedAt: !3960)
!4152 = !DILocation(line: 529, column: 47, scope: !3952, inlinedAt: !3960)
!4153 = !DILocation(line: 529, column: 45, scope: !3952, inlinedAt: !3960)
!4154 = !DILocation(line: 529, column: 60, scope: !3952, inlinedAt: !3960)
!4155 = !DILocation(line: 529, column: 53, scope: !3952, inlinedAt: !3960)
!4156 = !DILocation(line: 529, column: 68, scope: !3952, inlinedAt: !3960)
!4157 = !DILocation(line: 529, column: 66, scope: !3952, inlinedAt: !3960)
!4158 = !DILocation(line: 529, column: 18, scope: !3952, inlinedAt: !3960)
!4159 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3951)
!4160 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3951)
!4161 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3951)
!4162 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3951)
!4163 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3951)
!4164 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3951)
!4165 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3951)
!4166 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3951)
!4167 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3951)
!4168 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3951)
!4169 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3951)
!4170 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3951)
!4171 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3951)
!4172 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3951)
!4173 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3951)
!4174 = !DILocation(line: 529, column: 16, scope: !3952, inlinedAt: !3960)
!4175 = !DILocation(line: 530, column: 9, scope: !3952, inlinedAt: !3960)
!4176 = !DILocation(line: 532, column: 25, scope: !3954, inlinedAt: !3960)
!4177 = !DILocation(line: 532, column: 24, scope: !3954, inlinedAt: !3960)
!4178 = !DILocation(line: 532, column: 18, scope: !3954, inlinedAt: !3960)
!4179 = !DILocation(line: 532, column: 17, scope: !3954, inlinedAt: !3960)
!4180 = !DILocation(line: 532, column: 43, scope: !3954, inlinedAt: !3960)
!4181 = !DILocation(line: 532, column: 42, scope: !3954, inlinedAt: !3960)
!4182 = !DILocation(line: 532, column: 36, scope: !3954, inlinedAt: !3960)
!4183 = !DILocation(line: 532, column: 35, scope: !3954, inlinedAt: !3960)
!4184 = !DILocation(line: 532, column: 31, scope: !3954, inlinedAt: !3960)
!4185 = !DILocation(line: 532, column: 61, scope: !3954, inlinedAt: !3960)
!4186 = !DILocation(line: 532, column: 60, scope: !3954, inlinedAt: !3960)
!4187 = !DILocation(line: 532, column: 54, scope: !3954, inlinedAt: !3960)
!4188 = !DILocation(line: 532, column: 53, scope: !3954, inlinedAt: !3960)
!4189 = !DILocation(line: 532, column: 49, scope: !3954, inlinedAt: !3960)
!4190 = !DILocation(line: 532, column: 72, scope: !3954, inlinedAt: !3960)
!4191 = !DILocation(line: 532, column: 71, scope: !3954, inlinedAt: !3960)
!4192 = !DILocation(line: 532, column: 67, scope: !3954, inlinedAt: !3960)
!4193 = !DILocation(line: 533, column: 25, scope: !3954, inlinedAt: !3960)
!4194 = !DILocation(line: 533, column: 18, scope: !3954, inlinedAt: !3960)
!4195 = !DILocation(line: 533, column: 17, scope: !3954, inlinedAt: !3960)
!4196 = !DILocation(line: 532, column: 75, scope: !3954, inlinedAt: !3960)
!4197 = !DILocation(line: 533, column: 47, scope: !3954, inlinedAt: !3960)
!4198 = !DILocation(line: 533, column: 55, scope: !3954, inlinedAt: !3960)
!4199 = !DILocation(line: 533, column: 53, scope: !3954, inlinedAt: !3960)
!4200 = !DILocation(line: 533, column: 33, scope: !3954, inlinedAt: !3960)
!4201 = !DILocation(line: 533, column: 31, scope: !3954, inlinedAt: !3960)
!4202 = !DILocation(line: 533, column: 59, scope: !3954, inlinedAt: !3960)
!4203 = !DILocation(line: 532, column: 12, scope: !3954, inlinedAt: !3960)
!4204 = !DILocation(line: 534, column: 25, scope: !3954, inlinedAt: !3960)
!4205 = !DILocation(line: 534, column: 24, scope: !3954, inlinedAt: !3960)
!4206 = !DILocation(line: 534, column: 18, scope: !3954, inlinedAt: !3960)
!4207 = !DILocation(line: 534, column: 17, scope: !3954, inlinedAt: !3960)
!4208 = !DILocation(line: 534, column: 36, scope: !3954, inlinedAt: !3960)
!4209 = !DILocation(line: 534, column: 35, scope: !3954, inlinedAt: !3960)
!4210 = !DILocation(line: 534, column: 31, scope: !3954, inlinedAt: !3960)
!4211 = !DILocation(line: 534, column: 51, scope: !3954, inlinedAt: !3960)
!4212 = !DILocation(line: 534, column: 44, scope: !3954, inlinedAt: !3960)
!4213 = !DILocation(line: 534, column: 43, scope: !3954, inlinedAt: !3960)
!4214 = !DILocation(line: 534, column: 39, scope: !3954, inlinedAt: !3960)
!4215 = !DILocation(line: 534, column: 69, scope: !3954, inlinedAt: !3960)
!4216 = !DILocation(line: 534, column: 68, scope: !3954, inlinedAt: !3960)
!4217 = !DILocation(line: 534, column: 62, scope: !3954, inlinedAt: !3960)
!4218 = !DILocation(line: 534, column: 61, scope: !3954, inlinedAt: !3960)
!4219 = !DILocation(line: 534, column: 57, scope: !3954, inlinedAt: !3960)
!4220 = !DILocation(line: 535, column: 25, scope: !3954, inlinedAt: !3960)
!4221 = !DILocation(line: 535, column: 24, scope: !3954, inlinedAt: !3960)
!4222 = !DILocation(line: 535, column: 18, scope: !3954, inlinedAt: !3960)
!4223 = !DILocation(line: 535, column: 17, scope: !3954, inlinedAt: !3960)
!4224 = !DILocation(line: 534, column: 75, scope: !3954, inlinedAt: !3960)
!4225 = !DILocation(line: 535, column: 47, scope: !3954, inlinedAt: !3960)
!4226 = !DILocation(line: 535, column: 55, scope: !3954, inlinedAt: !3960)
!4227 = !DILocation(line: 535, column: 53, scope: !3954, inlinedAt: !3960)
!4228 = !DILocation(line: 535, column: 33, scope: !3954, inlinedAt: !3960)
!4229 = !DILocation(line: 535, column: 31, scope: !3954, inlinedAt: !3960)
!4230 = !DILocation(line: 535, column: 59, scope: !3954, inlinedAt: !3960)
!4231 = !DILocation(line: 534, column: 12, scope: !3954, inlinedAt: !3960)
!4232 = !DILocation(line: 537, column: 13, scope: !3966, inlinedAt: !3960)
!4233 = !DILocation(line: 537, column: 13, scope: !3954, inlinedAt: !3960)
!4234 = !DILocation(line: 538, column: 28, scope: !3965, inlinedAt: !3960)
!4235 = !DILocation(line: 538, column: 39, scope: !3965, inlinedAt: !3960)
!4236 = !DILocation(line: 538, column: 38, scope: !3965, inlinedAt: !3960)
!4237 = !DILocation(line: 538, column: 32, scope: !3965, inlinedAt: !3960)
!4238 = !DILocation(line: 538, column: 47, scope: !3965, inlinedAt: !3960)
!4239 = !DILocation(line: 538, column: 45, scope: !3965, inlinedAt: !3960)
!4240 = !DILocation(line: 538, column: 60, scope: !3965, inlinedAt: !3960)
!4241 = !DILocation(line: 538, column: 59, scope: !3965, inlinedAt: !3960)
!4242 = !DILocation(line: 538, column: 53, scope: !3965, inlinedAt: !3960)
!4243 = !DILocation(line: 538, column: 68, scope: !3965, inlinedAt: !3960)
!4244 = !DILocation(line: 538, column: 66, scope: !3965, inlinedAt: !3960)
!4245 = !DILocation(line: 538, column: 18, scope: !3965, inlinedAt: !3960)
!4246 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3964)
!4247 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3964)
!4248 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3964)
!4249 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3964)
!4250 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3964)
!4251 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3964)
!4252 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3964)
!4253 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3964)
!4254 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3964)
!4255 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3964)
!4256 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3964)
!4257 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3964)
!4258 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3964)
!4259 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3964)
!4260 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3964)
!4261 = !DILocation(line: 538, column: 16, scope: !3965, inlinedAt: !3960)
!4262 = !DILocation(line: 539, column: 28, scope: !3965, inlinedAt: !3960)
!4263 = !DILocation(line: 539, column: 39, scope: !3965, inlinedAt: !3960)
!4264 = !DILocation(line: 539, column: 32, scope: !3965, inlinedAt: !3960)
!4265 = !DILocation(line: 539, column: 47, scope: !3965, inlinedAt: !3960)
!4266 = !DILocation(line: 539, column: 45, scope: !3965, inlinedAt: !3960)
!4267 = !DILocation(line: 539, column: 60, scope: !3965, inlinedAt: !3960)
!4268 = !DILocation(line: 539, column: 53, scope: !3965, inlinedAt: !3960)
!4269 = !DILocation(line: 539, column: 68, scope: !3965, inlinedAt: !3960)
!4270 = !DILocation(line: 539, column: 66, scope: !3965, inlinedAt: !3960)
!4271 = !DILocation(line: 539, column: 18, scope: !3965, inlinedAt: !3960)
!4272 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !3970)
!4273 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !3970)
!4274 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !3970)
!4275 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !3970)
!4276 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !3970)
!4277 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !3970)
!4278 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !3970)
!4279 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !3970)
!4280 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !3970)
!4281 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !3970)
!4282 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !3970)
!4283 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !3970)
!4284 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !3970)
!4285 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !3970)
!4286 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !3970)
!4287 = !DILocation(line: 539, column: 16, scope: !3965, inlinedAt: !3960)
!4288 = !DILocation(line: 540, column: 9, scope: !3965, inlinedAt: !3960)
!4289 = !DILocation(line: 542, column: 24, scope: !3954, inlinedAt: !3960)
!4290 = !DILocation(line: 542, column: 16, scope: !3954, inlinedAt: !3960)
!4291 = !DILocation(line: 542, column: 15, scope: !3954, inlinedAt: !3960)
!4292 = !DILocation(line: 542, column: 9, scope: !3954, inlinedAt: !3960)
!4293 = !DILocation(line: 542, column: 22, scope: !3954, inlinedAt: !3960)
!4294 = !DILocation(line: 543, column: 24, scope: !3954, inlinedAt: !3960)
!4295 = !DILocation(line: 543, column: 16, scope: !3954, inlinedAt: !3960)
!4296 = !DILocation(line: 543, column: 15, scope: !3954, inlinedAt: !3960)
!4297 = !DILocation(line: 543, column: 9, scope: !3954, inlinedAt: !3960)
!4298 = !DILocation(line: 543, column: 22, scope: !3954, inlinedAt: !3960)
!4299 = !DILocation(line: 544, column: 24, scope: !3954, inlinedAt: !3960)
!4300 = !DILocation(line: 544, column: 16, scope: !3954, inlinedAt: !3960)
!4301 = !DILocation(line: 544, column: 9, scope: !3954, inlinedAt: !3960)
!4302 = !DILocation(line: 544, column: 22, scope: !3954, inlinedAt: !3960)
!4303 = !DILocation(line: 545, column: 24, scope: !3954, inlinedAt: !3960)
!4304 = !DILocation(line: 545, column: 16, scope: !3954, inlinedAt: !3960)
!4305 = !DILocation(line: 545, column: 9, scope: !3954, inlinedAt: !3960)
!4306 = !DILocation(line: 545, column: 22, scope: !3954, inlinedAt: !3960)
!4307 = !DILocation(line: 547, column: 13, scope: !4308, inlinedAt: !3960)
!4308 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 547, column: 12)
!4309 = !DILocation(line: 547, column: 12, scope: !3954, inlinedAt: !3960)
!4310 = !DILocation(line: 548, column: 39, scope: !4311, inlinedAt: !3960)
!4311 = distinct !DILexicalBlock(scope: !4308, file: !16, line: 547, column: 20)
!4312 = !DILocation(line: 548, column: 38, scope: !4311, inlinedAt: !3960)
!4313 = !DILocation(line: 548, column: 32, scope: !4311, inlinedAt: !3960)
!4314 = !DILocation(line: 548, column: 31, scope: !4311, inlinedAt: !3960)
!4315 = !DILocation(line: 548, column: 57, scope: !4311, inlinedAt: !3960)
!4316 = !DILocation(line: 548, column: 56, scope: !4311, inlinedAt: !3960)
!4317 = !DILocation(line: 548, column: 50, scope: !4311, inlinedAt: !3960)
!4318 = !DILocation(line: 548, column: 49, scope: !4311, inlinedAt: !3960)
!4319 = !DILocation(line: 548, column: 45, scope: !4311, inlinedAt: !3960)
!4320 = !DILocation(line: 549, column: 39, scope: !4311, inlinedAt: !3960)
!4321 = !DILocation(line: 549, column: 38, scope: !4311, inlinedAt: !3960)
!4322 = !DILocation(line: 549, column: 32, scope: !4311, inlinedAt: !3960)
!4323 = !DILocation(line: 549, column: 31, scope: !4311, inlinedAt: !3960)
!4324 = !DILocation(line: 548, column: 63, scope: !4311, inlinedAt: !3960)
!4325 = !DILocation(line: 549, column: 57, scope: !4311, inlinedAt: !3960)
!4326 = !DILocation(line: 549, column: 56, scope: !4311, inlinedAt: !3960)
!4327 = !DILocation(line: 549, column: 50, scope: !4311, inlinedAt: !3960)
!4328 = !DILocation(line: 549, column: 49, scope: !4311, inlinedAt: !3960)
!4329 = !DILocation(line: 549, column: 45, scope: !4311, inlinedAt: !3960)
!4330 = !DILocation(line: 549, column: 63, scope: !4311, inlinedAt: !3960)
!4331 = !DILocation(line: 549, column: 69, scope: !4311, inlinedAt: !3960)
!4332 = !DILocation(line: 548, column: 28, scope: !4311, inlinedAt: !3960)
!4333 = !DILocation(line: 548, column: 20, scope: !4311, inlinedAt: !3960)
!4334 = !DILocation(line: 548, column: 19, scope: !4311, inlinedAt: !3960)
!4335 = !DILocation(line: 548, column: 13, scope: !4311, inlinedAt: !3960)
!4336 = !DILocation(line: 548, column: 26, scope: !4311, inlinedAt: !3960)
!4337 = !DILocation(line: 550, column: 39, scope: !4311, inlinedAt: !3960)
!4338 = !DILocation(line: 550, column: 32, scope: !4311, inlinedAt: !3960)
!4339 = !DILocation(line: 550, column: 31, scope: !4311, inlinedAt: !3960)
!4340 = !DILocation(line: 550, column: 57, scope: !4311, inlinedAt: !3960)
!4341 = !DILocation(line: 550, column: 50, scope: !4311, inlinedAt: !3960)
!4342 = !DILocation(line: 550, column: 49, scope: !4311, inlinedAt: !3960)
!4343 = !DILocation(line: 550, column: 45, scope: !4311, inlinedAt: !3960)
!4344 = !DILocation(line: 551, column: 39, scope: !4311, inlinedAt: !3960)
!4345 = !DILocation(line: 551, column: 38, scope: !4311, inlinedAt: !3960)
!4346 = !DILocation(line: 551, column: 32, scope: !4311, inlinedAt: !3960)
!4347 = !DILocation(line: 551, column: 31, scope: !4311, inlinedAt: !3960)
!4348 = !DILocation(line: 550, column: 63, scope: !4311, inlinedAt: !3960)
!4349 = !DILocation(line: 551, column: 57, scope: !4311, inlinedAt: !3960)
!4350 = !DILocation(line: 551, column: 56, scope: !4311, inlinedAt: !3960)
!4351 = !DILocation(line: 551, column: 50, scope: !4311, inlinedAt: !3960)
!4352 = !DILocation(line: 551, column: 49, scope: !4311, inlinedAt: !3960)
!4353 = !DILocation(line: 551, column: 45, scope: !4311, inlinedAt: !3960)
!4354 = !DILocation(line: 551, column: 63, scope: !4311, inlinedAt: !3960)
!4355 = !DILocation(line: 551, column: 69, scope: !4311, inlinedAt: !3960)
!4356 = !DILocation(line: 550, column: 28, scope: !4311, inlinedAt: !3960)
!4357 = !DILocation(line: 550, column: 20, scope: !4311, inlinedAt: !3960)
!4358 = !DILocation(line: 550, column: 19, scope: !4311, inlinedAt: !3960)
!4359 = !DILocation(line: 550, column: 13, scope: !4311, inlinedAt: !3960)
!4360 = !DILocation(line: 550, column: 26, scope: !4311, inlinedAt: !3960)
!4361 = !DILocation(line: 552, column: 9, scope: !4311, inlinedAt: !3960)
!4362 = !DILocation(line: 553, column: 5, scope: !3954, inlinedAt: !3960)
!4363 = !DILocation(line: 508, column: 24, scope: !4364, inlinedAt: !3960)
!4364 = !DILexicalBlockFile(scope: !3955, file: !16, discriminator: 2)
!4365 = !DILocation(line: 508, column: 35, scope: !4364, inlinedAt: !3960)
!4366 = !DILocation(line: 508, column: 32, scope: !4364, inlinedAt: !3960)
!4367 = !DILocation(line: 508, column: 5, scope: !4364, inlinedAt: !3960)
!4368 = distinct !{!4368, !4369}
!4369 = !DILocation(line: 508, column: 5, scope: !3957)
!4370 = !DILocation(line: 561, column: 1, scope: !3947)
!4371 = distinct !DISubprogram(name: "rv40_v_strong_loop_filter", scope: !16, file: !16, line: 563, type: !3948, isLocal: true, isDefinition: true, scopeLine: 566, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4372 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !4373)
!4373 = distinct !DILocation(line: 529, column: 18, scope: !3952, inlinedAt: !4374)
!4374 = distinct !DILocation(line: 567, column: 5, scope: !4371)
!4375 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !4373)
!4376 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !4373)
!4377 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !4378)
!4378 = distinct !DILocation(line: 538, column: 18, scope: !3965, inlinedAt: !4374)
!4379 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !4378)
!4380 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !4378)
!4381 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !4382)
!4382 = distinct !DILocation(line: 539, column: 18, scope: !3965, inlinedAt: !4374)
!4383 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !4382)
!4384 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !4382)
!4385 = !DILocation(line: 127, column: 87, scope: !3320, inlinedAt: !4386)
!4386 = distinct !DILocation(line: 528, column: 18, scope: !3952, inlinedAt: !4374)
!4387 = !DILocation(line: 127, column: 94, scope: !3320, inlinedAt: !4386)
!4388 = !DILocation(line: 127, column: 104, scope: !3320, inlinedAt: !4386)
!4389 = !DILocation(line: 498, column: 84, scope: !3957, inlinedAt: !4374)
!4390 = !DILocation(line: 499, column: 64, scope: !3957, inlinedAt: !4374)
!4391 = !DILocation(line: 500, column: 70, scope: !3957, inlinedAt: !4374)
!4392 = !DILocation(line: 501, column: 64, scope: !3957, inlinedAt: !4374)
!4393 = !DILocation(line: 502, column: 64, scope: !3957, inlinedAt: !4374)
!4394 = !DILocation(line: 503, column: 64, scope: !3957, inlinedAt: !4374)
!4395 = !DILocation(line: 504, column: 64, scope: !3957, inlinedAt: !4374)
!4396 = !DILocation(line: 506, column: 9, scope: !3957, inlinedAt: !4374)
!4397 = !DILocation(line: 509, column: 13, scope: !3954, inlinedAt: !4374)
!4398 = !DILocation(line: 509, column: 20, scope: !3954, inlinedAt: !4374)
!4399 = !DILocation(line: 509, column: 24, scope: !3954, inlinedAt: !4374)
!4400 = !DILocation(line: 509, column: 28, scope: !3954, inlinedAt: !4374)
!4401 = !DILocation(line: 509, column: 32, scope: !3954, inlinedAt: !4374)
!4402 = !DILocation(line: 510, column: 13, scope: !3954, inlinedAt: !4374)
!4403 = !DILocalVariable(name: "src", arg: 1, scope: !4371, file: !16, line: 563, type: !48)
!4404 = !DILocation(line: 563, column: 48, scope: !4371)
!4405 = !DILocalVariable(name: "stride", arg: 2, scope: !4371, file: !16, line: 563, type: !1766)
!4406 = !DILocation(line: 563, column: 69, scope: !4371)
!4407 = !DILocalVariable(name: "alpha", arg: 3, scope: !4371, file: !16, line: 564, type: !18)
!4408 = !DILocation(line: 564, column: 49, scope: !4371)
!4409 = !DILocalVariable(name: "lims", arg: 4, scope: !4371, file: !16, line: 564, type: !18)
!4410 = !DILocation(line: 564, column: 66, scope: !4371)
!4411 = !DILocalVariable(name: "dmode", arg: 5, scope: !4371, file: !16, line: 565, type: !18)
!4412 = !DILocation(line: 565, column: 49, scope: !4371)
!4413 = !DILocalVariable(name: "chroma", arg: 6, scope: !4371, file: !16, line: 565, type: !18)
!4414 = !DILocation(line: 565, column: 66, scope: !4371)
!4415 = !DILocation(line: 567, column: 29, scope: !4371)
!4416 = !DILocation(line: 567, column: 37, scope: !4371)
!4417 = !DILocation(line: 567, column: 45, scope: !4371)
!4418 = !DILocation(line: 567, column: 52, scope: !4371)
!4419 = !DILocation(line: 567, column: 58, scope: !4371)
!4420 = !DILocation(line: 567, column: 65, scope: !4371)
!4421 = !DILocation(line: 567, column: 5, scope: !4371)
!4422 = !DILocation(line: 508, column: 11, scope: !3956, inlinedAt: !4374)
!4423 = !DILocation(line: 508, column: 9, scope: !3956, inlinedAt: !4374)
!4424 = !DILocation(line: 508, column: 16, scope: !4027, inlinedAt: !4374)
!4425 = !DILocation(line: 508, column: 18, scope: !4027, inlinedAt: !4374)
!4426 = !DILocation(line: 508, column: 5, scope: !4027, inlinedAt: !4374)
!4427 = !DILocation(line: 510, column: 23, scope: !3954, inlinedAt: !4374)
!4428 = !DILocation(line: 510, column: 17, scope: !3954, inlinedAt: !4374)
!4429 = !DILocation(line: 510, column: 38, scope: !3954, inlinedAt: !4374)
!4430 = !DILocation(line: 510, column: 37, scope: !3954, inlinedAt: !4374)
!4431 = !DILocation(line: 510, column: 31, scope: !3954, inlinedAt: !4374)
!4432 = !DILocation(line: 510, column: 29, scope: !3954, inlinedAt: !4374)
!4433 = !DILocation(line: 512, column: 14, scope: !4037, inlinedAt: !4374)
!4434 = !DILocation(line: 512, column: 13, scope: !3954, inlinedAt: !4374)
!4435 = !DILocation(line: 513, column: 13, scope: !4037, inlinedAt: !4374)
!4436 = !DILocation(line: 515, column: 18, scope: !3954, inlinedAt: !4374)
!4437 = !DILocation(line: 515, column: 28, scope: !3954, inlinedAt: !4374)
!4438 = !DILocation(line: 515, column: 31, scope: !3954, inlinedAt: !4374)
!4439 = !DILocation(line: 515, column: 27, scope: !3954, inlinedAt: !4374)
!4440 = !DILocation(line: 515, column: 39, scope: !4045, inlinedAt: !4374)
!4441 = !DILocation(line: 515, column: 27, scope: !4045, inlinedAt: !4374)
!4442 = !DILocation(line: 515, column: 47, scope: !4048, inlinedAt: !4374)
!4443 = !DILocation(line: 515, column: 45, scope: !4048, inlinedAt: !4374)
!4444 = !DILocation(line: 515, column: 27, scope: !4048, inlinedAt: !4374)
!4445 = !DILocation(line: 515, column: 27, scope: !4052, inlinedAt: !4374)
!4446 = !DILocation(line: 515, column: 24, scope: !4052, inlinedAt: !4374)
!4447 = !DILocation(line: 515, column: 53, scope: !4052, inlinedAt: !4374)
!4448 = !DILocation(line: 515, column: 15, scope: !4052, inlinedAt: !4374)
!4449 = !DILocation(line: 516, column: 13, scope: !4057, inlinedAt: !4374)
!4450 = !DILocation(line: 516, column: 19, scope: !4057, inlinedAt: !4374)
!4451 = !DILocation(line: 516, column: 13, scope: !3954, inlinedAt: !4374)
!4452 = !DILocation(line: 517, column: 13, scope: !4057, inlinedAt: !4374)
!4453 = !DILocation(line: 519, column: 25, scope: !3954, inlinedAt: !4374)
!4454 = !DILocation(line: 519, column: 24, scope: !3954, inlinedAt: !4374)
!4455 = !DILocation(line: 519, column: 18, scope: !3954, inlinedAt: !4374)
!4456 = !DILocation(line: 519, column: 17, scope: !3954, inlinedAt: !4374)
!4457 = !DILocation(line: 519, column: 43, scope: !3954, inlinedAt: !4374)
!4458 = !DILocation(line: 519, column: 42, scope: !3954, inlinedAt: !4374)
!4459 = !DILocation(line: 519, column: 36, scope: !3954, inlinedAt: !4374)
!4460 = !DILocation(line: 519, column: 35, scope: !3954, inlinedAt: !4374)
!4461 = !DILocation(line: 519, column: 31, scope: !3954, inlinedAt: !4374)
!4462 = !DILocation(line: 519, column: 61, scope: !3954, inlinedAt: !4374)
!4463 = !DILocation(line: 519, column: 60, scope: !3954, inlinedAt: !4374)
!4464 = !DILocation(line: 519, column: 54, scope: !3954, inlinedAt: !4374)
!4465 = !DILocation(line: 519, column: 53, scope: !3954, inlinedAt: !4374)
!4466 = !DILocation(line: 519, column: 49, scope: !3954, inlinedAt: !4374)
!4467 = !DILocation(line: 520, column: 25, scope: !3954, inlinedAt: !4374)
!4468 = !DILocation(line: 520, column: 18, scope: !3954, inlinedAt: !4374)
!4469 = !DILocation(line: 520, column: 17, scope: !3954, inlinedAt: !4374)
!4470 = !DILocation(line: 519, column: 67, scope: !3954, inlinedAt: !4374)
!4471 = !DILocation(line: 520, column: 43, scope: !3954, inlinedAt: !4374)
!4472 = !DILocation(line: 520, column: 36, scope: !3954, inlinedAt: !4374)
!4473 = !DILocation(line: 520, column: 35, scope: !3954, inlinedAt: !4374)
!4474 = !DILocation(line: 520, column: 31, scope: !3954, inlinedAt: !4374)
!4475 = !DILocation(line: 521, column: 29, scope: !3954, inlinedAt: !4374)
!4476 = !DILocation(line: 521, column: 37, scope: !3954, inlinedAt: !4374)
!4477 = !DILocation(line: 521, column: 35, scope: !3954, inlinedAt: !4374)
!4478 = !DILocation(line: 521, column: 15, scope: !3954, inlinedAt: !4374)
!4479 = !DILocation(line: 520, column: 49, scope: !3954, inlinedAt: !4374)
!4480 = !DILocation(line: 521, column: 41, scope: !3954, inlinedAt: !4374)
!4481 = !DILocation(line: 519, column: 12, scope: !3954, inlinedAt: !4374)
!4482 = !DILocation(line: 523, column: 25, scope: !3954, inlinedAt: !4374)
!4483 = !DILocation(line: 523, column: 24, scope: !3954, inlinedAt: !4374)
!4484 = !DILocation(line: 523, column: 18, scope: !3954, inlinedAt: !4374)
!4485 = !DILocation(line: 523, column: 17, scope: !3954, inlinedAt: !4374)
!4486 = !DILocation(line: 523, column: 43, scope: !3954, inlinedAt: !4374)
!4487 = !DILocation(line: 523, column: 42, scope: !3954, inlinedAt: !4374)
!4488 = !DILocation(line: 523, column: 36, scope: !3954, inlinedAt: !4374)
!4489 = !DILocation(line: 523, column: 35, scope: !3954, inlinedAt: !4374)
!4490 = !DILocation(line: 523, column: 31, scope: !3954, inlinedAt: !4374)
!4491 = !DILocation(line: 523, column: 61, scope: !3954, inlinedAt: !4374)
!4492 = !DILocation(line: 523, column: 54, scope: !3954, inlinedAt: !4374)
!4493 = !DILocation(line: 523, column: 53, scope: !3954, inlinedAt: !4374)
!4494 = !DILocation(line: 523, column: 49, scope: !3954, inlinedAt: !4374)
!4495 = !DILocation(line: 524, column: 25, scope: !3954, inlinedAt: !4374)
!4496 = !DILocation(line: 524, column: 18, scope: !3954, inlinedAt: !4374)
!4497 = !DILocation(line: 524, column: 17, scope: !3954, inlinedAt: !4374)
!4498 = !DILocation(line: 523, column: 67, scope: !3954, inlinedAt: !4374)
!4499 = !DILocation(line: 524, column: 43, scope: !3954, inlinedAt: !4374)
!4500 = !DILocation(line: 524, column: 42, scope: !3954, inlinedAt: !4374)
!4501 = !DILocation(line: 524, column: 36, scope: !3954, inlinedAt: !4374)
!4502 = !DILocation(line: 524, column: 35, scope: !3954, inlinedAt: !4374)
!4503 = !DILocation(line: 524, column: 31, scope: !3954, inlinedAt: !4374)
!4504 = !DILocation(line: 525, column: 29, scope: !3954, inlinedAt: !4374)
!4505 = !DILocation(line: 525, column: 37, scope: !3954, inlinedAt: !4374)
!4506 = !DILocation(line: 525, column: 35, scope: !3954, inlinedAt: !4374)
!4507 = !DILocation(line: 525, column: 15, scope: !3954, inlinedAt: !4374)
!4508 = !DILocation(line: 524, column: 49, scope: !3954, inlinedAt: !4374)
!4509 = !DILocation(line: 525, column: 41, scope: !3954, inlinedAt: !4374)
!4510 = !DILocation(line: 523, column: 12, scope: !3954, inlinedAt: !4374)
!4511 = !DILocation(line: 527, column: 13, scope: !3953, inlinedAt: !4374)
!4512 = !DILocation(line: 527, column: 13, scope: !3954, inlinedAt: !4374)
!4513 = !DILocation(line: 528, column: 28, scope: !3952, inlinedAt: !4374)
!4514 = !DILocation(line: 528, column: 39, scope: !3952, inlinedAt: !4374)
!4515 = !DILocation(line: 528, column: 38, scope: !3952, inlinedAt: !4374)
!4516 = !DILocation(line: 528, column: 32, scope: !3952, inlinedAt: !4374)
!4517 = !DILocation(line: 528, column: 47, scope: !3952, inlinedAt: !4374)
!4518 = !DILocation(line: 528, column: 45, scope: !3952, inlinedAt: !4374)
!4519 = !DILocation(line: 528, column: 60, scope: !3952, inlinedAt: !4374)
!4520 = !DILocation(line: 528, column: 59, scope: !3952, inlinedAt: !4374)
!4521 = !DILocation(line: 528, column: 53, scope: !3952, inlinedAt: !4374)
!4522 = !DILocation(line: 528, column: 68, scope: !3952, inlinedAt: !4374)
!4523 = !DILocation(line: 528, column: 66, scope: !3952, inlinedAt: !4374)
!4524 = !DILocation(line: 528, column: 18, scope: !3952, inlinedAt: !4374)
!4525 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !4386)
!4526 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !4386)
!4527 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !4386)
!4528 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !4386)
!4529 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !4386)
!4530 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !4386)
!4531 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !4386)
!4532 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !4386)
!4533 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !4386)
!4534 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !4386)
!4535 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !4386)
!4536 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !4386)
!4537 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !4386)
!4538 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !4386)
!4539 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !4386)
!4540 = !DILocation(line: 528, column: 16, scope: !3952, inlinedAt: !4374)
!4541 = !DILocation(line: 529, column: 28, scope: !3952, inlinedAt: !4374)
!4542 = !DILocation(line: 529, column: 39, scope: !3952, inlinedAt: !4374)
!4543 = !DILocation(line: 529, column: 32, scope: !3952, inlinedAt: !4374)
!4544 = !DILocation(line: 529, column: 47, scope: !3952, inlinedAt: !4374)
!4545 = !DILocation(line: 529, column: 45, scope: !3952, inlinedAt: !4374)
!4546 = !DILocation(line: 529, column: 60, scope: !3952, inlinedAt: !4374)
!4547 = !DILocation(line: 529, column: 53, scope: !3952, inlinedAt: !4374)
!4548 = !DILocation(line: 529, column: 68, scope: !3952, inlinedAt: !4374)
!4549 = !DILocation(line: 529, column: 66, scope: !3952, inlinedAt: !4374)
!4550 = !DILocation(line: 529, column: 18, scope: !3952, inlinedAt: !4374)
!4551 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !4373)
!4552 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !4373)
!4553 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !4373)
!4554 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !4373)
!4555 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !4373)
!4556 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !4373)
!4557 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !4373)
!4558 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !4373)
!4559 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !4373)
!4560 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !4373)
!4561 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !4373)
!4562 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !4373)
!4563 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !4373)
!4564 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !4373)
!4565 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !4373)
!4566 = !DILocation(line: 529, column: 16, scope: !3952, inlinedAt: !4374)
!4567 = !DILocation(line: 530, column: 9, scope: !3952, inlinedAt: !4374)
!4568 = !DILocation(line: 532, column: 25, scope: !3954, inlinedAt: !4374)
!4569 = !DILocation(line: 532, column: 24, scope: !3954, inlinedAt: !4374)
!4570 = !DILocation(line: 532, column: 18, scope: !3954, inlinedAt: !4374)
!4571 = !DILocation(line: 532, column: 17, scope: !3954, inlinedAt: !4374)
!4572 = !DILocation(line: 532, column: 43, scope: !3954, inlinedAt: !4374)
!4573 = !DILocation(line: 532, column: 42, scope: !3954, inlinedAt: !4374)
!4574 = !DILocation(line: 532, column: 36, scope: !3954, inlinedAt: !4374)
!4575 = !DILocation(line: 532, column: 35, scope: !3954, inlinedAt: !4374)
!4576 = !DILocation(line: 532, column: 31, scope: !3954, inlinedAt: !4374)
!4577 = !DILocation(line: 532, column: 61, scope: !3954, inlinedAt: !4374)
!4578 = !DILocation(line: 532, column: 60, scope: !3954, inlinedAt: !4374)
!4579 = !DILocation(line: 532, column: 54, scope: !3954, inlinedAt: !4374)
!4580 = !DILocation(line: 532, column: 53, scope: !3954, inlinedAt: !4374)
!4581 = !DILocation(line: 532, column: 49, scope: !3954, inlinedAt: !4374)
!4582 = !DILocation(line: 532, column: 72, scope: !3954, inlinedAt: !4374)
!4583 = !DILocation(line: 532, column: 71, scope: !3954, inlinedAt: !4374)
!4584 = !DILocation(line: 532, column: 67, scope: !3954, inlinedAt: !4374)
!4585 = !DILocation(line: 533, column: 25, scope: !3954, inlinedAt: !4374)
!4586 = !DILocation(line: 533, column: 18, scope: !3954, inlinedAt: !4374)
!4587 = !DILocation(line: 533, column: 17, scope: !3954, inlinedAt: !4374)
!4588 = !DILocation(line: 532, column: 75, scope: !3954, inlinedAt: !4374)
!4589 = !DILocation(line: 533, column: 47, scope: !3954, inlinedAt: !4374)
!4590 = !DILocation(line: 533, column: 55, scope: !3954, inlinedAt: !4374)
!4591 = !DILocation(line: 533, column: 53, scope: !3954, inlinedAt: !4374)
!4592 = !DILocation(line: 533, column: 33, scope: !3954, inlinedAt: !4374)
!4593 = !DILocation(line: 533, column: 31, scope: !3954, inlinedAt: !4374)
!4594 = !DILocation(line: 533, column: 59, scope: !3954, inlinedAt: !4374)
!4595 = !DILocation(line: 532, column: 12, scope: !3954, inlinedAt: !4374)
!4596 = !DILocation(line: 534, column: 25, scope: !3954, inlinedAt: !4374)
!4597 = !DILocation(line: 534, column: 24, scope: !3954, inlinedAt: !4374)
!4598 = !DILocation(line: 534, column: 18, scope: !3954, inlinedAt: !4374)
!4599 = !DILocation(line: 534, column: 17, scope: !3954, inlinedAt: !4374)
!4600 = !DILocation(line: 534, column: 36, scope: !3954, inlinedAt: !4374)
!4601 = !DILocation(line: 534, column: 35, scope: !3954, inlinedAt: !4374)
!4602 = !DILocation(line: 534, column: 31, scope: !3954, inlinedAt: !4374)
!4603 = !DILocation(line: 534, column: 51, scope: !3954, inlinedAt: !4374)
!4604 = !DILocation(line: 534, column: 44, scope: !3954, inlinedAt: !4374)
!4605 = !DILocation(line: 534, column: 43, scope: !3954, inlinedAt: !4374)
!4606 = !DILocation(line: 534, column: 39, scope: !3954, inlinedAt: !4374)
!4607 = !DILocation(line: 534, column: 69, scope: !3954, inlinedAt: !4374)
!4608 = !DILocation(line: 534, column: 68, scope: !3954, inlinedAt: !4374)
!4609 = !DILocation(line: 534, column: 62, scope: !3954, inlinedAt: !4374)
!4610 = !DILocation(line: 534, column: 61, scope: !3954, inlinedAt: !4374)
!4611 = !DILocation(line: 534, column: 57, scope: !3954, inlinedAt: !4374)
!4612 = !DILocation(line: 535, column: 25, scope: !3954, inlinedAt: !4374)
!4613 = !DILocation(line: 535, column: 24, scope: !3954, inlinedAt: !4374)
!4614 = !DILocation(line: 535, column: 18, scope: !3954, inlinedAt: !4374)
!4615 = !DILocation(line: 535, column: 17, scope: !3954, inlinedAt: !4374)
!4616 = !DILocation(line: 534, column: 75, scope: !3954, inlinedAt: !4374)
!4617 = !DILocation(line: 535, column: 47, scope: !3954, inlinedAt: !4374)
!4618 = !DILocation(line: 535, column: 55, scope: !3954, inlinedAt: !4374)
!4619 = !DILocation(line: 535, column: 53, scope: !3954, inlinedAt: !4374)
!4620 = !DILocation(line: 535, column: 33, scope: !3954, inlinedAt: !4374)
!4621 = !DILocation(line: 535, column: 31, scope: !3954, inlinedAt: !4374)
!4622 = !DILocation(line: 535, column: 59, scope: !3954, inlinedAt: !4374)
!4623 = !DILocation(line: 534, column: 12, scope: !3954, inlinedAt: !4374)
!4624 = !DILocation(line: 537, column: 13, scope: !3966, inlinedAt: !4374)
!4625 = !DILocation(line: 537, column: 13, scope: !3954, inlinedAt: !4374)
!4626 = !DILocation(line: 538, column: 28, scope: !3965, inlinedAt: !4374)
!4627 = !DILocation(line: 538, column: 39, scope: !3965, inlinedAt: !4374)
!4628 = !DILocation(line: 538, column: 38, scope: !3965, inlinedAt: !4374)
!4629 = !DILocation(line: 538, column: 32, scope: !3965, inlinedAt: !4374)
!4630 = !DILocation(line: 538, column: 47, scope: !3965, inlinedAt: !4374)
!4631 = !DILocation(line: 538, column: 45, scope: !3965, inlinedAt: !4374)
!4632 = !DILocation(line: 538, column: 60, scope: !3965, inlinedAt: !4374)
!4633 = !DILocation(line: 538, column: 59, scope: !3965, inlinedAt: !4374)
!4634 = !DILocation(line: 538, column: 53, scope: !3965, inlinedAt: !4374)
!4635 = !DILocation(line: 538, column: 68, scope: !3965, inlinedAt: !4374)
!4636 = !DILocation(line: 538, column: 66, scope: !3965, inlinedAt: !4374)
!4637 = !DILocation(line: 538, column: 18, scope: !3965, inlinedAt: !4374)
!4638 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !4378)
!4639 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !4378)
!4640 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !4378)
!4641 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !4378)
!4642 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !4378)
!4643 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !4378)
!4644 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !4378)
!4645 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !4378)
!4646 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !4378)
!4647 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !4378)
!4648 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !4378)
!4649 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !4378)
!4650 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !4378)
!4651 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !4378)
!4652 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !4378)
!4653 = !DILocation(line: 538, column: 16, scope: !3965, inlinedAt: !4374)
!4654 = !DILocation(line: 539, column: 28, scope: !3965, inlinedAt: !4374)
!4655 = !DILocation(line: 539, column: 39, scope: !3965, inlinedAt: !4374)
!4656 = !DILocation(line: 539, column: 32, scope: !3965, inlinedAt: !4374)
!4657 = !DILocation(line: 539, column: 47, scope: !3965, inlinedAt: !4374)
!4658 = !DILocation(line: 539, column: 45, scope: !3965, inlinedAt: !4374)
!4659 = !DILocation(line: 539, column: 60, scope: !3965, inlinedAt: !4374)
!4660 = !DILocation(line: 539, column: 53, scope: !3965, inlinedAt: !4374)
!4661 = !DILocation(line: 539, column: 68, scope: !3965, inlinedAt: !4374)
!4662 = !DILocation(line: 539, column: 66, scope: !3965, inlinedAt: !4374)
!4663 = !DILocation(line: 539, column: 18, scope: !3965, inlinedAt: !4374)
!4664 = !DILocation(line: 132, column: 9, scope: !3509, inlinedAt: !4382)
!4665 = !DILocation(line: 132, column: 13, scope: !3509, inlinedAt: !4382)
!4666 = !DILocation(line: 132, column: 11, scope: !3509, inlinedAt: !4382)
!4667 = !DILocation(line: 132, column: 9, scope: !3320, inlinedAt: !4382)
!4668 = !DILocation(line: 132, column: 26, scope: !3514, inlinedAt: !4382)
!4669 = !DILocation(line: 132, column: 19, scope: !3514, inlinedAt: !4382)
!4670 = !DILocation(line: 133, column: 14, scope: !3517, inlinedAt: !4382)
!4671 = !DILocation(line: 133, column: 18, scope: !3517, inlinedAt: !4382)
!4672 = !DILocation(line: 133, column: 16, scope: !3517, inlinedAt: !4382)
!4673 = !DILocation(line: 133, column: 14, scope: !3509, inlinedAt: !4382)
!4674 = !DILocation(line: 133, column: 31, scope: !3522, inlinedAt: !4382)
!4675 = !DILocation(line: 133, column: 24, scope: !3522, inlinedAt: !4382)
!4676 = !DILocation(line: 134, column: 17, scope: !3517, inlinedAt: !4382)
!4677 = !DILocation(line: 134, column: 10, scope: !3517, inlinedAt: !4382)
!4678 = !DILocation(line: 135, column: 1, scope: !3320, inlinedAt: !4382)
!4679 = !DILocation(line: 539, column: 16, scope: !3965, inlinedAt: !4374)
!4680 = !DILocation(line: 540, column: 9, scope: !3965, inlinedAt: !4374)
!4681 = !DILocation(line: 542, column: 24, scope: !3954, inlinedAt: !4374)
!4682 = !DILocation(line: 542, column: 16, scope: !3954, inlinedAt: !4374)
!4683 = !DILocation(line: 542, column: 15, scope: !3954, inlinedAt: !4374)
!4684 = !DILocation(line: 542, column: 9, scope: !3954, inlinedAt: !4374)
!4685 = !DILocation(line: 542, column: 22, scope: !3954, inlinedAt: !4374)
!4686 = !DILocation(line: 543, column: 24, scope: !3954, inlinedAt: !4374)
!4687 = !DILocation(line: 543, column: 16, scope: !3954, inlinedAt: !4374)
!4688 = !DILocation(line: 543, column: 15, scope: !3954, inlinedAt: !4374)
!4689 = !DILocation(line: 543, column: 9, scope: !3954, inlinedAt: !4374)
!4690 = !DILocation(line: 543, column: 22, scope: !3954, inlinedAt: !4374)
!4691 = !DILocation(line: 544, column: 24, scope: !3954, inlinedAt: !4374)
!4692 = !DILocation(line: 544, column: 16, scope: !3954, inlinedAt: !4374)
!4693 = !DILocation(line: 544, column: 9, scope: !3954, inlinedAt: !4374)
!4694 = !DILocation(line: 544, column: 22, scope: !3954, inlinedAt: !4374)
!4695 = !DILocation(line: 545, column: 24, scope: !3954, inlinedAt: !4374)
!4696 = !DILocation(line: 545, column: 16, scope: !3954, inlinedAt: !4374)
!4697 = !DILocation(line: 545, column: 9, scope: !3954, inlinedAt: !4374)
!4698 = !DILocation(line: 545, column: 22, scope: !3954, inlinedAt: !4374)
!4699 = !DILocation(line: 547, column: 13, scope: !4308, inlinedAt: !4374)
!4700 = !DILocation(line: 547, column: 12, scope: !3954, inlinedAt: !4374)
!4701 = !DILocation(line: 548, column: 39, scope: !4311, inlinedAt: !4374)
!4702 = !DILocation(line: 548, column: 38, scope: !4311, inlinedAt: !4374)
!4703 = !DILocation(line: 548, column: 32, scope: !4311, inlinedAt: !4374)
!4704 = !DILocation(line: 548, column: 31, scope: !4311, inlinedAt: !4374)
!4705 = !DILocation(line: 548, column: 57, scope: !4311, inlinedAt: !4374)
!4706 = !DILocation(line: 548, column: 56, scope: !4311, inlinedAt: !4374)
!4707 = !DILocation(line: 548, column: 50, scope: !4311, inlinedAt: !4374)
!4708 = !DILocation(line: 548, column: 49, scope: !4311, inlinedAt: !4374)
!4709 = !DILocation(line: 548, column: 45, scope: !4311, inlinedAt: !4374)
!4710 = !DILocation(line: 549, column: 39, scope: !4311, inlinedAt: !4374)
!4711 = !DILocation(line: 549, column: 38, scope: !4311, inlinedAt: !4374)
!4712 = !DILocation(line: 549, column: 32, scope: !4311, inlinedAt: !4374)
!4713 = !DILocation(line: 549, column: 31, scope: !4311, inlinedAt: !4374)
!4714 = !DILocation(line: 548, column: 63, scope: !4311, inlinedAt: !4374)
!4715 = !DILocation(line: 549, column: 57, scope: !4311, inlinedAt: !4374)
!4716 = !DILocation(line: 549, column: 56, scope: !4311, inlinedAt: !4374)
!4717 = !DILocation(line: 549, column: 50, scope: !4311, inlinedAt: !4374)
!4718 = !DILocation(line: 549, column: 49, scope: !4311, inlinedAt: !4374)
!4719 = !DILocation(line: 549, column: 45, scope: !4311, inlinedAt: !4374)
!4720 = !DILocation(line: 549, column: 63, scope: !4311, inlinedAt: !4374)
!4721 = !DILocation(line: 549, column: 69, scope: !4311, inlinedAt: !4374)
!4722 = !DILocation(line: 548, column: 28, scope: !4311, inlinedAt: !4374)
!4723 = !DILocation(line: 548, column: 20, scope: !4311, inlinedAt: !4374)
!4724 = !DILocation(line: 548, column: 19, scope: !4311, inlinedAt: !4374)
!4725 = !DILocation(line: 548, column: 13, scope: !4311, inlinedAt: !4374)
!4726 = !DILocation(line: 548, column: 26, scope: !4311, inlinedAt: !4374)
!4727 = !DILocation(line: 550, column: 39, scope: !4311, inlinedAt: !4374)
!4728 = !DILocation(line: 550, column: 32, scope: !4311, inlinedAt: !4374)
!4729 = !DILocation(line: 550, column: 31, scope: !4311, inlinedAt: !4374)
!4730 = !DILocation(line: 550, column: 57, scope: !4311, inlinedAt: !4374)
!4731 = !DILocation(line: 550, column: 50, scope: !4311, inlinedAt: !4374)
!4732 = !DILocation(line: 550, column: 49, scope: !4311, inlinedAt: !4374)
!4733 = !DILocation(line: 550, column: 45, scope: !4311, inlinedAt: !4374)
!4734 = !DILocation(line: 551, column: 39, scope: !4311, inlinedAt: !4374)
!4735 = !DILocation(line: 551, column: 38, scope: !4311, inlinedAt: !4374)
!4736 = !DILocation(line: 551, column: 32, scope: !4311, inlinedAt: !4374)
!4737 = !DILocation(line: 551, column: 31, scope: !4311, inlinedAt: !4374)
!4738 = !DILocation(line: 550, column: 63, scope: !4311, inlinedAt: !4374)
!4739 = !DILocation(line: 551, column: 57, scope: !4311, inlinedAt: !4374)
!4740 = !DILocation(line: 551, column: 56, scope: !4311, inlinedAt: !4374)
!4741 = !DILocation(line: 551, column: 50, scope: !4311, inlinedAt: !4374)
!4742 = !DILocation(line: 551, column: 49, scope: !4311, inlinedAt: !4374)
!4743 = !DILocation(line: 551, column: 45, scope: !4311, inlinedAt: !4374)
!4744 = !DILocation(line: 551, column: 63, scope: !4311, inlinedAt: !4374)
!4745 = !DILocation(line: 551, column: 69, scope: !4311, inlinedAt: !4374)
!4746 = !DILocation(line: 550, column: 28, scope: !4311, inlinedAt: !4374)
!4747 = !DILocation(line: 550, column: 20, scope: !4311, inlinedAt: !4374)
!4748 = !DILocation(line: 550, column: 19, scope: !4311, inlinedAt: !4374)
!4749 = !DILocation(line: 550, column: 13, scope: !4311, inlinedAt: !4374)
!4750 = !DILocation(line: 550, column: 26, scope: !4311, inlinedAt: !4374)
!4751 = !DILocation(line: 552, column: 9, scope: !4311, inlinedAt: !4374)
!4752 = !DILocation(line: 553, column: 5, scope: !3954, inlinedAt: !4374)
!4753 = !DILocation(line: 508, column: 24, scope: !4364, inlinedAt: !4374)
!4754 = !DILocation(line: 508, column: 35, scope: !4364, inlinedAt: !4374)
!4755 = !DILocation(line: 508, column: 32, scope: !4364, inlinedAt: !4374)
!4756 = !DILocation(line: 508, column: 5, scope: !4364, inlinedAt: !4374)
!4757 = !DILocation(line: 568, column: 1, scope: !4371)
!4758 = distinct !DISubprogram(name: "rv40_h_loop_filter_strength", scope: !16, file: !16, line: 606, type: !109, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4759 = !DILocalVariable(name: "src", arg: 1, scope: !4760, file: !16, line: 570, type: !48)
!4760 = distinct !DISubprogram(name: "rv40_loop_filter_strength", scope: !16, file: !16, line: 570, type: !4761, isLocal: true, isDefinition: true, scopeLine: 575, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4761 = !DISubroutineType(types: !4762)
!4762 = !{!19, !48, !19, !50, !19, !19, !19, !111, !111}
!4763 = !DILocation(line: 570, column: 85, scope: !4760, inlinedAt: !4764)
!4764 = distinct !DILocation(line: 610, column: 12, scope: !4758)
!4765 = !DILocalVariable(name: "step", arg: 2, scope: !4760, file: !16, line: 571, type: !19)
!4766 = !DILocation(line: 571, column: 59, scope: !4760, inlinedAt: !4764)
!4767 = !DILocalVariable(name: "stride", arg: 3, scope: !4760, file: !16, line: 571, type: !50)
!4768 = !DILocation(line: 571, column: 75, scope: !4760, inlinedAt: !4764)
!4769 = !DILocalVariable(name: "beta", arg: 4, scope: !4760, file: !16, line: 572, type: !19)
!4770 = !DILocation(line: 572, column: 59, scope: !4760, inlinedAt: !4764)
!4771 = !DILocalVariable(name: "beta2", arg: 5, scope: !4760, file: !16, line: 572, type: !19)
!4772 = !DILocation(line: 572, column: 69, scope: !4760, inlinedAt: !4764)
!4773 = !DILocalVariable(name: "edge", arg: 6, scope: !4760, file: !16, line: 573, type: !19)
!4774 = !DILocation(line: 573, column: 59, scope: !4760, inlinedAt: !4764)
!4775 = !DILocalVariable(name: "p1", arg: 7, scope: !4760, file: !16, line: 574, type: !111)
!4776 = !DILocation(line: 574, column: 60, scope: !4760, inlinedAt: !4764)
!4777 = !DILocalVariable(name: "q1", arg: 8, scope: !4760, file: !16, line: 574, type: !111)
!4778 = !DILocation(line: 574, column: 69, scope: !4760, inlinedAt: !4764)
!4779 = !DILocalVariable(name: "sum_p1p0", scope: !4760, file: !16, line: 576, type: !19)
!4780 = !DILocation(line: 576, column: 9, scope: !4760, inlinedAt: !4764)
!4781 = !DILocalVariable(name: "sum_q1q0", scope: !4760, file: !16, line: 576, type: !19)
!4782 = !DILocation(line: 576, column: 23, scope: !4760, inlinedAt: !4764)
!4783 = !DILocalVariable(name: "sum_p1p2", scope: !4760, file: !16, line: 576, type: !19)
!4784 = !DILocation(line: 576, column: 37, scope: !4760, inlinedAt: !4764)
!4785 = !DILocalVariable(name: "sum_q1q2", scope: !4760, file: !16, line: 576, type: !19)
!4786 = !DILocation(line: 576, column: 51, scope: !4760, inlinedAt: !4764)
!4787 = !DILocalVariable(name: "strong0", scope: !4760, file: !16, line: 577, type: !19)
!4788 = !DILocation(line: 577, column: 9, scope: !4760, inlinedAt: !4764)
!4789 = !DILocalVariable(name: "strong1", scope: !4760, file: !16, line: 577, type: !19)
!4790 = !DILocation(line: 577, column: 22, scope: !4760, inlinedAt: !4764)
!4791 = !DILocalVariable(name: "ptr", scope: !4760, file: !16, line: 578, type: !48)
!4792 = !DILocation(line: 578, column: 14, scope: !4760, inlinedAt: !4764)
!4793 = !DILocalVariable(name: "i", scope: !4760, file: !16, line: 579, type: !19)
!4794 = !DILocation(line: 579, column: 9, scope: !4760, inlinedAt: !4764)
!4795 = !DILocalVariable(name: "src", arg: 1, scope: !4758, file: !16, line: 606, type: !48)
!4796 = !DILocation(line: 606, column: 49, scope: !4758)
!4797 = !DILocalVariable(name: "stride", arg: 2, scope: !4758, file: !16, line: 606, type: !50)
!4798 = !DILocation(line: 606, column: 64, scope: !4758)
!4799 = !DILocalVariable(name: "beta", arg: 3, scope: !4758, file: !16, line: 607, type: !19)
!4800 = !DILocation(line: 607, column: 44, scope: !4758)
!4801 = !DILocalVariable(name: "beta2", arg: 4, scope: !4758, file: !16, line: 607, type: !19)
!4802 = !DILocation(line: 607, column: 54, scope: !4758)
!4803 = !DILocalVariable(name: "edge", arg: 5, scope: !4758, file: !16, line: 607, type: !19)
!4804 = !DILocation(line: 607, column: 65, scope: !4758)
!4805 = !DILocalVariable(name: "p1", arg: 6, scope: !4758, file: !16, line: 608, type: !111)
!4806 = !DILocation(line: 608, column: 45, scope: !4758)
!4807 = !DILocalVariable(name: "q1", arg: 7, scope: !4758, file: !16, line: 608, type: !111)
!4808 = !DILocation(line: 608, column: 54, scope: !4758)
!4809 = !DILocation(line: 610, column: 38, scope: !4758)
!4810 = !DILocation(line: 610, column: 43, scope: !4758)
!4811 = !DILocation(line: 610, column: 54, scope: !4758)
!4812 = !DILocation(line: 610, column: 60, scope: !4758)
!4813 = !DILocation(line: 610, column: 67, scope: !4758)
!4814 = !DILocation(line: 610, column: 73, scope: !4758)
!4815 = !DILocation(line: 610, column: 77, scope: !4758)
!4816 = !DILocation(line: 610, column: 12, scope: !4758)
!4817 = !DILocation(line: 581, column: 12, scope: !4818, inlinedAt: !4764)
!4818 = distinct !DILexicalBlock(scope: !4760, file: !16, line: 581, column: 5)
!4819 = !DILocation(line: 581, column: 23, scope: !4818, inlinedAt: !4764)
!4820 = !DILocation(line: 581, column: 21, scope: !4818, inlinedAt: !4764)
!4821 = !DILocation(line: 581, column: 10, scope: !4818, inlinedAt: !4764)
!4822 = !DILocation(line: 581, column: 28, scope: !4823, inlinedAt: !4764)
!4823 = !DILexicalBlockFile(scope: !4824, file: !16, discriminator: 1)
!4824 = distinct !DILexicalBlock(scope: !4818, file: !16, line: 581, column: 5)
!4825 = !DILocation(line: 581, column: 30, scope: !4823, inlinedAt: !4764)
!4826 = !DILocation(line: 581, column: 5, scope: !4823, inlinedAt: !4764)
!4827 = !DILocation(line: 582, column: 28, scope: !4828, inlinedAt: !4764)
!4828 = distinct !DILexicalBlock(scope: !4824, file: !16, line: 581, column: 55)
!4829 = !DILocation(line: 582, column: 27, scope: !4828, inlinedAt: !4764)
!4830 = !DILocation(line: 582, column: 21, scope: !4828, inlinedAt: !4764)
!4831 = !DILocation(line: 582, column: 43, scope: !4828, inlinedAt: !4764)
!4832 = !DILocation(line: 582, column: 42, scope: !4828, inlinedAt: !4764)
!4833 = !DILocation(line: 582, column: 36, scope: !4828, inlinedAt: !4764)
!4834 = !DILocation(line: 582, column: 34, scope: !4828, inlinedAt: !4764)
!4835 = !DILocation(line: 582, column: 18, scope: !4828, inlinedAt: !4764)
!4836 = !DILocation(line: 583, column: 28, scope: !4828, inlinedAt: !4764)
!4837 = !DILocation(line: 583, column: 21, scope: !4828, inlinedAt: !4764)
!4838 = !DILocation(line: 583, column: 43, scope: !4828, inlinedAt: !4764)
!4839 = !DILocation(line: 583, column: 36, scope: !4828, inlinedAt: !4764)
!4840 = !DILocation(line: 583, column: 34, scope: !4828, inlinedAt: !4764)
!4841 = !DILocation(line: 583, column: 18, scope: !4828, inlinedAt: !4764)
!4842 = !DILocation(line: 581, column: 36, scope: !4843, inlinedAt: !4764)
!4843 = !DILexicalBlockFile(scope: !4824, file: !16, discriminator: 2)
!4844 = !DILocation(line: 581, column: 47, scope: !4843, inlinedAt: !4764)
!4845 = !DILocation(line: 581, column: 44, scope: !4843, inlinedAt: !4764)
!4846 = !DILocation(line: 581, column: 5, scope: !4843, inlinedAt: !4764)
!4847 = distinct !{!4847, !4848}
!4848 = !DILocation(line: 581, column: 5, scope: !4760)
!4849 = !DILocation(line: 586, column: 13, scope: !4760, inlinedAt: !4764)
!4850 = !DILocation(line: 586, column: 23, scope: !4760, inlinedAt: !4764)
!4851 = !DILocation(line: 586, column: 12, scope: !4760, inlinedAt: !4764)
!4852 = !DILocation(line: 586, column: 31, scope: !4853, inlinedAt: !4764)
!4853 = !DILexicalBlockFile(scope: !4760, file: !16, discriminator: 1)
!4854 = !DILocation(line: 586, column: 12, scope: !4853, inlinedAt: !4764)
!4855 = !DILocation(line: 586, column: 46, scope: !4856, inlinedAt: !4764)
!4856 = !DILexicalBlockFile(scope: !4760, file: !16, discriminator: 2)
!4857 = !DILocation(line: 586, column: 44, scope: !4856, inlinedAt: !4764)
!4858 = !DILocation(line: 586, column: 12, scope: !4856, inlinedAt: !4764)
!4859 = !DILocation(line: 586, column: 12, scope: !4860, inlinedAt: !4764)
!4860 = !DILexicalBlockFile(scope: !4760, file: !16, discriminator: 3)
!4861 = !DILocation(line: 586, column: 61, scope: !4860, inlinedAt: !4764)
!4862 = !DILocation(line: 586, column: 66, scope: !4860, inlinedAt: !4764)
!4863 = !DILocation(line: 586, column: 58, scope: !4860, inlinedAt: !4764)
!4864 = !DILocation(line: 586, column: 6, scope: !4860, inlinedAt: !4764)
!4865 = !DILocation(line: 586, column: 9, scope: !4860, inlinedAt: !4764)
!4866 = !DILocation(line: 587, column: 13, scope: !4760, inlinedAt: !4764)
!4867 = !DILocation(line: 587, column: 23, scope: !4760, inlinedAt: !4764)
!4868 = !DILocation(line: 587, column: 12, scope: !4760, inlinedAt: !4764)
!4869 = !DILocation(line: 587, column: 31, scope: !4853, inlinedAt: !4764)
!4870 = !DILocation(line: 587, column: 12, scope: !4853, inlinedAt: !4764)
!4871 = !DILocation(line: 587, column: 46, scope: !4856, inlinedAt: !4764)
!4872 = !DILocation(line: 587, column: 44, scope: !4856, inlinedAt: !4764)
!4873 = !DILocation(line: 587, column: 12, scope: !4856, inlinedAt: !4764)
!4874 = !DILocation(line: 587, column: 12, scope: !4860, inlinedAt: !4764)
!4875 = !DILocation(line: 587, column: 61, scope: !4860, inlinedAt: !4764)
!4876 = !DILocation(line: 587, column: 66, scope: !4860, inlinedAt: !4764)
!4877 = !DILocation(line: 587, column: 58, scope: !4860, inlinedAt: !4764)
!4878 = !DILocation(line: 587, column: 6, scope: !4860, inlinedAt: !4764)
!4879 = !DILocation(line: 587, column: 9, scope: !4860, inlinedAt: !4764)
!4880 = !DILocation(line: 589, column: 10, scope: !4881, inlinedAt: !4764)
!4881 = distinct !DILexicalBlock(scope: !4760, file: !16, line: 589, column: 8)
!4882 = !DILocation(line: 589, column: 9, scope: !4881, inlinedAt: !4764)
!4883 = !DILocation(line: 589, column: 13, scope: !4881, inlinedAt: !4764)
!4884 = !DILocation(line: 589, column: 18, scope: !4885, inlinedAt: !4764)
!4885 = !DILexicalBlockFile(scope: !4881, file: !16, discriminator: 1)
!4886 = !DILocation(line: 589, column: 17, scope: !4885, inlinedAt: !4764)
!4887 = !DILocation(line: 589, column: 8, scope: !4885, inlinedAt: !4764)
!4888 = !DILocation(line: 590, column: 9, scope: !4881, inlinedAt: !4764)
!4889 = !DILocation(line: 592, column: 10, scope: !4890, inlinedAt: !4764)
!4890 = distinct !DILexicalBlock(scope: !4760, file: !16, line: 592, column: 9)
!4891 = !DILocation(line: 592, column: 9, scope: !4760, inlinedAt: !4764)
!4892 = !DILocation(line: 593, column: 9, scope: !4890, inlinedAt: !4764)
!4893 = !DILocation(line: 595, column: 12, scope: !4894, inlinedAt: !4764)
!4894 = distinct !DILexicalBlock(scope: !4760, file: !16, line: 595, column: 5)
!4895 = !DILocation(line: 595, column: 23, scope: !4894, inlinedAt: !4764)
!4896 = !DILocation(line: 595, column: 21, scope: !4894, inlinedAt: !4764)
!4897 = !DILocation(line: 595, column: 10, scope: !4894, inlinedAt: !4764)
!4898 = !DILocation(line: 595, column: 28, scope: !4899, inlinedAt: !4764)
!4899 = !DILexicalBlockFile(scope: !4900, file: !16, discriminator: 1)
!4900 = distinct !DILexicalBlock(scope: !4894, file: !16, line: 595, column: 5)
!4901 = !DILocation(line: 595, column: 30, scope: !4899, inlinedAt: !4764)
!4902 = !DILocation(line: 595, column: 5, scope: !4899, inlinedAt: !4764)
!4903 = !DILocation(line: 596, column: 28, scope: !4904, inlinedAt: !4764)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !16, line: 595, column: 55)
!4905 = !DILocation(line: 596, column: 27, scope: !4904, inlinedAt: !4764)
!4906 = !DILocation(line: 596, column: 21, scope: !4904, inlinedAt: !4764)
!4907 = !DILocation(line: 596, column: 43, scope: !4904, inlinedAt: !4764)
!4908 = !DILocation(line: 596, column: 42, scope: !4904, inlinedAt: !4764)
!4909 = !DILocation(line: 596, column: 36, scope: !4904, inlinedAt: !4764)
!4910 = !DILocation(line: 596, column: 34, scope: !4904, inlinedAt: !4764)
!4911 = !DILocation(line: 596, column: 18, scope: !4904, inlinedAt: !4764)
!4912 = !DILocation(line: 597, column: 28, scope: !4904, inlinedAt: !4764)
!4913 = !DILocation(line: 597, column: 21, scope: !4904, inlinedAt: !4764)
!4914 = !DILocation(line: 597, column: 43, scope: !4904, inlinedAt: !4764)
!4915 = !DILocation(line: 597, column: 42, scope: !4904, inlinedAt: !4764)
!4916 = !DILocation(line: 597, column: 36, scope: !4904, inlinedAt: !4764)
!4917 = !DILocation(line: 597, column: 34, scope: !4904, inlinedAt: !4764)
!4918 = !DILocation(line: 597, column: 18, scope: !4904, inlinedAt: !4764)
!4919 = !DILocation(line: 595, column: 36, scope: !4920, inlinedAt: !4764)
!4920 = !DILexicalBlockFile(scope: !4900, file: !16, discriminator: 2)
!4921 = !DILocation(line: 595, column: 47, scope: !4920, inlinedAt: !4764)
!4922 = !DILocation(line: 595, column: 44, scope: !4920, inlinedAt: !4764)
!4923 = !DILocation(line: 595, column: 5, scope: !4920, inlinedAt: !4764)
!4924 = distinct !{!4924, !4925}
!4925 = !DILocation(line: 595, column: 5, scope: !4760)
!4926 = !DILocation(line: 600, column: 16, scope: !4760, inlinedAt: !4764)
!4927 = !DILocation(line: 600, column: 15, scope: !4760, inlinedAt: !4764)
!4928 = !DILocation(line: 600, column: 19, scope: !4760, inlinedAt: !4764)
!4929 = !DILocation(line: 600, column: 25, scope: !4853, inlinedAt: !4764)
!4930 = !DILocation(line: 600, column: 35, scope: !4853, inlinedAt: !4764)
!4931 = !DILocation(line: 600, column: 24, scope: !4853, inlinedAt: !4764)
!4932 = !DILocation(line: 600, column: 43, scope: !4856, inlinedAt: !4764)
!4933 = !DILocation(line: 600, column: 24, scope: !4856, inlinedAt: !4764)
!4934 = !DILocation(line: 600, column: 58, scope: !4860, inlinedAt: !4764)
!4935 = !DILocation(line: 600, column: 56, scope: !4860, inlinedAt: !4764)
!4936 = !DILocation(line: 600, column: 24, scope: !4860, inlinedAt: !4764)
!4937 = !DILocation(line: 600, column: 24, scope: !4938, inlinedAt: !4764)
!4938 = !DILexicalBlockFile(scope: !4760, file: !16, discriminator: 4)
!4939 = !DILocation(line: 600, column: 72, scope: !4938, inlinedAt: !4764)
!4940 = !DILocation(line: 600, column: 70, scope: !4938, inlinedAt: !4764)
!4941 = !DILocation(line: 600, column: 19, scope: !4942, inlinedAt: !4764)
!4942 = !DILexicalBlockFile(scope: !4760, file: !16, discriminator: 5)
!4943 = !DILocation(line: 600, column: 13, scope: !4942, inlinedAt: !4764)
!4944 = !DILocation(line: 601, column: 16, scope: !4760, inlinedAt: !4764)
!4945 = !DILocation(line: 601, column: 15, scope: !4760, inlinedAt: !4764)
!4946 = !DILocation(line: 601, column: 19, scope: !4760, inlinedAt: !4764)
!4947 = !DILocation(line: 601, column: 25, scope: !4853, inlinedAt: !4764)
!4948 = !DILocation(line: 601, column: 35, scope: !4853, inlinedAt: !4764)
!4949 = !DILocation(line: 601, column: 24, scope: !4853, inlinedAt: !4764)
!4950 = !DILocation(line: 601, column: 43, scope: !4856, inlinedAt: !4764)
!4951 = !DILocation(line: 601, column: 24, scope: !4856, inlinedAt: !4764)
!4952 = !DILocation(line: 601, column: 58, scope: !4860, inlinedAt: !4764)
!4953 = !DILocation(line: 601, column: 56, scope: !4860, inlinedAt: !4764)
!4954 = !DILocation(line: 601, column: 24, scope: !4860, inlinedAt: !4764)
!4955 = !DILocation(line: 601, column: 24, scope: !4938, inlinedAt: !4764)
!4956 = !DILocation(line: 601, column: 72, scope: !4938, inlinedAt: !4764)
!4957 = !DILocation(line: 601, column: 70, scope: !4938, inlinedAt: !4764)
!4958 = !DILocation(line: 601, column: 19, scope: !4942, inlinedAt: !4764)
!4959 = !DILocation(line: 601, column: 13, scope: !4942, inlinedAt: !4764)
!4960 = !DILocation(line: 603, column: 12, scope: !4760, inlinedAt: !4764)
!4961 = !DILocation(line: 603, column: 20, scope: !4760, inlinedAt: !4764)
!4962 = !DILocation(line: 603, column: 23, scope: !4853, inlinedAt: !4764)
!4963 = !DILocation(line: 603, column: 20, scope: !4853, inlinedAt: !4764)
!4964 = !DILocation(line: 603, column: 20, scope: !4856, inlinedAt: !4764)
!4965 = !DILocation(line: 603, column: 5, scope: !4856, inlinedAt: !4764)
!4966 = !DILocation(line: 604, column: 1, scope: !4760, inlinedAt: !4764)
!4967 = !DILocation(line: 610, column: 5, scope: !4758)
!4968 = distinct !DISubprogram(name: "rv40_v_loop_filter_strength", scope: !16, file: !16, line: 613, type: !109, isLocal: true, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4969 = !DILocation(line: 570, column: 85, scope: !4760, inlinedAt: !4970)
!4970 = distinct !DILocation(line: 617, column: 12, scope: !4968)
!4971 = !DILocation(line: 571, column: 59, scope: !4760, inlinedAt: !4970)
!4972 = !DILocation(line: 571, column: 75, scope: !4760, inlinedAt: !4970)
!4973 = !DILocation(line: 572, column: 59, scope: !4760, inlinedAt: !4970)
!4974 = !DILocation(line: 572, column: 69, scope: !4760, inlinedAt: !4970)
!4975 = !DILocation(line: 573, column: 59, scope: !4760, inlinedAt: !4970)
!4976 = !DILocation(line: 574, column: 60, scope: !4760, inlinedAt: !4970)
!4977 = !DILocation(line: 574, column: 69, scope: !4760, inlinedAt: !4970)
!4978 = !DILocation(line: 576, column: 9, scope: !4760, inlinedAt: !4970)
!4979 = !DILocation(line: 576, column: 23, scope: !4760, inlinedAt: !4970)
!4980 = !DILocation(line: 576, column: 37, scope: !4760, inlinedAt: !4970)
!4981 = !DILocation(line: 576, column: 51, scope: !4760, inlinedAt: !4970)
!4982 = !DILocation(line: 577, column: 9, scope: !4760, inlinedAt: !4970)
!4983 = !DILocation(line: 577, column: 22, scope: !4760, inlinedAt: !4970)
!4984 = !DILocation(line: 578, column: 14, scope: !4760, inlinedAt: !4970)
!4985 = !DILocation(line: 579, column: 9, scope: !4760, inlinedAt: !4970)
!4986 = !DILocalVariable(name: "src", arg: 1, scope: !4968, file: !16, line: 613, type: !48)
!4987 = !DILocation(line: 613, column: 49, scope: !4968)
!4988 = !DILocalVariable(name: "stride", arg: 2, scope: !4968, file: !16, line: 613, type: !50)
!4989 = !DILocation(line: 613, column: 64, scope: !4968)
!4990 = !DILocalVariable(name: "beta", arg: 3, scope: !4968, file: !16, line: 614, type: !19)
!4991 = !DILocation(line: 614, column: 44, scope: !4968)
!4992 = !DILocalVariable(name: "beta2", arg: 4, scope: !4968, file: !16, line: 614, type: !19)
!4993 = !DILocation(line: 614, column: 54, scope: !4968)
!4994 = !DILocalVariable(name: "edge", arg: 5, scope: !4968, file: !16, line: 614, type: !19)
!4995 = !DILocation(line: 614, column: 65, scope: !4968)
!4996 = !DILocalVariable(name: "p1", arg: 6, scope: !4968, file: !16, line: 615, type: !111)
!4997 = !DILocation(line: 615, column: 45, scope: !4968)
!4998 = !DILocalVariable(name: "q1", arg: 7, scope: !4968, file: !16, line: 615, type: !111)
!4999 = !DILocation(line: 615, column: 54, scope: !4968)
!5000 = !DILocation(line: 617, column: 38, scope: !4968)
!5001 = !DILocation(line: 617, column: 46, scope: !4968)
!5002 = !DILocation(line: 617, column: 54, scope: !4968)
!5003 = !DILocation(line: 617, column: 60, scope: !4968)
!5004 = !DILocation(line: 617, column: 67, scope: !4968)
!5005 = !DILocation(line: 617, column: 73, scope: !4968)
!5006 = !DILocation(line: 617, column: 77, scope: !4968)
!5007 = !DILocation(line: 617, column: 12, scope: !4968)
!5008 = !DILocation(line: 581, column: 12, scope: !4818, inlinedAt: !4970)
!5009 = !DILocation(line: 581, column: 23, scope: !4818, inlinedAt: !4970)
!5010 = !DILocation(line: 581, column: 21, scope: !4818, inlinedAt: !4970)
!5011 = !DILocation(line: 581, column: 10, scope: !4818, inlinedAt: !4970)
!5012 = !DILocation(line: 581, column: 28, scope: !4823, inlinedAt: !4970)
!5013 = !DILocation(line: 581, column: 30, scope: !4823, inlinedAt: !4970)
!5014 = !DILocation(line: 581, column: 5, scope: !4823, inlinedAt: !4970)
!5015 = !DILocation(line: 582, column: 28, scope: !4828, inlinedAt: !4970)
!5016 = !DILocation(line: 582, column: 27, scope: !4828, inlinedAt: !4970)
!5017 = !DILocation(line: 582, column: 21, scope: !4828, inlinedAt: !4970)
!5018 = !DILocation(line: 582, column: 43, scope: !4828, inlinedAt: !4970)
!5019 = !DILocation(line: 582, column: 42, scope: !4828, inlinedAt: !4970)
!5020 = !DILocation(line: 582, column: 36, scope: !4828, inlinedAt: !4970)
!5021 = !DILocation(line: 582, column: 34, scope: !4828, inlinedAt: !4970)
!5022 = !DILocation(line: 582, column: 18, scope: !4828, inlinedAt: !4970)
!5023 = !DILocation(line: 583, column: 28, scope: !4828, inlinedAt: !4970)
!5024 = !DILocation(line: 583, column: 21, scope: !4828, inlinedAt: !4970)
!5025 = !DILocation(line: 583, column: 43, scope: !4828, inlinedAt: !4970)
!5026 = !DILocation(line: 583, column: 36, scope: !4828, inlinedAt: !4970)
!5027 = !DILocation(line: 583, column: 34, scope: !4828, inlinedAt: !4970)
!5028 = !DILocation(line: 583, column: 18, scope: !4828, inlinedAt: !4970)
!5029 = !DILocation(line: 581, column: 36, scope: !4843, inlinedAt: !4970)
!5030 = !DILocation(line: 581, column: 47, scope: !4843, inlinedAt: !4970)
!5031 = !DILocation(line: 581, column: 44, scope: !4843, inlinedAt: !4970)
!5032 = !DILocation(line: 581, column: 5, scope: !4843, inlinedAt: !4970)
!5033 = !DILocation(line: 586, column: 13, scope: !4760, inlinedAt: !4970)
!5034 = !DILocation(line: 586, column: 23, scope: !4760, inlinedAt: !4970)
!5035 = !DILocation(line: 586, column: 12, scope: !4760, inlinedAt: !4970)
!5036 = !DILocation(line: 586, column: 31, scope: !4853, inlinedAt: !4970)
!5037 = !DILocation(line: 586, column: 12, scope: !4853, inlinedAt: !4970)
!5038 = !DILocation(line: 586, column: 46, scope: !4856, inlinedAt: !4970)
!5039 = !DILocation(line: 586, column: 44, scope: !4856, inlinedAt: !4970)
!5040 = !DILocation(line: 586, column: 12, scope: !4856, inlinedAt: !4970)
!5041 = !DILocation(line: 586, column: 12, scope: !4860, inlinedAt: !4970)
!5042 = !DILocation(line: 586, column: 61, scope: !4860, inlinedAt: !4970)
!5043 = !DILocation(line: 586, column: 66, scope: !4860, inlinedAt: !4970)
!5044 = !DILocation(line: 586, column: 58, scope: !4860, inlinedAt: !4970)
!5045 = !DILocation(line: 586, column: 6, scope: !4860, inlinedAt: !4970)
!5046 = !DILocation(line: 586, column: 9, scope: !4860, inlinedAt: !4970)
!5047 = !DILocation(line: 587, column: 13, scope: !4760, inlinedAt: !4970)
!5048 = !DILocation(line: 587, column: 23, scope: !4760, inlinedAt: !4970)
!5049 = !DILocation(line: 587, column: 12, scope: !4760, inlinedAt: !4970)
!5050 = !DILocation(line: 587, column: 31, scope: !4853, inlinedAt: !4970)
!5051 = !DILocation(line: 587, column: 12, scope: !4853, inlinedAt: !4970)
!5052 = !DILocation(line: 587, column: 46, scope: !4856, inlinedAt: !4970)
!5053 = !DILocation(line: 587, column: 44, scope: !4856, inlinedAt: !4970)
!5054 = !DILocation(line: 587, column: 12, scope: !4856, inlinedAt: !4970)
!5055 = !DILocation(line: 587, column: 12, scope: !4860, inlinedAt: !4970)
!5056 = !DILocation(line: 587, column: 61, scope: !4860, inlinedAt: !4970)
!5057 = !DILocation(line: 587, column: 66, scope: !4860, inlinedAt: !4970)
!5058 = !DILocation(line: 587, column: 58, scope: !4860, inlinedAt: !4970)
!5059 = !DILocation(line: 587, column: 6, scope: !4860, inlinedAt: !4970)
!5060 = !DILocation(line: 587, column: 9, scope: !4860, inlinedAt: !4970)
!5061 = !DILocation(line: 589, column: 10, scope: !4881, inlinedAt: !4970)
!5062 = !DILocation(line: 589, column: 9, scope: !4881, inlinedAt: !4970)
!5063 = !DILocation(line: 589, column: 13, scope: !4881, inlinedAt: !4970)
!5064 = !DILocation(line: 589, column: 18, scope: !4885, inlinedAt: !4970)
!5065 = !DILocation(line: 589, column: 17, scope: !4885, inlinedAt: !4970)
!5066 = !DILocation(line: 589, column: 8, scope: !4885, inlinedAt: !4970)
!5067 = !DILocation(line: 590, column: 9, scope: !4881, inlinedAt: !4970)
!5068 = !DILocation(line: 592, column: 10, scope: !4890, inlinedAt: !4970)
!5069 = !DILocation(line: 592, column: 9, scope: !4760, inlinedAt: !4970)
!5070 = !DILocation(line: 593, column: 9, scope: !4890, inlinedAt: !4970)
!5071 = !DILocation(line: 595, column: 12, scope: !4894, inlinedAt: !4970)
!5072 = !DILocation(line: 595, column: 23, scope: !4894, inlinedAt: !4970)
!5073 = !DILocation(line: 595, column: 21, scope: !4894, inlinedAt: !4970)
!5074 = !DILocation(line: 595, column: 10, scope: !4894, inlinedAt: !4970)
!5075 = !DILocation(line: 595, column: 28, scope: !4899, inlinedAt: !4970)
!5076 = !DILocation(line: 595, column: 30, scope: !4899, inlinedAt: !4970)
!5077 = !DILocation(line: 595, column: 5, scope: !4899, inlinedAt: !4970)
!5078 = !DILocation(line: 596, column: 28, scope: !4904, inlinedAt: !4970)
!5079 = !DILocation(line: 596, column: 27, scope: !4904, inlinedAt: !4970)
!5080 = !DILocation(line: 596, column: 21, scope: !4904, inlinedAt: !4970)
!5081 = !DILocation(line: 596, column: 43, scope: !4904, inlinedAt: !4970)
!5082 = !DILocation(line: 596, column: 42, scope: !4904, inlinedAt: !4970)
!5083 = !DILocation(line: 596, column: 36, scope: !4904, inlinedAt: !4970)
!5084 = !DILocation(line: 596, column: 34, scope: !4904, inlinedAt: !4970)
!5085 = !DILocation(line: 596, column: 18, scope: !4904, inlinedAt: !4970)
!5086 = !DILocation(line: 597, column: 28, scope: !4904, inlinedAt: !4970)
!5087 = !DILocation(line: 597, column: 21, scope: !4904, inlinedAt: !4970)
!5088 = !DILocation(line: 597, column: 43, scope: !4904, inlinedAt: !4970)
!5089 = !DILocation(line: 597, column: 42, scope: !4904, inlinedAt: !4970)
!5090 = !DILocation(line: 597, column: 36, scope: !4904, inlinedAt: !4970)
!5091 = !DILocation(line: 597, column: 34, scope: !4904, inlinedAt: !4970)
!5092 = !DILocation(line: 597, column: 18, scope: !4904, inlinedAt: !4970)
!5093 = !DILocation(line: 595, column: 36, scope: !4920, inlinedAt: !4970)
!5094 = !DILocation(line: 595, column: 47, scope: !4920, inlinedAt: !4970)
!5095 = !DILocation(line: 595, column: 44, scope: !4920, inlinedAt: !4970)
!5096 = !DILocation(line: 595, column: 5, scope: !4920, inlinedAt: !4970)
!5097 = !DILocation(line: 600, column: 16, scope: !4760, inlinedAt: !4970)
!5098 = !DILocation(line: 600, column: 15, scope: !4760, inlinedAt: !4970)
!5099 = !DILocation(line: 600, column: 19, scope: !4760, inlinedAt: !4970)
!5100 = !DILocation(line: 600, column: 25, scope: !4853, inlinedAt: !4970)
!5101 = !DILocation(line: 600, column: 35, scope: !4853, inlinedAt: !4970)
!5102 = !DILocation(line: 600, column: 24, scope: !4853, inlinedAt: !4970)
!5103 = !DILocation(line: 600, column: 43, scope: !4856, inlinedAt: !4970)
!5104 = !DILocation(line: 600, column: 24, scope: !4856, inlinedAt: !4970)
!5105 = !DILocation(line: 600, column: 58, scope: !4860, inlinedAt: !4970)
!5106 = !DILocation(line: 600, column: 56, scope: !4860, inlinedAt: !4970)
!5107 = !DILocation(line: 600, column: 24, scope: !4860, inlinedAt: !4970)
!5108 = !DILocation(line: 600, column: 24, scope: !4938, inlinedAt: !4970)
!5109 = !DILocation(line: 600, column: 72, scope: !4938, inlinedAt: !4970)
!5110 = !DILocation(line: 600, column: 70, scope: !4938, inlinedAt: !4970)
!5111 = !DILocation(line: 600, column: 19, scope: !4942, inlinedAt: !4970)
!5112 = !DILocation(line: 600, column: 13, scope: !4942, inlinedAt: !4970)
!5113 = !DILocation(line: 601, column: 16, scope: !4760, inlinedAt: !4970)
!5114 = !DILocation(line: 601, column: 15, scope: !4760, inlinedAt: !4970)
!5115 = !DILocation(line: 601, column: 19, scope: !4760, inlinedAt: !4970)
!5116 = !DILocation(line: 601, column: 25, scope: !4853, inlinedAt: !4970)
!5117 = !DILocation(line: 601, column: 35, scope: !4853, inlinedAt: !4970)
!5118 = !DILocation(line: 601, column: 24, scope: !4853, inlinedAt: !4970)
!5119 = !DILocation(line: 601, column: 43, scope: !4856, inlinedAt: !4970)
!5120 = !DILocation(line: 601, column: 24, scope: !4856, inlinedAt: !4970)
!5121 = !DILocation(line: 601, column: 58, scope: !4860, inlinedAt: !4970)
!5122 = !DILocation(line: 601, column: 56, scope: !4860, inlinedAt: !4970)
!5123 = !DILocation(line: 601, column: 24, scope: !4860, inlinedAt: !4970)
!5124 = !DILocation(line: 601, column: 24, scope: !4938, inlinedAt: !4970)
!5125 = !DILocation(line: 601, column: 72, scope: !4938, inlinedAt: !4970)
!5126 = !DILocation(line: 601, column: 70, scope: !4938, inlinedAt: !4970)
!5127 = !DILocation(line: 601, column: 19, scope: !4942, inlinedAt: !4970)
!5128 = !DILocation(line: 601, column: 13, scope: !4942, inlinedAt: !4970)
!5129 = !DILocation(line: 603, column: 12, scope: !4760, inlinedAt: !4970)
!5130 = !DILocation(line: 603, column: 20, scope: !4760, inlinedAt: !4970)
!5131 = !DILocation(line: 603, column: 23, scope: !4853, inlinedAt: !4970)
!5132 = !DILocation(line: 603, column: 20, scope: !4853, inlinedAt: !4970)
!5133 = !DILocation(line: 603, column: 20, scope: !4856, inlinedAt: !4970)
!5134 = !DILocation(line: 603, column: 5, scope: !4856, inlinedAt: !4970)
!5135 = !DILocation(line: 604, column: 1, scope: !4760, inlinedAt: !4970)
!5136 = !DILocation(line: 617, column: 5, scope: !4968)
!5137 = distinct !DISubprogram(name: "put_rv40_qpel16_h_lowpass", scope: !16, file: !16, line: 199, type: !5138, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{null, !48, !49, !19, !19, !18, !18, !18, !18}
!5140 = !DILocalVariable(name: "dst", arg: 1, scope: !5137, file: !16, line: 199, type: !48)
!5141 = !DILocation(line: 199, column: 3197, scope: !5137)
!5142 = !DILocalVariable(name: "src", arg: 2, scope: !5137, file: !16, line: 199, type: !49)
!5143 = !DILocation(line: 199, column: 3217, scope: !5137)
!5144 = !DILocalVariable(name: "dstStride", arg: 3, scope: !5137, file: !16, line: 199, type: !19)
!5145 = !DILocation(line: 199, column: 3226, scope: !5137)
!5146 = !DILocalVariable(name: "srcStride", arg: 4, scope: !5137, file: !16, line: 199, type: !19)
!5147 = !DILocation(line: 199, column: 3241, scope: !5137)
!5148 = !DILocalVariable(name: "h", arg: 5, scope: !5137, file: !16, line: 199, type: !18)
!5149 = !DILocation(line: 199, column: 3262, scope: !5137)
!5150 = !DILocalVariable(name: "C1", arg: 6, scope: !5137, file: !16, line: 199, type: !18)
!5151 = !DILocation(line: 199, column: 3275, scope: !5137)
!5152 = !DILocalVariable(name: "C2", arg: 7, scope: !5137, file: !16, line: 199, type: !18)
!5153 = !DILocation(line: 199, column: 3289, scope: !5137)
!5154 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !5137, file: !16, line: 199, type: !18)
!5155 = !DILocation(line: 199, column: 3303, scope: !5137)
!5156 = !DILocation(line: 199, column: 3336, scope: !5137)
!5157 = !DILocation(line: 199, column: 3342, scope: !5137)
!5158 = !DILocation(line: 199, column: 3348, scope: !5137)
!5159 = !DILocation(line: 199, column: 3359, scope: !5137)
!5160 = !DILocation(line: 199, column: 3373, scope: !5137)
!5161 = !DILocation(line: 199, column: 3377, scope: !5137)
!5162 = !DILocation(line: 199, column: 3381, scope: !5137)
!5163 = !DILocation(line: 199, column: 3311, scope: !5137)
!5164 = !DILocation(line: 199, column: 3414, scope: !5137)
!5165 = !DILocation(line: 199, column: 3417, scope: !5137)
!5166 = !DILocation(line: 199, column: 3421, scope: !5137)
!5167 = !DILocation(line: 199, column: 3424, scope: !5137)
!5168 = !DILocation(line: 199, column: 3428, scope: !5137)
!5169 = !DILocation(line: 199, column: 3439, scope: !5137)
!5170 = !DILocation(line: 199, column: 3453, scope: !5137)
!5171 = !DILocation(line: 199, column: 3457, scope: !5137)
!5172 = !DILocation(line: 199, column: 3461, scope: !5137)
!5173 = !DILocation(line: 199, column: 3389, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !5137, file: !16, discriminator: 1)
!5175 = !DILocation(line: 199, column: 3478, scope: !5137)
!5176 = !DILocation(line: 199, column: 3477, scope: !5137)
!5177 = !DILocation(line: 199, column: 3473, scope: !5137)
!5178 = !DILocation(line: 199, column: 3498, scope: !5137)
!5179 = !DILocation(line: 199, column: 3497, scope: !5137)
!5180 = !DILocation(line: 199, column: 3493, scope: !5137)
!5181 = !DILocation(line: 199, column: 3534, scope: !5137)
!5182 = !DILocation(line: 199, column: 3540, scope: !5137)
!5183 = !DILocation(line: 199, column: 3546, scope: !5137)
!5184 = !DILocation(line: 199, column: 3557, scope: !5137)
!5185 = !DILocation(line: 199, column: 3568, scope: !5137)
!5186 = !DILocation(line: 199, column: 3569, scope: !5137)
!5187 = !DILocation(line: 199, column: 3573, scope: !5137)
!5188 = !DILocation(line: 199, column: 3577, scope: !5137)
!5189 = !DILocation(line: 199, column: 3581, scope: !5137)
!5190 = !DILocation(line: 199, column: 3509, scope: !5191)
!5191 = !DILexicalBlockFile(scope: !5137, file: !16, discriminator: 2)
!5192 = !DILocation(line: 199, column: 3614, scope: !5137)
!5193 = !DILocation(line: 199, column: 3617, scope: !5137)
!5194 = !DILocation(line: 199, column: 3621, scope: !5137)
!5195 = !DILocation(line: 199, column: 3624, scope: !5137)
!5196 = !DILocation(line: 199, column: 3628, scope: !5137)
!5197 = !DILocation(line: 199, column: 3639, scope: !5137)
!5198 = !DILocation(line: 199, column: 3650, scope: !5137)
!5199 = !DILocation(line: 199, column: 3651, scope: !5137)
!5200 = !DILocation(line: 199, column: 3655, scope: !5137)
!5201 = !DILocation(line: 199, column: 3659, scope: !5137)
!5202 = !DILocation(line: 199, column: 3663, scope: !5137)
!5203 = !DILocation(line: 199, column: 3589, scope: !5204)
!5204 = !DILexicalBlockFile(scope: !5137, file: !16, discriminator: 3)
!5205 = !DILocation(line: 199, column: 3670, scope: !5137)
!5206 = distinct !DISubprogram(name: "put_rv40_qpel8_h_lowpass", scope: !16, file: !16, line: 199, type: !5138, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5207 = !DILocalVariable(name: "dst", arg: 1, scope: !5206, file: !16, line: 199, type: !48)
!5208 = !DILocation(line: 199, column: 47, scope: !5206)
!5209 = !DILocalVariable(name: "src", arg: 2, scope: !5206, file: !16, line: 199, type: !49)
!5210 = !DILocation(line: 199, column: 67, scope: !5206)
!5211 = !DILocalVariable(name: "dstStride", arg: 3, scope: !5206, file: !16, line: 199, type: !19)
!5212 = !DILocation(line: 199, column: 76, scope: !5206)
!5213 = !DILocalVariable(name: "srcStride", arg: 4, scope: !5206, file: !16, line: 199, type: !19)
!5214 = !DILocation(line: 199, column: 91, scope: !5206)
!5215 = !DILocalVariable(name: "h", arg: 5, scope: !5206, file: !16, line: 199, type: !18)
!5216 = !DILocation(line: 199, column: 112, scope: !5206)
!5217 = !DILocalVariable(name: "C1", arg: 6, scope: !5206, file: !16, line: 199, type: !18)
!5218 = !DILocation(line: 199, column: 125, scope: !5206)
!5219 = !DILocalVariable(name: "C2", arg: 7, scope: !5206, file: !16, line: 199, type: !18)
!5220 = !DILocation(line: 199, column: 139, scope: !5206)
!5221 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !5206, file: !16, line: 199, type: !18)
!5222 = !DILocation(line: 199, column: 153, scope: !5206)
!5223 = !DILocalVariable(name: "cm", scope: !5206, file: !16, line: 199, type: !49)
!5224 = !DILocation(line: 199, column: 176, scope: !5206)
!5225 = !DILocalVariable(name: "i", scope: !5206, file: !16, line: 199, type: !19)
!5226 = !DILocation(line: 199, column: 205, scope: !5206)
!5227 = !DILocation(line: 199, column: 214, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5206, file: !16, line: 199, column: 208)
!5229 = !DILocation(line: 199, column: 212, scope: !5228)
!5230 = !DILocation(line: 199, column: 219, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5232, file: !16, discriminator: 1)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !16, line: 199, column: 208)
!5233 = !DILocation(line: 199, column: 223, scope: !5231)
!5234 = !DILocation(line: 199, column: 221, scope: !5231)
!5235 = !DILocation(line: 199, column: 208, scope: !5231)
!5236 = !DILocation(line: 199, column: 246, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !5238, file: !16, discriminator: 2)
!5238 = distinct !DILexicalBlock(scope: !5232, file: !16, line: 199, column: 231)
!5239 = !DILocation(line: 199, column: 256, scope: !5237)
!5240 = !DILocation(line: 199, column: 254, scope: !5237)
!5241 = !DILocation(line: 199, column: 269, scope: !5237)
!5242 = !DILocation(line: 199, column: 277, scope: !5237)
!5243 = !DILocation(line: 199, column: 276, scope: !5237)
!5244 = !DILocation(line: 199, column: 267, scope: !5237)
!5245 = !DILocation(line: 199, column: 264, scope: !5237)
!5246 = !DILocation(line: 199, column: 287, scope: !5237)
!5247 = !DILocation(line: 199, column: 294, scope: !5237)
!5248 = !DILocation(line: 199, column: 293, scope: !5237)
!5249 = !DILocation(line: 199, column: 285, scope: !5237)
!5250 = !DILocation(line: 199, column: 299, scope: !5237)
!5251 = !DILocation(line: 199, column: 306, scope: !5237)
!5252 = !DILocation(line: 199, column: 305, scope: !5237)
!5253 = !DILocation(line: 199, column: 297, scope: !5237)
!5254 = !DILocation(line: 199, column: 316, scope: !5237)
!5255 = !DILocation(line: 199, column: 321, scope: !5237)
!5256 = !DILocation(line: 199, column: 313, scope: !5237)
!5257 = !DILocation(line: 199, column: 309, scope: !5237)
!5258 = !DILocation(line: 199, column: 330, scope: !5237)
!5259 = !DILocation(line: 199, column: 327, scope: !5237)
!5260 = !DILocation(line: 199, column: 242, scope: !5237)
!5261 = !DILocation(line: 199, column: 233, scope: !5237)
!5262 = !DILocation(line: 199, column: 240, scope: !5237)
!5263 = !DILocation(line: 199, column: 351, scope: !5237)
!5264 = !DILocation(line: 199, column: 361, scope: !5237)
!5265 = !DILocation(line: 199, column: 359, scope: !5237)
!5266 = !DILocation(line: 199, column: 374, scope: !5237)
!5267 = !DILocation(line: 199, column: 382, scope: !5237)
!5268 = !DILocation(line: 199, column: 381, scope: !5237)
!5269 = !DILocation(line: 199, column: 372, scope: !5237)
!5270 = !DILocation(line: 199, column: 369, scope: !5237)
!5271 = !DILocation(line: 199, column: 392, scope: !5237)
!5272 = !DILocation(line: 199, column: 399, scope: !5237)
!5273 = !DILocation(line: 199, column: 398, scope: !5237)
!5274 = !DILocation(line: 199, column: 390, scope: !5237)
!5275 = !DILocation(line: 199, column: 404, scope: !5237)
!5276 = !DILocation(line: 199, column: 411, scope: !5237)
!5277 = !DILocation(line: 199, column: 410, scope: !5237)
!5278 = !DILocation(line: 199, column: 402, scope: !5237)
!5279 = !DILocation(line: 199, column: 421, scope: !5237)
!5280 = !DILocation(line: 199, column: 426, scope: !5237)
!5281 = !DILocation(line: 199, column: 418, scope: !5237)
!5282 = !DILocation(line: 199, column: 414, scope: !5237)
!5283 = !DILocation(line: 199, column: 435, scope: !5237)
!5284 = !DILocation(line: 199, column: 432, scope: !5237)
!5285 = !DILocation(line: 199, column: 347, scope: !5237)
!5286 = !DILocation(line: 199, column: 338, scope: !5237)
!5287 = !DILocation(line: 199, column: 345, scope: !5237)
!5288 = !DILocation(line: 199, column: 456, scope: !5237)
!5289 = !DILocation(line: 199, column: 466, scope: !5237)
!5290 = !DILocation(line: 199, column: 464, scope: !5237)
!5291 = !DILocation(line: 199, column: 479, scope: !5237)
!5292 = !DILocation(line: 199, column: 487, scope: !5237)
!5293 = !DILocation(line: 199, column: 486, scope: !5237)
!5294 = !DILocation(line: 199, column: 477, scope: !5237)
!5295 = !DILocation(line: 199, column: 474, scope: !5237)
!5296 = !DILocation(line: 199, column: 497, scope: !5237)
!5297 = !DILocation(line: 199, column: 504, scope: !5237)
!5298 = !DILocation(line: 199, column: 503, scope: !5237)
!5299 = !DILocation(line: 199, column: 495, scope: !5237)
!5300 = !DILocation(line: 199, column: 509, scope: !5237)
!5301 = !DILocation(line: 199, column: 516, scope: !5237)
!5302 = !DILocation(line: 199, column: 515, scope: !5237)
!5303 = !DILocation(line: 199, column: 507, scope: !5237)
!5304 = !DILocation(line: 199, column: 526, scope: !5237)
!5305 = !DILocation(line: 199, column: 531, scope: !5237)
!5306 = !DILocation(line: 199, column: 523, scope: !5237)
!5307 = !DILocation(line: 199, column: 519, scope: !5237)
!5308 = !DILocation(line: 199, column: 540, scope: !5237)
!5309 = !DILocation(line: 199, column: 537, scope: !5237)
!5310 = !DILocation(line: 199, column: 452, scope: !5237)
!5311 = !DILocation(line: 199, column: 443, scope: !5237)
!5312 = !DILocation(line: 199, column: 450, scope: !5237)
!5313 = !DILocation(line: 199, column: 561, scope: !5237)
!5314 = !DILocation(line: 199, column: 571, scope: !5237)
!5315 = !DILocation(line: 199, column: 569, scope: !5237)
!5316 = !DILocation(line: 199, column: 584, scope: !5237)
!5317 = !DILocation(line: 199, column: 592, scope: !5237)
!5318 = !DILocation(line: 199, column: 591, scope: !5237)
!5319 = !DILocation(line: 199, column: 582, scope: !5237)
!5320 = !DILocation(line: 199, column: 579, scope: !5237)
!5321 = !DILocation(line: 199, column: 602, scope: !5237)
!5322 = !DILocation(line: 199, column: 609, scope: !5237)
!5323 = !DILocation(line: 199, column: 608, scope: !5237)
!5324 = !DILocation(line: 199, column: 600, scope: !5237)
!5325 = !DILocation(line: 199, column: 614, scope: !5237)
!5326 = !DILocation(line: 199, column: 621, scope: !5237)
!5327 = !DILocation(line: 199, column: 620, scope: !5237)
!5328 = !DILocation(line: 199, column: 612, scope: !5237)
!5329 = !DILocation(line: 199, column: 631, scope: !5237)
!5330 = !DILocation(line: 199, column: 636, scope: !5237)
!5331 = !DILocation(line: 199, column: 628, scope: !5237)
!5332 = !DILocation(line: 199, column: 624, scope: !5237)
!5333 = !DILocation(line: 199, column: 645, scope: !5237)
!5334 = !DILocation(line: 199, column: 642, scope: !5237)
!5335 = !DILocation(line: 199, column: 557, scope: !5237)
!5336 = !DILocation(line: 199, column: 548, scope: !5237)
!5337 = !DILocation(line: 199, column: 555, scope: !5237)
!5338 = !DILocation(line: 199, column: 666, scope: !5237)
!5339 = !DILocation(line: 199, column: 676, scope: !5237)
!5340 = !DILocation(line: 199, column: 674, scope: !5237)
!5341 = !DILocation(line: 199, column: 689, scope: !5237)
!5342 = !DILocation(line: 199, column: 697, scope: !5237)
!5343 = !DILocation(line: 199, column: 696, scope: !5237)
!5344 = !DILocation(line: 199, column: 687, scope: !5237)
!5345 = !DILocation(line: 199, column: 684, scope: !5237)
!5346 = !DILocation(line: 199, column: 707, scope: !5237)
!5347 = !DILocation(line: 199, column: 714, scope: !5237)
!5348 = !DILocation(line: 199, column: 713, scope: !5237)
!5349 = !DILocation(line: 199, column: 705, scope: !5237)
!5350 = !DILocation(line: 199, column: 719, scope: !5237)
!5351 = !DILocation(line: 199, column: 726, scope: !5237)
!5352 = !DILocation(line: 199, column: 725, scope: !5237)
!5353 = !DILocation(line: 199, column: 717, scope: !5237)
!5354 = !DILocation(line: 199, column: 736, scope: !5237)
!5355 = !DILocation(line: 199, column: 741, scope: !5237)
!5356 = !DILocation(line: 199, column: 733, scope: !5237)
!5357 = !DILocation(line: 199, column: 729, scope: !5237)
!5358 = !DILocation(line: 199, column: 750, scope: !5237)
!5359 = !DILocation(line: 199, column: 747, scope: !5237)
!5360 = !DILocation(line: 199, column: 662, scope: !5237)
!5361 = !DILocation(line: 199, column: 653, scope: !5237)
!5362 = !DILocation(line: 199, column: 660, scope: !5237)
!5363 = !DILocation(line: 199, column: 771, scope: !5237)
!5364 = !DILocation(line: 199, column: 781, scope: !5237)
!5365 = !DILocation(line: 199, column: 779, scope: !5237)
!5366 = !DILocation(line: 199, column: 794, scope: !5237)
!5367 = !DILocation(line: 199, column: 802, scope: !5237)
!5368 = !DILocation(line: 199, column: 801, scope: !5237)
!5369 = !DILocation(line: 199, column: 792, scope: !5237)
!5370 = !DILocation(line: 199, column: 789, scope: !5237)
!5371 = !DILocation(line: 199, column: 812, scope: !5237)
!5372 = !DILocation(line: 199, column: 819, scope: !5237)
!5373 = !DILocation(line: 199, column: 818, scope: !5237)
!5374 = !DILocation(line: 199, column: 810, scope: !5237)
!5375 = !DILocation(line: 199, column: 824, scope: !5237)
!5376 = !DILocation(line: 199, column: 831, scope: !5237)
!5377 = !DILocation(line: 199, column: 830, scope: !5237)
!5378 = !DILocation(line: 199, column: 822, scope: !5237)
!5379 = !DILocation(line: 199, column: 841, scope: !5237)
!5380 = !DILocation(line: 199, column: 846, scope: !5237)
!5381 = !DILocation(line: 199, column: 838, scope: !5237)
!5382 = !DILocation(line: 199, column: 834, scope: !5237)
!5383 = !DILocation(line: 199, column: 855, scope: !5237)
!5384 = !DILocation(line: 199, column: 852, scope: !5237)
!5385 = !DILocation(line: 199, column: 767, scope: !5237)
!5386 = !DILocation(line: 199, column: 758, scope: !5237)
!5387 = !DILocation(line: 199, column: 765, scope: !5237)
!5388 = !DILocation(line: 199, column: 876, scope: !5237)
!5389 = !DILocation(line: 199, column: 886, scope: !5237)
!5390 = !DILocation(line: 199, column: 884, scope: !5237)
!5391 = !DILocation(line: 199, column: 899, scope: !5237)
!5392 = !DILocation(line: 199, column: 907, scope: !5237)
!5393 = !DILocation(line: 199, column: 906, scope: !5237)
!5394 = !DILocation(line: 199, column: 897, scope: !5237)
!5395 = !DILocation(line: 199, column: 894, scope: !5237)
!5396 = !DILocation(line: 199, column: 917, scope: !5237)
!5397 = !DILocation(line: 199, column: 924, scope: !5237)
!5398 = !DILocation(line: 199, column: 923, scope: !5237)
!5399 = !DILocation(line: 199, column: 915, scope: !5237)
!5400 = !DILocation(line: 199, column: 929, scope: !5237)
!5401 = !DILocation(line: 199, column: 936, scope: !5237)
!5402 = !DILocation(line: 199, column: 935, scope: !5237)
!5403 = !DILocation(line: 199, column: 927, scope: !5237)
!5404 = !DILocation(line: 199, column: 946, scope: !5237)
!5405 = !DILocation(line: 199, column: 951, scope: !5237)
!5406 = !DILocation(line: 199, column: 943, scope: !5237)
!5407 = !DILocation(line: 199, column: 939, scope: !5237)
!5408 = !DILocation(line: 199, column: 960, scope: !5237)
!5409 = !DILocation(line: 199, column: 957, scope: !5237)
!5410 = !DILocation(line: 199, column: 872, scope: !5237)
!5411 = !DILocation(line: 199, column: 863, scope: !5237)
!5412 = !DILocation(line: 199, column: 870, scope: !5237)
!5413 = !DILocation(line: 199, column: 981, scope: !5237)
!5414 = !DILocation(line: 199, column: 991, scope: !5237)
!5415 = !DILocation(line: 199, column: 989, scope: !5237)
!5416 = !DILocation(line: 199, column: 1004, scope: !5237)
!5417 = !DILocation(line: 199, column: 1012, scope: !5237)
!5418 = !DILocation(line: 199, column: 1011, scope: !5237)
!5419 = !DILocation(line: 199, column: 1002, scope: !5237)
!5420 = !DILocation(line: 199, column: 999, scope: !5237)
!5421 = !DILocation(line: 199, column: 1022, scope: !5237)
!5422 = !DILocation(line: 199, column: 1029, scope: !5237)
!5423 = !DILocation(line: 199, column: 1028, scope: !5237)
!5424 = !DILocation(line: 199, column: 1020, scope: !5237)
!5425 = !DILocation(line: 199, column: 1034, scope: !5237)
!5426 = !DILocation(line: 199, column: 1041, scope: !5237)
!5427 = !DILocation(line: 199, column: 1040, scope: !5237)
!5428 = !DILocation(line: 199, column: 1032, scope: !5237)
!5429 = !DILocation(line: 199, column: 1051, scope: !5237)
!5430 = !DILocation(line: 199, column: 1056, scope: !5237)
!5431 = !DILocation(line: 199, column: 1048, scope: !5237)
!5432 = !DILocation(line: 199, column: 1044, scope: !5237)
!5433 = !DILocation(line: 199, column: 1065, scope: !5237)
!5434 = !DILocation(line: 199, column: 1062, scope: !5237)
!5435 = !DILocation(line: 199, column: 977, scope: !5237)
!5436 = !DILocation(line: 199, column: 968, scope: !5237)
!5437 = !DILocation(line: 199, column: 975, scope: !5237)
!5438 = !DILocation(line: 199, column: 1080, scope: !5237)
!5439 = !DILocation(line: 199, column: 1077, scope: !5237)
!5440 = !DILocation(line: 199, column: 1098, scope: !5237)
!5441 = !DILocation(line: 199, column: 1095, scope: !5237)
!5442 = !DILocation(line: 199, column: 1109, scope: !5237)
!5443 = !DILocation(line: 199, column: 227, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5232, file: !16, discriminator: 3)
!5445 = !DILocation(line: 199, column: 208, scope: !5444)
!5446 = distinct !{!5446, !5447}
!5447 = !DILocation(line: 199, column: 208, scope: !5206)
!5448 = !DILocation(line: 199, column: 1110, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !5206, file: !16, discriminator: 4)
!5450 = distinct !DISubprogram(name: "put_rv40_qpel16_v_lowpass", scope: !16, file: !16, line: 199, type: !5138, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5451 = !DILocalVariable(name: "dst", arg: 1, scope: !5450, file: !16, line: 199, type: !48)
!5452 = !DILocation(line: 199, column: 2676, scope: !5450)
!5453 = !DILocalVariable(name: "src", arg: 2, scope: !5450, file: !16, line: 199, type: !49)
!5454 = !DILocation(line: 199, column: 2696, scope: !5450)
!5455 = !DILocalVariable(name: "dstStride", arg: 3, scope: !5450, file: !16, line: 199, type: !19)
!5456 = !DILocation(line: 199, column: 2705, scope: !5450)
!5457 = !DILocalVariable(name: "srcStride", arg: 4, scope: !5450, file: !16, line: 199, type: !19)
!5458 = !DILocation(line: 199, column: 2720, scope: !5450)
!5459 = !DILocalVariable(name: "w", arg: 5, scope: !5450, file: !16, line: 199, type: !18)
!5460 = !DILocation(line: 199, column: 2741, scope: !5450)
!5461 = !DILocalVariable(name: "C1", arg: 6, scope: !5450, file: !16, line: 199, type: !18)
!5462 = !DILocation(line: 199, column: 2754, scope: !5450)
!5463 = !DILocalVariable(name: "C2", arg: 7, scope: !5450, file: !16, line: 199, type: !18)
!5464 = !DILocation(line: 199, column: 2768, scope: !5450)
!5465 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !5450, file: !16, line: 199, type: !18)
!5466 = !DILocation(line: 199, column: 2782, scope: !5450)
!5467 = !DILocation(line: 199, column: 2815, scope: !5450)
!5468 = !DILocation(line: 199, column: 2821, scope: !5450)
!5469 = !DILocation(line: 199, column: 2827, scope: !5450)
!5470 = !DILocation(line: 199, column: 2838, scope: !5450)
!5471 = !DILocation(line: 199, column: 2852, scope: !5450)
!5472 = !DILocation(line: 199, column: 2856, scope: !5450)
!5473 = !DILocation(line: 199, column: 2860, scope: !5450)
!5474 = !DILocation(line: 199, column: 2790, scope: !5450)
!5475 = !DILocation(line: 199, column: 2893, scope: !5450)
!5476 = !DILocation(line: 199, column: 2896, scope: !5450)
!5477 = !DILocation(line: 199, column: 2900, scope: !5450)
!5478 = !DILocation(line: 199, column: 2903, scope: !5450)
!5479 = !DILocation(line: 199, column: 2907, scope: !5450)
!5480 = !DILocation(line: 199, column: 2918, scope: !5450)
!5481 = !DILocation(line: 199, column: 2932, scope: !5450)
!5482 = !DILocation(line: 199, column: 2936, scope: !5450)
!5483 = !DILocation(line: 199, column: 2940, scope: !5450)
!5484 = !DILocation(line: 199, column: 2868, scope: !5485)
!5485 = !DILexicalBlockFile(scope: !5450, file: !16, discriminator: 1)
!5486 = !DILocation(line: 199, column: 2957, scope: !5450)
!5487 = !DILocation(line: 199, column: 2956, scope: !5450)
!5488 = !DILocation(line: 199, column: 2952, scope: !5450)
!5489 = !DILocation(line: 199, column: 2977, scope: !5450)
!5490 = !DILocation(line: 199, column: 2976, scope: !5450)
!5491 = !DILocation(line: 199, column: 2972, scope: !5450)
!5492 = !DILocation(line: 199, column: 3013, scope: !5450)
!5493 = !DILocation(line: 199, column: 3019, scope: !5450)
!5494 = !DILocation(line: 199, column: 3025, scope: !5450)
!5495 = !DILocation(line: 199, column: 3036, scope: !5450)
!5496 = !DILocation(line: 199, column: 3047, scope: !5450)
!5497 = !DILocation(line: 199, column: 3048, scope: !5450)
!5498 = !DILocation(line: 199, column: 3052, scope: !5450)
!5499 = !DILocation(line: 199, column: 3056, scope: !5450)
!5500 = !DILocation(line: 199, column: 3060, scope: !5450)
!5501 = !DILocation(line: 199, column: 2988, scope: !5502)
!5502 = !DILexicalBlockFile(scope: !5450, file: !16, discriminator: 2)
!5503 = !DILocation(line: 199, column: 3093, scope: !5450)
!5504 = !DILocation(line: 199, column: 3096, scope: !5450)
!5505 = !DILocation(line: 199, column: 3100, scope: !5450)
!5506 = !DILocation(line: 199, column: 3103, scope: !5450)
!5507 = !DILocation(line: 199, column: 3107, scope: !5450)
!5508 = !DILocation(line: 199, column: 3118, scope: !5450)
!5509 = !DILocation(line: 199, column: 3129, scope: !5450)
!5510 = !DILocation(line: 199, column: 3130, scope: !5450)
!5511 = !DILocation(line: 199, column: 3134, scope: !5450)
!5512 = !DILocation(line: 199, column: 3138, scope: !5450)
!5513 = !DILocation(line: 199, column: 3142, scope: !5450)
!5514 = !DILocation(line: 199, column: 3068, scope: !5515)
!5515 = !DILexicalBlockFile(scope: !5450, file: !16, discriminator: 3)
!5516 = !DILocation(line: 199, column: 3149, scope: !5450)
!5517 = distinct !DISubprogram(name: "put_rv40_qpel8_v_lowpass", scope: !16, file: !16, line: 199, type: !5138, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5518 = !DILocalVariable(name: "dst", arg: 1, scope: !5517, file: !16, line: 199, type: !48)
!5519 = !DILocation(line: 199, column: 1157, scope: !5517)
!5520 = !DILocalVariable(name: "src", arg: 2, scope: !5517, file: !16, line: 199, type: !49)
!5521 = !DILocation(line: 199, column: 1177, scope: !5517)
!5522 = !DILocalVariable(name: "dstStride", arg: 3, scope: !5517, file: !16, line: 199, type: !19)
!5523 = !DILocation(line: 199, column: 1186, scope: !5517)
!5524 = !DILocalVariable(name: "srcStride", arg: 4, scope: !5517, file: !16, line: 199, type: !19)
!5525 = !DILocation(line: 199, column: 1201, scope: !5517)
!5526 = !DILocalVariable(name: "w", arg: 5, scope: !5517, file: !16, line: 199, type: !18)
!5527 = !DILocation(line: 199, column: 1222, scope: !5517)
!5528 = !DILocalVariable(name: "C1", arg: 6, scope: !5517, file: !16, line: 199, type: !18)
!5529 = !DILocation(line: 199, column: 1235, scope: !5517)
!5530 = !DILocalVariable(name: "C2", arg: 7, scope: !5517, file: !16, line: 199, type: !18)
!5531 = !DILocation(line: 199, column: 1249, scope: !5517)
!5532 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !5517, file: !16, line: 199, type: !18)
!5533 = !DILocation(line: 199, column: 1263, scope: !5517)
!5534 = !DILocalVariable(name: "cm", scope: !5517, file: !16, line: 199, type: !49)
!5535 = !DILocation(line: 199, column: 1286, scope: !5517)
!5536 = !DILocalVariable(name: "i", scope: !5517, file: !16, line: 199, type: !19)
!5537 = !DILocation(line: 199, column: 1315, scope: !5517)
!5538 = !DILocation(line: 199, column: 1324, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5517, file: !16, line: 199, column: 1318)
!5540 = !DILocation(line: 199, column: 1322, scope: !5539)
!5541 = !DILocation(line: 199, column: 1329, scope: !5542)
!5542 = !DILexicalBlockFile(scope: !5543, file: !16, discriminator: 1)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !16, line: 199, column: 1318)
!5544 = !DILocation(line: 199, column: 1333, scope: !5542)
!5545 = !DILocation(line: 199, column: 1331, scope: !5542)
!5546 = !DILocation(line: 199, column: 1318, scope: !5542)
!5547 = !DILocalVariable(name: "srcB", scope: !5548, file: !16, line: 199, type: !18)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !16, line: 199, column: 1341)
!5549 = !DILocation(line: 199, column: 1353, scope: !5548)
!5550 = !DILocation(line: 199, column: 1367, scope: !5551)
!5551 = !DILexicalBlockFile(scope: !5548, file: !16, discriminator: 2)
!5552 = !DILocation(line: 199, column: 1366, scope: !5551)
!5553 = !DILocation(line: 199, column: 1360, scope: !5551)
!5554 = !DILocation(line: 199, column: 1353, scope: !5551)
!5555 = !DILocalVariable(name: "srcA", scope: !5548, file: !16, line: 199, type: !18)
!5556 = !DILocation(line: 199, column: 1389, scope: !5548)
!5557 = !DILocation(line: 199, column: 1403, scope: !5551)
!5558 = !DILocation(line: 199, column: 1402, scope: !5551)
!5559 = !DILocation(line: 199, column: 1396, scope: !5551)
!5560 = !DILocation(line: 199, column: 1389, scope: !5551)
!5561 = !DILocalVariable(name: "src0", scope: !5548, file: !16, line: 199, type: !18)
!5562 = !DILocation(line: 199, column: 1425, scope: !5548)
!5563 = !DILocation(line: 199, column: 1439, scope: !5551)
!5564 = !DILocation(line: 199, column: 1438, scope: !5551)
!5565 = !DILocation(line: 199, column: 1432, scope: !5551)
!5566 = !DILocation(line: 199, column: 1425, scope: !5551)
!5567 = !DILocalVariable(name: "src1", scope: !5548, file: !16, line: 199, type: !18)
!5568 = !DILocation(line: 199, column: 1461, scope: !5548)
!5569 = !DILocation(line: 199, column: 1475, scope: !5551)
!5570 = !DILocation(line: 199, column: 1474, scope: !5551)
!5571 = !DILocation(line: 199, column: 1468, scope: !5551)
!5572 = !DILocation(line: 199, column: 1461, scope: !5551)
!5573 = !DILocalVariable(name: "src2", scope: !5548, file: !16, line: 199, type: !18)
!5574 = !DILocation(line: 199, column: 1497, scope: !5548)
!5575 = !DILocation(line: 199, column: 1511, scope: !5551)
!5576 = !DILocation(line: 199, column: 1510, scope: !5551)
!5577 = !DILocation(line: 199, column: 1504, scope: !5551)
!5578 = !DILocation(line: 199, column: 1497, scope: !5551)
!5579 = !DILocalVariable(name: "src3", scope: !5548, file: !16, line: 199, type: !18)
!5580 = !DILocation(line: 199, column: 1533, scope: !5548)
!5581 = !DILocation(line: 199, column: 1547, scope: !5551)
!5582 = !DILocation(line: 199, column: 1546, scope: !5551)
!5583 = !DILocation(line: 199, column: 1540, scope: !5551)
!5584 = !DILocation(line: 199, column: 1533, scope: !5551)
!5585 = !DILocalVariable(name: "src4", scope: !5548, file: !16, line: 199, type: !18)
!5586 = !DILocation(line: 199, column: 1569, scope: !5548)
!5587 = !DILocation(line: 199, column: 1583, scope: !5551)
!5588 = !DILocation(line: 199, column: 1582, scope: !5551)
!5589 = !DILocation(line: 199, column: 1576, scope: !5551)
!5590 = !DILocation(line: 199, column: 1569, scope: !5551)
!5591 = !DILocalVariable(name: "src5", scope: !5548, file: !16, line: 199, type: !18)
!5592 = !DILocation(line: 199, column: 1605, scope: !5548)
!5593 = !DILocation(line: 199, column: 1619, scope: !5551)
!5594 = !DILocation(line: 199, column: 1618, scope: !5551)
!5595 = !DILocation(line: 199, column: 1612, scope: !5551)
!5596 = !DILocation(line: 199, column: 1605, scope: !5551)
!5597 = !DILocalVariable(name: "src6", scope: !5548, file: !16, line: 199, type: !18)
!5598 = !DILocation(line: 199, column: 1641, scope: !5548)
!5599 = !DILocation(line: 199, column: 1655, scope: !5551)
!5600 = !DILocation(line: 199, column: 1654, scope: !5551)
!5601 = !DILocation(line: 199, column: 1648, scope: !5551)
!5602 = !DILocation(line: 199, column: 1641, scope: !5551)
!5603 = !DILocalVariable(name: "src7", scope: !5548, file: !16, line: 199, type: !18)
!5604 = !DILocation(line: 199, column: 1677, scope: !5548)
!5605 = !DILocation(line: 199, column: 1691, scope: !5551)
!5606 = !DILocation(line: 199, column: 1690, scope: !5551)
!5607 = !DILocation(line: 199, column: 1684, scope: !5551)
!5608 = !DILocation(line: 199, column: 1677, scope: !5551)
!5609 = !DILocalVariable(name: "src8", scope: !5548, file: !16, line: 199, type: !18)
!5610 = !DILocation(line: 199, column: 1713, scope: !5548)
!5611 = !DILocation(line: 199, column: 1727, scope: !5551)
!5612 = !DILocation(line: 199, column: 1726, scope: !5551)
!5613 = !DILocation(line: 199, column: 1720, scope: !5551)
!5614 = !DILocation(line: 199, column: 1713, scope: !5551)
!5615 = !DILocalVariable(name: "src9", scope: !5548, file: !16, line: 199, type: !18)
!5616 = !DILocation(line: 199, column: 1749, scope: !5548)
!5617 = !DILocation(line: 199, column: 1763, scope: !5551)
!5618 = !DILocation(line: 199, column: 1762, scope: !5551)
!5619 = !DILocation(line: 199, column: 1756, scope: !5551)
!5620 = !DILocation(line: 199, column: 1749, scope: !5551)
!5621 = !DILocalVariable(name: "src10", scope: !5548, file: !16, line: 199, type: !18)
!5622 = !DILocation(line: 199, column: 1785, scope: !5548)
!5623 = !DILocation(line: 199, column: 1800, scope: !5551)
!5624 = !DILocation(line: 199, column: 1799, scope: !5551)
!5625 = !DILocation(line: 199, column: 1793, scope: !5551)
!5626 = !DILocation(line: 199, column: 1785, scope: !5551)
!5627 = !DILocation(line: 199, column: 1835, scope: !5551)
!5628 = !DILocation(line: 199, column: 1842, scope: !5551)
!5629 = !DILocation(line: 199, column: 1840, scope: !5551)
!5630 = !DILocation(line: 199, column: 1852, scope: !5551)
!5631 = !DILocation(line: 199, column: 1857, scope: !5551)
!5632 = !DILocation(line: 199, column: 1856, scope: !5551)
!5633 = !DILocation(line: 199, column: 1850, scope: !5551)
!5634 = !DILocation(line: 199, column: 1847, scope: !5551)
!5635 = !DILocation(line: 199, column: 1865, scope: !5551)
!5636 = !DILocation(line: 199, column: 1870, scope: !5551)
!5637 = !DILocation(line: 199, column: 1869, scope: !5551)
!5638 = !DILocation(line: 199, column: 1863, scope: !5551)
!5639 = !DILocation(line: 199, column: 1875, scope: !5551)
!5640 = !DILocation(line: 199, column: 1880, scope: !5551)
!5641 = !DILocation(line: 199, column: 1879, scope: !5551)
!5642 = !DILocation(line: 199, column: 1873, scope: !5551)
!5643 = !DILocation(line: 199, column: 1890, scope: !5551)
!5644 = !DILocation(line: 199, column: 1895, scope: !5551)
!5645 = !DILocation(line: 199, column: 1887, scope: !5551)
!5646 = !DILocation(line: 199, column: 1883, scope: !5551)
!5647 = !DILocation(line: 199, column: 1904, scope: !5551)
!5648 = !DILocation(line: 199, column: 1901, scope: !5551)
!5649 = !DILocation(line: 199, column: 1831, scope: !5551)
!5650 = !DILocation(line: 199, column: 1818, scope: !5551)
!5651 = !DILocation(line: 199, column: 1817, scope: !5551)
!5652 = !DILocation(line: 199, column: 1812, scope: !5551)
!5653 = !DILocation(line: 199, column: 1829, scope: !5551)
!5654 = !DILocation(line: 199, column: 1935, scope: !5551)
!5655 = !DILocation(line: 199, column: 1942, scope: !5551)
!5656 = !DILocation(line: 199, column: 1940, scope: !5551)
!5657 = !DILocation(line: 199, column: 1952, scope: !5551)
!5658 = !DILocation(line: 199, column: 1957, scope: !5551)
!5659 = !DILocation(line: 199, column: 1956, scope: !5551)
!5660 = !DILocation(line: 199, column: 1950, scope: !5551)
!5661 = !DILocation(line: 199, column: 1947, scope: !5551)
!5662 = !DILocation(line: 199, column: 1965, scope: !5551)
!5663 = !DILocation(line: 199, column: 1970, scope: !5551)
!5664 = !DILocation(line: 199, column: 1969, scope: !5551)
!5665 = !DILocation(line: 199, column: 1963, scope: !5551)
!5666 = !DILocation(line: 199, column: 1975, scope: !5551)
!5667 = !DILocation(line: 199, column: 1980, scope: !5551)
!5668 = !DILocation(line: 199, column: 1979, scope: !5551)
!5669 = !DILocation(line: 199, column: 1973, scope: !5551)
!5670 = !DILocation(line: 199, column: 1990, scope: !5551)
!5671 = !DILocation(line: 199, column: 1995, scope: !5551)
!5672 = !DILocation(line: 199, column: 1987, scope: !5551)
!5673 = !DILocation(line: 199, column: 1983, scope: !5551)
!5674 = !DILocation(line: 199, column: 2004, scope: !5551)
!5675 = !DILocation(line: 199, column: 2001, scope: !5551)
!5676 = !DILocation(line: 199, column: 1931, scope: !5551)
!5677 = !DILocation(line: 199, column: 1918, scope: !5551)
!5678 = !DILocation(line: 199, column: 1917, scope: !5551)
!5679 = !DILocation(line: 199, column: 1912, scope: !5551)
!5680 = !DILocation(line: 199, column: 1929, scope: !5551)
!5681 = !DILocation(line: 199, column: 2035, scope: !5551)
!5682 = !DILocation(line: 199, column: 2042, scope: !5551)
!5683 = !DILocation(line: 199, column: 2040, scope: !5551)
!5684 = !DILocation(line: 199, column: 2052, scope: !5551)
!5685 = !DILocation(line: 199, column: 2057, scope: !5551)
!5686 = !DILocation(line: 199, column: 2056, scope: !5551)
!5687 = !DILocation(line: 199, column: 2050, scope: !5551)
!5688 = !DILocation(line: 199, column: 2047, scope: !5551)
!5689 = !DILocation(line: 199, column: 2065, scope: !5551)
!5690 = !DILocation(line: 199, column: 2070, scope: !5551)
!5691 = !DILocation(line: 199, column: 2069, scope: !5551)
!5692 = !DILocation(line: 199, column: 2063, scope: !5551)
!5693 = !DILocation(line: 199, column: 2075, scope: !5551)
!5694 = !DILocation(line: 199, column: 2080, scope: !5551)
!5695 = !DILocation(line: 199, column: 2079, scope: !5551)
!5696 = !DILocation(line: 199, column: 2073, scope: !5551)
!5697 = !DILocation(line: 199, column: 2090, scope: !5551)
!5698 = !DILocation(line: 199, column: 2095, scope: !5551)
!5699 = !DILocation(line: 199, column: 2087, scope: !5551)
!5700 = !DILocation(line: 199, column: 2083, scope: !5551)
!5701 = !DILocation(line: 199, column: 2104, scope: !5551)
!5702 = !DILocation(line: 199, column: 2101, scope: !5551)
!5703 = !DILocation(line: 199, column: 2031, scope: !5551)
!5704 = !DILocation(line: 199, column: 2018, scope: !5551)
!5705 = !DILocation(line: 199, column: 2017, scope: !5551)
!5706 = !DILocation(line: 199, column: 2012, scope: !5551)
!5707 = !DILocation(line: 199, column: 2029, scope: !5551)
!5708 = !DILocation(line: 199, column: 2135, scope: !5551)
!5709 = !DILocation(line: 199, column: 2142, scope: !5551)
!5710 = !DILocation(line: 199, column: 2140, scope: !5551)
!5711 = !DILocation(line: 199, column: 2152, scope: !5551)
!5712 = !DILocation(line: 199, column: 2157, scope: !5551)
!5713 = !DILocation(line: 199, column: 2156, scope: !5551)
!5714 = !DILocation(line: 199, column: 2150, scope: !5551)
!5715 = !DILocation(line: 199, column: 2147, scope: !5551)
!5716 = !DILocation(line: 199, column: 2165, scope: !5551)
!5717 = !DILocation(line: 199, column: 2170, scope: !5551)
!5718 = !DILocation(line: 199, column: 2169, scope: !5551)
!5719 = !DILocation(line: 199, column: 2163, scope: !5551)
!5720 = !DILocation(line: 199, column: 2175, scope: !5551)
!5721 = !DILocation(line: 199, column: 2180, scope: !5551)
!5722 = !DILocation(line: 199, column: 2179, scope: !5551)
!5723 = !DILocation(line: 199, column: 2173, scope: !5551)
!5724 = !DILocation(line: 199, column: 2190, scope: !5551)
!5725 = !DILocation(line: 199, column: 2195, scope: !5551)
!5726 = !DILocation(line: 199, column: 2187, scope: !5551)
!5727 = !DILocation(line: 199, column: 2183, scope: !5551)
!5728 = !DILocation(line: 199, column: 2204, scope: !5551)
!5729 = !DILocation(line: 199, column: 2201, scope: !5551)
!5730 = !DILocation(line: 199, column: 2131, scope: !5551)
!5731 = !DILocation(line: 199, column: 2118, scope: !5551)
!5732 = !DILocation(line: 199, column: 2117, scope: !5551)
!5733 = !DILocation(line: 199, column: 2112, scope: !5551)
!5734 = !DILocation(line: 199, column: 2129, scope: !5551)
!5735 = !DILocation(line: 199, column: 2235, scope: !5551)
!5736 = !DILocation(line: 199, column: 2242, scope: !5551)
!5737 = !DILocation(line: 199, column: 2240, scope: !5551)
!5738 = !DILocation(line: 199, column: 2252, scope: !5551)
!5739 = !DILocation(line: 199, column: 2257, scope: !5551)
!5740 = !DILocation(line: 199, column: 2256, scope: !5551)
!5741 = !DILocation(line: 199, column: 2250, scope: !5551)
!5742 = !DILocation(line: 199, column: 2247, scope: !5551)
!5743 = !DILocation(line: 199, column: 2265, scope: !5551)
!5744 = !DILocation(line: 199, column: 2270, scope: !5551)
!5745 = !DILocation(line: 199, column: 2269, scope: !5551)
!5746 = !DILocation(line: 199, column: 2263, scope: !5551)
!5747 = !DILocation(line: 199, column: 2275, scope: !5551)
!5748 = !DILocation(line: 199, column: 2280, scope: !5551)
!5749 = !DILocation(line: 199, column: 2279, scope: !5551)
!5750 = !DILocation(line: 199, column: 2273, scope: !5551)
!5751 = !DILocation(line: 199, column: 2290, scope: !5551)
!5752 = !DILocation(line: 199, column: 2295, scope: !5551)
!5753 = !DILocation(line: 199, column: 2287, scope: !5551)
!5754 = !DILocation(line: 199, column: 2283, scope: !5551)
!5755 = !DILocation(line: 199, column: 2304, scope: !5551)
!5756 = !DILocation(line: 199, column: 2301, scope: !5551)
!5757 = !DILocation(line: 199, column: 2231, scope: !5551)
!5758 = !DILocation(line: 199, column: 2218, scope: !5551)
!5759 = !DILocation(line: 199, column: 2217, scope: !5551)
!5760 = !DILocation(line: 199, column: 2212, scope: !5551)
!5761 = !DILocation(line: 199, column: 2229, scope: !5551)
!5762 = !DILocation(line: 199, column: 2335, scope: !5551)
!5763 = !DILocation(line: 199, column: 2342, scope: !5551)
!5764 = !DILocation(line: 199, column: 2340, scope: !5551)
!5765 = !DILocation(line: 199, column: 2352, scope: !5551)
!5766 = !DILocation(line: 199, column: 2357, scope: !5551)
!5767 = !DILocation(line: 199, column: 2356, scope: !5551)
!5768 = !DILocation(line: 199, column: 2350, scope: !5551)
!5769 = !DILocation(line: 199, column: 2347, scope: !5551)
!5770 = !DILocation(line: 199, column: 2365, scope: !5551)
!5771 = !DILocation(line: 199, column: 2370, scope: !5551)
!5772 = !DILocation(line: 199, column: 2369, scope: !5551)
!5773 = !DILocation(line: 199, column: 2363, scope: !5551)
!5774 = !DILocation(line: 199, column: 2375, scope: !5551)
!5775 = !DILocation(line: 199, column: 2380, scope: !5551)
!5776 = !DILocation(line: 199, column: 2379, scope: !5551)
!5777 = !DILocation(line: 199, column: 2373, scope: !5551)
!5778 = !DILocation(line: 199, column: 2390, scope: !5551)
!5779 = !DILocation(line: 199, column: 2395, scope: !5551)
!5780 = !DILocation(line: 199, column: 2387, scope: !5551)
!5781 = !DILocation(line: 199, column: 2383, scope: !5551)
!5782 = !DILocation(line: 199, column: 2404, scope: !5551)
!5783 = !DILocation(line: 199, column: 2401, scope: !5551)
!5784 = !DILocation(line: 199, column: 2331, scope: !5551)
!5785 = !DILocation(line: 199, column: 2318, scope: !5551)
!5786 = !DILocation(line: 199, column: 2317, scope: !5551)
!5787 = !DILocation(line: 199, column: 2312, scope: !5551)
!5788 = !DILocation(line: 199, column: 2329, scope: !5551)
!5789 = !DILocation(line: 199, column: 2435, scope: !5551)
!5790 = !DILocation(line: 199, column: 2442, scope: !5551)
!5791 = !DILocation(line: 199, column: 2440, scope: !5551)
!5792 = !DILocation(line: 199, column: 2452, scope: !5551)
!5793 = !DILocation(line: 199, column: 2457, scope: !5551)
!5794 = !DILocation(line: 199, column: 2456, scope: !5551)
!5795 = !DILocation(line: 199, column: 2450, scope: !5551)
!5796 = !DILocation(line: 199, column: 2447, scope: !5551)
!5797 = !DILocation(line: 199, column: 2465, scope: !5551)
!5798 = !DILocation(line: 199, column: 2470, scope: !5551)
!5799 = !DILocation(line: 199, column: 2469, scope: !5551)
!5800 = !DILocation(line: 199, column: 2463, scope: !5551)
!5801 = !DILocation(line: 199, column: 2475, scope: !5551)
!5802 = !DILocation(line: 199, column: 2480, scope: !5551)
!5803 = !DILocation(line: 199, column: 2479, scope: !5551)
!5804 = !DILocation(line: 199, column: 2473, scope: !5551)
!5805 = !DILocation(line: 199, column: 2490, scope: !5551)
!5806 = !DILocation(line: 199, column: 2495, scope: !5551)
!5807 = !DILocation(line: 199, column: 2487, scope: !5551)
!5808 = !DILocation(line: 199, column: 2483, scope: !5551)
!5809 = !DILocation(line: 199, column: 2504, scope: !5551)
!5810 = !DILocation(line: 199, column: 2501, scope: !5551)
!5811 = !DILocation(line: 199, column: 2431, scope: !5551)
!5812 = !DILocation(line: 199, column: 2418, scope: !5551)
!5813 = !DILocation(line: 199, column: 2417, scope: !5551)
!5814 = !DILocation(line: 199, column: 2412, scope: !5551)
!5815 = !DILocation(line: 199, column: 2429, scope: !5551)
!5816 = !DILocation(line: 199, column: 2535, scope: !5551)
!5817 = !DILocation(line: 199, column: 2542, scope: !5551)
!5818 = !DILocation(line: 199, column: 2540, scope: !5551)
!5819 = !DILocation(line: 199, column: 2553, scope: !5551)
!5820 = !DILocation(line: 199, column: 2558, scope: !5551)
!5821 = !DILocation(line: 199, column: 2557, scope: !5551)
!5822 = !DILocation(line: 199, column: 2551, scope: !5551)
!5823 = !DILocation(line: 199, column: 2548, scope: !5551)
!5824 = !DILocation(line: 199, column: 2566, scope: !5551)
!5825 = !DILocation(line: 199, column: 2571, scope: !5551)
!5826 = !DILocation(line: 199, column: 2570, scope: !5551)
!5827 = !DILocation(line: 199, column: 2564, scope: !5551)
!5828 = !DILocation(line: 199, column: 2576, scope: !5551)
!5829 = !DILocation(line: 199, column: 2581, scope: !5551)
!5830 = !DILocation(line: 199, column: 2580, scope: !5551)
!5831 = !DILocation(line: 199, column: 2574, scope: !5551)
!5832 = !DILocation(line: 199, column: 2591, scope: !5551)
!5833 = !DILocation(line: 199, column: 2596, scope: !5551)
!5834 = !DILocation(line: 199, column: 2588, scope: !5551)
!5835 = !DILocation(line: 199, column: 2584, scope: !5551)
!5836 = !DILocation(line: 199, column: 2605, scope: !5551)
!5837 = !DILocation(line: 199, column: 2602, scope: !5551)
!5838 = !DILocation(line: 199, column: 2531, scope: !5551)
!5839 = !DILocation(line: 199, column: 2518, scope: !5551)
!5840 = !DILocation(line: 199, column: 2517, scope: !5551)
!5841 = !DILocation(line: 199, column: 2512, scope: !5551)
!5842 = !DILocation(line: 199, column: 2529, scope: !5551)
!5843 = !DILocation(line: 199, column: 2616, scope: !5551)
!5844 = !DILocation(line: 199, column: 2623, scope: !5551)
!5845 = !DILocation(line: 199, column: 2627, scope: !5551)
!5846 = !DILocation(line: 199, column: 1337, scope: !5847)
!5847 = !DILexicalBlockFile(scope: !5543, file: !16, discriminator: 3)
!5848 = !DILocation(line: 199, column: 1318, scope: !5847)
!5849 = distinct !{!5849, !5850}
!5850 = !DILocation(line: 199, column: 1318, scope: !5517)
!5851 = !DILocation(line: 199, column: 2628, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5517, file: !16, discriminator: 4)
!5853 = distinct !DISubprogram(name: "put_pixels16_xy2_8_c", scope: !16, file: !16, line: 266, type: !5854, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{null, !48, !49, !50, !19}
!5856 = !DILocalVariable(name: "block", arg: 1, scope: !5853, file: !16, line: 266, type: !48)
!5857 = !DILocation(line: 266, column: 1273, scope: !5853)
!5858 = !DILocalVariable(name: "pixels", arg: 2, scope: !5853, file: !16, line: 266, type: !49)
!5859 = !DILocation(line: 266, column: 1295, scope: !5853)
!5860 = !DILocalVariable(name: "line_size", arg: 3, scope: !5853, file: !16, line: 266, type: !50)
!5861 = !DILocation(line: 266, column: 1313, scope: !5853)
!5862 = !DILocalVariable(name: "h", arg: 4, scope: !5853, file: !16, line: 266, type: !19)
!5863 = !DILocation(line: 266, column: 1328, scope: !5853)
!5864 = !DILocation(line: 266, column: 1353, scope: !5853)
!5865 = !DILocation(line: 266, column: 1360, scope: !5853)
!5866 = !DILocation(line: 266, column: 1368, scope: !5853)
!5867 = !DILocation(line: 266, column: 1379, scope: !5853)
!5868 = !DILocation(line: 266, column: 1333, scope: !5853)
!5869 = !DILocation(line: 266, column: 1403, scope: !5853)
!5870 = !DILocation(line: 266, column: 1409, scope: !5853)
!5871 = !DILocation(line: 266, column: 1414, scope: !5853)
!5872 = !DILocation(line: 266, column: 1421, scope: !5853)
!5873 = !DILocation(line: 266, column: 1426, scope: !5853)
!5874 = !DILocation(line: 266, column: 1437, scope: !5853)
!5875 = !DILocation(line: 266, column: 1383, scope: !5876)
!5876 = !DILexicalBlockFile(scope: !5853, file: !16, discriminator: 1)
!5877 = !DILocation(line: 266, column: 1441, scope: !5853)
!5878 = distinct !DISubprogram(name: "put_pixels8_xy2_8_c", scope: !16, file: !16, line: 266, type: !5854, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5879 = !DILocalVariable(name: "block", arg: 1, scope: !5878, file: !16, line: 266, type: !48)
!5880 = !DILocation(line: 266, column: 49, scope: !5878)
!5881 = !DILocalVariable(name: "pixels", arg: 2, scope: !5878, file: !16, line: 266, type: !49)
!5882 = !DILocation(line: 266, column: 71, scope: !5878)
!5883 = !DILocalVariable(name: "line_size", arg: 3, scope: !5878, file: !16, line: 266, type: !50)
!5884 = !DILocation(line: 266, column: 89, scope: !5878)
!5885 = !DILocalVariable(name: "h", arg: 4, scope: !5878, file: !16, line: 266, type: !19)
!5886 = !DILocation(line: 266, column: 104, scope: !5878)
!5887 = !DILocalVariable(name: "j", scope: !5878, file: !16, line: 266, type: !19)
!5888 = !DILocation(line: 266, column: 113, scope: !5878)
!5889 = !DILocation(line: 266, column: 123, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5878, file: !16, line: 266, column: 116)
!5891 = !DILocation(line: 266, column: 121, scope: !5890)
!5892 = !DILocation(line: 266, column: 128, scope: !5893)
!5893 = !DILexicalBlockFile(scope: !5894, file: !16, discriminator: 1)
!5894 = distinct !DILexicalBlock(scope: !5890, file: !16, line: 266, column: 116)
!5895 = !DILocation(line: 266, column: 130, scope: !5893)
!5896 = !DILocation(line: 266, column: 116, scope: !5893)
!5897 = !DILocalVariable(name: "i", scope: !5898, file: !16, line: 266, type: !19)
!5898 = distinct !DILexicalBlock(scope: !5894, file: !16, line: 266, column: 140)
!5899 = !DILocation(line: 266, column: 146, scope: !5898)
!5900 = !DILocalVariable(name: "a", scope: !5898, file: !16, line: 266, type: !5901)
!5901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!5902 = !DILocation(line: 266, column: 164, scope: !5898)
!5903 = !DILocation(line: 266, column: 200, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !5898, file: !16, discriminator: 2)
!5905 = !DILocation(line: 266, column: 210, scope: !5904)
!5906 = !DILocation(line: 266, column: 164, scope: !5904)
!5907 = !DILocalVariable(name: "b", scope: !5898, file: !16, line: 266, type: !5901)
!5908 = !DILocation(line: 266, column: 229, scope: !5898)
!5909 = !DILocation(line: 266, column: 265, scope: !5904)
!5910 = !DILocation(line: 266, column: 272, scope: !5904)
!5911 = !DILocation(line: 266, column: 279, scope: !5904)
!5912 = !DILocation(line: 266, column: 229, scope: !5904)
!5913 = !DILocalVariable(name: "l0", scope: !5898, file: !16, line: 266, type: !10)
!5914 = !DILocation(line: 266, column: 292, scope: !5898)
!5915 = !DILocation(line: 266, column: 298, scope: !5904)
!5916 = !DILocation(line: 266, column: 300, scope: !5904)
!5917 = !DILocation(line: 266, column: 319, scope: !5904)
!5918 = !DILocation(line: 266, column: 321, scope: !5904)
!5919 = !DILocation(line: 266, column: 316, scope: !5904)
!5920 = !DILocation(line: 266, column: 337, scope: !5904)
!5921 = !DILocation(line: 266, column: 297, scope: !5904)
!5922 = !DILocation(line: 266, column: 292, scope: !5904)
!5923 = !DILocalVariable(name: "h0", scope: !5898, file: !16, line: 266, type: !10)
!5924 = !DILocation(line: 266, column: 362, scope: !5898)
!5925 = !DILocation(line: 266, column: 369, scope: !5904)
!5926 = !DILocation(line: 266, column: 371, scope: !5904)
!5927 = !DILocation(line: 266, column: 387, scope: !5904)
!5928 = !DILocation(line: 266, column: 397, scope: !5904)
!5929 = !DILocation(line: 266, column: 399, scope: !5904)
!5930 = !DILocation(line: 266, column: 415, scope: !5904)
!5931 = !DILocation(line: 266, column: 393, scope: !5904)
!5932 = !DILocation(line: 266, column: 367, scope: !5904)
!5933 = !DILocation(line: 266, column: 362, scope: !5904)
!5934 = !DILocalVariable(name: "l1", scope: !5898, file: !16, line: 266, type: !10)
!5935 = !DILocation(line: 266, column: 431, scope: !5898)
!5936 = !DILocalVariable(name: "h1", scope: !5898, file: !16, line: 266, type: !10)
!5937 = !DILocation(line: 266, column: 435, scope: !5898)
!5938 = !DILocation(line: 266, column: 449, scope: !5904)
!5939 = !DILocation(line: 266, column: 446, scope: !5904)
!5940 = !DILocation(line: 266, column: 467, scope: !5904)
!5941 = !DILocation(line: 266, column: 465, scope: !5904)
!5942 = !DILocation(line: 266, column: 472, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5944, file: !16, discriminator: 3)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !16, line: 266, column: 460)
!5945 = distinct !DILexicalBlock(scope: !5898, file: !16, line: 266, column: 460)
!5946 = !DILocation(line: 266, column: 476, scope: !5943)
!5947 = !DILocation(line: 266, column: 474, scope: !5943)
!5948 = !DILocation(line: 266, column: 460, scope: !5943)
!5949 = !DILocalVariable(name: "a", scope: !5950, file: !16, line: 266, type: !10)
!5950 = distinct !DILexicalBlock(scope: !5944, file: !16, line: 266, column: 487)
!5951 = !DILocation(line: 266, column: 498, scope: !5950)
!5952 = !DILocation(line: 266, column: 534, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !5950, file: !16, discriminator: 4)
!5954 = !DILocation(line: 266, column: 544, scope: !5953)
!5955 = !DILocation(line: 266, column: 498, scope: !5953)
!5956 = !DILocalVariable(name: "b", scope: !5950, file: !16, line: 266, type: !10)
!5957 = !DILocation(line: 266, column: 557, scope: !5950)
!5958 = !DILocation(line: 266, column: 593, scope: !5953)
!5959 = !DILocation(line: 266, column: 600, scope: !5953)
!5960 = !DILocation(line: 266, column: 607, scope: !5953)
!5961 = !DILocation(line: 266, column: 557, scope: !5953)
!5962 = !DILocation(line: 266, column: 617, scope: !5953)
!5963 = !DILocation(line: 266, column: 619, scope: !5953)
!5964 = !DILocation(line: 266, column: 638, scope: !5953)
!5965 = !DILocation(line: 266, column: 640, scope: !5953)
!5966 = !DILocation(line: 266, column: 635, scope: !5953)
!5967 = !DILocation(line: 266, column: 616, scope: !5953)
!5968 = !DILocation(line: 266, column: 614, scope: !5953)
!5969 = !DILocation(line: 266, column: 664, scope: !5953)
!5970 = !DILocation(line: 266, column: 666, scope: !5953)
!5971 = !DILocation(line: 266, column: 682, scope: !5953)
!5972 = !DILocation(line: 266, column: 692, scope: !5953)
!5973 = !DILocation(line: 266, column: 694, scope: !5953)
!5974 = !DILocation(line: 266, column: 710, scope: !5953)
!5975 = !DILocation(line: 266, column: 688, scope: !5953)
!5976 = !DILocation(line: 266, column: 662, scope: !5953)
!5977 = !DILocation(line: 266, column: 660, scope: !5953)
!5978 = !DILocation(line: 266, column: 741, scope: !5953)
!5979 = !DILocation(line: 266, column: 746, scope: !5953)
!5980 = !DILocation(line: 266, column: 744, scope: !5953)
!5981 = !DILocation(line: 266, column: 754, scope: !5953)
!5982 = !DILocation(line: 266, column: 759, scope: !5953)
!5983 = !DILocation(line: 266, column: 757, scope: !5953)
!5984 = !DILocation(line: 266, column: 763, scope: !5953)
!5985 = !DILocation(line: 266, column: 752, scope: !5953)
!5986 = !DILocation(line: 266, column: 769, scope: !5953)
!5987 = !DILocation(line: 266, column: 749, scope: !5953)
!5988 = !DILocation(line: 266, column: 732, scope: !5953)
!5989 = !DILocation(line: 266, column: 717, scope: !5953)
!5990 = !DILocation(line: 266, column: 739, scope: !5953)
!5991 = !DILocation(line: 266, column: 796, scope: !5953)
!5992 = !DILocation(line: 266, column: 793, scope: !5953)
!5993 = !DILocation(line: 266, column: 816, scope: !5953)
!5994 = !DILocation(line: 266, column: 813, scope: !5953)
!5995 = !DILocation(line: 266, column: 863, scope: !5953)
!5996 = !DILocation(line: 266, column: 873, scope: !5953)
!5997 = !DILocation(line: 266, column: 829, scope: !5953)
!5998 = !DILocation(line: 266, column: 913, scope: !5953)
!5999 = !DILocation(line: 266, column: 920, scope: !5953)
!6000 = !DILocation(line: 266, column: 927, scope: !5953)
!6001 = !DILocation(line: 266, column: 879, scope: !5953)
!6002 = !DILocation(line: 266, column: 937, scope: !5953)
!6003 = !DILocation(line: 266, column: 939, scope: !5953)
!6004 = !DILocation(line: 266, column: 958, scope: !5953)
!6005 = !DILocation(line: 266, column: 960, scope: !5953)
!6006 = !DILocation(line: 266, column: 955, scope: !5953)
!6007 = !DILocation(line: 266, column: 976, scope: !5953)
!6008 = !DILocation(line: 266, column: 936, scope: !5953)
!6009 = !DILocation(line: 266, column: 934, scope: !5953)
!6010 = !DILocation(line: 266, column: 999, scope: !5953)
!6011 = !DILocation(line: 266, column: 1001, scope: !5953)
!6012 = !DILocation(line: 266, column: 1017, scope: !5953)
!6013 = !DILocation(line: 266, column: 1027, scope: !5953)
!6014 = !DILocation(line: 266, column: 1029, scope: !5953)
!6015 = !DILocation(line: 266, column: 1045, scope: !5953)
!6016 = !DILocation(line: 266, column: 1023, scope: !5953)
!6017 = !DILocation(line: 266, column: 997, scope: !5953)
!6018 = !DILocation(line: 266, column: 995, scope: !5953)
!6019 = !DILocation(line: 266, column: 1076, scope: !5953)
!6020 = !DILocation(line: 266, column: 1081, scope: !5953)
!6021 = !DILocation(line: 266, column: 1079, scope: !5953)
!6022 = !DILocation(line: 266, column: 1089, scope: !5953)
!6023 = !DILocation(line: 266, column: 1094, scope: !5953)
!6024 = !DILocation(line: 266, column: 1092, scope: !5953)
!6025 = !DILocation(line: 266, column: 1098, scope: !5953)
!6026 = !DILocation(line: 266, column: 1087, scope: !5953)
!6027 = !DILocation(line: 266, column: 1104, scope: !5953)
!6028 = !DILocation(line: 266, column: 1084, scope: !5953)
!6029 = !DILocation(line: 266, column: 1067, scope: !5953)
!6030 = !DILocation(line: 266, column: 1052, scope: !5953)
!6031 = !DILocation(line: 266, column: 1074, scope: !5953)
!6032 = !DILocation(line: 266, column: 1131, scope: !5953)
!6033 = !DILocation(line: 266, column: 1128, scope: !5953)
!6034 = !DILocation(line: 266, column: 1151, scope: !5953)
!6035 = !DILocation(line: 266, column: 1148, scope: !5953)
!6036 = !DILocation(line: 266, column: 1162, scope: !5953)
!6037 = !DILocation(line: 266, column: 481, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !5944, file: !16, discriminator: 5)
!6039 = !DILocation(line: 266, column: 460, scope: !6038)
!6040 = distinct !{!6040, !6041}
!6041 = !DILocation(line: 266, column: 460, scope: !5898)
!6042 = !DILocation(line: 266, column: 1178, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !5898, file: !16, discriminator: 6)
!6044 = !DILocation(line: 266, column: 1191, scope: !6043)
!6045 = !DILocation(line: 266, column: 1193, scope: !6043)
!6046 = !DILocation(line: 266, column: 1190, scope: !6043)
!6047 = !DILocation(line: 266, column: 1188, scope: !6043)
!6048 = !DILocation(line: 266, column: 1176, scope: !6043)
!6049 = !DILocation(line: 266, column: 1171, scope: !6043)
!6050 = !DILocation(line: 266, column: 1212, scope: !6043)
!6051 = !DILocation(line: 266, column: 1224, scope: !6043)
!6052 = !DILocation(line: 266, column: 1222, scope: !6043)
!6053 = !DILocation(line: 266, column: 1210, scope: !6043)
!6054 = !DILocation(line: 266, column: 1205, scope: !6043)
!6055 = !DILocation(line: 266, column: 1227, scope: !6043)
!6056 = !DILocation(line: 266, column: 136, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !5894, file: !16, discriminator: 7)
!6058 = !DILocation(line: 266, column: 116, scope: !6057)
!6059 = distinct !{!6059, !6060}
!6060 = !DILocation(line: 266, column: 116, scope: !5878)
!6061 = !DILocation(line: 266, column: 1229, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !5878, file: !16, discriminator: 8)
!6063 = distinct !DISubprogram(name: "avg_rv40_qpel16_h_lowpass", scope: !16, file: !16, line: 200, type: !5138, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6064 = !DILocalVariable(name: "dst", arg: 1, scope: !6063, file: !16, line: 200, type: !48)
!6065 = !DILocation(line: 200, column: 3565, scope: !6063)
!6066 = !DILocalVariable(name: "src", arg: 2, scope: !6063, file: !16, line: 200, type: !49)
!6067 = !DILocation(line: 200, column: 3585, scope: !6063)
!6068 = !DILocalVariable(name: "dstStride", arg: 3, scope: !6063, file: !16, line: 200, type: !19)
!6069 = !DILocation(line: 200, column: 3594, scope: !6063)
!6070 = !DILocalVariable(name: "srcStride", arg: 4, scope: !6063, file: !16, line: 200, type: !19)
!6071 = !DILocation(line: 200, column: 3609, scope: !6063)
!6072 = !DILocalVariable(name: "h", arg: 5, scope: !6063, file: !16, line: 200, type: !18)
!6073 = !DILocation(line: 200, column: 3630, scope: !6063)
!6074 = !DILocalVariable(name: "C1", arg: 6, scope: !6063, file: !16, line: 200, type: !18)
!6075 = !DILocation(line: 200, column: 3643, scope: !6063)
!6076 = !DILocalVariable(name: "C2", arg: 7, scope: !6063, file: !16, line: 200, type: !18)
!6077 = !DILocation(line: 200, column: 3657, scope: !6063)
!6078 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !6063, file: !16, line: 200, type: !18)
!6079 = !DILocation(line: 200, column: 3671, scope: !6063)
!6080 = !DILocation(line: 200, column: 3704, scope: !6063)
!6081 = !DILocation(line: 200, column: 3710, scope: !6063)
!6082 = !DILocation(line: 200, column: 3716, scope: !6063)
!6083 = !DILocation(line: 200, column: 3727, scope: !6063)
!6084 = !DILocation(line: 200, column: 3741, scope: !6063)
!6085 = !DILocation(line: 200, column: 3745, scope: !6063)
!6086 = !DILocation(line: 200, column: 3749, scope: !6063)
!6087 = !DILocation(line: 200, column: 3679, scope: !6063)
!6088 = !DILocation(line: 200, column: 3782, scope: !6063)
!6089 = !DILocation(line: 200, column: 3785, scope: !6063)
!6090 = !DILocation(line: 200, column: 3789, scope: !6063)
!6091 = !DILocation(line: 200, column: 3792, scope: !6063)
!6092 = !DILocation(line: 200, column: 3796, scope: !6063)
!6093 = !DILocation(line: 200, column: 3807, scope: !6063)
!6094 = !DILocation(line: 200, column: 3821, scope: !6063)
!6095 = !DILocation(line: 200, column: 3825, scope: !6063)
!6096 = !DILocation(line: 200, column: 3829, scope: !6063)
!6097 = !DILocation(line: 200, column: 3757, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !6063, file: !16, discriminator: 1)
!6099 = !DILocation(line: 200, column: 3846, scope: !6063)
!6100 = !DILocation(line: 200, column: 3845, scope: !6063)
!6101 = !DILocation(line: 200, column: 3841, scope: !6063)
!6102 = !DILocation(line: 200, column: 3866, scope: !6063)
!6103 = !DILocation(line: 200, column: 3865, scope: !6063)
!6104 = !DILocation(line: 200, column: 3861, scope: !6063)
!6105 = !DILocation(line: 200, column: 3902, scope: !6063)
!6106 = !DILocation(line: 200, column: 3908, scope: !6063)
!6107 = !DILocation(line: 200, column: 3914, scope: !6063)
!6108 = !DILocation(line: 200, column: 3925, scope: !6063)
!6109 = !DILocation(line: 200, column: 3936, scope: !6063)
!6110 = !DILocation(line: 200, column: 3937, scope: !6063)
!6111 = !DILocation(line: 200, column: 3941, scope: !6063)
!6112 = !DILocation(line: 200, column: 3945, scope: !6063)
!6113 = !DILocation(line: 200, column: 3949, scope: !6063)
!6114 = !DILocation(line: 200, column: 3877, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !6063, file: !16, discriminator: 2)
!6116 = !DILocation(line: 200, column: 3982, scope: !6063)
!6117 = !DILocation(line: 200, column: 3985, scope: !6063)
!6118 = !DILocation(line: 200, column: 3989, scope: !6063)
!6119 = !DILocation(line: 200, column: 3992, scope: !6063)
!6120 = !DILocation(line: 200, column: 3996, scope: !6063)
!6121 = !DILocation(line: 200, column: 4007, scope: !6063)
!6122 = !DILocation(line: 200, column: 4018, scope: !6063)
!6123 = !DILocation(line: 200, column: 4019, scope: !6063)
!6124 = !DILocation(line: 200, column: 4023, scope: !6063)
!6125 = !DILocation(line: 200, column: 4027, scope: !6063)
!6126 = !DILocation(line: 200, column: 4031, scope: !6063)
!6127 = !DILocation(line: 200, column: 3957, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !6063, file: !16, discriminator: 3)
!6129 = !DILocation(line: 200, column: 4038, scope: !6063)
!6130 = distinct !DISubprogram(name: "avg_rv40_qpel8_h_lowpass", scope: !16, file: !16, line: 200, type: !5138, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6131 = !DILocalVariable(name: "dst", arg: 1, scope: !6130, file: !16, line: 200, type: !48)
!6132 = !DILocation(line: 200, column: 47, scope: !6130)
!6133 = !DILocalVariable(name: "src", arg: 2, scope: !6130, file: !16, line: 200, type: !49)
!6134 = !DILocation(line: 200, column: 67, scope: !6130)
!6135 = !DILocalVariable(name: "dstStride", arg: 3, scope: !6130, file: !16, line: 200, type: !19)
!6136 = !DILocation(line: 200, column: 76, scope: !6130)
!6137 = !DILocalVariable(name: "srcStride", arg: 4, scope: !6130, file: !16, line: 200, type: !19)
!6138 = !DILocation(line: 200, column: 91, scope: !6130)
!6139 = !DILocalVariable(name: "h", arg: 5, scope: !6130, file: !16, line: 200, type: !18)
!6140 = !DILocation(line: 200, column: 112, scope: !6130)
!6141 = !DILocalVariable(name: "C1", arg: 6, scope: !6130, file: !16, line: 200, type: !18)
!6142 = !DILocation(line: 200, column: 125, scope: !6130)
!6143 = !DILocalVariable(name: "C2", arg: 7, scope: !6130, file: !16, line: 200, type: !18)
!6144 = !DILocation(line: 200, column: 139, scope: !6130)
!6145 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !6130, file: !16, line: 200, type: !18)
!6146 = !DILocation(line: 200, column: 153, scope: !6130)
!6147 = !DILocalVariable(name: "cm", scope: !6130, file: !16, line: 200, type: !49)
!6148 = !DILocation(line: 200, column: 176, scope: !6130)
!6149 = !DILocalVariable(name: "i", scope: !6130, file: !16, line: 200, type: !19)
!6150 = !DILocation(line: 200, column: 205, scope: !6130)
!6151 = !DILocation(line: 200, column: 214, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6130, file: !16, line: 200, column: 208)
!6153 = !DILocation(line: 200, column: 212, scope: !6152)
!6154 = !DILocation(line: 200, column: 219, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !6156, file: !16, discriminator: 1)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !16, line: 200, column: 208)
!6157 = !DILocation(line: 200, column: 223, scope: !6155)
!6158 = !DILocation(line: 200, column: 221, scope: !6155)
!6159 = !DILocation(line: 200, column: 208, scope: !6155)
!6160 = !DILocation(line: 200, column: 245, scope: !6161)
!6161 = !DILexicalBlockFile(scope: !6162, file: !16, discriminator: 2)
!6162 = distinct !DILexicalBlock(scope: !6156, file: !16, line: 200, column: 231)
!6163 = !DILocation(line: 200, column: 244, scope: !6161)
!6164 = !DILocation(line: 200, column: 257, scope: !6161)
!6165 = !DILocation(line: 200, column: 267, scope: !6161)
!6166 = !DILocation(line: 200, column: 265, scope: !6161)
!6167 = !DILocation(line: 200, column: 280, scope: !6161)
!6168 = !DILocation(line: 200, column: 288, scope: !6161)
!6169 = !DILocation(line: 200, column: 287, scope: !6161)
!6170 = !DILocation(line: 200, column: 278, scope: !6161)
!6171 = !DILocation(line: 200, column: 275, scope: !6161)
!6172 = !DILocation(line: 200, column: 298, scope: !6161)
!6173 = !DILocation(line: 200, column: 305, scope: !6161)
!6174 = !DILocation(line: 200, column: 304, scope: !6161)
!6175 = !DILocation(line: 200, column: 296, scope: !6161)
!6176 = !DILocation(line: 200, column: 310, scope: !6161)
!6177 = !DILocation(line: 200, column: 317, scope: !6161)
!6178 = !DILocation(line: 200, column: 316, scope: !6161)
!6179 = !DILocation(line: 200, column: 308, scope: !6161)
!6180 = !DILocation(line: 200, column: 327, scope: !6161)
!6181 = !DILocation(line: 200, column: 332, scope: !6161)
!6182 = !DILocation(line: 200, column: 324, scope: !6161)
!6183 = !DILocation(line: 200, column: 320, scope: !6161)
!6184 = !DILocation(line: 200, column: 341, scope: !6161)
!6185 = !DILocation(line: 200, column: 338, scope: !6161)
!6186 = !DILocation(line: 200, column: 253, scope: !6161)
!6187 = !DILocation(line: 200, column: 252, scope: !6161)
!6188 = !DILocation(line: 200, column: 347, scope: !6161)
!6189 = !DILocation(line: 200, column: 350, scope: !6161)
!6190 = !DILocation(line: 200, column: 242, scope: !6161)
!6191 = !DILocation(line: 200, column: 233, scope: !6161)
!6192 = !DILocation(line: 200, column: 240, scope: !6161)
!6193 = !DILocation(line: 200, column: 368, scope: !6161)
!6194 = !DILocation(line: 200, column: 367, scope: !6161)
!6195 = !DILocation(line: 200, column: 380, scope: !6161)
!6196 = !DILocation(line: 200, column: 390, scope: !6161)
!6197 = !DILocation(line: 200, column: 388, scope: !6161)
!6198 = !DILocation(line: 200, column: 403, scope: !6161)
!6199 = !DILocation(line: 200, column: 411, scope: !6161)
!6200 = !DILocation(line: 200, column: 410, scope: !6161)
!6201 = !DILocation(line: 200, column: 401, scope: !6161)
!6202 = !DILocation(line: 200, column: 398, scope: !6161)
!6203 = !DILocation(line: 200, column: 421, scope: !6161)
!6204 = !DILocation(line: 200, column: 428, scope: !6161)
!6205 = !DILocation(line: 200, column: 427, scope: !6161)
!6206 = !DILocation(line: 200, column: 419, scope: !6161)
!6207 = !DILocation(line: 200, column: 433, scope: !6161)
!6208 = !DILocation(line: 200, column: 440, scope: !6161)
!6209 = !DILocation(line: 200, column: 439, scope: !6161)
!6210 = !DILocation(line: 200, column: 431, scope: !6161)
!6211 = !DILocation(line: 200, column: 450, scope: !6161)
!6212 = !DILocation(line: 200, column: 455, scope: !6161)
!6213 = !DILocation(line: 200, column: 447, scope: !6161)
!6214 = !DILocation(line: 200, column: 443, scope: !6161)
!6215 = !DILocation(line: 200, column: 464, scope: !6161)
!6216 = !DILocation(line: 200, column: 461, scope: !6161)
!6217 = !DILocation(line: 200, column: 376, scope: !6161)
!6218 = !DILocation(line: 200, column: 375, scope: !6161)
!6219 = !DILocation(line: 200, column: 470, scope: !6161)
!6220 = !DILocation(line: 200, column: 473, scope: !6161)
!6221 = !DILocation(line: 200, column: 365, scope: !6161)
!6222 = !DILocation(line: 200, column: 356, scope: !6161)
!6223 = !DILocation(line: 200, column: 363, scope: !6161)
!6224 = !DILocation(line: 200, column: 491, scope: !6161)
!6225 = !DILocation(line: 200, column: 490, scope: !6161)
!6226 = !DILocation(line: 200, column: 503, scope: !6161)
!6227 = !DILocation(line: 200, column: 513, scope: !6161)
!6228 = !DILocation(line: 200, column: 511, scope: !6161)
!6229 = !DILocation(line: 200, column: 526, scope: !6161)
!6230 = !DILocation(line: 200, column: 534, scope: !6161)
!6231 = !DILocation(line: 200, column: 533, scope: !6161)
!6232 = !DILocation(line: 200, column: 524, scope: !6161)
!6233 = !DILocation(line: 200, column: 521, scope: !6161)
!6234 = !DILocation(line: 200, column: 544, scope: !6161)
!6235 = !DILocation(line: 200, column: 551, scope: !6161)
!6236 = !DILocation(line: 200, column: 550, scope: !6161)
!6237 = !DILocation(line: 200, column: 542, scope: !6161)
!6238 = !DILocation(line: 200, column: 556, scope: !6161)
!6239 = !DILocation(line: 200, column: 563, scope: !6161)
!6240 = !DILocation(line: 200, column: 562, scope: !6161)
!6241 = !DILocation(line: 200, column: 554, scope: !6161)
!6242 = !DILocation(line: 200, column: 573, scope: !6161)
!6243 = !DILocation(line: 200, column: 578, scope: !6161)
!6244 = !DILocation(line: 200, column: 570, scope: !6161)
!6245 = !DILocation(line: 200, column: 566, scope: !6161)
!6246 = !DILocation(line: 200, column: 587, scope: !6161)
!6247 = !DILocation(line: 200, column: 584, scope: !6161)
!6248 = !DILocation(line: 200, column: 499, scope: !6161)
!6249 = !DILocation(line: 200, column: 498, scope: !6161)
!6250 = !DILocation(line: 200, column: 593, scope: !6161)
!6251 = !DILocation(line: 200, column: 596, scope: !6161)
!6252 = !DILocation(line: 200, column: 488, scope: !6161)
!6253 = !DILocation(line: 200, column: 479, scope: !6161)
!6254 = !DILocation(line: 200, column: 486, scope: !6161)
!6255 = !DILocation(line: 200, column: 614, scope: !6161)
!6256 = !DILocation(line: 200, column: 613, scope: !6161)
!6257 = !DILocation(line: 200, column: 626, scope: !6161)
!6258 = !DILocation(line: 200, column: 636, scope: !6161)
!6259 = !DILocation(line: 200, column: 634, scope: !6161)
!6260 = !DILocation(line: 200, column: 649, scope: !6161)
!6261 = !DILocation(line: 200, column: 657, scope: !6161)
!6262 = !DILocation(line: 200, column: 656, scope: !6161)
!6263 = !DILocation(line: 200, column: 647, scope: !6161)
!6264 = !DILocation(line: 200, column: 644, scope: !6161)
!6265 = !DILocation(line: 200, column: 667, scope: !6161)
!6266 = !DILocation(line: 200, column: 674, scope: !6161)
!6267 = !DILocation(line: 200, column: 673, scope: !6161)
!6268 = !DILocation(line: 200, column: 665, scope: !6161)
!6269 = !DILocation(line: 200, column: 679, scope: !6161)
!6270 = !DILocation(line: 200, column: 686, scope: !6161)
!6271 = !DILocation(line: 200, column: 685, scope: !6161)
!6272 = !DILocation(line: 200, column: 677, scope: !6161)
!6273 = !DILocation(line: 200, column: 696, scope: !6161)
!6274 = !DILocation(line: 200, column: 701, scope: !6161)
!6275 = !DILocation(line: 200, column: 693, scope: !6161)
!6276 = !DILocation(line: 200, column: 689, scope: !6161)
!6277 = !DILocation(line: 200, column: 710, scope: !6161)
!6278 = !DILocation(line: 200, column: 707, scope: !6161)
!6279 = !DILocation(line: 200, column: 622, scope: !6161)
!6280 = !DILocation(line: 200, column: 621, scope: !6161)
!6281 = !DILocation(line: 200, column: 716, scope: !6161)
!6282 = !DILocation(line: 200, column: 719, scope: !6161)
!6283 = !DILocation(line: 200, column: 611, scope: !6161)
!6284 = !DILocation(line: 200, column: 602, scope: !6161)
!6285 = !DILocation(line: 200, column: 609, scope: !6161)
!6286 = !DILocation(line: 200, column: 737, scope: !6161)
!6287 = !DILocation(line: 200, column: 736, scope: !6161)
!6288 = !DILocation(line: 200, column: 749, scope: !6161)
!6289 = !DILocation(line: 200, column: 759, scope: !6161)
!6290 = !DILocation(line: 200, column: 757, scope: !6161)
!6291 = !DILocation(line: 200, column: 772, scope: !6161)
!6292 = !DILocation(line: 200, column: 780, scope: !6161)
!6293 = !DILocation(line: 200, column: 779, scope: !6161)
!6294 = !DILocation(line: 200, column: 770, scope: !6161)
!6295 = !DILocation(line: 200, column: 767, scope: !6161)
!6296 = !DILocation(line: 200, column: 790, scope: !6161)
!6297 = !DILocation(line: 200, column: 797, scope: !6161)
!6298 = !DILocation(line: 200, column: 796, scope: !6161)
!6299 = !DILocation(line: 200, column: 788, scope: !6161)
!6300 = !DILocation(line: 200, column: 802, scope: !6161)
!6301 = !DILocation(line: 200, column: 809, scope: !6161)
!6302 = !DILocation(line: 200, column: 808, scope: !6161)
!6303 = !DILocation(line: 200, column: 800, scope: !6161)
!6304 = !DILocation(line: 200, column: 819, scope: !6161)
!6305 = !DILocation(line: 200, column: 824, scope: !6161)
!6306 = !DILocation(line: 200, column: 816, scope: !6161)
!6307 = !DILocation(line: 200, column: 812, scope: !6161)
!6308 = !DILocation(line: 200, column: 833, scope: !6161)
!6309 = !DILocation(line: 200, column: 830, scope: !6161)
!6310 = !DILocation(line: 200, column: 745, scope: !6161)
!6311 = !DILocation(line: 200, column: 744, scope: !6161)
!6312 = !DILocation(line: 200, column: 839, scope: !6161)
!6313 = !DILocation(line: 200, column: 842, scope: !6161)
!6314 = !DILocation(line: 200, column: 734, scope: !6161)
!6315 = !DILocation(line: 200, column: 725, scope: !6161)
!6316 = !DILocation(line: 200, column: 732, scope: !6161)
!6317 = !DILocation(line: 200, column: 860, scope: !6161)
!6318 = !DILocation(line: 200, column: 859, scope: !6161)
!6319 = !DILocation(line: 200, column: 872, scope: !6161)
!6320 = !DILocation(line: 200, column: 882, scope: !6161)
!6321 = !DILocation(line: 200, column: 880, scope: !6161)
!6322 = !DILocation(line: 200, column: 895, scope: !6161)
!6323 = !DILocation(line: 200, column: 903, scope: !6161)
!6324 = !DILocation(line: 200, column: 902, scope: !6161)
!6325 = !DILocation(line: 200, column: 893, scope: !6161)
!6326 = !DILocation(line: 200, column: 890, scope: !6161)
!6327 = !DILocation(line: 200, column: 913, scope: !6161)
!6328 = !DILocation(line: 200, column: 920, scope: !6161)
!6329 = !DILocation(line: 200, column: 919, scope: !6161)
!6330 = !DILocation(line: 200, column: 911, scope: !6161)
!6331 = !DILocation(line: 200, column: 925, scope: !6161)
!6332 = !DILocation(line: 200, column: 932, scope: !6161)
!6333 = !DILocation(line: 200, column: 931, scope: !6161)
!6334 = !DILocation(line: 200, column: 923, scope: !6161)
!6335 = !DILocation(line: 200, column: 942, scope: !6161)
!6336 = !DILocation(line: 200, column: 947, scope: !6161)
!6337 = !DILocation(line: 200, column: 939, scope: !6161)
!6338 = !DILocation(line: 200, column: 935, scope: !6161)
!6339 = !DILocation(line: 200, column: 956, scope: !6161)
!6340 = !DILocation(line: 200, column: 953, scope: !6161)
!6341 = !DILocation(line: 200, column: 868, scope: !6161)
!6342 = !DILocation(line: 200, column: 867, scope: !6161)
!6343 = !DILocation(line: 200, column: 962, scope: !6161)
!6344 = !DILocation(line: 200, column: 965, scope: !6161)
!6345 = !DILocation(line: 200, column: 857, scope: !6161)
!6346 = !DILocation(line: 200, column: 848, scope: !6161)
!6347 = !DILocation(line: 200, column: 855, scope: !6161)
!6348 = !DILocation(line: 200, column: 983, scope: !6161)
!6349 = !DILocation(line: 200, column: 982, scope: !6161)
!6350 = !DILocation(line: 200, column: 995, scope: !6161)
!6351 = !DILocation(line: 200, column: 1005, scope: !6161)
!6352 = !DILocation(line: 200, column: 1003, scope: !6161)
!6353 = !DILocation(line: 200, column: 1018, scope: !6161)
!6354 = !DILocation(line: 200, column: 1026, scope: !6161)
!6355 = !DILocation(line: 200, column: 1025, scope: !6161)
!6356 = !DILocation(line: 200, column: 1016, scope: !6161)
!6357 = !DILocation(line: 200, column: 1013, scope: !6161)
!6358 = !DILocation(line: 200, column: 1036, scope: !6161)
!6359 = !DILocation(line: 200, column: 1043, scope: !6161)
!6360 = !DILocation(line: 200, column: 1042, scope: !6161)
!6361 = !DILocation(line: 200, column: 1034, scope: !6161)
!6362 = !DILocation(line: 200, column: 1048, scope: !6161)
!6363 = !DILocation(line: 200, column: 1055, scope: !6161)
!6364 = !DILocation(line: 200, column: 1054, scope: !6161)
!6365 = !DILocation(line: 200, column: 1046, scope: !6161)
!6366 = !DILocation(line: 200, column: 1065, scope: !6161)
!6367 = !DILocation(line: 200, column: 1070, scope: !6161)
!6368 = !DILocation(line: 200, column: 1062, scope: !6161)
!6369 = !DILocation(line: 200, column: 1058, scope: !6161)
!6370 = !DILocation(line: 200, column: 1079, scope: !6161)
!6371 = !DILocation(line: 200, column: 1076, scope: !6161)
!6372 = !DILocation(line: 200, column: 991, scope: !6161)
!6373 = !DILocation(line: 200, column: 990, scope: !6161)
!6374 = !DILocation(line: 200, column: 1085, scope: !6161)
!6375 = !DILocation(line: 200, column: 1088, scope: !6161)
!6376 = !DILocation(line: 200, column: 980, scope: !6161)
!6377 = !DILocation(line: 200, column: 971, scope: !6161)
!6378 = !DILocation(line: 200, column: 978, scope: !6161)
!6379 = !DILocation(line: 200, column: 1106, scope: !6161)
!6380 = !DILocation(line: 200, column: 1105, scope: !6161)
!6381 = !DILocation(line: 200, column: 1118, scope: !6161)
!6382 = !DILocation(line: 200, column: 1128, scope: !6161)
!6383 = !DILocation(line: 200, column: 1126, scope: !6161)
!6384 = !DILocation(line: 200, column: 1141, scope: !6161)
!6385 = !DILocation(line: 200, column: 1149, scope: !6161)
!6386 = !DILocation(line: 200, column: 1148, scope: !6161)
!6387 = !DILocation(line: 200, column: 1139, scope: !6161)
!6388 = !DILocation(line: 200, column: 1136, scope: !6161)
!6389 = !DILocation(line: 200, column: 1159, scope: !6161)
!6390 = !DILocation(line: 200, column: 1166, scope: !6161)
!6391 = !DILocation(line: 200, column: 1165, scope: !6161)
!6392 = !DILocation(line: 200, column: 1157, scope: !6161)
!6393 = !DILocation(line: 200, column: 1171, scope: !6161)
!6394 = !DILocation(line: 200, column: 1178, scope: !6161)
!6395 = !DILocation(line: 200, column: 1177, scope: !6161)
!6396 = !DILocation(line: 200, column: 1169, scope: !6161)
!6397 = !DILocation(line: 200, column: 1188, scope: !6161)
!6398 = !DILocation(line: 200, column: 1193, scope: !6161)
!6399 = !DILocation(line: 200, column: 1185, scope: !6161)
!6400 = !DILocation(line: 200, column: 1181, scope: !6161)
!6401 = !DILocation(line: 200, column: 1202, scope: !6161)
!6402 = !DILocation(line: 200, column: 1199, scope: !6161)
!6403 = !DILocation(line: 200, column: 1114, scope: !6161)
!6404 = !DILocation(line: 200, column: 1113, scope: !6161)
!6405 = !DILocation(line: 200, column: 1208, scope: !6161)
!6406 = !DILocation(line: 200, column: 1211, scope: !6161)
!6407 = !DILocation(line: 200, column: 1103, scope: !6161)
!6408 = !DILocation(line: 200, column: 1094, scope: !6161)
!6409 = !DILocation(line: 200, column: 1101, scope: !6161)
!6410 = !DILocation(line: 200, column: 1224, scope: !6161)
!6411 = !DILocation(line: 200, column: 1221, scope: !6161)
!6412 = !DILocation(line: 200, column: 1242, scope: !6161)
!6413 = !DILocation(line: 200, column: 1239, scope: !6161)
!6414 = !DILocation(line: 200, column: 1253, scope: !6161)
!6415 = !DILocation(line: 200, column: 227, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6156, file: !16, discriminator: 3)
!6417 = !DILocation(line: 200, column: 208, scope: !6416)
!6418 = distinct !{!6418, !6419}
!6419 = !DILocation(line: 200, column: 208, scope: !6130)
!6420 = !DILocation(line: 200, column: 1254, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !6130, file: !16, discriminator: 4)
!6422 = distinct !DISubprogram(name: "avg_rv40_qpel16_v_lowpass", scope: !16, file: !16, line: 200, type: !5138, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6423 = !DILocalVariable(name: "dst", arg: 1, scope: !6422, file: !16, line: 200, type: !48)
!6424 = !DILocation(line: 200, column: 3044, scope: !6422)
!6425 = !DILocalVariable(name: "src", arg: 2, scope: !6422, file: !16, line: 200, type: !49)
!6426 = !DILocation(line: 200, column: 3064, scope: !6422)
!6427 = !DILocalVariable(name: "dstStride", arg: 3, scope: !6422, file: !16, line: 200, type: !19)
!6428 = !DILocation(line: 200, column: 3073, scope: !6422)
!6429 = !DILocalVariable(name: "srcStride", arg: 4, scope: !6422, file: !16, line: 200, type: !19)
!6430 = !DILocation(line: 200, column: 3088, scope: !6422)
!6431 = !DILocalVariable(name: "w", arg: 5, scope: !6422, file: !16, line: 200, type: !18)
!6432 = !DILocation(line: 200, column: 3109, scope: !6422)
!6433 = !DILocalVariable(name: "C1", arg: 6, scope: !6422, file: !16, line: 200, type: !18)
!6434 = !DILocation(line: 200, column: 3122, scope: !6422)
!6435 = !DILocalVariable(name: "C2", arg: 7, scope: !6422, file: !16, line: 200, type: !18)
!6436 = !DILocation(line: 200, column: 3136, scope: !6422)
!6437 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !6422, file: !16, line: 200, type: !18)
!6438 = !DILocation(line: 200, column: 3150, scope: !6422)
!6439 = !DILocation(line: 200, column: 3183, scope: !6422)
!6440 = !DILocation(line: 200, column: 3189, scope: !6422)
!6441 = !DILocation(line: 200, column: 3195, scope: !6422)
!6442 = !DILocation(line: 200, column: 3206, scope: !6422)
!6443 = !DILocation(line: 200, column: 3220, scope: !6422)
!6444 = !DILocation(line: 200, column: 3224, scope: !6422)
!6445 = !DILocation(line: 200, column: 3228, scope: !6422)
!6446 = !DILocation(line: 200, column: 3158, scope: !6422)
!6447 = !DILocation(line: 200, column: 3261, scope: !6422)
!6448 = !DILocation(line: 200, column: 3264, scope: !6422)
!6449 = !DILocation(line: 200, column: 3268, scope: !6422)
!6450 = !DILocation(line: 200, column: 3271, scope: !6422)
!6451 = !DILocation(line: 200, column: 3275, scope: !6422)
!6452 = !DILocation(line: 200, column: 3286, scope: !6422)
!6453 = !DILocation(line: 200, column: 3300, scope: !6422)
!6454 = !DILocation(line: 200, column: 3304, scope: !6422)
!6455 = !DILocation(line: 200, column: 3308, scope: !6422)
!6456 = !DILocation(line: 200, column: 3236, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !6422, file: !16, discriminator: 1)
!6458 = !DILocation(line: 200, column: 3325, scope: !6422)
!6459 = !DILocation(line: 200, column: 3324, scope: !6422)
!6460 = !DILocation(line: 200, column: 3320, scope: !6422)
!6461 = !DILocation(line: 200, column: 3345, scope: !6422)
!6462 = !DILocation(line: 200, column: 3344, scope: !6422)
!6463 = !DILocation(line: 200, column: 3340, scope: !6422)
!6464 = !DILocation(line: 200, column: 3381, scope: !6422)
!6465 = !DILocation(line: 200, column: 3387, scope: !6422)
!6466 = !DILocation(line: 200, column: 3393, scope: !6422)
!6467 = !DILocation(line: 200, column: 3404, scope: !6422)
!6468 = !DILocation(line: 200, column: 3415, scope: !6422)
!6469 = !DILocation(line: 200, column: 3416, scope: !6422)
!6470 = !DILocation(line: 200, column: 3420, scope: !6422)
!6471 = !DILocation(line: 200, column: 3424, scope: !6422)
!6472 = !DILocation(line: 200, column: 3428, scope: !6422)
!6473 = !DILocation(line: 200, column: 3356, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !6422, file: !16, discriminator: 2)
!6475 = !DILocation(line: 200, column: 3461, scope: !6422)
!6476 = !DILocation(line: 200, column: 3464, scope: !6422)
!6477 = !DILocation(line: 200, column: 3468, scope: !6422)
!6478 = !DILocation(line: 200, column: 3471, scope: !6422)
!6479 = !DILocation(line: 200, column: 3475, scope: !6422)
!6480 = !DILocation(line: 200, column: 3486, scope: !6422)
!6481 = !DILocation(line: 200, column: 3497, scope: !6422)
!6482 = !DILocation(line: 200, column: 3498, scope: !6422)
!6483 = !DILocation(line: 200, column: 3502, scope: !6422)
!6484 = !DILocation(line: 200, column: 3506, scope: !6422)
!6485 = !DILocation(line: 200, column: 3510, scope: !6422)
!6486 = !DILocation(line: 200, column: 3436, scope: !6487)
!6487 = !DILexicalBlockFile(scope: !6422, file: !16, discriminator: 3)
!6488 = !DILocation(line: 200, column: 3517, scope: !6422)
!6489 = distinct !DISubprogram(name: "avg_rv40_qpel8_v_lowpass", scope: !16, file: !16, line: 200, type: !5138, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6490 = !DILocalVariable(name: "dst", arg: 1, scope: !6489, file: !16, line: 200, type: !48)
!6491 = !DILocation(line: 200, column: 1301, scope: !6489)
!6492 = !DILocalVariable(name: "src", arg: 2, scope: !6489, file: !16, line: 200, type: !49)
!6493 = !DILocation(line: 200, column: 1321, scope: !6489)
!6494 = !DILocalVariable(name: "dstStride", arg: 3, scope: !6489, file: !16, line: 200, type: !19)
!6495 = !DILocation(line: 200, column: 1330, scope: !6489)
!6496 = !DILocalVariable(name: "srcStride", arg: 4, scope: !6489, file: !16, line: 200, type: !19)
!6497 = !DILocation(line: 200, column: 1345, scope: !6489)
!6498 = !DILocalVariable(name: "w", arg: 5, scope: !6489, file: !16, line: 200, type: !18)
!6499 = !DILocation(line: 200, column: 1366, scope: !6489)
!6500 = !DILocalVariable(name: "C1", arg: 6, scope: !6489, file: !16, line: 200, type: !18)
!6501 = !DILocation(line: 200, column: 1379, scope: !6489)
!6502 = !DILocalVariable(name: "C2", arg: 7, scope: !6489, file: !16, line: 200, type: !18)
!6503 = !DILocation(line: 200, column: 1393, scope: !6489)
!6504 = !DILocalVariable(name: "SHIFT", arg: 8, scope: !6489, file: !16, line: 200, type: !18)
!6505 = !DILocation(line: 200, column: 1407, scope: !6489)
!6506 = !DILocalVariable(name: "cm", scope: !6489, file: !16, line: 200, type: !49)
!6507 = !DILocation(line: 200, column: 1430, scope: !6489)
!6508 = !DILocalVariable(name: "i", scope: !6489, file: !16, line: 200, type: !19)
!6509 = !DILocation(line: 200, column: 1459, scope: !6489)
!6510 = !DILocation(line: 200, column: 1468, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6489, file: !16, line: 200, column: 1462)
!6512 = !DILocation(line: 200, column: 1466, scope: !6511)
!6513 = !DILocation(line: 200, column: 1473, scope: !6514)
!6514 = !DILexicalBlockFile(scope: !6515, file: !16, discriminator: 1)
!6515 = distinct !DILexicalBlock(scope: !6511, file: !16, line: 200, column: 1462)
!6516 = !DILocation(line: 200, column: 1477, scope: !6514)
!6517 = !DILocation(line: 200, column: 1475, scope: !6514)
!6518 = !DILocation(line: 200, column: 1462, scope: !6514)
!6519 = !DILocalVariable(name: "srcB", scope: !6520, file: !16, line: 200, type: !18)
!6520 = distinct !DILexicalBlock(scope: !6515, file: !16, line: 200, column: 1485)
!6521 = !DILocation(line: 200, column: 1497, scope: !6520)
!6522 = !DILocation(line: 200, column: 1511, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !6520, file: !16, discriminator: 2)
!6524 = !DILocation(line: 200, column: 1510, scope: !6523)
!6525 = !DILocation(line: 200, column: 1504, scope: !6523)
!6526 = !DILocation(line: 200, column: 1497, scope: !6523)
!6527 = !DILocalVariable(name: "srcA", scope: !6520, file: !16, line: 200, type: !18)
!6528 = !DILocation(line: 200, column: 1533, scope: !6520)
!6529 = !DILocation(line: 200, column: 1547, scope: !6523)
!6530 = !DILocation(line: 200, column: 1546, scope: !6523)
!6531 = !DILocation(line: 200, column: 1540, scope: !6523)
!6532 = !DILocation(line: 200, column: 1533, scope: !6523)
!6533 = !DILocalVariable(name: "src0", scope: !6520, file: !16, line: 200, type: !18)
!6534 = !DILocation(line: 200, column: 1569, scope: !6520)
!6535 = !DILocation(line: 200, column: 1583, scope: !6523)
!6536 = !DILocation(line: 200, column: 1582, scope: !6523)
!6537 = !DILocation(line: 200, column: 1576, scope: !6523)
!6538 = !DILocation(line: 200, column: 1569, scope: !6523)
!6539 = !DILocalVariable(name: "src1", scope: !6520, file: !16, line: 200, type: !18)
!6540 = !DILocation(line: 200, column: 1605, scope: !6520)
!6541 = !DILocation(line: 200, column: 1619, scope: !6523)
!6542 = !DILocation(line: 200, column: 1618, scope: !6523)
!6543 = !DILocation(line: 200, column: 1612, scope: !6523)
!6544 = !DILocation(line: 200, column: 1605, scope: !6523)
!6545 = !DILocalVariable(name: "src2", scope: !6520, file: !16, line: 200, type: !18)
!6546 = !DILocation(line: 200, column: 1641, scope: !6520)
!6547 = !DILocation(line: 200, column: 1655, scope: !6523)
!6548 = !DILocation(line: 200, column: 1654, scope: !6523)
!6549 = !DILocation(line: 200, column: 1648, scope: !6523)
!6550 = !DILocation(line: 200, column: 1641, scope: !6523)
!6551 = !DILocalVariable(name: "src3", scope: !6520, file: !16, line: 200, type: !18)
!6552 = !DILocation(line: 200, column: 1677, scope: !6520)
!6553 = !DILocation(line: 200, column: 1691, scope: !6523)
!6554 = !DILocation(line: 200, column: 1690, scope: !6523)
!6555 = !DILocation(line: 200, column: 1684, scope: !6523)
!6556 = !DILocation(line: 200, column: 1677, scope: !6523)
!6557 = !DILocalVariable(name: "src4", scope: !6520, file: !16, line: 200, type: !18)
!6558 = !DILocation(line: 200, column: 1713, scope: !6520)
!6559 = !DILocation(line: 200, column: 1727, scope: !6523)
!6560 = !DILocation(line: 200, column: 1726, scope: !6523)
!6561 = !DILocation(line: 200, column: 1720, scope: !6523)
!6562 = !DILocation(line: 200, column: 1713, scope: !6523)
!6563 = !DILocalVariable(name: "src5", scope: !6520, file: !16, line: 200, type: !18)
!6564 = !DILocation(line: 200, column: 1749, scope: !6520)
!6565 = !DILocation(line: 200, column: 1763, scope: !6523)
!6566 = !DILocation(line: 200, column: 1762, scope: !6523)
!6567 = !DILocation(line: 200, column: 1756, scope: !6523)
!6568 = !DILocation(line: 200, column: 1749, scope: !6523)
!6569 = !DILocalVariable(name: "src6", scope: !6520, file: !16, line: 200, type: !18)
!6570 = !DILocation(line: 200, column: 1785, scope: !6520)
!6571 = !DILocation(line: 200, column: 1799, scope: !6523)
!6572 = !DILocation(line: 200, column: 1798, scope: !6523)
!6573 = !DILocation(line: 200, column: 1792, scope: !6523)
!6574 = !DILocation(line: 200, column: 1785, scope: !6523)
!6575 = !DILocalVariable(name: "src7", scope: !6520, file: !16, line: 200, type: !18)
!6576 = !DILocation(line: 200, column: 1821, scope: !6520)
!6577 = !DILocation(line: 200, column: 1835, scope: !6523)
!6578 = !DILocation(line: 200, column: 1834, scope: !6523)
!6579 = !DILocation(line: 200, column: 1828, scope: !6523)
!6580 = !DILocation(line: 200, column: 1821, scope: !6523)
!6581 = !DILocalVariable(name: "src8", scope: !6520, file: !16, line: 200, type: !18)
!6582 = !DILocation(line: 200, column: 1857, scope: !6520)
!6583 = !DILocation(line: 200, column: 1871, scope: !6523)
!6584 = !DILocation(line: 200, column: 1870, scope: !6523)
!6585 = !DILocation(line: 200, column: 1864, scope: !6523)
!6586 = !DILocation(line: 200, column: 1857, scope: !6523)
!6587 = !DILocalVariable(name: "src9", scope: !6520, file: !16, line: 200, type: !18)
!6588 = !DILocation(line: 200, column: 1893, scope: !6520)
!6589 = !DILocation(line: 200, column: 1907, scope: !6523)
!6590 = !DILocation(line: 200, column: 1906, scope: !6523)
!6591 = !DILocation(line: 200, column: 1900, scope: !6523)
!6592 = !DILocation(line: 200, column: 1893, scope: !6523)
!6593 = !DILocalVariable(name: "src10", scope: !6520, file: !16, line: 200, type: !18)
!6594 = !DILocation(line: 200, column: 1929, scope: !6520)
!6595 = !DILocation(line: 200, column: 1944, scope: !6523)
!6596 = !DILocation(line: 200, column: 1943, scope: !6523)
!6597 = !DILocation(line: 200, column: 1937, scope: !6523)
!6598 = !DILocation(line: 200, column: 1929, scope: !6523)
!6599 = !DILocation(line: 200, column: 1984, scope: !6523)
!6600 = !DILocation(line: 200, column: 1983, scope: !6523)
!6601 = !DILocation(line: 200, column: 1978, scope: !6523)
!6602 = !DILocation(line: 200, column: 1977, scope: !6523)
!6603 = !DILocation(line: 200, column: 2000, scope: !6523)
!6604 = !DILocation(line: 200, column: 2007, scope: !6523)
!6605 = !DILocation(line: 200, column: 2005, scope: !6523)
!6606 = !DILocation(line: 200, column: 2017, scope: !6523)
!6607 = !DILocation(line: 200, column: 2022, scope: !6523)
!6608 = !DILocation(line: 200, column: 2021, scope: !6523)
!6609 = !DILocation(line: 200, column: 2015, scope: !6523)
!6610 = !DILocation(line: 200, column: 2012, scope: !6523)
!6611 = !DILocation(line: 200, column: 2030, scope: !6523)
!6612 = !DILocation(line: 200, column: 2035, scope: !6523)
!6613 = !DILocation(line: 200, column: 2034, scope: !6523)
!6614 = !DILocation(line: 200, column: 2028, scope: !6523)
!6615 = !DILocation(line: 200, column: 2040, scope: !6523)
!6616 = !DILocation(line: 200, column: 2045, scope: !6523)
!6617 = !DILocation(line: 200, column: 2044, scope: !6523)
!6618 = !DILocation(line: 200, column: 2038, scope: !6523)
!6619 = !DILocation(line: 200, column: 2055, scope: !6523)
!6620 = !DILocation(line: 200, column: 2060, scope: !6523)
!6621 = !DILocation(line: 200, column: 2052, scope: !6523)
!6622 = !DILocation(line: 200, column: 2048, scope: !6523)
!6623 = !DILocation(line: 200, column: 2069, scope: !6523)
!6624 = !DILocation(line: 200, column: 2066, scope: !6523)
!6625 = !DILocation(line: 200, column: 1996, scope: !6523)
!6626 = !DILocation(line: 200, column: 1995, scope: !6523)
!6627 = !DILocation(line: 200, column: 2075, scope: !6523)
!6628 = !DILocation(line: 200, column: 2078, scope: !6523)
!6629 = !DILocation(line: 200, column: 1975, scope: !6523)
!6630 = !DILocation(line: 200, column: 1962, scope: !6523)
!6631 = !DILocation(line: 200, column: 1961, scope: !6523)
!6632 = !DILocation(line: 200, column: 1956, scope: !6523)
!6633 = !DILocation(line: 200, column: 1973, scope: !6523)
!6634 = !DILocation(line: 200, column: 2112, scope: !6523)
!6635 = !DILocation(line: 200, column: 2111, scope: !6523)
!6636 = !DILocation(line: 200, column: 2106, scope: !6523)
!6637 = !DILocation(line: 200, column: 2105, scope: !6523)
!6638 = !DILocation(line: 200, column: 2128, scope: !6523)
!6639 = !DILocation(line: 200, column: 2135, scope: !6523)
!6640 = !DILocation(line: 200, column: 2133, scope: !6523)
!6641 = !DILocation(line: 200, column: 2145, scope: !6523)
!6642 = !DILocation(line: 200, column: 2150, scope: !6523)
!6643 = !DILocation(line: 200, column: 2149, scope: !6523)
!6644 = !DILocation(line: 200, column: 2143, scope: !6523)
!6645 = !DILocation(line: 200, column: 2140, scope: !6523)
!6646 = !DILocation(line: 200, column: 2158, scope: !6523)
!6647 = !DILocation(line: 200, column: 2163, scope: !6523)
!6648 = !DILocation(line: 200, column: 2162, scope: !6523)
!6649 = !DILocation(line: 200, column: 2156, scope: !6523)
!6650 = !DILocation(line: 200, column: 2168, scope: !6523)
!6651 = !DILocation(line: 200, column: 2173, scope: !6523)
!6652 = !DILocation(line: 200, column: 2172, scope: !6523)
!6653 = !DILocation(line: 200, column: 2166, scope: !6523)
!6654 = !DILocation(line: 200, column: 2183, scope: !6523)
!6655 = !DILocation(line: 200, column: 2188, scope: !6523)
!6656 = !DILocation(line: 200, column: 2180, scope: !6523)
!6657 = !DILocation(line: 200, column: 2176, scope: !6523)
!6658 = !DILocation(line: 200, column: 2197, scope: !6523)
!6659 = !DILocation(line: 200, column: 2194, scope: !6523)
!6660 = !DILocation(line: 200, column: 2124, scope: !6523)
!6661 = !DILocation(line: 200, column: 2123, scope: !6523)
!6662 = !DILocation(line: 200, column: 2203, scope: !6523)
!6663 = !DILocation(line: 200, column: 2206, scope: !6523)
!6664 = !DILocation(line: 200, column: 2103, scope: !6523)
!6665 = !DILocation(line: 200, column: 2090, scope: !6523)
!6666 = !DILocation(line: 200, column: 2089, scope: !6523)
!6667 = !DILocation(line: 200, column: 2084, scope: !6523)
!6668 = !DILocation(line: 200, column: 2101, scope: !6523)
!6669 = !DILocation(line: 200, column: 2240, scope: !6523)
!6670 = !DILocation(line: 200, column: 2239, scope: !6523)
!6671 = !DILocation(line: 200, column: 2234, scope: !6523)
!6672 = !DILocation(line: 200, column: 2233, scope: !6523)
!6673 = !DILocation(line: 200, column: 2256, scope: !6523)
!6674 = !DILocation(line: 200, column: 2263, scope: !6523)
!6675 = !DILocation(line: 200, column: 2261, scope: !6523)
!6676 = !DILocation(line: 200, column: 2273, scope: !6523)
!6677 = !DILocation(line: 200, column: 2278, scope: !6523)
!6678 = !DILocation(line: 200, column: 2277, scope: !6523)
!6679 = !DILocation(line: 200, column: 2271, scope: !6523)
!6680 = !DILocation(line: 200, column: 2268, scope: !6523)
!6681 = !DILocation(line: 200, column: 2286, scope: !6523)
!6682 = !DILocation(line: 200, column: 2291, scope: !6523)
!6683 = !DILocation(line: 200, column: 2290, scope: !6523)
!6684 = !DILocation(line: 200, column: 2284, scope: !6523)
!6685 = !DILocation(line: 200, column: 2296, scope: !6523)
!6686 = !DILocation(line: 200, column: 2301, scope: !6523)
!6687 = !DILocation(line: 200, column: 2300, scope: !6523)
!6688 = !DILocation(line: 200, column: 2294, scope: !6523)
!6689 = !DILocation(line: 200, column: 2311, scope: !6523)
!6690 = !DILocation(line: 200, column: 2316, scope: !6523)
!6691 = !DILocation(line: 200, column: 2308, scope: !6523)
!6692 = !DILocation(line: 200, column: 2304, scope: !6523)
!6693 = !DILocation(line: 200, column: 2325, scope: !6523)
!6694 = !DILocation(line: 200, column: 2322, scope: !6523)
!6695 = !DILocation(line: 200, column: 2252, scope: !6523)
!6696 = !DILocation(line: 200, column: 2251, scope: !6523)
!6697 = !DILocation(line: 200, column: 2331, scope: !6523)
!6698 = !DILocation(line: 200, column: 2334, scope: !6523)
!6699 = !DILocation(line: 200, column: 2231, scope: !6523)
!6700 = !DILocation(line: 200, column: 2218, scope: !6523)
!6701 = !DILocation(line: 200, column: 2217, scope: !6523)
!6702 = !DILocation(line: 200, column: 2212, scope: !6523)
!6703 = !DILocation(line: 200, column: 2229, scope: !6523)
!6704 = !DILocation(line: 200, column: 2368, scope: !6523)
!6705 = !DILocation(line: 200, column: 2367, scope: !6523)
!6706 = !DILocation(line: 200, column: 2362, scope: !6523)
!6707 = !DILocation(line: 200, column: 2361, scope: !6523)
!6708 = !DILocation(line: 200, column: 2384, scope: !6523)
!6709 = !DILocation(line: 200, column: 2391, scope: !6523)
!6710 = !DILocation(line: 200, column: 2389, scope: !6523)
!6711 = !DILocation(line: 200, column: 2401, scope: !6523)
!6712 = !DILocation(line: 200, column: 2406, scope: !6523)
!6713 = !DILocation(line: 200, column: 2405, scope: !6523)
!6714 = !DILocation(line: 200, column: 2399, scope: !6523)
!6715 = !DILocation(line: 200, column: 2396, scope: !6523)
!6716 = !DILocation(line: 200, column: 2414, scope: !6523)
!6717 = !DILocation(line: 200, column: 2419, scope: !6523)
!6718 = !DILocation(line: 200, column: 2418, scope: !6523)
!6719 = !DILocation(line: 200, column: 2412, scope: !6523)
!6720 = !DILocation(line: 200, column: 2424, scope: !6523)
!6721 = !DILocation(line: 200, column: 2429, scope: !6523)
!6722 = !DILocation(line: 200, column: 2428, scope: !6523)
!6723 = !DILocation(line: 200, column: 2422, scope: !6523)
!6724 = !DILocation(line: 200, column: 2439, scope: !6523)
!6725 = !DILocation(line: 200, column: 2444, scope: !6523)
!6726 = !DILocation(line: 200, column: 2436, scope: !6523)
!6727 = !DILocation(line: 200, column: 2432, scope: !6523)
!6728 = !DILocation(line: 200, column: 2453, scope: !6523)
!6729 = !DILocation(line: 200, column: 2450, scope: !6523)
!6730 = !DILocation(line: 200, column: 2380, scope: !6523)
!6731 = !DILocation(line: 200, column: 2379, scope: !6523)
!6732 = !DILocation(line: 200, column: 2459, scope: !6523)
!6733 = !DILocation(line: 200, column: 2462, scope: !6523)
!6734 = !DILocation(line: 200, column: 2359, scope: !6523)
!6735 = !DILocation(line: 200, column: 2346, scope: !6523)
!6736 = !DILocation(line: 200, column: 2345, scope: !6523)
!6737 = !DILocation(line: 200, column: 2340, scope: !6523)
!6738 = !DILocation(line: 200, column: 2357, scope: !6523)
!6739 = !DILocation(line: 200, column: 2496, scope: !6523)
!6740 = !DILocation(line: 200, column: 2495, scope: !6523)
!6741 = !DILocation(line: 200, column: 2490, scope: !6523)
!6742 = !DILocation(line: 200, column: 2489, scope: !6523)
!6743 = !DILocation(line: 200, column: 2512, scope: !6523)
!6744 = !DILocation(line: 200, column: 2519, scope: !6523)
!6745 = !DILocation(line: 200, column: 2517, scope: !6523)
!6746 = !DILocation(line: 200, column: 2529, scope: !6523)
!6747 = !DILocation(line: 200, column: 2534, scope: !6523)
!6748 = !DILocation(line: 200, column: 2533, scope: !6523)
!6749 = !DILocation(line: 200, column: 2527, scope: !6523)
!6750 = !DILocation(line: 200, column: 2524, scope: !6523)
!6751 = !DILocation(line: 200, column: 2542, scope: !6523)
!6752 = !DILocation(line: 200, column: 2547, scope: !6523)
!6753 = !DILocation(line: 200, column: 2546, scope: !6523)
!6754 = !DILocation(line: 200, column: 2540, scope: !6523)
!6755 = !DILocation(line: 200, column: 2552, scope: !6523)
!6756 = !DILocation(line: 200, column: 2557, scope: !6523)
!6757 = !DILocation(line: 200, column: 2556, scope: !6523)
!6758 = !DILocation(line: 200, column: 2550, scope: !6523)
!6759 = !DILocation(line: 200, column: 2567, scope: !6523)
!6760 = !DILocation(line: 200, column: 2572, scope: !6523)
!6761 = !DILocation(line: 200, column: 2564, scope: !6523)
!6762 = !DILocation(line: 200, column: 2560, scope: !6523)
!6763 = !DILocation(line: 200, column: 2581, scope: !6523)
!6764 = !DILocation(line: 200, column: 2578, scope: !6523)
!6765 = !DILocation(line: 200, column: 2508, scope: !6523)
!6766 = !DILocation(line: 200, column: 2507, scope: !6523)
!6767 = !DILocation(line: 200, column: 2587, scope: !6523)
!6768 = !DILocation(line: 200, column: 2590, scope: !6523)
!6769 = !DILocation(line: 200, column: 2487, scope: !6523)
!6770 = !DILocation(line: 200, column: 2474, scope: !6523)
!6771 = !DILocation(line: 200, column: 2473, scope: !6523)
!6772 = !DILocation(line: 200, column: 2468, scope: !6523)
!6773 = !DILocation(line: 200, column: 2485, scope: !6523)
!6774 = !DILocation(line: 200, column: 2624, scope: !6523)
!6775 = !DILocation(line: 200, column: 2623, scope: !6523)
!6776 = !DILocation(line: 200, column: 2618, scope: !6523)
!6777 = !DILocation(line: 200, column: 2617, scope: !6523)
!6778 = !DILocation(line: 200, column: 2640, scope: !6523)
!6779 = !DILocation(line: 200, column: 2647, scope: !6523)
!6780 = !DILocation(line: 200, column: 2645, scope: !6523)
!6781 = !DILocation(line: 200, column: 2657, scope: !6523)
!6782 = !DILocation(line: 200, column: 2662, scope: !6523)
!6783 = !DILocation(line: 200, column: 2661, scope: !6523)
!6784 = !DILocation(line: 200, column: 2655, scope: !6523)
!6785 = !DILocation(line: 200, column: 2652, scope: !6523)
!6786 = !DILocation(line: 200, column: 2670, scope: !6523)
!6787 = !DILocation(line: 200, column: 2675, scope: !6523)
!6788 = !DILocation(line: 200, column: 2674, scope: !6523)
!6789 = !DILocation(line: 200, column: 2668, scope: !6523)
!6790 = !DILocation(line: 200, column: 2680, scope: !6523)
!6791 = !DILocation(line: 200, column: 2685, scope: !6523)
!6792 = !DILocation(line: 200, column: 2684, scope: !6523)
!6793 = !DILocation(line: 200, column: 2678, scope: !6523)
!6794 = !DILocation(line: 200, column: 2695, scope: !6523)
!6795 = !DILocation(line: 200, column: 2700, scope: !6523)
!6796 = !DILocation(line: 200, column: 2692, scope: !6523)
!6797 = !DILocation(line: 200, column: 2688, scope: !6523)
!6798 = !DILocation(line: 200, column: 2709, scope: !6523)
!6799 = !DILocation(line: 200, column: 2706, scope: !6523)
!6800 = !DILocation(line: 200, column: 2636, scope: !6523)
!6801 = !DILocation(line: 200, column: 2635, scope: !6523)
!6802 = !DILocation(line: 200, column: 2715, scope: !6523)
!6803 = !DILocation(line: 200, column: 2718, scope: !6523)
!6804 = !DILocation(line: 200, column: 2615, scope: !6523)
!6805 = !DILocation(line: 200, column: 2602, scope: !6523)
!6806 = !DILocation(line: 200, column: 2601, scope: !6523)
!6807 = !DILocation(line: 200, column: 2596, scope: !6523)
!6808 = !DILocation(line: 200, column: 2613, scope: !6523)
!6809 = !DILocation(line: 200, column: 2752, scope: !6523)
!6810 = !DILocation(line: 200, column: 2751, scope: !6523)
!6811 = !DILocation(line: 200, column: 2746, scope: !6523)
!6812 = !DILocation(line: 200, column: 2745, scope: !6523)
!6813 = !DILocation(line: 200, column: 2768, scope: !6523)
!6814 = !DILocation(line: 200, column: 2775, scope: !6523)
!6815 = !DILocation(line: 200, column: 2773, scope: !6523)
!6816 = !DILocation(line: 200, column: 2785, scope: !6523)
!6817 = !DILocation(line: 200, column: 2790, scope: !6523)
!6818 = !DILocation(line: 200, column: 2789, scope: !6523)
!6819 = !DILocation(line: 200, column: 2783, scope: !6523)
!6820 = !DILocation(line: 200, column: 2780, scope: !6523)
!6821 = !DILocation(line: 200, column: 2798, scope: !6523)
!6822 = !DILocation(line: 200, column: 2803, scope: !6523)
!6823 = !DILocation(line: 200, column: 2802, scope: !6523)
!6824 = !DILocation(line: 200, column: 2796, scope: !6523)
!6825 = !DILocation(line: 200, column: 2808, scope: !6523)
!6826 = !DILocation(line: 200, column: 2813, scope: !6523)
!6827 = !DILocation(line: 200, column: 2812, scope: !6523)
!6828 = !DILocation(line: 200, column: 2806, scope: !6523)
!6829 = !DILocation(line: 200, column: 2823, scope: !6523)
!6830 = !DILocation(line: 200, column: 2828, scope: !6523)
!6831 = !DILocation(line: 200, column: 2820, scope: !6523)
!6832 = !DILocation(line: 200, column: 2816, scope: !6523)
!6833 = !DILocation(line: 200, column: 2837, scope: !6523)
!6834 = !DILocation(line: 200, column: 2834, scope: !6523)
!6835 = !DILocation(line: 200, column: 2764, scope: !6523)
!6836 = !DILocation(line: 200, column: 2763, scope: !6523)
!6837 = !DILocation(line: 200, column: 2843, scope: !6523)
!6838 = !DILocation(line: 200, column: 2846, scope: !6523)
!6839 = !DILocation(line: 200, column: 2743, scope: !6523)
!6840 = !DILocation(line: 200, column: 2730, scope: !6523)
!6841 = !DILocation(line: 200, column: 2729, scope: !6523)
!6842 = !DILocation(line: 200, column: 2724, scope: !6523)
!6843 = !DILocation(line: 200, column: 2741, scope: !6523)
!6844 = !DILocation(line: 200, column: 2880, scope: !6523)
!6845 = !DILocation(line: 200, column: 2879, scope: !6523)
!6846 = !DILocation(line: 200, column: 2874, scope: !6523)
!6847 = !DILocation(line: 200, column: 2873, scope: !6523)
!6848 = !DILocation(line: 200, column: 2896, scope: !6523)
!6849 = !DILocation(line: 200, column: 2903, scope: !6523)
!6850 = !DILocation(line: 200, column: 2901, scope: !6523)
!6851 = !DILocation(line: 200, column: 2914, scope: !6523)
!6852 = !DILocation(line: 200, column: 2919, scope: !6523)
!6853 = !DILocation(line: 200, column: 2918, scope: !6523)
!6854 = !DILocation(line: 200, column: 2912, scope: !6523)
!6855 = !DILocation(line: 200, column: 2909, scope: !6523)
!6856 = !DILocation(line: 200, column: 2927, scope: !6523)
!6857 = !DILocation(line: 200, column: 2932, scope: !6523)
!6858 = !DILocation(line: 200, column: 2931, scope: !6523)
!6859 = !DILocation(line: 200, column: 2925, scope: !6523)
!6860 = !DILocation(line: 200, column: 2937, scope: !6523)
!6861 = !DILocation(line: 200, column: 2942, scope: !6523)
!6862 = !DILocation(line: 200, column: 2941, scope: !6523)
!6863 = !DILocation(line: 200, column: 2935, scope: !6523)
!6864 = !DILocation(line: 200, column: 2952, scope: !6523)
!6865 = !DILocation(line: 200, column: 2957, scope: !6523)
!6866 = !DILocation(line: 200, column: 2949, scope: !6523)
!6867 = !DILocation(line: 200, column: 2945, scope: !6523)
!6868 = !DILocation(line: 200, column: 2966, scope: !6523)
!6869 = !DILocation(line: 200, column: 2963, scope: !6523)
!6870 = !DILocation(line: 200, column: 2892, scope: !6523)
!6871 = !DILocation(line: 200, column: 2891, scope: !6523)
!6872 = !DILocation(line: 200, column: 2972, scope: !6523)
!6873 = !DILocation(line: 200, column: 2975, scope: !6523)
!6874 = !DILocation(line: 200, column: 2871, scope: !6523)
!6875 = !DILocation(line: 200, column: 2858, scope: !6523)
!6876 = !DILocation(line: 200, column: 2857, scope: !6523)
!6877 = !DILocation(line: 200, column: 2852, scope: !6523)
!6878 = !DILocation(line: 200, column: 2869, scope: !6523)
!6879 = !DILocation(line: 200, column: 2984, scope: !6523)
!6880 = !DILocation(line: 200, column: 2991, scope: !6523)
!6881 = !DILocation(line: 200, column: 2995, scope: !6523)
!6882 = !DILocation(line: 200, column: 1481, scope: !6883)
!6883 = !DILexicalBlockFile(scope: !6515, file: !16, discriminator: 3)
!6884 = !DILocation(line: 200, column: 1462, scope: !6883)
!6885 = distinct !{!6885, !6886}
!6886 = !DILocation(line: 200, column: 1462, scope: !6489)
!6887 = !DILocation(line: 200, column: 2996, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6489, file: !16, discriminator: 4)
!6889 = distinct !DISubprogram(name: "avg_pixels16_xy2_8_c", scope: !16, file: !16, line: 265, type: !5854, isLocal: true, isDefinition: true, scopeLine: 265, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6890 = !DILocalVariable(name: "block", arg: 1, scope: !6889, file: !16, line: 265, type: !48)
!6891 = !DILocation(line: 265, column: 1341, scope: !6889)
!6892 = !DILocalVariable(name: "pixels", arg: 2, scope: !6889, file: !16, line: 265, type: !49)
!6893 = !DILocation(line: 265, column: 1363, scope: !6889)
!6894 = !DILocalVariable(name: "line_size", arg: 3, scope: !6889, file: !16, line: 265, type: !50)
!6895 = !DILocation(line: 265, column: 1381, scope: !6889)
!6896 = !DILocalVariable(name: "h", arg: 4, scope: !6889, file: !16, line: 265, type: !19)
!6897 = !DILocation(line: 265, column: 1396, scope: !6889)
!6898 = !DILocation(line: 265, column: 1421, scope: !6889)
!6899 = !DILocation(line: 265, column: 1428, scope: !6889)
!6900 = !DILocation(line: 265, column: 1436, scope: !6889)
!6901 = !DILocation(line: 265, column: 1447, scope: !6889)
!6902 = !DILocation(line: 265, column: 1401, scope: !6889)
!6903 = !DILocation(line: 265, column: 1471, scope: !6889)
!6904 = !DILocation(line: 265, column: 1477, scope: !6889)
!6905 = !DILocation(line: 265, column: 1482, scope: !6889)
!6906 = !DILocation(line: 265, column: 1489, scope: !6889)
!6907 = !DILocation(line: 265, column: 1494, scope: !6889)
!6908 = !DILocation(line: 265, column: 1505, scope: !6889)
!6909 = !DILocation(line: 265, column: 1451, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6889, file: !16, discriminator: 1)
!6911 = !DILocation(line: 265, column: 1509, scope: !6889)
!6912 = distinct !DISubprogram(name: "avg_pixels8_xy2_8_c", scope: !16, file: !16, line: 265, type: !5854, isLocal: true, isDefinition: true, scopeLine: 265, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6913 = !DILocalVariable(name: "block", arg: 1, scope: !6912, file: !16, line: 265, type: !48)
!6914 = !DILocation(line: 265, column: 49, scope: !6912)
!6915 = !DILocalVariable(name: "pixels", arg: 2, scope: !6912, file: !16, line: 265, type: !49)
!6916 = !DILocation(line: 265, column: 71, scope: !6912)
!6917 = !DILocalVariable(name: "line_size", arg: 3, scope: !6912, file: !16, line: 265, type: !50)
!6918 = !DILocation(line: 265, column: 89, scope: !6912)
!6919 = !DILocalVariable(name: "h", arg: 4, scope: !6912, file: !16, line: 265, type: !19)
!6920 = !DILocation(line: 265, column: 104, scope: !6912)
!6921 = !DILocalVariable(name: "j", scope: !6912, file: !16, line: 265, type: !19)
!6922 = !DILocation(line: 265, column: 113, scope: !6912)
!6923 = !DILocation(line: 265, column: 123, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6912, file: !16, line: 265, column: 116)
!6925 = !DILocation(line: 265, column: 121, scope: !6924)
!6926 = !DILocation(line: 265, column: 128, scope: !6927)
!6927 = !DILexicalBlockFile(scope: !6928, file: !16, discriminator: 1)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !16, line: 265, column: 116)
!6929 = !DILocation(line: 265, column: 130, scope: !6927)
!6930 = !DILocation(line: 265, column: 116, scope: !6927)
!6931 = !DILocalVariable(name: "i", scope: !6932, file: !16, line: 265, type: !19)
!6932 = distinct !DILexicalBlock(scope: !6928, file: !16, line: 265, column: 140)
!6933 = !DILocation(line: 265, column: 146, scope: !6932)
!6934 = !DILocalVariable(name: "a", scope: !6932, file: !16, line: 265, type: !5901)
!6935 = !DILocation(line: 265, column: 164, scope: !6932)
!6936 = !DILocation(line: 265, column: 200, scope: !6937)
!6937 = !DILexicalBlockFile(scope: !6932, file: !16, discriminator: 2)
!6938 = !DILocation(line: 265, column: 210, scope: !6937)
!6939 = !DILocation(line: 265, column: 164, scope: !6937)
!6940 = !DILocalVariable(name: "b", scope: !6932, file: !16, line: 265, type: !5901)
!6941 = !DILocation(line: 265, column: 229, scope: !6932)
!6942 = !DILocation(line: 265, column: 265, scope: !6937)
!6943 = !DILocation(line: 265, column: 272, scope: !6937)
!6944 = !DILocation(line: 265, column: 279, scope: !6937)
!6945 = !DILocation(line: 265, column: 229, scope: !6937)
!6946 = !DILocalVariable(name: "l0", scope: !6932, file: !16, line: 265, type: !10)
!6947 = !DILocation(line: 265, column: 292, scope: !6932)
!6948 = !DILocation(line: 265, column: 298, scope: !6937)
!6949 = !DILocation(line: 265, column: 300, scope: !6937)
!6950 = !DILocation(line: 265, column: 319, scope: !6937)
!6951 = !DILocation(line: 265, column: 321, scope: !6937)
!6952 = !DILocation(line: 265, column: 316, scope: !6937)
!6953 = !DILocation(line: 265, column: 337, scope: !6937)
!6954 = !DILocation(line: 265, column: 297, scope: !6937)
!6955 = !DILocation(line: 265, column: 292, scope: !6937)
!6956 = !DILocalVariable(name: "h0", scope: !6932, file: !16, line: 265, type: !10)
!6957 = !DILocation(line: 265, column: 362, scope: !6932)
!6958 = !DILocation(line: 265, column: 369, scope: !6937)
!6959 = !DILocation(line: 265, column: 371, scope: !6937)
!6960 = !DILocation(line: 265, column: 387, scope: !6937)
!6961 = !DILocation(line: 265, column: 397, scope: !6937)
!6962 = !DILocation(line: 265, column: 399, scope: !6937)
!6963 = !DILocation(line: 265, column: 415, scope: !6937)
!6964 = !DILocation(line: 265, column: 393, scope: !6937)
!6965 = !DILocation(line: 265, column: 367, scope: !6937)
!6966 = !DILocation(line: 265, column: 362, scope: !6937)
!6967 = !DILocalVariable(name: "l1", scope: !6932, file: !16, line: 265, type: !10)
!6968 = !DILocation(line: 265, column: 431, scope: !6932)
!6969 = !DILocalVariable(name: "h1", scope: !6932, file: !16, line: 265, type: !10)
!6970 = !DILocation(line: 265, column: 435, scope: !6932)
!6971 = !DILocation(line: 265, column: 449, scope: !6937)
!6972 = !DILocation(line: 265, column: 446, scope: !6937)
!6973 = !DILocation(line: 265, column: 467, scope: !6937)
!6974 = !DILocation(line: 265, column: 465, scope: !6937)
!6975 = !DILocation(line: 265, column: 472, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6977, file: !16, discriminator: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !16, line: 265, column: 460)
!6978 = distinct !DILexicalBlock(scope: !6932, file: !16, line: 265, column: 460)
!6979 = !DILocation(line: 265, column: 476, scope: !6976)
!6980 = !DILocation(line: 265, column: 474, scope: !6976)
!6981 = !DILocation(line: 265, column: 460, scope: !6976)
!6982 = !DILocalVariable(name: "a", scope: !6983, file: !16, line: 265, type: !10)
!6983 = distinct !DILexicalBlock(scope: !6977, file: !16, line: 265, column: 487)
!6984 = !DILocation(line: 265, column: 498, scope: !6983)
!6985 = !DILocation(line: 265, column: 534, scope: !6986)
!6986 = !DILexicalBlockFile(scope: !6983, file: !16, discriminator: 4)
!6987 = !DILocation(line: 265, column: 544, scope: !6986)
!6988 = !DILocation(line: 265, column: 498, scope: !6986)
!6989 = !DILocalVariable(name: "b", scope: !6983, file: !16, line: 265, type: !10)
!6990 = !DILocation(line: 265, column: 557, scope: !6983)
!6991 = !DILocation(line: 265, column: 593, scope: !6986)
!6992 = !DILocation(line: 265, column: 600, scope: !6986)
!6993 = !DILocation(line: 265, column: 607, scope: !6986)
!6994 = !DILocation(line: 265, column: 557, scope: !6986)
!6995 = !DILocation(line: 265, column: 617, scope: !6986)
!6996 = !DILocation(line: 265, column: 619, scope: !6986)
!6997 = !DILocation(line: 265, column: 638, scope: !6986)
!6998 = !DILocation(line: 265, column: 640, scope: !6986)
!6999 = !DILocation(line: 265, column: 635, scope: !6986)
!7000 = !DILocation(line: 265, column: 616, scope: !6986)
!7001 = !DILocation(line: 265, column: 614, scope: !6986)
!7002 = !DILocation(line: 265, column: 664, scope: !6986)
!7003 = !DILocation(line: 265, column: 666, scope: !6986)
!7004 = !DILocation(line: 265, column: 682, scope: !6986)
!7005 = !DILocation(line: 265, column: 692, scope: !6986)
!7006 = !DILocation(line: 265, column: 694, scope: !6986)
!7007 = !DILocation(line: 265, column: 710, scope: !6986)
!7008 = !DILocation(line: 265, column: 688, scope: !6986)
!7009 = !DILocation(line: 265, column: 662, scope: !6986)
!7010 = !DILocation(line: 265, column: 660, scope: !6986)
!7011 = !DILocation(line: 265, column: 766, scope: !6986)
!7012 = !DILocation(line: 265, column: 751, scope: !6986)
!7013 = !DILocation(line: 265, column: 774, scope: !6986)
!7014 = !DILocation(line: 265, column: 779, scope: !6986)
!7015 = !DILocation(line: 265, column: 777, scope: !6986)
!7016 = !DILocation(line: 265, column: 787, scope: !6986)
!7017 = !DILocation(line: 265, column: 792, scope: !6986)
!7018 = !DILocation(line: 265, column: 790, scope: !6986)
!7019 = !DILocation(line: 265, column: 796, scope: !6986)
!7020 = !DILocation(line: 265, column: 785, scope: !6986)
!7021 = !DILocation(line: 265, column: 802, scope: !6986)
!7022 = !DILocation(line: 265, column: 782, scope: !6986)
!7023 = !DILocation(line: 265, column: 741, scope: !6986)
!7024 = !DILocation(line: 265, column: 732, scope: !6986)
!7025 = !DILocation(line: 265, column: 717, scope: !6986)
!7026 = !DILocation(line: 265, column: 739, scope: !6986)
!7027 = !DILocation(line: 265, column: 830, scope: !6986)
!7028 = !DILocation(line: 265, column: 827, scope: !6986)
!7029 = !DILocation(line: 265, column: 850, scope: !6986)
!7030 = !DILocation(line: 265, column: 847, scope: !6986)
!7031 = !DILocation(line: 265, column: 897, scope: !6986)
!7032 = !DILocation(line: 265, column: 907, scope: !6986)
!7033 = !DILocation(line: 265, column: 863, scope: !6986)
!7034 = !DILocation(line: 265, column: 947, scope: !6986)
!7035 = !DILocation(line: 265, column: 954, scope: !6986)
!7036 = !DILocation(line: 265, column: 961, scope: !6986)
!7037 = !DILocation(line: 265, column: 913, scope: !6986)
!7038 = !DILocation(line: 265, column: 971, scope: !6986)
!7039 = !DILocation(line: 265, column: 973, scope: !6986)
!7040 = !DILocation(line: 265, column: 992, scope: !6986)
!7041 = !DILocation(line: 265, column: 994, scope: !6986)
!7042 = !DILocation(line: 265, column: 989, scope: !6986)
!7043 = !DILocation(line: 265, column: 1010, scope: !6986)
!7044 = !DILocation(line: 265, column: 970, scope: !6986)
!7045 = !DILocation(line: 265, column: 968, scope: !6986)
!7046 = !DILocation(line: 265, column: 1033, scope: !6986)
!7047 = !DILocation(line: 265, column: 1035, scope: !6986)
!7048 = !DILocation(line: 265, column: 1051, scope: !6986)
!7049 = !DILocation(line: 265, column: 1061, scope: !6986)
!7050 = !DILocation(line: 265, column: 1063, scope: !6986)
!7051 = !DILocation(line: 265, column: 1079, scope: !6986)
!7052 = !DILocation(line: 265, column: 1057, scope: !6986)
!7053 = !DILocation(line: 265, column: 1031, scope: !6986)
!7054 = !DILocation(line: 265, column: 1029, scope: !6986)
!7055 = !DILocation(line: 265, column: 1135, scope: !6986)
!7056 = !DILocation(line: 265, column: 1120, scope: !6986)
!7057 = !DILocation(line: 265, column: 1143, scope: !6986)
!7058 = !DILocation(line: 265, column: 1148, scope: !6986)
!7059 = !DILocation(line: 265, column: 1146, scope: !6986)
!7060 = !DILocation(line: 265, column: 1156, scope: !6986)
!7061 = !DILocation(line: 265, column: 1161, scope: !6986)
!7062 = !DILocation(line: 265, column: 1159, scope: !6986)
!7063 = !DILocation(line: 265, column: 1165, scope: !6986)
!7064 = !DILocation(line: 265, column: 1154, scope: !6986)
!7065 = !DILocation(line: 265, column: 1171, scope: !6986)
!7066 = !DILocation(line: 265, column: 1151, scope: !6986)
!7067 = !DILocation(line: 265, column: 1110, scope: !7068)
!7068 = !DILexicalBlockFile(scope: !6986, file: !16, discriminator: 9)
!7069 = !DILocation(line: 265, column: 1101, scope: !6986)
!7070 = !DILocation(line: 265, column: 1086, scope: !6986)
!7071 = !DILocation(line: 265, column: 1108, scope: !6986)
!7072 = !DILocation(line: 265, column: 1199, scope: !6986)
!7073 = !DILocation(line: 265, column: 1196, scope: !6986)
!7074 = !DILocation(line: 265, column: 1219, scope: !6986)
!7075 = !DILocation(line: 265, column: 1216, scope: !6986)
!7076 = !DILocation(line: 265, column: 1230, scope: !6986)
!7077 = !DILocation(line: 265, column: 481, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !6977, file: !16, discriminator: 5)
!7079 = !DILocation(line: 265, column: 460, scope: !7078)
!7080 = distinct !{!7080, !7081}
!7081 = !DILocation(line: 265, column: 460, scope: !6932)
!7082 = !DILocation(line: 265, column: 1246, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !6932, file: !16, discriminator: 6)
!7084 = !DILocation(line: 265, column: 1259, scope: !7083)
!7085 = !DILocation(line: 265, column: 1261, scope: !7083)
!7086 = !DILocation(line: 265, column: 1258, scope: !7083)
!7087 = !DILocation(line: 265, column: 1256, scope: !7083)
!7088 = !DILocation(line: 265, column: 1244, scope: !7083)
!7089 = !DILocation(line: 265, column: 1239, scope: !7083)
!7090 = !DILocation(line: 265, column: 1280, scope: !7083)
!7091 = !DILocation(line: 265, column: 1292, scope: !7083)
!7092 = !DILocation(line: 265, column: 1290, scope: !7083)
!7093 = !DILocation(line: 265, column: 1278, scope: !7083)
!7094 = !DILocation(line: 265, column: 1273, scope: !7083)
!7095 = !DILocation(line: 265, column: 1295, scope: !7083)
!7096 = !DILocation(line: 265, column: 136, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !6928, file: !16, discriminator: 7)
!7098 = !DILocation(line: 265, column: 116, scope: !7097)
!7099 = distinct !{!7099, !7100}
!7100 = !DILocation(line: 265, column: 116, scope: !6912)
!7101 = !DILocation(line: 265, column: 1297, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !6912, file: !16, discriminator: 8)
!7103 = distinct !DISubprogram(name: "rnd_avg32", scope: !7104, file: !7104, line: 31, type: !7105, isLocal: true, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7104 = !DIFile(filename: "libavcodec/rnd_avg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!10, !10, !10}
!7107 = !DILocalVariable(name: "a", arg: 1, scope: !7103, file: !7104, line: 31, type: !10)
!7108 = !DILocation(line: 31, column: 43, scope: !7103)
!7109 = !DILocalVariable(name: "b", arg: 2, scope: !7103, file: !7104, line: 31, type: !10)
!7110 = !DILocation(line: 31, column: 55, scope: !7103)
!7111 = !DILocation(line: 33, column: 13, scope: !7103)
!7112 = !DILocation(line: 33, column: 17, scope: !7103)
!7113 = !DILocation(line: 33, column: 15, scope: !7103)
!7114 = !DILocation(line: 33, column: 12, scope: !7103)
!7115 = !DILocation(line: 33, column: 25, scope: !7103)
!7116 = !DILocation(line: 33, column: 29, scope: !7103)
!7117 = !DILocation(line: 33, column: 27, scope: !7103)
!7118 = !DILocation(line: 33, column: 24, scope: !7103)
!7119 = !DILocation(line: 33, column: 32, scope: !7103)
!7120 = !DILocation(line: 33, column: 60, scope: !7103)
!7121 = !DILocation(line: 33, column: 20, scope: !7103)
!7122 = !DILocation(line: 33, column: 5, scope: !7103)
