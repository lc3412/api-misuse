; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc2enc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc2enc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VC2BaseVideoFormat = type { i32, %struct.AVRational, i32, i32, i32, i32, i8* }
%struct.Plane = type { [5 x [4 x %struct.SubBand]], i32*, i32, i32, i32, i32, i64 }
%struct.SubBand = type { i32*, i64, i32, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VC2EncContext = type { %struct.AVClass*, %struct.PutBitContext, [3 x %struct.Plane], %struct.AVCodecContext*, %struct.DiracVersionInfo, %struct.SliceArgs*, [3 x %struct.TransformArgs], i32, i32, i32, i32, i32, i32, i32, [5 x [4 x i8]], i32, [116 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.DiracVersionInfo = type { i32, i32 }
%struct.SliceArgs = type { %struct.PutBitContext, [116 x i32], i8*, i32, i32, i32, i32, i32, i32 }
%struct.TransformArgs = type { i8*, %struct.Plane*, i8*, i64, i32, %struct.VC2TransformContext }
%struct.VC2TransformContext = type { i32*, i32, [7 x void (%struct.VC2TransformContext*, i32*, i64, i32, i32)*] }
%union.unaligned_32 = type { i32 }

@vc2_qm_col_tab = constant [5 x [4 x i8]] [[4 x i8] c"\14\09\0F\04", [4 x i8] c"\00\06\06\04", [4 x i8] c"\00\03\03\05", [4 x i8] c"\00\03\05\01", [4 x i8] c"\00\0B\0A\0B"], align 16
@vc2_qm_flat_tab = constant [5 x [4 x i8]] zeroinitializer, align 16
@.str = private unnamed_addr constant [4 x i8] c"vc2\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"SMPTE VC-2\00", align 1
@allowed_pix_fmts = internal constant [10 x i32] [i32 0, i32 4, i32 5, i32 64, i32 66, i32 70, i32 125, i32 129, i32 133, i32 -1], align 16
@vc2enc_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([14 x %struct.AVOption], [14 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @vc2enc_options to [14 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 5, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@vc2enc_defaults = internal constant [2 x %struct.AVCodecDefault] [%struct.AVCodecDefault { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0) }, %struct.AVCodecDefault zeroinitializer], align 16
@ff_vc2_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 116, i32 8192, %struct.AVRational* null, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @allowed_pix_fmts, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* @vc2enc_class, %struct.AVProfile* null, i8* null, i32 3016, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* getelementptr inbounds ([2 x %struct.AVCodecDefault], [2 x %struct.AVCodecDefault]* @vc2enc_defaults, i32 0, i32 0), void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vc2_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @vc2_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @vc2_encode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"SMPTE VC-2 encoder\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"tolerance\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Max undershoot in percent\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"slice_width\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"Slice width\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"slice_height\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"Slice height\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"wavelet_depth\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"Transform depth\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"wavelet_type\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"Transform type\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"wavelet_idx\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"9_7\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"Deslauriers-Dubuc (9,7)\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"5_3\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"LeGall (5,3)\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"haar\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"Haar (with shift)\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"haar_noshift\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"Haar (without shift)\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"qm\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"Custom quantization matrix\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"quant_matrix\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"Default from the specifications\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"Prevents low bitrate discoloration\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"Optimize for PSNR\00", align 1
@vc2enc_options = internal constant <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i32 2968, i32 3, { double } { double 5.000000e+00 }, double 0.000000e+00, double 4.500000e+01, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i32 2992, i32 1, %union.anon { i64 32 }, double 3.200000e+01, double 1.024000e+03, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0), i32 2988, i32 1, %union.anon { i64 16 }, double 8.000000e+00, double 1.024000e+03, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0), i32 2980, i32 1, %union.anon { i64 4 }, double 1.000000e+00, double 5.000000e+00, i32 17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i32 2976, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 7.000000e+00, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i32 0, i32 0), i32 3000, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.000000e+00, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16
@.str.32 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"600000000\00", align 1
@base_video_fmts = internal constant [23 x %struct.VC2BaseVideoFormat] [%struct.VC2BaseVideoFormat zeroinitializer, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 1001, i32 15000 }, i32 176, i32 120, i32 0, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 2, i32 25 }, i32 176, i32 144, i32 0, i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 1001, i32 15000 }, i32 352, i32 240, i32 0, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 2, i32 25 }, i32 352, i32 288, i32 0, i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 1001, i32 15000 }, i32 704, i32 480, i32 0, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 0, %struct.AVRational { i32 2, i32 25 }, i32 704, i32 576, i32 0, i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 30000 }, i32 720, i32 480, i32 1, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 25 }, i32 720, i32 576, i32 1, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 60000 }, i32 1280, i32 720, i32 0, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 50 }, i32 1280, i32 720, i32 0, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 30000 }, i32 1920, i32 1080, i32 1, i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 25 }, i32 1920, i32 1080, i32 1, i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 60000 }, i32 1920, i32 1080, i32 0, i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 50 }, i32 1920, i32 1080, i32 0, i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 133, %struct.AVRational { i32 1, i32 24 }, i32 2048, i32 1080, i32 0, i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 133, %struct.AVRational { i32 1, i32 24 }, i32 4096, i32 2160, i32 0, i32 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 60000 }, i32 3840, i32 2160, i32 0, i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 50 }, i32 3840, i32 2160, i32 0, i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 60000 }, i32 7680, i32 4320, i32 0, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1, i32 50 }, i32 7680, i32 4320, i32 0, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 24000 }, i32 1920, i32 1080, i32 0, i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.VC2BaseVideoFormat { i32 66, %struct.AVRational { i32 1001, i32 30000 }, i32 720, i32 486, i32 1, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0) }], align 16
@.str.34 = private unnamed_addr constant [22 x i8] c"Interlacing enabled!\0A\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c"Slice size is not a power of two!\0A\00", align 1
@.str.36 = private unnamed_addr constant [38 x i8] c"Slice size is bigger than the image!\0A\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"Format does not strictly comply with VC2 specs\0A\00", align 1
@.str.38 = private unnamed_addr constant [95 x i8] c"Given format does not strictly comply with the specifications, decrease strictness to use it.\0A\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"Selected base video format = %i (%s)\0A\00", align 1
@ff_dirac_qscale_tab = external constant [116 x i32], align 16
@.str.40 = private unnamed_addr constant [28 x i8] c"Unable to allocate memory!\0A\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"QSIF525\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"QCIF\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"SIF525\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"CIF\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"4SIF525\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"4CIF\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"SD480I-60\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"SD576I-50\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"HD720P-60\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"HD720P-50\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"HD1080I-60\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"HD1080I-50\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"HD1080P-60\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"HD1080P-50\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"DC2K\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"DC4K\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"UHDTV 4K-60\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"UHDTV 4K-50\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"UHDTV 8K-60\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"UHDTV 8K-50\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"HD1080P-24\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"SD Pro486\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"Lavc\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"Lavc58.47.102\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"Error getting output packet.\0A\00", align 1
@ff_dirac_default_qmat = external constant [7 x [4 x [4 x i8]]], align 16
@rate_control.quant_buf = private unnamed_addr constant [2 x i32] [i32 -1, i32 -1], align 4
@.str.66 = private unnamed_addr constant [5 x i8] c"BBCD\00", align 1
@.str.67 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.68 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"n <= s->buf_end - s->buf_ptr\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"Qavg: %i\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vc2_encode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1749 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %p = alloca %struct.Plane*, align 8
  %b = alloca %struct.SubBand*, align 8
  %i = alloca i32, align 4
  %level = alloca i32, align 4
  %o = alloca i32, align 4
  %shift = alloca i32, align 4
  %ret = alloca i32, align 4
  %fmt = alloca %struct.AVPixFmtDescriptor*, align 8
  %depth = alloca i32, align 4
  %s = alloca %struct.VC2EncContext*, align 8
  %fmt7 = alloca %struct.VC2BaseVideoFormat*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %qf = alloca i64, align 8
  %m = alloca i32, align 4
  %t246 = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1751, metadata !1752), !dbg !1753
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !1754, metadata !1752), !dbg !1779
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !1780, metadata !1752), !dbg !1782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1783, metadata !1752), !dbg !1784
  call void @llvm.dbg.declare(metadata i32* %level, metadata !1785, metadata !1752), !dbg !1786
  call void @llvm.dbg.declare(metadata i32* %o, metadata !1787, metadata !1752), !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !1789, metadata !1752), !dbg !1790
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1791, metadata !1752), !dbg !1792
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %fmt, metadata !1793, metadata !1752), !dbg !1819
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1820
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 25, !dbg !1821
  %1 = load i32, i32* %pix_fmt, align 8, !dbg !1821
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !1822
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %fmt, align 8, !dbg !1819
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !1823, metadata !1752), !dbg !1824
  %2 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %fmt, align 8, !dbg !1825
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %2, i32 0, i32 5, !dbg !1826
  %arrayidx = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !1825
  %depth1 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx, i32 0, i32 4, !dbg !1827
  %3 = load i32, i32* %depth1, align 8, !dbg !1827
  store i32 %3, i32* %depth, align 4, !dbg !1824
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !1828, metadata !1752), !dbg !1932
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1933
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !1934
  %5 = load i8*, i8** %priv_data, align 8, !dbg !1934
  %6 = bitcast i8* %5 to %struct.VC2EncContext*, !dbg !1933
  store %struct.VC2EncContext* %6, %struct.VC2EncContext** %s, align 8, !dbg !1932
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1935
  %picture_number = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 10, !dbg !1936
  store i32 0, i32* %picture_number, align 4, !dbg !1937
  %8 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1938
  %q_ceil = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %8, i32 0, i32 26, !dbg !1939
  store i32 116, i32* %q_ceil, align 8, !dbg !1940
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1941
  %ver = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 4, !dbg !1942
  %major = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %ver, i32 0, i32 0, !dbg !1943
  store i32 2, i32* %major, align 8, !dbg !1944
  %10 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1945
  %ver2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %10, i32 0, i32 4, !dbg !1946
  %minor = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %ver2, i32 0, i32 1, !dbg !1947
  store i32 0, i32* %minor, align 4, !dbg !1948
  %11 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1949
  %profile = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %11, i32 0, i32 13, !dbg !1950
  store i32 3, i32* %profile, align 8, !dbg !1951
  %12 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1952
  %level3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %12, i32 0, i32 12, !dbg !1953
  store i32 3, i32* %level3, align 4, !dbg !1954
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1955
  %base_vf = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 11, !dbg !1956
  store i32 -1, i32* %base_vf, align 8, !dbg !1957
  %14 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1958
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %14, i32 0, i32 31, !dbg !1959
  store i32 1, i32* %strict_compliance, align 8, !dbg !1960
  %15 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1961
  %q_avg = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %15, i32 0, i32 27, !dbg !1962
  store i32 0, i32* %q_avg, align 4, !dbg !1963
  %16 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1964
  %slice_max_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %16, i32 0, i32 24, !dbg !1965
  store i32 0, i32* %slice_max_bytes, align 8, !dbg !1966
  %17 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1967
  %slice_min_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %17, i32 0, i32 25, !dbg !1968
  store i32 0, i32* %slice_min_bytes, align 4, !dbg !1969
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1970
  %field_order = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 81, !dbg !1971
  %19 = load i32, i32* %field_order, align 4, !dbg !1971
  %cmp = icmp eq i32 %19, 0, !dbg !1972
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !1973

lor.rhs:                                          ; preds = %entry
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1974
  %field_order4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 81, !dbg !1975
  %21 = load i32, i32* %field_order4, align 4, !dbg !1975
  %cmp5 = icmp eq i32 %21, 1, !dbg !1976
  br label %lor.end, !dbg !1977

lor.end:                                          ; preds = %lor.rhs, %entry
  %22 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lnot = xor i1 %22, true, !dbg !1979
  %lnot.ext = zext i1 %lnot to i32, !dbg !1979
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !1981
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 34, !dbg !1982
  store i32 %lnot.ext, i32* %interlaced, align 4, !dbg !1983
  store i32 0, i32* %i, align 4, !dbg !1984
  br label %for.cond, !dbg !1986

for.cond:                                         ; preds = %for.inc, %lor.end
  %24 = load i32, i32* %i, align 4, !dbg !1987
  %cmp6 = icmp slt i32 %24, 23, !dbg !1990
  br i1 %cmp6, label %for.body, label %for.end, !dbg !1991

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VC2BaseVideoFormat** %fmt7, metadata !1992, metadata !1752), !dbg !1995
  %25 = load i32, i32* %i, align 4, !dbg !1996
  %idxprom = sext i32 %25 to i64, !dbg !1997
  %arrayidx8 = getelementptr inbounds [23 x %struct.VC2BaseVideoFormat], [23 x %struct.VC2BaseVideoFormat]* @base_video_fmts, i64 0, i64 %idxprom, !dbg !1997
  store %struct.VC2BaseVideoFormat* %arrayidx8, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !1995
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1998
  %pix_fmt9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 25, !dbg !2000
  %27 = load i32, i32* %pix_fmt9, align 8, !dbg !2000
  %28 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2001
  %pix_fmt10 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %28, i32 0, i32 0, !dbg !2002
  %29 = load i32, i32* %pix_fmt10, align 8, !dbg !2002
  %cmp11 = icmp ne i32 %27, %29, !dbg !2003
  br i1 %cmp11, label %if.then, label %if.end, !dbg !2004

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !2005

if.end:                                           ; preds = %for.body
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2006
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 17, !dbg !2008
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !2009
  %31 = load i32, i32* %num, align 4, !dbg !2009
  %32 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2010
  %time_base12 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %32, i32 0, i32 1, !dbg !2011
  %num13 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base12, i32 0, i32 0, !dbg !2012
  %33 = load i32, i32* %num13, align 4, !dbg !2012
  %cmp14 = icmp ne i32 %31, %33, !dbg !2013
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2014

if.then15:                                        ; preds = %if.end
  br label %for.inc, !dbg !2015

if.end16:                                         ; preds = %if.end
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2016
  %time_base17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 17, !dbg !2018
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base17, i32 0, i32 1, !dbg !2019
  %35 = load i32, i32* %den, align 4, !dbg !2019
  %36 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2020
  %time_base18 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %36, i32 0, i32 1, !dbg !2021
  %den19 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base18, i32 0, i32 1, !dbg !2022
  %37 = load i32, i32* %den19, align 4, !dbg !2022
  %cmp20 = icmp ne i32 %35, %37, !dbg !2023
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2024

if.then21:                                        ; preds = %if.end16
  br label %for.inc, !dbg !2025

if.end22:                                         ; preds = %if.end16
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2026
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 20, !dbg !2028
  %39 = load i32, i32* %width, align 4, !dbg !2028
  %40 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2029
  %width23 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %40, i32 0, i32 2, !dbg !2030
  %41 = load i32, i32* %width23, align 4, !dbg !2030
  %cmp24 = icmp ne i32 %39, %41, !dbg !2031
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !2032

if.then25:                                        ; preds = %if.end22
  br label %for.inc, !dbg !2033

if.end26:                                         ; preds = %if.end22
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2034
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 21, !dbg !2036
  %43 = load i32, i32* %height, align 8, !dbg !2036
  %44 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2037
  %height27 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %44, i32 0, i32 3, !dbg !2038
  %45 = load i32, i32* %height27, align 8, !dbg !2038
  %cmp28 = icmp ne i32 %43, %45, !dbg !2039
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !2040

if.then29:                                        ; preds = %if.end26
  br label %for.inc, !dbg !2041

if.end30:                                         ; preds = %if.end26
  %46 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2042
  %interlaced31 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %46, i32 0, i32 34, !dbg !2044
  %47 = load i32, i32* %interlaced31, align 4, !dbg !2044
  %48 = load %struct.VC2BaseVideoFormat*, %struct.VC2BaseVideoFormat** %fmt7, align 8, !dbg !2045
  %interlaced32 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %48, i32 0, i32 4, !dbg !2046
  %49 = load i32, i32* %interlaced32, align 4, !dbg !2046
  %cmp33 = icmp ne i32 %47, %49, !dbg !2047
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !2048

if.then34:                                        ; preds = %if.end30
  br label %for.inc, !dbg !2049

if.end35:                                         ; preds = %if.end30
  %50 = load i32, i32* %i, align 4, !dbg !2050
  %51 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2051
  %base_vf36 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %51, i32 0, i32 11, !dbg !2052
  store i32 %50, i32* %base_vf36, align 8, !dbg !2053
  %52 = load i32, i32* %i, align 4, !dbg !2054
  %idxprom37 = sext i32 %52 to i64, !dbg !2055
  %arrayidx38 = getelementptr inbounds [23 x %struct.VC2BaseVideoFormat], [23 x %struct.VC2BaseVideoFormat]* @base_video_fmts, i64 0, i64 %idxprom37, !dbg !2055
  %level39 = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %arrayidx38, i32 0, i32 5, !dbg !2056
  %53 = load i32, i32* %level39, align 8, !dbg !2056
  %54 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2057
  %level40 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %54, i32 0, i32 12, !dbg !2058
  store i32 %53, i32* %level40, align 4, !dbg !2059
  br label %for.end, !dbg !2060

for.inc:                                          ; preds = %if.then34, %if.then29, %if.then25, %if.then21, %if.then15, %if.then
  %55 = load i32, i32* %i, align 4, !dbg !2061
  %inc = add nsw i32 %55, 1, !dbg !2061
  store i32 %inc, i32* %i, align 4, !dbg !2061
  br label %for.cond, !dbg !2063, !llvm.loop !2064

for.end:                                          ; preds = %if.end35, %for.cond
  %56 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2066
  %interlaced41 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %56, i32 0, i32 34, !dbg !2068
  %57 = load i32, i32* %interlaced41, align 4, !dbg !2068
  %tobool = icmp ne i32 %57, 0, !dbg !2066
  br i1 %tobool, label %if.then42, label %if.end43, !dbg !2069

if.then42:                                        ; preds = %for.end
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2070
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !2070
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i32 0, i32 0)), !dbg !2071
  br label %if.end43, !dbg !2071

if.end43:                                         ; preds = %if.then42, %for.end
  %60 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2072
  %slice_width = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %60, i32 0, i32 33, !dbg !2074
  %61 = load i32, i32* %slice_width, align 8, !dbg !2074
  %62 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2075
  %slice_width44 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %62, i32 0, i32 33, !dbg !2076
  %63 = load i32, i32* %slice_width44, align 8, !dbg !2076
  %sub = sub nsw i32 %63, 1, !dbg !2077
  %and = and i32 %61, %sub, !dbg !2078
  %tobool45 = icmp ne i32 %and, 0, !dbg !2078
  br i1 %tobool45, label %if.then50, label %lor.lhs.false, !dbg !2079

lor.lhs.false:                                    ; preds = %if.end43
  %64 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2080
  %slice_height = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %64, i32 0, i32 32, !dbg !2081
  %65 = load i32, i32* %slice_height, align 4, !dbg !2081
  %66 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2082
  %slice_height46 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %66, i32 0, i32 32, !dbg !2083
  %67 = load i32, i32* %slice_height46, align 4, !dbg !2083
  %sub47 = sub nsw i32 %67, 1, !dbg !2084
  %and48 = and i32 %65, %sub47, !dbg !2085
  %tobool49 = icmp ne i32 %and48, 0, !dbg !2085
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !2086

if.then50:                                        ; preds = %lor.lhs.false, %if.end43
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2087
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !2087
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i32 0, i32 0)), !dbg !2089
  store i32 -1313558101, i32* %retval, align 4, !dbg !2090
  br label %return, !dbg !2090

if.end51:                                         ; preds = %lor.lhs.false
  %70 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2091
  %slice_width52 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %70, i32 0, i32 33, !dbg !2093
  %71 = load i32, i32* %slice_width52, align 8, !dbg !2093
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2094
  %width53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %72, i32 0, i32 20, !dbg !2095
  %73 = load i32, i32* %width53, align 4, !dbg !2095
  %cmp54 = icmp sgt i32 %71, %73, !dbg !2096
  br i1 %cmp54, label %if.then59, label %lor.lhs.false55, !dbg !2097

lor.lhs.false55:                                  ; preds = %if.end51
  %74 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2098
  %slice_height56 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %74, i32 0, i32 32, !dbg !2099
  %75 = load i32, i32* %slice_height56, align 4, !dbg !2099
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2100
  %height57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 21, !dbg !2101
  %77 = load i32, i32* %height57, align 8, !dbg !2101
  %cmp58 = icmp sgt i32 %75, %77, !dbg !2102
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !2103

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2104
  %79 = bitcast %struct.AVCodecContext* %78 to i8*, !dbg !2104
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.36, i32 0, i32 0)), !dbg !2106
  store i32 -1313558101, i32* %retval, align 4, !dbg !2107
  br label %return, !dbg !2107

if.end60:                                         ; preds = %lor.lhs.false55
  %80 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2108
  %base_vf61 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %80, i32 0, i32 11, !dbg !2110
  %81 = load i32, i32* %base_vf61, align 8, !dbg !2110
  %cmp62 = icmp sle i32 %81, 0, !dbg !2111
  br i1 %cmp62, label %if.then63, label %if.else69, !dbg !2112

if.then63:                                        ; preds = %if.end60
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2113
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 132, !dbg !2116
  %83 = load i32, i32* %strict_std_compliance, align 4, !dbg !2116
  %cmp64 = icmp slt i32 %83, 1, !dbg !2117
  br i1 %cmp64, label %if.then65, label %if.else, !dbg !2118

if.then65:                                        ; preds = %if.then63
  %84 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2119
  %base_vf66 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %84, i32 0, i32 11, !dbg !2121
  store i32 0, i32* %base_vf66, align 8, !dbg !2122
  %85 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2123
  %strict_compliance67 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %85, i32 0, i32 31, !dbg !2124
  store i32 0, i32* %strict_compliance67, align 8, !dbg !2125
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2126
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !2126
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37, i32 0, i32 0)), !dbg !2127
  br label %if.end68, !dbg !2128

if.else:                                          ; preds = %if.then63
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2129
  %89 = bitcast %struct.AVCodecContext* %88 to i8*, !dbg !2129
  call void (i8*, i32, i8*, ...) @av_log(i8* %89, i32 24, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.38, i32 0, i32 0)), !dbg !2131
  store i32 -1313558101, i32* %retval, align 4, !dbg !2132
  br label %return, !dbg !2132

if.end68:                                         ; preds = %if.then65
  br label %if.end74, !dbg !2133

if.else69:                                        ; preds = %if.end60
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2134
  %91 = bitcast %struct.AVCodecContext* %90 to i8*, !dbg !2134
  %92 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2136
  %base_vf70 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %92, i32 0, i32 11, !dbg !2137
  %93 = load i32, i32* %base_vf70, align 8, !dbg !2137
  %94 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2138
  %base_vf71 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %94, i32 0, i32 11, !dbg !2139
  %95 = load i32, i32* %base_vf71, align 8, !dbg !2139
  %idxprom72 = sext i32 %95 to i64, !dbg !2140
  %arrayidx73 = getelementptr inbounds [23 x %struct.VC2BaseVideoFormat], [23 x %struct.VC2BaseVideoFormat]* @base_video_fmts, i64 0, i64 %idxprom72, !dbg !2140
  %name = getelementptr inbounds %struct.VC2BaseVideoFormat, %struct.VC2BaseVideoFormat* %arrayidx73, i32 0, i32 6, !dbg !2141
  %96 = load i8*, i8** %name, align 8, !dbg !2141
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i32 0, i32 0), i32 %93, i8* %96), !dbg !2142
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.end68
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2143
  %pix_fmt75 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %97, i32 0, i32 25, !dbg !2144
  %98 = load i32, i32* %pix_fmt75, align 8, !dbg !2144
  %99 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2145
  %chroma_x_shift = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %99, i32 0, i32 21, !dbg !2146
  %100 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2147
  %chroma_y_shift = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %100, i32 0, i32 22, !dbg !2148
  %call76 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %98, i32* %chroma_x_shift, i32* %chroma_y_shift), !dbg !2149
  store i32 %call76, i32* %ret, align 4, !dbg !2150
  %101 = load i32, i32* %ret, align 4, !dbg !2151
  %tobool77 = icmp ne i32 %101, 0, !dbg !2151
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !2153

if.then78:                                        ; preds = %if.end74
  %102 = load i32, i32* %ret, align 4, !dbg !2154
  store i32 %102, i32* %retval, align 4, !dbg !2155
  br label %return, !dbg !2155

if.end79:                                         ; preds = %if.end74
  %103 = load i32, i32* %depth, align 4, !dbg !2156
  %cmp80 = icmp eq i32 %103, 8, !dbg !2158
  br i1 %cmp80, label %land.lhs.true, label %if.else83, !dbg !2159

land.lhs.true:                                    ; preds = %if.end79
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2160
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %104, i32 0, i32 78, !dbg !2162
  %105 = load i32, i32* %color_range, align 8, !dbg !2162
  %cmp81 = icmp eq i32 %105, 2, !dbg !2163
  br i1 %cmp81, label %if.then82, label %if.else83, !dbg !2164

if.then82:                                        ; preds = %land.lhs.true
  %106 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2165
  %bpp = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %106, i32 0, i32 8, !dbg !2167
  store i32 1, i32* %bpp, align 4, !dbg !2168
  %107 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2169
  %bpp_idx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %107, i32 0, i32 9, !dbg !2170
  store i32 1, i32* %bpp_idx, align 8, !dbg !2171
  %108 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2172
  %diff_offset = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %108, i32 0, i32 7, !dbg !2173
  store i32 128, i32* %diff_offset, align 8, !dbg !2174
  br label %if.end107, !dbg !2175

if.else83:                                        ; preds = %land.lhs.true, %if.end79
  %109 = load i32, i32* %depth, align 4, !dbg !2176
  %cmp84 = icmp eq i32 %109, 8, !dbg !2179
  br i1 %cmp84, label %land.lhs.true85, label %if.else95, !dbg !2180

land.lhs.true85:                                  ; preds = %if.else83
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2181
  %color_range86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 78, !dbg !2183
  %111 = load i32, i32* %color_range86, align 8, !dbg !2183
  %cmp87 = icmp eq i32 %111, 1, !dbg !2184
  br i1 %cmp87, label %if.then91, label %lor.lhs.false88, !dbg !2185

lor.lhs.false88:                                  ; preds = %land.lhs.true85
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2186
  %color_range89 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 78, !dbg !2187
  %113 = load i32, i32* %color_range89, align 8, !dbg !2187
  %cmp90 = icmp eq i32 %113, 0, !dbg !2188
  br i1 %cmp90, label %if.then91, label %if.else95, !dbg !2189

if.then91:                                        ; preds = %lor.lhs.false88, %land.lhs.true85
  %114 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2191
  %bpp92 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %114, i32 0, i32 8, !dbg !2193
  store i32 1, i32* %bpp92, align 4, !dbg !2194
  %115 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2195
  %bpp_idx93 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %115, i32 0, i32 9, !dbg !2196
  store i32 2, i32* %bpp_idx93, align 8, !dbg !2197
  %116 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2198
  %diff_offset94 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %116, i32 0, i32 7, !dbg !2199
  store i32 128, i32* %diff_offset94, align 8, !dbg !2200
  br label %if.end106, !dbg !2201

if.else95:                                        ; preds = %lor.lhs.false88, %if.else83
  %117 = load i32, i32* %depth, align 4, !dbg !2202
  %cmp96 = icmp eq i32 %117, 10, !dbg !2205
  br i1 %cmp96, label %if.then97, label %if.else101, !dbg !2202

if.then97:                                        ; preds = %if.else95
  %118 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2206
  %bpp98 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %118, i32 0, i32 8, !dbg !2208
  store i32 2, i32* %bpp98, align 4, !dbg !2209
  %119 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2210
  %bpp_idx99 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %119, i32 0, i32 9, !dbg !2211
  store i32 3, i32* %bpp_idx99, align 8, !dbg !2212
  %120 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2213
  %diff_offset100 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %120, i32 0, i32 7, !dbg !2214
  store i32 512, i32* %diff_offset100, align 8, !dbg !2215
  br label %if.end105, !dbg !2216

if.else101:                                       ; preds = %if.else95
  %121 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2217
  %bpp102 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %121, i32 0, i32 8, !dbg !2219
  store i32 2, i32* %bpp102, align 4, !dbg !2220
  %122 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2221
  %bpp_idx103 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %122, i32 0, i32 9, !dbg !2222
  store i32 4, i32* %bpp_idx103, align 8, !dbg !2223
  %123 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2224
  %diff_offset104 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %123, i32 0, i32 7, !dbg !2225
  store i32 2048, i32* %diff_offset104, align 8, !dbg !2226
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then91
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then82
  store i32 0, i32* %i, align 4, !dbg !2227
  br label %for.cond108, !dbg !2229

for.cond108:                                      ; preds = %for.inc216, %if.end107
  %124 = load i32, i32* %i, align 4, !dbg !2230
  %cmp109 = icmp slt i32 %124, 3, !dbg !2233
  br i1 %cmp109, label %for.body110, label %for.end218, !dbg !2234

for.body110:                                      ; preds = %for.cond108
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2235, metadata !1752), !dbg !2237
  call void @llvm.dbg.declare(metadata i32* %h, metadata !2238, metadata !1752), !dbg !2239
  %125 = load i32, i32* %i, align 4, !dbg !2240
  %idxprom111 = sext i32 %125 to i64, !dbg !2241
  %126 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2241
  %plane = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %126, i32 0, i32 2, !dbg !2242
  %arrayidx112 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom111, !dbg !2241
  store %struct.Plane* %arrayidx112, %struct.Plane** %p, align 8, !dbg !2243
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2244
  %width113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 20, !dbg !2245
  %128 = load i32, i32* %width113, align 4, !dbg !2245
  %129 = load i32, i32* %i, align 4, !dbg !2246
  %tobool114 = icmp ne i32 %129, 0, !dbg !2246
  br i1 %tobool114, label %cond.true, label %cond.false, !dbg !2246

cond.true:                                        ; preds = %for.body110
  %130 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2247
  %chroma_x_shift115 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %130, i32 0, i32 21, !dbg !2249
  %131 = load i32, i32* %chroma_x_shift115, align 4, !dbg !2249
  br label %cond.end, !dbg !2250

cond.false:                                       ; preds = %for.body110
  br label %cond.end, !dbg !2251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %131, %cond.true ], [ 0, %cond.false ], !dbg !2253
  %shr = ashr i32 %128, %cond, !dbg !2255
  %132 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2256
  %width116 = getelementptr inbounds %struct.Plane, %struct.Plane* %132, i32 0, i32 2, !dbg !2257
  store i32 %shr, i32* %width116, align 8, !dbg !2258
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2259
  %height117 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %133, i32 0, i32 21, !dbg !2260
  %134 = load i32, i32* %height117, align 8, !dbg !2260
  %135 = load i32, i32* %i, align 4, !dbg !2261
  %tobool118 = icmp ne i32 %135, 0, !dbg !2261
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !2261

cond.true119:                                     ; preds = %cond.end
  %136 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2262
  %chroma_y_shift120 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %136, i32 0, i32 22, !dbg !2263
  %137 = load i32, i32* %chroma_y_shift120, align 8, !dbg !2263
  br label %cond.end122, !dbg !2264

cond.false121:                                    ; preds = %cond.end
  br label %cond.end122, !dbg !2265

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %137, %cond.true119 ], [ 0, %cond.false121 ], !dbg !2266
  %shr124 = ashr i32 %134, %cond123, !dbg !2267
  %138 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2268
  %height125 = getelementptr inbounds %struct.Plane, %struct.Plane* %138, i32 0, i32 3, !dbg !2269
  store i32 %shr124, i32* %height125, align 4, !dbg !2270
  %139 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2271
  %interlaced126 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %139, i32 0, i32 34, !dbg !2273
  %140 = load i32, i32* %interlaced126, align 4, !dbg !2273
  %tobool127 = icmp ne i32 %140, 0, !dbg !2271
  br i1 %tobool127, label %if.then128, label %if.end131, !dbg !2274

if.then128:                                       ; preds = %cond.end122
  %141 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2275
  %height129 = getelementptr inbounds %struct.Plane, %struct.Plane* %141, i32 0, i32 3, !dbg !2276
  %142 = load i32, i32* %height129, align 4, !dbg !2277
  %shr130 = ashr i32 %142, 1, !dbg !2277
  store i32 %shr130, i32* %height129, align 4, !dbg !2277
  br label %if.end131, !dbg !2275

if.end131:                                        ; preds = %if.then128, %cond.end122
  %143 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2278
  %width132 = getelementptr inbounds %struct.Plane, %struct.Plane* %143, i32 0, i32 2, !dbg !2279
  %144 = load i32, i32* %width132, align 8, !dbg !2279
  %145 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2280
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %145, i32 0, i32 30, !dbg !2281
  %146 = load i32, i32* %wavelet_depth, align 4, !dbg !2281
  %shl = shl i32 1, %146, !dbg !2282
  %add = add nsw i32 %144, %shl, !dbg !2283
  %sub133 = sub nsw i32 %add, 1, !dbg !2284
  %147 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2285
  %wavelet_depth134 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %147, i32 0, i32 30, !dbg !2286
  %148 = load i32, i32* %wavelet_depth134, align 4, !dbg !2286
  %shl135 = shl i32 1, %148, !dbg !2287
  %sub136 = sub nsw i32 %shl135, 1, !dbg !2288
  %neg = xor i32 %sub136, -1, !dbg !2289
  %and137 = and i32 %sub133, %neg, !dbg !2290
  store i32 %and137, i32* %w, align 4, !dbg !2291
  %149 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2292
  %dwt_width = getelementptr inbounds %struct.Plane, %struct.Plane* %149, i32 0, i32 4, !dbg !2293
  store i32 %and137, i32* %dwt_width, align 8, !dbg !2294
  %150 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2295
  %height138 = getelementptr inbounds %struct.Plane, %struct.Plane* %150, i32 0, i32 3, !dbg !2296
  %151 = load i32, i32* %height138, align 4, !dbg !2296
  %152 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2297
  %wavelet_depth139 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %152, i32 0, i32 30, !dbg !2298
  %153 = load i32, i32* %wavelet_depth139, align 4, !dbg !2298
  %shl140 = shl i32 1, %153, !dbg !2299
  %add141 = add nsw i32 %151, %shl140, !dbg !2300
  %sub142 = sub nsw i32 %add141, 1, !dbg !2301
  %154 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2302
  %wavelet_depth143 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %154, i32 0, i32 30, !dbg !2303
  %155 = load i32, i32* %wavelet_depth143, align 4, !dbg !2303
  %shl144 = shl i32 1, %155, !dbg !2304
  %sub145 = sub nsw i32 %shl144, 1, !dbg !2305
  %neg146 = xor i32 %sub145, -1, !dbg !2306
  %and147 = and i32 %sub142, %neg146, !dbg !2307
  store i32 %and147, i32* %h, align 4, !dbg !2308
  %156 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2309
  %dwt_height = getelementptr inbounds %struct.Plane, %struct.Plane* %156, i32 0, i32 5, !dbg !2310
  store i32 %and147, i32* %dwt_height, align 4, !dbg !2311
  %157 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2312
  %dwt_width148 = getelementptr inbounds %struct.Plane, %struct.Plane* %157, i32 0, i32 4, !dbg !2313
  %158 = load i32, i32* %dwt_width148, align 8, !dbg !2313
  %add149 = add nsw i32 %158, 32, !dbg !2314
  %sub150 = sub nsw i32 %add149, 1, !dbg !2315
  %and151 = and i32 %sub150, -32, !dbg !2316
  %conv = sext i32 %and151 to i64, !dbg !2317
  %159 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2318
  %coef_stride = getelementptr inbounds %struct.Plane, %struct.Plane* %159, i32 0, i32 6, !dbg !2319
  store i64 %conv, i64* %coef_stride, align 8, !dbg !2320
  %160 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2321
  %coef_stride152 = getelementptr inbounds %struct.Plane, %struct.Plane* %160, i32 0, i32 6, !dbg !2322
  %161 = load i64, i64* %coef_stride152, align 8, !dbg !2322
  %162 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2323
  %dwt_height153 = getelementptr inbounds %struct.Plane, %struct.Plane* %162, i32 0, i32 5, !dbg !2324
  %163 = load i32, i32* %dwt_height153, align 4, !dbg !2324
  %conv154 = sext i32 %163 to i64, !dbg !2323
  %mul = mul nsw i64 %161, %conv154, !dbg !2325
  %mul155 = mul i64 %mul, 4, !dbg !2326
  %call156 = call noalias i8* @av_mallocz(i64 %mul155), !dbg !2327
  %164 = bitcast i8* %call156 to i32*, !dbg !2327
  %165 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2328
  %coef_buf = getelementptr inbounds %struct.Plane, %struct.Plane* %165, i32 0, i32 1, !dbg !2329
  store i32* %164, i32** %coef_buf, align 8, !dbg !2330
  %166 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2331
  %coef_buf157 = getelementptr inbounds %struct.Plane, %struct.Plane* %166, i32 0, i32 1, !dbg !2333
  %167 = load i32*, i32** %coef_buf157, align 8, !dbg !2333
  %tobool158 = icmp ne i32* %167, null, !dbg !2331
  br i1 %tobool158, label %if.end160, label %if.then159, !dbg !2334

if.then159:                                       ; preds = %if.end131
  br label %alloc_fail, !dbg !2335

if.end160:                                        ; preds = %if.end131
  %168 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2336
  %wavelet_depth161 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %168, i32 0, i32 30, !dbg !2338
  %169 = load i32, i32* %wavelet_depth161, align 4, !dbg !2338
  %sub162 = sub nsw i32 %169, 1, !dbg !2339
  store i32 %sub162, i32* %level, align 4, !dbg !2340
  br label %for.cond163, !dbg !2341

for.cond163:                                      ; preds = %for.inc197, %if.end160
  %170 = load i32, i32* %level, align 4, !dbg !2342
  %cmp164 = icmp sge i32 %170, 0, !dbg !2345
  br i1 %cmp164, label %for.body166, label %for.end198, !dbg !2346

for.body166:                                      ; preds = %for.cond163
  %171 = load i32, i32* %w, align 4, !dbg !2347
  %shr167 = ashr i32 %171, 1, !dbg !2349
  store i32 %shr167, i32* %w, align 4, !dbg !2350
  %172 = load i32, i32* %h, align 4, !dbg !2351
  %shr168 = ashr i32 %172, 1, !dbg !2352
  store i32 %shr168, i32* %h, align 4, !dbg !2353
  store i32 0, i32* %o, align 4, !dbg !2354
  br label %for.cond169, !dbg !2356

for.cond169:                                      ; preds = %for.inc194, %for.body166
  %173 = load i32, i32* %o, align 4, !dbg !2357
  %cmp170 = icmp slt i32 %173, 4, !dbg !2360
  br i1 %cmp170, label %for.body172, label %for.end196, !dbg !2361

for.body172:                                      ; preds = %for.cond169
  %174 = load i32, i32* %o, align 4, !dbg !2362
  %idxprom173 = sext i32 %174 to i64, !dbg !2364
  %175 = load i32, i32* %level, align 4, !dbg !2365
  %idxprom174 = sext i32 %175 to i64, !dbg !2364
  %176 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2364
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %176, i32 0, i32 0, !dbg !2366
  %arrayidx175 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom174, !dbg !2364
  %arrayidx176 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx175, i64 0, i64 %idxprom173, !dbg !2364
  store %struct.SubBand* %arrayidx176, %struct.SubBand** %b, align 8, !dbg !2367
  %177 = load i32, i32* %w, align 4, !dbg !2368
  %178 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2369
  %width177 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %178, i32 0, i32 2, !dbg !2370
  store i32 %177, i32* %width177, align 8, !dbg !2371
  %179 = load i32, i32* %h, align 4, !dbg !2372
  %180 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2373
  %height178 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %180, i32 0, i32 3, !dbg !2374
  store i32 %179, i32* %height178, align 4, !dbg !2375
  %181 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2376
  %coef_stride179 = getelementptr inbounds %struct.Plane, %struct.Plane* %181, i32 0, i32 6, !dbg !2377
  %182 = load i64, i64* %coef_stride179, align 8, !dbg !2377
  %183 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2378
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %183, i32 0, i32 1, !dbg !2379
  store i64 %182, i64* %stride, align 8, !dbg !2380
  %184 = load i32, i32* %o, align 4, !dbg !2381
  %cmp180 = icmp sgt i32 %184, 1, !dbg !2382
  %conv181 = zext i1 %cmp180 to i32, !dbg !2382
  %185 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2383
  %height182 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %185, i32 0, i32 3, !dbg !2384
  %186 = load i32, i32* %height182, align 4, !dbg !2384
  %mul183 = mul nsw i32 %conv181, %186, !dbg !2385
  %conv184 = sext i32 %mul183 to i64, !dbg !2386
  %187 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2387
  %stride185 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %187, i32 0, i32 1, !dbg !2388
  %188 = load i64, i64* %stride185, align 8, !dbg !2388
  %mul186 = mul nsw i64 %conv184, %188, !dbg !2389
  %189 = load i32, i32* %o, align 4, !dbg !2390
  %and187 = and i32 %189, 1, !dbg !2391
  %190 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2392
  %width188 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %190, i32 0, i32 2, !dbg !2393
  %191 = load i32, i32* %width188, align 8, !dbg !2393
  %mul189 = mul nsw i32 %and187, %191, !dbg !2394
  %conv190 = sext i32 %mul189 to i64, !dbg !2395
  %add191 = add nsw i64 %mul186, %conv190, !dbg !2396
  %conv192 = trunc i64 %add191 to i32, !dbg !2386
  store i32 %conv192, i32* %shift, align 4, !dbg !2397
  %192 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !2398
  %coef_buf193 = getelementptr inbounds %struct.Plane, %struct.Plane* %192, i32 0, i32 1, !dbg !2399
  %193 = load i32*, i32** %coef_buf193, align 8, !dbg !2399
  %194 = load i32, i32* %shift, align 4, !dbg !2400
  %idx.ext = sext i32 %194 to i64, !dbg !2401
  %add.ptr = getelementptr inbounds i32, i32* %193, i64 %idx.ext, !dbg !2401
  %195 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !2402
  %buf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %195, i32 0, i32 0, !dbg !2403
  store i32* %add.ptr, i32** %buf, align 8, !dbg !2404
  br label %for.inc194, !dbg !2405

for.inc194:                                       ; preds = %for.body172
  %196 = load i32, i32* %o, align 4, !dbg !2406
  %inc195 = add nsw i32 %196, 1, !dbg !2406
  store i32 %inc195, i32* %o, align 4, !dbg !2406
  br label %for.cond169, !dbg !2408, !llvm.loop !2409

for.end196:                                       ; preds = %for.cond169
  br label %for.inc197, !dbg !2411

for.inc197:                                       ; preds = %for.end196
  %197 = load i32, i32* %level, align 4, !dbg !2412
  %dec = add nsw i32 %197, -1, !dbg !2412
  store i32 %dec, i32* %level, align 4, !dbg !2412
  br label %for.cond163, !dbg !2414, !llvm.loop !2415

for.end198:                                       ; preds = %for.cond163
  %198 = load i32, i32* %i, align 4, !dbg !2417
  %idxprom199 = sext i32 %198 to i64, !dbg !2419
  %199 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2419
  %transform_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %199, i32 0, i32 6, !dbg !2420
  %arrayidx200 = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args, i64 0, i64 %idxprom199, !dbg !2419
  %t = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx200, i32 0, i32 5, !dbg !2421
  %200 = load i32, i32* %i, align 4, !dbg !2422
  %idxprom201 = sext i32 %200 to i64, !dbg !2423
  %201 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2423
  %plane202 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %201, i32 0, i32 2, !dbg !2424
  %arrayidx203 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane202, i64 0, i64 %idxprom201, !dbg !2423
  %coef_stride204 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx203, i32 0, i32 6, !dbg !2425
  %202 = load i64, i64* %coef_stride204, align 8, !dbg !2425
  %conv205 = trunc i64 %202 to i32, !dbg !2423
  %203 = load i32, i32* %i, align 4, !dbg !2426
  %idxprom206 = sext i32 %203 to i64, !dbg !2427
  %204 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2427
  %plane207 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %204, i32 0, i32 2, !dbg !2428
  %arrayidx208 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane207, i64 0, i64 %idxprom206, !dbg !2427
  %dwt_height209 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx208, i32 0, i32 5, !dbg !2429
  %205 = load i32, i32* %dwt_height209, align 4, !dbg !2429
  %206 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2430
  %slice_width210 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %206, i32 0, i32 33, !dbg !2431
  %207 = load i32, i32* %slice_width210, align 8, !dbg !2431
  %208 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2432
  %slice_height211 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %208, i32 0, i32 32, !dbg !2433
  %209 = load i32, i32* %slice_height211, align 4, !dbg !2433
  %call212 = call i32 @ff_vc2enc_init_transforms(%struct.VC2TransformContext* %t, i32 %conv205, i32 %205, i32 %207, i32 %209), !dbg !2434
  %tobool213 = icmp ne i32 %call212, 0, !dbg !2434
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !2435

if.then214:                                       ; preds = %for.end198
  br label %alloc_fail, !dbg !2436

if.end215:                                        ; preds = %for.end198
  br label %for.inc216, !dbg !2437

for.inc216:                                       ; preds = %if.end215
  %210 = load i32, i32* %i, align 4, !dbg !2438
  %inc217 = add nsw i32 %210, 1, !dbg !2438
  store i32 %inc217, i32* %i, align 4, !dbg !2438
  br label %for.cond108, !dbg !2440, !llvm.loop !2441

for.end218:                                       ; preds = %for.cond108
  %211 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2443
  %plane219 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %211, i32 0, i32 2, !dbg !2444
  %arrayidx220 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane219, i64 0, i64 0, !dbg !2443
  %dwt_width221 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx220, i32 0, i32 4, !dbg !2445
  %212 = load i32, i32* %dwt_width221, align 8, !dbg !2445
  %213 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2446
  %slice_width222 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %213, i32 0, i32 33, !dbg !2447
  %214 = load i32, i32* %slice_width222, align 8, !dbg !2447
  %div = sdiv i32 %212, %214, !dbg !2448
  %215 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2449
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %215, i32 0, i32 17, !dbg !2450
  store i32 %div, i32* %num_x, align 4, !dbg !2451
  %216 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2452
  %plane223 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %216, i32 0, i32 2, !dbg !2453
  %arrayidx224 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane223, i64 0, i64 0, !dbg !2452
  %dwt_height225 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx224, i32 0, i32 5, !dbg !2454
  %217 = load i32, i32* %dwt_height225, align 4, !dbg !2454
  %218 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2455
  %slice_height226 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %218, i32 0, i32 32, !dbg !2456
  %219 = load i32, i32* %slice_height226, align 4, !dbg !2456
  %div227 = sdiv i32 %217, %219, !dbg !2457
  %220 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2458
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %220, i32 0, i32 18, !dbg !2459
  store i32 %div227, i32* %num_y, align 8, !dbg !2460
  %221 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2461
  %num_x228 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %221, i32 0, i32 17, !dbg !2462
  %222 = load i32, i32* %num_x228, align 4, !dbg !2462
  %223 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2463
  %num_y229 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %223, i32 0, i32 18, !dbg !2464
  %224 = load i32, i32* %num_y229, align 8, !dbg !2464
  %mul230 = mul nsw i32 %222, %224, !dbg !2465
  %conv231 = sext i32 %mul230 to i64, !dbg !2461
  %call232 = call noalias i8* @av_calloc(i64 %conv231, i64 536), !dbg !2466
  %225 = bitcast i8* %call232 to %struct.SliceArgs*, !dbg !2466
  %226 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2467
  %slice_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %226, i32 0, i32 5, !dbg !2468
  store %struct.SliceArgs* %225, %struct.SliceArgs** %slice_args, align 8, !dbg !2469
  %227 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2470
  %slice_args233 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %227, i32 0, i32 5, !dbg !2472
  %228 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_args233, align 8, !dbg !2472
  %tobool234 = icmp ne %struct.SliceArgs* %228, null, !dbg !2470
  br i1 %tobool234, label %if.end236, label %if.then235, !dbg !2473

if.then235:                                       ; preds = %for.end218
  br label %alloc_fail, !dbg !2474

if.end236:                                        ; preds = %for.end218
  store i32 0, i32* %i, align 4, !dbg !2475
  br label %for.cond237, !dbg !2477

for.cond237:                                      ; preds = %for.inc292, %if.end236
  %229 = load i32, i32* %i, align 4, !dbg !2478
  %cmp238 = icmp slt i32 %229, 116, !dbg !2481
  br i1 %cmp238, label %for.body240, label %for.end294, !dbg !2482

for.body240:                                      ; preds = %for.cond237
  call void @llvm.dbg.declare(metadata i64* %qf, metadata !2483, metadata !1752), !dbg !2485
  %230 = load i32, i32* %i, align 4, !dbg !2486
  %idxprom241 = sext i32 %230 to i64, !dbg !2487
  %arrayidx242 = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom241, !dbg !2487
  %231 = load i32, i32* %arrayidx242, align 4, !dbg !2487
  %conv243 = sext i32 %231 to i64, !dbg !2487
  store i64 %conv243, i64* %qf, align 8, !dbg !2485
  call void @llvm.dbg.declare(metadata i32* %m, metadata !2488, metadata !1752), !dbg !2490
  %232 = load i64, i64* %qf, align 8, !dbg !2491
  %or = or i64 %232, 1, !dbg !2492
  %conv244 = trunc i64 %or to i32, !dbg !2493
  %233 = call i32 @llvm.ctlz.i32(i32 %conv244, i1 true), !dbg !2494
  %sub245 = sub nsw i32 31, %233, !dbg !2495
  store i32 %sub245, i32* %m, align 4, !dbg !2490
  call void @llvm.dbg.declare(metadata i32* %t246, metadata !2496, metadata !1752), !dbg !2497
  %234 = load i32, i32* %m, align 4, !dbg !2498
  %add247 = add i32 %234, 32, !dbg !2499
  %sh_prom = zext i32 %add247 to i64, !dbg !2500
  %shl248 = shl i64 1, %sh_prom, !dbg !2500
  %235 = load i64, i64* %qf, align 8, !dbg !2501
  %div249 = udiv i64 %shl248, %235, !dbg !2502
  %conv250 = trunc i64 %div249 to i32, !dbg !2503
  store i32 %conv250, i32* %t246, align 4, !dbg !2497
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2504, metadata !1752), !dbg !2505
  %236 = load i32, i32* %t246, align 4, !dbg !2506
  %conv251 = zext i32 %236 to i64, !dbg !2506
  %237 = load i64, i64* %qf, align 8, !dbg !2507
  %mul252 = mul i64 %conv251, %237, !dbg !2508
  %238 = load i64, i64* %qf, align 8, !dbg !2509
  %add253 = add i64 %mul252, %238, !dbg !2510
  %and254 = and i64 %add253, 4294967295, !dbg !2511
  %conv255 = trunc i64 %and254 to i32, !dbg !2512
  store i32 %conv255, i32* %r, align 4, !dbg !2505
  %239 = load i64, i64* %qf, align 8, !dbg !2513
  %240 = load i64, i64* %qf, align 8, !dbg !2515
  %sub256 = sub i64 %240, 1, !dbg !2516
  %and257 = and i64 %239, %sub256, !dbg !2517
  %tobool258 = icmp ne i64 %and257, 0, !dbg !2517
  br i1 %tobool258, label %if.else267, label %if.then259, !dbg !2518

if.then259:                                       ; preds = %for.body240
  %241 = load i32, i32* %i, align 4, !dbg !2519
  %idxprom260 = sext i32 %241 to i64, !dbg !2521
  %242 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2521
  %qmagic_lut = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %242, i32 0, i32 16, !dbg !2522
  %arrayidx261 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut, i64 0, i64 %idxprom260, !dbg !2521
  %arrayidx262 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx261, i64 0, i64 0, !dbg !2521
  store i32 -1, i32* %arrayidx262, align 4, !dbg !2523
  %243 = load i32, i32* %i, align 4, !dbg !2524
  %idxprom263 = sext i32 %243 to i64, !dbg !2525
  %244 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2525
  %qmagic_lut264 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %244, i32 0, i32 16, !dbg !2526
  %arrayidx265 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut264, i64 0, i64 %idxprom263, !dbg !2525
  %arrayidx266 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx265, i64 0, i64 1, !dbg !2525
  store i32 -1, i32* %arrayidx266, align 4, !dbg !2527
  br label %if.end291, !dbg !2528

if.else267:                                       ; preds = %for.body240
  %245 = load i32, i32* %r, align 4, !dbg !2529
  %246 = load i32, i32* %m, align 4, !dbg !2532
  %shl268 = shl i32 1, %246, !dbg !2533
  %cmp269 = icmp ule i32 %245, %shl268, !dbg !2534
  br i1 %cmp269, label %if.then271, label %if.else281, !dbg !2529

if.then271:                                       ; preds = %if.else267
  %247 = load i32, i32* %t246, align 4, !dbg !2535
  %add272 = add i32 %247, 1, !dbg !2537
  %248 = load i32, i32* %i, align 4, !dbg !2538
  %idxprom273 = sext i32 %248 to i64, !dbg !2539
  %249 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2539
  %qmagic_lut274 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %249, i32 0, i32 16, !dbg !2540
  %arrayidx275 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut274, i64 0, i64 %idxprom273, !dbg !2539
  %arrayidx276 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx275, i64 0, i64 0, !dbg !2539
  store i32 %add272, i32* %arrayidx276, align 4, !dbg !2541
  %250 = load i32, i32* %i, align 4, !dbg !2542
  %idxprom277 = sext i32 %250 to i64, !dbg !2543
  %251 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2543
  %qmagic_lut278 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %251, i32 0, i32 16, !dbg !2544
  %arrayidx279 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut278, i64 0, i64 %idxprom277, !dbg !2543
  %arrayidx280 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx279, i64 0, i64 1, !dbg !2543
  store i32 0, i32* %arrayidx280, align 4, !dbg !2545
  br label %if.end290, !dbg !2546

if.else281:                                       ; preds = %if.else267
  %252 = load i32, i32* %t246, align 4, !dbg !2547
  %253 = load i32, i32* %i, align 4, !dbg !2549
  %idxprom282 = sext i32 %253 to i64, !dbg !2550
  %254 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2550
  %qmagic_lut283 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %254, i32 0, i32 16, !dbg !2551
  %arrayidx284 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut283, i64 0, i64 %idxprom282, !dbg !2550
  %arrayidx285 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx284, i64 0, i64 0, !dbg !2550
  store i32 %252, i32* %arrayidx285, align 4, !dbg !2552
  %255 = load i32, i32* %t246, align 4, !dbg !2553
  %256 = load i32, i32* %i, align 4, !dbg !2554
  %idxprom286 = sext i32 %256 to i64, !dbg !2555
  %257 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2555
  %qmagic_lut287 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %257, i32 0, i32 16, !dbg !2556
  %arrayidx288 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut287, i64 0, i64 %idxprom286, !dbg !2555
  %arrayidx289 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx288, i64 0, i64 1, !dbg !2555
  store i32 %255, i32* %arrayidx289, align 4, !dbg !2557
  br label %if.end290

if.end290:                                        ; preds = %if.else281, %if.then271
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then259
  br label %for.inc292, !dbg !2558

for.inc292:                                       ; preds = %if.end291
  %258 = load i32, i32* %i, align 4, !dbg !2559
  %inc293 = add nsw i32 %258, 1, !dbg !2559
  store i32 %inc293, i32* %i, align 4, !dbg !2559
  br label %for.cond237, !dbg !2561, !llvm.loop !2562

for.end294:                                       ; preds = %for.cond237
  store i32 0, i32* %retval, align 4, !dbg !2564
  br label %return, !dbg !2564

alloc_fail:                                       ; preds = %if.then235, %if.then214, %if.then159
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2565
  %call295 = call i32 @vc2_encode_end(%struct.AVCodecContext* %259), !dbg !2566
  %260 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2567
  %261 = bitcast %struct.AVCodecContext* %260 to i8*, !dbg !2567
  call void (i8*, i32, i8*, ...) @av_log(i8* %261, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i32 0, i32 0)), !dbg !2568
  store i32 -12, i32* %retval, align 4, !dbg !2569
  br label %return, !dbg !2569

return:                                           ; preds = %alloc_fail, %for.end294, %if.then78, %if.else, %if.then59, %if.then50
  %262 = load i32, i32* %retval, align 4, !dbg !2570
  ret i32 %262, !dbg !2570
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vc2_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet) #0 !dbg !2571 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %slice_ceil = alloca i32, align 4
  %sig_size = alloca i32, align 4
  %s = alloca %struct.VC2EncContext*, align 8
  %bitexact = alloca i32, align 4
  %aux_data = alloca i8*, align 8
  %aux_data_size = alloca i32, align 4
  %header_size = alloca i32, align 4
  %r_bitrate = alloca i64, align 8
  %r_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2572, metadata !1752), !dbg !2573
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2574, metadata !1752), !dbg !2575
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2576, metadata !1752), !dbg !2577
  store i32* %got_packet, i32** %got_packet.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet.addr, metadata !2578, metadata !1752), !dbg !2579
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2580, metadata !1752), !dbg !2581
  store i32 0, i32* %ret, align 4, !dbg !2581
  call void @llvm.dbg.declare(metadata i32* %slice_ceil, metadata !2582, metadata !1752), !dbg !2583
  call void @llvm.dbg.declare(metadata i32* %sig_size, metadata !2584, metadata !1752), !dbg !2585
  store i32 256, i32* %sig_size, align 4, !dbg !2585
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !2586, metadata !1752), !dbg !2587
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2588
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2589
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2589
  %2 = bitcast i8* %1 to %struct.VC2EncContext*, !dbg !2588
  store %struct.VC2EncContext* %2, %struct.VC2EncContext** %s, align 8, !dbg !2587
  call void @llvm.dbg.declare(metadata i32* %bitexact, metadata !2590, metadata !1752), !dbg !2591
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2592
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 13, !dbg !2593
  %4 = load i32, i32* %flags, align 4, !dbg !2593
  %and = and i32 %4, 8388608, !dbg !2594
  store i32 %and, i32* %bitexact, align 4, !dbg !2591
  call void @llvm.dbg.declare(metadata i8** %aux_data, metadata !2595, metadata !1752), !dbg !2596
  %5 = load i32, i32* %bitexact, align 4, !dbg !2597
  %tobool = icmp ne i32 %5, 0, !dbg !2597
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), !dbg !2597
  store i8* %cond, i8** %aux_data, align 8, !dbg !2596
  call void @llvm.dbg.declare(metadata i32* %aux_data_size, metadata !2598, metadata !1752), !dbg !2599
  %6 = load i32, i32* %bitexact, align 4, !dbg !2600
  %tobool1 = icmp ne i32 %6, 0, !dbg !2600
  %cond2 = select i1 %tobool1, i64 5, i64 14, !dbg !2600
  %conv = trunc i64 %cond2 to i32, !dbg !2600
  store i32 %conv, i32* %aux_data_size, align 4, !dbg !2599
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !2601, metadata !1752), !dbg !2602
  %7 = load i32, i32* %aux_data_size, align 4, !dbg !2603
  %add = add nsw i32 100, %7, !dbg !2604
  store i32 %add, i32* %header_size, align 4, !dbg !2602
  call void @llvm.dbg.declare(metadata i64* %r_bitrate, metadata !2605, metadata !1752), !dbg !2606
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2607
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 9, !dbg !2608
  %9 = load i64, i64* %bit_rate, align 8, !dbg !2608
  %10 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2609
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %10, i32 0, i32 34, !dbg !2610
  %11 = load i32, i32* %interlaced, align 4, !dbg !2610
  %sh_prom = zext i32 %11 to i64, !dbg !2611
  %shr = ashr i64 %9, %sh_prom, !dbg !2611
  store i64 %shr, i64* %r_bitrate, align 8, !dbg !2606
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2612
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2613
  %avctx3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 3, !dbg !2614
  store %struct.AVCodecContext* %12, %struct.AVCodecContext** %avctx3, align 8, !dbg !2615
  %14 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2616
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %14, i32 0, i32 20, !dbg !2617
  store i32 2, i32* %size_scaler, align 8, !dbg !2618
  %15 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2619
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %15, i32 0, i32 19, !dbg !2620
  store i32 0, i32* %prefix_bytes, align 4, !dbg !2621
  %16 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2622
  %last_parse_code = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %16, i32 0, i32 37, !dbg !2623
  store i32 0, i32* %last_parse_code, align 8, !dbg !2624
  %17 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2625
  %next_parse_offset = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %17, i32 0, i32 36, !dbg !2626
  store i32 0, i32* %next_parse_offset, align 4, !dbg !2627
  %18 = load i64, i64* %r_bitrate, align 8, !dbg !2628
  %19 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2629
  %avctx4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %19, i32 0, i32 3, !dbg !2630
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 8, !dbg !2630
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 17, !dbg !2631
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !2632
  %21 = load i32, i32* %num, align 4, !dbg !2632
  %conv5 = sext i32 %21 to i64, !dbg !2629
  %22 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2633
  %avctx6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %22, i32 0, i32 3, !dbg !2634
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !2634
  %time_base7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 17, !dbg !2635
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base7, i32 0, i32 1, !dbg !2636
  %24 = load i32, i32* %den, align 4, !dbg !2636
  %conv8 = sext i32 %24 to i64, !dbg !2633
  %call = call i64 @av_rescale(i64 %18, i64 %conv5, i64 %conv8) #2, !dbg !2637
  %shr9 = ashr i64 %call, 3, !dbg !2638
  %25 = load i32, i32* %header_size, align 4, !dbg !2639
  %conv10 = sext i32 %25 to i64, !dbg !2639
  %sub = sub nsw i64 %shr9, %conv10, !dbg !2640
  %conv11 = trunc i64 %sub to i32, !dbg !2641
  %26 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2642
  %frame_max_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %26, i32 0, i32 23, !dbg !2643
  store i32 %conv11, i32* %frame_max_bytes, align 4, !dbg !2644
  %27 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2645
  %frame_max_bytes12 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %27, i32 0, i32 23, !dbg !2646
  %28 = load i32, i32* %frame_max_bytes12, align 4, !dbg !2646
  %conv13 = sext i32 %28 to i64, !dbg !2645
  %29 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2647
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %29, i32 0, i32 17, !dbg !2648
  %30 = load i32, i32* %num_x, align 4, !dbg !2648
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2649
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %31, i32 0, i32 18, !dbg !2650
  %32 = load i32, i32* %num_y, align 8, !dbg !2650
  %mul = mul nsw i32 %30, %32, !dbg !2651
  %conv14 = sext i32 %mul to i64, !dbg !2647
  %call15 = call i64 @av_rescale(i64 %conv13, i64 1, i64 %conv14) #2, !dbg !2652
  %conv16 = trunc i64 %call15 to i32, !dbg !2652
  store i32 %conv16, i32* %slice_ceil, align 4, !dbg !2653
  %33 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2654
  %slice_max_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %33, i32 0, i32 24, !dbg !2655
  store i32 %conv16, i32* %slice_max_bytes, align 8, !dbg !2656
  br label %while.cond, !dbg !2657

while.cond:                                       ; preds = %if.end, %entry
  %34 = load i32, i32* %sig_size, align 4, !dbg !2658
  %cmp = icmp sgt i32 %34, 255, !dbg !2660
  br i1 %cmp, label %while.body, label %while.end, !dbg !2661

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %r_size, metadata !2662, metadata !1752), !dbg !2664
  %35 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2665
  %slice_max_bytes18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %35, i32 0, i32 24, !dbg !2666
  %36 = load i32, i32* %slice_max_bytes18, align 8, !dbg !2666
  %37 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2667
  %size_scaler19 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %37, i32 0, i32 20, !dbg !2668
  %38 = load i32, i32* %size_scaler19, align 8, !dbg !2668
  %add20 = add nsw i32 %36, %38, !dbg !2669
  %sub21 = sub nsw i32 %add20, 1, !dbg !2670
  %39 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2671
  %size_scaler22 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %39, i32 0, i32 20, !dbg !2672
  %40 = load i32, i32* %size_scaler22, align 8, !dbg !2672
  %sub23 = sub nsw i32 %40, 1, !dbg !2673
  %neg = xor i32 %sub23, -1, !dbg !2674
  %and24 = and i32 %sub21, %neg, !dbg !2675
  %add25 = add nsw i32 %and24, 4, !dbg !2676
  %41 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2677
  %prefix_bytes26 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %41, i32 0, i32 19, !dbg !2678
  %42 = load i32, i32* %prefix_bytes26, align 4, !dbg !2678
  %add27 = add nsw i32 %add25, %42, !dbg !2679
  store i32 %add27, i32* %r_size, align 4, !dbg !2664
  %43 = load i32, i32* %r_size, align 4, !dbg !2680
  %44 = load i32, i32* %slice_ceil, align 4, !dbg !2682
  %cmp28 = icmp sgt i32 %43, %44, !dbg !2683
  br i1 %cmp28, label %if.then, label %if.end, !dbg !2684

if.then:                                          ; preds = %while.body
  %45 = load i32, i32* %r_size, align 4, !dbg !2685
  %46 = load i32, i32* %slice_ceil, align 4, !dbg !2687
  %sub30 = sub nsw i32 %45, %46, !dbg !2688
  %47 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2689
  %slice_max_bytes31 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %47, i32 0, i32 24, !dbg !2690
  %48 = load i32, i32* %slice_max_bytes31, align 8, !dbg !2691
  %sub32 = sub nsw i32 %48, %sub30, !dbg !2691
  store i32 %sub32, i32* %slice_max_bytes31, align 8, !dbg !2691
  %49 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2692
  %slice_max_bytes33 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %49, i32 0, i32 24, !dbg !2693
  %50 = load i32, i32* %slice_max_bytes33, align 8, !dbg !2693
  %51 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2694
  %size_scaler34 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %51, i32 0, i32 20, !dbg !2695
  %52 = load i32, i32* %size_scaler34, align 8, !dbg !2695
  %add35 = add nsw i32 %50, %52, !dbg !2696
  %sub36 = sub nsw i32 %add35, 1, !dbg !2697
  %53 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2698
  %size_scaler37 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %53, i32 0, i32 20, !dbg !2699
  %54 = load i32, i32* %size_scaler37, align 8, !dbg !2699
  %sub38 = sub nsw i32 %54, 1, !dbg !2700
  %neg39 = xor i32 %sub38, -1, !dbg !2701
  %and40 = and i32 %sub36, %neg39, !dbg !2702
  %add41 = add nsw i32 %and40, 4, !dbg !2703
  %55 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2704
  %prefix_bytes42 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %55, i32 0, i32 19, !dbg !2705
  %56 = load i32, i32* %prefix_bytes42, align 4, !dbg !2705
  %add43 = add nsw i32 %add41, %56, !dbg !2706
  store i32 %add43, i32* %r_size, align 4, !dbg !2707
  br label %if.end, !dbg !2708

if.end:                                           ; preds = %if.then, %while.body
  %57 = load i32, i32* %r_size, align 4, !dbg !2709
  %58 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2710
  %size_scaler44 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %58, i32 0, i32 20, !dbg !2711
  %59 = load i32, i32* %size_scaler44, align 8, !dbg !2711
  %div = sdiv i32 %57, %59, !dbg !2712
  store i32 %div, i32* %sig_size, align 4, !dbg !2713
  %60 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2714
  %size_scaler45 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %60, i32 0, i32 20, !dbg !2715
  %61 = load i32, i32* %size_scaler45, align 8, !dbg !2716
  %shl = shl i32 %61, 1, !dbg !2716
  store i32 %shl, i32* %size_scaler45, align 8, !dbg !2716
  br label %while.cond, !dbg !2717, !llvm.loop !2719

while.end:                                        ; preds = %while.cond
  %62 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2720
  %slice_max_bytes46 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %62, i32 0, i32 24, !dbg !2721
  %63 = load i32, i32* %slice_max_bytes46, align 8, !dbg !2721
  %conv47 = sitofp i32 %63 to double, !dbg !2720
  %64 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2722
  %slice_max_bytes48 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %64, i32 0, i32 24, !dbg !2723
  %65 = load i32, i32* %slice_max_bytes48, align 8, !dbg !2723
  %conv49 = sitofp i32 %65 to double, !dbg !2722
  %66 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2724
  %tolerance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %66, i32 0, i32 28, !dbg !2725
  %67 = load double, double* %tolerance, align 8, !dbg !2725
  %div50 = fdiv double %67, 1.000000e+02, !dbg !2726
  %mul51 = fmul double %conv49, %div50, !dbg !2727
  %sub52 = fsub double %conv47, %mul51, !dbg !2728
  %conv53 = fptosi double %sub52 to i32, !dbg !2720
  %68 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2729
  %slice_min_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %68, i32 0, i32 25, !dbg !2730
  store i32 %conv53, i32* %slice_min_bytes, align 4, !dbg !2731
  %69 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2732
  %70 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2733
  %71 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2734
  %72 = load i8*, i8** %aux_data, align 8, !dbg !2735
  %73 = load i32, i32* %header_size, align 4, !dbg !2736
  %74 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2737
  %interlaced54 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %74, i32 0, i32 34, !dbg !2738
  %75 = load i32, i32* %interlaced54, align 4, !dbg !2738
  %call55 = call i32 @encode_frame(%struct.VC2EncContext* %69, %struct.AVPacket* %70, %struct.AVFrame* %71, i8* %72, i32 %73, i32 %75), !dbg !2739
  store i32 %call55, i32* %ret, align 4, !dbg !2740
  %76 = load i32, i32* %ret, align 4, !dbg !2741
  %tobool56 = icmp ne i32 %76, 0, !dbg !2741
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !2743

if.then57:                                        ; preds = %while.end
  %77 = load i32, i32* %ret, align 4, !dbg !2744
  store i32 %77, i32* %retval, align 4, !dbg !2745
  br label %return, !dbg !2745

if.end58:                                         ; preds = %while.end
  %78 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2746
  %interlaced59 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %78, i32 0, i32 34, !dbg !2748
  %79 = load i32, i32* %interlaced59, align 4, !dbg !2748
  %tobool60 = icmp ne i32 %79, 0, !dbg !2746
  br i1 %tobool60, label %if.then61, label %if.end66, !dbg !2749

if.then61:                                        ; preds = %if.end58
  %80 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2750
  %81 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2752
  %82 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2753
  %83 = load i8*, i8** %aux_data, align 8, !dbg !2754
  %84 = load i32, i32* %header_size, align 4, !dbg !2755
  %call62 = call i32 @encode_frame(%struct.VC2EncContext* %80, %struct.AVPacket* %81, %struct.AVFrame* %82, i8* %83, i32 %84, i32 2), !dbg !2756
  store i32 %call62, i32* %ret, align 4, !dbg !2757
  %85 = load i32, i32* %ret, align 4, !dbg !2758
  %tobool63 = icmp ne i32 %85, 0, !dbg !2758
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !2760

if.then64:                                        ; preds = %if.then61
  %86 = load i32, i32* %ret, align 4, !dbg !2761
  store i32 %86, i32* %retval, align 4, !dbg !2762
  br label %return, !dbg !2762

if.end65:                                         ; preds = %if.then61
  br label %if.end66, !dbg !2763

if.end66:                                         ; preds = %if.end65, %if.end58
  %87 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2764
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %87, i32 0, i32 1, !dbg !2765
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !2766
  %88 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2767
  %pb67 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %88, i32 0, i32 1, !dbg !2768
  %call68 = call i32 @put_bits_count(%struct.PutBitContext* %pb67), !dbg !2769
  %shr69 = ashr i32 %call68, 3, !dbg !2770
  %89 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2771
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %89, i32 0, i32 4, !dbg !2772
  store i32 %shr69, i32* %size, align 8, !dbg !2773
  %90 = load i32*, i32** %got_packet.addr, align 8, !dbg !2774
  store i32 1, i32* %90, align 4, !dbg !2775
  store i32 0, i32* %retval, align 4, !dbg !2776
  br label %return, !dbg !2776

return:                                           ; preds = %if.end66, %if.then64, %if.then57
  %91 = load i32, i32* %retval, align 4, !dbg !2777
  ret i32 %91, !dbg !2777
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vc2_encode_end(%struct.AVCodecContext* %avctx) #0 !dbg !2778 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.VC2EncContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2779, metadata !1752), !dbg !2780
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2781, metadata !1752), !dbg !2782
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !2783, metadata !1752), !dbg !2784
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2785
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2786
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2786
  %2 = bitcast i8* %1 to %struct.VC2EncContext*, !dbg !2785
  store %struct.VC2EncContext* %2, %struct.VC2EncContext** %s, align 8, !dbg !2784
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2787
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !2787
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2788
  %q_avg = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 27, !dbg !2789
  %6 = load i32, i32* %q_avg, align 4, !dbg !2789
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0), i32 %6), !dbg !2790
  store i32 0, i32* %i, align 4, !dbg !2791
  br label %for.cond, !dbg !2793

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !2794
  %cmp = icmp slt i32 %7, 3, !dbg !2797
  br i1 %cmp, label %for.body, label %for.end, !dbg !2798

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !2799
  %idxprom = sext i32 %8 to i64, !dbg !2801
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2801
  %transform_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 6, !dbg !2802
  %arrayidx = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args, i64 0, i64 %idxprom, !dbg !2801
  %t = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx, i32 0, i32 5, !dbg !2803
  call void @ff_vc2enc_free_transforms(%struct.VC2TransformContext* %t), !dbg !2804
  %10 = load i32, i32* %i, align 4, !dbg !2805
  %idxprom1 = sext i32 %10 to i64, !dbg !2806
  %11 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2806
  %plane = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %11, i32 0, i32 2, !dbg !2807
  %arrayidx2 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom1, !dbg !2806
  %coef_buf = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx2, i32 0, i32 1, !dbg !2808
  %12 = bitcast i32** %coef_buf to i8*, !dbg !2809
  call void @av_freep(i8* %12), !dbg !2810
  br label %for.inc, !dbg !2811

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !2812
  %inc = add nsw i32 %13, 1, !dbg !2812
  store i32 %inc, i32* %i, align 4, !dbg !2812
  br label %for.cond, !dbg !2814, !llvm.loop !2815

for.end:                                          ; preds = %for.cond
  %14 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !2817
  %slice_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %14, i32 0, i32 5, !dbg !2818
  %15 = bitcast %struct.SliceArgs** %slice_args to i8*, !dbg !2819
  call void @av_freep(i8* %15), !dbg !2820
  ret i32 0, !dbg !2821
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #1

declare void @av_log(i8*, i32, i8*, ...) #1

declare i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32*, i32*) #1

declare noalias i8* @av_mallocz(i64) #1

declare i32 @ff_vc2enc_init_transforms(%struct.VC2TransformContext*, i32, i32, i32, i32) #1

declare noalias i8* @av_calloc(i64, i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @encode_frame(%struct.VC2EncContext* %s, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i8* %aux_data, i32 %header_size, i32 %field) #4 !dbg !2822 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %aux_data.addr = alloca i8*, align 8
  %header_size.addr = alloca i32, align 4
  %field.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %max_frame_bytes = alloca i64, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !2825, metadata !1752), !dbg !2826
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2827, metadata !1752), !dbg !2828
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2829, metadata !1752), !dbg !2830
  store i8* %aux_data, i8** %aux_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %aux_data.addr, metadata !2831, metadata !1752), !dbg !2832
  store i32 %header_size, i32* %header_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header_size.addr, metadata !2833, metadata !1752), !dbg !2834
  store i32 %field, i32* %field.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %field.addr, metadata !2835, metadata !1752), !dbg !2836
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2837, metadata !1752), !dbg !2838
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2839, metadata !1752), !dbg !2840
  call void @llvm.dbg.declare(metadata i64* %max_frame_bytes, metadata !2841, metadata !1752), !dbg !2842
  store i32 0, i32* %i, align 4, !dbg !2843
  br label %for.cond, !dbg !2845

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2846
  %cmp = icmp slt i32 %0, 3, !dbg !2849
  br i1 %cmp, label %for.body, label %for.end, !dbg !2850

for.body:                                         ; preds = %for.cond
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2851
  %2 = bitcast %struct.VC2EncContext* %1 to i8*, !dbg !2851
  %3 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom = sext i32 %3 to i64, !dbg !2854
  %4 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2854
  %transform_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %4, i32 0, i32 6, !dbg !2855
  %arrayidx = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args, i64 0, i64 %idxprom, !dbg !2854
  %ctx = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx, i32 0, i32 0, !dbg !2856
  store i8* %2, i8** %ctx, align 8, !dbg !2857
  %5 = load i32, i32* %field.addr, align 4, !dbg !2858
  %6 = load i32, i32* %i, align 4, !dbg !2859
  %idxprom1 = sext i32 %6 to i64, !dbg !2860
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2860
  %transform_args2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 6, !dbg !2861
  %arrayidx3 = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args2, i64 0, i64 %idxprom1, !dbg !2860
  %field4 = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx3, i32 0, i32 4, !dbg !2862
  store i32 %5, i32* %field4, align 8, !dbg !2863
  %8 = load i32, i32* %i, align 4, !dbg !2864
  %idxprom5 = sext i32 %8 to i64, !dbg !2865
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2865
  %plane = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 2, !dbg !2866
  %arrayidx6 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom5, !dbg !2865
  %10 = load i32, i32* %i, align 4, !dbg !2867
  %idxprom7 = sext i32 %10 to i64, !dbg !2868
  %11 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2868
  %transform_args8 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %11, i32 0, i32 6, !dbg !2869
  %arrayidx9 = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args8, i64 0, i64 %idxprom7, !dbg !2868
  %plane10 = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx9, i32 0, i32 1, !dbg !2870
  store %struct.Plane* %arrayidx6, %struct.Plane** %plane10, align 8, !dbg !2871
  %12 = load i32, i32* %i, align 4, !dbg !2872
  %idxprom11 = sext i32 %12 to i64, !dbg !2873
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2873
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 0, !dbg !2874
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom11, !dbg !2873
  %14 = load i8*, i8** %arrayidx12, align 8, !dbg !2873
  %15 = load i32, i32* %i, align 4, !dbg !2875
  %idxprom13 = sext i32 %15 to i64, !dbg !2876
  %16 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2876
  %transform_args14 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %16, i32 0, i32 6, !dbg !2877
  %arrayidx15 = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args14, i64 0, i64 %idxprom13, !dbg !2876
  %idata = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx15, i32 0, i32 2, !dbg !2878
  store i8* %14, i8** %idata, align 8, !dbg !2879
  %17 = load i32, i32* %i, align 4, !dbg !2880
  %idxprom16 = sext i32 %17 to i64, !dbg !2881
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2881
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 1, !dbg !2882
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom16, !dbg !2881
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !2881
  %conv = sext i32 %19 to i64, !dbg !2881
  %20 = load i32, i32* %i, align 4, !dbg !2883
  %idxprom18 = sext i32 %20 to i64, !dbg !2884
  %21 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2884
  %transform_args19 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %21, i32 0, i32 6, !dbg !2885
  %arrayidx20 = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args19, i64 0, i64 %idxprom18, !dbg !2884
  %istride = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %arrayidx20, i32 0, i32 3, !dbg !2886
  store i64 %conv, i64* %istride, align 8, !dbg !2887
  br label %for.inc, !dbg !2888

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !2889
  %inc = add nsw i32 %22, 1, !dbg !2889
  store i32 %inc, i32* %i, align 4, !dbg !2889
  br label %for.cond, !dbg !2891, !llvm.loop !2892

for.end:                                          ; preds = %for.cond
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2894
  %avctx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 3, !dbg !2895
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2895
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 150, !dbg !2896
  %25 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !2896
  %26 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2897
  %avctx21 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %26, i32 0, i32 3, !dbg !2898
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx21, align 8, !dbg !2898
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2899
  %transform_args22 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 6, !dbg !2900
  %arraydecay = getelementptr inbounds [3 x %struct.TransformArgs], [3 x %struct.TransformArgs]* %transform_args22, i32 0, i32 0, !dbg !2899
  %29 = bitcast %struct.TransformArgs* %arraydecay to i8*, !dbg !2899
  %call = call i32 %25(%struct.AVCodecContext* %27, i32 (%struct.AVCodecContext*, i8*)* @dwt_plane, i8* %29, i32* null, i32 3, i32 112), !dbg !2894
  %30 = load i32, i32* %header_size.addr, align 4, !dbg !2901
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2902
  %call23 = call i32 @calc_slice_sizes(%struct.VC2EncContext* %31), !dbg !2903
  %add = add nsw i32 %30, %call23, !dbg !2904
  %conv24 = sext i32 %add to i64, !dbg !2901
  store i64 %conv24, i64* %max_frame_bytes, align 8, !dbg !2905
  %32 = load i32, i32* %field.addr, align 4, !dbg !2906
  %cmp25 = icmp slt i32 %32, 2, !dbg !2908
  br i1 %cmp25, label %if.then, label %if.end35, !dbg !2909

if.then:                                          ; preds = %for.end
  %33 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2910
  %avctx27 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %33, i32 0, i32 3, !dbg !2912
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx27, align 8, !dbg !2912
  %35 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2913
  %36 = load i64, i64* %max_frame_bytes, align 8, !dbg !2914
  %37 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2915
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %37, i32 0, i32 34, !dbg !2916
  %38 = load i32, i32* %interlaced, align 4, !dbg !2916
  %sh_prom = zext i32 %38 to i64, !dbg !2917
  %shl = shl i64 %36, %sh_prom, !dbg !2917
  %39 = load i64, i64* %max_frame_bytes, align 8, !dbg !2918
  %40 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2919
  %interlaced28 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %40, i32 0, i32 34, !dbg !2920
  %41 = load i32, i32* %interlaced28, align 4, !dbg !2920
  %sh_prom29 = zext i32 %41 to i64, !dbg !2921
  %shl30 = shl i64 %39, %sh_prom29, !dbg !2921
  %call31 = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %34, %struct.AVPacket* %35, i64 %shl, i64 %shl30), !dbg !2922
  store i32 %call31, i32* %ret, align 4, !dbg !2923
  %42 = load i32, i32* %ret, align 4, !dbg !2924
  %tobool = icmp ne i32 %42, 0, !dbg !2924
  br i1 %tobool, label %if.then32, label %if.end, !dbg !2926

if.then32:                                        ; preds = %if.then
  %43 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2927
  %avctx33 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %43, i32 0, i32 3, !dbg !2929
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !2929
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !2927
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i32 0, i32 0)), !dbg !2930
  %46 = load i32, i32* %ret, align 4, !dbg !2931
  store i32 %46, i32* %retval, align 4, !dbg !2932
  br label %return, !dbg !2932

if.end:                                           ; preds = %if.then
  %47 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2933
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %47, i32 0, i32 1, !dbg !2934
  %48 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2935
  %data34 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %48, i32 0, i32 3, !dbg !2936
  %49 = load i8*, i8** %data34, align 8, !dbg !2936
  %50 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2937
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %50, i32 0, i32 4, !dbg !2938
  %51 = load i32, i32* %size, align 8, !dbg !2938
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %49, i32 %51), !dbg !2939
  br label %if.end35, !dbg !2940

if.end35:                                         ; preds = %if.end, %for.end
  %52 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2941
  call void @encode_parse_info(%struct.VC2EncContext* %52, i32 0), !dbg !2942
  %53 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2943
  call void @encode_seq_header(%struct.VC2EncContext* %53), !dbg !2944
  %54 = load i8*, i8** %aux_data.addr, align 8, !dbg !2945
  %tobool36 = icmp ne i8* %54, null, !dbg !2945
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !2947

if.then37:                                        ; preds = %if.end35
  %55 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2948
  call void @encode_parse_info(%struct.VC2EncContext* %55, i32 32), !dbg !2950
  %56 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2951
  %pb38 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %56, i32 0, i32 1, !dbg !2952
  %57 = load i8*, i8** %aux_data.addr, align 8, !dbg !2953
  call void @avpriv_put_string(%struct.PutBitContext* %pb38, i8* %57, i32 1), !dbg !2954
  br label %if.end39, !dbg !2955

if.end39:                                         ; preds = %if.then37, %if.end35
  %58 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2956
  call void @encode_parse_info(%struct.VC2EncContext* %58, i32 232), !dbg !2957
  %59 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2958
  call void @encode_picture_start(%struct.VC2EncContext* %59), !dbg !2959
  %60 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2960
  %call40 = call i32 @encode_slices(%struct.VC2EncContext* %60), !dbg !2961
  %61 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !2962
  call void @encode_parse_info(%struct.VC2EncContext* %61, i32 16), !dbg !2963
  store i32 0, i32* %retval, align 4, !dbg !2964
  br label %return, !dbg !2964

return:                                           ; preds = %if.end39, %if.then32
  %62 = load i32, i32* %retval, align 4, !dbg !2965
  ret i32 %62, !dbg !2965
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #5 !dbg !2966 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !2970, metadata !1752), !dbg !2971
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2972
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !2974
  %1 = load i32, i32* %bit_left, align 4, !dbg !2974
  %cmp = icmp slt i32 %1, 32, !dbg !2975
  br i1 %cmp, label %if.then, label %if.end, !dbg !2976

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2977
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !2978
  %3 = load i32, i32* %bit_left1, align 4, !dbg !2978
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2979
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !2980
  %5 = load i32, i32* %bit_buf, align 8, !dbg !2981
  %shl = shl i32 %5, %3, !dbg !2981
  store i32 %shl, i32* %bit_buf, align 8, !dbg !2981
  br label %if.end, !dbg !2979

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !2982

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2983
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !2985
  %7 = load i32, i32* %bit_left2, align 4, !dbg !2985
  %cmp3 = icmp slt i32 %7, 32, !dbg !2986
  br i1 %cmp3, label %while.body, label %while.end, !dbg !2987

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !2988, !llvm.loop !2990

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2991
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !2995
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !2995
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2996
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !2997
  %11 = load i8*, i8** %buf_end, align 8, !dbg !2997
  %cmp4 = icmp ult i8* %9, %11, !dbg !2998
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !2999

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i32 0, i32 0), i32 108), !dbg !3000
  call void @abort() #8, !dbg !3003
  unreachable, !dbg !3005

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !3006

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3008
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !3009
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !3009
  %shr = lshr i32 %13, 24, !dbg !3010
  %conv = trunc i32 %shr to i8, !dbg !3008
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3011
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !3012
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !3013
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !3013
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !3013
  store i8 %conv, i8* %15, align 1, !dbg !3014
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3015
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !3016
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !3017
  %shl10 = shl i32 %17, 8, !dbg !3017
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !3017
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3018
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !3019
  %19 = load i32, i32* %bit_left11, align 4, !dbg !3020
  %add = add nsw i32 %19, 8, !dbg !3020
  store i32 %add, i32* %bit_left11, align 4, !dbg !3020
  br label %while.cond, !dbg !3021, !llvm.loop !3023

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3024
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !3025
  store i32 32, i32* %bit_left12, align 4, !dbg !3026
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3027
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !3028
  store i32 0, i32* %bit_buf13, align 8, !dbg !3029
  ret void, !dbg !3030
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #5 !dbg !3031 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3034, metadata !1752), !dbg !3035
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3036
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !3037
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !3037
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3038
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !3039
  %3 = load i8*, i8** %buf, align 8, !dbg !3039
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3040
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !3040
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3040
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !3041
  %add = add nsw i64 %mul, 32, !dbg !3042
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3043
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !3044
  %5 = load i32, i32* %bit_left, align 4, !dbg !3044
  %conv = sext i32 %5 to i64, !dbg !3043
  %sub = sub nsw i64 %add, %conv, !dbg !3045
  %conv1 = trunc i64 %sub to i32, !dbg !3046
  ret i32 %conv1, !dbg !3047
}

; Function Attrs: nounwind uwtable
define internal i32 @dwt_plane(%struct.AVCodecContext* %avctx, i8* %arg) #4 !dbg !3048 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %transform_dat = alloca %struct.TransformArgs*, align 8
  %s = alloca %struct.VC2EncContext*, align 8
  %frame_data = alloca i8*, align 8
  %linesize = alloca i64, align 8
  %field = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %t = alloca %struct.VC2TransformContext*, align 8
  %buf = alloca i32*, align 8
  %idx = alloca i32, align 4
  %skip = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %level = alloca i32, align 4
  %offset = alloca i32, align 4
  %pix_stride = alloca i64, align 8
  %pix = alloca i8*, align 8
  %pix28 = alloca i16*, align 8
  %b = alloca %struct.SubBand*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3051, metadata !1752), !dbg !3052
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3053, metadata !1752), !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.TransformArgs** %transform_dat, metadata !3055, metadata !1752), !dbg !3057
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3058
  %1 = bitcast i8* %0 to %struct.TransformArgs*, !dbg !3058
  store %struct.TransformArgs* %1, %struct.TransformArgs** %transform_dat, align 8, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !3059, metadata !1752), !dbg !3060
  %2 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3061
  %ctx = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %2, i32 0, i32 0, !dbg !3062
  %3 = load i8*, i8** %ctx, align 8, !dbg !3062
  %4 = bitcast i8* %3 to %struct.VC2EncContext*, !dbg !3061
  store %struct.VC2EncContext* %4, %struct.VC2EncContext** %s, align 8, !dbg !3060
  call void @llvm.dbg.declare(metadata i8** %frame_data, metadata !3063, metadata !1752), !dbg !3066
  %5 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3067
  %idata = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %5, i32 0, i32 2, !dbg !3068
  %6 = load i8*, i8** %idata, align 8, !dbg !3068
  store i8* %6, i8** %frame_data, align 8, !dbg !3066
  call void @llvm.dbg.declare(metadata i64* %linesize, metadata !3069, metadata !1752), !dbg !3071
  %7 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3072
  %istride = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %7, i32 0, i32 3, !dbg !3073
  %8 = load i64, i64* %istride, align 8, !dbg !3073
  store i64 %8, i64* %linesize, align 8, !dbg !3071
  call void @llvm.dbg.declare(metadata i32* %field, metadata !3074, metadata !1752), !dbg !3075
  %9 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3076
  %field1 = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %9, i32 0, i32 4, !dbg !3077
  %10 = load i32, i32* %field1, align 8, !dbg !3077
  store i32 %10, i32* %field, align 4, !dbg !3075
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !3078, metadata !1752), !dbg !3081
  %11 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3082
  %plane = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %11, i32 0, i32 1, !dbg !3083
  %12 = load %struct.Plane*, %struct.Plane** %plane, align 8, !dbg !3083
  store %struct.Plane* %12, %struct.Plane** %p, align 8, !dbg !3081
  call void @llvm.dbg.declare(metadata %struct.VC2TransformContext** %t, metadata !3084, metadata !1752), !dbg !3086
  %13 = load %struct.TransformArgs*, %struct.TransformArgs** %transform_dat, align 8, !dbg !3087
  %t2 = getelementptr inbounds %struct.TransformArgs, %struct.TransformArgs* %13, i32 0, i32 5, !dbg !3088
  store %struct.VC2TransformContext* %t2, %struct.VC2TransformContext** %t, align 8, !dbg !3086
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !3089, metadata !1752), !dbg !3090
  %14 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3091
  %coef_buf = getelementptr inbounds %struct.Plane, %struct.Plane* %14, i32 0, i32 1, !dbg !3092
  %15 = load i32*, i32** %coef_buf, align 8, !dbg !3092
  store i32* %15, i32** %buf, align 8, !dbg !3090
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !3093, metadata !1752), !dbg !3094
  %16 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3095
  %wavelet_idx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %16, i32 0, i32 29, !dbg !3096
  %17 = load i32, i32* %wavelet_idx, align 8, !dbg !3096
  store i32 %17, i32* %idx, align 4, !dbg !3094
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !3097, metadata !1752), !dbg !3098
  %18 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3099
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %18, i32 0, i32 34, !dbg !3100
  %19 = load i32, i32* %interlaced, align 4, !dbg !3100
  %add = add nsw i32 1, %19, !dbg !3101
  store i32 %add, i32* %skip, align 4, !dbg !3098
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3102, metadata !1752), !dbg !3103
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3104, metadata !1752), !dbg !3105
  call void @llvm.dbg.declare(metadata i32* %level, metadata !3106, metadata !1752), !dbg !3107
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3108, metadata !1752), !dbg !3109
  call void @llvm.dbg.declare(metadata i64* %pix_stride, metadata !3110, metadata !1752), !dbg !3111
  %20 = load i64, i64* %linesize, align 8, !dbg !3112
  %21 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3113
  %bpp = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %21, i32 0, i32 8, !dbg !3114
  %22 = load i32, i32* %bpp, align 4, !dbg !3114
  %sub = sub nsw i32 %22, 1, !dbg !3115
  %sh_prom = zext i32 %sub to i64, !dbg !3116
  %shr = ashr i64 %20, %sh_prom, !dbg !3116
  store i64 %shr, i64* %pix_stride, align 8, !dbg !3111
  %23 = load i32, i32* %field, align 4, !dbg !3117
  %cmp = icmp eq i32 %23, 1, !dbg !3119
  br i1 %cmp, label %if.then, label %if.else, !dbg !3120

if.then:                                          ; preds = %entry
  store i32 0, i32* %offset, align 4, !dbg !3121
  %24 = load i64, i64* %pix_stride, align 8, !dbg !3123
  %shl = shl i64 %24, 1, !dbg !3123
  store i64 %shl, i64* %pix_stride, align 8, !dbg !3123
  br label %if.end7, !dbg !3124

if.else:                                          ; preds = %entry
  %25 = load i32, i32* %field, align 4, !dbg !3125
  %cmp3 = icmp eq i32 %25, 2, !dbg !3128
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !3125

if.then4:                                         ; preds = %if.else
  %26 = load i64, i64* %pix_stride, align 8, !dbg !3129
  %conv = trunc i64 %26 to i32, !dbg !3129
  store i32 %conv, i32* %offset, align 4, !dbg !3131
  %27 = load i64, i64* %pix_stride, align 8, !dbg !3132
  %shl5 = shl i64 %27, 1, !dbg !3132
  store i64 %shl5, i64* %pix_stride, align 8, !dbg !3132
  br label %if.end, !dbg !3133

if.else6:                                         ; preds = %if.else
  store i32 0, i32* %offset, align 4, !dbg !3134
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3136
  %bpp8 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 8, !dbg !3138
  %29 = load i32, i32* %bpp8, align 4, !dbg !3138
  %cmp9 = icmp eq i32 %29, 1, !dbg !3139
  br i1 %cmp9, label %if.then11, label %if.else27, !dbg !3140

if.then11:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %pix, metadata !3141, metadata !1752), !dbg !3143
  %30 = load i8*, i8** %frame_data, align 8, !dbg !3144
  %31 = load i32, i32* %offset, align 4, !dbg !3145
  %idx.ext = sext i32 %31 to i64, !dbg !3146
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !3146
  store i8* %add.ptr, i8** %pix, align 8, !dbg !3143
  store i32 0, i32* %y, align 4, !dbg !3147
  br label %for.cond, !dbg !3149

for.cond:                                         ; preds = %for.inc24, %if.then11
  %32 = load i32, i32* %y, align 4, !dbg !3150
  %33 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3153
  %height = getelementptr inbounds %struct.Plane, %struct.Plane* %33, i32 0, i32 3, !dbg !3154
  %34 = load i32, i32* %height, align 4, !dbg !3154
  %35 = load i32, i32* %skip, align 4, !dbg !3155
  %mul = mul nsw i32 %34, %35, !dbg !3156
  %cmp12 = icmp slt i32 %32, %mul, !dbg !3157
  br i1 %cmp12, label %for.body, label %for.end26, !dbg !3158

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3159
  br label %for.cond14, !dbg !3162

for.cond14:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !3163
  %37 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3166
  %width = getelementptr inbounds %struct.Plane, %struct.Plane* %37, i32 0, i32 2, !dbg !3167
  %38 = load i32, i32* %width, align 8, !dbg !3167
  %cmp15 = icmp slt i32 %36, %38, !dbg !3168
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !3169

for.body17:                                       ; preds = %for.cond14
  %39 = load i32, i32* %x, align 4, !dbg !3170
  %idxprom = sext i32 %39 to i64, !dbg !3172
  %40 = load i8*, i8** %pix, align 8, !dbg !3172
  %arrayidx = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !3172
  %41 = load i8, i8* %arrayidx, align 1, !dbg !3172
  %conv18 = zext i8 %41 to i32, !dbg !3172
  %42 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3173
  %diff_offset = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %42, i32 0, i32 7, !dbg !3174
  %43 = load i32, i32* %diff_offset, align 8, !dbg !3174
  %sub19 = sub nsw i32 %conv18, %43, !dbg !3175
  %44 = load i32, i32* %x, align 4, !dbg !3176
  %idxprom20 = sext i32 %44 to i64, !dbg !3177
  %45 = load i32*, i32** %buf, align 8, !dbg !3177
  %arrayidx21 = getelementptr inbounds i32, i32* %45, i64 %idxprom20, !dbg !3177
  store i32 %sub19, i32* %arrayidx21, align 4, !dbg !3178
  br label %for.inc, !dbg !3179

for.inc:                                          ; preds = %for.body17
  %46 = load i32, i32* %x, align 4, !dbg !3180
  %inc = add nsw i32 %46, 1, !dbg !3180
  store i32 %inc, i32* %x, align 4, !dbg !3180
  br label %for.cond14, !dbg !3182, !llvm.loop !3183

for.end:                                          ; preds = %for.cond14
  %47 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3185
  %coef_stride = getelementptr inbounds %struct.Plane, %struct.Plane* %47, i32 0, i32 6, !dbg !3186
  %48 = load i64, i64* %coef_stride, align 8, !dbg !3186
  %49 = load i32*, i32** %buf, align 8, !dbg !3187
  %add.ptr22 = getelementptr inbounds i32, i32* %49, i64 %48, !dbg !3187
  store i32* %add.ptr22, i32** %buf, align 8, !dbg !3187
  %50 = load i64, i64* %pix_stride, align 8, !dbg !3188
  %51 = load i8*, i8** %pix, align 8, !dbg !3189
  %add.ptr23 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !3189
  store i8* %add.ptr23, i8** %pix, align 8, !dbg !3189
  br label %for.inc24, !dbg !3190

for.inc24:                                        ; preds = %for.end
  %52 = load i32, i32* %skip, align 4, !dbg !3191
  %53 = load i32, i32* %y, align 4, !dbg !3193
  %add25 = add nsw i32 %53, %52, !dbg !3193
  store i32 %add25, i32* %y, align 4, !dbg !3193
  br label %for.cond, !dbg !3194, !llvm.loop !3195

for.end26:                                        ; preds = %for.cond
  br label %if.end58, !dbg !3197

if.else27:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i16** %pix28, metadata !3198, metadata !1752), !dbg !3200
  %54 = load i8*, i8** %frame_data, align 8, !dbg !3201
  %55 = bitcast i8* %54 to i16*, !dbg !3202
  %56 = load i32, i32* %offset, align 4, !dbg !3203
  %idx.ext29 = sext i32 %56 to i64, !dbg !3204
  %add.ptr30 = getelementptr inbounds i16, i16* %55, i64 %idx.ext29, !dbg !3204
  store i16* %add.ptr30, i16** %pix28, align 8, !dbg !3200
  store i32 0, i32* %y, align 4, !dbg !3205
  br label %for.cond31, !dbg !3207

for.cond31:                                       ; preds = %for.inc55, %if.else27
  %57 = load i32, i32* %y, align 4, !dbg !3208
  %58 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3211
  %height32 = getelementptr inbounds %struct.Plane, %struct.Plane* %58, i32 0, i32 3, !dbg !3212
  %59 = load i32, i32* %height32, align 4, !dbg !3212
  %60 = load i32, i32* %skip, align 4, !dbg !3213
  %mul33 = mul nsw i32 %59, %60, !dbg !3214
  %cmp34 = icmp slt i32 %57, %mul33, !dbg !3215
  br i1 %cmp34, label %for.body36, label %for.end57, !dbg !3216

for.body36:                                       ; preds = %for.cond31
  store i32 0, i32* %x, align 4, !dbg !3217
  br label %for.cond37, !dbg !3220

for.cond37:                                       ; preds = %for.inc49, %for.body36
  %61 = load i32, i32* %x, align 4, !dbg !3221
  %62 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3224
  %width38 = getelementptr inbounds %struct.Plane, %struct.Plane* %62, i32 0, i32 2, !dbg !3225
  %63 = load i32, i32* %width38, align 8, !dbg !3225
  %cmp39 = icmp slt i32 %61, %63, !dbg !3226
  br i1 %cmp39, label %for.body41, label %for.end51, !dbg !3227

for.body41:                                       ; preds = %for.cond37
  %64 = load i32, i32* %x, align 4, !dbg !3228
  %idxprom42 = sext i32 %64 to i64, !dbg !3230
  %65 = load i16*, i16** %pix28, align 8, !dbg !3230
  %arrayidx43 = getelementptr inbounds i16, i16* %65, i64 %idxprom42, !dbg !3230
  %66 = load i16, i16* %arrayidx43, align 2, !dbg !3230
  %conv44 = zext i16 %66 to i32, !dbg !3230
  %67 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3231
  %diff_offset45 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %67, i32 0, i32 7, !dbg !3232
  %68 = load i32, i32* %diff_offset45, align 8, !dbg !3232
  %sub46 = sub nsw i32 %conv44, %68, !dbg !3233
  %69 = load i32, i32* %x, align 4, !dbg !3234
  %idxprom47 = sext i32 %69 to i64, !dbg !3235
  %70 = load i32*, i32** %buf, align 8, !dbg !3235
  %arrayidx48 = getelementptr inbounds i32, i32* %70, i64 %idxprom47, !dbg !3235
  store i32 %sub46, i32* %arrayidx48, align 4, !dbg !3236
  br label %for.inc49, !dbg !3237

for.inc49:                                        ; preds = %for.body41
  %71 = load i32, i32* %x, align 4, !dbg !3238
  %inc50 = add nsw i32 %71, 1, !dbg !3238
  store i32 %inc50, i32* %x, align 4, !dbg !3238
  br label %for.cond37, !dbg !3240, !llvm.loop !3241

for.end51:                                        ; preds = %for.cond37
  %72 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3243
  %coef_stride52 = getelementptr inbounds %struct.Plane, %struct.Plane* %72, i32 0, i32 6, !dbg !3244
  %73 = load i64, i64* %coef_stride52, align 8, !dbg !3244
  %74 = load i32*, i32** %buf, align 8, !dbg !3245
  %add.ptr53 = getelementptr inbounds i32, i32* %74, i64 %73, !dbg !3245
  store i32* %add.ptr53, i32** %buf, align 8, !dbg !3245
  %75 = load i64, i64* %pix_stride, align 8, !dbg !3246
  %76 = load i16*, i16** %pix28, align 8, !dbg !3247
  %add.ptr54 = getelementptr inbounds i16, i16* %76, i64 %75, !dbg !3247
  store i16* %add.ptr54, i16** %pix28, align 8, !dbg !3247
  br label %for.inc55, !dbg !3248

for.inc55:                                        ; preds = %for.end51
  %77 = load i32, i32* %skip, align 4, !dbg !3249
  %78 = load i32, i32* %y, align 4, !dbg !3251
  %add56 = add nsw i32 %78, %77, !dbg !3251
  store i32 %add56, i32* %y, align 4, !dbg !3251
  br label %for.cond31, !dbg !3252, !llvm.loop !3253

for.end57:                                        ; preds = %for.cond31
  br label %if.end58

if.end58:                                         ; preds = %for.end57, %for.end26
  %79 = load i32*, i32** %buf, align 8, !dbg !3255
  %80 = bitcast i32* %79 to i8*, !dbg !3256
  %81 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3257
  %coef_stride59 = getelementptr inbounds %struct.Plane, %struct.Plane* %81, i32 0, i32 6, !dbg !3258
  %82 = load i64, i64* %coef_stride59, align 8, !dbg !3258
  %83 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3259
  %dwt_height = getelementptr inbounds %struct.Plane, %struct.Plane* %83, i32 0, i32 5, !dbg !3260
  %84 = load i32, i32* %dwt_height, align 4, !dbg !3260
  %85 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3261
  %height60 = getelementptr inbounds %struct.Plane, %struct.Plane* %85, i32 0, i32 3, !dbg !3262
  %86 = load i32, i32* %height60, align 4, !dbg !3262
  %sub61 = sub nsw i32 %84, %86, !dbg !3263
  %conv62 = sext i32 %sub61 to i64, !dbg !3264
  %mul63 = mul nsw i64 %82, %conv62, !dbg !3265
  %mul64 = mul i64 %mul63, 4, !dbg !3266
  call void @llvm.memset.p0i8.i64(i8* %80, i8 0, i64 %mul64, i32 4, i1 false), !dbg !3256
  %87 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !3267
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %87, i32 0, i32 30, !dbg !3269
  %88 = load i32, i32* %wavelet_depth, align 4, !dbg !3269
  %sub65 = sub nsw i32 %88, 1, !dbg !3270
  store i32 %sub65, i32* %level, align 4, !dbg !3271
  br label %for.cond66, !dbg !3272

for.cond66:                                       ; preds = %for.inc79, %if.end58
  %89 = load i32, i32* %level, align 4, !dbg !3273
  %cmp67 = icmp sge i32 %89, 0, !dbg !3276
  br i1 %cmp67, label %for.body69, label %for.end80, !dbg !3277

for.body69:                                       ; preds = %for.cond66
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !3278, metadata !1752), !dbg !3282
  %90 = load i32, i32* %level, align 4, !dbg !3283
  %idxprom70 = sext i32 %90 to i64, !dbg !3284
  %91 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3284
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %91, i32 0, i32 0, !dbg !3285
  %arrayidx71 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom70, !dbg !3284
  %arrayidx72 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx71, i64 0, i64 0, !dbg !3284
  store %struct.SubBand* %arrayidx72, %struct.SubBand** %b, align 8, !dbg !3282
  %92 = load i32, i32* %idx, align 4, !dbg !3286
  %idxprom73 = sext i32 %92 to i64, !dbg !3287
  %93 = load %struct.VC2TransformContext*, %struct.VC2TransformContext** %t, align 8, !dbg !3287
  %vc2_subband_dwt = getelementptr inbounds %struct.VC2TransformContext, %struct.VC2TransformContext* %93, i32 0, i32 2, !dbg !3288
  %arrayidx74 = getelementptr inbounds [7 x void (%struct.VC2TransformContext*, i32*, i64, i32, i32)*], [7 x void (%struct.VC2TransformContext*, i32*, i64, i32, i32)*]* %vc2_subband_dwt, i64 0, i64 %idxprom73, !dbg !3287
  %94 = load void (%struct.VC2TransformContext*, i32*, i64, i32, i32)*, void (%struct.VC2TransformContext*, i32*, i64, i32, i32)** %arrayidx74, align 8, !dbg !3287
  %95 = load %struct.VC2TransformContext*, %struct.VC2TransformContext** %t, align 8, !dbg !3289
  %96 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3290
  %coef_buf75 = getelementptr inbounds %struct.Plane, %struct.Plane* %96, i32 0, i32 1, !dbg !3291
  %97 = load i32*, i32** %coef_buf75, align 8, !dbg !3291
  %98 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !3292
  %coef_stride76 = getelementptr inbounds %struct.Plane, %struct.Plane* %98, i32 0, i32 6, !dbg !3293
  %99 = load i64, i64* %coef_stride76, align 8, !dbg !3293
  %100 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !3294
  %width77 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %100, i32 0, i32 2, !dbg !3295
  %101 = load i32, i32* %width77, align 8, !dbg !3295
  %102 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !3296
  %height78 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %102, i32 0, i32 3, !dbg !3297
  %103 = load i32, i32* %height78, align 4, !dbg !3297
  call void %94(%struct.VC2TransformContext* %95, i32* %97, i64 %99, i32 %101, i32 %103), !dbg !3287
  br label %for.inc79, !dbg !3298

for.inc79:                                        ; preds = %for.body69
  %104 = load i32, i32* %level, align 4, !dbg !3299
  %dec = add nsw i32 %104, -1, !dbg !3299
  store i32 %dec, i32* %level, align 4, !dbg !3299
  br label %for.cond66, !dbg !3301, !llvm.loop !3302

for.end80:                                        ; preds = %for.cond66
  ret i32 0, !dbg !3304
}

; Function Attrs: nounwind uwtable
define internal i32 @calc_slice_sizes(%struct.VC2EncContext* %s) #4 !dbg !3305 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %slice_x = alloca i32, align 4
  %slice_y = alloca i32, align 4
  %bytes_left = alloca i32, align 4
  %bytes_top = alloca [150 x i32], align 16
  %total_bytes_needed = alloca i64, align 8
  %slice_redist_range = alloca i32, align 4
  %enc_args = alloca %struct.SliceArgs*, align 8
  %top_loc = alloca [150 x %struct.SliceArgs*], align 16
  %args = alloca %struct.SliceArgs*, align 8
  %args28 = alloca %struct.SliceArgs*, align 8
  %distributed = alloca i32, align 4
  %args58 = alloca %struct.SliceArgs*, align 8
  %bits = alloca i32, align 4
  %bytes59 = alloca i32, align 4
  %diff = alloca i32, align 4
  %prev_bytes = alloca i32, align 4
  %new_idx = alloca i32, align 4
  %args114 = alloca %struct.SliceArgs*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !3308, metadata !1752), !dbg !3309
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3310, metadata !1752), !dbg !3311
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3312, metadata !1752), !dbg !3313
  call void @llvm.dbg.declare(metadata i32* %slice_x, metadata !3314, metadata !1752), !dbg !3315
  call void @llvm.dbg.declare(metadata i32* %slice_y, metadata !3316, metadata !1752), !dbg !3317
  call void @llvm.dbg.declare(metadata i32* %bytes_left, metadata !3318, metadata !1752), !dbg !3319
  store i32 0, i32* %bytes_left, align 4, !dbg !3319
  call void @llvm.dbg.declare(metadata [150 x i32]* %bytes_top, metadata !3320, metadata !1752), !dbg !3324
  %0 = bitcast [150 x i32]* %bytes_top to i8*, !dbg !3324
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 600, i32 16, i1 false), !dbg !3324
  call void @llvm.dbg.declare(metadata i64* %total_bytes_needed, metadata !3325, metadata !1752), !dbg !3326
  store i64 0, i64* %total_bytes_needed, align 8, !dbg !3326
  call void @llvm.dbg.declare(metadata i32* %slice_redist_range, metadata !3327, metadata !1752), !dbg !3328
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3329
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 17, !dbg !3330
  %2 = load i32, i32* %num_x, align 4, !dbg !3330
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3331
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 18, !dbg !3332
  %4 = load i32, i32* %num_y, align 8, !dbg !3332
  %mul = mul nsw i32 %2, %4, !dbg !3333
  %cmp = icmp sgt i32 150, %mul, !dbg !3334
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3335

cond.true:                                        ; preds = %entry
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3336
  %num_x1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 17, !dbg !3338
  %6 = load i32, i32* %num_x1, align 4, !dbg !3338
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3339
  %num_y2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 18, !dbg !3340
  %8 = load i32, i32* %num_y2, align 8, !dbg !3340
  %mul3 = mul nsw i32 %6, %8, !dbg !3341
  br label %cond.end, !dbg !3342

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul3, %cond.true ], [ 150, %cond.false ], !dbg !3345
  store i32 %cond, i32* %slice_redist_range, align 4, !dbg !3347
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %enc_args, metadata !3348, metadata !1752), !dbg !3349
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3350
  %slice_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 5, !dbg !3351
  %10 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_args, align 8, !dbg !3351
  store %struct.SliceArgs* %10, %struct.SliceArgs** %enc_args, align 8, !dbg !3349
  call void @llvm.dbg.declare(metadata [150 x %struct.SliceArgs*]* %top_loc, metadata !3352, metadata !1752), !dbg !3354
  %11 = bitcast [150 x %struct.SliceArgs*]* %top_loc to i8*, !dbg !3354
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 1200, i32 16, i1 false), !dbg !3354
  %12 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3355
  call void @init_quant_matrix(%struct.VC2EncContext* %12), !dbg !3356
  store i32 0, i32* %slice_y, align 4, !dbg !3357
  br label %for.cond, !dbg !3359

for.cond:                                         ; preds = %for.inc14, %cond.end
  %13 = load i32, i32* %slice_y, align 4, !dbg !3360
  %14 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3363
  %num_y4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %14, i32 0, i32 18, !dbg !3364
  %15 = load i32, i32* %num_y4, align 8, !dbg !3364
  %cmp5 = icmp slt i32 %13, %15, !dbg !3365
  br i1 %cmp5, label %for.body, label %for.end16, !dbg !3366

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %slice_x, align 4, !dbg !3367
  br label %for.cond6, !dbg !3370

for.cond6:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %slice_x, align 4, !dbg !3371
  %17 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3374
  %num_x7 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %17, i32 0, i32 17, !dbg !3375
  %18 = load i32, i32* %num_x7, align 4, !dbg !3375
  %cmp8 = icmp slt i32 %16, %18, !dbg !3376
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !3377

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %args, metadata !3378, metadata !1752), !dbg !3380
  %19 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3381
  %num_x10 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %19, i32 0, i32 17, !dbg !3382
  %20 = load i32, i32* %num_x10, align 4, !dbg !3382
  %21 = load i32, i32* %slice_y, align 4, !dbg !3383
  %mul11 = mul nsw i32 %20, %21, !dbg !3384
  %22 = load i32, i32* %slice_x, align 4, !dbg !3385
  %add = add nsw i32 %mul11, %22, !dbg !3386
  %idxprom = sext i32 %add to i64, !dbg !3387
  %23 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !3387
  %arrayidx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %23, i64 %idxprom, !dbg !3387
  store %struct.SliceArgs* %arrayidx, %struct.SliceArgs** %args, align 8, !dbg !3380
  %24 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3388
  %25 = bitcast %struct.VC2EncContext* %24 to i8*, !dbg !3388
  %26 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3389
  %ctx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %26, i32 0, i32 2, !dbg !3390
  store i8* %25, i8** %ctx, align 8, !dbg !3391
  %27 = load i32, i32* %slice_x, align 4, !dbg !3392
  %28 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3393
  %x = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %28, i32 0, i32 3, !dbg !3394
  store i32 %27, i32* %x, align 8, !dbg !3395
  %29 = load i32, i32* %slice_y, align 4, !dbg !3396
  %30 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3397
  %y = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %30, i32 0, i32 4, !dbg !3398
  store i32 %29, i32* %y, align 4, !dbg !3399
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3400
  %slice_max_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %31, i32 0, i32 24, !dbg !3401
  %32 = load i32, i32* %slice_max_bytes, align 8, !dbg !3401
  %shl = shl i32 %32, 3, !dbg !3402
  %33 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3403
  %bits_ceil = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %33, i32 0, i32 6, !dbg !3404
  store i32 %shl, i32* %bits_ceil, align 4, !dbg !3405
  %34 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3406
  %slice_min_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %34, i32 0, i32 25, !dbg !3407
  %35 = load i32, i32* %slice_min_bytes, align 4, !dbg !3407
  %shl12 = shl i32 %35, 3, !dbg !3408
  %36 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3409
  %bits_floor = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %36, i32 0, i32 7, !dbg !3410
  store i32 %shl12, i32* %bits_floor, align 8, !dbg !3411
  %37 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !3412
  %cache = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %37, i32 0, i32 1, !dbg !3413
  %arraydecay = getelementptr inbounds [116 x i32], [116 x i32]* %cache, i32 0, i32 0, !dbg !3414
  %38 = bitcast i32* %arraydecay to i8*, !dbg !3414
  %39 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3415
  %q_ceil = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %39, i32 0, i32 26, !dbg !3416
  %40 = load i32, i32* %q_ceil, align 8, !dbg !3416
  %conv = sext i32 %40 to i64, !dbg !3415
  %mul13 = mul i64 %conv, 4, !dbg !3417
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 %mul13, i32 8, i1 false), !dbg !3414
  br label %for.inc, !dbg !3418

for.inc:                                          ; preds = %for.body9
  %41 = load i32, i32* %slice_x, align 4, !dbg !3419
  %inc = add nsw i32 %41, 1, !dbg !3419
  store i32 %inc, i32* %slice_x, align 4, !dbg !3419
  br label %for.cond6, !dbg !3421, !llvm.loop !3422

for.end:                                          ; preds = %for.cond6
  br label %for.inc14, !dbg !3424

for.inc14:                                        ; preds = %for.end
  %42 = load i32, i32* %slice_y, align 4, !dbg !3425
  %inc15 = add nsw i32 %42, 1, !dbg !3425
  store i32 %inc15, i32* %slice_y, align 4, !dbg !3425
  br label %for.cond, !dbg !3427, !llvm.loop !3428

for.end16:                                        ; preds = %for.cond
  %43 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3430
  %avctx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %43, i32 0, i32 3, !dbg !3431
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3431
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 150, !dbg !3432
  %45 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !3432
  %46 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3433
  %avctx17 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %46, i32 0, i32 3, !dbg !3434
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx17, align 8, !dbg !3434
  %48 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !3435
  %49 = bitcast %struct.SliceArgs* %48 to i8*, !dbg !3435
  %50 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3436
  %num_x18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %50, i32 0, i32 17, !dbg !3437
  %51 = load i32, i32* %num_x18, align 4, !dbg !3437
  %52 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3438
  %num_y19 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %52, i32 0, i32 18, !dbg !3439
  %53 = load i32, i32* %num_y19, align 8, !dbg !3439
  %mul20 = mul nsw i32 %51, %53, !dbg !3440
  %call = call i32 %45(%struct.AVCodecContext* %47, i32 (%struct.AVCodecContext*, i8*)* @rate_control, i8* %49, i32* null, i32 %mul20, i32 536), !dbg !3430
  store i32 0, i32* %i, align 4, !dbg !3441
  br label %for.cond21, !dbg !3443

for.cond21:                                       ; preds = %for.inc49, %for.end16
  %54 = load i32, i32* %i, align 4, !dbg !3444
  %55 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3447
  %num_x22 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %55, i32 0, i32 17, !dbg !3448
  %56 = load i32, i32* %num_x22, align 4, !dbg !3448
  %57 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3449
  %num_y23 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %57, i32 0, i32 18, !dbg !3450
  %58 = load i32, i32* %num_y23, align 8, !dbg !3450
  %mul24 = mul nsw i32 %56, %58, !dbg !3451
  %cmp25 = icmp slt i32 %54, %mul24, !dbg !3452
  br i1 %cmp25, label %for.body27, label %for.end51, !dbg !3453

for.body27:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %args28, metadata !3454, metadata !1752), !dbg !3456
  %59 = load i32, i32* %i, align 4, !dbg !3457
  %idxprom29 = sext i32 %59 to i64, !dbg !3458
  %60 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !3458
  %arrayidx30 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %60, i64 %idxprom29, !dbg !3458
  store %struct.SliceArgs* %arrayidx30, %struct.SliceArgs** %args28, align 8, !dbg !3456
  %61 = load %struct.SliceArgs*, %struct.SliceArgs** %args28, align 8, !dbg !3459
  %bytes = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %61, i32 0, i32 8, !dbg !3460
  %62 = load i32, i32* %bytes, align 4, !dbg !3460
  %63 = load i32, i32* %bytes_left, align 4, !dbg !3461
  %add31 = add nsw i32 %63, %62, !dbg !3461
  store i32 %add31, i32* %bytes_left, align 4, !dbg !3461
  store i32 0, i32* %j, align 4, !dbg !3462
  br label %for.cond32, !dbg !3464

for.cond32:                                       ; preds = %for.inc46, %for.body27
  %64 = load i32, i32* %j, align 4, !dbg !3465
  %65 = load i32, i32* %slice_redist_range, align 4, !dbg !3468
  %cmp33 = icmp slt i32 %64, %65, !dbg !3469
  br i1 %cmp33, label %for.body35, label %for.end48, !dbg !3470

for.body35:                                       ; preds = %for.cond32
  %66 = load %struct.SliceArgs*, %struct.SliceArgs** %args28, align 8, !dbg !3471
  %bytes36 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %66, i32 0, i32 8, !dbg !3474
  %67 = load i32, i32* %bytes36, align 4, !dbg !3474
  %68 = load i32, i32* %j, align 4, !dbg !3475
  %idxprom37 = sext i32 %68 to i64, !dbg !3476
  %arrayidx38 = getelementptr inbounds [150 x i32], [150 x i32]* %bytes_top, i64 0, i64 %idxprom37, !dbg !3476
  %69 = load i32, i32* %arrayidx38, align 4, !dbg !3476
  %cmp39 = icmp sgt i32 %67, %69, !dbg !3477
  br i1 %cmp39, label %if.then, label %if.end, !dbg !3478

if.then:                                          ; preds = %for.body35
  %70 = load %struct.SliceArgs*, %struct.SliceArgs** %args28, align 8, !dbg !3479
  %bytes41 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %70, i32 0, i32 8, !dbg !3481
  %71 = load i32, i32* %bytes41, align 4, !dbg !3481
  %72 = load i32, i32* %j, align 4, !dbg !3482
  %idxprom42 = sext i32 %72 to i64, !dbg !3483
  %arrayidx43 = getelementptr inbounds [150 x i32], [150 x i32]* %bytes_top, i64 0, i64 %idxprom42, !dbg !3483
  store i32 %71, i32* %arrayidx43, align 4, !dbg !3484
  %73 = load %struct.SliceArgs*, %struct.SliceArgs** %args28, align 8, !dbg !3485
  %74 = load i32, i32* %j, align 4, !dbg !3486
  %idxprom44 = sext i32 %74 to i64, !dbg !3487
  %arrayidx45 = getelementptr inbounds [150 x %struct.SliceArgs*], [150 x %struct.SliceArgs*]* %top_loc, i64 0, i64 %idxprom44, !dbg !3487
  store %struct.SliceArgs* %73, %struct.SliceArgs** %arrayidx45, align 8, !dbg !3488
  br label %for.end48, !dbg !3489

if.end:                                           ; preds = %for.body35
  br label %for.inc46, !dbg !3490

for.inc46:                                        ; preds = %if.end
  %75 = load i32, i32* %j, align 4, !dbg !3491
  %inc47 = add nsw i32 %75, 1, !dbg !3491
  store i32 %inc47, i32* %j, align 4, !dbg !3491
  br label %for.cond32, !dbg !3493, !llvm.loop !3494

for.end48:                                        ; preds = %if.then, %for.cond32
  br label %for.inc49, !dbg !3496

for.inc49:                                        ; preds = %for.end48
  %76 = load i32, i32* %i, align 4, !dbg !3497
  %inc50 = add nsw i32 %76, 1, !dbg !3497
  store i32 %inc50, i32* %i, align 4, !dbg !3497
  br label %for.cond21, !dbg !3499, !llvm.loop !3500

for.end51:                                        ; preds = %for.cond21
  %77 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3502
  %frame_max_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %77, i32 0, i32 23, !dbg !3503
  %78 = load i32, i32* %frame_max_bytes, align 4, !dbg !3503
  %79 = load i32, i32* %bytes_left, align 4, !dbg !3504
  %sub = sub nsw i32 %78, %79, !dbg !3505
  store i32 %sub, i32* %bytes_left, align 4, !dbg !3506
  br label %while.cond, !dbg !3507

while.cond:                                       ; preds = %if.end106, %for.end51
  %80 = load i32, i32* %bytes_left, align 4, !dbg !3508
  %cmp52 = icmp sgt i32 %80, 0, !dbg !3509
  br i1 %cmp52, label %while.body, label %while.end, !dbg !3510

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %distributed, metadata !3511, metadata !1752), !dbg !3513
  store i32 0, i32* %distributed, align 4, !dbg !3513
  store i32 0, i32* %i, align 4, !dbg !3514
  br label %for.cond54, !dbg !3516

for.cond54:                                       ; preds = %for.inc101, %while.body
  %81 = load i32, i32* %i, align 4, !dbg !3517
  %82 = load i32, i32* %slice_redist_range, align 4, !dbg !3520
  %cmp55 = icmp slt i32 %81, %82, !dbg !3521
  br i1 %cmp55, label %for.body57, label %for.end103, !dbg !3522

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %args58, metadata !3523, metadata !1752), !dbg !3525
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !3526, metadata !1752), !dbg !3527
  call void @llvm.dbg.declare(metadata i32* %bytes59, metadata !3528, metadata !1752), !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !3530, metadata !1752), !dbg !3531
  call void @llvm.dbg.declare(metadata i32* %prev_bytes, metadata !3532, metadata !1752), !dbg !3533
  call void @llvm.dbg.declare(metadata i32* %new_idx, metadata !3534, metadata !1752), !dbg !3535
  %83 = load i32, i32* %bytes_left, align 4, !dbg !3536
  %cmp60 = icmp sle i32 %83, 0, !dbg !3538
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !3539

if.then62:                                        ; preds = %for.body57
  br label %for.end103, !dbg !3540

if.end63:                                         ; preds = %for.body57
  %84 = load i32, i32* %i, align 4, !dbg !3541
  %idxprom64 = sext i32 %84 to i64, !dbg !3543
  %arrayidx65 = getelementptr inbounds [150 x %struct.SliceArgs*], [150 x %struct.SliceArgs*]* %top_loc, i64 0, i64 %idxprom64, !dbg !3543
  %85 = load %struct.SliceArgs*, %struct.SliceArgs** %arrayidx65, align 8, !dbg !3543
  %tobool = icmp ne %struct.SliceArgs* %85, null, !dbg !3543
  br i1 %tobool, label %lor.lhs.false, label %if.then69, !dbg !3544

lor.lhs.false:                                    ; preds = %if.end63
  %86 = load i32, i32* %i, align 4, !dbg !3545
  %idxprom66 = sext i32 %86 to i64, !dbg !3547
  %arrayidx67 = getelementptr inbounds [150 x %struct.SliceArgs*], [150 x %struct.SliceArgs*]* %top_loc, i64 0, i64 %idxprom66, !dbg !3547
  %87 = load %struct.SliceArgs*, %struct.SliceArgs** %arrayidx67, align 8, !dbg !3547
  %quant_idx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %87, i32 0, i32 5, !dbg !3548
  %88 = load i32, i32* %quant_idx, align 8, !dbg !3548
  %tobool68 = icmp ne i32 %88, 0, !dbg !3547
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !3549

if.then69:                                        ; preds = %lor.lhs.false, %if.end63
  br label %for.end103, !dbg !3550

if.end70:                                         ; preds = %lor.lhs.false
  %89 = load i32, i32* %i, align 4, !dbg !3551
  %idxprom71 = sext i32 %89 to i64, !dbg !3552
  %arrayidx72 = getelementptr inbounds [150 x %struct.SliceArgs*], [150 x %struct.SliceArgs*]* %top_loc, i64 0, i64 %idxprom71, !dbg !3552
  %90 = load %struct.SliceArgs*, %struct.SliceArgs** %arrayidx72, align 8, !dbg !3552
  store %struct.SliceArgs* %90, %struct.SliceArgs** %args58, align 8, !dbg !3553
  %91 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3554
  %bytes73 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %91, i32 0, i32 8, !dbg !3555
  %92 = load i32, i32* %bytes73, align 4, !dbg !3555
  store i32 %92, i32* %prev_bytes, align 4, !dbg !3556
  %93 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3557
  %quant_idx74 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %93, i32 0, i32 5, !dbg !3558
  %94 = load i32, i32* %quant_idx74, align 8, !dbg !3558
  %sub75 = sub nsw i32 %94, 1, !dbg !3559
  %cmp76 = icmp sgt i32 %sub75, 0, !dbg !3560
  br i1 %cmp76, label %cond.true78, label %cond.false81, !dbg !3561

cond.true78:                                      ; preds = %if.end70
  %95 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3562
  %quant_idx79 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %95, i32 0, i32 5, !dbg !3564
  %96 = load i32, i32* %quant_idx79, align 8, !dbg !3564
  %sub80 = sub nsw i32 %96, 1, !dbg !3565
  br label %cond.end82, !dbg !3566

cond.false81:                                     ; preds = %if.end70
  br label %cond.end82, !dbg !3567

cond.end82:                                       ; preds = %cond.false81, %cond.true78
  %cond83 = phi i32 [ %sub80, %cond.true78 ], [ 0, %cond.false81 ], !dbg !3569
  store i32 %cond83, i32* %new_idx, align 4, !dbg !3571
  %97 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3572
  %98 = load i32, i32* %new_idx, align 4, !dbg !3573
  %call84 = call i32 @count_hq_slice(%struct.SliceArgs* %97, i32 %98), !dbg !3574
  store i32 %call84, i32* %bits, align 4, !dbg !3575
  %99 = load i32, i32* %bits, align 4, !dbg !3576
  %shr = ashr i32 %99, 3, !dbg !3577
  %100 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3578
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %100, i32 0, i32 20, !dbg !3579
  %101 = load i32, i32* %size_scaler, align 8, !dbg !3579
  %add85 = add nsw i32 %shr, %101, !dbg !3580
  %sub86 = sub nsw i32 %add85, 1, !dbg !3581
  %102 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3582
  %size_scaler87 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %102, i32 0, i32 20, !dbg !3583
  %103 = load i32, i32* %size_scaler87, align 8, !dbg !3583
  %sub88 = sub nsw i32 %103, 1, !dbg !3584
  %neg = xor i32 %sub88, -1, !dbg !3585
  %and = and i32 %sub86, %neg, !dbg !3586
  %add89 = add nsw i32 %and, 4, !dbg !3587
  %104 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3588
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %104, i32 0, i32 19, !dbg !3589
  %105 = load i32, i32* %prefix_bytes, align 4, !dbg !3589
  %add90 = add nsw i32 %add89, %105, !dbg !3590
  store i32 %add90, i32* %bytes59, align 4, !dbg !3591
  %106 = load i32, i32* %bytes59, align 4, !dbg !3592
  %107 = load i32, i32* %prev_bytes, align 4, !dbg !3593
  %sub91 = sub nsw i32 %106, %107, !dbg !3594
  store i32 %sub91, i32* %diff, align 4, !dbg !3595
  %108 = load i32, i32* %bytes_left, align 4, !dbg !3596
  %109 = load i32, i32* %diff, align 4, !dbg !3598
  %sub92 = sub nsw i32 %108, %109, !dbg !3599
  %cmp93 = icmp sgt i32 %sub92, 0, !dbg !3600
  br i1 %cmp93, label %if.then95, label %if.end100, !dbg !3601

if.then95:                                        ; preds = %cond.end82
  %110 = load i32, i32* %new_idx, align 4, !dbg !3602
  %111 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3604
  %quant_idx96 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %111, i32 0, i32 5, !dbg !3605
  store i32 %110, i32* %quant_idx96, align 8, !dbg !3606
  %112 = load i32, i32* %bytes59, align 4, !dbg !3607
  %113 = load %struct.SliceArgs*, %struct.SliceArgs** %args58, align 8, !dbg !3608
  %bytes97 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %113, i32 0, i32 8, !dbg !3609
  store i32 %112, i32* %bytes97, align 4, !dbg !3610
  %114 = load i32, i32* %diff, align 4, !dbg !3611
  %115 = load i32, i32* %bytes_left, align 4, !dbg !3612
  %sub98 = sub nsw i32 %115, %114, !dbg !3612
  store i32 %sub98, i32* %bytes_left, align 4, !dbg !3612
  %116 = load i32, i32* %distributed, align 4, !dbg !3613
  %inc99 = add nsw i32 %116, 1, !dbg !3613
  store i32 %inc99, i32* %distributed, align 4, !dbg !3613
  br label %if.end100, !dbg !3614

if.end100:                                        ; preds = %if.then95, %cond.end82
  br label %for.inc101, !dbg !3615

for.inc101:                                       ; preds = %if.end100
  %117 = load i32, i32* %i, align 4, !dbg !3616
  %inc102 = add nsw i32 %117, 1, !dbg !3616
  store i32 %inc102, i32* %i, align 4, !dbg !3616
  br label %for.cond54, !dbg !3618, !llvm.loop !3619

for.end103:                                       ; preds = %if.then69, %if.then62, %for.cond54
  %118 = load i32, i32* %distributed, align 4, !dbg !3621
  %tobool104 = icmp ne i32 %118, 0, !dbg !3621
  br i1 %tobool104, label %if.end106, label %if.then105, !dbg !3623

if.then105:                                       ; preds = %for.end103
  br label %while.end, !dbg !3624

if.end106:                                        ; preds = %for.end103
  br label %while.cond, !dbg !3625, !llvm.loop !3626

while.end:                                        ; preds = %if.then105, %while.cond
  store i32 0, i32* %i, align 4, !dbg !3627
  br label %for.cond107, !dbg !3629

for.cond107:                                      ; preds = %for.inc123, %while.end
  %119 = load i32, i32* %i, align 4, !dbg !3630
  %120 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3633
  %num_x108 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %120, i32 0, i32 17, !dbg !3634
  %121 = load i32, i32* %num_x108, align 4, !dbg !3634
  %122 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3635
  %num_y109 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %122, i32 0, i32 18, !dbg !3636
  %123 = load i32, i32* %num_y109, align 8, !dbg !3636
  %mul110 = mul nsw i32 %121, %123, !dbg !3637
  %cmp111 = icmp slt i32 %119, %mul110, !dbg !3638
  br i1 %cmp111, label %for.body113, label %for.end125, !dbg !3639

for.body113:                                      ; preds = %for.cond107
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %args114, metadata !3640, metadata !1752), !dbg !3642
  %124 = load i32, i32* %i, align 4, !dbg !3643
  %idxprom115 = sext i32 %124 to i64, !dbg !3644
  %125 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !3644
  %arrayidx116 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %125, i64 %idxprom115, !dbg !3644
  store %struct.SliceArgs* %arrayidx116, %struct.SliceArgs** %args114, align 8, !dbg !3642
  %126 = load %struct.SliceArgs*, %struct.SliceArgs** %args114, align 8, !dbg !3645
  %bytes117 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %126, i32 0, i32 8, !dbg !3646
  %127 = load i32, i32* %bytes117, align 4, !dbg !3646
  %conv118 = sext i32 %127 to i64, !dbg !3645
  %128 = load i64, i64* %total_bytes_needed, align 8, !dbg !3647
  %add119 = add nsw i64 %128, %conv118, !dbg !3647
  store i64 %add119, i64* %total_bytes_needed, align 8, !dbg !3647
  %129 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3648
  %q_avg = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %129, i32 0, i32 27, !dbg !3649
  %130 = load i32, i32* %q_avg, align 4, !dbg !3649
  %131 = load %struct.SliceArgs*, %struct.SliceArgs** %args114, align 8, !dbg !3650
  %quant_idx120 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %131, i32 0, i32 5, !dbg !3651
  %132 = load i32, i32* %quant_idx120, align 8, !dbg !3651
  %add121 = add nsw i32 %130, %132, !dbg !3652
  %div = sdiv i32 %add121, 2, !dbg !3653
  %133 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3654
  %q_avg122 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %133, i32 0, i32 27, !dbg !3655
  store i32 %div, i32* %q_avg122, align 4, !dbg !3656
  br label %for.inc123, !dbg !3657

for.inc123:                                       ; preds = %for.body113
  %134 = load i32, i32* %i, align 4, !dbg !3658
  %inc124 = add nsw i32 %134, 1, !dbg !3658
  store i32 %inc124, i32* %i, align 4, !dbg !3658
  br label %for.cond107, !dbg !3660, !llvm.loop !3661

for.end125:                                       ; preds = %for.cond107
  %135 = load i64, i64* %total_bytes_needed, align 8, !dbg !3663
  %conv126 = trunc i64 %135 to i32, !dbg !3663
  ret i32 %conv126, !dbg !3664
}

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #5 !dbg !3665 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3668, metadata !1752), !dbg !3669
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3670, metadata !1752), !dbg !3671
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !3672, metadata !1752), !dbg !3673
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !3674
  %cmp = icmp slt i32 %0, 0, !dbg !3676
  br i1 %cmp, label %if.then, label %if.end, !dbg !3677

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !3678
  store i8* null, i8** %buffer.addr, align 8, !dbg !3680
  br label %if.end, !dbg !3681

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !3682
  %mul = mul nsw i32 8, %1, !dbg !3683
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3684
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !3685
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !3686
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3687
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3688
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !3689
  store i8* %3, i8** %buf, align 8, !dbg !3690
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3691
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !3692
  %6 = load i8*, i8** %buf1, align 8, !dbg !3692
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !3693
  %idx.ext = sext i32 %7 to i64, !dbg !3694
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !3694
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3695
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !3696
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !3697
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3698
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !3699
  %10 = load i8*, i8** %buf2, align 8, !dbg !3699
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3700
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !3701
  store i8* %10, i8** %buf_ptr, align 8, !dbg !3702
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3703
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !3704
  store i32 32, i32* %bit_left, align 4, !dbg !3705
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3706
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !3707
  store i32 0, i32* %bit_buf, align 8, !dbg !3708
  ret void, !dbg !3709
}

; Function Attrs: nounwind uwtable
define internal void @encode_parse_info(%struct.VC2EncContext* %s, i32 %pcode) #4 !dbg !3710 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3713, metadata !1752), !dbg !3718
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %pcode.addr = alloca i32, align 4
  %cur_pos = alloca i32, align 4
  %dist = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !3720, metadata !1752), !dbg !3721
  store i32 %pcode, i32* %pcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pcode.addr, metadata !3722, metadata !1752), !dbg !3723
  call void @llvm.dbg.declare(metadata i32* %cur_pos, metadata !3724, metadata !1752), !dbg !3725
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !3726, metadata !1752), !dbg !3727
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3728
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !3729
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !3730
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3731
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 1, !dbg !3732
  %call = call i32 @put_bits_count(%struct.PutBitContext* %pb1), !dbg !3733
  %shr = ashr i32 %call, 3, !dbg !3734
  store i32 %shr, i32* %cur_pos, align 4, !dbg !3735
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3736
  %pb2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 1, !dbg !3737
  call void @avpriv_put_string(%struct.PutBitContext* %pb2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 0), !dbg !3738
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3739
  %pb3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 1, !dbg !3740
  %4 = load i32, i32* %pcode.addr, align 4, !dbg !3741
  call void @put_bits(%struct.PutBitContext* %pb3, i32 8, i32 %4), !dbg !3742
  %5 = load i32, i32* %cur_pos, align 4, !dbg !3743
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3744
  %next_parse_offset = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 36, !dbg !3745
  %7 = load i32, i32* %next_parse_offset, align 4, !dbg !3745
  %sub = sub i32 %5, %7, !dbg !3746
  store i32 %sub, i32* %dist, align 4, !dbg !3747
  %8 = load i32, i32* %dist, align 4, !dbg !3748
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3749
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3750
  %shl.i = shl i32 %9, 8, !dbg !3751
  %and.i = and i32 %shl.i, 65280, !dbg !3752
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3753
  %shr.i = lshr i32 %10, 8, !dbg !3754
  %and1.i = and i32 %shr.i, 255, !dbg !3755
  %or.i = or i32 %and.i, %and1.i, !dbg !3756
  %shl2.i = shl i32 %or.i, 16, !dbg !3757
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3758
  %shr3.i = lshr i32 %11, 16, !dbg !3759
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3760
  %and5.i = and i32 %shl4.i, 65280, !dbg !3761
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3762
  %shr6.i = lshr i32 %12, 16, !dbg !3763
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3764
  %and8.i = and i32 %shr7.i, 255, !dbg !3765
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3766
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3767
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3768
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 1, !dbg !3769
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %pb5, i32 0, i32 2, !dbg !3770
  %14 = load i8*, i8** %buf, align 8, !dbg !3770
  %15 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3771
  %next_parse_offset6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %15, i32 0, i32 36, !dbg !3772
  %16 = load i32, i32* %next_parse_offset6, align 4, !dbg !3772
  %idx.ext = zext i32 %16 to i64, !dbg !3773
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !3773
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr, i64 5, !dbg !3774
  %17 = bitcast i8* %add.ptr7 to %union.unaligned_32*, !dbg !3775
  %l = bitcast %union.unaligned_32* %17 to i32*, !dbg !3775
  store i32 %or10.i, i32* %l, align 1, !dbg !3776
  %18 = load i32, i32* %cur_pos, align 4, !dbg !3777
  %19 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3778
  %next_parse_offset8 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %19, i32 0, i32 36, !dbg !3779
  store i32 %18, i32* %next_parse_offset8, align 4, !dbg !3780
  %20 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3781
  %pb9 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %20, i32 0, i32 1, !dbg !3782
  %21 = load i32, i32* %pcode.addr, align 4, !dbg !3783
  %cmp = icmp eq i32 %21, 16, !dbg !3784
  %cond = select i1 %cmp, i32 13, i32 0, !dbg !3783
  call void @put_bits32(%struct.PutBitContext* %pb9, i32 %cond), !dbg !3785
  %22 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3786
  %pb10 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %22, i32 0, i32 1, !dbg !3787
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3788
  %last_parse_code = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 37, !dbg !3789
  %24 = load i32, i32* %last_parse_code, align 8, !dbg !3789
  %cmp11 = icmp eq i32 %24, 16, !dbg !3790
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !3788

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3791

cond.false:                                       ; preds = %entry
  %25 = load i32, i32* %dist, align 4, !dbg !3793
  br label %cond.end, !dbg !3795

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond12 = phi i32 [ 13, %cond.true ], [ %25, %cond.false ], !dbg !3796
  call void @put_bits32(%struct.PutBitContext* %pb10, i32 %cond12), !dbg !3798
  %26 = load i32, i32* %pcode.addr, align 4, !dbg !3799
  %27 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3800
  %last_parse_code13 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %27, i32 0, i32 37, !dbg !3801
  store i32 %26, i32* %last_parse_code13, align 8, !dbg !3802
  ret void, !dbg !3803
}

; Function Attrs: nounwind uwtable
define internal void @encode_seq_header(%struct.VC2EncContext* %s) #4 !dbg !3804 {
entry:
  %pb.addr.i3 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i3, metadata !3807, metadata !1752), !dbg !3811
  %val.addr.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i4, metadata !3813, metadata !1752), !dbg !3814
  %i.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i5, metadata !3815, metadata !1752), !dbg !3816
  %pbits.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i6, metadata !3817, metadata !1752), !dbg !3818
  %bits.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i7, metadata !3819, metadata !1752), !dbg !3820
  %topbit.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i8, metadata !3821, metadata !1752), !dbg !3822
  %maxval.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i9, metadata !3823, metadata !1752), !dbg !3824
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !3825
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !3827
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !3828
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !3829
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !3830
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !3831
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !3832
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !3833, metadata !1752), !dbg !3834
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3835
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !3836
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !3837
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3838
  call void @encode_parse_params(%struct.VC2EncContext* %1), !dbg !3839
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3840
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 1, !dbg !3841
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3842
  %base_vf = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 11, !dbg !3843
  %4 = load i32, i32* %base_vf, align 8, !dbg !3843
  store %struct.PutBitContext* %pb1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !3844
  store i32 %4, i32* %val.addr.i, align 4, !dbg !3844
  store i32 0, i32* %pbits.i, align 4, !dbg !3829
  store i32 0, i32* %bits.i, align 4, !dbg !3830
  store i32 1, i32* %topbit.i, align 4, !dbg !3831
  store i32 1, i32* %maxval.i, align 4, !dbg !3832
  %5 = load i32, i32* %val.addr.i, align 4, !dbg !3845
  %inc.i = add i32 %5, 1, !dbg !3845
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !3845
  %tobool.i = icmp ne i32 %5, 0, !dbg !3845
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !3847

if.then.i:                                        ; preds = %entry
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !3848
  call void @put_bits(%struct.PutBitContext* %6, i32 1, i32 1) #9, !dbg !3850
  br label %put_vc2_ue_uint.exit, !dbg !3851

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !3852

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %7 = load i32, i32* %val.addr.i, align 4, !dbg !3853
  %8 = load i32, i32* %maxval.i, align 4, !dbg !3855
  %cmp.i = icmp ugt i32 %7, %8, !dbg !3856
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !3857

while.body.i:                                     ; preds = %while.cond.i
  %9 = load i32, i32* %topbit.i, align 4, !dbg !3858
  %shl.i = shl i32 %9, 1, !dbg !3858
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !3858
  %10 = load i32, i32* %maxval.i, align 4, !dbg !3860
  %shl1.i = shl i32 %10, 1, !dbg !3860
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !3860
  %11 = load i32, i32* %maxval.i, align 4, !dbg !3861
  %or.i = or i32 %11, 1, !dbg !3861
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !3861
  br label %while.cond.i, !dbg !3862, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !3866
  %or2.i = or i32 %12, 1, !dbg !3867
  %13 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !3868
  %sub.i = sub nsw i32 31, %13, !dbg !3869
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !3870
  store i32 0, i32* %i.i, align 4, !dbg !3871
  br label %for.cond.i, !dbg !3873

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %14 = load i32, i32* %i.i, align 4, !dbg !3874
  %15 = load i32, i32* %bits.i, align 4, !dbg !3877
  %cmp3.i = icmp slt i32 %14, %15, !dbg !3878
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !3879

for.body.i:                                       ; preds = %for.cond.i
  %16 = load i32, i32* %topbit.i, align 4, !dbg !3880
  %shr.i = ashr i32 %16, 1, !dbg !3880
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !3880
  %17 = load i32, i32* %pbits.i, align 4, !dbg !3882
  %shl4.i = shl i32 %17, 2, !dbg !3882
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !3882
  %18 = load i32, i32* %val.addr.i, align 4, !dbg !3883
  %19 = load i32, i32* %topbit.i, align 4, !dbg !3885
  %and.i = and i32 %18, %19, !dbg !3886
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !3886
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !3887

if.then6.i:                                       ; preds = %for.body.i
  %20 = load i32, i32* %pbits.i, align 4, !dbg !3888
  %or7.i = or i32 %20, 1, !dbg !3888
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !3888
  br label %if.end8.i, !dbg !3889

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %21 = load i32, i32* %i.i, align 4, !dbg !3890
  %inc9.i = add nsw i32 %21, 1, !dbg !3890
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !3890
  br label %for.cond.i, !dbg !3892, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %22 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !3895
  %23 = load i32, i32* %bits.i, align 4, !dbg !3896
  %mul.i = mul nsw i32 %23, 2, !dbg !3897
  %add.i = add nsw i32 %mul.i, 1, !dbg !3898
  %24 = load i32, i32* %pbits.i, align 4, !dbg !3899
  %shl10.i = shl i32 %24, 1, !dbg !3900
  %or11.i = or i32 %shl10.i, 1, !dbg !3901
  call void @put_bits(%struct.PutBitContext* %22, i32 %add.i, i32 %or11.i) #9, !dbg !3902
  br label %put_vc2_ue_uint.exit, !dbg !3903

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %25 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3904
  call void @encode_source_params(%struct.VC2EncContext* %25), !dbg !3905
  %26 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3906
  %pb2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %26, i32 0, i32 1, !dbg !3907
  %27 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3908
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %27, i32 0, i32 34, !dbg !3909
  %28 = load i32, i32* %interlaced, align 4, !dbg !3909
  store %struct.PutBitContext* %pb2, %struct.PutBitContext** %pb.addr.i3, align 8, !dbg !3910
  store i32 %28, i32* %val.addr.i4, align 4, !dbg !3910
  store i32 0, i32* %pbits.i6, align 4, !dbg !3818
  store i32 0, i32* %bits.i7, align 4, !dbg !3820
  store i32 1, i32* %topbit.i8, align 4, !dbg !3822
  store i32 1, i32* %maxval.i9, align 4, !dbg !3824
  %29 = load i32, i32* %val.addr.i4, align 4, !dbg !3911
  %inc.i10 = add i32 %29, 1, !dbg !3911
  store i32 %inc.i10, i32* %val.addr.i4, align 4, !dbg !3911
  %tobool.i11 = icmp ne i32 %29, 0, !dbg !3911
  br i1 %tobool.i11, label %if.end.i13, label %if.then.i12, !dbg !3912

if.then.i12:                                      ; preds = %put_vc2_ue_uint.exit
  %30 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i3, align 8, !dbg !3913
  call void @put_bits(%struct.PutBitContext* %30, i32 1, i32 1) #9, !dbg !3914
  br label %put_vc2_ue_uint.exit39, !dbg !3915

if.end.i13:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i15, !dbg !3916

while.cond.i15:                                   ; preds = %while.body.i19, %if.end.i13
  %31 = load i32, i32* %val.addr.i4, align 4, !dbg !3917
  %32 = load i32, i32* %maxval.i9, align 4, !dbg !3918
  %cmp.i14 = icmp ugt i32 %31, %32, !dbg !3919
  br i1 %cmp.i14, label %while.body.i19, label %while.end.i22, !dbg !3920

while.body.i19:                                   ; preds = %while.cond.i15
  %33 = load i32, i32* %topbit.i8, align 4, !dbg !3921
  %shl.i16 = shl i32 %33, 1, !dbg !3921
  store i32 %shl.i16, i32* %topbit.i8, align 4, !dbg !3921
  %34 = load i32, i32* %maxval.i9, align 4, !dbg !3922
  %shl1.i17 = shl i32 %34, 1, !dbg !3922
  store i32 %shl1.i17, i32* %maxval.i9, align 4, !dbg !3922
  %35 = load i32, i32* %maxval.i9, align 4, !dbg !3923
  %or.i18 = or i32 %35, 1, !dbg !3923
  store i32 %or.i18, i32* %maxval.i9, align 4, !dbg !3923
  br label %while.cond.i15, !dbg !3924, !llvm.loop !3864

while.end.i22:                                    ; preds = %while.cond.i15
  %36 = load i32, i32* %topbit.i8, align 4, !dbg !3925
  %or2.i20 = or i32 %36, 1, !dbg !3926
  %37 = call i32 @llvm.ctlz.i32(i32 %or2.i20, i1 true) #9, !dbg !3927
  %sub.i21 = sub nsw i32 31, %37, !dbg !3928
  store i32 %sub.i21, i32* %bits.i7, align 4, !dbg !3929
  store i32 0, i32* %i.i5, align 4, !dbg !3930
  br label %for.cond.i24, !dbg !3931

for.cond.i24:                                     ; preds = %if.end8.i32, %while.end.i22
  %38 = load i32, i32* %i.i5, align 4, !dbg !3932
  %39 = load i32, i32* %bits.i7, align 4, !dbg !3933
  %cmp3.i23 = icmp slt i32 %38, %39, !dbg !3934
  br i1 %cmp3.i23, label %for.body.i29, label %for.end.i38, !dbg !3935

for.body.i29:                                     ; preds = %for.cond.i24
  %40 = load i32, i32* %topbit.i8, align 4, !dbg !3936
  %shr.i25 = ashr i32 %40, 1, !dbg !3936
  store i32 %shr.i25, i32* %topbit.i8, align 4, !dbg !3936
  %41 = load i32, i32* %pbits.i6, align 4, !dbg !3937
  %shl4.i26 = shl i32 %41, 2, !dbg !3937
  store i32 %shl4.i26, i32* %pbits.i6, align 4, !dbg !3937
  %42 = load i32, i32* %val.addr.i4, align 4, !dbg !3938
  %43 = load i32, i32* %topbit.i8, align 4, !dbg !3939
  %and.i27 = and i32 %42, %43, !dbg !3940
  %tobool5.i28 = icmp ne i32 %and.i27, 0, !dbg !3940
  br i1 %tobool5.i28, label %if.then6.i31, label %if.end8.i32, !dbg !3941

if.then6.i31:                                     ; preds = %for.body.i29
  %44 = load i32, i32* %pbits.i6, align 4, !dbg !3942
  %or7.i30 = or i32 %44, 1, !dbg !3942
  store i32 %or7.i30, i32* %pbits.i6, align 4, !dbg !3942
  br label %if.end8.i32, !dbg !3943

if.end8.i32:                                      ; preds = %if.then6.i31, %for.body.i29
  %45 = load i32, i32* %i.i5, align 4, !dbg !3944
  %inc9.i33 = add nsw i32 %45, 1, !dbg !3944
  store i32 %inc9.i33, i32* %i.i5, align 4, !dbg !3944
  br label %for.cond.i24, !dbg !3945, !llvm.loop !3893

for.end.i38:                                      ; preds = %for.cond.i24
  %46 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i3, align 8, !dbg !3946
  %47 = load i32, i32* %bits.i7, align 4, !dbg !3947
  %mul.i34 = mul nsw i32 %47, 2, !dbg !3948
  %add.i35 = add nsw i32 %mul.i34, 1, !dbg !3949
  %48 = load i32, i32* %pbits.i6, align 4, !dbg !3950
  %shl10.i36 = shl i32 %48, 1, !dbg !3951
  %or11.i37 = or i32 %shl10.i36, 1, !dbg !3952
  call void @put_bits(%struct.PutBitContext* %46, i32 %add.i35, i32 %or11.i37) #9, !dbg !3953
  br label %put_vc2_ue_uint.exit39, !dbg !3954

put_vc2_ue_uint.exit39:                           ; preds = %if.then.i12, %for.end.i38
  ret void, !dbg !3955
}

declare void @avpriv_put_string(%struct.PutBitContext*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @encode_picture_start(%struct.VC2EncContext* %s) #4 !dbg !3956 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !3957, metadata !1752), !dbg !3958
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3959
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !3960
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !3961
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3962
  call void @encode_picture_header(%struct.VC2EncContext* %1), !dbg !3963
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3964
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 1, !dbg !3965
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb1), !dbg !3966
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3967
  call void @encode_wavelet_transform(%struct.VC2EncContext* %3), !dbg !3968
  ret void, !dbg !3969
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_slices(%struct.VC2EncContext* %s) #4 !dbg !3970 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %buf = alloca i8*, align 8
  %slice_x = alloca i32, align 4
  %slice_y = alloca i32, align 4
  %skip = alloca i32, align 4
  %enc_args = alloca %struct.SliceArgs*, align 8
  %args = alloca %struct.SliceArgs*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !3971, metadata !1752), !dbg !3972
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3973, metadata !1752), !dbg !3974
  call void @llvm.dbg.declare(metadata i32* %slice_x, metadata !3975, metadata !1752), !dbg !3976
  call void @llvm.dbg.declare(metadata i32* %slice_y, metadata !3977, metadata !1752), !dbg !3978
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !3979, metadata !1752), !dbg !3980
  store i32 0, i32* %skip, align 4, !dbg !3980
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %enc_args, metadata !3981, metadata !1752), !dbg !3982
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3983
  %slice_args = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 5, !dbg !3984
  %1 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_args, align 8, !dbg !3984
  store %struct.SliceArgs* %1, %struct.SliceArgs** %enc_args, align 8, !dbg !3982
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3985
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 1, !dbg !3986
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !3987
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3988
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 1, !dbg !3989
  call void @flush_put_bits(%struct.PutBitContext* %pb1), !dbg !3990
  %4 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !3991
  %pb2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %4, i32 0, i32 1, !dbg !3992
  %call = call i8* @put_bits_ptr(%struct.PutBitContext* %pb2), !dbg !3993
  store i8* %call, i8** %buf, align 8, !dbg !3994
  store i32 0, i32* %slice_y, align 4, !dbg !3995
  br label %for.cond, !dbg !3997

for.cond:                                         ; preds = %for.inc11, %entry
  %5 = load i32, i32* %slice_y, align 4, !dbg !3998
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4001
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 18, !dbg !4002
  %7 = load i32, i32* %num_y, align 8, !dbg !4002
  %cmp = icmp slt i32 %5, %7, !dbg !4003
  br i1 %cmp, label %for.body, label %for.end13, !dbg !4004

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %slice_x, align 4, !dbg !4005
  br label %for.cond3, !dbg !4008

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %slice_x, align 4, !dbg !4009
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4012
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 17, !dbg !4013
  %10 = load i32, i32* %num_x, align 4, !dbg !4013
  %cmp4 = icmp slt i32 %8, %10, !dbg !4014
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !4015

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %args, metadata !4016, metadata !1752), !dbg !4018
  %11 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4019
  %num_x6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %11, i32 0, i32 17, !dbg !4020
  %12 = load i32, i32* %num_x6, align 4, !dbg !4020
  %13 = load i32, i32* %slice_y, align 4, !dbg !4021
  %mul = mul nsw i32 %12, %13, !dbg !4022
  %14 = load i32, i32* %slice_x, align 4, !dbg !4023
  %add = add nsw i32 %mul, %14, !dbg !4024
  %idxprom = sext i32 %add to i64, !dbg !4025
  %15 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !4025
  %arrayidx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %15, i64 %idxprom, !dbg !4025
  store %struct.SliceArgs* %arrayidx, %struct.SliceArgs** %args, align 8, !dbg !4018
  %16 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !4026
  %pb7 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %16, i32 0, i32 0, !dbg !4027
  %17 = load i8*, i8** %buf, align 8, !dbg !4028
  %18 = load i32, i32* %skip, align 4, !dbg !4029
  %idx.ext = sext i32 %18 to i64, !dbg !4030
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !4030
  %19 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !4031
  %bytes = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %19, i32 0, i32 8, !dbg !4032
  %20 = load i32, i32* %bytes, align 4, !dbg !4032
  %21 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4033
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %21, i32 0, i32 19, !dbg !4034
  %22 = load i32, i32* %prefix_bytes, align 4, !dbg !4034
  %add8 = add nsw i32 %20, %22, !dbg !4035
  call void @init_put_bits(%struct.PutBitContext* %pb7, i8* %add.ptr, i32 %add8), !dbg !4036
  %23 = load %struct.SliceArgs*, %struct.SliceArgs** %args, align 8, !dbg !4037
  %bytes9 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %23, i32 0, i32 8, !dbg !4038
  %24 = load i32, i32* %bytes9, align 4, !dbg !4038
  %25 = load i32, i32* %skip, align 4, !dbg !4039
  %add10 = add nsw i32 %25, %24, !dbg !4039
  store i32 %add10, i32* %skip, align 4, !dbg !4039
  br label %for.inc, !dbg !4040

for.inc:                                          ; preds = %for.body5
  %26 = load i32, i32* %slice_x, align 4, !dbg !4041
  %inc = add nsw i32 %26, 1, !dbg !4041
  store i32 %inc, i32* %slice_x, align 4, !dbg !4041
  br label %for.cond3, !dbg !4043, !llvm.loop !4044

for.end:                                          ; preds = %for.cond3
  br label %for.inc11, !dbg !4046

for.inc11:                                        ; preds = %for.end
  %27 = load i32, i32* %slice_y, align 4, !dbg !4047
  %inc12 = add nsw i32 %27, 1, !dbg !4047
  store i32 %inc12, i32* %slice_y, align 4, !dbg !4047
  br label %for.cond, !dbg !4049, !llvm.loop !4050

for.end13:                                        ; preds = %for.cond
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4052
  %avctx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 3, !dbg !4053
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4053
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 150, !dbg !4054
  %30 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !4054
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4055
  %avctx14 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %31, i32 0, i32 3, !dbg !4056
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !4056
  %33 = load %struct.SliceArgs*, %struct.SliceArgs** %enc_args, align 8, !dbg !4057
  %34 = bitcast %struct.SliceArgs* %33 to i8*, !dbg !4057
  %35 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4058
  %num_x15 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %35, i32 0, i32 17, !dbg !4059
  %36 = load i32, i32* %num_x15, align 4, !dbg !4059
  %37 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4060
  %num_y16 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %37, i32 0, i32 18, !dbg !4061
  %38 = load i32, i32* %num_y16, align 8, !dbg !4061
  %mul17 = mul nsw i32 %36, %38, !dbg !4062
  %call18 = call i32 %30(%struct.AVCodecContext* %32, i32 (%struct.AVCodecContext*, i8*)* @encode_hq_slice, i8* %34, i32* null, i32 %mul17, i32 536), !dbg !4052
  %39 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4063
  %pb19 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %39, i32 0, i32 1, !dbg !4064
  %40 = load i32, i32* %skip, align 4, !dbg !4065
  call void @skip_put_bytes(%struct.PutBitContext* %pb19, i32 %40), !dbg !4066
  ret i32 0, !dbg !4067
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal void @init_quant_matrix(%struct.VC2EncContext* %s) #4 !dbg !4068 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %level = alloca i32, align 4
  %orientation = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !4069, metadata !1752), !dbg !4070
  call void @llvm.dbg.declare(metadata i32* %level, metadata !4071, metadata !1752), !dbg !4072
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !4073, metadata !1752), !dbg !4074
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4075
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 30, !dbg !4077
  %1 = load i32, i32* %wavelet_depth, align 4, !dbg !4077
  %cmp = icmp sle i32 %1, 4, !dbg !4078
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4079

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4080
  %quant_matrix = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 35, !dbg !4082
  %3 = load i32, i32* %quant_matrix, align 8, !dbg !4082
  %cmp1 = icmp eq i32 %3, 0, !dbg !4083
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4084

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4085
  %custom_quant_matrix = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %4, i32 0, i32 15, !dbg !4087
  store i32 0, i32* %custom_quant_matrix, align 8, !dbg !4088
  store i32 0, i32* %level, align 4, !dbg !4089
  br label %for.cond, !dbg !4091

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %level, align 4, !dbg !4092
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4095
  %wavelet_depth2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 30, !dbg !4096
  %7 = load i32, i32* %wavelet_depth2, align 4, !dbg !4096
  %cmp3 = icmp slt i32 %5, %7, !dbg !4097
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4098

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %level, align 4, !dbg !4099
  %idxprom = sext i32 %8 to i64, !dbg !4101
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4102
  %wavelet_idx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 29, !dbg !4103
  %10 = load i32, i32* %wavelet_idx, align 8, !dbg !4103
  %idxprom4 = sext i32 %10 to i64, !dbg !4101
  %arrayidx = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom4, !dbg !4101
  %arrayidx5 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx, i64 0, i64 %idxprom, !dbg !4101
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx5, i64 0, i64 0, !dbg !4101
  %11 = load i8, i8* %arrayidx6, align 4, !dbg !4101
  %12 = load i32, i32* %level, align 4, !dbg !4104
  %idxprom7 = sext i32 %12 to i64, !dbg !4105
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4105
  %quant = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 14, !dbg !4106
  %arrayidx8 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant, i64 0, i64 %idxprom7, !dbg !4105
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx8, i64 0, i64 0, !dbg !4105
  store i8 %11, i8* %arrayidx9, align 4, !dbg !4107
  %14 = load i32, i32* %level, align 4, !dbg !4108
  %idxprom10 = sext i32 %14 to i64, !dbg !4109
  %15 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4110
  %wavelet_idx11 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %15, i32 0, i32 29, !dbg !4111
  %16 = load i32, i32* %wavelet_idx11, align 8, !dbg !4111
  %idxprom12 = sext i32 %16 to i64, !dbg !4109
  %arrayidx13 = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom12, !dbg !4109
  %arrayidx14 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx13, i64 0, i64 %idxprom10, !dbg !4109
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx14, i64 0, i64 1, !dbg !4109
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !4109
  %18 = load i32, i32* %level, align 4, !dbg !4112
  %idxprom16 = sext i32 %18 to i64, !dbg !4113
  %19 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4113
  %quant17 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %19, i32 0, i32 14, !dbg !4114
  %arrayidx18 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant17, i64 0, i64 %idxprom16, !dbg !4113
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx18, i64 0, i64 1, !dbg !4113
  store i8 %17, i8* %arrayidx19, align 1, !dbg !4115
  %20 = load i32, i32* %level, align 4, !dbg !4116
  %idxprom20 = sext i32 %20 to i64, !dbg !4117
  %21 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4118
  %wavelet_idx21 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %21, i32 0, i32 29, !dbg !4119
  %22 = load i32, i32* %wavelet_idx21, align 8, !dbg !4119
  %idxprom22 = sext i32 %22 to i64, !dbg !4117
  %arrayidx23 = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom22, !dbg !4117
  %arrayidx24 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx23, i64 0, i64 %idxprom20, !dbg !4117
  %arrayidx25 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx24, i64 0, i64 2, !dbg !4117
  %23 = load i8, i8* %arrayidx25, align 2, !dbg !4117
  %24 = load i32, i32* %level, align 4, !dbg !4120
  %idxprom26 = sext i32 %24 to i64, !dbg !4121
  %25 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4121
  %quant27 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %25, i32 0, i32 14, !dbg !4122
  %arrayidx28 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant27, i64 0, i64 %idxprom26, !dbg !4121
  %arrayidx29 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx28, i64 0, i64 2, !dbg !4121
  store i8 %23, i8* %arrayidx29, align 2, !dbg !4123
  %26 = load i32, i32* %level, align 4, !dbg !4124
  %idxprom30 = sext i32 %26 to i64, !dbg !4125
  %27 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4126
  %wavelet_idx31 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %27, i32 0, i32 29, !dbg !4127
  %28 = load i32, i32* %wavelet_idx31, align 8, !dbg !4127
  %idxprom32 = sext i32 %28 to i64, !dbg !4125
  %arrayidx33 = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom32, !dbg !4125
  %arrayidx34 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !4125
  %arrayidx35 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx34, i64 0, i64 3, !dbg !4125
  %29 = load i8, i8* %arrayidx35, align 1, !dbg !4125
  %30 = load i32, i32* %level, align 4, !dbg !4128
  %idxprom36 = sext i32 %30 to i64, !dbg !4129
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4129
  %quant37 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %31, i32 0, i32 14, !dbg !4130
  %arrayidx38 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant37, i64 0, i64 %idxprom36, !dbg !4129
  %arrayidx39 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx38, i64 0, i64 3, !dbg !4129
  store i8 %29, i8* %arrayidx39, align 1, !dbg !4131
  br label %for.inc, !dbg !4132

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %level, align 4, !dbg !4133
  %inc = add nsw i32 %32, 1, !dbg !4133
  store i32 %inc, i32* %level, align 4, !dbg !4133
  br label %for.cond, !dbg !4135, !llvm.loop !4136

for.end:                                          ; preds = %for.cond
  br label %if.end131, !dbg !4138

if.end:                                           ; preds = %land.lhs.true, %entry
  %33 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4139
  %custom_quant_matrix40 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %33, i32 0, i32 15, !dbg !4140
  store i32 1, i32* %custom_quant_matrix40, align 8, !dbg !4141
  %34 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4142
  %quant_matrix41 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %34, i32 0, i32 35, !dbg !4144
  %35 = load i32, i32* %quant_matrix41, align 8, !dbg !4144
  %cmp42 = icmp eq i32 %35, 0, !dbg !4145
  br i1 %cmp42, label %if.then43, label %if.else81, !dbg !4146

if.then43:                                        ; preds = %if.end
  store i32 0, i32* %level, align 4, !dbg !4147
  br label %for.cond44, !dbg !4150

for.cond44:                                       ; preds = %for.inc78, %if.then43
  %36 = load i32, i32* %level, align 4, !dbg !4151
  %37 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4154
  %wavelet_depth45 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %37, i32 0, i32 30, !dbg !4155
  %38 = load i32, i32* %wavelet_depth45, align 4, !dbg !4155
  %cmp46 = icmp slt i32 %36, %38, !dbg !4156
  br i1 %cmp46, label %for.body47, label %for.end80, !dbg !4157

for.body47:                                       ; preds = %for.cond44
  store i32 0, i32* %orientation, align 4, !dbg !4158
  br label %for.cond48, !dbg !4161

for.cond48:                                       ; preds = %for.inc75, %for.body47
  %39 = load i32, i32* %orientation, align 4, !dbg !4162
  %cmp49 = icmp slt i32 %39, 4, !dbg !4165
  br i1 %cmp49, label %for.body50, label %for.end77, !dbg !4166

for.body50:                                       ; preds = %for.cond48
  %40 = load i32, i32* %level, align 4, !dbg !4167
  %cmp51 = icmp sle i32 %40, 3, !dbg !4170
  br i1 %cmp51, label %if.then52, label %if.else, !dbg !4171

if.then52:                                        ; preds = %for.body50
  %41 = load i32, i32* %orientation, align 4, !dbg !4172
  %idxprom53 = sext i32 %41 to i64, !dbg !4173
  %42 = load i32, i32* %level, align 4, !dbg !4174
  %idxprom54 = sext i32 %42 to i64, !dbg !4173
  %43 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4175
  %wavelet_idx55 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %43, i32 0, i32 29, !dbg !4176
  %44 = load i32, i32* %wavelet_idx55, align 8, !dbg !4176
  %idxprom56 = sext i32 %44 to i64, !dbg !4173
  %arrayidx57 = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom56, !dbg !4173
  %arrayidx58 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx57, i64 0, i64 %idxprom54, !dbg !4173
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx58, i64 0, i64 %idxprom53, !dbg !4173
  %45 = load i8, i8* %arrayidx59, align 1, !dbg !4173
  %46 = load i32, i32* %orientation, align 4, !dbg !4177
  %idxprom60 = sext i32 %46 to i64, !dbg !4178
  %47 = load i32, i32* %level, align 4, !dbg !4179
  %idxprom61 = sext i32 %47 to i64, !dbg !4178
  %48 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4178
  %quant62 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %48, i32 0, i32 14, !dbg !4180
  %arrayidx63 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant62, i64 0, i64 %idxprom61, !dbg !4178
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx63, i64 0, i64 %idxprom60, !dbg !4178
  store i8 %45, i8* %arrayidx64, align 1, !dbg !4181
  br label %if.end74, !dbg !4178

if.else:                                          ; preds = %for.body50
  %49 = load i32, i32* %orientation, align 4, !dbg !4182
  %idxprom65 = sext i32 %49 to i64, !dbg !4183
  %50 = load i32, i32* %level, align 4, !dbg !4184
  %idxprom66 = sext i32 %50 to i64, !dbg !4183
  %arrayidx67 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @vc2_qm_col_tab, i64 0, i64 %idxprom66, !dbg !4183
  %arrayidx68 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !4183
  %51 = load i8, i8* %arrayidx68, align 1, !dbg !4183
  %52 = load i32, i32* %orientation, align 4, !dbg !4185
  %idxprom69 = sext i32 %52 to i64, !dbg !4186
  %53 = load i32, i32* %level, align 4, !dbg !4187
  %idxprom70 = sext i32 %53 to i64, !dbg !4186
  %54 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4186
  %quant71 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %54, i32 0, i32 14, !dbg !4188
  %arrayidx72 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant71, i64 0, i64 %idxprom70, !dbg !4186
  %arrayidx73 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !4186
  store i8 %51, i8* %arrayidx73, align 1, !dbg !4189
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then52
  br label %for.inc75, !dbg !4190

for.inc75:                                        ; preds = %if.end74
  %55 = load i32, i32* %orientation, align 4, !dbg !4191
  %inc76 = add nsw i32 %55, 1, !dbg !4191
  store i32 %inc76, i32* %orientation, align 4, !dbg !4191
  br label %for.cond48, !dbg !4193, !llvm.loop !4194

for.end77:                                        ; preds = %for.cond48
  br label %for.inc78, !dbg !4196

for.inc78:                                        ; preds = %for.end77
  %56 = load i32, i32* %level, align 4, !dbg !4197
  %inc79 = add nsw i32 %56, 1, !dbg !4197
  store i32 %inc79, i32* %level, align 4, !dbg !4197
  br label %for.cond44, !dbg !4199, !llvm.loop !4200

for.end80:                                        ; preds = %for.cond44
  br label %if.end131, !dbg !4202

if.else81:                                        ; preds = %if.end
  %57 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4203
  %quant_matrix82 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %57, i32 0, i32 35, !dbg !4206
  %58 = load i32, i32* %quant_matrix82, align 8, !dbg !4206
  %cmp83 = icmp eq i32 %58, 1, !dbg !4207
  br i1 %cmp83, label %if.then84, label %if.else107, !dbg !4203

if.then84:                                        ; preds = %if.else81
  store i32 0, i32* %level, align 4, !dbg !4208
  br label %for.cond85, !dbg !4211

for.cond85:                                       ; preds = %for.inc104, %if.then84
  %59 = load i32, i32* %level, align 4, !dbg !4212
  %60 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4215
  %wavelet_depth86 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %60, i32 0, i32 30, !dbg !4216
  %61 = load i32, i32* %wavelet_depth86, align 4, !dbg !4216
  %cmp87 = icmp slt i32 %59, %61, !dbg !4217
  br i1 %cmp87, label %for.body88, label %for.end106, !dbg !4218

for.body88:                                       ; preds = %for.cond85
  store i32 0, i32* %orientation, align 4, !dbg !4219
  br label %for.cond89, !dbg !4222

for.cond89:                                       ; preds = %for.inc101, %for.body88
  %62 = load i32, i32* %orientation, align 4, !dbg !4223
  %cmp90 = icmp slt i32 %62, 4, !dbg !4226
  br i1 %cmp90, label %for.body91, label %for.end103, !dbg !4227

for.body91:                                       ; preds = %for.cond89
  %63 = load i32, i32* %orientation, align 4, !dbg !4228
  %idxprom92 = sext i32 %63 to i64, !dbg !4230
  %64 = load i32, i32* %level, align 4, !dbg !4231
  %idxprom93 = sext i32 %64 to i64, !dbg !4230
  %arrayidx94 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @vc2_qm_col_tab, i64 0, i64 %idxprom93, !dbg !4230
  %arrayidx95 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx94, i64 0, i64 %idxprom92, !dbg !4230
  %65 = load i8, i8* %arrayidx95, align 1, !dbg !4230
  %66 = load i32, i32* %orientation, align 4, !dbg !4232
  %idxprom96 = sext i32 %66 to i64, !dbg !4233
  %67 = load i32, i32* %level, align 4, !dbg !4234
  %idxprom97 = sext i32 %67 to i64, !dbg !4233
  %68 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4233
  %quant98 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %68, i32 0, i32 14, !dbg !4235
  %arrayidx99 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant98, i64 0, i64 %idxprom97, !dbg !4233
  %arrayidx100 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx99, i64 0, i64 %idxprom96, !dbg !4233
  store i8 %65, i8* %arrayidx100, align 1, !dbg !4236
  br label %for.inc101, !dbg !4237

for.inc101:                                       ; preds = %for.body91
  %69 = load i32, i32* %orientation, align 4, !dbg !4238
  %inc102 = add nsw i32 %69, 1, !dbg !4238
  store i32 %inc102, i32* %orientation, align 4, !dbg !4238
  br label %for.cond89, !dbg !4240, !llvm.loop !4241

for.end103:                                       ; preds = %for.cond89
  br label %for.inc104, !dbg !4243

for.inc104:                                       ; preds = %for.end103
  %70 = load i32, i32* %level, align 4, !dbg !4244
  %inc105 = add nsw i32 %70, 1, !dbg !4244
  store i32 %inc105, i32* %level, align 4, !dbg !4244
  br label %for.cond85, !dbg !4246, !llvm.loop !4247

for.end106:                                       ; preds = %for.cond85
  br label %if.end130, !dbg !4249

if.else107:                                       ; preds = %if.else81
  store i32 0, i32* %level, align 4, !dbg !4250
  br label %for.cond108, !dbg !4253

for.cond108:                                      ; preds = %for.inc127, %if.else107
  %71 = load i32, i32* %level, align 4, !dbg !4254
  %72 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4257
  %wavelet_depth109 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %72, i32 0, i32 30, !dbg !4258
  %73 = load i32, i32* %wavelet_depth109, align 4, !dbg !4258
  %cmp110 = icmp slt i32 %71, %73, !dbg !4259
  br i1 %cmp110, label %for.body111, label %for.end129, !dbg !4260

for.body111:                                      ; preds = %for.cond108
  store i32 0, i32* %orientation, align 4, !dbg !4261
  br label %for.cond112, !dbg !4264

for.cond112:                                      ; preds = %for.inc124, %for.body111
  %74 = load i32, i32* %orientation, align 4, !dbg !4265
  %cmp113 = icmp slt i32 %74, 4, !dbg !4268
  br i1 %cmp113, label %for.body114, label %for.end126, !dbg !4269

for.body114:                                      ; preds = %for.cond112
  %75 = load i32, i32* %orientation, align 4, !dbg !4270
  %idxprom115 = sext i32 %75 to i64, !dbg !4272
  %76 = load i32, i32* %level, align 4, !dbg !4273
  %idxprom116 = sext i32 %76 to i64, !dbg !4272
  %arrayidx117 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @vc2_qm_flat_tab, i64 0, i64 %idxprom116, !dbg !4272
  %arrayidx118 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx117, i64 0, i64 %idxprom115, !dbg !4272
  %77 = load i8, i8* %arrayidx118, align 1, !dbg !4272
  %78 = load i32, i32* %orientation, align 4, !dbg !4274
  %idxprom119 = sext i32 %78 to i64, !dbg !4275
  %79 = load i32, i32* %level, align 4, !dbg !4276
  %idxprom120 = sext i32 %79 to i64, !dbg !4275
  %80 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !4275
  %quant121 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %80, i32 0, i32 14, !dbg !4277
  %arrayidx122 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant121, i64 0, i64 %idxprom120, !dbg !4275
  %arrayidx123 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx122, i64 0, i64 %idxprom119, !dbg !4275
  store i8 %77, i8* %arrayidx123, align 1, !dbg !4278
  br label %for.inc124, !dbg !4279

for.inc124:                                       ; preds = %for.body114
  %81 = load i32, i32* %orientation, align 4, !dbg !4280
  %inc125 = add nsw i32 %81, 1, !dbg !4280
  store i32 %inc125, i32* %orientation, align 4, !dbg !4280
  br label %for.cond112, !dbg !4282, !llvm.loop !4283

for.end126:                                       ; preds = %for.cond112
  br label %for.inc127, !dbg !4285

for.inc127:                                       ; preds = %for.end126
  %82 = load i32, i32* %level, align 4, !dbg !4286
  %inc128 = add nsw i32 %82, 1, !dbg !4286
  store i32 %inc128, i32* %level, align 4, !dbg !4286
  br label %for.cond108, !dbg !4288, !llvm.loop !4289

for.end129:                                       ; preds = %for.cond108
  br label %if.end130

if.end130:                                        ; preds = %for.end129, %for.end106
  br label %if.end131

if.end131:                                        ; preds = %for.end, %if.end130, %for.end80
  ret void, !dbg !4291
}

; Function Attrs: nounwind uwtable
define internal i32 @rate_control(%struct.AVCodecContext* %avctx, i8* %arg) #4 !dbg !4292 {
entry:
  %retval.i48 = alloca i32, align 4
  %a.addr.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i49, metadata !4293, metadata !1752), !dbg !4298
  %amin.addr.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i50, metadata !4301, metadata !1752), !dbg !4302
  %amax.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i51, metadata !4303, metadata !1752), !dbg !4304
  %retval.i37 = alloca i32, align 4
  %a.addr.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i38, metadata !4293, metadata !1752), !dbg !4305
  %amin.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i39, metadata !4301, metadata !1752), !dbg !4307
  %amax.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i40, metadata !4303, metadata !1752), !dbg !4308
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4293, metadata !1752), !dbg !4309
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4301, metadata !1752), !dbg !4311
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4303, metadata !1752), !dbg !4312
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %slice_dat = alloca %struct.SliceArgs*, align 8
  %s = alloca %struct.VC2EncContext*, align 8
  %top = alloca i32, align 4
  %bottom = alloca i32, align 4
  %quant_buf = alloca [2 x i32], align 4
  %quant = alloca i32, align 4
  %step = alloca i32, align 4
  %bits_last = alloca i32, align 4
  %bits = alloca i32, align 4
  %signed_step = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4313, metadata !1752), !dbg !4314
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4315, metadata !1752), !dbg !4316
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %slice_dat, metadata !4317, metadata !1752), !dbg !4318
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4319
  %1 = bitcast i8* %0 to %struct.SliceArgs*, !dbg !4319
  store %struct.SliceArgs* %1, %struct.SliceArgs** %slice_dat, align 8, !dbg !4318
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !4320, metadata !1752), !dbg !4321
  %2 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4322
  %ctx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %2, i32 0, i32 2, !dbg !4323
  %3 = load i8*, i8** %ctx, align 8, !dbg !4323
  %4 = bitcast i8* %3 to %struct.VC2EncContext*, !dbg !4322
  store %struct.VC2EncContext* %4, %struct.VC2EncContext** %s, align 8, !dbg !4321
  call void @llvm.dbg.declare(metadata i32* %top, metadata !4324, metadata !1752), !dbg !4325
  %5 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4326
  %bits_ceil = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %5, i32 0, i32 6, !dbg !4327
  %6 = load i32, i32* %bits_ceil, align 4, !dbg !4327
  store i32 %6, i32* %top, align 4, !dbg !4325
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !4328, metadata !1752), !dbg !4329
  %7 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4330
  %bits_floor = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %7, i32 0, i32 7, !dbg !4331
  %8 = load i32, i32* %bits_floor, align 8, !dbg !4331
  store i32 %8, i32* %bottom, align 4, !dbg !4329
  call void @llvm.dbg.declare(metadata [2 x i32]* %quant_buf, metadata !4332, metadata !1752), !dbg !4334
  %9 = bitcast [2 x i32]* %quant_buf to i8*, !dbg !4334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast ([2 x i32]* @rate_control.quant_buf to i8*), i64 8, i32 4, i1 false), !dbg !4334
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !4335, metadata !1752), !dbg !4336
  %10 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4337
  %quant_idx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %10, i32 0, i32 5, !dbg !4338
  %11 = load i32, i32* %quant_idx, align 8, !dbg !4338
  store i32 %11, i32* %quant, align 4, !dbg !4336
  call void @llvm.dbg.declare(metadata i32* %step, metadata !4339, metadata !1752), !dbg !4340
  store i32 1, i32* %step, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %bits_last, metadata !4341, metadata !1752), !dbg !4342
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4343, metadata !1752), !dbg !4344
  %12 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4345
  %13 = load i32, i32* %quant, align 4, !dbg !4346
  %call = call i32 @count_hq_slice(%struct.SliceArgs* %12, i32 %13), !dbg !4347
  store i32 %call, i32* %bits, align 4, !dbg !4344
  br label %while.cond, !dbg !4348

while.cond:                                       ; preds = %av_clip_c.exit58, %entry
  %14 = load i32, i32* %bits, align 4, !dbg !4349
  %15 = load i32, i32* %top, align 4, !dbg !4351
  %cmp = icmp sgt i32 %14, %15, !dbg !4352
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4353

lor.rhs:                                          ; preds = %while.cond
  %16 = load i32, i32* %bits, align 4, !dbg !4354
  %17 = load i32, i32* %bottom, align 4, !dbg !4356
  %cmp1 = icmp slt i32 %16, %17, !dbg !4357
  br label %lor.end, !dbg !4358

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %18 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %18, label %while.body, label %while.end, !dbg !4359

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %signed_step, metadata !4361, metadata !1752), !dbg !4362
  %19 = load i32, i32* %bits, align 4, !dbg !4363
  %20 = load i32, i32* %top, align 4, !dbg !4364
  %cmp2 = icmp sgt i32 %19, %20, !dbg !4365
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !4363

cond.true:                                        ; preds = %while.body
  %21 = load i32, i32* %step, align 4, !dbg !4366
  br label %cond.end, !dbg !4368

cond.false:                                       ; preds = %while.body
  %22 = load i32, i32* %step, align 4, !dbg !4369
  %sub = sub nsw i32 0, %22, !dbg !4371
  br label %cond.end, !dbg !4372

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %sub, %cond.false ], !dbg !4373
  store i32 %cond, i32* %signed_step, align 4, !dbg !4375
  %23 = load i32, i32* %quant, align 4, !dbg !4376
  %24 = load i32, i32* %signed_step, align 4, !dbg !4377
  %add = add nsw i32 %23, %24, !dbg !4378
  %25 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4379
  %q_ceil = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %25, i32 0, i32 26, !dbg !4380
  %26 = load i32, i32* %q_ceil, align 8, !dbg !4380
  %sub3 = sub nsw i32 %26, 1, !dbg !4381
  store i32 %add, i32* %a.addr.i, align 4, !dbg !4382
  store i32 0, i32* %amin.addr.i, align 4, !dbg !4382
  store i32 %sub3, i32* %amax.addr.i, align 4, !dbg !4382
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !4383
  %28 = load i32, i32* %amin.addr.i, align 4, !dbg !4385
  %cmp.i = icmp slt i32 %27, %28, !dbg !4386
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4387

if.then.i:                                        ; preds = %cond.end
  %29 = load i32, i32* %amin.addr.i, align 4, !dbg !4388
  store i32 %29, i32* %retval.i, align 4, !dbg !4390
  br label %av_clip_c.exit, !dbg !4390

if.else.i:                                        ; preds = %cond.end
  %30 = load i32, i32* %a.addr.i, align 4, !dbg !4391
  %31 = load i32, i32* %amax.addr.i, align 4, !dbg !4393
  %cmp1.i = icmp sgt i32 %30, %31, !dbg !4394
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4395

if.then2.i:                                       ; preds = %if.else.i
  %32 = load i32, i32* %amax.addr.i, align 4, !dbg !4396
  store i32 %32, i32* %retval.i, align 4, !dbg !4398
  br label %av_clip_c.exit, !dbg !4398

if.else3.i:                                       ; preds = %if.else.i
  %33 = load i32, i32* %a.addr.i, align 4, !dbg !4399
  store i32 %33, i32* %retval.i, align 4, !dbg !4400
  br label %av_clip_c.exit, !dbg !4400

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %34 = load i32, i32* %retval.i, align 4, !dbg !4401
  store i32 %34, i32* %quant, align 4, !dbg !4402
  %35 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4403
  %36 = load i32, i32* %quant, align 4, !dbg !4404
  %call5 = call i32 @count_hq_slice(%struct.SliceArgs* %35, i32 %36), !dbg !4405
  store i32 %call5, i32* %bits, align 4, !dbg !4406
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 1, !dbg !4407
  %37 = load i32, i32* %arrayidx, align 4, !dbg !4407
  %38 = load i32, i32* %quant, align 4, !dbg !4409
  %cmp6 = icmp eq i32 %37, %38, !dbg !4410
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4411

if.then:                                          ; preds = %av_clip_c.exit
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 0, !dbg !4412
  %39 = load i32, i32* %arrayidx7, align 4, !dbg !4412
  %40 = load i32, i32* %quant, align 4, !dbg !4414
  %cmp8 = icmp sgt i32 %39, %40, !dbg !4415
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !4416

cond.true9:                                       ; preds = %if.then
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 0, !dbg !4417
  %41 = load i32, i32* %arrayidx10, align 4, !dbg !4417
  br label %cond.end12, !dbg !4419

cond.false11:                                     ; preds = %if.then
  %42 = load i32, i32* %quant, align 4, !dbg !4420
  br label %cond.end12, !dbg !4422

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi i32 [ %41, %cond.true9 ], [ %42, %cond.false11 ], !dbg !4423
  store i32 %cond13, i32* %quant, align 4, !dbg !4425
  %43 = load i32, i32* %quant, align 4, !dbg !4426
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 0, !dbg !4427
  %44 = load i32, i32* %arrayidx14, align 4, !dbg !4427
  %cmp15 = icmp eq i32 %43, %44, !dbg !4428
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !4426

cond.true16:                                      ; preds = %cond.end12
  %45 = load i32, i32* %bits_last, align 4, !dbg !4429
  br label %cond.end18, !dbg !4430

cond.false17:                                     ; preds = %cond.end12
  %46 = load i32, i32* %bits, align 4, !dbg !4431
  br label %cond.end18, !dbg !4432

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ %45, %cond.true16 ], [ %46, %cond.false17 ], !dbg !4433
  store i32 %cond19, i32* %bits, align 4, !dbg !4434
  br label %while.end, !dbg !4435

if.end:                                           ; preds = %av_clip_c.exit
  %47 = load i32, i32* %step, align 4, !dbg !4436
  %div = sdiv i32 %47, 2, !dbg !4437
  %48 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4438
  %q_ceil20 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %48, i32 0, i32 26, !dbg !4439
  %49 = load i32, i32* %q_ceil20, align 8, !dbg !4439
  %sub21 = sub nsw i32 %49, 1, !dbg !4440
  %div22 = sdiv i32 %sub21, 2, !dbg !4441
  store i32 %div, i32* %a.addr.i49, align 4, !dbg !4442
  store i32 1, i32* %amin.addr.i50, align 4, !dbg !4442
  store i32 %div22, i32* %amax.addr.i51, align 4, !dbg !4442
  %50 = load i32, i32* %a.addr.i49, align 4, !dbg !4443
  %51 = load i32, i32* %amin.addr.i50, align 4, !dbg !4444
  %cmp.i52 = icmp slt i32 %50, %51, !dbg !4445
  br i1 %cmp.i52, label %if.then.i53, label %if.else.i55, !dbg !4446

if.then.i53:                                      ; preds = %if.end
  %52 = load i32, i32* %amin.addr.i50, align 4, !dbg !4447
  store i32 %52, i32* %retval.i48, align 4, !dbg !4448
  br label %av_clip_c.exit58, !dbg !4448

if.else.i55:                                      ; preds = %if.end
  %53 = load i32, i32* %a.addr.i49, align 4, !dbg !4449
  %54 = load i32, i32* %amax.addr.i51, align 4, !dbg !4450
  %cmp1.i54 = icmp sgt i32 %53, %54, !dbg !4451
  br i1 %cmp1.i54, label %if.then2.i56, label %if.else3.i57, !dbg !4452

if.then2.i56:                                     ; preds = %if.else.i55
  %55 = load i32, i32* %amax.addr.i51, align 4, !dbg !4453
  store i32 %55, i32* %retval.i48, align 4, !dbg !4454
  br label %av_clip_c.exit58, !dbg !4454

if.else3.i57:                                     ; preds = %if.else.i55
  %56 = load i32, i32* %a.addr.i49, align 4, !dbg !4455
  store i32 %56, i32* %retval.i48, align 4, !dbg !4456
  br label %av_clip_c.exit58, !dbg !4456

av_clip_c.exit58:                                 ; preds = %if.then.i53, %if.then2.i56, %if.else3.i57
  %57 = load i32, i32* %retval.i48, align 4, !dbg !4457
  store i32 %57, i32* %step, align 4, !dbg !4458
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 0, !dbg !4459
  %58 = load i32, i32* %arrayidx24, align 4, !dbg !4459
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 1, !dbg !4460
  store i32 %58, i32* %arrayidx25, align 4, !dbg !4461
  %59 = load i32, i32* %quant, align 4, !dbg !4462
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %quant_buf, i64 0, i64 0, !dbg !4463
  store i32 %59, i32* %arrayidx26, align 4, !dbg !4464
  %60 = load i32, i32* %bits, align 4, !dbg !4465
  store i32 %60, i32* %bits_last, align 4, !dbg !4466
  br label %while.cond, !dbg !4467, !llvm.loop !4469

while.end:                                        ; preds = %cond.end18, %lor.end
  %61 = load i32, i32* %quant, align 4, !dbg !4470
  %62 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4471
  %q_ceil27 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %62, i32 0, i32 26, !dbg !4472
  %63 = load i32, i32* %q_ceil27, align 8, !dbg !4472
  %sub28 = sub nsw i32 %63, 1, !dbg !4473
  store i32 %61, i32* %a.addr.i38, align 4, !dbg !4474
  store i32 0, i32* %amin.addr.i39, align 4, !dbg !4474
  store i32 %sub28, i32* %amax.addr.i40, align 4, !dbg !4474
  %64 = load i32, i32* %a.addr.i38, align 4, !dbg !4475
  %65 = load i32, i32* %amin.addr.i39, align 4, !dbg !4476
  %cmp.i41 = icmp slt i32 %64, %65, !dbg !4477
  br i1 %cmp.i41, label %if.then.i42, label %if.else.i44, !dbg !4478

if.then.i42:                                      ; preds = %while.end
  %66 = load i32, i32* %amin.addr.i39, align 4, !dbg !4479
  store i32 %66, i32* %retval.i37, align 4, !dbg !4480
  br label %av_clip_c.exit47, !dbg !4480

if.else.i44:                                      ; preds = %while.end
  %67 = load i32, i32* %a.addr.i38, align 4, !dbg !4481
  %68 = load i32, i32* %amax.addr.i40, align 4, !dbg !4482
  %cmp1.i43 = icmp sgt i32 %67, %68, !dbg !4483
  br i1 %cmp1.i43, label %if.then2.i45, label %if.else3.i46, !dbg !4484

if.then2.i45:                                     ; preds = %if.else.i44
  %69 = load i32, i32* %amax.addr.i40, align 4, !dbg !4485
  store i32 %69, i32* %retval.i37, align 4, !dbg !4486
  br label %av_clip_c.exit47, !dbg !4486

if.else3.i46:                                     ; preds = %if.else.i44
  %70 = load i32, i32* %a.addr.i38, align 4, !dbg !4487
  store i32 %70, i32* %retval.i37, align 4, !dbg !4488
  br label %av_clip_c.exit47, !dbg !4488

av_clip_c.exit47:                                 ; preds = %if.then.i42, %if.then2.i45, %if.else3.i46
  %71 = load i32, i32* %retval.i37, align 4, !dbg !4489
  %72 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4490
  %quant_idx30 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %72, i32 0, i32 5, !dbg !4491
  store i32 %71, i32* %quant_idx30, align 8, !dbg !4492
  %73 = load i32, i32* %bits, align 4, !dbg !4493
  %shr = ashr i32 %73, 3, !dbg !4494
  %74 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4495
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %74, i32 0, i32 20, !dbg !4496
  %75 = load i32, i32* %size_scaler, align 8, !dbg !4496
  %add31 = add nsw i32 %shr, %75, !dbg !4497
  %sub32 = sub nsw i32 %add31, 1, !dbg !4498
  %76 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4499
  %size_scaler33 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %76, i32 0, i32 20, !dbg !4500
  %77 = load i32, i32* %size_scaler33, align 8, !dbg !4500
  %sub34 = sub nsw i32 %77, 1, !dbg !4501
  %neg = xor i32 %sub34, -1, !dbg !4502
  %and = and i32 %sub32, %neg, !dbg !4503
  %add35 = add nsw i32 %and, 4, !dbg !4504
  %78 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4505
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %78, i32 0, i32 19, !dbg !4506
  %79 = load i32, i32* %prefix_bytes, align 4, !dbg !4506
  %add36 = add nsw i32 %add35, %79, !dbg !4507
  %80 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !4508
  %bytes = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %80, i32 0, i32 8, !dbg !4509
  store i32 %add36, i32* %bytes, align 4, !dbg !4510
  ret i32 0, !dbg !4511
}

; Function Attrs: nounwind uwtable
define internal i32 @count_hq_slice(%struct.SliceArgs* %slice, i32 %quant_idx) #4 !dbg !4512 {
entry:
  %retval.i = alloca i32, align 4
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !4515, metadata !1752), !dbg !4519
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !4536, metadata !1752), !dbg !4537
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !4538, metadata !1752), !dbg !4539
  %retval = alloca i32, align 4
  %slice.addr = alloca %struct.SliceArgs*, align 8
  %quant_idx.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %quants = alloca [5 x [4 x i8]], align 16
  %bits = alloca i32, align 4
  %p = alloca i32, align 4
  %level = alloca i32, align 4
  %orientation = alloca i32, align 4
  %s = alloca %struct.VC2EncContext*, align 8
  %bytes_start = alloca i32, align 4
  %bytes_len = alloca i32, align 4
  %pad_s = alloca i32, align 4
  %pad_c = alloca i32, align 4
  %b = alloca %struct.SubBand*, align 8
  %q_idx = alloca i32, align 4
  %q_m = alloca i64, align 8
  %q_a = alloca i64, align 8
  %q_s = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %top = alloca i32, align 4
  %bottom = alloca i32, align 4
  %buf = alloca i32*, align 8
  %c_abs = alloca i32, align 4
  store %struct.SliceArgs* %slice, %struct.SliceArgs** %slice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %slice.addr, metadata !4540, metadata !1752), !dbg !4541
  store i32 %quant_idx, i32* %quant_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant_idx.addr, metadata !4542, metadata !1752), !dbg !4543
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4544, metadata !1752), !dbg !4545
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4546, metadata !1752), !dbg !4547
  call void @llvm.dbg.declare(metadata [5 x [4 x i8]]* %quants, metadata !4548, metadata !1752), !dbg !4549
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4550, metadata !1752), !dbg !4551
  store i32 0, i32* %bits, align 4, !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %p, metadata !4552, metadata !1752), !dbg !4553
  call void @llvm.dbg.declare(metadata i32* %level, metadata !4554, metadata !1752), !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !4556, metadata !1752), !dbg !4557
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !4558, metadata !1752), !dbg !4559
  %0 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4560
  %ctx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %0, i32 0, i32 2, !dbg !4561
  %1 = load i8*, i8** %ctx, align 8, !dbg !4561
  %2 = bitcast i8* %1 to %struct.VC2EncContext*, !dbg !4560
  store %struct.VC2EncContext* %2, %struct.VC2EncContext** %s, align 8, !dbg !4559
  %3 = load i32, i32* %quant_idx.addr, align 4, !dbg !4562
  %idxprom = sext i32 %3 to i64, !dbg !4564
  %4 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4564
  %cache = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %4, i32 0, i32 1, !dbg !4565
  %arrayidx = getelementptr inbounds [116 x i32], [116 x i32]* %cache, i64 0, i64 %idxprom, !dbg !4564
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4564
  %tobool = icmp ne i32 %5, 0, !dbg !4564
  br i1 %tobool, label %if.then, label %if.end, !dbg !4566

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %quant_idx.addr, align 4, !dbg !4567
  %idxprom1 = sext i32 %6 to i64, !dbg !4568
  %7 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4568
  %cache2 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %7, i32 0, i32 1, !dbg !4569
  %arrayidx3 = getelementptr inbounds [116 x i32], [116 x i32]* %cache2, i64 0, i64 %idxprom1, !dbg !4568
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !4568
  store i32 %8, i32* %retval, align 4, !dbg !4570
  br label %return, !dbg !4570

if.end:                                           ; preds = %entry
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4571
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 19, !dbg !4572
  %10 = load i32, i32* %prefix_bytes, align 4, !dbg !4572
  %mul = mul nsw i32 8, %10, !dbg !4573
  %11 = load i32, i32* %bits, align 4, !dbg !4574
  %add = add nsw i32 %11, %mul, !dbg !4574
  store i32 %add, i32* %bits, align 4, !dbg !4574
  %12 = load i32, i32* %bits, align 4, !dbg !4575
  %add4 = add nsw i32 %12, 8, !dbg !4575
  store i32 %add4, i32* %bits, align 4, !dbg !4575
  store i32 0, i32* %level, align 4, !dbg !4576
  br label %for.cond, !dbg !4578

for.cond:                                         ; preds = %for.inc28, %if.end
  %13 = load i32, i32* %level, align 4, !dbg !4579
  %14 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4582
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %14, i32 0, i32 30, !dbg !4583
  %15 = load i32, i32* %wavelet_depth, align 4, !dbg !4583
  %cmp = icmp slt i32 %13, %15, !dbg !4584
  br i1 %cmp, label %for.body, label %for.end30, !dbg !4585

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %level, align 4, !dbg !4586
  %tobool5 = icmp ne i32 %16, 0, !dbg !4588
  %lnot = xor i1 %tobool5, true, !dbg !4588
  %lnot6 = xor i1 %lnot, true, !dbg !4589
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !4589
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !4590
  br label %for.cond7, !dbg !4591

for.cond7:                                        ; preds = %for.inc, %for.body
  %17 = load i32, i32* %orientation, align 4, !dbg !4592
  %cmp8 = icmp slt i32 %17, 4, !dbg !4595
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !4596

for.body9:                                        ; preds = %for.cond7
  %18 = load i32, i32* %quant_idx.addr, align 4, !dbg !4597
  %19 = load i32, i32* %orientation, align 4, !dbg !4598
  %idxprom10 = sext i32 %19 to i64, !dbg !4599
  %20 = load i32, i32* %level, align 4, !dbg !4600
  %idxprom11 = sext i32 %20 to i64, !dbg !4599
  %21 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4599
  %quant = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %21, i32 0, i32 14, !dbg !4601
  %arrayidx12 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant, i64 0, i64 %idxprom11, !dbg !4599
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !4599
  %22 = load i8, i8* %arrayidx13, align 1, !dbg !4599
  %conv = zext i8 %22 to i32, !dbg !4599
  %sub = sub nsw i32 %18, %conv, !dbg !4602
  %cmp14 = icmp sgt i32 %sub, 0, !dbg !4603
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !4604

cond.true:                                        ; preds = %for.body9
  %23 = load i32, i32* %quant_idx.addr, align 4, !dbg !4605
  %24 = load i32, i32* %orientation, align 4, !dbg !4606
  %idxprom16 = sext i32 %24 to i64, !dbg !4607
  %25 = load i32, i32* %level, align 4, !dbg !4608
  %idxprom17 = sext i32 %25 to i64, !dbg !4607
  %26 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4607
  %quant18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %26, i32 0, i32 14, !dbg !4609
  %arrayidx19 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant18, i64 0, i64 %idxprom17, !dbg !4607
  %arrayidx20 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx19, i64 0, i64 %idxprom16, !dbg !4607
  %27 = load i8, i8* %arrayidx20, align 1, !dbg !4607
  %conv21 = zext i8 %27 to i32, !dbg !4607
  %sub22 = sub nsw i32 %23, %conv21, !dbg !4610
  br label %cond.end, !dbg !4611

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !4612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub22, %cond.true ], [ 0, %cond.false ], !dbg !4614
  %conv23 = trunc i32 %cond to i8, !dbg !4616
  %28 = load i32, i32* %orientation, align 4, !dbg !4617
  %idxprom24 = sext i32 %28 to i64, !dbg !4618
  %29 = load i32, i32* %level, align 4, !dbg !4619
  %idxprom25 = sext i32 %29 to i64, !dbg !4618
  %arrayidx26 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quants, i64 0, i64 %idxprom25, !dbg !4618
  %arrayidx27 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !4618
  store i8 %conv23, i8* %arrayidx27, align 1, !dbg !4620
  br label %for.inc, !dbg !4618

for.inc:                                          ; preds = %cond.end
  %30 = load i32, i32* %orientation, align 4, !dbg !4621
  %inc = add nsw i32 %30, 1, !dbg !4621
  store i32 %inc, i32* %orientation, align 4, !dbg !4621
  br label %for.cond7, !dbg !4622, !llvm.loop !4623

for.end:                                          ; preds = %for.cond7
  br label %for.inc28, !dbg !4625

for.inc28:                                        ; preds = %for.end
  %31 = load i32, i32* %level, align 4, !dbg !4627
  %inc29 = add nsw i32 %31, 1, !dbg !4627
  store i32 %inc29, i32* %level, align 4, !dbg !4627
  br label %for.cond, !dbg !4629, !llvm.loop !4630

for.end30:                                        ; preds = %for.cond
  store i32 0, i32* %p, align 4, !dbg !4632
  br label %for.cond31, !dbg !4633

for.cond31:                                       ; preds = %for.inc160, %for.end30
  %32 = load i32, i32* %p, align 4, !dbg !4634
  %cmp32 = icmp slt i32 %32, 3, !dbg !4636
  br i1 %cmp32, label %for.body34, label %for.end162, !dbg !4637

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata i32* %bytes_start, metadata !4638, metadata !1752), !dbg !4639
  call void @llvm.dbg.declare(metadata i32* %bytes_len, metadata !4640, metadata !1752), !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %pad_s, metadata !4642, metadata !1752), !dbg !4643
  call void @llvm.dbg.declare(metadata i32* %pad_c, metadata !4644, metadata !1752), !dbg !4645
  %33 = load i32, i32* %bits, align 4, !dbg !4646
  %shr = ashr i32 %33, 3, !dbg !4647
  store i32 %shr, i32* %bytes_start, align 4, !dbg !4648
  %34 = load i32, i32* %bits, align 4, !dbg !4649
  %add35 = add nsw i32 %34, 8, !dbg !4649
  store i32 %add35, i32* %bits, align 4, !dbg !4649
  store i32 0, i32* %level, align 4, !dbg !4650
  br label %for.cond36, !dbg !4651

for.cond36:                                       ; preds = %for.inc138, %for.body34
  %35 = load i32, i32* %level, align 4, !dbg !4652
  %36 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4654
  %wavelet_depth37 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %36, i32 0, i32 30, !dbg !4655
  %37 = load i32, i32* %wavelet_depth37, align 4, !dbg !4655
  %cmp38 = icmp slt i32 %35, %37, !dbg !4656
  br i1 %cmp38, label %for.body40, label %for.end140, !dbg !4657

for.body40:                                       ; preds = %for.cond36
  %38 = load i32, i32* %level, align 4, !dbg !4658
  %tobool41 = icmp ne i32 %38, 0, !dbg !4659
  %lnot42 = xor i1 %tobool41, true, !dbg !4659
  %lnot44 = xor i1 %lnot42, true, !dbg !4660
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !4660
  store i32 %lnot.ext45, i32* %orientation, align 4, !dbg !4661
  br label %for.cond46, !dbg !4662

for.cond46:                                       ; preds = %for.inc135, %for.body40
  %39 = load i32, i32* %orientation, align 4, !dbg !4663
  %cmp47 = icmp slt i32 %39, 4, !dbg !4665
  br i1 %cmp47, label %for.body49, label %for.end137, !dbg !4666

for.body49:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !4667, metadata !1752), !dbg !4668
  %40 = load i32, i32* %orientation, align 4, !dbg !4669
  %idxprom50 = sext i32 %40 to i64, !dbg !4670
  %41 = load i32, i32* %level, align 4, !dbg !4671
  %idxprom51 = sext i32 %41 to i64, !dbg !4670
  %42 = load i32, i32* %p, align 4, !dbg !4672
  %idxprom52 = sext i32 %42 to i64, !dbg !4670
  %43 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4670
  %plane = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %43, i32 0, i32 2, !dbg !4673
  %arrayidx53 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom52, !dbg !4670
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx53, i32 0, i32 0, !dbg !4674
  %arrayidx54 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom51, !dbg !4670
  %arrayidx55 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx54, i64 0, i64 %idxprom50, !dbg !4670
  store %struct.SubBand* %arrayidx55, %struct.SubBand** %b, align 8, !dbg !4668
  call void @llvm.dbg.declare(metadata i32* %q_idx, metadata !4675, metadata !1752), !dbg !4676
  %44 = load i32, i32* %orientation, align 4, !dbg !4677
  %idxprom56 = sext i32 %44 to i64, !dbg !4678
  %45 = load i32, i32* %level, align 4, !dbg !4679
  %idxprom57 = sext i32 %45 to i64, !dbg !4678
  %arrayidx58 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quants, i64 0, i64 %idxprom57, !dbg !4678
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !4678
  %46 = load i8, i8* %arrayidx59, align 1, !dbg !4678
  %conv60 = zext i8 %46 to i32, !dbg !4678
  store i32 %conv60, i32* %q_idx, align 4, !dbg !4676
  call void @llvm.dbg.declare(metadata i64* %q_m, metadata !4680, metadata !1752), !dbg !4681
  %47 = load i32, i32* %q_idx, align 4, !dbg !4682
  %idxprom61 = sext i32 %47 to i64, !dbg !4683
  %48 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4683
  %qmagic_lut = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %48, i32 0, i32 16, !dbg !4684
  %arrayidx62 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut, i64 0, i64 %idxprom61, !dbg !4683
  %arrayidx63 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx62, i64 0, i64 0, !dbg !4683
  %49 = load i32, i32* %arrayidx63, align 4, !dbg !4683
  %conv64 = zext i32 %49 to i64, !dbg !4685
  %shl = shl i64 %conv64, 2, !dbg !4686
  store i64 %shl, i64* %q_m, align 8, !dbg !4681
  call void @llvm.dbg.declare(metadata i64* %q_a, metadata !4687, metadata !1752), !dbg !4688
  %50 = load i32, i32* %q_idx, align 4, !dbg !4689
  %idxprom65 = sext i32 %50 to i64, !dbg !4690
  %51 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4690
  %qmagic_lut66 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %51, i32 0, i32 16, !dbg !4691
  %arrayidx67 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut66, i64 0, i64 %idxprom65, !dbg !4690
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx67, i64 0, i64 1, !dbg !4690
  %52 = load i32, i32* %arrayidx68, align 4, !dbg !4690
  %conv69 = zext i32 %52 to i64, !dbg !4690
  store i64 %conv69, i64* %q_a, align 8, !dbg !4688
  call void @llvm.dbg.declare(metadata i32* %q_s, metadata !4692, metadata !1752), !dbg !4693
  %53 = load i32, i32* %q_idx, align 4, !dbg !4694
  %idxprom70 = sext i32 %53 to i64, !dbg !4695
  %arrayidx71 = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom70, !dbg !4695
  %54 = load i32, i32* %arrayidx71, align 4, !dbg !4695
  %or = or i32 %54, 1, !dbg !4696
  %55 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4697
  %sub72 = sub nsw i32 31, %55, !dbg !4698
  %add73 = add nsw i32 %sub72, 32, !dbg !4699
  store i32 %add73, i32* %q_s, align 4, !dbg !4693
  call void @llvm.dbg.declare(metadata i32* %left, metadata !4700, metadata !1752), !dbg !4701
  %56 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4702
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %56, i32 0, i32 2, !dbg !4703
  %57 = load i32, i32* %width, align 8, !dbg !4703
  %58 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4704
  %x74 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %58, i32 0, i32 3, !dbg !4705
  %59 = load i32, i32* %x74, align 8, !dbg !4705
  %mul75 = mul nsw i32 %57, %59, !dbg !4706
  %60 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4707
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %60, i32 0, i32 17, !dbg !4708
  %61 = load i32, i32* %num_x, align 4, !dbg !4708
  %div = sdiv i32 %mul75, %61, !dbg !4709
  store i32 %div, i32* %left, align 4, !dbg !4701
  call void @llvm.dbg.declare(metadata i32* %right, metadata !4710, metadata !1752), !dbg !4711
  %62 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4712
  %width76 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %62, i32 0, i32 2, !dbg !4713
  %63 = load i32, i32* %width76, align 8, !dbg !4713
  %64 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4714
  %x77 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %64, i32 0, i32 3, !dbg !4715
  %65 = load i32, i32* %x77, align 8, !dbg !4715
  %add78 = add nsw i32 %65, 1, !dbg !4716
  %mul79 = mul nsw i32 %63, %add78, !dbg !4717
  %66 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4718
  %num_x80 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %66, i32 0, i32 17, !dbg !4719
  %67 = load i32, i32* %num_x80, align 4, !dbg !4719
  %div81 = sdiv i32 %mul79, %67, !dbg !4720
  store i32 %div81, i32* %right, align 4, !dbg !4711
  call void @llvm.dbg.declare(metadata i32* %top, metadata !4721, metadata !1752), !dbg !4722
  %68 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4723
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %68, i32 0, i32 3, !dbg !4724
  %69 = load i32, i32* %height, align 4, !dbg !4724
  %70 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4725
  %y82 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %70, i32 0, i32 4, !dbg !4726
  %71 = load i32, i32* %y82, align 4, !dbg !4726
  %mul83 = mul nsw i32 %69, %71, !dbg !4727
  %72 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4728
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %72, i32 0, i32 18, !dbg !4729
  %73 = load i32, i32* %num_y, align 8, !dbg !4729
  %div84 = sdiv i32 %mul83, %73, !dbg !4730
  store i32 %div84, i32* %top, align 4, !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !4731, metadata !1752), !dbg !4732
  %74 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4733
  %height85 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %74, i32 0, i32 3, !dbg !4734
  %75 = load i32, i32* %height85, align 4, !dbg !4734
  %76 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4735
  %y86 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %76, i32 0, i32 4, !dbg !4736
  %77 = load i32, i32* %y86, align 4, !dbg !4736
  %add87 = add nsw i32 %77, 1, !dbg !4737
  %mul88 = mul nsw i32 %75, %add87, !dbg !4738
  %78 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4739
  %num_y89 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %78, i32 0, i32 18, !dbg !4740
  %79 = load i32, i32* %num_y89, align 8, !dbg !4740
  %div90 = sdiv i32 %mul88, %79, !dbg !4741
  store i32 %div90, i32* %bottom, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !4742, metadata !1752), !dbg !4743
  %80 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4744
  %buf91 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %80, i32 0, i32 0, !dbg !4745
  %81 = load i32*, i32** %buf91, align 8, !dbg !4745
  %82 = load i32, i32* %top, align 4, !dbg !4746
  %conv92 = sext i32 %82 to i64, !dbg !4746
  %83 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4747
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %83, i32 0, i32 1, !dbg !4748
  %84 = load i64, i64* %stride, align 8, !dbg !4748
  %mul93 = mul nsw i64 %conv92, %84, !dbg !4749
  %add.ptr = getelementptr inbounds i32, i32* %81, i64 %mul93, !dbg !4750
  store i32* %add.ptr, i32** %buf, align 8, !dbg !4743
  %85 = load i32, i32* %top, align 4, !dbg !4751
  store i32 %85, i32* %y, align 4, !dbg !4752
  br label %for.cond94, !dbg !4753

for.cond94:                                       ; preds = %for.inc132, %for.body49
  %86 = load i32, i32* %y, align 4, !dbg !4754
  %87 = load i32, i32* %bottom, align 4, !dbg !4756
  %cmp95 = icmp slt i32 %86, %87, !dbg !4757
  br i1 %cmp95, label %for.body97, label %for.end134, !dbg !4758

for.body97:                                       ; preds = %for.cond94
  %88 = load i32, i32* %left, align 4, !dbg !4759
  store i32 %88, i32* %x, align 4, !dbg !4760
  br label %for.cond98, !dbg !4761

for.cond98:                                       ; preds = %for.inc127, %for.body97
  %89 = load i32, i32* %x, align 4, !dbg !4762
  %90 = load i32, i32* %right, align 4, !dbg !4764
  %cmp99 = icmp slt i32 %89, %90, !dbg !4765
  br i1 %cmp99, label %for.body101, label %for.end129, !dbg !4766

for.body101:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata i32* %c_abs, metadata !4767, metadata !1752), !dbg !4768
  %91 = load i64, i64* %q_m, align 8, !dbg !4769
  %92 = load i32, i32* %x, align 4, !dbg !4770
  %idxprom102 = sext i32 %92 to i64, !dbg !4771
  %93 = load i32*, i32** %buf, align 8, !dbg !4771
  %arrayidx103 = getelementptr inbounds i32, i32* %93, i64 %idxprom102, !dbg !4771
  %94 = load i32, i32* %arrayidx103, align 4, !dbg !4771
  %cmp104 = icmp sge i32 %94, 0, !dbg !4772
  br i1 %cmp104, label %cond.true106, label %cond.false109, !dbg !4773

cond.true106:                                     ; preds = %for.body101
  %95 = load i32, i32* %x, align 4, !dbg !4774
  %idxprom107 = sext i32 %95 to i64, !dbg !4776
  %96 = load i32*, i32** %buf, align 8, !dbg !4776
  %arrayidx108 = getelementptr inbounds i32, i32* %96, i64 %idxprom107, !dbg !4776
  %97 = load i32, i32* %arrayidx108, align 4, !dbg !4776
  br label %cond.end113, !dbg !4777

cond.false109:                                    ; preds = %for.body101
  %98 = load i32, i32* %x, align 4, !dbg !4778
  %idxprom110 = sext i32 %98 to i64, !dbg !4780
  %99 = load i32*, i32** %buf, align 8, !dbg !4780
  %arrayidx111 = getelementptr inbounds i32, i32* %99, i64 %idxprom110, !dbg !4780
  %100 = load i32, i32* %arrayidx111, align 4, !dbg !4780
  %sub112 = sub nsw i32 0, %100, !dbg !4781
  br label %cond.end113, !dbg !4782

cond.end113:                                      ; preds = %cond.false109, %cond.true106
  %cond114 = phi i32 [ %97, %cond.true106 ], [ %sub112, %cond.false109 ], !dbg !4783
  %conv115 = sext i32 %cond114 to i64, !dbg !4785
  %mul116 = mul i64 %91, %conv115, !dbg !4786
  %101 = load i64, i64* %q_a, align 8, !dbg !4787
  %add117 = add i64 %mul116, %101, !dbg !4788
  %102 = load i32, i32* %q_s, align 4, !dbg !4789
  %sh_prom = zext i32 %102 to i64, !dbg !4790
  %shr118 = lshr i64 %add117, %sh_prom, !dbg !4790
  %conv119 = trunc i64 %shr118 to i32, !dbg !4791
  store i32 %conv119, i32* %c_abs, align 4, !dbg !4792
  %103 = load i32, i32* %c_abs, align 4, !dbg !4793
  store i32 %103, i32* %val.addr.i, align 4, !dbg !4794
  store i32 1, i32* %topbit.i, align 4, !dbg !4537
  store i32 1, i32* %maxval.i, align 4, !dbg !4539
  %104 = load i32, i32* %val.addr.i, align 4, !dbg !4795
  %inc.i = add i32 %104, 1, !dbg !4795
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !4795
  %tobool.i = icmp ne i32 %104, 0, !dbg !4795
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !4797

if.then.i:                                        ; preds = %cond.end113
  store i32 1, i32* %retval.i, align 4, !dbg !4798
  br label %count_vc2_ue_uint.exit, !dbg !4798

if.end.i:                                         ; preds = %cond.end113
  br label %while.cond.i, !dbg !4799

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %105 = load i32, i32* %val.addr.i, align 4, !dbg !4800
  %106 = load i32, i32* %maxval.i, align 4, !dbg !4802
  %cmp.i = icmp ugt i32 %105, %106, !dbg !4803
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !4804

while.body.i:                                     ; preds = %while.cond.i
  %107 = load i32, i32* %topbit.i, align 4, !dbg !4805
  %shl.i = shl i32 %107, 1, !dbg !4805
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !4805
  %108 = load i32, i32* %maxval.i, align 4, !dbg !4807
  %shl1.i = shl i32 %108, 1, !dbg !4807
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !4807
  %109 = load i32, i32* %maxval.i, align 4, !dbg !4808
  %or.i = or i32 %109, 1, !dbg !4808
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !4808
  br label %while.cond.i, !dbg !4809, !llvm.loop !4811

while.end.i:                                      ; preds = %while.cond.i
  %110 = load i32, i32* %topbit.i, align 4, !dbg !4813
  %or2.i = or i32 %110, 1, !dbg !4814
  %111 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !4815
  %sub.i = sub nsw i32 31, %111, !dbg !4816
  %mul.i = mul nsw i32 %sub.i, 2, !dbg !4817
  %add.i = add nsw i32 %mul.i, 1, !dbg !4818
  store i32 %add.i, i32* %retval.i, align 4, !dbg !4819
  br label %count_vc2_ue_uint.exit, !dbg !4819

count_vc2_ue_uint.exit:                           ; preds = %if.then.i, %while.end.i
  %112 = load i32, i32* %retval.i, align 4, !dbg !4820
  %113 = load i32, i32* %bits, align 4, !dbg !4821
  %add120 = add nsw i32 %113, %112, !dbg !4821
  store i32 %add120, i32* %bits, align 4, !dbg !4821
  %114 = load i32, i32* %c_abs, align 4, !dbg !4822
  %tobool121 = icmp ne i32 %114, 0, !dbg !4823
  %lnot122 = xor i1 %tobool121, true, !dbg !4823
  %lnot124 = xor i1 %lnot122, true, !dbg !4824
  %lnot.ext125 = zext i1 %lnot124 to i32, !dbg !4824
  %115 = load i32, i32* %bits, align 4, !dbg !4825
  %add126 = add nsw i32 %115, %lnot.ext125, !dbg !4825
  store i32 %add126, i32* %bits, align 4, !dbg !4825
  br label %for.inc127, !dbg !4826

for.inc127:                                       ; preds = %count_vc2_ue_uint.exit
  %116 = load i32, i32* %x, align 4, !dbg !4827
  %inc128 = add nsw i32 %116, 1, !dbg !4827
  store i32 %inc128, i32* %x, align 4, !dbg !4827
  br label %for.cond98, !dbg !4829, !llvm.loop !4830

for.end129:                                       ; preds = %for.cond98
  %117 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !4832
  %stride130 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %117, i32 0, i32 1, !dbg !4833
  %118 = load i64, i64* %stride130, align 8, !dbg !4833
  %119 = load i32*, i32** %buf, align 8, !dbg !4834
  %add.ptr131 = getelementptr inbounds i32, i32* %119, i64 %118, !dbg !4834
  store i32* %add.ptr131, i32** %buf, align 8, !dbg !4834
  br label %for.inc132, !dbg !4835

for.inc132:                                       ; preds = %for.end129
  %120 = load i32, i32* %y, align 4, !dbg !4836
  %inc133 = add nsw i32 %120, 1, !dbg !4836
  store i32 %inc133, i32* %y, align 4, !dbg !4836
  br label %for.cond94, !dbg !4838, !llvm.loop !4839

for.end134:                                       ; preds = %for.cond94
  br label %for.inc135, !dbg !4841

for.inc135:                                       ; preds = %for.end134
  %121 = load i32, i32* %orientation, align 4, !dbg !4842
  %inc136 = add nsw i32 %121, 1, !dbg !4842
  store i32 %inc136, i32* %orientation, align 4, !dbg !4842
  br label %for.cond46, !dbg !4844, !llvm.loop !4845

for.end137:                                       ; preds = %for.cond46
  br label %for.inc138, !dbg !4847

for.inc138:                                       ; preds = %for.end137
  %122 = load i32, i32* %level, align 4, !dbg !4848
  %inc139 = add nsw i32 %122, 1, !dbg !4848
  store i32 %inc139, i32* %level, align 4, !dbg !4848
  br label %for.cond36, !dbg !4850, !llvm.loop !4851

for.end140:                                       ; preds = %for.cond36
  %123 = load i32, i32* %bits, align 4, !dbg !4853
  %add141 = add nsw i32 %123, 8, !dbg !4854
  %sub142 = sub nsw i32 %add141, 1, !dbg !4855
  %and = and i32 %sub142, -8, !dbg !4856
  %124 = load i32, i32* %bits, align 4, !dbg !4857
  %sub143 = sub nsw i32 %and, %124, !dbg !4858
  %125 = load i32, i32* %bits, align 4, !dbg !4859
  %add144 = add nsw i32 %125, %sub143, !dbg !4859
  store i32 %add144, i32* %bits, align 4, !dbg !4859
  %126 = load i32, i32* %bits, align 4, !dbg !4860
  %shr145 = ashr i32 %126, 3, !dbg !4861
  %127 = load i32, i32* %bytes_start, align 4, !dbg !4862
  %sub146 = sub nsw i32 %shr145, %127, !dbg !4863
  %sub147 = sub nsw i32 %sub146, 1, !dbg !4864
  store i32 %sub147, i32* %bytes_len, align 4, !dbg !4865
  %128 = load i32, i32* %bytes_len, align 4, !dbg !4866
  %129 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4867
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %129, i32 0, i32 20, !dbg !4868
  %130 = load i32, i32* %size_scaler, align 8, !dbg !4868
  %add148 = add nsw i32 %128, %130, !dbg !4869
  %sub149 = sub nsw i32 %add148, 1, !dbg !4870
  %131 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4871
  %size_scaler150 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %131, i32 0, i32 20, !dbg !4872
  %132 = load i32, i32* %size_scaler150, align 8, !dbg !4872
  %sub151 = sub nsw i32 %132, 1, !dbg !4873
  %neg = xor i32 %sub151, -1, !dbg !4874
  %and152 = and i32 %sub149, %neg, !dbg !4875
  %133 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4876
  %size_scaler153 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %133, i32 0, i32 20, !dbg !4877
  %134 = load i32, i32* %size_scaler153, align 8, !dbg !4877
  %div154 = sdiv i32 %and152, %134, !dbg !4878
  store i32 %div154, i32* %pad_s, align 4, !dbg !4879
  %135 = load i32, i32* %pad_s, align 4, !dbg !4880
  %136 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !4881
  %size_scaler155 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %136, i32 0, i32 20, !dbg !4882
  %137 = load i32, i32* %size_scaler155, align 8, !dbg !4882
  %mul156 = mul nsw i32 %135, %137, !dbg !4883
  %138 = load i32, i32* %bytes_len, align 4, !dbg !4884
  %sub157 = sub nsw i32 %mul156, %138, !dbg !4885
  store i32 %sub157, i32* %pad_c, align 4, !dbg !4886
  %139 = load i32, i32* %pad_c, align 4, !dbg !4887
  %mul158 = mul nsw i32 %139, 8, !dbg !4888
  %140 = load i32, i32* %bits, align 4, !dbg !4889
  %add159 = add nsw i32 %140, %mul158, !dbg !4889
  store i32 %add159, i32* %bits, align 4, !dbg !4889
  br label %for.inc160, !dbg !4890

for.inc160:                                       ; preds = %for.end140
  %141 = load i32, i32* %p, align 4, !dbg !4891
  %inc161 = add nsw i32 %141, 1, !dbg !4891
  store i32 %inc161, i32* %p, align 4, !dbg !4891
  br label %for.cond31, !dbg !4893, !llvm.loop !4894

for.end162:                                       ; preds = %for.cond31
  %142 = load i32, i32* %bits, align 4, !dbg !4896
  %143 = load i32, i32* %quant_idx.addr, align 4, !dbg !4897
  %idxprom163 = sext i32 %143 to i64, !dbg !4898
  %144 = load %struct.SliceArgs*, %struct.SliceArgs** %slice.addr, align 8, !dbg !4898
  %cache164 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %144, i32 0, i32 1, !dbg !4899
  %arrayidx165 = getelementptr inbounds [116 x i32], [116 x i32]* %cache164, i64 0, i64 %idxprom163, !dbg !4898
  store i32 %142, i32* %arrayidx165, align 4, !dbg !4900
  %145 = load i32, i32* %bits, align 4, !dbg !4901
  store i32 %145, i32* %retval, align 4, !dbg !4902
  br label %return, !dbg !4902

return:                                           ; preds = %for.end162, %if.then
  %146 = load i32, i32* %retval, align 4, !dbg !4903
  ret i32 %146, !dbg !4903
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

declare void @avpriv_align_put_bits(%struct.PutBitContext*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #5 !dbg !4904 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3713, metadata !1752), !dbg !4907
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4913, metadata !1752), !dbg !4914
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4915, metadata !1752), !dbg !4916
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4917, metadata !1752), !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !4919, metadata !1752), !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !4921, metadata !1752), !dbg !4922
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4923
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !4924
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !4924
  store i32 %1, i32* %bit_buf, align 4, !dbg !4925
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4926
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !4927
  %3 = load i32, i32* %bit_left2, align 4, !dbg !4927
  store i32 %3, i32* %bit_left, align 4, !dbg !4928
  %4 = load i32, i32* %n.addr, align 4, !dbg !4929
  %5 = load i32, i32* %bit_left, align 4, !dbg !4930
  %cmp = icmp slt i32 %4, %5, !dbg !4931
  br i1 %cmp, label %if.then, label %if.else, !dbg !4932

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !4933
  %7 = load i32, i32* %n.addr, align 4, !dbg !4935
  %shl = shl i32 %6, %7, !dbg !4936
  %8 = load i32, i32* %value.addr, align 4, !dbg !4937
  %or = or i32 %shl, %8, !dbg !4938
  store i32 %or, i32* %bit_buf, align 4, !dbg !4939
  %9 = load i32, i32* %n.addr, align 4, !dbg !4940
  %10 = load i32, i32* %bit_left, align 4, !dbg !4941
  %sub = sub nsw i32 %10, %9, !dbg !4941
  store i32 %sub, i32* %bit_left, align 4, !dbg !4941
  br label %if.end12, !dbg !4942

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !4943
  %12 = load i32, i32* %bit_buf, align 4, !dbg !4944
  %shl3 = shl i32 %12, %11, !dbg !4944
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !4944
  %13 = load i32, i32* %value.addr, align 4, !dbg !4945
  %14 = load i32, i32* %n.addr, align 4, !dbg !4946
  %15 = load i32, i32* %bit_left, align 4, !dbg !4947
  %sub4 = sub nsw i32 %14, %15, !dbg !4948
  %shr = lshr i32 %13, %sub4, !dbg !4949
  %16 = load i32, i32* %bit_buf, align 4, !dbg !4950
  %or5 = or i32 %16, %shr, !dbg !4950
  store i32 %or5, i32* %bit_buf, align 4, !dbg !4950
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4951
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !4952
  %18 = load i8*, i8** %buf_end, align 8, !dbg !4952
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4953
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !4954
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !4954
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !4955
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !4955
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4955
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !4956
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !4957

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !4958
  store i32 %21, i32* %x.addr.i, align 4, !dbg !4959
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !4960
  %shl.i = shl i32 %22, 8, !dbg !4961
  %and.i = and i32 %shl.i, 65280, !dbg !4962
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !4963
  %shr.i = lshr i32 %23, 8, !dbg !4964
  %and1.i = and i32 %shr.i, 255, !dbg !4965
  %or.i = or i32 %and.i, %and1.i, !dbg !4966
  %shl2.i = shl i32 %or.i, 16, !dbg !4967
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !4968
  %shr3.i = lshr i32 %24, 16, !dbg !4969
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4970
  %and5.i = and i32 %shl4.i, 65280, !dbg !4971
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !4972
  %shr6.i = lshr i32 %25, 16, !dbg !4973
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4974
  %and8.i = and i32 %shr7.i, 255, !dbg !4975
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4976
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4977
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4978
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !4979
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !4979
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !4980
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !4980
  store i32 %or10.i, i32* %l, align 1, !dbg !4981
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4982
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !4983
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !4984
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !4984
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !4984
  br label %if.end, !dbg !4985

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i32 0, i32 0)), !dbg !4986
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !4988
  %sub11 = sub nsw i32 32, %31, !dbg !4989
  %32 = load i32, i32* %bit_left, align 4, !dbg !4990
  %add = add nsw i32 %32, %sub11, !dbg !4990
  store i32 %add, i32* %bit_left, align 4, !dbg !4990
  %33 = load i32, i32* %value.addr, align 4, !dbg !4991
  store i32 %33, i32* %bit_buf, align 4, !dbg !4992
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !4993
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4994
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !4995
  store i32 %34, i32* %bit_buf13, align 8, !dbg !4996
  %36 = load i32, i32* %bit_left, align 4, !dbg !4997
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4998
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !4999
  store i32 %36, i32* %bit_left14, align 4, !dbg !5000
  ret void, !dbg !5001
}

; Function Attrs: nounwind uwtable
define internal void @put_bits32(%struct.PutBitContext* %s, i32 %value) #4 !dbg !5002 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3713, metadata !1752), !dbg !5003
  %s.addr = alloca %struct.PutBitContext*, align 8
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5007, metadata !1752), !dbg !5008
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5009, metadata !1752), !dbg !5010
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !5011, metadata !1752), !dbg !5012
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !5013, metadata !1752), !dbg !5014
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5015
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !5016
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !5016
  store i32 %1, i32* %bit_buf, align 4, !dbg !5017
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5018
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5019
  %3 = load i32, i32* %bit_left2, align 4, !dbg !5019
  store i32 %3, i32* %bit_left, align 4, !dbg !5020
  %4 = load i32, i32* %bit_buf, align 4, !dbg !5021
  %conv = zext i32 %4 to i64, !dbg !5022
  %5 = load i32, i32* %bit_left, align 4, !dbg !5023
  %sh_prom = zext i32 %5 to i64, !dbg !5024
  %shl = shl i64 %conv, %sh_prom, !dbg !5024
  %conv3 = trunc i64 %shl to i32, !dbg !5022
  store i32 %conv3, i32* %bit_buf, align 4, !dbg !5025
  %6 = load i32, i32* %value.addr, align 4, !dbg !5026
  %7 = load i32, i32* %bit_left, align 4, !dbg !5027
  %sub = sub nsw i32 32, %7, !dbg !5028
  %shr = lshr i32 %6, %sub, !dbg !5029
  %8 = load i32, i32* %bit_buf, align 4, !dbg !5030
  %or = or i32 %8, %shr, !dbg !5030
  store i32 %or, i32* %bit_buf, align 4, !dbg !5030
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5031
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 4, !dbg !5032
  %10 = load i8*, i8** %buf_end, align 8, !dbg !5032
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5033
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !5034
  %12 = load i8*, i8** %buf_ptr, align 8, !dbg !5034
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !5035
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !5035
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5035
  %cmp = icmp slt i64 3, %sub.ptr.sub, !dbg !5036
  br i1 %cmp, label %if.then, label %if.else, !dbg !5037

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %bit_buf, align 4, !dbg !5038
  store i32 %13, i32* %x.addr.i, align 4, !dbg !5039
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !5040
  %shl.i = shl i32 %14, 8, !dbg !5041
  %and.i = and i32 %shl.i, 65280, !dbg !5042
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !5043
  %shr.i = lshr i32 %15, 8, !dbg !5044
  %and1.i = and i32 %shr.i, 255, !dbg !5045
  %or.i = or i32 %and.i, %and1.i, !dbg !5046
  %shl2.i = shl i32 %or.i, 16, !dbg !5047
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !5048
  %shr3.i = lshr i32 %16, 16, !dbg !5049
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5050
  %and5.i = and i32 %shl4.i, 65280, !dbg !5051
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !5052
  %shr6.i = lshr i32 %17, 16, !dbg !5053
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5054
  %and8.i = and i32 %shr7.i, 255, !dbg !5055
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5056
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5057
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5058
  %buf_ptr5 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 3, !dbg !5059
  %19 = load i8*, i8** %buf_ptr5, align 8, !dbg !5059
  %20 = bitcast i8* %19 to %union.unaligned_32*, !dbg !5060
  %l = bitcast %union.unaligned_32* %20 to i32*, !dbg !5060
  store i32 %or10.i, i32* %l, align 1, !dbg !5061
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5062
  %buf_ptr6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 3, !dbg !5063
  %22 = load i8*, i8** %buf_ptr6, align 8, !dbg !5064
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 4, !dbg !5064
  store i8* %add.ptr, i8** %buf_ptr6, align 8, !dbg !5064
  br label %if.end, !dbg !5065

if.else:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i32 0, i32 0)), !dbg !5066
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load i32, i32* %value.addr, align 4, !dbg !5068
  store i32 %23, i32* %bit_buf, align 4, !dbg !5069
  %24 = load i32, i32* %bit_buf, align 4, !dbg !5070
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5071
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %25, i32 0, i32 0, !dbg !5072
  store i32 %24, i32* %bit_buf7, align 8, !dbg !5073
  %26 = load i32, i32* %bit_left, align 4, !dbg !5074
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5075
  %bit_left8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %27, i32 0, i32 1, !dbg !5076
  store i32 %26, i32* %bit_left8, align 4, !dbg !5077
  ret void, !dbg !5078
}

; Function Attrs: nounwind uwtable
define internal void @encode_parse_params(%struct.VC2EncContext* %s) #4 !dbg !5079 {
entry:
  %pb.addr.i79 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i79, metadata !3807, metadata !1752), !dbg !5080
  %val.addr.i80 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i80, metadata !3813, metadata !1752), !dbg !5082
  %i.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i81, metadata !3815, metadata !1752), !dbg !5083
  %pbits.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i82, metadata !3817, metadata !1752), !dbg !5084
  %bits.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i83, metadata !3819, metadata !1752), !dbg !5085
  %topbit.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i84, metadata !3821, metadata !1752), !dbg !5086
  %maxval.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i85, metadata !3823, metadata !1752), !dbg !5087
  %pb.addr.i42 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i42, metadata !3807, metadata !1752), !dbg !5088
  %val.addr.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i43, metadata !3813, metadata !1752), !dbg !5090
  %i.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i44, metadata !3815, metadata !1752), !dbg !5091
  %pbits.i45 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i45, metadata !3817, metadata !1752), !dbg !5092
  %bits.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i46, metadata !3819, metadata !1752), !dbg !5093
  %topbit.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i47, metadata !3821, metadata !1752), !dbg !5094
  %maxval.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i48, metadata !3823, metadata !1752), !dbg !5095
  %pb.addr.i5 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i5, metadata !3807, metadata !1752), !dbg !5096
  %val.addr.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i6, metadata !3813, metadata !1752), !dbg !5098
  %i.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i7, metadata !3815, metadata !1752), !dbg !5099
  %pbits.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i8, metadata !3817, metadata !1752), !dbg !5100
  %bits.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i9, metadata !3819, metadata !1752), !dbg !5101
  %topbit.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i10, metadata !3821, metadata !1752), !dbg !5102
  %maxval.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i11, metadata !3823, metadata !1752), !dbg !5103
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5104
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5106
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5107
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5108
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5109
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5110
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5111
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5112, metadata !1752), !dbg !5113
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5114
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5115
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5116
  %ver = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 4, !dbg !5117
  %major = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %ver, i32 0, i32 0, !dbg !5118
  %2 = load i32, i32* %major, align 8, !dbg !5118
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5119
  store i32 %2, i32* %val.addr.i, align 4, !dbg !5119
  store i32 0, i32* %pbits.i, align 4, !dbg !5108
  store i32 0, i32* %bits.i, align 4, !dbg !5109
  store i32 1, i32* %topbit.i, align 4, !dbg !5110
  store i32 1, i32* %maxval.i, align 4, !dbg !5111
  %3 = load i32, i32* %val.addr.i, align 4, !dbg !5120
  %inc.i = add i32 %3, 1, !dbg !5120
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5120
  %tobool.i = icmp ne i32 %3, 0, !dbg !5120
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5121

if.then.i:                                        ; preds = %entry
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5122
  call void @put_bits(%struct.PutBitContext* %4, i32 1, i32 1) #9, !dbg !5123
  br label %put_vc2_ue_uint.exit, !dbg !5124

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !5125

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %5 = load i32, i32* %val.addr.i, align 4, !dbg !5126
  %6 = load i32, i32* %maxval.i, align 4, !dbg !5127
  %cmp.i = icmp ugt i32 %5, %6, !dbg !5128
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5129

while.body.i:                                     ; preds = %while.cond.i
  %7 = load i32, i32* %topbit.i, align 4, !dbg !5130
  %shl.i = shl i32 %7, 1, !dbg !5130
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5130
  %8 = load i32, i32* %maxval.i, align 4, !dbg !5131
  %shl1.i = shl i32 %8, 1, !dbg !5131
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5131
  %9 = load i32, i32* %maxval.i, align 4, !dbg !5132
  %or.i = or i32 %9, 1, !dbg !5132
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5132
  br label %while.cond.i, !dbg !5133, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %10 = load i32, i32* %topbit.i, align 4, !dbg !5134
  %or2.i = or i32 %10, 1, !dbg !5135
  %11 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5136
  %sub.i = sub nsw i32 31, %11, !dbg !5137
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5138
  store i32 0, i32* %i.i, align 4, !dbg !5139
  br label %for.cond.i, !dbg !5140

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %12 = load i32, i32* %i.i, align 4, !dbg !5141
  %13 = load i32, i32* %bits.i, align 4, !dbg !5142
  %cmp3.i = icmp slt i32 %12, %13, !dbg !5143
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5144

for.body.i:                                       ; preds = %for.cond.i
  %14 = load i32, i32* %topbit.i, align 4, !dbg !5145
  %shr.i = ashr i32 %14, 1, !dbg !5145
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5145
  %15 = load i32, i32* %pbits.i, align 4, !dbg !5146
  %shl4.i = shl i32 %15, 2, !dbg !5146
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5146
  %16 = load i32, i32* %val.addr.i, align 4, !dbg !5147
  %17 = load i32, i32* %topbit.i, align 4, !dbg !5148
  %and.i = and i32 %16, %17, !dbg !5149
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5149
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5150

if.then6.i:                                       ; preds = %for.body.i
  %18 = load i32, i32* %pbits.i, align 4, !dbg !5151
  %or7.i = or i32 %18, 1, !dbg !5151
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5151
  br label %if.end8.i, !dbg !5152

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %19 = load i32, i32* %i.i, align 4, !dbg !5153
  %inc9.i = add nsw i32 %19, 1, !dbg !5153
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5153
  br label %for.cond.i, !dbg !5154, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5155
  %21 = load i32, i32* %bits.i, align 4, !dbg !5156
  %mul.i = mul nsw i32 %21, 2, !dbg !5157
  %add.i = add nsw i32 %mul.i, 1, !dbg !5158
  %22 = load i32, i32* %pbits.i, align 4, !dbg !5159
  %shl10.i = shl i32 %22, 1, !dbg !5160
  %or11.i = or i32 %shl10.i, 1, !dbg !5161
  call void @put_bits(%struct.PutBitContext* %20, i32 %add.i, i32 %or11.i) #9, !dbg !5162
  br label %put_vc2_ue_uint.exit, !dbg !5163

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5164
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 1, !dbg !5165
  %24 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5166
  %ver2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %24, i32 0, i32 4, !dbg !5167
  %minor = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %ver2, i32 0, i32 1, !dbg !5168
  %25 = load i32, i32* %minor, align 4, !dbg !5168
  store %struct.PutBitContext* %pb1, %struct.PutBitContext** %pb.addr.i5, align 8, !dbg !5169
  store i32 %25, i32* %val.addr.i6, align 4, !dbg !5169
  store i32 0, i32* %pbits.i8, align 4, !dbg !5100
  store i32 0, i32* %bits.i9, align 4, !dbg !5101
  store i32 1, i32* %topbit.i10, align 4, !dbg !5102
  store i32 1, i32* %maxval.i11, align 4, !dbg !5103
  %26 = load i32, i32* %val.addr.i6, align 4, !dbg !5170
  %inc.i12 = add i32 %26, 1, !dbg !5170
  store i32 %inc.i12, i32* %val.addr.i6, align 4, !dbg !5170
  %tobool.i13 = icmp ne i32 %26, 0, !dbg !5170
  br i1 %tobool.i13, label %if.end.i15, label %if.then.i14, !dbg !5171

if.then.i14:                                      ; preds = %put_vc2_ue_uint.exit
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i5, align 8, !dbg !5172
  call void @put_bits(%struct.PutBitContext* %27, i32 1, i32 1) #9, !dbg !5173
  br label %put_vc2_ue_uint.exit41, !dbg !5174

if.end.i15:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i17, !dbg !5175

while.cond.i17:                                   ; preds = %while.body.i21, %if.end.i15
  %28 = load i32, i32* %val.addr.i6, align 4, !dbg !5176
  %29 = load i32, i32* %maxval.i11, align 4, !dbg !5177
  %cmp.i16 = icmp ugt i32 %28, %29, !dbg !5178
  br i1 %cmp.i16, label %while.body.i21, label %while.end.i24, !dbg !5179

while.body.i21:                                   ; preds = %while.cond.i17
  %30 = load i32, i32* %topbit.i10, align 4, !dbg !5180
  %shl.i18 = shl i32 %30, 1, !dbg !5180
  store i32 %shl.i18, i32* %topbit.i10, align 4, !dbg !5180
  %31 = load i32, i32* %maxval.i11, align 4, !dbg !5181
  %shl1.i19 = shl i32 %31, 1, !dbg !5181
  store i32 %shl1.i19, i32* %maxval.i11, align 4, !dbg !5181
  %32 = load i32, i32* %maxval.i11, align 4, !dbg !5182
  %or.i20 = or i32 %32, 1, !dbg !5182
  store i32 %or.i20, i32* %maxval.i11, align 4, !dbg !5182
  br label %while.cond.i17, !dbg !5183, !llvm.loop !3864

while.end.i24:                                    ; preds = %while.cond.i17
  %33 = load i32, i32* %topbit.i10, align 4, !dbg !5184
  %or2.i22 = or i32 %33, 1, !dbg !5185
  %34 = call i32 @llvm.ctlz.i32(i32 %or2.i22, i1 true) #9, !dbg !5186
  %sub.i23 = sub nsw i32 31, %34, !dbg !5187
  store i32 %sub.i23, i32* %bits.i9, align 4, !dbg !5188
  store i32 0, i32* %i.i7, align 4, !dbg !5189
  br label %for.cond.i26, !dbg !5190

for.cond.i26:                                     ; preds = %if.end8.i34, %while.end.i24
  %35 = load i32, i32* %i.i7, align 4, !dbg !5191
  %36 = load i32, i32* %bits.i9, align 4, !dbg !5192
  %cmp3.i25 = icmp slt i32 %35, %36, !dbg !5193
  br i1 %cmp3.i25, label %for.body.i31, label %for.end.i40, !dbg !5194

for.body.i31:                                     ; preds = %for.cond.i26
  %37 = load i32, i32* %topbit.i10, align 4, !dbg !5195
  %shr.i27 = ashr i32 %37, 1, !dbg !5195
  store i32 %shr.i27, i32* %topbit.i10, align 4, !dbg !5195
  %38 = load i32, i32* %pbits.i8, align 4, !dbg !5196
  %shl4.i28 = shl i32 %38, 2, !dbg !5196
  store i32 %shl4.i28, i32* %pbits.i8, align 4, !dbg !5196
  %39 = load i32, i32* %val.addr.i6, align 4, !dbg !5197
  %40 = load i32, i32* %topbit.i10, align 4, !dbg !5198
  %and.i29 = and i32 %39, %40, !dbg !5199
  %tobool5.i30 = icmp ne i32 %and.i29, 0, !dbg !5199
  br i1 %tobool5.i30, label %if.then6.i33, label %if.end8.i34, !dbg !5200

if.then6.i33:                                     ; preds = %for.body.i31
  %41 = load i32, i32* %pbits.i8, align 4, !dbg !5201
  %or7.i32 = or i32 %41, 1, !dbg !5201
  store i32 %or7.i32, i32* %pbits.i8, align 4, !dbg !5201
  br label %if.end8.i34, !dbg !5202

if.end8.i34:                                      ; preds = %if.then6.i33, %for.body.i31
  %42 = load i32, i32* %i.i7, align 4, !dbg !5203
  %inc9.i35 = add nsw i32 %42, 1, !dbg !5203
  store i32 %inc9.i35, i32* %i.i7, align 4, !dbg !5203
  br label %for.cond.i26, !dbg !5204, !llvm.loop !3893

for.end.i40:                                      ; preds = %for.cond.i26
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i5, align 8, !dbg !5205
  %44 = load i32, i32* %bits.i9, align 4, !dbg !5206
  %mul.i36 = mul nsw i32 %44, 2, !dbg !5207
  %add.i37 = add nsw i32 %mul.i36, 1, !dbg !5208
  %45 = load i32, i32* %pbits.i8, align 4, !dbg !5209
  %shl10.i38 = shl i32 %45, 1, !dbg !5210
  %or11.i39 = or i32 %shl10.i38, 1, !dbg !5211
  call void @put_bits(%struct.PutBitContext* %43, i32 %add.i37, i32 %or11.i39) #9, !dbg !5212
  br label %put_vc2_ue_uint.exit41, !dbg !5213

put_vc2_ue_uint.exit41:                           ; preds = %if.then.i14, %for.end.i40
  %46 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5214
  %pb3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %46, i32 0, i32 1, !dbg !5215
  %47 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5216
  %profile = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %47, i32 0, i32 13, !dbg !5217
  %48 = load i32, i32* %profile, align 8, !dbg !5217
  store %struct.PutBitContext* %pb3, %struct.PutBitContext** %pb.addr.i42, align 8, !dbg !5218
  store i32 %48, i32* %val.addr.i43, align 4, !dbg !5218
  store i32 0, i32* %pbits.i45, align 4, !dbg !5092
  store i32 0, i32* %bits.i46, align 4, !dbg !5093
  store i32 1, i32* %topbit.i47, align 4, !dbg !5094
  store i32 1, i32* %maxval.i48, align 4, !dbg !5095
  %49 = load i32, i32* %val.addr.i43, align 4, !dbg !5219
  %inc.i49 = add i32 %49, 1, !dbg !5219
  store i32 %inc.i49, i32* %val.addr.i43, align 4, !dbg !5219
  %tobool.i50 = icmp ne i32 %49, 0, !dbg !5219
  br i1 %tobool.i50, label %if.end.i52, label %if.then.i51, !dbg !5220

if.then.i51:                                      ; preds = %put_vc2_ue_uint.exit41
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i42, align 8, !dbg !5221
  call void @put_bits(%struct.PutBitContext* %50, i32 1, i32 1) #9, !dbg !5222
  br label %put_vc2_ue_uint.exit78, !dbg !5223

if.end.i52:                                       ; preds = %put_vc2_ue_uint.exit41
  br label %while.cond.i54, !dbg !5224

while.cond.i54:                                   ; preds = %while.body.i58, %if.end.i52
  %51 = load i32, i32* %val.addr.i43, align 4, !dbg !5225
  %52 = load i32, i32* %maxval.i48, align 4, !dbg !5226
  %cmp.i53 = icmp ugt i32 %51, %52, !dbg !5227
  br i1 %cmp.i53, label %while.body.i58, label %while.end.i61, !dbg !5228

while.body.i58:                                   ; preds = %while.cond.i54
  %53 = load i32, i32* %topbit.i47, align 4, !dbg !5229
  %shl.i55 = shl i32 %53, 1, !dbg !5229
  store i32 %shl.i55, i32* %topbit.i47, align 4, !dbg !5229
  %54 = load i32, i32* %maxval.i48, align 4, !dbg !5230
  %shl1.i56 = shl i32 %54, 1, !dbg !5230
  store i32 %shl1.i56, i32* %maxval.i48, align 4, !dbg !5230
  %55 = load i32, i32* %maxval.i48, align 4, !dbg !5231
  %or.i57 = or i32 %55, 1, !dbg !5231
  store i32 %or.i57, i32* %maxval.i48, align 4, !dbg !5231
  br label %while.cond.i54, !dbg !5232, !llvm.loop !3864

while.end.i61:                                    ; preds = %while.cond.i54
  %56 = load i32, i32* %topbit.i47, align 4, !dbg !5233
  %or2.i59 = or i32 %56, 1, !dbg !5234
  %57 = call i32 @llvm.ctlz.i32(i32 %or2.i59, i1 true) #9, !dbg !5235
  %sub.i60 = sub nsw i32 31, %57, !dbg !5236
  store i32 %sub.i60, i32* %bits.i46, align 4, !dbg !5237
  store i32 0, i32* %i.i44, align 4, !dbg !5238
  br label %for.cond.i63, !dbg !5239

for.cond.i63:                                     ; preds = %if.end8.i71, %while.end.i61
  %58 = load i32, i32* %i.i44, align 4, !dbg !5240
  %59 = load i32, i32* %bits.i46, align 4, !dbg !5241
  %cmp3.i62 = icmp slt i32 %58, %59, !dbg !5242
  br i1 %cmp3.i62, label %for.body.i68, label %for.end.i77, !dbg !5243

for.body.i68:                                     ; preds = %for.cond.i63
  %60 = load i32, i32* %topbit.i47, align 4, !dbg !5244
  %shr.i64 = ashr i32 %60, 1, !dbg !5244
  store i32 %shr.i64, i32* %topbit.i47, align 4, !dbg !5244
  %61 = load i32, i32* %pbits.i45, align 4, !dbg !5245
  %shl4.i65 = shl i32 %61, 2, !dbg !5245
  store i32 %shl4.i65, i32* %pbits.i45, align 4, !dbg !5245
  %62 = load i32, i32* %val.addr.i43, align 4, !dbg !5246
  %63 = load i32, i32* %topbit.i47, align 4, !dbg !5247
  %and.i66 = and i32 %62, %63, !dbg !5248
  %tobool5.i67 = icmp ne i32 %and.i66, 0, !dbg !5248
  br i1 %tobool5.i67, label %if.then6.i70, label %if.end8.i71, !dbg !5249

if.then6.i70:                                     ; preds = %for.body.i68
  %64 = load i32, i32* %pbits.i45, align 4, !dbg !5250
  %or7.i69 = or i32 %64, 1, !dbg !5250
  store i32 %or7.i69, i32* %pbits.i45, align 4, !dbg !5250
  br label %if.end8.i71, !dbg !5251

if.end8.i71:                                      ; preds = %if.then6.i70, %for.body.i68
  %65 = load i32, i32* %i.i44, align 4, !dbg !5252
  %inc9.i72 = add nsw i32 %65, 1, !dbg !5252
  store i32 %inc9.i72, i32* %i.i44, align 4, !dbg !5252
  br label %for.cond.i63, !dbg !5253, !llvm.loop !3893

for.end.i77:                                      ; preds = %for.cond.i63
  %66 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i42, align 8, !dbg !5254
  %67 = load i32, i32* %bits.i46, align 4, !dbg !5255
  %mul.i73 = mul nsw i32 %67, 2, !dbg !5256
  %add.i74 = add nsw i32 %mul.i73, 1, !dbg !5257
  %68 = load i32, i32* %pbits.i45, align 4, !dbg !5258
  %shl10.i75 = shl i32 %68, 1, !dbg !5259
  %or11.i76 = or i32 %shl10.i75, 1, !dbg !5260
  call void @put_bits(%struct.PutBitContext* %66, i32 %add.i74, i32 %or11.i76) #9, !dbg !5261
  br label %put_vc2_ue_uint.exit78, !dbg !5262

put_vc2_ue_uint.exit78:                           ; preds = %if.then.i51, %for.end.i77
  %69 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5263
  %pb4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %69, i32 0, i32 1, !dbg !5264
  %70 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5265
  %level = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %70, i32 0, i32 12, !dbg !5266
  %71 = load i32, i32* %level, align 4, !dbg !5266
  store %struct.PutBitContext* %pb4, %struct.PutBitContext** %pb.addr.i79, align 8, !dbg !5267
  store i32 %71, i32* %val.addr.i80, align 4, !dbg !5267
  store i32 0, i32* %pbits.i82, align 4, !dbg !5084
  store i32 0, i32* %bits.i83, align 4, !dbg !5085
  store i32 1, i32* %topbit.i84, align 4, !dbg !5086
  store i32 1, i32* %maxval.i85, align 4, !dbg !5087
  %72 = load i32, i32* %val.addr.i80, align 4, !dbg !5268
  %inc.i86 = add i32 %72, 1, !dbg !5268
  store i32 %inc.i86, i32* %val.addr.i80, align 4, !dbg !5268
  %tobool.i87 = icmp ne i32 %72, 0, !dbg !5268
  br i1 %tobool.i87, label %if.end.i89, label %if.then.i88, !dbg !5269

if.then.i88:                                      ; preds = %put_vc2_ue_uint.exit78
  %73 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i79, align 8, !dbg !5270
  call void @put_bits(%struct.PutBitContext* %73, i32 1, i32 1) #9, !dbg !5271
  br label %put_vc2_ue_uint.exit115, !dbg !5272

if.end.i89:                                       ; preds = %put_vc2_ue_uint.exit78
  br label %while.cond.i91, !dbg !5273

while.cond.i91:                                   ; preds = %while.body.i95, %if.end.i89
  %74 = load i32, i32* %val.addr.i80, align 4, !dbg !5274
  %75 = load i32, i32* %maxval.i85, align 4, !dbg !5275
  %cmp.i90 = icmp ugt i32 %74, %75, !dbg !5276
  br i1 %cmp.i90, label %while.body.i95, label %while.end.i98, !dbg !5277

while.body.i95:                                   ; preds = %while.cond.i91
  %76 = load i32, i32* %topbit.i84, align 4, !dbg !5278
  %shl.i92 = shl i32 %76, 1, !dbg !5278
  store i32 %shl.i92, i32* %topbit.i84, align 4, !dbg !5278
  %77 = load i32, i32* %maxval.i85, align 4, !dbg !5279
  %shl1.i93 = shl i32 %77, 1, !dbg !5279
  store i32 %shl1.i93, i32* %maxval.i85, align 4, !dbg !5279
  %78 = load i32, i32* %maxval.i85, align 4, !dbg !5280
  %or.i94 = or i32 %78, 1, !dbg !5280
  store i32 %or.i94, i32* %maxval.i85, align 4, !dbg !5280
  br label %while.cond.i91, !dbg !5281, !llvm.loop !3864

while.end.i98:                                    ; preds = %while.cond.i91
  %79 = load i32, i32* %topbit.i84, align 4, !dbg !5282
  %or2.i96 = or i32 %79, 1, !dbg !5283
  %80 = call i32 @llvm.ctlz.i32(i32 %or2.i96, i1 true) #9, !dbg !5284
  %sub.i97 = sub nsw i32 31, %80, !dbg !5285
  store i32 %sub.i97, i32* %bits.i83, align 4, !dbg !5286
  store i32 0, i32* %i.i81, align 4, !dbg !5287
  br label %for.cond.i100, !dbg !5288

for.cond.i100:                                    ; preds = %if.end8.i108, %while.end.i98
  %81 = load i32, i32* %i.i81, align 4, !dbg !5289
  %82 = load i32, i32* %bits.i83, align 4, !dbg !5290
  %cmp3.i99 = icmp slt i32 %81, %82, !dbg !5291
  br i1 %cmp3.i99, label %for.body.i105, label %for.end.i114, !dbg !5292

for.body.i105:                                    ; preds = %for.cond.i100
  %83 = load i32, i32* %topbit.i84, align 4, !dbg !5293
  %shr.i101 = ashr i32 %83, 1, !dbg !5293
  store i32 %shr.i101, i32* %topbit.i84, align 4, !dbg !5293
  %84 = load i32, i32* %pbits.i82, align 4, !dbg !5294
  %shl4.i102 = shl i32 %84, 2, !dbg !5294
  store i32 %shl4.i102, i32* %pbits.i82, align 4, !dbg !5294
  %85 = load i32, i32* %val.addr.i80, align 4, !dbg !5295
  %86 = load i32, i32* %topbit.i84, align 4, !dbg !5296
  %and.i103 = and i32 %85, %86, !dbg !5297
  %tobool5.i104 = icmp ne i32 %and.i103, 0, !dbg !5297
  br i1 %tobool5.i104, label %if.then6.i107, label %if.end8.i108, !dbg !5298

if.then6.i107:                                    ; preds = %for.body.i105
  %87 = load i32, i32* %pbits.i82, align 4, !dbg !5299
  %or7.i106 = or i32 %87, 1, !dbg !5299
  store i32 %or7.i106, i32* %pbits.i82, align 4, !dbg !5299
  br label %if.end8.i108, !dbg !5300

if.end8.i108:                                     ; preds = %if.then6.i107, %for.body.i105
  %88 = load i32, i32* %i.i81, align 4, !dbg !5301
  %inc9.i109 = add nsw i32 %88, 1, !dbg !5301
  store i32 %inc9.i109, i32* %i.i81, align 4, !dbg !5301
  br label %for.cond.i100, !dbg !5302, !llvm.loop !3893

for.end.i114:                                     ; preds = %for.cond.i100
  %89 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i79, align 8, !dbg !5303
  %90 = load i32, i32* %bits.i83, align 4, !dbg !5304
  %mul.i110 = mul nsw i32 %90, 2, !dbg !5305
  %add.i111 = add nsw i32 %mul.i110, 1, !dbg !5306
  %91 = load i32, i32* %pbits.i82, align 4, !dbg !5307
  %shl10.i112 = shl i32 %91, 1, !dbg !5308
  %or11.i113 = or i32 %shl10.i112, 1, !dbg !5309
  call void @put_bits(%struct.PutBitContext* %89, i32 %add.i111, i32 %or11.i113) #9, !dbg !5310
  br label %put_vc2_ue_uint.exit115, !dbg !5311

put_vc2_ue_uint.exit115:                          ; preds = %if.then.i88, %for.end.i114
  ret void, !dbg !5312
}

; Function Attrs: nounwind uwtable
define internal void @encode_source_params(%struct.VC2EncContext* %s) #4 !dbg !5313 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5314, metadata !1752), !dbg !5315
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5316
  call void @encode_frame_size(%struct.VC2EncContext* %0), !dbg !5317
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5318
  call void @encode_sample_fmt(%struct.VC2EncContext* %1), !dbg !5319
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5320
  call void @encode_scan_format(%struct.VC2EncContext* %2), !dbg !5321
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5322
  call void @encode_frame_rate(%struct.VC2EncContext* %3), !dbg !5323
  %4 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5324
  call void @encode_aspect_ratio(%struct.VC2EncContext* %4), !dbg !5325
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5326
  call void @encode_clean_area(%struct.VC2EncContext* %5), !dbg !5327
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5328
  call void @encode_signal_range(%struct.VC2EncContext* %6), !dbg !5329
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5330
  call void @encode_color_spec(%struct.VC2EncContext* %7), !dbg !5331
  ret void, !dbg !5332
}

; Function Attrs: nounwind uwtable
define internal void @encode_frame_size(%struct.VC2EncContext* %s) #4 !dbg !5333 {
entry:
  %pb.addr.i6 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i6, metadata !3807, metadata !1752), !dbg !5334
  %val.addr.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i7, metadata !3813, metadata !1752), !dbg !5338
  %i.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i8, metadata !3815, metadata !1752), !dbg !5339
  %pbits.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i9, metadata !3817, metadata !1752), !dbg !5340
  %bits.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i10, metadata !3819, metadata !1752), !dbg !5341
  %topbit.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i11, metadata !3821, metadata !1752), !dbg !5342
  %maxval.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i12, metadata !3823, metadata !1752), !dbg !5343
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5344
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5346
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5347
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5348
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5349
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5350
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5351
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5352, metadata !1752), !dbg !5353
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5354
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5355
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5356
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !5357
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !5357
  %tobool = icmp ne i32 %2, 0, !dbg !5358
  %lnot = xor i1 %tobool, true, !dbg !5358
  %lnot.ext = zext i1 %lnot to i32, !dbg !5358
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5359
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5360
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !5361
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !5361
  %tobool2 = icmp ne i32 %4, 0, !dbg !5360
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5362

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5363, metadata !1752), !dbg !5364
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5365
  %avctx3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 3, !dbg !5366
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !5366
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %avctx, align 8, !dbg !5364
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5367
  %pb4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 1, !dbg !5368
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5369
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 20, !dbg !5370
  %9 = load i32, i32* %width, align 4, !dbg !5370
  store %struct.PutBitContext* %pb4, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5371
  store i32 %9, i32* %val.addr.i, align 4, !dbg !5371
  store i32 0, i32* %pbits.i, align 4, !dbg !5348
  store i32 0, i32* %bits.i, align 4, !dbg !5349
  store i32 1, i32* %topbit.i, align 4, !dbg !5350
  store i32 1, i32* %maxval.i, align 4, !dbg !5351
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !5372
  %inc.i = add i32 %10, 1, !dbg !5372
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5372
  %tobool.i = icmp ne i32 %10, 0, !dbg !5372
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5373

if.then.i:                                        ; preds = %if.then
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5374
  call void @put_bits(%struct.PutBitContext* %11, i32 1, i32 1) #9, !dbg !5375
  br label %put_vc2_ue_uint.exit, !dbg !5376

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !5377

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %12 = load i32, i32* %val.addr.i, align 4, !dbg !5378
  %13 = load i32, i32* %maxval.i, align 4, !dbg !5379
  %cmp.i = icmp ugt i32 %12, %13, !dbg !5380
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5381

while.body.i:                                     ; preds = %while.cond.i
  %14 = load i32, i32* %topbit.i, align 4, !dbg !5382
  %shl.i = shl i32 %14, 1, !dbg !5382
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5382
  %15 = load i32, i32* %maxval.i, align 4, !dbg !5383
  %shl1.i = shl i32 %15, 1, !dbg !5383
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5383
  %16 = load i32, i32* %maxval.i, align 4, !dbg !5384
  %or.i = or i32 %16, 1, !dbg !5384
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5384
  br label %while.cond.i, !dbg !5385, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %17 = load i32, i32* %topbit.i, align 4, !dbg !5386
  %or2.i = or i32 %17, 1, !dbg !5387
  %18 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5388
  %sub.i = sub nsw i32 31, %18, !dbg !5389
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5390
  store i32 0, i32* %i.i, align 4, !dbg !5391
  br label %for.cond.i, !dbg !5392

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %19 = load i32, i32* %i.i, align 4, !dbg !5393
  %20 = load i32, i32* %bits.i, align 4, !dbg !5394
  %cmp3.i = icmp slt i32 %19, %20, !dbg !5395
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5396

for.body.i:                                       ; preds = %for.cond.i
  %21 = load i32, i32* %topbit.i, align 4, !dbg !5397
  %shr.i = ashr i32 %21, 1, !dbg !5397
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5397
  %22 = load i32, i32* %pbits.i, align 4, !dbg !5398
  %shl4.i = shl i32 %22, 2, !dbg !5398
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5398
  %23 = load i32, i32* %val.addr.i, align 4, !dbg !5399
  %24 = load i32, i32* %topbit.i, align 4, !dbg !5400
  %and.i = and i32 %23, %24, !dbg !5401
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5401
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5402

if.then6.i:                                       ; preds = %for.body.i
  %25 = load i32, i32* %pbits.i, align 4, !dbg !5403
  %or7.i = or i32 %25, 1, !dbg !5403
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5403
  br label %if.end8.i, !dbg !5404

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %26 = load i32, i32* %i.i, align 4, !dbg !5405
  %inc9.i = add nsw i32 %26, 1, !dbg !5405
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5405
  br label %for.cond.i, !dbg !5406, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5407
  %28 = load i32, i32* %bits.i, align 4, !dbg !5408
  %mul.i = mul nsw i32 %28, 2, !dbg !5409
  %add.i = add nsw i32 %mul.i, 1, !dbg !5410
  %29 = load i32, i32* %pbits.i, align 4, !dbg !5411
  %shl10.i = shl i32 %29, 1, !dbg !5412
  %or11.i = or i32 %shl10.i, 1, !dbg !5413
  call void @put_bits(%struct.PutBitContext* %27, i32 %add.i, i32 %or11.i) #9, !dbg !5414
  br label %put_vc2_ue_uint.exit, !dbg !5415

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %30 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5416
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %30, i32 0, i32 1, !dbg !5417
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5418
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 21, !dbg !5419
  %32 = load i32, i32* %height, align 8, !dbg !5419
  store %struct.PutBitContext* %pb5, %struct.PutBitContext** %pb.addr.i6, align 8, !dbg !5420
  store i32 %32, i32* %val.addr.i7, align 4, !dbg !5420
  store i32 0, i32* %pbits.i9, align 4, !dbg !5340
  store i32 0, i32* %bits.i10, align 4, !dbg !5341
  store i32 1, i32* %topbit.i11, align 4, !dbg !5342
  store i32 1, i32* %maxval.i12, align 4, !dbg !5343
  %33 = load i32, i32* %val.addr.i7, align 4, !dbg !5421
  %inc.i13 = add i32 %33, 1, !dbg !5421
  store i32 %inc.i13, i32* %val.addr.i7, align 4, !dbg !5421
  %tobool.i14 = icmp ne i32 %33, 0, !dbg !5421
  br i1 %tobool.i14, label %if.end.i16, label %if.then.i15, !dbg !5422

if.then.i15:                                      ; preds = %put_vc2_ue_uint.exit
  %34 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i6, align 8, !dbg !5423
  call void @put_bits(%struct.PutBitContext* %34, i32 1, i32 1) #9, !dbg !5424
  br label %put_vc2_ue_uint.exit42, !dbg !5425

if.end.i16:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i18, !dbg !5426

while.cond.i18:                                   ; preds = %while.body.i22, %if.end.i16
  %35 = load i32, i32* %val.addr.i7, align 4, !dbg !5427
  %36 = load i32, i32* %maxval.i12, align 4, !dbg !5428
  %cmp.i17 = icmp ugt i32 %35, %36, !dbg !5429
  br i1 %cmp.i17, label %while.body.i22, label %while.end.i25, !dbg !5430

while.body.i22:                                   ; preds = %while.cond.i18
  %37 = load i32, i32* %topbit.i11, align 4, !dbg !5431
  %shl.i19 = shl i32 %37, 1, !dbg !5431
  store i32 %shl.i19, i32* %topbit.i11, align 4, !dbg !5431
  %38 = load i32, i32* %maxval.i12, align 4, !dbg !5432
  %shl1.i20 = shl i32 %38, 1, !dbg !5432
  store i32 %shl1.i20, i32* %maxval.i12, align 4, !dbg !5432
  %39 = load i32, i32* %maxval.i12, align 4, !dbg !5433
  %or.i21 = or i32 %39, 1, !dbg !5433
  store i32 %or.i21, i32* %maxval.i12, align 4, !dbg !5433
  br label %while.cond.i18, !dbg !5434, !llvm.loop !3864

while.end.i25:                                    ; preds = %while.cond.i18
  %40 = load i32, i32* %topbit.i11, align 4, !dbg !5435
  %or2.i23 = or i32 %40, 1, !dbg !5436
  %41 = call i32 @llvm.ctlz.i32(i32 %or2.i23, i1 true) #9, !dbg !5437
  %sub.i24 = sub nsw i32 31, %41, !dbg !5438
  store i32 %sub.i24, i32* %bits.i10, align 4, !dbg !5439
  store i32 0, i32* %i.i8, align 4, !dbg !5440
  br label %for.cond.i27, !dbg !5441

for.cond.i27:                                     ; preds = %if.end8.i35, %while.end.i25
  %42 = load i32, i32* %i.i8, align 4, !dbg !5442
  %43 = load i32, i32* %bits.i10, align 4, !dbg !5443
  %cmp3.i26 = icmp slt i32 %42, %43, !dbg !5444
  br i1 %cmp3.i26, label %for.body.i32, label %for.end.i41, !dbg !5445

for.body.i32:                                     ; preds = %for.cond.i27
  %44 = load i32, i32* %topbit.i11, align 4, !dbg !5446
  %shr.i28 = ashr i32 %44, 1, !dbg !5446
  store i32 %shr.i28, i32* %topbit.i11, align 4, !dbg !5446
  %45 = load i32, i32* %pbits.i9, align 4, !dbg !5447
  %shl4.i29 = shl i32 %45, 2, !dbg !5447
  store i32 %shl4.i29, i32* %pbits.i9, align 4, !dbg !5447
  %46 = load i32, i32* %val.addr.i7, align 4, !dbg !5448
  %47 = load i32, i32* %topbit.i11, align 4, !dbg !5449
  %and.i30 = and i32 %46, %47, !dbg !5450
  %tobool5.i31 = icmp ne i32 %and.i30, 0, !dbg !5450
  br i1 %tobool5.i31, label %if.then6.i34, label %if.end8.i35, !dbg !5451

if.then6.i34:                                     ; preds = %for.body.i32
  %48 = load i32, i32* %pbits.i9, align 4, !dbg !5452
  %or7.i33 = or i32 %48, 1, !dbg !5452
  store i32 %or7.i33, i32* %pbits.i9, align 4, !dbg !5452
  br label %if.end8.i35, !dbg !5453

if.end8.i35:                                      ; preds = %if.then6.i34, %for.body.i32
  %49 = load i32, i32* %i.i8, align 4, !dbg !5454
  %inc9.i36 = add nsw i32 %49, 1, !dbg !5454
  store i32 %inc9.i36, i32* %i.i8, align 4, !dbg !5454
  br label %for.cond.i27, !dbg !5455, !llvm.loop !3893

for.end.i41:                                      ; preds = %for.cond.i27
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i6, align 8, !dbg !5456
  %51 = load i32, i32* %bits.i10, align 4, !dbg !5457
  %mul.i37 = mul nsw i32 %51, 2, !dbg !5458
  %add.i38 = add nsw i32 %mul.i37, 1, !dbg !5459
  %52 = load i32, i32* %pbits.i9, align 4, !dbg !5460
  %shl10.i39 = shl i32 %52, 1, !dbg !5461
  %or11.i40 = or i32 %shl10.i39, 1, !dbg !5462
  call void @put_bits(%struct.PutBitContext* %50, i32 %add.i38, i32 %or11.i40) #9, !dbg !5463
  br label %put_vc2_ue_uint.exit42, !dbg !5464

put_vc2_ue_uint.exit42:                           ; preds = %if.then.i15, %for.end.i41
  br label %if.end, !dbg !5465

if.end:                                           ; preds = %put_vc2_ue_uint.exit42, %entry
  ret void, !dbg !5466
}

; Function Attrs: nounwind uwtable
define internal void @encode_sample_fmt(%struct.VC2EncContext* %s) #4 !dbg !5467 {
entry:
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5468
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5472
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5473
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5474
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5475
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5476
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5477
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %idx = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5478, metadata !1752), !dbg !5479
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5480
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5481
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5482
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !5483
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !5483
  %tobool = icmp ne i32 %2, 0, !dbg !5484
  %lnot = xor i1 %tobool, true, !dbg !5484
  %lnot.ext = zext i1 %lnot to i32, !dbg !5484
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5485
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5486
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !5487
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !5487
  %tobool2 = icmp ne i32 %4, 0, !dbg !5486
  br i1 %tobool2, label %if.end14, label %if.then, !dbg !5488

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5489, metadata !1752), !dbg !5490
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5491
  %chroma_x_shift = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 21, !dbg !5493
  %6 = load i32, i32* %chroma_x_shift, align 4, !dbg !5493
  %cmp = icmp eq i32 %6, 1, !dbg !5494
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5495

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5496
  %chroma_y_shift = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 22, !dbg !5498
  %8 = load i32, i32* %chroma_y_shift, align 8, !dbg !5498
  %cmp3 = icmp eq i32 %8, 0, !dbg !5499
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5500

if.then4:                                         ; preds = %land.lhs.true
  store i32 1, i32* %idx, align 4, !dbg !5501
  br label %if.end12, !dbg !5502

if.else:                                          ; preds = %land.lhs.true, %if.then
  %9 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5503
  %chroma_x_shift5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %9, i32 0, i32 21, !dbg !5505
  %10 = load i32, i32* %chroma_x_shift5, align 4, !dbg !5505
  %cmp6 = icmp eq i32 %10, 1, !dbg !5506
  br i1 %cmp6, label %land.lhs.true7, label %if.else11, !dbg !5507

land.lhs.true7:                                   ; preds = %if.else
  %11 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5508
  %chroma_y_shift8 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %11, i32 0, i32 22, !dbg !5510
  %12 = load i32, i32* %chroma_y_shift8, align 8, !dbg !5510
  %cmp9 = icmp eq i32 %12, 1, !dbg !5511
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !5512

if.then10:                                        ; preds = %land.lhs.true7
  store i32 2, i32* %idx, align 4, !dbg !5513
  br label %if.end, !dbg !5514

if.else11:                                        ; preds = %land.lhs.true7, %if.else
  store i32 0, i32* %idx, align 4, !dbg !5515
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5516
  %pb13 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 1, !dbg !5517
  %14 = load i32, i32* %idx, align 4, !dbg !5518
  store %struct.PutBitContext* %pb13, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5519
  store i32 %14, i32* %val.addr.i, align 4, !dbg !5519
  store i32 0, i32* %pbits.i, align 4, !dbg !5474
  store i32 0, i32* %bits.i, align 4, !dbg !5475
  store i32 1, i32* %topbit.i, align 4, !dbg !5476
  store i32 1, i32* %maxval.i, align 4, !dbg !5477
  %15 = load i32, i32* %val.addr.i, align 4, !dbg !5520
  %inc.i = add i32 %15, 1, !dbg !5520
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5520
  %tobool.i = icmp ne i32 %15, 0, !dbg !5520
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5521

if.then.i:                                        ; preds = %if.end12
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5522
  call void @put_bits(%struct.PutBitContext* %16, i32 1, i32 1) #9, !dbg !5523
  br label %put_vc2_ue_uint.exit, !dbg !5524

if.end.i:                                         ; preds = %if.end12
  br label %while.cond.i, !dbg !5525

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %17 = load i32, i32* %val.addr.i, align 4, !dbg !5526
  %18 = load i32, i32* %maxval.i, align 4, !dbg !5527
  %cmp.i = icmp ugt i32 %17, %18, !dbg !5528
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5529

while.body.i:                                     ; preds = %while.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !5530
  %shl.i = shl i32 %19, 1, !dbg !5530
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5530
  %20 = load i32, i32* %maxval.i, align 4, !dbg !5531
  %shl1.i = shl i32 %20, 1, !dbg !5531
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5531
  %21 = load i32, i32* %maxval.i, align 4, !dbg !5532
  %or.i = or i32 %21, 1, !dbg !5532
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5532
  br label %while.cond.i, !dbg !5533, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %22 = load i32, i32* %topbit.i, align 4, !dbg !5534
  %or2.i = or i32 %22, 1, !dbg !5535
  %23 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5536
  %sub.i = sub nsw i32 31, %23, !dbg !5537
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5538
  store i32 0, i32* %i.i, align 4, !dbg !5539
  br label %for.cond.i, !dbg !5540

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5541
  %25 = load i32, i32* %bits.i, align 4, !dbg !5542
  %cmp3.i = icmp slt i32 %24, %25, !dbg !5543
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5544

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %topbit.i, align 4, !dbg !5545
  %shr.i = ashr i32 %26, 1, !dbg !5545
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5545
  %27 = load i32, i32* %pbits.i, align 4, !dbg !5546
  %shl4.i = shl i32 %27, 2, !dbg !5546
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5546
  %28 = load i32, i32* %val.addr.i, align 4, !dbg !5547
  %29 = load i32, i32* %topbit.i, align 4, !dbg !5548
  %and.i = and i32 %28, %29, !dbg !5549
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5549
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5550

if.then6.i:                                       ; preds = %for.body.i
  %30 = load i32, i32* %pbits.i, align 4, !dbg !5551
  %or7.i = or i32 %30, 1, !dbg !5551
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5551
  br label %if.end8.i, !dbg !5552

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %31 = load i32, i32* %i.i, align 4, !dbg !5553
  %inc9.i = add nsw i32 %31, 1, !dbg !5553
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5553
  br label %for.cond.i, !dbg !5554, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %32 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5555
  %33 = load i32, i32* %bits.i, align 4, !dbg !5556
  %mul.i = mul nsw i32 %33, 2, !dbg !5557
  %add.i = add nsw i32 %mul.i, 1, !dbg !5558
  %34 = load i32, i32* %pbits.i, align 4, !dbg !5559
  %shl10.i = shl i32 %34, 1, !dbg !5560
  %or11.i = or i32 %shl10.i, 1, !dbg !5561
  call void @put_bits(%struct.PutBitContext* %32, i32 %add.i, i32 %or11.i) #9, !dbg !5562
  br label %put_vc2_ue_uint.exit, !dbg !5563

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  br label %if.end14, !dbg !5564

if.end14:                                         ; preds = %put_vc2_ue_uint.exit, %entry
  ret void, !dbg !5565
}

; Function Attrs: nounwind uwtable
define internal void @encode_scan_format(%struct.VC2EncContext* %s) #4 !dbg !5566 {
entry:
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5567
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5570
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5571
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5572
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5573
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5574
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5575
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5576, metadata !1752), !dbg !5577
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5578
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5579
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5580
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !5581
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !5581
  %tobool = icmp ne i32 %2, 0, !dbg !5582
  %lnot = xor i1 %tobool, true, !dbg !5582
  %lnot.ext = zext i1 %lnot to i32, !dbg !5582
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5583
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5584
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !5585
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !5585
  %tobool2 = icmp ne i32 %4, 0, !dbg !5584
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5586

if.then:                                          ; preds = %entry
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5587
  %pb3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 1, !dbg !5588
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5589
  %interlaced = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 34, !dbg !5590
  %7 = load i32, i32* %interlaced, align 4, !dbg !5590
  store %struct.PutBitContext* %pb3, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5591
  store i32 %7, i32* %val.addr.i, align 4, !dbg !5591
  store i32 0, i32* %pbits.i, align 4, !dbg !5572
  store i32 0, i32* %bits.i, align 4, !dbg !5573
  store i32 1, i32* %topbit.i, align 4, !dbg !5574
  store i32 1, i32* %maxval.i, align 4, !dbg !5575
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !5592
  %inc.i = add i32 %8, 1, !dbg !5592
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5592
  %tobool.i = icmp ne i32 %8, 0, !dbg !5592
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5593

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5594
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !5595
  br label %put_vc2_ue_uint.exit, !dbg !5596

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !5597

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !5598
  %11 = load i32, i32* %maxval.i, align 4, !dbg !5599
  %cmp.i = icmp ugt i32 %10, %11, !dbg !5600
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5601

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !5602
  %shl.i = shl i32 %12, 1, !dbg !5602
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5602
  %13 = load i32, i32* %maxval.i, align 4, !dbg !5603
  %shl1.i = shl i32 %13, 1, !dbg !5603
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5603
  %14 = load i32, i32* %maxval.i, align 4, !dbg !5604
  %or.i = or i32 %14, 1, !dbg !5604
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5604
  br label %while.cond.i, !dbg !5605, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !5606
  %or2.i = or i32 %15, 1, !dbg !5607
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5608
  %sub.i = sub nsw i32 31, %16, !dbg !5609
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5610
  store i32 0, i32* %i.i, align 4, !dbg !5611
  br label %for.cond.i, !dbg !5612

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !5613
  %18 = load i32, i32* %bits.i, align 4, !dbg !5614
  %cmp3.i = icmp slt i32 %17, %18, !dbg !5615
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5616

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !5617
  %shr.i = ashr i32 %19, 1, !dbg !5617
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5617
  %20 = load i32, i32* %pbits.i, align 4, !dbg !5618
  %shl4.i = shl i32 %20, 2, !dbg !5618
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5618
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !5619
  %22 = load i32, i32* %topbit.i, align 4, !dbg !5620
  %and.i = and i32 %21, %22, !dbg !5621
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5621
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5622

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !5623
  %or7.i = or i32 %23, 1, !dbg !5623
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5623
  br label %if.end8.i, !dbg !5624

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5625
  %inc9.i = add nsw i32 %24, 1, !dbg !5625
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5625
  br label %for.cond.i, !dbg !5626, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5627
  %26 = load i32, i32* %bits.i, align 4, !dbg !5628
  %mul.i = mul nsw i32 %26, 2, !dbg !5629
  %add.i = add nsw i32 %mul.i, 1, !dbg !5630
  %27 = load i32, i32* %pbits.i, align 4, !dbg !5631
  %shl10.i = shl i32 %27, 1, !dbg !5632
  %or11.i = or i32 %shl10.i, 1, !dbg !5633
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !5634
  br label %put_vc2_ue_uint.exit, !dbg !5635

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  br label %if.end, !dbg !5591

if.end:                                           ; preds = %put_vc2_ue_uint.exit, %entry
  ret void, !dbg !5636
}

; Function Attrs: nounwind uwtable
define internal void @encode_frame_rate(%struct.VC2EncContext* %s) #4 !dbg !5637 {
entry:
  %pb.addr.i45 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i45, metadata !3807, metadata !1752), !dbg !5638
  %val.addr.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i46, metadata !3813, metadata !1752), !dbg !5642
  %i.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i47, metadata !3815, metadata !1752), !dbg !5643
  %pbits.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i48, metadata !3817, metadata !1752), !dbg !5644
  %bits.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i49, metadata !3819, metadata !1752), !dbg !5645
  %topbit.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i50, metadata !3821, metadata !1752), !dbg !5646
  %maxval.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i51, metadata !3823, metadata !1752), !dbg !5647
  %pb.addr.i8 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i8, metadata !3807, metadata !1752), !dbg !5648
  %val.addr.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i9, metadata !3813, metadata !1752), !dbg !5650
  %i.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i10, metadata !3815, metadata !1752), !dbg !5651
  %pbits.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i11, metadata !3817, metadata !1752), !dbg !5652
  %bits.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i12, metadata !3819, metadata !1752), !dbg !5653
  %topbit.i13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i13, metadata !3821, metadata !1752), !dbg !5654
  %maxval.i14 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i14, metadata !3823, metadata !1752), !dbg !5655
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5656
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5658
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5659
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5660
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5661
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5662
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5663
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5664, metadata !1752), !dbg !5665
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5666
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5667
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5668
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !5669
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !5669
  %tobool = icmp ne i32 %2, 0, !dbg !5670
  %lnot = xor i1 %tobool, true, !dbg !5670
  %lnot.ext = zext i1 %lnot to i32, !dbg !5670
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5671
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5672
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !5673
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !5673
  %tobool2 = icmp ne i32 %4, 0, !dbg !5672
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5674

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5675, metadata !1752), !dbg !5676
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5677
  %avctx3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 3, !dbg !5678
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !5678
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %avctx, align 8, !dbg !5676
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5679
  %pb4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 1, !dbg !5680
  store %struct.PutBitContext* %pb4, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5681
  store i32 0, i32* %val.addr.i, align 4, !dbg !5681
  store i32 0, i32* %pbits.i, align 4, !dbg !5660
  store i32 0, i32* %bits.i, align 4, !dbg !5661
  store i32 1, i32* %topbit.i, align 4, !dbg !5662
  store i32 1, i32* %maxval.i, align 4, !dbg !5663
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !5682
  %inc.i = add i32 %8, 1, !dbg !5682
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5682
  %tobool.i = icmp ne i32 %8, 0, !dbg !5682
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5683

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5684
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !5685
  br label %put_vc2_ue_uint.exit, !dbg !5686

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !5687

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !5688
  %11 = load i32, i32* %maxval.i, align 4, !dbg !5689
  %cmp.i = icmp ugt i32 %10, %11, !dbg !5690
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5691

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !5692
  %shl.i = shl i32 %12, 1, !dbg !5692
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5692
  %13 = load i32, i32* %maxval.i, align 4, !dbg !5693
  %shl1.i = shl i32 %13, 1, !dbg !5693
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5693
  %14 = load i32, i32* %maxval.i, align 4, !dbg !5694
  %or.i = or i32 %14, 1, !dbg !5694
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5694
  br label %while.cond.i, !dbg !5695, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !5696
  %or2.i = or i32 %15, 1, !dbg !5697
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5698
  %sub.i = sub nsw i32 31, %16, !dbg !5699
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5700
  store i32 0, i32* %i.i, align 4, !dbg !5701
  br label %for.cond.i, !dbg !5702

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !5703
  %18 = load i32, i32* %bits.i, align 4, !dbg !5704
  %cmp3.i = icmp slt i32 %17, %18, !dbg !5705
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5706

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !5707
  %shr.i = ashr i32 %19, 1, !dbg !5707
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5707
  %20 = load i32, i32* %pbits.i, align 4, !dbg !5708
  %shl4.i = shl i32 %20, 2, !dbg !5708
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5708
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !5709
  %22 = load i32, i32* %topbit.i, align 4, !dbg !5710
  %and.i = and i32 %21, %22, !dbg !5711
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5711
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5712

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !5713
  %or7.i = or i32 %23, 1, !dbg !5713
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5713
  br label %if.end8.i, !dbg !5714

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5715
  %inc9.i = add nsw i32 %24, 1, !dbg !5715
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5715
  br label %for.cond.i, !dbg !5716, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5717
  %26 = load i32, i32* %bits.i, align 4, !dbg !5718
  %mul.i = mul nsw i32 %26, 2, !dbg !5719
  %add.i = add nsw i32 %mul.i, 1, !dbg !5720
  %27 = load i32, i32* %pbits.i, align 4, !dbg !5721
  %shl10.i = shl i32 %27, 1, !dbg !5722
  %or11.i = or i32 %shl10.i, 1, !dbg !5723
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !5724
  br label %put_vc2_ue_uint.exit, !dbg !5725

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5726
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 1, !dbg !5727
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5728
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 17, !dbg !5729
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !5730
  %30 = load i32, i32* %den, align 4, !dbg !5730
  store %struct.PutBitContext* %pb5, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5731
  store i32 %30, i32* %val.addr.i9, align 4, !dbg !5731
  store i32 0, i32* %pbits.i11, align 4, !dbg !5652
  store i32 0, i32* %bits.i12, align 4, !dbg !5653
  store i32 1, i32* %topbit.i13, align 4, !dbg !5654
  store i32 1, i32* %maxval.i14, align 4, !dbg !5655
  %31 = load i32, i32* %val.addr.i9, align 4, !dbg !5732
  %inc.i15 = add i32 %31, 1, !dbg !5732
  store i32 %inc.i15, i32* %val.addr.i9, align 4, !dbg !5732
  %tobool.i16 = icmp ne i32 %31, 0, !dbg !5732
  br i1 %tobool.i16, label %if.end.i18, label %if.then.i17, !dbg !5733

if.then.i17:                                      ; preds = %put_vc2_ue_uint.exit
  %32 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5734
  call void @put_bits(%struct.PutBitContext* %32, i32 1, i32 1) #9, !dbg !5735
  br label %put_vc2_ue_uint.exit44, !dbg !5736

if.end.i18:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i20, !dbg !5737

while.cond.i20:                                   ; preds = %while.body.i24, %if.end.i18
  %33 = load i32, i32* %val.addr.i9, align 4, !dbg !5738
  %34 = load i32, i32* %maxval.i14, align 4, !dbg !5739
  %cmp.i19 = icmp ugt i32 %33, %34, !dbg !5740
  br i1 %cmp.i19, label %while.body.i24, label %while.end.i27, !dbg !5741

while.body.i24:                                   ; preds = %while.cond.i20
  %35 = load i32, i32* %topbit.i13, align 4, !dbg !5742
  %shl.i21 = shl i32 %35, 1, !dbg !5742
  store i32 %shl.i21, i32* %topbit.i13, align 4, !dbg !5742
  %36 = load i32, i32* %maxval.i14, align 4, !dbg !5743
  %shl1.i22 = shl i32 %36, 1, !dbg !5743
  store i32 %shl1.i22, i32* %maxval.i14, align 4, !dbg !5743
  %37 = load i32, i32* %maxval.i14, align 4, !dbg !5744
  %or.i23 = or i32 %37, 1, !dbg !5744
  store i32 %or.i23, i32* %maxval.i14, align 4, !dbg !5744
  br label %while.cond.i20, !dbg !5745, !llvm.loop !3864

while.end.i27:                                    ; preds = %while.cond.i20
  %38 = load i32, i32* %topbit.i13, align 4, !dbg !5746
  %or2.i25 = or i32 %38, 1, !dbg !5747
  %39 = call i32 @llvm.ctlz.i32(i32 %or2.i25, i1 true) #9, !dbg !5748
  %sub.i26 = sub nsw i32 31, %39, !dbg !5749
  store i32 %sub.i26, i32* %bits.i12, align 4, !dbg !5750
  store i32 0, i32* %i.i10, align 4, !dbg !5751
  br label %for.cond.i29, !dbg !5752

for.cond.i29:                                     ; preds = %if.end8.i37, %while.end.i27
  %40 = load i32, i32* %i.i10, align 4, !dbg !5753
  %41 = load i32, i32* %bits.i12, align 4, !dbg !5754
  %cmp3.i28 = icmp slt i32 %40, %41, !dbg !5755
  br i1 %cmp3.i28, label %for.body.i34, label %for.end.i43, !dbg !5756

for.body.i34:                                     ; preds = %for.cond.i29
  %42 = load i32, i32* %topbit.i13, align 4, !dbg !5757
  %shr.i30 = ashr i32 %42, 1, !dbg !5757
  store i32 %shr.i30, i32* %topbit.i13, align 4, !dbg !5757
  %43 = load i32, i32* %pbits.i11, align 4, !dbg !5758
  %shl4.i31 = shl i32 %43, 2, !dbg !5758
  store i32 %shl4.i31, i32* %pbits.i11, align 4, !dbg !5758
  %44 = load i32, i32* %val.addr.i9, align 4, !dbg !5759
  %45 = load i32, i32* %topbit.i13, align 4, !dbg !5760
  %and.i32 = and i32 %44, %45, !dbg !5761
  %tobool5.i33 = icmp ne i32 %and.i32, 0, !dbg !5761
  br i1 %tobool5.i33, label %if.then6.i36, label %if.end8.i37, !dbg !5762

if.then6.i36:                                     ; preds = %for.body.i34
  %46 = load i32, i32* %pbits.i11, align 4, !dbg !5763
  %or7.i35 = or i32 %46, 1, !dbg !5763
  store i32 %or7.i35, i32* %pbits.i11, align 4, !dbg !5763
  br label %if.end8.i37, !dbg !5764

if.end8.i37:                                      ; preds = %if.then6.i36, %for.body.i34
  %47 = load i32, i32* %i.i10, align 4, !dbg !5765
  %inc9.i38 = add nsw i32 %47, 1, !dbg !5765
  store i32 %inc9.i38, i32* %i.i10, align 4, !dbg !5765
  br label %for.cond.i29, !dbg !5766, !llvm.loop !3893

for.end.i43:                                      ; preds = %for.cond.i29
  %48 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5767
  %49 = load i32, i32* %bits.i12, align 4, !dbg !5768
  %mul.i39 = mul nsw i32 %49, 2, !dbg !5769
  %add.i40 = add nsw i32 %mul.i39, 1, !dbg !5770
  %50 = load i32, i32* %pbits.i11, align 4, !dbg !5771
  %shl10.i41 = shl i32 %50, 1, !dbg !5772
  %or11.i42 = or i32 %shl10.i41, 1, !dbg !5773
  call void @put_bits(%struct.PutBitContext* %48, i32 %add.i40, i32 %or11.i42) #9, !dbg !5774
  br label %put_vc2_ue_uint.exit44, !dbg !5775

put_vc2_ue_uint.exit44:                           ; preds = %if.then.i17, %for.end.i43
  %51 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5776
  %pb6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %51, i32 0, i32 1, !dbg !5777
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5778
  %time_base7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 17, !dbg !5779
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base7, i32 0, i32 0, !dbg !5780
  %53 = load i32, i32* %num, align 4, !dbg !5780
  store %struct.PutBitContext* %pb6, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !5781
  store i32 %53, i32* %val.addr.i46, align 4, !dbg !5781
  store i32 0, i32* %pbits.i48, align 4, !dbg !5644
  store i32 0, i32* %bits.i49, align 4, !dbg !5645
  store i32 1, i32* %topbit.i50, align 4, !dbg !5646
  store i32 1, i32* %maxval.i51, align 4, !dbg !5647
  %54 = load i32, i32* %val.addr.i46, align 4, !dbg !5782
  %inc.i52 = add i32 %54, 1, !dbg !5782
  store i32 %inc.i52, i32* %val.addr.i46, align 4, !dbg !5782
  %tobool.i53 = icmp ne i32 %54, 0, !dbg !5782
  br i1 %tobool.i53, label %if.end.i55, label %if.then.i54, !dbg !5783

if.then.i54:                                      ; preds = %put_vc2_ue_uint.exit44
  %55 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !5784
  call void @put_bits(%struct.PutBitContext* %55, i32 1, i32 1) #9, !dbg !5785
  br label %put_vc2_ue_uint.exit81, !dbg !5786

if.end.i55:                                       ; preds = %put_vc2_ue_uint.exit44
  br label %while.cond.i57, !dbg !5787

while.cond.i57:                                   ; preds = %while.body.i61, %if.end.i55
  %56 = load i32, i32* %val.addr.i46, align 4, !dbg !5788
  %57 = load i32, i32* %maxval.i51, align 4, !dbg !5789
  %cmp.i56 = icmp ugt i32 %56, %57, !dbg !5790
  br i1 %cmp.i56, label %while.body.i61, label %while.end.i64, !dbg !5791

while.body.i61:                                   ; preds = %while.cond.i57
  %58 = load i32, i32* %topbit.i50, align 4, !dbg !5792
  %shl.i58 = shl i32 %58, 1, !dbg !5792
  store i32 %shl.i58, i32* %topbit.i50, align 4, !dbg !5792
  %59 = load i32, i32* %maxval.i51, align 4, !dbg !5793
  %shl1.i59 = shl i32 %59, 1, !dbg !5793
  store i32 %shl1.i59, i32* %maxval.i51, align 4, !dbg !5793
  %60 = load i32, i32* %maxval.i51, align 4, !dbg !5794
  %or.i60 = or i32 %60, 1, !dbg !5794
  store i32 %or.i60, i32* %maxval.i51, align 4, !dbg !5794
  br label %while.cond.i57, !dbg !5795, !llvm.loop !3864

while.end.i64:                                    ; preds = %while.cond.i57
  %61 = load i32, i32* %topbit.i50, align 4, !dbg !5796
  %or2.i62 = or i32 %61, 1, !dbg !5797
  %62 = call i32 @llvm.ctlz.i32(i32 %or2.i62, i1 true) #9, !dbg !5798
  %sub.i63 = sub nsw i32 31, %62, !dbg !5799
  store i32 %sub.i63, i32* %bits.i49, align 4, !dbg !5800
  store i32 0, i32* %i.i47, align 4, !dbg !5801
  br label %for.cond.i66, !dbg !5802

for.cond.i66:                                     ; preds = %if.end8.i74, %while.end.i64
  %63 = load i32, i32* %i.i47, align 4, !dbg !5803
  %64 = load i32, i32* %bits.i49, align 4, !dbg !5804
  %cmp3.i65 = icmp slt i32 %63, %64, !dbg !5805
  br i1 %cmp3.i65, label %for.body.i71, label %for.end.i80, !dbg !5806

for.body.i71:                                     ; preds = %for.cond.i66
  %65 = load i32, i32* %topbit.i50, align 4, !dbg !5807
  %shr.i67 = ashr i32 %65, 1, !dbg !5807
  store i32 %shr.i67, i32* %topbit.i50, align 4, !dbg !5807
  %66 = load i32, i32* %pbits.i48, align 4, !dbg !5808
  %shl4.i68 = shl i32 %66, 2, !dbg !5808
  store i32 %shl4.i68, i32* %pbits.i48, align 4, !dbg !5808
  %67 = load i32, i32* %val.addr.i46, align 4, !dbg !5809
  %68 = load i32, i32* %topbit.i50, align 4, !dbg !5810
  %and.i69 = and i32 %67, %68, !dbg !5811
  %tobool5.i70 = icmp ne i32 %and.i69, 0, !dbg !5811
  br i1 %tobool5.i70, label %if.then6.i73, label %if.end8.i74, !dbg !5812

if.then6.i73:                                     ; preds = %for.body.i71
  %69 = load i32, i32* %pbits.i48, align 4, !dbg !5813
  %or7.i72 = or i32 %69, 1, !dbg !5813
  store i32 %or7.i72, i32* %pbits.i48, align 4, !dbg !5813
  br label %if.end8.i74, !dbg !5814

if.end8.i74:                                      ; preds = %if.then6.i73, %for.body.i71
  %70 = load i32, i32* %i.i47, align 4, !dbg !5815
  %inc9.i75 = add nsw i32 %70, 1, !dbg !5815
  store i32 %inc9.i75, i32* %i.i47, align 4, !dbg !5815
  br label %for.cond.i66, !dbg !5816, !llvm.loop !3893

for.end.i80:                                      ; preds = %for.cond.i66
  %71 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !5817
  %72 = load i32, i32* %bits.i49, align 4, !dbg !5818
  %mul.i76 = mul nsw i32 %72, 2, !dbg !5819
  %add.i77 = add nsw i32 %mul.i76, 1, !dbg !5820
  %73 = load i32, i32* %pbits.i48, align 4, !dbg !5821
  %shl10.i78 = shl i32 %73, 1, !dbg !5822
  %or11.i79 = or i32 %shl10.i78, 1, !dbg !5823
  call void @put_bits(%struct.PutBitContext* %71, i32 %add.i77, i32 %or11.i79) #9, !dbg !5824
  br label %put_vc2_ue_uint.exit81, !dbg !5825

put_vc2_ue_uint.exit81:                           ; preds = %if.then.i54, %for.end.i80
  br label %if.end, !dbg !5826

if.end:                                           ; preds = %put_vc2_ue_uint.exit81, %entry
  ret void, !dbg !5827
}

; Function Attrs: nounwind uwtable
define internal void @encode_aspect_ratio(%struct.VC2EncContext* %s) #4 !dbg !5828 {
entry:
  %pb.addr.i45 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i45, metadata !3807, metadata !1752), !dbg !5829
  %val.addr.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i46, metadata !3813, metadata !1752), !dbg !5833
  %i.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i47, metadata !3815, metadata !1752), !dbg !5834
  %pbits.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i48, metadata !3817, metadata !1752), !dbg !5835
  %bits.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i49, metadata !3819, metadata !1752), !dbg !5836
  %topbit.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i50, metadata !3821, metadata !1752), !dbg !5837
  %maxval.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i51, metadata !3823, metadata !1752), !dbg !5838
  %pb.addr.i8 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i8, metadata !3807, metadata !1752), !dbg !5839
  %val.addr.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i9, metadata !3813, metadata !1752), !dbg !5841
  %i.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i10, metadata !3815, metadata !1752), !dbg !5842
  %pbits.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i11, metadata !3817, metadata !1752), !dbg !5843
  %bits.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i12, metadata !3819, metadata !1752), !dbg !5844
  %topbit.i13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i13, metadata !3821, metadata !1752), !dbg !5845
  %maxval.i14 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i14, metadata !3823, metadata !1752), !dbg !5846
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !5847
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !5849
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !5850
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !5851
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !5852
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !5853
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !5854
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !5855, metadata !1752), !dbg !5856
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5857
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !5858
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5859
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !5860
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !5860
  %tobool = icmp ne i32 %2, 0, !dbg !5861
  %lnot = xor i1 %tobool, true, !dbg !5861
  %lnot.ext = zext i1 %lnot to i32, !dbg !5861
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5862
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5863
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !5864
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !5864
  %tobool2 = icmp ne i32 %4, 0, !dbg !5863
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5865

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5866, metadata !1752), !dbg !5867
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5868
  %avctx3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 3, !dbg !5869
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !5869
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %avctx, align 8, !dbg !5867
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5870
  %pb4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 1, !dbg !5871
  store %struct.PutBitContext* %pb4, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5872
  store i32 0, i32* %val.addr.i, align 4, !dbg !5872
  store i32 0, i32* %pbits.i, align 4, !dbg !5851
  store i32 0, i32* %bits.i, align 4, !dbg !5852
  store i32 1, i32* %topbit.i, align 4, !dbg !5853
  store i32 1, i32* %maxval.i, align 4, !dbg !5854
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !5873
  %inc.i = add i32 %8, 1, !dbg !5873
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !5873
  %tobool.i = icmp ne i32 %8, 0, !dbg !5873
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5874

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5875
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !5876
  br label %put_vc2_ue_uint.exit, !dbg !5877

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !5878

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !5879
  %11 = load i32, i32* %maxval.i, align 4, !dbg !5880
  %cmp.i = icmp ugt i32 %10, %11, !dbg !5881
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5882

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !5883
  %shl.i = shl i32 %12, 1, !dbg !5883
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !5883
  %13 = load i32, i32* %maxval.i, align 4, !dbg !5884
  %shl1.i = shl i32 %13, 1, !dbg !5884
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !5884
  %14 = load i32, i32* %maxval.i, align 4, !dbg !5885
  %or.i = or i32 %14, 1, !dbg !5885
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !5885
  br label %while.cond.i, !dbg !5886, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !5887
  %or2.i = or i32 %15, 1, !dbg !5888
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !5889
  %sub.i = sub nsw i32 31, %16, !dbg !5890
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !5891
  store i32 0, i32* %i.i, align 4, !dbg !5892
  br label %for.cond.i, !dbg !5893

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !5894
  %18 = load i32, i32* %bits.i, align 4, !dbg !5895
  %cmp3.i = icmp slt i32 %17, %18, !dbg !5896
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !5897

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !5898
  %shr.i = ashr i32 %19, 1, !dbg !5898
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !5898
  %20 = load i32, i32* %pbits.i, align 4, !dbg !5899
  %shl4.i = shl i32 %20, 2, !dbg !5899
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !5899
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !5900
  %22 = load i32, i32* %topbit.i, align 4, !dbg !5901
  %and.i = and i32 %21, %22, !dbg !5902
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !5902
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !5903

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !5904
  %or7.i = or i32 %23, 1, !dbg !5904
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !5904
  br label %if.end8.i, !dbg !5905

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5906
  %inc9.i = add nsw i32 %24, 1, !dbg !5906
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !5906
  br label %for.cond.i, !dbg !5907, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5908
  %26 = load i32, i32* %bits.i, align 4, !dbg !5909
  %mul.i = mul nsw i32 %26, 2, !dbg !5910
  %add.i = add nsw i32 %mul.i, 1, !dbg !5911
  %27 = load i32, i32* %pbits.i, align 4, !dbg !5912
  %shl10.i = shl i32 %27, 1, !dbg !5913
  %or11.i = or i32 %shl10.i, 1, !dbg !5914
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !5915
  br label %put_vc2_ue_uint.exit, !dbg !5916

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5917
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 1, !dbg !5918
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5919
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 44, !dbg !5920
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !5921
  %30 = load i32, i32* %num, align 8, !dbg !5921
  store %struct.PutBitContext* %pb5, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5922
  store i32 %30, i32* %val.addr.i9, align 4, !dbg !5922
  store i32 0, i32* %pbits.i11, align 4, !dbg !5843
  store i32 0, i32* %bits.i12, align 4, !dbg !5844
  store i32 1, i32* %topbit.i13, align 4, !dbg !5845
  store i32 1, i32* %maxval.i14, align 4, !dbg !5846
  %31 = load i32, i32* %val.addr.i9, align 4, !dbg !5923
  %inc.i15 = add i32 %31, 1, !dbg !5923
  store i32 %inc.i15, i32* %val.addr.i9, align 4, !dbg !5923
  %tobool.i16 = icmp ne i32 %31, 0, !dbg !5923
  br i1 %tobool.i16, label %if.end.i18, label %if.then.i17, !dbg !5924

if.then.i17:                                      ; preds = %put_vc2_ue_uint.exit
  %32 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5925
  call void @put_bits(%struct.PutBitContext* %32, i32 1, i32 1) #9, !dbg !5926
  br label %put_vc2_ue_uint.exit44, !dbg !5927

if.end.i18:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i20, !dbg !5928

while.cond.i20:                                   ; preds = %while.body.i24, %if.end.i18
  %33 = load i32, i32* %val.addr.i9, align 4, !dbg !5929
  %34 = load i32, i32* %maxval.i14, align 4, !dbg !5930
  %cmp.i19 = icmp ugt i32 %33, %34, !dbg !5931
  br i1 %cmp.i19, label %while.body.i24, label %while.end.i27, !dbg !5932

while.body.i24:                                   ; preds = %while.cond.i20
  %35 = load i32, i32* %topbit.i13, align 4, !dbg !5933
  %shl.i21 = shl i32 %35, 1, !dbg !5933
  store i32 %shl.i21, i32* %topbit.i13, align 4, !dbg !5933
  %36 = load i32, i32* %maxval.i14, align 4, !dbg !5934
  %shl1.i22 = shl i32 %36, 1, !dbg !5934
  store i32 %shl1.i22, i32* %maxval.i14, align 4, !dbg !5934
  %37 = load i32, i32* %maxval.i14, align 4, !dbg !5935
  %or.i23 = or i32 %37, 1, !dbg !5935
  store i32 %or.i23, i32* %maxval.i14, align 4, !dbg !5935
  br label %while.cond.i20, !dbg !5936, !llvm.loop !3864

while.end.i27:                                    ; preds = %while.cond.i20
  %38 = load i32, i32* %topbit.i13, align 4, !dbg !5937
  %or2.i25 = or i32 %38, 1, !dbg !5938
  %39 = call i32 @llvm.ctlz.i32(i32 %or2.i25, i1 true) #9, !dbg !5939
  %sub.i26 = sub nsw i32 31, %39, !dbg !5940
  store i32 %sub.i26, i32* %bits.i12, align 4, !dbg !5941
  store i32 0, i32* %i.i10, align 4, !dbg !5942
  br label %for.cond.i29, !dbg !5943

for.cond.i29:                                     ; preds = %if.end8.i37, %while.end.i27
  %40 = load i32, i32* %i.i10, align 4, !dbg !5944
  %41 = load i32, i32* %bits.i12, align 4, !dbg !5945
  %cmp3.i28 = icmp slt i32 %40, %41, !dbg !5946
  br i1 %cmp3.i28, label %for.body.i34, label %for.end.i43, !dbg !5947

for.body.i34:                                     ; preds = %for.cond.i29
  %42 = load i32, i32* %topbit.i13, align 4, !dbg !5948
  %shr.i30 = ashr i32 %42, 1, !dbg !5948
  store i32 %shr.i30, i32* %topbit.i13, align 4, !dbg !5948
  %43 = load i32, i32* %pbits.i11, align 4, !dbg !5949
  %shl4.i31 = shl i32 %43, 2, !dbg !5949
  store i32 %shl4.i31, i32* %pbits.i11, align 4, !dbg !5949
  %44 = load i32, i32* %val.addr.i9, align 4, !dbg !5950
  %45 = load i32, i32* %topbit.i13, align 4, !dbg !5951
  %and.i32 = and i32 %44, %45, !dbg !5952
  %tobool5.i33 = icmp ne i32 %and.i32, 0, !dbg !5952
  br i1 %tobool5.i33, label %if.then6.i36, label %if.end8.i37, !dbg !5953

if.then6.i36:                                     ; preds = %for.body.i34
  %46 = load i32, i32* %pbits.i11, align 4, !dbg !5954
  %or7.i35 = or i32 %46, 1, !dbg !5954
  store i32 %or7.i35, i32* %pbits.i11, align 4, !dbg !5954
  br label %if.end8.i37, !dbg !5955

if.end8.i37:                                      ; preds = %if.then6.i36, %for.body.i34
  %47 = load i32, i32* %i.i10, align 4, !dbg !5956
  %inc9.i38 = add nsw i32 %47, 1, !dbg !5956
  store i32 %inc9.i38, i32* %i.i10, align 4, !dbg !5956
  br label %for.cond.i29, !dbg !5957, !llvm.loop !3893

for.end.i43:                                      ; preds = %for.cond.i29
  %48 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i8, align 8, !dbg !5958
  %49 = load i32, i32* %bits.i12, align 4, !dbg !5959
  %mul.i39 = mul nsw i32 %49, 2, !dbg !5960
  %add.i40 = add nsw i32 %mul.i39, 1, !dbg !5961
  %50 = load i32, i32* %pbits.i11, align 4, !dbg !5962
  %shl10.i41 = shl i32 %50, 1, !dbg !5963
  %or11.i42 = or i32 %shl10.i41, 1, !dbg !5964
  call void @put_bits(%struct.PutBitContext* %48, i32 %add.i40, i32 %or11.i42) #9, !dbg !5965
  br label %put_vc2_ue_uint.exit44, !dbg !5966

put_vc2_ue_uint.exit44:                           ; preds = %if.then.i17, %for.end.i43
  %51 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !5967
  %pb6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %51, i32 0, i32 1, !dbg !5968
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5969
  %sample_aspect_ratio7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 44, !dbg !5970
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio7, i32 0, i32 1, !dbg !5971
  %53 = load i32, i32* %den, align 4, !dbg !5971
  store %struct.PutBitContext* %pb6, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !5972
  store i32 %53, i32* %val.addr.i46, align 4, !dbg !5972
  store i32 0, i32* %pbits.i48, align 4, !dbg !5835
  store i32 0, i32* %bits.i49, align 4, !dbg !5836
  store i32 1, i32* %topbit.i50, align 4, !dbg !5837
  store i32 1, i32* %maxval.i51, align 4, !dbg !5838
  %54 = load i32, i32* %val.addr.i46, align 4, !dbg !5973
  %inc.i52 = add i32 %54, 1, !dbg !5973
  store i32 %inc.i52, i32* %val.addr.i46, align 4, !dbg !5973
  %tobool.i53 = icmp ne i32 %54, 0, !dbg !5973
  br i1 %tobool.i53, label %if.end.i55, label %if.then.i54, !dbg !5974

if.then.i54:                                      ; preds = %put_vc2_ue_uint.exit44
  %55 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !5975
  call void @put_bits(%struct.PutBitContext* %55, i32 1, i32 1) #9, !dbg !5976
  br label %put_vc2_ue_uint.exit81, !dbg !5977

if.end.i55:                                       ; preds = %put_vc2_ue_uint.exit44
  br label %while.cond.i57, !dbg !5978

while.cond.i57:                                   ; preds = %while.body.i61, %if.end.i55
  %56 = load i32, i32* %val.addr.i46, align 4, !dbg !5979
  %57 = load i32, i32* %maxval.i51, align 4, !dbg !5980
  %cmp.i56 = icmp ugt i32 %56, %57, !dbg !5981
  br i1 %cmp.i56, label %while.body.i61, label %while.end.i64, !dbg !5982

while.body.i61:                                   ; preds = %while.cond.i57
  %58 = load i32, i32* %topbit.i50, align 4, !dbg !5983
  %shl.i58 = shl i32 %58, 1, !dbg !5983
  store i32 %shl.i58, i32* %topbit.i50, align 4, !dbg !5983
  %59 = load i32, i32* %maxval.i51, align 4, !dbg !5984
  %shl1.i59 = shl i32 %59, 1, !dbg !5984
  store i32 %shl1.i59, i32* %maxval.i51, align 4, !dbg !5984
  %60 = load i32, i32* %maxval.i51, align 4, !dbg !5985
  %or.i60 = or i32 %60, 1, !dbg !5985
  store i32 %or.i60, i32* %maxval.i51, align 4, !dbg !5985
  br label %while.cond.i57, !dbg !5986, !llvm.loop !3864

while.end.i64:                                    ; preds = %while.cond.i57
  %61 = load i32, i32* %topbit.i50, align 4, !dbg !5987
  %or2.i62 = or i32 %61, 1, !dbg !5988
  %62 = call i32 @llvm.ctlz.i32(i32 %or2.i62, i1 true) #9, !dbg !5989
  %sub.i63 = sub nsw i32 31, %62, !dbg !5990
  store i32 %sub.i63, i32* %bits.i49, align 4, !dbg !5991
  store i32 0, i32* %i.i47, align 4, !dbg !5992
  br label %for.cond.i66, !dbg !5993

for.cond.i66:                                     ; preds = %if.end8.i74, %while.end.i64
  %63 = load i32, i32* %i.i47, align 4, !dbg !5994
  %64 = load i32, i32* %bits.i49, align 4, !dbg !5995
  %cmp3.i65 = icmp slt i32 %63, %64, !dbg !5996
  br i1 %cmp3.i65, label %for.body.i71, label %for.end.i80, !dbg !5997

for.body.i71:                                     ; preds = %for.cond.i66
  %65 = load i32, i32* %topbit.i50, align 4, !dbg !5998
  %shr.i67 = ashr i32 %65, 1, !dbg !5998
  store i32 %shr.i67, i32* %topbit.i50, align 4, !dbg !5998
  %66 = load i32, i32* %pbits.i48, align 4, !dbg !5999
  %shl4.i68 = shl i32 %66, 2, !dbg !5999
  store i32 %shl4.i68, i32* %pbits.i48, align 4, !dbg !5999
  %67 = load i32, i32* %val.addr.i46, align 4, !dbg !6000
  %68 = load i32, i32* %topbit.i50, align 4, !dbg !6001
  %and.i69 = and i32 %67, %68, !dbg !6002
  %tobool5.i70 = icmp ne i32 %and.i69, 0, !dbg !6002
  br i1 %tobool5.i70, label %if.then6.i73, label %if.end8.i74, !dbg !6003

if.then6.i73:                                     ; preds = %for.body.i71
  %69 = load i32, i32* %pbits.i48, align 4, !dbg !6004
  %or7.i72 = or i32 %69, 1, !dbg !6004
  store i32 %or7.i72, i32* %pbits.i48, align 4, !dbg !6004
  br label %if.end8.i74, !dbg !6005

if.end8.i74:                                      ; preds = %if.then6.i73, %for.body.i71
  %70 = load i32, i32* %i.i47, align 4, !dbg !6006
  %inc9.i75 = add nsw i32 %70, 1, !dbg !6006
  store i32 %inc9.i75, i32* %i.i47, align 4, !dbg !6006
  br label %for.cond.i66, !dbg !6007, !llvm.loop !3893

for.end.i80:                                      ; preds = %for.cond.i66
  %71 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i45, align 8, !dbg !6008
  %72 = load i32, i32* %bits.i49, align 4, !dbg !6009
  %mul.i76 = mul nsw i32 %72, 2, !dbg !6010
  %add.i77 = add nsw i32 %mul.i76, 1, !dbg !6011
  %73 = load i32, i32* %pbits.i48, align 4, !dbg !6012
  %shl10.i78 = shl i32 %73, 1, !dbg !6013
  %or11.i79 = or i32 %shl10.i78, 1, !dbg !6014
  call void @put_bits(%struct.PutBitContext* %71, i32 %add.i77, i32 %or11.i79) #9, !dbg !6015
  br label %put_vc2_ue_uint.exit81, !dbg !6016

put_vc2_ue_uint.exit81:                           ; preds = %if.then.i54, %for.end.i80
  br label %if.end, !dbg !6017

if.end:                                           ; preds = %put_vc2_ue_uint.exit81, %entry
  ret void, !dbg !6018
}

; Function Attrs: nounwind uwtable
define internal void @encode_clean_area(%struct.VC2EncContext* %s) #4 !dbg !6019 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6020, metadata !1752), !dbg !6021
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6022
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6023
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !6024
  ret void, !dbg !6025
}

; Function Attrs: nounwind uwtable
define internal void @encode_signal_range(%struct.VC2EncContext* %s) #4 !dbg !6026 {
entry:
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !6027
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !6030
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !6031
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !6032
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !6033
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !6034
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !6035
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6036, metadata !1752), !dbg !6037
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6038
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6039
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6040
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 31, !dbg !6041
  %2 = load i32, i32* %strict_compliance, align 8, !dbg !6041
  %tobool = icmp ne i32 %2, 0, !dbg !6042
  %lnot = xor i1 %tobool, true, !dbg !6042
  %lnot.ext = zext i1 %lnot to i32, !dbg !6042
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !6043
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6044
  %strict_compliance1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !6045
  %4 = load i32, i32* %strict_compliance1, align 8, !dbg !6045
  %tobool2 = icmp ne i32 %4, 0, !dbg !6044
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6046

if.then:                                          ; preds = %entry
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6047
  %pb3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 1, !dbg !6048
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6049
  %bpp_idx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 9, !dbg !6050
  %7 = load i32, i32* %bpp_idx, align 8, !dbg !6050
  store %struct.PutBitContext* %pb3, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6051
  store i32 %7, i32* %val.addr.i, align 4, !dbg !6051
  store i32 0, i32* %pbits.i, align 4, !dbg !6032
  store i32 0, i32* %bits.i, align 4, !dbg !6033
  store i32 1, i32* %topbit.i, align 4, !dbg !6034
  store i32 1, i32* %maxval.i, align 4, !dbg !6035
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !6052
  %inc.i = add i32 %8, 1, !dbg !6052
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !6052
  %tobool.i = icmp ne i32 %8, 0, !dbg !6052
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !6053

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6054
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !6055
  br label %put_vc2_ue_uint.exit, !dbg !6056

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !6057

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !6058
  %11 = load i32, i32* %maxval.i, align 4, !dbg !6059
  %cmp.i = icmp ugt i32 %10, %11, !dbg !6060
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !6061

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !6062
  %shl.i = shl i32 %12, 1, !dbg !6062
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !6062
  %13 = load i32, i32* %maxval.i, align 4, !dbg !6063
  %shl1.i = shl i32 %13, 1, !dbg !6063
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !6063
  %14 = load i32, i32* %maxval.i, align 4, !dbg !6064
  %or.i = or i32 %14, 1, !dbg !6064
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !6064
  br label %while.cond.i, !dbg !6065, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !6066
  %or2.i = or i32 %15, 1, !dbg !6067
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !6068
  %sub.i = sub nsw i32 31, %16, !dbg !6069
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !6070
  store i32 0, i32* %i.i, align 4, !dbg !6071
  br label %for.cond.i, !dbg !6072

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !6073
  %18 = load i32, i32* %bits.i, align 4, !dbg !6074
  %cmp3.i = icmp slt i32 %17, %18, !dbg !6075
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !6076

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !6077
  %shr.i = ashr i32 %19, 1, !dbg !6077
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !6077
  %20 = load i32, i32* %pbits.i, align 4, !dbg !6078
  %shl4.i = shl i32 %20, 2, !dbg !6078
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !6078
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !6079
  %22 = load i32, i32* %topbit.i, align 4, !dbg !6080
  %and.i = and i32 %21, %22, !dbg !6081
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !6081
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !6082

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !6083
  %or7.i = or i32 %23, 1, !dbg !6083
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !6083
  br label %if.end8.i, !dbg !6084

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !6085
  %inc9.i = add nsw i32 %24, 1, !dbg !6085
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !6085
  br label %for.cond.i, !dbg !6086, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6087
  %26 = load i32, i32* %bits.i, align 4, !dbg !6088
  %mul.i = mul nsw i32 %26, 2, !dbg !6089
  %add.i = add nsw i32 %mul.i, 1, !dbg !6090
  %27 = load i32, i32* %pbits.i, align 4, !dbg !6091
  %shl10.i = shl i32 %27, 1, !dbg !6092
  %or11.i = or i32 %shl10.i, 1, !dbg !6093
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !6094
  br label %put_vc2_ue_uint.exit, !dbg !6095

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  br label %if.end, !dbg !6051

if.end:                                           ; preds = %put_vc2_ue_uint.exit, %entry
  ret void, !dbg !6096
}

; Function Attrs: nounwind uwtable
define internal void @encode_color_spec(%struct.VC2EncContext* %s) #4 !dbg !6097 {
entry:
  %pb.addr.i120 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i120, metadata !3807, metadata !1752), !dbg !6098
  %val.addr.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i121, metadata !3813, metadata !1752), !dbg !6102
  %i.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i122, metadata !3815, metadata !1752), !dbg !6103
  %pbits.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i123, metadata !3817, metadata !1752), !dbg !6104
  %bits.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i124, metadata !3819, metadata !1752), !dbg !6105
  %topbit.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i125, metadata !3821, metadata !1752), !dbg !6106
  %maxval.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i126, metadata !3823, metadata !1752), !dbg !6107
  %pb.addr.i83 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i83, metadata !3807, metadata !1752), !dbg !6108
  %val.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i84, metadata !3813, metadata !1752), !dbg !6110
  %i.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i85, metadata !3815, metadata !1752), !dbg !6111
  %pbits.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i86, metadata !3817, metadata !1752), !dbg !6112
  %bits.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i87, metadata !3819, metadata !1752), !dbg !6113
  %topbit.i88 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i88, metadata !3821, metadata !1752), !dbg !6114
  %maxval.i89 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i89, metadata !3823, metadata !1752), !dbg !6115
  %pb.addr.i46 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i46, metadata !3807, metadata !1752), !dbg !6116
  %val.addr.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i47, metadata !3813, metadata !1752), !dbg !6118
  %i.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i48, metadata !3815, metadata !1752), !dbg !6119
  %pbits.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i49, metadata !3817, metadata !1752), !dbg !6120
  %bits.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i50, metadata !3819, metadata !1752), !dbg !6121
  %topbit.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i51, metadata !3821, metadata !1752), !dbg !6122
  %maxval.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i52, metadata !3823, metadata !1752), !dbg !6123
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !6124
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !6126
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !6127
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !6128
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !6129
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !6130
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !6131
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %val = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6132, metadata !1752), !dbg !6133
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !6134, metadata !1752), !dbg !6135
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6136
  %avctx1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 3, !dbg !6137
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !6137
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !6135
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6138
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 1, !dbg !6139
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6140
  %strict_compliance = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 31, !dbg !6141
  %4 = load i32, i32* %strict_compliance, align 8, !dbg !6141
  %tobool = icmp ne i32 %4, 0, !dbg !6142
  %lnot = xor i1 %tobool, true, !dbg !6142
  %lnot.ext = zext i1 %lnot to i32, !dbg !6142
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !6143
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6144
  %strict_compliance2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 31, !dbg !6145
  %6 = load i32, i32* %strict_compliance2, align 8, !dbg !6145
  %tobool3 = icmp ne i32 %6, 0, !dbg !6144
  br i1 %tobool3, label %if.end45, label %if.then, !dbg !6146

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6147, metadata !1752), !dbg !6148
  %7 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6149
  %pb4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %7, i32 0, i32 1, !dbg !6150
  store %struct.PutBitContext* %pb4, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6151
  store i32 0, i32* %val.addr.i, align 4, !dbg !6151
  store i32 0, i32* %pbits.i, align 4, !dbg !6128
  store i32 0, i32* %bits.i, align 4, !dbg !6129
  store i32 1, i32* %topbit.i, align 4, !dbg !6130
  store i32 1, i32* %maxval.i, align 4, !dbg !6131
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !6152
  %inc.i = add i32 %8, 1, !dbg !6152
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !6152
  %tobool.i = icmp ne i32 %8, 0, !dbg !6152
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !6153

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6154
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !6155
  br label %put_vc2_ue_uint.exit, !dbg !6156

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !6157

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !6158
  %11 = load i32, i32* %maxval.i, align 4, !dbg !6159
  %cmp.i = icmp ugt i32 %10, %11, !dbg !6160
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !6161

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !6162
  %shl.i = shl i32 %12, 1, !dbg !6162
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !6162
  %13 = load i32, i32* %maxval.i, align 4, !dbg !6163
  %shl1.i = shl i32 %13, 1, !dbg !6163
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !6163
  %14 = load i32, i32* %maxval.i, align 4, !dbg !6164
  %or.i = or i32 %14, 1, !dbg !6164
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !6164
  br label %while.cond.i, !dbg !6165, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !6166
  %or2.i = or i32 %15, 1, !dbg !6167
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !6168
  %sub.i = sub nsw i32 31, %16, !dbg !6169
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !6170
  store i32 0, i32* %i.i, align 4, !dbg !6171
  br label %for.cond.i, !dbg !6172

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !6173
  %18 = load i32, i32* %bits.i, align 4, !dbg !6174
  %cmp3.i = icmp slt i32 %17, %18, !dbg !6175
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !6176

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !6177
  %shr.i = ashr i32 %19, 1, !dbg !6177
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !6177
  %20 = load i32, i32* %pbits.i, align 4, !dbg !6178
  %shl4.i = shl i32 %20, 2, !dbg !6178
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !6178
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !6179
  %22 = load i32, i32* %topbit.i, align 4, !dbg !6180
  %and.i = and i32 %21, %22, !dbg !6181
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !6181
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !6182

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !6183
  %or7.i = or i32 %23, 1, !dbg !6183
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !6183
  br label %if.end8.i, !dbg !6184

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !6185
  %inc9.i = add nsw i32 %24, 1, !dbg !6185
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !6185
  br label %for.cond.i, !dbg !6186, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6187
  %26 = load i32, i32* %bits.i, align 4, !dbg !6188
  %mul.i = mul nsw i32 %26, 2, !dbg !6189
  %add.i = add nsw i32 %mul.i, 1, !dbg !6190
  %27 = load i32, i32* %pbits.i, align 4, !dbg !6191
  %shl10.i = shl i32 %27, 1, !dbg !6192
  %or11.i = or i32 %shl10.i, 1, !dbg !6193
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !6194
  br label %put_vc2_ue_uint.exit, !dbg !6195

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %28 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6196
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %28, i32 0, i32 1, !dbg !6197
  call void @put_bits(%struct.PutBitContext* %pb5, i32 1, i32 1), !dbg !6198
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6199
  %color_primaries = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 75, !dbg !6201
  %30 = load i32, i32* %color_primaries, align 4, !dbg !6201
  %cmp = icmp eq i32 %30, 5, !dbg !6202
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6203

if.then6:                                         ; preds = %put_vc2_ue_uint.exit
  store i32 2, i32* %val, align 4, !dbg !6204
  br label %if.end16, !dbg !6205

if.else:                                          ; preds = %put_vc2_ue_uint.exit
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6206
  %color_primaries7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 75, !dbg !6208
  %32 = load i32, i32* %color_primaries7, align 4, !dbg !6208
  %cmp8 = icmp eq i32 %32, 6, !dbg !6209
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !6210

if.then9:                                         ; preds = %if.else
  store i32 1, i32* %val, align 4, !dbg !6211
  br label %if.end15, !dbg !6212

if.else10:                                        ; preds = %if.else
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6213
  %color_primaries11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 75, !dbg !6215
  %34 = load i32, i32* %color_primaries11, align 4, !dbg !6215
  %cmp12 = icmp eq i32 %34, 7, !dbg !6216
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !6217

if.then13:                                        ; preds = %if.else10
  store i32 1, i32* %val, align 4, !dbg !6218
  br label %if.end, !dbg !6219

if.else14:                                        ; preds = %if.else10
  store i32 0, i32* %val, align 4, !dbg !6220
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then9
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6
  %35 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6221
  %pb17 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %35, i32 0, i32 1, !dbg !6222
  %36 = load i32, i32* %val, align 4, !dbg !6223
  store %struct.PutBitContext* %pb17, %struct.PutBitContext** %pb.addr.i46, align 8, !dbg !6224
  store i32 %36, i32* %val.addr.i47, align 4, !dbg !6224
  store i32 0, i32* %pbits.i49, align 4, !dbg !6120
  store i32 0, i32* %bits.i50, align 4, !dbg !6121
  store i32 1, i32* %topbit.i51, align 4, !dbg !6122
  store i32 1, i32* %maxval.i52, align 4, !dbg !6123
  %37 = load i32, i32* %val.addr.i47, align 4, !dbg !6225
  %inc.i53 = add i32 %37, 1, !dbg !6225
  store i32 %inc.i53, i32* %val.addr.i47, align 4, !dbg !6225
  %tobool.i54 = icmp ne i32 %37, 0, !dbg !6225
  br i1 %tobool.i54, label %if.end.i56, label %if.then.i55, !dbg !6226

if.then.i55:                                      ; preds = %if.end16
  %38 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i46, align 8, !dbg !6227
  call void @put_bits(%struct.PutBitContext* %38, i32 1, i32 1) #9, !dbg !6228
  br label %put_vc2_ue_uint.exit82, !dbg !6229

if.end.i56:                                       ; preds = %if.end16
  br label %while.cond.i58, !dbg !6230

while.cond.i58:                                   ; preds = %while.body.i62, %if.end.i56
  %39 = load i32, i32* %val.addr.i47, align 4, !dbg !6231
  %40 = load i32, i32* %maxval.i52, align 4, !dbg !6232
  %cmp.i57 = icmp ugt i32 %39, %40, !dbg !6233
  br i1 %cmp.i57, label %while.body.i62, label %while.end.i65, !dbg !6234

while.body.i62:                                   ; preds = %while.cond.i58
  %41 = load i32, i32* %topbit.i51, align 4, !dbg !6235
  %shl.i59 = shl i32 %41, 1, !dbg !6235
  store i32 %shl.i59, i32* %topbit.i51, align 4, !dbg !6235
  %42 = load i32, i32* %maxval.i52, align 4, !dbg !6236
  %shl1.i60 = shl i32 %42, 1, !dbg !6236
  store i32 %shl1.i60, i32* %maxval.i52, align 4, !dbg !6236
  %43 = load i32, i32* %maxval.i52, align 4, !dbg !6237
  %or.i61 = or i32 %43, 1, !dbg !6237
  store i32 %or.i61, i32* %maxval.i52, align 4, !dbg !6237
  br label %while.cond.i58, !dbg !6238, !llvm.loop !3864

while.end.i65:                                    ; preds = %while.cond.i58
  %44 = load i32, i32* %topbit.i51, align 4, !dbg !6239
  %or2.i63 = or i32 %44, 1, !dbg !6240
  %45 = call i32 @llvm.ctlz.i32(i32 %or2.i63, i1 true) #9, !dbg !6241
  %sub.i64 = sub nsw i32 31, %45, !dbg !6242
  store i32 %sub.i64, i32* %bits.i50, align 4, !dbg !6243
  store i32 0, i32* %i.i48, align 4, !dbg !6244
  br label %for.cond.i67, !dbg !6245

for.cond.i67:                                     ; preds = %if.end8.i75, %while.end.i65
  %46 = load i32, i32* %i.i48, align 4, !dbg !6246
  %47 = load i32, i32* %bits.i50, align 4, !dbg !6247
  %cmp3.i66 = icmp slt i32 %46, %47, !dbg !6248
  br i1 %cmp3.i66, label %for.body.i72, label %for.end.i81, !dbg !6249

for.body.i72:                                     ; preds = %for.cond.i67
  %48 = load i32, i32* %topbit.i51, align 4, !dbg !6250
  %shr.i68 = ashr i32 %48, 1, !dbg !6250
  store i32 %shr.i68, i32* %topbit.i51, align 4, !dbg !6250
  %49 = load i32, i32* %pbits.i49, align 4, !dbg !6251
  %shl4.i69 = shl i32 %49, 2, !dbg !6251
  store i32 %shl4.i69, i32* %pbits.i49, align 4, !dbg !6251
  %50 = load i32, i32* %val.addr.i47, align 4, !dbg !6252
  %51 = load i32, i32* %topbit.i51, align 4, !dbg !6253
  %and.i70 = and i32 %50, %51, !dbg !6254
  %tobool5.i71 = icmp ne i32 %and.i70, 0, !dbg !6254
  br i1 %tobool5.i71, label %if.then6.i74, label %if.end8.i75, !dbg !6255

if.then6.i74:                                     ; preds = %for.body.i72
  %52 = load i32, i32* %pbits.i49, align 4, !dbg !6256
  %or7.i73 = or i32 %52, 1, !dbg !6256
  store i32 %or7.i73, i32* %pbits.i49, align 4, !dbg !6256
  br label %if.end8.i75, !dbg !6257

if.end8.i75:                                      ; preds = %if.then6.i74, %for.body.i72
  %53 = load i32, i32* %i.i48, align 4, !dbg !6258
  %inc9.i76 = add nsw i32 %53, 1, !dbg !6258
  store i32 %inc9.i76, i32* %i.i48, align 4, !dbg !6258
  br label %for.cond.i67, !dbg !6259, !llvm.loop !3893

for.end.i81:                                      ; preds = %for.cond.i67
  %54 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i46, align 8, !dbg !6260
  %55 = load i32, i32* %bits.i50, align 4, !dbg !6261
  %mul.i77 = mul nsw i32 %55, 2, !dbg !6262
  %add.i78 = add nsw i32 %mul.i77, 1, !dbg !6263
  %56 = load i32, i32* %pbits.i49, align 4, !dbg !6264
  %shl10.i79 = shl i32 %56, 1, !dbg !6265
  %or11.i80 = or i32 %shl10.i79, 1, !dbg !6266
  call void @put_bits(%struct.PutBitContext* %54, i32 %add.i78, i32 %or11.i80) #9, !dbg !6267
  br label %put_vc2_ue_uint.exit82, !dbg !6268

put_vc2_ue_uint.exit82:                           ; preds = %if.then.i55, %for.end.i81
  %57 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6269
  %pb18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %57, i32 0, i32 1, !dbg !6270
  call void @put_bits(%struct.PutBitContext* %pb18, i32 1, i32 1), !dbg !6271
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6272
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 77, !dbg !6274
  %59 = load i32, i32* %colorspace, align 4, !dbg !6274
  %cmp19 = icmp eq i32 %59, 0, !dbg !6275
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !6276

if.then20:                                        ; preds = %put_vc2_ue_uint.exit82
  store i32 3, i32* %val, align 4, !dbg !6277
  br label %if.end32, !dbg !6278

if.else21:                                        ; preds = %put_vc2_ue_uint.exit82
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6279
  %colorspace22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 77, !dbg !6281
  %61 = load i32, i32* %colorspace22, align 4, !dbg !6281
  %cmp23 = icmp eq i32 %61, 8, !dbg !6282
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !6283

if.then24:                                        ; preds = %if.else21
  store i32 2, i32* %val, align 4, !dbg !6284
  br label %if.end31, !dbg !6285

if.else25:                                        ; preds = %if.else21
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6286
  %colorspace26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 77, !dbg !6288
  %63 = load i32, i32* %colorspace26, align 4, !dbg !6288
  %cmp27 = icmp eq i32 %63, 5, !dbg !6289
  br i1 %cmp27, label %if.then28, label %if.else29, !dbg !6290

if.then28:                                        ; preds = %if.else25
  store i32 1, i32* %val, align 4, !dbg !6291
  br label %if.end30, !dbg !6292

if.else29:                                        ; preds = %if.else25
  store i32 0, i32* %val, align 4, !dbg !6293
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then28
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then24
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then20
  %64 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6294
  %pb33 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %64, i32 0, i32 1, !dbg !6295
  %65 = load i32, i32* %val, align 4, !dbg !6296
  store %struct.PutBitContext* %pb33, %struct.PutBitContext** %pb.addr.i83, align 8, !dbg !6297
  store i32 %65, i32* %val.addr.i84, align 4, !dbg !6297
  store i32 0, i32* %pbits.i86, align 4, !dbg !6112
  store i32 0, i32* %bits.i87, align 4, !dbg !6113
  store i32 1, i32* %topbit.i88, align 4, !dbg !6114
  store i32 1, i32* %maxval.i89, align 4, !dbg !6115
  %66 = load i32, i32* %val.addr.i84, align 4, !dbg !6298
  %inc.i90 = add i32 %66, 1, !dbg !6298
  store i32 %inc.i90, i32* %val.addr.i84, align 4, !dbg !6298
  %tobool.i91 = icmp ne i32 %66, 0, !dbg !6298
  br i1 %tobool.i91, label %if.end.i93, label %if.then.i92, !dbg !6299

if.then.i92:                                      ; preds = %if.end32
  %67 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i83, align 8, !dbg !6300
  call void @put_bits(%struct.PutBitContext* %67, i32 1, i32 1) #9, !dbg !6301
  br label %put_vc2_ue_uint.exit119, !dbg !6302

if.end.i93:                                       ; preds = %if.end32
  br label %while.cond.i95, !dbg !6303

while.cond.i95:                                   ; preds = %while.body.i99, %if.end.i93
  %68 = load i32, i32* %val.addr.i84, align 4, !dbg !6304
  %69 = load i32, i32* %maxval.i89, align 4, !dbg !6305
  %cmp.i94 = icmp ugt i32 %68, %69, !dbg !6306
  br i1 %cmp.i94, label %while.body.i99, label %while.end.i102, !dbg !6307

while.body.i99:                                   ; preds = %while.cond.i95
  %70 = load i32, i32* %topbit.i88, align 4, !dbg !6308
  %shl.i96 = shl i32 %70, 1, !dbg !6308
  store i32 %shl.i96, i32* %topbit.i88, align 4, !dbg !6308
  %71 = load i32, i32* %maxval.i89, align 4, !dbg !6309
  %shl1.i97 = shl i32 %71, 1, !dbg !6309
  store i32 %shl1.i97, i32* %maxval.i89, align 4, !dbg !6309
  %72 = load i32, i32* %maxval.i89, align 4, !dbg !6310
  %or.i98 = or i32 %72, 1, !dbg !6310
  store i32 %or.i98, i32* %maxval.i89, align 4, !dbg !6310
  br label %while.cond.i95, !dbg !6311, !llvm.loop !3864

while.end.i102:                                   ; preds = %while.cond.i95
  %73 = load i32, i32* %topbit.i88, align 4, !dbg !6312
  %or2.i100 = or i32 %73, 1, !dbg !6313
  %74 = call i32 @llvm.ctlz.i32(i32 %or2.i100, i1 true) #9, !dbg !6314
  %sub.i101 = sub nsw i32 31, %74, !dbg !6315
  store i32 %sub.i101, i32* %bits.i87, align 4, !dbg !6316
  store i32 0, i32* %i.i85, align 4, !dbg !6317
  br label %for.cond.i104, !dbg !6318

for.cond.i104:                                    ; preds = %if.end8.i112, %while.end.i102
  %75 = load i32, i32* %i.i85, align 4, !dbg !6319
  %76 = load i32, i32* %bits.i87, align 4, !dbg !6320
  %cmp3.i103 = icmp slt i32 %75, %76, !dbg !6321
  br i1 %cmp3.i103, label %for.body.i109, label %for.end.i118, !dbg !6322

for.body.i109:                                    ; preds = %for.cond.i104
  %77 = load i32, i32* %topbit.i88, align 4, !dbg !6323
  %shr.i105 = ashr i32 %77, 1, !dbg !6323
  store i32 %shr.i105, i32* %topbit.i88, align 4, !dbg !6323
  %78 = load i32, i32* %pbits.i86, align 4, !dbg !6324
  %shl4.i106 = shl i32 %78, 2, !dbg !6324
  store i32 %shl4.i106, i32* %pbits.i86, align 4, !dbg !6324
  %79 = load i32, i32* %val.addr.i84, align 4, !dbg !6325
  %80 = load i32, i32* %topbit.i88, align 4, !dbg !6326
  %and.i107 = and i32 %79, %80, !dbg !6327
  %tobool5.i108 = icmp ne i32 %and.i107, 0, !dbg !6327
  br i1 %tobool5.i108, label %if.then6.i111, label %if.end8.i112, !dbg !6328

if.then6.i111:                                    ; preds = %for.body.i109
  %81 = load i32, i32* %pbits.i86, align 4, !dbg !6329
  %or7.i110 = or i32 %81, 1, !dbg !6329
  store i32 %or7.i110, i32* %pbits.i86, align 4, !dbg !6329
  br label %if.end8.i112, !dbg !6330

if.end8.i112:                                     ; preds = %if.then6.i111, %for.body.i109
  %82 = load i32, i32* %i.i85, align 4, !dbg !6331
  %inc9.i113 = add nsw i32 %82, 1, !dbg !6331
  store i32 %inc9.i113, i32* %i.i85, align 4, !dbg !6331
  br label %for.cond.i104, !dbg !6332, !llvm.loop !3893

for.end.i118:                                     ; preds = %for.cond.i104
  %83 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i83, align 8, !dbg !6333
  %84 = load i32, i32* %bits.i87, align 4, !dbg !6334
  %mul.i114 = mul nsw i32 %84, 2, !dbg !6335
  %add.i115 = add nsw i32 %mul.i114, 1, !dbg !6336
  %85 = load i32, i32* %pbits.i86, align 4, !dbg !6337
  %shl10.i116 = shl i32 %85, 1, !dbg !6338
  %or11.i117 = or i32 %shl10.i116, 1, !dbg !6339
  call void @put_bits(%struct.PutBitContext* %83, i32 %add.i115, i32 %or11.i117) #9, !dbg !6340
  br label %put_vc2_ue_uint.exit119, !dbg !6341

put_vc2_ue_uint.exit119:                          ; preds = %if.then.i92, %for.end.i118
  %86 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6342
  %pb34 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %86, i32 0, i32 1, !dbg !6343
  call void @put_bits(%struct.PutBitContext* %pb34, i32 1, i32 1), !dbg !6344
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6345
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 76, !dbg !6347
  %88 = load i32, i32* %color_trc, align 8, !dbg !6347
  %cmp35 = icmp eq i32 %88, 8, !dbg !6348
  br i1 %cmp35, label %if.then36, label %if.else37, !dbg !6349

if.then36:                                        ; preds = %put_vc2_ue_uint.exit119
  store i32 2, i32* %val, align 4, !dbg !6350
  br label %if.end43, !dbg !6351

if.else37:                                        ; preds = %put_vc2_ue_uint.exit119
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6352
  %color_trc38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %89, i32 0, i32 76, !dbg !6354
  %90 = load i32, i32* %color_trc38, align 8, !dbg !6354
  %cmp39 = icmp eq i32 %90, 12, !dbg !6355
  br i1 %cmp39, label %if.then40, label %if.else41, !dbg !6356

if.then40:                                        ; preds = %if.else37
  store i32 1, i32* %val, align 4, !dbg !6357
  br label %if.end42, !dbg !6358

if.else41:                                        ; preds = %if.else37
  store i32 0, i32* %val, align 4, !dbg !6359
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then40
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then36
  %91 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6360
  %pb44 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %91, i32 0, i32 1, !dbg !6361
  %92 = load i32, i32* %val, align 4, !dbg !6362
  store %struct.PutBitContext* %pb44, %struct.PutBitContext** %pb.addr.i120, align 8, !dbg !6363
  store i32 %92, i32* %val.addr.i121, align 4, !dbg !6363
  store i32 0, i32* %pbits.i123, align 4, !dbg !6104
  store i32 0, i32* %bits.i124, align 4, !dbg !6105
  store i32 1, i32* %topbit.i125, align 4, !dbg !6106
  store i32 1, i32* %maxval.i126, align 4, !dbg !6107
  %93 = load i32, i32* %val.addr.i121, align 4, !dbg !6364
  %inc.i127 = add i32 %93, 1, !dbg !6364
  store i32 %inc.i127, i32* %val.addr.i121, align 4, !dbg !6364
  %tobool.i128 = icmp ne i32 %93, 0, !dbg !6364
  br i1 %tobool.i128, label %if.end.i130, label %if.then.i129, !dbg !6365

if.then.i129:                                     ; preds = %if.end43
  %94 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i120, align 8, !dbg !6366
  call void @put_bits(%struct.PutBitContext* %94, i32 1, i32 1) #9, !dbg !6367
  br label %put_vc2_ue_uint.exit156, !dbg !6368

if.end.i130:                                      ; preds = %if.end43
  br label %while.cond.i132, !dbg !6369

while.cond.i132:                                  ; preds = %while.body.i136, %if.end.i130
  %95 = load i32, i32* %val.addr.i121, align 4, !dbg !6370
  %96 = load i32, i32* %maxval.i126, align 4, !dbg !6371
  %cmp.i131 = icmp ugt i32 %95, %96, !dbg !6372
  br i1 %cmp.i131, label %while.body.i136, label %while.end.i139, !dbg !6373

while.body.i136:                                  ; preds = %while.cond.i132
  %97 = load i32, i32* %topbit.i125, align 4, !dbg !6374
  %shl.i133 = shl i32 %97, 1, !dbg !6374
  store i32 %shl.i133, i32* %topbit.i125, align 4, !dbg !6374
  %98 = load i32, i32* %maxval.i126, align 4, !dbg !6375
  %shl1.i134 = shl i32 %98, 1, !dbg !6375
  store i32 %shl1.i134, i32* %maxval.i126, align 4, !dbg !6375
  %99 = load i32, i32* %maxval.i126, align 4, !dbg !6376
  %or.i135 = or i32 %99, 1, !dbg !6376
  store i32 %or.i135, i32* %maxval.i126, align 4, !dbg !6376
  br label %while.cond.i132, !dbg !6377, !llvm.loop !3864

while.end.i139:                                   ; preds = %while.cond.i132
  %100 = load i32, i32* %topbit.i125, align 4, !dbg !6378
  %or2.i137 = or i32 %100, 1, !dbg !6379
  %101 = call i32 @llvm.ctlz.i32(i32 %or2.i137, i1 true) #9, !dbg !6380
  %sub.i138 = sub nsw i32 31, %101, !dbg !6381
  store i32 %sub.i138, i32* %bits.i124, align 4, !dbg !6382
  store i32 0, i32* %i.i122, align 4, !dbg !6383
  br label %for.cond.i141, !dbg !6384

for.cond.i141:                                    ; preds = %if.end8.i149, %while.end.i139
  %102 = load i32, i32* %i.i122, align 4, !dbg !6385
  %103 = load i32, i32* %bits.i124, align 4, !dbg !6386
  %cmp3.i140 = icmp slt i32 %102, %103, !dbg !6387
  br i1 %cmp3.i140, label %for.body.i146, label %for.end.i155, !dbg !6388

for.body.i146:                                    ; preds = %for.cond.i141
  %104 = load i32, i32* %topbit.i125, align 4, !dbg !6389
  %shr.i142 = ashr i32 %104, 1, !dbg !6389
  store i32 %shr.i142, i32* %topbit.i125, align 4, !dbg !6389
  %105 = load i32, i32* %pbits.i123, align 4, !dbg !6390
  %shl4.i143 = shl i32 %105, 2, !dbg !6390
  store i32 %shl4.i143, i32* %pbits.i123, align 4, !dbg !6390
  %106 = load i32, i32* %val.addr.i121, align 4, !dbg !6391
  %107 = load i32, i32* %topbit.i125, align 4, !dbg !6392
  %and.i144 = and i32 %106, %107, !dbg !6393
  %tobool5.i145 = icmp ne i32 %and.i144, 0, !dbg !6393
  br i1 %tobool5.i145, label %if.then6.i148, label %if.end8.i149, !dbg !6394

if.then6.i148:                                    ; preds = %for.body.i146
  %108 = load i32, i32* %pbits.i123, align 4, !dbg !6395
  %or7.i147 = or i32 %108, 1, !dbg !6395
  store i32 %or7.i147, i32* %pbits.i123, align 4, !dbg !6395
  br label %if.end8.i149, !dbg !6396

if.end8.i149:                                     ; preds = %if.then6.i148, %for.body.i146
  %109 = load i32, i32* %i.i122, align 4, !dbg !6397
  %inc9.i150 = add nsw i32 %109, 1, !dbg !6397
  store i32 %inc9.i150, i32* %i.i122, align 4, !dbg !6397
  br label %for.cond.i141, !dbg !6398, !llvm.loop !3893

for.end.i155:                                     ; preds = %for.cond.i141
  %110 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i120, align 8, !dbg !6399
  %111 = load i32, i32* %bits.i124, align 4, !dbg !6400
  %mul.i151 = mul nsw i32 %111, 2, !dbg !6401
  %add.i152 = add nsw i32 %mul.i151, 1, !dbg !6402
  %112 = load i32, i32* %pbits.i123, align 4, !dbg !6403
  %shl10.i153 = shl i32 %112, 1, !dbg !6404
  %or11.i154 = or i32 %shl10.i153, 1, !dbg !6405
  call void @put_bits(%struct.PutBitContext* %110, i32 %add.i152, i32 %or11.i154) #9, !dbg !6406
  br label %put_vc2_ue_uint.exit156, !dbg !6407

put_vc2_ue_uint.exit156:                          ; preds = %if.then.i129, %for.end.i155
  br label %if.end45, !dbg !6408

if.end45:                                         ; preds = %put_vc2_ue_uint.exit156, %entry
  ret void, !dbg !6409
}

; Function Attrs: nounwind uwtable
define internal void @encode_picture_header(%struct.VC2EncContext* %s) #4 !dbg !6410 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6411, metadata !1752), !dbg !6412
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6413
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6414
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !6415
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6416
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 1, !dbg !6417
  %2 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6418
  %picture_number = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %2, i32 0, i32 10, !dbg !6419
  %3 = load i32, i32* %picture_number, align 4, !dbg !6420
  %inc = add i32 %3, 1, !dbg !6420
  store i32 %inc, i32* %picture_number, align 4, !dbg !6420
  call void @put_bits32(%struct.PutBitContext* %pb1, i32 %3), !dbg !6421
  ret void, !dbg !6422
}

; Function Attrs: nounwind uwtable
define internal void @encode_wavelet_transform(%struct.VC2EncContext* %s) #4 !dbg !6423 {
entry:
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6424, metadata !1752), !dbg !6425
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6426
  call void @encode_transform_params(%struct.VC2EncContext* %0), !dbg !6427
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6428
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 1, !dbg !6429
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb), !dbg !6430
  ret void, !dbg !6431
}

; Function Attrs: nounwind uwtable
define internal void @encode_transform_params(%struct.VC2EncContext* %s) #4 !dbg !6432 {
entry:
  %pb.addr.i2 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i2, metadata !3807, metadata !1752), !dbg !6433
  %val.addr.i3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i3, metadata !3813, metadata !1752), !dbg !6435
  %i.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i4, metadata !3815, metadata !1752), !dbg !6436
  %pbits.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i5, metadata !3817, metadata !1752), !dbg !6437
  %bits.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i6, metadata !3819, metadata !1752), !dbg !6438
  %topbit.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i7, metadata !3821, metadata !1752), !dbg !6439
  %maxval.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i8, metadata !3823, metadata !1752), !dbg !6440
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !6441
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !6443
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !6444
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !6445
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !6446
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !6447
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !6448
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6449, metadata !1752), !dbg !6450
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6451
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6452
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6453
  %wavelet_idx = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 29, !dbg !6454
  %2 = load i32, i32* %wavelet_idx, align 8, !dbg !6454
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6455
  store i32 %2, i32* %val.addr.i, align 4, !dbg !6455
  store i32 0, i32* %pbits.i, align 4, !dbg !6445
  store i32 0, i32* %bits.i, align 4, !dbg !6446
  store i32 1, i32* %topbit.i, align 4, !dbg !6447
  store i32 1, i32* %maxval.i, align 4, !dbg !6448
  %3 = load i32, i32* %val.addr.i, align 4, !dbg !6456
  %inc.i = add i32 %3, 1, !dbg !6456
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !6456
  %tobool.i = icmp ne i32 %3, 0, !dbg !6456
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !6457

if.then.i:                                        ; preds = %entry
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6458
  call void @put_bits(%struct.PutBitContext* %4, i32 1, i32 1) #9, !dbg !6459
  br label %put_vc2_ue_uint.exit, !dbg !6460

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !6461

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %5 = load i32, i32* %val.addr.i, align 4, !dbg !6462
  %6 = load i32, i32* %maxval.i, align 4, !dbg !6463
  %cmp.i = icmp ugt i32 %5, %6, !dbg !6464
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !6465

while.body.i:                                     ; preds = %while.cond.i
  %7 = load i32, i32* %topbit.i, align 4, !dbg !6466
  %shl.i = shl i32 %7, 1, !dbg !6466
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !6466
  %8 = load i32, i32* %maxval.i, align 4, !dbg !6467
  %shl1.i = shl i32 %8, 1, !dbg !6467
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !6467
  %9 = load i32, i32* %maxval.i, align 4, !dbg !6468
  %or.i = or i32 %9, 1, !dbg !6468
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !6468
  br label %while.cond.i, !dbg !6469, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %10 = load i32, i32* %topbit.i, align 4, !dbg !6470
  %or2.i = or i32 %10, 1, !dbg !6471
  %11 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !6472
  %sub.i = sub nsw i32 31, %11, !dbg !6473
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !6474
  store i32 0, i32* %i.i, align 4, !dbg !6475
  br label %for.cond.i, !dbg !6476

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %12 = load i32, i32* %i.i, align 4, !dbg !6477
  %13 = load i32, i32* %bits.i, align 4, !dbg !6478
  %cmp3.i = icmp slt i32 %12, %13, !dbg !6479
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !6480

for.body.i:                                       ; preds = %for.cond.i
  %14 = load i32, i32* %topbit.i, align 4, !dbg !6481
  %shr.i = ashr i32 %14, 1, !dbg !6481
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !6481
  %15 = load i32, i32* %pbits.i, align 4, !dbg !6482
  %shl4.i = shl i32 %15, 2, !dbg !6482
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !6482
  %16 = load i32, i32* %val.addr.i, align 4, !dbg !6483
  %17 = load i32, i32* %topbit.i, align 4, !dbg !6484
  %and.i = and i32 %16, %17, !dbg !6485
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !6485
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !6486

if.then6.i:                                       ; preds = %for.body.i
  %18 = load i32, i32* %pbits.i, align 4, !dbg !6487
  %or7.i = or i32 %18, 1, !dbg !6487
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !6487
  br label %if.end8.i, !dbg !6488

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %19 = load i32, i32* %i.i, align 4, !dbg !6489
  %inc9.i = add nsw i32 %19, 1, !dbg !6489
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !6489
  br label %for.cond.i, !dbg !6490, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6491
  %21 = load i32, i32* %bits.i, align 4, !dbg !6492
  %mul.i = mul nsw i32 %21, 2, !dbg !6493
  %add.i = add nsw i32 %mul.i, 1, !dbg !6494
  %22 = load i32, i32* %pbits.i, align 4, !dbg !6495
  %shl10.i = shl i32 %22, 1, !dbg !6496
  %or11.i = or i32 %shl10.i, 1, !dbg !6497
  call void @put_bits(%struct.PutBitContext* %20, i32 %add.i, i32 %or11.i) #9, !dbg !6498
  br label %put_vc2_ue_uint.exit, !dbg !6499

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6500
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 1, !dbg !6501
  %24 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6502
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %24, i32 0, i32 30, !dbg !6503
  %25 = load i32, i32* %wavelet_depth, align 4, !dbg !6503
  store %struct.PutBitContext* %pb1, %struct.PutBitContext** %pb.addr.i2, align 8, !dbg !6504
  store i32 %25, i32* %val.addr.i3, align 4, !dbg !6504
  store i32 0, i32* %pbits.i5, align 4, !dbg !6437
  store i32 0, i32* %bits.i6, align 4, !dbg !6438
  store i32 1, i32* %topbit.i7, align 4, !dbg !6439
  store i32 1, i32* %maxval.i8, align 4, !dbg !6440
  %26 = load i32, i32* %val.addr.i3, align 4, !dbg !6505
  %inc.i9 = add i32 %26, 1, !dbg !6505
  store i32 %inc.i9, i32* %val.addr.i3, align 4, !dbg !6505
  %tobool.i10 = icmp ne i32 %26, 0, !dbg !6505
  br i1 %tobool.i10, label %if.end.i12, label %if.then.i11, !dbg !6506

if.then.i11:                                      ; preds = %put_vc2_ue_uint.exit
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i2, align 8, !dbg !6507
  call void @put_bits(%struct.PutBitContext* %27, i32 1, i32 1) #9, !dbg !6508
  br label %put_vc2_ue_uint.exit38, !dbg !6509

if.end.i12:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i14, !dbg !6510

while.cond.i14:                                   ; preds = %while.body.i18, %if.end.i12
  %28 = load i32, i32* %val.addr.i3, align 4, !dbg !6511
  %29 = load i32, i32* %maxval.i8, align 4, !dbg !6512
  %cmp.i13 = icmp ugt i32 %28, %29, !dbg !6513
  br i1 %cmp.i13, label %while.body.i18, label %while.end.i21, !dbg !6514

while.body.i18:                                   ; preds = %while.cond.i14
  %30 = load i32, i32* %topbit.i7, align 4, !dbg !6515
  %shl.i15 = shl i32 %30, 1, !dbg !6515
  store i32 %shl.i15, i32* %topbit.i7, align 4, !dbg !6515
  %31 = load i32, i32* %maxval.i8, align 4, !dbg !6516
  %shl1.i16 = shl i32 %31, 1, !dbg !6516
  store i32 %shl1.i16, i32* %maxval.i8, align 4, !dbg !6516
  %32 = load i32, i32* %maxval.i8, align 4, !dbg !6517
  %or.i17 = or i32 %32, 1, !dbg !6517
  store i32 %or.i17, i32* %maxval.i8, align 4, !dbg !6517
  br label %while.cond.i14, !dbg !6518, !llvm.loop !3864

while.end.i21:                                    ; preds = %while.cond.i14
  %33 = load i32, i32* %topbit.i7, align 4, !dbg !6519
  %or2.i19 = or i32 %33, 1, !dbg !6520
  %34 = call i32 @llvm.ctlz.i32(i32 %or2.i19, i1 true) #9, !dbg !6521
  %sub.i20 = sub nsw i32 31, %34, !dbg !6522
  store i32 %sub.i20, i32* %bits.i6, align 4, !dbg !6523
  store i32 0, i32* %i.i4, align 4, !dbg !6524
  br label %for.cond.i23, !dbg !6525

for.cond.i23:                                     ; preds = %if.end8.i31, %while.end.i21
  %35 = load i32, i32* %i.i4, align 4, !dbg !6526
  %36 = load i32, i32* %bits.i6, align 4, !dbg !6527
  %cmp3.i22 = icmp slt i32 %35, %36, !dbg !6528
  br i1 %cmp3.i22, label %for.body.i28, label %for.end.i37, !dbg !6529

for.body.i28:                                     ; preds = %for.cond.i23
  %37 = load i32, i32* %topbit.i7, align 4, !dbg !6530
  %shr.i24 = ashr i32 %37, 1, !dbg !6530
  store i32 %shr.i24, i32* %topbit.i7, align 4, !dbg !6530
  %38 = load i32, i32* %pbits.i5, align 4, !dbg !6531
  %shl4.i25 = shl i32 %38, 2, !dbg !6531
  store i32 %shl4.i25, i32* %pbits.i5, align 4, !dbg !6531
  %39 = load i32, i32* %val.addr.i3, align 4, !dbg !6532
  %40 = load i32, i32* %topbit.i7, align 4, !dbg !6533
  %and.i26 = and i32 %39, %40, !dbg !6534
  %tobool5.i27 = icmp ne i32 %and.i26, 0, !dbg !6534
  br i1 %tobool5.i27, label %if.then6.i30, label %if.end8.i31, !dbg !6535

if.then6.i30:                                     ; preds = %for.body.i28
  %41 = load i32, i32* %pbits.i5, align 4, !dbg !6536
  %or7.i29 = or i32 %41, 1, !dbg !6536
  store i32 %or7.i29, i32* %pbits.i5, align 4, !dbg !6536
  br label %if.end8.i31, !dbg !6537

if.end8.i31:                                      ; preds = %if.then6.i30, %for.body.i28
  %42 = load i32, i32* %i.i4, align 4, !dbg !6538
  %inc9.i32 = add nsw i32 %42, 1, !dbg !6538
  store i32 %inc9.i32, i32* %i.i4, align 4, !dbg !6538
  br label %for.cond.i23, !dbg !6539, !llvm.loop !3893

for.end.i37:                                      ; preds = %for.cond.i23
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i2, align 8, !dbg !6540
  %44 = load i32, i32* %bits.i6, align 4, !dbg !6541
  %mul.i33 = mul nsw i32 %44, 2, !dbg !6542
  %add.i34 = add nsw i32 %mul.i33, 1, !dbg !6543
  %45 = load i32, i32* %pbits.i5, align 4, !dbg !6544
  %shl10.i35 = shl i32 %45, 1, !dbg !6545
  %or11.i36 = or i32 %shl10.i35, 1, !dbg !6546
  call void @put_bits(%struct.PutBitContext* %43, i32 %add.i34, i32 %or11.i36) #9, !dbg !6547
  br label %put_vc2_ue_uint.exit38, !dbg !6548

put_vc2_ue_uint.exit38:                           ; preds = %if.then.i11, %for.end.i37
  %46 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6549
  call void @encode_slice_params(%struct.VC2EncContext* %46), !dbg !6550
  %47 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6551
  call void @encode_quant_matrix(%struct.VC2EncContext* %47), !dbg !6552
  ret void, !dbg !6553
}

; Function Attrs: nounwind uwtable
define internal void @encode_slice_params(%struct.VC2EncContext* %s) #4 !dbg !6554 {
entry:
  %pb.addr.i78 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i78, metadata !3807, metadata !1752), !dbg !6555
  %val.addr.i79 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i79, metadata !3813, metadata !1752), !dbg !6557
  %i.i80 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i80, metadata !3815, metadata !1752), !dbg !6558
  %pbits.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i81, metadata !3817, metadata !1752), !dbg !6559
  %bits.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i82, metadata !3819, metadata !1752), !dbg !6560
  %topbit.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i83, metadata !3821, metadata !1752), !dbg !6561
  %maxval.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i84, metadata !3823, metadata !1752), !dbg !6562
  %pb.addr.i41 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i41, metadata !3807, metadata !1752), !dbg !6563
  %val.addr.i42 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i42, metadata !3813, metadata !1752), !dbg !6565
  %i.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i43, metadata !3815, metadata !1752), !dbg !6566
  %pbits.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i44, metadata !3817, metadata !1752), !dbg !6567
  %bits.i45 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i45, metadata !3819, metadata !1752), !dbg !6568
  %topbit.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i46, metadata !3821, metadata !1752), !dbg !6569
  %maxval.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i47, metadata !3823, metadata !1752), !dbg !6570
  %pb.addr.i4 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i4, metadata !3807, metadata !1752), !dbg !6571
  %val.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i5, metadata !3813, metadata !1752), !dbg !6573
  %i.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i6, metadata !3815, metadata !1752), !dbg !6574
  %pbits.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i7, metadata !3817, metadata !1752), !dbg !6575
  %bits.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i8, metadata !3819, metadata !1752), !dbg !6576
  %topbit.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i9, metadata !3821, metadata !1752), !dbg !6577
  %maxval.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i10, metadata !3823, metadata !1752), !dbg !6578
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !6579
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !6581
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !6582
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !6583
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !6584
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !6585
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !6586
  %s.addr = alloca %struct.VC2EncContext*, align 8
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6587, metadata !1752), !dbg !6588
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6589
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6590
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6591
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 17, !dbg !6592
  %2 = load i32, i32* %num_x, align 4, !dbg !6592
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6593
  store i32 %2, i32* %val.addr.i, align 4, !dbg !6593
  store i32 0, i32* %pbits.i, align 4, !dbg !6583
  store i32 0, i32* %bits.i, align 4, !dbg !6584
  store i32 1, i32* %topbit.i, align 4, !dbg !6585
  store i32 1, i32* %maxval.i, align 4, !dbg !6586
  %3 = load i32, i32* %val.addr.i, align 4, !dbg !6594
  %inc.i = add i32 %3, 1, !dbg !6594
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !6594
  %tobool.i = icmp ne i32 %3, 0, !dbg !6594
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !6595

if.then.i:                                        ; preds = %entry
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6596
  call void @put_bits(%struct.PutBitContext* %4, i32 1, i32 1) #9, !dbg !6597
  br label %put_vc2_ue_uint.exit, !dbg !6598

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !6599

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %5 = load i32, i32* %val.addr.i, align 4, !dbg !6600
  %6 = load i32, i32* %maxval.i, align 4, !dbg !6601
  %cmp.i = icmp ugt i32 %5, %6, !dbg !6602
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !6603

while.body.i:                                     ; preds = %while.cond.i
  %7 = load i32, i32* %topbit.i, align 4, !dbg !6604
  %shl.i = shl i32 %7, 1, !dbg !6604
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !6604
  %8 = load i32, i32* %maxval.i, align 4, !dbg !6605
  %shl1.i = shl i32 %8, 1, !dbg !6605
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !6605
  %9 = load i32, i32* %maxval.i, align 4, !dbg !6606
  %or.i = or i32 %9, 1, !dbg !6606
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !6606
  br label %while.cond.i, !dbg !6607, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %10 = load i32, i32* %topbit.i, align 4, !dbg !6608
  %or2.i = or i32 %10, 1, !dbg !6609
  %11 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !6610
  %sub.i = sub nsw i32 31, %11, !dbg !6611
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !6612
  store i32 0, i32* %i.i, align 4, !dbg !6613
  br label %for.cond.i, !dbg !6614

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %12 = load i32, i32* %i.i, align 4, !dbg !6615
  %13 = load i32, i32* %bits.i, align 4, !dbg !6616
  %cmp3.i = icmp slt i32 %12, %13, !dbg !6617
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !6618

for.body.i:                                       ; preds = %for.cond.i
  %14 = load i32, i32* %topbit.i, align 4, !dbg !6619
  %shr.i = ashr i32 %14, 1, !dbg !6619
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !6619
  %15 = load i32, i32* %pbits.i, align 4, !dbg !6620
  %shl4.i = shl i32 %15, 2, !dbg !6620
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !6620
  %16 = load i32, i32* %val.addr.i, align 4, !dbg !6621
  %17 = load i32, i32* %topbit.i, align 4, !dbg !6622
  %and.i = and i32 %16, %17, !dbg !6623
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !6623
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !6624

if.then6.i:                                       ; preds = %for.body.i
  %18 = load i32, i32* %pbits.i, align 4, !dbg !6625
  %or7.i = or i32 %18, 1, !dbg !6625
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !6625
  br label %if.end8.i, !dbg !6626

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %19 = load i32, i32* %i.i, align 4, !dbg !6627
  %inc9.i = add nsw i32 %19, 1, !dbg !6627
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !6627
  br label %for.cond.i, !dbg !6628, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6629
  %21 = load i32, i32* %bits.i, align 4, !dbg !6630
  %mul.i = mul nsw i32 %21, 2, !dbg !6631
  %add.i = add nsw i32 %mul.i, 1, !dbg !6632
  %22 = load i32, i32* %pbits.i, align 4, !dbg !6633
  %shl10.i = shl i32 %22, 1, !dbg !6634
  %or11.i = or i32 %shl10.i, 1, !dbg !6635
  call void @put_bits(%struct.PutBitContext* %20, i32 %add.i, i32 %or11.i) #9, !dbg !6636
  br label %put_vc2_ue_uint.exit, !dbg !6637

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6638
  %pb1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 1, !dbg !6639
  %24 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6640
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %24, i32 0, i32 18, !dbg !6641
  %25 = load i32, i32* %num_y, align 8, !dbg !6641
  store %struct.PutBitContext* %pb1, %struct.PutBitContext** %pb.addr.i4, align 8, !dbg !6642
  store i32 %25, i32* %val.addr.i5, align 4, !dbg !6642
  store i32 0, i32* %pbits.i7, align 4, !dbg !6575
  store i32 0, i32* %bits.i8, align 4, !dbg !6576
  store i32 1, i32* %topbit.i9, align 4, !dbg !6577
  store i32 1, i32* %maxval.i10, align 4, !dbg !6578
  %26 = load i32, i32* %val.addr.i5, align 4, !dbg !6643
  %inc.i11 = add i32 %26, 1, !dbg !6643
  store i32 %inc.i11, i32* %val.addr.i5, align 4, !dbg !6643
  %tobool.i12 = icmp ne i32 %26, 0, !dbg !6643
  br i1 %tobool.i12, label %if.end.i14, label %if.then.i13, !dbg !6644

if.then.i13:                                      ; preds = %put_vc2_ue_uint.exit
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i4, align 8, !dbg !6645
  call void @put_bits(%struct.PutBitContext* %27, i32 1, i32 1) #9, !dbg !6646
  br label %put_vc2_ue_uint.exit40, !dbg !6647

if.end.i14:                                       ; preds = %put_vc2_ue_uint.exit
  br label %while.cond.i16, !dbg !6648

while.cond.i16:                                   ; preds = %while.body.i20, %if.end.i14
  %28 = load i32, i32* %val.addr.i5, align 4, !dbg !6649
  %29 = load i32, i32* %maxval.i10, align 4, !dbg !6650
  %cmp.i15 = icmp ugt i32 %28, %29, !dbg !6651
  br i1 %cmp.i15, label %while.body.i20, label %while.end.i23, !dbg !6652

while.body.i20:                                   ; preds = %while.cond.i16
  %30 = load i32, i32* %topbit.i9, align 4, !dbg !6653
  %shl.i17 = shl i32 %30, 1, !dbg !6653
  store i32 %shl.i17, i32* %topbit.i9, align 4, !dbg !6653
  %31 = load i32, i32* %maxval.i10, align 4, !dbg !6654
  %shl1.i18 = shl i32 %31, 1, !dbg !6654
  store i32 %shl1.i18, i32* %maxval.i10, align 4, !dbg !6654
  %32 = load i32, i32* %maxval.i10, align 4, !dbg !6655
  %or.i19 = or i32 %32, 1, !dbg !6655
  store i32 %or.i19, i32* %maxval.i10, align 4, !dbg !6655
  br label %while.cond.i16, !dbg !6656, !llvm.loop !3864

while.end.i23:                                    ; preds = %while.cond.i16
  %33 = load i32, i32* %topbit.i9, align 4, !dbg !6657
  %or2.i21 = or i32 %33, 1, !dbg !6658
  %34 = call i32 @llvm.ctlz.i32(i32 %or2.i21, i1 true) #9, !dbg !6659
  %sub.i22 = sub nsw i32 31, %34, !dbg !6660
  store i32 %sub.i22, i32* %bits.i8, align 4, !dbg !6661
  store i32 0, i32* %i.i6, align 4, !dbg !6662
  br label %for.cond.i25, !dbg !6663

for.cond.i25:                                     ; preds = %if.end8.i33, %while.end.i23
  %35 = load i32, i32* %i.i6, align 4, !dbg !6664
  %36 = load i32, i32* %bits.i8, align 4, !dbg !6665
  %cmp3.i24 = icmp slt i32 %35, %36, !dbg !6666
  br i1 %cmp3.i24, label %for.body.i30, label %for.end.i39, !dbg !6667

for.body.i30:                                     ; preds = %for.cond.i25
  %37 = load i32, i32* %topbit.i9, align 4, !dbg !6668
  %shr.i26 = ashr i32 %37, 1, !dbg !6668
  store i32 %shr.i26, i32* %topbit.i9, align 4, !dbg !6668
  %38 = load i32, i32* %pbits.i7, align 4, !dbg !6669
  %shl4.i27 = shl i32 %38, 2, !dbg !6669
  store i32 %shl4.i27, i32* %pbits.i7, align 4, !dbg !6669
  %39 = load i32, i32* %val.addr.i5, align 4, !dbg !6670
  %40 = load i32, i32* %topbit.i9, align 4, !dbg !6671
  %and.i28 = and i32 %39, %40, !dbg !6672
  %tobool5.i29 = icmp ne i32 %and.i28, 0, !dbg !6672
  br i1 %tobool5.i29, label %if.then6.i32, label %if.end8.i33, !dbg !6673

if.then6.i32:                                     ; preds = %for.body.i30
  %41 = load i32, i32* %pbits.i7, align 4, !dbg !6674
  %or7.i31 = or i32 %41, 1, !dbg !6674
  store i32 %or7.i31, i32* %pbits.i7, align 4, !dbg !6674
  br label %if.end8.i33, !dbg !6675

if.end8.i33:                                      ; preds = %if.then6.i32, %for.body.i30
  %42 = load i32, i32* %i.i6, align 4, !dbg !6676
  %inc9.i34 = add nsw i32 %42, 1, !dbg !6676
  store i32 %inc9.i34, i32* %i.i6, align 4, !dbg !6676
  br label %for.cond.i25, !dbg !6677, !llvm.loop !3893

for.end.i39:                                      ; preds = %for.cond.i25
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i4, align 8, !dbg !6678
  %44 = load i32, i32* %bits.i8, align 4, !dbg !6679
  %mul.i35 = mul nsw i32 %44, 2, !dbg !6680
  %add.i36 = add nsw i32 %mul.i35, 1, !dbg !6681
  %45 = load i32, i32* %pbits.i7, align 4, !dbg !6682
  %shl10.i37 = shl i32 %45, 1, !dbg !6683
  %or11.i38 = or i32 %shl10.i37, 1, !dbg !6684
  call void @put_bits(%struct.PutBitContext* %43, i32 %add.i36, i32 %or11.i38) #9, !dbg !6685
  br label %put_vc2_ue_uint.exit40, !dbg !6686

put_vc2_ue_uint.exit40:                           ; preds = %if.then.i13, %for.end.i39
  %46 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6687
  %pb2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %46, i32 0, i32 1, !dbg !6688
  %47 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6689
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %47, i32 0, i32 19, !dbg !6690
  %48 = load i32, i32* %prefix_bytes, align 4, !dbg !6690
  store %struct.PutBitContext* %pb2, %struct.PutBitContext** %pb.addr.i41, align 8, !dbg !6691
  store i32 %48, i32* %val.addr.i42, align 4, !dbg !6691
  store i32 0, i32* %pbits.i44, align 4, !dbg !6567
  store i32 0, i32* %bits.i45, align 4, !dbg !6568
  store i32 1, i32* %topbit.i46, align 4, !dbg !6569
  store i32 1, i32* %maxval.i47, align 4, !dbg !6570
  %49 = load i32, i32* %val.addr.i42, align 4, !dbg !6692
  %inc.i48 = add i32 %49, 1, !dbg !6692
  store i32 %inc.i48, i32* %val.addr.i42, align 4, !dbg !6692
  %tobool.i49 = icmp ne i32 %49, 0, !dbg !6692
  br i1 %tobool.i49, label %if.end.i51, label %if.then.i50, !dbg !6693

if.then.i50:                                      ; preds = %put_vc2_ue_uint.exit40
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i41, align 8, !dbg !6694
  call void @put_bits(%struct.PutBitContext* %50, i32 1, i32 1) #9, !dbg !6695
  br label %put_vc2_ue_uint.exit77, !dbg !6696

if.end.i51:                                       ; preds = %put_vc2_ue_uint.exit40
  br label %while.cond.i53, !dbg !6697

while.cond.i53:                                   ; preds = %while.body.i57, %if.end.i51
  %51 = load i32, i32* %val.addr.i42, align 4, !dbg !6698
  %52 = load i32, i32* %maxval.i47, align 4, !dbg !6699
  %cmp.i52 = icmp ugt i32 %51, %52, !dbg !6700
  br i1 %cmp.i52, label %while.body.i57, label %while.end.i60, !dbg !6701

while.body.i57:                                   ; preds = %while.cond.i53
  %53 = load i32, i32* %topbit.i46, align 4, !dbg !6702
  %shl.i54 = shl i32 %53, 1, !dbg !6702
  store i32 %shl.i54, i32* %topbit.i46, align 4, !dbg !6702
  %54 = load i32, i32* %maxval.i47, align 4, !dbg !6703
  %shl1.i55 = shl i32 %54, 1, !dbg !6703
  store i32 %shl1.i55, i32* %maxval.i47, align 4, !dbg !6703
  %55 = load i32, i32* %maxval.i47, align 4, !dbg !6704
  %or.i56 = or i32 %55, 1, !dbg !6704
  store i32 %or.i56, i32* %maxval.i47, align 4, !dbg !6704
  br label %while.cond.i53, !dbg !6705, !llvm.loop !3864

while.end.i60:                                    ; preds = %while.cond.i53
  %56 = load i32, i32* %topbit.i46, align 4, !dbg !6706
  %or2.i58 = or i32 %56, 1, !dbg !6707
  %57 = call i32 @llvm.ctlz.i32(i32 %or2.i58, i1 true) #9, !dbg !6708
  %sub.i59 = sub nsw i32 31, %57, !dbg !6709
  store i32 %sub.i59, i32* %bits.i45, align 4, !dbg !6710
  store i32 0, i32* %i.i43, align 4, !dbg !6711
  br label %for.cond.i62, !dbg !6712

for.cond.i62:                                     ; preds = %if.end8.i70, %while.end.i60
  %58 = load i32, i32* %i.i43, align 4, !dbg !6713
  %59 = load i32, i32* %bits.i45, align 4, !dbg !6714
  %cmp3.i61 = icmp slt i32 %58, %59, !dbg !6715
  br i1 %cmp3.i61, label %for.body.i67, label %for.end.i76, !dbg !6716

for.body.i67:                                     ; preds = %for.cond.i62
  %60 = load i32, i32* %topbit.i46, align 4, !dbg !6717
  %shr.i63 = ashr i32 %60, 1, !dbg !6717
  store i32 %shr.i63, i32* %topbit.i46, align 4, !dbg !6717
  %61 = load i32, i32* %pbits.i44, align 4, !dbg !6718
  %shl4.i64 = shl i32 %61, 2, !dbg !6718
  store i32 %shl4.i64, i32* %pbits.i44, align 4, !dbg !6718
  %62 = load i32, i32* %val.addr.i42, align 4, !dbg !6719
  %63 = load i32, i32* %topbit.i46, align 4, !dbg !6720
  %and.i65 = and i32 %62, %63, !dbg !6721
  %tobool5.i66 = icmp ne i32 %and.i65, 0, !dbg !6721
  br i1 %tobool5.i66, label %if.then6.i69, label %if.end8.i70, !dbg !6722

if.then6.i69:                                     ; preds = %for.body.i67
  %64 = load i32, i32* %pbits.i44, align 4, !dbg !6723
  %or7.i68 = or i32 %64, 1, !dbg !6723
  store i32 %or7.i68, i32* %pbits.i44, align 4, !dbg !6723
  br label %if.end8.i70, !dbg !6724

if.end8.i70:                                      ; preds = %if.then6.i69, %for.body.i67
  %65 = load i32, i32* %i.i43, align 4, !dbg !6725
  %inc9.i71 = add nsw i32 %65, 1, !dbg !6725
  store i32 %inc9.i71, i32* %i.i43, align 4, !dbg !6725
  br label %for.cond.i62, !dbg !6726, !llvm.loop !3893

for.end.i76:                                      ; preds = %for.cond.i62
  %66 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i41, align 8, !dbg !6727
  %67 = load i32, i32* %bits.i45, align 4, !dbg !6728
  %mul.i72 = mul nsw i32 %67, 2, !dbg !6729
  %add.i73 = add nsw i32 %mul.i72, 1, !dbg !6730
  %68 = load i32, i32* %pbits.i44, align 4, !dbg !6731
  %shl10.i74 = shl i32 %68, 1, !dbg !6732
  %or11.i75 = or i32 %shl10.i74, 1, !dbg !6733
  call void @put_bits(%struct.PutBitContext* %66, i32 %add.i73, i32 %or11.i75) #9, !dbg !6734
  br label %put_vc2_ue_uint.exit77, !dbg !6735

put_vc2_ue_uint.exit77:                           ; preds = %if.then.i50, %for.end.i76
  %69 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6736
  %pb3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %69, i32 0, i32 1, !dbg !6737
  %70 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6738
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %70, i32 0, i32 20, !dbg !6739
  %71 = load i32, i32* %size_scaler, align 8, !dbg !6739
  store %struct.PutBitContext* %pb3, %struct.PutBitContext** %pb.addr.i78, align 8, !dbg !6740
  store i32 %71, i32* %val.addr.i79, align 4, !dbg !6740
  store i32 0, i32* %pbits.i81, align 4, !dbg !6559
  store i32 0, i32* %bits.i82, align 4, !dbg !6560
  store i32 1, i32* %topbit.i83, align 4, !dbg !6561
  store i32 1, i32* %maxval.i84, align 4, !dbg !6562
  %72 = load i32, i32* %val.addr.i79, align 4, !dbg !6741
  %inc.i85 = add i32 %72, 1, !dbg !6741
  store i32 %inc.i85, i32* %val.addr.i79, align 4, !dbg !6741
  %tobool.i86 = icmp ne i32 %72, 0, !dbg !6741
  br i1 %tobool.i86, label %if.end.i88, label %if.then.i87, !dbg !6742

if.then.i87:                                      ; preds = %put_vc2_ue_uint.exit77
  %73 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i78, align 8, !dbg !6743
  call void @put_bits(%struct.PutBitContext* %73, i32 1, i32 1) #9, !dbg !6744
  br label %put_vc2_ue_uint.exit114, !dbg !6745

if.end.i88:                                       ; preds = %put_vc2_ue_uint.exit77
  br label %while.cond.i90, !dbg !6746

while.cond.i90:                                   ; preds = %while.body.i94, %if.end.i88
  %74 = load i32, i32* %val.addr.i79, align 4, !dbg !6747
  %75 = load i32, i32* %maxval.i84, align 4, !dbg !6748
  %cmp.i89 = icmp ugt i32 %74, %75, !dbg !6749
  br i1 %cmp.i89, label %while.body.i94, label %while.end.i97, !dbg !6750

while.body.i94:                                   ; preds = %while.cond.i90
  %76 = load i32, i32* %topbit.i83, align 4, !dbg !6751
  %shl.i91 = shl i32 %76, 1, !dbg !6751
  store i32 %shl.i91, i32* %topbit.i83, align 4, !dbg !6751
  %77 = load i32, i32* %maxval.i84, align 4, !dbg !6752
  %shl1.i92 = shl i32 %77, 1, !dbg !6752
  store i32 %shl1.i92, i32* %maxval.i84, align 4, !dbg !6752
  %78 = load i32, i32* %maxval.i84, align 4, !dbg !6753
  %or.i93 = or i32 %78, 1, !dbg !6753
  store i32 %or.i93, i32* %maxval.i84, align 4, !dbg !6753
  br label %while.cond.i90, !dbg !6754, !llvm.loop !3864

while.end.i97:                                    ; preds = %while.cond.i90
  %79 = load i32, i32* %topbit.i83, align 4, !dbg !6755
  %or2.i95 = or i32 %79, 1, !dbg !6756
  %80 = call i32 @llvm.ctlz.i32(i32 %or2.i95, i1 true) #9, !dbg !6757
  %sub.i96 = sub nsw i32 31, %80, !dbg !6758
  store i32 %sub.i96, i32* %bits.i82, align 4, !dbg !6759
  store i32 0, i32* %i.i80, align 4, !dbg !6760
  br label %for.cond.i99, !dbg !6761

for.cond.i99:                                     ; preds = %if.end8.i107, %while.end.i97
  %81 = load i32, i32* %i.i80, align 4, !dbg !6762
  %82 = load i32, i32* %bits.i82, align 4, !dbg !6763
  %cmp3.i98 = icmp slt i32 %81, %82, !dbg !6764
  br i1 %cmp3.i98, label %for.body.i104, label %for.end.i113, !dbg !6765

for.body.i104:                                    ; preds = %for.cond.i99
  %83 = load i32, i32* %topbit.i83, align 4, !dbg !6766
  %shr.i100 = ashr i32 %83, 1, !dbg !6766
  store i32 %shr.i100, i32* %topbit.i83, align 4, !dbg !6766
  %84 = load i32, i32* %pbits.i81, align 4, !dbg !6767
  %shl4.i101 = shl i32 %84, 2, !dbg !6767
  store i32 %shl4.i101, i32* %pbits.i81, align 4, !dbg !6767
  %85 = load i32, i32* %val.addr.i79, align 4, !dbg !6768
  %86 = load i32, i32* %topbit.i83, align 4, !dbg !6769
  %and.i102 = and i32 %85, %86, !dbg !6770
  %tobool5.i103 = icmp ne i32 %and.i102, 0, !dbg !6770
  br i1 %tobool5.i103, label %if.then6.i106, label %if.end8.i107, !dbg !6771

if.then6.i106:                                    ; preds = %for.body.i104
  %87 = load i32, i32* %pbits.i81, align 4, !dbg !6772
  %or7.i105 = or i32 %87, 1, !dbg !6772
  store i32 %or7.i105, i32* %pbits.i81, align 4, !dbg !6772
  br label %if.end8.i107, !dbg !6773

if.end8.i107:                                     ; preds = %if.then6.i106, %for.body.i104
  %88 = load i32, i32* %i.i80, align 4, !dbg !6774
  %inc9.i108 = add nsw i32 %88, 1, !dbg !6774
  store i32 %inc9.i108, i32* %i.i80, align 4, !dbg !6774
  br label %for.cond.i99, !dbg !6775, !llvm.loop !3893

for.end.i113:                                     ; preds = %for.cond.i99
  %89 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i78, align 8, !dbg !6776
  %90 = load i32, i32* %bits.i82, align 4, !dbg !6777
  %mul.i109 = mul nsw i32 %90, 2, !dbg !6778
  %add.i110 = add nsw i32 %mul.i109, 1, !dbg !6779
  %91 = load i32, i32* %pbits.i81, align 4, !dbg !6780
  %shl10.i111 = shl i32 %91, 1, !dbg !6781
  %or11.i112 = or i32 %shl10.i111, 1, !dbg !6782
  call void @put_bits(%struct.PutBitContext* %89, i32 %add.i110, i32 %or11.i112) #9, !dbg !6783
  br label %put_vc2_ue_uint.exit114, !dbg !6784

put_vc2_ue_uint.exit114:                          ; preds = %if.then.i87, %for.end.i113
  ret void, !dbg !6785
}

; Function Attrs: nounwind uwtable
define internal void @encode_quant_matrix(%struct.VC2EncContext* %s) #4 !dbg !6786 {
entry:
  %pb.addr.i96 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i96, metadata !3807, metadata !1752), !dbg !6787
  %val.addr.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i97, metadata !3813, metadata !1752), !dbg !6794
  %i.i98 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i98, metadata !3815, metadata !1752), !dbg !6795
  %pbits.i99 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i99, metadata !3817, metadata !1752), !dbg !6796
  %bits.i100 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i100, metadata !3819, metadata !1752), !dbg !6797
  %topbit.i101 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i101, metadata !3821, metadata !1752), !dbg !6798
  %maxval.i102 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i102, metadata !3823, metadata !1752), !dbg !6799
  %pb.addr.i59 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i59, metadata !3807, metadata !1752), !dbg !6800
  %val.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i60, metadata !3813, metadata !1752), !dbg !6802
  %i.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i61, metadata !3815, metadata !1752), !dbg !6803
  %pbits.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i62, metadata !3817, metadata !1752), !dbg !6804
  %bits.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i63, metadata !3819, metadata !1752), !dbg !6805
  %topbit.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i64, metadata !3821, metadata !1752), !dbg !6806
  %maxval.i65 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i65, metadata !3823, metadata !1752), !dbg !6807
  %pb.addr.i22 = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i22, metadata !3807, metadata !1752), !dbg !6808
  %val.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i23, metadata !3813, metadata !1752), !dbg !6810
  %i.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i24, metadata !3815, metadata !1752), !dbg !6811
  %pbits.i25 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i25, metadata !3817, metadata !1752), !dbg !6812
  %bits.i26 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i26, metadata !3819, metadata !1752), !dbg !6813
  %topbit.i27 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i27, metadata !3821, metadata !1752), !dbg !6814
  %maxval.i28 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i28, metadata !3823, metadata !1752), !dbg !6815
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !6816
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !6818
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !6819
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !6820
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !6821
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !6822
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !6823
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %level = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !6824, metadata !1752), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6826, metadata !1752), !dbg !6827
  %0 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6828
  %pb = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %0, i32 0, i32 1, !dbg !6829
  %1 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6830
  %custom_quant_matrix = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %1, i32 0, i32 15, !dbg !6831
  %2 = load i32, i32* %custom_quant_matrix, align 8, !dbg !6831
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %2), !dbg !6832
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6833
  %custom_quant_matrix1 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 15, !dbg !6834
  %4 = load i32, i32* %custom_quant_matrix1, align 8, !dbg !6834
  %tobool = icmp ne i32 %4, 0, !dbg !6833
  br i1 %tobool, label %if.then, label %if.end, !dbg !6835

if.then:                                          ; preds = %entry
  %5 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6836
  %pb2 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %5, i32 0, i32 1, !dbg !6837
  %6 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6838
  %quant = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %6, i32 0, i32 14, !dbg !6839
  %arrayidx = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant, i64 0, i64 0, !dbg !6838
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 0, !dbg !6838
  %7 = load i8, i8* %arrayidx3, align 4, !dbg !6838
  %conv = zext i8 %7 to i32, !dbg !6838
  store %struct.PutBitContext* %pb2, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6840
  store i32 %conv, i32* %val.addr.i, align 4, !dbg !6840
  store i32 0, i32* %pbits.i, align 4, !dbg !6820
  store i32 0, i32* %bits.i, align 4, !dbg !6821
  store i32 1, i32* %topbit.i, align 4, !dbg !6822
  store i32 1, i32* %maxval.i, align 4, !dbg !6823
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !6841
  %inc.i = add i32 %8, 1, !dbg !6841
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !6841
  %tobool.i = icmp ne i32 %8, 0, !dbg !6841
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !6842

if.then.i:                                        ; preds = %if.then
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6843
  call void @put_bits(%struct.PutBitContext* %9, i32 1, i32 1) #9, !dbg !6844
  br label %put_vc2_ue_uint.exit, !dbg !6845

if.end.i:                                         ; preds = %if.then
  br label %while.cond.i, !dbg !6846

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %10 = load i32, i32* %val.addr.i, align 4, !dbg !6847
  %11 = load i32, i32* %maxval.i, align 4, !dbg !6848
  %cmp.i = icmp ugt i32 %10, %11, !dbg !6849
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !6850

while.body.i:                                     ; preds = %while.cond.i
  %12 = load i32, i32* %topbit.i, align 4, !dbg !6851
  %shl.i = shl i32 %12, 1, !dbg !6851
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !6851
  %13 = load i32, i32* %maxval.i, align 4, !dbg !6852
  %shl1.i = shl i32 %13, 1, !dbg !6852
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !6852
  %14 = load i32, i32* %maxval.i, align 4, !dbg !6853
  %or.i = or i32 %14, 1, !dbg !6853
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !6853
  br label %while.cond.i, !dbg !6854, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %15 = load i32, i32* %topbit.i, align 4, !dbg !6855
  %or2.i = or i32 %15, 1, !dbg !6856
  %16 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !6857
  %sub.i = sub nsw i32 31, %16, !dbg !6858
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !6859
  store i32 0, i32* %i.i, align 4, !dbg !6860
  br label %for.cond.i, !dbg !6861

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %17 = load i32, i32* %i.i, align 4, !dbg !6862
  %18 = load i32, i32* %bits.i, align 4, !dbg !6863
  %cmp3.i = icmp slt i32 %17, %18, !dbg !6864
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !6865

for.body.i:                                       ; preds = %for.cond.i
  %19 = load i32, i32* %topbit.i, align 4, !dbg !6866
  %shr.i = ashr i32 %19, 1, !dbg !6866
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !6866
  %20 = load i32, i32* %pbits.i, align 4, !dbg !6867
  %shl4.i = shl i32 %20, 2, !dbg !6867
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !6867
  %21 = load i32, i32* %val.addr.i, align 4, !dbg !6868
  %22 = load i32, i32* %topbit.i, align 4, !dbg !6869
  %and.i = and i32 %21, %22, !dbg !6870
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !6870
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !6871

if.then6.i:                                       ; preds = %for.body.i
  %23 = load i32, i32* %pbits.i, align 4, !dbg !6872
  %or7.i = or i32 %23, 1, !dbg !6872
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !6872
  br label %if.end8.i, !dbg !6873

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %24 = load i32, i32* %i.i, align 4, !dbg !6874
  %inc9.i = add nsw i32 %24, 1, !dbg !6874
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !6874
  br label %for.cond.i, !dbg !6875, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6876
  %26 = load i32, i32* %bits.i, align 4, !dbg !6877
  %mul.i = mul nsw i32 %26, 2, !dbg !6878
  %add.i = add nsw i32 %mul.i, 1, !dbg !6879
  %27 = load i32, i32* %pbits.i, align 4, !dbg !6880
  %shl10.i = shl i32 %27, 1, !dbg !6881
  %or11.i = or i32 %shl10.i, 1, !dbg !6882
  call void @put_bits(%struct.PutBitContext* %25, i32 %add.i, i32 %or11.i) #9, !dbg !6883
  br label %put_vc2_ue_uint.exit, !dbg !6884

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  store i32 0, i32* %level, align 4, !dbg !6885
  br label %for.cond, !dbg !6886

for.cond:                                         ; preds = %for.inc, %put_vc2_ue_uint.exit
  %28 = load i32, i32* %level, align 4, !dbg !6887
  %29 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6889
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %29, i32 0, i32 30, !dbg !6890
  %30 = load i32, i32* %wavelet_depth, align 4, !dbg !6890
  %cmp = icmp slt i32 %28, %30, !dbg !6891
  br i1 %cmp, label %for.body, label %for.end, !dbg !6892

for.body:                                         ; preds = %for.cond
  %31 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6893
  %pb5 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %31, i32 0, i32 1, !dbg !6894
  %32 = load i32, i32* %level, align 4, !dbg !6895
  %idxprom = sext i32 %32 to i64, !dbg !6896
  %33 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6896
  %quant6 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %33, i32 0, i32 14, !dbg !6897
  %arrayidx7 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant6, i64 0, i64 %idxprom, !dbg !6896
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx7, i64 0, i64 1, !dbg !6896
  %34 = load i8, i8* %arrayidx8, align 1, !dbg !6896
  %conv9 = zext i8 %34 to i32, !dbg !6896
  store %struct.PutBitContext* %pb5, %struct.PutBitContext** %pb.addr.i22, align 8, !dbg !6898
  store i32 %conv9, i32* %val.addr.i23, align 4, !dbg !6898
  store i32 0, i32* %pbits.i25, align 4, !dbg !6812
  store i32 0, i32* %bits.i26, align 4, !dbg !6813
  store i32 1, i32* %topbit.i27, align 4, !dbg !6814
  store i32 1, i32* %maxval.i28, align 4, !dbg !6815
  %35 = load i32, i32* %val.addr.i23, align 4, !dbg !6899
  %inc.i29 = add i32 %35, 1, !dbg !6899
  store i32 %inc.i29, i32* %val.addr.i23, align 4, !dbg !6899
  %tobool.i30 = icmp ne i32 %35, 0, !dbg !6899
  br i1 %tobool.i30, label %if.end.i32, label %if.then.i31, !dbg !6900

if.then.i31:                                      ; preds = %for.body
  %36 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i22, align 8, !dbg !6901
  call void @put_bits(%struct.PutBitContext* %36, i32 1, i32 1) #9, !dbg !6902
  br label %put_vc2_ue_uint.exit58, !dbg !6903

if.end.i32:                                       ; preds = %for.body
  br label %while.cond.i34, !dbg !6904

while.cond.i34:                                   ; preds = %while.body.i38, %if.end.i32
  %37 = load i32, i32* %val.addr.i23, align 4, !dbg !6905
  %38 = load i32, i32* %maxval.i28, align 4, !dbg !6906
  %cmp.i33 = icmp ugt i32 %37, %38, !dbg !6907
  br i1 %cmp.i33, label %while.body.i38, label %while.end.i41, !dbg !6908

while.body.i38:                                   ; preds = %while.cond.i34
  %39 = load i32, i32* %topbit.i27, align 4, !dbg !6909
  %shl.i35 = shl i32 %39, 1, !dbg !6909
  store i32 %shl.i35, i32* %topbit.i27, align 4, !dbg !6909
  %40 = load i32, i32* %maxval.i28, align 4, !dbg !6910
  %shl1.i36 = shl i32 %40, 1, !dbg !6910
  store i32 %shl1.i36, i32* %maxval.i28, align 4, !dbg !6910
  %41 = load i32, i32* %maxval.i28, align 4, !dbg !6911
  %or.i37 = or i32 %41, 1, !dbg !6911
  store i32 %or.i37, i32* %maxval.i28, align 4, !dbg !6911
  br label %while.cond.i34, !dbg !6912, !llvm.loop !3864

while.end.i41:                                    ; preds = %while.cond.i34
  %42 = load i32, i32* %topbit.i27, align 4, !dbg !6913
  %or2.i39 = or i32 %42, 1, !dbg !6914
  %43 = call i32 @llvm.ctlz.i32(i32 %or2.i39, i1 true) #9, !dbg !6915
  %sub.i40 = sub nsw i32 31, %43, !dbg !6916
  store i32 %sub.i40, i32* %bits.i26, align 4, !dbg !6917
  store i32 0, i32* %i.i24, align 4, !dbg !6918
  br label %for.cond.i43, !dbg !6919

for.cond.i43:                                     ; preds = %if.end8.i51, %while.end.i41
  %44 = load i32, i32* %i.i24, align 4, !dbg !6920
  %45 = load i32, i32* %bits.i26, align 4, !dbg !6921
  %cmp3.i42 = icmp slt i32 %44, %45, !dbg !6922
  br i1 %cmp3.i42, label %for.body.i48, label %for.end.i57, !dbg !6923

for.body.i48:                                     ; preds = %for.cond.i43
  %46 = load i32, i32* %topbit.i27, align 4, !dbg !6924
  %shr.i44 = ashr i32 %46, 1, !dbg !6924
  store i32 %shr.i44, i32* %topbit.i27, align 4, !dbg !6924
  %47 = load i32, i32* %pbits.i25, align 4, !dbg !6925
  %shl4.i45 = shl i32 %47, 2, !dbg !6925
  store i32 %shl4.i45, i32* %pbits.i25, align 4, !dbg !6925
  %48 = load i32, i32* %val.addr.i23, align 4, !dbg !6926
  %49 = load i32, i32* %topbit.i27, align 4, !dbg !6927
  %and.i46 = and i32 %48, %49, !dbg !6928
  %tobool5.i47 = icmp ne i32 %and.i46, 0, !dbg !6928
  br i1 %tobool5.i47, label %if.then6.i50, label %if.end8.i51, !dbg !6929

if.then6.i50:                                     ; preds = %for.body.i48
  %50 = load i32, i32* %pbits.i25, align 4, !dbg !6930
  %or7.i49 = or i32 %50, 1, !dbg !6930
  store i32 %or7.i49, i32* %pbits.i25, align 4, !dbg !6930
  br label %if.end8.i51, !dbg !6931

if.end8.i51:                                      ; preds = %if.then6.i50, %for.body.i48
  %51 = load i32, i32* %i.i24, align 4, !dbg !6932
  %inc9.i52 = add nsw i32 %51, 1, !dbg !6932
  store i32 %inc9.i52, i32* %i.i24, align 4, !dbg !6932
  br label %for.cond.i43, !dbg !6933, !llvm.loop !3893

for.end.i57:                                      ; preds = %for.cond.i43
  %52 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i22, align 8, !dbg !6934
  %53 = load i32, i32* %bits.i26, align 4, !dbg !6935
  %mul.i53 = mul nsw i32 %53, 2, !dbg !6936
  %add.i54 = add nsw i32 %mul.i53, 1, !dbg !6937
  %54 = load i32, i32* %pbits.i25, align 4, !dbg !6938
  %shl10.i55 = shl i32 %54, 1, !dbg !6939
  %or11.i56 = or i32 %shl10.i55, 1, !dbg !6940
  call void @put_bits(%struct.PutBitContext* %52, i32 %add.i54, i32 %or11.i56) #9, !dbg !6941
  br label %put_vc2_ue_uint.exit58, !dbg !6942

put_vc2_ue_uint.exit58:                           ; preds = %if.then.i31, %for.end.i57
  %55 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6943
  %pb10 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %55, i32 0, i32 1, !dbg !6944
  %56 = load i32, i32* %level, align 4, !dbg !6945
  %idxprom11 = sext i32 %56 to i64, !dbg !6946
  %57 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6946
  %quant12 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %57, i32 0, i32 14, !dbg !6947
  %arrayidx13 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant12, i64 0, i64 %idxprom11, !dbg !6946
  %arrayidx14 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx13, i64 0, i64 2, !dbg !6946
  %58 = load i8, i8* %arrayidx14, align 2, !dbg !6946
  %conv15 = zext i8 %58 to i32, !dbg !6946
  store %struct.PutBitContext* %pb10, %struct.PutBitContext** %pb.addr.i59, align 8, !dbg !6948
  store i32 %conv15, i32* %val.addr.i60, align 4, !dbg !6948
  store i32 0, i32* %pbits.i62, align 4, !dbg !6804
  store i32 0, i32* %bits.i63, align 4, !dbg !6805
  store i32 1, i32* %topbit.i64, align 4, !dbg !6806
  store i32 1, i32* %maxval.i65, align 4, !dbg !6807
  %59 = load i32, i32* %val.addr.i60, align 4, !dbg !6949
  %inc.i66 = add i32 %59, 1, !dbg !6949
  store i32 %inc.i66, i32* %val.addr.i60, align 4, !dbg !6949
  %tobool.i67 = icmp ne i32 %59, 0, !dbg !6949
  br i1 %tobool.i67, label %if.end.i69, label %if.then.i68, !dbg !6950

if.then.i68:                                      ; preds = %put_vc2_ue_uint.exit58
  %60 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i59, align 8, !dbg !6951
  call void @put_bits(%struct.PutBitContext* %60, i32 1, i32 1) #9, !dbg !6952
  br label %put_vc2_ue_uint.exit95, !dbg !6953

if.end.i69:                                       ; preds = %put_vc2_ue_uint.exit58
  br label %while.cond.i71, !dbg !6954

while.cond.i71:                                   ; preds = %while.body.i75, %if.end.i69
  %61 = load i32, i32* %val.addr.i60, align 4, !dbg !6955
  %62 = load i32, i32* %maxval.i65, align 4, !dbg !6956
  %cmp.i70 = icmp ugt i32 %61, %62, !dbg !6957
  br i1 %cmp.i70, label %while.body.i75, label %while.end.i78, !dbg !6958

while.body.i75:                                   ; preds = %while.cond.i71
  %63 = load i32, i32* %topbit.i64, align 4, !dbg !6959
  %shl.i72 = shl i32 %63, 1, !dbg !6959
  store i32 %shl.i72, i32* %topbit.i64, align 4, !dbg !6959
  %64 = load i32, i32* %maxval.i65, align 4, !dbg !6960
  %shl1.i73 = shl i32 %64, 1, !dbg !6960
  store i32 %shl1.i73, i32* %maxval.i65, align 4, !dbg !6960
  %65 = load i32, i32* %maxval.i65, align 4, !dbg !6961
  %or.i74 = or i32 %65, 1, !dbg !6961
  store i32 %or.i74, i32* %maxval.i65, align 4, !dbg !6961
  br label %while.cond.i71, !dbg !6962, !llvm.loop !3864

while.end.i78:                                    ; preds = %while.cond.i71
  %66 = load i32, i32* %topbit.i64, align 4, !dbg !6963
  %or2.i76 = or i32 %66, 1, !dbg !6964
  %67 = call i32 @llvm.ctlz.i32(i32 %or2.i76, i1 true) #9, !dbg !6965
  %sub.i77 = sub nsw i32 31, %67, !dbg !6966
  store i32 %sub.i77, i32* %bits.i63, align 4, !dbg !6967
  store i32 0, i32* %i.i61, align 4, !dbg !6968
  br label %for.cond.i80, !dbg !6969

for.cond.i80:                                     ; preds = %if.end8.i88, %while.end.i78
  %68 = load i32, i32* %i.i61, align 4, !dbg !6970
  %69 = load i32, i32* %bits.i63, align 4, !dbg !6971
  %cmp3.i79 = icmp slt i32 %68, %69, !dbg !6972
  br i1 %cmp3.i79, label %for.body.i85, label %for.end.i94, !dbg !6973

for.body.i85:                                     ; preds = %for.cond.i80
  %70 = load i32, i32* %topbit.i64, align 4, !dbg !6974
  %shr.i81 = ashr i32 %70, 1, !dbg !6974
  store i32 %shr.i81, i32* %topbit.i64, align 4, !dbg !6974
  %71 = load i32, i32* %pbits.i62, align 4, !dbg !6975
  %shl4.i82 = shl i32 %71, 2, !dbg !6975
  store i32 %shl4.i82, i32* %pbits.i62, align 4, !dbg !6975
  %72 = load i32, i32* %val.addr.i60, align 4, !dbg !6976
  %73 = load i32, i32* %topbit.i64, align 4, !dbg !6977
  %and.i83 = and i32 %72, %73, !dbg !6978
  %tobool5.i84 = icmp ne i32 %and.i83, 0, !dbg !6978
  br i1 %tobool5.i84, label %if.then6.i87, label %if.end8.i88, !dbg !6979

if.then6.i87:                                     ; preds = %for.body.i85
  %74 = load i32, i32* %pbits.i62, align 4, !dbg !6980
  %or7.i86 = or i32 %74, 1, !dbg !6980
  store i32 %or7.i86, i32* %pbits.i62, align 4, !dbg !6980
  br label %if.end8.i88, !dbg !6981

if.end8.i88:                                      ; preds = %if.then6.i87, %for.body.i85
  %75 = load i32, i32* %i.i61, align 4, !dbg !6982
  %inc9.i89 = add nsw i32 %75, 1, !dbg !6982
  store i32 %inc9.i89, i32* %i.i61, align 4, !dbg !6982
  br label %for.cond.i80, !dbg !6983, !llvm.loop !3893

for.end.i94:                                      ; preds = %for.cond.i80
  %76 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i59, align 8, !dbg !6984
  %77 = load i32, i32* %bits.i63, align 4, !dbg !6985
  %mul.i90 = mul nsw i32 %77, 2, !dbg !6986
  %add.i91 = add nsw i32 %mul.i90, 1, !dbg !6987
  %78 = load i32, i32* %pbits.i62, align 4, !dbg !6988
  %shl10.i92 = shl i32 %78, 1, !dbg !6989
  %or11.i93 = or i32 %shl10.i92, 1, !dbg !6990
  call void @put_bits(%struct.PutBitContext* %76, i32 %add.i91, i32 %or11.i93) #9, !dbg !6991
  br label %put_vc2_ue_uint.exit95, !dbg !6992

put_vc2_ue_uint.exit95:                           ; preds = %if.then.i68, %for.end.i94
  %79 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6993
  %pb16 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %79, i32 0, i32 1, !dbg !6994
  %80 = load i32, i32* %level, align 4, !dbg !6995
  %idxprom17 = sext i32 %80 to i64, !dbg !6996
  %81 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !6996
  %quant18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %81, i32 0, i32 14, !dbg !6997
  %arrayidx19 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant18, i64 0, i64 %idxprom17, !dbg !6996
  %arrayidx20 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx19, i64 0, i64 3, !dbg !6996
  %82 = load i8, i8* %arrayidx20, align 1, !dbg !6996
  %conv21 = zext i8 %82 to i32, !dbg !6996
  store %struct.PutBitContext* %pb16, %struct.PutBitContext** %pb.addr.i96, align 8, !dbg !6998
  store i32 %conv21, i32* %val.addr.i97, align 4, !dbg !6998
  store i32 0, i32* %pbits.i99, align 4, !dbg !6796
  store i32 0, i32* %bits.i100, align 4, !dbg !6797
  store i32 1, i32* %topbit.i101, align 4, !dbg !6798
  store i32 1, i32* %maxval.i102, align 4, !dbg !6799
  %83 = load i32, i32* %val.addr.i97, align 4, !dbg !6999
  %inc.i103 = add i32 %83, 1, !dbg !6999
  store i32 %inc.i103, i32* %val.addr.i97, align 4, !dbg !6999
  %tobool.i104 = icmp ne i32 %83, 0, !dbg !6999
  br i1 %tobool.i104, label %if.end.i106, label %if.then.i105, !dbg !7000

if.then.i105:                                     ; preds = %put_vc2_ue_uint.exit95
  %84 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i96, align 8, !dbg !7001
  call void @put_bits(%struct.PutBitContext* %84, i32 1, i32 1) #9, !dbg !7002
  br label %put_vc2_ue_uint.exit132, !dbg !7003

if.end.i106:                                      ; preds = %put_vc2_ue_uint.exit95
  br label %while.cond.i108, !dbg !7004

while.cond.i108:                                  ; preds = %while.body.i112, %if.end.i106
  %85 = load i32, i32* %val.addr.i97, align 4, !dbg !7005
  %86 = load i32, i32* %maxval.i102, align 4, !dbg !7006
  %cmp.i107 = icmp ugt i32 %85, %86, !dbg !7007
  br i1 %cmp.i107, label %while.body.i112, label %while.end.i115, !dbg !7008

while.body.i112:                                  ; preds = %while.cond.i108
  %87 = load i32, i32* %topbit.i101, align 4, !dbg !7009
  %shl.i109 = shl i32 %87, 1, !dbg !7009
  store i32 %shl.i109, i32* %topbit.i101, align 4, !dbg !7009
  %88 = load i32, i32* %maxval.i102, align 4, !dbg !7010
  %shl1.i110 = shl i32 %88, 1, !dbg !7010
  store i32 %shl1.i110, i32* %maxval.i102, align 4, !dbg !7010
  %89 = load i32, i32* %maxval.i102, align 4, !dbg !7011
  %or.i111 = or i32 %89, 1, !dbg !7011
  store i32 %or.i111, i32* %maxval.i102, align 4, !dbg !7011
  br label %while.cond.i108, !dbg !7012, !llvm.loop !3864

while.end.i115:                                   ; preds = %while.cond.i108
  %90 = load i32, i32* %topbit.i101, align 4, !dbg !7013
  %or2.i113 = or i32 %90, 1, !dbg !7014
  %91 = call i32 @llvm.ctlz.i32(i32 %or2.i113, i1 true) #9, !dbg !7015
  %sub.i114 = sub nsw i32 31, %91, !dbg !7016
  store i32 %sub.i114, i32* %bits.i100, align 4, !dbg !7017
  store i32 0, i32* %i.i98, align 4, !dbg !7018
  br label %for.cond.i117, !dbg !7019

for.cond.i117:                                    ; preds = %if.end8.i125, %while.end.i115
  %92 = load i32, i32* %i.i98, align 4, !dbg !7020
  %93 = load i32, i32* %bits.i100, align 4, !dbg !7021
  %cmp3.i116 = icmp slt i32 %92, %93, !dbg !7022
  br i1 %cmp3.i116, label %for.body.i122, label %for.end.i131, !dbg !7023

for.body.i122:                                    ; preds = %for.cond.i117
  %94 = load i32, i32* %topbit.i101, align 4, !dbg !7024
  %shr.i118 = ashr i32 %94, 1, !dbg !7024
  store i32 %shr.i118, i32* %topbit.i101, align 4, !dbg !7024
  %95 = load i32, i32* %pbits.i99, align 4, !dbg !7025
  %shl4.i119 = shl i32 %95, 2, !dbg !7025
  store i32 %shl4.i119, i32* %pbits.i99, align 4, !dbg !7025
  %96 = load i32, i32* %val.addr.i97, align 4, !dbg !7026
  %97 = load i32, i32* %topbit.i101, align 4, !dbg !7027
  %and.i120 = and i32 %96, %97, !dbg !7028
  %tobool5.i121 = icmp ne i32 %and.i120, 0, !dbg !7028
  br i1 %tobool5.i121, label %if.then6.i124, label %if.end8.i125, !dbg !7029

if.then6.i124:                                    ; preds = %for.body.i122
  %98 = load i32, i32* %pbits.i99, align 4, !dbg !7030
  %or7.i123 = or i32 %98, 1, !dbg !7030
  store i32 %or7.i123, i32* %pbits.i99, align 4, !dbg !7030
  br label %if.end8.i125, !dbg !7031

if.end8.i125:                                     ; preds = %if.then6.i124, %for.body.i122
  %99 = load i32, i32* %i.i98, align 4, !dbg !7032
  %inc9.i126 = add nsw i32 %99, 1, !dbg !7032
  store i32 %inc9.i126, i32* %i.i98, align 4, !dbg !7032
  br label %for.cond.i117, !dbg !7033, !llvm.loop !3893

for.end.i131:                                     ; preds = %for.cond.i117
  %100 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i96, align 8, !dbg !7034
  %101 = load i32, i32* %bits.i100, align 4, !dbg !7035
  %mul.i127 = mul nsw i32 %101, 2, !dbg !7036
  %add.i128 = add nsw i32 %mul.i127, 1, !dbg !7037
  %102 = load i32, i32* %pbits.i99, align 4, !dbg !7038
  %shl10.i129 = shl i32 %102, 1, !dbg !7039
  %or11.i130 = or i32 %shl10.i129, 1, !dbg !7040
  call void @put_bits(%struct.PutBitContext* %100, i32 %add.i128, i32 %or11.i130) #9, !dbg !7041
  br label %put_vc2_ue_uint.exit132, !dbg !7042

put_vc2_ue_uint.exit132:                          ; preds = %if.then.i105, %for.end.i131
  br label %for.inc, !dbg !7043

for.inc:                                          ; preds = %put_vc2_ue_uint.exit132
  %103 = load i32, i32* %level, align 4, !dbg !7044
  %inc = add nsw i32 %103, 1, !dbg !7044
  store i32 %inc, i32* %level, align 4, !dbg !7044
  br label %for.cond, !dbg !7046, !llvm.loop !7047

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7049

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !7050
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @put_bits_ptr(%struct.PutBitContext* %s) #5 !dbg !7051 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !7054, metadata !1752), !dbg !7055
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7056
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !7057
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !7057
  ret i8* %1, !dbg !7058
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_hq_slice(%struct.AVCodecContext* %avctx, i8* %arg) #4 !dbg !7059 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %slice_dat = alloca %struct.SliceArgs*, align 8
  %s = alloca %struct.VC2EncContext*, align 8
  %pb = alloca %struct.PutBitContext*, align 8
  %slice_x = alloca i32, align 4
  %slice_y = alloca i32, align 4
  %quant_idx = alloca i32, align 4
  %slice_bytes_max = alloca i32, align 4
  %quants = alloca [5 x [4 x i8]], align 16
  %p = alloca i32, align 4
  %level = alloca i32, align 4
  %orientation = alloca i32, align 4
  %bytes_start = alloca i32, align 4
  %bytes_len = alloca i32, align 4
  %pad_s = alloca i32, align 4
  %pad_c = alloca i32, align 4
  %len_diff = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7060, metadata !1752), !dbg !7061
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7062, metadata !1752), !dbg !7063
  call void @llvm.dbg.declare(metadata %struct.SliceArgs** %slice_dat, metadata !7064, metadata !1752), !dbg !7065
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7066
  %1 = bitcast i8* %0 to %struct.SliceArgs*, !dbg !7066
  store %struct.SliceArgs* %1, %struct.SliceArgs** %slice_dat, align 8, !dbg !7065
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s, metadata !7067, metadata !1752), !dbg !7068
  %2 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7069
  %ctx = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %2, i32 0, i32 2, !dbg !7070
  %3 = load i8*, i8** %ctx, align 8, !dbg !7070
  %4 = bitcast i8* %3 to %struct.VC2EncContext*, !dbg !7069
  store %struct.VC2EncContext* %4, %struct.VC2EncContext** %s, align 8, !dbg !7068
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb, metadata !7071, metadata !1752), !dbg !7072
  %5 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7073
  %pb1 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %5, i32 0, i32 0, !dbg !7074
  store %struct.PutBitContext* %pb1, %struct.PutBitContext** %pb, align 8, !dbg !7072
  call void @llvm.dbg.declare(metadata i32* %slice_x, metadata !7075, metadata !1752), !dbg !7076
  %6 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7077
  %x = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %6, i32 0, i32 3, !dbg !7078
  %7 = load i32, i32* %x, align 8, !dbg !7078
  store i32 %7, i32* %slice_x, align 4, !dbg !7076
  call void @llvm.dbg.declare(metadata i32* %slice_y, metadata !7079, metadata !1752), !dbg !7080
  %8 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7081
  %y = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %8, i32 0, i32 4, !dbg !7082
  %9 = load i32, i32* %y, align 4, !dbg !7082
  store i32 %9, i32* %slice_y, align 4, !dbg !7080
  call void @llvm.dbg.declare(metadata i32* %quant_idx, metadata !7083, metadata !1752), !dbg !7084
  %10 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7085
  %quant_idx2 = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %10, i32 0, i32 5, !dbg !7086
  %11 = load i32, i32* %quant_idx2, align 8, !dbg !7086
  store i32 %11, i32* %quant_idx, align 4, !dbg !7084
  call void @llvm.dbg.declare(metadata i32* %slice_bytes_max, metadata !7087, metadata !1752), !dbg !7088
  %12 = load %struct.SliceArgs*, %struct.SliceArgs** %slice_dat, align 8, !dbg !7089
  %bytes = getelementptr inbounds %struct.SliceArgs, %struct.SliceArgs* %12, i32 0, i32 8, !dbg !7090
  %13 = load i32, i32* %bytes, align 4, !dbg !7090
  store i32 %13, i32* %slice_bytes_max, align 4, !dbg !7088
  call void @llvm.dbg.declare(metadata [5 x [4 x i8]]* %quants, metadata !7091, metadata !1752), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7093, metadata !1752), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7095, metadata !1752), !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !7097, metadata !1752), !dbg !7098
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7099
  %call = call i8* @put_bits_ptr(%struct.PutBitContext* %14), !dbg !7100
  %15 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7101
  %prefix_bytes = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %15, i32 0, i32 19, !dbg !7102
  %16 = load i32, i32* %prefix_bytes, align 4, !dbg !7102
  %conv = sext i32 %16 to i64, !dbg !7101
  call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 %conv, i32 1, i1 false), !dbg !7103
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7105
  %18 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7106
  %prefix_bytes3 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %18, i32 0, i32 19, !dbg !7107
  %19 = load i32, i32* %prefix_bytes3, align 4, !dbg !7107
  call void @skip_put_bytes(%struct.PutBitContext* %17, i32 %19), !dbg !7108
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7109
  %21 = load i32, i32* %quant_idx, align 4, !dbg !7110
  call void @put_bits(%struct.PutBitContext* %20, i32 8, i32 %21), !dbg !7111
  store i32 0, i32* %level, align 4, !dbg !7112
  br label %for.cond, !dbg !7114

for.cond:                                         ; preds = %for.inc27, %entry
  %22 = load i32, i32* %level, align 4, !dbg !7115
  %23 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7118
  %wavelet_depth = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %23, i32 0, i32 30, !dbg !7119
  %24 = load i32, i32* %wavelet_depth, align 4, !dbg !7119
  %cmp = icmp slt i32 %22, %24, !dbg !7120
  br i1 %cmp, label %for.body, label %for.end29, !dbg !7121

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %level, align 4, !dbg !7122
  %tobool = icmp ne i32 %25, 0, !dbg !7124
  %lnot = xor i1 %tobool, true, !dbg !7124
  %lnot5 = xor i1 %lnot, true, !dbg !7125
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7125
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !7126
  br label %for.cond6, !dbg !7127

for.cond6:                                        ; preds = %for.inc, %for.body
  %26 = load i32, i32* %orientation, align 4, !dbg !7128
  %cmp7 = icmp slt i32 %26, 4, !dbg !7131
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7132

for.body9:                                        ; preds = %for.cond6
  %27 = load i32, i32* %quant_idx, align 4, !dbg !7133
  %28 = load i32, i32* %orientation, align 4, !dbg !7134
  %idxprom = sext i32 %28 to i64, !dbg !7135
  %29 = load i32, i32* %level, align 4, !dbg !7136
  %idxprom10 = sext i32 %29 to i64, !dbg !7135
  %30 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7135
  %quant = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %30, i32 0, i32 14, !dbg !7137
  %arrayidx = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant, i64 0, i64 %idxprom10, !dbg !7135
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !7135
  %31 = load i8, i8* %arrayidx11, align 1, !dbg !7135
  %conv12 = zext i8 %31 to i32, !dbg !7135
  %sub = sub nsw i32 %27, %conv12, !dbg !7138
  %cmp13 = icmp sgt i32 %sub, 0, !dbg !7139
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !7140

cond.true:                                        ; preds = %for.body9
  %32 = load i32, i32* %quant_idx, align 4, !dbg !7141
  %33 = load i32, i32* %orientation, align 4, !dbg !7142
  %idxprom15 = sext i32 %33 to i64, !dbg !7143
  %34 = load i32, i32* %level, align 4, !dbg !7144
  %idxprom16 = sext i32 %34 to i64, !dbg !7143
  %35 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7143
  %quant17 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %35, i32 0, i32 14, !dbg !7145
  %arrayidx18 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant17, i64 0, i64 %idxprom16, !dbg !7143
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx18, i64 0, i64 %idxprom15, !dbg !7143
  %36 = load i8, i8* %arrayidx19, align 1, !dbg !7143
  %conv20 = zext i8 %36 to i32, !dbg !7143
  %sub21 = sub nsw i32 %32, %conv20, !dbg !7146
  br label %cond.end, !dbg !7147

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !7148

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub21, %cond.true ], [ 0, %cond.false ], !dbg !7150
  %conv22 = trunc i32 %cond to i8, !dbg !7152
  %37 = load i32, i32* %orientation, align 4, !dbg !7153
  %idxprom23 = sext i32 %37 to i64, !dbg !7154
  %38 = load i32, i32* %level, align 4, !dbg !7155
  %idxprom24 = sext i32 %38 to i64, !dbg !7154
  %arrayidx25 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quants, i64 0, i64 %idxprom24, !dbg !7154
  %arrayidx26 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !7154
  store i8 %conv22, i8* %arrayidx26, align 1, !dbg !7156
  br label %for.inc, !dbg !7154

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %orientation, align 4, !dbg !7157
  %inc = add nsw i32 %39, 1, !dbg !7157
  store i32 %inc, i32* %orientation, align 4, !dbg !7157
  br label %for.cond6, !dbg !7158, !llvm.loop !7159

for.end:                                          ; preds = %for.cond6
  br label %for.inc27, !dbg !7161

for.inc27:                                        ; preds = %for.end
  %40 = load i32, i32* %level, align 4, !dbg !7163
  %inc28 = add nsw i32 %40, 1, !dbg !7163
  store i32 %inc28, i32* %level, align 4, !dbg !7163
  br label %for.cond, !dbg !7165, !llvm.loop !7166

for.end29:                                        ; preds = %for.cond
  store i32 0, i32* %p, align 4, !dbg !7168
  br label %for.cond30, !dbg !7170

for.cond30:                                       ; preds = %for.inc99, %for.end29
  %41 = load i32, i32* %p, align 4, !dbg !7171
  %cmp31 = icmp slt i32 %41, 3, !dbg !7174
  br i1 %cmp31, label %for.body33, label %for.end101, !dbg !7175

for.body33:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata i32* %bytes_start, metadata !7176, metadata !1752), !dbg !7178
  call void @llvm.dbg.declare(metadata i32* %bytes_len, metadata !7179, metadata !1752), !dbg !7180
  call void @llvm.dbg.declare(metadata i32* %pad_s, metadata !7181, metadata !1752), !dbg !7182
  call void @llvm.dbg.declare(metadata i32* %pad_c, metadata !7183, metadata !1752), !dbg !7184
  %42 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7185
  %call34 = call i32 @put_bits_count(%struct.PutBitContext* %42), !dbg !7186
  %shr = ashr i32 %call34, 3, !dbg !7187
  store i32 %shr, i32* %bytes_start, align 4, !dbg !7188
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7189
  call void @put_bits(%struct.PutBitContext* %43, i32 8, i32 0), !dbg !7190
  store i32 0, i32* %level, align 4, !dbg !7191
  br label %for.cond35, !dbg !7193

for.cond35:                                       ; preds = %for.inc63, %for.body33
  %44 = load i32, i32* %level, align 4, !dbg !7194
  %45 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7197
  %wavelet_depth36 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %45, i32 0, i32 30, !dbg !7198
  %46 = load i32, i32* %wavelet_depth36, align 4, !dbg !7198
  %cmp37 = icmp slt i32 %44, %46, !dbg !7199
  br i1 %cmp37, label %for.body39, label %for.end65, !dbg !7200

for.body39:                                       ; preds = %for.cond35
  %47 = load i32, i32* %level, align 4, !dbg !7201
  %tobool40 = icmp ne i32 %47, 0, !dbg !7204
  %lnot41 = xor i1 %tobool40, true, !dbg !7204
  %lnot43 = xor i1 %lnot41, true, !dbg !7205
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7205
  store i32 %lnot.ext44, i32* %orientation, align 4, !dbg !7206
  br label %for.cond45, !dbg !7207

for.cond45:                                       ; preds = %for.inc60, %for.body39
  %48 = load i32, i32* %orientation, align 4, !dbg !7208
  %cmp46 = icmp slt i32 %48, 4, !dbg !7211
  br i1 %cmp46, label %for.body48, label %for.end62, !dbg !7212

for.body48:                                       ; preds = %for.cond45
  %49 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7213
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7215
  %51 = load i32, i32* %slice_x, align 4, !dbg !7216
  %52 = load i32, i32* %slice_y, align 4, !dbg !7217
  %53 = load i32, i32* %orientation, align 4, !dbg !7218
  %idxprom49 = sext i32 %53 to i64, !dbg !7219
  %54 = load i32, i32* %level, align 4, !dbg !7220
  %idxprom50 = sext i32 %54 to i64, !dbg !7219
  %55 = load i32, i32* %p, align 4, !dbg !7221
  %idxprom51 = sext i32 %55 to i64, !dbg !7219
  %56 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7219
  %plane = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %56, i32 0, i32 2, !dbg !7222
  %arrayidx52 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom51, !dbg !7219
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx52, i32 0, i32 0, !dbg !7223
  %arrayidx53 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom50, !dbg !7219
  %arrayidx54 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx53, i64 0, i64 %idxprom49, !dbg !7219
  %57 = load i32, i32* %orientation, align 4, !dbg !7224
  %idxprom55 = sext i32 %57 to i64, !dbg !7225
  %58 = load i32, i32* %level, align 4, !dbg !7226
  %idxprom56 = sext i32 %58 to i64, !dbg !7225
  %arrayidx57 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quants, i64 0, i64 %idxprom56, !dbg !7225
  %arrayidx58 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx57, i64 0, i64 %idxprom55, !dbg !7225
  %59 = load i8, i8* %arrayidx58, align 1, !dbg !7225
  %conv59 = zext i8 %59 to i32, !dbg !7225
  call void @encode_subband(%struct.VC2EncContext* %49, %struct.PutBitContext* %50, i32 %51, i32 %52, %struct.SubBand* %arrayidx54, i32 %conv59), !dbg !7227
  br label %for.inc60, !dbg !7228

for.inc60:                                        ; preds = %for.body48
  %60 = load i32, i32* %orientation, align 4, !dbg !7229
  %inc61 = add nsw i32 %60, 1, !dbg !7229
  store i32 %inc61, i32* %orientation, align 4, !dbg !7229
  br label %for.cond45, !dbg !7231, !llvm.loop !7232

for.end62:                                        ; preds = %for.cond45
  br label %for.inc63, !dbg !7234

for.inc63:                                        ; preds = %for.end62
  %61 = load i32, i32* %level, align 4, !dbg !7235
  %inc64 = add nsw i32 %61, 1, !dbg !7235
  store i32 %inc64, i32* %level, align 4, !dbg !7235
  br label %for.cond35, !dbg !7237, !llvm.loop !7238

for.end65:                                        ; preds = %for.cond35
  %62 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7240
  call void @avpriv_align_put_bits(%struct.PutBitContext* %62), !dbg !7241
  %63 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7242
  %call66 = call i32 @put_bits_count(%struct.PutBitContext* %63), !dbg !7243
  %shr67 = ashr i32 %call66, 3, !dbg !7244
  %64 = load i32, i32* %bytes_start, align 4, !dbg !7245
  %sub68 = sub nsw i32 %shr67, %64, !dbg !7246
  %sub69 = sub nsw i32 %sub68, 1, !dbg !7247
  store i32 %sub69, i32* %bytes_len, align 4, !dbg !7248
  %65 = load i32, i32* %p, align 4, !dbg !7249
  %cmp70 = icmp eq i32 %65, 2, !dbg !7251
  br i1 %cmp70, label %if.then, label %if.else, !dbg !7252

if.then:                                          ; preds = %for.end65
  call void @llvm.dbg.declare(metadata i32* %len_diff, metadata !7253, metadata !1752), !dbg !7255
  %66 = load i32, i32* %slice_bytes_max, align 4, !dbg !7256
  %67 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7257
  %call72 = call i32 @put_bits_count(%struct.PutBitContext* %67), !dbg !7258
  %shr73 = ashr i32 %call72, 3, !dbg !7259
  %sub74 = sub nsw i32 %66, %shr73, !dbg !7260
  store i32 %sub74, i32* %len_diff, align 4, !dbg !7255
  %68 = load i32, i32* %bytes_len, align 4, !dbg !7261
  %69 = load i32, i32* %len_diff, align 4, !dbg !7262
  %add = add nsw i32 %68, %69, !dbg !7263
  %70 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7264
  %size_scaler = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %70, i32 0, i32 20, !dbg !7265
  %71 = load i32, i32* %size_scaler, align 8, !dbg !7265
  %add75 = add nsw i32 %add, %71, !dbg !7266
  %sub76 = sub nsw i32 %add75, 1, !dbg !7267
  %72 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7268
  %size_scaler77 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %72, i32 0, i32 20, !dbg !7269
  %73 = load i32, i32* %size_scaler77, align 8, !dbg !7269
  %sub78 = sub nsw i32 %73, 1, !dbg !7270
  %neg = xor i32 %sub78, -1, !dbg !7271
  %and = and i32 %sub76, %neg, !dbg !7272
  %74 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7273
  %size_scaler79 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %74, i32 0, i32 20, !dbg !7274
  %75 = load i32, i32* %size_scaler79, align 8, !dbg !7274
  %div = sdiv i32 %and, %75, !dbg !7275
  store i32 %div, i32* %pad_s, align 4, !dbg !7276
  %76 = load i32, i32* %pad_s, align 4, !dbg !7277
  %77 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7278
  %size_scaler80 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %77, i32 0, i32 20, !dbg !7279
  %78 = load i32, i32* %size_scaler80, align 8, !dbg !7279
  %mul = mul nsw i32 %76, %78, !dbg !7280
  %79 = load i32, i32* %bytes_len, align 4, !dbg !7281
  %sub81 = sub nsw i32 %mul, %79, !dbg !7282
  store i32 %sub81, i32* %pad_c, align 4, !dbg !7283
  br label %if.end, !dbg !7284

if.else:                                          ; preds = %for.end65
  %80 = load i32, i32* %bytes_len, align 4, !dbg !7285
  %81 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7287
  %size_scaler82 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %81, i32 0, i32 20, !dbg !7288
  %82 = load i32, i32* %size_scaler82, align 8, !dbg !7288
  %add83 = add nsw i32 %80, %82, !dbg !7289
  %sub84 = sub nsw i32 %add83, 1, !dbg !7290
  %83 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7291
  %size_scaler85 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %83, i32 0, i32 20, !dbg !7292
  %84 = load i32, i32* %size_scaler85, align 8, !dbg !7292
  %sub86 = sub nsw i32 %84, 1, !dbg !7293
  %neg87 = xor i32 %sub86, -1, !dbg !7294
  %and88 = and i32 %sub84, %neg87, !dbg !7295
  %85 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7296
  %size_scaler89 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %85, i32 0, i32 20, !dbg !7297
  %86 = load i32, i32* %size_scaler89, align 8, !dbg !7297
  %div90 = sdiv i32 %and88, %86, !dbg !7298
  store i32 %div90, i32* %pad_s, align 4, !dbg !7299
  %87 = load i32, i32* %pad_s, align 4, !dbg !7300
  %88 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s, align 8, !dbg !7301
  %size_scaler91 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %88, i32 0, i32 20, !dbg !7302
  %89 = load i32, i32* %size_scaler91, align 8, !dbg !7302
  %mul92 = mul nsw i32 %87, %89, !dbg !7303
  %90 = load i32, i32* %bytes_len, align 4, !dbg !7304
  %sub93 = sub nsw i32 %mul92, %90, !dbg !7305
  store i32 %sub93, i32* %pad_c, align 4, !dbg !7306
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %91 = load i32, i32* %pad_s, align 4, !dbg !7307
  %conv94 = trunc i32 %91 to i8, !dbg !7307
  %92 = load i32, i32* %bytes_start, align 4, !dbg !7308
  %idxprom95 = sext i32 %92 to i64, !dbg !7309
  %93 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7309
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %93, i32 0, i32 2, !dbg !7310
  %94 = load i8*, i8** %buf, align 8, !dbg !7310
  %arrayidx96 = getelementptr inbounds i8, i8* %94, i64 %idxprom95, !dbg !7309
  store i8 %conv94, i8* %arrayidx96, align 1, !dbg !7311
  %95 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7312
  call void @flush_put_bits(%struct.PutBitContext* %95), !dbg !7313
  %96 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7314
  %call97 = call i8* @put_bits_ptr(%struct.PutBitContext* %96), !dbg !7315
  %97 = load i32, i32* %pad_c, align 4, !dbg !7316
  %conv98 = sext i32 %97 to i64, !dbg !7316
  call void @llvm.memset.p0i8.i64(i8* %call97, i8 -1, i64 %conv98, i32 1, i1 false), !dbg !7317
  %98 = load %struct.PutBitContext*, %struct.PutBitContext** %pb, align 8, !dbg !7319
  %99 = load i32, i32* %pad_c, align 4, !dbg !7320
  call void @skip_put_bytes(%struct.PutBitContext* %98, i32 %99), !dbg !7321
  br label %for.inc99, !dbg !7322

for.inc99:                                        ; preds = %if.end
  %100 = load i32, i32* %p, align 4, !dbg !7323
  %inc100 = add nsw i32 %100, 1, !dbg !7323
  store i32 %inc100, i32* %p, align 4, !dbg !7323
  br label %for.cond30, !dbg !7325, !llvm.loop !7326

for.end101:                                       ; preds = %for.cond30
  ret i32 0, !dbg !7328
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_put_bytes(%struct.PutBitContext* %s, i32 %n) #5 !dbg !7329 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !7332, metadata !1752), !dbg !7333
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7334, metadata !1752), !dbg !7335
  br label %do.body, !dbg !7336, !llvm.loop !7337

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %n.addr, align 4, !dbg !7338
  %conv = sext i32 %0 to i64, !dbg !7338
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7342
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %1, i32 0, i32 4, !dbg !7343
  %2 = load i8*, i8** %buf_end, align 8, !dbg !7343
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7344
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %3, i32 0, i32 3, !dbg !7345
  %4 = load i8*, i8** %buf_ptr, align 8, !dbg !7345
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !7346
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !7346
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7346
  %cmp = icmp sle i64 %conv, %sub.ptr.sub, !dbg !7347
  br i1 %cmp, label %if.end, label %if.then, !dbg !7348

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i32 0, i32 0), i32 337), !dbg !7349
  call void @abort() #8, !dbg !7352
  unreachable, !dbg !7354

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !7355

do.end:                                           ; preds = %if.end
  %5 = load i32, i32* %n.addr, align 4, !dbg !7357
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7358
  %buf_ptr2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 3, !dbg !7359
  %7 = load i8*, i8** %buf_ptr2, align 8, !dbg !7360
  %idx.ext = sext i32 %5 to i64, !dbg !7360
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !7360
  store i8* %add.ptr, i8** %buf_ptr2, align 8, !dbg !7360
  ret void, !dbg !7361
}

; Function Attrs: nounwind uwtable
define internal void @encode_subband(%struct.VC2EncContext* %s, %struct.PutBitContext* %pb, i32 %sx, i32 %sy, %struct.SubBand* %b, i32 %quant) #4 !dbg !7362 {
entry:
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3807, metadata !1752), !dbg !7365
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !3813, metadata !1752), !dbg !7373
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3815, metadata !1752), !dbg !7374
  %pbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pbits.i, metadata !3817, metadata !1752), !dbg !7375
  %bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.i, metadata !3819, metadata !1752), !dbg !7376
  %topbit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %topbit.i, metadata !3821, metadata !1752), !dbg !7377
  %maxval.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.i, metadata !3823, metadata !1752), !dbg !7378
  %s.addr = alloca %struct.VC2EncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %sx.addr = alloca i32, align 4
  %sy.addr = alloca i32, align 4
  %b.addr = alloca %struct.SubBand*, align 8
  %quant.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %top = alloca i32, align 4
  %bottom = alloca i32, align 4
  %coeff = alloca i32*, align 8
  %q_m = alloca i64, align 8
  %q_a = alloca i64, align 8
  %q_s = alloca i32, align 4
  %c_abs = alloca i32, align 4
  store %struct.VC2EncContext* %s, %struct.VC2EncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC2EncContext** %s.addr, metadata !7379, metadata !1752), !dbg !7380
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7381, metadata !1752), !dbg !7382
  store i32 %sx, i32* %sx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sx.addr, metadata !7383, metadata !1752), !dbg !7384
  store i32 %sy, i32* %sy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sy.addr, metadata !7385, metadata !1752), !dbg !7386
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !7387, metadata !1752), !dbg !7388
  store i32 %quant, i32* %quant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant.addr, metadata !7389, metadata !1752), !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7391, metadata !1752), !dbg !7392
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7393, metadata !1752), !dbg !7394
  call void @llvm.dbg.declare(metadata i32* %left, metadata !7395, metadata !1752), !dbg !7396
  %0 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7397
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 2, !dbg !7398
  %1 = load i32, i32* %width, align 8, !dbg !7398
  %2 = load i32, i32* %sx.addr, align 4, !dbg !7399
  %add = add nsw i32 %2, 0, !dbg !7400
  %mul = mul nsw i32 %1, %add, !dbg !7401
  %3 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7402
  %num_x = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %3, i32 0, i32 17, !dbg !7403
  %4 = load i32, i32* %num_x, align 4, !dbg !7403
  %div = sdiv i32 %mul, %4, !dbg !7404
  store i32 %div, i32* %left, align 4, !dbg !7396
  call void @llvm.dbg.declare(metadata i32* %right, metadata !7405, metadata !1752), !dbg !7406
  %5 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7407
  %width1 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %5, i32 0, i32 2, !dbg !7408
  %6 = load i32, i32* %width1, align 8, !dbg !7408
  %7 = load i32, i32* %sx.addr, align 4, !dbg !7409
  %add2 = add nsw i32 %7, 1, !dbg !7410
  %mul3 = mul nsw i32 %6, %add2, !dbg !7411
  %8 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7412
  %num_x4 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %8, i32 0, i32 17, !dbg !7413
  %9 = load i32, i32* %num_x4, align 4, !dbg !7413
  %div5 = sdiv i32 %mul3, %9, !dbg !7414
  store i32 %div5, i32* %right, align 4, !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %top, metadata !7415, metadata !1752), !dbg !7416
  %10 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7417
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %10, i32 0, i32 3, !dbg !7418
  %11 = load i32, i32* %height, align 4, !dbg !7418
  %12 = load i32, i32* %sy.addr, align 4, !dbg !7419
  %add6 = add nsw i32 %12, 0, !dbg !7420
  %mul7 = mul nsw i32 %11, %add6, !dbg !7421
  %13 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7422
  %num_y = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %13, i32 0, i32 18, !dbg !7423
  %14 = load i32, i32* %num_y, align 8, !dbg !7423
  %div8 = sdiv i32 %mul7, %14, !dbg !7424
  store i32 %div8, i32* %top, align 4, !dbg !7416
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !7425, metadata !1752), !dbg !7426
  %15 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7427
  %height9 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %15, i32 0, i32 3, !dbg !7428
  %16 = load i32, i32* %height9, align 4, !dbg !7428
  %17 = load i32, i32* %sy.addr, align 4, !dbg !7429
  %add10 = add nsw i32 %17, 1, !dbg !7430
  %mul11 = mul nsw i32 %16, %add10, !dbg !7431
  %18 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7432
  %num_y12 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %18, i32 0, i32 18, !dbg !7433
  %19 = load i32, i32* %num_y12, align 8, !dbg !7433
  %div13 = sdiv i32 %mul11, %19, !dbg !7434
  store i32 %div13, i32* %bottom, align 4, !dbg !7426
  call void @llvm.dbg.declare(metadata i32** %coeff, metadata !7435, metadata !1752), !dbg !7436
  %20 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7437
  %buf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %20, i32 0, i32 0, !dbg !7438
  %21 = load i32*, i32** %buf, align 8, !dbg !7438
  %22 = load i32, i32* %top, align 4, !dbg !7439
  %conv = sext i32 %22 to i64, !dbg !7439
  %23 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7440
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %23, i32 0, i32 1, !dbg !7441
  %24 = load i64, i64* %stride, align 8, !dbg !7441
  %mul14 = mul nsw i64 %conv, %24, !dbg !7442
  %add.ptr = getelementptr inbounds i32, i32* %21, i64 %mul14, !dbg !7443
  store i32* %add.ptr, i32** %coeff, align 8, !dbg !7436
  call void @llvm.dbg.declare(metadata i64* %q_m, metadata !7444, metadata !1752), !dbg !7445
  %25 = load i32, i32* %quant.addr, align 4, !dbg !7446
  %idxprom = sext i32 %25 to i64, !dbg !7447
  %26 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7447
  %qmagic_lut = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %26, i32 0, i32 16, !dbg !7448
  %arrayidx = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut, i64 0, i64 %idxprom, !dbg !7447
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0, !dbg !7447
  %27 = load i32, i32* %arrayidx15, align 4, !dbg !7447
  %conv16 = zext i32 %27 to i64, !dbg !7449
  %shl = shl i64 %conv16, 2, !dbg !7450
  store i64 %shl, i64* %q_m, align 8, !dbg !7445
  call void @llvm.dbg.declare(metadata i64* %q_a, metadata !7451, metadata !1752), !dbg !7452
  %28 = load i32, i32* %quant.addr, align 4, !dbg !7453
  %idxprom17 = sext i32 %28 to i64, !dbg !7454
  %29 = load %struct.VC2EncContext*, %struct.VC2EncContext** %s.addr, align 8, !dbg !7454
  %qmagic_lut18 = getelementptr inbounds %struct.VC2EncContext, %struct.VC2EncContext* %29, i32 0, i32 16, !dbg !7455
  %arrayidx19 = getelementptr inbounds [116 x [2 x i32]], [116 x [2 x i32]]* %qmagic_lut18, i64 0, i64 %idxprom17, !dbg !7454
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx19, i64 0, i64 1, !dbg !7454
  %30 = load i32, i32* %arrayidx20, align 4, !dbg !7454
  %conv21 = zext i32 %30 to i64, !dbg !7454
  store i64 %conv21, i64* %q_a, align 8, !dbg !7452
  call void @llvm.dbg.declare(metadata i32* %q_s, metadata !7456, metadata !1752), !dbg !7457
  %31 = load i32, i32* %quant.addr, align 4, !dbg !7458
  %idxprom22 = sext i32 %31 to i64, !dbg !7459
  %arrayidx23 = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom22, !dbg !7459
  %32 = load i32, i32* %arrayidx23, align 4, !dbg !7459
  %or = or i32 %32, 1, !dbg !7460
  %33 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !7461
  %sub = sub nsw i32 31, %33, !dbg !7462
  %add24 = add nsw i32 %sub, 32, !dbg !7463
  store i32 %add24, i32* %q_s, align 4, !dbg !7457
  %34 = load i32, i32* %top, align 4, !dbg !7464
  store i32 %34, i32* %y, align 4, !dbg !7465
  br label %for.cond, !dbg !7466

for.cond:                                         ; preds = %for.inc49, %entry
  %35 = load i32, i32* %y, align 4, !dbg !7467
  %36 = load i32, i32* %bottom, align 4, !dbg !7469
  %cmp = icmp slt i32 %35, %36, !dbg !7470
  br i1 %cmp, label %for.body, label %for.end51, !dbg !7471

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %left, align 4, !dbg !7472
  store i32 %37, i32* %x, align 4, !dbg !7473
  br label %for.cond26, !dbg !7474

for.cond26:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !7475
  %39 = load i32, i32* %right, align 4, !dbg !7477
  %cmp27 = icmp slt i32 %38, %39, !dbg !7478
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !7479

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %c_abs, metadata !7480, metadata !1752), !dbg !7481
  %40 = load i64, i64* %q_m, align 8, !dbg !7482
  %41 = load i32, i32* %x, align 4, !dbg !7483
  %idxprom30 = sext i32 %41 to i64, !dbg !7484
  %42 = load i32*, i32** %coeff, align 8, !dbg !7484
  %arrayidx31 = getelementptr inbounds i32, i32* %42, i64 %idxprom30, !dbg !7484
  %43 = load i32, i32* %arrayidx31, align 4, !dbg !7484
  %cmp32 = icmp sge i32 %43, 0, !dbg !7485
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !7486

cond.true:                                        ; preds = %for.body29
  %44 = load i32, i32* %x, align 4, !dbg !7487
  %idxprom34 = sext i32 %44 to i64, !dbg !7489
  %45 = load i32*, i32** %coeff, align 8, !dbg !7489
  %arrayidx35 = getelementptr inbounds i32, i32* %45, i64 %idxprom34, !dbg !7489
  %46 = load i32, i32* %arrayidx35, align 4, !dbg !7489
  br label %cond.end, !dbg !7490

cond.false:                                       ; preds = %for.body29
  %47 = load i32, i32* %x, align 4, !dbg !7491
  %idxprom36 = sext i32 %47 to i64, !dbg !7493
  %48 = load i32*, i32** %coeff, align 8, !dbg !7493
  %arrayidx37 = getelementptr inbounds i32, i32* %48, i64 %idxprom36, !dbg !7493
  %49 = load i32, i32* %arrayidx37, align 4, !dbg !7493
  %sub38 = sub nsw i32 0, %49, !dbg !7494
  br label %cond.end, !dbg !7495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %46, %cond.true ], [ %sub38, %cond.false ], !dbg !7496
  %conv39 = sext i32 %cond to i64, !dbg !7498
  %mul40 = mul i64 %40, %conv39, !dbg !7499
  %50 = load i64, i64* %q_a, align 8, !dbg !7500
  %add41 = add i64 %mul40, %50, !dbg !7501
  %51 = load i32, i32* %q_s, align 4, !dbg !7502
  %sh_prom = zext i32 %51 to i64, !dbg !7503
  %shr = lshr i64 %add41, %sh_prom, !dbg !7503
  %conv42 = trunc i64 %shr to i32, !dbg !7504
  store i32 %conv42, i32* %c_abs, align 4, !dbg !7505
  %52 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7506
  %53 = load i32, i32* %c_abs, align 4, !dbg !7507
  store %struct.PutBitContext* %52, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7508
  store i32 %53, i32* %val.addr.i, align 4, !dbg !7508
  store i32 0, i32* %pbits.i, align 4, !dbg !7375
  store i32 0, i32* %bits.i, align 4, !dbg !7376
  store i32 1, i32* %topbit.i, align 4, !dbg !7377
  store i32 1, i32* %maxval.i, align 4, !dbg !7378
  %54 = load i32, i32* %val.addr.i, align 4, !dbg !7509
  %inc.i = add i32 %54, 1, !dbg !7509
  store i32 %inc.i, i32* %val.addr.i, align 4, !dbg !7509
  %tobool.i = icmp ne i32 %54, 0, !dbg !7509
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !7510

if.then.i:                                        ; preds = %cond.end
  %55 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7511
  call void @put_bits(%struct.PutBitContext* %55, i32 1, i32 1) #9, !dbg !7512
  br label %put_vc2_ue_uint.exit, !dbg !7513

if.end.i:                                         ; preds = %cond.end
  br label %while.cond.i, !dbg !7514

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %56 = load i32, i32* %val.addr.i, align 4, !dbg !7515
  %57 = load i32, i32* %maxval.i, align 4, !dbg !7516
  %cmp.i = icmp ugt i32 %56, %57, !dbg !7517
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !7518

while.body.i:                                     ; preds = %while.cond.i
  %58 = load i32, i32* %topbit.i, align 4, !dbg !7519
  %shl.i = shl i32 %58, 1, !dbg !7519
  store i32 %shl.i, i32* %topbit.i, align 4, !dbg !7519
  %59 = load i32, i32* %maxval.i, align 4, !dbg !7520
  %shl1.i = shl i32 %59, 1, !dbg !7520
  store i32 %shl1.i, i32* %maxval.i, align 4, !dbg !7520
  %60 = load i32, i32* %maxval.i, align 4, !dbg !7521
  %or.i = or i32 %60, 1, !dbg !7521
  store i32 %or.i, i32* %maxval.i, align 4, !dbg !7521
  br label %while.cond.i, !dbg !7522, !llvm.loop !3864

while.end.i:                                      ; preds = %while.cond.i
  %61 = load i32, i32* %topbit.i, align 4, !dbg !7523
  %or2.i = or i32 %61, 1, !dbg !7524
  %62 = call i32 @llvm.ctlz.i32(i32 %or2.i, i1 true) #9, !dbg !7525
  %sub.i = sub nsw i32 31, %62, !dbg !7526
  store i32 %sub.i, i32* %bits.i, align 4, !dbg !7527
  store i32 0, i32* %i.i, align 4, !dbg !7528
  br label %for.cond.i, !dbg !7529

for.cond.i:                                       ; preds = %if.end8.i, %while.end.i
  %63 = load i32, i32* %i.i, align 4, !dbg !7530
  %64 = load i32, i32* %bits.i, align 4, !dbg !7531
  %cmp3.i = icmp slt i32 %63, %64, !dbg !7532
  br i1 %cmp3.i, label %for.body.i, label %for.end.i, !dbg !7533

for.body.i:                                       ; preds = %for.cond.i
  %65 = load i32, i32* %topbit.i, align 4, !dbg !7534
  %shr.i = ashr i32 %65, 1, !dbg !7534
  store i32 %shr.i, i32* %topbit.i, align 4, !dbg !7534
  %66 = load i32, i32* %pbits.i, align 4, !dbg !7535
  %shl4.i = shl i32 %66, 2, !dbg !7535
  store i32 %shl4.i, i32* %pbits.i, align 4, !dbg !7535
  %67 = load i32, i32* %val.addr.i, align 4, !dbg !7536
  %68 = load i32, i32* %topbit.i, align 4, !dbg !7537
  %and.i = and i32 %67, %68, !dbg !7538
  %tobool5.i = icmp ne i32 %and.i, 0, !dbg !7538
  br i1 %tobool5.i, label %if.then6.i, label %if.end8.i, !dbg !7539

if.then6.i:                                       ; preds = %for.body.i
  %69 = load i32, i32* %pbits.i, align 4, !dbg !7540
  %or7.i = or i32 %69, 1, !dbg !7540
  store i32 %or7.i, i32* %pbits.i, align 4, !dbg !7540
  br label %if.end8.i, !dbg !7541

if.end8.i:                                        ; preds = %if.then6.i, %for.body.i
  %70 = load i32, i32* %i.i, align 4, !dbg !7542
  %inc9.i = add nsw i32 %70, 1, !dbg !7542
  store i32 %inc9.i, i32* %i.i, align 4, !dbg !7542
  br label %for.cond.i, !dbg !7543, !llvm.loop !3893

for.end.i:                                        ; preds = %for.cond.i
  %71 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7544
  %72 = load i32, i32* %bits.i, align 4, !dbg !7545
  %mul.i = mul nsw i32 %72, 2, !dbg !7546
  %add.i = add nsw i32 %mul.i, 1, !dbg !7547
  %73 = load i32, i32* %pbits.i, align 4, !dbg !7548
  %shl10.i = shl i32 %73, 1, !dbg !7549
  %or11.i = or i32 %shl10.i, 1, !dbg !7550
  call void @put_bits(%struct.PutBitContext* %71, i32 %add.i, i32 %or11.i) #9, !dbg !7551
  br label %put_vc2_ue_uint.exit, !dbg !7552

put_vc2_ue_uint.exit:                             ; preds = %if.then.i, %for.end.i
  %74 = load i32, i32* %c_abs, align 4, !dbg !7553
  %tobool = icmp ne i32 %74, 0, !dbg !7553
  br i1 %tobool, label %if.then, label %if.end, !dbg !7555

if.then:                                          ; preds = %put_vc2_ue_uint.exit
  %75 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7556
  %76 = load i32, i32* %x, align 4, !dbg !7557
  %idxprom43 = sext i32 %76 to i64, !dbg !7558
  %77 = load i32*, i32** %coeff, align 8, !dbg !7558
  %arrayidx44 = getelementptr inbounds i32, i32* %77, i64 %idxprom43, !dbg !7558
  %78 = load i32, i32* %arrayidx44, align 4, !dbg !7558
  %cmp45 = icmp slt i32 %78, 0, !dbg !7559
  %conv46 = zext i1 %cmp45 to i32, !dbg !7559
  call void @put_bits(%struct.PutBitContext* %75, i32 1, i32 %conv46), !dbg !7560
  br label %if.end, !dbg !7560

if.end:                                           ; preds = %if.then, %put_vc2_ue_uint.exit
  br label %for.inc, !dbg !7561

for.inc:                                          ; preds = %if.end
  %79 = load i32, i32* %x, align 4, !dbg !7562
  %inc = add nsw i32 %79, 1, !dbg !7562
  store i32 %inc, i32* %x, align 4, !dbg !7562
  br label %for.cond26, !dbg !7564, !llvm.loop !7565

for.end:                                          ; preds = %for.cond26
  %80 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !7567
  %stride47 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %80, i32 0, i32 1, !dbg !7568
  %81 = load i64, i64* %stride47, align 8, !dbg !7568
  %82 = load i32*, i32** %coeff, align 8, !dbg !7569
  %add.ptr48 = getelementptr inbounds i32, i32* %82, i64 %81, !dbg !7569
  store i32* %add.ptr48, i32** %coeff, align 8, !dbg !7569
  br label %for.inc49, !dbg !7570

for.inc49:                                        ; preds = %for.end
  %83 = load i32, i32* %y, align 4, !dbg !7571
  %inc50 = add nsw i32 %83, 1, !dbg !7571
  store i32 %inc50, i32* %y, align 4, !dbg !7571
  br label %for.cond, !dbg !7573, !llvm.loop !7574

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !7576
}

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare void @ff_vc2enc_free_transforms(%struct.VC2TransformContext*) #1

declare void @av_freep(i8*) #1

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1746, !1747}
!llvm.ident = !{!1748}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !935, globals: !956)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc2enc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !916}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "VC2_QM", file: !910, line: 78, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/vc2enc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914, !915}
!912 = !DIEnumerator(name: "VC2_QM_DEF", value: 0)
!913 = !DIEnumerator(name: "VC2_QM_COL", value: 1)
!914 = !DIEnumerator(name: "VC2_QM_FLAT", value: 2)
!915 = !DIEnumerator(name: "VC2_QM_NB", value: 3)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DiracParseCodes", file: !917, line: 57, size: 32, align: 32, elements: !918)
!917 = !DIFile(filename: "libavcodec/dirac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934}
!919 = !DIEnumerator(name: "DIRAC_PCODE_SEQ_HEADER", value: 0)
!920 = !DIEnumerator(name: "DIRAC_PCODE_END_SEQ", value: 16)
!921 = !DIEnumerator(name: "DIRAC_PCODE_AUX", value: 32)
!922 = !DIEnumerator(name: "DIRAC_PCODE_PAD", value: 48)
!923 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_CODED", value: 8)
!924 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_RAW", value: 72)
!925 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_LOW_DEL", value: 200)
!926 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_HQ", value: 232)
!927 = !DIEnumerator(name: "DIRAC_PCODE_INTER_NOREF_CO1", value: 10)
!928 = !DIEnumerator(name: "DIRAC_PCODE_INTER_NOREF_CO2", value: 9)
!929 = !DIEnumerator(name: "DIRAC_PCODE_INTER_REF_CO1", value: 13)
!930 = !DIEnumerator(name: "DIRAC_PCODE_INTER_REF_CO2", value: 14)
!931 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_CO", value: 12)
!932 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_RAW", value: 76)
!933 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_PICT", value: 204)
!934 = !DIEnumerator(name: "DIRAC_PCODE_MAGIC", value: 1111638852)
!935 = !{!936, !937, !938, !943, !947, !949, !955}
!936 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!937 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !941, line: 48, baseType: !942)
!941 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!942 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !941, line: 49, baseType: !946)
!946 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !941, line: 55, baseType: !948)
!948 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !951, line: 221, size: 32, align: 8, elements: !952)
!951 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !950, file: !951, line: 221, baseType: !954, size: 32, align: 32)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !941, line: 51, baseType: !937)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!956 = !{!957, !962, !963, !1715, !1719, !1720, !1726, !1730, !1731}
!957 = distinct !DIGlobalVariable(name: "vc2_qm_col_tab", scope: !0, file: !910, line: 426, type: !958, isLocal: false, isDefinition: true, variable: [5 x [4 x i8]]* @vc2_qm_col_tab)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 160, align: 8, elements: !959)
!959 = !{!960, !961}
!960 = !DISubrange(count: 5)
!961 = !DISubrange(count: 4)
!962 = distinct !DIGlobalVariable(name: "vc2_qm_flat_tab", scope: !0, file: !910, line: 434, type: !958, isLocal: false, isDefinition: true, variable: [5 x [4 x i8]]* @vc2_qm_flat_tab)
!963 = distinct !DIGlobalVariable(name: "ff_vc2_encoder", scope: !0, file: !910, line: 1228, type: !964, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_vc2_encoder)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !966)
!966 = !{!967, !971, !972, !973, !974, !975, !984, !987, !990, !993, !996, !997, !1072, !1080, !1081, !1082, !1084, !1630, !1636, !1644, !1648, !1649, !1686, !1690, !1694, !1695, !1699, !1703, !1704, !1708, !1709, !1710}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !965, file: !14, line: 3475, baseType: !968, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !965, file: !14, line: 3480, baseType: !968, size: 64, align: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !965, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !965, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !965, file: !14, line: 3487, baseType: !936, size: 32, align: 32, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !965, file: !14, line: 3488, baseType: !976, size: 64, align: 64, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !979, line: 61, baseType: !980)
!979 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !979, line: 58, size: 64, align: 32, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !980, file: !979, line: 59, baseType: !936, size: 32, align: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !980, file: !979, line: 60, baseType: !936, size: 32, align: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !965, file: !14, line: 3489, baseType: !985, size: 64, align: 64, offset: 320)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !965, file: !14, line: 3490, baseType: !988, size: 64, align: 64, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !965, file: !14, line: 3491, baseType: !991, size: 64, align: 64, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !965, file: !14, line: 3492, baseType: !994, size: 64, align: 64, offset: 512)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !965, file: !14, line: 3493, baseType: !940, size: 8, align: 8, offset: 576)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !965, file: !14, line: 3494, baseType: !998, size: 64, align: 64, offset: 640)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1002)
!1002 = !{!1003, !1004, !1008, !1031, !1032, !1033, !1034, !1038, !1044, !1046, !1050}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1001, file: !713, line: 72, baseType: !968, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1001, file: !713, line: 78, baseType: !1005, size: 64, align: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!968, !955}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1001, file: !713, line: 85, baseType: !1009, size: 64, align: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1017, !1027, !1028, !1029, !1030}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1011, file: !691, line: 247, baseType: !968, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1011, file: !691, line: 253, baseType: !968, size: 64, align: 64, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1011, file: !691, line: 259, baseType: !936, size: 32, align: 32, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1011, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1011, file: !691, line: 271, baseType: !1018, size: 64, align: 64, offset: 192)
!1018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1011, file: !691, line: 265, size: 64, align: 64, elements: !1019)
!1019 = !{!1020, !1023, !1025, !1026}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1018, file: !691, line: 266, baseType: !1021, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !941, line: 40, baseType: !1022)
!1022 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1018, file: !691, line: 267, baseType: !1024, size: 64, align: 64)
!1024 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1018, file: !691, line: 268, baseType: !968, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1018, file: !691, line: 270, baseType: !978, size: 64, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1011, file: !691, line: 272, baseType: !1024, size: 64, align: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1011, file: !691, line: 273, baseType: !1024, size: 64, align: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1011, file: !691, line: 275, baseType: !936, size: 32, align: 32, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1011, file: !691, line: 300, baseType: !968, size: 64, align: 64, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1001, file: !713, line: 93, baseType: !936, size: 32, align: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1001, file: !713, line: 99, baseType: !936, size: 32, align: 32, offset: 224)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1001, file: !713, line: 108, baseType: !936, size: 32, align: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1001, file: !713, line: 113, baseType: !1035, size: 64, align: 64, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!955, !955, !955}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1001, file: !713, line: 123, baseType: !1039, size: 64, align: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!1042, !1042}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1001, file: !713, line: 130, baseType: !1045, size: 32, align: 32, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1001, file: !713, line: 136, baseType: !1047, size: 64, align: 64, offset: 512)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!1045, !955}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1001, file: !713, line: 142, baseType: !1051, size: 64, align: 64, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!936, !1054, !955, !968, !936}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1057)
!1057 = !{!1058, !1070, !1071}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1056, file: !691, line: 360, baseType: !1059, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068, !1069}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1062, file: !691, line: 307, baseType: !968, size: 64, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1062, file: !691, line: 313, baseType: !1024, size: 64, align: 64, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1062, file: !691, line: 313, baseType: !1024, size: 64, align: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1062, file: !691, line: 318, baseType: !1024, size: 64, align: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1062, file: !691, line: 318, baseType: !1024, size: 64, align: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1062, file: !691, line: 323, baseType: !936, size: 32, align: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1056, file: !691, line: 364, baseType: !936, size: 32, align: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1056, file: !691, line: 368, baseType: !936, size: 32, align: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !965, file: !14, line: 3495, baseType: !1073, size: 64, align: 64, offset: 704)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1076, file: !14, line: 3402, baseType: !936, size: 32, align: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1076, file: !14, line: 3403, baseType: !968, size: 64, align: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !965, file: !14, line: 3507, baseType: !968, size: 64, align: 64, offset: 768)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !965, file: !14, line: 3516, baseType: !936, size: 32, align: 32, offset: 832)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !965, file: !14, line: 3517, baseType: !1083, size: 64, align: 64, offset: 896)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !965, file: !14, line: 3527, baseType: !1085, size: 64, align: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!936, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1098, !1099, !1100, !1101, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1380, !1384, !1385, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1568, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1090, file: !14, line: 1561, baseType: !998, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1090, file: !14, line: 1562, baseType: !936, size: 32, align: 32, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1090, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1090, file: !14, line: 1565, baseType: !1096, size: 64, align: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1090, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1090, file: !14, line: 1581, baseType: !937, size: 32, align: 32, offset: 224)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1090, file: !14, line: 1583, baseType: !955, size: 64, align: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1090, file: !14, line: 1591, baseType: !1102, size: 64, align: 64, offset: 320)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1104, line: 129, size: 1664, align: 64, elements: !1105)
!1104 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1105 = !{!1106, !1107, !1108, !1109, !1207, !1227, !1228, !1257, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1103, file: !1104, line: 136, baseType: !936, size: 32, align: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1103, file: !1104, line: 151, baseType: !936, size: 32, align: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1103, file: !1104, line: 157, baseType: !936, size: 32, align: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1103, file: !1104, line: 159, baseType: !1110, size: 64, align: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1113)
!1113 = !{!1114, !1119, !1121, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1159, !1161, !1162, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1195, !1196, !1197, !1198, !1199, !1200, !1203, !1204, !1205, !1206}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1112, file: !744, line: 282, baseType: !1115, size: 512, align: 64)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 512, align: 64, elements: !1117)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64, align: 64)
!1117 = !{!1118}
!1118 = !DISubrange(count: 8)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1112, file: !744, line: 299, baseType: !1120, size: 256, align: 32, offset: 512)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 256, align: 32, elements: !1117)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1112, file: !744, line: 315, baseType: !1122, size: 64, align: 64, offset: 768)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1112, file: !744, line: 326, baseType: !936, size: 32, align: 32, offset: 832)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1112, file: !744, line: 326, baseType: !936, size: 32, align: 32, offset: 864)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1112, file: !744, line: 334, baseType: !936, size: 32, align: 32, offset: 896)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1112, file: !744, line: 341, baseType: !936, size: 32, align: 32, offset: 928)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1112, file: !744, line: 346, baseType: !936, size: 32, align: 32, offset: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1112, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1112, file: !744, line: 356, baseType: !978, size: 64, align: 32, offset: 1024)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1112, file: !744, line: 361, baseType: !1021, size: 64, align: 64, offset: 1088)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1112, file: !744, line: 369, baseType: !1021, size: 64, align: 64, offset: 1152)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1112, file: !744, line: 377, baseType: !1021, size: 64, align: 64, offset: 1216)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1112, file: !744, line: 382, baseType: !936, size: 32, align: 32, offset: 1280)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1112, file: !744, line: 386, baseType: !936, size: 32, align: 32, offset: 1312)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1112, file: !744, line: 391, baseType: !936, size: 32, align: 32, offset: 1344)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1112, file: !744, line: 396, baseType: !955, size: 64, align: 64, offset: 1408)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1112, file: !744, line: 403, baseType: !1138, size: 512, align: 64, offset: 1472)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 512, align: 64, elements: !1117)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1112, file: !744, line: 410, baseType: !936, size: 32, align: 32, offset: 1984)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1112, file: !744, line: 415, baseType: !936, size: 32, align: 32, offset: 2016)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1112, file: !744, line: 420, baseType: !936, size: 32, align: 32, offset: 2048)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1112, file: !744, line: 425, baseType: !936, size: 32, align: 32, offset: 2080)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1112, file: !744, line: 435, baseType: !1021, size: 64, align: 64, offset: 2112)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1112, file: !744, line: 440, baseType: !936, size: 32, align: 32, offset: 2176)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1112, file: !744, line: 445, baseType: !947, size: 64, align: 64, offset: 2240)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1112, file: !744, line: 459, baseType: !1147, size: 512, align: 64, offset: 2304)
!1147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1148, size: 512, align: 64, elements: !1117)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1150, line: 94, baseType: !1151)
!1150 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1150, line: 81, size: 192, align: 64, elements: !1152)
!1152 = !{!1153, !1157, !1158}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1151, file: !1150, line: 82, baseType: !1154, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1150, line: 73, baseType: !1156)
!1156 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1150, line: 73, flags: DIFlagFwdDecl)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1151, file: !1150, line: 89, baseType: !1116, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1151, file: !1150, line: 93, baseType: !936, size: 32, align: 32, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1112, file: !744, line: 473, baseType: !1160, size: 64, align: 64, offset: 2816)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1112, file: !744, line: 477, baseType: !936, size: 32, align: 32, offset: 2880)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1112, file: !744, line: 479, baseType: !1163, size: 64, align: 64, offset: 2944)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1176}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1166, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1166, file: !744, line: 203, baseType: !1116, size: 64, align: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1166, file: !744, line: 204, baseType: !936, size: 32, align: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1166, file: !744, line: 205, baseType: !1172, size: 64, align: 64, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1174, line: 86, baseType: !1175)
!1174 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1174, line: 86, flags: DIFlagFwdDecl)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1166, file: !744, line: 206, baseType: !1148, size: 64, align: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1112, file: !744, line: 480, baseType: !936, size: 32, align: 32, offset: 3008)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1112, file: !744, line: 505, baseType: !936, size: 32, align: 32, offset: 3040)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1112, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1112, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1112, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1112, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1112, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1112, file: !744, line: 532, baseType: !1021, size: 64, align: 64, offset: 3264)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1112, file: !744, line: 539, baseType: !1021, size: 64, align: 64, offset: 3328)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1112, file: !744, line: 547, baseType: !1021, size: 64, align: 64, offset: 3392)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1112, file: !744, line: 554, baseType: !1172, size: 64, align: 64, offset: 3456)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1112, file: !744, line: 563, baseType: !936, size: 32, align: 32, offset: 3520)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1112, file: !744, line: 572, baseType: !936, size: 32, align: 32, offset: 3552)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1112, file: !744, line: 581, baseType: !936, size: 32, align: 32, offset: 3584)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1112, file: !744, line: 588, baseType: !1192, size: 64, align: 64, offset: 3648)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !941, line: 36, baseType: !1194)
!1194 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1112, file: !744, line: 593, baseType: !936, size: 32, align: 32, offset: 3712)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1112, file: !744, line: 596, baseType: !936, size: 32, align: 32, offset: 3744)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1112, file: !744, line: 599, baseType: !1148, size: 64, align: 64, offset: 3776)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1112, file: !744, line: 605, baseType: !1148, size: 64, align: 64, offset: 3840)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1112, file: !744, line: 616, baseType: !1148, size: 64, align: 64, offset: 3904)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1112, file: !744, line: 626, baseType: !1201, size: 64, align: 64, offset: 3968)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1202, line: 216, baseType: !948)
!1202 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1112, file: !744, line: 627, baseType: !1201, size: 64, align: 64, offset: 4032)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1112, file: !744, line: 628, baseType: !1201, size: 64, align: 64, offset: 4096)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1112, file: !744, line: 629, baseType: !1201, size: 64, align: 64, offset: 4160)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1112, file: !744, line: 645, baseType: !1148, size: 64, align: 64, offset: 4224)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1103, file: !1104, line: 161, baseType: !1208, size: 64, align: 64, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1104, line: 117, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1104, line: 100, size: 832, align: 64, elements: !1211)
!1211 = !{!1212, !1218, !1219, !1220, !1221, !1222, !1224, !1225, !1226}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1210, file: !1104, line: 105, baseType: !1213, size: 256, align: 64)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, size: 256, align: 64, elements: !1217)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1150, line: 238, baseType: !1216)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1150, line: 238, flags: DIFlagFwdDecl)
!1217 = !{!961}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1210, file: !1104, line: 110, baseType: !936, size: 32, align: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1210, file: !1104, line: 111, baseType: !936, size: 32, align: 32, offset: 288)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1210, file: !1104, line: 111, baseType: !936, size: 32, align: 32, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1210, file: !1104, line: 112, baseType: !1120, size: 256, align: 32, offset: 352)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1210, file: !1104, line: 113, baseType: !1223, size: 128, align: 32, offset: 608)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 128, align: 32, elements: !1217)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1210, file: !1104, line: 114, baseType: !936, size: 32, align: 32, offset: 736)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1210, file: !1104, line: 115, baseType: !936, size: 32, align: 32, offset: 768)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1210, file: !1104, line: 116, baseType: !936, size: 32, align: 32, offset: 800)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1103, file: !1104, line: 163, baseType: !955, size: 64, align: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1103, file: !1104, line: 165, baseType: !1229, size: 128, align: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1104, line: 122, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1104, line: 119, size: 128, align: 64, elements: !1231)
!1231 = !{!1232, !1256}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1230, file: !1104, line: 120, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1252, !1253, !1254, !1255}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1235, file: !14, line: 1451, baseType: !1148, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1235, file: !14, line: 1461, baseType: !1021, size: 64, align: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1235, file: !14, line: 1467, baseType: !1021, size: 64, align: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1235, file: !14, line: 1468, baseType: !1116, size: 64, align: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !14, line: 1469, baseType: !936, size: 32, align: 32, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1235, file: !14, line: 1470, baseType: !936, size: 32, align: 32, offset: 288)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !14, line: 1474, baseType: !936, size: 32, align: 32, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1235, file: !14, line: 1479, baseType: !1245, size: 64, align: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1248)
!1248 = !{!1249, !1250, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1247, file: !14, line: 1412, baseType: !1116, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1247, file: !14, line: 1413, baseType: !936, size: 32, align: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1247, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1235, file: !14, line: 1480, baseType: !936, size: 32, align: 32, offset: 448)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1235, file: !14, line: 1486, baseType: !1021, size: 64, align: 64, offset: 512)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1235, file: !14, line: 1488, baseType: !1021, size: 64, align: 64, offset: 576)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1235, file: !14, line: 1497, baseType: !1021, size: 64, align: 64, offset: 640)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1230, file: !1104, line: 121, baseType: !1110, size: 64, align: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1103, file: !1104, line: 166, baseType: !1258, size: 128, align: 64, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1104, line: 127, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1104, line: 124, size: 128, align: 64, elements: !1260)
!1260 = !{!1261, !1334}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1259, file: !1104, line: 125, baseType: !1262, size: 64, align: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1266)
!1266 = !{!1267, !1268, !1292, !1296, !1297, !1331, !1332, !1333}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1265, file: !14, line: 5751, baseType: !998, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1265, file: !14, line: 5756, baseType: !1269, size: 64, align: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1272)
!1272 = !{!1273, !1274, !1277, !1278, !1279, !1283, !1287, !1291}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1271, file: !14, line: 5797, baseType: !968, size: 64, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1271, file: !14, line: 5804, baseType: !1275, size: 64, align: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1271, file: !14, line: 5815, baseType: !998, size: 64, align: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1271, file: !14, line: 5825, baseType: !936, size: 32, align: 32, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1271, file: !14, line: 5826, baseType: !1280, size: 64, align: 64, offset: 256)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64, align: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!936, !1263}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1271, file: !14, line: 5827, baseType: !1284, size: 64, align: 64, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!936, !1263, !1233}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1271, file: !14, line: 5828, baseType: !1288, size: 64, align: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !1263}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1271, file: !14, line: 5829, baseType: !1288, size: 64, align: 64, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1265, file: !14, line: 5762, baseType: !1293, size: 64, align: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1295)
!1295 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1265, file: !14, line: 5768, baseType: !955, size: 64, align: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1265, file: !14, line: 5775, baseType: !1298, size: 64, align: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1300, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1300, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1300, file: !14, line: 3948, baseType: !954, size: 32, align: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1300, file: !14, line: 3958, baseType: !1116, size: 64, align: 64, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1300, file: !14, line: 3962, baseType: !936, size: 32, align: 32, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1300, file: !14, line: 3968, baseType: !936, size: 32, align: 32, offset: 224)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1300, file: !14, line: 3973, baseType: !1021, size: 64, align: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1300, file: !14, line: 3986, baseType: !936, size: 32, align: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1300, file: !14, line: 3999, baseType: !936, size: 32, align: 32, offset: 352)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1300, file: !14, line: 4004, baseType: !936, size: 32, align: 32, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1300, file: !14, line: 4005, baseType: !936, size: 32, align: 32, offset: 416)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1300, file: !14, line: 4010, baseType: !936, size: 32, align: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1300, file: !14, line: 4011, baseType: !936, size: 32, align: 32, offset: 480)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1300, file: !14, line: 4020, baseType: !978, size: 64, align: 32, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1300, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1300, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1300, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1300, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1300, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1300, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1300, file: !14, line: 4039, baseType: !936, size: 32, align: 32, offset: 768)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1300, file: !14, line: 4046, baseType: !947, size: 64, align: 64, offset: 832)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1300, file: !14, line: 4050, baseType: !936, size: 32, align: 32, offset: 896)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1300, file: !14, line: 4054, baseType: !936, size: 32, align: 32, offset: 928)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1300, file: !14, line: 4061, baseType: !936, size: 32, align: 32, offset: 960)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1300, file: !14, line: 4065, baseType: !936, size: 32, align: 32, offset: 992)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1300, file: !14, line: 4073, baseType: !936, size: 32, align: 32, offset: 1024)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1300, file: !14, line: 4080, baseType: !936, size: 32, align: 32, offset: 1056)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1300, file: !14, line: 4084, baseType: !936, size: 32, align: 32, offset: 1088)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1265, file: !14, line: 5781, baseType: !1298, size: 64, align: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1265, file: !14, line: 5787, baseType: !978, size: 64, align: 32, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1265, file: !14, line: 5793, baseType: !978, size: 64, align: 32, offset: 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1259, file: !1104, line: 126, baseType: !936, size: 32, align: 32, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1103, file: !1104, line: 172, baseType: !1233, size: 64, align: 64, offset: 576)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1103, file: !1104, line: 177, baseType: !1116, size: 64, align: 64, offset: 640)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1103, file: !1104, line: 178, baseType: !937, size: 32, align: 32, offset: 704)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1103, file: !1104, line: 180, baseType: !955, size: 64, align: 64, offset: 768)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1103, file: !1104, line: 185, baseType: !936, size: 32, align: 32, offset: 832)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1103, file: !1104, line: 190, baseType: !955, size: 64, align: 64, offset: 896)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1103, file: !1104, line: 195, baseType: !936, size: 32, align: 32, offset: 960)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1103, file: !1104, line: 200, baseType: !1233, size: 64, align: 64, offset: 1024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1103, file: !1104, line: 201, baseType: !936, size: 32, align: 32, offset: 1088)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1103, file: !1104, line: 202, baseType: !1110, size: 64, align: 64, offset: 1152)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1103, file: !1104, line: 203, baseType: !936, size: 32, align: 32, offset: 1216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1103, file: !1104, line: 205, baseType: !936, size: 32, align: 32, offset: 1248)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1103, file: !1104, line: 206, baseType: !936, size: 32, align: 32, offset: 1280)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1103, file: !1104, line: 209, baseType: !1201, size: 64, align: 64, offset: 1344)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1103, file: !1104, line: 212, baseType: !1201, size: 64, align: 64, offset: 1408)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1103, file: !1104, line: 213, baseType: !1110, size: 64, align: 64, offset: 1472)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1103, file: !1104, line: 215, baseType: !936, size: 32, align: 32, offset: 1536)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1103, file: !1104, line: 217, baseType: !936, size: 32, align: 32, offset: 1568)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1103, file: !1104, line: 220, baseType: !936, size: 32, align: 32, offset: 1600)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1090, file: !14, line: 1598, baseType: !955, size: 64, align: 64, offset: 384)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1090, file: !14, line: 1606, baseType: !1021, size: 64, align: 64, offset: 448)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1090, file: !14, line: 1614, baseType: !936, size: 32, align: 32, offset: 512)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1090, file: !14, line: 1622, baseType: !936, size: 32, align: 32, offset: 544)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1090, file: !14, line: 1628, baseType: !936, size: 32, align: 32, offset: 576)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1090, file: !14, line: 1636, baseType: !936, size: 32, align: 32, offset: 608)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1090, file: !14, line: 1643, baseType: !936, size: 32, align: 32, offset: 640)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1090, file: !14, line: 1657, baseType: !1116, size: 64, align: 64, offset: 704)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1090, file: !14, line: 1658, baseType: !936, size: 32, align: 32, offset: 768)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1090, file: !14, line: 1679, baseType: !978, size: 64, align: 32, offset: 800)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1090, file: !14, line: 1688, baseType: !936, size: 32, align: 32, offset: 864)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1090, file: !14, line: 1712, baseType: !936, size: 32, align: 32, offset: 896)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1090, file: !14, line: 1729, baseType: !936, size: 32, align: 32, offset: 928)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1090, file: !14, line: 1729, baseType: !936, size: 32, align: 32, offset: 960)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1090, file: !14, line: 1744, baseType: !936, size: 32, align: 32, offset: 992)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1090, file: !14, line: 1744, baseType: !936, size: 32, align: 32, offset: 1024)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1090, file: !14, line: 1751, baseType: !936, size: 32, align: 32, offset: 1056)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1090, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1090, file: !14, line: 1791, baseType: !1373, size: 64, align: 64, offset: 1152)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{null, !1376, !1377, !1379, !936, !936, !936}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1090, file: !14, line: 1808, baseType: !1381, size: 64, align: 64, offset: 1216)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!473, !1376, !985}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1090, file: !14, line: 1816, baseType: !936, size: 32, align: 32, offset: 1280)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1090, file: !14, line: 1825, baseType: !1386, size: 32, align: 32, offset: 1312)
!1386 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1090, file: !14, line: 1830, baseType: !936, size: 32, align: 32, offset: 1344)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1090, file: !14, line: 1838, baseType: !1386, size: 32, align: 32, offset: 1376)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1090, file: !14, line: 1846, baseType: !936, size: 32, align: 32, offset: 1408)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1090, file: !14, line: 1851, baseType: !936, size: 32, align: 32, offset: 1440)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1090, file: !14, line: 1861, baseType: !1386, size: 32, align: 32, offset: 1472)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1090, file: !14, line: 1868, baseType: !1386, size: 32, align: 32, offset: 1504)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1090, file: !14, line: 1875, baseType: !1386, size: 32, align: 32, offset: 1536)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1090, file: !14, line: 1882, baseType: !1386, size: 32, align: 32, offset: 1568)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1090, file: !14, line: 1889, baseType: !1386, size: 32, align: 32, offset: 1600)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1090, file: !14, line: 1896, baseType: !1386, size: 32, align: 32, offset: 1632)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1090, file: !14, line: 1903, baseType: !1386, size: 32, align: 32, offset: 1664)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1090, file: !14, line: 1910, baseType: !936, size: 32, align: 32, offset: 1696)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1090, file: !14, line: 1915, baseType: !936, size: 32, align: 32, offset: 1728)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1090, file: !14, line: 1926, baseType: !1379, size: 64, align: 64, offset: 1792)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1090, file: !14, line: 1935, baseType: !978, size: 64, align: 32, offset: 1856)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1090, file: !14, line: 1942, baseType: !936, size: 32, align: 32, offset: 1920)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1090, file: !14, line: 1948, baseType: !936, size: 32, align: 32, offset: 1952)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1090, file: !14, line: 1954, baseType: !936, size: 32, align: 32, offset: 1984)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1090, file: !14, line: 1960, baseType: !936, size: 32, align: 32, offset: 2016)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1090, file: !14, line: 1984, baseType: !936, size: 32, align: 32, offset: 2048)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1090, file: !14, line: 1991, baseType: !936, size: 32, align: 32, offset: 2080)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1090, file: !14, line: 1996, baseType: !936, size: 32, align: 32, offset: 2112)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1090, file: !14, line: 2004, baseType: !936, size: 32, align: 32, offset: 2144)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1090, file: !14, line: 2011, baseType: !936, size: 32, align: 32, offset: 2176)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1090, file: !14, line: 2018, baseType: !936, size: 32, align: 32, offset: 2208)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1090, file: !14, line: 2027, baseType: !936, size: 32, align: 32, offset: 2240)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1090, file: !14, line: 2034, baseType: !936, size: 32, align: 32, offset: 2272)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1090, file: !14, line: 2044, baseType: !936, size: 32, align: 32, offset: 2304)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1090, file: !14, line: 2054, baseType: !1416, size: 64, align: 64, offset: 2368)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1090, file: !14, line: 2061, baseType: !1416, size: 64, align: 64, offset: 2432)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1090, file: !14, line: 2066, baseType: !936, size: 32, align: 32, offset: 2496)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1090, file: !14, line: 2070, baseType: !936, size: 32, align: 32, offset: 2528)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1090, file: !14, line: 2078, baseType: !936, size: 32, align: 32, offset: 2560)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1090, file: !14, line: 2085, baseType: !936, size: 32, align: 32, offset: 2592)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1090, file: !14, line: 2092, baseType: !936, size: 32, align: 32, offset: 2624)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1090, file: !14, line: 2099, baseType: !936, size: 32, align: 32, offset: 2656)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1090, file: !14, line: 2106, baseType: !936, size: 32, align: 32, offset: 2688)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1090, file: !14, line: 2113, baseType: !936, size: 32, align: 32, offset: 2720)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1090, file: !14, line: 2120, baseType: !936, size: 32, align: 32, offset: 2752)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1090, file: !14, line: 2125, baseType: !936, size: 32, align: 32, offset: 2784)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1090, file: !14, line: 2133, baseType: !936, size: 32, align: 32, offset: 2816)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1090, file: !14, line: 2140, baseType: !936, size: 32, align: 32, offset: 2848)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1090, file: !14, line: 2145, baseType: !936, size: 32, align: 32, offset: 2880)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1090, file: !14, line: 2153, baseType: !936, size: 32, align: 32, offset: 2912)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1090, file: !14, line: 2158, baseType: !936, size: 32, align: 32, offset: 2944)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1090, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1090, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1090, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1090, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1090, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1090, file: !14, line: 2203, baseType: !936, size: 32, align: 32, offset: 3136)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1090, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1090, file: !14, line: 2212, baseType: !936, size: 32, align: 32, offset: 3200)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1090, file: !14, line: 2213, baseType: !936, size: 32, align: 32, offset: 3232)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1090, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1090, file: !14, line: 2232, baseType: !936, size: 32, align: 32, offset: 3296)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1090, file: !14, line: 2243, baseType: !936, size: 32, align: 32, offset: 3328)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1090, file: !14, line: 2249, baseType: !936, size: 32, align: 32, offset: 3360)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1090, file: !14, line: 2256, baseType: !936, size: 32, align: 32, offset: 3392)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1090, file: !14, line: 2263, baseType: !947, size: 64, align: 64, offset: 3456)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1090, file: !14, line: 2270, baseType: !947, size: 64, align: 64, offset: 3520)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1090, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1090, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1090, file: !14, line: 2367, baseType: !1452, size: 64, align: 64, offset: 3648)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!936, !1376, !1110, !936}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1090, file: !14, line: 2383, baseType: !936, size: 32, align: 32, offset: 3712)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1090, file: !14, line: 2386, baseType: !1386, size: 32, align: 32, offset: 3744)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1090, file: !14, line: 2387, baseType: !1386, size: 32, align: 32, offset: 3776)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1090, file: !14, line: 2394, baseType: !936, size: 32, align: 32, offset: 3808)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1090, file: !14, line: 2401, baseType: !936, size: 32, align: 32, offset: 3840)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1090, file: !14, line: 2408, baseType: !936, size: 32, align: 32, offset: 3872)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1090, file: !14, line: 2415, baseType: !936, size: 32, align: 32, offset: 3904)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1090, file: !14, line: 2422, baseType: !936, size: 32, align: 32, offset: 3936)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1090, file: !14, line: 2423, baseType: !1464, size: 64, align: 64, offset: 3968)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1466, file: !14, line: 827, baseType: !936, size: 32, align: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1466, file: !14, line: 828, baseType: !936, size: 32, align: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1466, file: !14, line: 829, baseType: !936, size: 32, align: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1466, file: !14, line: 830, baseType: !1386, size: 32, align: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1090, file: !14, line: 2430, baseType: !1021, size: 64, align: 64, offset: 4032)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1090, file: !14, line: 2437, baseType: !1021, size: 64, align: 64, offset: 4096)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1090, file: !14, line: 2444, baseType: !1386, size: 32, align: 32, offset: 4160)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1090, file: !14, line: 2451, baseType: !1386, size: 32, align: 32, offset: 4192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1090, file: !14, line: 2458, baseType: !936, size: 32, align: 32, offset: 4224)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1090, file: !14, line: 2469, baseType: !936, size: 32, align: 32, offset: 4256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1090, file: !14, line: 2475, baseType: !936, size: 32, align: 32, offset: 4288)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1090, file: !14, line: 2481, baseType: !936, size: 32, align: 32, offset: 4320)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1090, file: !14, line: 2485, baseType: !936, size: 32, align: 32, offset: 4352)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1090, file: !14, line: 2489, baseType: !936, size: 32, align: 32, offset: 4384)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1090, file: !14, line: 2493, baseType: !936, size: 32, align: 32, offset: 4416)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1090, file: !14, line: 2501, baseType: !936, size: 32, align: 32, offset: 4448)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1090, file: !14, line: 2506, baseType: !936, size: 32, align: 32, offset: 4480)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1090, file: !14, line: 2510, baseType: !936, size: 32, align: 32, offset: 4512)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1090, file: !14, line: 2514, baseType: !1021, size: 64, align: 64, offset: 4544)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1090, file: !14, line: 2528, baseType: !1488, size: 64, align: 64, offset: 4608)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{null, !1376, !955, !936, !936}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1090, file: !14, line: 2534, baseType: !936, size: 32, align: 32, offset: 4672)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1090, file: !14, line: 2545, baseType: !936, size: 32, align: 32, offset: 4704)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1090, file: !14, line: 2547, baseType: !936, size: 32, align: 32, offset: 4736)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1090, file: !14, line: 2549, baseType: !936, size: 32, align: 32, offset: 4768)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1090, file: !14, line: 2551, baseType: !936, size: 32, align: 32, offset: 4800)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1090, file: !14, line: 2553, baseType: !936, size: 32, align: 32, offset: 4832)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1090, file: !14, line: 2555, baseType: !936, size: 32, align: 32, offset: 4864)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1090, file: !14, line: 2557, baseType: !936, size: 32, align: 32, offset: 4896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1090, file: !14, line: 2559, baseType: !936, size: 32, align: 32, offset: 4928)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1090, file: !14, line: 2563, baseType: !936, size: 32, align: 32, offset: 4960)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1090, file: !14, line: 2571, baseType: !1502, size: 64, align: 64, offset: 4992)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1090, file: !14, line: 2579, baseType: !1502, size: 64, align: 64, offset: 5056)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1090, file: !14, line: 2586, baseType: !936, size: 32, align: 32, offset: 5120)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1090, file: !14, line: 2615, baseType: !936, size: 32, align: 32, offset: 5152)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1090, file: !14, line: 2627, baseType: !936, size: 32, align: 32, offset: 5184)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1090, file: !14, line: 2637, baseType: !936, size: 32, align: 32, offset: 5216)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1090, file: !14, line: 2681, baseType: !936, size: 32, align: 32, offset: 5248)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1090, file: !14, line: 2709, baseType: !1021, size: 64, align: 64, offset: 5312)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1090, file: !14, line: 2716, baseType: !1511, size: 64, align: 64, offset: 5376)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1524, !1528, !1532, !1533, !1534, !1535, !1541, !1542, !1543, !1544, !1545}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1513, file: !14, line: 3642, baseType: !968, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1513, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1513, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1513, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1513, file: !14, line: 3669, baseType: !936, size: 32, align: 32, offset: 160)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1513, file: !14, line: 3682, baseType: !1521, size: 64, align: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!936, !1088, !1110}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1513, file: !14, line: 3698, baseType: !1525, size: 64, align: 64, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!936, !1088, !938, !954}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1513, file: !14, line: 3712, baseType: !1529, size: 64, align: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!936, !1088, !936, !938, !954}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1513, file: !14, line: 3726, baseType: !1525, size: 64, align: 64, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1513, file: !14, line: 3737, baseType: !1085, size: 64, align: 64, offset: 448)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1513, file: !14, line: 3746, baseType: !936, size: 32, align: 32, offset: 512)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1513, file: !14, line: 3757, baseType: !1536, size: 64, align: 64, offset: 576)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64, align: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{null, !1539}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1513, file: !14, line: 3766, baseType: !1085, size: 64, align: 64, offset: 640)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1513, file: !14, line: 3774, baseType: !1085, size: 64, align: 64, offset: 704)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1513, file: !14, line: 3780, baseType: !936, size: 32, align: 32, offset: 768)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1513, file: !14, line: 3785, baseType: !936, size: 32, align: 32, offset: 800)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1513, file: !14, line: 3795, baseType: !1546, size: 64, align: 64, offset: 832)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!936, !1088, !1148}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1090, file: !14, line: 2728, baseType: !955, size: 64, align: 64, offset: 5440)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1090, file: !14, line: 2735, baseType: !1138, size: 512, align: 64, offset: 5504)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1090, file: !14, line: 2742, baseType: !936, size: 32, align: 32, offset: 6016)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1090, file: !14, line: 2755, baseType: !936, size: 32, align: 32, offset: 6048)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1090, file: !14, line: 2776, baseType: !936, size: 32, align: 32, offset: 6080)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1090, file: !14, line: 2783, baseType: !936, size: 32, align: 32, offset: 6112)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1090, file: !14, line: 2791, baseType: !936, size: 32, align: 32, offset: 6144)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1090, file: !14, line: 2802, baseType: !1110, size: 64, align: 64, offset: 6208)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1090, file: !14, line: 2811, baseType: !936, size: 32, align: 32, offset: 6272)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1090, file: !14, line: 2821, baseType: !936, size: 32, align: 32, offset: 6304)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1090, file: !14, line: 2830, baseType: !936, size: 32, align: 32, offset: 6336)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1090, file: !14, line: 2840, baseType: !936, size: 32, align: 32, offset: 6368)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1090, file: !14, line: 2851, baseType: !1562, size: 64, align: 64, offset: 6400)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!936, !1376, !1565, !955, !1379, !936, !936}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64, align: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!936, !1376, !955}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1090, file: !14, line: 2871, baseType: !1569, size: 64, align: 64, offset: 6464)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!936, !1376, !1572, !955, !1379, !936}
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!936, !1376, !955, !936, !936}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1090, file: !14, line: 2878, baseType: !936, size: 32, align: 32, offset: 6528)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1090, file: !14, line: 2885, baseType: !936, size: 32, align: 32, offset: 6560)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1090, file: !14, line: 3005, baseType: !936, size: 32, align: 32, offset: 6592)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1090, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1090, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1090, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1090, file: !14, line: 3037, baseType: !1116, size: 64, align: 64, offset: 6720)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1090, file: !14, line: 3038, baseType: !936, size: 32, align: 32, offset: 6784)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1090, file: !14, line: 3050, baseType: !947, size: 64, align: 64, offset: 6848)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1090, file: !14, line: 3065, baseType: !936, size: 32, align: 32, offset: 6912)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1090, file: !14, line: 3083, baseType: !936, size: 32, align: 32, offset: 6944)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1090, file: !14, line: 3092, baseType: !978, size: 64, align: 32, offset: 6976)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1090, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1090, file: !14, line: 3106, baseType: !978, size: 64, align: 32, offset: 7072)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1090, file: !14, line: 3113, baseType: !1590, size: 64, align: 64, offset: 7168)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1603}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1593, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1593, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1593, file: !14, line: 720, baseType: !968, size: 64, align: 64, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1593, file: !14, line: 724, baseType: !968, size: 64, align: 64, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1593, file: !14, line: 728, baseType: !936, size: 32, align: 32, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1593, file: !14, line: 734, baseType: !1601, size: 64, align: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1593, file: !14, line: 739, baseType: !1604, size: 64, align: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1090, file: !14, line: 3129, baseType: !1021, size: 64, align: 64, offset: 7232)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1090, file: !14, line: 3130, baseType: !1021, size: 64, align: 64, offset: 7296)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1090, file: !14, line: 3131, baseType: !1021, size: 64, align: 64, offset: 7360)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1090, file: !14, line: 3132, baseType: !1021, size: 64, align: 64, offset: 7424)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1090, file: !14, line: 3139, baseType: !1502, size: 64, align: 64, offset: 7488)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1090, file: !14, line: 3147, baseType: !936, size: 32, align: 32, offset: 7552)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1090, file: !14, line: 3165, baseType: !936, size: 32, align: 32, offset: 7584)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1090, file: !14, line: 3172, baseType: !936, size: 32, align: 32, offset: 7616)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1090, file: !14, line: 3180, baseType: !936, size: 32, align: 32, offset: 7648)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1090, file: !14, line: 3191, baseType: !1416, size: 64, align: 64, offset: 7680)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1090, file: !14, line: 3199, baseType: !1116, size: 64, align: 64, offset: 7744)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1090, file: !14, line: 3207, baseType: !1502, size: 64, align: 64, offset: 7808)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1090, file: !14, line: 3214, baseType: !937, size: 32, align: 32, offset: 7872)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1090, file: !14, line: 3224, baseType: !1245, size: 64, align: 64, offset: 7936)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1090, file: !14, line: 3225, baseType: !936, size: 32, align: 32, offset: 8000)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1090, file: !14, line: 3249, baseType: !1148, size: 64, align: 64, offset: 8064)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1090, file: !14, line: 3256, baseType: !936, size: 32, align: 32, offset: 8128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1090, file: !14, line: 3271, baseType: !936, size: 32, align: 32, offset: 8160)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1090, file: !14, line: 3279, baseType: !1021, size: 64, align: 64, offset: 8192)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1090, file: !14, line: 3301, baseType: !1148, size: 64, align: 64, offset: 8256)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1090, file: !14, line: 3310, baseType: !936, size: 32, align: 32, offset: 8320)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1090, file: !14, line: 3337, baseType: !936, size: 32, align: 32, offset: 8352)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1090, file: !14, line: 3351, baseType: !936, size: 32, align: 32, offset: 8384)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1090, file: !14, line: 3359, baseType: !936, size: 32, align: 32, offset: 8416)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !965, file: !14, line: 3535, baseType: !1631, size: 64, align: 64, offset: 1024)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64, align: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!936, !1088, !1634}
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !965, file: !14, line: 3541, baseType: !1637, size: 64, align: 64, offset: 1088)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1104, line: 223, size: 128, align: 64, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1640, file: !1104, line: 224, baseType: !938, size: 64, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1640, file: !1104, line: 225, baseType: !938, size: 64, align: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !965, file: !14, line: 3549, baseType: !1645, size: 64, align: 64, offset: 1152)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{null, !1083}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !965, file: !14, line: 3551, baseType: !1085, size: 64, align: 64, offset: 1216)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !965, file: !14, line: 3552, baseType: !1650, size: 64, align: 64, offset: 1280)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!936, !1088, !1116, !936, !1653}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1685}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1655, file: !14, line: 3921, baseType: !945, size: 16, align: 16)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1655, file: !14, line: 3922, baseType: !954, size: 32, align: 32, offset: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1655, file: !14, line: 3923, baseType: !954, size: 32, align: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1655, file: !14, line: 3924, baseType: !937, size: 32, align: 32, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1655, file: !14, line: 3925, baseType: !1662, size: 64, align: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64, align: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1678, !1680, !1681, !1682, !1683, !1684}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1665, file: !14, line: 3886, baseType: !936, size: 32, align: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1665, file: !14, line: 3887, baseType: !936, size: 32, align: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1665, file: !14, line: 3888, baseType: !936, size: 32, align: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1665, file: !14, line: 3889, baseType: !936, size: 32, align: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1665, file: !14, line: 3890, baseType: !936, size: 32, align: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1665, file: !14, line: 3897, baseType: !1673, size: 768, align: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1674, file: !14, line: 3855, baseType: !1115, size: 512, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1674, file: !14, line: 3857, baseType: !1120, size: 256, align: 32, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1665, file: !14, line: 3903, baseType: !1679, size: 256, align: 64, offset: 960)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 256, align: 64, elements: !1217)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1665, file: !14, line: 3904, baseType: !1223, size: 128, align: 32, offset: 1216)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1665, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1665, file: !14, line: 3908, baseType: !1502, size: 64, align: 64, offset: 1408)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1665, file: !14, line: 3915, baseType: !1502, size: 64, align: 64, offset: 1472)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1665, file: !14, line: 3917, baseType: !936, size: 32, align: 32, offset: 1536)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1655, file: !14, line: 3926, baseType: !1021, size: 64, align: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !965, file: !14, line: 3564, baseType: !1687, size: 64, align: 64, offset: 1344)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!936, !1088, !1233, !1377, !1379}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !965, file: !14, line: 3566, baseType: !1691, size: 64, align: 64, offset: 1408)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!936, !1088, !955, !1379, !1233}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !965, file: !14, line: 3567, baseType: !1085, size: 64, align: 64, offset: 1472)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !965, file: !14, line: 3576, baseType: !1696, size: 64, align: 64, offset: 1536)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!936, !1088, !1377}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !965, file: !14, line: 3577, baseType: !1700, size: 64, align: 64, offset: 1600)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!936, !1088, !1233}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !965, file: !14, line: 3584, baseType: !1521, size: 64, align: 64, offset: 1664)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !965, file: !14, line: 3589, baseType: !1705, size: 64, align: 64, offset: 1728)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !1088}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !965, file: !14, line: 3594, baseType: !936, size: 32, align: 32, offset: 1792)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !965, file: !14, line: 3600, baseType: !968, size: 64, align: 64, offset: 1856)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !965, file: !14, line: 3609, baseType: !1711, size: 64, align: 64, offset: 1920)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1715 = distinct !DIGlobalVariable(name: "allowed_pix_fmts", scope: !0, file: !910, line: 1221, type: !1716, isLocal: true, isDefinition: true, variable: [10 x i32]* @allowed_pix_fmts)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 320, align: 32, elements: !1717)
!1717 = !{!1718}
!1718 = !DISubrange(count: 10)
!1719 = distinct !DIGlobalVariable(name: "vc2enc_class", scope: !0, file: !910, line: 1208, type: !999, isLocal: true, isDefinition: true, variable: %struct.AVClass* @vc2enc_class)
!1720 = distinct !DIGlobalVariable(name: "vc2enc_options", scope: !0, file: !910, line: 1191, type: !1721, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @vc2enc_options)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 7168, align: 64, elements: !1724)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1011)
!1724 = !{!1725}
!1725 = !DISubrange(count: 14)
!1726 = distinct !DIGlobalVariable(name: "vc2enc_defaults", scope: !0, file: !910, line: 1216, type: !1727, isLocal: true, isDefinition: true, variable: [2 x %struct.AVCodecDefault]* @vc2enc_defaults)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1638, size: 256, align: 64, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 2)
!1730 = distinct !DIGlobalVariable(name: "base_video_fmts_len", scope: !0, file: !910, line: 76, type: !989, isLocal: true, isDefinition: true, variable: i32 23)
!1731 = distinct !DIGlobalVariable(name: "base_video_fmts", scope: !0, file: !910, line: 45, type: !1732, isLocal: true, isDefinition: true, variable: [23 x %struct.VC2BaseVideoFormat]* @base_video_fmts)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 7360, align: 64, elements: !1744)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "VC2BaseVideoFormat", file: !910, line: 43, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VC2BaseVideoFormat", file: !910, line: 38, size: 320, align: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1735, file: !910, line: 39, baseType: !473, size: 32, align: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1735, file: !910, line: 40, baseType: !978, size: 64, align: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1735, file: !910, line: 41, baseType: !936, size: 32, align: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1735, file: !910, line: 41, baseType: !936, size: 32, align: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !1735, file: !910, line: 41, baseType: !936, size: 32, align: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1735, file: !910, line: 41, baseType: !936, size: 32, align: 32, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1735, file: !910, line: 42, baseType: !968, size: 64, align: 64, offset: 256)
!1744 = !{!1745}
!1745 = !DISubrange(count: 23)
!1746 = !{i32 2, !"Dwarf Version", i32 4}
!1747 = !{i32 2, !"Debug Info Version", i32 3}
!1748 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1749 = distinct !DISubprogram(name: "vc2_encode_init", scope: !910, file: !910, line: 1019, type: !1086, isLocal: true, isDefinition: true, scopeLine: 1020, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!1750 = !{}
!1751 = !DILocalVariable(name: "avctx", arg: 1, scope: !1749, file: !910, line: 1019, type: !1088)
!1752 = !DIExpression()
!1753 = !DILocation(line: 1019, column: 66, scope: !1749)
!1754 = !DILocalVariable(name: "p", scope: !1749, file: !910, line: 1021, type: !1755)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "Plane", file: !910, line: 101, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Plane", file: !910, line: 93, size: 4096, align: 64, elements: !1758)
!1758 = !{!1759, !1773, !1774, !1775, !1776, !1777, !1778}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "band", scope: !1757, file: !910, line: 94, baseType: !1760, size: 3840, align: 64)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 3840, align: 64, elements: !959)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubBand", file: !910, line: 91, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SubBand", file: !910, line: 86, size: 192, align: 64, elements: !1763)
!1763 = !{!1764, !1769, !1771, !1772}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1762, file: !910, line: 87, baseType: !1765, size: 64, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64, align: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "dwtcoef", file: !1767, line: 28, baseType: !1768)
!1767 = !DIFile(filename: "libavcodec/vc2enc_dwt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !941, line: 38, baseType: !936)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1762, file: !910, line: 88, baseType: !1770, size: 64, align: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1202, line: 149, baseType: !1022)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1762, file: !910, line: 89, baseType: !936, size: 32, align: 32, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1762, file: !910, line: 90, baseType: !936, size: 32, align: 32, offset: 160)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "coef_buf", scope: !1757, file: !910, line: 95, baseType: !1765, size: 64, align: 64, offset: 3840)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1757, file: !910, line: 96, baseType: !936, size: 32, align: 32, offset: 3904)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1757, file: !910, line: 97, baseType: !936, size: 32, align: 32, offset: 3936)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dwt_width", scope: !1757, file: !910, line: 98, baseType: !936, size: 32, align: 32, offset: 3968)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dwt_height", scope: !1757, file: !910, line: 99, baseType: !936, size: 32, align: 32, offset: 4000)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "coef_stride", scope: !1757, file: !910, line: 100, baseType: !1770, size: 64, align: 64, offset: 4032)
!1779 = !DILocation(line: 1021, column: 12, scope: !1749)
!1780 = !DILocalVariable(name: "b", scope: !1749, file: !910, line: 1022, type: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64, align: 64)
!1782 = !DILocation(line: 1022, column: 14, scope: !1749)
!1783 = !DILocalVariable(name: "i", scope: !1749, file: !910, line: 1023, type: !936)
!1784 = !DILocation(line: 1023, column: 9, scope: !1749)
!1785 = !DILocalVariable(name: "level", scope: !1749, file: !910, line: 1023, type: !936)
!1786 = !DILocation(line: 1023, column: 12, scope: !1749)
!1787 = !DILocalVariable(name: "o", scope: !1749, file: !910, line: 1023, type: !936)
!1788 = !DILocation(line: 1023, column: 19, scope: !1749)
!1789 = !DILocalVariable(name: "shift", scope: !1749, file: !910, line: 1023, type: !936)
!1790 = !DILocation(line: 1023, column: 22, scope: !1749)
!1791 = !DILocalVariable(name: "ret", scope: !1749, file: !910, line: 1023, type: !936)
!1792 = !DILocation(line: 1023, column: 29, scope: !1749)
!1793 = !DILocalVariable(name: "fmt", scope: !1749, file: !910, line: 1024, type: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !1797, line: 123, baseType: !1798)
!1797 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !1797, line: 81, size: 1280, align: 64, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803, !1804, !1805, !1818}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1798, file: !1797, line: 82, baseType: !968, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1798, file: !1797, line: 83, baseType: !940, size: 8, align: 8, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !1798, file: !1797, line: 92, baseType: !940, size: 8, align: 8, offset: 72)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !1798, file: !1797, line: 101, baseType: !940, size: 8, align: 8, offset: 80)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1798, file: !1797, line: 106, baseType: !947, size: 64, align: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1798, file: !1797, line: 117, baseType: !1806, size: 1024, align: 32, offset: 192)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 1024, align: 32, elements: !1217)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !1797, line: 70, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !1797, line: 31, size: 256, align: 32, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1808, file: !1797, line: 35, baseType: !936, size: 32, align: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1808, file: !1797, line: 41, baseType: !936, size: 32, align: 32, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1808, file: !1797, line: 47, baseType: !936, size: 32, align: 32, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1808, file: !1797, line: 53, baseType: !936, size: 32, align: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1808, file: !1797, line: 58, baseType: !936, size: 32, align: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !1808, file: !1797, line: 62, baseType: !936, size: 32, align: 32, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !1808, file: !1797, line: 65, baseType: !936, size: 32, align: 32, offset: 192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !1808, file: !1797, line: 68, baseType: !936, size: 32, align: 32, offset: 224)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1798, file: !1797, line: 122, baseType: !968, size: 64, align: 64, offset: 1216)
!1819 = !DILocation(line: 1024, column: 31, scope: !1749)
!1820 = !DILocation(line: 1024, column: 57, scope: !1749)
!1821 = !DILocation(line: 1024, column: 64, scope: !1749)
!1822 = !DILocation(line: 1024, column: 37, scope: !1749)
!1823 = !DILocalVariable(name: "depth", scope: !1749, file: !910, line: 1025, type: !989)
!1824 = !DILocation(line: 1025, column: 15, scope: !1749)
!1825 = !DILocation(line: 1025, column: 23, scope: !1749)
!1826 = !DILocation(line: 1025, column: 28, scope: !1749)
!1827 = !DILocation(line: 1025, column: 36, scope: !1749)
!1828 = !DILocalVariable(name: "s", scope: !1749, file: !910, line: 1026, type: !1829)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64, align: 64)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "VC2EncContext", file: !910, line: 181, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VC2EncContext", file: !910, line: 124, size: 24128, align: 64, elements: !1832)
!1832 = !{!1833, !1835, !1846, !1850, !1851, !1857, !1874, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1907, !1908, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1831, file: !910, line: 125, baseType: !1834, size: 64, align: 64)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1831, file: !910, line: 126, baseType: !1836, size: 320, align: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1837, line: 40, baseType: !1838)
!1837 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1837, line: 35, size: 320, align: 64, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1838, file: !1837, line: 36, baseType: !954, size: 32, align: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1838, file: !1837, line: 37, baseType: !936, size: 32, align: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1838, file: !1837, line: 38, baseType: !1116, size: 64, align: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1838, file: !1837, line: 38, baseType: !1116, size: 64, align: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1838, file: !1837, line: 38, baseType: !1116, size: 64, align: 64, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1838, file: !1837, line: 39, baseType: !936, size: 32, align: 32, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1831, file: !910, line: 127, baseType: !1847, size: 12288, align: 64, offset: 384)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1756, size: 12288, align: 64, elements: !1848)
!1848 = !{!1849}
!1849 = !DISubrange(count: 3)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1831, file: !910, line: 128, baseType: !1088, size: 64, align: 64, offset: 12672)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !1831, file: !910, line: 129, baseType: !1852, size: 64, align: 32, offset: 12736)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracVersionInfo", file: !917, line: 79, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DiracVersionInfo", file: !917, line: 76, size: 64, align: 32, elements: !1854)
!1854 = !{!1855, !1856}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1853, file: !917, line: 77, baseType: !936, size: 32, align: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1853, file: !917, line: 78, baseType: !936, size: 32, align: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "slice_args", scope: !1831, file: !910, line: 131, baseType: !1858, size: 64, align: 64, offset: 12800)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64, align: 64)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "SliceArgs", file: !910, line: 113, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SliceArgs", file: !910, line: 103, size: 4288, align: 64, elements: !1861)
!1861 = !{!1862, !1863, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1860, file: !910, line: 104, baseType: !1836, size: 320, align: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1860, file: !910, line: 105, baseType: !1864, size: 3712, align: 32, offset: 320)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 3712, align: 32, elements: !1865)
!1865 = !{!1866}
!1866 = !DISubrange(count: 116)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1860, file: !910, line: 106, baseType: !955, size: 64, align: 64, offset: 4032)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1860, file: !910, line: 107, baseType: !936, size: 32, align: 32, offset: 4096)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1860, file: !910, line: 108, baseType: !936, size: 32, align: 32, offset: 4128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "quant_idx", scope: !1860, file: !910, line: 109, baseType: !936, size: 32, align: 32, offset: 4160)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "bits_ceil", scope: !1860, file: !910, line: 110, baseType: !936, size: 32, align: 32, offset: 4192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "bits_floor", scope: !1860, file: !910, line: 111, baseType: !936, size: 32, align: 32, offset: 4224)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1860, file: !910, line: 112, baseType: !936, size: 32, align: 32, offset: 4256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "transform_args", scope: !1831, file: !910, line: 132, baseType: !1875, size: 2688, align: 64, offset: 12864)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 2688, align: 64, elements: !1848)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransformArgs", file: !910, line: 122, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransformArgs", file: !910, line: 115, size: 896, align: 64, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1877, file: !910, line: 116, baseType: !955, size: 64, align: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1877, file: !910, line: 117, baseType: !1755, size: 64, align: 64, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "idata", scope: !1877, file: !910, line: 118, baseType: !955, size: 64, align: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "istride", scope: !1877, file: !910, line: 119, baseType: !1770, size: 64, align: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !1877, file: !910, line: 120, baseType: !936, size: 32, align: 32, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1877, file: !910, line: 121, baseType: !1885, size: 576, align: 64, offset: 320)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "VC2TransformContext", file: !1767, line: 48, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VC2TransformContext", file: !1767, line: 42, size: 576, align: 64, elements: !1887)
!1887 = !{!1888, !1889, !1890}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1886, file: !1767, line: 43, baseType: !1765, size: 64, align: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1886, file: !1767, line: 44, baseType: !936, size: 32, align: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "vc2_subband_dwt", scope: !1886, file: !1767, line: 45, baseType: !1891, size: 448, align: 64, offset: 128)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 448, align: 64, elements: !1896)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64, align: 64)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null, !1895, !1765, !1770, !936, !936}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!1896 = !{!1897}
!1897 = !DISubrange(count: 7)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "diff_offset", scope: !1831, file: !910, line: 135, baseType: !936, size: 32, align: 32, offset: 15552)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !1831, file: !910, line: 136, baseType: !936, size: 32, align: 32, offset: 15584)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "bpp_idx", scope: !1831, file: !910, line: 137, baseType: !936, size: 32, align: 32, offset: 15616)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !1831, file: !910, line: 140, baseType: !954, size: 32, align: 32, offset: 15648)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "base_vf", scope: !1831, file: !910, line: 143, baseType: !936, size: 32, align: 32, offset: 15680)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1831, file: !910, line: 144, baseType: !936, size: 32, align: 32, offset: 15712)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1831, file: !910, line: 145, baseType: !936, size: 32, align: 32, offset: 15744)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !1831, file: !910, line: 148, baseType: !1906, size: 160, align: 8, offset: 15776)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 160, align: 8, elements: !959)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "custom_quant_matrix", scope: !1831, file: !910, line: 149, baseType: !936, size: 32, align: 32, offset: 15936)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "qmagic_lut", scope: !1831, file: !910, line: 152, baseType: !1909, size: 7424, align: 32, offset: 15968)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 7424, align: 32, elements: !1910)
!1910 = !{!1866, !1729}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "num_x", scope: !1831, file: !910, line: 154, baseType: !936, size: 32, align: 32, offset: 23392)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "num_y", scope: !1831, file: !910, line: 155, baseType: !936, size: 32, align: 32, offset: 23424)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_bytes", scope: !1831, file: !910, line: 156, baseType: !936, size: 32, align: 32, offset: 23456)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "size_scaler", scope: !1831, file: !910, line: 157, baseType: !936, size: 32, align: 32, offset: 23488)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !1831, file: !910, line: 158, baseType: !936, size: 32, align: 32, offset: 23520)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !1831, file: !910, line: 159, baseType: !936, size: 32, align: 32, offset: 23552)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "frame_max_bytes", scope: !1831, file: !910, line: 162, baseType: !936, size: 32, align: 32, offset: 23584)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "slice_max_bytes", scope: !1831, file: !910, line: 163, baseType: !936, size: 32, align: 32, offset: 23616)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "slice_min_bytes", scope: !1831, file: !910, line: 164, baseType: !936, size: 32, align: 32, offset: 23648)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "q_ceil", scope: !1831, file: !910, line: 165, baseType: !936, size: 32, align: 32, offset: 23680)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "q_avg", scope: !1831, file: !910, line: 166, baseType: !936, size: 32, align: 32, offset: 23712)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tolerance", scope: !1831, file: !910, line: 169, baseType: !1024, size: 64, align: 64, offset: 23744)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "wavelet_idx", scope: !1831, file: !910, line: 170, baseType: !936, size: 32, align: 32, offset: 23808)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "wavelet_depth", scope: !1831, file: !910, line: 171, baseType: !936, size: 32, align: 32, offset: 23840)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "strict_compliance", scope: !1831, file: !910, line: 172, baseType: !936, size: 32, align: 32, offset: 23872)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1831, file: !910, line: 173, baseType: !936, size: 32, align: 32, offset: 23904)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "slice_width", scope: !1831, file: !910, line: 174, baseType: !936, size: 32, align: 32, offset: 23936)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !1831, file: !910, line: 175, baseType: !936, size: 32, align: 32, offset: 23968)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "quant_matrix", scope: !1831, file: !910, line: 176, baseType: !909, size: 32, align: 32, offset: 24000)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "next_parse_offset", scope: !1831, file: !910, line: 179, baseType: !954, size: 32, align: 32, offset: 24032)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "last_parse_code", scope: !1831, file: !910, line: 180, baseType: !916, size: 32, align: 32, offset: 24064)
!1932 = !DILocation(line: 1026, column: 20, scope: !1749)
!1933 = !DILocation(line: 1026, column: 24, scope: !1749)
!1934 = !DILocation(line: 1026, column: 31, scope: !1749)
!1935 = !DILocation(line: 1028, column: 5, scope: !1749)
!1936 = !DILocation(line: 1028, column: 8, scope: !1749)
!1937 = !DILocation(line: 1028, column: 23, scope: !1749)
!1938 = !DILocation(line: 1031, column: 5, scope: !1749)
!1939 = !DILocation(line: 1031, column: 8, scope: !1749)
!1940 = !DILocation(line: 1031, column: 15, scope: !1749)
!1941 = !DILocation(line: 1033, column: 5, scope: !1749)
!1942 = !DILocation(line: 1033, column: 8, scope: !1749)
!1943 = !DILocation(line: 1033, column: 12, scope: !1749)
!1944 = !DILocation(line: 1033, column: 18, scope: !1749)
!1945 = !DILocation(line: 1034, column: 5, scope: !1749)
!1946 = !DILocation(line: 1034, column: 8, scope: !1749)
!1947 = !DILocation(line: 1034, column: 12, scope: !1749)
!1948 = !DILocation(line: 1034, column: 18, scope: !1749)
!1949 = !DILocation(line: 1035, column: 5, scope: !1749)
!1950 = !DILocation(line: 1035, column: 8, scope: !1749)
!1951 = !DILocation(line: 1035, column: 16, scope: !1749)
!1952 = !DILocation(line: 1036, column: 5, scope: !1749)
!1953 = !DILocation(line: 1036, column: 8, scope: !1749)
!1954 = !DILocation(line: 1036, column: 14, scope: !1749)
!1955 = !DILocation(line: 1038, column: 5, scope: !1749)
!1956 = !DILocation(line: 1038, column: 8, scope: !1749)
!1957 = !DILocation(line: 1038, column: 16, scope: !1749)
!1958 = !DILocation(line: 1039, column: 5, scope: !1749)
!1959 = !DILocation(line: 1039, column: 8, scope: !1749)
!1960 = !DILocation(line: 1039, column: 26, scope: !1749)
!1961 = !DILocation(line: 1041, column: 5, scope: !1749)
!1962 = !DILocation(line: 1041, column: 8, scope: !1749)
!1963 = !DILocation(line: 1041, column: 14, scope: !1749)
!1964 = !DILocation(line: 1042, column: 5, scope: !1749)
!1965 = !DILocation(line: 1042, column: 8, scope: !1749)
!1966 = !DILocation(line: 1042, column: 24, scope: !1749)
!1967 = !DILocation(line: 1043, column: 5, scope: !1749)
!1968 = !DILocation(line: 1043, column: 8, scope: !1749)
!1969 = !DILocation(line: 1043, column: 24, scope: !1749)
!1970 = !DILocation(line: 1046, column: 24, scope: !1749)
!1971 = !DILocation(line: 1046, column: 31, scope: !1749)
!1972 = !DILocation(line: 1046, column: 43, scope: !1749)
!1973 = !DILocation(line: 1046, column: 64, scope: !1749)
!1974 = !DILocation(line: 1047, column: 24, scope: !1749)
!1975 = !DILocation(line: 1047, column: 31, scope: !1749)
!1976 = !DILocation(line: 1047, column: 43, scope: !1749)
!1977 = !DILocation(line: 1046, column: 64, scope: !1978)
!1978 = !DILexicalBlockFile(scope: !1749, file: !910, discriminator: 1)
!1979 = !DILocation(line: 1046, column: 21, scope: !1980)
!1980 = !DILexicalBlockFile(scope: !1749, file: !910, discriminator: 2)
!1981 = !DILocation(line: 1046, column: 5, scope: !1980)
!1982 = !DILocation(line: 1046, column: 8, scope: !1980)
!1983 = !DILocation(line: 1046, column: 19, scope: !1980)
!1984 = !DILocation(line: 1049, column: 12, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1049, column: 5)
!1986 = !DILocation(line: 1049, column: 10, scope: !1985)
!1987 = !DILocation(line: 1049, column: 17, scope: !1988)
!1988 = !DILexicalBlockFile(scope: !1989, file: !910, discriminator: 1)
!1989 = distinct !DILexicalBlock(scope: !1985, file: !910, line: 1049, column: 5)
!1990 = !DILocation(line: 1049, column: 19, scope: !1988)
!1991 = !DILocation(line: 1049, column: 5, scope: !1988)
!1992 = !DILocalVariable(name: "fmt", scope: !1993, file: !910, line: 1050, type: !1994)
!1993 = distinct !DILexicalBlock(scope: !1989, file: !910, line: 1049, column: 47)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1995 = !DILocation(line: 1050, column: 35, scope: !1993)
!1996 = !DILocation(line: 1050, column: 58, scope: !1993)
!1997 = !DILocation(line: 1050, column: 42, scope: !1993)
!1998 = !DILocation(line: 1051, column: 13, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1051, column: 13)
!2000 = !DILocation(line: 1051, column: 20, scope: !1999)
!2001 = !DILocation(line: 1051, column: 31, scope: !1999)
!2002 = !DILocation(line: 1051, column: 36, scope: !1999)
!2003 = !DILocation(line: 1051, column: 28, scope: !1999)
!2004 = !DILocation(line: 1051, column: 13, scope: !1993)
!2005 = !DILocation(line: 1052, column: 13, scope: !1999)
!2006 = !DILocation(line: 1053, column: 13, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1053, column: 13)
!2008 = !DILocation(line: 1053, column: 20, scope: !2007)
!2009 = !DILocation(line: 1053, column: 30, scope: !2007)
!2010 = !DILocation(line: 1053, column: 37, scope: !2007)
!2011 = !DILocation(line: 1053, column: 42, scope: !2007)
!2012 = !DILocation(line: 1053, column: 52, scope: !2007)
!2013 = !DILocation(line: 1053, column: 34, scope: !2007)
!2014 = !DILocation(line: 1053, column: 13, scope: !1993)
!2015 = !DILocation(line: 1054, column: 13, scope: !2007)
!2016 = !DILocation(line: 1055, column: 13, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1055, column: 13)
!2018 = !DILocation(line: 1055, column: 20, scope: !2017)
!2019 = !DILocation(line: 1055, column: 30, scope: !2017)
!2020 = !DILocation(line: 1055, column: 37, scope: !2017)
!2021 = !DILocation(line: 1055, column: 42, scope: !2017)
!2022 = !DILocation(line: 1055, column: 52, scope: !2017)
!2023 = !DILocation(line: 1055, column: 34, scope: !2017)
!2024 = !DILocation(line: 1055, column: 13, scope: !1993)
!2025 = !DILocation(line: 1056, column: 13, scope: !2017)
!2026 = !DILocation(line: 1057, column: 13, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1057, column: 13)
!2028 = !DILocation(line: 1057, column: 20, scope: !2027)
!2029 = !DILocation(line: 1057, column: 29, scope: !2027)
!2030 = !DILocation(line: 1057, column: 34, scope: !2027)
!2031 = !DILocation(line: 1057, column: 26, scope: !2027)
!2032 = !DILocation(line: 1057, column: 13, scope: !1993)
!2033 = !DILocation(line: 1058, column: 13, scope: !2027)
!2034 = !DILocation(line: 1059, column: 13, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1059, column: 13)
!2036 = !DILocation(line: 1059, column: 20, scope: !2035)
!2037 = !DILocation(line: 1059, column: 30, scope: !2035)
!2038 = !DILocation(line: 1059, column: 35, scope: !2035)
!2039 = !DILocation(line: 1059, column: 27, scope: !2035)
!2040 = !DILocation(line: 1059, column: 13, scope: !1993)
!2041 = !DILocation(line: 1060, column: 13, scope: !2035)
!2042 = !DILocation(line: 1061, column: 13, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1993, file: !910, line: 1061, column: 13)
!2044 = !DILocation(line: 1061, column: 16, scope: !2043)
!2045 = !DILocation(line: 1061, column: 30, scope: !2043)
!2046 = !DILocation(line: 1061, column: 35, scope: !2043)
!2047 = !DILocation(line: 1061, column: 27, scope: !2043)
!2048 = !DILocation(line: 1061, column: 13, scope: !1993)
!2049 = !DILocation(line: 1062, column: 13, scope: !2043)
!2050 = !DILocation(line: 1063, column: 22, scope: !1993)
!2051 = !DILocation(line: 1063, column: 9, scope: !1993)
!2052 = !DILocation(line: 1063, column: 12, scope: !1993)
!2053 = !DILocation(line: 1063, column: 20, scope: !1993)
!2054 = !DILocation(line: 1064, column: 36, scope: !1993)
!2055 = !DILocation(line: 1064, column: 20, scope: !1993)
!2056 = !DILocation(line: 1064, column: 39, scope: !1993)
!2057 = !DILocation(line: 1064, column: 9, scope: !1993)
!2058 = !DILocation(line: 1064, column: 12, scope: !1993)
!2059 = !DILocation(line: 1064, column: 18, scope: !1993)
!2060 = !DILocation(line: 1065, column: 9, scope: !1993)
!2061 = !DILocation(line: 1049, column: 43, scope: !2062)
!2062 = !DILexicalBlockFile(scope: !1989, file: !910, discriminator: 2)
!2063 = !DILocation(line: 1049, column: 5, scope: !2062)
!2064 = distinct !{!2064, !2065}
!2065 = !DILocation(line: 1049, column: 5, scope: !1749)
!2066 = !DILocation(line: 1068, column: 9, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1068, column: 9)
!2068 = !DILocation(line: 1068, column: 12, scope: !2067)
!2069 = !DILocation(line: 1068, column: 9, scope: !1749)
!2070 = !DILocation(line: 1069, column: 16, scope: !2067)
!2071 = !DILocation(line: 1069, column: 9, scope: !2067)
!2072 = !DILocation(line: 1071, column: 10, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1071, column: 9)
!2074 = !DILocation(line: 1071, column: 13, scope: !2073)
!2075 = !DILocation(line: 1071, column: 28, scope: !2073)
!2076 = !DILocation(line: 1071, column: 31, scope: !2073)
!2077 = !DILocation(line: 1071, column: 43, scope: !2073)
!2078 = !DILocation(line: 1071, column: 25, scope: !2073)
!2079 = !DILocation(line: 1071, column: 49, scope: !2073)
!2080 = !DILocation(line: 1072, column: 10, scope: !2073)
!2081 = !DILocation(line: 1072, column: 13, scope: !2073)
!2082 = !DILocation(line: 1072, column: 29, scope: !2073)
!2083 = !DILocation(line: 1072, column: 32, scope: !2073)
!2084 = !DILocation(line: 1072, column: 45, scope: !2073)
!2085 = !DILocation(line: 1072, column: 26, scope: !2073)
!2086 = !DILocation(line: 1071, column: 9, scope: !1978)
!2087 = !DILocation(line: 1073, column: 16, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2073, file: !910, line: 1072, column: 52)
!2089 = !DILocation(line: 1073, column: 9, scope: !2088)
!2090 = !DILocation(line: 1074, column: 9, scope: !2088)
!2091 = !DILocation(line: 1077, column: 10, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1077, column: 9)
!2093 = !DILocation(line: 1077, column: 13, scope: !2092)
!2094 = !DILocation(line: 1077, column: 27, scope: !2092)
!2095 = !DILocation(line: 1077, column: 34, scope: !2092)
!2096 = !DILocation(line: 1077, column: 25, scope: !2092)
!2097 = !DILocation(line: 1077, column: 41, scope: !2092)
!2098 = !DILocation(line: 1078, column: 10, scope: !2092)
!2099 = !DILocation(line: 1078, column: 13, scope: !2092)
!2100 = !DILocation(line: 1078, column: 28, scope: !2092)
!2101 = !DILocation(line: 1078, column: 35, scope: !2092)
!2102 = !DILocation(line: 1078, column: 26, scope: !2092)
!2103 = !DILocation(line: 1077, column: 9, scope: !1978)
!2104 = !DILocation(line: 1079, column: 16, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2092, file: !910, line: 1078, column: 44)
!2106 = !DILocation(line: 1079, column: 9, scope: !2105)
!2107 = !DILocation(line: 1080, column: 9, scope: !2105)
!2108 = !DILocation(line: 1083, column: 9, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1083, column: 9)
!2110 = !DILocation(line: 1083, column: 12, scope: !2109)
!2111 = !DILocation(line: 1083, column: 20, scope: !2109)
!2112 = !DILocation(line: 1083, column: 9, scope: !1749)
!2113 = !DILocation(line: 1084, column: 13, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !910, line: 1084, column: 13)
!2115 = distinct !DILexicalBlock(scope: !2109, file: !910, line: 1083, column: 26)
!2116 = !DILocation(line: 1084, column: 20, scope: !2114)
!2117 = !DILocation(line: 1084, column: 42, scope: !2114)
!2118 = !DILocation(line: 1084, column: 13, scope: !2115)
!2119 = !DILocation(line: 1085, column: 36, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2114, file: !910, line: 1084, column: 47)
!2121 = !DILocation(line: 1085, column: 39, scope: !2120)
!2122 = !DILocation(line: 1085, column: 47, scope: !2120)
!2123 = !DILocation(line: 1085, column: 13, scope: !2120)
!2124 = !DILocation(line: 1085, column: 16, scope: !2120)
!2125 = !DILocation(line: 1085, column: 34, scope: !2120)
!2126 = !DILocation(line: 1086, column: 20, scope: !2120)
!2127 = !DILocation(line: 1086, column: 13, scope: !2120)
!2128 = !DILocation(line: 1087, column: 9, scope: !2120)
!2129 = !DILocation(line: 1088, column: 20, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2114, file: !910, line: 1087, column: 16)
!2131 = !DILocation(line: 1088, column: 13, scope: !2130)
!2132 = !DILocation(line: 1090, column: 13, scope: !2130)
!2133 = !DILocation(line: 1092, column: 5, scope: !2115)
!2134 = !DILocation(line: 1093, column: 16, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2109, file: !910, line: 1092, column: 12)
!2136 = !DILocation(line: 1094, column: 16, scope: !2135)
!2137 = !DILocation(line: 1094, column: 19, scope: !2135)
!2138 = !DILocation(line: 1094, column: 44, scope: !2135)
!2139 = !DILocation(line: 1094, column: 47, scope: !2135)
!2140 = !DILocation(line: 1094, column: 28, scope: !2135)
!2141 = !DILocation(line: 1094, column: 56, scope: !2135)
!2142 = !DILocation(line: 1093, column: 9, scope: !2135)
!2143 = !DILocation(line: 1098, column: 44, scope: !1749)
!2144 = !DILocation(line: 1098, column: 51, scope: !1749)
!2145 = !DILocation(line: 1098, column: 61, scope: !1749)
!2146 = !DILocation(line: 1098, column: 64, scope: !1749)
!2147 = !DILocation(line: 1098, column: 81, scope: !1749)
!2148 = !DILocation(line: 1098, column: 84, scope: !1749)
!2149 = !DILocation(line: 1098, column: 11, scope: !1749)
!2150 = !DILocation(line: 1098, column: 9, scope: !1749)
!2151 = !DILocation(line: 1099, column: 9, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1099, column: 9)
!2153 = !DILocation(line: 1099, column: 9, scope: !1749)
!2154 = !DILocation(line: 1100, column: 16, scope: !2152)
!2155 = !DILocation(line: 1100, column: 9, scope: !2152)
!2156 = !DILocation(line: 1103, column: 9, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1103, column: 9)
!2158 = !DILocation(line: 1103, column: 15, scope: !2157)
!2159 = !DILocation(line: 1103, column: 20, scope: !2157)
!2160 = !DILocation(line: 1103, column: 23, scope: !2161)
!2161 = !DILexicalBlockFile(scope: !2157, file: !910, discriminator: 1)
!2162 = !DILocation(line: 1103, column: 30, scope: !2161)
!2163 = !DILocation(line: 1103, column: 42, scope: !2161)
!2164 = !DILocation(line: 1103, column: 9, scope: !2161)
!2165 = !DILocation(line: 1104, column: 9, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2157, file: !910, line: 1103, column: 63)
!2167 = !DILocation(line: 1104, column: 12, scope: !2166)
!2168 = !DILocation(line: 1104, column: 16, scope: !2166)
!2169 = !DILocation(line: 1105, column: 9, scope: !2166)
!2170 = !DILocation(line: 1105, column: 12, scope: !2166)
!2171 = !DILocation(line: 1105, column: 20, scope: !2166)
!2172 = !DILocation(line: 1106, column: 9, scope: !2166)
!2173 = !DILocation(line: 1106, column: 12, scope: !2166)
!2174 = !DILocation(line: 1106, column: 24, scope: !2166)
!2175 = !DILocation(line: 1107, column: 5, scope: !2166)
!2176 = !DILocation(line: 1107, column: 16, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !2178, file: !910, discriminator: 1)
!2178 = distinct !DILexicalBlock(scope: !2157, file: !910, line: 1107, column: 16)
!2179 = !DILocation(line: 1107, column: 22, scope: !2177)
!2180 = !DILocation(line: 1107, column: 27, scope: !2177)
!2181 = !DILocation(line: 1107, column: 31, scope: !2182)
!2182 = !DILexicalBlockFile(scope: !2178, file: !910, discriminator: 2)
!2183 = !DILocation(line: 1107, column: 38, scope: !2182)
!2184 = !DILocation(line: 1107, column: 50, scope: !2182)
!2185 = !DILocation(line: 1107, column: 70, scope: !2182)
!2186 = !DILocation(line: 1108, column: 16, scope: !2178)
!2187 = !DILocation(line: 1108, column: 23, scope: !2178)
!2188 = !DILocation(line: 1108, column: 35, scope: !2178)
!2189 = !DILocation(line: 1107, column: 16, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !2157, file: !910, discriminator: 3)
!2191 = !DILocation(line: 1109, column: 9, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2178, file: !910, line: 1108, column: 64)
!2193 = !DILocation(line: 1109, column: 12, scope: !2192)
!2194 = !DILocation(line: 1109, column: 16, scope: !2192)
!2195 = !DILocation(line: 1110, column: 9, scope: !2192)
!2196 = !DILocation(line: 1110, column: 12, scope: !2192)
!2197 = !DILocation(line: 1110, column: 20, scope: !2192)
!2198 = !DILocation(line: 1111, column: 9, scope: !2192)
!2199 = !DILocation(line: 1111, column: 12, scope: !2192)
!2200 = !DILocation(line: 1111, column: 24, scope: !2192)
!2201 = !DILocation(line: 1112, column: 5, scope: !2192)
!2202 = !DILocation(line: 1112, column: 16, scope: !2203)
!2203 = !DILexicalBlockFile(scope: !2204, file: !910, discriminator: 1)
!2204 = distinct !DILexicalBlock(scope: !2178, file: !910, line: 1112, column: 16)
!2205 = !DILocation(line: 1112, column: 22, scope: !2203)
!2206 = !DILocation(line: 1113, column: 9, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2204, file: !910, line: 1112, column: 29)
!2208 = !DILocation(line: 1113, column: 12, scope: !2207)
!2209 = !DILocation(line: 1113, column: 16, scope: !2207)
!2210 = !DILocation(line: 1114, column: 9, scope: !2207)
!2211 = !DILocation(line: 1114, column: 12, scope: !2207)
!2212 = !DILocation(line: 1114, column: 20, scope: !2207)
!2213 = !DILocation(line: 1115, column: 9, scope: !2207)
!2214 = !DILocation(line: 1115, column: 12, scope: !2207)
!2215 = !DILocation(line: 1115, column: 24, scope: !2207)
!2216 = !DILocation(line: 1116, column: 5, scope: !2207)
!2217 = !DILocation(line: 1117, column: 9, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2204, file: !910, line: 1116, column: 12)
!2219 = !DILocation(line: 1117, column: 12, scope: !2218)
!2220 = !DILocation(line: 1117, column: 16, scope: !2218)
!2221 = !DILocation(line: 1118, column: 9, scope: !2218)
!2222 = !DILocation(line: 1118, column: 12, scope: !2218)
!2223 = !DILocation(line: 1118, column: 20, scope: !2218)
!2224 = !DILocation(line: 1119, column: 9, scope: !2218)
!2225 = !DILocation(line: 1119, column: 12, scope: !2218)
!2226 = !DILocation(line: 1119, column: 24, scope: !2218)
!2227 = !DILocation(line: 1123, column: 12, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1123, column: 5)
!2229 = !DILocation(line: 1123, column: 10, scope: !2228)
!2230 = !DILocation(line: 1123, column: 17, scope: !2231)
!2231 = !DILexicalBlockFile(scope: !2232, file: !910, discriminator: 1)
!2232 = distinct !DILexicalBlock(scope: !2228, file: !910, line: 1123, column: 5)
!2233 = !DILocation(line: 1123, column: 19, scope: !2231)
!2234 = !DILocation(line: 1123, column: 5, scope: !2231)
!2235 = !DILocalVariable(name: "w", scope: !2236, file: !910, line: 1124, type: !936)
!2236 = distinct !DILexicalBlock(scope: !2232, file: !910, line: 1123, column: 29)
!2237 = !DILocation(line: 1124, column: 13, scope: !2236)
!2238 = !DILocalVariable(name: "h", scope: !2236, file: !910, line: 1124, type: !936)
!2239 = !DILocation(line: 1124, column: 16, scope: !2236)
!2240 = !DILocation(line: 1125, column: 23, scope: !2236)
!2241 = !DILocation(line: 1125, column: 14, scope: !2236)
!2242 = !DILocation(line: 1125, column: 17, scope: !2236)
!2243 = !DILocation(line: 1125, column: 11, scope: !2236)
!2244 = !DILocation(line: 1126, column: 20, scope: !2236)
!2245 = !DILocation(line: 1126, column: 27, scope: !2236)
!2246 = !DILocation(line: 1126, column: 37, scope: !2236)
!2247 = !DILocation(line: 1126, column: 41, scope: !2248)
!2248 = !DILexicalBlockFile(scope: !2236, file: !910, discriminator: 1)
!2249 = !DILocation(line: 1126, column: 44, scope: !2248)
!2250 = !DILocation(line: 1126, column: 37, scope: !2248)
!2251 = !DILocation(line: 1126, column: 37, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2236, file: !910, discriminator: 2)
!2253 = !DILocation(line: 1126, column: 37, scope: !2254)
!2254 = !DILexicalBlockFile(scope: !2236, file: !910, discriminator: 3)
!2255 = !DILocation(line: 1126, column: 33, scope: !2254)
!2256 = !DILocation(line: 1126, column: 9, scope: !2254)
!2257 = !DILocation(line: 1126, column: 12, scope: !2254)
!2258 = !DILocation(line: 1126, column: 18, scope: !2254)
!2259 = !DILocation(line: 1127, column: 21, scope: !2236)
!2260 = !DILocation(line: 1127, column: 28, scope: !2236)
!2261 = !DILocation(line: 1127, column: 39, scope: !2236)
!2262 = !DILocation(line: 1127, column: 43, scope: !2248)
!2263 = !DILocation(line: 1127, column: 46, scope: !2248)
!2264 = !DILocation(line: 1127, column: 39, scope: !2248)
!2265 = !DILocation(line: 1127, column: 39, scope: !2252)
!2266 = !DILocation(line: 1127, column: 39, scope: !2254)
!2267 = !DILocation(line: 1127, column: 35, scope: !2254)
!2268 = !DILocation(line: 1127, column: 9, scope: !2254)
!2269 = !DILocation(line: 1127, column: 12, scope: !2254)
!2270 = !DILocation(line: 1127, column: 19, scope: !2254)
!2271 = !DILocation(line: 1128, column: 13, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2236, file: !910, line: 1128, column: 13)
!2273 = !DILocation(line: 1128, column: 16, scope: !2272)
!2274 = !DILocation(line: 1128, column: 13, scope: !2236)
!2275 = !DILocation(line: 1129, column: 13, scope: !2272)
!2276 = !DILocation(line: 1129, column: 16, scope: !2272)
!2277 = !DILocation(line: 1129, column: 23, scope: !2272)
!2278 = !DILocation(line: 1130, column: 31, scope: !2236)
!2279 = !DILocation(line: 1130, column: 34, scope: !2236)
!2280 = !DILocation(line: 1130, column: 48, scope: !2236)
!2281 = !DILocation(line: 1130, column: 51, scope: !2236)
!2282 = !DILocation(line: 1130, column: 45, scope: !2236)
!2283 = !DILocation(line: 1130, column: 40, scope: !2236)
!2284 = !DILocation(line: 1130, column: 66, scope: !2236)
!2285 = !DILocation(line: 1130, column: 79, scope: !2236)
!2286 = !DILocation(line: 1130, column: 82, scope: !2236)
!2287 = !DILocation(line: 1130, column: 76, scope: !2236)
!2288 = !DILocation(line: 1130, column: 97, scope: !2236)
!2289 = !DILocation(line: 1130, column: 70, scope: !2236)
!2290 = !DILocation(line: 1130, column: 69, scope: !2236)
!2291 = !DILocation(line: 1130, column: 26, scope: !2236)
!2292 = !DILocation(line: 1130, column: 9, scope: !2236)
!2293 = !DILocation(line: 1130, column: 12, scope: !2236)
!2294 = !DILocation(line: 1130, column: 22, scope: !2236)
!2295 = !DILocation(line: 1131, column: 32, scope: !2236)
!2296 = !DILocation(line: 1131, column: 35, scope: !2236)
!2297 = !DILocation(line: 1131, column: 50, scope: !2236)
!2298 = !DILocation(line: 1131, column: 53, scope: !2236)
!2299 = !DILocation(line: 1131, column: 47, scope: !2236)
!2300 = !DILocation(line: 1131, column: 42, scope: !2236)
!2301 = !DILocation(line: 1131, column: 68, scope: !2236)
!2302 = !DILocation(line: 1131, column: 81, scope: !2236)
!2303 = !DILocation(line: 1131, column: 84, scope: !2236)
!2304 = !DILocation(line: 1131, column: 78, scope: !2236)
!2305 = !DILocation(line: 1131, column: 99, scope: !2236)
!2306 = !DILocation(line: 1131, column: 72, scope: !2236)
!2307 = !DILocation(line: 1131, column: 71, scope: !2236)
!2308 = !DILocation(line: 1131, column: 27, scope: !2236)
!2309 = !DILocation(line: 1131, column: 9, scope: !2236)
!2310 = !DILocation(line: 1131, column: 12, scope: !2236)
!2311 = !DILocation(line: 1131, column: 23, scope: !2236)
!2312 = !DILocation(line: 1132, column: 29, scope: !2236)
!2313 = !DILocation(line: 1132, column: 32, scope: !2236)
!2314 = !DILocation(line: 1132, column: 42, scope: !2236)
!2315 = !DILocation(line: 1132, column: 47, scope: !2236)
!2316 = !DILocation(line: 1132, column: 50, scope: !2236)
!2317 = !DILocation(line: 1132, column: 26, scope: !2236)
!2318 = !DILocation(line: 1132, column: 9, scope: !2236)
!2319 = !DILocation(line: 1132, column: 12, scope: !2236)
!2320 = !DILocation(line: 1132, column: 24, scope: !2236)
!2321 = !DILocation(line: 1133, column: 34, scope: !2236)
!2322 = !DILocation(line: 1133, column: 37, scope: !2236)
!2323 = !DILocation(line: 1133, column: 49, scope: !2236)
!2324 = !DILocation(line: 1133, column: 52, scope: !2236)
!2325 = !DILocation(line: 1133, column: 48, scope: !2236)
!2326 = !DILocation(line: 1133, column: 62, scope: !2236)
!2327 = !DILocation(line: 1133, column: 23, scope: !2236)
!2328 = !DILocation(line: 1133, column: 9, scope: !2236)
!2329 = !DILocation(line: 1133, column: 12, scope: !2236)
!2330 = !DILocation(line: 1133, column: 21, scope: !2236)
!2331 = !DILocation(line: 1134, column: 14, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2236, file: !910, line: 1134, column: 13)
!2333 = !DILocation(line: 1134, column: 17, scope: !2332)
!2334 = !DILocation(line: 1134, column: 13, scope: !2236)
!2335 = !DILocation(line: 1135, column: 13, scope: !2332)
!2336 = !DILocation(line: 1136, column: 22, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2236, file: !910, line: 1136, column: 9)
!2338 = !DILocation(line: 1136, column: 25, scope: !2337)
!2339 = !DILocation(line: 1136, column: 38, scope: !2337)
!2340 = !DILocation(line: 1136, column: 20, scope: !2337)
!2341 = !DILocation(line: 1136, column: 14, scope: !2337)
!2342 = !DILocation(line: 1136, column: 42, scope: !2343)
!2343 = !DILexicalBlockFile(scope: !2344, file: !910, discriminator: 1)
!2344 = distinct !DILexicalBlock(scope: !2337, file: !910, line: 1136, column: 9)
!2345 = !DILocation(line: 1136, column: 48, scope: !2343)
!2346 = !DILocation(line: 1136, column: 9, scope: !2343)
!2347 = !DILocation(line: 1137, column: 17, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2344, file: !910, line: 1136, column: 63)
!2349 = !DILocation(line: 1137, column: 19, scope: !2348)
!2350 = !DILocation(line: 1137, column: 15, scope: !2348)
!2351 = !DILocation(line: 1138, column: 17, scope: !2348)
!2352 = !DILocation(line: 1138, column: 19, scope: !2348)
!2353 = !DILocation(line: 1138, column: 15, scope: !2348)
!2354 = !DILocation(line: 1139, column: 20, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2348, file: !910, line: 1139, column: 13)
!2356 = !DILocation(line: 1139, column: 18, scope: !2355)
!2357 = !DILocation(line: 1139, column: 25, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2359, file: !910, discriminator: 1)
!2359 = distinct !DILexicalBlock(scope: !2355, file: !910, line: 1139, column: 13)
!2360 = !DILocation(line: 1139, column: 27, scope: !2358)
!2361 = !DILocation(line: 1139, column: 13, scope: !2358)
!2362 = !DILocation(line: 1140, column: 37, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !910, line: 1139, column: 37)
!2364 = !DILocation(line: 1140, column: 22, scope: !2363)
!2365 = !DILocation(line: 1140, column: 30, scope: !2363)
!2366 = !DILocation(line: 1140, column: 25, scope: !2363)
!2367 = !DILocation(line: 1140, column: 19, scope: !2363)
!2368 = !DILocation(line: 1141, column: 28, scope: !2363)
!2369 = !DILocation(line: 1141, column: 17, scope: !2363)
!2370 = !DILocation(line: 1141, column: 20, scope: !2363)
!2371 = !DILocation(line: 1141, column: 26, scope: !2363)
!2372 = !DILocation(line: 1142, column: 29, scope: !2363)
!2373 = !DILocation(line: 1142, column: 17, scope: !2363)
!2374 = !DILocation(line: 1142, column: 20, scope: !2363)
!2375 = !DILocation(line: 1142, column: 27, scope: !2363)
!2376 = !DILocation(line: 1143, column: 29, scope: !2363)
!2377 = !DILocation(line: 1143, column: 32, scope: !2363)
!2378 = !DILocation(line: 1143, column: 17, scope: !2363)
!2379 = !DILocation(line: 1143, column: 20, scope: !2363)
!2380 = !DILocation(line: 1143, column: 27, scope: !2363)
!2381 = !DILocation(line: 1144, column: 26, scope: !2363)
!2382 = !DILocation(line: 1144, column: 28, scope: !2363)
!2383 = !DILocation(line: 1144, column: 33, scope: !2363)
!2384 = !DILocation(line: 1144, column: 36, scope: !2363)
!2385 = !DILocation(line: 1144, column: 32, scope: !2363)
!2386 = !DILocation(line: 1144, column: 25, scope: !2363)
!2387 = !DILocation(line: 1144, column: 43, scope: !2363)
!2388 = !DILocation(line: 1144, column: 46, scope: !2363)
!2389 = !DILocation(line: 1144, column: 42, scope: !2363)
!2390 = !DILocation(line: 1144, column: 56, scope: !2363)
!2391 = !DILocation(line: 1144, column: 58, scope: !2363)
!2392 = !DILocation(line: 1144, column: 63, scope: !2363)
!2393 = !DILocation(line: 1144, column: 66, scope: !2363)
!2394 = !DILocation(line: 1144, column: 62, scope: !2363)
!2395 = !DILocation(line: 1144, column: 55, scope: !2363)
!2396 = !DILocation(line: 1144, column: 53, scope: !2363)
!2397 = !DILocation(line: 1144, column: 23, scope: !2363)
!2398 = !DILocation(line: 1145, column: 26, scope: !2363)
!2399 = !DILocation(line: 1145, column: 29, scope: !2363)
!2400 = !DILocation(line: 1145, column: 40, scope: !2363)
!2401 = !DILocation(line: 1145, column: 38, scope: !2363)
!2402 = !DILocation(line: 1145, column: 17, scope: !2363)
!2403 = !DILocation(line: 1145, column: 20, scope: !2363)
!2404 = !DILocation(line: 1145, column: 24, scope: !2363)
!2405 = !DILocation(line: 1146, column: 13, scope: !2363)
!2406 = !DILocation(line: 1139, column: 33, scope: !2407)
!2407 = !DILexicalBlockFile(scope: !2359, file: !910, discriminator: 2)
!2408 = !DILocation(line: 1139, column: 13, scope: !2407)
!2409 = distinct !{!2409, !2410}
!2410 = !DILocation(line: 1139, column: 13, scope: !2348)
!2411 = !DILocation(line: 1147, column: 9, scope: !2348)
!2412 = !DILocation(line: 1136, column: 59, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !2344, file: !910, discriminator: 2)
!2414 = !DILocation(line: 1136, column: 9, scope: !2413)
!2415 = distinct !{!2415, !2416}
!2416 = !DILocation(line: 1136, column: 9, scope: !2236)
!2417 = !DILocation(line: 1150, column: 58, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2236, file: !910, line: 1150, column: 13)
!2419 = !DILocation(line: 1150, column: 40, scope: !2418)
!2420 = !DILocation(line: 1150, column: 43, scope: !2418)
!2421 = !DILocation(line: 1150, column: 61, scope: !2418)
!2422 = !DILocation(line: 1151, column: 48, scope: !2418)
!2423 = !DILocation(line: 1151, column: 39, scope: !2418)
!2424 = !DILocation(line: 1151, column: 42, scope: !2418)
!2425 = !DILocation(line: 1151, column: 51, scope: !2418)
!2426 = !DILocation(line: 1152, column: 48, scope: !2418)
!2427 = !DILocation(line: 1152, column: 39, scope: !2418)
!2428 = !DILocation(line: 1152, column: 42, scope: !2418)
!2429 = !DILocation(line: 1152, column: 51, scope: !2418)
!2430 = !DILocation(line: 1153, column: 39, scope: !2418)
!2431 = !DILocation(line: 1153, column: 42, scope: !2418)
!2432 = !DILocation(line: 1153, column: 55, scope: !2418)
!2433 = !DILocation(line: 1153, column: 58, scope: !2418)
!2434 = !DILocation(line: 1150, column: 13, scope: !2418)
!2435 = !DILocation(line: 1150, column: 13, scope: !2236)
!2436 = !DILocation(line: 1154, column: 13, scope: !2418)
!2437 = !DILocation(line: 1155, column: 5, scope: !2236)
!2438 = !DILocation(line: 1123, column: 25, scope: !2439)
!2439 = !DILexicalBlockFile(scope: !2232, file: !910, discriminator: 2)
!2440 = !DILocation(line: 1123, column: 5, scope: !2439)
!2441 = distinct !{!2441, !2442}
!2442 = !DILocation(line: 1123, column: 5, scope: !1749)
!2443 = !DILocation(line: 1158, column: 16, scope: !1749)
!2444 = !DILocation(line: 1158, column: 19, scope: !1749)
!2445 = !DILocation(line: 1158, column: 28, scope: !1749)
!2446 = !DILocation(line: 1158, column: 38, scope: !1749)
!2447 = !DILocation(line: 1158, column: 41, scope: !1749)
!2448 = !DILocation(line: 1158, column: 37, scope: !1749)
!2449 = !DILocation(line: 1158, column: 5, scope: !1749)
!2450 = !DILocation(line: 1158, column: 8, scope: !1749)
!2451 = !DILocation(line: 1158, column: 14, scope: !1749)
!2452 = !DILocation(line: 1159, column: 16, scope: !1749)
!2453 = !DILocation(line: 1159, column: 19, scope: !1749)
!2454 = !DILocation(line: 1159, column: 28, scope: !1749)
!2455 = !DILocation(line: 1159, column: 39, scope: !1749)
!2456 = !DILocation(line: 1159, column: 42, scope: !1749)
!2457 = !DILocation(line: 1159, column: 38, scope: !1749)
!2458 = !DILocation(line: 1159, column: 5, scope: !1749)
!2459 = !DILocation(line: 1159, column: 8, scope: !1749)
!2460 = !DILocation(line: 1159, column: 14, scope: !1749)
!2461 = !DILocation(line: 1161, column: 31, scope: !1749)
!2462 = !DILocation(line: 1161, column: 34, scope: !1749)
!2463 = !DILocation(line: 1161, column: 40, scope: !1749)
!2464 = !DILocation(line: 1161, column: 43, scope: !1749)
!2465 = !DILocation(line: 1161, column: 39, scope: !1749)
!2466 = !DILocation(line: 1161, column: 21, scope: !1749)
!2467 = !DILocation(line: 1161, column: 5, scope: !1749)
!2468 = !DILocation(line: 1161, column: 8, scope: !1749)
!2469 = !DILocation(line: 1161, column: 19, scope: !1749)
!2470 = !DILocation(line: 1162, column: 10, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1162, column: 9)
!2472 = !DILocation(line: 1162, column: 13, scope: !2471)
!2473 = !DILocation(line: 1162, column: 9, scope: !1749)
!2474 = !DILocation(line: 1163, column: 9, scope: !2471)
!2475 = !DILocation(line: 1165, column: 12, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !1749, file: !910, line: 1165, column: 5)
!2477 = !DILocation(line: 1165, column: 10, scope: !2476)
!2478 = !DILocation(line: 1165, column: 17, scope: !2479)
!2479 = !DILexicalBlockFile(scope: !2480, file: !910, discriminator: 1)
!2480 = distinct !DILexicalBlock(scope: !2476, file: !910, line: 1165, column: 5)
!2481 = !DILocation(line: 1165, column: 19, scope: !2479)
!2482 = !DILocation(line: 1165, column: 5, scope: !2479)
!2483 = !DILocalVariable(name: "qf", scope: !2484, file: !910, line: 1166, type: !995)
!2484 = distinct !DILexicalBlock(scope: !2480, file: !910, line: 1165, column: 31)
!2485 = !DILocation(line: 1166, column: 24, scope: !2484)
!2486 = !DILocation(line: 1166, column: 49, scope: !2484)
!2487 = !DILocation(line: 1166, column: 29, scope: !2484)
!2488 = !DILocalVariable(name: "m", scope: !2484, file: !910, line: 1167, type: !2489)
!2489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!2490 = !DILocation(line: 1167, column: 24, scope: !2484)
!2491 = !DILocation(line: 1167, column: 49, scope: !2484)
!2492 = !DILocation(line: 1167, column: 52, scope: !2484)
!2493 = !DILocation(line: 1167, column: 48, scope: !2484)
!2494 = !DILocation(line: 1167, column: 34, scope: !2484)
!2495 = !DILocation(line: 1167, column: 32, scope: !2484)
!2496 = !DILocalVariable(name: "t", scope: !2484, file: !910, line: 1168, type: !2489)
!2497 = !DILocation(line: 1168, column: 24, scope: !2484)
!2498 = !DILocation(line: 1168, column: 38, scope: !2484)
!2499 = !DILocation(line: 1168, column: 40, scope: !2484)
!2500 = !DILocation(line: 1168, column: 34, scope: !2484)
!2501 = !DILocation(line: 1168, column: 49, scope: !2484)
!2502 = !DILocation(line: 1168, column: 47, scope: !2484)
!2503 = !DILocation(line: 1168, column: 28, scope: !2484)
!2504 = !DILocalVariable(name: "r", scope: !2484, file: !910, line: 1169, type: !2489)
!2505 = !DILocation(line: 1169, column: 24, scope: !2484)
!2506 = !DILocation(line: 1169, column: 29, scope: !2484)
!2507 = !DILocation(line: 1169, column: 31, scope: !2484)
!2508 = !DILocation(line: 1169, column: 30, scope: !2484)
!2509 = !DILocation(line: 1169, column: 36, scope: !2484)
!2510 = !DILocation(line: 1169, column: 34, scope: !2484)
!2511 = !DILocation(line: 1169, column: 40, scope: !2484)
!2512 = !DILocation(line: 1169, column: 28, scope: !2484)
!2513 = !DILocation(line: 1170, column: 15, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2484, file: !910, line: 1170, column: 13)
!2515 = !DILocation(line: 1170, column: 21, scope: !2514)
!2516 = !DILocation(line: 1170, column: 24, scope: !2514)
!2517 = !DILocation(line: 1170, column: 18, scope: !2514)
!2518 = !DILocation(line: 1170, column: 13, scope: !2484)
!2519 = !DILocation(line: 1171, column: 27, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2514, file: !910, line: 1170, column: 31)
!2521 = !DILocation(line: 1171, column: 13, scope: !2520)
!2522 = !DILocation(line: 1171, column: 16, scope: !2520)
!2523 = !DILocation(line: 1171, column: 33, scope: !2520)
!2524 = !DILocation(line: 1172, column: 27, scope: !2520)
!2525 = !DILocation(line: 1172, column: 13, scope: !2520)
!2526 = !DILocation(line: 1172, column: 16, scope: !2520)
!2527 = !DILocation(line: 1172, column: 33, scope: !2520)
!2528 = !DILocation(line: 1173, column: 9, scope: !2520)
!2529 = !DILocation(line: 1173, column: 20, scope: !2530)
!2530 = !DILexicalBlockFile(scope: !2531, file: !910, discriminator: 1)
!2531 = distinct !DILexicalBlock(scope: !2514, file: !910, line: 1173, column: 20)
!2532 = !DILocation(line: 1173, column: 30, scope: !2530)
!2533 = !DILocation(line: 1173, column: 27, scope: !2530)
!2534 = !DILocation(line: 1173, column: 22, scope: !2530)
!2535 = !DILocation(line: 1174, column: 35, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2531, file: !910, line: 1173, column: 33)
!2537 = !DILocation(line: 1174, column: 37, scope: !2536)
!2538 = !DILocation(line: 1174, column: 27, scope: !2536)
!2539 = !DILocation(line: 1174, column: 13, scope: !2536)
!2540 = !DILocation(line: 1174, column: 16, scope: !2536)
!2541 = !DILocation(line: 1174, column: 33, scope: !2536)
!2542 = !DILocation(line: 1175, column: 27, scope: !2536)
!2543 = !DILocation(line: 1175, column: 13, scope: !2536)
!2544 = !DILocation(line: 1175, column: 16, scope: !2536)
!2545 = !DILocation(line: 1175, column: 33, scope: !2536)
!2546 = !DILocation(line: 1176, column: 9, scope: !2536)
!2547 = !DILocation(line: 1177, column: 35, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2531, file: !910, line: 1176, column: 16)
!2549 = !DILocation(line: 1177, column: 27, scope: !2548)
!2550 = !DILocation(line: 1177, column: 13, scope: !2548)
!2551 = !DILocation(line: 1177, column: 16, scope: !2548)
!2552 = !DILocation(line: 1177, column: 33, scope: !2548)
!2553 = !DILocation(line: 1178, column: 35, scope: !2548)
!2554 = !DILocation(line: 1178, column: 27, scope: !2548)
!2555 = !DILocation(line: 1178, column: 13, scope: !2548)
!2556 = !DILocation(line: 1178, column: 16, scope: !2548)
!2557 = !DILocation(line: 1178, column: 33, scope: !2548)
!2558 = !DILocation(line: 1180, column: 5, scope: !2484)
!2559 = !DILocation(line: 1165, column: 27, scope: !2560)
!2560 = !DILexicalBlockFile(scope: !2480, file: !910, discriminator: 2)
!2561 = !DILocation(line: 1165, column: 5, scope: !2560)
!2562 = distinct !{!2562, !2563}
!2563 = !DILocation(line: 1165, column: 5, scope: !1749)
!2564 = !DILocation(line: 1182, column: 5, scope: !1749)
!2565 = !DILocation(line: 1185, column: 20, scope: !1749)
!2566 = !DILocation(line: 1185, column: 5, scope: !1749)
!2567 = !DILocation(line: 1186, column: 12, scope: !1749)
!2568 = !DILocation(line: 1186, column: 5, scope: !1749)
!2569 = !DILocation(line: 1187, column: 5, scope: !1749)
!2570 = !DILocation(line: 1188, column: 1, scope: !1749)
!2571 = distinct !DISubprogram(name: "vc2_encode_frame", scope: !910, file: !910, line: 949, type: !1688, isLocal: true, isDefinition: true, scopeLine: 951, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!2572 = !DILocalVariable(name: "avctx", arg: 1, scope: !2571, file: !910, line: 949, type: !1088)
!2573 = !DILocation(line: 949, column: 67, scope: !2571)
!2574 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2571, file: !910, line: 949, type: !1233)
!2575 = !DILocation(line: 949, column: 84, scope: !2571)
!2576 = !DILocalVariable(name: "frame", arg: 3, scope: !2571, file: !910, line: 950, type: !1377)
!2577 = !DILocation(line: 950, column: 54, scope: !2571)
!2578 = !DILocalVariable(name: "got_packet", arg: 4, scope: !2571, file: !910, line: 950, type: !1379)
!2579 = !DILocation(line: 950, column: 66, scope: !2571)
!2580 = !DILocalVariable(name: "ret", scope: !2571, file: !910, line: 952, type: !936)
!2581 = !DILocation(line: 952, column: 9, scope: !2571)
!2582 = !DILocalVariable(name: "slice_ceil", scope: !2571, file: !910, line: 953, type: !936)
!2583 = !DILocation(line: 953, column: 9, scope: !2571)
!2584 = !DILocalVariable(name: "sig_size", scope: !2571, file: !910, line: 953, type: !936)
!2585 = !DILocation(line: 953, column: 21, scope: !2571)
!2586 = !DILocalVariable(name: "s", scope: !2571, file: !910, line: 954, type: !1829)
!2587 = !DILocation(line: 954, column: 20, scope: !2571)
!2588 = !DILocation(line: 954, column: 24, scope: !2571)
!2589 = !DILocation(line: 954, column: 31, scope: !2571)
!2590 = !DILocalVariable(name: "bitexact", scope: !2571, file: !910, line: 955, type: !989)
!2591 = !DILocation(line: 955, column: 15, scope: !2571)
!2592 = !DILocation(line: 955, column: 26, scope: !2571)
!2593 = !DILocation(line: 955, column: 33, scope: !2571)
!2594 = !DILocation(line: 955, column: 39, scope: !2571)
!2595 = !DILocalVariable(name: "aux_data", scope: !2571, file: !910, line: 956, type: !968)
!2596 = !DILocation(line: 956, column: 17, scope: !2571)
!2597 = !DILocation(line: 956, column: 28, scope: !2571)
!2598 = !DILocalVariable(name: "aux_data_size", scope: !2571, file: !910, line: 957, type: !989)
!2599 = !DILocation(line: 957, column: 15, scope: !2571)
!2600 = !DILocation(line: 957, column: 31, scope: !2571)
!2601 = !DILocalVariable(name: "header_size", scope: !2571, file: !910, line: 958, type: !989)
!2602 = !DILocation(line: 958, column: 15, scope: !2571)
!2603 = !DILocation(line: 958, column: 35, scope: !2571)
!2604 = !DILocation(line: 958, column: 33, scope: !2571)
!2605 = !DILocalVariable(name: "r_bitrate", scope: !2571, file: !910, line: 959, type: !1021)
!2606 = !DILocation(line: 959, column: 13, scope: !2571)
!2607 = !DILocation(line: 959, column: 25, scope: !2571)
!2608 = !DILocation(line: 959, column: 32, scope: !2571)
!2609 = !DILocation(line: 959, column: 45, scope: !2571)
!2610 = !DILocation(line: 959, column: 48, scope: !2571)
!2611 = !DILocation(line: 959, column: 41, scope: !2571)
!2612 = !DILocation(line: 961, column: 16, scope: !2571)
!2613 = !DILocation(line: 961, column: 5, scope: !2571)
!2614 = !DILocation(line: 961, column: 8, scope: !2571)
!2615 = !DILocation(line: 961, column: 14, scope: !2571)
!2616 = !DILocation(line: 962, column: 5, scope: !2571)
!2617 = !DILocation(line: 962, column: 8, scope: !2571)
!2618 = !DILocation(line: 962, column: 20, scope: !2571)
!2619 = !DILocation(line: 963, column: 5, scope: !2571)
!2620 = !DILocation(line: 963, column: 8, scope: !2571)
!2621 = !DILocation(line: 963, column: 21, scope: !2571)
!2622 = !DILocation(line: 964, column: 5, scope: !2571)
!2623 = !DILocation(line: 964, column: 8, scope: !2571)
!2624 = !DILocation(line: 964, column: 24, scope: !2571)
!2625 = !DILocation(line: 965, column: 5, scope: !2571)
!2626 = !DILocation(line: 965, column: 8, scope: !2571)
!2627 = !DILocation(line: 965, column: 26, scope: !2571)
!2628 = !DILocation(line: 968, column: 38, scope: !2571)
!2629 = !DILocation(line: 968, column: 49, scope: !2571)
!2630 = !DILocation(line: 968, column: 52, scope: !2571)
!2631 = !DILocation(line: 968, column: 59, scope: !2571)
!2632 = !DILocation(line: 968, column: 69, scope: !2571)
!2633 = !DILocation(line: 969, column: 38, scope: !2571)
!2634 = !DILocation(line: 969, column: 41, scope: !2571)
!2635 = !DILocation(line: 969, column: 48, scope: !2571)
!2636 = !DILocation(line: 969, column: 58, scope: !2571)
!2637 = !DILocation(line: 968, column: 27, scope: !2571)
!2638 = !DILocation(line: 969, column: 63, scope: !2571)
!2639 = !DILocation(line: 969, column: 71, scope: !2571)
!2640 = !DILocation(line: 969, column: 69, scope: !2571)
!2641 = !DILocation(line: 968, column: 26, scope: !2571)
!2642 = !DILocation(line: 968, column: 5, scope: !2571)
!2643 = !DILocation(line: 968, column: 8, scope: !2571)
!2644 = !DILocation(line: 968, column: 24, scope: !2571)
!2645 = !DILocation(line: 970, column: 50, scope: !2571)
!2646 = !DILocation(line: 970, column: 53, scope: !2571)
!2647 = !DILocation(line: 970, column: 73, scope: !2571)
!2648 = !DILocation(line: 970, column: 76, scope: !2571)
!2649 = !DILocation(line: 970, column: 82, scope: !2571)
!2650 = !DILocation(line: 970, column: 85, scope: !2571)
!2651 = !DILocation(line: 970, column: 81, scope: !2571)
!2652 = !DILocation(line: 970, column: 39, scope: !2571)
!2653 = !DILocation(line: 970, column: 37, scope: !2571)
!2654 = !DILocation(line: 970, column: 5, scope: !2571)
!2655 = !DILocation(line: 970, column: 8, scope: !2571)
!2656 = !DILocation(line: 970, column: 24, scope: !2571)
!2657 = !DILocation(line: 973, column: 5, scope: !2571)
!2658 = !DILocation(line: 973, column: 12, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !2571, file: !910, discriminator: 1)
!2660 = !DILocation(line: 973, column: 21, scope: !2659)
!2661 = !DILocation(line: 973, column: 5, scope: !2659)
!2662 = !DILocalVariable(name: "r_size", scope: !2663, file: !910, line: 974, type: !936)
!2663 = distinct !DILexicalBlock(scope: !2571, file: !910, line: 973, column: 28)
!2664 = !DILocation(line: 974, column: 13, scope: !2663)
!2665 = !DILocation(line: 974, column: 27, scope: !2663)
!2666 = !DILocation(line: 974, column: 30, scope: !2663)
!2667 = !DILocation(line: 974, column: 49, scope: !2663)
!2668 = !DILocation(line: 974, column: 52, scope: !2663)
!2669 = !DILocation(line: 974, column: 47, scope: !2663)
!2670 = !DILocation(line: 974, column: 64, scope: !2663)
!2671 = !DILocation(line: 974, column: 71, scope: !2663)
!2672 = !DILocation(line: 974, column: 74, scope: !2663)
!2673 = !DILocation(line: 974, column: 86, scope: !2663)
!2674 = !DILocation(line: 974, column: 68, scope: !2663)
!2675 = !DILocation(line: 974, column: 67, scope: !2663)
!2676 = !DILocation(line: 974, column: 91, scope: !2663)
!2677 = !DILocation(line: 974, column: 97, scope: !2663)
!2678 = !DILocation(line: 974, column: 100, scope: !2663)
!2679 = !DILocation(line: 974, column: 95, scope: !2663)
!2680 = !DILocation(line: 975, column: 13, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2663, file: !910, line: 975, column: 13)
!2682 = !DILocation(line: 975, column: 22, scope: !2681)
!2683 = !DILocation(line: 975, column: 20, scope: !2681)
!2684 = !DILocation(line: 975, column: 13, scope: !2663)
!2685 = !DILocation(line: 976, column: 35, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2681, file: !910, line: 975, column: 34)
!2687 = !DILocation(line: 976, column: 44, scope: !2686)
!2688 = !DILocation(line: 976, column: 42, scope: !2686)
!2689 = !DILocation(line: 976, column: 13, scope: !2686)
!2690 = !DILocation(line: 976, column: 16, scope: !2686)
!2691 = !DILocation(line: 976, column: 32, scope: !2686)
!2692 = !DILocation(line: 977, column: 27, scope: !2686)
!2693 = !DILocation(line: 977, column: 30, scope: !2686)
!2694 = !DILocation(line: 977, column: 49, scope: !2686)
!2695 = !DILocation(line: 977, column: 52, scope: !2686)
!2696 = !DILocation(line: 977, column: 47, scope: !2686)
!2697 = !DILocation(line: 977, column: 64, scope: !2686)
!2698 = !DILocation(line: 977, column: 71, scope: !2686)
!2699 = !DILocation(line: 977, column: 74, scope: !2686)
!2700 = !DILocation(line: 977, column: 86, scope: !2686)
!2701 = !DILocation(line: 977, column: 68, scope: !2686)
!2702 = !DILocation(line: 977, column: 67, scope: !2686)
!2703 = !DILocation(line: 977, column: 91, scope: !2686)
!2704 = !DILocation(line: 977, column: 97, scope: !2686)
!2705 = !DILocation(line: 977, column: 100, scope: !2686)
!2706 = !DILocation(line: 977, column: 95, scope: !2686)
!2707 = !DILocation(line: 977, column: 20, scope: !2686)
!2708 = !DILocation(line: 978, column: 9, scope: !2686)
!2709 = !DILocation(line: 979, column: 20, scope: !2663)
!2710 = !DILocation(line: 979, column: 27, scope: !2663)
!2711 = !DILocation(line: 979, column: 30, scope: !2663)
!2712 = !DILocation(line: 979, column: 26, scope: !2663)
!2713 = !DILocation(line: 979, column: 18, scope: !2663)
!2714 = !DILocation(line: 980, column: 9, scope: !2663)
!2715 = !DILocation(line: 980, column: 12, scope: !2663)
!2716 = !DILocation(line: 980, column: 24, scope: !2663)
!2717 = !DILocation(line: 973, column: 5, scope: !2718)
!2718 = !DILexicalBlockFile(scope: !2571, file: !910, discriminator: 2)
!2719 = distinct !{!2719, !2657}
!2720 = !DILocation(line: 983, column: 26, scope: !2571)
!2721 = !DILocation(line: 983, column: 29, scope: !2571)
!2722 = !DILocation(line: 983, column: 47, scope: !2571)
!2723 = !DILocation(line: 983, column: 50, scope: !2571)
!2724 = !DILocation(line: 983, column: 67, scope: !2571)
!2725 = !DILocation(line: 983, column: 70, scope: !2571)
!2726 = !DILocation(line: 983, column: 79, scope: !2571)
!2727 = !DILocation(line: 983, column: 65, scope: !2571)
!2728 = !DILocation(line: 983, column: 45, scope: !2571)
!2729 = !DILocation(line: 983, column: 5, scope: !2571)
!2730 = !DILocation(line: 983, column: 8, scope: !2571)
!2731 = !DILocation(line: 983, column: 24, scope: !2571)
!2732 = !DILocation(line: 985, column: 24, scope: !2571)
!2733 = !DILocation(line: 985, column: 27, scope: !2571)
!2734 = !DILocation(line: 985, column: 34, scope: !2571)
!2735 = !DILocation(line: 985, column: 41, scope: !2571)
!2736 = !DILocation(line: 985, column: 51, scope: !2571)
!2737 = !DILocation(line: 985, column: 64, scope: !2571)
!2738 = !DILocation(line: 985, column: 67, scope: !2571)
!2739 = !DILocation(line: 985, column: 11, scope: !2571)
!2740 = !DILocation(line: 985, column: 9, scope: !2571)
!2741 = !DILocation(line: 986, column: 9, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2571, file: !910, line: 986, column: 9)
!2743 = !DILocation(line: 986, column: 9, scope: !2571)
!2744 = !DILocation(line: 987, column: 16, scope: !2742)
!2745 = !DILocation(line: 987, column: 9, scope: !2742)
!2746 = !DILocation(line: 988, column: 9, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2571, file: !910, line: 988, column: 9)
!2748 = !DILocation(line: 988, column: 12, scope: !2747)
!2749 = !DILocation(line: 988, column: 9, scope: !2571)
!2750 = !DILocation(line: 989, column: 28, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2747, file: !910, line: 988, column: 24)
!2752 = !DILocation(line: 989, column: 31, scope: !2751)
!2753 = !DILocation(line: 989, column: 38, scope: !2751)
!2754 = !DILocation(line: 989, column: 45, scope: !2751)
!2755 = !DILocation(line: 989, column: 55, scope: !2751)
!2756 = !DILocation(line: 989, column: 15, scope: !2751)
!2757 = !DILocation(line: 989, column: 13, scope: !2751)
!2758 = !DILocation(line: 990, column: 13, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2751, file: !910, line: 990, column: 13)
!2760 = !DILocation(line: 990, column: 13, scope: !2751)
!2761 = !DILocation(line: 991, column: 20, scope: !2759)
!2762 = !DILocation(line: 991, column: 13, scope: !2759)
!2763 = !DILocation(line: 992, column: 5, scope: !2751)
!2764 = !DILocation(line: 994, column: 21, scope: !2571)
!2765 = !DILocation(line: 994, column: 24, scope: !2571)
!2766 = !DILocation(line: 994, column: 5, scope: !2571)
!2767 = !DILocation(line: 995, column: 35, scope: !2571)
!2768 = !DILocation(line: 995, column: 38, scope: !2571)
!2769 = !DILocation(line: 995, column: 19, scope: !2571)
!2770 = !DILocation(line: 995, column: 42, scope: !2571)
!2771 = !DILocation(line: 995, column: 5, scope: !2571)
!2772 = !DILocation(line: 995, column: 12, scope: !2571)
!2773 = !DILocation(line: 995, column: 17, scope: !2571)
!2774 = !DILocation(line: 997, column: 6, scope: !2571)
!2775 = !DILocation(line: 997, column: 17, scope: !2571)
!2776 = !DILocation(line: 999, column: 5, scope: !2571)
!2777 = !DILocation(line: 1000, column: 1, scope: !2571)
!2778 = distinct !DISubprogram(name: "vc2_encode_end", scope: !910, file: !910, line: 1002, type: !1086, isLocal: true, isDefinition: true, scopeLine: 1003, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!2779 = !DILocalVariable(name: "avctx", arg: 1, scope: !2778, file: !910, line: 1002, type: !1088)
!2780 = !DILocation(line: 1002, column: 65, scope: !2778)
!2781 = !DILocalVariable(name: "i", scope: !2778, file: !910, line: 1004, type: !936)
!2782 = !DILocation(line: 1004, column: 9, scope: !2778)
!2783 = !DILocalVariable(name: "s", scope: !2778, file: !910, line: 1005, type: !1829)
!2784 = !DILocation(line: 1005, column: 20, scope: !2778)
!2785 = !DILocation(line: 1005, column: 24, scope: !2778)
!2786 = !DILocation(line: 1005, column: 31, scope: !2778)
!2787 = !DILocation(line: 1007, column: 12, scope: !2778)
!2788 = !DILocation(line: 1007, column: 37, scope: !2778)
!2789 = !DILocation(line: 1007, column: 40, scope: !2778)
!2790 = !DILocation(line: 1007, column: 5, scope: !2778)
!2791 = !DILocation(line: 1009, column: 12, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2778, file: !910, line: 1009, column: 5)
!2793 = !DILocation(line: 1009, column: 10, scope: !2792)
!2794 = !DILocation(line: 1009, column: 17, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !2796, file: !910, discriminator: 1)
!2796 = distinct !DILexicalBlock(scope: !2792, file: !910, line: 1009, column: 5)
!2797 = !DILocation(line: 1009, column: 19, scope: !2795)
!2798 = !DILocation(line: 1009, column: 5, scope: !2795)
!2799 = !DILocation(line: 1010, column: 54, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2796, file: !910, line: 1009, column: 29)
!2801 = !DILocation(line: 1010, column: 36, scope: !2800)
!2802 = !DILocation(line: 1010, column: 39, scope: !2800)
!2803 = !DILocation(line: 1010, column: 57, scope: !2800)
!2804 = !DILocation(line: 1010, column: 9, scope: !2800)
!2805 = !DILocation(line: 1011, column: 28, scope: !2800)
!2806 = !DILocation(line: 1011, column: 19, scope: !2800)
!2807 = !DILocation(line: 1011, column: 22, scope: !2800)
!2808 = !DILocation(line: 1011, column: 31, scope: !2800)
!2809 = !DILocation(line: 1011, column: 18, scope: !2800)
!2810 = !DILocation(line: 1011, column: 9, scope: !2800)
!2811 = !DILocation(line: 1012, column: 5, scope: !2800)
!2812 = !DILocation(line: 1009, column: 25, scope: !2813)
!2813 = !DILexicalBlockFile(scope: !2796, file: !910, discriminator: 2)
!2814 = !DILocation(line: 1009, column: 5, scope: !2813)
!2815 = distinct !{!2815, !2816}
!2816 = !DILocation(line: 1009, column: 5, scope: !2778)
!2817 = !DILocation(line: 1014, column: 15, scope: !2778)
!2818 = !DILocation(line: 1014, column: 18, scope: !2778)
!2819 = !DILocation(line: 1014, column: 14, scope: !2778)
!2820 = !DILocation(line: 1014, column: 5, scope: !2778)
!2821 = !DILocation(line: 1016, column: 5, scope: !2778)
!2822 = distinct !DISubprogram(name: "encode_frame", scope: !910, file: !910, line: 895, type: !2823, isLocal: true, isDefinition: true, scopeLine: 897, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!936, !1829, !1233, !1377, !968, !989, !936}
!2825 = !DILocalVariable(name: "s", arg: 1, scope: !2822, file: !910, line: 895, type: !1829)
!2826 = !DILocation(line: 895, column: 40, scope: !2822)
!2827 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2822, file: !910, line: 895, type: !1233)
!2828 = !DILocation(line: 895, column: 53, scope: !2822)
!2829 = !DILocalVariable(name: "frame", arg: 3, scope: !2822, file: !910, line: 895, type: !1377)
!2830 = !DILocation(line: 895, column: 75, scope: !2822)
!2831 = !DILocalVariable(name: "aux_data", arg: 4, scope: !2822, file: !910, line: 896, type: !968)
!2832 = !DILocation(line: 896, column: 37, scope: !2822)
!2833 = !DILocalVariable(name: "header_size", arg: 5, scope: !2822, file: !910, line: 896, type: !989)
!2834 = !DILocation(line: 896, column: 57, scope: !2822)
!2835 = !DILocalVariable(name: "field", arg: 6, scope: !2822, file: !910, line: 896, type: !936)
!2836 = !DILocation(line: 896, column: 74, scope: !2822)
!2837 = !DILocalVariable(name: "i", scope: !2822, file: !910, line: 898, type: !936)
!2838 = !DILocation(line: 898, column: 9, scope: !2822)
!2839 = !DILocalVariable(name: "ret", scope: !2822, file: !910, line: 898, type: !936)
!2840 = !DILocation(line: 898, column: 12, scope: !2822)
!2841 = !DILocalVariable(name: "max_frame_bytes", scope: !2822, file: !910, line: 899, type: !1021)
!2842 = !DILocation(line: 899, column: 13, scope: !2822)
!2843 = !DILocation(line: 902, column: 12, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2822, file: !910, line: 902, column: 5)
!2845 = !DILocation(line: 902, column: 10, scope: !2844)
!2846 = !DILocation(line: 902, column: 17, scope: !2847)
!2847 = !DILexicalBlockFile(scope: !2848, file: !910, discriminator: 1)
!2848 = distinct !DILexicalBlock(scope: !2844, file: !910, line: 902, column: 5)
!2849 = !DILocation(line: 902, column: 19, scope: !2847)
!2850 = !DILocation(line: 902, column: 5, scope: !2847)
!2851 = !DILocation(line: 903, column: 36, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2848, file: !910, line: 902, column: 29)
!2853 = !DILocation(line: 903, column: 27, scope: !2852)
!2854 = !DILocation(line: 903, column: 9, scope: !2852)
!2855 = !DILocation(line: 903, column: 12, scope: !2852)
!2856 = !DILocation(line: 903, column: 30, scope: !2852)
!2857 = !DILocation(line: 903, column: 34, scope: !2852)
!2858 = !DILocation(line: 904, column: 38, scope: !2852)
!2859 = !DILocation(line: 904, column: 27, scope: !2852)
!2860 = !DILocation(line: 904, column: 9, scope: !2852)
!2861 = !DILocation(line: 904, column: 12, scope: !2852)
!2862 = !DILocation(line: 904, column: 30, scope: !2852)
!2863 = !DILocation(line: 904, column: 36, scope: !2852)
!2864 = !DILocation(line: 905, column: 48, scope: !2852)
!2865 = !DILocation(line: 905, column: 39, scope: !2852)
!2866 = !DILocation(line: 905, column: 42, scope: !2852)
!2867 = !DILocation(line: 905, column: 27, scope: !2852)
!2868 = !DILocation(line: 905, column: 9, scope: !2852)
!2869 = !DILocation(line: 905, column: 12, scope: !2852)
!2870 = !DILocation(line: 905, column: 30, scope: !2852)
!2871 = !DILocation(line: 905, column: 36, scope: !2852)
!2872 = !DILocation(line: 906, column: 50, scope: !2852)
!2873 = !DILocation(line: 906, column: 38, scope: !2852)
!2874 = !DILocation(line: 906, column: 45, scope: !2852)
!2875 = !DILocation(line: 906, column: 27, scope: !2852)
!2876 = !DILocation(line: 906, column: 9, scope: !2852)
!2877 = !DILocation(line: 906, column: 12, scope: !2852)
!2878 = !DILocation(line: 906, column: 30, scope: !2852)
!2879 = !DILocation(line: 906, column: 36, scope: !2852)
!2880 = !DILocation(line: 907, column: 56, scope: !2852)
!2881 = !DILocation(line: 907, column: 40, scope: !2852)
!2882 = !DILocation(line: 907, column: 47, scope: !2852)
!2883 = !DILocation(line: 907, column: 27, scope: !2852)
!2884 = !DILocation(line: 907, column: 9, scope: !2852)
!2885 = !DILocation(line: 907, column: 12, scope: !2852)
!2886 = !DILocation(line: 907, column: 30, scope: !2852)
!2887 = !DILocation(line: 907, column: 38, scope: !2852)
!2888 = !DILocation(line: 908, column: 5, scope: !2852)
!2889 = !DILocation(line: 902, column: 25, scope: !2890)
!2890 = !DILexicalBlockFile(scope: !2848, file: !910, discriminator: 2)
!2891 = !DILocation(line: 902, column: 5, scope: !2890)
!2892 = distinct !{!2892, !2893}
!2893 = !DILocation(line: 902, column: 5, scope: !2822)
!2894 = !DILocation(line: 909, column: 5, scope: !2822)
!2895 = !DILocation(line: 909, column: 8, scope: !2822)
!2896 = !DILocation(line: 909, column: 15, scope: !2822)
!2897 = !DILocation(line: 909, column: 23, scope: !2822)
!2898 = !DILocation(line: 909, column: 26, scope: !2822)
!2899 = !DILocation(line: 909, column: 44, scope: !2822)
!2900 = !DILocation(line: 909, column: 47, scope: !2822)
!2901 = !DILocation(line: 913, column: 23, scope: !2822)
!2902 = !DILocation(line: 913, column: 54, scope: !2822)
!2903 = !DILocation(line: 913, column: 37, scope: !2822)
!2904 = !DILocation(line: 913, column: 35, scope: !2822)
!2905 = !DILocation(line: 913, column: 21, scope: !2822)
!2906 = !DILocation(line: 915, column: 9, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2822, file: !910, line: 915, column: 9)
!2908 = !DILocation(line: 915, column: 15, scope: !2907)
!2909 = !DILocation(line: 915, column: 9, scope: !2822)
!2910 = !DILocation(line: 916, column: 32, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2907, file: !910, line: 915, column: 20)
!2912 = !DILocation(line: 916, column: 35, scope: !2911)
!2913 = !DILocation(line: 916, column: 42, scope: !2911)
!2914 = !DILocation(line: 917, column: 32, scope: !2911)
!2915 = !DILocation(line: 917, column: 51, scope: !2911)
!2916 = !DILocation(line: 917, column: 54, scope: !2911)
!2917 = !DILocation(line: 917, column: 48, scope: !2911)
!2918 = !DILocation(line: 918, column: 32, scope: !2911)
!2919 = !DILocation(line: 918, column: 51, scope: !2911)
!2920 = !DILocation(line: 918, column: 54, scope: !2911)
!2921 = !DILocation(line: 918, column: 48, scope: !2911)
!2922 = !DILocation(line: 916, column: 15, scope: !2911)
!2923 = !DILocation(line: 916, column: 13, scope: !2911)
!2924 = !DILocation(line: 919, column: 13, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2911, file: !910, line: 919, column: 13)
!2926 = !DILocation(line: 919, column: 13, scope: !2911)
!2927 = !DILocation(line: 920, column: 20, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !910, line: 919, column: 18)
!2929 = !DILocation(line: 920, column: 23, scope: !2928)
!2930 = !DILocation(line: 920, column: 13, scope: !2928)
!2931 = !DILocation(line: 921, column: 20, scope: !2928)
!2932 = !DILocation(line: 921, column: 13, scope: !2928)
!2933 = !DILocation(line: 923, column: 24, scope: !2911)
!2934 = !DILocation(line: 923, column: 27, scope: !2911)
!2935 = !DILocation(line: 923, column: 31, scope: !2911)
!2936 = !DILocation(line: 923, column: 38, scope: !2911)
!2937 = !DILocation(line: 923, column: 44, scope: !2911)
!2938 = !DILocation(line: 923, column: 51, scope: !2911)
!2939 = !DILocation(line: 923, column: 9, scope: !2911)
!2940 = !DILocation(line: 924, column: 5, scope: !2911)
!2941 = !DILocation(line: 927, column: 23, scope: !2822)
!2942 = !DILocation(line: 927, column: 5, scope: !2822)
!2943 = !DILocation(line: 928, column: 23, scope: !2822)
!2944 = !DILocation(line: 928, column: 5, scope: !2822)
!2945 = !DILocation(line: 931, column: 9, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2822, file: !910, line: 931, column: 9)
!2947 = !DILocation(line: 931, column: 9, scope: !2822)
!2948 = !DILocation(line: 932, column: 27, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2946, file: !910, line: 931, column: 19)
!2950 = !DILocation(line: 932, column: 9, scope: !2949)
!2951 = !DILocation(line: 933, column: 28, scope: !2949)
!2952 = !DILocation(line: 933, column: 31, scope: !2949)
!2953 = !DILocation(line: 933, column: 35, scope: !2949)
!2954 = !DILocation(line: 933, column: 9, scope: !2949)
!2955 = !DILocation(line: 934, column: 5, scope: !2949)
!2956 = !DILocation(line: 937, column: 23, scope: !2822)
!2957 = !DILocation(line: 937, column: 5, scope: !2822)
!2958 = !DILocation(line: 938, column: 26, scope: !2822)
!2959 = !DILocation(line: 938, column: 5, scope: !2822)
!2960 = !DILocation(line: 941, column: 19, scope: !2822)
!2961 = !DILocation(line: 941, column: 5, scope: !2822)
!2962 = !DILocation(line: 944, column: 23, scope: !2822)
!2963 = !DILocation(line: 944, column: 5, scope: !2822)
!2964 = !DILocation(line: 946, column: 5, scope: !2822)
!2965 = !DILocation(line: 947, column: 1, scope: !2822)
!2966 = distinct !DISubprogram(name: "flush_put_bits", scope: !1837, file: !1837, line: 101, type: !2967, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{null, !2969}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64, align: 64)
!2970 = !DILocalVariable(name: "s", arg: 1, scope: !2966, file: !1837, line: 101, type: !2969)
!2971 = !DILocation(line: 101, column: 50, scope: !2966)
!2972 = !DILocation(line: 104, column: 9, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2966, file: !1837, line: 104, column: 9)
!2974 = !DILocation(line: 104, column: 12, scope: !2973)
!2975 = !DILocation(line: 104, column: 21, scope: !2973)
!2976 = !DILocation(line: 104, column: 9, scope: !2966)
!2977 = !DILocation(line: 105, column: 24, scope: !2973)
!2978 = !DILocation(line: 105, column: 27, scope: !2973)
!2979 = !DILocation(line: 105, column: 9, scope: !2973)
!2980 = !DILocation(line: 105, column: 12, scope: !2973)
!2981 = !DILocation(line: 105, column: 20, scope: !2973)
!2982 = !DILocation(line: 107, column: 5, scope: !2966)
!2983 = !DILocation(line: 107, column: 12, scope: !2984)
!2984 = !DILexicalBlockFile(scope: !2966, file: !1837, discriminator: 1)
!2985 = !DILocation(line: 107, column: 15, scope: !2984)
!2986 = !DILocation(line: 107, column: 24, scope: !2984)
!2987 = !DILocation(line: 107, column: 5, scope: !2984)
!2988 = !DILocation(line: 108, column: 9, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2966, file: !1837, line: 107, column: 30)
!2990 = distinct !{!2990, !2988}
!2991 = !DILocation(line: 108, column: 20, scope: !2992)
!2992 = !DILexicalBlockFile(scope: !2993, file: !1837, discriminator: 1)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !1837, line: 108, column: 18)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !1837, line: 108, column: 12)
!2995 = !DILocation(line: 108, column: 23, scope: !2992)
!2996 = !DILocation(line: 108, column: 33, scope: !2992)
!2997 = !DILocation(line: 108, column: 36, scope: !2992)
!2998 = !DILocation(line: 108, column: 31, scope: !2992)
!2999 = !DILocation(line: 108, column: 18, scope: !2992)
!3000 = !DILocation(line: 108, column: 48, scope: !3001)
!3001 = !DILexicalBlockFile(scope: !3002, file: !1837, discriminator: 2)
!3002 = distinct !DILexicalBlock(scope: !2993, file: !1837, line: 108, column: 46)
!3003 = !DILocation(line: 108, column: 105, scope: !3004)
!3004 = !DILexicalBlockFile(scope: !3001, file: !1837, discriminator: 4)
!3005 = !DILocation(line: 108, column: 105, scope: !3001)
!3006 = !DILocation(line: 108, column: 116, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !2994, file: !1837, discriminator: 3)
!3008 = !DILocation(line: 113, column: 25, scope: !2989)
!3009 = !DILocation(line: 113, column: 28, scope: !2989)
!3010 = !DILocation(line: 113, column: 36, scope: !2989)
!3011 = !DILocation(line: 113, column: 10, scope: !2989)
!3012 = !DILocation(line: 113, column: 13, scope: !2989)
!3013 = !DILocation(line: 113, column: 20, scope: !2989)
!3014 = !DILocation(line: 113, column: 23, scope: !2989)
!3015 = !DILocation(line: 114, column: 9, scope: !2989)
!3016 = !DILocation(line: 114, column: 12, scope: !2989)
!3017 = !DILocation(line: 114, column: 20, scope: !2989)
!3018 = !DILocation(line: 116, column: 9, scope: !2989)
!3019 = !DILocation(line: 116, column: 12, scope: !2989)
!3020 = !DILocation(line: 116, column: 21, scope: !2989)
!3021 = !DILocation(line: 107, column: 5, scope: !3022)
!3022 = !DILexicalBlockFile(scope: !2966, file: !1837, discriminator: 2)
!3023 = distinct !{!3023, !2982}
!3024 = !DILocation(line: 118, column: 5, scope: !2966)
!3025 = !DILocation(line: 118, column: 8, scope: !2966)
!3026 = !DILocation(line: 118, column: 17, scope: !2966)
!3027 = !DILocation(line: 119, column: 5, scope: !2966)
!3028 = !DILocation(line: 119, column: 8, scope: !2966)
!3029 = !DILocation(line: 119, column: 16, scope: !2966)
!3030 = !DILocation(line: 120, column: 1, scope: !2966)
!3031 = distinct !DISubprogram(name: "put_bits_count", scope: !1837, file: !1837, line: 85, type: !3032, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!936, !2969}
!3034 = !DILocalVariable(name: "s", arg: 1, scope: !3031, file: !1837, line: 85, type: !2969)
!3035 = !DILocation(line: 85, column: 49, scope: !3031)
!3036 = !DILocation(line: 87, column: 13, scope: !3031)
!3037 = !DILocation(line: 87, column: 16, scope: !3031)
!3038 = !DILocation(line: 87, column: 26, scope: !3031)
!3039 = !DILocation(line: 87, column: 29, scope: !3031)
!3040 = !DILocation(line: 87, column: 24, scope: !3031)
!3041 = !DILocation(line: 87, column: 34, scope: !3031)
!3042 = !DILocation(line: 87, column: 38, scope: !3031)
!3043 = !DILocation(line: 87, column: 45, scope: !3031)
!3044 = !DILocation(line: 87, column: 48, scope: !3031)
!3045 = !DILocation(line: 87, column: 43, scope: !3031)
!3046 = !DILocation(line: 87, column: 12, scope: !3031)
!3047 = !DILocation(line: 87, column: 5, scope: !3031)
!3048 = distinct !DISubprogram(name: "dwt_plane", scope: !910, file: !910, line: 838, type: !3049, isLocal: true, isDefinition: true, scopeLine: 839, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!936, !1088, !955}
!3051 = !DILocalVariable(name: "avctx", arg: 1, scope: !3048, file: !910, line: 838, type: !1088)
!3052 = !DILocation(line: 838, column: 38, scope: !3048)
!3053 = !DILocalVariable(name: "arg", arg: 2, scope: !3048, file: !910, line: 838, type: !955)
!3054 = !DILocation(line: 838, column: 51, scope: !3048)
!3055 = !DILocalVariable(name: "transform_dat", scope: !3048, file: !910, line: 840, type: !3056)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64, align: 64)
!3057 = !DILocation(line: 840, column: 20, scope: !3048)
!3058 = !DILocation(line: 840, column: 36, scope: !3048)
!3059 = !DILocalVariable(name: "s", scope: !3048, file: !910, line: 841, type: !1829)
!3060 = !DILocation(line: 841, column: 20, scope: !3048)
!3061 = !DILocation(line: 841, column: 24, scope: !3048)
!3062 = !DILocation(line: 841, column: 39, scope: !3048)
!3063 = !DILocalVariable(name: "frame_data", scope: !3048, file: !910, line: 842, type: !3064)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64, align: 64)
!3065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3066 = !DILocation(line: 842, column: 17, scope: !3048)
!3067 = !DILocation(line: 842, column: 30, scope: !3048)
!3068 = !DILocation(line: 842, column: 45, scope: !3048)
!3069 = !DILocalVariable(name: "linesize", scope: !3048, file: !910, line: 843, type: !3070)
!3070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1770)
!3071 = !DILocation(line: 843, column: 21, scope: !3048)
!3072 = !DILocation(line: 843, column: 32, scope: !3048)
!3073 = !DILocation(line: 843, column: 47, scope: !3048)
!3074 = !DILocalVariable(name: "field", scope: !3048, file: !910, line: 844, type: !989)
!3075 = !DILocation(line: 844, column: 15, scope: !3048)
!3076 = !DILocation(line: 844, column: 23, scope: !3048)
!3077 = !DILocation(line: 844, column: 38, scope: !3048)
!3078 = !DILocalVariable(name: "p", scope: !3048, file: !910, line: 845, type: !3079)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64, align: 64)
!3080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!3081 = !DILocation(line: 845, column: 18, scope: !3048)
!3082 = !DILocation(line: 845, column: 22, scope: !3048)
!3083 = !DILocation(line: 845, column: 37, scope: !3048)
!3084 = !DILocalVariable(name: "t", scope: !3048, file: !910, line: 846, type: !3085)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!3086 = !DILocation(line: 846, column: 26, scope: !3048)
!3087 = !DILocation(line: 846, column: 31, scope: !3048)
!3088 = !DILocation(line: 846, column: 46, scope: !3048)
!3089 = !DILocalVariable(name: "buf", scope: !3048, file: !910, line: 847, type: !1765)
!3090 = !DILocation(line: 847, column: 14, scope: !3048)
!3091 = !DILocation(line: 847, column: 20, scope: !3048)
!3092 = !DILocation(line: 847, column: 23, scope: !3048)
!3093 = !DILocalVariable(name: "idx", scope: !3048, file: !910, line: 848, type: !989)
!3094 = !DILocation(line: 848, column: 15, scope: !3048)
!3095 = !DILocation(line: 848, column: 21, scope: !3048)
!3096 = !DILocation(line: 848, column: 24, scope: !3048)
!3097 = !DILocalVariable(name: "skip", scope: !3048, file: !910, line: 849, type: !989)
!3098 = !DILocation(line: 849, column: 15, scope: !3048)
!3099 = !DILocation(line: 849, column: 26, scope: !3048)
!3100 = !DILocation(line: 849, column: 29, scope: !3048)
!3101 = !DILocation(line: 849, column: 24, scope: !3048)
!3102 = !DILocalVariable(name: "x", scope: !3048, file: !910, line: 851, type: !936)
!3103 = !DILocation(line: 851, column: 9, scope: !3048)
!3104 = !DILocalVariable(name: "y", scope: !3048, file: !910, line: 851, type: !936)
!3105 = !DILocation(line: 851, column: 12, scope: !3048)
!3106 = !DILocalVariable(name: "level", scope: !3048, file: !910, line: 851, type: !936)
!3107 = !DILocation(line: 851, column: 15, scope: !3048)
!3108 = !DILocalVariable(name: "offset", scope: !3048, file: !910, line: 851, type: !936)
!3109 = !DILocation(line: 851, column: 22, scope: !3048)
!3110 = !DILocalVariable(name: "pix_stride", scope: !3048, file: !910, line: 852, type: !1770)
!3111 = !DILocation(line: 852, column: 15, scope: !3048)
!3112 = !DILocation(line: 852, column: 28, scope: !3048)
!3113 = !DILocation(line: 852, column: 41, scope: !3048)
!3114 = !DILocation(line: 852, column: 44, scope: !3048)
!3115 = !DILocation(line: 852, column: 48, scope: !3048)
!3116 = !DILocation(line: 852, column: 37, scope: !3048)
!3117 = !DILocation(line: 854, column: 9, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3048, file: !910, line: 854, column: 9)
!3119 = !DILocation(line: 854, column: 15, scope: !3118)
!3120 = !DILocation(line: 854, column: 9, scope: !3048)
!3121 = !DILocation(line: 855, column: 16, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3118, file: !910, line: 854, column: 21)
!3123 = !DILocation(line: 856, column: 20, scope: !3122)
!3124 = !DILocation(line: 857, column: 5, scope: !3122)
!3125 = !DILocation(line: 857, column: 16, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !3127, file: !910, discriminator: 1)
!3127 = distinct !DILexicalBlock(scope: !3118, file: !910, line: 857, column: 16)
!3128 = !DILocation(line: 857, column: 22, scope: !3126)
!3129 = !DILocation(line: 858, column: 18, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !910, line: 857, column: 28)
!3131 = !DILocation(line: 858, column: 16, scope: !3130)
!3132 = !DILocation(line: 859, column: 20, scope: !3130)
!3133 = !DILocation(line: 860, column: 5, scope: !3130)
!3134 = !DILocation(line: 861, column: 16, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3127, file: !910, line: 860, column: 12)
!3136 = !DILocation(line: 864, column: 9, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3048, file: !910, line: 864, column: 9)
!3138 = !DILocation(line: 864, column: 12, scope: !3137)
!3139 = !DILocation(line: 864, column: 16, scope: !3137)
!3140 = !DILocation(line: 864, column: 9, scope: !3048)
!3141 = !DILocalVariable(name: "pix", scope: !3142, file: !910, line: 865, type: !938)
!3142 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 864, column: 22)
!3143 = !DILocation(line: 865, column: 24, scope: !3142)
!3144 = !DILocation(line: 865, column: 47, scope: !3142)
!3145 = !DILocation(line: 865, column: 60, scope: !3142)
!3146 = !DILocation(line: 865, column: 58, scope: !3142)
!3147 = !DILocation(line: 866, column: 16, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3142, file: !910, line: 866, column: 9)
!3149 = !DILocation(line: 866, column: 14, scope: !3148)
!3150 = !DILocation(line: 866, column: 21, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3152, file: !910, discriminator: 1)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !910, line: 866, column: 9)
!3153 = !DILocation(line: 866, column: 25, scope: !3151)
!3154 = !DILocation(line: 866, column: 28, scope: !3151)
!3155 = !DILocation(line: 866, column: 35, scope: !3151)
!3156 = !DILocation(line: 866, column: 34, scope: !3151)
!3157 = !DILocation(line: 866, column: 23, scope: !3151)
!3158 = !DILocation(line: 866, column: 9, scope: !3151)
!3159 = !DILocation(line: 867, column: 20, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !910, line: 867, column: 13)
!3161 = distinct !DILexicalBlock(scope: !3152, file: !910, line: 866, column: 50)
!3162 = !DILocation(line: 867, column: 18, scope: !3160)
!3163 = !DILocation(line: 867, column: 25, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3165, file: !910, discriminator: 1)
!3165 = distinct !DILexicalBlock(scope: !3160, file: !910, line: 867, column: 13)
!3166 = !DILocation(line: 867, column: 29, scope: !3164)
!3167 = !DILocation(line: 867, column: 32, scope: !3164)
!3168 = !DILocation(line: 867, column: 27, scope: !3164)
!3169 = !DILocation(line: 867, column: 13, scope: !3164)
!3170 = !DILocation(line: 868, column: 30, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3165, file: !910, line: 867, column: 44)
!3172 = !DILocation(line: 868, column: 26, scope: !3171)
!3173 = !DILocation(line: 868, column: 35, scope: !3171)
!3174 = !DILocation(line: 868, column: 38, scope: !3171)
!3175 = !DILocation(line: 868, column: 33, scope: !3171)
!3176 = !DILocation(line: 868, column: 21, scope: !3171)
!3177 = !DILocation(line: 868, column: 17, scope: !3171)
!3178 = !DILocation(line: 868, column: 24, scope: !3171)
!3179 = !DILocation(line: 869, column: 13, scope: !3171)
!3180 = !DILocation(line: 867, column: 40, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3165, file: !910, discriminator: 2)
!3182 = !DILocation(line: 867, column: 13, scope: !3181)
!3183 = distinct !{!3183, !3184}
!3184 = !DILocation(line: 867, column: 13, scope: !3161)
!3185 = !DILocation(line: 870, column: 20, scope: !3161)
!3186 = !DILocation(line: 870, column: 23, scope: !3161)
!3187 = !DILocation(line: 870, column: 17, scope: !3161)
!3188 = !DILocation(line: 871, column: 20, scope: !3161)
!3189 = !DILocation(line: 871, column: 17, scope: !3161)
!3190 = !DILocation(line: 872, column: 9, scope: !3161)
!3191 = !DILocation(line: 866, column: 44, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3152, file: !910, discriminator: 2)
!3193 = !DILocation(line: 866, column: 42, scope: !3192)
!3194 = !DILocation(line: 866, column: 9, scope: !3192)
!3195 = distinct !{!3195, !3196}
!3196 = !DILocation(line: 866, column: 9, scope: !3142)
!3197 = !DILocation(line: 873, column: 5, scope: !3142)
!3198 = !DILocalVariable(name: "pix", scope: !3199, file: !910, line: 874, type: !943)
!3199 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 873, column: 12)
!3200 = !DILocation(line: 874, column: 25, scope: !3199)
!3201 = !DILocation(line: 874, column: 49, scope: !3199)
!3202 = !DILocation(line: 874, column: 31, scope: !3199)
!3203 = !DILocation(line: 874, column: 62, scope: !3199)
!3204 = !DILocation(line: 874, column: 60, scope: !3199)
!3205 = !DILocation(line: 875, column: 16, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3199, file: !910, line: 875, column: 9)
!3207 = !DILocation(line: 875, column: 14, scope: !3206)
!3208 = !DILocation(line: 875, column: 21, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !3210, file: !910, discriminator: 1)
!3210 = distinct !DILexicalBlock(scope: !3206, file: !910, line: 875, column: 9)
!3211 = !DILocation(line: 875, column: 25, scope: !3209)
!3212 = !DILocation(line: 875, column: 28, scope: !3209)
!3213 = !DILocation(line: 875, column: 35, scope: !3209)
!3214 = !DILocation(line: 875, column: 34, scope: !3209)
!3215 = !DILocation(line: 875, column: 23, scope: !3209)
!3216 = !DILocation(line: 875, column: 9, scope: !3209)
!3217 = !DILocation(line: 876, column: 20, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !910, line: 876, column: 13)
!3219 = distinct !DILexicalBlock(scope: !3210, file: !910, line: 875, column: 50)
!3220 = !DILocation(line: 876, column: 18, scope: !3218)
!3221 = !DILocation(line: 876, column: 25, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !3223, file: !910, discriminator: 1)
!3223 = distinct !DILexicalBlock(scope: !3218, file: !910, line: 876, column: 13)
!3224 = !DILocation(line: 876, column: 29, scope: !3222)
!3225 = !DILocation(line: 876, column: 32, scope: !3222)
!3226 = !DILocation(line: 876, column: 27, scope: !3222)
!3227 = !DILocation(line: 876, column: 13, scope: !3222)
!3228 = !DILocation(line: 877, column: 30, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3223, file: !910, line: 876, column: 44)
!3230 = !DILocation(line: 877, column: 26, scope: !3229)
!3231 = !DILocation(line: 877, column: 35, scope: !3229)
!3232 = !DILocation(line: 877, column: 38, scope: !3229)
!3233 = !DILocation(line: 877, column: 33, scope: !3229)
!3234 = !DILocation(line: 877, column: 21, scope: !3229)
!3235 = !DILocation(line: 877, column: 17, scope: !3229)
!3236 = !DILocation(line: 877, column: 24, scope: !3229)
!3237 = !DILocation(line: 878, column: 13, scope: !3229)
!3238 = !DILocation(line: 876, column: 40, scope: !3239)
!3239 = !DILexicalBlockFile(scope: !3223, file: !910, discriminator: 2)
!3240 = !DILocation(line: 876, column: 13, scope: !3239)
!3241 = distinct !{!3241, !3242}
!3242 = !DILocation(line: 876, column: 13, scope: !3219)
!3243 = !DILocation(line: 879, column: 20, scope: !3219)
!3244 = !DILocation(line: 879, column: 23, scope: !3219)
!3245 = !DILocation(line: 879, column: 17, scope: !3219)
!3246 = !DILocation(line: 880, column: 20, scope: !3219)
!3247 = !DILocation(line: 880, column: 17, scope: !3219)
!3248 = !DILocation(line: 881, column: 9, scope: !3219)
!3249 = !DILocation(line: 875, column: 44, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3210, file: !910, discriminator: 2)
!3251 = !DILocation(line: 875, column: 42, scope: !3250)
!3252 = !DILocation(line: 875, column: 9, scope: !3250)
!3253 = distinct !{!3253, !3254}
!3254 = !DILocation(line: 875, column: 9, scope: !3199)
!3255 = !DILocation(line: 884, column: 12, scope: !3048)
!3256 = !DILocation(line: 884, column: 5, scope: !3048)
!3257 = !DILocation(line: 884, column: 20, scope: !3048)
!3258 = !DILocation(line: 884, column: 23, scope: !3048)
!3259 = !DILocation(line: 884, column: 38, scope: !3048)
!3260 = !DILocation(line: 884, column: 41, scope: !3048)
!3261 = !DILocation(line: 884, column: 54, scope: !3048)
!3262 = !DILocation(line: 884, column: 57, scope: !3048)
!3263 = !DILocation(line: 884, column: 52, scope: !3048)
!3264 = !DILocation(line: 884, column: 37, scope: !3048)
!3265 = !DILocation(line: 884, column: 35, scope: !3048)
!3266 = !DILocation(line: 884, column: 65, scope: !3048)
!3267 = !DILocation(line: 886, column: 18, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3048, file: !910, line: 886, column: 5)
!3269 = !DILocation(line: 886, column: 21, scope: !3268)
!3270 = !DILocation(line: 886, column: 34, scope: !3268)
!3271 = !DILocation(line: 886, column: 16, scope: !3268)
!3272 = !DILocation(line: 886, column: 10, scope: !3268)
!3273 = !DILocation(line: 886, column: 38, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3275, file: !910, discriminator: 1)
!3275 = distinct !DILexicalBlock(scope: !3268, file: !910, line: 886, column: 5)
!3276 = !DILocation(line: 886, column: 44, scope: !3274)
!3277 = !DILocation(line: 886, column: 5, scope: !3274)
!3278 = !DILocalVariable(name: "b", scope: !3279, file: !910, line: 887, type: !3280)
!3279 = distinct !DILexicalBlock(scope: !3275, file: !910, line: 886, column: 59)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64, align: 64)
!3281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!3282 = !DILocation(line: 887, column: 24, scope: !3279)
!3283 = !DILocation(line: 887, column: 37, scope: !3279)
!3284 = !DILocation(line: 887, column: 29, scope: !3279)
!3285 = !DILocation(line: 887, column: 32, scope: !3279)
!3286 = !DILocation(line: 888, column: 28, scope: !3279)
!3287 = !DILocation(line: 888, column: 9, scope: !3279)
!3288 = !DILocation(line: 888, column: 12, scope: !3279)
!3289 = !DILocation(line: 888, column: 33, scope: !3279)
!3290 = !DILocation(line: 888, column: 36, scope: !3279)
!3291 = !DILocation(line: 888, column: 39, scope: !3279)
!3292 = !DILocation(line: 888, column: 49, scope: !3279)
!3293 = !DILocation(line: 888, column: 52, scope: !3279)
!3294 = !DILocation(line: 889, column: 33, scope: !3279)
!3295 = !DILocation(line: 889, column: 36, scope: !3279)
!3296 = !DILocation(line: 889, column: 43, scope: !3279)
!3297 = !DILocation(line: 889, column: 46, scope: !3279)
!3298 = !DILocation(line: 890, column: 5, scope: !3279)
!3299 = !DILocation(line: 886, column: 55, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3275, file: !910, discriminator: 2)
!3301 = !DILocation(line: 886, column: 5, scope: !3300)
!3302 = distinct !{!3302, !3303}
!3303 = !DILocation(line: 886, column: 5, scope: !3048)
!3304 = !DILocation(line: 892, column: 5, scope: !3048)
!3305 = distinct !DISubprogram(name: "calc_slice_sizes", scope: !910, file: !910, line: 643, type: !3306, isLocal: true, isDefinition: true, scopeLine: 644, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{!936, !1829}
!3308 = !DILocalVariable(name: "s", arg: 1, scope: !3305, file: !910, line: 643, type: !1829)
!3309 = !DILocation(line: 643, column: 44, scope: !3305)
!3310 = !DILocalVariable(name: "i", scope: !3305, file: !910, line: 645, type: !936)
!3311 = !DILocation(line: 645, column: 9, scope: !3305)
!3312 = !DILocalVariable(name: "j", scope: !3305, file: !910, line: 645, type: !936)
!3313 = !DILocation(line: 645, column: 12, scope: !3305)
!3314 = !DILocalVariable(name: "slice_x", scope: !3305, file: !910, line: 645, type: !936)
!3315 = !DILocation(line: 645, column: 15, scope: !3305)
!3316 = !DILocalVariable(name: "slice_y", scope: !3305, file: !910, line: 645, type: !936)
!3317 = !DILocation(line: 645, column: 24, scope: !3305)
!3318 = !DILocalVariable(name: "bytes_left", scope: !3305, file: !910, line: 645, type: !936)
!3319 = !DILocation(line: 645, column: 33, scope: !3305)
!3320 = !DILocalVariable(name: "bytes_top", scope: !3305, file: !910, line: 646, type: !3321)
!3321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 4800, align: 32, elements: !3322)
!3322 = !{!3323}
!3323 = !DISubrange(count: 150)
!3324 = !DILocation(line: 646, column: 9, scope: !3305)
!3325 = !DILocalVariable(name: "total_bytes_needed", scope: !3305, file: !910, line: 647, type: !1021)
!3326 = !DILocation(line: 647, column: 13, scope: !3305)
!3327 = !DILocalVariable(name: "slice_redist_range", scope: !3305, file: !910, line: 648, type: !936)
!3328 = !DILocation(line: 648, column: 9, scope: !3305)
!3329 = !DILocation(line: 648, column: 40, scope: !3305)
!3330 = !DILocation(line: 648, column: 43, scope: !3305)
!3331 = !DILocation(line: 648, column: 49, scope: !3305)
!3332 = !DILocation(line: 648, column: 52, scope: !3305)
!3333 = !DILocation(line: 648, column: 48, scope: !3305)
!3334 = !DILocation(line: 648, column: 37, scope: !3305)
!3335 = !DILocation(line: 648, column: 31, scope: !3305)
!3336 = !DILocation(line: 648, column: 62, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !3305, file: !910, discriminator: 1)
!3338 = !DILocation(line: 648, column: 65, scope: !3337)
!3339 = !DILocation(line: 648, column: 71, scope: !3337)
!3340 = !DILocation(line: 648, column: 74, scope: !3337)
!3341 = !DILocation(line: 648, column: 70, scope: !3337)
!3342 = !DILocation(line: 648, column: 31, scope: !3337)
!3343 = !DILocation(line: 648, column: 31, scope: !3344)
!3344 = !DILexicalBlockFile(scope: !3305, file: !910, discriminator: 2)
!3345 = !DILocation(line: 648, column: 31, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !3305, file: !910, discriminator: 3)
!3347 = !DILocation(line: 648, column: 9, scope: !3346)
!3348 = !DILocalVariable(name: "enc_args", scope: !3305, file: !910, line: 649, type: !1858)
!3349 = !DILocation(line: 649, column: 16, scope: !3305)
!3350 = !DILocation(line: 649, column: 27, scope: !3305)
!3351 = !DILocation(line: 649, column: 30, scope: !3305)
!3352 = !DILocalVariable(name: "top_loc", scope: !3305, file: !910, line: 650, type: !3353)
!3353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1858, size: 9600, align: 64, elements: !3322)
!3354 = !DILocation(line: 650, column: 16, scope: !3305)
!3355 = !DILocation(line: 652, column: 23, scope: !3305)
!3356 = !DILocation(line: 652, column: 5, scope: !3305)
!3357 = !DILocation(line: 654, column: 18, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3305, file: !910, line: 654, column: 5)
!3359 = !DILocation(line: 654, column: 10, scope: !3358)
!3360 = !DILocation(line: 654, column: 23, scope: !3361)
!3361 = !DILexicalBlockFile(scope: !3362, file: !910, discriminator: 1)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !910, line: 654, column: 5)
!3363 = !DILocation(line: 654, column: 33, scope: !3361)
!3364 = !DILocation(line: 654, column: 36, scope: !3361)
!3365 = !DILocation(line: 654, column: 31, scope: !3361)
!3366 = !DILocation(line: 654, column: 5, scope: !3361)
!3367 = !DILocation(line: 655, column: 22, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !910, line: 655, column: 9)
!3369 = distinct !DILexicalBlock(scope: !3362, file: !910, line: 654, column: 54)
!3370 = !DILocation(line: 655, column: 14, scope: !3368)
!3371 = !DILocation(line: 655, column: 27, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3373, file: !910, discriminator: 1)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !910, line: 655, column: 9)
!3374 = !DILocation(line: 655, column: 37, scope: !3372)
!3375 = !DILocation(line: 655, column: 40, scope: !3372)
!3376 = !DILocation(line: 655, column: 35, scope: !3372)
!3377 = !DILocation(line: 655, column: 9, scope: !3372)
!3378 = !DILocalVariable(name: "args", scope: !3379, file: !910, line: 656, type: !1858)
!3379 = distinct !DILexicalBlock(scope: !3373, file: !910, line: 655, column: 58)
!3380 = !DILocation(line: 656, column: 24, scope: !3379)
!3381 = !DILocation(line: 656, column: 41, scope: !3379)
!3382 = !DILocation(line: 656, column: 44, scope: !3379)
!3383 = !DILocation(line: 656, column: 50, scope: !3379)
!3384 = !DILocation(line: 656, column: 49, scope: !3379)
!3385 = !DILocation(line: 656, column: 60, scope: !3379)
!3386 = !DILocation(line: 656, column: 58, scope: !3379)
!3387 = !DILocation(line: 656, column: 32, scope: !3379)
!3388 = !DILocation(line: 657, column: 25, scope: !3379)
!3389 = !DILocation(line: 657, column: 13, scope: !3379)
!3390 = !DILocation(line: 657, column: 19, scope: !3379)
!3391 = !DILocation(line: 657, column: 23, scope: !3379)
!3392 = !DILocation(line: 658, column: 23, scope: !3379)
!3393 = !DILocation(line: 658, column: 13, scope: !3379)
!3394 = !DILocation(line: 658, column: 19, scope: !3379)
!3395 = !DILocation(line: 658, column: 21, scope: !3379)
!3396 = !DILocation(line: 659, column: 23, scope: !3379)
!3397 = !DILocation(line: 659, column: 13, scope: !3379)
!3398 = !DILocation(line: 659, column: 19, scope: !3379)
!3399 = !DILocation(line: 659, column: 21, scope: !3379)
!3400 = !DILocation(line: 660, column: 31, scope: !3379)
!3401 = !DILocation(line: 660, column: 34, scope: !3379)
!3402 = !DILocation(line: 660, column: 50, scope: !3379)
!3403 = !DILocation(line: 660, column: 13, scope: !3379)
!3404 = !DILocation(line: 660, column: 19, scope: !3379)
!3405 = !DILocation(line: 660, column: 29, scope: !3379)
!3406 = !DILocation(line: 661, column: 32, scope: !3379)
!3407 = !DILocation(line: 661, column: 35, scope: !3379)
!3408 = !DILocation(line: 661, column: 51, scope: !3379)
!3409 = !DILocation(line: 661, column: 13, scope: !3379)
!3410 = !DILocation(line: 661, column: 19, scope: !3379)
!3411 = !DILocation(line: 661, column: 30, scope: !3379)
!3412 = !DILocation(line: 662, column: 20, scope: !3379)
!3413 = !DILocation(line: 662, column: 26, scope: !3379)
!3414 = !DILocation(line: 662, column: 13, scope: !3379)
!3415 = !DILocation(line: 662, column: 36, scope: !3379)
!3416 = !DILocation(line: 662, column: 39, scope: !3379)
!3417 = !DILocation(line: 662, column: 45, scope: !3379)
!3418 = !DILocation(line: 663, column: 9, scope: !3379)
!3419 = !DILocation(line: 655, column: 54, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3373, file: !910, discriminator: 2)
!3421 = !DILocation(line: 655, column: 9, scope: !3420)
!3422 = distinct !{!3422, !3423}
!3423 = !DILocation(line: 655, column: 9, scope: !3369)
!3424 = !DILocation(line: 664, column: 5, scope: !3369)
!3425 = !DILocation(line: 654, column: 50, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3362, file: !910, discriminator: 2)
!3427 = !DILocation(line: 654, column: 5, scope: !3426)
!3428 = distinct !{!3428, !3429}
!3429 = !DILocation(line: 654, column: 5, scope: !3305)
!3430 = !DILocation(line: 667, column: 5, scope: !3305)
!3431 = !DILocation(line: 667, column: 8, scope: !3305)
!3432 = !DILocation(line: 667, column: 15, scope: !3305)
!3433 = !DILocation(line: 667, column: 23, scope: !3305)
!3434 = !DILocation(line: 667, column: 26, scope: !3305)
!3435 = !DILocation(line: 667, column: 47, scope: !3305)
!3436 = !DILocation(line: 667, column: 62, scope: !3305)
!3437 = !DILocation(line: 667, column: 65, scope: !3305)
!3438 = !DILocation(line: 667, column: 71, scope: !3305)
!3439 = !DILocation(line: 667, column: 74, scope: !3305)
!3440 = !DILocation(line: 667, column: 70, scope: !3305)
!3441 = !DILocation(line: 670, column: 12, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3305, file: !910, line: 670, column: 5)
!3443 = !DILocation(line: 670, column: 10, scope: !3442)
!3444 = !DILocation(line: 670, column: 17, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3446, file: !910, discriminator: 1)
!3446 = distinct !DILexicalBlock(scope: !3442, file: !910, line: 670, column: 5)
!3447 = !DILocation(line: 670, column: 21, scope: !3445)
!3448 = !DILocation(line: 670, column: 24, scope: !3445)
!3449 = !DILocation(line: 670, column: 30, scope: !3445)
!3450 = !DILocation(line: 670, column: 33, scope: !3445)
!3451 = !DILocation(line: 670, column: 29, scope: !3445)
!3452 = !DILocation(line: 670, column: 19, scope: !3445)
!3453 = !DILocation(line: 670, column: 5, scope: !3445)
!3454 = !DILocalVariable(name: "args", scope: !3455, file: !910, line: 671, type: !1858)
!3455 = distinct !DILexicalBlock(scope: !3446, file: !910, line: 670, column: 45)
!3456 = !DILocation(line: 671, column: 20, scope: !3455)
!3457 = !DILocation(line: 671, column: 37, scope: !3455)
!3458 = !DILocation(line: 671, column: 28, scope: !3455)
!3459 = !DILocation(line: 672, column: 23, scope: !3455)
!3460 = !DILocation(line: 672, column: 29, scope: !3455)
!3461 = !DILocation(line: 672, column: 20, scope: !3455)
!3462 = !DILocation(line: 673, column: 16, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3455, file: !910, line: 673, column: 9)
!3464 = !DILocation(line: 673, column: 14, scope: !3463)
!3465 = !DILocation(line: 673, column: 21, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3467, file: !910, discriminator: 1)
!3467 = distinct !DILexicalBlock(scope: !3463, file: !910, line: 673, column: 9)
!3468 = !DILocation(line: 673, column: 25, scope: !3466)
!3469 = !DILocation(line: 673, column: 23, scope: !3466)
!3470 = !DILocation(line: 673, column: 9, scope: !3466)
!3471 = !DILocation(line: 674, column: 17, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !910, line: 674, column: 17)
!3473 = distinct !DILexicalBlock(scope: !3467, file: !910, line: 673, column: 50)
!3474 = !DILocation(line: 674, column: 23, scope: !3472)
!3475 = !DILocation(line: 674, column: 41, scope: !3472)
!3476 = !DILocation(line: 674, column: 31, scope: !3472)
!3477 = !DILocation(line: 674, column: 29, scope: !3472)
!3478 = !DILocation(line: 674, column: 17, scope: !3473)
!3479 = !DILocation(line: 675, column: 32, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3472, file: !910, line: 674, column: 45)
!3481 = !DILocation(line: 675, column: 38, scope: !3480)
!3482 = !DILocation(line: 675, column: 27, scope: !3480)
!3483 = !DILocation(line: 675, column: 17, scope: !3480)
!3484 = !DILocation(line: 675, column: 30, scope: !3480)
!3485 = !DILocation(line: 676, column: 30, scope: !3480)
!3486 = !DILocation(line: 676, column: 25, scope: !3480)
!3487 = !DILocation(line: 676, column: 17, scope: !3480)
!3488 = !DILocation(line: 676, column: 28, scope: !3480)
!3489 = !DILocation(line: 677, column: 17, scope: !3480)
!3490 = !DILocation(line: 679, column: 9, scope: !3473)
!3491 = !DILocation(line: 673, column: 46, scope: !3492)
!3492 = !DILexicalBlockFile(scope: !3467, file: !910, discriminator: 2)
!3493 = !DILocation(line: 673, column: 9, scope: !3492)
!3494 = distinct !{!3494, !3495}
!3495 = !DILocation(line: 673, column: 9, scope: !3455)
!3496 = !DILocation(line: 680, column: 5, scope: !3455)
!3497 = !DILocation(line: 670, column: 41, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3446, file: !910, discriminator: 2)
!3499 = !DILocation(line: 670, column: 5, scope: !3498)
!3500 = distinct !{!3500, !3501}
!3501 = !DILocation(line: 670, column: 5, scope: !3305)
!3502 = !DILocation(line: 682, column: 18, scope: !3305)
!3503 = !DILocation(line: 682, column: 21, scope: !3305)
!3504 = !DILocation(line: 682, column: 39, scope: !3305)
!3505 = !DILocation(line: 682, column: 37, scope: !3305)
!3506 = !DILocation(line: 682, column: 16, scope: !3305)
!3507 = !DILocation(line: 685, column: 5, scope: !3305)
!3508 = !DILocation(line: 685, column: 12, scope: !3337)
!3509 = !DILocation(line: 685, column: 23, scope: !3337)
!3510 = !DILocation(line: 685, column: 5, scope: !3337)
!3511 = !DILocalVariable(name: "distributed", scope: !3512, file: !910, line: 686, type: !936)
!3512 = distinct !DILexicalBlock(scope: !3305, file: !910, line: 685, column: 28)
!3513 = !DILocation(line: 686, column: 13, scope: !3512)
!3514 = !DILocation(line: 687, column: 16, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !910, line: 687, column: 9)
!3516 = !DILocation(line: 687, column: 14, scope: !3515)
!3517 = !DILocation(line: 687, column: 21, scope: !3518)
!3518 = !DILexicalBlockFile(scope: !3519, file: !910, discriminator: 1)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !910, line: 687, column: 9)
!3520 = !DILocation(line: 687, column: 25, scope: !3518)
!3521 = !DILocation(line: 687, column: 23, scope: !3518)
!3522 = !DILocation(line: 687, column: 9, scope: !3518)
!3523 = !DILocalVariable(name: "args", scope: !3524, file: !910, line: 688, type: !1858)
!3524 = distinct !DILexicalBlock(scope: !3519, file: !910, line: 687, column: 50)
!3525 = !DILocation(line: 688, column: 24, scope: !3524)
!3526 = !DILocalVariable(name: "bits", scope: !3524, file: !910, line: 689, type: !936)
!3527 = !DILocation(line: 689, column: 17, scope: !3524)
!3528 = !DILocalVariable(name: "bytes", scope: !3524, file: !910, line: 689, type: !936)
!3529 = !DILocation(line: 689, column: 23, scope: !3524)
!3530 = !DILocalVariable(name: "diff", scope: !3524, file: !910, line: 689, type: !936)
!3531 = !DILocation(line: 689, column: 30, scope: !3524)
!3532 = !DILocalVariable(name: "prev_bytes", scope: !3524, file: !910, line: 689, type: !936)
!3533 = !DILocation(line: 689, column: 36, scope: !3524)
!3534 = !DILocalVariable(name: "new_idx", scope: !3524, file: !910, line: 689, type: !936)
!3535 = !DILocation(line: 689, column: 48, scope: !3524)
!3536 = !DILocation(line: 690, column: 17, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3524, file: !910, line: 690, column: 17)
!3538 = !DILocation(line: 690, column: 28, scope: !3537)
!3539 = !DILocation(line: 690, column: 17, scope: !3524)
!3540 = !DILocation(line: 691, column: 17, scope: !3537)
!3541 = !DILocation(line: 692, column: 26, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3524, file: !910, line: 692, column: 17)
!3543 = !DILocation(line: 692, column: 18, scope: !3542)
!3544 = !DILocation(line: 692, column: 29, scope: !3542)
!3545 = !DILocation(line: 692, column: 41, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3542, file: !910, discriminator: 1)
!3547 = !DILocation(line: 692, column: 33, scope: !3546)
!3548 = !DILocation(line: 692, column: 45, scope: !3546)
!3549 = !DILocation(line: 692, column: 17, scope: !3546)
!3550 = !DILocation(line: 693, column: 17, scope: !3542)
!3551 = !DILocation(line: 694, column: 28, scope: !3524)
!3552 = !DILocation(line: 694, column: 20, scope: !3524)
!3553 = !DILocation(line: 694, column: 18, scope: !3524)
!3554 = !DILocation(line: 695, column: 26, scope: !3524)
!3555 = !DILocation(line: 695, column: 32, scope: !3524)
!3556 = !DILocation(line: 695, column: 24, scope: !3524)
!3557 = !DILocation(line: 696, column: 25, scope: !3524)
!3558 = !DILocation(line: 696, column: 31, scope: !3524)
!3559 = !DILocation(line: 696, column: 41, scope: !3524)
!3560 = !DILocation(line: 696, column: 46, scope: !3524)
!3561 = !DILocation(line: 696, column: 24, scope: !3524)
!3562 = !DILocation(line: 696, column: 55, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3524, file: !910, discriminator: 1)
!3564 = !DILocation(line: 696, column: 61, scope: !3563)
!3565 = !DILocation(line: 696, column: 71, scope: !3563)
!3566 = !DILocation(line: 696, column: 24, scope: !3563)
!3567 = !DILocation(line: 696, column: 24, scope: !3568)
!3568 = !DILexicalBlockFile(scope: !3524, file: !910, discriminator: 2)
!3569 = !DILocation(line: 696, column: 24, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3524, file: !910, discriminator: 3)
!3571 = !DILocation(line: 696, column: 21, scope: !3570)
!3572 = !DILocation(line: 697, column: 35, scope: !3524)
!3573 = !DILocation(line: 697, column: 41, scope: !3524)
!3574 = !DILocation(line: 697, column: 20, scope: !3524)
!3575 = !DILocation(line: 697, column: 18, scope: !3524)
!3576 = !DILocation(line: 698, column: 26, scope: !3524)
!3577 = !DILocation(line: 698, column: 31, scope: !3524)
!3578 = !DILocation(line: 698, column: 39, scope: !3524)
!3579 = !DILocation(line: 698, column: 42, scope: !3524)
!3580 = !DILocation(line: 698, column: 37, scope: !3524)
!3581 = !DILocation(line: 698, column: 54, scope: !3524)
!3582 = !DILocation(line: 698, column: 61, scope: !3524)
!3583 = !DILocation(line: 698, column: 64, scope: !3524)
!3584 = !DILocation(line: 698, column: 76, scope: !3524)
!3585 = !DILocation(line: 698, column: 58, scope: !3524)
!3586 = !DILocation(line: 698, column: 57, scope: !3524)
!3587 = !DILocation(line: 698, column: 81, scope: !3524)
!3588 = !DILocation(line: 698, column: 87, scope: !3524)
!3589 = !DILocation(line: 698, column: 90, scope: !3524)
!3590 = !DILocation(line: 698, column: 85, scope: !3524)
!3591 = !DILocation(line: 698, column: 19, scope: !3524)
!3592 = !DILocation(line: 699, column: 20, scope: !3524)
!3593 = !DILocation(line: 699, column: 28, scope: !3524)
!3594 = !DILocation(line: 699, column: 26, scope: !3524)
!3595 = !DILocation(line: 699, column: 18, scope: !3524)
!3596 = !DILocation(line: 700, column: 18, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3524, file: !910, line: 700, column: 17)
!3598 = !DILocation(line: 700, column: 31, scope: !3597)
!3599 = !DILocation(line: 700, column: 29, scope: !3597)
!3600 = !DILocation(line: 700, column: 37, scope: !3597)
!3601 = !DILocation(line: 700, column: 17, scope: !3524)
!3602 = !DILocation(line: 701, column: 35, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !910, line: 700, column: 42)
!3604 = !DILocation(line: 701, column: 17, scope: !3603)
!3605 = !DILocation(line: 701, column: 23, scope: !3603)
!3606 = !DILocation(line: 701, column: 33, scope: !3603)
!3607 = !DILocation(line: 702, column: 31, scope: !3603)
!3608 = !DILocation(line: 702, column: 17, scope: !3603)
!3609 = !DILocation(line: 702, column: 23, scope: !3603)
!3610 = !DILocation(line: 702, column: 29, scope: !3603)
!3611 = !DILocation(line: 703, column: 31, scope: !3603)
!3612 = !DILocation(line: 703, column: 28, scope: !3603)
!3613 = !DILocation(line: 704, column: 28, scope: !3603)
!3614 = !DILocation(line: 705, column: 13, scope: !3603)
!3615 = !DILocation(line: 706, column: 9, scope: !3524)
!3616 = !DILocation(line: 687, column: 46, scope: !3617)
!3617 = !DILexicalBlockFile(scope: !3519, file: !910, discriminator: 2)
!3618 = !DILocation(line: 687, column: 9, scope: !3617)
!3619 = distinct !{!3619, !3620}
!3620 = !DILocation(line: 687, column: 9, scope: !3512)
!3621 = !DILocation(line: 707, column: 14, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3512, file: !910, line: 707, column: 13)
!3623 = !DILocation(line: 707, column: 13, scope: !3512)
!3624 = !DILocation(line: 708, column: 13, scope: !3622)
!3625 = !DILocation(line: 685, column: 5, scope: !3344)
!3626 = distinct !{!3626, !3507}
!3627 = !DILocation(line: 711, column: 12, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3305, file: !910, line: 711, column: 5)
!3629 = !DILocation(line: 711, column: 10, scope: !3628)
!3630 = !DILocation(line: 711, column: 17, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3632, file: !910, discriminator: 1)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !910, line: 711, column: 5)
!3633 = !DILocation(line: 711, column: 21, scope: !3631)
!3634 = !DILocation(line: 711, column: 24, scope: !3631)
!3635 = !DILocation(line: 711, column: 30, scope: !3631)
!3636 = !DILocation(line: 711, column: 33, scope: !3631)
!3637 = !DILocation(line: 711, column: 29, scope: !3631)
!3638 = !DILocation(line: 711, column: 19, scope: !3631)
!3639 = !DILocation(line: 711, column: 5, scope: !3631)
!3640 = !DILocalVariable(name: "args", scope: !3641, file: !910, line: 712, type: !1858)
!3641 = distinct !DILexicalBlock(scope: !3632, file: !910, line: 711, column: 45)
!3642 = !DILocation(line: 712, column: 20, scope: !3641)
!3643 = !DILocation(line: 712, column: 37, scope: !3641)
!3644 = !DILocation(line: 712, column: 28, scope: !3641)
!3645 = !DILocation(line: 713, column: 31, scope: !3641)
!3646 = !DILocation(line: 713, column: 37, scope: !3641)
!3647 = !DILocation(line: 713, column: 28, scope: !3641)
!3648 = !DILocation(line: 714, column: 21, scope: !3641)
!3649 = !DILocation(line: 714, column: 24, scope: !3641)
!3650 = !DILocation(line: 714, column: 32, scope: !3641)
!3651 = !DILocation(line: 714, column: 38, scope: !3641)
!3652 = !DILocation(line: 714, column: 30, scope: !3641)
!3653 = !DILocation(line: 714, column: 48, scope: !3641)
!3654 = !DILocation(line: 714, column: 9, scope: !3641)
!3655 = !DILocation(line: 714, column: 12, scope: !3641)
!3656 = !DILocation(line: 714, column: 18, scope: !3641)
!3657 = !DILocation(line: 715, column: 5, scope: !3641)
!3658 = !DILocation(line: 711, column: 41, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3632, file: !910, discriminator: 2)
!3660 = !DILocation(line: 711, column: 5, scope: !3659)
!3661 = distinct !{!3661, !3662}
!3662 = !DILocation(line: 711, column: 5, scope: !3305)
!3663 = !DILocation(line: 717, column: 12, scope: !3305)
!3664 = !DILocation(line: 717, column: 5, scope: !3305)
!3665 = distinct !DISubprogram(name: "init_put_bits", scope: !1837, file: !1837, line: 48, type: !3666, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{null, !2969, !1116, !936}
!3668 = !DILocalVariable(name: "s", arg: 1, scope: !3665, file: !1837, line: 48, type: !2969)
!3669 = !DILocation(line: 48, column: 49, scope: !3665)
!3670 = !DILocalVariable(name: "buffer", arg: 2, scope: !3665, file: !1837, line: 48, type: !1116)
!3671 = !DILocation(line: 48, column: 61, scope: !3665)
!3672 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !3665, file: !1837, line: 49, type: !936)
!3673 = !DILocation(line: 49, column: 38, scope: !3665)
!3674 = !DILocation(line: 51, column: 9, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3665, file: !1837, line: 51, column: 9)
!3676 = !DILocation(line: 51, column: 21, scope: !3675)
!3677 = !DILocation(line: 51, column: 9, scope: !3665)
!3678 = !DILocation(line: 52, column: 21, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3675, file: !1837, line: 51, column: 26)
!3680 = !DILocation(line: 53, column: 16, scope: !3679)
!3681 = !DILocation(line: 54, column: 5, scope: !3679)
!3682 = !DILocation(line: 56, column: 27, scope: !3665)
!3683 = !DILocation(line: 56, column: 25, scope: !3665)
!3684 = !DILocation(line: 56, column: 5, scope: !3665)
!3685 = !DILocation(line: 56, column: 8, scope: !3665)
!3686 = !DILocation(line: 56, column: 21, scope: !3665)
!3687 = !DILocation(line: 57, column: 14, scope: !3665)
!3688 = !DILocation(line: 57, column: 5, scope: !3665)
!3689 = !DILocation(line: 57, column: 8, scope: !3665)
!3690 = !DILocation(line: 57, column: 12, scope: !3665)
!3691 = !DILocation(line: 58, column: 18, scope: !3665)
!3692 = !DILocation(line: 58, column: 21, scope: !3665)
!3693 = !DILocation(line: 58, column: 27, scope: !3665)
!3694 = !DILocation(line: 58, column: 25, scope: !3665)
!3695 = !DILocation(line: 58, column: 5, scope: !3665)
!3696 = !DILocation(line: 58, column: 8, scope: !3665)
!3697 = !DILocation(line: 58, column: 16, scope: !3665)
!3698 = !DILocation(line: 59, column: 18, scope: !3665)
!3699 = !DILocation(line: 59, column: 21, scope: !3665)
!3700 = !DILocation(line: 59, column: 5, scope: !3665)
!3701 = !DILocation(line: 59, column: 8, scope: !3665)
!3702 = !DILocation(line: 59, column: 16, scope: !3665)
!3703 = !DILocation(line: 60, column: 5, scope: !3665)
!3704 = !DILocation(line: 60, column: 8, scope: !3665)
!3705 = !DILocation(line: 60, column: 17, scope: !3665)
!3706 = !DILocation(line: 61, column: 5, scope: !3665)
!3707 = !DILocation(line: 61, column: 8, scope: !3665)
!3708 = !DILocation(line: 61, column: 16, scope: !3665)
!3709 = !DILocation(line: 62, column: 1, scope: !3665)
!3710 = distinct !DISubprogram(name: "encode_parse_info", scope: !910, file: !910, line: 228, type: !3711, isLocal: true, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{null, !1829, !916}
!3713 = !DILocalVariable(name: "x", arg: 1, scope: !3714, file: !3715, line: 66, type: !954)
!3714 = distinct !DISubprogram(name: "av_bswap32", scope: !3715, file: !3715, line: 66, type: !3716, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3715 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!954, !954}
!3718 = !DILocation(line: 66, column: 98, scope: !3714, inlinedAt: !3719)
!3719 = distinct !DILocation(line: 244, column: 78, scope: !3710)
!3720 = !DILocalVariable(name: "s", arg: 1, scope: !3710, file: !910, line: 228, type: !1829)
!3721 = !DILocation(line: 228, column: 46, scope: !3710)
!3722 = !DILocalVariable(name: "pcode", arg: 2, scope: !3710, file: !910, line: 228, type: !916)
!3723 = !DILocation(line: 228, column: 70, scope: !3710)
!3724 = !DILocalVariable(name: "cur_pos", scope: !3710, file: !910, line: 230, type: !954)
!3725 = !DILocation(line: 230, column: 14, scope: !3710)
!3726 = !DILocalVariable(name: "dist", scope: !3710, file: !910, line: 230, type: !954)
!3727 = !DILocation(line: 230, column: 23, scope: !3710)
!3728 = !DILocation(line: 232, column: 28, scope: !3710)
!3729 = !DILocation(line: 232, column: 31, scope: !3710)
!3730 = !DILocation(line: 232, column: 5, scope: !3710)
!3731 = !DILocation(line: 234, column: 31, scope: !3710)
!3732 = !DILocation(line: 234, column: 34, scope: !3710)
!3733 = !DILocation(line: 234, column: 15, scope: !3710)
!3734 = !DILocation(line: 234, column: 38, scope: !3710)
!3735 = !DILocation(line: 234, column: 13, scope: !3710)
!3736 = !DILocation(line: 237, column: 24, scope: !3710)
!3737 = !DILocation(line: 237, column: 27, scope: !3710)
!3738 = !DILocation(line: 237, column: 5, scope: !3710)
!3739 = !DILocation(line: 240, column: 15, scope: !3710)
!3740 = !DILocation(line: 240, column: 18, scope: !3710)
!3741 = !DILocation(line: 240, column: 25, scope: !3710)
!3742 = !DILocation(line: 240, column: 5, scope: !3710)
!3743 = !DILocation(line: 243, column: 12, scope: !3710)
!3744 = !DILocation(line: 243, column: 22, scope: !3710)
!3745 = !DILocation(line: 243, column: 25, scope: !3710)
!3746 = !DILocation(line: 243, column: 20, scope: !3710)
!3747 = !DILocation(line: 243, column: 10, scope: !3710)
!3748 = !DILocation(line: 244, column: 89, scope: !3710)
!3749 = !DILocation(line: 244, column: 78, scope: !3710)
!3750 = !DILocation(line: 68, column: 16, scope: !3714, inlinedAt: !3719)
!3751 = !DILocation(line: 68, column: 19, scope: !3714, inlinedAt: !3719)
!3752 = !DILocation(line: 68, column: 24, scope: !3714, inlinedAt: !3719)
!3753 = !DILocation(line: 68, column: 38, scope: !3714, inlinedAt: !3719)
!3754 = !DILocation(line: 68, column: 41, scope: !3714, inlinedAt: !3719)
!3755 = !DILocation(line: 68, column: 46, scope: !3714, inlinedAt: !3719)
!3756 = !DILocation(line: 68, column: 34, scope: !3714, inlinedAt: !3719)
!3757 = !DILocation(line: 68, column: 57, scope: !3714, inlinedAt: !3719)
!3758 = !DILocation(line: 68, column: 69, scope: !3714, inlinedAt: !3719)
!3759 = !DILocation(line: 68, column: 72, scope: !3714, inlinedAt: !3719)
!3760 = !DILocation(line: 68, column: 79, scope: !3714, inlinedAt: !3719)
!3761 = !DILocation(line: 68, column: 84, scope: !3714, inlinedAt: !3719)
!3762 = !DILocation(line: 68, column: 99, scope: !3714, inlinedAt: !3719)
!3763 = !DILocation(line: 68, column: 102, scope: !3714, inlinedAt: !3719)
!3764 = !DILocation(line: 68, column: 109, scope: !3714, inlinedAt: !3719)
!3765 = !DILocation(line: 68, column: 114, scope: !3714, inlinedAt: !3719)
!3766 = !DILocation(line: 68, column: 94, scope: !3714, inlinedAt: !3719)
!3767 = !DILocation(line: 68, column: 63, scope: !3714, inlinedAt: !3719)
!3768 = !DILocation(line: 244, column: 32, scope: !3710)
!3769 = !DILocation(line: 244, column: 35, scope: !3710)
!3770 = !DILocation(line: 244, column: 38, scope: !3710)
!3771 = !DILocation(line: 244, column: 44, scope: !3710)
!3772 = !DILocation(line: 244, column: 47, scope: !3710)
!3773 = !DILocation(line: 244, column: 42, scope: !3710)
!3774 = !DILocation(line: 244, column: 65, scope: !3710)
!3775 = !DILocation(line: 244, column: 72, scope: !3710)
!3776 = !DILocation(line: 244, column: 75, scope: !3710)
!3777 = !DILocation(line: 245, column: 28, scope: !3710)
!3778 = !DILocation(line: 245, column: 5, scope: !3710)
!3779 = !DILocation(line: 245, column: 8, scope: !3710)
!3780 = !DILocation(line: 245, column: 26, scope: !3710)
!3781 = !DILocation(line: 246, column: 17, scope: !3710)
!3782 = !DILocation(line: 246, column: 20, scope: !3710)
!3783 = !DILocation(line: 246, column: 24, scope: !3710)
!3784 = !DILocation(line: 246, column: 30, scope: !3710)
!3785 = !DILocation(line: 246, column: 5, scope: !3710)
!3786 = !DILocation(line: 249, column: 17, scope: !3710)
!3787 = !DILocation(line: 249, column: 20, scope: !3710)
!3788 = !DILocation(line: 249, column: 24, scope: !3710)
!3789 = !DILocation(line: 249, column: 27, scope: !3710)
!3790 = !DILocation(line: 249, column: 43, scope: !3710)
!3791 = !DILocation(line: 249, column: 24, scope: !3792)
!3792 = !DILexicalBlockFile(scope: !3710, file: !910, discriminator: 1)
!3793 = !DILocation(line: 249, column: 73, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3710, file: !910, discriminator: 2)
!3795 = !DILocation(line: 249, column: 24, scope: !3794)
!3796 = !DILocation(line: 249, column: 24, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !3710, file: !910, discriminator: 3)
!3798 = !DILocation(line: 249, column: 5, scope: !3797)
!3799 = !DILocation(line: 251, column: 26, scope: !3710)
!3800 = !DILocation(line: 251, column: 5, scope: !3710)
!3801 = !DILocation(line: 251, column: 8, scope: !3710)
!3802 = !DILocation(line: 251, column: 24, scope: !3710)
!3803 = !DILocation(line: 252, column: 1, scope: !3710)
!3804 = distinct !DISubprogram(name: "encode_seq_header", scope: !910, file: !910, line: 400, type: !3805, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{null, !1829}
!3807 = !DILocalVariable(name: "pb", arg: 1, scope: !3808, file: !910, line: 183, type: !2969)
!3808 = distinct !DISubprogram(name: "put_vc2_ue_uint", scope: !910, file: !910, line: 183, type: !3809, isLocal: true, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !2969, !954}
!3811 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !3812)
!3812 = distinct !DILocation(line: 406, column: 5, scope: !3804)
!3813 = !DILocalVariable(name: "val", arg: 2, scope: !3808, file: !910, line: 183, type: !954)
!3814 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !3812)
!3815 = !DILocalVariable(name: "i", scope: !3808, file: !910, line: 185, type: !936)
!3816 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !3812)
!3817 = !DILocalVariable(name: "pbits", scope: !3808, file: !910, line: 186, type: !936)
!3818 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !3812)
!3819 = !DILocalVariable(name: "bits", scope: !3808, file: !910, line: 186, type: !936)
!3820 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !3812)
!3821 = !DILocalVariable(name: "topbit", scope: !3808, file: !910, line: 186, type: !936)
!3822 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !3812)
!3823 = !DILocalVariable(name: "maxval", scope: !3808, file: !910, line: 186, type: !936)
!3824 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !3812)
!3825 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !3826)
!3826 = distinct !DILocation(line: 404, column: 5, scope: !3804)
!3827 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !3826)
!3828 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !3826)
!3829 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !3826)
!3830 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !3826)
!3831 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !3826)
!3832 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !3826)
!3833 = !DILocalVariable(name: "s", arg: 1, scope: !3804, file: !910, line: 400, type: !1829)
!3834 = !DILocation(line: 400, column: 46, scope: !3804)
!3835 = !DILocation(line: 402, column: 28, scope: !3804)
!3836 = !DILocation(line: 402, column: 31, scope: !3804)
!3837 = !DILocation(line: 402, column: 5, scope: !3804)
!3838 = !DILocation(line: 403, column: 25, scope: !3804)
!3839 = !DILocation(line: 403, column: 5, scope: !3804)
!3840 = !DILocation(line: 404, column: 22, scope: !3804)
!3841 = !DILocation(line: 404, column: 25, scope: !3804)
!3842 = !DILocation(line: 404, column: 29, scope: !3804)
!3843 = !DILocation(line: 404, column: 32, scope: !3804)
!3844 = !DILocation(line: 404, column: 5, scope: !3804)
!3845 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !3826)
!3846 = distinct !DILexicalBlock(scope: !3808, file: !910, line: 188, column: 9)
!3847 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !3826)
!3848 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !3826)
!3849 = distinct !DILexicalBlock(scope: !3846, file: !910, line: 188, column: 17)
!3850 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !3826)
!3851 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !3826)
!3852 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !3826)
!3853 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !3826)
!3854 = !DILexicalBlockFile(scope: !3808, file: !910, discriminator: 1)
!3855 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !3826)
!3856 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !3826)
!3857 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !3826)
!3858 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !3826)
!3859 = distinct !DILexicalBlock(scope: !3808, file: !910, line: 193, column: 26)
!3860 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !3826)
!3861 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !3826)
!3862 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !3826)
!3863 = !DILexicalBlockFile(scope: !3808, file: !910, discriminator: 2)
!3864 = distinct !{!3864, !3865}
!3865 = !DILocation(line: 193, column: 5, scope: !3808)
!3866 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !3826)
!3867 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !3826)
!3868 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !3826)
!3869 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !3826)
!3870 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !3826)
!3871 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !3826)
!3872 = distinct !DILexicalBlock(scope: !3808, file: !910, line: 201, column: 5)
!3873 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !3826)
!3874 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !3826)
!3875 = !DILexicalBlockFile(scope: !3876, file: !910, discriminator: 1)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !910, line: 201, column: 5)
!3877 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !3826)
!3878 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !3826)
!3879 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !3826)
!3880 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !3826)
!3881 = distinct !DILexicalBlock(scope: !3876, file: !910, line: 201, column: 32)
!3882 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !3826)
!3883 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !3826)
!3884 = distinct !DILexicalBlock(scope: !3881, file: !910, line: 204, column: 13)
!3885 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !3826)
!3886 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !3826)
!3887 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !3826)
!3888 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !3826)
!3889 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !3826)
!3890 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !3826)
!3891 = !DILexicalBlockFile(scope: !3876, file: !910, discriminator: 2)
!3892 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !3826)
!3893 = distinct !{!3893, !3894}
!3894 = !DILocation(line: 201, column: 5, scope: !3808)
!3895 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !3826)
!3896 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !3826)
!3897 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !3826)
!3898 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !3826)
!3899 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !3826)
!3900 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !3826)
!3901 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !3826)
!3902 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !3826)
!3903 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !3826)
!3904 = !DILocation(line: 405, column: 26, scope: !3804)
!3905 = !DILocation(line: 405, column: 5, scope: !3804)
!3906 = !DILocation(line: 406, column: 22, scope: !3804)
!3907 = !DILocation(line: 406, column: 25, scope: !3804)
!3908 = !DILocation(line: 406, column: 29, scope: !3804)
!3909 = !DILocation(line: 406, column: 32, scope: !3804)
!3910 = !DILocation(line: 406, column: 5, scope: !3804)
!3911 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !3812)
!3912 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !3812)
!3913 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !3812)
!3914 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !3812)
!3915 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !3812)
!3916 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !3812)
!3917 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !3812)
!3918 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !3812)
!3919 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !3812)
!3920 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !3812)
!3921 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !3812)
!3922 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !3812)
!3923 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !3812)
!3924 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !3812)
!3925 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !3812)
!3926 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !3812)
!3927 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !3812)
!3928 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !3812)
!3929 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !3812)
!3930 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !3812)
!3931 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !3812)
!3932 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !3812)
!3933 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !3812)
!3934 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !3812)
!3935 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !3812)
!3936 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !3812)
!3937 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !3812)
!3938 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !3812)
!3939 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !3812)
!3940 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !3812)
!3941 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !3812)
!3942 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !3812)
!3943 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !3812)
!3944 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !3812)
!3945 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !3812)
!3946 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !3812)
!3947 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !3812)
!3948 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !3812)
!3949 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !3812)
!3950 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !3812)
!3951 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !3812)
!3952 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !3812)
!3953 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !3812)
!3954 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !3812)
!3955 = !DILocation(line: 407, column: 1, scope: !3804)
!3956 = distinct !DISubprogram(name: "encode_picture_start", scope: !910, file: !910, line: 516, type: !3805, isLocal: true, isDefinition: true, scopeLine: 517, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3957 = !DILocalVariable(name: "s", arg: 1, scope: !3956, file: !910, line: 516, type: !1829)
!3958 = !DILocation(line: 516, column: 49, scope: !3956)
!3959 = !DILocation(line: 518, column: 28, scope: !3956)
!3960 = !DILocation(line: 518, column: 31, scope: !3956)
!3961 = !DILocation(line: 518, column: 5, scope: !3956)
!3962 = !DILocation(line: 519, column: 27, scope: !3956)
!3963 = !DILocation(line: 519, column: 5, scope: !3956)
!3964 = !DILocation(line: 520, column: 28, scope: !3956)
!3965 = !DILocation(line: 520, column: 31, scope: !3956)
!3966 = !DILocation(line: 520, column: 5, scope: !3956)
!3967 = !DILocation(line: 521, column: 30, scope: !3956)
!3968 = !DILocation(line: 521, column: 5, scope: !3956)
!3969 = !DILocation(line: 522, column: 1, scope: !3956)
!3970 = distinct !DISubprogram(name: "encode_slices", scope: !910, file: !910, line: 777, type: !3306, isLocal: true, isDefinition: true, scopeLine: 778, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!3971 = !DILocalVariable(name: "s", arg: 1, scope: !3970, file: !910, line: 777, type: !1829)
!3972 = !DILocation(line: 777, column: 41, scope: !3970)
!3973 = !DILocalVariable(name: "buf", scope: !3970, file: !910, line: 779, type: !1116)
!3974 = !DILocation(line: 779, column: 14, scope: !3970)
!3975 = !DILocalVariable(name: "slice_x", scope: !3970, file: !910, line: 780, type: !936)
!3976 = !DILocation(line: 780, column: 9, scope: !3970)
!3977 = !DILocalVariable(name: "slice_y", scope: !3970, file: !910, line: 780, type: !936)
!3978 = !DILocation(line: 780, column: 18, scope: !3970)
!3979 = !DILocalVariable(name: "skip", scope: !3970, file: !910, line: 780, type: !936)
!3980 = !DILocation(line: 780, column: 27, scope: !3970)
!3981 = !DILocalVariable(name: "enc_args", scope: !3970, file: !910, line: 781, type: !1858)
!3982 = !DILocation(line: 781, column: 16, scope: !3970)
!3983 = !DILocation(line: 781, column: 27, scope: !3970)
!3984 = !DILocation(line: 781, column: 30, scope: !3970)
!3985 = !DILocation(line: 783, column: 28, scope: !3970)
!3986 = !DILocation(line: 783, column: 31, scope: !3970)
!3987 = !DILocation(line: 783, column: 5, scope: !3970)
!3988 = !DILocation(line: 784, column: 21, scope: !3970)
!3989 = !DILocation(line: 784, column: 24, scope: !3970)
!3990 = !DILocation(line: 784, column: 5, scope: !3970)
!3991 = !DILocation(line: 785, column: 25, scope: !3970)
!3992 = !DILocation(line: 785, column: 28, scope: !3970)
!3993 = !DILocation(line: 785, column: 11, scope: !3970)
!3994 = !DILocation(line: 785, column: 9, scope: !3970)
!3995 = !DILocation(line: 787, column: 18, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3970, file: !910, line: 787, column: 5)
!3997 = !DILocation(line: 787, column: 10, scope: !3996)
!3998 = !DILocation(line: 787, column: 23, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !4000, file: !910, discriminator: 1)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !910, line: 787, column: 5)
!4001 = !DILocation(line: 787, column: 33, scope: !3999)
!4002 = !DILocation(line: 787, column: 36, scope: !3999)
!4003 = !DILocation(line: 787, column: 31, scope: !3999)
!4004 = !DILocation(line: 787, column: 5, scope: !3999)
!4005 = !DILocation(line: 788, column: 22, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !910, line: 788, column: 9)
!4007 = distinct !DILexicalBlock(scope: !4000, file: !910, line: 787, column: 54)
!4008 = !DILocation(line: 788, column: 14, scope: !4006)
!4009 = !DILocation(line: 788, column: 27, scope: !4010)
!4010 = !DILexicalBlockFile(scope: !4011, file: !910, discriminator: 1)
!4011 = distinct !DILexicalBlock(scope: !4006, file: !910, line: 788, column: 9)
!4012 = !DILocation(line: 788, column: 37, scope: !4010)
!4013 = !DILocation(line: 788, column: 40, scope: !4010)
!4014 = !DILocation(line: 788, column: 35, scope: !4010)
!4015 = !DILocation(line: 788, column: 9, scope: !4010)
!4016 = !DILocalVariable(name: "args", scope: !4017, file: !910, line: 789, type: !1858)
!4017 = distinct !DILexicalBlock(scope: !4011, file: !910, line: 788, column: 58)
!4018 = !DILocation(line: 789, column: 24, scope: !4017)
!4019 = !DILocation(line: 789, column: 41, scope: !4017)
!4020 = !DILocation(line: 789, column: 44, scope: !4017)
!4021 = !DILocation(line: 789, column: 50, scope: !4017)
!4022 = !DILocation(line: 789, column: 49, scope: !4017)
!4023 = !DILocation(line: 789, column: 60, scope: !4017)
!4024 = !DILocation(line: 789, column: 58, scope: !4017)
!4025 = !DILocation(line: 789, column: 32, scope: !4017)
!4026 = !DILocation(line: 790, column: 28, scope: !4017)
!4027 = !DILocation(line: 790, column: 34, scope: !4017)
!4028 = !DILocation(line: 790, column: 38, scope: !4017)
!4029 = !DILocation(line: 790, column: 44, scope: !4017)
!4030 = !DILocation(line: 790, column: 42, scope: !4017)
!4031 = !DILocation(line: 790, column: 50, scope: !4017)
!4032 = !DILocation(line: 790, column: 56, scope: !4017)
!4033 = !DILocation(line: 790, column: 62, scope: !4017)
!4034 = !DILocation(line: 790, column: 65, scope: !4017)
!4035 = !DILocation(line: 790, column: 61, scope: !4017)
!4036 = !DILocation(line: 790, column: 13, scope: !4017)
!4037 = !DILocation(line: 791, column: 21, scope: !4017)
!4038 = !DILocation(line: 791, column: 27, scope: !4017)
!4039 = !DILocation(line: 791, column: 18, scope: !4017)
!4040 = !DILocation(line: 792, column: 9, scope: !4017)
!4041 = !DILocation(line: 788, column: 54, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !4011, file: !910, discriminator: 2)
!4043 = !DILocation(line: 788, column: 9, scope: !4042)
!4044 = distinct !{!4044, !4045}
!4045 = !DILocation(line: 788, column: 9, scope: !4007)
!4046 = !DILocation(line: 793, column: 5, scope: !4007)
!4047 = !DILocation(line: 787, column: 50, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !4000, file: !910, discriminator: 2)
!4049 = !DILocation(line: 787, column: 5, scope: !4048)
!4050 = distinct !{!4050, !4051}
!4051 = !DILocation(line: 787, column: 5, scope: !3970)
!4052 = !DILocation(line: 795, column: 5, scope: !3970)
!4053 = !DILocation(line: 795, column: 8, scope: !3970)
!4054 = !DILocation(line: 795, column: 15, scope: !3970)
!4055 = !DILocation(line: 795, column: 23, scope: !3970)
!4056 = !DILocation(line: 795, column: 26, scope: !3970)
!4057 = !DILocation(line: 795, column: 50, scope: !3970)
!4058 = !DILocation(line: 795, column: 65, scope: !3970)
!4059 = !DILocation(line: 795, column: 68, scope: !3970)
!4060 = !DILocation(line: 795, column: 74, scope: !3970)
!4061 = !DILocation(line: 795, column: 77, scope: !3970)
!4062 = !DILocation(line: 795, column: 73, scope: !3970)
!4063 = !DILocation(line: 798, column: 21, scope: !3970)
!4064 = !DILocation(line: 798, column: 24, scope: !3970)
!4065 = !DILocation(line: 798, column: 28, scope: !3970)
!4066 = !DILocation(line: 798, column: 5, scope: !3970)
!4067 = !DILocation(line: 800, column: 5, scope: !3970)
!4068 = distinct !DISubprogram(name: "init_quant_matrix", scope: !910, file: !910, line: 442, type: !3805, isLocal: true, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4069 = !DILocalVariable(name: "s", arg: 1, scope: !4068, file: !910, line: 442, type: !1829)
!4070 = !DILocation(line: 442, column: 46, scope: !4068)
!4071 = !DILocalVariable(name: "level", scope: !4068, file: !910, line: 444, type: !936)
!4072 = !DILocation(line: 444, column: 9, scope: !4068)
!4073 = !DILocalVariable(name: "orientation", scope: !4068, file: !910, line: 444, type: !936)
!4074 = !DILocation(line: 444, column: 16, scope: !4068)
!4075 = !DILocation(line: 446, column: 9, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4068, file: !910, line: 446, column: 9)
!4077 = !DILocation(line: 446, column: 12, scope: !4076)
!4078 = !DILocation(line: 446, column: 26, scope: !4076)
!4079 = !DILocation(line: 446, column: 31, scope: !4076)
!4080 = !DILocation(line: 446, column: 34, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4076, file: !910, discriminator: 1)
!4082 = !DILocation(line: 446, column: 37, scope: !4081)
!4083 = !DILocation(line: 446, column: 50, scope: !4081)
!4084 = !DILocation(line: 446, column: 9, scope: !4081)
!4085 = !DILocation(line: 447, column: 9, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4076, file: !910, line: 446, column: 65)
!4087 = !DILocation(line: 447, column: 12, scope: !4086)
!4088 = !DILocation(line: 447, column: 32, scope: !4086)
!4089 = !DILocation(line: 448, column: 20, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4086, file: !910, line: 448, column: 9)
!4091 = !DILocation(line: 448, column: 14, scope: !4090)
!4092 = !DILocation(line: 448, column: 25, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4094, file: !910, discriminator: 1)
!4094 = distinct !DILexicalBlock(scope: !4090, file: !910, line: 448, column: 9)
!4095 = !DILocation(line: 448, column: 33, scope: !4093)
!4096 = !DILocation(line: 448, column: 36, scope: !4093)
!4097 = !DILocation(line: 448, column: 31, scope: !4093)
!4098 = !DILocation(line: 448, column: 9, scope: !4093)
!4099 = !DILocation(line: 449, column: 72, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4094, file: !910, line: 448, column: 60)
!4101 = !DILocation(line: 449, column: 34, scope: !4100)
!4102 = !DILocation(line: 449, column: 56, scope: !4100)
!4103 = !DILocation(line: 449, column: 59, scope: !4100)
!4104 = !DILocation(line: 449, column: 22, scope: !4100)
!4105 = !DILocation(line: 449, column: 13, scope: !4100)
!4106 = !DILocation(line: 449, column: 16, scope: !4100)
!4107 = !DILocation(line: 449, column: 32, scope: !4100)
!4108 = !DILocation(line: 450, column: 72, scope: !4100)
!4109 = !DILocation(line: 450, column: 34, scope: !4100)
!4110 = !DILocation(line: 450, column: 56, scope: !4100)
!4111 = !DILocation(line: 450, column: 59, scope: !4100)
!4112 = !DILocation(line: 450, column: 22, scope: !4100)
!4113 = !DILocation(line: 450, column: 13, scope: !4100)
!4114 = !DILocation(line: 450, column: 16, scope: !4100)
!4115 = !DILocation(line: 450, column: 32, scope: !4100)
!4116 = !DILocation(line: 451, column: 72, scope: !4100)
!4117 = !DILocation(line: 451, column: 34, scope: !4100)
!4118 = !DILocation(line: 451, column: 56, scope: !4100)
!4119 = !DILocation(line: 451, column: 59, scope: !4100)
!4120 = !DILocation(line: 451, column: 22, scope: !4100)
!4121 = !DILocation(line: 451, column: 13, scope: !4100)
!4122 = !DILocation(line: 451, column: 16, scope: !4100)
!4123 = !DILocation(line: 451, column: 32, scope: !4100)
!4124 = !DILocation(line: 452, column: 72, scope: !4100)
!4125 = !DILocation(line: 452, column: 34, scope: !4100)
!4126 = !DILocation(line: 452, column: 56, scope: !4100)
!4127 = !DILocation(line: 452, column: 59, scope: !4100)
!4128 = !DILocation(line: 452, column: 22, scope: !4100)
!4129 = !DILocation(line: 452, column: 13, scope: !4100)
!4130 = !DILocation(line: 452, column: 16, scope: !4100)
!4131 = !DILocation(line: 452, column: 32, scope: !4100)
!4132 = !DILocation(line: 453, column: 9, scope: !4100)
!4133 = !DILocation(line: 448, column: 56, scope: !4134)
!4134 = !DILexicalBlockFile(scope: !4094, file: !910, discriminator: 2)
!4135 = !DILocation(line: 448, column: 9, scope: !4134)
!4136 = distinct !{!4136, !4137}
!4137 = !DILocation(line: 448, column: 9, scope: !4086)
!4138 = !DILocation(line: 454, column: 9, scope: !4086)
!4139 = !DILocation(line: 457, column: 5, scope: !4068)
!4140 = !DILocation(line: 457, column: 8, scope: !4068)
!4141 = !DILocation(line: 457, column: 28, scope: !4068)
!4142 = !DILocation(line: 459, column: 9, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4068, file: !910, line: 459, column: 9)
!4144 = !DILocation(line: 459, column: 12, scope: !4143)
!4145 = !DILocation(line: 459, column: 25, scope: !4143)
!4146 = !DILocation(line: 459, column: 9, scope: !4068)
!4147 = !DILocation(line: 460, column: 20, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !910, line: 460, column: 9)
!4149 = distinct !DILexicalBlock(scope: !4143, file: !910, line: 459, column: 40)
!4150 = !DILocation(line: 460, column: 14, scope: !4148)
!4151 = !DILocation(line: 460, column: 25, scope: !4152)
!4152 = !DILexicalBlockFile(scope: !4153, file: !910, discriminator: 1)
!4153 = distinct !DILexicalBlock(scope: !4148, file: !910, line: 460, column: 9)
!4154 = !DILocation(line: 460, column: 33, scope: !4152)
!4155 = !DILocation(line: 460, column: 36, scope: !4152)
!4156 = !DILocation(line: 460, column: 31, scope: !4152)
!4157 = !DILocation(line: 460, column: 9, scope: !4152)
!4158 = !DILocation(line: 461, column: 30, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !910, line: 461, column: 13)
!4160 = distinct !DILexicalBlock(scope: !4153, file: !910, line: 460, column: 60)
!4161 = !DILocation(line: 461, column: 18, scope: !4159)
!4162 = !DILocation(line: 461, column: 35, scope: !4163)
!4163 = !DILexicalBlockFile(scope: !4164, file: !910, discriminator: 1)
!4164 = distinct !DILexicalBlock(scope: !4159, file: !910, line: 461, column: 13)
!4165 = !DILocation(line: 461, column: 47, scope: !4163)
!4166 = !DILocation(line: 461, column: 13, scope: !4163)
!4167 = !DILocation(line: 462, column: 21, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !910, line: 462, column: 21)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !910, line: 461, column: 67)
!4170 = !DILocation(line: 462, column: 27, scope: !4168)
!4171 = !DILocation(line: 462, column: 21, scope: !4169)
!4172 = !DILocation(line: 463, column: 97, scope: !4168)
!4173 = !DILocation(line: 463, column: 52, scope: !4168)
!4174 = !DILocation(line: 463, column: 90, scope: !4168)
!4175 = !DILocation(line: 463, column: 74, scope: !4168)
!4176 = !DILocation(line: 463, column: 77, scope: !4168)
!4177 = !DILocation(line: 463, column: 37, scope: !4168)
!4178 = !DILocation(line: 463, column: 21, scope: !4168)
!4179 = !DILocation(line: 463, column: 30, scope: !4168)
!4180 = !DILocation(line: 463, column: 24, scope: !4168)
!4181 = !DILocation(line: 463, column: 50, scope: !4168)
!4182 = !DILocation(line: 465, column: 74, scope: !4168)
!4183 = !DILocation(line: 465, column: 52, scope: !4168)
!4184 = !DILocation(line: 465, column: 67, scope: !4168)
!4185 = !DILocation(line: 465, column: 37, scope: !4168)
!4186 = !DILocation(line: 465, column: 21, scope: !4168)
!4187 = !DILocation(line: 465, column: 30, scope: !4168)
!4188 = !DILocation(line: 465, column: 24, scope: !4168)
!4189 = !DILocation(line: 465, column: 50, scope: !4168)
!4190 = !DILocation(line: 466, column: 13, scope: !4169)
!4191 = !DILocation(line: 461, column: 63, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4164, file: !910, discriminator: 2)
!4193 = !DILocation(line: 461, column: 13, scope: !4192)
!4194 = distinct !{!4194, !4195}
!4195 = !DILocation(line: 461, column: 13, scope: !4160)
!4196 = !DILocation(line: 467, column: 9, scope: !4160)
!4197 = !DILocation(line: 460, column: 56, scope: !4198)
!4198 = !DILexicalBlockFile(scope: !4153, file: !910, discriminator: 2)
!4199 = !DILocation(line: 460, column: 9, scope: !4198)
!4200 = distinct !{!4200, !4201}
!4201 = !DILocation(line: 460, column: 9, scope: !4149)
!4202 = !DILocation(line: 468, column: 5, scope: !4149)
!4203 = !DILocation(line: 468, column: 16, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4205, file: !910, discriminator: 1)
!4205 = distinct !DILexicalBlock(scope: !4143, file: !910, line: 468, column: 16)
!4206 = !DILocation(line: 468, column: 19, scope: !4204)
!4207 = !DILocation(line: 468, column: 32, scope: !4204)
!4208 = !DILocation(line: 469, column: 20, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !910, line: 469, column: 9)
!4210 = distinct !DILexicalBlock(scope: !4205, file: !910, line: 468, column: 47)
!4211 = !DILocation(line: 469, column: 14, scope: !4209)
!4212 = !DILocation(line: 469, column: 25, scope: !4213)
!4213 = !DILexicalBlockFile(scope: !4214, file: !910, discriminator: 1)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !910, line: 469, column: 9)
!4215 = !DILocation(line: 469, column: 33, scope: !4213)
!4216 = !DILocation(line: 469, column: 36, scope: !4213)
!4217 = !DILocation(line: 469, column: 31, scope: !4213)
!4218 = !DILocation(line: 469, column: 9, scope: !4213)
!4219 = !DILocation(line: 470, column: 30, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !910, line: 470, column: 13)
!4221 = distinct !DILexicalBlock(scope: !4214, file: !910, line: 469, column: 60)
!4222 = !DILocation(line: 470, column: 18, scope: !4220)
!4223 = !DILocation(line: 470, column: 35, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4225, file: !910, discriminator: 1)
!4225 = distinct !DILexicalBlock(scope: !4220, file: !910, line: 470, column: 13)
!4226 = !DILocation(line: 470, column: 47, scope: !4224)
!4227 = !DILocation(line: 470, column: 13, scope: !4224)
!4228 = !DILocation(line: 471, column: 70, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !910, line: 470, column: 67)
!4230 = !DILocation(line: 471, column: 48, scope: !4229)
!4231 = !DILocation(line: 471, column: 63, scope: !4229)
!4232 = !DILocation(line: 471, column: 33, scope: !4229)
!4233 = !DILocation(line: 471, column: 17, scope: !4229)
!4234 = !DILocation(line: 471, column: 26, scope: !4229)
!4235 = !DILocation(line: 471, column: 20, scope: !4229)
!4236 = !DILocation(line: 471, column: 46, scope: !4229)
!4237 = !DILocation(line: 472, column: 13, scope: !4229)
!4238 = !DILocation(line: 470, column: 63, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !4225, file: !910, discriminator: 2)
!4240 = !DILocation(line: 470, column: 13, scope: !4239)
!4241 = distinct !{!4241, !4242}
!4242 = !DILocation(line: 470, column: 13, scope: !4221)
!4243 = !DILocation(line: 473, column: 9, scope: !4221)
!4244 = !DILocation(line: 469, column: 56, scope: !4245)
!4245 = !DILexicalBlockFile(scope: !4214, file: !910, discriminator: 2)
!4246 = !DILocation(line: 469, column: 9, scope: !4245)
!4247 = distinct !{!4247, !4248}
!4248 = !DILocation(line: 469, column: 9, scope: !4210)
!4249 = !DILocation(line: 474, column: 5, scope: !4210)
!4250 = !DILocation(line: 475, column: 20, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !910, line: 475, column: 9)
!4252 = distinct !DILexicalBlock(scope: !4205, file: !910, line: 474, column: 12)
!4253 = !DILocation(line: 475, column: 14, scope: !4251)
!4254 = !DILocation(line: 475, column: 25, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !4256, file: !910, discriminator: 1)
!4256 = distinct !DILexicalBlock(scope: !4251, file: !910, line: 475, column: 9)
!4257 = !DILocation(line: 475, column: 33, scope: !4255)
!4258 = !DILocation(line: 475, column: 36, scope: !4255)
!4259 = !DILocation(line: 475, column: 31, scope: !4255)
!4260 = !DILocation(line: 475, column: 9, scope: !4255)
!4261 = !DILocation(line: 476, column: 30, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !910, line: 476, column: 13)
!4263 = distinct !DILexicalBlock(scope: !4256, file: !910, line: 475, column: 60)
!4264 = !DILocation(line: 476, column: 18, scope: !4262)
!4265 = !DILocation(line: 476, column: 35, scope: !4266)
!4266 = !DILexicalBlockFile(scope: !4267, file: !910, discriminator: 1)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !910, line: 476, column: 13)
!4268 = !DILocation(line: 476, column: 47, scope: !4266)
!4269 = !DILocation(line: 476, column: 13, scope: !4266)
!4270 = !DILocation(line: 477, column: 71, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !910, line: 476, column: 67)
!4272 = !DILocation(line: 477, column: 48, scope: !4271)
!4273 = !DILocation(line: 477, column: 64, scope: !4271)
!4274 = !DILocation(line: 477, column: 33, scope: !4271)
!4275 = !DILocation(line: 477, column: 17, scope: !4271)
!4276 = !DILocation(line: 477, column: 26, scope: !4271)
!4277 = !DILocation(line: 477, column: 20, scope: !4271)
!4278 = !DILocation(line: 477, column: 46, scope: !4271)
!4279 = !DILocation(line: 478, column: 13, scope: !4271)
!4280 = !DILocation(line: 476, column: 63, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4267, file: !910, discriminator: 2)
!4282 = !DILocation(line: 476, column: 13, scope: !4281)
!4283 = distinct !{!4283, !4284}
!4284 = !DILocation(line: 476, column: 13, scope: !4263)
!4285 = !DILocation(line: 479, column: 9, scope: !4263)
!4286 = !DILocation(line: 475, column: 56, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !4256, file: !910, discriminator: 2)
!4288 = !DILocation(line: 475, column: 9, scope: !4287)
!4289 = distinct !{!4289, !4290}
!4290 = !DILocation(line: 475, column: 9, scope: !4252)
!4291 = !DILocation(line: 481, column: 1, scope: !4068)
!4292 = distinct !DISubprogram(name: "rate_control", scope: !910, file: !910, line: 615, type: !3049, isLocal: true, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4293 = !DILocalVariable(name: "a", arg: 1, scope: !4294, file: !4295, line: 127, type: !936)
!4294 = distinct !DISubprogram(name: "av_clip_c", scope: !4295, file: !4295, line: 127, type: !4296, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4295 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!936, !936, !936, !936}
!4298 = !DILocation(line: 127, column: 87, scope: !4294, inlinedAt: !4299)
!4299 = distinct !DILocation(line: 633, column: 16, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4292, file: !910, line: 624, column: 45)
!4301 = !DILocalVariable(name: "amin", arg: 2, scope: !4294, file: !4295, line: 127, type: !936)
!4302 = !DILocation(line: 127, column: 94, scope: !4294, inlinedAt: !4299)
!4303 = !DILocalVariable(name: "amax", arg: 3, scope: !4294, file: !4295, line: 127, type: !936)
!4304 = !DILocation(line: 127, column: 104, scope: !4294, inlinedAt: !4299)
!4305 = !DILocation(line: 127, column: 87, scope: !4294, inlinedAt: !4306)
!4306 = distinct !DILocation(line: 638, column: 28, scope: !4292)
!4307 = !DILocation(line: 127, column: 94, scope: !4294, inlinedAt: !4306)
!4308 = !DILocation(line: 127, column: 104, scope: !4294, inlinedAt: !4306)
!4309 = !DILocation(line: 127, column: 87, scope: !4294, inlinedAt: !4310)
!4310 = distinct !DILocation(line: 626, column: 17, scope: !4300)
!4311 = !DILocation(line: 127, column: 94, scope: !4294, inlinedAt: !4310)
!4312 = !DILocation(line: 127, column: 104, scope: !4294, inlinedAt: !4310)
!4313 = !DILocalVariable(name: "avctx", arg: 1, scope: !4292, file: !910, line: 615, type: !1088)
!4314 = !DILocation(line: 615, column: 41, scope: !4292)
!4315 = !DILocalVariable(name: "arg", arg: 2, scope: !4292, file: !910, line: 615, type: !955)
!4316 = !DILocation(line: 615, column: 54, scope: !4292)
!4317 = !DILocalVariable(name: "slice_dat", scope: !4292, file: !910, line: 617, type: !1858)
!4318 = !DILocation(line: 617, column: 16, scope: !4292)
!4319 = !DILocation(line: 617, column: 28, scope: !4292)
!4320 = !DILocalVariable(name: "s", scope: !4292, file: !910, line: 618, type: !1829)
!4321 = !DILocation(line: 618, column: 20, scope: !4292)
!4322 = !DILocation(line: 618, column: 24, scope: !4292)
!4323 = !DILocation(line: 618, column: 35, scope: !4292)
!4324 = !DILocalVariable(name: "top", scope: !4292, file: !910, line: 619, type: !989)
!4325 = !DILocation(line: 619, column: 15, scope: !4292)
!4326 = !DILocation(line: 619, column: 21, scope: !4292)
!4327 = !DILocation(line: 619, column: 32, scope: !4292)
!4328 = !DILocalVariable(name: "bottom", scope: !4292, file: !910, line: 620, type: !989)
!4329 = !DILocation(line: 620, column: 15, scope: !4292)
!4330 = !DILocation(line: 620, column: 24, scope: !4292)
!4331 = !DILocation(line: 620, column: 35, scope: !4292)
!4332 = !DILocalVariable(name: "quant_buf", scope: !4292, file: !910, line: 621, type: !4333)
!4333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 64, align: 32, elements: !1728)
!4334 = !DILocation(line: 621, column: 9, scope: !4292)
!4335 = !DILocalVariable(name: "quant", scope: !4292, file: !910, line: 622, type: !936)
!4336 = !DILocation(line: 622, column: 9, scope: !4292)
!4337 = !DILocation(line: 622, column: 17, scope: !4292)
!4338 = !DILocation(line: 622, column: 28, scope: !4292)
!4339 = !DILocalVariable(name: "step", scope: !4292, file: !910, line: 622, type: !936)
!4340 = !DILocation(line: 622, column: 39, scope: !4292)
!4341 = !DILocalVariable(name: "bits_last", scope: !4292, file: !910, line: 623, type: !936)
!4342 = !DILocation(line: 623, column: 9, scope: !4292)
!4343 = !DILocalVariable(name: "bits", scope: !4292, file: !910, line: 623, type: !936)
!4344 = !DILocation(line: 623, column: 20, scope: !4292)
!4345 = !DILocation(line: 623, column: 42, scope: !4292)
!4346 = !DILocation(line: 623, column: 53, scope: !4292)
!4347 = !DILocation(line: 623, column: 27, scope: !4292)
!4348 = !DILocation(line: 624, column: 5, scope: !4292)
!4349 = !DILocation(line: 624, column: 13, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4292, file: !910, discriminator: 1)
!4351 = !DILocation(line: 624, column: 20, scope: !4350)
!4352 = !DILocation(line: 624, column: 18, scope: !4350)
!4353 = !DILocation(line: 624, column: 25, scope: !4350)
!4354 = !DILocation(line: 624, column: 29, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4292, file: !910, discriminator: 2)
!4356 = !DILocation(line: 624, column: 36, scope: !4355)
!4357 = !DILocation(line: 624, column: 34, scope: !4355)
!4358 = !DILocation(line: 624, column: 25, scope: !4355)
!4359 = !DILocation(line: 624, column: 5, scope: !4360)
!4360 = !DILexicalBlockFile(scope: !4292, file: !910, discriminator: 3)
!4361 = !DILocalVariable(name: "signed_step", scope: !4300, file: !910, line: 625, type: !989)
!4362 = !DILocation(line: 625, column: 19, scope: !4300)
!4363 = !DILocation(line: 625, column: 33, scope: !4300)
!4364 = !DILocation(line: 625, column: 40, scope: !4300)
!4365 = !DILocation(line: 625, column: 38, scope: !4300)
!4366 = !DILocation(line: 625, column: 47, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4300, file: !910, discriminator: 1)
!4368 = !DILocation(line: 625, column: 33, scope: !4367)
!4369 = !DILocation(line: 625, column: 55, scope: !4370)
!4370 = !DILexicalBlockFile(scope: !4300, file: !910, discriminator: 2)
!4371 = !DILocation(line: 625, column: 54, scope: !4370)
!4372 = !DILocation(line: 625, column: 33, scope: !4370)
!4373 = !DILocation(line: 625, column: 33, scope: !4374)
!4374 = !DILexicalBlockFile(scope: !4300, file: !910, discriminator: 3)
!4375 = !DILocation(line: 625, column: 19, scope: !4374)
!4376 = !DILocation(line: 626, column: 27, scope: !4300)
!4377 = !DILocation(line: 626, column: 35, scope: !4300)
!4378 = !DILocation(line: 626, column: 33, scope: !4300)
!4379 = !DILocation(line: 626, column: 51, scope: !4300)
!4380 = !DILocation(line: 626, column: 54, scope: !4300)
!4381 = !DILocation(line: 626, column: 60, scope: !4300)
!4382 = !DILocation(line: 626, column: 17, scope: !4300)
!4383 = !DILocation(line: 132, column: 9, scope: !4384, inlinedAt: !4310)
!4384 = distinct !DILexicalBlock(scope: !4294, file: !4295, line: 132, column: 9)
!4385 = !DILocation(line: 132, column: 13, scope: !4384, inlinedAt: !4310)
!4386 = !DILocation(line: 132, column: 11, scope: !4384, inlinedAt: !4310)
!4387 = !DILocation(line: 132, column: 9, scope: !4294, inlinedAt: !4310)
!4388 = !DILocation(line: 132, column: 26, scope: !4389, inlinedAt: !4310)
!4389 = !DILexicalBlockFile(scope: !4384, file: !4295, discriminator: 1)
!4390 = !DILocation(line: 132, column: 19, scope: !4389, inlinedAt: !4310)
!4391 = !DILocation(line: 133, column: 14, scope: !4392, inlinedAt: !4310)
!4392 = distinct !DILexicalBlock(scope: !4384, file: !4295, line: 133, column: 14)
!4393 = !DILocation(line: 133, column: 18, scope: !4392, inlinedAt: !4310)
!4394 = !DILocation(line: 133, column: 16, scope: !4392, inlinedAt: !4310)
!4395 = !DILocation(line: 133, column: 14, scope: !4384, inlinedAt: !4310)
!4396 = !DILocation(line: 133, column: 31, scope: !4397, inlinedAt: !4310)
!4397 = !DILexicalBlockFile(scope: !4392, file: !4295, discriminator: 1)
!4398 = !DILocation(line: 133, column: 24, scope: !4397, inlinedAt: !4310)
!4399 = !DILocation(line: 134, column: 17, scope: !4392, inlinedAt: !4310)
!4400 = !DILocation(line: 134, column: 10, scope: !4392, inlinedAt: !4310)
!4401 = !DILocation(line: 135, column: 1, scope: !4294, inlinedAt: !4310)
!4402 = !DILocation(line: 626, column: 15, scope: !4300)
!4403 = !DILocation(line: 627, column: 31, scope: !4300)
!4404 = !DILocation(line: 627, column: 42, scope: !4300)
!4405 = !DILocation(line: 627, column: 16, scope: !4300)
!4406 = !DILocation(line: 627, column: 14, scope: !4300)
!4407 = !DILocation(line: 628, column: 13, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4300, file: !910, line: 628, column: 13)
!4409 = !DILocation(line: 628, column: 29, scope: !4408)
!4410 = !DILocation(line: 628, column: 26, scope: !4408)
!4411 = !DILocation(line: 628, column: 13, scope: !4300)
!4412 = !DILocation(line: 629, column: 23, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4408, file: !910, line: 628, column: 36)
!4414 = !DILocation(line: 629, column: 40, scope: !4413)
!4415 = !DILocation(line: 629, column: 37, scope: !4413)
!4416 = !DILocation(line: 629, column: 22, scope: !4413)
!4417 = !DILocation(line: 629, column: 50, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !4413, file: !910, discriminator: 1)
!4419 = !DILocation(line: 629, column: 22, scope: !4418)
!4420 = !DILocation(line: 629, column: 67, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !4413, file: !910, discriminator: 2)
!4422 = !DILocation(line: 629, column: 22, scope: !4421)
!4423 = !DILocation(line: 629, column: 22, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4413, file: !910, discriminator: 3)
!4425 = !DILocation(line: 629, column: 19, scope: !4424)
!4426 = !DILocation(line: 630, column: 20, scope: !4413)
!4427 = !DILocation(line: 630, column: 29, scope: !4413)
!4428 = !DILocation(line: 630, column: 26, scope: !4413)
!4429 = !DILocation(line: 630, column: 44, scope: !4418)
!4430 = !DILocation(line: 630, column: 20, scope: !4418)
!4431 = !DILocation(line: 630, column: 56, scope: !4421)
!4432 = !DILocation(line: 630, column: 20, scope: !4421)
!4433 = !DILocation(line: 630, column: 20, scope: !4424)
!4434 = !DILocation(line: 630, column: 18, scope: !4424)
!4435 = !DILocation(line: 631, column: 13, scope: !4413)
!4436 = !DILocation(line: 633, column: 26, scope: !4300)
!4437 = !DILocation(line: 633, column: 30, scope: !4300)
!4438 = !DILocation(line: 633, column: 38, scope: !4300)
!4439 = !DILocation(line: 633, column: 41, scope: !4300)
!4440 = !DILocation(line: 633, column: 47, scope: !4300)
!4441 = !DILocation(line: 633, column: 50, scope: !4300)
!4442 = !DILocation(line: 633, column: 16, scope: !4300)
!4443 = !DILocation(line: 132, column: 9, scope: !4384, inlinedAt: !4299)
!4444 = !DILocation(line: 132, column: 13, scope: !4384, inlinedAt: !4299)
!4445 = !DILocation(line: 132, column: 11, scope: !4384, inlinedAt: !4299)
!4446 = !DILocation(line: 132, column: 9, scope: !4294, inlinedAt: !4299)
!4447 = !DILocation(line: 132, column: 26, scope: !4389, inlinedAt: !4299)
!4448 = !DILocation(line: 132, column: 19, scope: !4389, inlinedAt: !4299)
!4449 = !DILocation(line: 133, column: 14, scope: !4392, inlinedAt: !4299)
!4450 = !DILocation(line: 133, column: 18, scope: !4392, inlinedAt: !4299)
!4451 = !DILocation(line: 133, column: 16, scope: !4392, inlinedAt: !4299)
!4452 = !DILocation(line: 133, column: 14, scope: !4384, inlinedAt: !4299)
!4453 = !DILocation(line: 133, column: 31, scope: !4397, inlinedAt: !4299)
!4454 = !DILocation(line: 133, column: 24, scope: !4397, inlinedAt: !4299)
!4455 = !DILocation(line: 134, column: 17, scope: !4392, inlinedAt: !4299)
!4456 = !DILocation(line: 134, column: 10, scope: !4392, inlinedAt: !4299)
!4457 = !DILocation(line: 135, column: 1, scope: !4294, inlinedAt: !4299)
!4458 = !DILocation(line: 633, column: 14, scope: !4300)
!4459 = !DILocation(line: 634, column: 24, scope: !4300)
!4460 = !DILocation(line: 634, column: 9, scope: !4300)
!4461 = !DILocation(line: 634, column: 22, scope: !4300)
!4462 = !DILocation(line: 635, column: 24, scope: !4300)
!4463 = !DILocation(line: 635, column: 9, scope: !4300)
!4464 = !DILocation(line: 635, column: 22, scope: !4300)
!4465 = !DILocation(line: 636, column: 21, scope: !4300)
!4466 = !DILocation(line: 636, column: 19, scope: !4300)
!4467 = !DILocation(line: 624, column: 5, scope: !4468)
!4468 = !DILexicalBlockFile(scope: !4292, file: !910, discriminator: 4)
!4469 = distinct !{!4469, !4348}
!4470 = !DILocation(line: 638, column: 38, scope: !4292)
!4471 = !DILocation(line: 638, column: 48, scope: !4292)
!4472 = !DILocation(line: 638, column: 51, scope: !4292)
!4473 = !DILocation(line: 638, column: 57, scope: !4292)
!4474 = !DILocation(line: 638, column: 28, scope: !4292)
!4475 = !DILocation(line: 132, column: 9, scope: !4384, inlinedAt: !4306)
!4476 = !DILocation(line: 132, column: 13, scope: !4384, inlinedAt: !4306)
!4477 = !DILocation(line: 132, column: 11, scope: !4384, inlinedAt: !4306)
!4478 = !DILocation(line: 132, column: 9, scope: !4294, inlinedAt: !4306)
!4479 = !DILocation(line: 132, column: 26, scope: !4389, inlinedAt: !4306)
!4480 = !DILocation(line: 132, column: 19, scope: !4389, inlinedAt: !4306)
!4481 = !DILocation(line: 133, column: 14, scope: !4392, inlinedAt: !4306)
!4482 = !DILocation(line: 133, column: 18, scope: !4392, inlinedAt: !4306)
!4483 = !DILocation(line: 133, column: 16, scope: !4392, inlinedAt: !4306)
!4484 = !DILocation(line: 133, column: 14, scope: !4384, inlinedAt: !4306)
!4485 = !DILocation(line: 133, column: 31, scope: !4397, inlinedAt: !4306)
!4486 = !DILocation(line: 133, column: 24, scope: !4397, inlinedAt: !4306)
!4487 = !DILocation(line: 134, column: 17, scope: !4392, inlinedAt: !4306)
!4488 = !DILocation(line: 134, column: 10, scope: !4392, inlinedAt: !4306)
!4489 = !DILocation(line: 135, column: 1, scope: !4294, inlinedAt: !4306)
!4490 = !DILocation(line: 638, column: 5, scope: !4292)
!4491 = !DILocation(line: 638, column: 16, scope: !4292)
!4492 = !DILocation(line: 638, column: 26, scope: !4292)
!4493 = !DILocation(line: 639, column: 29, scope: !4292)
!4494 = !DILocation(line: 639, column: 34, scope: !4292)
!4495 = !DILocation(line: 639, column: 42, scope: !4292)
!4496 = !DILocation(line: 639, column: 45, scope: !4292)
!4497 = !DILocation(line: 639, column: 40, scope: !4292)
!4498 = !DILocation(line: 639, column: 57, scope: !4292)
!4499 = !DILocation(line: 639, column: 64, scope: !4292)
!4500 = !DILocation(line: 639, column: 67, scope: !4292)
!4501 = !DILocation(line: 639, column: 79, scope: !4292)
!4502 = !DILocation(line: 639, column: 61, scope: !4292)
!4503 = !DILocation(line: 639, column: 60, scope: !4292)
!4504 = !DILocation(line: 639, column: 84, scope: !4292)
!4505 = !DILocation(line: 639, column: 90, scope: !4292)
!4506 = !DILocation(line: 639, column: 93, scope: !4292)
!4507 = !DILocation(line: 639, column: 88, scope: !4292)
!4508 = !DILocation(line: 639, column: 5, scope: !4292)
!4509 = !DILocation(line: 639, column: 16, scope: !4292)
!4510 = !DILocation(line: 639, column: 22, scope: !4292)
!4511 = !DILocation(line: 640, column: 5, scope: !4292)
!4512 = distinct !DISubprogram(name: "count_hq_slice", scope: !910, file: !910, line: 553, type: !4513, isLocal: true, isDefinition: true, scopeLine: 554, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!936, !1858, !936}
!4515 = !DILocalVariable(name: "val", arg: 1, scope: !4516, file: !910, line: 211, type: !954)
!4516 = distinct !DISubprogram(name: "count_vc2_ue_uint", scope: !910, file: !910, line: 211, type: !4517, isLocal: true, isDefinition: true, scopeLine: 212, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!936, !954}
!4519 = !DILocation(line: 211, column: 77, scope: !4516, inlinedAt: !4520)
!4520 = distinct !DILocation(line: 593, column: 33, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !910, line: 591, column: 52)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !910, line: 591, column: 21)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !910, line: 591, column: 21)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !910, line: 590, column: 48)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !910, line: 590, column: 17)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !910, line: 590, column: 17)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !910, line: 575, column: 73)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !910, line: 575, column: 13)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !910, line: 575, column: 13)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !910, line: 574, column: 60)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !910, line: 574, column: 9)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !910, line: 574, column: 9)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !910, line: 570, column: 29)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !910, line: 570, column: 5)
!4535 = distinct !DILexicalBlock(scope: !4512, file: !910, line: 570, column: 5)
!4536 = !DILocalVariable(name: "topbit", scope: !4516, file: !910, line: 213, type: !936)
!4537 = !DILocation(line: 213, column: 9, scope: !4516, inlinedAt: !4520)
!4538 = !DILocalVariable(name: "maxval", scope: !4516, file: !910, line: 213, type: !936)
!4539 = !DILocation(line: 213, column: 21, scope: !4516, inlinedAt: !4520)
!4540 = !DILocalVariable(name: "slice", arg: 1, scope: !4512, file: !910, line: 553, type: !1858)
!4541 = !DILocation(line: 553, column: 38, scope: !4512)
!4542 = !DILocalVariable(name: "quant_idx", arg: 2, scope: !4512, file: !910, line: 553, type: !936)
!4543 = !DILocation(line: 553, column: 49, scope: !4512)
!4544 = !DILocalVariable(name: "x", scope: !4512, file: !910, line: 555, type: !936)
!4545 = !DILocation(line: 555, column: 9, scope: !4512)
!4546 = !DILocalVariable(name: "y", scope: !4512, file: !910, line: 555, type: !936)
!4547 = !DILocation(line: 555, column: 12, scope: !4512)
!4548 = !DILocalVariable(name: "quants", scope: !4512, file: !910, line: 556, type: !1906)
!4549 = !DILocation(line: 556, column: 13, scope: !4512)
!4550 = !DILocalVariable(name: "bits", scope: !4512, file: !910, line: 557, type: !936)
!4551 = !DILocation(line: 557, column: 9, scope: !4512)
!4552 = !DILocalVariable(name: "p", scope: !4512, file: !910, line: 557, type: !936)
!4553 = !DILocation(line: 557, column: 19, scope: !4512)
!4554 = !DILocalVariable(name: "level", scope: !4512, file: !910, line: 557, type: !936)
!4555 = !DILocation(line: 557, column: 22, scope: !4512)
!4556 = !DILocalVariable(name: "orientation", scope: !4512, file: !910, line: 557, type: !936)
!4557 = !DILocation(line: 557, column: 29, scope: !4512)
!4558 = !DILocalVariable(name: "s", scope: !4512, file: !910, line: 558, type: !1829)
!4559 = !DILocation(line: 558, column: 20, scope: !4512)
!4560 = !DILocation(line: 558, column: 24, scope: !4512)
!4561 = !DILocation(line: 558, column: 31, scope: !4512)
!4562 = !DILocation(line: 560, column: 22, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4512, file: !910, line: 560, column: 9)
!4564 = !DILocation(line: 560, column: 9, scope: !4563)
!4565 = !DILocation(line: 560, column: 16, scope: !4563)
!4566 = !DILocation(line: 560, column: 9, scope: !4512)
!4567 = !DILocation(line: 561, column: 29, scope: !4563)
!4568 = !DILocation(line: 561, column: 16, scope: !4563)
!4569 = !DILocation(line: 561, column: 23, scope: !4563)
!4570 = !DILocation(line: 561, column: 9, scope: !4563)
!4571 = !DILocation(line: 563, column: 15, scope: !4512)
!4572 = !DILocation(line: 563, column: 18, scope: !4512)
!4573 = !DILocation(line: 563, column: 14, scope: !4512)
!4574 = !DILocation(line: 563, column: 10, scope: !4512)
!4575 = !DILocation(line: 564, column: 10, scope: !4512)
!4576 = !DILocation(line: 566, column: 16, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4512, file: !910, line: 566, column: 5)
!4578 = !DILocation(line: 566, column: 10, scope: !4577)
!4579 = !DILocation(line: 566, column: 21, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !4581, file: !910, discriminator: 1)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !910, line: 566, column: 5)
!4582 = !DILocation(line: 566, column: 29, scope: !4580)
!4583 = !DILocation(line: 566, column: 32, scope: !4580)
!4584 = !DILocation(line: 566, column: 27, scope: !4580)
!4585 = !DILocation(line: 566, column: 5, scope: !4580)
!4586 = !DILocation(line: 567, column: 30, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4581, file: !910, line: 567, column: 9)
!4588 = !DILocation(line: 567, column: 29, scope: !4587)
!4589 = !DILocation(line: 567, column: 28, scope: !4587)
!4590 = !DILocation(line: 567, column: 26, scope: !4587)
!4591 = !DILocation(line: 567, column: 14, scope: !4587)
!4592 = !DILocation(line: 567, column: 37, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4594, file: !910, discriminator: 1)
!4594 = distinct !DILexicalBlock(scope: !4587, file: !910, line: 567, column: 9)
!4595 = !DILocation(line: 567, column: 49, scope: !4593)
!4596 = !DILocation(line: 567, column: 9, scope: !4593)
!4597 = !DILocation(line: 568, column: 44, scope: !4594)
!4598 = !DILocation(line: 568, column: 72, scope: !4594)
!4599 = !DILocation(line: 568, column: 56, scope: !4594)
!4600 = !DILocation(line: 568, column: 65, scope: !4594)
!4601 = !DILocation(line: 568, column: 59, scope: !4594)
!4602 = !DILocation(line: 568, column: 54, scope: !4594)
!4603 = !DILocation(line: 568, column: 86, scope: !4594)
!4604 = !DILocation(line: 568, column: 43, scope: !4594)
!4605 = !DILocation(line: 568, column: 95, scope: !4593)
!4606 = !DILocation(line: 568, column: 123, scope: !4593)
!4607 = !DILocation(line: 568, column: 107, scope: !4593)
!4608 = !DILocation(line: 568, column: 116, scope: !4593)
!4609 = !DILocation(line: 568, column: 110, scope: !4593)
!4610 = !DILocation(line: 568, column: 105, scope: !4593)
!4611 = !DILocation(line: 568, column: 43, scope: !4593)
!4612 = !DILocation(line: 568, column: 43, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !4594, file: !910, discriminator: 2)
!4614 = !DILocation(line: 568, column: 43, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !4594, file: !910, discriminator: 3)
!4616 = !DILocation(line: 568, column: 42, scope: !4615)
!4617 = !DILocation(line: 568, column: 27, scope: !4615)
!4618 = !DILocation(line: 568, column: 13, scope: !4615)
!4619 = !DILocation(line: 568, column: 20, scope: !4615)
!4620 = !DILocation(line: 568, column: 40, scope: !4615)
!4621 = !DILocation(line: 567, column: 65, scope: !4613)
!4622 = !DILocation(line: 567, column: 9, scope: !4613)
!4623 = distinct !{!4623, !4624}
!4624 = !DILocation(line: 567, column: 9, scope: !4581)
!4625 = !DILocation(line: 568, column: 142, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !4587, file: !910, discriminator: 4)
!4627 = !DILocation(line: 566, column: 52, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4581, file: !910, discriminator: 2)
!4629 = !DILocation(line: 566, column: 5, scope: !4628)
!4630 = distinct !{!4630, !4631}
!4631 = !DILocation(line: 566, column: 5, scope: !4512)
!4632 = !DILocation(line: 570, column: 12, scope: !4535)
!4633 = !DILocation(line: 570, column: 10, scope: !4535)
!4634 = !DILocation(line: 570, column: 17, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !4534, file: !910, discriminator: 1)
!4636 = !DILocation(line: 570, column: 19, scope: !4635)
!4637 = !DILocation(line: 570, column: 5, scope: !4635)
!4638 = !DILocalVariable(name: "bytes_start", scope: !4533, file: !910, line: 571, type: !936)
!4639 = !DILocation(line: 571, column: 13, scope: !4533)
!4640 = !DILocalVariable(name: "bytes_len", scope: !4533, file: !910, line: 571, type: !936)
!4641 = !DILocation(line: 571, column: 26, scope: !4533)
!4642 = !DILocalVariable(name: "pad_s", scope: !4533, file: !910, line: 571, type: !936)
!4643 = !DILocation(line: 571, column: 37, scope: !4533)
!4644 = !DILocalVariable(name: "pad_c", scope: !4533, file: !910, line: 571, type: !936)
!4645 = !DILocation(line: 571, column: 44, scope: !4533)
!4646 = !DILocation(line: 572, column: 23, scope: !4533)
!4647 = !DILocation(line: 572, column: 28, scope: !4533)
!4648 = !DILocation(line: 572, column: 21, scope: !4533)
!4649 = !DILocation(line: 573, column: 14, scope: !4533)
!4650 = !DILocation(line: 574, column: 20, scope: !4532)
!4651 = !DILocation(line: 574, column: 14, scope: !4532)
!4652 = !DILocation(line: 574, column: 25, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4531, file: !910, discriminator: 1)
!4654 = !DILocation(line: 574, column: 33, scope: !4653)
!4655 = !DILocation(line: 574, column: 36, scope: !4653)
!4656 = !DILocation(line: 574, column: 31, scope: !4653)
!4657 = !DILocation(line: 574, column: 9, scope: !4653)
!4658 = !DILocation(line: 575, column: 34, scope: !4529)
!4659 = !DILocation(line: 575, column: 33, scope: !4529)
!4660 = !DILocation(line: 575, column: 32, scope: !4529)
!4661 = !DILocation(line: 575, column: 30, scope: !4529)
!4662 = !DILocation(line: 575, column: 18, scope: !4529)
!4663 = !DILocation(line: 575, column: 41, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4528, file: !910, discriminator: 1)
!4665 = !DILocation(line: 575, column: 53, scope: !4664)
!4666 = !DILocation(line: 575, column: 13, scope: !4664)
!4667 = !DILocalVariable(name: "b", scope: !4527, file: !910, line: 576, type: !1781)
!4668 = !DILocation(line: 576, column: 26, scope: !4527)
!4669 = !DILocation(line: 576, column: 55, scope: !4527)
!4670 = !DILocation(line: 576, column: 31, scope: !4527)
!4671 = !DILocation(line: 576, column: 48, scope: !4527)
!4672 = !DILocation(line: 576, column: 40, scope: !4527)
!4673 = !DILocation(line: 576, column: 34, scope: !4527)
!4674 = !DILocation(line: 576, column: 43, scope: !4527)
!4675 = !DILocalVariable(name: "q_idx", scope: !4527, file: !910, line: 578, type: !989)
!4676 = !DILocation(line: 578, column: 27, scope: !4527)
!4677 = !DILocation(line: 578, column: 49, scope: !4527)
!4678 = !DILocation(line: 578, column: 35, scope: !4527)
!4679 = !DILocation(line: 578, column: 42, scope: !4527)
!4680 = !DILocalVariable(name: "q_m", scope: !4527, file: !910, line: 579, type: !995)
!4681 = !DILocation(line: 579, column: 32, scope: !4527)
!4682 = !DILocation(line: 579, column: 63, scope: !4527)
!4683 = !DILocation(line: 579, column: 49, scope: !4527)
!4684 = !DILocation(line: 579, column: 52, scope: !4527)
!4685 = !DILocation(line: 579, column: 39, scope: !4527)
!4686 = !DILocation(line: 579, column: 74, scope: !4527)
!4687 = !DILocalVariable(name: "q_a", scope: !4527, file: !910, line: 580, type: !995)
!4688 = !DILocation(line: 580, column: 32, scope: !4527)
!4689 = !DILocation(line: 580, column: 52, scope: !4527)
!4690 = !DILocation(line: 580, column: 38, scope: !4527)
!4691 = !DILocation(line: 580, column: 41, scope: !4527)
!4692 = !DILocalVariable(name: "q_s", scope: !4527, file: !910, line: 581, type: !989)
!4693 = !DILocation(line: 581, column: 27, scope: !4527)
!4694 = !DILocation(line: 581, column: 74, scope: !4527)
!4695 = !DILocation(line: 581, column: 54, scope: !4527)
!4696 = !DILocation(line: 581, column: 81, scope: !4527)
!4697 = !DILocation(line: 581, column: 39, scope: !4527)
!4698 = !DILocation(line: 581, column: 37, scope: !4527)
!4699 = !DILocation(line: 581, column: 86, scope: !4527)
!4700 = !DILocalVariable(name: "left", scope: !4527, file: !910, line: 583, type: !989)
!4701 = !DILocation(line: 583, column: 27, scope: !4527)
!4702 = !DILocation(line: 583, column: 34, scope: !4527)
!4703 = !DILocation(line: 583, column: 37, scope: !4527)
!4704 = !DILocation(line: 583, column: 45, scope: !4527)
!4705 = !DILocation(line: 583, column: 52, scope: !4527)
!4706 = !DILocation(line: 583, column: 43, scope: !4527)
!4707 = !DILocation(line: 583, column: 56, scope: !4527)
!4708 = !DILocation(line: 583, column: 59, scope: !4527)
!4709 = !DILocation(line: 583, column: 54, scope: !4527)
!4710 = !DILocalVariable(name: "right", scope: !4527, file: !910, line: 584, type: !989)
!4711 = !DILocation(line: 584, column: 27, scope: !4527)
!4712 = !DILocation(line: 584, column: 35, scope: !4527)
!4713 = !DILocation(line: 584, column: 38, scope: !4527)
!4714 = !DILocation(line: 584, column: 46, scope: !4527)
!4715 = !DILocation(line: 584, column: 53, scope: !4527)
!4716 = !DILocation(line: 584, column: 54, scope: !4527)
!4717 = !DILocation(line: 584, column: 44, scope: !4527)
!4718 = !DILocation(line: 584, column: 60, scope: !4527)
!4719 = !DILocation(line: 584, column: 63, scope: !4527)
!4720 = !DILocation(line: 584, column: 58, scope: !4527)
!4721 = !DILocalVariable(name: "top", scope: !4527, file: !910, line: 585, type: !989)
!4722 = !DILocation(line: 585, column: 27, scope: !4527)
!4723 = !DILocation(line: 585, column: 33, scope: !4527)
!4724 = !DILocation(line: 585, column: 36, scope: !4527)
!4725 = !DILocation(line: 585, column: 45, scope: !4527)
!4726 = !DILocation(line: 585, column: 52, scope: !4527)
!4727 = !DILocation(line: 585, column: 43, scope: !4527)
!4728 = !DILocation(line: 585, column: 56, scope: !4527)
!4729 = !DILocation(line: 585, column: 59, scope: !4527)
!4730 = !DILocation(line: 585, column: 54, scope: !4527)
!4731 = !DILocalVariable(name: "bottom", scope: !4527, file: !910, line: 586, type: !989)
!4732 = !DILocation(line: 586, column: 27, scope: !4527)
!4733 = !DILocation(line: 586, column: 36, scope: !4527)
!4734 = !DILocation(line: 586, column: 39, scope: !4527)
!4735 = !DILocation(line: 586, column: 48, scope: !4527)
!4736 = !DILocation(line: 586, column: 55, scope: !4527)
!4737 = !DILocation(line: 586, column: 56, scope: !4527)
!4738 = !DILocation(line: 586, column: 46, scope: !4527)
!4739 = !DILocation(line: 586, column: 62, scope: !4527)
!4740 = !DILocation(line: 586, column: 65, scope: !4527)
!4741 = !DILocation(line: 586, column: 60, scope: !4527)
!4742 = !DILocalVariable(name: "buf", scope: !4527, file: !910, line: 588, type: !1765)
!4743 = !DILocation(line: 588, column: 26, scope: !4527)
!4744 = !DILocation(line: 588, column: 32, scope: !4527)
!4745 = !DILocation(line: 588, column: 35, scope: !4527)
!4746 = !DILocation(line: 588, column: 41, scope: !4527)
!4747 = !DILocation(line: 588, column: 47, scope: !4527)
!4748 = !DILocation(line: 588, column: 50, scope: !4527)
!4749 = !DILocation(line: 588, column: 45, scope: !4527)
!4750 = !DILocation(line: 588, column: 39, scope: !4527)
!4751 = !DILocation(line: 590, column: 26, scope: !4526)
!4752 = !DILocation(line: 590, column: 24, scope: !4526)
!4753 = !DILocation(line: 590, column: 22, scope: !4526)
!4754 = !DILocation(line: 590, column: 31, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4525, file: !910, discriminator: 1)
!4756 = !DILocation(line: 590, column: 35, scope: !4755)
!4757 = !DILocation(line: 590, column: 33, scope: !4755)
!4758 = !DILocation(line: 590, column: 17, scope: !4755)
!4759 = !DILocation(line: 591, column: 30, scope: !4523)
!4760 = !DILocation(line: 591, column: 28, scope: !4523)
!4761 = !DILocation(line: 591, column: 26, scope: !4523)
!4762 = !DILocation(line: 591, column: 36, scope: !4763)
!4763 = !DILexicalBlockFile(scope: !4522, file: !910, discriminator: 1)
!4764 = !DILocation(line: 591, column: 40, scope: !4763)
!4765 = !DILocation(line: 591, column: 38, scope: !4763)
!4766 = !DILocation(line: 591, column: 21, scope: !4763)
!4767 = !DILocalVariable(name: "c_abs", scope: !4521, file: !910, line: 592, type: !954)
!4768 = !DILocation(line: 592, column: 34, scope: !4521)
!4769 = !DILocation(line: 592, column: 45, scope: !4521)
!4770 = !DILocation(line: 592, column: 59, scope: !4521)
!4771 = !DILocation(line: 592, column: 55, scope: !4521)
!4772 = !DILocation(line: 592, column: 63, scope: !4521)
!4773 = !DILocation(line: 592, column: 54, scope: !4521)
!4774 = !DILocation(line: 592, column: 75, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4521, file: !910, discriminator: 1)
!4776 = !DILocation(line: 592, column: 71, scope: !4775)
!4777 = !DILocation(line: 592, column: 54, scope: !4775)
!4778 = !DILocation(line: 592, column: 88, scope: !4779)
!4779 = !DILexicalBlockFile(scope: !4521, file: !910, discriminator: 2)
!4780 = !DILocation(line: 592, column: 84, scope: !4779)
!4781 = !DILocation(line: 592, column: 82, scope: !4779)
!4782 = !DILocation(line: 592, column: 54, scope: !4779)
!4783 = !DILocation(line: 592, column: 54, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4521, file: !910, discriminator: 3)
!4785 = !DILocation(line: 592, column: 52, scope: !4784)
!4786 = !DILocation(line: 592, column: 50, scope: !4784)
!4787 = !DILocation(line: 592, column: 98, scope: !4784)
!4788 = !DILocation(line: 592, column: 95, scope: !4784)
!4789 = !DILocation(line: 592, column: 108, scope: !4784)
!4790 = !DILocation(line: 592, column: 104, scope: !4784)
!4791 = !DILocation(line: 592, column: 42, scope: !4784)
!4792 = !DILocation(line: 592, column: 34, scope: !4784)
!4793 = !DILocation(line: 593, column: 51, scope: !4521)
!4794 = !DILocation(line: 593, column: 33, scope: !4521)
!4795 = !DILocation(line: 215, column: 13, scope: !4796, inlinedAt: !4520)
!4796 = distinct !DILexicalBlock(scope: !4516, file: !910, line: 215, column: 9)
!4797 = !DILocation(line: 215, column: 9, scope: !4516, inlinedAt: !4520)
!4798 = !DILocation(line: 216, column: 9, scope: !4796, inlinedAt: !4520)
!4799 = !DILocation(line: 218, column: 5, scope: !4516, inlinedAt: !4520)
!4800 = !DILocation(line: 218, column: 12, scope: !4801, inlinedAt: !4520)
!4801 = !DILexicalBlockFile(scope: !4516, file: !910, discriminator: 1)
!4802 = !DILocation(line: 218, column: 18, scope: !4801, inlinedAt: !4520)
!4803 = !DILocation(line: 218, column: 16, scope: !4801, inlinedAt: !4520)
!4804 = !DILocation(line: 218, column: 5, scope: !4801, inlinedAt: !4520)
!4805 = !DILocation(line: 219, column: 16, scope: !4806, inlinedAt: !4520)
!4806 = distinct !DILexicalBlock(scope: !4516, file: !910, line: 218, column: 26)
!4807 = !DILocation(line: 220, column: 16, scope: !4806, inlinedAt: !4520)
!4808 = !DILocation(line: 221, column: 16, scope: !4806, inlinedAt: !4520)
!4809 = !DILocation(line: 218, column: 5, scope: !4810, inlinedAt: !4520)
!4810 = !DILexicalBlockFile(scope: !4516, file: !910, discriminator: 2)
!4811 = distinct !{!4811, !4812}
!4812 = !DILocation(line: 218, column: 5, scope: !4516)
!4813 = !DILocation(line: 224, column: 33, scope: !4516, inlinedAt: !4520)
!4814 = !DILocation(line: 224, column: 40, scope: !4516, inlinedAt: !4520)
!4815 = !DILocation(line: 224, column: 18, scope: !4516, inlinedAt: !4520)
!4816 = !DILocation(line: 224, column: 16, scope: !4516, inlinedAt: !4520)
!4817 = !DILocation(line: 224, column: 44, scope: !4516, inlinedAt: !4520)
!4818 = !DILocation(line: 224, column: 47, scope: !4516, inlinedAt: !4520)
!4819 = !DILocation(line: 224, column: 5, scope: !4516, inlinedAt: !4520)
!4820 = !DILocation(line: 225, column: 1, scope: !4516, inlinedAt: !4520)
!4821 = !DILocation(line: 593, column: 30, scope: !4521)
!4822 = !DILocation(line: 594, column: 35, scope: !4521)
!4823 = !DILocation(line: 594, column: 34, scope: !4521)
!4824 = !DILocation(line: 594, column: 33, scope: !4521)
!4825 = !DILocation(line: 594, column: 30, scope: !4521)
!4826 = !DILocation(line: 595, column: 21, scope: !4521)
!4827 = !DILocation(line: 591, column: 48, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4522, file: !910, discriminator: 2)
!4829 = !DILocation(line: 591, column: 21, scope: !4828)
!4830 = distinct !{!4830, !4831}
!4831 = !DILocation(line: 591, column: 21, scope: !4524)
!4832 = !DILocation(line: 596, column: 28, scope: !4524)
!4833 = !DILocation(line: 596, column: 31, scope: !4524)
!4834 = !DILocation(line: 596, column: 25, scope: !4524)
!4835 = !DILocation(line: 597, column: 17, scope: !4524)
!4836 = !DILocation(line: 590, column: 44, scope: !4837)
!4837 = !DILexicalBlockFile(scope: !4525, file: !910, discriminator: 2)
!4838 = !DILocation(line: 590, column: 17, scope: !4837)
!4839 = distinct !{!4839, !4840}
!4840 = !DILocation(line: 590, column: 17, scope: !4527)
!4841 = !DILocation(line: 598, column: 13, scope: !4527)
!4842 = !DILocation(line: 575, column: 69, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4528, file: !910, discriminator: 2)
!4844 = !DILocation(line: 575, column: 13, scope: !4843)
!4845 = distinct !{!4845, !4846}
!4846 = !DILocation(line: 575, column: 13, scope: !4530)
!4847 = !DILocation(line: 599, column: 9, scope: !4530)
!4848 = !DILocation(line: 574, column: 56, scope: !4849)
!4849 = !DILexicalBlockFile(scope: !4531, file: !910, discriminator: 2)
!4850 = !DILocation(line: 574, column: 9, scope: !4849)
!4851 = distinct !{!4851, !4852}
!4852 = !DILocation(line: 574, column: 9, scope: !4533)
!4853 = !DILocation(line: 600, column: 20, scope: !4533)
!4854 = !DILocation(line: 600, column: 25, scope: !4533)
!4855 = !DILocation(line: 600, column: 29, scope: !4533)
!4856 = !DILocation(line: 600, column: 32, scope: !4533)
!4857 = !DILocation(line: 600, column: 45, scope: !4533)
!4858 = !DILocation(line: 600, column: 43, scope: !4533)
!4859 = !DILocation(line: 600, column: 14, scope: !4533)
!4860 = !DILocation(line: 601, column: 22, scope: !4533)
!4861 = !DILocation(line: 601, column: 27, scope: !4533)
!4862 = !DILocation(line: 601, column: 35, scope: !4533)
!4863 = !DILocation(line: 601, column: 33, scope: !4533)
!4864 = !DILocation(line: 601, column: 47, scope: !4533)
!4865 = !DILocation(line: 601, column: 19, scope: !4533)
!4866 = !DILocation(line: 602, column: 20, scope: !4533)
!4867 = !DILocation(line: 602, column: 32, scope: !4533)
!4868 = !DILocation(line: 602, column: 35, scope: !4533)
!4869 = !DILocation(line: 602, column: 30, scope: !4533)
!4870 = !DILocation(line: 602, column: 47, scope: !4533)
!4871 = !DILocation(line: 602, column: 54, scope: !4533)
!4872 = !DILocation(line: 602, column: 57, scope: !4533)
!4873 = !DILocation(line: 602, column: 69, scope: !4533)
!4874 = !DILocation(line: 602, column: 51, scope: !4533)
!4875 = !DILocation(line: 602, column: 50, scope: !4533)
!4876 = !DILocation(line: 602, column: 74, scope: !4533)
!4877 = !DILocation(line: 602, column: 77, scope: !4533)
!4878 = !DILocation(line: 602, column: 73, scope: !4533)
!4879 = !DILocation(line: 602, column: 15, scope: !4533)
!4880 = !DILocation(line: 603, column: 18, scope: !4533)
!4881 = !DILocation(line: 603, column: 24, scope: !4533)
!4882 = !DILocation(line: 603, column: 27, scope: !4533)
!4883 = !DILocation(line: 603, column: 23, scope: !4533)
!4884 = !DILocation(line: 603, column: 42, scope: !4533)
!4885 = !DILocation(line: 603, column: 40, scope: !4533)
!4886 = !DILocation(line: 603, column: 15, scope: !4533)
!4887 = !DILocation(line: 604, column: 17, scope: !4533)
!4888 = !DILocation(line: 604, column: 22, scope: !4533)
!4889 = !DILocation(line: 604, column: 14, scope: !4533)
!4890 = !DILocation(line: 605, column: 5, scope: !4533)
!4891 = !DILocation(line: 570, column: 25, scope: !4892)
!4892 = !DILexicalBlockFile(scope: !4534, file: !910, discriminator: 2)
!4893 = !DILocation(line: 570, column: 5, scope: !4892)
!4894 = distinct !{!4894, !4895}
!4895 = !DILocation(line: 570, column: 5, scope: !4512)
!4896 = !DILocation(line: 607, column: 31, scope: !4512)
!4897 = !DILocation(line: 607, column: 18, scope: !4512)
!4898 = !DILocation(line: 607, column: 5, scope: !4512)
!4899 = !DILocation(line: 607, column: 12, scope: !4512)
!4900 = !DILocation(line: 607, column: 29, scope: !4512)
!4901 = !DILocation(line: 609, column: 12, scope: !4512)
!4902 = !DILocation(line: 609, column: 5, scope: !4512)
!4903 = !DILocation(line: 610, column: 1, scope: !4512)
!4904 = distinct !DISubprogram(name: "put_bits", scope: !1837, file: !1837, line: 164, type: !4905, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{null, !2969, !936, !937}
!4907 = !DILocation(line: 66, column: 98, scope: !3714, inlinedAt: !4908)
!4908 = distinct !DILocation(line: 197, column: 60, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !1837, line: 196, column: 42)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !1837, line: 196, column: 13)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !1837, line: 193, column: 12)
!4912 = distinct !DILexicalBlock(scope: !4904, file: !1837, line: 190, column: 9)
!4913 = !DILocalVariable(name: "s", arg: 1, scope: !4904, file: !1837, line: 164, type: !2969)
!4914 = !DILocation(line: 164, column: 44, scope: !4904)
!4915 = !DILocalVariable(name: "n", arg: 2, scope: !4904, file: !1837, line: 164, type: !936)
!4916 = !DILocation(line: 164, column: 51, scope: !4904)
!4917 = !DILocalVariable(name: "value", arg: 3, scope: !4904, file: !1837, line: 164, type: !937)
!4918 = !DILocation(line: 164, column: 67, scope: !4904)
!4919 = !DILocalVariable(name: "bit_buf", scope: !4904, file: !1837, line: 166, type: !937)
!4920 = !DILocation(line: 166, column: 18, scope: !4904)
!4921 = !DILocalVariable(name: "bit_left", scope: !4904, file: !1837, line: 167, type: !936)
!4922 = !DILocation(line: 167, column: 9, scope: !4904)
!4923 = !DILocation(line: 171, column: 15, scope: !4904)
!4924 = !DILocation(line: 171, column: 18, scope: !4904)
!4925 = !DILocation(line: 171, column: 13, scope: !4904)
!4926 = !DILocation(line: 172, column: 16, scope: !4904)
!4927 = !DILocation(line: 172, column: 19, scope: !4904)
!4928 = !DILocation(line: 172, column: 14, scope: !4904)
!4929 = !DILocation(line: 190, column: 9, scope: !4912)
!4930 = !DILocation(line: 190, column: 13, scope: !4912)
!4931 = !DILocation(line: 190, column: 11, scope: !4912)
!4932 = !DILocation(line: 190, column: 9, scope: !4904)
!4933 = !DILocation(line: 191, column: 20, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4912, file: !1837, line: 190, column: 23)
!4935 = !DILocation(line: 191, column: 31, scope: !4934)
!4936 = !DILocation(line: 191, column: 28, scope: !4934)
!4937 = !DILocation(line: 191, column: 36, scope: !4934)
!4938 = !DILocation(line: 191, column: 34, scope: !4934)
!4939 = !DILocation(line: 191, column: 17, scope: !4934)
!4940 = !DILocation(line: 192, column: 21, scope: !4934)
!4941 = !DILocation(line: 192, column: 18, scope: !4934)
!4942 = !DILocation(line: 193, column: 5, scope: !4934)
!4943 = !DILocation(line: 194, column: 21, scope: !4911)
!4944 = !DILocation(line: 194, column: 17, scope: !4911)
!4945 = !DILocation(line: 195, column: 20, scope: !4911)
!4946 = !DILocation(line: 195, column: 30, scope: !4911)
!4947 = !DILocation(line: 195, column: 34, scope: !4911)
!4948 = !DILocation(line: 195, column: 32, scope: !4911)
!4949 = !DILocation(line: 195, column: 26, scope: !4911)
!4950 = !DILocation(line: 195, column: 17, scope: !4911)
!4951 = !DILocation(line: 196, column: 17, scope: !4910)
!4952 = !DILocation(line: 196, column: 20, scope: !4910)
!4953 = !DILocation(line: 196, column: 30, scope: !4910)
!4954 = !DILocation(line: 196, column: 33, scope: !4910)
!4955 = !DILocation(line: 196, column: 28, scope: !4910)
!4956 = !DILocation(line: 196, column: 15, scope: !4910)
!4957 = !DILocation(line: 196, column: 13, scope: !4911)
!4958 = !DILocation(line: 197, column: 71, scope: !4909)
!4959 = !DILocation(line: 197, column: 60, scope: !4909)
!4960 = !DILocation(line: 68, column: 16, scope: !3714, inlinedAt: !4908)
!4961 = !DILocation(line: 68, column: 19, scope: !3714, inlinedAt: !4908)
!4962 = !DILocation(line: 68, column: 24, scope: !3714, inlinedAt: !4908)
!4963 = !DILocation(line: 68, column: 38, scope: !3714, inlinedAt: !4908)
!4964 = !DILocation(line: 68, column: 41, scope: !3714, inlinedAt: !4908)
!4965 = !DILocation(line: 68, column: 46, scope: !3714, inlinedAt: !4908)
!4966 = !DILocation(line: 68, column: 34, scope: !3714, inlinedAt: !4908)
!4967 = !DILocation(line: 68, column: 57, scope: !3714, inlinedAt: !4908)
!4968 = !DILocation(line: 68, column: 69, scope: !3714, inlinedAt: !4908)
!4969 = !DILocation(line: 68, column: 72, scope: !3714, inlinedAt: !4908)
!4970 = !DILocation(line: 68, column: 79, scope: !3714, inlinedAt: !4908)
!4971 = !DILocation(line: 68, column: 84, scope: !3714, inlinedAt: !4908)
!4972 = !DILocation(line: 68, column: 99, scope: !3714, inlinedAt: !4908)
!4973 = !DILocation(line: 68, column: 102, scope: !3714, inlinedAt: !4908)
!4974 = !DILocation(line: 68, column: 109, scope: !3714, inlinedAt: !4908)
!4975 = !DILocation(line: 68, column: 114, scope: !3714, inlinedAt: !4908)
!4976 = !DILocation(line: 68, column: 94, scope: !3714, inlinedAt: !4908)
!4977 = !DILocation(line: 68, column: 63, scope: !3714, inlinedAt: !4908)
!4978 = !DILocation(line: 197, column: 40, scope: !4909)
!4979 = !DILocation(line: 197, column: 43, scope: !4909)
!4980 = !DILocation(line: 197, column: 54, scope: !4909)
!4981 = !DILocation(line: 197, column: 57, scope: !4909)
!4982 = !DILocation(line: 198, column: 13, scope: !4909)
!4983 = !DILocation(line: 198, column: 16, scope: !4909)
!4984 = !DILocation(line: 198, column: 24, scope: !4909)
!4985 = !DILocation(line: 199, column: 9, scope: !4909)
!4986 = !DILocation(line: 200, column: 13, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4910, file: !1837, line: 199, column: 16)
!4988 = !DILocation(line: 203, column: 26, scope: !4911)
!4989 = !DILocation(line: 203, column: 24, scope: !4911)
!4990 = !DILocation(line: 203, column: 18, scope: !4911)
!4991 = !DILocation(line: 204, column: 19, scope: !4911)
!4992 = !DILocation(line: 204, column: 17, scope: !4911)
!4993 = !DILocation(line: 208, column: 18, scope: !4904)
!4994 = !DILocation(line: 208, column: 5, scope: !4904)
!4995 = !DILocation(line: 208, column: 8, scope: !4904)
!4996 = !DILocation(line: 208, column: 16, scope: !4904)
!4997 = !DILocation(line: 209, column: 19, scope: !4904)
!4998 = !DILocation(line: 209, column: 5, scope: !4904)
!4999 = !DILocation(line: 209, column: 8, scope: !4904)
!5000 = !DILocation(line: 209, column: 17, scope: !4904)
!5001 = !DILocation(line: 210, column: 1, scope: !4904)
!5002 = distinct !DISubprogram(name: "put_bits32", scope: !1837, file: !1837, line: 250, type: !3809, isLocal: true, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5003 = !DILocation(line: 66, column: 98, scope: !3714, inlinedAt: !5004)
!5004 = distinct !DILocation(line: 272, column: 56, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !1837, line: 271, column: 38)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !1837, line: 271, column: 9)
!5007 = !DILocalVariable(name: "s", arg: 1, scope: !5002, file: !1837, line: 250, type: !2969)
!5008 = !DILocation(line: 250, column: 63, scope: !5002)
!5009 = !DILocalVariable(name: "value", arg: 2, scope: !5002, file: !1837, line: 250, type: !954)
!5010 = !DILocation(line: 250, column: 75, scope: !5002)
!5011 = !DILocalVariable(name: "bit_buf", scope: !5002, file: !1837, line: 252, type: !937)
!5012 = !DILocation(line: 252, column: 18, scope: !5002)
!5013 = !DILocalVariable(name: "bit_left", scope: !5002, file: !1837, line: 253, type: !936)
!5014 = !DILocation(line: 253, column: 9, scope: !5002)
!5015 = !DILocation(line: 255, column: 15, scope: !5002)
!5016 = !DILocation(line: 255, column: 18, scope: !5002)
!5017 = !DILocation(line: 255, column: 13, scope: !5002)
!5018 = !DILocation(line: 256, column: 16, scope: !5002)
!5019 = !DILocation(line: 256, column: 19, scope: !5002)
!5020 = !DILocation(line: 256, column: 14, scope: !5002)
!5021 = !DILocation(line: 269, column: 25, scope: !5002)
!5022 = !DILocation(line: 269, column: 15, scope: !5002)
!5023 = !DILocation(line: 269, column: 36, scope: !5002)
!5024 = !DILocation(line: 269, column: 33, scope: !5002)
!5025 = !DILocation(line: 269, column: 13, scope: !5002)
!5026 = !DILocation(line: 270, column: 16, scope: !5002)
!5027 = !DILocation(line: 270, column: 31, scope: !5002)
!5028 = !DILocation(line: 270, column: 29, scope: !5002)
!5029 = !DILocation(line: 270, column: 22, scope: !5002)
!5030 = !DILocation(line: 270, column: 13, scope: !5002)
!5031 = !DILocation(line: 271, column: 13, scope: !5006)
!5032 = !DILocation(line: 271, column: 16, scope: !5006)
!5033 = !DILocation(line: 271, column: 26, scope: !5006)
!5034 = !DILocation(line: 271, column: 29, scope: !5006)
!5035 = !DILocation(line: 271, column: 24, scope: !5006)
!5036 = !DILocation(line: 271, column: 11, scope: !5006)
!5037 = !DILocation(line: 271, column: 9, scope: !5002)
!5038 = !DILocation(line: 272, column: 67, scope: !5005)
!5039 = !DILocation(line: 272, column: 56, scope: !5005)
!5040 = !DILocation(line: 68, column: 16, scope: !3714, inlinedAt: !5004)
!5041 = !DILocation(line: 68, column: 19, scope: !3714, inlinedAt: !5004)
!5042 = !DILocation(line: 68, column: 24, scope: !3714, inlinedAt: !5004)
!5043 = !DILocation(line: 68, column: 38, scope: !3714, inlinedAt: !5004)
!5044 = !DILocation(line: 68, column: 41, scope: !3714, inlinedAt: !5004)
!5045 = !DILocation(line: 68, column: 46, scope: !3714, inlinedAt: !5004)
!5046 = !DILocation(line: 68, column: 34, scope: !3714, inlinedAt: !5004)
!5047 = !DILocation(line: 68, column: 57, scope: !3714, inlinedAt: !5004)
!5048 = !DILocation(line: 68, column: 69, scope: !3714, inlinedAt: !5004)
!5049 = !DILocation(line: 68, column: 72, scope: !3714, inlinedAt: !5004)
!5050 = !DILocation(line: 68, column: 79, scope: !3714, inlinedAt: !5004)
!5051 = !DILocation(line: 68, column: 84, scope: !3714, inlinedAt: !5004)
!5052 = !DILocation(line: 68, column: 99, scope: !3714, inlinedAt: !5004)
!5053 = !DILocation(line: 68, column: 102, scope: !3714, inlinedAt: !5004)
!5054 = !DILocation(line: 68, column: 109, scope: !3714, inlinedAt: !5004)
!5055 = !DILocation(line: 68, column: 114, scope: !3714, inlinedAt: !5004)
!5056 = !DILocation(line: 68, column: 94, scope: !3714, inlinedAt: !5004)
!5057 = !DILocation(line: 68, column: 63, scope: !3714, inlinedAt: !5004)
!5058 = !DILocation(line: 272, column: 36, scope: !5005)
!5059 = !DILocation(line: 272, column: 39, scope: !5005)
!5060 = !DILocation(line: 272, column: 50, scope: !5005)
!5061 = !DILocation(line: 272, column: 53, scope: !5005)
!5062 = !DILocation(line: 273, column: 9, scope: !5005)
!5063 = !DILocation(line: 273, column: 12, scope: !5005)
!5064 = !DILocation(line: 273, column: 20, scope: !5005)
!5065 = !DILocation(line: 274, column: 5, scope: !5005)
!5066 = !DILocation(line: 275, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5006, file: !1837, line: 274, column: 12)
!5068 = !DILocation(line: 278, column: 15, scope: !5002)
!5069 = !DILocation(line: 278, column: 13, scope: !5002)
!5070 = !DILocation(line: 281, column: 18, scope: !5002)
!5071 = !DILocation(line: 281, column: 5, scope: !5002)
!5072 = !DILocation(line: 281, column: 8, scope: !5002)
!5073 = !DILocation(line: 281, column: 16, scope: !5002)
!5074 = !DILocation(line: 282, column: 19, scope: !5002)
!5075 = !DILocation(line: 282, column: 5, scope: !5002)
!5076 = !DILocation(line: 282, column: 8, scope: !5002)
!5077 = !DILocation(line: 282, column: 17, scope: !5002)
!5078 = !DILocation(line: 283, column: 1, scope: !5002)
!5079 = distinct !DISubprogram(name: "encode_parse_params", scope: !910, file: !910, line: 260, type: !3805, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5080 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5081)
!5081 = distinct !DILocation(line: 265, column: 5, scope: !5079)
!5082 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5081)
!5083 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5081)
!5084 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5081)
!5085 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5081)
!5086 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5081)
!5087 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5081)
!5088 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5089)
!5089 = distinct !DILocation(line: 264, column: 5, scope: !5079)
!5090 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5089)
!5091 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5089)
!5092 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5089)
!5093 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5089)
!5094 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5089)
!5095 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5089)
!5096 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5097)
!5097 = distinct !DILocation(line: 263, column: 5, scope: !5079)
!5098 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5097)
!5099 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5097)
!5100 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5097)
!5101 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5097)
!5102 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5097)
!5103 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5097)
!5104 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5105)
!5105 = distinct !DILocation(line: 262, column: 5, scope: !5079)
!5106 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5105)
!5107 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5105)
!5108 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5105)
!5109 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5105)
!5110 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5105)
!5111 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5105)
!5112 = !DILocalVariable(name: "s", arg: 1, scope: !5079, file: !910, line: 260, type: !1829)
!5113 = !DILocation(line: 260, column: 48, scope: !5079)
!5114 = !DILocation(line: 262, column: 22, scope: !5079)
!5115 = !DILocation(line: 262, column: 25, scope: !5079)
!5116 = !DILocation(line: 262, column: 29, scope: !5079)
!5117 = !DILocation(line: 262, column: 32, scope: !5079)
!5118 = !DILocation(line: 262, column: 36, scope: !5079)
!5119 = !DILocation(line: 262, column: 5, scope: !5079)
!5120 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5105)
!5121 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5105)
!5122 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5105)
!5123 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5105)
!5124 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5105)
!5125 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5105)
!5126 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5105)
!5127 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5105)
!5128 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5105)
!5129 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5105)
!5130 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5105)
!5131 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5105)
!5132 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5105)
!5133 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5105)
!5134 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5105)
!5135 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5105)
!5136 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5105)
!5137 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5105)
!5138 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5105)
!5139 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5105)
!5140 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5105)
!5141 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5105)
!5142 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5105)
!5143 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5105)
!5144 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5105)
!5145 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5105)
!5146 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5105)
!5147 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5105)
!5148 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5105)
!5149 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5105)
!5150 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5105)
!5151 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5105)
!5152 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5105)
!5153 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5105)
!5154 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5105)
!5155 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5105)
!5156 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5105)
!5157 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5105)
!5158 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5105)
!5159 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5105)
!5160 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5105)
!5161 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5105)
!5162 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5105)
!5163 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5105)
!5164 = !DILocation(line: 263, column: 22, scope: !5079)
!5165 = !DILocation(line: 263, column: 25, scope: !5079)
!5166 = !DILocation(line: 263, column: 29, scope: !5079)
!5167 = !DILocation(line: 263, column: 32, scope: !5079)
!5168 = !DILocation(line: 263, column: 36, scope: !5079)
!5169 = !DILocation(line: 263, column: 5, scope: !5079)
!5170 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5097)
!5171 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5097)
!5172 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5097)
!5173 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5097)
!5174 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5097)
!5175 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5097)
!5176 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5097)
!5177 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5097)
!5178 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5097)
!5179 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5097)
!5180 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5097)
!5181 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5097)
!5182 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5097)
!5183 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5097)
!5184 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5097)
!5185 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5097)
!5186 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5097)
!5187 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5097)
!5188 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5097)
!5189 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5097)
!5190 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5097)
!5191 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5097)
!5192 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5097)
!5193 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5097)
!5194 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5097)
!5195 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5097)
!5196 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5097)
!5197 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5097)
!5198 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5097)
!5199 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5097)
!5200 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5097)
!5201 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5097)
!5202 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5097)
!5203 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5097)
!5204 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5097)
!5205 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5097)
!5206 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5097)
!5207 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5097)
!5208 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5097)
!5209 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5097)
!5210 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5097)
!5211 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5097)
!5212 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5097)
!5213 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5097)
!5214 = !DILocation(line: 264, column: 22, scope: !5079)
!5215 = !DILocation(line: 264, column: 25, scope: !5079)
!5216 = !DILocation(line: 264, column: 29, scope: !5079)
!5217 = !DILocation(line: 264, column: 32, scope: !5079)
!5218 = !DILocation(line: 264, column: 5, scope: !5079)
!5219 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5089)
!5220 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5089)
!5221 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5089)
!5222 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5089)
!5223 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5089)
!5224 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5089)
!5225 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5089)
!5226 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5089)
!5227 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5089)
!5228 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5089)
!5229 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5089)
!5230 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5089)
!5231 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5089)
!5232 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5089)
!5233 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5089)
!5234 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5089)
!5235 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5089)
!5236 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5089)
!5237 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5089)
!5238 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5089)
!5239 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5089)
!5240 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5089)
!5241 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5089)
!5242 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5089)
!5243 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5089)
!5244 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5089)
!5245 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5089)
!5246 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5089)
!5247 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5089)
!5248 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5089)
!5249 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5089)
!5250 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5089)
!5251 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5089)
!5252 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5089)
!5253 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5089)
!5254 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5089)
!5255 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5089)
!5256 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5089)
!5257 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5089)
!5258 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5089)
!5259 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5089)
!5260 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5089)
!5261 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5089)
!5262 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5089)
!5263 = !DILocation(line: 265, column: 22, scope: !5079)
!5264 = !DILocation(line: 265, column: 25, scope: !5079)
!5265 = !DILocation(line: 265, column: 29, scope: !5079)
!5266 = !DILocation(line: 265, column: 32, scope: !5079)
!5267 = !DILocation(line: 265, column: 5, scope: !5079)
!5268 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5081)
!5269 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5081)
!5270 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5081)
!5271 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5081)
!5272 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5081)
!5273 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5081)
!5274 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5081)
!5275 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5081)
!5276 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5081)
!5277 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5081)
!5278 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5081)
!5279 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5081)
!5280 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5081)
!5281 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5081)
!5282 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5081)
!5283 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5081)
!5284 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5081)
!5285 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5081)
!5286 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5081)
!5287 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5081)
!5288 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5081)
!5289 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5081)
!5290 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5081)
!5291 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5081)
!5292 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5081)
!5293 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5081)
!5294 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5081)
!5295 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5081)
!5296 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5081)
!5297 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5081)
!5298 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5081)
!5299 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5081)
!5300 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5081)
!5301 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5081)
!5302 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5081)
!5303 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5081)
!5304 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5081)
!5305 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5081)
!5306 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5081)
!5307 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5081)
!5308 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5081)
!5309 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5081)
!5310 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5081)
!5311 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5081)
!5312 = !DILocation(line: 266, column: 1, scope: !5079)
!5313 = distinct !DISubprogram(name: "encode_source_params", scope: !910, file: !910, line: 387, type: !3805, isLocal: true, isDefinition: true, scopeLine: 388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5314 = !DILocalVariable(name: "s", arg: 1, scope: !5313, file: !910, line: 387, type: !1829)
!5315 = !DILocation(line: 387, column: 49, scope: !5313)
!5316 = !DILocation(line: 389, column: 23, scope: !5313)
!5317 = !DILocation(line: 389, column: 5, scope: !5313)
!5318 = !DILocation(line: 390, column: 23, scope: !5313)
!5319 = !DILocation(line: 390, column: 5, scope: !5313)
!5320 = !DILocation(line: 391, column: 24, scope: !5313)
!5321 = !DILocation(line: 391, column: 5, scope: !5313)
!5322 = !DILocation(line: 392, column: 23, scope: !5313)
!5323 = !DILocation(line: 392, column: 5, scope: !5313)
!5324 = !DILocation(line: 393, column: 25, scope: !5313)
!5325 = !DILocation(line: 393, column: 5, scope: !5313)
!5326 = !DILocation(line: 394, column: 23, scope: !5313)
!5327 = !DILocation(line: 394, column: 5, scope: !5313)
!5328 = !DILocation(line: 395, column: 25, scope: !5313)
!5329 = !DILocation(line: 395, column: 5, scope: !5313)
!5330 = !DILocation(line: 396, column: 23, scope: !5313)
!5331 = !DILocation(line: 396, column: 5, scope: !5313)
!5332 = !DILocation(line: 397, column: 1, scope: !5313)
!5333 = distinct !DISubprogram(name: "encode_frame_size", scope: !910, file: !910, line: 269, type: !3805, isLocal: true, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5334 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5335)
!5335 = distinct !DILocation(line: 275, column: 9, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !910, line: 272, column: 32)
!5337 = distinct !DILexicalBlock(scope: !5333, file: !910, line: 272, column: 9)
!5338 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5335)
!5339 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5335)
!5340 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5335)
!5341 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5335)
!5342 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5335)
!5343 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5335)
!5344 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5345)
!5345 = distinct !DILocation(line: 274, column: 9, scope: !5336)
!5346 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5345)
!5347 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5345)
!5348 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5345)
!5349 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5345)
!5350 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5345)
!5351 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5345)
!5352 = !DILocalVariable(name: "s", arg: 1, scope: !5333, file: !910, line: 269, type: !1829)
!5353 = !DILocation(line: 269, column: 46, scope: !5333)
!5354 = !DILocation(line: 271, column: 15, scope: !5333)
!5355 = !DILocation(line: 271, column: 18, scope: !5333)
!5356 = !DILocation(line: 271, column: 26, scope: !5333)
!5357 = !DILocation(line: 271, column: 29, scope: !5333)
!5358 = !DILocation(line: 271, column: 25, scope: !5333)
!5359 = !DILocation(line: 271, column: 5, scope: !5333)
!5360 = !DILocation(line: 272, column: 10, scope: !5337)
!5361 = !DILocation(line: 272, column: 13, scope: !5337)
!5362 = !DILocation(line: 272, column: 9, scope: !5333)
!5363 = !DILocalVariable(name: "avctx", scope: !5336, file: !910, line: 273, type: !1088)
!5364 = !DILocation(line: 273, column: 25, scope: !5336)
!5365 = !DILocation(line: 273, column: 33, scope: !5336)
!5366 = !DILocation(line: 273, column: 36, scope: !5336)
!5367 = !DILocation(line: 274, column: 26, scope: !5336)
!5368 = !DILocation(line: 274, column: 29, scope: !5336)
!5369 = !DILocation(line: 274, column: 33, scope: !5336)
!5370 = !DILocation(line: 274, column: 40, scope: !5336)
!5371 = !DILocation(line: 274, column: 9, scope: !5336)
!5372 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5345)
!5373 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5345)
!5374 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5345)
!5375 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5345)
!5376 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5345)
!5377 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5345)
!5378 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5345)
!5379 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5345)
!5380 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5345)
!5381 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5345)
!5382 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5345)
!5383 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5345)
!5384 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5345)
!5385 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5345)
!5386 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5345)
!5387 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5345)
!5388 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5345)
!5389 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5345)
!5390 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5345)
!5391 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5345)
!5392 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5345)
!5393 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5345)
!5394 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5345)
!5395 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5345)
!5396 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5345)
!5397 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5345)
!5398 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5345)
!5399 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5345)
!5400 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5345)
!5401 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5345)
!5402 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5345)
!5403 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5345)
!5404 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5345)
!5405 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5345)
!5406 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5345)
!5407 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5345)
!5408 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5345)
!5409 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5345)
!5410 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5345)
!5411 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5345)
!5412 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5345)
!5413 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5345)
!5414 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5345)
!5415 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5345)
!5416 = !DILocation(line: 275, column: 26, scope: !5336)
!5417 = !DILocation(line: 275, column: 29, scope: !5336)
!5418 = !DILocation(line: 275, column: 33, scope: !5336)
!5419 = !DILocation(line: 275, column: 40, scope: !5336)
!5420 = !DILocation(line: 275, column: 9, scope: !5336)
!5421 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5335)
!5422 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5335)
!5423 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5335)
!5424 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5335)
!5425 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5335)
!5426 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5335)
!5427 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5335)
!5428 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5335)
!5429 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5335)
!5430 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5335)
!5431 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5335)
!5432 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5335)
!5433 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5335)
!5434 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5335)
!5435 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5335)
!5436 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5335)
!5437 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5335)
!5438 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5335)
!5439 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5335)
!5440 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5335)
!5441 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5335)
!5442 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5335)
!5443 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5335)
!5444 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5335)
!5445 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5335)
!5446 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5335)
!5447 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5335)
!5448 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5335)
!5449 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5335)
!5450 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5335)
!5451 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5335)
!5452 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5335)
!5453 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5335)
!5454 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5335)
!5455 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5335)
!5456 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5335)
!5457 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5335)
!5458 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5335)
!5459 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5335)
!5460 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5335)
!5461 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5335)
!5462 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5335)
!5463 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5335)
!5464 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5335)
!5465 = !DILocation(line: 276, column: 5, scope: !5336)
!5466 = !DILocation(line: 277, column: 1, scope: !5333)
!5467 = distinct !DISubprogram(name: "encode_sample_fmt", scope: !910, file: !910, line: 280, type: !3805, isLocal: true, isDefinition: true, scopeLine: 281, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5468 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5469)
!5469 = distinct !DILocation(line: 291, column: 9, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !910, line: 283, column: 32)
!5471 = distinct !DILexicalBlock(scope: !5467, file: !910, line: 283, column: 9)
!5472 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5469)
!5473 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5469)
!5474 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5469)
!5475 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5469)
!5476 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5469)
!5477 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5469)
!5478 = !DILocalVariable(name: "s", arg: 1, scope: !5467, file: !910, line: 280, type: !1829)
!5479 = !DILocation(line: 280, column: 46, scope: !5467)
!5480 = !DILocation(line: 282, column: 15, scope: !5467)
!5481 = !DILocation(line: 282, column: 18, scope: !5467)
!5482 = !DILocation(line: 282, column: 26, scope: !5467)
!5483 = !DILocation(line: 282, column: 29, scope: !5467)
!5484 = !DILocation(line: 282, column: 25, scope: !5467)
!5485 = !DILocation(line: 282, column: 5, scope: !5467)
!5486 = !DILocation(line: 283, column: 10, scope: !5471)
!5487 = !DILocation(line: 283, column: 13, scope: !5471)
!5488 = !DILocation(line: 283, column: 9, scope: !5467)
!5489 = !DILocalVariable(name: "idx", scope: !5470, file: !910, line: 284, type: !936)
!5490 = !DILocation(line: 284, column: 13, scope: !5470)
!5491 = !DILocation(line: 285, column: 13, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5470, file: !910, line: 285, column: 13)
!5493 = !DILocation(line: 285, column: 16, scope: !5492)
!5494 = !DILocation(line: 285, column: 31, scope: !5492)
!5495 = !DILocation(line: 285, column: 36, scope: !5492)
!5496 = !DILocation(line: 285, column: 39, scope: !5497)
!5497 = !DILexicalBlockFile(scope: !5492, file: !910, discriminator: 1)
!5498 = !DILocation(line: 285, column: 42, scope: !5497)
!5499 = !DILocation(line: 285, column: 57, scope: !5497)
!5500 = !DILocation(line: 285, column: 13, scope: !5497)
!5501 = !DILocation(line: 286, column: 17, scope: !5492)
!5502 = !DILocation(line: 286, column: 13, scope: !5492)
!5503 = !DILocation(line: 287, column: 18, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5492, file: !910, line: 287, column: 18)
!5505 = !DILocation(line: 287, column: 21, scope: !5504)
!5506 = !DILocation(line: 287, column: 36, scope: !5504)
!5507 = !DILocation(line: 287, column: 41, scope: !5504)
!5508 = !DILocation(line: 287, column: 44, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5504, file: !910, discriminator: 1)
!5510 = !DILocation(line: 287, column: 47, scope: !5509)
!5511 = !DILocation(line: 287, column: 62, scope: !5509)
!5512 = !DILocation(line: 287, column: 18, scope: !5509)
!5513 = !DILocation(line: 288, column: 17, scope: !5504)
!5514 = !DILocation(line: 288, column: 13, scope: !5504)
!5515 = !DILocation(line: 290, column: 17, scope: !5504)
!5516 = !DILocation(line: 291, column: 26, scope: !5470)
!5517 = !DILocation(line: 291, column: 29, scope: !5470)
!5518 = !DILocation(line: 291, column: 33, scope: !5470)
!5519 = !DILocation(line: 291, column: 9, scope: !5470)
!5520 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5469)
!5521 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5469)
!5522 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5469)
!5523 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5469)
!5524 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5469)
!5525 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5469)
!5526 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5469)
!5527 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5469)
!5528 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5469)
!5529 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5469)
!5530 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5469)
!5531 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5469)
!5532 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5469)
!5533 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5469)
!5534 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5469)
!5535 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5469)
!5536 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5469)
!5537 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5469)
!5538 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5469)
!5539 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5469)
!5540 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5469)
!5541 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5469)
!5542 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5469)
!5543 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5469)
!5544 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5469)
!5545 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5469)
!5546 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5469)
!5547 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5469)
!5548 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5469)
!5549 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5469)
!5550 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5469)
!5551 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5469)
!5552 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5469)
!5553 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5469)
!5554 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5469)
!5555 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5469)
!5556 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5469)
!5557 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5469)
!5558 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5469)
!5559 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5469)
!5560 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5469)
!5561 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5469)
!5562 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5469)
!5563 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5469)
!5564 = !DILocation(line: 292, column: 5, scope: !5470)
!5565 = !DILocation(line: 293, column: 1, scope: !5467)
!5566 = distinct !DISubprogram(name: "encode_scan_format", scope: !910, file: !910, line: 296, type: !3805, isLocal: true, isDefinition: true, scopeLine: 297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5567 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5568)
!5568 = distinct !DILocation(line: 300, column: 9, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !910, line: 299, column: 9)
!5570 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5568)
!5571 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5568)
!5572 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5568)
!5573 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5568)
!5574 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5568)
!5575 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5568)
!5576 = !DILocalVariable(name: "s", arg: 1, scope: !5566, file: !910, line: 296, type: !1829)
!5577 = !DILocation(line: 296, column: 47, scope: !5566)
!5578 = !DILocation(line: 298, column: 15, scope: !5566)
!5579 = !DILocation(line: 298, column: 18, scope: !5566)
!5580 = !DILocation(line: 298, column: 26, scope: !5566)
!5581 = !DILocation(line: 298, column: 29, scope: !5566)
!5582 = !DILocation(line: 298, column: 25, scope: !5566)
!5583 = !DILocation(line: 298, column: 5, scope: !5566)
!5584 = !DILocation(line: 299, column: 10, scope: !5569)
!5585 = !DILocation(line: 299, column: 13, scope: !5569)
!5586 = !DILocation(line: 299, column: 9, scope: !5566)
!5587 = !DILocation(line: 300, column: 26, scope: !5569)
!5588 = !DILocation(line: 300, column: 29, scope: !5569)
!5589 = !DILocation(line: 300, column: 33, scope: !5569)
!5590 = !DILocation(line: 300, column: 36, scope: !5569)
!5591 = !DILocation(line: 300, column: 9, scope: !5569)
!5592 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5568)
!5593 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5568)
!5594 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5568)
!5595 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5568)
!5596 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5568)
!5597 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5568)
!5598 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5568)
!5599 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5568)
!5600 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5568)
!5601 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5568)
!5602 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5568)
!5603 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5568)
!5604 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5568)
!5605 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5568)
!5606 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5568)
!5607 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5568)
!5608 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5568)
!5609 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5568)
!5610 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5568)
!5611 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5568)
!5612 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5568)
!5613 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5568)
!5614 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5568)
!5615 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5568)
!5616 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5568)
!5617 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5568)
!5618 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5568)
!5619 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5568)
!5620 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5568)
!5621 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5568)
!5622 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5568)
!5623 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5568)
!5624 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5568)
!5625 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5568)
!5626 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5568)
!5627 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5568)
!5628 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5568)
!5629 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5568)
!5630 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5568)
!5631 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5568)
!5632 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5568)
!5633 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5568)
!5634 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5568)
!5635 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5568)
!5636 = !DILocation(line: 301, column: 1, scope: !5566)
!5637 = distinct !DISubprogram(name: "encode_frame_rate", scope: !910, file: !910, line: 304, type: !3805, isLocal: true, isDefinition: true, scopeLine: 305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5638 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5639)
!5639 = distinct !DILocation(line: 311, column: 9, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !910, line: 307, column: 32)
!5641 = distinct !DILexicalBlock(scope: !5637, file: !910, line: 307, column: 9)
!5642 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5639)
!5643 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5639)
!5644 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5639)
!5645 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5639)
!5646 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5639)
!5647 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5639)
!5648 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5649)
!5649 = distinct !DILocation(line: 310, column: 9, scope: !5640)
!5650 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5649)
!5651 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5649)
!5652 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5649)
!5653 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5649)
!5654 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5649)
!5655 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5649)
!5656 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5657)
!5657 = distinct !DILocation(line: 309, column: 9, scope: !5640)
!5658 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5657)
!5659 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5657)
!5660 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5657)
!5661 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5657)
!5662 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5657)
!5663 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5657)
!5664 = !DILocalVariable(name: "s", arg: 1, scope: !5637, file: !910, line: 304, type: !1829)
!5665 = !DILocation(line: 304, column: 46, scope: !5637)
!5666 = !DILocation(line: 306, column: 15, scope: !5637)
!5667 = !DILocation(line: 306, column: 18, scope: !5637)
!5668 = !DILocation(line: 306, column: 26, scope: !5637)
!5669 = !DILocation(line: 306, column: 29, scope: !5637)
!5670 = !DILocation(line: 306, column: 25, scope: !5637)
!5671 = !DILocation(line: 306, column: 5, scope: !5637)
!5672 = !DILocation(line: 307, column: 10, scope: !5641)
!5673 = !DILocation(line: 307, column: 13, scope: !5641)
!5674 = !DILocation(line: 307, column: 9, scope: !5637)
!5675 = !DILocalVariable(name: "avctx", scope: !5640, file: !910, line: 308, type: !1088)
!5676 = !DILocation(line: 308, column: 25, scope: !5640)
!5677 = !DILocation(line: 308, column: 33, scope: !5640)
!5678 = !DILocation(line: 308, column: 36, scope: !5640)
!5679 = !DILocation(line: 309, column: 26, scope: !5640)
!5680 = !DILocation(line: 309, column: 29, scope: !5640)
!5681 = !DILocation(line: 309, column: 9, scope: !5640)
!5682 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5657)
!5683 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5657)
!5684 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5657)
!5685 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5657)
!5686 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5657)
!5687 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5657)
!5688 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5657)
!5689 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5657)
!5690 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5657)
!5691 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5657)
!5692 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5657)
!5693 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5657)
!5694 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5657)
!5695 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5657)
!5696 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5657)
!5697 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5657)
!5698 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5657)
!5699 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5657)
!5700 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5657)
!5701 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5657)
!5702 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5657)
!5703 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5657)
!5704 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5657)
!5705 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5657)
!5706 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5657)
!5707 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5657)
!5708 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5657)
!5709 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5657)
!5710 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5657)
!5711 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5657)
!5712 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5657)
!5713 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5657)
!5714 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5657)
!5715 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5657)
!5716 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5657)
!5717 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5657)
!5718 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5657)
!5719 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5657)
!5720 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5657)
!5721 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5657)
!5722 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5657)
!5723 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5657)
!5724 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5657)
!5725 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5657)
!5726 = !DILocation(line: 310, column: 26, scope: !5640)
!5727 = !DILocation(line: 310, column: 29, scope: !5640)
!5728 = !DILocation(line: 310, column: 33, scope: !5640)
!5729 = !DILocation(line: 310, column: 40, scope: !5640)
!5730 = !DILocation(line: 310, column: 50, scope: !5640)
!5731 = !DILocation(line: 310, column: 9, scope: !5640)
!5732 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5649)
!5733 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5649)
!5734 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5649)
!5735 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5649)
!5736 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5649)
!5737 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5649)
!5738 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5649)
!5739 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5649)
!5740 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5649)
!5741 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5649)
!5742 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5649)
!5743 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5649)
!5744 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5649)
!5745 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5649)
!5746 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5649)
!5747 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5649)
!5748 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5649)
!5749 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5649)
!5750 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5649)
!5751 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5649)
!5752 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5649)
!5753 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5649)
!5754 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5649)
!5755 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5649)
!5756 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5649)
!5757 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5649)
!5758 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5649)
!5759 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5649)
!5760 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5649)
!5761 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5649)
!5762 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5649)
!5763 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5649)
!5764 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5649)
!5765 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5649)
!5766 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5649)
!5767 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5649)
!5768 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5649)
!5769 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5649)
!5770 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5649)
!5771 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5649)
!5772 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5649)
!5773 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5649)
!5774 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5649)
!5775 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5649)
!5776 = !DILocation(line: 311, column: 26, scope: !5640)
!5777 = !DILocation(line: 311, column: 29, scope: !5640)
!5778 = !DILocation(line: 311, column: 33, scope: !5640)
!5779 = !DILocation(line: 311, column: 40, scope: !5640)
!5780 = !DILocation(line: 311, column: 50, scope: !5640)
!5781 = !DILocation(line: 311, column: 9, scope: !5640)
!5782 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5639)
!5783 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5639)
!5784 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5639)
!5785 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5639)
!5786 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5639)
!5787 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5639)
!5788 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5639)
!5789 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5639)
!5790 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5639)
!5791 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5639)
!5792 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5639)
!5793 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5639)
!5794 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5639)
!5795 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5639)
!5796 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5639)
!5797 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5639)
!5798 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5639)
!5799 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5639)
!5800 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5639)
!5801 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5639)
!5802 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5639)
!5803 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5639)
!5804 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5639)
!5805 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5639)
!5806 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5639)
!5807 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5639)
!5808 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5639)
!5809 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5639)
!5810 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5639)
!5811 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5639)
!5812 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5639)
!5813 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5639)
!5814 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5639)
!5815 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5639)
!5816 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5639)
!5817 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5639)
!5818 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5639)
!5819 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5639)
!5820 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5639)
!5821 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5639)
!5822 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5639)
!5823 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5639)
!5824 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5639)
!5825 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5639)
!5826 = !DILocation(line: 312, column: 5, scope: !5640)
!5827 = !DILocation(line: 313, column: 1, scope: !5637)
!5828 = distinct !DISubprogram(name: "encode_aspect_ratio", scope: !910, file: !910, line: 316, type: !3805, isLocal: true, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!5829 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5830)
!5830 = distinct !DILocation(line: 323, column: 9, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !910, line: 319, column: 32)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !910, line: 319, column: 9)
!5833 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5830)
!5834 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5830)
!5835 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5830)
!5836 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5830)
!5837 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5830)
!5838 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5830)
!5839 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5840)
!5840 = distinct !DILocation(line: 322, column: 9, scope: !5831)
!5841 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5840)
!5842 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5840)
!5843 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5840)
!5844 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5840)
!5845 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5840)
!5846 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5840)
!5847 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !5848)
!5848 = distinct !DILocation(line: 321, column: 9, scope: !5831)
!5849 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !5848)
!5850 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !5848)
!5851 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !5848)
!5852 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !5848)
!5853 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !5848)
!5854 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !5848)
!5855 = !DILocalVariable(name: "s", arg: 1, scope: !5828, file: !910, line: 316, type: !1829)
!5856 = !DILocation(line: 316, column: 48, scope: !5828)
!5857 = !DILocation(line: 318, column: 15, scope: !5828)
!5858 = !DILocation(line: 318, column: 18, scope: !5828)
!5859 = !DILocation(line: 318, column: 26, scope: !5828)
!5860 = !DILocation(line: 318, column: 29, scope: !5828)
!5861 = !DILocation(line: 318, column: 25, scope: !5828)
!5862 = !DILocation(line: 318, column: 5, scope: !5828)
!5863 = !DILocation(line: 319, column: 10, scope: !5832)
!5864 = !DILocation(line: 319, column: 13, scope: !5832)
!5865 = !DILocation(line: 319, column: 9, scope: !5828)
!5866 = !DILocalVariable(name: "avctx", scope: !5831, file: !910, line: 320, type: !1088)
!5867 = !DILocation(line: 320, column: 25, scope: !5831)
!5868 = !DILocation(line: 320, column: 33, scope: !5831)
!5869 = !DILocation(line: 320, column: 36, scope: !5831)
!5870 = !DILocation(line: 321, column: 26, scope: !5831)
!5871 = !DILocation(line: 321, column: 29, scope: !5831)
!5872 = !DILocation(line: 321, column: 9, scope: !5831)
!5873 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5848)
!5874 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5848)
!5875 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5848)
!5876 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5848)
!5877 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5848)
!5878 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5848)
!5879 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5848)
!5880 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5848)
!5881 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5848)
!5882 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5848)
!5883 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5848)
!5884 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5848)
!5885 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5848)
!5886 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5848)
!5887 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5848)
!5888 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5848)
!5889 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5848)
!5890 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5848)
!5891 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5848)
!5892 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5848)
!5893 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5848)
!5894 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5848)
!5895 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5848)
!5896 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5848)
!5897 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5848)
!5898 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5848)
!5899 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5848)
!5900 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5848)
!5901 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5848)
!5902 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5848)
!5903 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5848)
!5904 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5848)
!5905 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5848)
!5906 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5848)
!5907 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5848)
!5908 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5848)
!5909 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5848)
!5910 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5848)
!5911 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5848)
!5912 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5848)
!5913 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5848)
!5914 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5848)
!5915 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5848)
!5916 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5848)
!5917 = !DILocation(line: 322, column: 26, scope: !5831)
!5918 = !DILocation(line: 322, column: 29, scope: !5831)
!5919 = !DILocation(line: 322, column: 33, scope: !5831)
!5920 = !DILocation(line: 322, column: 40, scope: !5831)
!5921 = !DILocation(line: 322, column: 60, scope: !5831)
!5922 = !DILocation(line: 322, column: 9, scope: !5831)
!5923 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5840)
!5924 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5840)
!5925 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5840)
!5926 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5840)
!5927 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5840)
!5928 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5840)
!5929 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5840)
!5930 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5840)
!5931 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5840)
!5932 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5840)
!5933 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5840)
!5934 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5840)
!5935 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5840)
!5936 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5840)
!5937 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5840)
!5938 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5840)
!5939 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5840)
!5940 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5840)
!5941 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5840)
!5942 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5840)
!5943 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5840)
!5944 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5840)
!5945 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5840)
!5946 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5840)
!5947 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5840)
!5948 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5840)
!5949 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5840)
!5950 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5840)
!5951 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5840)
!5952 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5840)
!5953 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5840)
!5954 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5840)
!5955 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5840)
!5956 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5840)
!5957 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5840)
!5958 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5840)
!5959 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5840)
!5960 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5840)
!5961 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5840)
!5962 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5840)
!5963 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5840)
!5964 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5840)
!5965 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5840)
!5966 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5840)
!5967 = !DILocation(line: 323, column: 26, scope: !5831)
!5968 = !DILocation(line: 323, column: 29, scope: !5831)
!5969 = !DILocation(line: 323, column: 33, scope: !5831)
!5970 = !DILocation(line: 323, column: 40, scope: !5831)
!5971 = !DILocation(line: 323, column: 60, scope: !5831)
!5972 = !DILocation(line: 323, column: 9, scope: !5831)
!5973 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !5830)
!5974 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !5830)
!5975 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !5830)
!5976 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !5830)
!5977 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !5830)
!5978 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !5830)
!5979 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !5830)
!5980 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !5830)
!5981 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !5830)
!5982 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !5830)
!5983 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !5830)
!5984 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !5830)
!5985 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !5830)
!5986 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !5830)
!5987 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !5830)
!5988 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !5830)
!5989 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !5830)
!5990 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !5830)
!5991 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !5830)
!5992 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !5830)
!5993 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !5830)
!5994 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !5830)
!5995 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !5830)
!5996 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !5830)
!5997 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !5830)
!5998 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !5830)
!5999 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !5830)
!6000 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !5830)
!6001 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !5830)
!6002 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !5830)
!6003 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !5830)
!6004 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !5830)
!6005 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !5830)
!6006 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !5830)
!6007 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !5830)
!6008 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !5830)
!6009 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !5830)
!6010 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !5830)
!6011 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !5830)
!6012 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !5830)
!6013 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !5830)
!6014 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !5830)
!6015 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !5830)
!6016 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !5830)
!6017 = !DILocation(line: 324, column: 5, scope: !5831)
!6018 = !DILocation(line: 325, column: 1, scope: !5828)
!6019 = distinct !DISubprogram(name: "encode_clean_area", scope: !910, file: !910, line: 328, type: !3805, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6020 = !DILocalVariable(name: "s", arg: 1, scope: !6019, file: !910, line: 328, type: !1829)
!6021 = !DILocation(line: 328, column: 46, scope: !6019)
!6022 = !DILocation(line: 330, column: 15, scope: !6019)
!6023 = !DILocation(line: 330, column: 18, scope: !6019)
!6024 = !DILocation(line: 330, column: 5, scope: !6019)
!6025 = !DILocation(line: 331, column: 1, scope: !6019)
!6026 = distinct !DISubprogram(name: "encode_signal_range", scope: !910, file: !910, line: 334, type: !3805, isLocal: true, isDefinition: true, scopeLine: 335, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6027 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6028)
!6028 = distinct !DILocation(line: 338, column: 9, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6026, file: !910, line: 337, column: 9)
!6030 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6028)
!6031 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6028)
!6032 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6028)
!6033 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6028)
!6034 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6028)
!6035 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6028)
!6036 = !DILocalVariable(name: "s", arg: 1, scope: !6026, file: !910, line: 334, type: !1829)
!6037 = !DILocation(line: 334, column: 48, scope: !6026)
!6038 = !DILocation(line: 336, column: 15, scope: !6026)
!6039 = !DILocation(line: 336, column: 18, scope: !6026)
!6040 = !DILocation(line: 336, column: 26, scope: !6026)
!6041 = !DILocation(line: 336, column: 29, scope: !6026)
!6042 = !DILocation(line: 336, column: 25, scope: !6026)
!6043 = !DILocation(line: 336, column: 5, scope: !6026)
!6044 = !DILocation(line: 337, column: 10, scope: !6029)
!6045 = !DILocation(line: 337, column: 13, scope: !6029)
!6046 = !DILocation(line: 337, column: 9, scope: !6026)
!6047 = !DILocation(line: 338, column: 26, scope: !6029)
!6048 = !DILocation(line: 338, column: 29, scope: !6029)
!6049 = !DILocation(line: 338, column: 33, scope: !6029)
!6050 = !DILocation(line: 338, column: 36, scope: !6029)
!6051 = !DILocation(line: 338, column: 9, scope: !6029)
!6052 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6028)
!6053 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6028)
!6054 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6028)
!6055 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6028)
!6056 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6028)
!6057 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6028)
!6058 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6028)
!6059 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6028)
!6060 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6028)
!6061 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6028)
!6062 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6028)
!6063 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6028)
!6064 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6028)
!6065 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6028)
!6066 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6028)
!6067 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6028)
!6068 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6028)
!6069 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6028)
!6070 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6028)
!6071 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6028)
!6072 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6028)
!6073 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6028)
!6074 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6028)
!6075 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6028)
!6076 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6028)
!6077 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6028)
!6078 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6028)
!6079 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6028)
!6080 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6028)
!6081 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6028)
!6082 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6028)
!6083 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6028)
!6084 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6028)
!6085 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6028)
!6086 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6028)
!6087 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6028)
!6088 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6028)
!6089 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6028)
!6090 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6028)
!6091 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6028)
!6092 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6028)
!6093 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6028)
!6094 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6028)
!6095 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6028)
!6096 = !DILocation(line: 339, column: 1, scope: !6026)
!6097 = distinct !DISubprogram(name: "encode_color_spec", scope: !910, file: !910, line: 342, type: !3805, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6098 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6099)
!6099 = distinct !DILocation(line: 382, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !910, line: 346, column: 32)
!6101 = distinct !DILexicalBlock(scope: !6097, file: !910, line: 346, column: 9)
!6102 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6099)
!6103 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6099)
!6104 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6099)
!6105 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6099)
!6106 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6099)
!6107 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6099)
!6108 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6109)
!6109 = distinct !DILocation(line: 372, column: 9, scope: !6100)
!6110 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6109)
!6111 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6109)
!6112 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6109)
!6113 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6109)
!6114 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6109)
!6115 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6109)
!6116 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6117)
!6117 = distinct !DILocation(line: 360, column: 9, scope: !6100)
!6118 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6117)
!6119 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6117)
!6120 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6117)
!6121 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6117)
!6122 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6117)
!6123 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6117)
!6124 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6125)
!6125 = distinct !DILocation(line: 348, column: 9, scope: !6100)
!6126 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6125)
!6127 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6125)
!6128 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6125)
!6129 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6125)
!6130 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6125)
!6131 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6125)
!6132 = !DILocalVariable(name: "s", arg: 1, scope: !6097, file: !910, line: 342, type: !1829)
!6133 = !DILocation(line: 342, column: 46, scope: !6097)
!6134 = !DILocalVariable(name: "avctx", scope: !6097, file: !910, line: 344, type: !1088)
!6135 = !DILocation(line: 344, column: 21, scope: !6097)
!6136 = !DILocation(line: 344, column: 29, scope: !6097)
!6137 = !DILocation(line: 344, column: 32, scope: !6097)
!6138 = !DILocation(line: 345, column: 15, scope: !6097)
!6139 = !DILocation(line: 345, column: 18, scope: !6097)
!6140 = !DILocation(line: 345, column: 26, scope: !6097)
!6141 = !DILocation(line: 345, column: 29, scope: !6097)
!6142 = !DILocation(line: 345, column: 25, scope: !6097)
!6143 = !DILocation(line: 345, column: 5, scope: !6097)
!6144 = !DILocation(line: 346, column: 10, scope: !6101)
!6145 = !DILocation(line: 346, column: 13, scope: !6101)
!6146 = !DILocation(line: 346, column: 9, scope: !6097)
!6147 = !DILocalVariable(name: "val", scope: !6100, file: !910, line: 347, type: !936)
!6148 = !DILocation(line: 347, column: 13, scope: !6100)
!6149 = !DILocation(line: 348, column: 26, scope: !6100)
!6150 = !DILocation(line: 348, column: 29, scope: !6100)
!6151 = !DILocation(line: 348, column: 9, scope: !6100)
!6152 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6125)
!6153 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6125)
!6154 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6125)
!6155 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6125)
!6156 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6125)
!6157 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6125)
!6158 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6125)
!6159 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6125)
!6160 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6125)
!6161 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6125)
!6162 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6125)
!6163 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6125)
!6164 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6125)
!6165 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6125)
!6166 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6125)
!6167 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6125)
!6168 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6125)
!6169 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6125)
!6170 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6125)
!6171 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6125)
!6172 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6125)
!6173 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6125)
!6174 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6125)
!6175 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6125)
!6176 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6125)
!6177 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6125)
!6178 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6125)
!6179 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6125)
!6180 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6125)
!6181 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6125)
!6182 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6125)
!6183 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6125)
!6184 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6125)
!6185 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6125)
!6186 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6125)
!6187 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6125)
!6188 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6125)
!6189 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6125)
!6190 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6125)
!6191 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6125)
!6192 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6125)
!6193 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6125)
!6194 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6125)
!6195 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6125)
!6196 = !DILocation(line: 351, column: 19, scope: !6100)
!6197 = !DILocation(line: 351, column: 22, scope: !6100)
!6198 = !DILocation(line: 351, column: 9, scope: !6100)
!6199 = !DILocation(line: 352, column: 13, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6100, file: !910, line: 352, column: 13)
!6201 = !DILocation(line: 352, column: 20, scope: !6200)
!6202 = !DILocation(line: 352, column: 36, scope: !6200)
!6203 = !DILocation(line: 352, column: 13, scope: !6100)
!6204 = !DILocation(line: 353, column: 17, scope: !6200)
!6205 = !DILocation(line: 353, column: 13, scope: !6200)
!6206 = !DILocation(line: 354, column: 18, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6200, file: !910, line: 354, column: 18)
!6208 = !DILocation(line: 354, column: 25, scope: !6207)
!6209 = !DILocation(line: 354, column: 41, scope: !6207)
!6210 = !DILocation(line: 354, column: 18, scope: !6200)
!6211 = !DILocation(line: 355, column: 17, scope: !6207)
!6212 = !DILocation(line: 355, column: 13, scope: !6207)
!6213 = !DILocation(line: 356, column: 18, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6207, file: !910, line: 356, column: 18)
!6215 = !DILocation(line: 356, column: 25, scope: !6214)
!6216 = !DILocation(line: 356, column: 41, scope: !6214)
!6217 = !DILocation(line: 356, column: 18, scope: !6207)
!6218 = !DILocation(line: 357, column: 17, scope: !6214)
!6219 = !DILocation(line: 357, column: 13, scope: !6214)
!6220 = !DILocation(line: 359, column: 17, scope: !6214)
!6221 = !DILocation(line: 360, column: 26, scope: !6100)
!6222 = !DILocation(line: 360, column: 29, scope: !6100)
!6223 = !DILocation(line: 360, column: 33, scope: !6100)
!6224 = !DILocation(line: 360, column: 9, scope: !6100)
!6225 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6117)
!6226 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6117)
!6227 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6117)
!6228 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6117)
!6229 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6117)
!6230 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6117)
!6231 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6117)
!6232 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6117)
!6233 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6117)
!6234 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6117)
!6235 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6117)
!6236 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6117)
!6237 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6117)
!6238 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6117)
!6239 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6117)
!6240 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6117)
!6241 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6117)
!6242 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6117)
!6243 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6117)
!6244 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6117)
!6245 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6117)
!6246 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6117)
!6247 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6117)
!6248 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6117)
!6249 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6117)
!6250 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6117)
!6251 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6117)
!6252 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6117)
!6253 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6117)
!6254 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6117)
!6255 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6117)
!6256 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6117)
!6257 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6117)
!6258 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6117)
!6259 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6117)
!6260 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6117)
!6261 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6117)
!6262 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6117)
!6263 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6117)
!6264 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6117)
!6265 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6117)
!6266 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6117)
!6267 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6117)
!6268 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6117)
!6269 = !DILocation(line: 363, column: 19, scope: !6100)
!6270 = !DILocation(line: 363, column: 22, scope: !6100)
!6271 = !DILocation(line: 363, column: 9, scope: !6100)
!6272 = !DILocation(line: 364, column: 13, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6100, file: !910, line: 364, column: 13)
!6274 = !DILocation(line: 364, column: 20, scope: !6273)
!6275 = !DILocation(line: 364, column: 31, scope: !6273)
!6276 = !DILocation(line: 364, column: 13, scope: !6100)
!6277 = !DILocation(line: 365, column: 17, scope: !6273)
!6278 = !DILocation(line: 365, column: 13, scope: !6273)
!6279 = !DILocation(line: 366, column: 18, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6273, file: !910, line: 366, column: 18)
!6281 = !DILocation(line: 366, column: 25, scope: !6280)
!6282 = !DILocation(line: 366, column: 36, scope: !6280)
!6283 = !DILocation(line: 366, column: 18, scope: !6273)
!6284 = !DILocation(line: 367, column: 17, scope: !6280)
!6285 = !DILocation(line: 367, column: 13, scope: !6280)
!6286 = !DILocation(line: 368, column: 18, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6280, file: !910, line: 368, column: 18)
!6288 = !DILocation(line: 368, column: 25, scope: !6287)
!6289 = !DILocation(line: 368, column: 36, scope: !6287)
!6290 = !DILocation(line: 368, column: 18, scope: !6280)
!6291 = !DILocation(line: 369, column: 17, scope: !6287)
!6292 = !DILocation(line: 369, column: 13, scope: !6287)
!6293 = !DILocation(line: 371, column: 17, scope: !6287)
!6294 = !DILocation(line: 372, column: 26, scope: !6100)
!6295 = !DILocation(line: 372, column: 29, scope: !6100)
!6296 = !DILocation(line: 372, column: 33, scope: !6100)
!6297 = !DILocation(line: 372, column: 9, scope: !6100)
!6298 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6109)
!6299 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6109)
!6300 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6109)
!6301 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6109)
!6302 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6109)
!6303 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6109)
!6304 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6109)
!6305 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6109)
!6306 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6109)
!6307 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6109)
!6308 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6109)
!6309 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6109)
!6310 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6109)
!6311 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6109)
!6312 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6109)
!6313 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6109)
!6314 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6109)
!6315 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6109)
!6316 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6109)
!6317 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6109)
!6318 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6109)
!6319 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6109)
!6320 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6109)
!6321 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6109)
!6322 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6109)
!6323 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6109)
!6324 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6109)
!6325 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6109)
!6326 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6109)
!6327 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6109)
!6328 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6109)
!6329 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6109)
!6330 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6109)
!6331 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6109)
!6332 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6109)
!6333 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6109)
!6334 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6109)
!6335 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6109)
!6336 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6109)
!6337 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6109)
!6338 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6109)
!6339 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6109)
!6340 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6109)
!6341 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6109)
!6342 = !DILocation(line: 375, column: 19, scope: !6100)
!6343 = !DILocation(line: 375, column: 22, scope: !6100)
!6344 = !DILocation(line: 375, column: 9, scope: !6100)
!6345 = !DILocation(line: 376, column: 13, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6100, file: !910, line: 376, column: 13)
!6347 = !DILocation(line: 376, column: 20, scope: !6346)
!6348 = !DILocation(line: 376, column: 30, scope: !6346)
!6349 = !DILocation(line: 376, column: 13, scope: !6100)
!6350 = !DILocation(line: 377, column: 17, scope: !6346)
!6351 = !DILocation(line: 377, column: 13, scope: !6346)
!6352 = !DILocation(line: 378, column: 18, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6346, file: !910, line: 378, column: 18)
!6354 = !DILocation(line: 378, column: 25, scope: !6353)
!6355 = !DILocation(line: 378, column: 35, scope: !6353)
!6356 = !DILocation(line: 378, column: 18, scope: !6346)
!6357 = !DILocation(line: 379, column: 17, scope: !6353)
!6358 = !DILocation(line: 379, column: 13, scope: !6353)
!6359 = !DILocation(line: 381, column: 17, scope: !6353)
!6360 = !DILocation(line: 382, column: 26, scope: !6100)
!6361 = !DILocation(line: 382, column: 29, scope: !6100)
!6362 = !DILocation(line: 382, column: 33, scope: !6100)
!6363 = !DILocation(line: 382, column: 9, scope: !6100)
!6364 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6099)
!6365 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6099)
!6366 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6099)
!6367 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6099)
!6368 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6099)
!6369 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6099)
!6370 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6099)
!6371 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6099)
!6372 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6099)
!6373 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6099)
!6374 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6099)
!6375 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6099)
!6376 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6099)
!6377 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6099)
!6378 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6099)
!6379 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6099)
!6380 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6099)
!6381 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6099)
!6382 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6099)
!6383 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6099)
!6384 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6099)
!6385 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6099)
!6386 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6099)
!6387 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6099)
!6388 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6099)
!6389 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6099)
!6390 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6099)
!6391 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6099)
!6392 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6099)
!6393 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6099)
!6394 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6099)
!6395 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6099)
!6396 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6099)
!6397 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6099)
!6398 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6099)
!6399 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6099)
!6400 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6099)
!6401 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6099)
!6402 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6099)
!6403 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6099)
!6404 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6099)
!6405 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6099)
!6406 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6099)
!6407 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6099)
!6408 = !DILocation(line: 383, column: 5, scope: !6100)
!6409 = !DILocation(line: 384, column: 1, scope: !6097)
!6410 = distinct !DISubprogram(name: "encode_picture_header", scope: !910, file: !910, line: 410, type: !3805, isLocal: true, isDefinition: true, scopeLine: 411, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6411 = !DILocalVariable(name: "s", arg: 1, scope: !6410, file: !910, line: 410, type: !1829)
!6412 = !DILocation(line: 410, column: 50, scope: !6410)
!6413 = !DILocation(line: 412, column: 28, scope: !6410)
!6414 = !DILocation(line: 412, column: 31, scope: !6410)
!6415 = !DILocation(line: 412, column: 5, scope: !6410)
!6416 = !DILocation(line: 413, column: 17, scope: !6410)
!6417 = !DILocation(line: 413, column: 20, scope: !6410)
!6418 = !DILocation(line: 413, column: 24, scope: !6410)
!6419 = !DILocation(line: 413, column: 27, scope: !6410)
!6420 = !DILocation(line: 413, column: 41, scope: !6410)
!6421 = !DILocation(line: 413, column: 5, scope: !6410)
!6422 = !DILocation(line: 414, column: 1, scope: !6410)
!6423 = distinct !DISubprogram(name: "encode_wavelet_transform", scope: !910, file: !910, line: 509, type: !3805, isLocal: true, isDefinition: true, scopeLine: 510, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6424 = !DILocalVariable(name: "s", arg: 1, scope: !6423, file: !910, line: 509, type: !1829)
!6425 = !DILocation(line: 509, column: 53, scope: !6423)
!6426 = !DILocation(line: 511, column: 29, scope: !6423)
!6427 = !DILocation(line: 511, column: 5, scope: !6423)
!6428 = !DILocation(line: 512, column: 28, scope: !6423)
!6429 = !DILocation(line: 512, column: 31, scope: !6423)
!6430 = !DILocation(line: 512, column: 5, scope: !6423)
!6431 = !DILocation(line: 513, column: 1, scope: !6423)
!6432 = distinct !DISubprogram(name: "encode_transform_params", scope: !910, file: !910, line: 499, type: !3805, isLocal: true, isDefinition: true, scopeLine: 500, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6433 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6434)
!6434 = distinct !DILocation(line: 502, column: 5, scope: !6432)
!6435 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6434)
!6436 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6434)
!6437 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6434)
!6438 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6434)
!6439 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6434)
!6440 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6434)
!6441 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6442)
!6442 = distinct !DILocation(line: 501, column: 5, scope: !6432)
!6443 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6442)
!6444 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6442)
!6445 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6442)
!6446 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6442)
!6447 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6442)
!6448 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6442)
!6449 = !DILocalVariable(name: "s", arg: 1, scope: !6432, file: !910, line: 499, type: !1829)
!6450 = !DILocation(line: 499, column: 52, scope: !6432)
!6451 = !DILocation(line: 501, column: 22, scope: !6432)
!6452 = !DILocation(line: 501, column: 25, scope: !6432)
!6453 = !DILocation(line: 501, column: 29, scope: !6432)
!6454 = !DILocation(line: 501, column: 32, scope: !6432)
!6455 = !DILocation(line: 501, column: 5, scope: !6432)
!6456 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6442)
!6457 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6442)
!6458 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6442)
!6459 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6442)
!6460 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6442)
!6461 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6442)
!6462 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6442)
!6463 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6442)
!6464 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6442)
!6465 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6442)
!6466 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6442)
!6467 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6442)
!6468 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6442)
!6469 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6442)
!6470 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6442)
!6471 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6442)
!6472 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6442)
!6473 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6442)
!6474 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6442)
!6475 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6442)
!6476 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6442)
!6477 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6442)
!6478 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6442)
!6479 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6442)
!6480 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6442)
!6481 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6442)
!6482 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6442)
!6483 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6442)
!6484 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6442)
!6485 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6442)
!6486 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6442)
!6487 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6442)
!6488 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6442)
!6489 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6442)
!6490 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6442)
!6491 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6442)
!6492 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6442)
!6493 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6442)
!6494 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6442)
!6495 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6442)
!6496 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6442)
!6497 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6442)
!6498 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6442)
!6499 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6442)
!6500 = !DILocation(line: 502, column: 22, scope: !6432)
!6501 = !DILocation(line: 502, column: 25, scope: !6432)
!6502 = !DILocation(line: 502, column: 29, scope: !6432)
!6503 = !DILocation(line: 502, column: 32, scope: !6432)
!6504 = !DILocation(line: 502, column: 5, scope: !6432)
!6505 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6434)
!6506 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6434)
!6507 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6434)
!6508 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6434)
!6509 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6434)
!6510 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6434)
!6511 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6434)
!6512 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6434)
!6513 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6434)
!6514 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6434)
!6515 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6434)
!6516 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6434)
!6517 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6434)
!6518 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6434)
!6519 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6434)
!6520 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6434)
!6521 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6434)
!6522 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6434)
!6523 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6434)
!6524 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6434)
!6525 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6434)
!6526 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6434)
!6527 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6434)
!6528 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6434)
!6529 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6434)
!6530 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6434)
!6531 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6434)
!6532 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6434)
!6533 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6434)
!6534 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6434)
!6535 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6434)
!6536 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6434)
!6537 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6434)
!6538 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6434)
!6539 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6434)
!6540 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6434)
!6541 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6434)
!6542 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6434)
!6543 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6434)
!6544 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6434)
!6545 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6434)
!6546 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6434)
!6547 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6434)
!6548 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6434)
!6549 = !DILocation(line: 504, column: 25, scope: !6432)
!6550 = !DILocation(line: 504, column: 5, scope: !6432)
!6551 = !DILocation(line: 505, column: 25, scope: !6432)
!6552 = !DILocation(line: 505, column: 5, scope: !6432)
!6553 = !DILocation(line: 506, column: 1, scope: !6432)
!6554 = distinct !DISubprogram(name: "encode_slice_params", scope: !910, file: !910, line: 417, type: !3805, isLocal: true, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6555 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6556)
!6556 = distinct !DILocation(line: 422, column: 5, scope: !6554)
!6557 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6556)
!6558 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6556)
!6559 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6556)
!6560 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6556)
!6561 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6556)
!6562 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6556)
!6563 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6564)
!6564 = distinct !DILocation(line: 421, column: 5, scope: !6554)
!6565 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6564)
!6566 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6564)
!6567 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6564)
!6568 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6564)
!6569 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6564)
!6570 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6564)
!6571 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6572)
!6572 = distinct !DILocation(line: 420, column: 5, scope: !6554)
!6573 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6572)
!6574 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6572)
!6575 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6572)
!6576 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6572)
!6577 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6572)
!6578 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6572)
!6579 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6580)
!6580 = distinct !DILocation(line: 419, column: 5, scope: !6554)
!6581 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6580)
!6582 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6580)
!6583 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6580)
!6584 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6580)
!6585 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6580)
!6586 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6580)
!6587 = !DILocalVariable(name: "s", arg: 1, scope: !6554, file: !910, line: 417, type: !1829)
!6588 = !DILocation(line: 417, column: 48, scope: !6554)
!6589 = !DILocation(line: 419, column: 22, scope: !6554)
!6590 = !DILocation(line: 419, column: 25, scope: !6554)
!6591 = !DILocation(line: 419, column: 29, scope: !6554)
!6592 = !DILocation(line: 419, column: 32, scope: !6554)
!6593 = !DILocation(line: 419, column: 5, scope: !6554)
!6594 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6580)
!6595 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6580)
!6596 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6580)
!6597 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6580)
!6598 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6580)
!6599 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6580)
!6600 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6580)
!6601 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6580)
!6602 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6580)
!6603 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6580)
!6604 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6580)
!6605 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6580)
!6606 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6580)
!6607 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6580)
!6608 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6580)
!6609 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6580)
!6610 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6580)
!6611 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6580)
!6612 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6580)
!6613 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6580)
!6614 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6580)
!6615 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6580)
!6616 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6580)
!6617 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6580)
!6618 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6580)
!6619 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6580)
!6620 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6580)
!6621 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6580)
!6622 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6580)
!6623 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6580)
!6624 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6580)
!6625 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6580)
!6626 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6580)
!6627 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6580)
!6628 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6580)
!6629 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6580)
!6630 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6580)
!6631 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6580)
!6632 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6580)
!6633 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6580)
!6634 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6580)
!6635 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6580)
!6636 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6580)
!6637 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6580)
!6638 = !DILocation(line: 420, column: 22, scope: !6554)
!6639 = !DILocation(line: 420, column: 25, scope: !6554)
!6640 = !DILocation(line: 420, column: 29, scope: !6554)
!6641 = !DILocation(line: 420, column: 32, scope: !6554)
!6642 = !DILocation(line: 420, column: 5, scope: !6554)
!6643 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6572)
!6644 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6572)
!6645 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6572)
!6646 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6572)
!6647 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6572)
!6648 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6572)
!6649 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6572)
!6650 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6572)
!6651 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6572)
!6652 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6572)
!6653 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6572)
!6654 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6572)
!6655 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6572)
!6656 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6572)
!6657 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6572)
!6658 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6572)
!6659 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6572)
!6660 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6572)
!6661 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6572)
!6662 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6572)
!6663 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6572)
!6664 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6572)
!6665 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6572)
!6666 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6572)
!6667 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6572)
!6668 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6572)
!6669 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6572)
!6670 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6572)
!6671 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6572)
!6672 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6572)
!6673 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6572)
!6674 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6572)
!6675 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6572)
!6676 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6572)
!6677 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6572)
!6678 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6572)
!6679 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6572)
!6680 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6572)
!6681 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6572)
!6682 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6572)
!6683 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6572)
!6684 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6572)
!6685 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6572)
!6686 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6572)
!6687 = !DILocation(line: 421, column: 22, scope: !6554)
!6688 = !DILocation(line: 421, column: 25, scope: !6554)
!6689 = !DILocation(line: 421, column: 29, scope: !6554)
!6690 = !DILocation(line: 421, column: 32, scope: !6554)
!6691 = !DILocation(line: 421, column: 5, scope: !6554)
!6692 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6564)
!6693 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6564)
!6694 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6564)
!6695 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6564)
!6696 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6564)
!6697 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6564)
!6698 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6564)
!6699 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6564)
!6700 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6564)
!6701 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6564)
!6702 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6564)
!6703 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6564)
!6704 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6564)
!6705 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6564)
!6706 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6564)
!6707 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6564)
!6708 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6564)
!6709 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6564)
!6710 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6564)
!6711 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6564)
!6712 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6564)
!6713 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6564)
!6714 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6564)
!6715 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6564)
!6716 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6564)
!6717 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6564)
!6718 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6564)
!6719 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6564)
!6720 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6564)
!6721 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6564)
!6722 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6564)
!6723 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6564)
!6724 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6564)
!6725 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6564)
!6726 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6564)
!6727 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6564)
!6728 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6564)
!6729 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6564)
!6730 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6564)
!6731 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6564)
!6732 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6564)
!6733 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6564)
!6734 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6564)
!6735 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6564)
!6736 = !DILocation(line: 422, column: 22, scope: !6554)
!6737 = !DILocation(line: 422, column: 25, scope: !6554)
!6738 = !DILocation(line: 422, column: 29, scope: !6554)
!6739 = !DILocation(line: 422, column: 32, scope: !6554)
!6740 = !DILocation(line: 422, column: 5, scope: !6554)
!6741 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6556)
!6742 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6556)
!6743 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6556)
!6744 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6556)
!6745 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6556)
!6746 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6556)
!6747 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6556)
!6748 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6556)
!6749 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6556)
!6750 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6556)
!6751 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6556)
!6752 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6556)
!6753 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6556)
!6754 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6556)
!6755 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6556)
!6756 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6556)
!6757 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6556)
!6758 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6556)
!6759 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6556)
!6760 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6556)
!6761 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6556)
!6762 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6556)
!6763 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6556)
!6764 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6556)
!6765 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6556)
!6766 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6556)
!6767 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6556)
!6768 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6556)
!6769 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6556)
!6770 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6556)
!6771 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6556)
!6772 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6556)
!6773 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6556)
!6774 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6556)
!6775 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6556)
!6776 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6556)
!6777 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6556)
!6778 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6556)
!6779 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6556)
!6780 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6556)
!6781 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6556)
!6782 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6556)
!6783 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6556)
!6784 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6556)
!6785 = !DILocation(line: 423, column: 1, scope: !6554)
!6786 = distinct !DISubprogram(name: "encode_quant_matrix", scope: !910, file: !910, line: 484, type: !3805, isLocal: true, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!6787 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 493, column: 13, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !910, line: 490, column: 60)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !910, line: 490, column: 9)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !910, line: 490, column: 9)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !910, line: 488, column: 33)
!6793 = distinct !DILexicalBlock(scope: !6786, file: !910, line: 488, column: 9)
!6794 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6788)
!6795 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6788)
!6796 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6788)
!6797 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6788)
!6798 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6788)
!6799 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6788)
!6800 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6801)
!6801 = distinct !DILocation(line: 492, column: 13, scope: !6789)
!6802 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6801)
!6803 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6801)
!6804 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6801)
!6805 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6801)
!6806 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6801)
!6807 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6801)
!6808 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6809)
!6809 = distinct !DILocation(line: 491, column: 13, scope: !6789)
!6810 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6809)
!6811 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6809)
!6812 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6809)
!6813 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6809)
!6814 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6809)
!6815 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6809)
!6816 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !6817)
!6817 = distinct !DILocation(line: 489, column: 9, scope: !6792)
!6818 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !6817)
!6819 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !6817)
!6820 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !6817)
!6821 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !6817)
!6822 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !6817)
!6823 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !6817)
!6824 = !DILocalVariable(name: "s", arg: 1, scope: !6786, file: !910, line: 484, type: !1829)
!6825 = !DILocation(line: 484, column: 48, scope: !6786)
!6826 = !DILocalVariable(name: "level", scope: !6786, file: !910, line: 486, type: !936)
!6827 = !DILocation(line: 486, column: 9, scope: !6786)
!6828 = !DILocation(line: 487, column: 15, scope: !6786)
!6829 = !DILocation(line: 487, column: 18, scope: !6786)
!6830 = !DILocation(line: 487, column: 25, scope: !6786)
!6831 = !DILocation(line: 487, column: 28, scope: !6786)
!6832 = !DILocation(line: 487, column: 5, scope: !6786)
!6833 = !DILocation(line: 488, column: 9, scope: !6793)
!6834 = !DILocation(line: 488, column: 12, scope: !6793)
!6835 = !DILocation(line: 488, column: 9, scope: !6786)
!6836 = !DILocation(line: 489, column: 26, scope: !6792)
!6837 = !DILocation(line: 489, column: 29, scope: !6792)
!6838 = !DILocation(line: 489, column: 33, scope: !6792)
!6839 = !DILocation(line: 489, column: 36, scope: !6792)
!6840 = !DILocation(line: 489, column: 9, scope: !6792)
!6841 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6817)
!6842 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6817)
!6843 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6817)
!6844 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6817)
!6845 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6817)
!6846 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6817)
!6847 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6817)
!6848 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6817)
!6849 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6817)
!6850 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6817)
!6851 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6817)
!6852 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6817)
!6853 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6817)
!6854 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6817)
!6855 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6817)
!6856 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6817)
!6857 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6817)
!6858 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6817)
!6859 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6817)
!6860 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6817)
!6861 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6817)
!6862 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6817)
!6863 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6817)
!6864 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6817)
!6865 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6817)
!6866 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6817)
!6867 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6817)
!6868 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6817)
!6869 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6817)
!6870 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6817)
!6871 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6817)
!6872 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6817)
!6873 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6817)
!6874 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6817)
!6875 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6817)
!6876 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6817)
!6877 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6817)
!6878 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6817)
!6879 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6817)
!6880 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6817)
!6881 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6817)
!6882 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6817)
!6883 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6817)
!6884 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6817)
!6885 = !DILocation(line: 490, column: 20, scope: !6791)
!6886 = !DILocation(line: 490, column: 14, scope: !6791)
!6887 = !DILocation(line: 490, column: 25, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6790, file: !910, discriminator: 1)
!6889 = !DILocation(line: 490, column: 33, scope: !6888)
!6890 = !DILocation(line: 490, column: 36, scope: !6888)
!6891 = !DILocation(line: 490, column: 31, scope: !6888)
!6892 = !DILocation(line: 490, column: 9, scope: !6888)
!6893 = !DILocation(line: 491, column: 30, scope: !6789)
!6894 = !DILocation(line: 491, column: 33, scope: !6789)
!6895 = !DILocation(line: 491, column: 46, scope: !6789)
!6896 = !DILocation(line: 491, column: 37, scope: !6789)
!6897 = !DILocation(line: 491, column: 40, scope: !6789)
!6898 = !DILocation(line: 491, column: 13, scope: !6789)
!6899 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6809)
!6900 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6809)
!6901 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6809)
!6902 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6809)
!6903 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6809)
!6904 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6809)
!6905 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6809)
!6906 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6809)
!6907 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6809)
!6908 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6809)
!6909 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6809)
!6910 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6809)
!6911 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6809)
!6912 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6809)
!6913 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6809)
!6914 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6809)
!6915 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6809)
!6916 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6809)
!6917 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6809)
!6918 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6809)
!6919 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6809)
!6920 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6809)
!6921 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6809)
!6922 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6809)
!6923 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6809)
!6924 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6809)
!6925 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6809)
!6926 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6809)
!6927 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6809)
!6928 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6809)
!6929 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6809)
!6930 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6809)
!6931 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6809)
!6932 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6809)
!6933 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6809)
!6934 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6809)
!6935 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6809)
!6936 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6809)
!6937 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6809)
!6938 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6809)
!6939 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6809)
!6940 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6809)
!6941 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6809)
!6942 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6809)
!6943 = !DILocation(line: 492, column: 30, scope: !6789)
!6944 = !DILocation(line: 492, column: 33, scope: !6789)
!6945 = !DILocation(line: 492, column: 46, scope: !6789)
!6946 = !DILocation(line: 492, column: 37, scope: !6789)
!6947 = !DILocation(line: 492, column: 40, scope: !6789)
!6948 = !DILocation(line: 492, column: 13, scope: !6789)
!6949 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6801)
!6950 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6801)
!6951 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6801)
!6952 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6801)
!6953 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6801)
!6954 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6801)
!6955 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6801)
!6956 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6801)
!6957 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6801)
!6958 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6801)
!6959 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6801)
!6960 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6801)
!6961 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6801)
!6962 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6801)
!6963 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6801)
!6964 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6801)
!6965 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6801)
!6966 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6801)
!6967 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6801)
!6968 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6801)
!6969 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6801)
!6970 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6801)
!6971 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6801)
!6972 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6801)
!6973 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6801)
!6974 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6801)
!6975 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6801)
!6976 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6801)
!6977 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6801)
!6978 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6801)
!6979 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6801)
!6980 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6801)
!6981 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6801)
!6982 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6801)
!6983 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6801)
!6984 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6801)
!6985 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6801)
!6986 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6801)
!6987 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6801)
!6988 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6801)
!6989 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6801)
!6990 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6801)
!6991 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6801)
!6992 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6801)
!6993 = !DILocation(line: 493, column: 30, scope: !6789)
!6994 = !DILocation(line: 493, column: 33, scope: !6789)
!6995 = !DILocation(line: 493, column: 46, scope: !6789)
!6996 = !DILocation(line: 493, column: 37, scope: !6789)
!6997 = !DILocation(line: 493, column: 40, scope: !6789)
!6998 = !DILocation(line: 493, column: 13, scope: !6789)
!6999 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !6788)
!7000 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !6788)
!7001 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !6788)
!7002 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !6788)
!7003 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !6788)
!7004 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !6788)
!7005 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !6788)
!7006 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !6788)
!7007 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !6788)
!7008 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !6788)
!7009 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !6788)
!7010 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !6788)
!7011 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !6788)
!7012 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !6788)
!7013 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !6788)
!7014 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !6788)
!7015 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !6788)
!7016 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !6788)
!7017 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !6788)
!7018 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !6788)
!7019 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !6788)
!7020 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !6788)
!7021 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !6788)
!7022 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !6788)
!7023 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !6788)
!7024 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !6788)
!7025 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !6788)
!7026 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !6788)
!7027 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !6788)
!7028 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !6788)
!7029 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !6788)
!7030 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !6788)
!7031 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !6788)
!7032 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !6788)
!7033 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !6788)
!7034 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !6788)
!7035 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !6788)
!7036 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !6788)
!7037 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !6788)
!7038 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !6788)
!7039 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !6788)
!7040 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !6788)
!7041 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !6788)
!7042 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !6788)
!7043 = !DILocation(line: 494, column: 9, scope: !6789)
!7044 = !DILocation(line: 490, column: 56, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !6790, file: !910, discriminator: 2)
!7046 = !DILocation(line: 490, column: 9, scope: !7045)
!7047 = distinct !{!7047, !7048}
!7048 = !DILocation(line: 490, column: 9, scope: !6792)
!7049 = !DILocation(line: 495, column: 5, scope: !6792)
!7050 = !DILocation(line: 496, column: 1, scope: !6786)
!7051 = distinct !DISubprogram(name: "put_bits_ptr", scope: !1837, file: !1837, line: 324, type: !7052, isLocal: true, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!1116, !2969}
!7054 = !DILocalVariable(name: "s", arg: 1, scope: !7051, file: !1837, line: 324, type: !2969)
!7055 = !DILocation(line: 324, column: 52, scope: !7051)
!7056 = !DILocation(line: 326, column: 12, scope: !7051)
!7057 = !DILocation(line: 326, column: 15, scope: !7051)
!7058 = !DILocation(line: 326, column: 5, scope: !7051)
!7059 = distinct !DISubprogram(name: "encode_hq_slice", scope: !910, file: !910, line: 721, type: !3049, isLocal: true, isDefinition: true, scopeLine: 722, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!7060 = !DILocalVariable(name: "avctx", arg: 1, scope: !7059, file: !910, line: 721, type: !1088)
!7061 = !DILocation(line: 721, column: 44, scope: !7059)
!7062 = !DILocalVariable(name: "arg", arg: 2, scope: !7059, file: !910, line: 721, type: !955)
!7063 = !DILocation(line: 721, column: 57, scope: !7059)
!7064 = !DILocalVariable(name: "slice_dat", scope: !7059, file: !910, line: 723, type: !1858)
!7065 = !DILocation(line: 723, column: 16, scope: !7059)
!7066 = !DILocation(line: 723, column: 28, scope: !7059)
!7067 = !DILocalVariable(name: "s", scope: !7059, file: !910, line: 724, type: !1829)
!7068 = !DILocation(line: 724, column: 20, scope: !7059)
!7069 = !DILocation(line: 724, column: 24, scope: !7059)
!7070 = !DILocation(line: 724, column: 35, scope: !7059)
!7071 = !DILocalVariable(name: "pb", scope: !7059, file: !910, line: 725, type: !2969)
!7072 = !DILocation(line: 725, column: 20, scope: !7059)
!7073 = !DILocation(line: 725, column: 26, scope: !7059)
!7074 = !DILocation(line: 725, column: 37, scope: !7059)
!7075 = !DILocalVariable(name: "slice_x", scope: !7059, file: !910, line: 726, type: !989)
!7076 = !DILocation(line: 726, column: 15, scope: !7059)
!7077 = !DILocation(line: 726, column: 25, scope: !7059)
!7078 = !DILocation(line: 726, column: 36, scope: !7059)
!7079 = !DILocalVariable(name: "slice_y", scope: !7059, file: !910, line: 727, type: !989)
!7080 = !DILocation(line: 727, column: 15, scope: !7059)
!7081 = !DILocation(line: 727, column: 25, scope: !7059)
!7082 = !DILocation(line: 727, column: 36, scope: !7059)
!7083 = !DILocalVariable(name: "quant_idx", scope: !7059, file: !910, line: 728, type: !989)
!7084 = !DILocation(line: 728, column: 15, scope: !7059)
!7085 = !DILocation(line: 728, column: 27, scope: !7059)
!7086 = !DILocation(line: 728, column: 38, scope: !7059)
!7087 = !DILocalVariable(name: "slice_bytes_max", scope: !7059, file: !910, line: 729, type: !989)
!7088 = !DILocation(line: 729, column: 15, scope: !7059)
!7089 = !DILocation(line: 729, column: 33, scope: !7059)
!7090 = !DILocation(line: 729, column: 44, scope: !7059)
!7091 = !DILocalVariable(name: "quants", scope: !7059, file: !910, line: 730, type: !1906)
!7092 = !DILocation(line: 730, column: 13, scope: !7059)
!7093 = !DILocalVariable(name: "p", scope: !7059, file: !910, line: 731, type: !936)
!7094 = !DILocation(line: 731, column: 9, scope: !7059)
!7095 = !DILocalVariable(name: "level", scope: !7059, file: !910, line: 731, type: !936)
!7096 = !DILocation(line: 731, column: 12, scope: !7059)
!7097 = !DILocalVariable(name: "orientation", scope: !7059, file: !910, line: 731, type: !936)
!7098 = !DILocation(line: 731, column: 19, scope: !7059)
!7099 = !DILocation(line: 734, column: 25, scope: !7059)
!7100 = !DILocation(line: 734, column: 12, scope: !7059)
!7101 = !DILocation(line: 734, column: 33, scope: !7059)
!7102 = !DILocation(line: 734, column: 36, scope: !7059)
!7103 = !DILocation(line: 734, column: 5, scope: !7104)
!7104 = !DILexicalBlockFile(scope: !7059, file: !910, discriminator: 1)
!7105 = !DILocation(line: 735, column: 20, scope: !7059)
!7106 = !DILocation(line: 735, column: 24, scope: !7059)
!7107 = !DILocation(line: 735, column: 27, scope: !7059)
!7108 = !DILocation(line: 735, column: 5, scope: !7059)
!7109 = !DILocation(line: 737, column: 14, scope: !7059)
!7110 = !DILocation(line: 737, column: 21, scope: !7059)
!7111 = !DILocation(line: 737, column: 5, scope: !7059)
!7112 = !DILocation(line: 740, column: 16, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7059, file: !910, line: 740, column: 5)
!7114 = !DILocation(line: 740, column: 10, scope: !7113)
!7115 = !DILocation(line: 740, column: 21, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !7117, file: !910, discriminator: 1)
!7117 = distinct !DILexicalBlock(scope: !7113, file: !910, line: 740, column: 5)
!7118 = !DILocation(line: 740, column: 29, scope: !7116)
!7119 = !DILocation(line: 740, column: 32, scope: !7116)
!7120 = !DILocation(line: 740, column: 27, scope: !7116)
!7121 = !DILocation(line: 740, column: 5, scope: !7116)
!7122 = !DILocation(line: 741, column: 30, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !910, line: 741, column: 9)
!7124 = !DILocation(line: 741, column: 29, scope: !7123)
!7125 = !DILocation(line: 741, column: 28, scope: !7123)
!7126 = !DILocation(line: 741, column: 26, scope: !7123)
!7127 = !DILocation(line: 741, column: 14, scope: !7123)
!7128 = !DILocation(line: 741, column: 37, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !7130, file: !910, discriminator: 1)
!7130 = distinct !DILexicalBlock(scope: !7123, file: !910, line: 741, column: 9)
!7131 = !DILocation(line: 741, column: 49, scope: !7129)
!7132 = !DILocation(line: 741, column: 9, scope: !7129)
!7133 = !DILocation(line: 742, column: 44, scope: !7130)
!7134 = !DILocation(line: 742, column: 72, scope: !7130)
!7135 = !DILocation(line: 742, column: 56, scope: !7130)
!7136 = !DILocation(line: 742, column: 65, scope: !7130)
!7137 = !DILocation(line: 742, column: 59, scope: !7130)
!7138 = !DILocation(line: 742, column: 54, scope: !7130)
!7139 = !DILocation(line: 742, column: 86, scope: !7130)
!7140 = !DILocation(line: 742, column: 43, scope: !7130)
!7141 = !DILocation(line: 742, column: 95, scope: !7129)
!7142 = !DILocation(line: 742, column: 123, scope: !7129)
!7143 = !DILocation(line: 742, column: 107, scope: !7129)
!7144 = !DILocation(line: 742, column: 116, scope: !7129)
!7145 = !DILocation(line: 742, column: 110, scope: !7129)
!7146 = !DILocation(line: 742, column: 105, scope: !7129)
!7147 = !DILocation(line: 742, column: 43, scope: !7129)
!7148 = !DILocation(line: 742, column: 43, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !7130, file: !910, discriminator: 2)
!7150 = !DILocation(line: 742, column: 43, scope: !7151)
!7151 = !DILexicalBlockFile(scope: !7130, file: !910, discriminator: 3)
!7152 = !DILocation(line: 742, column: 42, scope: !7151)
!7153 = !DILocation(line: 742, column: 27, scope: !7151)
!7154 = !DILocation(line: 742, column: 13, scope: !7151)
!7155 = !DILocation(line: 742, column: 20, scope: !7151)
!7156 = !DILocation(line: 742, column: 40, scope: !7151)
!7157 = !DILocation(line: 741, column: 65, scope: !7149)
!7158 = !DILocation(line: 741, column: 9, scope: !7149)
!7159 = distinct !{!7159, !7160}
!7160 = !DILocation(line: 741, column: 9, scope: !7117)
!7161 = !DILocation(line: 742, column: 142, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !7123, file: !910, discriminator: 4)
!7163 = !DILocation(line: 740, column: 52, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7117, file: !910, discriminator: 2)
!7165 = !DILocation(line: 740, column: 5, scope: !7164)
!7166 = distinct !{!7166, !7167}
!7167 = !DILocation(line: 740, column: 5, scope: !7059)
!7168 = !DILocation(line: 745, column: 12, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7059, file: !910, line: 745, column: 5)
!7170 = !DILocation(line: 745, column: 10, scope: !7169)
!7171 = !DILocation(line: 745, column: 17, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !7173, file: !910, discriminator: 1)
!7173 = distinct !DILexicalBlock(scope: !7169, file: !910, line: 745, column: 5)
!7174 = !DILocation(line: 745, column: 19, scope: !7172)
!7175 = !DILocation(line: 745, column: 5, scope: !7172)
!7176 = !DILocalVariable(name: "bytes_start", scope: !7177, file: !910, line: 746, type: !936)
!7177 = distinct !DILexicalBlock(scope: !7173, file: !910, line: 745, column: 29)
!7178 = !DILocation(line: 746, column: 13, scope: !7177)
!7179 = !DILocalVariable(name: "bytes_len", scope: !7177, file: !910, line: 746, type: !936)
!7180 = !DILocation(line: 746, column: 26, scope: !7177)
!7181 = !DILocalVariable(name: "pad_s", scope: !7177, file: !910, line: 746, type: !936)
!7182 = !DILocation(line: 746, column: 37, scope: !7177)
!7183 = !DILocalVariable(name: "pad_c", scope: !7177, file: !910, line: 746, type: !936)
!7184 = !DILocation(line: 746, column: 44, scope: !7177)
!7185 = !DILocation(line: 747, column: 38, scope: !7177)
!7186 = !DILocation(line: 747, column: 23, scope: !7177)
!7187 = !DILocation(line: 747, column: 42, scope: !7177)
!7188 = !DILocation(line: 747, column: 21, scope: !7177)
!7189 = !DILocation(line: 748, column: 18, scope: !7177)
!7190 = !DILocation(line: 748, column: 9, scope: !7177)
!7191 = !DILocation(line: 749, column: 20, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7177, file: !910, line: 749, column: 9)
!7193 = !DILocation(line: 749, column: 14, scope: !7192)
!7194 = !DILocation(line: 749, column: 25, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7196, file: !910, discriminator: 1)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !910, line: 749, column: 9)
!7197 = !DILocation(line: 749, column: 33, scope: !7195)
!7198 = !DILocation(line: 749, column: 36, scope: !7195)
!7199 = !DILocation(line: 749, column: 31, scope: !7195)
!7200 = !DILocation(line: 749, column: 9, scope: !7195)
!7201 = !DILocation(line: 750, column: 34, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !910, line: 750, column: 13)
!7203 = distinct !DILexicalBlock(scope: !7196, file: !910, line: 749, column: 60)
!7204 = !DILocation(line: 750, column: 33, scope: !7202)
!7205 = !DILocation(line: 750, column: 32, scope: !7202)
!7206 = !DILocation(line: 750, column: 30, scope: !7202)
!7207 = !DILocation(line: 750, column: 18, scope: !7202)
!7208 = !DILocation(line: 750, column: 41, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !7210, file: !910, discriminator: 1)
!7210 = distinct !DILexicalBlock(scope: !7202, file: !910, line: 750, column: 13)
!7211 = !DILocation(line: 750, column: 53, scope: !7209)
!7212 = !DILocation(line: 750, column: 13, scope: !7209)
!7213 = !DILocation(line: 751, column: 32, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7210, file: !910, line: 750, column: 73)
!7215 = !DILocation(line: 751, column: 35, scope: !7214)
!7216 = !DILocation(line: 751, column: 39, scope: !7214)
!7217 = !DILocation(line: 751, column: 48, scope: !7214)
!7218 = !DILocation(line: 752, column: 57, scope: !7214)
!7219 = !DILocation(line: 752, column: 33, scope: !7214)
!7220 = !DILocation(line: 752, column: 50, scope: !7214)
!7221 = !DILocation(line: 752, column: 42, scope: !7214)
!7222 = !DILocation(line: 752, column: 36, scope: !7214)
!7223 = !DILocation(line: 752, column: 45, scope: !7214)
!7224 = !DILocation(line: 753, column: 46, scope: !7214)
!7225 = !DILocation(line: 753, column: 32, scope: !7214)
!7226 = !DILocation(line: 753, column: 39, scope: !7214)
!7227 = !DILocation(line: 751, column: 17, scope: !7214)
!7228 = !DILocation(line: 754, column: 13, scope: !7214)
!7229 = !DILocation(line: 750, column: 69, scope: !7230)
!7230 = !DILexicalBlockFile(scope: !7210, file: !910, discriminator: 2)
!7231 = !DILocation(line: 750, column: 13, scope: !7230)
!7232 = distinct !{!7232, !7233}
!7233 = !DILocation(line: 750, column: 13, scope: !7203)
!7234 = !DILocation(line: 755, column: 9, scope: !7203)
!7235 = !DILocation(line: 749, column: 56, scope: !7236)
!7236 = !DILexicalBlockFile(scope: !7196, file: !910, discriminator: 2)
!7237 = !DILocation(line: 749, column: 9, scope: !7236)
!7238 = distinct !{!7238, !7239}
!7239 = !DILocation(line: 749, column: 9, scope: !7177)
!7240 = !DILocation(line: 756, column: 31, scope: !7177)
!7241 = !DILocation(line: 756, column: 9, scope: !7177)
!7242 = !DILocation(line: 757, column: 37, scope: !7177)
!7243 = !DILocation(line: 757, column: 22, scope: !7177)
!7244 = !DILocation(line: 757, column: 41, scope: !7177)
!7245 = !DILocation(line: 757, column: 49, scope: !7177)
!7246 = !DILocation(line: 757, column: 47, scope: !7177)
!7247 = !DILocation(line: 757, column: 61, scope: !7177)
!7248 = !DILocation(line: 757, column: 19, scope: !7177)
!7249 = !DILocation(line: 758, column: 13, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7177, file: !910, line: 758, column: 13)
!7251 = !DILocation(line: 758, column: 15, scope: !7250)
!7252 = !DILocation(line: 758, column: 13, scope: !7177)
!7253 = !DILocalVariable(name: "len_diff", scope: !7254, file: !910, line: 759, type: !936)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !910, line: 758, column: 21)
!7255 = !DILocation(line: 759, column: 17, scope: !7254)
!7256 = !DILocation(line: 759, column: 28, scope: !7254)
!7257 = !DILocation(line: 759, column: 62, scope: !7254)
!7258 = !DILocation(line: 759, column: 47, scope: !7254)
!7259 = !DILocation(line: 759, column: 66, scope: !7254)
!7260 = !DILocation(line: 759, column: 44, scope: !7254)
!7261 = !DILocation(line: 760, column: 25, scope: !7254)
!7262 = !DILocation(line: 760, column: 37, scope: !7254)
!7263 = !DILocation(line: 760, column: 35, scope: !7254)
!7264 = !DILocation(line: 760, column: 49, scope: !7254)
!7265 = !DILocation(line: 760, column: 52, scope: !7254)
!7266 = !DILocation(line: 760, column: 47, scope: !7254)
!7267 = !DILocation(line: 760, column: 64, scope: !7254)
!7268 = !DILocation(line: 760, column: 71, scope: !7254)
!7269 = !DILocation(line: 760, column: 74, scope: !7254)
!7270 = !DILocation(line: 760, column: 86, scope: !7254)
!7271 = !DILocation(line: 760, column: 68, scope: !7254)
!7272 = !DILocation(line: 760, column: 67, scope: !7254)
!7273 = !DILocation(line: 760, column: 91, scope: !7254)
!7274 = !DILocation(line: 760, column: 94, scope: !7254)
!7275 = !DILocation(line: 760, column: 90, scope: !7254)
!7276 = !DILocation(line: 760, column: 19, scope: !7254)
!7277 = !DILocation(line: 761, column: 22, scope: !7254)
!7278 = !DILocation(line: 761, column: 28, scope: !7254)
!7279 = !DILocation(line: 761, column: 31, scope: !7254)
!7280 = !DILocation(line: 761, column: 27, scope: !7254)
!7281 = !DILocation(line: 761, column: 46, scope: !7254)
!7282 = !DILocation(line: 761, column: 44, scope: !7254)
!7283 = !DILocation(line: 761, column: 19, scope: !7254)
!7284 = !DILocation(line: 762, column: 9, scope: !7254)
!7285 = !DILocation(line: 763, column: 24, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7250, file: !910, line: 762, column: 16)
!7287 = !DILocation(line: 763, column: 36, scope: !7286)
!7288 = !DILocation(line: 763, column: 39, scope: !7286)
!7289 = !DILocation(line: 763, column: 34, scope: !7286)
!7290 = !DILocation(line: 763, column: 51, scope: !7286)
!7291 = !DILocation(line: 763, column: 58, scope: !7286)
!7292 = !DILocation(line: 763, column: 61, scope: !7286)
!7293 = !DILocation(line: 763, column: 73, scope: !7286)
!7294 = !DILocation(line: 763, column: 55, scope: !7286)
!7295 = !DILocation(line: 763, column: 54, scope: !7286)
!7296 = !DILocation(line: 763, column: 78, scope: !7286)
!7297 = !DILocation(line: 763, column: 81, scope: !7286)
!7298 = !DILocation(line: 763, column: 77, scope: !7286)
!7299 = !DILocation(line: 763, column: 19, scope: !7286)
!7300 = !DILocation(line: 764, column: 22, scope: !7286)
!7301 = !DILocation(line: 764, column: 28, scope: !7286)
!7302 = !DILocation(line: 764, column: 31, scope: !7286)
!7303 = !DILocation(line: 764, column: 27, scope: !7286)
!7304 = !DILocation(line: 764, column: 46, scope: !7286)
!7305 = !DILocation(line: 764, column: 44, scope: !7286)
!7306 = !DILocation(line: 764, column: 19, scope: !7286)
!7307 = !DILocation(line: 766, column: 32, scope: !7177)
!7308 = !DILocation(line: 766, column: 17, scope: !7177)
!7309 = !DILocation(line: 766, column: 9, scope: !7177)
!7310 = !DILocation(line: 766, column: 13, scope: !7177)
!7311 = !DILocation(line: 766, column: 30, scope: !7177)
!7312 = !DILocation(line: 767, column: 24, scope: !7177)
!7313 = !DILocation(line: 767, column: 9, scope: !7177)
!7314 = !DILocation(line: 769, column: 29, scope: !7177)
!7315 = !DILocation(line: 769, column: 16, scope: !7177)
!7316 = !DILocation(line: 769, column: 40, scope: !7177)
!7317 = !DILocation(line: 769, column: 9, scope: !7318)
!7318 = !DILexicalBlockFile(scope: !7177, file: !910, discriminator: 1)
!7319 = !DILocation(line: 770, column: 24, scope: !7177)
!7320 = !DILocation(line: 770, column: 28, scope: !7177)
!7321 = !DILocation(line: 770, column: 9, scope: !7177)
!7322 = !DILocation(line: 771, column: 5, scope: !7177)
!7323 = !DILocation(line: 745, column: 25, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7173, file: !910, discriminator: 2)
!7325 = !DILocation(line: 745, column: 5, scope: !7324)
!7326 = distinct !{!7326, !7327}
!7327 = !DILocation(line: 745, column: 5, scope: !7059)
!7328 = !DILocation(line: 773, column: 5, scope: !7059)
!7329 = distinct !DISubprogram(name: "skip_put_bytes", scope: !1837, file: !1837, line: 333, type: !7330, isLocal: true, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !2969, !936}
!7332 = !DILocalVariable(name: "s", arg: 1, scope: !7329, file: !1837, line: 333, type: !2969)
!7333 = !DILocation(line: 333, column: 50, scope: !7329)
!7334 = !DILocalVariable(name: "n", arg: 2, scope: !7329, file: !1837, line: 333, type: !936)
!7335 = !DILocation(line: 333, column: 57, scope: !7329)
!7336 = !DILocation(line: 337, column: 5, scope: !7329)
!7337 = distinct !{!7337, !7336}
!7338 = !DILocation(line: 337, column: 16, scope: !7339)
!7339 = !DILexicalBlockFile(scope: !7340, file: !1837, discriminator: 1)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !1837, line: 337, column: 14)
!7341 = distinct !DILexicalBlock(scope: !7329, file: !1837, line: 337, column: 8)
!7342 = !DILocation(line: 337, column: 21, scope: !7339)
!7343 = !DILocation(line: 337, column: 24, scope: !7339)
!7344 = !DILocation(line: 337, column: 34, scope: !7339)
!7345 = !DILocation(line: 337, column: 37, scope: !7339)
!7346 = !DILocation(line: 337, column: 32, scope: !7339)
!7347 = !DILocation(line: 337, column: 18, scope: !7339)
!7348 = !DILocation(line: 337, column: 14, scope: !7339)
!7349 = !DILocation(line: 337, column: 49, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !7351, file: !1837, discriminator: 2)
!7351 = distinct !DILexicalBlock(scope: !7340, file: !1837, line: 337, column: 47)
!7352 = !DILocation(line: 337, column: 106, scope: !7353)
!7353 = !DILexicalBlockFile(scope: !7350, file: !1837, discriminator: 4)
!7354 = !DILocation(line: 337, column: 106, scope: !7350)
!7355 = !DILocation(line: 337, column: 117, scope: !7356)
!7356 = !DILexicalBlockFile(scope: !7341, file: !1837, discriminator: 3)
!7357 = !DILocation(line: 338, column: 19, scope: !7329)
!7358 = !DILocation(line: 338, column: 5, scope: !7329)
!7359 = !DILocation(line: 338, column: 8, scope: !7329)
!7360 = !DILocation(line: 338, column: 16, scope: !7329)
!7361 = !DILocation(line: 339, column: 1, scope: !7329)
!7362 = distinct !DISubprogram(name: "encode_subband", scope: !910, file: !910, line: 527, type: !7363, isLocal: true, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1750)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{null, !1829, !2969, !936, !936, !1781, !936}
!7365 = !DILocation(line: 183, column: 82, scope: !3808, inlinedAt: !7366)
!7366 = distinct !DILocation(line: 545, column: 13, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 543, column: 40)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !910, line: 543, column: 9)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !910, line: 543, column: 9)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !910, line: 542, column: 36)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !910, line: 542, column: 5)
!7372 = distinct !DILexicalBlock(scope: !7362, file: !910, line: 542, column: 5)
!7373 = !DILocation(line: 183, column: 95, scope: !3808, inlinedAt: !7366)
!7374 = !DILocation(line: 185, column: 9, scope: !3808, inlinedAt: !7366)
!7375 = !DILocation(line: 186, column: 9, scope: !3808, inlinedAt: !7366)
!7376 = !DILocation(line: 186, column: 20, scope: !3808, inlinedAt: !7366)
!7377 = !DILocation(line: 186, column: 30, scope: !3808, inlinedAt: !7366)
!7378 = !DILocation(line: 186, column: 42, scope: !3808, inlinedAt: !7366)
!7379 = !DILocalVariable(name: "s", arg: 1, scope: !7362, file: !910, line: 527, type: !1829)
!7380 = !DILocation(line: 527, column: 43, scope: !7362)
!7381 = !DILocalVariable(name: "pb", arg: 2, scope: !7362, file: !910, line: 527, type: !2969)
!7382 = !DILocation(line: 527, column: 61, scope: !7362)
!7383 = !DILocalVariable(name: "sx", arg: 3, scope: !7362, file: !910, line: 527, type: !936)
!7384 = !DILocation(line: 527, column: 69, scope: !7362)
!7385 = !DILocalVariable(name: "sy", arg: 4, scope: !7362, file: !910, line: 527, type: !936)
!7386 = !DILocation(line: 527, column: 77, scope: !7362)
!7387 = !DILocalVariable(name: "b", arg: 5, scope: !7362, file: !910, line: 528, type: !1781)
!7388 = !DILocation(line: 528, column: 37, scope: !7362)
!7389 = !DILocalVariable(name: "quant", arg: 6, scope: !7362, file: !910, line: 528, type: !936)
!7390 = !DILocation(line: 528, column: 44, scope: !7362)
!7391 = !DILocalVariable(name: "x", scope: !7362, file: !910, line: 530, type: !936)
!7392 = !DILocation(line: 530, column: 9, scope: !7362)
!7393 = !DILocalVariable(name: "y", scope: !7362, file: !910, line: 530, type: !936)
!7394 = !DILocation(line: 530, column: 12, scope: !7362)
!7395 = !DILocalVariable(name: "left", scope: !7362, file: !910, line: 532, type: !989)
!7396 = !DILocation(line: 532, column: 15, scope: !7362)
!7397 = !DILocation(line: 532, column: 22, scope: !7362)
!7398 = !DILocation(line: 532, column: 25, scope: !7362)
!7399 = !DILocation(line: 532, column: 34, scope: !7362)
!7400 = !DILocation(line: 532, column: 36, scope: !7362)
!7401 = !DILocation(line: 532, column: 31, scope: !7362)
!7402 = !DILocation(line: 532, column: 42, scope: !7362)
!7403 = !DILocation(line: 532, column: 45, scope: !7362)
!7404 = !DILocation(line: 532, column: 40, scope: !7362)
!7405 = !DILocalVariable(name: "right", scope: !7362, file: !910, line: 533, type: !989)
!7406 = !DILocation(line: 533, column: 15, scope: !7362)
!7407 = !DILocation(line: 533, column: 23, scope: !7362)
!7408 = !DILocation(line: 533, column: 26, scope: !7362)
!7409 = !DILocation(line: 533, column: 35, scope: !7362)
!7410 = !DILocation(line: 533, column: 37, scope: !7362)
!7411 = !DILocation(line: 533, column: 32, scope: !7362)
!7412 = !DILocation(line: 533, column: 43, scope: !7362)
!7413 = !DILocation(line: 533, column: 46, scope: !7362)
!7414 = !DILocation(line: 533, column: 41, scope: !7362)
!7415 = !DILocalVariable(name: "top", scope: !7362, file: !910, line: 534, type: !989)
!7416 = !DILocation(line: 534, column: 15, scope: !7362)
!7417 = !DILocation(line: 534, column: 21, scope: !7362)
!7418 = !DILocation(line: 534, column: 24, scope: !7362)
!7419 = !DILocation(line: 534, column: 34, scope: !7362)
!7420 = !DILocation(line: 534, column: 36, scope: !7362)
!7421 = !DILocation(line: 534, column: 31, scope: !7362)
!7422 = !DILocation(line: 534, column: 42, scope: !7362)
!7423 = !DILocation(line: 534, column: 45, scope: !7362)
!7424 = !DILocation(line: 534, column: 40, scope: !7362)
!7425 = !DILocalVariable(name: "bottom", scope: !7362, file: !910, line: 535, type: !989)
!7426 = !DILocation(line: 535, column: 15, scope: !7362)
!7427 = !DILocation(line: 535, column: 24, scope: !7362)
!7428 = !DILocation(line: 535, column: 27, scope: !7362)
!7429 = !DILocation(line: 535, column: 37, scope: !7362)
!7430 = !DILocation(line: 535, column: 39, scope: !7362)
!7431 = !DILocation(line: 535, column: 34, scope: !7362)
!7432 = !DILocation(line: 535, column: 45, scope: !7362)
!7433 = !DILocation(line: 535, column: 48, scope: !7362)
!7434 = !DILocation(line: 535, column: 43, scope: !7362)
!7435 = !DILocalVariable(name: "coeff", scope: !7362, file: !910, line: 537, type: !1765)
!7436 = !DILocation(line: 537, column: 14, scope: !7362)
!7437 = !DILocation(line: 537, column: 22, scope: !7362)
!7438 = !DILocation(line: 537, column: 25, scope: !7362)
!7439 = !DILocation(line: 537, column: 31, scope: !7362)
!7440 = !DILocation(line: 537, column: 37, scope: !7362)
!7441 = !DILocation(line: 537, column: 40, scope: !7362)
!7442 = !DILocation(line: 537, column: 35, scope: !7362)
!7443 = !DILocation(line: 537, column: 29, scope: !7362)
!7444 = !DILocalVariable(name: "q_m", scope: !7362, file: !910, line: 538, type: !995)
!7445 = !DILocation(line: 538, column: 20, scope: !7362)
!7446 = !DILocation(line: 538, column: 52, scope: !7362)
!7447 = !DILocation(line: 538, column: 38, scope: !7362)
!7448 = !DILocation(line: 538, column: 41, scope: !7362)
!7449 = !DILocation(line: 538, column: 27, scope: !7362)
!7450 = !DILocation(line: 538, column: 64, scope: !7362)
!7451 = !DILocalVariable(name: "q_a", scope: !7362, file: !910, line: 539, type: !995)
!7452 = !DILocation(line: 539, column: 20, scope: !7362)
!7453 = !DILocation(line: 539, column: 40, scope: !7362)
!7454 = !DILocation(line: 539, column: 26, scope: !7362)
!7455 = !DILocation(line: 539, column: 29, scope: !7362)
!7456 = !DILocalVariable(name: "q_s", scope: !7362, file: !910, line: 540, type: !989)
!7457 = !DILocation(line: 540, column: 15, scope: !7362)
!7458 = !DILocation(line: 540, column: 62, scope: !7362)
!7459 = !DILocation(line: 540, column: 42, scope: !7362)
!7460 = !DILocation(line: 540, column: 69, scope: !7362)
!7461 = !DILocation(line: 540, column: 27, scope: !7362)
!7462 = !DILocation(line: 540, column: 25, scope: !7362)
!7463 = !DILocation(line: 540, column: 74, scope: !7362)
!7464 = !DILocation(line: 542, column: 14, scope: !7372)
!7465 = !DILocation(line: 542, column: 12, scope: !7372)
!7466 = !DILocation(line: 542, column: 10, scope: !7372)
!7467 = !DILocation(line: 542, column: 19, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !7371, file: !910, discriminator: 1)
!7469 = !DILocation(line: 542, column: 23, scope: !7468)
!7470 = !DILocation(line: 542, column: 21, scope: !7468)
!7471 = !DILocation(line: 542, column: 5, scope: !7468)
!7472 = !DILocation(line: 543, column: 18, scope: !7369)
!7473 = !DILocation(line: 543, column: 16, scope: !7369)
!7474 = !DILocation(line: 543, column: 14, scope: !7369)
!7475 = !DILocation(line: 543, column: 24, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7368, file: !910, discriminator: 1)
!7477 = !DILocation(line: 543, column: 28, scope: !7476)
!7478 = !DILocation(line: 543, column: 26, scope: !7476)
!7479 = !DILocation(line: 543, column: 9, scope: !7476)
!7480 = !DILocalVariable(name: "c_abs", scope: !7367, file: !910, line: 544, type: !954)
!7481 = !DILocation(line: 544, column: 22, scope: !7367)
!7482 = !DILocation(line: 544, column: 33, scope: !7367)
!7483 = !DILocation(line: 544, column: 49, scope: !7367)
!7484 = !DILocation(line: 544, column: 43, scope: !7367)
!7485 = !DILocation(line: 544, column: 53, scope: !7367)
!7486 = !DILocation(line: 544, column: 42, scope: !7367)
!7487 = !DILocation(line: 544, column: 67, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7367, file: !910, discriminator: 1)
!7489 = !DILocation(line: 544, column: 61, scope: !7488)
!7490 = !DILocation(line: 544, column: 42, scope: !7488)
!7491 = !DILocation(line: 544, column: 82, scope: !7492)
!7492 = !DILexicalBlockFile(scope: !7367, file: !910, discriminator: 2)
!7493 = !DILocation(line: 544, column: 76, scope: !7492)
!7494 = !DILocation(line: 544, column: 74, scope: !7492)
!7495 = !DILocation(line: 544, column: 42, scope: !7492)
!7496 = !DILocation(line: 544, column: 42, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7367, file: !910, discriminator: 3)
!7498 = !DILocation(line: 544, column: 40, scope: !7497)
!7499 = !DILocation(line: 544, column: 38, scope: !7497)
!7500 = !DILocation(line: 544, column: 92, scope: !7497)
!7501 = !DILocation(line: 544, column: 89, scope: !7497)
!7502 = !DILocation(line: 544, column: 102, scope: !7497)
!7503 = !DILocation(line: 544, column: 98, scope: !7497)
!7504 = !DILocation(line: 544, column: 30, scope: !7497)
!7505 = !DILocation(line: 544, column: 22, scope: !7497)
!7506 = !DILocation(line: 545, column: 29, scope: !7367)
!7507 = !DILocation(line: 545, column: 33, scope: !7367)
!7508 = !DILocation(line: 545, column: 13, scope: !7367)
!7509 = !DILocation(line: 188, column: 13, scope: !3846, inlinedAt: !7366)
!7510 = !DILocation(line: 188, column: 9, scope: !3808, inlinedAt: !7366)
!7511 = !DILocation(line: 189, column: 18, scope: !3849, inlinedAt: !7366)
!7512 = !DILocation(line: 189, column: 9, scope: !3849, inlinedAt: !7366)
!7513 = !DILocation(line: 190, column: 9, scope: !3849, inlinedAt: !7366)
!7514 = !DILocation(line: 193, column: 5, scope: !3808, inlinedAt: !7366)
!7515 = !DILocation(line: 193, column: 12, scope: !3854, inlinedAt: !7366)
!7516 = !DILocation(line: 193, column: 18, scope: !3854, inlinedAt: !7366)
!7517 = !DILocation(line: 193, column: 16, scope: !3854, inlinedAt: !7366)
!7518 = !DILocation(line: 193, column: 5, scope: !3854, inlinedAt: !7366)
!7519 = !DILocation(line: 194, column: 16, scope: !3859, inlinedAt: !7366)
!7520 = !DILocation(line: 195, column: 16, scope: !3859, inlinedAt: !7366)
!7521 = !DILocation(line: 196, column: 16, scope: !3859, inlinedAt: !7366)
!7522 = !DILocation(line: 193, column: 5, scope: !3863, inlinedAt: !7366)
!7523 = !DILocation(line: 199, column: 33, scope: !3808, inlinedAt: !7366)
!7524 = !DILocation(line: 199, column: 40, scope: !3808, inlinedAt: !7366)
!7525 = !DILocation(line: 199, column: 18, scope: !3808, inlinedAt: !7366)
!7526 = !DILocation(line: 199, column: 16, scope: !3808, inlinedAt: !7366)
!7527 = !DILocation(line: 199, column: 10, scope: !3808, inlinedAt: !7366)
!7528 = !DILocation(line: 201, column: 12, scope: !3872, inlinedAt: !7366)
!7529 = !DILocation(line: 201, column: 10, scope: !3872, inlinedAt: !7366)
!7530 = !DILocation(line: 201, column: 17, scope: !3875, inlinedAt: !7366)
!7531 = !DILocation(line: 201, column: 21, scope: !3875, inlinedAt: !7366)
!7532 = !DILocation(line: 201, column: 19, scope: !3875, inlinedAt: !7366)
!7533 = !DILocation(line: 201, column: 5, scope: !3875, inlinedAt: !7366)
!7534 = !DILocation(line: 202, column: 16, scope: !3881, inlinedAt: !7366)
!7535 = !DILocation(line: 203, column: 15, scope: !3881, inlinedAt: !7366)
!7536 = !DILocation(line: 204, column: 13, scope: !3884, inlinedAt: !7366)
!7537 = !DILocation(line: 204, column: 19, scope: !3884, inlinedAt: !7366)
!7538 = !DILocation(line: 204, column: 17, scope: !3884, inlinedAt: !7366)
!7539 = !DILocation(line: 204, column: 13, scope: !3881, inlinedAt: !7366)
!7540 = !DILocation(line: 205, column: 19, scope: !3884, inlinedAt: !7366)
!7541 = !DILocation(line: 205, column: 13, scope: !3884, inlinedAt: !7366)
!7542 = !DILocation(line: 201, column: 28, scope: !3891, inlinedAt: !7366)
!7543 = !DILocation(line: 201, column: 5, scope: !3891, inlinedAt: !7366)
!7544 = !DILocation(line: 208, column: 14, scope: !3808, inlinedAt: !7366)
!7545 = !DILocation(line: 208, column: 18, scope: !3808, inlinedAt: !7366)
!7546 = !DILocation(line: 208, column: 22, scope: !3808, inlinedAt: !7366)
!7547 = !DILocation(line: 208, column: 25, scope: !3808, inlinedAt: !7366)
!7548 = !DILocation(line: 208, column: 31, scope: !3808, inlinedAt: !7366)
!7549 = !DILocation(line: 208, column: 37, scope: !3808, inlinedAt: !7366)
!7550 = !DILocation(line: 208, column: 43, scope: !3808, inlinedAt: !7366)
!7551 = !DILocation(line: 208, column: 5, scope: !3808, inlinedAt: !7366)
!7552 = !DILocation(line: 209, column: 1, scope: !3808, inlinedAt: !7366)
!7553 = !DILocation(line: 546, column: 17, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7367, file: !910, line: 546, column: 17)
!7555 = !DILocation(line: 546, column: 17, scope: !7367)
!7556 = !DILocation(line: 547, column: 26, scope: !7554)
!7557 = !DILocation(line: 547, column: 39, scope: !7554)
!7558 = !DILocation(line: 547, column: 33, scope: !7554)
!7559 = !DILocation(line: 547, column: 42, scope: !7554)
!7560 = !DILocation(line: 547, column: 17, scope: !7554)
!7561 = !DILocation(line: 548, column: 9, scope: !7367)
!7562 = !DILocation(line: 543, column: 36, scope: !7563)
!7563 = !DILexicalBlockFile(scope: !7368, file: !910, discriminator: 2)
!7564 = !DILocation(line: 543, column: 9, scope: !7563)
!7565 = distinct !{!7565, !7566}
!7566 = !DILocation(line: 543, column: 9, scope: !7370)
!7567 = !DILocation(line: 549, column: 18, scope: !7370)
!7568 = !DILocation(line: 549, column: 21, scope: !7370)
!7569 = !DILocation(line: 549, column: 15, scope: !7370)
!7570 = !DILocation(line: 550, column: 5, scope: !7370)
!7571 = !DILocation(line: 542, column: 32, scope: !7572)
!7572 = !DILexicalBlockFile(scope: !7371, file: !910, discriminator: 2)
!7573 = !DILocation(line: 542, column: 5, scope: !7572)
!7574 = distinct !{!7574, !7575}
!7575 = !DILocation(line: 542, column: 5, scope: !7362)
!7576 = !DILocation(line: 551, column: 1, scope: !7362)
