; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--utils.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--utils.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type { %struct.AVClass*, i32, i32, i32, [12 x i32], i32, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.AVCodecContext*, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.Picture*, %struct.Picture**, %struct.Picture**, i64, i64, i64, %struct.PutBitContext, i32, i32, [32 x %struct.MpegEncContext*], i32, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture*, %struct.Picture*, %struct.Picture*, [3 x i32], i16*, [3 x i16*], i8*, i8*, i8*, i8*, i8*, [16 x i16]*, [3 x [16 x i16]*], i32, i8*, i8*, i8*, i8*, %struct.ScratchpadContext, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, [5 x i32], i32, i32, i32, %struct.BlockDSPContext, %struct.FDCTDSPContext, %struct.H264ChromaContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, %struct.MECmpContext, %struct.MpegVideoDSPContext, %struct.MpegvideoEncDSPContext, %struct.PixblockDSPContext, %struct.QpelDSPContext, %struct.VideoDSPContext, %struct.H263DSPContext, i32, i32, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i8*], [2 x [2 x i8*]], i32, i32, i32, i32, i32, [2 x [4 x [2 x i32]]], [2 x [2 x i32]], [2 x [2 x [2 x i32]]], i8*, [2 x [64 x i16]], %struct.MotionEstContext, i32, i32, i32, i32, i32, i16*, [6 x i32], [6 x i32], [3 x i8*], i32*, [64 x i16], [64 x i16], [64 x i16], [64 x i16], i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [12 x i32], [64 x i32]*, [64 x i32]*, [64 x i32]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [64 x i32]*, [2 x i32], [64 x i16]*, i64, i32, i32, i32, %struct.RateControlContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.GetBitContext, i32, i32, %struct.ParseContext, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i16, i16, i16, i16, i32, [2 x [2 x i32]], [2 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PutBitContext, %struct.PutBitContext, i32, i32, i32, i8*, i32, i32, i32, [3 x i32], %struct.MJpegContext*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [65 x [65 x [2 x i32]]]]*, i32, i32, %struct.GetBitContext, i32, i32, i8*, i32, [2 x [2 x i32]], i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8*, %struct.AVTimecode, i8*, i32, i32, [12 x [64 x i16]*], [64 x i16]*, [12 x [64 x i16]]*, i32 (%struct.MpegEncContext*, [64 x i16]*)*, [12 x [64 x i32]]*, i32, [3 x [256 x i16]]*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, void (%struct.MpegEncContext*, i16*)*, i32, i32, float, float, i32, float, float, float, i32, i32, i32, i8*, float*, float*, i32, %struct.ERContext, i32, [18 x %struct.AVFrame*], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.ScratchpadContext = type { i8*, i8*, i8*, i8* }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.FDCTDSPContext = type { void (i16*)*, void (i16*)* }
%struct.H264ChromaContext = type { [4 x void (i8*, i8*, i64, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.MpegVideoDSPContext = type { void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* }
%struct.MpegvideoEncDSPContext = type { i32 (i16*, i16*, i16*, i32)*, void (i16*, i16*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, [4 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i32, i32, i32, i32, i32)* }
%struct.PixblockDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)* }
%struct.QpelDSPContext = type { [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.H263DSPContext = type { void (i8*, i32, i32)*, void (i8*, i32, i32)* }
%struct.MotionEstContext = type { %struct.AVCodecContext*, i32, [4 x [2 x i32]], [4 x [2 x i32]], i8*, i8*, [2 x i8*], i8*, i32, i32*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i8*]], [4 x [4 x i8*]], i32, i32, i64, i64, i32, [4 x void (i8*, i8*, i64, i32)*]*, [4 x void (i8*, i8*, i64, i32)*]*, [16 x void (i8*, i8*, i64)*]*, [16 x void (i8*, i8*, i64)*]*, [16385 x i8]*, i8*, i32 (%struct.MpegEncContext*, i32*, i32*, i32, i32, i32, i32, i32)* }
%struct.RateControlContext = type { i32, %struct.RateControlEntry*, double, [5 x %struct.Predictor], double, double, double, double, double, [5 x double], i64, i64, [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i32], i32, i8*, float, i32, %struct.AVExpr* }
%struct.RateControlEntry = type { i32, float, i32, i32, i32, i32, i32, i64, i32, float, i64, i64, i32, i32, i32, i32 }
%struct.Predictor = type { double, double, double }
%struct.AVExpr = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.MJpegContext = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.ERContext = type { %struct.AVCodecContext*, %struct.MECmpContext, i32, i32*, i32, i32, i32, i64, i64, i32, i32, i8*, i8*, [3 x i16*], i8*, i8*, [2 x [4 x [2 x i32]]], %struct.ERPicture, %struct.ERPicture, %struct.ERPicture, [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*], i16, i16, i32, i32, i32, void (i8*, i32, i32, i32, [2 x [4 x [2 x i32]]]*, i32, i32, i32, i32)*, i8* }
%struct.ERPicture = type { %struct.AVFrame*, %struct.ThreadFrame*, [2 x [2 x i16]*], [2 x i8*], i32*, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type { %struct.AVCodecHWConfig, %struct.AVHWAccel* }
%struct.AVCodecHWConfig = type { i32, i32, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PixelFormatTag = type { i32, i32 }
%struct.AVHWFramesContext = type { %struct.AVClass*, %struct.AVHWFramesInternal*, %struct.AVBufferRef*, %struct.AVHWDeviceContext*, i8*, void (%struct.AVHWFramesContext*)*, i8*, %struct.AVBufferPool*, i32, i32, i32, i32, i32 }
%struct.AVHWFramesInternal = type opaque
%struct.AVHWDeviceContext = type { %struct.AVClass*, %struct.AVHWDeviceInternal*, i32, i8*, void (%struct.AVHWDeviceContext*)*, i8* }
%struct.AVHWDeviceInternal = type opaque
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }
%union.unaligned_32 = type { i32 }
%struct.AVCPBProperties = type { i32, i32, i32, i32, i64 }

@av_codec_ffversion = constant [32 x i8] c"FFmpeg version N-93147-g9326117\00", align 16
@.str = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %d/%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"desc->flags & (1 << 4)\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"libavcodec/utils.c\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"No codec provided to avcodec_open2()\0A\00", align 1
@.str.5 = private unnamed_addr constant [76 x i8] c"This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"Codec (%s) not on whitelist '%s'\0A\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Ignoring invalid width/height values\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %u/%u\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Too many channels: %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"Codec type or id mismatches\0A\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"decoder\00", align 1
@.str.13 = private unnamed_addr constant [110 x i8] c"The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\0A\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"Alternatively use the non experimental %s '%s'.\0A\00", align 1
@.str.15 = private unnamed_addr constant [61 x i8] c"The maximum value for lowres supported by the decoder is %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"The encoder timebase is not set.\0A\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"Specified sample format %s is invalid or not supported\0A\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"Specified pixel format %s is invalid or not supported\0A\00", align 1
@.str.20 = private unnamed_addr constant [43 x i8] c"Specified sample rate %d is not supported\0A\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"Channel layout not specified\0A\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"Specified channel layout '%s' is not supported\0A\00", align 1
@.str.23 = private unnamed_addr constant [85 x i8] c"Channel layout '%s' with %d channels does not match number of specified channels %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [50 x i8] c"Specified number of channels %d is not supported\0A\00", align 1
@.str.25 = private unnamed_addr constant [79 x i8] c"Specified bit depth %d not possible with the specified pixel formats depth %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"dimensions not set\0A\00", align 1
@.str.27 = private unnamed_addr constant [51 x i8] c"Bitrate %ld is extremely low, maybe you mean %ldk\0A\00", align 1
@.str.28 = private unnamed_addr constant [53 x i8] c"ticks_per_frame %d too large for the timebase %d/%d.\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"Mismatching AVCodecContext.pix_fmt and AVHWFramesContext.format\0A\00", align 1
@.str.30 = private unnamed_addr constant [81 x i8] c"Mismatching AVCodecContext.sw_pix_fmt (%s) and AVHWFramesContext.sw_format (%s)\0A\00", align 1
@.str.31 = private unnamed_addr constant [63 x i8] c"gray decoding requested but not enabled at configuration time\0A\00", align 1
@.str.32 = private unnamed_addr constant [120 x i8] c"Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\0A\00", align 1
@.str.33 = private unnamed_addr constant [60 x i8] c"Character encoding is only supported with subtitles codecs\0A\00", align 1
@.str.34 = private unnamed_addr constant [74 x i8] c"Codec '%s' is bitmap-based, subtitles character encoding will be ignored\0A\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.36 = private unnamed_addr constant [65 x i8] c"Unable to open iconv context with input character encoding \22%s\22\0A\00", align 1
@.str.37 = private unnamed_addr constant [57 x i8] c"*(const AVClass **)avctx->priv_data == codec->priv_class\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.39 = private unnamed_addr constant [37 x i8] c"Codec 0x%x is not in the full list.\0A\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"unknown_codec\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c" (%s)\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c", %d reference frame%s\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.49 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.50 = private unnamed_addr constant [15 x i8] c" (%s / 0x%04X)\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"%d bpc, \00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"%s, \00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"%s/%s/%s, \00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"top first\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"bottom first\00", align 1
@.str.58 = private unnamed_addr constant [26 x i8] c"top coded first (swapped)\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"bottom coded first (swapped)\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"%s)\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"%dx%d\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c" (%dx%d)\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c" [SAR %d:%d DAR %d:%d]\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c", %d/%d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c", q=%d-%d\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c", Closed Captions\00", align 1
@.str.67 = private unnamed_addr constant [11 x i8] c", lossless\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"%d Hz, \00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c" (%d bit)\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c", delay %d\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c", padding %d\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c", %dx%d\00", align 1
@.str.74 = private unnamed_addr constant [9 x i8] c", pass 1\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c", pass 2\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c", %ld kb/s\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c", max. %ld kb/s\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"--disable-x86asm\00", align 1
@.str.79 = private unnamed_addr constant [46 x i8] c"libavcodec license: LGPL version 2.1 or later\00", align 1
@av_get_pcm_codec.map = internal constant [12 x [2 x i32]] [[2 x i32] [i32 65541, i32 65541], [2 x i32] [i32 65536, i32 65537], [2 x i32] [i32 65544, i32 65545], [2 x i32] [i32 65557, i32 65556], [2 x i32] [i32 65559, i32 65558], [2 x i32] [i32 65541, i32 65541], [2 x i32] [i32 65536, i32 65537], [2 x i32] [i32 65544, i32 65545], [2 x i32] [i32 65557, i32 65556], [2 x i32] [i32 65559, i32 65558], [2 x i32] zeroinitializer, [2 x i32] [i32 67584, i32 67585]], align 16
@.str.80 = private unnamed_addr constant [15 x i8] c"!dst->progress\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"p <= end\00", align 1
@.str.82 = private unnamed_addr constant [52 x i8] c"%s %d are not supported. Set to default value : %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"val || !min_size\00", align 1
@.str.84 = private unnamed_addr constant [27 x i8] c"./libavutil/mem_internal.h\00", align 1
@codec_mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8

; Function Attrs: nounwind uwtable
define void @av_fast_padded_malloc(i8* %ptr, i32* %size, i64 %min_size) #0 !dbg !1167 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i32*, align 8
  %min_size.addr = alloca i64, align 8
  %p = alloca i8**, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1174, metadata !1175), !dbg !1176
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !1177, metadata !1175), !dbg !1178
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !1179, metadata !1175), !dbg !1180
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !1181, metadata !1175), !dbg !1183
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !1184
  %1 = bitcast i8* %0 to i8**, !dbg !1184
  store i8** %1, i8*** %p, align 8, !dbg !1183
  %2 = load i64, i64* %min_size.addr, align 8, !dbg !1185
  %cmp = icmp ugt i64 %2, -65, !dbg !1187
  br i1 %cmp, label %if.then, label %if.end, !dbg !1188

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** %p, align 8, !dbg !1189
  %4 = bitcast i8** %3 to i8*, !dbg !1189
  call void @av_freep(i8* %4), !dbg !1191
  %5 = load i32*, i32** %size.addr, align 8, !dbg !1192
  store i32 0, i32* %5, align 4, !dbg !1193
  br label %if.end2, !dbg !1194

if.end:                                           ; preds = %entry
  %6 = load i8**, i8*** %p, align 8, !dbg !1195
  %7 = bitcast i8** %6 to i8*, !dbg !1195
  %8 = load i32*, i32** %size.addr, align 8, !dbg !1197
  %9 = load i64, i64* %min_size.addr, align 8, !dbg !1198
  %add = add i64 %9, 64, !dbg !1199
  %call = call i32 @ff_fast_malloc(i8* %7, i32* %8, i64 %add, i32 1), !dbg !1200
  %tobool = icmp ne i32 %call, 0, !dbg !1200
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !1201

if.then1:                                         ; preds = %if.end
  %10 = load i8**, i8*** %p, align 8, !dbg !1202
  %11 = load i8*, i8** %10, align 8, !dbg !1203
  %12 = load i64, i64* %min_size.addr, align 8, !dbg !1204
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !1205
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 64, i32 1, i1 false), !dbg !1206
  br label %if.end2, !dbg !1206

if.end2:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !1207
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @av_freep(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_fast_malloc(i8* %ptr, i32* %size, i64 %min_size, i32 %zero_realloc) #3 !dbg !1208 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i32*, align 8
  %min_size.addr = alloca i64, align 8
  %zero_realloc.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1212, metadata !1175), !dbg !1213
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !1214, metadata !1175), !dbg !1215
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !1216, metadata !1175), !dbg !1217
  store i32 %zero_realloc, i32* %zero_realloc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zero_realloc.addr, metadata !1218, metadata !1175), !dbg !1219
  call void @llvm.dbg.declare(metadata i8** %val, metadata !1220, metadata !1175), !dbg !1221
  %0 = bitcast i8** %val to i8*, !dbg !1222
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !1223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 1, i1 false), !dbg !1222
  %2 = load i64, i64* %min_size.addr, align 8, !dbg !1224
  %3 = load i32*, i32** %size.addr, align 8, !dbg !1226
  %4 = load i32, i32* %3, align 4, !dbg !1227
  %conv = zext i32 %4 to i64, !dbg !1227
  %cmp = icmp ule i64 %2, %conv, !dbg !1228
  br i1 %cmp, label %if.then, label %if.end4, !dbg !1229

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !1230, !llvm.loop !1232

do.body:                                          ; preds = %if.then
  %5 = load i8*, i8** %val, align 8, !dbg !1233
  %tobool = icmp ne i8* %5, null, !dbg !1233
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !1237

lor.lhs.false:                                    ; preds = %do.body
  %6 = load i64, i64* %min_size.addr, align 8, !dbg !1238
  %tobool2 = icmp ne i64 %6, 0, !dbg !1238
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !1240

if.then3:                                         ; preds = %lor.lhs.false
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.84, i32 0, i32 0), i32 33), !dbg !1241
  call void @abort() #11, !dbg !1244
  unreachable, !dbg !1246

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !1247

do.end:                                           ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1249
  br label %return, !dbg !1249

if.end4:                                          ; preds = %entry
  %7 = load i64, i64* %min_size.addr, align 8, !dbg !1250
  %8 = load i64, i64* %min_size.addr, align 8, !dbg !1251
  %div = udiv i64 %8, 16, !dbg !1252
  %add = add i64 %7, %div, !dbg !1253
  %add5 = add i64 %add, 32, !dbg !1254
  %9 = load i64, i64* %min_size.addr, align 8, !dbg !1255
  %cmp6 = icmp ugt i64 %add5, %9, !dbg !1256
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !1257

cond.true:                                        ; preds = %if.end4
  %10 = load i64, i64* %min_size.addr, align 8, !dbg !1258
  %11 = load i64, i64* %min_size.addr, align 8, !dbg !1260
  %div8 = udiv i64 %11, 16, !dbg !1261
  %add9 = add i64 %10, %div8, !dbg !1262
  %add10 = add i64 %add9, 32, !dbg !1263
  br label %cond.end, !dbg !1264

cond.false:                                       ; preds = %if.end4
  %12 = load i64, i64* %min_size.addr, align 8, !dbg !1265
  br label %cond.end, !dbg !1267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add10, %cond.true ], [ %12, %cond.false ], !dbg !1268
  store i64 %cond, i64* %min_size.addr, align 8, !dbg !1270
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !1271
  call void @av_freep(i8* %13), !dbg !1272
  %14 = load i32, i32* %zero_realloc.addr, align 4, !dbg !1273
  %tobool11 = icmp ne i32 %14, 0, !dbg !1273
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !1273

cond.true12:                                      ; preds = %cond.end
  %15 = load i64, i64* %min_size.addr, align 8, !dbg !1274
  %call = call noalias i8* @av_mallocz(i64 %15), !dbg !1275
  br label %cond.end15, !dbg !1276

cond.false13:                                     ; preds = %cond.end
  %16 = load i64, i64* %min_size.addr, align 8, !dbg !1277
  %call14 = call noalias i8* @av_malloc(i64 %16), !dbg !1278
  br label %cond.end15, !dbg !1279

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i8* [ %call, %cond.true12 ], [ %call14, %cond.false13 ], !dbg !1280
  store i8* %cond16, i8** %val, align 8, !dbg !1281
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !1282
  %18 = bitcast i8** %val to i8*, !dbg !1283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 1, i1 false), !dbg !1283
  %19 = load i8*, i8** %val, align 8, !dbg !1284
  %tobool17 = icmp ne i8* %19, null, !dbg !1284
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !1286

if.then18:                                        ; preds = %cond.end15
  store i64 0, i64* %min_size.addr, align 8, !dbg !1287
  br label %if.end19, !dbg !1288

if.end19:                                         ; preds = %if.then18, %cond.end15
  %20 = load i64, i64* %min_size.addr, align 8, !dbg !1289
  %conv20 = trunc i64 %20 to i32, !dbg !1289
  %21 = load i32*, i32** %size.addr, align 8, !dbg !1290
  store i32 %conv20, i32* %21, align 4, !dbg !1291
  store i32 1, i32* %retval, align 4, !dbg !1292
  br label %return, !dbg !1292

return:                                           ; preds = %if.end19, %do.end
  %22 = load i32, i32* %retval, align 4, !dbg !1293
  ret i32 %22, !dbg !1293
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define void @av_fast_padded_mallocz(i8* %ptr, i32* %size, i64 %min_size) #0 !dbg !1294 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i32*, align 8
  %min_size.addr = alloca i64, align 8
  %p = alloca i8**, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1295, metadata !1175), !dbg !1296
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !1297, metadata !1175), !dbg !1298
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !1299, metadata !1175), !dbg !1300
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !1301, metadata !1175), !dbg !1302
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !1303
  %1 = bitcast i8* %0 to i8**, !dbg !1303
  store i8** %1, i8*** %p, align 8, !dbg !1302
  %2 = load i64, i64* %min_size.addr, align 8, !dbg !1304
  %cmp = icmp ugt i64 %2, -65, !dbg !1306
  br i1 %cmp, label %if.then, label %if.end, !dbg !1307

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** %p, align 8, !dbg !1308
  %4 = bitcast i8** %3 to i8*, !dbg !1308
  call void @av_freep(i8* %4), !dbg !1310
  %5 = load i32*, i32** %size.addr, align 8, !dbg !1311
  store i32 0, i32* %5, align 4, !dbg !1312
  br label %if.end3, !dbg !1313

if.end:                                           ; preds = %entry
  %6 = load i8**, i8*** %p, align 8, !dbg !1314
  %7 = bitcast i8** %6 to i8*, !dbg !1314
  %8 = load i32*, i32** %size.addr, align 8, !dbg !1316
  %9 = load i64, i64* %min_size.addr, align 8, !dbg !1317
  %add = add i64 %9, 64, !dbg !1318
  %call = call i32 @ff_fast_malloc(i8* %7, i32* %8, i64 %add, i32 1), !dbg !1319
  %tobool = icmp ne i32 %call, 0, !dbg !1319
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !1320

if.then1:                                         ; preds = %if.end
  %10 = load i8**, i8*** %p, align 8, !dbg !1321
  %11 = load i8*, i8** %10, align 8, !dbg !1322
  %12 = load i64, i64* %min_size.addr, align 8, !dbg !1323
  %add2 = add i64 %12, 64, !dbg !1324
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %add2, i32 1, i1 false), !dbg !1325
  br label %if.end3, !dbg !1325

if.end3:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !1326
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_is_encoder(%struct.AVCodec* %codec) #0 !dbg !1327 {
entry:
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !2886, metadata !1175), !dbg !2887
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2888
  %tobool = icmp ne %struct.AVCodec* %0, null, !dbg !2888
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2889

land.rhs:                                         ; preds = %entry
  %1 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2890
  %encode_sub = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1, i32 0, i32 21, !dbg !2892
  %2 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %encode_sub, align 8, !dbg !2892
  %tobool1 = icmp ne i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %2, null, !dbg !2890
  br i1 %tobool1, label %lor.end, label %lor.lhs.false, !dbg !2893

lor.lhs.false:                                    ; preds = %land.rhs
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2894
  %encode2 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %3, i32 0, i32 22, !dbg !2896
  %4 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %encode2, align 8, !dbg !2896
  %tobool2 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %4, null, !dbg !2894
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !2897

lor.rhs:                                          ; preds = %lor.lhs.false
  %5 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2898
  %send_frame = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i32 0, i32 25, !dbg !2900
  %6 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %send_frame, align 8, !dbg !2900
  %tobool3 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %6, null, !dbg !2901
  br label %lor.end, !dbg !2901

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %tobool3, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ]
  %land.ext = zext i1 %8 to i32, !dbg !2902
  ret i32 %land.ext, !dbg !2904
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_is_decoder(%struct.AVCodec* %codec) #0 !dbg !2905 {
entry:
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !2906, metadata !1175), !dbg !2907
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2908
  %tobool = icmp ne %struct.AVCodec* %0, null, !dbg !2908
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2909

land.rhs:                                         ; preds = %entry
  %1 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2910
  %decode = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1, i32 0, i32 23, !dbg !2912
  %2 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %decode, align 8, !dbg !2912
  %tobool1 = icmp ne i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %2, null, !dbg !2910
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !2913

lor.rhs:                                          ; preds = %land.rhs
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !2914
  %receive_frame = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %3, i32 0, i32 27, !dbg !2916
  %4 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %receive_frame, align 8, !dbg !2916
  %tobool2 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %4, null, !dbg !2917
  br label %lor.end, !dbg !2917

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %6 = phi i1 [ false, %entry ], [ %5, %lor.end ]
  %land.ext = zext i1 %6 to i32, !dbg !2918
  ret i32 %land.ext, !dbg !2920
}

; Function Attrs: nounwind uwtable
define i32 @ff_set_dimensions(%struct.AVCodecContext* %s, i32 %width, i32 %height) #0 !dbg !2921 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !2924, metadata !1175), !dbg !2925
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2926, metadata !1175), !dbg !2927
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !2928, metadata !1175), !dbg !2929
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2930, metadata !1175), !dbg !2931
  %0 = load i32, i32* %width.addr, align 4, !dbg !2932
  %1 = load i32, i32* %height.addr, align 4, !dbg !2933
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2934
  %max_pixels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 185, !dbg !2935
  %3 = load i64, i64* %max_pixels, align 8, !dbg !2935
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2936
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !2936
  %call = call i32 @av_image_check_size2(i32 %0, i32 %1, i64 %3, i32 -1, i32 0, i8* %5), !dbg !2937
  store i32 %call, i32* %ret, align 4, !dbg !2931
  %6 = load i32, i32* %ret, align 4, !dbg !2938
  %cmp = icmp slt i32 %6, 0, !dbg !2940
  br i1 %cmp, label %if.then, label %if.end, !dbg !2941

if.then:                                          ; preds = %entry
  store i32 0, i32* %height.addr, align 4, !dbg !2942
  store i32 0, i32* %width.addr, align 4, !dbg !2943
  br label %if.end, !dbg !2944

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %width.addr, align 4, !dbg !2945
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2946
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 22, !dbg !2947
  store i32 %7, i32* %coded_width, align 4, !dbg !2948
  %9 = load i32, i32* %height.addr, align 4, !dbg !2949
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2950
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 23, !dbg !2951
  store i32 %9, i32* %coded_height, align 8, !dbg !2952
  %11 = load i32, i32* %width.addr, align 4, !dbg !2953
  %sub = sub nsw i32 0, %11, !dbg !2954
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2955
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 144, !dbg !2956
  %13 = load i32, i32* %lowres, align 8, !dbg !2956
  %shr = ashr i32 %sub, %13, !dbg !2957
  %sub1 = sub nsw i32 0, %shr, !dbg !2958
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2959
  %width2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 20, !dbg !2960
  store i32 %sub1, i32* %width2, align 4, !dbg !2961
  %15 = load i32, i32* %height.addr, align 4, !dbg !2962
  %sub3 = sub nsw i32 0, %15, !dbg !2963
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2964
  %lowres4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 144, !dbg !2965
  %17 = load i32, i32* %lowres4, align 8, !dbg !2965
  %shr5 = ashr i32 %sub3, %17, !dbg !2966
  %sub6 = sub nsw i32 0, %shr5, !dbg !2967
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !2968
  %height7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 21, !dbg !2969
  store i32 %sub6, i32* %height7, align 8, !dbg !2970
  %19 = load i32, i32* %ret, align 4, !dbg !2971
  ret i32 %19, !dbg !2972
}

declare i32 @av_image_check_size2(i32, i32, i64, i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @ff_set_sar(%struct.AVCodecContext* %avctx, i64 %sar.coerce) #0 !dbg !2973 {
entry:
  %retval = alloca i32, align 4
  %sar = alloca %struct.AVRational, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %sar to i64*
  store i64 %sar.coerce, i64* %0, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2976, metadata !1175), !dbg !2977
  call void @llvm.dbg.declare(metadata %struct.AVRational* %sar, metadata !2978, metadata !1175), !dbg !2979
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2980, metadata !1175), !dbg !2981
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2982
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 20, !dbg !2983
  %2 = load i32, i32* %width, align 4, !dbg !2983
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2984
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 21, !dbg !2985
  %4 = load i32, i32* %height, align 8, !dbg !2985
  %5 = bitcast %struct.AVRational* %sar to i64*, !dbg !2986
  %6 = load i64, i64* %5, align 4, !dbg !2986
  %call = call i32 @av_image_check_sar(i32 %2, i32 %4, i64 %6), !dbg !2986
  store i32 %call, i32* %ret, align 4, !dbg !2981
  %7 = load i32, i32* %ret, align 4, !dbg !2987
  %cmp = icmp slt i32 %7, 0, !dbg !2989
  br i1 %cmp, label %if.then, label %if.else, !dbg !2990

if.then:                                          ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2991
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !2991
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 0, !dbg !2993
  %10 = load i32, i32* %num, align 4, !dbg !2993
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 1, !dbg !2994
  %11 = load i32, i32* %den, align 4, !dbg !2994
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 %10, i32 %11), !dbg !2995
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2996
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 44, !dbg !2997
  %num1 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !2998
  store i32 0, i32* %num1, align 4, !dbg !2998
  %den2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !2998
  store i32 1, i32* %den2, align 4, !dbg !2998
  %13 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !2999
  %14 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !2999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false), !dbg !2999
  %15 = load i32, i32* %ret, align 4, !dbg !3000
  store i32 %15, i32* %retval, align 4, !dbg !3001
  br label %return, !dbg !3001

if.else:                                          ; preds = %entry
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3002
  %sample_aspect_ratio3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 44, !dbg !3004
  %17 = bitcast %struct.AVRational* %sample_aspect_ratio3 to i8*, !dbg !3005
  %18 = bitcast %struct.AVRational* %sar to i8*, !dbg !3005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false), !dbg !3005
  br label %if.end

if.end:                                           ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !3006
  br label %return, !dbg !3006

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !3007
  ret i32 %19, !dbg !3007
}

declare i32 @av_image_check_sar(i32, i32, i64) #2

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame* %frame, i32 %matrix_encoding) #0 !dbg !3008 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.AVFrame*, align 8
  %matrix_encoding.addr = alloca i32, align 4
  %side_data = alloca %struct.AVFrameSideData*, align 8
  %data = alloca i32*, align 8
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3011, metadata !1175), !dbg !3012
  store i32 %matrix_encoding, i32* %matrix_encoding.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %matrix_encoding.addr, metadata !3013, metadata !1175), !dbg !3014
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %side_data, metadata !3015, metadata !1175), !dbg !3016
  call void @llvm.dbg.declare(metadata i32** %data, metadata !3017, metadata !1175), !dbg !3018
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3019
  %call = call %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame* %0, i32 3), !dbg !3020
  store %struct.AVFrameSideData* %call, %struct.AVFrameSideData** %side_data, align 8, !dbg !3021
  %1 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !3022
  %tobool = icmp ne %struct.AVFrameSideData* %1, null, !dbg !3022
  br i1 %tobool, label %if.end, label %if.then, !dbg !3024

if.then:                                          ; preds = %entry
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3025
  %call1 = call %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame* %2, i32 3, i32 4), !dbg !3026
  store %struct.AVFrameSideData* %call1, %struct.AVFrameSideData** %side_data, align 8, !dbg !3027
  br label %if.end, !dbg !3028

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !3029
  %tobool2 = icmp ne %struct.AVFrameSideData* %3, null, !dbg !3029
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !3031

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !3032
  br label %return, !dbg !3032

if.end4:                                          ; preds = %if.end
  %4 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !3033
  %data5 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %4, i32 0, i32 1, !dbg !3034
  %5 = load i8*, i8** %data5, align 8, !dbg !3034
  %6 = bitcast i8* %5 to i32*, !dbg !3035
  store i32* %6, i32** %data, align 8, !dbg !3036
  %7 = load i32, i32* %matrix_encoding.addr, align 4, !dbg !3037
  %8 = load i32*, i32** %data, align 8, !dbg !3038
  store i32 %7, i32* %8, align 4, !dbg !3039
  store i32 0, i32* %retval, align 4, !dbg !3040
  br label %return, !dbg !3040

return:                                           ; preds = %if.end4, %if.then3
  %9 = load i32, i32* %retval, align 4, !dbg !3041
  ret i32 %9, !dbg !3041
}

declare %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame*, i32) #2

declare %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame*, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @avcodec_align_dimensions2(%struct.AVCodecContext* %s, i32* %width, i32* %height, i32* %linesize_align) #0 !dbg !3042 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %width.addr = alloca i32*, align 8
  %height.addr = alloca i32*, align 8
  %linesize_align.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %w_align = alloca i32, align 4
  %h_align = alloca i32, align 4
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3045, metadata !1175), !dbg !3046
  store i32* %width, i32** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %width.addr, metadata !3047, metadata !1175), !dbg !3048
  store i32* %height, i32** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %height.addr, metadata !3049, metadata !1175), !dbg !3050
  store i32* %linesize_align, i32** %linesize_align.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %linesize_align.addr, metadata !3051, metadata !1175), !dbg !3052
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3053, metadata !1175), !dbg !3054
  call void @llvm.dbg.declare(metadata i32* %w_align, metadata !3055, metadata !1175), !dbg !3056
  store i32 1, i32* %w_align, align 4, !dbg !3056
  call void @llvm.dbg.declare(metadata i32* %h_align, metadata !3057, metadata !1175), !dbg !3058
  store i32 1, i32* %h_align, align 4, !dbg !3058
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !3059, metadata !1175), !dbg !3085
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3086
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 25, !dbg !3087
  %1 = load i32, i32* %pix_fmt, align 8, !dbg !3087
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !3088
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3085
  %2 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3089
  %tobool = icmp ne %struct.AVPixFmtDescriptor* %2, null, !dbg !3089
  br i1 %tobool, label %if.then, label %if.end, !dbg !3091

if.then:                                          ; preds = %entry
  %3 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3092
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i32 0, i32 2, !dbg !3094
  %4 = load i8, i8* %log2_chroma_w, align 1, !dbg !3094
  %conv = zext i8 %4 to i32, !dbg !3092
  %shl = shl i32 1, %conv, !dbg !3095
  store i32 %shl, i32* %w_align, align 4, !dbg !3096
  %5 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3097
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i32 0, i32 3, !dbg !3098
  %6 = load i8, i8* %log2_chroma_h, align 2, !dbg !3098
  %conv1 = zext i8 %6 to i32, !dbg !3097
  %shl2 = shl i32 1, %conv1, !dbg !3099
  store i32 %shl2, i32* %h_align, align 4, !dbg !3100
  br label %if.end, !dbg !3101

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3102
  %pix_fmt3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 25, !dbg !3103
  %8 = load i32, i32* %pix_fmt3, align 8, !dbg !3103
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 110, label %sw.bb
    i32 15, label %sw.bb
    i32 4, label %sw.bb
    i32 31, label %sw.bb
    i32 5, label %sw.bb
    i32 73, label %sw.bb
    i32 113, label %sw.bb
    i32 8, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
    i32 32, label %sw.bb
    i32 14, label %sw.bb
    i32 33, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 62, label %sw.bb
    i32 61, label %sw.bb
    i32 64, label %sw.bb
    i32 63, label %sw.bb
    i32 125, label %sw.bb
    i32 124, label %sw.bb
    i32 127, label %sw.bb
    i32 126, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 83, label %sw.bb
    i32 82, label %sw.bb
    i32 89, label %sw.bb
    i32 88, label %sw.bb
    i32 95, label %sw.bb
    i32 94, label %sw.bb
    i32 72, label %sw.bb
    i32 71, label %sw.bb
    i32 66, label %sw.bb
    i32 65, label %sw.bb
    i32 129, label %sw.bb
    i32 128, label %sw.bb
    i32 131, label %sw.bb
    i32 130, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 85, label %sw.bb
    i32 84, label %sw.bb
    i32 91, label %sw.bb
    i32 90, label %sw.bb
    i32 188, label %sw.bb
    i32 187, label %sw.bb
    i32 97, label %sw.bb
    i32 96, label %sw.bb
    i32 154, label %sw.bb
    i32 155, label %sw.bb
    i32 156, label %sw.bb
    i32 157, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 70, label %sw.bb
    i32 69, label %sw.bb
    i32 133, label %sw.bb
    i32 132, label %sw.bb
    i32 135, label %sw.bb
    i32 134, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 87, label %sw.bb
    i32 86, label %sw.bb
    i32 93, label %sw.bb
    i32 92, label %sw.bb
    i32 190, label %sw.bb
    i32 189, label %sw.bb
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 75, label %sw.bb
    i32 74, label %sw.bb
    i32 77, label %sw.bb
    i32 76, label %sw.bb
    i32 137, label %sw.bb
    i32 136, label %sw.bb
    i32 139, label %sw.bb
    i32 138, label %sw.bb
    i32 79, label %sw.bb
    i32 78, label %sw.bb
    i32 164, label %sw.bb
    i32 163, label %sw.bb
    i32 115, label %sw.bb
    i32 114, label %sw.bb
    i32 7, label %sw.bb4
    i32 140, label %sw.bb4
    i32 16, label %sw.bb4
    i32 6, label %sw.bb5
    i32 39, label %sw.bb9
    i32 11, label %sw.bb20
    i32 17, label %sw.bb20
    i32 20, label %sw.bb20
    i32 3, label %sw.bb38
    i32 2, label %sw.bb48
  ], !dbg !3104

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 16, i32* %w_align, align 4, !dbg !3105
  store i32 32, i32* %h_align, align 4, !dbg !3107
  br label %sw.epilog, !dbg !3108

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end
  store i32 32, i32* %w_align, align 4, !dbg !3109
  store i32 32, i32* %h_align, align 4, !dbg !3110
  br label %sw.epilog, !dbg !3111

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3112
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 4, !dbg !3114
  %10 = load i32, i32* %codec_id, align 8, !dbg !3114
  %cmp = icmp eq i32 %10, 22, !dbg !3115
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !3116

if.then7:                                         ; preds = %sw.bb5
  store i32 64, i32* %w_align, align 4, !dbg !3117
  store i32 64, i32* %h_align, align 4, !dbg !3119
  br label %if.end8, !dbg !3120

if.end8:                                          ; preds = %if.then7, %sw.bb5
  br label %sw.epilog, !dbg !3121

sw.bb9:                                           ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3122
  %codec_id10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 4, !dbg !3124
  %12 = load i32, i32* %codec_id10, align 8, !dbg !3124
  %cmp11 = icmp eq i32 %12, 42, !dbg !3125
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !3126

if.then13:                                        ; preds = %sw.bb9
  store i32 4, i32* %w_align, align 4, !dbg !3127
  store i32 4, i32* %h_align, align 4, !dbg !3129
  br label %if.end14, !dbg !3130

if.end14:                                         ; preds = %if.then13, %sw.bb9
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3131
  %codec_id15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 4, !dbg !3133
  %14 = load i32, i32* %codec_id15, align 8, !dbg !3133
  %cmp16 = icmp eq i32 %14, 39, !dbg !3134
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !3135

if.then18:                                        ; preds = %if.end14
  store i32 8, i32* %w_align, align 4, !dbg !3136
  store i32 8, i32* %h_align, align 4, !dbg !3138
  br label %if.end19, !dbg !3139

if.end19:                                         ; preds = %if.then18, %if.end14
  br label %sw.epilog, !dbg !3140

sw.bb20:                                          ; preds = %if.end, %if.end, %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3141
  %codec_id21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 4, !dbg !3143
  %16 = load i32, i32* %codec_id21, align 8, !dbg !3143
  %cmp22 = icmp eq i32 %16, 49, !dbg !3144
  br i1 %cmp22, label %if.then27, label %lor.lhs.false, !dbg !3145

lor.lhs.false:                                    ; preds = %sw.bb20
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3146
  %codec_id24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 4, !dbg !3147
  %18 = load i32, i32* %codec_id24, align 8, !dbg !3147
  %cmp25 = icmp eq i32 %18, 43, !dbg !3148
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !3149

if.then27:                                        ; preds = %lor.lhs.false, %sw.bb20
  store i32 4, i32* %w_align, align 4, !dbg !3151
  store i32 4, i32* %h_align, align 4, !dbg !3153
  br label %if.end28, !dbg !3154

if.end28:                                         ; preds = %if.then27, %lor.lhs.false
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3155
  %codec_id29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 4, !dbg !3157
  %20 = load i32, i32* %codec_id29, align 8, !dbg !3157
  %cmp30 = icmp eq i32 %20, 148, !dbg !3158
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !3159

lor.lhs.false32:                                  ; preds = %if.end28
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3160
  %codec_id33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 4, !dbg !3161
  %22 = load i32, i32* %codec_id33, align 8, !dbg !3161
  %cmp34 = icmp eq i32 %22, 39, !dbg !3162
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3163

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  store i32 8, i32* %w_align, align 4, !dbg !3164
  store i32 8, i32* %h_align, align 4, !dbg !3166
  br label %if.end37, !dbg !3167

if.end37:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %sw.epilog, !dbg !3168

sw.bb38:                                          ; preds = %if.end
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3169
  %codec_id39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 4, !dbg !3171
  %24 = load i32, i32* %codec_id39, align 8, !dbg !3171
  %cmp40 = icmp eq i32 %24, 53, !dbg !3172
  br i1 %cmp40, label %if.then46, label %lor.lhs.false42, !dbg !3173

lor.lhs.false42:                                  ; preds = %sw.bb38
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3174
  %codec_id43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %25, i32 0, i32 4, !dbg !3175
  %26 = load i32, i32* %codec_id43, align 8, !dbg !3175
  %cmp44 = icmp eq i32 %26, 54, !dbg !3176
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !3177

if.then46:                                        ; preds = %lor.lhs.false42, %sw.bb38
  store i32 4, i32* %w_align, align 4, !dbg !3178
  store i32 4, i32* %h_align, align 4, !dbg !3180
  br label %if.end47, !dbg !3181

if.end47:                                         ; preds = %if.then46, %lor.lhs.false42
  br label %sw.epilog, !dbg !3182

sw.bb48:                                          ; preds = %if.end
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3183
  %codec_id49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 4, !dbg !3185
  %28 = load i32, i32* %codec_id49, align 8, !dbg !3185
  %cmp50 = icmp eq i32 %28, 43, !dbg !3186
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !3187

if.then52:                                        ; preds = %sw.bb48
  store i32 4, i32* %w_align, align 4, !dbg !3188
  store i32 4, i32* %h_align, align 4, !dbg !3190
  br label %if.end53, !dbg !3191

if.end53:                                         ; preds = %if.then52, %sw.bb48
  br label %sw.epilog, !dbg !3192

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !3193

sw.epilog:                                        ; preds = %sw.default, %if.end53, %if.end47, %if.end37, %if.end19, %if.end8, %sw.bb4, %sw.bb
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3194
  %codec_id54 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 4, !dbg !3196
  %30 = load i32, i32* %codec_id54, align 8, !dbg !3196
  %cmp55 = icmp eq i32 %30, 136, !dbg !3197
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !3198

if.then57:                                        ; preds = %sw.epilog
  %31 = load i32, i32* %w_align, align 4, !dbg !3199
  %cmp58 = icmp sgt i32 %31, 8, !dbg !3201
  br i1 %cmp58, label %cond.true, label %cond.false, !dbg !3202

cond.true:                                        ; preds = %if.then57
  %32 = load i32, i32* %w_align, align 4, !dbg !3203
  br label %cond.end, !dbg !3205

cond.false:                                       ; preds = %if.then57
  br label %cond.end, !dbg !3206

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ 8, %cond.false ], !dbg !3208
  store i32 %cond, i32* %w_align, align 4, !dbg !3210
  br label %if.end60, !dbg !3211

if.end60:                                         ; preds = %cond.end, %sw.epilog
  %33 = load i32*, i32** %width.addr, align 8, !dbg !3212
  %34 = load i32, i32* %33, align 4, !dbg !3213
  %35 = load i32, i32* %w_align, align 4, !dbg !3214
  %add = add nsw i32 %34, %35, !dbg !3215
  %sub = sub nsw i32 %add, 1, !dbg !3216
  %36 = load i32, i32* %w_align, align 4, !dbg !3217
  %sub61 = sub nsw i32 %36, 1, !dbg !3218
  %neg = xor i32 %sub61, -1, !dbg !3219
  %and = and i32 %sub, %neg, !dbg !3220
  %37 = load i32*, i32** %width.addr, align 8, !dbg !3221
  store i32 %and, i32* %37, align 4, !dbg !3222
  %38 = load i32*, i32** %height.addr, align 8, !dbg !3223
  %39 = load i32, i32* %38, align 4, !dbg !3224
  %40 = load i32, i32* %h_align, align 4, !dbg !3225
  %add62 = add nsw i32 %39, %40, !dbg !3226
  %sub63 = sub nsw i32 %add62, 1, !dbg !3227
  %41 = load i32, i32* %h_align, align 4, !dbg !3228
  %sub64 = sub nsw i32 %41, 1, !dbg !3229
  %neg65 = xor i32 %sub64, -1, !dbg !3230
  %and66 = and i32 %sub63, %neg65, !dbg !3231
  %42 = load i32*, i32** %height.addr, align 8, !dbg !3232
  store i32 %and66, i32* %42, align 4, !dbg !3233
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3234
  %codec_id67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 4, !dbg !3236
  %44 = load i32, i32* %codec_id67, align 8, !dbg !3236
  %cmp68 = icmp eq i32 %44, 27, !dbg !3237
  br i1 %cmp68, label %if.then88, label %lor.lhs.false70, !dbg !3238

lor.lhs.false70:                                  ; preds = %if.end60
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3239
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 144, !dbg !3241
  %46 = load i32, i32* %lowres, align 8, !dbg !3241
  %tobool71 = icmp ne i32 %46, 0, !dbg !3239
  br i1 %tobool71, label %if.then88, label %lor.lhs.false72, !dbg !3242

lor.lhs.false72:                                  ; preds = %lor.lhs.false70
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3243
  %codec_id73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 4, !dbg !3244
  %48 = load i32, i32* %codec_id73, align 8, !dbg !3244
  %cmp74 = icmp eq i32 %48, 90, !dbg !3245
  br i1 %cmp74, label %if.then88, label %lor.lhs.false76, !dbg !3246

lor.lhs.false76:                                  ; preds = %lor.lhs.false72
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3247
  %codec_id77 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 4, !dbg !3248
  %50 = load i32, i32* %codec_id77, align 8, !dbg !3248
  %cmp78 = icmp eq i32 %50, 91, !dbg !3249
  br i1 %cmp78, label %if.then88, label %lor.lhs.false80, !dbg !3250

lor.lhs.false80:                                  ; preds = %lor.lhs.false76
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3251
  %codec_id81 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 4, !dbg !3252
  %52 = load i32, i32* %codec_id81, align 8, !dbg !3252
  %cmp82 = icmp eq i32 %52, 92, !dbg !3253
  br i1 %cmp82, label %if.then88, label %lor.lhs.false84, !dbg !3254

lor.lhs.false84:                                  ; preds = %lor.lhs.false80
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3255
  %codec_id85 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 4, !dbg !3256
  %54 = load i32, i32* %codec_id85, align 8, !dbg !3256
  %cmp86 = icmp eq i32 %54, 106, !dbg !3257
  br i1 %cmp86, label %if.then88, label %if.end96, !dbg !3258

if.then88:                                        ; preds = %lor.lhs.false84, %lor.lhs.false80, %lor.lhs.false76, %lor.lhs.false72, %lor.lhs.false70, %if.end60
  %55 = load i32*, i32** %height.addr, align 8, !dbg !3260
  %56 = load i32, i32* %55, align 4, !dbg !3262
  %add89 = add nsw i32 %56, 2, !dbg !3262
  store i32 %add89, i32* %55, align 4, !dbg !3262
  %57 = load i32*, i32** %width.addr, align 8, !dbg !3263
  %58 = load i32, i32* %57, align 4, !dbg !3264
  %cmp90 = icmp sgt i32 %58, 32, !dbg !3265
  br i1 %cmp90, label %cond.true92, label %cond.false93, !dbg !3266

cond.true92:                                      ; preds = %if.then88
  %59 = load i32*, i32** %width.addr, align 8, !dbg !3267
  %60 = load i32, i32* %59, align 4, !dbg !3269
  br label %cond.end94, !dbg !3270

cond.false93:                                     ; preds = %if.then88
  br label %cond.end94, !dbg !3271

cond.end94:                                       ; preds = %cond.false93, %cond.true92
  %cond95 = phi i32 [ %60, %cond.true92 ], [ 32, %cond.false93 ], !dbg !3273
  %61 = load i32*, i32** %width.addr, align 8, !dbg !3275
  store i32 %cond95, i32* %61, align 4, !dbg !3276
  br label %if.end96, !dbg !3277

if.end96:                                         ; preds = %cond.end94, %lor.lhs.false84
  store i32 0, i32* %i, align 4, !dbg !3278
  br label %for.cond, !dbg !3280

for.cond:                                         ; preds = %for.inc, %if.end96
  %62 = load i32, i32* %i, align 4, !dbg !3281
  %cmp97 = icmp slt i32 %62, 4, !dbg !3284
  br i1 %cmp97, label %for.body, label %for.end, !dbg !3285

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4, !dbg !3286
  %idxprom = sext i32 %63 to i64, !dbg !3287
  %64 = load i32*, i32** %linesize_align.addr, align 8, !dbg !3287
  %arrayidx = getelementptr inbounds i32, i32* %64, i64 %idxprom, !dbg !3287
  store i32 64, i32* %arrayidx, align 4, !dbg !3288
  br label %for.inc, !dbg !3287

for.inc:                                          ; preds = %for.body
  %65 = load i32, i32* %i, align 4, !dbg !3289
  %inc = add nsw i32 %65, 1, !dbg !3289
  store i32 %inc, i32* %i, align 4, !dbg !3289
  br label %for.cond, !dbg !3291, !llvm.loop !3292

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3294
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

; Function Attrs: nounwind uwtable
define void @avcodec_align_dimensions(%struct.AVCodecContext* %s, i32* %width, i32* %height) #0 !dbg !3295 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %width.addr = alloca i32*, align 8
  %height.addr = alloca i32*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %chroma_shift = alloca i32, align 4
  %linesize_align = alloca [8 x i32], align 16
  %align = alloca i32, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3298, metadata !1175), !dbg !3299
  store i32* %width, i32** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %width.addr, metadata !3300, metadata !1175), !dbg !3301
  store i32* %height, i32** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %height.addr, metadata !3302, metadata !1175), !dbg !3303
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !3304, metadata !1175), !dbg !3305
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3306
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 25, !dbg !3307
  %1 = load i32, i32* %pix_fmt, align 8, !dbg !3307
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !3308
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3305
  call void @llvm.dbg.declare(metadata i32* %chroma_shift, metadata !3309, metadata !1175), !dbg !3310
  %2 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3311
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %2, i32 0, i32 2, !dbg !3312
  %3 = load i8, i8* %log2_chroma_w, align 1, !dbg !3312
  %conv = zext i8 %3 to i32, !dbg !3311
  store i32 %conv, i32* %chroma_shift, align 4, !dbg !3310
  call void @llvm.dbg.declare(metadata [8 x i32]* %linesize_align, metadata !3313, metadata !1175), !dbg !3314
  call void @llvm.dbg.declare(metadata i32* %align, metadata !3315, metadata !1175), !dbg !3316
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3317
  %5 = load i32*, i32** %width.addr, align 8, !dbg !3318
  %6 = load i32*, i32** %height.addr, align 8, !dbg !3319
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i32 0, i32 0, !dbg !3320
  call void @avcodec_align_dimensions2(%struct.AVCodecContext* %4, i32* %5, i32* %6, i32* %arraydecay), !dbg !3321
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 0, !dbg !3322
  %7 = load i32, i32* %arrayidx, align 16, !dbg !3322
  %arrayidx1 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 3, !dbg !3323
  %8 = load i32, i32* %arrayidx1, align 4, !dbg !3323
  %cmp = icmp sgt i32 %7, %8, !dbg !3324
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3325

cond.true:                                        ; preds = %entry
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 0, !dbg !3326
  %9 = load i32, i32* %arrayidx3, align 16, !dbg !3326
  br label %cond.end, !dbg !3328

cond.false:                                       ; preds = %entry
  %arrayidx4 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 3, !dbg !3329
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !3329
  br label %cond.end, !dbg !3331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !3332
  store i32 %cond, i32* %align, align 4, !dbg !3334
  %11 = load i32, i32* %chroma_shift, align 4, !dbg !3335
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 1, !dbg !3336
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !3337
  %shl = shl i32 %12, %11, !dbg !3337
  store i32 %shl, i32* %arrayidx5, align 4, !dbg !3337
  %13 = load i32, i32* %chroma_shift, align 4, !dbg !3338
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 2, !dbg !3339
  %14 = load i32, i32* %arrayidx6, align 8, !dbg !3340
  %shl7 = shl i32 %14, %13, !dbg !3340
  store i32 %shl7, i32* %arrayidx6, align 8, !dbg !3340
  %15 = load i32, i32* %align, align 4, !dbg !3341
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 1, !dbg !3342
  %16 = load i32, i32* %arrayidx8, align 4, !dbg !3342
  %cmp9 = icmp sgt i32 %15, %16, !dbg !3343
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !3344

cond.true11:                                      ; preds = %cond.end
  %17 = load i32, i32* %align, align 4, !dbg !3345
  br label %cond.end14, !dbg !3346

cond.false12:                                     ; preds = %cond.end
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 1, !dbg !3347
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !3347
  br label %cond.end14, !dbg !3348

cond.end14:                                       ; preds = %cond.false12, %cond.true11
  %cond15 = phi i32 [ %17, %cond.true11 ], [ %18, %cond.false12 ], !dbg !3349
  %arrayidx16 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 2, !dbg !3350
  %19 = load i32, i32* %arrayidx16, align 8, !dbg !3350
  %cmp17 = icmp sgt i32 %cond15, %19, !dbg !3351
  br i1 %cmp17, label %cond.true19, label %cond.false28, !dbg !3352

cond.true19:                                      ; preds = %cond.end14
  %20 = load i32, i32* %align, align 4, !dbg !3353
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 1, !dbg !3355
  %21 = load i32, i32* %arrayidx20, align 4, !dbg !3355
  %cmp21 = icmp sgt i32 %20, %21, !dbg !3356
  br i1 %cmp21, label %cond.true23, label %cond.false24, !dbg !3357

cond.true23:                                      ; preds = %cond.true19
  %22 = load i32, i32* %align, align 4, !dbg !3358
  br label %cond.end26, !dbg !3360

cond.false24:                                     ; preds = %cond.true19
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 1, !dbg !3361
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !3361
  br label %cond.end26, !dbg !3363

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i32 [ %22, %cond.true23 ], [ %23, %cond.false24 ], !dbg !3364
  br label %cond.end30, !dbg !3366

cond.false28:                                     ; preds = %cond.end14
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize_align, i64 0, i64 2, !dbg !3367
  %24 = load i32, i32* %arrayidx29, align 8, !dbg !3367
  br label %cond.end30, !dbg !3369

cond.end30:                                       ; preds = %cond.false28, %cond.end26
  %cond31 = phi i32 [ %cond27, %cond.end26 ], [ %24, %cond.false28 ], !dbg !3370
  store i32 %cond31, i32* %align, align 4, !dbg !3372
  %25 = load i32*, i32** %width.addr, align 8, !dbg !3373
  %26 = load i32, i32* %25, align 4, !dbg !3374
  %27 = load i32, i32* %align, align 4, !dbg !3375
  %add = add nsw i32 %26, %27, !dbg !3376
  %sub = sub nsw i32 %add, 1, !dbg !3377
  %28 = load i32, i32* %align, align 4, !dbg !3378
  %sub32 = sub nsw i32 %28, 1, !dbg !3379
  %neg = xor i32 %sub32, -1, !dbg !3380
  %and = and i32 %sub, %neg, !dbg !3381
  %29 = load i32*, i32** %width.addr, align 8, !dbg !3382
  store i32 %and, i32* %29, align 4, !dbg !3383
  ret void, !dbg !3384
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_enum_to_chroma_pos(i32* %xpos, i32* %ypos, i32 %pos) #0 !dbg !3385 {
entry:
  %retval = alloca i32, align 4
  %xpos.addr = alloca i32*, align 8
  %ypos.addr = alloca i32*, align 8
  %pos.addr = alloca i32, align 4
  store i32* %xpos, i32** %xpos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xpos.addr, metadata !3388, metadata !1175), !dbg !3389
  store i32* %ypos, i32** %ypos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ypos.addr, metadata !3390, metadata !1175), !dbg !3391
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !3392, metadata !1175), !dbg !3393
  %0 = load i32, i32* %pos.addr, align 4, !dbg !3394
  %cmp = icmp ule i32 %0, 0, !dbg !3396
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3397

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %pos.addr, align 4, !dbg !3398
  %cmp1 = icmp uge i32 %1, 7, !dbg !3400
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3401

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !3402
  br label %return, !dbg !3402

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %pos.addr, align 4, !dbg !3403
  %dec = add i32 %2, -1, !dbg !3403
  store i32 %dec, i32* %pos.addr, align 4, !dbg !3403
  %3 = load i32, i32* %pos.addr, align 4, !dbg !3404
  %and = and i32 %3, 1, !dbg !3405
  %mul = mul i32 %and, 128, !dbg !3406
  %4 = load i32*, i32** %xpos.addr, align 8, !dbg !3407
  store i32 %mul, i32* %4, align 4, !dbg !3408
  %5 = load i32, i32* %pos.addr, align 4, !dbg !3409
  %shr = lshr i32 %5, 1, !dbg !3410
  %6 = load i32, i32* %pos.addr, align 4, !dbg !3411
  %cmp2 = icmp ult i32 %6, 4, !dbg !3412
  %conv = zext i1 %cmp2 to i32, !dbg !3412
  %xor = xor i32 %shr, %conv, !dbg !3413
  %mul3 = mul i32 %xor, 128, !dbg !3414
  %7 = load i32*, i32** %ypos.addr, align 8, !dbg !3415
  store i32 %mul3, i32* %7, align 4, !dbg !3416
  store i32 0, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3418
  ret i32 %8, !dbg !3418
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_chroma_pos_to_enum(i32 %xpos, i32 %ypos) #0 !dbg !3419 {
entry:
  %retval = alloca i32, align 4
  %xpos.addr = alloca i32, align 4
  %ypos.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %xout = alloca i32, align 4
  %yout = alloca i32, align 4
  store i32 %xpos, i32* %xpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xpos.addr, metadata !3422, metadata !1175), !dbg !3423
  store i32 %ypos, i32* %ypos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ypos.addr, metadata !3424, metadata !1175), !dbg !3425
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3426, metadata !1175), !dbg !3427
  call void @llvm.dbg.declare(metadata i32* %xout, metadata !3428, metadata !1175), !dbg !3429
  call void @llvm.dbg.declare(metadata i32* %yout, metadata !3430, metadata !1175), !dbg !3431
  store i32 1, i32* %pos, align 4, !dbg !3432
  br label %for.cond, !dbg !3434

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %pos, align 4, !dbg !3435
  %cmp = icmp slt i32 %0, 7, !dbg !3438
  br i1 %cmp, label %for.body, label %for.end, !dbg !3439

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %pos, align 4, !dbg !3440
  %call = call i32 @avcodec_enum_to_chroma_pos(i32* %xout, i32* %yout, i32 %1), !dbg !3443
  %cmp1 = icmp eq i32 %call, 0, !dbg !3444
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !3445

land.lhs.true:                                    ; preds = %for.body
  %2 = load i32, i32* %xout, align 4, !dbg !3446
  %3 = load i32, i32* %xpos.addr, align 4, !dbg !3448
  %cmp2 = icmp eq i32 %2, %3, !dbg !3449
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !3450

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %yout, align 4, !dbg !3451
  %5 = load i32, i32* %ypos.addr, align 4, !dbg !3453
  %cmp4 = icmp eq i32 %4, %5, !dbg !3454
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3455

if.then:                                          ; preds = %land.lhs.true3
  %6 = load i32, i32* %pos, align 4, !dbg !3456
  store i32 %6, i32* %retval, align 4, !dbg !3457
  br label %return, !dbg !3457

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3458

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %pos, align 4, !dbg !3459
  %inc = add nsw i32 %7, 1, !dbg !3459
  store i32 %inc, i32* %pos, align 4, !dbg !3459
  br label %for.cond, !dbg !3461, !llvm.loop !3462

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3464
  br label %return, !dbg !3464

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3465
  ret i32 %8, !dbg !3465
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_fill_audio_frame(%struct.AVFrame* %frame, i32 %nb_channels, i32 %sample_fmt, i8* %buf, i32 %buf_size, i32 %align) #0 !dbg !3466 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.AVFrame*, align 8
  %nb_channels.addr = alloca i32, align 4
  %sample_fmt.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %align.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %planar = alloca i32, align 4
  %needed_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3469, metadata !1175), !dbg !3470
  store i32 %nb_channels, i32* %nb_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_channels.addr, metadata !3471, metadata !1175), !dbg !3472
  store i32 %sample_fmt, i32* %sample_fmt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample_fmt.addr, metadata !3473, metadata !1175), !dbg !3474
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !3475, metadata !1175), !dbg !3476
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !3477, metadata !1175), !dbg !3478
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !3479, metadata !1175), !dbg !3480
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3481, metadata !1175), !dbg !3482
  call void @llvm.dbg.declare(metadata i32* %planar, metadata !3483, metadata !1175), !dbg !3484
  call void @llvm.dbg.declare(metadata i32* %needed_size, metadata !3485, metadata !1175), !dbg !3486
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3487, metadata !1175), !dbg !3488
  store i32 0, i32* %ret, align 4, !dbg !3488
  %0 = load i32, i32* %nb_channels.addr, align 4, !dbg !3489
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3490
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1, i32 0, i32 5, !dbg !3491
  %2 = load i32, i32* %nb_samples, align 8, !dbg !3491
  %3 = load i32, i32* %sample_fmt.addr, align 4, !dbg !3492
  %4 = load i32, i32* %align.addr, align 4, !dbg !3493
  %call = call i32 @av_samples_get_buffer_size(i32* null, i32 %0, i32 %2, i32 %3, i32 %4), !dbg !3494
  store i32 %call, i32* %needed_size, align 4, !dbg !3495
  %5 = load i32, i32* %buf_size.addr, align 4, !dbg !3496
  %6 = load i32, i32* %needed_size, align 4, !dbg !3498
  %cmp = icmp slt i32 %5, %6, !dbg !3499
  br i1 %cmp, label %if.then, label %if.end, !dbg !3500

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !3501
  br label %return, !dbg !3501

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %sample_fmt.addr, align 4, !dbg !3502
  %call1 = call i32 @av_sample_fmt_is_planar(i32 %7), !dbg !3503
  store i32 %call1, i32* %planar, align 4, !dbg !3504
  %8 = load i32, i32* %planar, align 4, !dbg !3505
  %tobool = icmp ne i32 %8, 0, !dbg !3505
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3507

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32, i32* %nb_channels.addr, align 4, !dbg !3508
  %cmp2 = icmp sgt i32 %9, 8, !dbg !3510
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3511

if.then3:                                         ; preds = %land.lhs.true
  %10 = load i32, i32* %nb_channels.addr, align 4, !dbg !3512
  %conv = sext i32 %10 to i64, !dbg !3512
  %call4 = call i8* @av_mallocz_array(i64 %conv, i64 8), !dbg !3515
  %11 = bitcast i8* %call4 to i8**, !dbg !3515
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3516
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 2, !dbg !3517
  store i8** %11, i8*** %extended_data, align 8, !dbg !3518
  %tobool5 = icmp ne i8** %11, null, !dbg !3518
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3519

if.then6:                                         ; preds = %if.then3
  store i32 -12, i32* %retval, align 4, !dbg !3520
  br label %return, !dbg !3520

if.end7:                                          ; preds = %if.then3
  br label %if.end9, !dbg !3521

if.else:                                          ; preds = %land.lhs.true, %if.end
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3522
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 0, !dbg !3524
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !3522
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3525
  %extended_data8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 2, !dbg !3526
  store i8** %arraydecay, i8*** %extended_data8, align 8, !dbg !3527
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end7
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3528
  %extended_data10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 2, !dbg !3530
  %16 = load i8**, i8*** %extended_data10, align 8, !dbg !3530
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3531
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 1, !dbg !3532
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !3531
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !3533
  %19 = ptrtoint i8* %18 to i64, !dbg !3534
  %20 = inttoptr i64 %19 to i8*, !dbg !3535
  %21 = load i32, i32* %nb_channels.addr, align 4, !dbg !3536
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3537
  %nb_samples11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 5, !dbg !3538
  %23 = load i32, i32* %nb_samples11, align 8, !dbg !3538
  %24 = load i32, i32* %sample_fmt.addr, align 4, !dbg !3539
  %25 = load i32, i32* %align.addr, align 4, !dbg !3540
  %call12 = call i32 @av_samples_fill_arrays(i8** %16, i32* %arrayidx, i8* %20, i32 %21, i32 %23, i32 %24, i32 %25), !dbg !3541
  store i32 %call12, i32* %ret, align 4, !dbg !3542
  %cmp13 = icmp slt i32 %call12, 0, !dbg !3543
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !3544

if.then15:                                        ; preds = %if.end9
  %26 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3545
  %extended_data16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 2, !dbg !3548
  %27 = load i8**, i8*** %extended_data16, align 8, !dbg !3548
  %28 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3549
  %data17 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %28, i32 0, i32 0, !dbg !3550
  %arraydecay18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data17, i32 0, i32 0, !dbg !3549
  %cmp19 = icmp ne i8** %27, %arraydecay18, !dbg !3551
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !3552

if.then21:                                        ; preds = %if.then15
  %29 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3553
  %extended_data22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 2, !dbg !3554
  %30 = bitcast i8*** %extended_data22 to i8*, !dbg !3555
  call void @av_freep(i8* %30), !dbg !3556
  br label %if.end23, !dbg !3556

if.end23:                                         ; preds = %if.then21, %if.then15
  %31 = load i32, i32* %ret, align 4, !dbg !3557
  store i32 %31, i32* %retval, align 4, !dbg !3558
  br label %return, !dbg !3558

if.end24:                                         ; preds = %if.end9
  %32 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3559
  %extended_data25 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 2, !dbg !3561
  %33 = load i8**, i8*** %extended_data25, align 8, !dbg !3561
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3562
  %data26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 0, !dbg !3563
  %arraydecay27 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data26, i32 0, i32 0, !dbg !3562
  %cmp28 = icmp ne i8** %33, %arraydecay27, !dbg !3564
  br i1 %cmp28, label %if.then30, label %if.end38, !dbg !3565

if.then30:                                        ; preds = %if.end24
  store i32 0, i32* %ch, align 4, !dbg !3566
  br label %for.cond, !dbg !3569

for.cond:                                         ; preds = %for.inc, %if.then30
  %35 = load i32, i32* %ch, align 4, !dbg !3570
  %cmp31 = icmp slt i32 %35, 8, !dbg !3573
  br i1 %cmp31, label %for.body, label %for.end, !dbg !3574

for.body:                                         ; preds = %for.cond
  %36 = load i32, i32* %ch, align 4, !dbg !3575
  %idxprom = sext i32 %36 to i64, !dbg !3576
  %37 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3576
  %extended_data33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 2, !dbg !3577
  %38 = load i8**, i8*** %extended_data33, align 8, !dbg !3577
  %arrayidx34 = getelementptr inbounds i8*, i8** %38, i64 %idxprom, !dbg !3576
  %39 = load i8*, i8** %arrayidx34, align 8, !dbg !3576
  %40 = load i32, i32* %ch, align 4, !dbg !3578
  %idxprom35 = sext i32 %40 to i64, !dbg !3579
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3579
  %data36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 0, !dbg !3580
  %arrayidx37 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data36, i64 0, i64 %idxprom35, !dbg !3579
  store i8* %39, i8** %arrayidx37, align 8, !dbg !3581
  br label %for.inc, !dbg !3579

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %ch, align 4, !dbg !3582
  %inc = add nsw i32 %42, 1, !dbg !3582
  store i32 %inc, i32* %ch, align 4, !dbg !3582
  br label %for.cond, !dbg !3584, !llvm.loop !3585

for.end:                                          ; preds = %for.cond
  br label %if.end38, !dbg !3587

if.end38:                                         ; preds = %for.end, %if.end24
  %43 = load i32, i32* %ret, align 4, !dbg !3588
  store i32 %43, i32* %retval, align 4, !dbg !3589
  br label %return, !dbg !3589

return:                                           ; preds = %if.end38, %if.end23, %if.then6, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !3590
  ret i32 %44, !dbg !3590
}

declare i32 @av_samples_get_buffer_size(i32*, i32, i32, i32, i32) #2

declare i32 @av_sample_fmt_is_planar(i32) #2

declare i8* @av_mallocz_array(i64, i64) #2

declare i32 @av_samples_fill_arrays(i8**, i32*, i8*, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ff_color_frame(%struct.AVFrame* %frame, i32* %c) #0 !dbg !3591 {
entry:
  %frame.addr = alloca %struct.AVFrame*, align 8
  %c.addr = alloca i32*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %p = alloca i32, align 4
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %dst = alloca i8*, align 8
  %is_chroma = alloca i32, align 4
  %bytes = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3594, metadata !1175), !dbg !3595
  store i32* %c, i32** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %c.addr, metadata !3596, metadata !1175), !dbg !3597
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !3598, metadata !1175), !dbg !3599
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3600
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 6, !dbg !3601
  %1 = load i32, i32* %format, align 4, !dbg !3601
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !3602
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3599
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3603, metadata !1175), !dbg !3604
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3605, metadata !1175), !dbg !3606
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3607, metadata !1175), !dbg !3608
  br label %do.body, !dbg !3609, !llvm.loop !3610

do.body:                                          ; preds = %entry
  %2 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3611
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %2, i32 0, i32 4, !dbg !3615
  %3 = load i64, i64* %flags, align 8, !dbg !3615
  %and = and i64 %3, 16, !dbg !3616
  %tobool = icmp ne i64 %and, 0, !dbg !3616
  br i1 %tobool, label %if.end, label %if.then, !dbg !3617

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 417), !dbg !3618
  call void @abort() #11, !dbg !3621
  unreachable, !dbg !3623

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !3624

do.end:                                           ; preds = %if.end
  store i32 0, i32* %p, align 4, !dbg !3626
  br label %for.cond, !dbg !3628

for.cond:                                         ; preds = %for.inc47, %do.end
  %4 = load i32, i32* %p, align 4, !dbg !3629
  %5 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3632
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i32 0, i32 1, !dbg !3633
  %6 = load i8, i8* %nb_components, align 8, !dbg !3633
  %conv = zext i8 %6 to i32, !dbg !3632
  %cmp = icmp slt i32 %4, %conv, !dbg !3634
  br i1 %cmp, label %for.body, label %for.end49, !dbg !3635

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !3636, metadata !1175), !dbg !3638
  %7 = load i32, i32* %p, align 4, !dbg !3639
  %idxprom = sext i32 %7 to i64, !dbg !3640
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3640
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !3641
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !3640
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !3640
  store i8* %9, i8** %dst, align 8, !dbg !3638
  call void @llvm.dbg.declare(metadata i32* %is_chroma, metadata !3642, metadata !1175), !dbg !3643
  %10 = load i32, i32* %p, align 4, !dbg !3644
  %cmp2 = icmp eq i32 %10, 1, !dbg !3645
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !3646

lor.rhs:                                          ; preds = %for.body
  %11 = load i32, i32* %p, align 4, !dbg !3647
  %cmp4 = icmp eq i32 %11, 2, !dbg !3649
  br label %lor.end, !dbg !3650

lor.end:                                          ; preds = %lor.rhs, %for.body
  %12 = phi i1 [ true, %for.body ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %12 to i32, !dbg !3651
  store i32 %lor.ext, i32* %is_chroma, align 4, !dbg !3653
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !3654, metadata !1175), !dbg !3655
  %13 = load i32, i32* %is_chroma, align 4, !dbg !3656
  %tobool6 = icmp ne i32 %13, 0, !dbg !3656
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !3656

cond.true:                                        ; preds = %lor.end
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3657
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 3, !dbg !3658
  %15 = load i32, i32* %width, align 8, !dbg !3658
  %sub = sub nsw i32 0, %15, !dbg !3659
  %16 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3660
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %16, i32 0, i32 2, !dbg !3661
  %17 = load i8, i8* %log2_chroma_w, align 1, !dbg !3661
  %conv7 = zext i8 %17 to i32, !dbg !3662
  %shr = ashr i32 %sub, %conv7, !dbg !3663
  %sub8 = sub nsw i32 0, %shr, !dbg !3664
  br label %cond.end, !dbg !3665

cond.false:                                       ; preds = %lor.end
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3666
  %width9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 3, !dbg !3667
  %19 = load i32, i32* %width9, align 8, !dbg !3667
  br label %cond.end, !dbg !3668

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub8, %cond.true ], [ %19, %cond.false ], !dbg !3669
  store i32 %cond, i32* %bytes, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i32* %height, metadata !3672, metadata !1175), !dbg !3673
  %20 = load i32, i32* %is_chroma, align 4, !dbg !3674
  %tobool10 = icmp ne i32 %20, 0, !dbg !3674
  br i1 %tobool10, label %cond.true11, label %cond.false17, !dbg !3674

cond.true11:                                      ; preds = %cond.end
  %21 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3675
  %height12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 4, !dbg !3676
  %22 = load i32, i32* %height12, align 4, !dbg !3676
  %sub13 = sub nsw i32 0, %22, !dbg !3677
  %23 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3678
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %23, i32 0, i32 3, !dbg !3679
  %24 = load i8, i8* %log2_chroma_h, align 2, !dbg !3679
  %conv14 = zext i8 %24 to i32, !dbg !3680
  %shr15 = ashr i32 %sub13, %conv14, !dbg !3681
  %sub16 = sub nsw i32 0, %shr15, !dbg !3682
  br label %cond.end19, !dbg !3683

cond.false17:                                     ; preds = %cond.end
  %25 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3684
  %height18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 4, !dbg !3685
  %26 = load i32, i32* %height18, align 4, !dbg !3685
  br label %cond.end19, !dbg !3686

cond.end19:                                       ; preds = %cond.false17, %cond.true11
  %cond20 = phi i32 [ %sub16, %cond.true11 ], [ %26, %cond.false17 ], !dbg !3687
  store i32 %cond20, i32* %height, align 4, !dbg !3688
  store i32 0, i32* %y, align 4, !dbg !3689
  br label %for.cond21, !dbg !3691

for.cond21:                                       ; preds = %for.inc44, %cond.end19
  %27 = load i32, i32* %y, align 4, !dbg !3692
  %28 = load i32, i32* %height, align 4, !dbg !3695
  %cmp22 = icmp slt i32 %27, %28, !dbg !3696
  br i1 %cmp22, label %for.body24, label %for.end46, !dbg !3697

for.body24:                                       ; preds = %for.cond21
  %29 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !3698
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %29, i32 0, i32 5, !dbg !3701
  %arrayidx25 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !3698
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx25, i32 0, i32 4, !dbg !3702
  %30 = load i32, i32* %depth, align 8, !dbg !3702
  %cmp26 = icmp sge i32 %30, 9, !dbg !3703
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !3704

if.then28:                                        ; preds = %for.body24
  store i32 0, i32* %x, align 4, !dbg !3705
  br label %for.cond29, !dbg !3708

for.cond29:                                       ; preds = %for.inc, %if.then28
  %31 = load i32, i32* %x, align 4, !dbg !3709
  %32 = load i32, i32* %bytes, align 4, !dbg !3712
  %cmp30 = icmp slt i32 %31, %32, !dbg !3713
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !3714

for.body32:                                       ; preds = %for.cond29
  %33 = load i32, i32* %p, align 4, !dbg !3715
  %idxprom33 = sext i32 %33 to i64, !dbg !3716
  %34 = load i32*, i32** %c.addr, align 8, !dbg !3716
  %arrayidx34 = getelementptr inbounds i32, i32* %34, i64 %idxprom33, !dbg !3716
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !3716
  %conv35 = trunc i32 %35 to i16, !dbg !3716
  %36 = load i32, i32* %x, align 4, !dbg !3717
  %idxprom36 = sext i32 %36 to i64, !dbg !3718
  %37 = load i8*, i8** %dst, align 8, !dbg !3719
  %38 = bitcast i8* %37 to i16*, !dbg !3718
  %arrayidx37 = getelementptr inbounds i16, i16* %38, i64 %idxprom36, !dbg !3718
  store i16 %conv35, i16* %arrayidx37, align 2, !dbg !3720
  br label %for.inc, !dbg !3718

for.inc:                                          ; preds = %for.body32
  %39 = load i32, i32* %x, align 4, !dbg !3721
  %inc = add nsw i32 %39, 1, !dbg !3721
  store i32 %inc, i32* %x, align 4, !dbg !3721
  br label %for.cond29, !dbg !3723, !llvm.loop !3724

for.end:                                          ; preds = %for.cond29
  br label %if.end41, !dbg !3726

if.else:                                          ; preds = %for.body24
  %40 = load i8*, i8** %dst, align 8, !dbg !3727
  %41 = load i32, i32* %p, align 4, !dbg !3728
  %idxprom38 = sext i32 %41 to i64, !dbg !3729
  %42 = load i32*, i32** %c.addr, align 8, !dbg !3729
  %arrayidx39 = getelementptr inbounds i32, i32* %42, i64 %idxprom38, !dbg !3729
  %43 = load i32, i32* %arrayidx39, align 4, !dbg !3729
  %44 = trunc i32 %43 to i8, !dbg !3730
  %45 = load i32, i32* %bytes, align 4, !dbg !3731
  %conv40 = sext i32 %45 to i64, !dbg !3731
  call void @llvm.memset.p0i8.i64(i8* %40, i8 %44, i64 %conv40, i32 1, i1 false), !dbg !3730
  br label %if.end41

if.end41:                                         ; preds = %if.else, %for.end
  %46 = load i32, i32* %p, align 4, !dbg !3732
  %idxprom42 = sext i32 %46 to i64, !dbg !3733
  %47 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3733
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 1, !dbg !3734
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom42, !dbg !3733
  %48 = load i32, i32* %arrayidx43, align 4, !dbg !3733
  %49 = load i8*, i8** %dst, align 8, !dbg !3735
  %idx.ext = sext i32 %48 to i64, !dbg !3735
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 %idx.ext, !dbg !3735
  store i8* %add.ptr, i8** %dst, align 8, !dbg !3735
  br label %for.inc44, !dbg !3736

for.inc44:                                        ; preds = %if.end41
  %50 = load i32, i32* %y, align 4, !dbg !3737
  %inc45 = add nsw i32 %50, 1, !dbg !3737
  store i32 %inc45, i32* %y, align 4, !dbg !3737
  br label %for.cond21, !dbg !3739, !llvm.loop !3740

for.end46:                                        ; preds = %for.cond21
  br label %for.inc47, !dbg !3742

for.inc47:                                        ; preds = %for.end46
  %51 = load i32, i32* %p, align 4, !dbg !3743
  %inc48 = add nsw i32 %51, 1, !dbg !3743
  store i32 %inc48, i32* %p, align 4, !dbg !3743
  br label %for.cond, !dbg !3745, !llvm.loop !3746

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !3748
}

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: nounwind uwtable
define i32 @avcodec_default_execute(%struct.AVCodecContext* %c, i32 (%struct.AVCodecContext*, i8*)* %func, i8* %arg, i32* %ret, i32 %count, i32 %size) #0 !dbg !3749 {
entry:
  %c.addr = alloca %struct.AVCodecContext*, align 8
  %func.addr = alloca i32 (%struct.AVCodecContext*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %ret.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.AVCodecContext* %c, %struct.AVCodecContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %c.addr, metadata !3755, metadata !1175), !dbg !3756
  store i32 (%struct.AVCodecContext*, i8*)* %func, i32 (%struct.AVCodecContext*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.AVCodecContext*, i8*)** %func.addr, metadata !3757, metadata !1175), !dbg !3758
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3759, metadata !1175), !dbg !3760
  store i32* %ret, i32** %ret.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ret.addr, metadata !3761, metadata !1175), !dbg !3762
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3763, metadata !1175), !dbg !3764
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3765, metadata !1175), !dbg !3766
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3767, metadata !1175), !dbg !3768
  store i32 0, i32* %i, align 4, !dbg !3769
  br label %for.cond, !dbg !3771

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3772
  %1 = load i32, i32* %count.addr, align 4, !dbg !3775
  %cmp = icmp slt i32 %0, %1, !dbg !3776
  br i1 %cmp, label %for.body, label %for.end, !dbg !3777

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3778, metadata !1175), !dbg !3780
  %2 = load i32 (%struct.AVCodecContext*, i8*)*, i32 (%struct.AVCodecContext*, i8*)** %func.addr, align 8, !dbg !3781
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %c.addr, align 8, !dbg !3782
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !3783
  %5 = load i32, i32* %i, align 4, !dbg !3784
  %6 = load i32, i32* %size.addr, align 4, !dbg !3785
  %mul = mul nsw i32 %5, %6, !dbg !3786
  %idx.ext = sext i32 %mul to i64, !dbg !3787
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !3787
  %call = call i32 %2(%struct.AVCodecContext* %3, i8* %add.ptr), !dbg !3781
  store i32 %call, i32* %r, align 4, !dbg !3780
  %7 = load i32*, i32** %ret.addr, align 8, !dbg !3788
  %tobool = icmp ne i32* %7, null, !dbg !3788
  br i1 %tobool, label %if.then, label %if.end, !dbg !3790

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %r, align 4, !dbg !3791
  %9 = load i32, i32* %i, align 4, !dbg !3792
  %idxprom = sext i32 %9 to i64, !dbg !3793
  %10 = load i32*, i32** %ret.addr, align 8, !dbg !3793
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3793
  store i32 %8, i32* %arrayidx, align 4, !dbg !3794
  br label %if.end, !dbg !3793

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3795

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !3796
  %inc = add nsw i32 %11, 1, !dbg !3796
  store i32 %inc, i32* %i, align 4, !dbg !3796
  br label %for.cond, !dbg !3798, !llvm.loop !3799

for.end:                                          ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !3801, !srcloc !3807
  ret i32 0, !dbg !3808
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_default_execute2(%struct.AVCodecContext* %c, i32 (%struct.AVCodecContext*, i8*, i32, i32)* %func, i8* %arg, i32* %ret, i32 %count) #0 !dbg !3809 {
entry:
  %c.addr = alloca %struct.AVCodecContext*, align 8
  %func.addr = alloca i32 (%struct.AVCodecContext*, i8*, i32, i32)*, align 8
  %arg.addr = alloca i8*, align 8
  %ret.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.AVCodecContext* %c, %struct.AVCodecContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %c.addr, metadata !3815, metadata !1175), !dbg !3816
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* %func, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.AVCodecContext*, i8*, i32, i32)** %func.addr, metadata !3817, metadata !1175), !dbg !3818
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3819, metadata !1175), !dbg !3820
  store i32* %ret, i32** %ret.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ret.addr, metadata !3821, metadata !1175), !dbg !3822
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3823, metadata !1175), !dbg !3824
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3825, metadata !1175), !dbg !3826
  store i32 0, i32* %i, align 4, !dbg !3827
  br label %for.cond, !dbg !3829

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3830
  %1 = load i32, i32* %count.addr, align 4, !dbg !3833
  %cmp = icmp slt i32 %0, %1, !dbg !3834
  br i1 %cmp, label %for.body, label %for.end, !dbg !3835

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3836, metadata !1175), !dbg !3838
  %2 = load i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %func.addr, align 8, !dbg !3839
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %c.addr, align 8, !dbg !3840
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !3841
  %5 = load i32, i32* %i, align 4, !dbg !3842
  %call = call i32 %2(%struct.AVCodecContext* %3, i8* %4, i32 %5, i32 0), !dbg !3839
  store i32 %call, i32* %r, align 4, !dbg !3838
  %6 = load i32*, i32** %ret.addr, align 8, !dbg !3843
  %tobool = icmp ne i32* %6, null, !dbg !3843
  br i1 %tobool, label %if.then, label %if.end, !dbg !3845

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %r, align 4, !dbg !3846
  %8 = load i32, i32* %i, align 4, !dbg !3847
  %idxprom = sext i32 %8 to i64, !dbg !3848
  %9 = load i32*, i32** %ret.addr, align 8, !dbg !3848
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !3848
  store i32 %7, i32* %arrayidx, align 4, !dbg !3849
  br label %if.end, !dbg !3848

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3850

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !3851
  %inc = add nsw i32 %10, 1, !dbg !3851
  store i32 %inc, i32* %i, align 4, !dbg !3851
  br label %for.cond, !dbg !3853, !llvm.loop !3854

for.end:                                          ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !3856, !srcloc !3807
  ret i32 0, !dbg !3858
}

; Function Attrs: nounwind uwtable
define i32 @avpriv_find_pix_fmt(%struct.PixelFormatTag* %tags, i32 %fourcc) #0 !dbg !3859 {
entry:
  %retval = alloca i32, align 4
  %tags.addr = alloca %struct.PixelFormatTag*, align 8
  %fourcc.addr = alloca i32, align 4
  store %struct.PixelFormatTag* %tags, %struct.PixelFormatTag** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PixelFormatTag** %tags.addr, metadata !3870, metadata !1175), !dbg !3871
  store i32 %fourcc, i32* %fourcc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fourcc.addr, metadata !3872, metadata !1175), !dbg !3873
  br label %while.cond, !dbg !3874

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.PixelFormatTag*, %struct.PixelFormatTag** %tags.addr, align 8, !dbg !3875
  %pix_fmt = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %0, i32 0, i32 0, !dbg !3877
  %1 = load i32, i32* %pix_fmt, align 4, !dbg !3877
  %cmp = icmp sge i32 %1, 0, !dbg !3878
  br i1 %cmp, label %while.body, label %while.end, !dbg !3879

while.body:                                       ; preds = %while.cond
  %2 = load %struct.PixelFormatTag*, %struct.PixelFormatTag** %tags.addr, align 8, !dbg !3880
  %fourcc1 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %2, i32 0, i32 1, !dbg !3883
  %3 = load i32, i32* %fourcc1, align 4, !dbg !3883
  %4 = load i32, i32* %fourcc.addr, align 4, !dbg !3884
  %cmp2 = icmp eq i32 %3, %4, !dbg !3885
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3886

if.then:                                          ; preds = %while.body
  %5 = load %struct.PixelFormatTag*, %struct.PixelFormatTag** %tags.addr, align 8, !dbg !3887
  %pix_fmt3 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %5, i32 0, i32 0, !dbg !3888
  %6 = load i32, i32* %pix_fmt3, align 4, !dbg !3888
  store i32 %6, i32* %retval, align 4, !dbg !3889
  br label %return, !dbg !3889

if.end:                                           ; preds = %while.body
  %7 = load %struct.PixelFormatTag*, %struct.PixelFormatTag** %tags.addr, align 8, !dbg !3890
  %incdec.ptr = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %7, i32 1, !dbg !3890
  store %struct.PixelFormatTag* %incdec.ptr, %struct.PixelFormatTag** %tags.addr, align 8, !dbg !3890
  br label %while.cond, !dbg !3891, !llvm.loop !3893

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

return:                                           ; preds = %while.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3895
  ret i32 %8, !dbg !3895
}

; Function Attrs: nounwind uwtable
define i64 @av_codec_get_pkt_timebase(%struct.AVCodecContext* %s) #0 !dbg !3896 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3899, metadata !1175), !dbg !3900
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3901
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 165, !dbg !3902
  %1 = bitcast %struct.AVRational* %retval to i8*, !dbg !3902
  %2 = bitcast %struct.AVRational* %pkt_timebase to i8*, !dbg !3902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 4, i1 false), !dbg !3902
  %3 = bitcast %struct.AVRational* %retval to i64*, !dbg !3903
  %4 = load i64, i64* %3, align 4, !dbg !3903
  ret i64 %4, !dbg !3903
}

; Function Attrs: nounwind uwtable
define void @av_codec_set_pkt_timebase(%struct.AVCodecContext* %s, i64 %v.coerce) #0 !dbg !3904 {
entry:
  %v = alloca %struct.AVRational, align 4
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %0 = bitcast %struct.AVRational* %v to i64*
  store i64 %v.coerce, i64* %0, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3907, metadata !1175), !dbg !3908
  call void @llvm.dbg.declare(metadata %struct.AVRational* %v, metadata !3909, metadata !1175), !dbg !3910
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3911
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 165, !dbg !3912
  %2 = bitcast %struct.AVRational* %pkt_timebase to i8*, !dbg !3913
  %3 = bitcast %struct.AVRational* %v to i8*, !dbg !3913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !3913
  ret void, !dbg !3914
}

; Function Attrs: nounwind uwtable
define %struct.AVCodecDescriptor* @av_codec_get_codec_descriptor(%struct.AVCodecContext* %s) #0 !dbg !3915 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3918, metadata !1175), !dbg !3919
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3920
  %codec_descriptor = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 166, !dbg !3921
  %1 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor, align 8, !dbg !3921
  ret %struct.AVCodecDescriptor* %1, !dbg !3922
}

; Function Attrs: nounwind uwtable
define void @av_codec_set_codec_descriptor(%struct.AVCodecContext* %s, %struct.AVCodecDescriptor* %v) #0 !dbg !3923 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %v.addr = alloca %struct.AVCodecDescriptor*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3926, metadata !1175), !dbg !3927
  store %struct.AVCodecDescriptor* %v, %struct.AVCodecDescriptor** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %v.addr, metadata !3928, metadata !1175), !dbg !3929
  %0 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %v.addr, align 8, !dbg !3930
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3931
  %codec_descriptor = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 166, !dbg !3932
  store %struct.AVCodecDescriptor* %0, %struct.AVCodecDescriptor** %codec_descriptor, align 8, !dbg !3933
  ret void, !dbg !3934
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_get_lowres(%struct.AVCodecContext* %s) #0 !dbg !3935 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3938, metadata !1175), !dbg !3939
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3940
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 144, !dbg !3941
  %1 = load i32, i32* %lowres, align 8, !dbg !3941
  ret i32 %1, !dbg !3942
}

; Function Attrs: nounwind uwtable
define void @av_codec_set_lowres(%struct.AVCodecContext* %s, i32 %v) #0 !dbg !3943 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %v.addr = alloca i32, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3946, metadata !1175), !dbg !3947
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !3948, metadata !1175), !dbg !3949
  %0 = load i32, i32* %v.addr, align 4, !dbg !3950
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3951
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 144, !dbg !3952
  store i32 %0, i32* %lowres, align 8, !dbg !3953
  ret void, !dbg !3954
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_get_seek_preroll(%struct.AVCodecContext* %s) #0 !dbg !3955 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3956, metadata !1175), !dbg !3957
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3958
  %seek_preroll = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 174, !dbg !3959
  %1 = load i32, i32* %seek_preroll, align 8, !dbg !3959
  ret i32 %1, !dbg !3960
}

; Function Attrs: nounwind uwtable
define void @av_codec_set_seek_preroll(%struct.AVCodecContext* %s, i32 %v) #0 !dbg !3961 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %v.addr = alloca i32, align 4
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3962, metadata !1175), !dbg !3963
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !3964, metadata !1175), !dbg !3965
  %0 = load i32, i32* %v.addr, align 4, !dbg !3966
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3967
  %seek_preroll = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 174, !dbg !3968
  store i32 %0, i32* %seek_preroll, align 8, !dbg !3969
  ret void, !dbg !3970
}

; Function Attrs: nounwind uwtable
define i16* @av_codec_get_chroma_intra_matrix(%struct.AVCodecContext* %s) #0 !dbg !3971 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3974, metadata !1175), !dbg !3975
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3976
  %chroma_intra_matrix = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 176, !dbg !3977
  %1 = load i16*, i16** %chroma_intra_matrix, align 8, !dbg !3977
  ret i16* %1, !dbg !3978
}

; Function Attrs: nounwind uwtable
define void @av_codec_set_chroma_intra_matrix(%struct.AVCodecContext* %s, i16* %v) #0 !dbg !3979 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  %v.addr = alloca i16*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !3982, metadata !1175), !dbg !3983
  store i16* %v, i16** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %v.addr, metadata !3984, metadata !1175), !dbg !3985
  %0 = load i16*, i16** %v.addr, align 8, !dbg !3986
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !3987
  %chroma_intra_matrix = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 176, !dbg !3988
  store i16* %0, i16** %chroma_intra_matrix, align 8, !dbg !3989
  ret void, !dbg !3990
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_get_codec_properties(%struct.AVCodecContext* %codec) #0 !dbg !3991 {
entry:
  %codec.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %codec, %struct.AVCodecContext** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %codec.addr, metadata !3994, metadata !1175), !dbg !3995
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !3996
  %properties = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 179, !dbg !3997
  %1 = load i32, i32* %properties, align 8, !dbg !3997
  ret i32 %1, !dbg !3998
}

; Function Attrs: nounwind uwtable
define i32 @av_codec_get_max_lowres(%struct.AVCodec* %codec) #0 !dbg !3999 {
entry:
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !4000, metadata !1175), !dbg !4001
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4002
  %max_lowres = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i32 0, i32 10, !dbg !4003
  %1 = load i8, i8* %max_lowres, align 8, !dbg !4003
  %conv = zext i8 %1 to i32, !dbg !4002
  ret i32 %conv, !dbg !4004
}

; Function Attrs: nounwind uwtable
define i32 @avpriv_codec_get_cap_skip_frame_fill_param(%struct.AVCodec* %codec) #0 !dbg !4005 {
entry:
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !4006, metadata !1175), !dbg !4007
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4008
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i32 0, i32 29, !dbg !4009
  %1 = load i32, i32* %caps_internal, align 8, !dbg !4009
  %and = and i32 %1, 8, !dbg !4010
  %tobool = icmp ne i32 %and, 0, !dbg !4011
  %lnot = xor i1 %tobool, true, !dbg !4011
  %lnot1 = xor i1 %lnot, true, !dbg !4012
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4012
  ret i32 %lnot.ext, !dbg !4013
}

; Function Attrs: nounwind uwtable
define i32 @ff_codec_open2_recursive(%struct.AVCodecContext* %avctx, %struct.AVCodec* %codec, %struct.AVDictionary** %options) #0 !dbg !4014 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %codec.addr = alloca %struct.AVCodec*, align 8
  %options.addr = alloca %struct.AVDictionary**, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4018, metadata !1175), !dbg !4019
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !4020, metadata !1175), !dbg !4021
  store %struct.AVDictionary** %options, %struct.AVDictionary*** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %options.addr, metadata !4022, metadata !1175), !dbg !4023
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4024, metadata !1175), !dbg !4025
  store i32 0, i32* %ret, align 4, !dbg !4025
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4026
  call void @ff_unlock_avcodec(%struct.AVCodec* %0), !dbg !4027
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4028
  %2 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4029
  %3 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !4030
  %call = call i32 @avcodec_open2(%struct.AVCodecContext* %1, %struct.AVCodec* %2, %struct.AVDictionary** %3), !dbg !4031
  store i32 %call, i32* %ret, align 4, !dbg !4032
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4033
  %5 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4034
  call void @ff_lock_avcodec(%struct.AVCodecContext* %4, %struct.AVCodec* %5), !dbg !4035
  %6 = load i32, i32* %ret, align 4, !dbg !4036
  ret i32 %6, !dbg !4037
}

; Function Attrs: nounwind uwtable
define internal void @ff_unlock_avcodec(%struct.AVCodec* %codec) #0 !dbg !4038 {
entry:
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !4041, metadata !1175), !dbg !4042
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4043
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i32 0, i32 29, !dbg !4045
  %1 = load i32, i32* %caps_internal, align 8, !dbg !4045
  %and = and i32 %1, 1, !dbg !4046
  %tobool = icmp ne i32 %and, 0, !dbg !4046
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4047

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4048
  %init = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %2, i32 0, i32 20, !dbg !4050
  %3 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init, align 8, !dbg !4050
  %tobool1 = icmp ne i32 (%struct.AVCodecContext*)* %3, null, !dbg !4048
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4051

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @codec_mutex) #12, !dbg !4052
  br label %if.end, !dbg !4052

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !4053
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_open2(%struct.AVCodecContext* %avctx, %struct.AVCodec* %codec, %struct.AVDictionary** %options) #0 !dbg !4054 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !4055, metadata !1175), !dbg !4059
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !4065, metadata !1175), !dbg !4066
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %codec.addr = alloca %struct.AVCodec*, align 8
  %options.addr = alloca %struct.AVDictionary**, align 8
  %ret = alloca i32, align 4
  %tmp = alloca %struct.AVDictionary*, align 8
  %pixdesc = alloca %struct.AVPixFmtDescriptor*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %codec_string = alloca i8*, align 8
  %codec2 = alloca %struct.AVCodec*, align 8
  %i = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %buf475 = alloca [128 x i8], align 16
  %buf594 = alloca [512 x i8], align 16
  %channels608 = alloca i32, align 4
  %buf616 = alloca [512 x i8], align 16
  %frames_ctx = alloca %struct.AVHWFramesContext*, align 8
  %channels783 = alloca i32, align 4
  %buf796 = alloca [512 x i8], align 16
  %cd = alloca i8*, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %.compoundliteral866 = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.AVRational, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4067, metadata !1175), !dbg !4068
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !4069, metadata !1175), !dbg !4070
  store %struct.AVDictionary** %options, %struct.AVDictionary*** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %options.addr, metadata !4071, metadata !1175), !dbg !4072
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4073, metadata !1175), !dbg !4074
  store i32 0, i32* %ret, align 4, !dbg !4074
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %tmp, metadata !4075, metadata !1175), !dbg !4076
  store %struct.AVDictionary* null, %struct.AVDictionary** %tmp, align 8, !dbg !4076
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %pixdesc, metadata !4077, metadata !1175), !dbg !4078
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4079
  %call = call i32 @avcodec_is_open(%struct.AVCodecContext* %0), !dbg !4081
  %tobool = icmp ne i32 %call, 0, !dbg !4081
  br i1 %tobool, label %if.then, label %if.end, !dbg !4082

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4083
  br label %return, !dbg !4083

if.end:                                           ; preds = %entry
  %1 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4084
  %tobool2 = icmp ne %struct.AVCodec* %1, null, !dbg !4084
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !4086

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4087
  %codec3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 3, !dbg !4089
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec3, align 8, !dbg !4089
  %tobool4 = icmp ne %struct.AVCodec* %3, null, !dbg !4087
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4090

if.then5:                                         ; preds = %land.lhs.true
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4091
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !4091
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i32 0, i32 0)), !dbg !4093
  store i32 -22, i32* %retval, align 4, !dbg !4094
  br label %return, !dbg !4094

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4095
  %tobool7 = icmp ne %struct.AVCodec* %6, null, !dbg !4095
  br i1 %tobool7, label %land.lhs.true8, label %if.end16, !dbg !4097

land.lhs.true8:                                   ; preds = %if.end6
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4098
  %codec9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 3, !dbg !4100
  %8 = load %struct.AVCodec*, %struct.AVCodec** %codec9, align 8, !dbg !4100
  %tobool10 = icmp ne %struct.AVCodec* %8, null, !dbg !4098
  br i1 %tobool10, label %land.lhs.true11, label %if.end16, !dbg !4101

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %9 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4102
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4104
  %codec12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 3, !dbg !4105
  %11 = load %struct.AVCodec*, %struct.AVCodec** %codec12, align 8, !dbg !4105
  %cmp = icmp ne %struct.AVCodec* %9, %11, !dbg !4106
  br i1 %cmp, label %if.then13, label %if.end16, !dbg !4107

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4108
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !4108
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4110
  %codec14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 3, !dbg !4111
  %15 = load %struct.AVCodec*, %struct.AVCodec** %codec14, align 8, !dbg !4111
  %name = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %15, i32 0, i32 0, !dbg !4112
  %16 = load i8*, i8** %name, align 8, !dbg !4112
  %17 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4113
  %name15 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %17, i32 0, i32 0, !dbg !4114
  %18 = load i8*, i8** %name15, align 8, !dbg !4114
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.5, i32 0, i32 0), i8* %16, i8* %18), !dbg !4115
  store i32 -22, i32* %retval, align 4, !dbg !4116
  br label %return, !dbg !4116

if.end16:                                         ; preds = %land.lhs.true11, %land.lhs.true8, %if.end6
  %19 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4117
  %tobool17 = icmp ne %struct.AVCodec* %19, null, !dbg !4117
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !4119

if.then18:                                        ; preds = %if.end16
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4120
  %codec19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 3, !dbg !4121
  %21 = load %struct.AVCodec*, %struct.AVCodec** %codec19, align 8, !dbg !4121
  store %struct.AVCodec* %21, %struct.AVCodec** %codec.addr, align 8, !dbg !4122
  br label %if.end20, !dbg !4123

if.end20:                                         ; preds = %if.then18, %if.end16
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4124
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 16, !dbg !4126
  %23 = load i32, i32* %extradata_size, align 8, !dbg !4126
  %cmp21 = icmp slt i32 %23, 0, !dbg !4127
  br i1 %cmp21, label %if.then24, label %lor.lhs.false, !dbg !4128

lor.lhs.false:                                    ; preds = %if.end20
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4129
  %extradata_size22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 16, !dbg !4131
  %25 = load i32, i32* %extradata_size22, align 8, !dbg !4131
  %cmp23 = icmp sge i32 %25, 268435392, !dbg !4132
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !4133

if.then24:                                        ; preds = %lor.lhs.false, %if.end20
  store i32 -22, i32* %retval, align 4, !dbg !4134
  br label %return, !dbg !4134

if.end25:                                         ; preds = %lor.lhs.false
  %26 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !4135
  %tobool26 = icmp ne %struct.AVDictionary** %26, null, !dbg !4135
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !4137

if.then27:                                        ; preds = %if.end25
  %27 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !4138
  %28 = load %struct.AVDictionary*, %struct.AVDictionary** %27, align 8, !dbg !4139
  %call28 = call i32 @av_dict_copy(%struct.AVDictionary** %tmp, %struct.AVDictionary* %28, i32 0), !dbg !4140
  br label %if.end29, !dbg !4140

if.end29:                                         ; preds = %if.then27, %if.end25
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4141
  %30 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4142
  call void @ff_lock_avcodec(%struct.AVCodecContext* %29, %struct.AVCodec* %30), !dbg !4143
  %call30 = call noalias i8* @av_mallocz(i64 208), !dbg !4144
  %31 = bitcast i8* %call30 to %struct.AVCodecInternal*, !dbg !4144
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4145
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 7, !dbg !4146
  store %struct.AVCodecInternal* %31, %struct.AVCodecInternal** %internal, align 8, !dbg !4147
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4148
  %internal31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 7, !dbg !4150
  %34 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal31, align 8, !dbg !4150
  %tobool32 = icmp ne %struct.AVCodecInternal* %34, null, !dbg !4148
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !4151

if.then33:                                        ; preds = %if.end29
  store i32 -12, i32* %ret, align 4, !dbg !4152
  br label %end, !dbg !4154

if.end34:                                         ; preds = %if.end29
  %call35 = call noalias i8* @av_mallocz(i64 104), !dbg !4155
  %35 = bitcast i8* %call35 to %struct.FramePool*, !dbg !4155
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4156
  %internal36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 7, !dbg !4157
  %37 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal36, align 8, !dbg !4157
  %pool = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %37, i32 0, i32 4, !dbg !4158
  store %struct.FramePool* %35, %struct.FramePool** %pool, align 8, !dbg !4159
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4160
  %internal37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 7, !dbg !4162
  %39 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal37, align 8, !dbg !4162
  %pool38 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %39, i32 0, i32 4, !dbg !4163
  %40 = load %struct.FramePool*, %struct.FramePool** %pool38, align 8, !dbg !4163
  %tobool39 = icmp ne %struct.FramePool* %40, null, !dbg !4160
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !4164

if.then40:                                        ; preds = %if.end34
  store i32 -12, i32* %ret, align 4, !dbg !4165
  br label %free_and_end, !dbg !4167

if.end41:                                         ; preds = %if.end34
  %call42 = call %struct.AVFrame* @av_frame_alloc(), !dbg !4168
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4169
  %internal43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 7, !dbg !4170
  %42 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal43, align 8, !dbg !4170
  %to_free = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %42, i32 0, i32 3, !dbg !4171
  store %struct.AVFrame* %call42, %struct.AVFrame** %to_free, align 8, !dbg !4172
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4173
  %internal44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 7, !dbg !4175
  %44 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal44, align 8, !dbg !4175
  %to_free45 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %44, i32 0, i32 3, !dbg !4176
  %45 = load %struct.AVFrame*, %struct.AVFrame** %to_free45, align 8, !dbg !4176
  %tobool46 = icmp ne %struct.AVFrame* %45, null, !dbg !4173
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !4177

if.then47:                                        ; preds = %if.end41
  store i32 -12, i32* %ret, align 4, !dbg !4178
  br label %free_and_end, !dbg !4180

if.end48:                                         ; preds = %if.end41
  %call49 = call %struct.AVFrame* @av_frame_alloc(), !dbg !4181
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4182
  %internal50 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 7, !dbg !4183
  %47 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal50, align 8, !dbg !4183
  %compat_decode_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %47, i32 0, i32 23, !dbg !4184
  store %struct.AVFrame* %call49, %struct.AVFrame** %compat_decode_frame, align 8, !dbg !4185
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4186
  %internal51 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 7, !dbg !4188
  %49 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal51, align 8, !dbg !4188
  %compat_decode_frame52 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %49, i32 0, i32 23, !dbg !4189
  %50 = load %struct.AVFrame*, %struct.AVFrame** %compat_decode_frame52, align 8, !dbg !4189
  %tobool53 = icmp ne %struct.AVFrame* %50, null, !dbg !4186
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !4190

if.then54:                                        ; preds = %if.end48
  store i32 -12, i32* %ret, align 4, !dbg !4191
  br label %free_and_end, !dbg !4193

if.end55:                                         ; preds = %if.end48
  %call56 = call %struct.AVFrame* @av_frame_alloc(), !dbg !4194
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4195
  %internal57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 7, !dbg !4196
  %52 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal57, align 8, !dbg !4196
  %buffer_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %52, i32 0, i32 17, !dbg !4197
  store %struct.AVFrame* %call56, %struct.AVFrame** %buffer_frame, align 8, !dbg !4198
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4199
  %internal58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 7, !dbg !4201
  %54 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal58, align 8, !dbg !4201
  %buffer_frame59 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %54, i32 0, i32 17, !dbg !4202
  %55 = load %struct.AVFrame*, %struct.AVFrame** %buffer_frame59, align 8, !dbg !4202
  %tobool60 = icmp ne %struct.AVFrame* %55, null, !dbg !4199
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !4203

if.then61:                                        ; preds = %if.end55
  store i32 -12, i32* %ret, align 4, !dbg !4204
  br label %free_and_end, !dbg !4206

if.end62:                                         ; preds = %if.end55
  %call63 = call %struct.AVPacket* @av_packet_alloc(), !dbg !4207
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4208
  %internal64 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 7, !dbg !4209
  %57 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal64, align 8, !dbg !4209
  %buffer_pkt = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %57, i32 0, i32 15, !dbg !4210
  store %struct.AVPacket* %call63, %struct.AVPacket** %buffer_pkt, align 8, !dbg !4211
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4212
  %internal65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 7, !dbg !4214
  %59 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal65, align 8, !dbg !4214
  %buffer_pkt66 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %59, i32 0, i32 15, !dbg !4215
  %60 = load %struct.AVPacket*, %struct.AVPacket** %buffer_pkt66, align 8, !dbg !4215
  %tobool67 = icmp ne %struct.AVPacket* %60, null, !dbg !4212
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !4216

if.then68:                                        ; preds = %if.end62
  store i32 -12, i32* %ret, align 4, !dbg !4217
  br label %free_and_end, !dbg !4219

if.end69:                                         ; preds = %if.end62
  %call70 = call %struct.AVPacket* @av_packet_alloc(), !dbg !4220
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4221
  %internal71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 7, !dbg !4222
  %62 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal71, align 8, !dbg !4222
  %ds = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %62, i32 0, i32 6, !dbg !4223
  %in_pkt = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %ds, i32 0, i32 0, !dbg !4224
  store %struct.AVPacket* %call70, %struct.AVPacket** %in_pkt, align 8, !dbg !4225
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4226
  %internal72 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 7, !dbg !4228
  %64 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal72, align 8, !dbg !4228
  %ds73 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %64, i32 0, i32 6, !dbg !4229
  %in_pkt74 = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %ds73, i32 0, i32 0, !dbg !4230
  %65 = load %struct.AVPacket*, %struct.AVPacket** %in_pkt74, align 8, !dbg !4230
  %tobool75 = icmp ne %struct.AVPacket* %65, null, !dbg !4226
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4231

if.then76:                                        ; preds = %if.end69
  store i32 -12, i32* %ret, align 4, !dbg !4232
  br label %free_and_end, !dbg !4234

if.end77:                                         ; preds = %if.end69
  %call78 = call %struct.AVPacket* @av_packet_alloc(), !dbg !4235
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4236
  %internal79 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i32 0, i32 7, !dbg !4237
  %67 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal79, align 8, !dbg !4237
  %last_pkt_props = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i32 0, i32 8, !dbg !4238
  store %struct.AVPacket* %call78, %struct.AVPacket** %last_pkt_props, align 8, !dbg !4239
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4240
  %internal80 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 7, !dbg !4242
  %69 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal80, align 8, !dbg !4242
  %last_pkt_props81 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %69, i32 0, i32 8, !dbg !4243
  %70 = load %struct.AVPacket*, %struct.AVPacket** %last_pkt_props81, align 8, !dbg !4243
  %tobool82 = icmp ne %struct.AVPacket* %70, null, !dbg !4240
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !4244

if.then83:                                        ; preds = %if.end77
  store i32 -12, i32* %ret, align 4, !dbg !4245
  br label %free_and_end, !dbg !4247

if.end84:                                         ; preds = %if.end77
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4248
  %internal85 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 7, !dbg !4249
  %72 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal85, align 8, !dbg !4249
  %skip_samples_multiplier = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %72, i32 0, i32 25, !dbg !4250
  store i32 1, i32* %skip_samples_multiplier, align 4, !dbg !4251
  %73 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4252
  %priv_data_size = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %73, i32 0, i32 14, !dbg !4254
  %74 = load i32, i32* %priv_data_size, align 8, !dbg !4254
  %cmp86 = icmp sgt i32 %74, 0, !dbg !4255
  br i1 %cmp86, label %if.then87, label %if.else, !dbg !4256

if.then87:                                        ; preds = %if.end84
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4257
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 6, !dbg !4260
  %76 = load i8*, i8** %priv_data, align 8, !dbg !4260
  %tobool88 = icmp ne i8* %76, null, !dbg !4257
  br i1 %tobool88, label %if.end103, label %if.then89, !dbg !4261

if.then89:                                        ; preds = %if.then87
  %77 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4262
  %priv_data_size90 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %77, i32 0, i32 14, !dbg !4264
  %78 = load i32, i32* %priv_data_size90, align 8, !dbg !4264
  %conv = sext i32 %78 to i64, !dbg !4262
  %call91 = call noalias i8* @av_mallocz(i64 %conv), !dbg !4265
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4266
  %priv_data92 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %79, i32 0, i32 6, !dbg !4267
  store i8* %call91, i8** %priv_data92, align 8, !dbg !4268
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4269
  %priv_data93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 6, !dbg !4271
  %81 = load i8*, i8** %priv_data93, align 8, !dbg !4271
  %tobool94 = icmp ne i8* %81, null, !dbg !4269
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !4272

if.then95:                                        ; preds = %if.then89
  store i32 -12, i32* %ret, align 4, !dbg !4273
  br label %end, !dbg !4275

if.end96:                                         ; preds = %if.then89
  %82 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4276
  %priv_class = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %82, i32 0, i32 11, !dbg !4278
  %83 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !4278
  %tobool97 = icmp ne %struct.AVClass* %83, null, !dbg !4276
  br i1 %tobool97, label %if.then98, label %if.end102, !dbg !4279

if.then98:                                        ; preds = %if.end96
  %84 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4280
  %priv_class99 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %84, i32 0, i32 11, !dbg !4282
  %85 = load %struct.AVClass*, %struct.AVClass** %priv_class99, align 8, !dbg !4282
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4283
  %priv_data100 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %86, i32 0, i32 6, !dbg !4284
  %87 = load i8*, i8** %priv_data100, align 8, !dbg !4284
  %88 = bitcast i8* %87 to %struct.AVClass**, !dbg !4285
  store %struct.AVClass* %85, %struct.AVClass** %88, align 8, !dbg !4286
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4287
  %priv_data101 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %89, i32 0, i32 6, !dbg !4288
  %90 = load i8*, i8** %priv_data101, align 8, !dbg !4288
  call void @av_opt_set_defaults(i8* %90), !dbg !4289
  br label %if.end102, !dbg !4290

if.end102:                                        ; preds = %if.then98, %if.end96
  br label %if.end103, !dbg !4291

if.end103:                                        ; preds = %if.end102, %if.then87
  %91 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4292
  %priv_class104 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %91, i32 0, i32 11, !dbg !4294
  %92 = load %struct.AVClass*, %struct.AVClass** %priv_class104, align 8, !dbg !4294
  %tobool105 = icmp ne %struct.AVClass* %92, null, !dbg !4292
  br i1 %tobool105, label %land.lhs.true106, label %if.end112, !dbg !4295

land.lhs.true106:                                 ; preds = %if.end103
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4296
  %priv_data107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %93, i32 0, i32 6, !dbg !4298
  %94 = load i8*, i8** %priv_data107, align 8, !dbg !4298
  %call108 = call i32 @av_opt_set_dict(i8* %94, %struct.AVDictionary** %tmp), !dbg !4299
  store i32 %call108, i32* %ret, align 4, !dbg !4300
  %cmp109 = icmp slt i32 %call108, 0, !dbg !4301
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !4302

if.then111:                                       ; preds = %land.lhs.true106
  br label %free_and_end, !dbg !4303

if.end112:                                        ; preds = %land.lhs.true106, %if.end103
  br label %if.end114, !dbg !4304

if.else:                                          ; preds = %if.end84
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4305
  %priv_data113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %95, i32 0, i32 6, !dbg !4307
  store i8* null, i8** %priv_data113, align 8, !dbg !4308
  br label %if.end114

if.end114:                                        ; preds = %if.else, %if.end112
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4309
  %97 = bitcast %struct.AVCodecContext* %96 to i8*, !dbg !4309
  %call115 = call i32 @av_opt_set_dict(i8* %97, %struct.AVDictionary** %tmp), !dbg !4311
  store i32 %call115, i32* %ret, align 4, !dbg !4312
  %cmp116 = icmp slt i32 %call115, 0, !dbg !4313
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !4314

if.then118:                                       ; preds = %if.end114
  br label %free_and_end, !dbg !4315

if.end119:                                        ; preds = %if.end114
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4316
  %codec_whitelist = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 178, !dbg !4318
  %99 = load i8*, i8** %codec_whitelist, align 8, !dbg !4318
  %tobool120 = icmp ne i8* %99, null, !dbg !4316
  br i1 %tobool120, label %land.lhs.true121, label %if.end130, !dbg !4319

land.lhs.true121:                                 ; preds = %if.end119
  %100 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4320
  %name122 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %100, i32 0, i32 0, !dbg !4322
  %101 = load i8*, i8** %name122, align 8, !dbg !4322
  %102 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4323
  %codec_whitelist123 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %102, i32 0, i32 178, !dbg !4324
  %103 = load i8*, i8** %codec_whitelist123, align 8, !dbg !4324
  %call124 = call i32 @av_match_list(i8* %101, i8* %103, i8 signext 44), !dbg !4325
  %cmp125 = icmp sle i32 %call124, 0, !dbg !4326
  br i1 %cmp125, label %if.then127, label %if.end130, !dbg !4327

if.then127:                                       ; preds = %land.lhs.true121
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4328
  %105 = bitcast %struct.AVCodecContext* %104 to i8*, !dbg !4328
  %106 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4330
  %name128 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %106, i32 0, i32 0, !dbg !4331
  %107 = load i8*, i8** %name128, align 8, !dbg !4331
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4332
  %codec_whitelist129 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 178, !dbg !4333
  %109 = load i8*, i8** %codec_whitelist129, align 8, !dbg !4333
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i32 0, i32 0), i8* %107, i8* %109), !dbg !4334
  store i32 -22, i32* %ret, align 4, !dbg !4335
  br label %free_and_end, !dbg !4336

if.end130:                                        ; preds = %land.lhs.true121, %if.end119
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4337
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 22, !dbg !4339
  %111 = load i32, i32* %coded_width, align 4, !dbg !4339
  %tobool131 = icmp ne i32 %111, 0, !dbg !4337
  br i1 %tobool131, label %land.lhs.true132, label %if.then149, !dbg !4340

land.lhs.true132:                                 ; preds = %if.end130
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4341
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 23, !dbg !4343
  %113 = load i32, i32* %coded_height, align 8, !dbg !4343
  %tobool133 = icmp ne i32 %113, 0, !dbg !4341
  br i1 %tobool133, label %land.lhs.true134, label %if.then149, !dbg !4344

land.lhs.true134:                                 ; preds = %land.lhs.true132
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4345
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %114, i32 0, i32 20, !dbg !4347
  %115 = load i32, i32* %width, align 4, !dbg !4347
  %tobool135 = icmp ne i32 %115, 0, !dbg !4345
  br i1 %tobool135, label %land.lhs.true136, label %if.then149, !dbg !4348

land.lhs.true136:                                 ; preds = %land.lhs.true134
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4349
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %116, i32 0, i32 21, !dbg !4351
  %117 = load i32, i32* %height, align 8, !dbg !4351
  %tobool137 = icmp ne i32 %117, 0, !dbg !4349
  br i1 %tobool137, label %land.lhs.true138, label %if.then149, !dbg !4352

land.lhs.true138:                                 ; preds = %land.lhs.true136
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4353
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %118, i32 0, i32 4, !dbg !4354
  %119 = load i32, i32* %codec_id, align 8, !dbg !4354
  %cmp139 = icmp eq i32 %119, 27, !dbg !4355
  br i1 %cmp139, label %if.end175, label %lor.lhs.false141, !dbg !4356

lor.lhs.false141:                                 ; preds = %land.lhs.true138
  %120 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4357
  %codec_id142 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %120, i32 0, i32 4, !dbg !4358
  %121 = load i32, i32* %codec_id142, align 8, !dbg !4358
  %cmp143 = icmp eq i32 %121, 92, !dbg !4359
  br i1 %cmp143, label %if.end175, label %lor.lhs.false145, !dbg !4360

lor.lhs.false145:                                 ; preds = %lor.lhs.false141
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4361
  %codec_id146 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %122, i32 0, i32 4, !dbg !4362
  %123 = load i32, i32* %codec_id146, align 8, !dbg !4362
  %cmp147 = icmp eq i32 %123, 189, !dbg !4363
  br i1 %cmp147, label %if.end175, label %if.then149, !dbg !4364

if.then149:                                       ; preds = %lor.lhs.false145, %land.lhs.true136, %land.lhs.true134, %land.lhs.true132, %if.end130
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4366
  %coded_width150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %124, i32 0, i32 22, !dbg !4369
  %125 = load i32, i32* %coded_width150, align 4, !dbg !4369
  %tobool151 = icmp ne i32 %125, 0, !dbg !4366
  br i1 %tobool151, label %land.lhs.true152, label %if.else159, !dbg !4370

land.lhs.true152:                                 ; preds = %if.then149
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4371
  %coded_height153 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 23, !dbg !4373
  %127 = load i32, i32* %coded_height153, align 8, !dbg !4373
  %tobool154 = icmp ne i32 %127, 0, !dbg !4371
  br i1 %tobool154, label %if.then155, label %if.else159, !dbg !4374

if.then155:                                       ; preds = %land.lhs.true152
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4375
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4376
  %coded_width156 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 22, !dbg !4377
  %130 = load i32, i32* %coded_width156, align 4, !dbg !4377
  %131 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4378
  %coded_height157 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %131, i32 0, i32 23, !dbg !4379
  %132 = load i32, i32* %coded_height157, align 8, !dbg !4379
  %call158 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %128, i32 %130, i32 %132), !dbg !4380
  store i32 %call158, i32* %ret, align 4, !dbg !4381
  br label %if.end170, !dbg !4382

if.else159:                                       ; preds = %land.lhs.true152, %if.then149
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4383
  %width160 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %133, i32 0, i32 20, !dbg !4385
  %134 = load i32, i32* %width160, align 4, !dbg !4385
  %tobool161 = icmp ne i32 %134, 0, !dbg !4383
  br i1 %tobool161, label %land.lhs.true162, label %if.end169, !dbg !4386

land.lhs.true162:                                 ; preds = %if.else159
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4387
  %height163 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %135, i32 0, i32 21, !dbg !4389
  %136 = load i32, i32* %height163, align 8, !dbg !4389
  %tobool164 = icmp ne i32 %136, 0, !dbg !4387
  br i1 %tobool164, label %if.then165, label %if.end169, !dbg !4390

if.then165:                                       ; preds = %land.lhs.true162
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4391
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4392
  %width166 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %138, i32 0, i32 20, !dbg !4393
  %139 = load i32, i32* %width166, align 4, !dbg !4393
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4394
  %height167 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 21, !dbg !4395
  %141 = load i32, i32* %height167, align 8, !dbg !4395
  %call168 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %137, i32 %139, i32 %141), !dbg !4396
  store i32 %call168, i32* %ret, align 4, !dbg !4397
  br label %if.end169, !dbg !4398

if.end169:                                        ; preds = %if.then165, %land.lhs.true162, %if.else159
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then155
  %142 = load i32, i32* %ret, align 4, !dbg !4399
  %cmp171 = icmp slt i32 %142, 0, !dbg !4401
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !4402

if.then173:                                       ; preds = %if.end170
  br label %free_and_end, !dbg !4403

if.end174:                                        ; preds = %if.end170
  br label %if.end175, !dbg !4404

if.end175:                                        ; preds = %if.end174, %lor.lhs.false145, %lor.lhs.false141, %land.lhs.true138
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4405
  %coded_width176 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 22, !dbg !4407
  %144 = load i32, i32* %coded_width176, align 4, !dbg !4407
  %tobool177 = icmp ne i32 %144, 0, !dbg !4405
  br i1 %tobool177, label %land.lhs.true187, label %lor.lhs.false178, !dbg !4408

lor.lhs.false178:                                 ; preds = %if.end175
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4409
  %coded_height179 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %145, i32 0, i32 23, !dbg !4411
  %146 = load i32, i32* %coded_height179, align 8, !dbg !4411
  %tobool180 = icmp ne i32 %146, 0, !dbg !4409
  br i1 %tobool180, label %land.lhs.true187, label %lor.lhs.false181, !dbg !4412

lor.lhs.false181:                                 ; preds = %lor.lhs.false178
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4413
  %width182 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 20, !dbg !4415
  %148 = load i32, i32* %width182, align 4, !dbg !4415
  %tobool183 = icmp ne i32 %148, 0, !dbg !4413
  br i1 %tobool183, label %land.lhs.true187, label %lor.lhs.false184, !dbg !4416

lor.lhs.false184:                                 ; preds = %lor.lhs.false181
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4417
  %height185 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %149, i32 0, i32 21, !dbg !4419
  %150 = load i32, i32* %height185, align 8, !dbg !4419
  %tobool186 = icmp ne i32 %150, 0, !dbg !4417
  br i1 %tobool186, label %land.lhs.true187, label %if.end202, !dbg !4420

land.lhs.true187:                                 ; preds = %lor.lhs.false184, %lor.lhs.false181, %lor.lhs.false178, %if.end175
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4421
  %coded_width188 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %151, i32 0, i32 22, !dbg !4422
  %152 = load i32, i32* %coded_width188, align 4, !dbg !4422
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4423
  %coded_height189 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %153, i32 0, i32 23, !dbg !4424
  %154 = load i32, i32* %coded_height189, align 8, !dbg !4424
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4425
  %max_pixels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 185, !dbg !4426
  %156 = load i64, i64* %max_pixels, align 8, !dbg !4426
  %157 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4427
  %158 = bitcast %struct.AVCodecContext* %157 to i8*, !dbg !4427
  %call190 = call i32 @av_image_check_size2(i32 %152, i32 %154, i64 %156, i32 -1, i32 0, i8* %158), !dbg !4428
  %cmp191 = icmp slt i32 %call190, 0, !dbg !4429
  br i1 %cmp191, label %if.then200, label %lor.lhs.false193, !dbg !4430

lor.lhs.false193:                                 ; preds = %land.lhs.true187
  %159 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4431
  %width194 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %159, i32 0, i32 20, !dbg !4432
  %160 = load i32, i32* %width194, align 4, !dbg !4432
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4433
  %height195 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %161, i32 0, i32 21, !dbg !4434
  %162 = load i32, i32* %height195, align 8, !dbg !4434
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4435
  %max_pixels196 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %163, i32 0, i32 185, !dbg !4436
  %164 = load i64, i64* %max_pixels196, align 8, !dbg !4436
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4437
  %166 = bitcast %struct.AVCodecContext* %165 to i8*, !dbg !4437
  %call197 = call i32 @av_image_check_size2(i32 %160, i32 %162, i64 %164, i32 -1, i32 0, i8* %166), !dbg !4438
  %cmp198 = icmp slt i32 %call197, 0, !dbg !4439
  br i1 %cmp198, label %if.then200, label %if.end202, !dbg !4440

if.then200:                                       ; preds = %lor.lhs.false193, %land.lhs.true187
  %167 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4441
  %168 = bitcast %struct.AVCodecContext* %167 to i8*, !dbg !4441
  call void (i8*, i32, i8*, ...) @av_log(i8* %168, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0)), !dbg !4443
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4444
  %call201 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %169, i32 0, i32 0), !dbg !4445
  br label %if.end202, !dbg !4446

if.end202:                                        ; preds = %if.then200, %lor.lhs.false193, %lor.lhs.false184
  %170 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4447
  %width203 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %170, i32 0, i32 20, !dbg !4449
  %171 = load i32, i32* %width203, align 4, !dbg !4449
  %cmp204 = icmp sgt i32 %171, 0, !dbg !4450
  br i1 %cmp204, label %land.lhs.true206, label %if.end223, !dbg !4451

land.lhs.true206:                                 ; preds = %if.end202
  %172 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4452
  %height207 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %172, i32 0, i32 21, !dbg !4454
  %173 = load i32, i32* %height207, align 8, !dbg !4454
  %cmp208 = icmp sgt i32 %173, 0, !dbg !4455
  br i1 %cmp208, label %if.then210, label %if.end223, !dbg !4456

if.then210:                                       ; preds = %land.lhs.true206
  %174 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4457
  %width211 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %174, i32 0, i32 20, !dbg !4460
  %175 = load i32, i32* %width211, align 4, !dbg !4460
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4461
  %height212 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %176, i32 0, i32 21, !dbg !4462
  %177 = load i32, i32* %height212, align 8, !dbg !4462
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4463
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %178, i32 0, i32 44, !dbg !4464
  %179 = bitcast %struct.AVRational* %sample_aspect_ratio to i64*, !dbg !4465
  %180 = load i64, i64* %179, align 8, !dbg !4465
  %call213 = call i32 @av_image_check_sar(i32 %175, i32 %177, i64 %180), !dbg !4465
  %cmp214 = icmp slt i32 %call213, 0, !dbg !4466
  br i1 %cmp214, label %if.then216, label %if.end222, !dbg !4467

if.then216:                                       ; preds = %if.then210
  %181 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4468
  %182 = bitcast %struct.AVCodecContext* %181 to i8*, !dbg !4468
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4470
  %sample_aspect_ratio217 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %183, i32 0, i32 44, !dbg !4471
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio217, i32 0, i32 0, !dbg !4472
  %184 = load i32, i32* %num, align 8, !dbg !4472
  %185 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4473
  %sample_aspect_ratio218 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i32 0, i32 44, !dbg !4474
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio218, i32 0, i32 1, !dbg !4475
  %186 = load i32, i32* %den, align 4, !dbg !4475
  call void (i8*, i32, i8*, ...) @av_log(i8* %182, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i32 0, i32 0), i32 %184, i32 %186), !dbg !4476
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4477
  %sample_aspect_ratio219 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %187, i32 0, i32 44, !dbg !4478
  %num220 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !4479
  store i32 0, i32* %num220, align 4, !dbg !4479
  %den221 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !4479
  store i32 1, i32* %den221, align 4, !dbg !4479
  %188 = bitcast %struct.AVRational* %sample_aspect_ratio219 to i8*, !dbg !4480
  %189 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !4480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 4, i1 false), !dbg !4480
  br label %if.end222, !dbg !4481

if.end222:                                        ; preds = %if.then216, %if.then210
  br label %if.end223, !dbg !4482

if.end223:                                        ; preds = %if.end222, %land.lhs.true206, %if.end202
  %190 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4483
  %call224 = call i32 @av_codec_is_decoder(%struct.AVCodec* %190), !dbg !4485
  %tobool225 = icmp ne i32 %call224, 0, !dbg !4485
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !4486

if.then226:                                       ; preds = %if.end223
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4487
  %subtitle_header = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 158, !dbg !4488
  %192 = bitcast i8** %subtitle_header to i8*, !dbg !4489
  call void @av_freep(i8* %192), !dbg !4490
  br label %if.end227, !dbg !4490

if.end227:                                        ; preds = %if.then226, %if.end223
  %193 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4491
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %193, i32 0, i32 83, !dbg !4493
  %194 = load i32, i32* %channels, align 4, !dbg !4493
  %cmp228 = icmp ugt i32 %194, 256, !dbg !4494
  br i1 %cmp228, label %if.then230, label %if.end232, !dbg !4495

if.then230:                                       ; preds = %if.end227
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4496
  %196 = bitcast %struct.AVCodecContext* %195 to i8*, !dbg !4496
  %197 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4498
  %channels231 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %197, i32 0, i32 83, !dbg !4499
  %198 = load i32, i32* %channels231, align 4, !dbg !4499
  call void (i8*, i32, i8*, ...) @av_log(i8* %196, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i32 %198), !dbg !4500
  store i32 -22, i32* %ret, align 4, !dbg !4501
  br label %free_and_end, !dbg !4502

if.end232:                                        ; preds = %if.end227
  %199 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4503
  %200 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4504
  %codec233 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %200, i32 0, i32 3, !dbg !4505
  store %struct.AVCodec* %199, %struct.AVCodec** %codec233, align 8, !dbg !4506
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4507
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %201, i32 0, i32 2, !dbg !4509
  %202 = load i32, i32* %codec_type, align 4, !dbg !4509
  %cmp234 = icmp eq i32 %202, -1, !dbg !4510
  br i1 %cmp234, label %land.lhs.true240, label %lor.lhs.false236, !dbg !4511

lor.lhs.false236:                                 ; preds = %if.end232
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4512
  %codec_type237 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %203, i32 0, i32 2, !dbg !4514
  %204 = load i32, i32* %codec_type237, align 4, !dbg !4514
  %205 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4515
  %type = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %205, i32 0, i32 2, !dbg !4516
  %206 = load i32, i32* %type, align 8, !dbg !4516
  %cmp238 = icmp eq i32 %204, %206, !dbg !4517
  br i1 %cmp238, label %land.lhs.true240, label %if.end248, !dbg !4518

land.lhs.true240:                                 ; preds = %lor.lhs.false236, %if.end232
  %207 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4519
  %codec_id241 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %207, i32 0, i32 4, !dbg !4520
  %208 = load i32, i32* %codec_id241, align 8, !dbg !4520
  %cmp242 = icmp eq i32 %208, 0, !dbg !4521
  br i1 %cmp242, label %if.then244, label %if.end248, !dbg !4522

if.then244:                                       ; preds = %land.lhs.true240
  %209 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4524
  %type245 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %209, i32 0, i32 2, !dbg !4526
  %210 = load i32, i32* %type245, align 8, !dbg !4526
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4527
  %codec_type246 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 2, !dbg !4528
  store i32 %210, i32* %codec_type246, align 4, !dbg !4529
  %212 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4530
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %212, i32 0, i32 3, !dbg !4531
  %213 = load i32, i32* %id, align 4, !dbg !4531
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4532
  %codec_id247 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %214, i32 0, i32 4, !dbg !4533
  store i32 %213, i32* %codec_id247, align 8, !dbg !4534
  br label %if.end248, !dbg !4535

if.end248:                                        ; preds = %if.then244, %land.lhs.true240, %lor.lhs.false236
  %215 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4536
  %codec_id249 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %215, i32 0, i32 4, !dbg !4538
  %216 = load i32, i32* %codec_id249, align 8, !dbg !4538
  %217 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4539
  %id250 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %217, i32 0, i32 3, !dbg !4540
  %218 = load i32, i32* %id250, align 4, !dbg !4540
  %cmp251 = icmp ne i32 %216, %218, !dbg !4541
  br i1 %cmp251, label %if.then262, label %lor.lhs.false253, !dbg !4542

lor.lhs.false253:                                 ; preds = %if.end248
  %219 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4543
  %codec_type254 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %219, i32 0, i32 2, !dbg !4545
  %220 = load i32, i32* %codec_type254, align 4, !dbg !4545
  %221 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4546
  %type255 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %221, i32 0, i32 2, !dbg !4547
  %222 = load i32, i32* %type255, align 8, !dbg !4547
  %cmp256 = icmp ne i32 %220, %222, !dbg !4548
  br i1 %cmp256, label %land.lhs.true258, label %if.end263, !dbg !4549

land.lhs.true258:                                 ; preds = %lor.lhs.false253
  %223 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4550
  %codec_type259 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %223, i32 0, i32 2, !dbg !4551
  %224 = load i32, i32* %codec_type259, align 4, !dbg !4551
  %cmp260 = icmp ne i32 %224, 4, !dbg !4552
  br i1 %cmp260, label %if.then262, label %if.end263, !dbg !4553

if.then262:                                       ; preds = %land.lhs.true258, %if.end248
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4554
  %226 = bitcast %struct.AVCodecContext* %225 to i8*, !dbg !4554
  call void (i8*, i32, i8*, ...) @av_log(i8* %226, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0)), !dbg !4556
  store i32 -22, i32* %ret, align 4, !dbg !4557
  br label %free_and_end, !dbg !4558

if.end263:                                        ; preds = %land.lhs.true258, %lor.lhs.false253
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4559
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 86, !dbg !4560
  store i32 0, i32* %frame_number, align 8, !dbg !4561
  %228 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4562
  %codec_id264 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %228, i32 0, i32 4, !dbg !4563
  %229 = load i32, i32* %codec_id264, align 8, !dbg !4563
  %call265 = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %229), !dbg !4564
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4565
  %codec_descriptor = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %230, i32 0, i32 166, !dbg !4566
  store %struct.AVCodecDescriptor* %call265, %struct.AVCodecDescriptor** %codec_descriptor, align 8, !dbg !4567
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4568
  %codec266 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %231, i32 0, i32 3, !dbg !4570
  %232 = load %struct.AVCodec*, %struct.AVCodec** %codec266, align 8, !dbg !4570
  %capabilities = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %232, i32 0, i32 4, !dbg !4571
  %233 = load i32, i32* %capabilities, align 8, !dbg !4571
  %and = and i32 %233, 512, !dbg !4572
  %tobool267 = icmp ne i32 %and, 0, !dbg !4572
  br i1 %tobool267, label %land.lhs.true268, label %if.end290, !dbg !4573

land.lhs.true268:                                 ; preds = %if.end263
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4574
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %234, i32 0, i32 132, !dbg !4575
  %235 = load i32, i32* %strict_std_compliance, align 4, !dbg !4575
  %cmp269 = icmp sgt i32 %235, -2, !dbg !4576
  br i1 %cmp269, label %if.then271, label %if.end290, !dbg !4577

if.then271:                                       ; preds = %land.lhs.true268
  call void @llvm.dbg.declare(metadata i8** %codec_string, metadata !4579, metadata !1175), !dbg !4581
  %236 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4582
  %call273 = call i32 @av_codec_is_encoder(%struct.AVCodec* %236), !dbg !4583
  %tobool274 = icmp ne i32 %call273, 0, !dbg !4583
  %cond = select i1 %tobool274, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), !dbg !4583
  store i8* %cond, i8** %codec_string, align 8, !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec2, metadata !4584, metadata !1175), !dbg !4586
  %237 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4587
  %238 = bitcast %struct.AVCodecContext* %237 to i8*, !dbg !4587
  %239 = load i8*, i8** %codec_string, align 8, !dbg !4588
  %240 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4589
  %name276 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %240, i32 0, i32 0, !dbg !4590
  %241 = load i8*, i8** %name276, align 8, !dbg !4590
  call void (i8*, i32, i8*, ...) @av_log(i8* %238, i32 16, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.13, i32 0, i32 0), i8* %239, i8* %241, i32 -2), !dbg !4591
  %242 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4592
  %call277 = call i32 @av_codec_is_encoder(%struct.AVCodec* %242), !dbg !4593
  %tobool278 = icmp ne i32 %call277, 0, !dbg !4593
  br i1 %tobool278, label %cond.true, label %cond.false, !dbg !4593

cond.true:                                        ; preds = %if.then271
  %243 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4594
  %id279 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %243, i32 0, i32 3, !dbg !4596
  %244 = load i32, i32* %id279, align 4, !dbg !4596
  %call280 = call %struct.AVCodec* @avcodec_find_encoder(i32 %244), !dbg !4597
  br label %cond.end, !dbg !4598

cond.false:                                       ; preds = %if.then271
  %245 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4599
  %id281 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %245, i32 0, i32 3, !dbg !4601
  %246 = load i32, i32* %id281, align 4, !dbg !4601
  %call282 = call %struct.AVCodec* @avcodec_find_decoder(i32 %246), !dbg !4602
  br label %cond.end, !dbg !4603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond283 = phi %struct.AVCodec* [ %call280, %cond.true ], [ %call282, %cond.false ], !dbg !4604
  store %struct.AVCodec* %cond283, %struct.AVCodec** %codec2, align 8, !dbg !4606
  %247 = load %struct.AVCodec*, %struct.AVCodec** %codec2, align 8, !dbg !4607
  %capabilities284 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %247, i32 0, i32 4, !dbg !4609
  %248 = load i32, i32* %capabilities284, align 8, !dbg !4609
  %and285 = and i32 %248, 512, !dbg !4610
  %tobool286 = icmp ne i32 %and285, 0, !dbg !4610
  br i1 %tobool286, label %if.end289, label %if.then287, !dbg !4611

if.then287:                                       ; preds = %cond.end
  %249 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4612
  %250 = bitcast %struct.AVCodecContext* %249 to i8*, !dbg !4612
  %251 = load i8*, i8** %codec_string, align 8, !dbg !4613
  %252 = load %struct.AVCodec*, %struct.AVCodec** %codec2, align 8, !dbg !4614
  %name288 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %252, i32 0, i32 0, !dbg !4615
  %253 = load i8*, i8** %name288, align 8, !dbg !4615
  call void (i8*, i32, i8*, ...) @av_log(i8* %250, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i32 0, i32 0), i8* %251, i8* %253), !dbg !4616
  br label %if.end289, !dbg !4616

if.end289:                                        ; preds = %if.then287, %cond.end
  store i32 -733130664, i32* %ret, align 4, !dbg !4617
  br label %free_and_end, !dbg !4618

if.end290:                                        ; preds = %land.lhs.true268, %if.end263
  %254 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4619
  %codec_type291 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %254, i32 0, i32 2, !dbg !4621
  %255 = load i32, i32* %codec_type291, align 4, !dbg !4621
  %cmp292 = icmp eq i32 %255, 1, !dbg !4622
  br i1 %cmp292, label %land.lhs.true294, label %if.end306, !dbg !4623

land.lhs.true294:                                 ; preds = %if.end290
  %256 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4624
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %256, i32 0, i32 17, !dbg !4625
  %num295 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !4626
  %257 = load i32, i32* %num295, align 4, !dbg !4626
  %tobool296 = icmp ne i32 %257, 0, !dbg !4624
  br i1 %tobool296, label %lor.lhs.false297, label %if.then301, !dbg !4627

lor.lhs.false297:                                 ; preds = %land.lhs.true294
  %258 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4628
  %time_base298 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %258, i32 0, i32 17, !dbg !4630
  %den299 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base298, i32 0, i32 1, !dbg !4631
  %259 = load i32, i32* %den299, align 4, !dbg !4631
  %tobool300 = icmp ne i32 %259, 0, !dbg !4628
  br i1 %tobool300, label %if.end306, label %if.then301, !dbg !4632

if.then301:                                       ; preds = %lor.lhs.false297, %land.lhs.true294
  %260 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4633
  %time_base302 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %260, i32 0, i32 17, !dbg !4635
  %num303 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base302, i32 0, i32 0, !dbg !4636
  store i32 1, i32* %num303, align 4, !dbg !4637
  %261 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4638
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %261, i32 0, i32 82, !dbg !4639
  %262 = load i32, i32* %sample_rate, align 8, !dbg !4639
  %263 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4640
  %time_base304 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %263, i32 0, i32 17, !dbg !4641
  %den305 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base304, i32 0, i32 1, !dbg !4642
  store i32 %262, i32* %den305, align 4, !dbg !4643
  br label %if.end306, !dbg !4644

if.end306:                                        ; preds = %if.then301, %lor.lhs.false297, %if.end290
  %264 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4645
  %codec307 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %264, i32 0, i32 3, !dbg !4647
  %265 = load %struct.AVCodec*, %struct.AVCodec** %codec307, align 8, !dbg !4647
  %call308 = call i32 @av_codec_is_encoder(%struct.AVCodec* %265), !dbg !4648
  %tobool309 = icmp ne i32 %call308, 0, !dbg !4648
  br i1 %tobool309, label %if.then310, label %if.end321, !dbg !4649

if.then310:                                       ; preds = %if.end306
  %266 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4650
  call void @ff_unlock_avcodec(%struct.AVCodec* %266), !dbg !4652
  %267 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4653
  %268 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !4654
  %tobool311 = icmp ne %struct.AVDictionary** %268, null, !dbg !4654
  br i1 %tobool311, label %cond.true312, label %cond.false313, !dbg !4654

cond.true312:                                     ; preds = %if.then310
  %269 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !4655
  %270 = load %struct.AVDictionary*, %struct.AVDictionary** %269, align 8, !dbg !4657
  br label %cond.end314, !dbg !4658

cond.false313:                                    ; preds = %if.then310
  br label %cond.end314, !dbg !4659

cond.end314:                                      ; preds = %cond.false313, %cond.true312
  %cond315 = phi %struct.AVDictionary* [ %270, %cond.true312 ], [ null, %cond.false313 ], !dbg !4661
  %call316 = call i32 @ff_frame_thread_encoder_init(%struct.AVCodecContext* %267, %struct.AVDictionary* %cond315), !dbg !4663
  store i32 %call316, i32* %ret, align 4, !dbg !4664
  %271 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4665
  %272 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !4666
  call void @ff_lock_avcodec(%struct.AVCodecContext* %271, %struct.AVCodec* %272), !dbg !4667
  %273 = load i32, i32* %ret, align 4, !dbg !4668
  %cmp317 = icmp slt i32 %273, 0, !dbg !4670
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !4671

if.then319:                                       ; preds = %cond.end314
  br label %free_and_end, !dbg !4672

if.end320:                                        ; preds = %cond.end314
  br label %if.end321, !dbg !4673

if.end321:                                        ; preds = %if.end320, %if.end306
  %274 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4674
  %codec322 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %274, i32 0, i32 3, !dbg !4676
  %275 = load %struct.AVCodec*, %struct.AVCodec** %codec322, align 8, !dbg !4676
  %call323 = call i32 @av_codec_is_decoder(%struct.AVCodec* %275), !dbg !4677
  %tobool324 = icmp ne i32 %call323, 0, !dbg !4677
  br i1 %tobool324, label %if.then325, label %if.end331, !dbg !4678

if.then325:                                       ; preds = %if.end321
  %276 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4679
  %call326 = call i32 @ff_decode_bsfs_init(%struct.AVCodecContext* %276), !dbg !4681
  store i32 %call326, i32* %ret, align 4, !dbg !4682
  %277 = load i32, i32* %ret, align 4, !dbg !4683
  %cmp327 = icmp slt i32 %277, 0, !dbg !4685
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !4686

if.then329:                                       ; preds = %if.then325
  br label %free_and_end, !dbg !4687

if.end330:                                        ; preds = %if.then325
  br label %if.end331, !dbg !4688

if.end331:                                        ; preds = %if.end330, %if.end321
  %278 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4689
  %internal332 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %278, i32 0, i32 7, !dbg !4691
  %279 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal332, align 8, !dbg !4691
  %frame_thread_encoder = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %279, i32 0, i32 11, !dbg !4692
  %280 = load i8*, i8** %frame_thread_encoder, align 8, !dbg !4692
  %tobool333 = icmp ne i8* %280, null, !dbg !4689
  br i1 %tobool333, label %land.lhs.true334, label %if.then337, !dbg !4693

land.lhs.true334:                                 ; preds = %if.end331
  %281 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4694
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %281, i32 0, i32 148, !dbg !4696
  %282 = load i32, i32* %active_thread_type, align 8, !dbg !4696
  %and335 = and i32 %282, 1, !dbg !4697
  %tobool336 = icmp ne i32 %and335, 0, !dbg !4697
  br i1 %tobool336, label %if.end343, label %if.then337, !dbg !4698

if.then337:                                       ; preds = %land.lhs.true334, %if.end331
  %283 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4699
  %call338 = call i32 @ff_thread_init(%struct.AVCodecContext* %283), !dbg !4701
  store i32 %call338, i32* %ret, align 4, !dbg !4702
  %284 = load i32, i32* %ret, align 4, !dbg !4703
  %cmp339 = icmp slt i32 %284, 0, !dbg !4705
  br i1 %cmp339, label %if.then341, label %if.end342, !dbg !4706

if.then341:                                       ; preds = %if.then337
  br label %free_and_end, !dbg !4707

if.end342:                                        ; preds = %if.then337
  br label %if.end343, !dbg !4709

if.end343:                                        ; preds = %if.end342, %land.lhs.true334
  %285 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4710
  %codec344 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %285, i32 0, i32 3, !dbg !4712
  %286 = load %struct.AVCodec*, %struct.AVCodec** %codec344, align 8, !dbg !4712
  %max_lowres = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %286, i32 0, i32 10, !dbg !4713
  %287 = load i8, i8* %max_lowres, align 8, !dbg !4713
  %conv345 = zext i8 %287 to i32, !dbg !4710
  %288 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4714
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %288, i32 0, i32 144, !dbg !4715
  %289 = load i32, i32* %lowres, align 8, !dbg !4715
  %cmp346 = icmp slt i32 %conv345, %289, !dbg !4716
  br i1 %cmp346, label %if.then352, label %lor.lhs.false348, !dbg !4717

lor.lhs.false348:                                 ; preds = %if.end343
  %290 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4718
  %lowres349 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %290, i32 0, i32 144, !dbg !4720
  %291 = load i32, i32* %lowres349, align 8, !dbg !4720
  %cmp350 = icmp slt i32 %291, 0, !dbg !4721
  br i1 %cmp350, label %if.then352, label %if.end360, !dbg !4722

if.then352:                                       ; preds = %lor.lhs.false348, %if.end343
  %292 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4723
  %293 = bitcast %struct.AVCodecContext* %292 to i8*, !dbg !4723
  %294 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4725
  %codec353 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %294, i32 0, i32 3, !dbg !4726
  %295 = load %struct.AVCodec*, %struct.AVCodec** %codec353, align 8, !dbg !4726
  %max_lowres354 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %295, i32 0, i32 10, !dbg !4727
  %296 = load i8, i8* %max_lowres354, align 8, !dbg !4727
  %conv355 = zext i8 %296 to i32, !dbg !4725
  call void (i8*, i32, i8*, ...) @av_log(i8* %293, i32 24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15, i32 0, i32 0), i32 %conv355), !dbg !4728
  %297 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4729
  %codec356 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %297, i32 0, i32 3, !dbg !4730
  %298 = load %struct.AVCodec*, %struct.AVCodec** %codec356, align 8, !dbg !4730
  %max_lowres357 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %298, i32 0, i32 10, !dbg !4731
  %299 = load i8, i8* %max_lowres357, align 8, !dbg !4731
  %conv358 = zext i8 %299 to i32, !dbg !4729
  %300 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4732
  %lowres359 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %300, i32 0, i32 144, !dbg !4733
  store i32 %conv358, i32* %lowres359, align 8, !dbg !4734
  br label %if.end360, !dbg !4735

if.end360:                                        ; preds = %if.then352, %lor.lhs.false348
  %301 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4736
  %codec361 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %301, i32 0, i32 3, !dbg !4738
  %302 = load %struct.AVCodec*, %struct.AVCodec** %codec361, align 8, !dbg !4738
  %call362 = call i32 @av_codec_is_encoder(%struct.AVCodec* %302), !dbg !4739
  %tobool363 = icmp ne i32 %call362, 0, !dbg !4739
  br i1 %tobool363, label %if.then364, label %if.end740, !dbg !4740

if.then364:                                       ; preds = %if.end360
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4741, metadata !1175), !dbg !4743
  %call366 = call %struct.AVFrame* @av_frame_alloc(), !dbg !4744
  %303 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4745
  %coded_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %303, i32 0, i32 145, !dbg !4746
  store %struct.AVFrame* %call366, %struct.AVFrame** %coded_frame, align 8, !dbg !4747
  %304 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4748
  %coded_frame367 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %304, i32 0, i32 145, !dbg !4750
  %305 = load %struct.AVFrame*, %struct.AVFrame** %coded_frame367, align 8, !dbg !4750
  %tobool368 = icmp ne %struct.AVFrame* %305, null, !dbg !4748
  br i1 %tobool368, label %if.end370, label %if.then369, !dbg !4751

if.then369:                                       ; preds = %if.then364
  store i32 -12, i32* %ret, align 4, !dbg !4752
  br label %free_and_end, !dbg !4754

if.end370:                                        ; preds = %if.then364
  %306 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4755
  %time_base371 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %306, i32 0, i32 17, !dbg !4757
  %num372 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base371, i32 0, i32 0, !dbg !4758
  %307 = load i32, i32* %num372, align 4, !dbg !4758
  %cmp373 = icmp sle i32 %307, 0, !dbg !4759
  br i1 %cmp373, label %if.then380, label %lor.lhs.false375, !dbg !4760

lor.lhs.false375:                                 ; preds = %if.end370
  %308 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4761
  %time_base376 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %308, i32 0, i32 17, !dbg !4763
  %den377 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base376, i32 0, i32 1, !dbg !4764
  %309 = load i32, i32* %den377, align 4, !dbg !4764
  %cmp378 = icmp sle i32 %309, 0, !dbg !4765
  br i1 %cmp378, label %if.then380, label %if.end381, !dbg !4766

if.then380:                                       ; preds = %lor.lhs.false375, %if.end370
  %310 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4767
  %311 = bitcast %struct.AVCodecContext* %310 to i8*, !dbg !4767
  call void (i8*, i32, i8*, ...) @av_log(i8* %311, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i32 0, i32 0)), !dbg !4769
  store i32 -22, i32* %ret, align 4, !dbg !4770
  br label %free_and_end, !dbg !4771

if.end381:                                        ; preds = %lor.lhs.false375
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4772
  %codec382 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %312, i32 0, i32 3, !dbg !4774
  %313 = load %struct.AVCodec*, %struct.AVCodec** %codec382, align 8, !dbg !4774
  %sample_fmts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %313, i32 0, i32 8, !dbg !4775
  %314 = load i32*, i32** %sample_fmts, align 8, !dbg !4775
  %tobool383 = icmp ne i32* %314, null, !dbg !4772
  br i1 %tobool383, label %if.then384, label %if.end432, !dbg !4776

if.then384:                                       ; preds = %if.end381
  store i32 0, i32* %i, align 4, !dbg !4777
  br label %for.cond, !dbg !4780

for.cond:                                         ; preds = %for.inc, %if.then384
  %315 = load i32, i32* %i, align 4, !dbg !4781
  %idxprom = sext i32 %315 to i64, !dbg !4784
  %316 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4784
  %codec385 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %316, i32 0, i32 3, !dbg !4785
  %317 = load %struct.AVCodec*, %struct.AVCodec** %codec385, align 8, !dbg !4785
  %sample_fmts386 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %317, i32 0, i32 8, !dbg !4786
  %318 = load i32*, i32** %sample_fmts386, align 8, !dbg !4786
  %arrayidx = getelementptr inbounds i32, i32* %318, i64 %idxprom, !dbg !4784
  %319 = load i32, i32* %arrayidx, align 4, !dbg !4784
  %cmp387 = icmp ne i32 %319, -1, !dbg !4787
  br i1 %cmp387, label %for.body, label %for.end, !dbg !4788

for.body:                                         ; preds = %for.cond
  %320 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4789
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %320, i32 0, i32 84, !dbg !4792
  %321 = load i32, i32* %sample_fmt, align 8, !dbg !4792
  %322 = load i32, i32* %i, align 4, !dbg !4793
  %idxprom389 = sext i32 %322 to i64, !dbg !4794
  %323 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4794
  %codec390 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %323, i32 0, i32 3, !dbg !4795
  %324 = load %struct.AVCodec*, %struct.AVCodec** %codec390, align 8, !dbg !4795
  %sample_fmts391 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %324, i32 0, i32 8, !dbg !4796
  %325 = load i32*, i32** %sample_fmts391, align 8, !dbg !4796
  %arrayidx392 = getelementptr inbounds i32, i32* %325, i64 %idxprom389, !dbg !4794
  %326 = load i32, i32* %arrayidx392, align 4, !dbg !4794
  %cmp393 = icmp eq i32 %321, %326, !dbg !4797
  br i1 %cmp393, label %if.then395, label %if.end396, !dbg !4798

if.then395:                                       ; preds = %for.body
  br label %for.end, !dbg !4799

if.end396:                                        ; preds = %for.body
  %327 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4800
  %channels397 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %327, i32 0, i32 83, !dbg !4802
  %328 = load i32, i32* %channels397, align 4, !dbg !4802
  %cmp398 = icmp eq i32 %328, 1, !dbg !4803
  br i1 %cmp398, label %land.lhs.true400, label %if.end416, !dbg !4804

land.lhs.true400:                                 ; preds = %if.end396
  %329 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4805
  %sample_fmt401 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %329, i32 0, i32 84, !dbg !4806
  %330 = load i32, i32* %sample_fmt401, align 8, !dbg !4806
  %call402 = call i32 @av_get_planar_sample_fmt(i32 %330), !dbg !4807
  %331 = load i32, i32* %i, align 4, !dbg !4808
  %idxprom403 = sext i32 %331 to i64, !dbg !4809
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4809
  %codec404 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %332, i32 0, i32 3, !dbg !4810
  %333 = load %struct.AVCodec*, %struct.AVCodec** %codec404, align 8, !dbg !4810
  %sample_fmts405 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %333, i32 0, i32 8, !dbg !4811
  %334 = load i32*, i32** %sample_fmts405, align 8, !dbg !4811
  %arrayidx406 = getelementptr inbounds i32, i32* %334, i64 %idxprom403, !dbg !4809
  %335 = load i32, i32* %arrayidx406, align 4, !dbg !4809
  %call407 = call i32 @av_get_planar_sample_fmt(i32 %335), !dbg !4812
  %cmp408 = icmp eq i32 %call402, %call407, !dbg !4813
  br i1 %cmp408, label %if.then410, label %if.end416, !dbg !4814

if.then410:                                       ; preds = %land.lhs.true400
  %336 = load i32, i32* %i, align 4, !dbg !4816
  %idxprom411 = sext i32 %336 to i64, !dbg !4818
  %337 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4818
  %codec412 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %337, i32 0, i32 3, !dbg !4819
  %338 = load %struct.AVCodec*, %struct.AVCodec** %codec412, align 8, !dbg !4819
  %sample_fmts413 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %338, i32 0, i32 8, !dbg !4820
  %339 = load i32*, i32** %sample_fmts413, align 8, !dbg !4820
  %arrayidx414 = getelementptr inbounds i32, i32* %339, i64 %idxprom411, !dbg !4818
  %340 = load i32, i32* %arrayidx414, align 4, !dbg !4818
  %341 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4821
  %sample_fmt415 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %341, i32 0, i32 84, !dbg !4822
  store i32 %340, i32* %sample_fmt415, align 8, !dbg !4823
  br label %for.end, !dbg !4824

if.end416:                                        ; preds = %land.lhs.true400, %if.end396
  br label %for.inc, !dbg !4825

for.inc:                                          ; preds = %if.end416
  %342 = load i32, i32* %i, align 4, !dbg !4826
  %inc = add nsw i32 %342, 1, !dbg !4826
  store i32 %inc, i32* %i, align 4, !dbg !4826
  br label %for.cond, !dbg !4828, !llvm.loop !4829

for.end:                                          ; preds = %if.then410, %if.then395, %for.cond
  %343 = load i32, i32* %i, align 4, !dbg !4831
  %idxprom417 = sext i32 %343 to i64, !dbg !4833
  %344 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4833
  %codec418 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %344, i32 0, i32 3, !dbg !4834
  %345 = load %struct.AVCodec*, %struct.AVCodec** %codec418, align 8, !dbg !4834
  %sample_fmts419 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %345, i32 0, i32 8, !dbg !4835
  %346 = load i32*, i32** %sample_fmts419, align 8, !dbg !4835
  %arrayidx420 = getelementptr inbounds i32, i32* %346, i64 %idxprom417, !dbg !4833
  %347 = load i32, i32* %arrayidx420, align 4, !dbg !4833
  %cmp421 = icmp eq i32 %347, -1, !dbg !4836
  br i1 %cmp421, label %if.then423, label %if.end431, !dbg !4837

if.then423:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !4838, metadata !1175), !dbg !4843
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !4844
  %348 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4845
  %sample_fmt425 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %348, i32 0, i32 84, !dbg !4846
  %349 = load i32, i32* %sample_fmt425, align 8, !dbg !4846
  %call426 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i32 %349) #12, !dbg !4847
  %350 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4848
  %351 = bitcast %struct.AVCodecContext* %350 to i8*, !dbg !4848
  %352 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4849
  %sample_fmt427 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %352, i32 0, i32 84, !dbg !4850
  %353 = load i32, i32* %sample_fmt427, align 8, !dbg !4850
  %call428 = call i8* @av_get_sample_fmt_name(i32 %353), !dbg !4851
  %arraydecay429 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !4852
  %call430 = call i8* @av_x_if_null(i8* %call428, i8* %arraydecay429), !dbg !4853
  call void (i8*, i32, i8*, ...) @av_log(i8* %351, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i32 0, i32 0), i8* %call430), !dbg !4855
  store i32 -22, i32* %ret, align 4, !dbg !4856
  br label %free_and_end, !dbg !4857

if.end431:                                        ; preds = %for.end
  br label %if.end432, !dbg !4858

if.end432:                                        ; preds = %if.end431, %if.end381
  %354 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4859
  %codec433 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %354, i32 0, i32 3, !dbg !4861
  %355 = load %struct.AVCodec*, %struct.AVCodec** %codec433, align 8, !dbg !4861
  %pix_fmts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %355, i32 0, i32 6, !dbg !4862
  %356 = load i32*, i32** %pix_fmts, align 8, !dbg !4862
  %tobool434 = icmp ne i32* %356, null, !dbg !4859
  br i1 %tobool434, label %if.then435, label %if.end520, !dbg !4863

if.then435:                                       ; preds = %if.end432
  store i32 0, i32* %i, align 4, !dbg !4864
  br label %for.cond436, !dbg !4867

for.cond436:                                      ; preds = %for.inc452, %if.then435
  %357 = load i32, i32* %i, align 4, !dbg !4868
  %idxprom437 = sext i32 %357 to i64, !dbg !4871
  %358 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4871
  %codec438 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %358, i32 0, i32 3, !dbg !4872
  %359 = load %struct.AVCodec*, %struct.AVCodec** %codec438, align 8, !dbg !4872
  %pix_fmts439 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %359, i32 0, i32 6, !dbg !4873
  %360 = load i32*, i32** %pix_fmts439, align 8, !dbg !4873
  %arrayidx440 = getelementptr inbounds i32, i32* %360, i64 %idxprom437, !dbg !4871
  %361 = load i32, i32* %arrayidx440, align 4, !dbg !4871
  %cmp441 = icmp ne i32 %361, -1, !dbg !4874
  br i1 %cmp441, label %for.body443, label %for.end454, !dbg !4875

for.body443:                                      ; preds = %for.cond436
  %362 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4876
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %362, i32 0, i32 25, !dbg !4878
  %363 = load i32, i32* %pix_fmt, align 8, !dbg !4878
  %364 = load i32, i32* %i, align 4, !dbg !4879
  %idxprom444 = sext i32 %364 to i64, !dbg !4880
  %365 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4880
  %codec445 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %365, i32 0, i32 3, !dbg !4881
  %366 = load %struct.AVCodec*, %struct.AVCodec** %codec445, align 8, !dbg !4881
  %pix_fmts446 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %366, i32 0, i32 6, !dbg !4882
  %367 = load i32*, i32** %pix_fmts446, align 8, !dbg !4882
  %arrayidx447 = getelementptr inbounds i32, i32* %367, i64 %idxprom444, !dbg !4880
  %368 = load i32, i32* %arrayidx447, align 4, !dbg !4880
  %cmp448 = icmp eq i32 %363, %368, !dbg !4883
  br i1 %cmp448, label %if.then450, label %if.end451, !dbg !4884

if.then450:                                       ; preds = %for.body443
  br label %for.end454, !dbg !4885

if.end451:                                        ; preds = %for.body443
  br label %for.inc452, !dbg !4886

for.inc452:                                       ; preds = %if.end451
  %369 = load i32, i32* %i, align 4, !dbg !4888
  %inc453 = add nsw i32 %369, 1, !dbg !4888
  store i32 %inc453, i32* %i, align 4, !dbg !4888
  br label %for.cond436, !dbg !4890, !llvm.loop !4891

for.end454:                                       ; preds = %if.then450, %for.cond436
  %370 = load i32, i32* %i, align 4, !dbg !4893
  %idxprom455 = sext i32 %370 to i64, !dbg !4895
  %371 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4895
  %codec456 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %371, i32 0, i32 3, !dbg !4896
  %372 = load %struct.AVCodec*, %struct.AVCodec** %codec456, align 8, !dbg !4896
  %pix_fmts457 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %372, i32 0, i32 6, !dbg !4897
  %373 = load i32*, i32** %pix_fmts457, align 8, !dbg !4897
  %arrayidx458 = getelementptr inbounds i32, i32* %373, i64 %idxprom455, !dbg !4895
  %374 = load i32, i32* %arrayidx458, align 4, !dbg !4895
  %cmp459 = icmp eq i32 %374, -1, !dbg !4898
  br i1 %cmp459, label %land.lhs.true461, label %if.end483, !dbg !4899

land.lhs.true461:                                 ; preds = %for.end454
  %375 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4900
  %codec_id462 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %375, i32 0, i32 4, !dbg !4902
  %376 = load i32, i32* %codec_id462, align 8, !dbg !4902
  %cmp463 = icmp eq i32 %376, 7, !dbg !4903
  br i1 %cmp463, label %land.lhs.true469, label %lor.lhs.false465, !dbg !4904

lor.lhs.false465:                                 ; preds = %land.lhs.true461
  %377 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4905
  %codec_id466 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %377, i32 0, i32 4, !dbg !4907
  %378 = load i32, i32* %codec_id466, align 8, !dbg !4907
  %cmp467 = icmp eq i32 %378, 9, !dbg !4908
  br i1 %cmp467, label %land.lhs.true469, label %if.then473, !dbg !4909

land.lhs.true469:                                 ; preds = %lor.lhs.false465, %land.lhs.true461
  %379 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4910
  %strict_std_compliance470 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %379, i32 0, i32 132, !dbg !4911
  %380 = load i32, i32* %strict_std_compliance470, align 4, !dbg !4911
  %cmp471 = icmp sle i32 %380, -1, !dbg !4912
  br i1 %cmp471, label %if.end483, label %if.then473, !dbg !4913

if.then473:                                       ; preds = %land.lhs.true469, %lor.lhs.false465
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf475, metadata !4915, metadata !1175), !dbg !4917
  %arraydecay476 = getelementptr inbounds [128 x i8], [128 x i8]* %buf475, i32 0, i32 0, !dbg !4918
  %381 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4919
  %pix_fmt477 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %381, i32 0, i32 25, !dbg !4920
  %382 = load i32, i32* %pix_fmt477, align 8, !dbg !4920
  %call478 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay476, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i32 %382) #12, !dbg !4921
  %383 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4922
  %384 = bitcast %struct.AVCodecContext* %383 to i8*, !dbg !4922
  %385 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4923
  %pix_fmt479 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %385, i32 0, i32 25, !dbg !4924
  %386 = load i32, i32* %pix_fmt479, align 8, !dbg !4924
  %call480 = call i8* @av_get_pix_fmt_name(i32 %386), !dbg !4925
  %arraydecay481 = getelementptr inbounds [128 x i8], [128 x i8]* %buf475, i32 0, i32 0, !dbg !4926
  %call482 = call i8* @av_x_if_null(i8* %call480, i8* %arraydecay481), !dbg !4927
  call void (i8*, i32, i8*, ...) @av_log(i8* %384, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i32 0, i32 0), i8* %call482), !dbg !4929
  store i32 -22, i32* %ret, align 4, !dbg !4930
  br label %free_and_end, !dbg !4931

if.end483:                                        ; preds = %land.lhs.true469, %for.end454
  %387 = load i32, i32* %i, align 4, !dbg !4932
  %idxprom484 = sext i32 %387 to i64, !dbg !4934
  %388 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4934
  %codec485 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %388, i32 0, i32 3, !dbg !4935
  %389 = load %struct.AVCodec*, %struct.AVCodec** %codec485, align 8, !dbg !4935
  %pix_fmts486 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %389, i32 0, i32 6, !dbg !4936
  %390 = load i32*, i32** %pix_fmts486, align 8, !dbg !4936
  %arrayidx487 = getelementptr inbounds i32, i32* %390, i64 %idxprom484, !dbg !4934
  %391 = load i32, i32* %arrayidx487, align 4, !dbg !4934
  %cmp488 = icmp eq i32 %391, 12, !dbg !4937
  br i1 %cmp488, label %if.then518, label %lor.lhs.false490, !dbg !4938

lor.lhs.false490:                                 ; preds = %if.end483
  %392 = load i32, i32* %i, align 4, !dbg !4939
  %idxprom491 = sext i32 %392 to i64, !dbg !4940
  %393 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4940
  %codec492 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %393, i32 0, i32 3, !dbg !4941
  %394 = load %struct.AVCodec*, %struct.AVCodec** %codec492, align 8, !dbg !4941
  %pix_fmts493 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %394, i32 0, i32 6, !dbg !4942
  %395 = load i32*, i32** %pix_fmts493, align 8, !dbg !4942
  %arrayidx494 = getelementptr inbounds i32, i32* %395, i64 %idxprom491, !dbg !4940
  %396 = load i32, i32* %arrayidx494, align 4, !dbg !4940
  %cmp495 = icmp eq i32 %396, 140, !dbg !4943
  br i1 %cmp495, label %if.then518, label %lor.lhs.false497, !dbg !4944

lor.lhs.false497:                                 ; preds = %lor.lhs.false490
  %397 = load i32, i32* %i, align 4, !dbg !4945
  %idxprom498 = sext i32 %397 to i64, !dbg !4946
  %398 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4946
  %codec499 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %398, i32 0, i32 3, !dbg !4947
  %399 = load %struct.AVCodec*, %struct.AVCodec** %codec499, align 8, !dbg !4947
  %pix_fmts500 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %399, i32 0, i32 6, !dbg !4948
  %400 = load i32*, i32** %pix_fmts500, align 8, !dbg !4948
  %arrayidx501 = getelementptr inbounds i32, i32* %400, i64 %idxprom498, !dbg !4946
  %401 = load i32, i32* %arrayidx501, align 4, !dbg !4946
  %cmp502 = icmp eq i32 %401, 13, !dbg !4949
  br i1 %cmp502, label %if.then518, label %lor.lhs.false504, !dbg !4950

lor.lhs.false504:                                 ; preds = %lor.lhs.false497
  %402 = load i32, i32* %i, align 4, !dbg !4951
  %idxprom505 = sext i32 %402 to i64, !dbg !4952
  %403 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4952
  %codec506 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %403, i32 0, i32 3, !dbg !4953
  %404 = load %struct.AVCodec*, %struct.AVCodec** %codec506, align 8, !dbg !4953
  %pix_fmts507 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %404, i32 0, i32 6, !dbg !4954
  %405 = load i32*, i32** %pix_fmts507, align 8, !dbg !4954
  %arrayidx508 = getelementptr inbounds i32, i32* %405, i64 %idxprom505, !dbg !4952
  %406 = load i32, i32* %arrayidx508, align 4, !dbg !4952
  %cmp509 = icmp eq i32 %406, 32, !dbg !4955
  br i1 %cmp509, label %if.then518, label %lor.lhs.false511, !dbg !4956

lor.lhs.false511:                                 ; preds = %lor.lhs.false504
  %407 = load i32, i32* %i, align 4, !dbg !4957
  %idxprom512 = sext i32 %407 to i64, !dbg !4958
  %408 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4958
  %codec513 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %408, i32 0, i32 3, !dbg !4959
  %409 = load %struct.AVCodec*, %struct.AVCodec** %codec513, align 8, !dbg !4959
  %pix_fmts514 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %409, i32 0, i32 6, !dbg !4960
  %410 = load i32*, i32** %pix_fmts514, align 8, !dbg !4960
  %arrayidx515 = getelementptr inbounds i32, i32* %410, i64 %idxprom512, !dbg !4958
  %411 = load i32, i32* %arrayidx515, align 4, !dbg !4958
  %cmp516 = icmp eq i32 %411, 14, !dbg !4961
  br i1 %cmp516, label %if.then518, label %if.end519, !dbg !4962

if.then518:                                       ; preds = %lor.lhs.false511, %lor.lhs.false504, %lor.lhs.false497, %lor.lhs.false490, %if.end483
  %412 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4963
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %412, i32 0, i32 78, !dbg !4964
  store i32 2, i32* %color_range, align 8, !dbg !4965
  br label %if.end519, !dbg !4963

if.end519:                                        ; preds = %if.then518, %lor.lhs.false511
  br label %if.end520, !dbg !4966

if.end520:                                        ; preds = %if.end519, %if.end432
  %413 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4967
  %codec521 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %413, i32 0, i32 3, !dbg !4969
  %414 = load %struct.AVCodec*, %struct.AVCodec** %codec521, align 8, !dbg !4969
  %supported_samplerates = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %414, i32 0, i32 7, !dbg !4970
  %415 = load i32*, i32** %supported_samplerates, align 8, !dbg !4970
  %tobool522 = icmp ne i32* %415, null, !dbg !4967
  br i1 %tobool522, label %if.then523, label %if.end553, !dbg !4971

if.then523:                                       ; preds = %if.end520
  store i32 0, i32* %i, align 4, !dbg !4972
  br label %for.cond524, !dbg !4975

for.cond524:                                      ; preds = %for.inc541, %if.then523
  %416 = load i32, i32* %i, align 4, !dbg !4976
  %idxprom525 = sext i32 %416 to i64, !dbg !4979
  %417 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4979
  %codec526 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %417, i32 0, i32 3, !dbg !4980
  %418 = load %struct.AVCodec*, %struct.AVCodec** %codec526, align 8, !dbg !4980
  %supported_samplerates527 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %418, i32 0, i32 7, !dbg !4981
  %419 = load i32*, i32** %supported_samplerates527, align 8, !dbg !4981
  %arrayidx528 = getelementptr inbounds i32, i32* %419, i64 %idxprom525, !dbg !4979
  %420 = load i32, i32* %arrayidx528, align 4, !dbg !4979
  %cmp529 = icmp ne i32 %420, 0, !dbg !4982
  br i1 %cmp529, label %for.body531, label %for.end543, !dbg !4983

for.body531:                                      ; preds = %for.cond524
  %421 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4984
  %sample_rate532 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %421, i32 0, i32 82, !dbg !4986
  %422 = load i32, i32* %sample_rate532, align 8, !dbg !4986
  %423 = load i32, i32* %i, align 4, !dbg !4987
  %idxprom533 = sext i32 %423 to i64, !dbg !4988
  %424 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4988
  %codec534 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %424, i32 0, i32 3, !dbg !4989
  %425 = load %struct.AVCodec*, %struct.AVCodec** %codec534, align 8, !dbg !4989
  %supported_samplerates535 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %425, i32 0, i32 7, !dbg !4990
  %426 = load i32*, i32** %supported_samplerates535, align 8, !dbg !4990
  %arrayidx536 = getelementptr inbounds i32, i32* %426, i64 %idxprom533, !dbg !4988
  %427 = load i32, i32* %arrayidx536, align 4, !dbg !4988
  %cmp537 = icmp eq i32 %422, %427, !dbg !4991
  br i1 %cmp537, label %if.then539, label %if.end540, !dbg !4992

if.then539:                                       ; preds = %for.body531
  br label %for.end543, !dbg !4993

if.end540:                                        ; preds = %for.body531
  br label %for.inc541, !dbg !4994

for.inc541:                                       ; preds = %if.end540
  %428 = load i32, i32* %i, align 4, !dbg !4996
  %inc542 = add nsw i32 %428, 1, !dbg !4996
  store i32 %inc542, i32* %i, align 4, !dbg !4996
  br label %for.cond524, !dbg !4998, !llvm.loop !4999

for.end543:                                       ; preds = %if.then539, %for.cond524
  %429 = load i32, i32* %i, align 4, !dbg !5001
  %idxprom544 = sext i32 %429 to i64, !dbg !5003
  %430 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5003
  %codec545 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %430, i32 0, i32 3, !dbg !5004
  %431 = load %struct.AVCodec*, %struct.AVCodec** %codec545, align 8, !dbg !5004
  %supported_samplerates546 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %431, i32 0, i32 7, !dbg !5005
  %432 = load i32*, i32** %supported_samplerates546, align 8, !dbg !5005
  %arrayidx547 = getelementptr inbounds i32, i32* %432, i64 %idxprom544, !dbg !5003
  %433 = load i32, i32* %arrayidx547, align 4, !dbg !5003
  %cmp548 = icmp eq i32 %433, 0, !dbg !5006
  br i1 %cmp548, label %if.then550, label %if.end552, !dbg !5007

if.then550:                                       ; preds = %for.end543
  %434 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5008
  %435 = bitcast %struct.AVCodecContext* %434 to i8*, !dbg !5008
  %436 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5010
  %sample_rate551 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %436, i32 0, i32 82, !dbg !5011
  %437 = load i32, i32* %sample_rate551, align 8, !dbg !5011
  call void (i8*, i32, i8*, ...) @av_log(i8* %435, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i32 0, i32 0), i32 %437), !dbg !5012
  store i32 -22, i32* %ret, align 4, !dbg !5013
  br label %free_and_end, !dbg !5014

if.end552:                                        ; preds = %for.end543
  br label %if.end553, !dbg !5015

if.end553:                                        ; preds = %if.end552, %if.end520
  %438 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5016
  %sample_rate554 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %438, i32 0, i32 82, !dbg !5018
  %439 = load i32, i32* %sample_rate554, align 8, !dbg !5018
  %cmp555 = icmp slt i32 %439, 0, !dbg !5019
  br i1 %cmp555, label %if.then557, label %if.end559, !dbg !5020

if.then557:                                       ; preds = %if.end553
  %440 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5021
  %441 = bitcast %struct.AVCodecContext* %440 to i8*, !dbg !5021
  %442 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5023
  %sample_rate558 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %442, i32 0, i32 82, !dbg !5024
  %443 = load i32, i32* %sample_rate558, align 8, !dbg !5024
  call void (i8*, i32, i8*, ...) @av_log(i8* %441, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i32 0, i32 0), i32 %443), !dbg !5025
  store i32 -22, i32* %ret, align 4, !dbg !5026
  br label %free_and_end, !dbg !5027

if.end559:                                        ; preds = %if.end553
  %444 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5028
  %codec560 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %444, i32 0, i32 3, !dbg !5030
  %445 = load %struct.AVCodec*, %struct.AVCodec** %codec560, align 8, !dbg !5030
  %channel_layouts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %445, i32 0, i32 9, !dbg !5031
  %446 = load i64*, i64** %channel_layouts, align 8, !dbg !5031
  %tobool561 = icmp ne i64* %446, null, !dbg !5028
  br i1 %tobool561, label %if.then562, label %if.end600, !dbg !5032

if.then562:                                       ; preds = %if.end559
  %447 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5033
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %447, i32 0, i32 89, !dbg !5036
  %448 = load i64, i64* %channel_layout, align 8, !dbg !5036
  %tobool563 = icmp ne i64 %448, 0, !dbg !5033
  br i1 %tobool563, label %if.else565, label %if.then564, !dbg !5037

if.then564:                                       ; preds = %if.then562
  %449 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5038
  %450 = bitcast %struct.AVCodecContext* %449 to i8*, !dbg !5038
  call void (i8*, i32, i8*, ...) @av_log(i8* %450, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i32 0, i32 0)), !dbg !5040
  br label %if.end599, !dbg !5041

if.else565:                                       ; preds = %if.then562
  store i32 0, i32* %i, align 4, !dbg !5042
  br label %for.cond566, !dbg !5045

for.cond566:                                      ; preds = %for.inc583, %if.else565
  %451 = load i32, i32* %i, align 4, !dbg !5046
  %idxprom567 = sext i32 %451 to i64, !dbg !5049
  %452 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5049
  %codec568 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %452, i32 0, i32 3, !dbg !5050
  %453 = load %struct.AVCodec*, %struct.AVCodec** %codec568, align 8, !dbg !5050
  %channel_layouts569 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %453, i32 0, i32 9, !dbg !5051
  %454 = load i64*, i64** %channel_layouts569, align 8, !dbg !5051
  %arrayidx570 = getelementptr inbounds i64, i64* %454, i64 %idxprom567, !dbg !5049
  %455 = load i64, i64* %arrayidx570, align 8, !dbg !5049
  %cmp571 = icmp ne i64 %455, 0, !dbg !5052
  br i1 %cmp571, label %for.body573, label %for.end585, !dbg !5053

for.body573:                                      ; preds = %for.cond566
  %456 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5054
  %channel_layout574 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %456, i32 0, i32 89, !dbg !5056
  %457 = load i64, i64* %channel_layout574, align 8, !dbg !5056
  %458 = load i32, i32* %i, align 4, !dbg !5057
  %idxprom575 = sext i32 %458 to i64, !dbg !5058
  %459 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5058
  %codec576 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %459, i32 0, i32 3, !dbg !5059
  %460 = load %struct.AVCodec*, %struct.AVCodec** %codec576, align 8, !dbg !5059
  %channel_layouts577 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %460, i32 0, i32 9, !dbg !5060
  %461 = load i64*, i64** %channel_layouts577, align 8, !dbg !5060
  %arrayidx578 = getelementptr inbounds i64, i64* %461, i64 %idxprom575, !dbg !5058
  %462 = load i64, i64* %arrayidx578, align 8, !dbg !5058
  %cmp579 = icmp eq i64 %457, %462, !dbg !5061
  br i1 %cmp579, label %if.then581, label %if.end582, !dbg !5062

if.then581:                                       ; preds = %for.body573
  br label %for.end585, !dbg !5063

if.end582:                                        ; preds = %for.body573
  br label %for.inc583, !dbg !5064

for.inc583:                                       ; preds = %if.end582
  %463 = load i32, i32* %i, align 4, !dbg !5066
  %inc584 = add nsw i32 %463, 1, !dbg !5066
  store i32 %inc584, i32* %i, align 4, !dbg !5066
  br label %for.cond566, !dbg !5068, !llvm.loop !5069

for.end585:                                       ; preds = %if.then581, %for.cond566
  %464 = load i32, i32* %i, align 4, !dbg !5071
  %idxprom586 = sext i32 %464 to i64, !dbg !5073
  %465 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5073
  %codec587 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %465, i32 0, i32 3, !dbg !5074
  %466 = load %struct.AVCodec*, %struct.AVCodec** %codec587, align 8, !dbg !5074
  %channel_layouts588 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %466, i32 0, i32 9, !dbg !5075
  %467 = load i64*, i64** %channel_layouts588, align 8, !dbg !5075
  %arrayidx589 = getelementptr inbounds i64, i64* %467, i64 %idxprom586, !dbg !5073
  %468 = load i64, i64* %arrayidx589, align 8, !dbg !5073
  %cmp590 = icmp eq i64 %468, 0, !dbg !5076
  br i1 %cmp590, label %if.then592, label %if.end598, !dbg !5077

if.then592:                                       ; preds = %for.end585
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf594, metadata !5078, metadata !1175), !dbg !5083
  %arraydecay595 = getelementptr inbounds [512 x i8], [512 x i8]* %buf594, i32 0, i32 0, !dbg !5084
  %469 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5085
  %channel_layout596 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %469, i32 0, i32 89, !dbg !5086
  %470 = load i64, i64* %channel_layout596, align 8, !dbg !5086
  call void @av_get_channel_layout_string(i8* %arraydecay595, i32 512, i32 -1, i64 %470), !dbg !5087
  %471 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5088
  %472 = bitcast %struct.AVCodecContext* %471 to i8*, !dbg !5088
  %arraydecay597 = getelementptr inbounds [512 x i8], [512 x i8]* %buf594, i32 0, i32 0, !dbg !5089
  call void (i8*, i32, i8*, ...) @av_log(i8* %472, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i32 0, i32 0), i8* %arraydecay597), !dbg !5090
  store i32 -22, i32* %ret, align 4, !dbg !5091
  br label %free_and_end, !dbg !5092

if.end598:                                        ; preds = %for.end585
  br label %if.end599

if.end599:                                        ; preds = %if.end598, %if.then564
  br label %if.end600, !dbg !5093

if.end600:                                        ; preds = %if.end599, %if.end559
  %473 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5094
  %channel_layout601 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %473, i32 0, i32 89, !dbg !5096
  %474 = load i64, i64* %channel_layout601, align 8, !dbg !5096
  %tobool602 = icmp ne i64 %474, 0, !dbg !5094
  br i1 %tobool602, label %land.lhs.true603, label %if.else622, !dbg !5097

land.lhs.true603:                                 ; preds = %if.end600
  %475 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5098
  %channels604 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %475, i32 0, i32 83, !dbg !5100
  %476 = load i32, i32* %channels604, align 4, !dbg !5100
  %tobool605 = icmp ne i32 %476, 0, !dbg !5098
  br i1 %tobool605, label %if.then606, label %if.else622, !dbg !5101

if.then606:                                       ; preds = %land.lhs.true603
  call void @llvm.dbg.declare(metadata i32* %channels608, metadata !5102, metadata !1175), !dbg !5104
  %477 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5105
  %channel_layout609 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %477, i32 0, i32 89, !dbg !5106
  %478 = load i64, i64* %channel_layout609, align 8, !dbg !5106
  %call610 = call i32 @av_get_channel_layout_nb_channels(i64 %478), !dbg !5107
  store i32 %call610, i32* %channels608, align 4, !dbg !5104
  %479 = load i32, i32* %channels608, align 4, !dbg !5108
  %480 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5110
  %channels611 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %480, i32 0, i32 83, !dbg !5111
  %481 = load i32, i32* %channels611, align 4, !dbg !5111
  %cmp612 = icmp ne i32 %479, %481, !dbg !5112
  br i1 %cmp612, label %if.then614, label %if.end621, !dbg !5113

if.then614:                                       ; preds = %if.then606
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf616, metadata !5114, metadata !1175), !dbg !5116
  %arraydecay617 = getelementptr inbounds [512 x i8], [512 x i8]* %buf616, i32 0, i32 0, !dbg !5117
  %482 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5118
  %channel_layout618 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %482, i32 0, i32 89, !dbg !5119
  %483 = load i64, i64* %channel_layout618, align 8, !dbg !5119
  call void @av_get_channel_layout_string(i8* %arraydecay617, i32 512, i32 -1, i64 %483), !dbg !5120
  %484 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5121
  %485 = bitcast %struct.AVCodecContext* %484 to i8*, !dbg !5121
  %arraydecay619 = getelementptr inbounds [512 x i8], [512 x i8]* %buf616, i32 0, i32 0, !dbg !5122
  %486 = load i32, i32* %channels608, align 4, !dbg !5123
  %487 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5124
  %channels620 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %487, i32 0, i32 83, !dbg !5125
  %488 = load i32, i32* %channels620, align 4, !dbg !5125
  call void (i8*, i32, i8*, ...) @av_log(i8* %485, i32 16, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.23, i32 0, i32 0), i8* %arraydecay619, i32 %486, i32 %488), !dbg !5126
  store i32 -22, i32* %ret, align 4, !dbg !5127
  br label %free_and_end, !dbg !5128

if.end621:                                        ; preds = %if.then606
  br label %if.end630, !dbg !5129

if.else622:                                       ; preds = %land.lhs.true603, %if.end600
  %489 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5130
  %channel_layout623 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %489, i32 0, i32 89, !dbg !5133
  %490 = load i64, i64* %channel_layout623, align 8, !dbg !5133
  %tobool624 = icmp ne i64 %490, 0, !dbg !5130
  br i1 %tobool624, label %if.then625, label %if.end629, !dbg !5130

if.then625:                                       ; preds = %if.else622
  %491 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5134
  %channel_layout626 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %491, i32 0, i32 89, !dbg !5136
  %492 = load i64, i64* %channel_layout626, align 8, !dbg !5136
  %call627 = call i32 @av_get_channel_layout_nb_channels(i64 %492), !dbg !5137
  %493 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5138
  %channels628 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %493, i32 0, i32 83, !dbg !5139
  store i32 %call627, i32* %channels628, align 4, !dbg !5140
  br label %if.end629, !dbg !5141

if.end629:                                        ; preds = %if.then625, %if.else622
  br label %if.end630

if.end630:                                        ; preds = %if.end629, %if.end621
  %494 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5142
  %channels631 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %494, i32 0, i32 83, !dbg !5144
  %495 = load i32, i32* %channels631, align 4, !dbg !5144
  %cmp632 = icmp slt i32 %495, 0, !dbg !5145
  br i1 %cmp632, label %if.then634, label %if.end636, !dbg !5146

if.then634:                                       ; preds = %if.end630
  %496 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5147
  %497 = bitcast %struct.AVCodecContext* %496 to i8*, !dbg !5147
  %498 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5149
  %channels635 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %498, i32 0, i32 83, !dbg !5150
  %499 = load i32, i32* %channels635, align 4, !dbg !5150
  call void (i8*, i32, i8*, ...) @av_log(i8* %497, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.24, i32 0, i32 0), i32 %499), !dbg !5151
  store i32 -22, i32* %ret, align 4, !dbg !5152
  br label %free_and_end, !dbg !5153

if.end636:                                        ; preds = %if.end630
  %500 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5154
  %codec_type637 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %500, i32 0, i32 2, !dbg !5156
  %501 = load i32, i32* %codec_type637, align 4, !dbg !5156
  %cmp638 = icmp eq i32 %501, 0, !dbg !5157
  br i1 %cmp638, label %if.then640, label %if.end672, !dbg !5158

if.then640:                                       ; preds = %if.end636
  %502 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5159
  %pix_fmt641 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %502, i32 0, i32 25, !dbg !5161
  %503 = load i32, i32* %pix_fmt641, align 8, !dbg !5161
  %call642 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %503), !dbg !5162
  store %struct.AVPixFmtDescriptor* %call642, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !5163
  %504 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5164
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %504, i32 0, i32 143, !dbg !5166
  %505 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !5166
  %cmp643 = icmp slt i32 %505, 0, !dbg !5167
  br i1 %cmp643, label %if.then653, label %lor.lhs.false645, !dbg !5168

lor.lhs.false645:                                 ; preds = %if.then640
  %506 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5169
  %bits_per_raw_sample646 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %506, i32 0, i32 143, !dbg !5171
  %507 = load i32, i32* %bits_per_raw_sample646, align 4, !dbg !5171
  %cmp647 = icmp sgt i32 %507, 8, !dbg !5172
  br i1 %cmp647, label %land.lhs.true649, label %if.end662, !dbg !5173

land.lhs.true649:                                 ; preds = %lor.lhs.false645
  %508 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !5174
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %508, i32 0, i32 5, !dbg !5176
  %arrayidx650 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !5174
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx650, i32 0, i32 4, !dbg !5177
  %509 = load i32, i32* %depth, align 8, !dbg !5177
  %cmp651 = icmp sle i32 %509, 8, !dbg !5178
  br i1 %cmp651, label %if.then653, label %if.end662, !dbg !5179

if.then653:                                       ; preds = %land.lhs.true649, %if.then640
  %510 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5181
  %511 = bitcast %struct.AVCodecContext* %510 to i8*, !dbg !5181
  %512 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5183
  %bits_per_raw_sample654 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %512, i32 0, i32 143, !dbg !5184
  %513 = load i32, i32* %bits_per_raw_sample654, align 4, !dbg !5184
  %514 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !5185
  %comp655 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %514, i32 0, i32 5, !dbg !5186
  %arrayidx656 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp655, i64 0, i64 0, !dbg !5185
  %depth657 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx656, i32 0, i32 4, !dbg !5187
  %515 = load i32, i32* %depth657, align 8, !dbg !5187
  call void (i8*, i32, i8*, ...) @av_log(i8* %511, i32 24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.25, i32 0, i32 0), i32 %513, i32 %515), !dbg !5188
  %516 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !5189
  %comp658 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %516, i32 0, i32 5, !dbg !5190
  %arrayidx659 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp658, i64 0, i64 0, !dbg !5189
  %depth660 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx659, i32 0, i32 4, !dbg !5191
  %517 = load i32, i32* %depth660, align 8, !dbg !5191
  %518 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5192
  %bits_per_raw_sample661 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %518, i32 0, i32 143, !dbg !5193
  store i32 %517, i32* %bits_per_raw_sample661, align 4, !dbg !5194
  br label %if.end662, !dbg !5195

if.end662:                                        ; preds = %if.then653, %land.lhs.true649, %lor.lhs.false645
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5196
  %width663 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %519, i32 0, i32 20, !dbg !5198
  %520 = load i32, i32* %width663, align 4, !dbg !5198
  %cmp664 = icmp sle i32 %520, 0, !dbg !5199
  br i1 %cmp664, label %if.then670, label %lor.lhs.false666, !dbg !5200

lor.lhs.false666:                                 ; preds = %if.end662
  %521 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5201
  %height667 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %521, i32 0, i32 21, !dbg !5203
  %522 = load i32, i32* %height667, align 8, !dbg !5203
  %cmp668 = icmp sle i32 %522, 0, !dbg !5204
  br i1 %cmp668, label %if.then670, label %if.end671, !dbg !5205

if.then670:                                       ; preds = %lor.lhs.false666, %if.end662
  %523 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5206
  %524 = bitcast %struct.AVCodecContext* %523 to i8*, !dbg !5206
  call void (i8*, i32, i8*, ...) @av_log(i8* %524, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0)), !dbg !5208
  store i32 -22, i32* %ret, align 4, !dbg !5209
  br label %free_and_end, !dbg !5210

if.end671:                                        ; preds = %lor.lhs.false666
  br label %if.end672, !dbg !5211

if.end672:                                        ; preds = %if.end671, %if.end636
  %525 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5212
  %codec_type673 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %525, i32 0, i32 2, !dbg !5214
  %526 = load i32, i32* %codec_type673, align 4, !dbg !5214
  %cmp674 = icmp eq i32 %526, 0, !dbg !5215
  br i1 %cmp674, label %land.lhs.true680, label %lor.lhs.false676, !dbg !5216

lor.lhs.false676:                                 ; preds = %if.end672
  %527 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5217
  %codec_type677 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %527, i32 0, i32 2, !dbg !5219
  %528 = load i32, i32* %codec_type677, align 4, !dbg !5219
  %cmp678 = icmp eq i32 %528, 1, !dbg !5220
  br i1 %cmp678, label %land.lhs.true680, label %if.end690, !dbg !5221

land.lhs.true680:                                 ; preds = %lor.lhs.false676, %if.end672
  %529 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5222
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %529, i32 0, i32 9, !dbg !5223
  %530 = load i64, i64* %bit_rate, align 8, !dbg !5223
  %cmp681 = icmp sgt i64 %530, 0, !dbg !5224
  br i1 %cmp681, label %land.lhs.true683, label %if.end690, !dbg !5225

land.lhs.true683:                                 ; preds = %land.lhs.true680
  %531 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5226
  %bit_rate684 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %531, i32 0, i32 9, !dbg !5228
  %532 = load i64, i64* %bit_rate684, align 8, !dbg !5228
  %cmp685 = icmp slt i64 %532, 1000, !dbg !5229
  br i1 %cmp685, label %if.then687, label %if.end690, !dbg !5230

if.then687:                                       ; preds = %land.lhs.true683
  %533 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5232
  %534 = bitcast %struct.AVCodecContext* %533 to i8*, !dbg !5232
  %535 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5234
  %bit_rate688 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %535, i32 0, i32 9, !dbg !5235
  %536 = load i64, i64* %bit_rate688, align 8, !dbg !5235
  %537 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5236
  %bit_rate689 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %537, i32 0, i32 9, !dbg !5237
  %538 = load i64, i64* %bit_rate689, align 8, !dbg !5237
  call void (i8*, i32, i8*, ...) @av_log(i8* %534, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i32 0, i32 0), i64 %536, i64 %538), !dbg !5238
  br label %if.end690, !dbg !5239

if.end690:                                        ; preds = %if.then687, %land.lhs.true683, %land.lhs.true680, %lor.lhs.false676
  %539 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5240
  %rc_initial_buffer_occupancy = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %539, i32 0, i32 107, !dbg !5242
  %540 = load i32, i32* %rc_initial_buffer_occupancy, align 8, !dbg !5242
  %tobool691 = icmp ne i32 %540, 0, !dbg !5240
  br i1 %tobool691, label %if.end696, label %if.then692, !dbg !5243

if.then692:                                       ; preds = %if.end690
  %541 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5244
  %rc_buffer_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %541, i32 0, i32 100, !dbg !5245
  %542 = load i32, i32* %rc_buffer_size, align 8, !dbg !5245
  %conv693 = sext i32 %542 to i64, !dbg !5244
  %mul = mul nsw i64 %conv693, 3, !dbg !5246
  %div = sdiv i64 %mul, 4, !dbg !5247
  %conv694 = trunc i64 %div to i32, !dbg !5244
  %543 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5248
  %rc_initial_buffer_occupancy695 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %543, i32 0, i32 107, !dbg !5249
  store i32 %conv694, i32* %rc_initial_buffer_occupancy695, align 8, !dbg !5250
  br label %if.end696, !dbg !5248

if.end696:                                        ; preds = %if.then692, %if.end690
  %544 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5251
  %ticks_per_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %544, i32 0, i32 18, !dbg !5253
  %545 = load i32, i32* %ticks_per_frame, align 4, !dbg !5253
  %tobool697 = icmp ne i32 %545, 0, !dbg !5251
  br i1 %tobool697, label %land.lhs.true698, label %if.end715, !dbg !5254

land.lhs.true698:                                 ; preds = %if.end696
  %546 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5255
  %time_base699 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %546, i32 0, i32 17, !dbg !5257
  %num700 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base699, i32 0, i32 0, !dbg !5258
  %547 = load i32, i32* %num700, align 4, !dbg !5258
  %tobool701 = icmp ne i32 %547, 0, !dbg !5255
  br i1 %tobool701, label %land.lhs.true702, label %if.end715, !dbg !5259

land.lhs.true702:                                 ; preds = %land.lhs.true698
  %548 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5260
  %ticks_per_frame703 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %548, i32 0, i32 18, !dbg !5261
  %549 = load i32, i32* %ticks_per_frame703, align 4, !dbg !5261
  %550 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5262
  %time_base704 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %550, i32 0, i32 17, !dbg !5263
  %num705 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base704, i32 0, i32 0, !dbg !5264
  %551 = load i32, i32* %num705, align 4, !dbg !5264
  %div706 = sdiv i32 2147483647, %551, !dbg !5265
  %cmp707 = icmp sgt i32 %549, %div706, !dbg !5266
  br i1 %cmp707, label %if.then709, label %if.end715, !dbg !5267

if.then709:                                       ; preds = %land.lhs.true702
  %552 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5268
  %553 = bitcast %struct.AVCodecContext* %552 to i8*, !dbg !5268
  %554 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5270
  %ticks_per_frame710 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %554, i32 0, i32 18, !dbg !5271
  %555 = load i32, i32* %ticks_per_frame710, align 4, !dbg !5271
  %556 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5272
  %time_base711 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %556, i32 0, i32 17, !dbg !5273
  %num712 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base711, i32 0, i32 0, !dbg !5274
  %557 = load i32, i32* %num712, align 4, !dbg !5274
  %558 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5275
  %time_base713 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %558, i32 0, i32 17, !dbg !5276
  %den714 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base713, i32 0, i32 1, !dbg !5277
  %559 = load i32, i32* %den714, align 4, !dbg !5277
  call void (i8*, i32, i8*, ...) @av_log(i8* %553, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i32 0, i32 0), i32 %555, i32 %557, i32 %559), !dbg !5278
  br label %free_and_end, !dbg !5279

if.end715:                                        ; preds = %land.lhs.true702, %land.lhs.true698, %if.end696
  %560 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5280
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %560, i32 0, i32 182, !dbg !5282
  %561 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx, align 8, !dbg !5282
  %tobool716 = icmp ne %struct.AVBufferRef* %561, null, !dbg !5280
  br i1 %tobool716, label %if.then717, label %if.end739, !dbg !5283

if.then717:                                       ; preds = %if.end715
  call void @llvm.dbg.declare(metadata %struct.AVHWFramesContext** %frames_ctx, metadata !5284, metadata !1175), !dbg !5286
  %562 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5287
  %hw_frames_ctx719 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %562, i32 0, i32 182, !dbg !5288
  %563 = load %struct.AVBufferRef*, %struct.AVBufferRef** %hw_frames_ctx719, align 8, !dbg !5288
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %563, i32 0, i32 1, !dbg !5289
  %564 = load i8*, i8** %data, align 8, !dbg !5289
  %565 = bitcast i8* %564 to %struct.AVHWFramesContext*, !dbg !5290
  store %struct.AVHWFramesContext* %565, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !5286
  %566 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !5291
  %format = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %566, i32 0, i32 9, !dbg !5293
  %567 = load i32, i32* %format, align 4, !dbg !5293
  %568 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5294
  %pix_fmt720 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %568, i32 0, i32 25, !dbg !5295
  %569 = load i32, i32* %pix_fmt720, align 8, !dbg !5295
  %cmp721 = icmp ne i32 %567, %569, !dbg !5296
  br i1 %cmp721, label %if.then723, label %if.end724, !dbg !5297

if.then723:                                       ; preds = %if.then717
  %570 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5298
  %571 = bitcast %struct.AVCodecContext* %570 to i8*, !dbg !5298
  call void (i8*, i32, i8*, ...) @av_log(i8* %571, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0)), !dbg !5300
  store i32 -22, i32* %ret, align 4, !dbg !5301
  br label %free_and_end, !dbg !5302

if.end724:                                        ; preds = %if.then717
  %572 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5303
  %sw_pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %572, i32 0, i32 164, !dbg !5305
  %573 = load i32, i32* %sw_pix_fmt, align 8, !dbg !5305
  %cmp725 = icmp ne i32 %573, -1, !dbg !5306
  br i1 %cmp725, label %land.lhs.true727, label %if.end736, !dbg !5307

land.lhs.true727:                                 ; preds = %if.end724
  %574 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5308
  %sw_pix_fmt728 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %574, i32 0, i32 164, !dbg !5309
  %575 = load i32, i32* %sw_pix_fmt728, align 8, !dbg !5309
  %576 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !5310
  %sw_format = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %576, i32 0, i32 10, !dbg !5311
  %577 = load i32, i32* %sw_format, align 8, !dbg !5311
  %cmp729 = icmp ne i32 %575, %577, !dbg !5312
  br i1 %cmp729, label %if.then731, label %if.end736, !dbg !5313

if.then731:                                       ; preds = %land.lhs.true727
  %578 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5315
  %579 = bitcast %struct.AVCodecContext* %578 to i8*, !dbg !5315
  %580 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5317
  %sw_pix_fmt732 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %580, i32 0, i32 164, !dbg !5318
  %581 = load i32, i32* %sw_pix_fmt732, align 8, !dbg !5318
  %call733 = call i8* @av_get_pix_fmt_name(i32 %581), !dbg !5319
  %582 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !5320
  %sw_format734 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %582, i32 0, i32 10, !dbg !5321
  %583 = load i32, i32* %sw_format734, align 8, !dbg !5321
  %call735 = call i8* @av_get_pix_fmt_name(i32 %583), !dbg !5322
  call void (i8*, i32, i8*, ...) @av_log(i8* %579, i32 16, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.30, i32 0, i32 0), i8* %call733, i8* %call735), !dbg !5323
  store i32 -22, i32* %ret, align 4, !dbg !5324
  br label %free_and_end, !dbg !5325

if.end736:                                        ; preds = %land.lhs.true727, %if.end724
  %584 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %frames_ctx, align 8, !dbg !5326
  %sw_format737 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %584, i32 0, i32 10, !dbg !5327
  %585 = load i32, i32* %sw_format737, align 8, !dbg !5327
  %586 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5328
  %sw_pix_fmt738 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %586, i32 0, i32 164, !dbg !5329
  store i32 %585, i32* %sw_pix_fmt738, align 8, !dbg !5330
  br label %if.end739, !dbg !5331

if.end739:                                        ; preds = %if.end736, %if.end715
  br label %if.end740, !dbg !5332

if.end740:                                        ; preds = %if.end739, %if.end360
  %587 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5333
  %pts_correction_num_faulty_dts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %587, i32 0, i32 168, !dbg !5334
  store i64 0, i64* %pts_correction_num_faulty_dts, align 8, !dbg !5335
  %588 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5336
  %pts_correction_num_faulty_pts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %588, i32 0, i32 167, !dbg !5337
  store i64 0, i64* %pts_correction_num_faulty_pts, align 8, !dbg !5338
  %589 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5339
  %pts_correction_last_dts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %589, i32 0, i32 170, !dbg !5340
  store i64 -9223372036854775808, i64* %pts_correction_last_dts, align 8, !dbg !5341
  %590 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5342
  %pts_correction_last_pts = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %590, i32 0, i32 169, !dbg !5343
  store i64 -9223372036854775808, i64* %pts_correction_last_pts, align 8, !dbg !5344
  %591 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5345
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %591, i32 0, i32 13, !dbg !5347
  %592 = load i32, i32* %flags, align 4, !dbg !5347
  %and741 = and i32 %592, 8192, !dbg !5348
  %tobool742 = icmp ne i32 %and741, 0, !dbg !5348
  br i1 %tobool742, label %land.lhs.true743, label %if.end749, !dbg !5349

land.lhs.true743:                                 ; preds = %if.end740
  %593 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5350
  %codec_descriptor744 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %593, i32 0, i32 166, !dbg !5352
  %594 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor744, align 8, !dbg !5352
  %type745 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %594, i32 0, i32 1, !dbg !5353
  %595 = load i32, i32* %type745, align 4, !dbg !5353
  %cmp746 = icmp eq i32 %595, 0, !dbg !5354
  br i1 %cmp746, label %if.then748, label %if.end749, !dbg !5355

if.then748:                                       ; preds = %land.lhs.true743
  %596 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5356
  %597 = bitcast %struct.AVCodecContext* %596 to i8*, !dbg !5356
  call void (i8*, i32, i8*, ...) @av_log(i8* %597, i32 24, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.31, i32 0, i32 0)), !dbg !5357
  br label %if.end749, !dbg !5357

if.end749:                                        ; preds = %if.then748, %land.lhs.true743, %if.end740
  %598 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5358
  %codec750 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %598, i32 0, i32 3, !dbg !5360
  %599 = load %struct.AVCodec*, %struct.AVCodec** %codec750, align 8, !dbg !5360
  %init = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %599, i32 0, i32 20, !dbg !5361
  %600 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init, align 8, !dbg !5361
  %tobool751 = icmp ne i32 (%struct.AVCodecContext*)* %600, null, !dbg !5358
  br i1 %tobool751, label %land.lhs.true752, label %if.end768, !dbg !5362

land.lhs.true752:                                 ; preds = %if.end749
  %601 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5363
  %active_thread_type753 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %601, i32 0, i32 148, !dbg !5365
  %602 = load i32, i32* %active_thread_type753, align 8, !dbg !5365
  %and754 = and i32 %602, 1, !dbg !5366
  %tobool755 = icmp ne i32 %and754, 0, !dbg !5366
  br i1 %tobool755, label %lor.lhs.false756, label %if.then760, !dbg !5367

lor.lhs.false756:                                 ; preds = %land.lhs.true752
  %603 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5368
  %internal757 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %603, i32 0, i32 7, !dbg !5369
  %604 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal757, align 8, !dbg !5369
  %frame_thread_encoder758 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %604, i32 0, i32 11, !dbg !5370
  %605 = load i8*, i8** %frame_thread_encoder758, align 8, !dbg !5370
  %tobool759 = icmp ne i8* %605, null, !dbg !5368
  br i1 %tobool759, label %if.then760, label %if.end768, !dbg !5371

if.then760:                                       ; preds = %lor.lhs.false756, %land.lhs.true752
  %606 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5372
  %codec761 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %606, i32 0, i32 3, !dbg !5374
  %607 = load %struct.AVCodec*, %struct.AVCodec** %codec761, align 8, !dbg !5374
  %init762 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %607, i32 0, i32 20, !dbg !5375
  %608 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init762, align 8, !dbg !5375
  %609 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5376
  %call763 = call i32 %608(%struct.AVCodecContext* %609), !dbg !5372
  store i32 %call763, i32* %ret, align 4, !dbg !5377
  %610 = load i32, i32* %ret, align 4, !dbg !5378
  %cmp764 = icmp slt i32 %610, 0, !dbg !5380
  br i1 %cmp764, label %if.then766, label %if.end767, !dbg !5381

if.then766:                                       ; preds = %if.then760
  br label %free_and_end, !dbg !5382

if.end767:                                        ; preds = %if.then760
  br label %if.end768, !dbg !5384

if.end768:                                        ; preds = %if.end767, %lor.lhs.false756, %if.end749
  store i32 0, i32* %ret, align 4, !dbg !5385
  %611 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5386
  %codec769 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %611, i32 0, i32 3, !dbg !5387
  %612 = load %struct.AVCodec*, %struct.AVCodec** %codec769, align 8, !dbg !5387
  %call770 = call i32 @av_codec_is_decoder(%struct.AVCodec* %612), !dbg !5388
  %tobool771 = icmp ne i32 %call770, 0, !dbg !5388
  br i1 %tobool771, label %if.then772, label %if.end873, !dbg !5389

if.then772:                                       ; preds = %if.end768
  %613 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5390
  %bit_rate773 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %613, i32 0, i32 9, !dbg !5392
  %614 = load i64, i64* %bit_rate773, align 8, !dbg !5392
  %tobool774 = icmp ne i64 %614, 0, !dbg !5390
  br i1 %tobool774, label %if.end778, label %if.then775, !dbg !5393

if.then775:                                       ; preds = %if.then772
  %615 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5394
  %call776 = call i64 @get_bit_rate(%struct.AVCodecContext* %615), !dbg !5395
  %616 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5396
  %bit_rate777 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %616, i32 0, i32 9, !dbg !5397
  store i64 %call776, i64* %bit_rate777, align 8, !dbg !5398
  br label %if.end778, !dbg !5396

if.end778:                                        ; preds = %if.then775, %if.then772
  %617 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5399
  %channel_layout779 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %617, i32 0, i32 89, !dbg !5401
  %618 = load i64, i64* %channel_layout779, align 8, !dbg !5401
  %tobool780 = icmp ne i64 %618, 0, !dbg !5399
  br i1 %tobool780, label %if.then781, label %if.end804, !dbg !5402

if.then781:                                       ; preds = %if.end778
  call void @llvm.dbg.declare(metadata i32* %channels783, metadata !5403, metadata !1175), !dbg !5405
  %619 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5406
  %channel_layout784 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %619, i32 0, i32 89, !dbg !5407
  %620 = load i64, i64* %channel_layout784, align 8, !dbg !5407
  %call785 = call i32 @av_get_channel_layout_nb_channels(i64 %620), !dbg !5408
  store i32 %call785, i32* %channels783, align 4, !dbg !5405
  %621 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5409
  %channels786 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %621, i32 0, i32 83, !dbg !5411
  %622 = load i32, i32* %channels786, align 4, !dbg !5411
  %tobool787 = icmp ne i32 %622, 0, !dbg !5409
  br i1 %tobool787, label %if.else790, label %if.then788, !dbg !5412

if.then788:                                       ; preds = %if.then781
  %623 = load i32, i32* %channels783, align 4, !dbg !5413
  %624 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5414
  %channels789 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %624, i32 0, i32 83, !dbg !5415
  store i32 %623, i32* %channels789, align 4, !dbg !5416
  br label %if.end803, !dbg !5414

if.else790:                                       ; preds = %if.then781
  %625 = load i32, i32* %channels783, align 4, !dbg !5417
  %626 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5419
  %channels791 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %626, i32 0, i32 83, !dbg !5420
  %627 = load i32, i32* %channels791, align 4, !dbg !5420
  %cmp792 = icmp ne i32 %625, %627, !dbg !5421
  br i1 %cmp792, label %if.then794, label %if.end802, !dbg !5422

if.then794:                                       ; preds = %if.else790
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf796, metadata !5423, metadata !1175), !dbg !5425
  %arraydecay797 = getelementptr inbounds [512 x i8], [512 x i8]* %buf796, i32 0, i32 0, !dbg !5426
  %628 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5427
  %channel_layout798 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %628, i32 0, i32 89, !dbg !5428
  %629 = load i64, i64* %channel_layout798, align 8, !dbg !5428
  call void @av_get_channel_layout_string(i8* %arraydecay797, i32 512, i32 -1, i64 %629), !dbg !5429
  %630 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5430
  %631 = bitcast %struct.AVCodecContext* %630 to i8*, !dbg !5430
  %arraydecay799 = getelementptr inbounds [512 x i8], [512 x i8]* %buf796, i32 0, i32 0, !dbg !5431
  %632 = load i32, i32* %channels783, align 4, !dbg !5432
  %633 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5433
  %channels800 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %633, i32 0, i32 83, !dbg !5434
  %634 = load i32, i32* %channels800, align 4, !dbg !5434
  call void (i8*, i32, i8*, ...) @av_log(i8* %631, i32 24, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.32, i32 0, i32 0), i8* %arraydecay799, i32 %632, i32 %634), !dbg !5435
  %635 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5436
  %channel_layout801 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %635, i32 0, i32 89, !dbg !5437
  store i64 0, i64* %channel_layout801, align 8, !dbg !5438
  br label %if.end802, !dbg !5439

if.end802:                                        ; preds = %if.then794, %if.else790
  br label %if.end803

if.end803:                                        ; preds = %if.end802, %if.then788
  br label %if.end804, !dbg !5440

if.end804:                                        ; preds = %if.end803, %if.end778
  %636 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5441
  %channels805 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %636, i32 0, i32 83, !dbg !5443
  %637 = load i32, i32* %channels805, align 4, !dbg !5443
  %tobool806 = icmp ne i32 %637, 0, !dbg !5441
  br i1 %tobool806, label %land.lhs.true807, label %lor.lhs.false811, !dbg !5444

land.lhs.true807:                                 ; preds = %if.end804
  %638 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5445
  %channels808 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %638, i32 0, i32 83, !dbg !5447
  %639 = load i32, i32* %channels808, align 4, !dbg !5447
  %cmp809 = icmp slt i32 %639, 0, !dbg !5448
  br i1 %cmp809, label %if.then815, label %lor.lhs.false811, !dbg !5449

lor.lhs.false811:                                 ; preds = %land.lhs.true807, %if.end804
  %640 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5450
  %channels812 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %640, i32 0, i32 83, !dbg !5451
  %641 = load i32, i32* %channels812, align 4, !dbg !5451
  %cmp813 = icmp ugt i32 %641, 256, !dbg !5452
  br i1 %cmp813, label %if.then815, label %if.end816, !dbg !5453

if.then815:                                       ; preds = %lor.lhs.false811, %land.lhs.true807
  store i32 -22, i32* %ret, align 4, !dbg !5455
  br label %free_and_end, !dbg !5457

if.end816:                                        ; preds = %lor.lhs.false811
  %642 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5458
  %sub_charenc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %642, i32 0, i32 171, !dbg !5460
  %643 = load i8*, i8** %sub_charenc, align 8, !dbg !5460
  %tobool817 = icmp ne i8* %643, null, !dbg !5458
  br i1 %tobool817, label %if.then818, label %if.end854, !dbg !5461

if.then818:                                       ; preds = %if.end816
  %644 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5462
  %codec_type819 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %644, i32 0, i32 2, !dbg !5465
  %645 = load i32, i32* %codec_type819, align 4, !dbg !5465
  %cmp820 = icmp ne i32 %645, 3, !dbg !5466
  br i1 %cmp820, label %if.then822, label %if.else823, !dbg !5467

if.then822:                                       ; preds = %if.then818
  %646 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5468
  %647 = bitcast %struct.AVCodecContext* %646 to i8*, !dbg !5468
  call void (i8*, i32, i8*, ...) @av_log(i8* %647, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33, i32 0, i32 0)), !dbg !5470
  store i32 -22, i32* %ret, align 4, !dbg !5471
  br label %free_and_end, !dbg !5472

if.else823:                                       ; preds = %if.then818
  %648 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5473
  %codec_descriptor824 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %648, i32 0, i32 166, !dbg !5475
  %649 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor824, align 8, !dbg !5475
  %props = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %649, i32 0, i32 4, !dbg !5476
  %650 = load i32, i32* %props, align 8, !dbg !5476
  %and825 = and i32 %650, 65536, !dbg !5477
  %tobool826 = icmp ne i32 %and825, 0, !dbg !5477
  br i1 %tobool826, label %if.then827, label %if.else830, !dbg !5478

if.then827:                                       ; preds = %if.else823
  %651 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5479
  %652 = bitcast %struct.AVCodecContext* %651 to i8*, !dbg !5479
  %653 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5481
  %codec_descriptor828 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %653, i32 0, i32 166, !dbg !5482
  %654 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %codec_descriptor828, align 8, !dbg !5482
  %name829 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %654, i32 0, i32 2, !dbg !5483
  %655 = load i8*, i8** %name829, align 8, !dbg !5483
  call void (i8*, i32, i8*, ...) @av_log(i8* %652, i32 24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.34, i32 0, i32 0), i8* %655), !dbg !5484
  %656 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5485
  %sub_charenc_mode = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %656, i32 0, i32 172, !dbg !5486
  store i32 -1, i32* %sub_charenc_mode, align 8, !dbg !5487
  br label %if.end852, !dbg !5488

if.else830:                                       ; preds = %if.else823
  %657 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5489
  %sub_charenc_mode831 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %657, i32 0, i32 172, !dbg !5492
  %658 = load i32, i32* %sub_charenc_mode831, align 8, !dbg !5492
  %cmp832 = icmp eq i32 %658, 0, !dbg !5493
  br i1 %cmp832, label %if.then834, label %if.end836, !dbg !5494

if.then834:                                       ; preds = %if.else830
  %659 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5495
  %sub_charenc_mode835 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %659, i32 0, i32 172, !dbg !5496
  store i32 1, i32* %sub_charenc_mode835, align 8, !dbg !5497
  br label %if.end836, !dbg !5495

if.end836:                                        ; preds = %if.then834, %if.else830
  %660 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5498
  %sub_charenc_mode837 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %660, i32 0, i32 172, !dbg !5500
  %661 = load i32, i32* %sub_charenc_mode837, align 8, !dbg !5500
  %cmp838 = icmp eq i32 %661, 1, !dbg !5501
  br i1 %cmp838, label %if.then840, label %if.end851, !dbg !5502

if.then840:                                       ; preds = %if.end836
  call void @llvm.dbg.declare(metadata i8** %cd, metadata !5503, metadata !1175), !dbg !5505
  %662 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5506
  %sub_charenc842 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %662, i32 0, i32 171, !dbg !5507
  %663 = load i8*, i8** %sub_charenc842, align 8, !dbg !5507
  %call843 = call i8* @iconv_open(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i8* %663), !dbg !5508
  store i8* %call843, i8** %cd, align 8, !dbg !5505
  %664 = load i8*, i8** %cd, align 8, !dbg !5509
  %cmp844 = icmp eq i8* %664, inttoptr (i64 -1 to i8*), !dbg !5511
  br i1 %cmp844, label %if.then846, label %if.end849, !dbg !5512

if.then846:                                       ; preds = %if.then840
  %call847 = call i32* @__errno_location() #1, !dbg !5513
  %665 = load i32, i32* %call847, align 4, !dbg !5515
  %sub = sub nsw i32 0, %665, !dbg !5513
  store i32 %sub, i32* %ret, align 4, !dbg !5516
  %666 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5517
  %667 = bitcast %struct.AVCodecContext* %666 to i8*, !dbg !5517
  %668 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5518
  %sub_charenc848 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %668, i32 0, i32 171, !dbg !5519
  %669 = load i8*, i8** %sub_charenc848, align 8, !dbg !5519
  call void (i8*, i32, i8*, ...) @av_log(i8* %667, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.36, i32 0, i32 0), i8* %669), !dbg !5520
  br label %free_and_end, !dbg !5521

if.end849:                                        ; preds = %if.then840
  %670 = load i8*, i8** %cd, align 8, !dbg !5522
  %call850 = call i32 @iconv_close(i8* %670), !dbg !5523
  br label %if.end851, !dbg !5524

if.end851:                                        ; preds = %if.end849, %if.end836
  br label %if.end852

if.end852:                                        ; preds = %if.end851, %if.then827
  br label %if.end853

if.end853:                                        ; preds = %if.end852
  br label %if.end854, !dbg !5525

if.end854:                                        ; preds = %if.end853, %if.end816
  %671 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5526
  %framerate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %671, i32 0, i32 163, !dbg !5527
  %num855 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 0, !dbg !5528
  %672 = load i32, i32* %num855, align 8, !dbg !5528
  %cmp856 = icmp sgt i32 %672, 0, !dbg !5529
  br i1 %cmp856, label %land.lhs.true858, label %if.end872, !dbg !5530

land.lhs.true858:                                 ; preds = %if.end854
  %673 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5531
  %framerate859 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %673, i32 0, i32 163, !dbg !5532
  %den860 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate859, i32 0, i32 1, !dbg !5533
  %674 = load i32, i32* %den860, align 4, !dbg !5533
  %cmp861 = icmp sgt i32 %674, 0, !dbg !5534
  br i1 %cmp861, label %if.then863, label %if.end872, !dbg !5535

if.then863:                                       ; preds = %land.lhs.true858
  %675 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5536
  %time_base864 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %675, i32 0, i32 17, !dbg !5537
  %676 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5538
  %framerate865 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %676, i32 0, i32 163, !dbg !5539
  %num867 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral866, i32 0, i32 0, !dbg !5540
  %677 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5541
  %ticks_per_frame868 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %677, i32 0, i32 18, !dbg !5542
  %678 = load i32, i32* %ticks_per_frame868, align 4, !dbg !5542
  store i32 %678, i32* %num867, align 4, !dbg !5540
  %den869 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral866, i32 0, i32 1, !dbg !5540
  store i32 1, i32* %den869, align 4, !dbg !5540
  %679 = bitcast %struct.AVRational* %framerate865 to i64*, !dbg !5543
  %680 = load i64, i64* %679, align 8, !dbg !5543
  %681 = bitcast %struct.AVRational* %.compoundliteral866 to i64*, !dbg !5543
  %682 = load i64, i64* %681, align 4, !dbg !5543
  %call870 = call i64 @av_mul_q(i64 %680, i64 %682) #1, !dbg !5543
  %683 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !5543
  store i64 %call870, i64* %683, align 4, !dbg !5543
  %684 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !5544
  %685 = load i64, i64* %684, align 4, !dbg !5544
  %686 = bitcast %struct.AVRational* %q.i to i64*, !dbg !5545
  store i64 %685, i64* %686, align 4, !dbg !5545
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !5546
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !5547
  %687 = load i32, i32* %den.i, align 4, !dbg !5547
  store i32 %687, i32* %num.i, align 4, !dbg !5546
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !5546
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !5548
  %688 = load i32, i32* %num2.i, align 4, !dbg !5548
  store i32 %688, i32* %den1.i, align 4, !dbg !5546
  %689 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !5549
  %690 = bitcast %struct.AVRational* %r.i to i8*, !dbg !5549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %689, i8* %690, i64 8, i32 4, i1 false) #12, !dbg !5549
  %691 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !5550
  %692 = load i64, i64* %691, align 4, !dbg !5550
  %693 = bitcast %struct.AVRational* %coerce to i64*, !dbg !5544
  store i64 %692, i64* %693, align 4, !dbg !5544
  %694 = bitcast %struct.AVRational* %time_base864 to i8*, !dbg !5544
  %695 = bitcast %struct.AVRational* %coerce to i8*, !dbg !5544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %694, i8* %695, i64 8, i32 4, i1 false), !dbg !5551
  br label %if.end872, !dbg !5536

if.end872:                                        ; preds = %if.then863, %land.lhs.true858, %if.end854
  br label %if.end873, !dbg !5553

if.end873:                                        ; preds = %if.end872, %if.end768
  %696 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5554
  %priv_data_size874 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %696, i32 0, i32 14, !dbg !5556
  %697 = load i32, i32* %priv_data_size874, align 8, !dbg !5556
  %cmp875 = icmp sgt i32 %697, 0, !dbg !5557
  br i1 %cmp875, label %land.lhs.true877, label %if.end890, !dbg !5558

land.lhs.true877:                                 ; preds = %if.end873
  %698 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5559
  %priv_data878 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %698, i32 0, i32 6, !dbg !5561
  %699 = load i8*, i8** %priv_data878, align 8, !dbg !5561
  %tobool879 = icmp ne i8* %699, null, !dbg !5559
  br i1 %tobool879, label %land.lhs.true880, label %if.end890, !dbg !5562

land.lhs.true880:                                 ; preds = %land.lhs.true877
  %700 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5563
  %priv_class881 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %700, i32 0, i32 11, !dbg !5565
  %701 = load %struct.AVClass*, %struct.AVClass** %priv_class881, align 8, !dbg !5565
  %tobool882 = icmp ne %struct.AVClass* %701, null, !dbg !5563
  br i1 %tobool882, label %if.then883, label %if.end890, !dbg !5566

if.then883:                                       ; preds = %land.lhs.true880
  br label %do.body, !dbg !5567, !llvm.loop !5569

do.body:                                          ; preds = %if.then883
  %702 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5570
  %priv_data884 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %702, i32 0, i32 6, !dbg !5574
  %703 = load i8*, i8** %priv_data884, align 8, !dbg !5574
  %704 = bitcast i8* %703 to %struct.AVClass**, !dbg !5575
  %705 = load %struct.AVClass*, %struct.AVClass** %704, align 8, !dbg !5576
  %706 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5577
  %priv_class885 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %706, i32 0, i32 11, !dbg !5578
  %707 = load %struct.AVClass*, %struct.AVClass** %priv_class885, align 8, !dbg !5578
  %cmp886 = icmp eq %struct.AVClass* %705, %707, !dbg !5579
  br i1 %cmp886, label %if.end889, label %if.then888, !dbg !5580

if.then888:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 1009), !dbg !5581
  call void @abort() #11, !dbg !5584
  unreachable, !dbg !5586

if.end889:                                        ; preds = %do.body
  br label %do.end, !dbg !5587

do.end:                                           ; preds = %if.end889
  br label %if.end890, !dbg !5589

if.end890:                                        ; preds = %do.end, %land.lhs.true880, %land.lhs.true877, %if.end873
  br label %end, !dbg !5590

end:                                              ; preds = %if.end932, %if.end890, %if.then95, %if.then33
  %708 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5592
  call void @ff_unlock_avcodec(%struct.AVCodec* %708), !dbg !5593
  %709 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5594
  %tobool891 = icmp ne %struct.AVDictionary** %709, null, !dbg !5594
  br i1 %tobool891, label %if.then892, label %if.end893, !dbg !5596

if.then892:                                       ; preds = %end
  %710 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5597
  call void @av_dict_free(%struct.AVDictionary** %710), !dbg !5599
  %711 = load %struct.AVDictionary*, %struct.AVDictionary** %tmp, align 8, !dbg !5600
  %712 = load %struct.AVDictionary**, %struct.AVDictionary*** %options.addr, align 8, !dbg !5601
  store %struct.AVDictionary* %711, %struct.AVDictionary** %712, align 8, !dbg !5602
  br label %if.end893, !dbg !5603

if.end893:                                        ; preds = %if.then892, %end
  %713 = load i32, i32* %ret, align 4, !dbg !5604
  store i32 %713, i32* %retval, align 4, !dbg !5605
  br label %return, !dbg !5605

free_and_end:                                     ; preds = %if.then846, %if.then822, %if.then815, %if.then766, %if.then731, %if.then723, %if.then709, %if.then670, %if.then634, %if.then614, %if.then592, %if.then557, %if.then550, %if.then473, %if.then423, %if.then380, %if.then369, %if.then341, %if.then329, %if.then319, %if.end289, %if.then262, %if.then230, %if.then173, %if.then127, %if.then118, %if.then111, %if.then83, %if.then76, %if.then68, %if.then61, %if.then54, %if.then47, %if.then40
  %714 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5606
  %codec894 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %714, i32 0, i32 3, !dbg !5608
  %715 = load %struct.AVCodec*, %struct.AVCodec** %codec894, align 8, !dbg !5608
  %tobool895 = icmp ne %struct.AVCodec* %715, null, !dbg !5606
  br i1 %tobool895, label %land.lhs.true896, label %if.end903, !dbg !5609

land.lhs.true896:                                 ; preds = %free_and_end
  %716 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5610
  %codec897 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %716, i32 0, i32 3, !dbg !5611
  %717 = load %struct.AVCodec*, %struct.AVCodec** %codec897, align 8, !dbg !5611
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %717, i32 0, i32 29, !dbg !5612
  %718 = load i32, i32* %caps_internal, align 8, !dbg !5612
  %and898 = and i32 %718, 2, !dbg !5613
  %tobool899 = icmp ne i32 %and898, 0, !dbg !5613
  br i1 %tobool899, label %if.then900, label %if.end903, !dbg !5614

if.then900:                                       ; preds = %land.lhs.true896
  %719 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5615
  %codec901 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %719, i32 0, i32 3, !dbg !5616
  %720 = load %struct.AVCodec*, %struct.AVCodec** %codec901, align 8, !dbg !5616
  %close = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %720, i32 0, i32 24, !dbg !5617
  %721 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %close, align 8, !dbg !5617
  %722 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5618
  %call902 = call i32 %721(%struct.AVCodecContext* %722), !dbg !5615
  br label %if.end903, !dbg !5615

if.end903:                                        ; preds = %if.then900, %land.lhs.true896, %free_and_end
  %723 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5619
  %priv_class904 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %723, i32 0, i32 11, !dbg !5621
  %724 = load %struct.AVClass*, %struct.AVClass** %priv_class904, align 8, !dbg !5621
  %tobool905 = icmp ne %struct.AVClass* %724, null, !dbg !5619
  br i1 %tobool905, label %land.lhs.true906, label %if.end911, !dbg !5622

land.lhs.true906:                                 ; preds = %if.end903
  %725 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5623
  %priv_data_size907 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %725, i32 0, i32 14, !dbg !5625
  %726 = load i32, i32* %priv_data_size907, align 8, !dbg !5625
  %tobool908 = icmp ne i32 %726, 0, !dbg !5623
  br i1 %tobool908, label %if.then909, label %if.end911, !dbg !5626

if.then909:                                       ; preds = %land.lhs.true906
  %727 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5627
  %priv_data910 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %727, i32 0, i32 6, !dbg !5628
  %728 = load i8*, i8** %priv_data910, align 8, !dbg !5628
  call void @av_opt_free(i8* %728), !dbg !5629
  br label %if.end911, !dbg !5629

if.end911:                                        ; preds = %if.then909, %land.lhs.true906, %if.end903
  %729 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5630
  %730 = bitcast %struct.AVCodecContext* %729 to i8*, !dbg !5630
  call void @av_opt_free(i8* %730), !dbg !5631
  %731 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5632
  %coded_frame912 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %731, i32 0, i32 145, !dbg !5633
  call void @av_frame_free(%struct.AVFrame** %coded_frame912), !dbg !5634
  call void @av_dict_free(%struct.AVDictionary** %tmp), !dbg !5635
  %732 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5636
  %priv_data913 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %732, i32 0, i32 6, !dbg !5637
  %733 = bitcast i8** %priv_data913 to i8*, !dbg !5638
  call void @av_freep(i8* %733), !dbg !5639
  %734 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5640
  %internal914 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %734, i32 0, i32 7, !dbg !5642
  %735 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal914, align 8, !dbg !5642
  %tobool915 = icmp ne %struct.AVCodecInternal* %735, null, !dbg !5640
  br i1 %tobool915, label %if.then916, label %if.end932, !dbg !5643

if.then916:                                       ; preds = %if.end911
  %736 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5644
  %internal917 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %736, i32 0, i32 7, !dbg !5646
  %737 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal917, align 8, !dbg !5646
  %to_free918 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %737, i32 0, i32 3, !dbg !5647
  call void @av_frame_free(%struct.AVFrame** %to_free918), !dbg !5648
  %738 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5649
  %internal919 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %738, i32 0, i32 7, !dbg !5650
  %739 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal919, align 8, !dbg !5650
  %compat_decode_frame920 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %739, i32 0, i32 23, !dbg !5651
  call void @av_frame_free(%struct.AVFrame** %compat_decode_frame920), !dbg !5652
  %740 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5653
  %internal921 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %740, i32 0, i32 7, !dbg !5654
  %741 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal921, align 8, !dbg !5654
  %buffer_frame922 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %741, i32 0, i32 17, !dbg !5655
  call void @av_frame_free(%struct.AVFrame** %buffer_frame922), !dbg !5656
  %742 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5657
  %internal923 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %742, i32 0, i32 7, !dbg !5658
  %743 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal923, align 8, !dbg !5658
  %buffer_pkt924 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %743, i32 0, i32 15, !dbg !5659
  call void @av_packet_free(%struct.AVPacket** %buffer_pkt924), !dbg !5660
  %744 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5661
  %internal925 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %744, i32 0, i32 7, !dbg !5662
  %745 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal925, align 8, !dbg !5662
  %last_pkt_props926 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %745, i32 0, i32 8, !dbg !5663
  call void @av_packet_free(%struct.AVPacket** %last_pkt_props926), !dbg !5664
  %746 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5665
  %internal927 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %746, i32 0, i32 7, !dbg !5666
  %747 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal927, align 8, !dbg !5666
  %ds928 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %747, i32 0, i32 6, !dbg !5667
  %in_pkt929 = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %ds928, i32 0, i32 0, !dbg !5668
  call void @av_packet_free(%struct.AVPacket** %in_pkt929), !dbg !5669
  %748 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5670
  call void @ff_decode_bsfs_uninit(%struct.AVCodecContext* %748), !dbg !5671
  %749 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5672
  %internal930 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %749, i32 0, i32 7, !dbg !5673
  %750 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal930, align 8, !dbg !5673
  %pool931 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %750, i32 0, i32 4, !dbg !5674
  %751 = bitcast %struct.FramePool** %pool931 to i8*, !dbg !5675
  call void @av_freep(i8* %751), !dbg !5676
  br label %if.end932, !dbg !5677

if.end932:                                        ; preds = %if.then916, %if.end911
  %752 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5678
  %internal933 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %752, i32 0, i32 7, !dbg !5679
  %753 = bitcast %struct.AVCodecInternal** %internal933 to i8*, !dbg !5680
  call void @av_freep(i8* %753), !dbg !5681
  %754 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5682
  %codec934 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %754, i32 0, i32 3, !dbg !5683
  store %struct.AVCodec* null, %struct.AVCodec** %codec934, align 8, !dbg !5684
  br label %end, !dbg !5685

return:                                           ; preds = %if.end893, %if.then24, %if.then13, %if.then5, %if.then
  %755 = load i32, i32* %retval, align 4, !dbg !5686
  ret i32 %755, !dbg !5686
}

; Function Attrs: nounwind uwtable
define internal void @ff_lock_avcodec(%struct.AVCodecContext* %log_ctx, %struct.AVCodec* %codec) #0 !dbg !5687 {
entry:
  %log_ctx.addr = alloca %struct.AVCodecContext*, align 8
  %codec.addr = alloca %struct.AVCodec*, align 8
  store %struct.AVCodecContext* %log_ctx, %struct.AVCodecContext** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %log_ctx.addr, metadata !5690, metadata !1175), !dbg !5691
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !5692, metadata !1175), !dbg !5693
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5694
  %caps_internal = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i32 0, i32 29, !dbg !5696
  %1 = load i32, i32* %caps_internal, align 8, !dbg !5696
  %and = and i32 %1, 1, !dbg !5697
  %tobool = icmp ne i32 %and, 0, !dbg !5697
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5698

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !5699
  %init = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %2, i32 0, i32 20, !dbg !5701
  %3 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %init, align 8, !dbg !5701
  %tobool1 = icmp ne i32 (%struct.AVCodecContext*)* %3, null, !dbg !5699
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5702

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @codec_mutex) #12, !dbg !5703
  br label %if.end, !dbg !5703

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5704
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_is_open(%struct.AVCodecContext* %s) #0 !dbg !5705 {
entry:
  %s.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %s, %struct.AVCodecContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %s.addr, metadata !5706, metadata !1175), !dbg !5707
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %s.addr, align 8, !dbg !5708
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 7, !dbg !5709
  %1 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !5709
  %tobool = icmp ne %struct.AVCodecInternal* %1, null, !dbg !5710
  %lnot = xor i1 %tobool, true, !dbg !5710
  %lnot1 = xor i1 %lnot, true, !dbg !5711
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5711
  ret i32 %lnot.ext, !dbg !5712
}

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #2

declare noalias i8* @av_mallocz(i64) #2

declare %struct.AVFrame* @av_frame_alloc() #2

declare %struct.AVPacket* @av_packet_alloc() #2

declare void @av_opt_set_defaults(i8*) #2

declare i32 @av_opt_set_dict(i8*, %struct.AVDictionary**) #2

declare i32 @av_match_list(i8*, i8*, i8 signext) #2

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32) #2

declare %struct.AVCodec* @avcodec_find_encoder(i32) #2

declare %struct.AVCodec* @avcodec_find_decoder(i32) #2

declare i32 @ff_frame_thread_encoder_init(%struct.AVCodecContext*, %struct.AVDictionary*) #2

declare i32 @ff_decode_bsfs_init(%struct.AVCodecContext*) #2

declare i32 @ff_thread_init(%struct.AVCodecContext*) #2

declare i32 @av_get_planar_sample_fmt(i32) #2

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #6

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_x_if_null(i8* %p, i8* %x) #3 !dbg !5713 {
entry:
  %p.addr = alloca i8*, align 8
  %x.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5718, metadata !1175), !dbg !5719
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !5720, metadata !1175), !dbg !5721
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5722
  %tobool = icmp ne i8* %0, null, !dbg !5722
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5722

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5723
  br label %cond.end, !dbg !5725

cond.false:                                       ; preds = %entry
  %2 = load i8*, i8** %x.addr, align 8, !dbg !5726
  br label %cond.end, !dbg !5728

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ %2, %cond.false ], !dbg !5729
  %3 = ptrtoint i8* %cond to i64, !dbg !5731
  %4 = inttoptr i64 %3 to i8*, !dbg !5732
  ret i8* %4, !dbg !5733
}

declare i8* @av_get_sample_fmt_name(i32) #2

declare i8* @av_get_pix_fmt_name(i32) #2

declare void @av_get_channel_layout_string(i8*, i32, i32, i64) #2

declare i32 @av_get_channel_layout_nb_channels(i64) #2

; Function Attrs: nounwind uwtable
define internal i64 @get_bit_rate(%struct.AVCodecContext* %ctx) #0 !dbg !5734 {
entry:
  %ctx.addr = alloca %struct.AVCodecContext*, align 8
  %bit_rate = alloca i64, align 8
  %bits_per_sample = alloca i32, align 4
  store %struct.AVCodecContext* %ctx, %struct.AVCodecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %ctx.addr, metadata !5737, metadata !1175), !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %bit_rate, metadata !5739, metadata !1175), !dbg !5740
  call void @llvm.dbg.declare(metadata i32* %bits_per_sample, metadata !5741, metadata !1175), !dbg !5742
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5743
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 2, !dbg !5744
  %1 = load i32, i32* %codec_type, align 4, !dbg !5744
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !5745

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5746
  %bit_rate1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 9, !dbg !5748
  %3 = load i64, i64* %bit_rate1, align 8, !dbg !5748
  store i64 %3, i64* %bit_rate, align 8, !dbg !5749
  br label %sw.epilog, !dbg !5750

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5751
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 4, !dbg !5752
  %5 = load i32, i32* %codec_id, align 8, !dbg !5752
  %call = call i32 @av_get_bits_per_sample(i32 %5), !dbg !5753
  store i32 %call, i32* %bits_per_sample, align 4, !dbg !5754
  %6 = load i32, i32* %bits_per_sample, align 4, !dbg !5755
  %tobool = icmp ne i32 %6, 0, !dbg !5755
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5755

cond.true:                                        ; preds = %sw.bb2
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5756
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 82, !dbg !5758
  %8 = load i32, i32* %sample_rate, align 8, !dbg !5758
  %conv = sext i32 %8 to i64, !dbg !5756
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5759
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 83, !dbg !5760
  %10 = load i32, i32* %channels, align 4, !dbg !5760
  %conv3 = sext i32 %10 to i64, !dbg !5761
  %mul = mul nsw i64 %conv, %conv3, !dbg !5762
  %11 = load i32, i32* %bits_per_sample, align 4, !dbg !5763
  %conv4 = sext i32 %11 to i64, !dbg !5763
  %mul5 = mul nsw i64 %mul, %conv4, !dbg !5764
  br label %cond.end, !dbg !5765

cond.false:                                       ; preds = %sw.bb2
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %ctx.addr, align 8, !dbg !5766
  %bit_rate6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 9, !dbg !5768
  %13 = load i64, i64* %bit_rate6, align 8, !dbg !5768
  br label %cond.end, !dbg !5769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul5, %cond.true ], [ %13, %cond.false ], !dbg !5770
  store i64 %cond, i64* %bit_rate, align 8, !dbg !5772
  br label %sw.epilog, !dbg !5773

sw.default:                                       ; preds = %entry
  store i64 0, i64* %bit_rate, align 8, !dbg !5774
  br label %sw.epilog, !dbg !5775

sw.epilog:                                        ; preds = %sw.default, %cond.end, %sw.bb
  %14 = load i64, i64* %bit_rate, align 8, !dbg !5776
  ret i64 %14, !dbg !5777
}

declare i8* @iconv_open(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare i32 @iconv_close(i8*) #2

; Function Attrs: nounwind readnone
declare i64 @av_mul_q(i64, i64) #7

declare void @av_dict_free(%struct.AVDictionary**) #2

declare void @av_opt_free(i8*) #2

declare void @av_frame_free(%struct.AVFrame**) #2

declare void @av_packet_free(%struct.AVPacket**) #2

declare void @ff_decode_bsfs_uninit(%struct.AVCodecContext*) #2

; Function Attrs: nounwind uwtable
define void @avsubtitle_free(%struct.AVSubtitle* %sub) #0 !dbg !5778 {
entry:
  %sub.addr = alloca %struct.AVSubtitle*, align 8
  %i = alloca i32, align 4
  store %struct.AVSubtitle* %sub, %struct.AVSubtitle** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle** %sub.addr, metadata !5783, metadata !1175), !dbg !5784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5785, metadata !1175), !dbg !5786
  store i32 0, i32* %i, align 4, !dbg !5787
  br label %for.cond, !dbg !5789

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5790
  %1 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5793
  %num_rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %1, i32 0, i32 3, !dbg !5794
  %2 = load i32, i32* %num_rects, align 4, !dbg !5794
  %cmp = icmp ult i32 %0, %2, !dbg !5795
  br i1 %cmp, label %for.body, label %for.end, !dbg !5796

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !5797
  %idxprom = sext i32 %3 to i64, !dbg !5799
  %4 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5799
  %rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %4, i32 0, i32 4, !dbg !5800
  %5 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects, align 8, !dbg !5800
  %arrayidx = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %5, i64 %idxprom, !dbg !5799
  %6 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx, align 8, !dbg !5799
  %data = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %6, i32 0, i32 6, !dbg !5801
  %arrayidx1 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data, i64 0, i64 0, !dbg !5799
  %7 = bitcast i8** %arrayidx1 to i8*, !dbg !5802
  call void @av_freep(i8* %7), !dbg !5803
  %8 = load i32, i32* %i, align 4, !dbg !5804
  %idxprom2 = sext i32 %8 to i64, !dbg !5805
  %9 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5805
  %rects3 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %9, i32 0, i32 4, !dbg !5806
  %10 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects3, align 8, !dbg !5806
  %arrayidx4 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %10, i64 %idxprom2, !dbg !5805
  %11 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx4, align 8, !dbg !5805
  %data5 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %11, i32 0, i32 6, !dbg !5807
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data5, i64 0, i64 1, !dbg !5805
  %12 = bitcast i8** %arrayidx6 to i8*, !dbg !5808
  call void @av_freep(i8* %12), !dbg !5809
  %13 = load i32, i32* %i, align 4, !dbg !5810
  %idxprom7 = sext i32 %13 to i64, !dbg !5811
  %14 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5811
  %rects8 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %14, i32 0, i32 4, !dbg !5812
  %15 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects8, align 8, !dbg !5812
  %arrayidx9 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %15, i64 %idxprom7, !dbg !5811
  %16 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx9, align 8, !dbg !5811
  %data10 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %16, i32 0, i32 6, !dbg !5813
  %arrayidx11 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data10, i64 0, i64 2, !dbg !5811
  %17 = bitcast i8** %arrayidx11 to i8*, !dbg !5814
  call void @av_freep(i8* %17), !dbg !5815
  %18 = load i32, i32* %i, align 4, !dbg !5816
  %idxprom12 = sext i32 %18 to i64, !dbg !5817
  %19 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5817
  %rects13 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %19, i32 0, i32 4, !dbg !5818
  %20 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects13, align 8, !dbg !5818
  %arrayidx14 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %20, i64 %idxprom12, !dbg !5817
  %21 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx14, align 8, !dbg !5817
  %data15 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %21, i32 0, i32 6, !dbg !5819
  %arrayidx16 = getelementptr inbounds [4 x i8*], [4 x i8*]* %data15, i64 0, i64 3, !dbg !5817
  %22 = bitcast i8** %arrayidx16 to i8*, !dbg !5820
  call void @av_freep(i8* %22), !dbg !5821
  %23 = load i32, i32* %i, align 4, !dbg !5822
  %idxprom17 = sext i32 %23 to i64, !dbg !5823
  %24 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5823
  %rects18 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %24, i32 0, i32 4, !dbg !5824
  %25 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects18, align 8, !dbg !5824
  %arrayidx19 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %25, i64 %idxprom17, !dbg !5823
  %26 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx19, align 8, !dbg !5823
  %text = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %26, i32 0, i32 9, !dbg !5825
  %27 = bitcast i8** %text to i8*, !dbg !5826
  call void @av_freep(i8* %27), !dbg !5827
  %28 = load i32, i32* %i, align 4, !dbg !5828
  %idxprom20 = sext i32 %28 to i64, !dbg !5829
  %29 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5829
  %rects21 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %29, i32 0, i32 4, !dbg !5830
  %30 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects21, align 8, !dbg !5830
  %arrayidx22 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %30, i64 %idxprom20, !dbg !5829
  %31 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %arrayidx22, align 8, !dbg !5829
  %ass = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %31, i32 0, i32 10, !dbg !5831
  %32 = bitcast i8** %ass to i8*, !dbg !5832
  call void @av_freep(i8* %32), !dbg !5833
  %33 = load i32, i32* %i, align 4, !dbg !5834
  %idxprom23 = sext i32 %33 to i64, !dbg !5835
  %34 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5835
  %rects24 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %34, i32 0, i32 4, !dbg !5836
  %35 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %rects24, align 8, !dbg !5836
  %arrayidx25 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %35, i64 %idxprom23, !dbg !5835
  %36 = bitcast %struct.AVSubtitleRect** %arrayidx25 to i8*, !dbg !5837
  call void @av_freep(i8* %36), !dbg !5838
  br label %for.inc, !dbg !5839

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !5840
  %inc = add nsw i32 %37, 1, !dbg !5840
  store i32 %inc, i32* %i, align 4, !dbg !5840
  br label %for.cond, !dbg !5842, !llvm.loop !5843

for.end:                                          ; preds = %for.cond
  %38 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5845
  %rects26 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %38, i32 0, i32 4, !dbg !5846
  %39 = bitcast %struct.AVSubtitleRect*** %rects26 to i8*, !dbg !5847
  call void @av_freep(i8* %39), !dbg !5848
  %40 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !5849
  %41 = bitcast %struct.AVSubtitle* %40 to i8*, !dbg !5850
  call void @llvm.memset.p0i8.i64(i8* %41, i8 0, i64 32, i32 8, i1 false), !dbg !5850
  ret void, !dbg !5851
}

; Function Attrs: cold nounwind optsize uwtable
define i32 @avcodec_close(%struct.AVCodecContext* %avctx) #8 !dbg !5852 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %pool = alloca %struct.FramePool*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5853, metadata !1175), !dbg !5854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5855, metadata !1175), !dbg !5856
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5857
  %tobool = icmp ne %struct.AVCodecContext* %0, null, !dbg !5857
  br i1 %tobool, label %if.end, label %if.then, !dbg !5859

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5860
  br label %return, !dbg !5860

if.end:                                           ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5861
  %call = call i32 @avcodec_is_open(%struct.AVCodecContext* %1), !dbg !5863
  %tobool1 = icmp ne i32 %call, 0, !dbg !5863
  br i1 %tobool1, label %if.then2, label %if.end46, !dbg !5864

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.FramePool** %pool, metadata !5865, metadata !1175), !dbg !5867
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5868
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 7, !dbg !5869
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !5869
  %pool3 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i32 0, i32 4, !dbg !5870
  %4 = load %struct.FramePool*, %struct.FramePool** %pool3, align 8, !dbg !5870
  store %struct.FramePool* %4, %struct.FramePool** %pool, align 8, !dbg !5867
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5871
  %internal4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 7, !dbg !5873
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal4, align 8, !dbg !5873
  %frame_thread_encoder = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i32 0, i32 11, !dbg !5874
  %7 = load i8*, i8** %frame_thread_encoder, align 8, !dbg !5874
  %tobool5 = icmp ne i8* %7, null, !dbg !5871
  br i1 %tobool5, label %land.lhs.true, label %if.end7, !dbg !5875

land.lhs.true:                                    ; preds = %if.then2
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5876
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 146, !dbg !5878
  %9 = load i32, i32* %thread_count, align 8, !dbg !5878
  %cmp = icmp sgt i32 %9, 1, !dbg !5879
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !5880

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5881
  call void @ff_frame_thread_encoder_free(%struct.AVCodecContext* %10), !dbg !5883
  br label %if.end7, !dbg !5884

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %if.then2
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5885
  %internal8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 7, !dbg !5887
  %12 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal8, align 8, !dbg !5887
  %thread_ctx = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %12, i32 0, i32 5, !dbg !5888
  %13 = load i8*, i8** %thread_ctx, align 8, !dbg !5888
  %tobool9 = icmp ne i8* %13, null, !dbg !5885
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5889

if.then10:                                        ; preds = %if.end7
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5890
  call void @ff_thread_free(%struct.AVCodecContext* %14), !dbg !5891
  br label %if.end11, !dbg !5891

if.end11:                                         ; preds = %if.then10, %if.end7
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5892
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 3, !dbg !5894
  %16 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !5894
  %tobool12 = icmp ne %struct.AVCodec* %16, null, !dbg !5892
  br i1 %tobool12, label %land.lhs.true13, label %if.end20, !dbg !5895

land.lhs.true13:                                  ; preds = %if.end11
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5896
  %codec14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 3, !dbg !5898
  %18 = load %struct.AVCodec*, %struct.AVCodec** %codec14, align 8, !dbg !5898
  %close = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %18, i32 0, i32 24, !dbg !5899
  %19 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %close, align 8, !dbg !5899
  %tobool15 = icmp ne i32 (%struct.AVCodecContext*)* %19, null, !dbg !5896
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !5900

if.then16:                                        ; preds = %land.lhs.true13
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5901
  %codec17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 3, !dbg !5902
  %21 = load %struct.AVCodec*, %struct.AVCodec** %codec17, align 8, !dbg !5902
  %close18 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %21, i32 0, i32 24, !dbg !5903
  %22 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %close18, align 8, !dbg !5903
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5904
  %call19 = call i32 %22(%struct.AVCodecContext* %23), !dbg !5901
  br label %if.end20, !dbg !5901

if.end20:                                         ; preds = %if.then16, %land.lhs.true13, %if.end11
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5905
  %internal21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 7, !dbg !5906
  %25 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal21, align 8, !dbg !5906
  %byte_buffer_size = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %25, i32 0, i32 10, !dbg !5907
  store i32 0, i32* %byte_buffer_size, align 8, !dbg !5908
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5909
  %internal22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 7, !dbg !5910
  %27 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal22, align 8, !dbg !5910
  %byte_buffer = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %27, i32 0, i32 9, !dbg !5911
  %28 = bitcast i8** %byte_buffer to i8*, !dbg !5912
  call void @av_freep(i8* %28), !dbg !5913
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5914
  %internal23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 7, !dbg !5915
  %30 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal23, align 8, !dbg !5915
  %to_free = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %30, i32 0, i32 3, !dbg !5916
  call void @av_frame_free(%struct.AVFrame** %to_free), !dbg !5917
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5918
  %internal24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 7, !dbg !5919
  %32 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal24, align 8, !dbg !5919
  %compat_decode_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %32, i32 0, i32 23, !dbg !5920
  call void @av_frame_free(%struct.AVFrame** %compat_decode_frame), !dbg !5921
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5922
  %internal25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 7, !dbg !5923
  %34 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal25, align 8, !dbg !5923
  %buffer_frame = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %34, i32 0, i32 17, !dbg !5924
  call void @av_frame_free(%struct.AVFrame** %buffer_frame), !dbg !5925
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5926
  %internal26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 7, !dbg !5927
  %36 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal26, align 8, !dbg !5927
  %buffer_pkt = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %36, i32 0, i32 15, !dbg !5928
  call void @av_packet_free(%struct.AVPacket** %buffer_pkt), !dbg !5929
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5930
  %internal27 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 7, !dbg !5931
  %38 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal27, align 8, !dbg !5931
  %last_pkt_props = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %38, i32 0, i32 8, !dbg !5932
  call void @av_packet_free(%struct.AVPacket** %last_pkt_props), !dbg !5933
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5934
  %internal28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 7, !dbg !5935
  %40 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal28, align 8, !dbg !5935
  %ds = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %40, i32 0, i32 6, !dbg !5936
  %in_pkt = getelementptr inbounds %struct.DecodeSimpleContext, %struct.DecodeSimpleContext* %ds, i32 0, i32 0, !dbg !5937
  call void @av_packet_free(%struct.AVPacket** %in_pkt), !dbg !5938
  store i32 0, i32* %i, align 4, !dbg !5939
  br label %for.cond, !dbg !5941

for.cond:                                         ; preds = %for.inc, %if.end20
  %41 = load i32, i32* %i, align 4, !dbg !5942
  %conv = sext i32 %41 to i64, !dbg !5942
  %cmp29 = icmp ult i64 %conv, 4, !dbg !5945
  br i1 %cmp29, label %for.body, label %for.end, !dbg !5946

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %i, align 4, !dbg !5947
  %idxprom = sext i32 %42 to i64, !dbg !5948
  %43 = load %struct.FramePool*, %struct.FramePool** %pool, align 8, !dbg !5948
  %pools = getelementptr inbounds %struct.FramePool, %struct.FramePool* %43, i32 0, i32 0, !dbg !5949
  %arrayidx = getelementptr inbounds [4 x %struct.AVBufferPool*], [4 x %struct.AVBufferPool*]* %pools, i64 0, i64 %idxprom, !dbg !5948
  call void @av_buffer_pool_uninit(%struct.AVBufferPool** %arrayidx), !dbg !5950
  br label %for.inc, !dbg !5950

for.inc:                                          ; preds = %for.body
  %44 = load i32, i32* %i, align 4, !dbg !5951
  %inc = add nsw i32 %44, 1, !dbg !5951
  store i32 %inc, i32* %i, align 4, !dbg !5951
  br label %for.cond, !dbg !5953, !llvm.loop !5954

for.end:                                          ; preds = %for.cond
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5956
  %internal31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 7, !dbg !5957
  %46 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal31, align 8, !dbg !5957
  %pool32 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %46, i32 0, i32 4, !dbg !5958
  %47 = bitcast %struct.FramePool** %pool32 to i8*, !dbg !5959
  call void @av_freep(i8* %47), !dbg !5960
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5961
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 137, !dbg !5963
  %49 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !5963
  %tobool33 = icmp ne %struct.AVHWAccel* %49, null, !dbg !5961
  br i1 %tobool33, label %land.lhs.true34, label %if.end43, !dbg !5964

land.lhs.true34:                                  ; preds = %for.end
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5965
  %hwaccel35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 137, !dbg !5967
  %51 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel35, align 8, !dbg !5967
  %uninit = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %51, i32 0, i32 13, !dbg !5968
  %uninit36 = bitcast {}** %uninit to i32 (%struct.AVCodecContext*)**, !dbg !5968
  %52 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %uninit36, align 8, !dbg !5968
  %tobool37 = icmp ne i32 (%struct.AVCodecContext*)* %52, null, !dbg !5965
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !5969

if.then38:                                        ; preds = %land.lhs.true34
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5970
  %hwaccel39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 137, !dbg !5971
  %54 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel39, align 8, !dbg !5971
  %uninit40 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %54, i32 0, i32 13, !dbg !5972
  %uninit41 = bitcast {}** %uninit40 to i32 (%struct.AVCodecContext*)**, !dbg !5972
  %55 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %uninit41, align 8, !dbg !5972
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5973
  %call42 = call i32 %55(%struct.AVCodecContext* %56), !dbg !5970
  br label %if.end43, !dbg !5970

if.end43:                                         ; preds = %if.then38, %land.lhs.true34, %for.end
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5974
  %internal44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %57, i32 0, i32 7, !dbg !5975
  %58 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal44, align 8, !dbg !5975
  %hwaccel_priv_data = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %58, i32 0, i32 13, !dbg !5976
  %59 = bitcast i8** %hwaccel_priv_data to i8*, !dbg !5977
  call void @av_freep(i8* %59), !dbg !5978
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5979
  call void @ff_decode_bsfs_uninit(%struct.AVCodecContext* %60), !dbg !5980
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5981
  %internal45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 7, !dbg !5982
  %62 = bitcast %struct.AVCodecInternal** %internal45 to i8*, !dbg !5983
  call void @av_freep(i8* %62), !dbg !5984
  br label %if.end46, !dbg !5985

if.end46:                                         ; preds = %if.end43, %if.end
  store i32 0, i32* %i, align 4, !dbg !5986
  br label %for.cond47, !dbg !5988

for.cond47:                                       ; preds = %for.inc53, %if.end46
  %63 = load i32, i32* %i, align 4, !dbg !5989
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5992
  %nb_coded_side_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 181, !dbg !5993
  %65 = load i32, i32* %nb_coded_side_data, align 8, !dbg !5993
  %cmp48 = icmp slt i32 %63, %65, !dbg !5994
  br i1 %cmp48, label %for.body50, label %for.end55, !dbg !5995

for.body50:                                       ; preds = %for.cond47
  %66 = load i32, i32* %i, align 4, !dbg !5996
  %idxprom51 = sext i32 %66 to i64, !dbg !5997
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5997
  %coded_side_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 180, !dbg !5998
  %68 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %coded_side_data, align 8, !dbg !5998
  %arrayidx52 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %68, i64 %idxprom51, !dbg !5997
  %data = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %arrayidx52, i32 0, i32 0, !dbg !5999
  %69 = bitcast i8** %data to i8*, !dbg !6000
  call void @av_freep(i8* %69), !dbg !6001
  br label %for.inc53, !dbg !6001

for.inc53:                                        ; preds = %for.body50
  %70 = load i32, i32* %i, align 4, !dbg !6002
  %inc54 = add nsw i32 %70, 1, !dbg !6002
  store i32 %inc54, i32* %i, align 4, !dbg !6002
  br label %for.cond47, !dbg !6004, !llvm.loop !6005

for.end55:                                        ; preds = %for.cond47
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6007
  %coded_side_data56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 180, !dbg !6008
  %72 = bitcast %struct.AVPacketSideData** %coded_side_data56 to i8*, !dbg !6009
  call void @av_freep(i8* %72), !dbg !6010
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6011
  %nb_coded_side_data57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 181, !dbg !6012
  store i32 0, i32* %nb_coded_side_data57, align 8, !dbg !6013
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6014
  %hw_frames_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 182, !dbg !6015
  call void @av_buffer_unref(%struct.AVBufferRef** %hw_frames_ctx), !dbg !6016
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6017
  %hw_device_ctx = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 186, !dbg !6018
  call void @av_buffer_unref(%struct.AVBufferRef** %hw_device_ctx), !dbg !6019
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6020
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 6, !dbg !6022
  %77 = load i8*, i8** %priv_data, align 8, !dbg !6022
  %tobool58 = icmp ne i8* %77, null, !dbg !6020
  br i1 %tobool58, label %land.lhs.true59, label %if.end67, !dbg !6023

land.lhs.true59:                                  ; preds = %for.end55
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6024
  %codec60 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %78, i32 0, i32 3, !dbg !6026
  %79 = load %struct.AVCodec*, %struct.AVCodec** %codec60, align 8, !dbg !6026
  %tobool61 = icmp ne %struct.AVCodec* %79, null, !dbg !6024
  br i1 %tobool61, label %land.lhs.true62, label %if.end67, !dbg !6027

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6028
  %codec63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 3, !dbg !6030
  %81 = load %struct.AVCodec*, %struct.AVCodec** %codec63, align 8, !dbg !6030
  %priv_class = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %81, i32 0, i32 11, !dbg !6031
  %82 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !6031
  %tobool64 = icmp ne %struct.AVClass* %82, null, !dbg !6028
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !6032

if.then65:                                        ; preds = %land.lhs.true62
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6033
  %priv_data66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 6, !dbg !6034
  %84 = load i8*, i8** %priv_data66, align 8, !dbg !6034
  call void @av_opt_free(i8* %84), !dbg !6035
  br label %if.end67, !dbg !6035

if.end67:                                         ; preds = %if.then65, %land.lhs.true62, %land.lhs.true59, %for.end55
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6036
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !6036
  call void @av_opt_free(i8* %86), !dbg !6037
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6038
  %priv_data68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 6, !dbg !6039
  %88 = bitcast i8** %priv_data68 to i8*, !dbg !6040
  call void @av_freep(i8* %88), !dbg !6041
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6042
  %codec69 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %89, i32 0, i32 3, !dbg !6044
  %90 = load %struct.AVCodec*, %struct.AVCodec** %codec69, align 8, !dbg !6044
  %call70 = call i32 @av_codec_is_encoder(%struct.AVCodec* %90), !dbg !6045
  %tobool71 = icmp ne i32 %call70, 0, !dbg !6045
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !6046

if.then72:                                        ; preds = %if.end67
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6047
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %91, i32 0, i32 15, !dbg !6049
  %92 = bitcast i8** %extradata to i8*, !dbg !6050
  call void @av_freep(i8* %92), !dbg !6051
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6052
  %coded_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %93, i32 0, i32 145, !dbg !6053
  call void @av_frame_free(%struct.AVFrame** %coded_frame), !dbg !6054
  br label %if.end73, !dbg !6055

if.end73:                                         ; preds = %if.then72, %if.end67
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6056
  %codec74 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %94, i32 0, i32 3, !dbg !6057
  store %struct.AVCodec* null, %struct.AVCodec** %codec74, align 8, !dbg !6058
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6059
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %95, i32 0, i32 148, !dbg !6060
  store i32 0, i32* %active_thread_type, align 8, !dbg !6061
  store i32 0, i32* %retval, align 4, !dbg !6062
  br label %return, !dbg !6062

return:                                           ; preds = %if.end73, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !6063
  ret i32 %96, !dbg !6063
}

declare void @ff_frame_thread_encoder_free(%struct.AVCodecContext*) #2

declare void @ff_thread_free(%struct.AVCodecContext*) #2

declare void @av_buffer_pool_uninit(%struct.AVBufferPool**) #2

declare void @av_buffer_unref(%struct.AVBufferRef**) #2

; Function Attrs: nounwind uwtable
define i8* @avcodec_get_name(i32 %id) #0 !dbg !6064 {
entry:
  %retval = alloca i8*, align 8
  %id.addr = alloca i32, align 4
  %cd = alloca %struct.AVCodecDescriptor*, align 8
  %codec = alloca %struct.AVCodec*, align 8
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6067, metadata !1175), !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %cd, metadata !6069, metadata !1175), !dbg !6070
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec, metadata !6071, metadata !1175), !dbg !6072
  %0 = load i32, i32* %id.addr, align 4, !dbg !6073
  %cmp = icmp eq i32 %0, 0, !dbg !6075
  br i1 %cmp, label %if.then, label %if.end, !dbg !6076

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8** %retval, align 8, !dbg !6077
  br label %return, !dbg !6077

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !6078
  %call = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %1), !dbg !6079
  store %struct.AVCodecDescriptor* %call, %struct.AVCodecDescriptor** %cd, align 8, !dbg !6080
  %2 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %cd, align 8, !dbg !6081
  %tobool = icmp ne %struct.AVCodecDescriptor* %2, null, !dbg !6081
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !6083

if.then1:                                         ; preds = %if.end
  %3 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %cd, align 8, !dbg !6084
  %name = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %3, i32 0, i32 2, !dbg !6085
  %4 = load i8*, i8** %name, align 8, !dbg !6085
  store i8* %4, i8** %retval, align 8, !dbg !6086
  br label %return, !dbg !6086

if.end2:                                          ; preds = %if.end
  %5 = load i32, i32* %id.addr, align 4, !dbg !6087
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i32 0, i32 0), i32 %5), !dbg !6088
  %6 = load i32, i32* %id.addr, align 4, !dbg !6089
  %call3 = call %struct.AVCodec* @avcodec_find_decoder(i32 %6), !dbg !6090
  store %struct.AVCodec* %call3, %struct.AVCodec** %codec, align 8, !dbg !6091
  %7 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6092
  %tobool4 = icmp ne %struct.AVCodec* %7, null, !dbg !6092
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !6094

if.then5:                                         ; preds = %if.end2
  %8 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6095
  %name6 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %8, i32 0, i32 0, !dbg !6096
  %9 = load i8*, i8** %name6, align 8, !dbg !6096
  store i8* %9, i8** %retval, align 8, !dbg !6097
  br label %return, !dbg !6097

if.end7:                                          ; preds = %if.end2
  %10 = load i32, i32* %id.addr, align 4, !dbg !6098
  %call8 = call %struct.AVCodec* @avcodec_find_encoder(i32 %10), !dbg !6099
  store %struct.AVCodec* %call8, %struct.AVCodec** %codec, align 8, !dbg !6100
  %11 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6101
  %tobool9 = icmp ne %struct.AVCodec* %11, null, !dbg !6101
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !6103

if.then10:                                        ; preds = %if.end7
  %12 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6104
  %name11 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %12, i32 0, i32 0, !dbg !6105
  %13 = load i8*, i8** %name11, align 8, !dbg !6105
  store i8* %13, i8** %retval, align 8, !dbg !6106
  br label %return, !dbg !6106

if.end12:                                         ; preds = %if.end7
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i8** %retval, align 8, !dbg !6107
  br label %return, !dbg !6107

return:                                           ; preds = %if.end12, %if.then10, %if.then5, %if.then1, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !6108
  ret i8* %14, !dbg !6108
}

; Function Attrs: nounwind uwtable
define i64 @av_get_codec_tag_string(i8* %buf, i64 %buf_size, i32 %codec_tag) #0 !dbg !6109 {
entry:
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %codec_tag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6112, metadata !1175), !dbg !6113
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !6114, metadata !1175), !dbg !6115
  store i32 %codec_tag, i32* %codec_tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_tag.addr, metadata !6116, metadata !1175), !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6118, metadata !1175), !dbg !6119
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6120, metadata !1175), !dbg !6121
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6122, metadata !1175), !dbg !6123
  store i32 0, i32* %ret, align 4, !dbg !6123
  store i32 0, i32* %i, align 4, !dbg !6124
  br label %for.cond, !dbg !6126

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6127
  %cmp = icmp slt i32 %0, 4, !dbg !6130
  br i1 %cmp, label %for.body, label %for.end, !dbg !6131

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6132
  %2 = load i64, i64* %buf_size.addr, align 8, !dbg !6134
  %3 = load i32, i32* %codec_tag.addr, align 4, !dbg !6135
  %and = and i32 %3, 255, !dbg !6136
  %cmp1 = icmp uge i32 %and, 48, !dbg !6137
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !6138

land.lhs.true:                                    ; preds = %for.body
  %4 = load i32, i32* %codec_tag.addr, align 4, !dbg !6139
  %and2 = and i32 %4, 255, !dbg !6141
  %cmp3 = icmp ule i32 %and2, 57, !dbg !6142
  br i1 %cmp3, label %lor.end26, label %lor.lhs.false, !dbg !6143

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %5 = load i32, i32* %codec_tag.addr, align 4, !dbg !6144
  %and4 = and i32 %5, 255, !dbg !6146
  %cmp5 = icmp uge i32 %and4, 97, !dbg !6147
  br i1 %cmp5, label %land.lhs.true6, label %lor.lhs.false9, !dbg !6148

land.lhs.true6:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %codec_tag.addr, align 4, !dbg !6149
  %and7 = and i32 %6, 255, !dbg !6151
  %cmp8 = icmp ule i32 %and7, 122, !dbg !6152
  br i1 %cmp8, label %lor.end26, label %lor.lhs.false9, !dbg !6153

lor.lhs.false9:                                   ; preds = %land.lhs.true6, %lor.lhs.false
  %7 = load i32, i32* %codec_tag.addr, align 4, !dbg !6154
  %and10 = and i32 %7, 255, !dbg !6156
  %cmp11 = icmp uge i32 %and10, 65, !dbg !6157
  br i1 %cmp11, label %land.lhs.true12, label %lor.rhs, !dbg !6158

land.lhs.true12:                                  ; preds = %lor.lhs.false9
  %8 = load i32, i32* %codec_tag.addr, align 4, !dbg !6159
  %and13 = and i32 %8, 255, !dbg !6161
  %cmp14 = icmp ule i32 %and13, 90, !dbg !6162
  br i1 %cmp14, label %lor.end26, label %lor.rhs, !dbg !6163

lor.rhs:                                          ; preds = %land.lhs.true12, %lor.lhs.false9
  %9 = load i32, i32* %codec_tag.addr, align 4, !dbg !6164
  %and15 = and i32 %9, 255, !dbg !6166
  %cmp16 = icmp eq i32 %and15, 46, !dbg !6167
  br i1 %cmp16, label %lor.end, label %lor.lhs.false17, !dbg !6168

lor.lhs.false17:                                  ; preds = %lor.rhs
  %10 = load i32, i32* %codec_tag.addr, align 4, !dbg !6169
  %and18 = and i32 %10, 255, !dbg !6171
  %cmp19 = icmp eq i32 %and18, 32, !dbg !6172
  br i1 %cmp19, label %lor.end, label %lor.lhs.false20, !dbg !6173

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %11 = load i32, i32* %codec_tag.addr, align 4, !dbg !6174
  %and21 = and i32 %11, 255, !dbg !6176
  %cmp22 = icmp eq i32 %and21, 45, !dbg !6177
  br i1 %cmp22, label %lor.end, label %lor.rhs23, !dbg !6178

lor.rhs23:                                        ; preds = %lor.lhs.false20
  %12 = load i32, i32* %codec_tag.addr, align 4, !dbg !6179
  %and24 = and i32 %12, 255, !dbg !6181
  %cmp25 = icmp eq i32 %and24, 95, !dbg !6182
  br label %lor.end, !dbg !6183

lor.end:                                          ; preds = %lor.rhs23, %lor.lhs.false20, %lor.lhs.false17, %lor.rhs
  %13 = phi i1 [ true, %lor.lhs.false20 ], [ true, %lor.lhs.false17 ], [ true, %lor.rhs ], [ %cmp25, %lor.rhs23 ]
  br label %lor.end26, !dbg !6184

lor.end26:                                        ; preds = %lor.end, %land.lhs.true12, %land.lhs.true6, %land.lhs.true
  %14 = phi i1 [ true, %land.lhs.true12 ], [ true, %land.lhs.true6 ], [ true, %land.lhs.true ], [ %13, %lor.end ]
  %cond = select i1 %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), !dbg !6186
  %15 = load i32, i32* %codec_tag.addr, align 4, !dbg !6188
  %and27 = and i32 %15, 255, !dbg !6189
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 %2, i8* %cond, i32 %and27) #12, !dbg !6190
  store i32 %call, i32* %len, align 4, !dbg !6191
  %16 = load i32, i32* %len, align 4, !dbg !6192
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !6193
  %idx.ext = sext i32 %16 to i64, !dbg !6193
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !6193
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !6193
  %18 = load i64, i64* %buf_size.addr, align 8, !dbg !6194
  %19 = load i32, i32* %len, align 4, !dbg !6195
  %conv = sext i32 %19 to i64, !dbg !6195
  %cmp28 = icmp ugt i64 %18, %conv, !dbg !6196
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !6194

cond.true:                                        ; preds = %lor.end26
  %20 = load i64, i64* %buf_size.addr, align 8, !dbg !6197
  %21 = load i32, i32* %len, align 4, !dbg !6198
  %conv30 = sext i32 %21 to i64, !dbg !6198
  %sub = sub i64 %20, %conv30, !dbg !6199
  br label %cond.end, !dbg !6200

cond.false:                                       ; preds = %lor.end26
  br label %cond.end, !dbg !6201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond31 = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !6202
  store i64 %cond31, i64* %buf_size.addr, align 8, !dbg !6203
  %22 = load i32, i32* %len, align 4, !dbg !6204
  %23 = load i32, i32* %ret, align 4, !dbg !6205
  %add = add nsw i32 %23, %22, !dbg !6205
  store i32 %add, i32* %ret, align 4, !dbg !6205
  %24 = load i32, i32* %codec_tag.addr, align 4, !dbg !6206
  %shr = lshr i32 %24, 8, !dbg !6206
  store i32 %shr, i32* %codec_tag.addr, align 4, !dbg !6206
  br label %for.inc, !dbg !6207

for.inc:                                          ; preds = %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !6208
  %inc = add nsw i32 %25, 1, !dbg !6208
  store i32 %inc, i32* %i, align 4, !dbg !6208
  br label %for.cond, !dbg !6210, !llvm.loop !6211

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %ret, align 4, !dbg !6213
  %conv32 = sext i32 %26 to i64, !dbg !6213
  ret i64 %conv32, !dbg !6214
}

; Function Attrs: nounwind uwtable
define void @avcodec_string(i8* %buf, i32 %buf_size, %struct.AVCodecContext* %enc, i32 %encode) #0 !dbg !6215 {
entry:
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %enc.addr = alloca %struct.AVCodecContext*, align 8
  %encode.addr = alloca i32, align 4
  %codec_type = alloca i8*, align 8
  %codec_name = alloca i8*, align 8
  %profile = alloca i8*, align 8
  %bitrate = alloca i64, align 8
  %new_line = alloca i32, align 4
  %display_aspect_ratio = alloca %struct.AVRational, align 4
  %separator = alloca i8*, align 8
  %.compoundliteral = alloca [32 x i8], align 1
  %detail = alloca [256 x i8], align 16
  %field_order149 = alloca i8*, align 8
  %g = alloca i32, align 4
  %g400 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6218, metadata !1175), !dbg !6219
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !6220, metadata !1175), !dbg !6221
  store %struct.AVCodecContext* %enc, %struct.AVCodecContext** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %enc.addr, metadata !6222, metadata !1175), !dbg !6223
  store i32 %encode, i32* %encode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encode.addr, metadata !6224, metadata !1175), !dbg !6225
  call void @llvm.dbg.declare(metadata i8** %codec_type, metadata !6226, metadata !1175), !dbg !6227
  call void @llvm.dbg.declare(metadata i8** %codec_name, metadata !6228, metadata !1175), !dbg !6229
  call void @llvm.dbg.declare(metadata i8** %profile, metadata !6230, metadata !1175), !dbg !6231
  store i8* null, i8** %profile, align 8, !dbg !6231
  call void @llvm.dbg.declare(metadata i64* %bitrate, metadata !6232, metadata !1175), !dbg !6233
  call void @llvm.dbg.declare(metadata i32* %new_line, metadata !6234, metadata !1175), !dbg !6235
  store i32 0, i32* %new_line, align 4, !dbg !6235
  call void @llvm.dbg.declare(metadata %struct.AVRational* %display_aspect_ratio, metadata !6236, metadata !1175), !dbg !6237
  call void @llvm.dbg.declare(metadata i8** %separator, metadata !6238, metadata !1175), !dbg !6239
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6240
  %dump_separator = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 177, !dbg !6241
  %1 = load i8*, i8** %dump_separator, align 8, !dbg !6241
  %tobool = icmp ne i8* %1, null, !dbg !6240
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6240

cond.true:                                        ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6242
  %dump_separator1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 177, !dbg !6244
  %3 = load i8*, i8** %dump_separator1, align 8, !dbg !6244
  br label %cond.end, !dbg !6245

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6246

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), %cond.false ], !dbg !6248
  store i8* %cond, i8** %separator, align 8, !dbg !6250
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !6251
  %tobool2 = icmp ne i8* %4, null, !dbg !6251
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !6253

lor.lhs.false:                                    ; preds = %cond.end
  %5 = load i32, i32* %buf_size.addr, align 4, !dbg !6254
  %cmp = icmp sle i32 %5, 0, !dbg !6256
  br i1 %cmp, label %if.then, label %if.end, !dbg !6257

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  br label %if.end486, !dbg !6258

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6259
  %codec_type3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 2, !dbg !6260
  %7 = load i32, i32* %codec_type3, align 4, !dbg !6260
  %call = call i8* @av_get_media_type_string(i32 %7), !dbg !6261
  store i8* %call, i8** %codec_type, align 8, !dbg !6262
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6263
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 4, !dbg !6264
  %9 = load i32, i32* %codec_id, align 8, !dbg !6264
  %call4 = call i8* @avcodec_get_name(i32 %9), !dbg !6265
  store i8* %call4, i8** %codec_name, align 8, !dbg !6266
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6267
  %codec_id5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 4, !dbg !6268
  %11 = load i32, i32* %codec_id5, align 8, !dbg !6268
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6269
  %profile6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 153, !dbg !6270
  %13 = load i32, i32* %profile6, align 4, !dbg !6270
  %call7 = call i8* @avcodec_profile_name(i32 %11, i32 %13), !dbg !6271
  store i8* %call7, i8** %profile, align 8, !dbg !6272
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !6273
  %15 = load i32, i32* %buf_size.addr, align 4, !dbg !6274
  %conv = sext i32 %15 to i64, !dbg !6274
  %16 = load i8*, i8** %codec_type, align 8, !dbg !6275
  %tobool8 = icmp ne i8* %16, null, !dbg !6275
  br i1 %tobool8, label %cond.true9, label %cond.false10, !dbg !6275

cond.true9:                                       ; preds = %if.end
  %17 = load i8*, i8** %codec_type, align 8, !dbg !6276
  br label %cond.end11, !dbg !6277

cond.false10:                                     ; preds = %if.end
  br label %cond.end11, !dbg !6278

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i8* [ %17, %cond.true9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), %cond.false10 ], !dbg !6279
  %18 = load i8*, i8** %codec_name, align 8, !dbg !6280
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 %conv, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i8* %cond12, i8* %18) #12, !dbg !6281
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !6282
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 0, !dbg !6282
  %20 = load i8, i8* %arrayidx, align 1, !dbg !6283
  %conv14 = sext i8 %20 to i32, !dbg !6283
  %xor = xor i32 %conv14, 32, !dbg !6283
  %conv15 = trunc i32 %xor to i8, !dbg !6283
  store i8 %conv15, i8* %arrayidx, align 1, !dbg !6283
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6284
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 3, !dbg !6286
  %22 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !6286
  %tobool16 = icmp ne %struct.AVCodec* %22, null, !dbg !6284
  br i1 %tobool16, label %land.lhs.true, label %if.end27, !dbg !6287

land.lhs.true:                                    ; preds = %cond.end11
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6288
  %codec17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 3, !dbg !6290
  %24 = load %struct.AVCodec*, %struct.AVCodec** %codec17, align 8, !dbg !6290
  %name = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %24, i32 0, i32 0, !dbg !6291
  %25 = load i8*, i8** %name, align 8, !dbg !6291
  %26 = load i8*, i8** %codec_name, align 8, !dbg !6292
  %call18 = call i32 @strcmp(i8* %25, i8* %26) #13, !dbg !6293
  %tobool19 = icmp ne i32 %call18, 0, !dbg !6293
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !6294

if.then20:                                        ; preds = %land.lhs.true
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !6295
  %28 = load i8*, i8** %buf.addr, align 8, !dbg !6296
  %call21 = call i64 @strlen(i8* %28) #13, !dbg !6297
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %call21, !dbg !6298
  %29 = load i32, i32* %buf_size.addr, align 4, !dbg !6299
  %conv22 = sext i32 %29 to i64, !dbg !6299
  %30 = load i8*, i8** %buf.addr, align 8, !dbg !6300
  %call23 = call i64 @strlen(i8* %30) #13, !dbg !6301
  %sub = sub i64 %conv22, %call23, !dbg !6302
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6303
  %codec24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 3, !dbg !6304
  %32 = load %struct.AVCodec*, %struct.AVCodec** %codec24, align 8, !dbg !6304
  %name25 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %32, i32 0, i32 0, !dbg !6305
  %33 = load i8*, i8** %name25, align 8, !dbg !6305
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i8* %33) #12, !dbg !6306
  br label %if.end27, !dbg !6308

if.end27:                                         ; preds = %if.then20, %land.lhs.true, %cond.end11
  %34 = load i8*, i8** %profile, align 8, !dbg !6309
  %tobool28 = icmp ne i8* %34, null, !dbg !6309
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !6311

if.then29:                                        ; preds = %if.end27
  %35 = load i8*, i8** %buf.addr, align 8, !dbg !6312
  %36 = load i8*, i8** %buf.addr, align 8, !dbg !6313
  %call30 = call i64 @strlen(i8* %36) #13, !dbg !6314
  %add.ptr31 = getelementptr inbounds i8, i8* %35, i64 %call30, !dbg !6315
  %37 = load i32, i32* %buf_size.addr, align 4, !dbg !6316
  %conv32 = sext i32 %37 to i64, !dbg !6316
  %38 = load i8*, i8** %buf.addr, align 8, !dbg !6317
  %call33 = call i64 @strlen(i8* %38) #13, !dbg !6318
  %sub34 = sub i64 %conv32, %call33, !dbg !6320
  %39 = load i8*, i8** %profile, align 8, !dbg !6321
  %call35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr31, i64 %sub34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i8* %39) #12, !dbg !6322
  br label %if.end36, !dbg !6324

if.end36:                                         ; preds = %if.then29, %if.end27
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6325
  %codec_type37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 2, !dbg !6327
  %41 = load i32, i32* %codec_type37, align 4, !dbg !6327
  %cmp38 = icmp eq i32 %41, 0, !dbg !6328
  br i1 %cmp38, label %land.lhs.true40, label %if.end58, !dbg !6329

land.lhs.true40:                                  ; preds = %if.end36
  %call41 = call i32 @av_log_get_level(), !dbg !6330
  %cmp42 = icmp sge i32 %call41, 40, !dbg !6332
  br i1 %cmp42, label %land.lhs.true44, label %if.end58, !dbg !6333

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6334
  %refs = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 71, !dbg !6335
  %43 = load i32, i32* %refs, align 4, !dbg !6335
  %tobool45 = icmp ne i32 %43, 0, !dbg !6334
  br i1 %tobool45, label %if.then46, label %if.end58, !dbg !6336

if.then46:                                        ; preds = %land.lhs.true44
  %44 = load i8*, i8** %buf.addr, align 8, !dbg !6337
  %45 = load i8*, i8** %buf.addr, align 8, !dbg !6338
  %call47 = call i64 @strlen(i8* %45) #13, !dbg !6339
  %add.ptr48 = getelementptr inbounds i8, i8* %44, i64 %call47, !dbg !6340
  %46 = load i32, i32* %buf_size.addr, align 4, !dbg !6341
  %conv49 = sext i32 %46 to i64, !dbg !6341
  %47 = load i8*, i8** %buf.addr, align 8, !dbg !6342
  %call50 = call i64 @strlen(i8* %47) #13, !dbg !6343
  %sub51 = sub i64 %conv49, %call50, !dbg !6344
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6345
  %refs52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 71, !dbg !6346
  %49 = load i32, i32* %refs52, align 4, !dbg !6346
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6347
  %refs53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 71, !dbg !6348
  %51 = load i32, i32* %refs53, align 4, !dbg !6348
  %cmp54 = icmp sgt i32 %51, 1, !dbg !6349
  %cond56 = select i1 %cmp54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.49, i32 0, i32 0), !dbg !6347
  %call57 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr48, i64 %sub51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i32 0, i32 0), i32 %49, i8* %cond56) #12, !dbg !6350
  br label %if.end58, !dbg !6352

if.end58:                                         ; preds = %if.then46, %land.lhs.true44, %land.lhs.true40, %if.end36
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6353
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 5, !dbg !6355
  %53 = load i32, i32* %codec_tag, align 4, !dbg !6355
  %tobool59 = icmp ne i32 %53, 0, !dbg !6353
  br i1 %tobool59, label %if.then60, label %if.end70, !dbg !6356

if.then60:                                        ; preds = %if.end58
  %54 = load i8*, i8** %buf.addr, align 8, !dbg !6357
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !6358
  %call61 = call i64 @strlen(i8* %55) #13, !dbg !6359
  %add.ptr62 = getelementptr inbounds i8, i8* %54, i64 %call61, !dbg !6360
  %56 = load i32, i32* %buf_size.addr, align 4, !dbg !6361
  %conv63 = sext i32 %56 to i64, !dbg !6361
  %57 = load i8*, i8** %buf.addr, align 8, !dbg !6362
  %call64 = call i64 @strlen(i8* %57) #13, !dbg !6363
  %sub65 = sub i64 %conv63, %call64, !dbg !6365
  %58 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !6366
  call void @llvm.memset.p0i8.i64(i8* %58, i8 0, i64 32, i32 1, i1 false), !dbg !6366
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !6367
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !6367
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !6366
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6368
  %codec_tag66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 5, !dbg !6369
  %60 = load i32, i32* %codec_tag66, align 4, !dbg !6369
  %call67 = call i8* @av_fourcc_make_string(i8* %arraydecay, i32 %60), !dbg !6370
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6371
  %codec_tag68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 5, !dbg !6372
  %62 = load i32, i32* %codec_tag68, align 4, !dbg !6372
  %call69 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr62, i64 %sub65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i8* %call67, i32 %62) #12, !dbg !6373
  br label %if.end70, !dbg !6375

if.end70:                                         ; preds = %if.then60, %if.end58
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6376
  %codec_type71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 2, !dbg !6377
  %64 = load i32, i32* %codec_type71, align 4, !dbg !6377
  switch i32 %64, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb320
    i32 2, label %sw.bb395
    i32 3, label %sw.bb425
  ], !dbg !6378

sw.bb:                                            ; preds = %if.end70
  call void @llvm.dbg.declare(metadata [256 x i8]* %detail, metadata !6379, metadata !1175), !dbg !6384
  %65 = bitcast [256 x i8]* %detail to i8*, !dbg !6384
  call void @llvm.memset.p0i8.i64(i8* %65, i8 0, i64 256, i32 16, i1 false), !dbg !6384
  %66 = bitcast i8* %65 to [256 x i8]*, !dbg !6384
  %67 = getelementptr [256 x i8], [256 x i8]* %66, i32 0, i32 0, !dbg !6384
  store i8 40, i8* %67, !dbg !6384
  %68 = load i8*, i8** %buf.addr, align 8, !dbg !6385
  %69 = load i8*, i8** %separator, align 8, !dbg !6386
  %70 = load i32, i32* %buf_size.addr, align 4, !dbg !6387
  %conv72 = sext i32 %70 to i64, !dbg !6387
  %call73 = call i64 @av_strlcat(i8* %68, i8* %69, i64 %conv72), !dbg !6388
  %71 = load i8*, i8** %buf.addr, align 8, !dbg !6389
  %72 = load i8*, i8** %buf.addr, align 8, !dbg !6390
  %call74 = call i64 @strlen(i8* %72) #13, !dbg !6391
  %add.ptr75 = getelementptr inbounds i8, i8* %71, i64 %call74, !dbg !6392
  %73 = load i32, i32* %buf_size.addr, align 4, !dbg !6393
  %conv76 = sext i32 %73 to i64, !dbg !6393
  %74 = load i8*, i8** %buf.addr, align 8, !dbg !6394
  %call77 = call i64 @strlen(i8* %74) #13, !dbg !6395
  %sub78 = sub i64 %conv76, %call77, !dbg !6397
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6398
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 25, !dbg !6399
  %76 = load i32, i32* %pix_fmt, align 8, !dbg !6399
  %cmp79 = icmp eq i32 %76, -1, !dbg !6400
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !6398

cond.true81:                                      ; preds = %sw.bb
  br label %cond.end85, !dbg !6401

cond.false82:                                     ; preds = %sw.bb
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6403
  %pix_fmt83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %77, i32 0, i32 25, !dbg !6404
  %78 = load i32, i32* %pix_fmt83, align 8, !dbg !6404
  %call84 = call i8* @av_get_pix_fmt_name(i32 %78), !dbg !6405
  br label %cond.end85, !dbg !6406

cond.end85:                                       ; preds = %cond.false82, %cond.true81
  %cond86 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %cond.true81 ], [ %call84, %cond.false82 ], !dbg !6407
  %call87 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr75, i64 %sub78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* %cond86) #12, !dbg !6409
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6410
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %79, i32 0, i32 143, !dbg !6412
  %80 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !6412
  %tobool88 = icmp ne i32 %80, 0, !dbg !6410
  br i1 %tobool88, label %land.lhs.true89, label %if.end104, !dbg !6413

land.lhs.true89:                                  ; preds = %cond.end85
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6414
  %pix_fmt90 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 25, !dbg !6416
  %82 = load i32, i32* %pix_fmt90, align 8, !dbg !6416
  %cmp91 = icmp ne i32 %82, -1, !dbg !6417
  br i1 %cmp91, label %land.lhs.true93, label %if.end104, !dbg !6418

land.lhs.true93:                                  ; preds = %land.lhs.true89
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6419
  %bits_per_raw_sample94 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 143, !dbg !6420
  %84 = load i32, i32* %bits_per_raw_sample94, align 4, !dbg !6420
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6421
  %pix_fmt95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %85, i32 0, i32 25, !dbg !6422
  %86 = load i32, i32* %pix_fmt95, align 8, !dbg !6422
  %call96 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %86), !dbg !6423
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %call96, i32 0, i32 5, !dbg !6424
  %arrayidx97 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !6423
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx97, i32 0, i32 4, !dbg !6425
  %87 = load i32, i32* %depth, align 8, !dbg !6425
  %cmp98 = icmp slt i32 %84, %87, !dbg !6426
  br i1 %cmp98, label %if.then100, label %if.end104, !dbg !6427

if.then100:                                       ; preds = %land.lhs.true93
  %arraydecay101 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6428
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6429
  %bits_per_raw_sample102 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 143, !dbg !6430
  %89 = load i32, i32* %bits_per_raw_sample102, align 4, !dbg !6430
  %call103 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay101, i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i32 %89), !dbg !6431
  br label %if.end104, !dbg !6431

if.end104:                                        ; preds = %if.then100, %land.lhs.true93, %land.lhs.true89, %cond.end85
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6432
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 78, !dbg !6434
  %91 = load i32, i32* %color_range, align 8, !dbg !6434
  %cmp105 = icmp ne i32 %91, 0, !dbg !6435
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !6436

if.then107:                                       ; preds = %if.end104
  %arraydecay108 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6437
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6438
  %color_range109 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %92, i32 0, i32 78, !dbg !6439
  %93 = load i32, i32* %color_range109, align 8, !dbg !6439
  %call110 = call i8* @av_color_range_name(i32 %93), !dbg !6440
  %call111 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay108, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* %call110), !dbg !6441
  br label %if.end112, !dbg !6441

if.end112:                                        ; preds = %if.then107, %if.end104
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6442
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %94, i32 0, i32 77, !dbg !6444
  %95 = load i32, i32* %colorspace, align 4, !dbg !6444
  %cmp113 = icmp ne i32 %95, 2, !dbg !6445
  br i1 %cmp113, label %if.then121, label %lor.lhs.false115, !dbg !6446

lor.lhs.false115:                                 ; preds = %if.end112
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6447
  %color_primaries = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 75, !dbg !6448
  %97 = load i32, i32* %color_primaries, align 4, !dbg !6448
  %cmp116 = icmp ne i32 %97, 2, !dbg !6449
  br i1 %cmp116, label %if.then121, label %lor.lhs.false118, !dbg !6450

lor.lhs.false118:                                 ; preds = %lor.lhs.false115
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6451
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 76, !dbg !6452
  %99 = load i32, i32* %color_trc, align 8, !dbg !6452
  %cmp119 = icmp ne i32 %99, 2, !dbg !6453
  br i1 %cmp119, label %if.then121, label %if.end145, !dbg !6454

if.then121:                                       ; preds = %lor.lhs.false118, %lor.lhs.false115, %if.end112
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6455
  %colorspace122 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 77, !dbg !6458
  %101 = load i32, i32* %colorspace122, align 4, !dbg !6458
  %102 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6459
  %color_primaries123 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %102, i32 0, i32 75, !dbg !6460
  %103 = load i32, i32* %color_primaries123, align 4, !dbg !6460
  %cmp124 = icmp ne i32 %101, %103, !dbg !6461
  br i1 %cmp124, label %if.then131, label %lor.lhs.false126, !dbg !6462

lor.lhs.false126:                                 ; preds = %if.then121
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6463
  %colorspace127 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %104, i32 0, i32 77, !dbg !6464
  %105 = load i32, i32* %colorspace127, align 4, !dbg !6464
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6465
  %color_trc128 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %106, i32 0, i32 76, !dbg !6466
  %107 = load i32, i32* %color_trc128, align 8, !dbg !6466
  %cmp129 = icmp ne i32 %105, %107, !dbg !6467
  br i1 %cmp129, label %if.then131, label %if.else, !dbg !6468

if.then131:                                       ; preds = %lor.lhs.false126, %if.then121
  store i32 1, i32* %new_line, align 4, !dbg !6470
  %arraydecay132 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6472
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6473
  %colorspace133 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 77, !dbg !6474
  %109 = load i32, i32* %colorspace133, align 4, !dbg !6474
  %call134 = call i8* @av_color_space_name(i32 %109), !dbg !6475
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6476
  %color_primaries135 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 75, !dbg !6477
  %111 = load i32, i32* %color_primaries135, align 4, !dbg !6477
  %call136 = call i8* @av_color_primaries_name(i32 %111), !dbg !6478
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6479
  %color_trc137 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 76, !dbg !6480
  %113 = load i32, i32* %color_trc137, align 8, !dbg !6480
  %call138 = call i8* @av_color_transfer_name(i32 %113), !dbg !6481
  %call139 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay132, i64 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0), i8* %call134, i8* %call136, i8* %call138), !dbg !6482
  br label %if.end144, !dbg !6483

if.else:                                          ; preds = %lor.lhs.false126
  %arraydecay140 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6484
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6485
  %colorspace141 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %114, i32 0, i32 77, !dbg !6486
  %115 = load i32, i32* %colorspace141, align 4, !dbg !6486
  %call142 = call i8* @av_get_colorspace_name(i32 %115), !dbg !6487
  %call143 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay140, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* %call142), !dbg !6488
  br label %if.end144

if.end144:                                        ; preds = %if.else, %if.then131
  br label %if.end145, !dbg !6489

if.end145:                                        ; preds = %if.end144, %lor.lhs.false118
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6490
  %field_order = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %116, i32 0, i32 81, !dbg !6492
  %117 = load i32, i32* %field_order, align 4, !dbg !6492
  %cmp146 = icmp ne i32 %117, 0, !dbg !6493
  br i1 %cmp146, label %if.then148, label %if.end175, !dbg !6494

if.then148:                                       ; preds = %if.end145
  call void @llvm.dbg.declare(metadata i8** %field_order149, metadata !6495, metadata !1175), !dbg !6497
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i8** %field_order149, align 8, !dbg !6497
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6498
  %field_order150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %118, i32 0, i32 81, !dbg !6500
  %119 = load i32, i32* %field_order150, align 4, !dbg !6500
  %cmp151 = icmp eq i32 %119, 2, !dbg !6501
  br i1 %cmp151, label %if.then153, label %if.else154, !dbg !6502

if.then153:                                       ; preds = %if.then148
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i8** %field_order149, align 8, !dbg !6503
  br label %if.end172, !dbg !6504

if.else154:                                       ; preds = %if.then148
  %120 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6505
  %field_order155 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %120, i32 0, i32 81, !dbg !6507
  %121 = load i32, i32* %field_order155, align 4, !dbg !6507
  %cmp156 = icmp eq i32 %121, 3, !dbg !6508
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !6509

if.then158:                                       ; preds = %if.else154
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i8** %field_order149, align 8, !dbg !6510
  br label %if.end171, !dbg !6511

if.else159:                                       ; preds = %if.else154
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6512
  %field_order160 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %122, i32 0, i32 81, !dbg !6514
  %123 = load i32, i32* %field_order160, align 4, !dbg !6514
  %cmp161 = icmp eq i32 %123, 4, !dbg !6515
  br i1 %cmp161, label %if.then163, label %if.else164, !dbg !6516

if.then163:                                       ; preds = %if.else159
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.58, i32 0, i32 0), i8** %field_order149, align 8, !dbg !6517
  br label %if.end170, !dbg !6518

if.else164:                                       ; preds = %if.else159
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6519
  %field_order165 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %124, i32 0, i32 81, !dbg !6521
  %125 = load i32, i32* %field_order165, align 4, !dbg !6521
  %cmp166 = icmp eq i32 %125, 5, !dbg !6522
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !6523

if.then168:                                       ; preds = %if.else164
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i32 0, i32 0), i8** %field_order149, align 8, !dbg !6524
  br label %if.end169, !dbg !6525

if.end169:                                        ; preds = %if.then168, %if.else164
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then163
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then158
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.then153
  %arraydecay173 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6526
  %126 = load i8*, i8** %field_order149, align 8, !dbg !6527
  %call174 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay173, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* %126), !dbg !6528
  br label %if.end175, !dbg !6529

if.end175:                                        ; preds = %if.end172, %if.end145
  %call176 = call i32 @av_log_get_level(), !dbg !6530
  %cmp177 = icmp sge i32 %call176, 40, !dbg !6532
  br i1 %cmp177, label %land.lhs.true179, label %if.end187, !dbg !6533

land.lhs.true179:                                 ; preds = %if.end175
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6534
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 79, !dbg !6535
  %128 = load i32, i32* %chroma_sample_location, align 4, !dbg !6535
  %cmp180 = icmp ne i32 %128, 0, !dbg !6536
  br i1 %cmp180, label %if.then182, label %if.end187, !dbg !6537

if.then182:                                       ; preds = %land.lhs.true179
  %arraydecay183 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6538
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6539
  %chroma_sample_location184 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 79, !dbg !6540
  %130 = load i32, i32* %chroma_sample_location184, align 4, !dbg !6540
  %call185 = call i8* @av_chroma_location_name(i32 %130), !dbg !6541
  %call186 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay183, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* %call185), !dbg !6542
  br label %if.end187, !dbg !6542

if.end187:                                        ; preds = %if.then182, %land.lhs.true179, %if.end175
  %arraydecay188 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6543
  %call189 = call i64 @strlen(i8* %arraydecay188) #13, !dbg !6545
  %cmp190 = icmp ugt i64 %call189, 1, !dbg !6546
  br i1 %cmp190, label %if.then192, label %if.end200, !dbg !6547

if.then192:                                       ; preds = %if.end187
  %arraydecay193 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6548
  %call194 = call i64 @strlen(i8* %arraydecay193) #13, !dbg !6550
  %sub195 = sub i64 %call194, 2, !dbg !6551
  %arrayidx196 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i64 0, i64 %sub195, !dbg !6552
  store i8 0, i8* %arrayidx196, align 1, !dbg !6553
  %131 = load i8*, i8** %buf.addr, align 8, !dbg !6554
  %132 = load i32, i32* %buf_size.addr, align 4, !dbg !6555
  %conv197 = sext i32 %132 to i64, !dbg !6555
  %arraydecay198 = getelementptr inbounds [256 x i8], [256 x i8]* %detail, i32 0, i32 0, !dbg !6556
  %call199 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %131, i64 %conv197, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i32 0, i32 0), i8* %arraydecay198), !dbg !6557
  br label %if.end200, !dbg !6558

if.end200:                                        ; preds = %if.then192, %if.end187
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6559
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %133, i32 0, i32 20, !dbg !6561
  %134 = load i32, i32* %width, align 4, !dbg !6561
  %tobool201 = icmp ne i32 %134, 0, !dbg !6559
  br i1 %tobool201, label %if.then202, label %if.end289, !dbg !6562

if.then202:                                       ; preds = %if.end200
  %135 = load i8*, i8** %buf.addr, align 8, !dbg !6563
  %136 = load i32, i32* %new_line, align 4, !dbg !6565
  %tobool203 = icmp ne i32 %136, 0, !dbg !6565
  br i1 %tobool203, label %cond.true204, label %cond.false205, !dbg !6565

cond.true204:                                     ; preds = %if.then202
  %137 = load i8*, i8** %separator, align 8, !dbg !6566
  br label %cond.end206, !dbg !6568

cond.false205:                                    ; preds = %if.then202
  br label %cond.end206, !dbg !6569

cond.end206:                                      ; preds = %cond.false205, %cond.true204
  %cond207 = phi i8* [ %137, %cond.true204 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), %cond.false205 ], !dbg !6571
  %138 = load i32, i32* %buf_size.addr, align 4, !dbg !6573
  %conv208 = sext i32 %138 to i64, !dbg !6573
  %call209 = call i64 @av_strlcat(i8* %135, i8* %cond207, i64 %conv208), !dbg !6574
  %139 = load i8*, i8** %buf.addr, align 8, !dbg !6575
  %140 = load i8*, i8** %buf.addr, align 8, !dbg !6576
  %call210 = call i64 @strlen(i8* %140) #13, !dbg !6577
  %add.ptr211 = getelementptr inbounds i8, i8* %139, i64 %call210, !dbg !6578
  %141 = load i32, i32* %buf_size.addr, align 4, !dbg !6579
  %conv212 = sext i32 %141 to i64, !dbg !6579
  %142 = load i8*, i8** %buf.addr, align 8, !dbg !6580
  %call213 = call i64 @strlen(i8* %142) #13, !dbg !6581
  %sub214 = sub i64 %conv212, %call213, !dbg !6582
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6583
  %width215 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 20, !dbg !6584
  %144 = load i32, i32* %width215, align 4, !dbg !6584
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6585
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %145, i32 0, i32 21, !dbg !6586
  %146 = load i32, i32* %height, align 8, !dbg !6586
  %call216 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr211, i64 %sub214, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i32 %144, i32 %146) #12, !dbg !6587
  %call217 = call i32 @av_log_get_level(), !dbg !6588
  %cmp218 = icmp sge i32 %call217, 40, !dbg !6590
  br i1 %cmp218, label %land.lhs.true220, label %if.end237, !dbg !6591

land.lhs.true220:                                 ; preds = %cond.end206
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6592
  %width221 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 20, !dbg !6593
  %148 = load i32, i32* %width221, align 4, !dbg !6593
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6594
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %149, i32 0, i32 22, !dbg !6595
  %150 = load i32, i32* %coded_width, align 4, !dbg !6595
  %cmp222 = icmp ne i32 %148, %150, !dbg !6596
  br i1 %cmp222, label %if.then228, label %lor.lhs.false224, !dbg !6597

lor.lhs.false224:                                 ; preds = %land.lhs.true220
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6598
  %height225 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %151, i32 0, i32 21, !dbg !6599
  %152 = load i32, i32* %height225, align 8, !dbg !6599
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6600
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %153, i32 0, i32 23, !dbg !6601
  %154 = load i32, i32* %coded_height, align 8, !dbg !6601
  %cmp226 = icmp ne i32 %152, %154, !dbg !6602
  br i1 %cmp226, label %if.then228, label %if.end237, !dbg !6603

if.then228:                                       ; preds = %lor.lhs.false224, %land.lhs.true220
  %155 = load i8*, i8** %buf.addr, align 8, !dbg !6604
  %156 = load i8*, i8** %buf.addr, align 8, !dbg !6605
  %call229 = call i64 @strlen(i8* %156) #13, !dbg !6606
  %add.ptr230 = getelementptr inbounds i8, i8* %155, i64 %call229, !dbg !6607
  %157 = load i32, i32* %buf_size.addr, align 4, !dbg !6608
  %conv231 = sext i32 %157 to i64, !dbg !6608
  %158 = load i8*, i8** %buf.addr, align 8, !dbg !6609
  %call232 = call i64 @strlen(i8* %158) #13, !dbg !6610
  %sub233 = sub i64 %conv231, %call232, !dbg !6612
  %159 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6613
  %coded_width234 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %159, i32 0, i32 22, !dbg !6614
  %160 = load i32, i32* %coded_width234, align 4, !dbg !6614
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6615
  %coded_height235 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %161, i32 0, i32 23, !dbg !6616
  %162 = load i32, i32* %coded_height235, align 8, !dbg !6616
  %call236 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr230, i64 %sub233, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i32 %160, i32 %162) #12, !dbg !6617
  br label %if.end237, !dbg !6619

if.end237:                                        ; preds = %if.then228, %lor.lhs.false224, %cond.end206
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6620
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %163, i32 0, i32 44, !dbg !6622
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !6623
  %164 = load i32, i32* %num, align 8, !dbg !6623
  %tobool238 = icmp ne i32 %164, 0, !dbg !6620
  br i1 %tobool238, label %if.then239, label %if.end265, !dbg !6624

if.then239:                                       ; preds = %if.end237
  %num240 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 0, !dbg !6625
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 1, !dbg !6627
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6628
  %width241 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %165, i32 0, i32 20, !dbg !6629
  %166 = load i32, i32* %width241, align 4, !dbg !6629
  %conv242 = sext i32 %166 to i64, !dbg !6628
  %167 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6630
  %sample_aspect_ratio243 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %167, i32 0, i32 44, !dbg !6631
  %num244 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio243, i32 0, i32 0, !dbg !6632
  %168 = load i32, i32* %num244, align 8, !dbg !6632
  %conv245 = sext i32 %168 to i64, !dbg !6633
  %mul = mul nsw i64 %conv242, %conv245, !dbg !6634
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6635
  %height246 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %169, i32 0, i32 21, !dbg !6636
  %170 = load i32, i32* %height246, align 8, !dbg !6636
  %conv247 = sext i32 %170 to i64, !dbg !6635
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6637
  %sample_aspect_ratio248 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %171, i32 0, i32 44, !dbg !6638
  %den249 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio248, i32 0, i32 1, !dbg !6639
  %172 = load i32, i32* %den249, align 4, !dbg !6639
  %conv250 = sext i32 %172 to i64, !dbg !6640
  %mul251 = mul nsw i64 %conv247, %conv250, !dbg !6641
  %call252 = call i32 @av_reduce(i32* %num240, i32* %den, i64 %mul, i64 %mul251, i64 1048576), !dbg !6642
  %173 = load i8*, i8** %buf.addr, align 8, !dbg !6643
  %174 = load i8*, i8** %buf.addr, align 8, !dbg !6644
  %call253 = call i64 @strlen(i8* %174) #13, !dbg !6645
  %add.ptr254 = getelementptr inbounds i8, i8* %173, i64 %call253, !dbg !6646
  %175 = load i32, i32* %buf_size.addr, align 4, !dbg !6647
  %conv255 = sext i32 %175 to i64, !dbg !6647
  %176 = load i8*, i8** %buf.addr, align 8, !dbg !6648
  %call256 = call i64 @strlen(i8* %176) #13, !dbg !6649
  %sub257 = sub i64 %conv255, %call256, !dbg !6651
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6652
  %sample_aspect_ratio258 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %177, i32 0, i32 44, !dbg !6653
  %num259 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio258, i32 0, i32 0, !dbg !6654
  %178 = load i32, i32* %num259, align 8, !dbg !6654
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6655
  %sample_aspect_ratio260 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %179, i32 0, i32 44, !dbg !6656
  %den261 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio260, i32 0, i32 1, !dbg !6657
  %180 = load i32, i32* %den261, align 4, !dbg !6657
  %num262 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 0, !dbg !6658
  %181 = load i32, i32* %num262, align 4, !dbg !6658
  %den263 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 1, !dbg !6659
  %182 = load i32, i32* %den263, align 4, !dbg !6659
  %call264 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr254, i64 %sub257, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), i32 %178, i32 %180, i32 %181, i32 %182) #12, !dbg !6660
  br label %if.end265, !dbg !6662

if.end265:                                        ; preds = %if.then239, %if.end237
  %call266 = call i32 @av_log_get_level(), !dbg !6663
  %cmp267 = icmp sge i32 %call266, 48, !dbg !6665
  br i1 %cmp267, label %if.then269, label %if.end288, !dbg !6666

if.then269:                                       ; preds = %if.end265
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6667, metadata !1175), !dbg !6669
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6670
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %183, i32 0, i32 17, !dbg !6671
  %num270 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !6672
  %184 = load i32, i32* %num270, align 4, !dbg !6672
  %conv271 = sext i32 %184 to i64, !dbg !6670
  %185 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6673
  %time_base272 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i32 0, i32 17, !dbg !6674
  %den273 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base272, i32 0, i32 1, !dbg !6675
  %186 = load i32, i32* %den273, align 4, !dbg !6675
  %conv274 = sext i32 %186 to i64, !dbg !6673
  %call275 = call i64 @av_gcd(i64 %conv271, i64 %conv274) #1, !dbg !6676
  %conv276 = trunc i64 %call275 to i32, !dbg !6676
  store i32 %conv276, i32* %g, align 4, !dbg !6669
  %187 = load i8*, i8** %buf.addr, align 8, !dbg !6677
  %188 = load i8*, i8** %buf.addr, align 8, !dbg !6678
  %call277 = call i64 @strlen(i8* %188) #13, !dbg !6679
  %add.ptr278 = getelementptr inbounds i8, i8* %187, i64 %call277, !dbg !6680
  %189 = load i32, i32* %buf_size.addr, align 4, !dbg !6681
  %conv279 = sext i32 %189 to i64, !dbg !6681
  %190 = load i8*, i8** %buf.addr, align 8, !dbg !6682
  %call280 = call i64 @strlen(i8* %190) #13, !dbg !6683
  %sub281 = sub i64 %conv279, %call280, !dbg !6685
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6686
  %time_base282 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 17, !dbg !6687
  %num283 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base282, i32 0, i32 0, !dbg !6688
  %192 = load i32, i32* %num283, align 4, !dbg !6688
  %193 = load i32, i32* %g, align 4, !dbg !6689
  %div = sdiv i32 %192, %193, !dbg !6690
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6691
  %time_base284 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %194, i32 0, i32 17, !dbg !6692
  %den285 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base284, i32 0, i32 1, !dbg !6693
  %195 = load i32, i32* %den285, align 4, !dbg !6693
  %196 = load i32, i32* %g, align 4, !dbg !6694
  %div286 = sdiv i32 %195, %196, !dbg !6695
  %call287 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr278, i64 %sub281, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i32 0, i32 0), i32 %div, i32 %div286) #12, !dbg !6696
  br label %if.end288, !dbg !6698

if.end288:                                        ; preds = %if.then269, %if.end265
  br label %if.end289, !dbg !6699

if.end289:                                        ; preds = %if.end288, %if.end200
  %197 = load i32, i32* %encode.addr, align 4, !dbg !6700
  %tobool290 = icmp ne i32 %197, 0, !dbg !6700
  br i1 %tobool290, label %if.then291, label %if.else298, !dbg !6702

if.then291:                                       ; preds = %if.end289
  %198 = load i8*, i8** %buf.addr, align 8, !dbg !6703
  %199 = load i8*, i8** %buf.addr, align 8, !dbg !6705
  %call292 = call i64 @strlen(i8* %199) #13, !dbg !6706
  %add.ptr293 = getelementptr inbounds i8, i8* %198, i64 %call292, !dbg !6707
  %200 = load i32, i32* %buf_size.addr, align 4, !dbg !6708
  %conv294 = sext i32 %200 to i64, !dbg !6708
  %201 = load i8*, i8** %buf.addr, align 8, !dbg !6709
  %call295 = call i64 @strlen(i8* %201) #13, !dbg !6710
  %sub296 = sub i64 %conv294, %call295, !dbg !6712
  %202 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6713
  %qmin = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %202, i32 0, i32 97, !dbg !6714
  %203 = load i32, i32* %qmin, align 4, !dbg !6714
  %204 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6715
  %qmax = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %204, i32 0, i32 98, !dbg !6716
  %205 = load i32, i32* %qmax, align 8, !dbg !6716
  %call297 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr293, i64 %sub296, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i32 %203, i32 %205) #12, !dbg !6717
  br label %if.end319, !dbg !6719

if.else298:                                       ; preds = %if.end289
  %206 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6720
  %properties = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %206, i32 0, i32 179, !dbg !6723
  %207 = load i32, i32* %properties, align 8, !dbg !6723
  %and = and i32 %207, 2, !dbg !6724
  %tobool299 = icmp ne i32 %and, 0, !dbg !6724
  br i1 %tobool299, label %if.then300, label %if.end307, !dbg !6725

if.then300:                                       ; preds = %if.else298
  %208 = load i8*, i8** %buf.addr, align 8, !dbg !6726
  %209 = load i8*, i8** %buf.addr, align 8, !dbg !6727
  %call301 = call i64 @strlen(i8* %209) #13, !dbg !6728
  %add.ptr302 = getelementptr inbounds i8, i8* %208, i64 %call301, !dbg !6729
  %210 = load i32, i32* %buf_size.addr, align 4, !dbg !6730
  %conv303 = sext i32 %210 to i64, !dbg !6730
  %211 = load i8*, i8** %buf.addr, align 8, !dbg !6731
  %call304 = call i64 @strlen(i8* %211) #13, !dbg !6732
  %sub305 = sub i64 %conv303, %call304, !dbg !6734
  %call306 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr302, i64 %sub305, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0)) #12, !dbg !6735
  br label %if.end307, !dbg !6737

if.end307:                                        ; preds = %if.then300, %if.else298
  %212 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6738
  %properties308 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %212, i32 0, i32 179, !dbg !6740
  %213 = load i32, i32* %properties308, align 8, !dbg !6740
  %and309 = and i32 %213, 1, !dbg !6741
  %tobool310 = icmp ne i32 %and309, 0, !dbg !6741
  br i1 %tobool310, label %if.then311, label %if.end318, !dbg !6742

if.then311:                                       ; preds = %if.end307
  %214 = load i8*, i8** %buf.addr, align 8, !dbg !6743
  %215 = load i8*, i8** %buf.addr, align 8, !dbg !6744
  %call312 = call i64 @strlen(i8* %215) #13, !dbg !6745
  %add.ptr313 = getelementptr inbounds i8, i8* %214, i64 %call312, !dbg !6746
  %216 = load i32, i32* %buf_size.addr, align 4, !dbg !6747
  %conv314 = sext i32 %216 to i64, !dbg !6747
  %217 = load i8*, i8** %buf.addr, align 8, !dbg !6748
  %call315 = call i64 @strlen(i8* %217) #13, !dbg !6749
  %sub316 = sub i64 %conv314, %call315, !dbg !6751
  %call317 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr313, i64 %sub316, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.67, i32 0, i32 0)) #12, !dbg !6752
  br label %if.end318, !dbg !6754

if.end318:                                        ; preds = %if.then311, %if.end307
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then291
  br label %sw.epilog, !dbg !6755

sw.bb320:                                         ; preds = %if.end70
  %218 = load i8*, i8** %buf.addr, align 8, !dbg !6756
  %219 = load i8*, i8** %separator, align 8, !dbg !6757
  %220 = load i32, i32* %buf_size.addr, align 4, !dbg !6758
  %conv321 = sext i32 %220 to i64, !dbg !6758
  %call322 = call i64 @av_strlcat(i8* %218, i8* %219, i64 %conv321), !dbg !6759
  %221 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6760
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %221, i32 0, i32 82, !dbg !6762
  %222 = load i32, i32* %sample_rate, align 8, !dbg !6762
  %tobool323 = icmp ne i32 %222, 0, !dbg !6760
  br i1 %tobool323, label %if.then324, label %if.end332, !dbg !6763

if.then324:                                       ; preds = %sw.bb320
  %223 = load i8*, i8** %buf.addr, align 8, !dbg !6764
  %224 = load i8*, i8** %buf.addr, align 8, !dbg !6766
  %call325 = call i64 @strlen(i8* %224) #13, !dbg !6767
  %add.ptr326 = getelementptr inbounds i8, i8* %223, i64 %call325, !dbg !6768
  %225 = load i32, i32* %buf_size.addr, align 4, !dbg !6769
  %conv327 = sext i32 %225 to i64, !dbg !6769
  %226 = load i8*, i8** %buf.addr, align 8, !dbg !6770
  %call328 = call i64 @strlen(i8* %226) #13, !dbg !6771
  %sub329 = sub i64 %conv327, %call328, !dbg !6773
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6774
  %sample_rate330 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 82, !dbg !6775
  %228 = load i32, i32* %sample_rate330, align 8, !dbg !6775
  %call331 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr326, i64 %sub329, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0), i32 %228) #12, !dbg !6776
  br label %if.end332, !dbg !6778

if.end332:                                        ; preds = %if.then324, %sw.bb320
  %229 = load i8*, i8** %buf.addr, align 8, !dbg !6779
  %230 = load i8*, i8** %buf.addr, align 8, !dbg !6780
  %call333 = call i64 @strlen(i8* %230) #13, !dbg !6781
  %add.ptr334 = getelementptr inbounds i8, i8* %229, i64 %call333, !dbg !6782
  %231 = load i32, i32* %buf_size.addr, align 4, !dbg !6783
  %conv335 = sext i32 %231 to i64, !dbg !6783
  %232 = load i8*, i8** %buf.addr, align 8, !dbg !6784
  %call336 = call i64 @strlen(i8* %232) #13, !dbg !6785
  %sub337 = sub i64 %conv335, %call336, !dbg !6787
  %conv338 = trunc i64 %sub337 to i32, !dbg !6783
  %233 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6788
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %233, i32 0, i32 83, !dbg !6789
  %234 = load i32, i32* %channels, align 4, !dbg !6789
  %235 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6790
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %235, i32 0, i32 89, !dbg !6791
  %236 = load i64, i64* %channel_layout, align 8, !dbg !6791
  call void @av_get_channel_layout_string(i8* %add.ptr334, i32 %conv338, i32 %234, i64 %236), !dbg !6792
  %237 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6794
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %237, i32 0, i32 84, !dbg !6796
  %238 = load i32, i32* %sample_fmt, align 8, !dbg !6796
  %cmp339 = icmp ne i32 %238, -1, !dbg !6797
  br i1 %cmp339, label %if.then341, label %if.end350, !dbg !6798

if.then341:                                       ; preds = %if.end332
  %239 = load i8*, i8** %buf.addr, align 8, !dbg !6799
  %240 = load i8*, i8** %buf.addr, align 8, !dbg !6801
  %call342 = call i64 @strlen(i8* %240) #13, !dbg !6802
  %add.ptr343 = getelementptr inbounds i8, i8* %239, i64 %call342, !dbg !6803
  %241 = load i32, i32* %buf_size.addr, align 4, !dbg !6804
  %conv344 = sext i32 %241 to i64, !dbg !6804
  %242 = load i8*, i8** %buf.addr, align 8, !dbg !6805
  %call345 = call i64 @strlen(i8* %242) #13, !dbg !6806
  %sub346 = sub i64 %conv344, %call345, !dbg !6808
  %243 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6809
  %sample_fmt347 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %243, i32 0, i32 84, !dbg !6810
  %244 = load i32, i32* %sample_fmt347, align 8, !dbg !6810
  %call348 = call i8* @av_get_sample_fmt_name(i32 %244), !dbg !6811
  %call349 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr343, i64 %sub346, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i8* %call348) #12, !dbg !6812
  br label %if.end350, !dbg !6814

if.end350:                                        ; preds = %if.then341, %if.end332
  %245 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6815
  %bits_per_raw_sample351 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %245, i32 0, i32 143, !dbg !6817
  %246 = load i32, i32* %bits_per_raw_sample351, align 4, !dbg !6817
  %cmp352 = icmp sgt i32 %246, 0, !dbg !6818
  br i1 %cmp352, label %land.lhs.true354, label %if.end369, !dbg !6819

land.lhs.true354:                                 ; preds = %if.end350
  %247 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6820
  %bits_per_raw_sample355 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %247, i32 0, i32 143, !dbg !6822
  %248 = load i32, i32* %bits_per_raw_sample355, align 4, !dbg !6822
  %249 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6823
  %sample_fmt356 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %249, i32 0, i32 84, !dbg !6824
  %250 = load i32, i32* %sample_fmt356, align 8, !dbg !6824
  %call357 = call i32 @av_get_bytes_per_sample(i32 %250), !dbg !6825
  %mul358 = mul nsw i32 %call357, 8, !dbg !6826
  %cmp359 = icmp ne i32 %248, %mul358, !dbg !6827
  br i1 %cmp359, label %if.then361, label %if.end369, !dbg !6828

if.then361:                                       ; preds = %land.lhs.true354
  %251 = load i8*, i8** %buf.addr, align 8, !dbg !6829
  %252 = load i8*, i8** %buf.addr, align 8, !dbg !6830
  %call362 = call i64 @strlen(i8* %252) #13, !dbg !6831
  %add.ptr363 = getelementptr inbounds i8, i8* %251, i64 %call362, !dbg !6832
  %253 = load i32, i32* %buf_size.addr, align 4, !dbg !6833
  %conv364 = sext i32 %253 to i64, !dbg !6833
  %254 = load i8*, i8** %buf.addr, align 8, !dbg !6834
  %call365 = call i64 @strlen(i8* %254) #13, !dbg !6835
  %sub366 = sub i64 %conv364, %call365, !dbg !6836
  %255 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6837
  %bits_per_raw_sample367 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %255, i32 0, i32 143, !dbg !6838
  %256 = load i32, i32* %bits_per_raw_sample367, align 4, !dbg !6838
  %call368 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr363, i64 %sub366, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), i32 %256) #12, !dbg !6839
  br label %if.end369, !dbg !6841

if.end369:                                        ; preds = %if.then361, %land.lhs.true354, %if.end350
  %call370 = call i32 @av_log_get_level(), !dbg !6842
  %cmp371 = icmp sge i32 %call370, 40, !dbg !6844
  br i1 %cmp371, label %if.then373, label %if.end394, !dbg !6845

if.then373:                                       ; preds = %if.end369
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6846
  %initial_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %257, i32 0, i32 162, !dbg !6849
  %258 = load i32, i32* %initial_padding, align 4, !dbg !6849
  %tobool374 = icmp ne i32 %258, 0, !dbg !6846
  br i1 %tobool374, label %if.then375, label %if.end383, !dbg !6850

if.then375:                                       ; preds = %if.then373
  %259 = load i8*, i8** %buf.addr, align 8, !dbg !6851
  %260 = load i8*, i8** %buf.addr, align 8, !dbg !6852
  %call376 = call i64 @strlen(i8* %260) #13, !dbg !6853
  %add.ptr377 = getelementptr inbounds i8, i8* %259, i64 %call376, !dbg !6854
  %261 = load i32, i32* %buf_size.addr, align 4, !dbg !6855
  %conv378 = sext i32 %261 to i64, !dbg !6855
  %262 = load i8*, i8** %buf.addr, align 8, !dbg !6856
  %call379 = call i64 @strlen(i8* %262) #13, !dbg !6857
  %sub380 = sub i64 %conv378, %call379, !dbg !6859
  %263 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6860
  %initial_padding381 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %263, i32 0, i32 162, !dbg !6861
  %264 = load i32, i32* %initial_padding381, align 4, !dbg !6861
  %call382 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr377, i64 %sub380, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i32 0, i32 0), i32 %264) #12, !dbg !6862
  br label %if.end383, !dbg !6864

if.end383:                                        ; preds = %if.then375, %if.then373
  %265 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6865
  %trailing_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %265, i32 0, i32 184, !dbg !6867
  %266 = load i32, i32* %trailing_padding, align 4, !dbg !6867
  %tobool384 = icmp ne i32 %266, 0, !dbg !6865
  br i1 %tobool384, label %if.then385, label %if.end393, !dbg !6868

if.then385:                                       ; preds = %if.end383
  %267 = load i8*, i8** %buf.addr, align 8, !dbg !6869
  %268 = load i8*, i8** %buf.addr, align 8, !dbg !6870
  %call386 = call i64 @strlen(i8* %268) #13, !dbg !6871
  %add.ptr387 = getelementptr inbounds i8, i8* %267, i64 %call386, !dbg !6872
  %269 = load i32, i32* %buf_size.addr, align 4, !dbg !6873
  %conv388 = sext i32 %269 to i64, !dbg !6873
  %270 = load i8*, i8** %buf.addr, align 8, !dbg !6874
  %call389 = call i64 @strlen(i8* %270) #13, !dbg !6875
  %sub390 = sub i64 %conv388, %call389, !dbg !6877
  %271 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6878
  %trailing_padding391 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %271, i32 0, i32 184, !dbg !6879
  %272 = load i32, i32* %trailing_padding391, align 4, !dbg !6879
  %call392 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr387, i64 %sub390, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), i32 %272) #12, !dbg !6880
  br label %if.end393, !dbg !6882

if.end393:                                        ; preds = %if.then385, %if.end383
  br label %if.end394, !dbg !6883

if.end394:                                        ; preds = %if.end393, %if.end369
  br label %sw.epilog, !dbg !6884

sw.bb395:                                         ; preds = %if.end70
  %call396 = call i32 @av_log_get_level(), !dbg !6885
  %cmp397 = icmp sge i32 %call396, 48, !dbg !6887
  br i1 %cmp397, label %if.then399, label %if.end424, !dbg !6888

if.then399:                                       ; preds = %sw.bb395
  call void @llvm.dbg.declare(metadata i32* %g400, metadata !6889, metadata !1175), !dbg !6891
  %273 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6892
  %time_base401 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %273, i32 0, i32 17, !dbg !6893
  %num402 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base401, i32 0, i32 0, !dbg !6894
  %274 = load i32, i32* %num402, align 4, !dbg !6894
  %conv403 = sext i32 %274 to i64, !dbg !6892
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6895
  %time_base404 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %275, i32 0, i32 17, !dbg !6896
  %den405 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base404, i32 0, i32 1, !dbg !6897
  %276 = load i32, i32* %den405, align 4, !dbg !6897
  %conv406 = sext i32 %276 to i64, !dbg !6895
  %call407 = call i64 @av_gcd(i64 %conv403, i64 %conv406) #1, !dbg !6898
  %conv408 = trunc i64 %call407 to i32, !dbg !6898
  store i32 %conv408, i32* %g400, align 4, !dbg !6891
  %277 = load i32, i32* %g400, align 4, !dbg !6899
  %tobool409 = icmp ne i32 %277, 0, !dbg !6899
  br i1 %tobool409, label %if.then410, label %if.end423, !dbg !6901

if.then410:                                       ; preds = %if.then399
  %278 = load i8*, i8** %buf.addr, align 8, !dbg !6902
  %279 = load i8*, i8** %buf.addr, align 8, !dbg !6903
  %call411 = call i64 @strlen(i8* %279) #13, !dbg !6904
  %add.ptr412 = getelementptr inbounds i8, i8* %278, i64 %call411, !dbg !6905
  %280 = load i32, i32* %buf_size.addr, align 4, !dbg !6906
  %conv413 = sext i32 %280 to i64, !dbg !6906
  %281 = load i8*, i8** %buf.addr, align 8, !dbg !6907
  %call414 = call i64 @strlen(i8* %281) #13, !dbg !6908
  %sub415 = sub i64 %conv413, %call414, !dbg !6910
  %282 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6911
  %time_base416 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %282, i32 0, i32 17, !dbg !6912
  %num417 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base416, i32 0, i32 0, !dbg !6913
  %283 = load i32, i32* %num417, align 4, !dbg !6913
  %284 = load i32, i32* %g400, align 4, !dbg !6914
  %div418 = sdiv i32 %283, %284, !dbg !6915
  %285 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6916
  %time_base419 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %285, i32 0, i32 17, !dbg !6917
  %den420 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base419, i32 0, i32 1, !dbg !6918
  %286 = load i32, i32* %den420, align 4, !dbg !6918
  %287 = load i32, i32* %g400, align 4, !dbg !6919
  %div421 = sdiv i32 %286, %287, !dbg !6920
  %call422 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr412, i64 %sub415, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i32 0, i32 0), i32 %div418, i32 %div421) #12, !dbg !6921
  br label %if.end423, !dbg !6923

if.end423:                                        ; preds = %if.then410, %if.then399
  br label %if.end424, !dbg !6924

if.end424:                                        ; preds = %if.end423, %sw.bb395
  br label %sw.epilog, !dbg !6925

sw.bb425:                                         ; preds = %if.end70
  %288 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6926
  %width426 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %288, i32 0, i32 20, !dbg !6928
  %289 = load i32, i32* %width426, align 4, !dbg !6928
  %tobool427 = icmp ne i32 %289, 0, !dbg !6926
  br i1 %tobool427, label %if.then428, label %if.end437, !dbg !6929

if.then428:                                       ; preds = %sw.bb425
  %290 = load i8*, i8** %buf.addr, align 8, !dbg !6930
  %291 = load i8*, i8** %buf.addr, align 8, !dbg !6931
  %call429 = call i64 @strlen(i8* %291) #13, !dbg !6932
  %add.ptr430 = getelementptr inbounds i8, i8* %290, i64 %call429, !dbg !6933
  %292 = load i32, i32* %buf_size.addr, align 4, !dbg !6934
  %conv431 = sext i32 %292 to i64, !dbg !6934
  %293 = load i8*, i8** %buf.addr, align 8, !dbg !6935
  %call432 = call i64 @strlen(i8* %293) #13, !dbg !6936
  %sub433 = sub i64 %conv431, %call432, !dbg !6938
  %294 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6939
  %width434 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %294, i32 0, i32 20, !dbg !6940
  %295 = load i32, i32* %width434, align 4, !dbg !6940
  %296 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6941
  %height435 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %296, i32 0, i32 21, !dbg !6942
  %297 = load i32, i32* %height435, align 8, !dbg !6942
  %call436 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr430, i64 %sub433, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), i32 %295, i32 %297) #12, !dbg !6943
  br label %if.end437, !dbg !6945

if.end437:                                        ; preds = %if.then428, %sw.bb425
  br label %sw.epilog, !dbg !6946

sw.default:                                       ; preds = %if.end70
  br label %if.end486, !dbg !6947

sw.epilog:                                        ; preds = %if.end437, %if.end424, %if.end394, %if.end319
  %298 = load i32, i32* %encode.addr, align 4, !dbg !6948
  %tobool438 = icmp ne i32 %298, 0, !dbg !6948
  br i1 %tobool438, label %if.then439, label %if.end461, !dbg !6950

if.then439:                                       ; preds = %sw.epilog
  %299 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6951
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %299, i32 0, i32 13, !dbg !6954
  %300 = load i32, i32* %flags, align 4, !dbg !6954
  %and440 = and i32 %300, 512, !dbg !6955
  %tobool441 = icmp ne i32 %and440, 0, !dbg !6955
  br i1 %tobool441, label %if.then442, label %if.end449, !dbg !6956

if.then442:                                       ; preds = %if.then439
  %301 = load i8*, i8** %buf.addr, align 8, !dbg !6957
  %302 = load i8*, i8** %buf.addr, align 8, !dbg !6958
  %call443 = call i64 @strlen(i8* %302) #13, !dbg !6959
  %add.ptr444 = getelementptr inbounds i8, i8* %301, i64 %call443, !dbg !6960
  %303 = load i32, i32* %buf_size.addr, align 4, !dbg !6961
  %conv445 = sext i32 %303 to i64, !dbg !6961
  %304 = load i8*, i8** %buf.addr, align 8, !dbg !6962
  %call446 = call i64 @strlen(i8* %304) #13, !dbg !6963
  %sub447 = sub i64 %conv445, %call446, !dbg !6965
  %call448 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr444, i64 %sub447, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i32 0, i32 0)) #12, !dbg !6966
  br label %if.end449, !dbg !6968

if.end449:                                        ; preds = %if.then442, %if.then439
  %305 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6969
  %flags450 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %305, i32 0, i32 13, !dbg !6971
  %306 = load i32, i32* %flags450, align 4, !dbg !6971
  %and451 = and i32 %306, 1024, !dbg !6972
  %tobool452 = icmp ne i32 %and451, 0, !dbg !6972
  br i1 %tobool452, label %if.then453, label %if.end460, !dbg !6973

if.then453:                                       ; preds = %if.end449
  %307 = load i8*, i8** %buf.addr, align 8, !dbg !6974
  %308 = load i8*, i8** %buf.addr, align 8, !dbg !6975
  %call454 = call i64 @strlen(i8* %308) #13, !dbg !6976
  %add.ptr455 = getelementptr inbounds i8, i8* %307, i64 %call454, !dbg !6977
  %309 = load i32, i32* %buf_size.addr, align 4, !dbg !6978
  %conv456 = sext i32 %309 to i64, !dbg !6978
  %310 = load i8*, i8** %buf.addr, align 8, !dbg !6979
  %call457 = call i64 @strlen(i8* %310) #13, !dbg !6980
  %sub458 = sub i64 %conv456, %call457, !dbg !6982
  %call459 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr455, i64 %sub458, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0)) #12, !dbg !6983
  br label %if.end460, !dbg !6985

if.end460:                                        ; preds = %if.then453, %if.end449
  br label %if.end461, !dbg !6986

if.end461:                                        ; preds = %if.end460, %sw.epilog
  %311 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !6987
  %call462 = call i64 @get_bit_rate(%struct.AVCodecContext* %311), !dbg !6988
  store i64 %call462, i64* %bitrate, align 8, !dbg !6989
  %312 = load i64, i64* %bitrate, align 8, !dbg !6990
  %cmp463 = icmp ne i64 %312, 0, !dbg !6992
  br i1 %cmp463, label %if.then465, label %if.else473, !dbg !6993

if.then465:                                       ; preds = %if.end461
  %313 = load i8*, i8** %buf.addr, align 8, !dbg !6994
  %314 = load i8*, i8** %buf.addr, align 8, !dbg !6996
  %call466 = call i64 @strlen(i8* %314) #13, !dbg !6997
  %add.ptr467 = getelementptr inbounds i8, i8* %313, i64 %call466, !dbg !6998
  %315 = load i32, i32* %buf_size.addr, align 4, !dbg !6999
  %conv468 = sext i32 %315 to i64, !dbg !6999
  %316 = load i8*, i8** %buf.addr, align 8, !dbg !7000
  %call469 = call i64 @strlen(i8* %316) #13, !dbg !7001
  %sub470 = sub i64 %conv468, %call469, !dbg !7003
  %317 = load i64, i64* %bitrate, align 8, !dbg !7004
  %div471 = sdiv i64 %317, 1000, !dbg !7005
  %call472 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr467, i64 %sub470, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0), i64 %div471) #12, !dbg !7006
  br label %if.end486, !dbg !7008

if.else473:                                       ; preds = %if.end461
  %318 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !7009
  %rc_max_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %318, i32 0, i32 103, !dbg !7012
  %319 = load i64, i64* %rc_max_rate, align 8, !dbg !7012
  %cmp474 = icmp sgt i64 %319, 0, !dbg !7013
  br i1 %cmp474, label %if.then476, label %if.end485, !dbg !7009

if.then476:                                       ; preds = %if.else473
  %320 = load i8*, i8** %buf.addr, align 8, !dbg !7014
  %321 = load i8*, i8** %buf.addr, align 8, !dbg !7016
  %call477 = call i64 @strlen(i8* %321) #13, !dbg !7017
  %add.ptr478 = getelementptr inbounds i8, i8* %320, i64 %call477, !dbg !7018
  %322 = load i32, i32* %buf_size.addr, align 4, !dbg !7019
  %conv479 = sext i32 %322 to i64, !dbg !7019
  %323 = load i8*, i8** %buf.addr, align 8, !dbg !7020
  %call480 = call i64 @strlen(i8* %323) #13, !dbg !7021
  %sub481 = sub i64 %conv479, %call480, !dbg !7023
  %324 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc.addr, align 8, !dbg !7024
  %rc_max_rate482 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %324, i32 0, i32 103, !dbg !7025
  %325 = load i64, i64* %rc_max_rate482, align 8, !dbg !7025
  %div483 = sdiv i64 %325, 1000, !dbg !7026
  %call484 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr478, i64 %sub481, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i64 %div483) #12, !dbg !7027
  br label %if.end485, !dbg !7029

if.end485:                                        ; preds = %if.then476, %if.else473
  br label %if.end486

if.end486:                                        ; preds = %if.then, %sw.default, %if.end485, %if.then465
  ret void, !dbg !7030
}

declare i8* @av_get_media_type_string(i32) #2

; Function Attrs: nounwind uwtable
define i8* @avcodec_profile_name(i32 %codec_id, i32 %profile) #0 !dbg !7031 {
entry:
  %retval = alloca i8*, align 8
  %codec_id.addr = alloca i32, align 4
  %profile.addr = alloca i32, align 4
  %desc = alloca %struct.AVCodecDescriptor*, align 8
  %p = alloca %struct.AVProfile*, align 8
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !7034, metadata !1175), !dbg !7035
  store i32 %profile, i32* %profile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %profile.addr, metadata !7036, metadata !1175), !dbg !7037
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %desc, metadata !7038, metadata !1175), !dbg !7039
  %0 = load i32, i32* %codec_id.addr, align 4, !dbg !7040
  %call = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %0), !dbg !7041
  store %struct.AVCodecDescriptor* %call, %struct.AVCodecDescriptor** %desc, align 8, !dbg !7039
  call void @llvm.dbg.declare(metadata %struct.AVProfile** %p, metadata !7042, metadata !1175), !dbg !7043
  %1 = load i32, i32* %profile.addr, align 4, !dbg !7044
  %cmp = icmp eq i32 %1, -99, !dbg !7046
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7047

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !7048
  %tobool = icmp ne %struct.AVCodecDescriptor* %2, null, !dbg !7048
  br i1 %tobool, label %lor.lhs.false1, label %if.then, !dbg !7050

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !7051
  %profiles = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %3, i32 0, i32 6, !dbg !7053
  %4 = load %struct.AVProfile*, %struct.AVProfile** %profiles, align 8, !dbg !7053
  %tobool2 = icmp ne %struct.AVProfile* %4, null, !dbg !7051
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7054

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !7055
  br label %return, !dbg !7055

if.end:                                           ; preds = %lor.lhs.false1
  %5 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !7056
  %profiles3 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %5, i32 0, i32 6, !dbg !7058
  %6 = load %struct.AVProfile*, %struct.AVProfile** %profiles3, align 8, !dbg !7058
  store %struct.AVProfile* %6, %struct.AVProfile** %p, align 8, !dbg !7059
  br label %for.cond, !dbg !7060

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7061
  %profile4 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %7, i32 0, i32 0, !dbg !7064
  %8 = load i32, i32* %profile4, align 8, !dbg !7064
  %cmp5 = icmp ne i32 %8, -99, !dbg !7065
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7066

for.body:                                         ; preds = %for.cond
  %9 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7067
  %profile6 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %9, i32 0, i32 0, !dbg !7069
  %10 = load i32, i32* %profile6, align 8, !dbg !7069
  %11 = load i32, i32* %profile.addr, align 4, !dbg !7070
  %cmp7 = icmp eq i32 %10, %11, !dbg !7071
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7072

if.then8:                                         ; preds = %for.body
  %12 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7073
  %name = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %12, i32 0, i32 1, !dbg !7074
  %13 = load i8*, i8** %name, align 8, !dbg !7074
  store i8* %13, i8** %retval, align 8, !dbg !7075
  br label %return, !dbg !7075

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !7076

for.inc:                                          ; preds = %if.end9
  %14 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7078
  %incdec.ptr = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %14, i32 1, !dbg !7078
  store %struct.AVProfile* %incdec.ptr, %struct.AVProfile** %p, align 8, !dbg !7078
  br label %for.cond, !dbg !7080, !llvm.loop !7081

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !7083
  br label %return, !dbg !7083

return:                                           ; preds = %for.end, %if.then8, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !7084
  ret i8* %15, !dbg !7084
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #9

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #9

declare i32 @av_log_get_level() #2

declare i8* @av_fourcc_make_string(i8*, i32) #2

declare i64 @av_strlcat(i8*, i8*, i64) #2

declare i64 @av_strlcatf(i8*, i64, i8*, ...) #2

declare i8* @av_color_range_name(i32) #2

declare i8* @av_color_space_name(i32) #2

declare i8* @av_color_primaries_name(i32) #2

declare i8* @av_color_transfer_name(i32) #2

declare i8* @av_get_colorspace_name(i32) #2

declare i8* @av_chroma_location_name(i32) #2

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @av_gcd(i64, i64) #7

declare i32 @av_get_bytes_per_sample(i32) #2

; Function Attrs: nounwind uwtable
define i8* @av_get_profile_name(%struct.AVCodec* %codec, i32 %profile) #0 !dbg !7085 {
entry:
  %retval = alloca i8*, align 8
  %codec.addr = alloca %struct.AVCodec*, align 8
  %profile.addr = alloca i32, align 4
  %p = alloca %struct.AVProfile*, align 8
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !7088, metadata !1175), !dbg !7089
  store i32 %profile, i32* %profile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %profile.addr, metadata !7090, metadata !1175), !dbg !7091
  call void @llvm.dbg.declare(metadata %struct.AVProfile** %p, metadata !7092, metadata !1175), !dbg !7093
  %0 = load i32, i32* %profile.addr, align 4, !dbg !7094
  %cmp = icmp eq i32 %0, -99, !dbg !7096
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7097

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !7098
  %profiles = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1, i32 0, i32 12, !dbg !7100
  %2 = load %struct.AVProfile*, %struct.AVProfile** %profiles, align 8, !dbg !7100
  %tobool = icmp ne %struct.AVProfile* %2, null, !dbg !7098
  br i1 %tobool, label %if.end, label %if.then, !dbg !7101

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !7102
  br label %return, !dbg !7102

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !7103
  %profiles1 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %3, i32 0, i32 12, !dbg !7105
  %4 = load %struct.AVProfile*, %struct.AVProfile** %profiles1, align 8, !dbg !7105
  store %struct.AVProfile* %4, %struct.AVProfile** %p, align 8, !dbg !7106
  br label %for.cond, !dbg !7107

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7108
  %profile2 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %5, i32 0, i32 0, !dbg !7111
  %6 = load i32, i32* %profile2, align 8, !dbg !7111
  %cmp3 = icmp ne i32 %6, -99, !dbg !7112
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7113

for.body:                                         ; preds = %for.cond
  %7 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7114
  %profile4 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %7, i32 0, i32 0, !dbg !7116
  %8 = load i32, i32* %profile4, align 8, !dbg !7116
  %9 = load i32, i32* %profile.addr, align 4, !dbg !7117
  %cmp5 = icmp eq i32 %8, %9, !dbg !7118
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7119

if.then6:                                         ; preds = %for.body
  %10 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7120
  %name = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %10, i32 0, i32 1, !dbg !7121
  %11 = load i8*, i8** %name, align 8, !dbg !7121
  store i8* %11, i8** %retval, align 8, !dbg !7122
  br label %return, !dbg !7122

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !7123

for.inc:                                          ; preds = %if.end7
  %12 = load %struct.AVProfile*, %struct.AVProfile** %p, align 8, !dbg !7125
  %incdec.ptr = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %12, i32 1, !dbg !7125
  store %struct.AVProfile* %incdec.ptr, %struct.AVProfile** %p, align 8, !dbg !7125
  br label %for.cond, !dbg !7127, !llvm.loop !7128

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !7130
  br label %return, !dbg !7130

return:                                           ; preds = %for.end, %if.then6, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !7131
  ret i8* %13, !dbg !7131
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_version() #0 !dbg !7132 {
entry:
  br label %do.body, !dbg !7135, !llvm.loop !7136

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7137

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !7140, !llvm.loop !7141

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !7142

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !7145, !llvm.loop !7146

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !7147

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7150, !llvm.loop !7151

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !7152

do.end6:                                          ; preds = %do.body5
  ret i32 3813222, !dbg !7155
}

; Function Attrs: nounwind uwtable
define i8* @avcodec_configuration() #0 !dbg !7156 {
entry:
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i32 0, i32 0), !dbg !7159
}

; Function Attrs: nounwind uwtable
define i8* @avcodec_license() #0 !dbg !7160 {
entry:
  ret i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.79, i32 0, i64 21), i64 -1), !dbg !7161
}

; Function Attrs: nounwind uwtable
define i32 @av_get_exact_bits_per_sample(i32 %codec_id) #0 !dbg !7162 {
entry:
  %retval = alloca i32, align 4
  %codec_id.addr = alloca i32, align 4
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !7165, metadata !1175), !dbg !7166
  %0 = load i32, i32* %codec_id.addr, align 4, !dbg !7167
  switch i32 %0, label %sw.default [
    i32 86070, label %sw.bb
    i32 86071, label %sw.bb
    i32 69644, label %sw.bb
    i32 69661, label %sw.bb
    i32 69655, label %sw.bb
    i32 71681, label %sw.bb
    i32 69636, label %sw.bb
    i32 69660, label %sw.bb
    i32 69646, label %sw.bb
    i32 71687, label %sw.bb
    i32 88069, label %sw.bb1
    i32 88070, label %sw.bb1
    i32 88071, label %sw.bb1
    i32 88072, label %sw.bb1
    i32 65543, label %sw.bb1
    i32 65542, label %sw.bb1
    i32 67588, label %sw.bb1
    i32 65540, label %sw.bb1
    i32 65563, label %sw.bb1
    i32 65541, label %sw.bb1
    i32 65553, label %sw.bb1
    i32 83968, label %sw.bb1
    i32 65537, label %sw.bb2
    i32 65566, label %sw.bb2
    i32 65536, label %sw.bb2
    i32 65554, label %sw.bb2
    i32 65539, label %sw.bb2
    i32 65538, label %sw.bb2
    i32 65552, label %sw.bb3
    i32 65549, label %sw.bb3
    i32 65548, label %sw.bb3
    i32 65564, label %sw.bb3
    i32 65551, label %sw.bb3
    i32 65550, label %sw.bb3
    i32 65545, label %sw.bb4
    i32 65544, label %sw.bb4
    i32 65565, label %sw.bb4
    i32 65547, label %sw.bb4
    i32 65546, label %sw.bb4
    i32 65556, label %sw.bb4
    i32 65557, label %sw.bb4
    i32 67587, label %sw.bb4
    i32 67586, label %sw.bb4
    i32 65558, label %sw.bb5
    i32 65559, label %sw.bb5
    i32 67585, label %sw.bb5
    i32 67584, label %sw.bb5
  ], !dbg !7168

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 4, i32* %retval, align 4, !dbg !7169
  br label %return, !dbg !7169

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 8, i32* %retval, align 4, !dbg !7171
  br label %return, !dbg !7171

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i32 16, i32* %retval, align 4, !dbg !7172
  br label %return, !dbg !7172

sw.bb3:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i32 24, i32* %retval, align 4, !dbg !7173
  br label %return, !dbg !7173

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 32, i32* %retval, align 4, !dbg !7174
  br label %return, !dbg !7174

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry
  store i32 64, i32* %retval, align 4, !dbg !7175
  br label %return, !dbg !7175

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7176
  br label %return, !dbg !7176

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !7177
  ret i32 %1, !dbg !7177
}

; Function Attrs: nounwind uwtable
define i32 @av_get_pcm_codec(i32 %fmt, i32 %be) #0 !dbg !1127 {
entry:
  %retval = alloca i32, align 4
  %fmt.addr = alloca i32, align 4
  %be.addr = alloca i32, align 4
  store i32 %fmt, i32* %fmt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fmt.addr, metadata !7178, metadata !1175), !dbg !7179
  store i32 %be, i32* %be.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %be.addr, metadata !7180, metadata !1175), !dbg !7181
  %0 = load i32, i32* %fmt.addr, align 4, !dbg !7182
  %cmp = icmp slt i32 %0, 0, !dbg !7184
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7185

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %fmt.addr, align 4, !dbg !7186
  %cmp1 = icmp sge i32 %1, 12, !dbg !7188
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7189

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7190
  br label %return, !dbg !7190

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %be.addr, align 4, !dbg !7191
  %cmp2 = icmp slt i32 %2, 0, !dbg !7193
  br i1 %cmp2, label %if.then5, label %lor.lhs.false3, !dbg !7194

lor.lhs.false3:                                   ; preds = %if.end
  %3 = load i32, i32* %be.addr, align 4, !dbg !7195
  %cmp4 = icmp sgt i32 %3, 1, !dbg !7197
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7198

if.then5:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 0, i32* %be.addr, align 4, !dbg !7199
  br label %if.end6, !dbg !7200

if.end6:                                          ; preds = %if.then5, %lor.lhs.false3
  %4 = load i32, i32* %be.addr, align 4, !dbg !7201
  %idxprom = sext i32 %4 to i64, !dbg !7202
  %5 = load i32, i32* %fmt.addr, align 4, !dbg !7203
  %idxprom7 = sext i32 %5 to i64, !dbg !7202
  %arrayidx = getelementptr inbounds [12 x [2 x i32]], [12 x [2 x i32]]* @av_get_pcm_codec.map, i64 0, i64 %idxprom7, !dbg !7202
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !7202
  %6 = load i32, i32* %arrayidx8, align 4, !dbg !7202
  store i32 %6, i32* %retval, align 4, !dbg !7204
  br label %return, !dbg !7204

return:                                           ; preds = %if.end6, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7205
  ret i32 %7, !dbg !7205
}

; Function Attrs: nounwind uwtable
define i32 @av_get_bits_per_sample(i32 %codec_id) #0 !dbg !7206 {
entry:
  %retval = alloca i32, align 4
  %codec_id.addr = alloca i32, align 4
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !7207, metadata !1175), !dbg !7208
  %0 = load i32, i32* %codec_id.addr, align 4, !dbg !7209
  switch i32 %0, label %sw.default [
    i32 69649, label %sw.bb
    i32 69648, label %sw.bb1
    i32 69647, label %sw.bb2
    i32 69633, label %sw.bb2
    i32 69632, label %sw.bb2
    i32 69645, label %sw.bb2
    i32 69638, label %sw.bb2
  ], !dbg !7210

sw.bb:                                            ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7211
  br label %return, !dbg !7211

sw.bb1:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !7213
  br label %return, !dbg !7213

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 4, i32* %retval, align 4, !dbg !7214
  br label %return, !dbg !7214

sw.default:                                       ; preds = %entry
  %1 = load i32, i32* %codec_id.addr, align 4, !dbg !7215
  %call = call i32 @av_get_exact_bits_per_sample(i32 %1), !dbg !7216
  store i32 %call, i32* %retval, align 4, !dbg !7217
  br label %return, !dbg !7217

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !7218
  ret i32 %2, !dbg !7218
}

; Function Attrs: nounwind uwtable
define i32 @av_get_audio_frame_duration(%struct.AVCodecContext* %avctx, i32 %frame_bytes) #0 !dbg !7219 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %frame_bytes.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7222, metadata !1175), !dbg !7223
  store i32 %frame_bytes, i32* %frame_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_bytes.addr, metadata !7224, metadata !1175), !dbg !7225
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7226
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 4, !dbg !7227
  %1 = load i32, i32* %codec_id, align 8, !dbg !7227
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7228
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 82, !dbg !7229
  %3 = load i32, i32* %sample_rate, align 8, !dbg !7229
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7230
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 83, !dbg !7231
  %5 = load i32, i32* %channels, align 4, !dbg !7231
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7232
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 87, !dbg !7233
  %7 = load i32, i32* %block_align, align 4, !dbg !7233
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7234
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 5, !dbg !7235
  %9 = load i32, i32* %codec_tag, align 4, !dbg !7235
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7236
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 142, !dbg !7237
  %11 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !7237
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7238
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 9, !dbg !7239
  %13 = load i64, i64* %bit_rate, align 8, !dbg !7239
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7240
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 15, !dbg !7241
  %15 = load i8*, i8** %extradata, align 8, !dbg !7241
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7242
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 85, !dbg !7243
  %17 = load i32, i32* %frame_size, align 4, !dbg !7243
  %18 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7244
  %call = call i32 @get_audio_frame_duration(i32 %1, i32 %3, i32 %5, i32 %7, i32 %9, i32 %11, i64 %13, i8* %15, i32 %17, i32 %18), !dbg !7245
  ret i32 %call, !dbg !7246
}

; Function Attrs: nounwind uwtable
define internal i32 @get_audio_frame_duration(i32 %id, i32 %sr, i32 %ch, i32 %ba, i32 %tag, i32 %bits_per_coded_sample, i64 %bitrate, i8* %extradata, i32 %frame_size, i32 %frame_bytes) #0 !dbg !7247 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %sr.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %ba.addr = alloca i32, align 4
  %tag.addr = alloca i32, align 4
  %bits_per_coded_sample.addr = alloca i32, align 4
  %bitrate.addr = alloca i64, align 8
  %extradata.addr = alloca i8*, align 8
  %frame_size.addr = alloca i32, align 4
  %frame_bytes.addr = alloca i32, align 4
  %bps = alloca i32, align 4
  %framecount = alloca i32, align 4
  %blocks = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7250, metadata !1175), !dbg !7251
  store i32 %sr, i32* %sr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sr.addr, metadata !7252, metadata !1175), !dbg !7253
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !7254, metadata !1175), !dbg !7255
  store i32 %ba, i32* %ba.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ba.addr, metadata !7256, metadata !1175), !dbg !7257
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7258, metadata !1175), !dbg !7259
  store i32 %bits_per_coded_sample, i32* %bits_per_coded_sample.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits_per_coded_sample.addr, metadata !7260, metadata !1175), !dbg !7261
  store i64 %bitrate, i64* %bitrate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bitrate.addr, metadata !7262, metadata !1175), !dbg !7263
  store i8* %extradata, i8** %extradata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extradata.addr, metadata !7264, metadata !1175), !dbg !7265
  store i32 %frame_size, i32* %frame_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_size.addr, metadata !7266, metadata !1175), !dbg !7267
  store i32 %frame_bytes, i32* %frame_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_bytes.addr, metadata !7268, metadata !1175), !dbg !7269
  call void @llvm.dbg.declare(metadata i32* %bps, metadata !7270, metadata !1175), !dbg !7271
  %0 = load i32, i32* %id.addr, align 4, !dbg !7272
  %call = call i32 @av_get_exact_bits_per_sample(i32 %0), !dbg !7273
  store i32 %call, i32* %bps, align 4, !dbg !7271
  call void @llvm.dbg.declare(metadata i32* %framecount, metadata !7274, metadata !1175), !dbg !7275
  %1 = load i32, i32* %ba.addr, align 4, !dbg !7276
  %cmp = icmp sgt i32 %1, 0, !dbg !7277
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7278

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7279
  %3 = load i32, i32* %ba.addr, align 4, !dbg !7281
  %div = sdiv i32 %2, %3, !dbg !7282
  %cmp1 = icmp sgt i32 %div, 0, !dbg !7283
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7284

cond.true:                                        ; preds = %land.lhs.true
  %4 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7285
  %5 = load i32, i32* %ba.addr, align 4, !dbg !7287
  %div2 = sdiv i32 %4, %5, !dbg !7288
  br label %cond.end, !dbg !7289

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7290

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div2, %cond.true ], [ 1, %cond.false ], !dbg !7292
  store i32 %cond, i32* %framecount, align 4, !dbg !7294
  %6 = load i32, i32* %bps, align 4, !dbg !7295
  %cmp3 = icmp sgt i32 %6, 0, !dbg !7297
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !7298

land.lhs.true4:                                   ; preds = %cond.end
  %7 = load i32, i32* %ch.addr, align 4, !dbg !7299
  %cmp5 = icmp sgt i32 %7, 0, !dbg !7301
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !7302

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %8 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7303
  %cmp7 = icmp sgt i32 %8, 0, !dbg !7305
  br i1 %cmp7, label %land.lhs.true8, label %if.end, !dbg !7306

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %9 = load i32, i32* %ch.addr, align 4, !dbg !7307
  %cmp9 = icmp slt i32 %9, 32768, !dbg !7309
  br i1 %cmp9, label %land.lhs.true10, label %if.end, !dbg !7310

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %10 = load i32, i32* %bps, align 4, !dbg !7311
  %cmp11 = icmp slt i32 %10, 32768, !dbg !7313
  br i1 %cmp11, label %if.then, label %if.end, !dbg !7314

if.then:                                          ; preds = %land.lhs.true10
  %11 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7315
  %conv = sext i32 %11 to i64, !dbg !7315
  %mul = mul nsw i64 %conv, 8, !dbg !7316
  %12 = load i32, i32* %bps, align 4, !dbg !7317
  %13 = load i32, i32* %ch.addr, align 4, !dbg !7318
  %mul12 = mul nsw i32 %12, %13, !dbg !7319
  %conv13 = sext i32 %mul12 to i64, !dbg !7320
  %div14 = sdiv i64 %mul, %conv13, !dbg !7321
  %conv15 = trunc i64 %div14 to i32, !dbg !7322
  store i32 %conv15, i32* %retval, align 4, !dbg !7323
  br label %return, !dbg !7323

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %cond.end
  %14 = load i32, i32* %bits_per_coded_sample.addr, align 4, !dbg !7324
  store i32 %14, i32* %bps, align 4, !dbg !7325
  %15 = load i32, i32* %id.addr, align 4, !dbg !7326
  switch i32 %15, label %sw.epilog [
    i32 69641, label %sw.bb
    i32 69632, label %sw.bb16
    i32 69657, label %sw.bb17
    i32 73728, label %sw.bb18
    i32 88067, label %sw.bb18
    i32 86034, label %sw.bb18
    i32 86040, label %sw.bb18
    i32 77825, label %sw.bb18
    i32 73729, label %sw.bb19
    i32 86046, label %sw.bb19
    i32 86058, label %sw.bb20
    i32 86062, label %sw.bb21
    i32 88084, label %sw.bb22
    i32 86047, label %sw.bb22
    i32 86055, label %sw.bb24
    i32 86016, label %sw.bb25
    i32 86044, label %sw.bb25
    i32 86019, label %sw.bb26
  ], !dbg !7327

sw.bb:                                            ; preds = %if.end
  store i32 32, i32* %retval, align 4, !dbg !7328
  br label %return, !dbg !7328

sw.bb16:                                          ; preds = %if.end
  store i32 64, i32* %retval, align 4, !dbg !7330
  br label %return, !dbg !7330

sw.bb17:                                          ; preds = %if.end
  store i32 128, i32* %retval, align 4, !dbg !7331
  br label %return, !dbg !7331

sw.bb18:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 160, i32* %retval, align 4, !dbg !7332
  br label %return, !dbg !7332

sw.bb19:                                          ; preds = %if.end, %if.end
  store i32 320, i32* %retval, align 4, !dbg !7333
  br label %return, !dbg !7333

sw.bb20:                                          ; preds = %if.end
  store i32 384, i32* %retval, align 4, !dbg !7334
  br label %return, !dbg !7334

sw.bb21:                                          ; preds = %if.end
  store i32 512, i32* %retval, align 4, !dbg !7335
  br label %return, !dbg !7335

sw.bb22:                                          ; preds = %if.end, %if.end
  %16 = load i32, i32* %framecount, align 4, !dbg !7336
  %mul23 = mul nsw i32 1024, %16, !dbg !7337
  store i32 %mul23, i32* %retval, align 4, !dbg !7338
  br label %return, !dbg !7338

sw.bb24:                                          ; preds = %if.end
  store i32 2048, i32* %retval, align 4, !dbg !7339
  br label %return, !dbg !7339

sw.bb25:                                          ; preds = %if.end, %if.end
  store i32 1152, i32* %retval, align 4, !dbg !7340
  br label %return, !dbg !7340

sw.bb26:                                          ; preds = %if.end
  store i32 1536, i32* %retval, align 4, !dbg !7341
  br label %return, !dbg !7341

sw.epilog:                                        ; preds = %if.end
  %17 = load i32, i32* %sr.addr, align 4, !dbg !7342
  %cmp27 = icmp sgt i32 %17, 0, !dbg !7344
  br i1 %cmp27, label %if.then29, label %if.end59, !dbg !7345

if.then29:                                        ; preds = %sw.epilog
  %18 = load i32, i32* %id.addr, align 4, !dbg !7346
  %cmp30 = icmp eq i32 %18, 86038, !dbg !7349
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !7350

if.then32:                                        ; preds = %if.then29
  %19 = load i32, i32* %sr.addr, align 4, !dbg !7351
  %mul33 = mul nsw i32 256, %19, !dbg !7352
  %div34 = sdiv i32 %mul33, 245, !dbg !7353
  store i32 %div34, i32* %retval, align 4, !dbg !7354
  br label %return, !dbg !7354

if.else:                                          ; preds = %if.then29
  %20 = load i32, i32* %id.addr, align 4, !dbg !7355
  %cmp35 = icmp eq i32 %20, 88077, !dbg !7357
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !7358

if.then37:                                        ; preds = %if.else
  %21 = load i32, i32* %sr.addr, align 4, !dbg !7359
  %mul38 = mul nsw i32 588, %21, !dbg !7360
  %div39 = sdiv i32 %mul38, 44100, !dbg !7361
  store i32 %div39, i32* %retval, align 4, !dbg !7362
  br label %return, !dbg !7362

if.end40:                                         ; preds = %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40
  %22 = load i32, i32* %ch.addr, align 4, !dbg !7363
  %cmp42 = icmp sgt i32 %22, 0, !dbg !7365
  br i1 %cmp42, label %if.then44, label %if.end51, !dbg !7366

if.then44:                                        ; preds = %if.end41
  %23 = load i32, i32* %id.addr, align 4, !dbg !7367
  %cmp45 = icmp eq i32 %23, 86064, !dbg !7370
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !7371

if.then47:                                        ; preds = %if.then44
  %24 = load i32, i32* %sr.addr, align 4, !dbg !7372
  %div48 = sdiv i32 %24, 22050, !dbg !7373
  %shl = shl i32 480, %div48, !dbg !7374
  %25 = load i32, i32* %ch.addr, align 4, !dbg !7375
  %div49 = sdiv i32 %shl, %25, !dbg !7376
  store i32 %div49, i32* %retval, align 4, !dbg !7377
  br label %return, !dbg !7377

if.end50:                                         ; preds = %if.then44
  br label %if.end51, !dbg !7378

if.end51:                                         ; preds = %if.end50, %if.end41
  %26 = load i32, i32* %id.addr, align 4, !dbg !7379
  %cmp52 = icmp eq i32 %26, 86017, !dbg !7381
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !7382

if.then54:                                        ; preds = %if.end51
  %27 = load i32, i32* %sr.addr, align 4, !dbg !7383
  %cmp55 = icmp sle i32 %27, 24000, !dbg !7384
  %cond57 = select i1 %cmp55, i32 576, i32 1152, !dbg !7383
  store i32 %cond57, i32* %retval, align 4, !dbg !7385
  br label %return, !dbg !7385

if.end58:                                         ; preds = %if.end51
  br label %if.end59, !dbg !7386

if.end59:                                         ; preds = %if.end58, %sw.epilog
  %28 = load i32, i32* %ba.addr, align 4, !dbg !7387
  %cmp60 = icmp sgt i32 %28, 0, !dbg !7389
  br i1 %cmp60, label %if.then62, label %if.end80, !dbg !7390

if.then62:                                        ; preds = %if.end59
  %29 = load i32, i32* %id.addr, align 4, !dbg !7391
  %cmp63 = icmp eq i32 %29, 86057, !dbg !7394
  br i1 %cmp63, label %if.then65, label %if.else71, !dbg !7395

if.then65:                                        ; preds = %if.then62
  %30 = load i32, i32* %ba.addr, align 4, !dbg !7396
  switch i32 %30, label %sw.epilog70 [
    i32 20, label %sw.bb66
    i32 19, label %sw.bb67
    i32 29, label %sw.bb68
    i32 37, label %sw.bb69
  ], !dbg !7398

sw.bb66:                                          ; preds = %if.then65
  store i32 160, i32* %retval, align 4, !dbg !7399
  br label %return, !dbg !7399

sw.bb67:                                          ; preds = %if.then65
  store i32 144, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

sw.bb68:                                          ; preds = %if.then65
  store i32 288, i32* %retval, align 4, !dbg !7402
  br label %return, !dbg !7402

sw.bb69:                                          ; preds = %if.then65
  store i32 480, i32* %retval, align 4, !dbg !7403
  br label %return, !dbg !7403

sw.epilog70:                                      ; preds = %if.then65
  br label %if.end79, !dbg !7404

if.else71:                                        ; preds = %if.then62
  %31 = load i32, i32* %id.addr, align 4, !dbg !7405
  %cmp72 = icmp eq i32 %31, 86075, !dbg !7408
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !7405

if.then74:                                        ; preds = %if.else71
  %32 = load i32, i32* %ba.addr, align 4, !dbg !7409
  switch i32 %32, label %sw.epilog77 [
    i32 38, label %sw.bb75
    i32 50, label %sw.bb76
  ], !dbg !7411

sw.bb75:                                          ; preds = %if.then74
  store i32 160, i32* %retval, align 4, !dbg !7412
  br label %return, !dbg !7412

sw.bb76:                                          ; preds = %if.then74
  store i32 240, i32* %retval, align 4, !dbg !7414
  br label %return, !dbg !7414

sw.epilog77:                                      ; preds = %if.then74
  br label %if.end78, !dbg !7415

if.end78:                                         ; preds = %sw.epilog77, %if.else71
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %sw.epilog70
  br label %if.end80, !dbg !7416

if.end80:                                         ; preds = %if.end79, %if.end59
  %33 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7417
  %cmp81 = icmp sgt i32 %33, 0, !dbg !7419
  br i1 %cmp81, label %if.then83, label %if.end281, !dbg !7420

if.then83:                                        ; preds = %if.end80
  %34 = load i32, i32* %id.addr, align 4, !dbg !7421
  %cmp84 = icmp eq i32 %34, 86037, !dbg !7424
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !7425

if.then86:                                        ; preds = %if.then83
  %35 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7426
  %div87 = sdiv i32 %35, 32, !dbg !7427
  %mul88 = mul nsw i32 240, %div87, !dbg !7428
  store i32 %mul88, i32* %retval, align 4, !dbg !7429
  br label %return, !dbg !7429

if.end89:                                         ; preds = %if.then83
  %36 = load i32, i32* %id.addr, align 4, !dbg !7430
  %cmp90 = icmp eq i32 %36, 86049, !dbg !7432
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !7433

if.then92:                                        ; preds = %if.end89
  %37 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7434
  %div93 = sdiv i32 %37, 64, !dbg !7435
  %mul94 = mul nsw i32 256, %div93, !dbg !7436
  store i32 %mul94, i32* %retval, align 4, !dbg !7437
  br label %return, !dbg !7437

if.end95:                                         ; preds = %if.end89
  %38 = load i32, i32* %id.addr, align 4, !dbg !7438
  %cmp96 = icmp eq i32 %38, 77824, !dbg !7440
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !7441

if.then98:                                        ; preds = %if.end95
  %39 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7442
  %div99 = sdiv i32 %39, 20, !dbg !7443
  %mul100 = mul nsw i32 160, %div99, !dbg !7444
  store i32 %mul100, i32* %retval, align 4, !dbg !7445
  br label %return, !dbg !7445

if.end101:                                        ; preds = %if.end95
  %40 = load i32, i32* %bps, align 4, !dbg !7446
  %cmp102 = icmp sgt i32 %40, 0, !dbg !7448
  br i1 %cmp102, label %if.then104, label %if.end113, !dbg !7449

if.then104:                                       ; preds = %if.end101
  %41 = load i32, i32* %id.addr, align 4, !dbg !7450
  %cmp105 = icmp eq i32 %41, 69643, !dbg !7453
  br i1 %cmp105, label %if.then109, label %lor.lhs.false, !dbg !7454

lor.lhs.false:                                    ; preds = %if.then104
  %42 = load i32, i32* %id.addr, align 4, !dbg !7455
  %cmp107 = icmp eq i32 %42, 71684, !dbg !7457
  br i1 %cmp107, label %if.then109, label %if.end112, !dbg !7458

if.then109:                                       ; preds = %lor.lhs.false, %if.then104
  %43 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7459
  %mul110 = mul nsw i32 %43, 8, !dbg !7460
  %44 = load i32, i32* %bps, align 4, !dbg !7461
  %div111 = sdiv i32 %mul110, %44, !dbg !7462
  store i32 %div111, i32* %retval, align 4, !dbg !7463
  br label %return, !dbg !7463

if.end112:                                        ; preds = %lor.lhs.false
  br label %if.end113, !dbg !7464

if.end113:                                        ; preds = %if.end112, %if.end101
  %45 = load i32, i32* %ch.addr, align 4, !dbg !7465
  %cmp114 = icmp sgt i32 %45, 0, !dbg !7467
  br i1 %cmp114, label %land.lhs.true116, label %if.end280, !dbg !7468

land.lhs.true116:                                 ; preds = %if.end113
  %46 = load i32, i32* %ch.addr, align 4, !dbg !7469
  %cmp117 = icmp slt i32 %46, 134217727, !dbg !7471
  br i1 %cmp117, label %if.then119, label %if.end280, !dbg !7472

if.then119:                                       ; preds = %land.lhs.true116
  %47 = load i32, i32* %id.addr, align 4, !dbg !7473
  switch i32 %47, label %sw.epilog174 [
    i32 71680, label %sw.bb120
    i32 71686, label %sw.bb124
    i32 71682, label %sw.bb124
    i32 69639, label %sw.bb128
    i32 71688, label %sw.bb128
    i32 69659, label %sw.bb128
    i32 69637, label %sw.bb132
    i32 69651, label %sw.bb136
    i32 69650, label %sw.bb140
    i32 71685, label %sw.bb140
    i32 69640, label %sw.bb146
    i32 81921, label %sw.bb150
    i32 81920, label %sw.bb154
    i32 81922, label %sw.bb157
    i32 86025, label %sw.bb161
    i32 86026, label %sw.bb164
    i32 65561, label %sw.bb167
    i32 86074, label %sw.bb171
    i32 86043, label %sw.bb171
  ], !dbg !7475

sw.bb120:                                         ; preds = %if.then119
  %48 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7476
  %49 = load i32, i32* %ch.addr, align 4, !dbg !7478
  %mul121 = mul nsw i32 9, %49, !dbg !7479
  %div122 = sdiv i32 %48, %mul121, !dbg !7480
  %mul123 = mul nsw i32 %div122, 16, !dbg !7481
  store i32 %mul123, i32* %retval, align 4, !dbg !7482
  br label %return, !dbg !7482

sw.bb124:                                         ; preds = %if.then119, %if.then119
  %50 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7483
  %51 = load i32, i32* %ch.addr, align 4, !dbg !7484
  %mul125 = mul nsw i32 16, %51, !dbg !7485
  %div126 = sdiv i32 %50, %mul125, !dbg !7486
  %mul127 = mul nsw i32 %div126, 28, !dbg !7487
  store i32 %mul127, i32* %retval, align 4, !dbg !7488
  br label %return, !dbg !7488

sw.bb128:                                         ; preds = %if.then119, %if.then119, %if.then119
  %52 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7489
  %53 = load i32, i32* %ch.addr, align 4, !dbg !7490
  %mul129 = mul nsw i32 4, %53, !dbg !7491
  %sub = sub nsw i32 %52, %mul129, !dbg !7492
  %mul130 = mul nsw i32 %sub, 2, !dbg !7493
  %54 = load i32, i32* %ch.addr, align 4, !dbg !7494
  %div131 = sdiv i32 %mul130, %54, !dbg !7495
  store i32 %div131, i32* %retval, align 4, !dbg !7496
  br label %return, !dbg !7496

sw.bb132:                                         ; preds = %if.then119
  %55 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7497
  %sub133 = sub nsw i32 %55, 4, !dbg !7498
  %mul134 = mul nsw i32 %sub133, 2, !dbg !7499
  %56 = load i32, i32* %ch.addr, align 4, !dbg !7500
  %div135 = sdiv i32 %mul134, %56, !dbg !7501
  store i32 %div135, i32* %retval, align 4, !dbg !7502
  br label %return, !dbg !7502

sw.bb136:                                         ; preds = %if.then119
  %57 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7503
  %sub137 = sub nsw i32 %57, 8, !dbg !7504
  %mul138 = mul nsw i32 %sub137, 2, !dbg !7505
  %58 = load i32, i32* %ch.addr, align 4, !dbg !7506
  %div139 = sdiv i32 %mul138, %58, !dbg !7507
  store i32 %div139, i32* %retval, align 4, !dbg !7508
  br label %return, !dbg !7508

sw.bb140:                                         ; preds = %if.then119, %if.then119
  %59 = load i8*, i8** %extradata.addr, align 8, !dbg !7509
  %tobool = icmp ne i8* %59, null, !dbg !7509
  br i1 %tobool, label %if.then141, label %if.end145, !dbg !7511

if.then141:                                       ; preds = %sw.bb140
  %60 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7512
  %mul142 = mul nsw i32 %60, 14, !dbg !7513
  %61 = load i32, i32* %ch.addr, align 4, !dbg !7514
  %mul143 = mul nsw i32 8, %61, !dbg !7515
  %div144 = sdiv i32 %mul142, %mul143, !dbg !7516
  store i32 %div144, i32* %retval, align 4, !dbg !7517
  br label %return, !dbg !7517

if.end145:                                        ; preds = %sw.bb140
  br label %sw.epilog174, !dbg !7518

sw.bb146:                                         ; preds = %if.then119
  %62 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7519
  %div147 = sdiv i32 %62, 128, !dbg !7520
  %mul148 = mul nsw i32 %div147, 224, !dbg !7521
  %63 = load i32, i32* %ch.addr, align 4, !dbg !7522
  %div149 = sdiv i32 %mul148, %63, !dbg !7523
  store i32 %div149, i32* %retval, align 4, !dbg !7524
  br label %return, !dbg !7524

sw.bb150:                                         ; preds = %if.then119
  %64 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7525
  %sub151 = sub nsw i32 %64, 6, !dbg !7526
  %65 = load i32, i32* %ch.addr, align 4, !dbg !7527
  %sub152 = sub nsw i32 %sub151, %65, !dbg !7528
  %66 = load i32, i32* %ch.addr, align 4, !dbg !7529
  %div153 = sdiv i32 %sub152, %66, !dbg !7530
  store i32 %div153, i32* %retval, align 4, !dbg !7531
  br label %return, !dbg !7531

sw.bb154:                                         ; preds = %if.then119
  %67 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7532
  %sub155 = sub nsw i32 %67, 8, !dbg !7533
  %68 = load i32, i32* %ch.addr, align 4, !dbg !7534
  %div156 = sdiv i32 %sub155, %68, !dbg !7535
  store i32 %div156, i32* %retval, align 4, !dbg !7536
  br label %return, !dbg !7536

sw.bb157:                                         ; preds = %if.then119
  %69 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7537
  %70 = load i32, i32* %ch.addr, align 4, !dbg !7538
  %mul158 = mul nsw i32 2, %70, !dbg !7539
  %sub159 = sub nsw i32 %69, %mul158, !dbg !7540
  %71 = load i32, i32* %ch.addr, align 4, !dbg !7541
  %div160 = sdiv i32 %sub159, %71, !dbg !7542
  store i32 %div160, i32* %retval, align 4, !dbg !7543
  br label %return, !dbg !7543

sw.bb161:                                         ; preds = %if.then119
  %72 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7544
  %mul162 = mul nsw i32 3, %72, !dbg !7545
  %73 = load i32, i32* %ch.addr, align 4, !dbg !7546
  %div163 = sdiv i32 %mul162, %73, !dbg !7547
  store i32 %div163, i32* %retval, align 4, !dbg !7548
  br label %return, !dbg !7548

sw.bb164:                                         ; preds = %if.then119
  %74 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7549
  %mul165 = mul nsw i32 6, %74, !dbg !7550
  %75 = load i32, i32* %ch.addr, align 4, !dbg !7551
  %div166 = sdiv i32 %mul165, %75, !dbg !7552
  store i32 %div166, i32* %retval, align 4, !dbg !7553
  br label %return, !dbg !7553

sw.bb167:                                         ; preds = %if.then119
  %76 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7554
  %77 = load i32, i32* %ch.addr, align 4, !dbg !7555
  %mul168 = mul nsw i32 5, %77, !dbg !7556
  %div169 = sdiv i32 %76, %mul168, !dbg !7557
  %mul170 = mul nsw i32 2, %div169, !dbg !7558
  store i32 %mul170, i32* %retval, align 4, !dbg !7559
  br label %return, !dbg !7559

sw.bb171:                                         ; preds = %if.then119, %if.then119
  %78 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7560
  %mul172 = mul nsw i32 4, %78, !dbg !7561
  %79 = load i32, i32* %ch.addr, align 4, !dbg !7562
  %div173 = sdiv i32 %mul172, %79, !dbg !7563
  store i32 %div173, i32* %retval, align 4, !dbg !7564
  br label %return, !dbg !7564

sw.epilog174:                                     ; preds = %if.then119, %if.end145
  %80 = load i32, i32* %tag.addr, align 4, !dbg !7565
  %tobool175 = icmp ne i32 %80, 0, !dbg !7565
  br i1 %tobool175, label %if.then176, label %if.end188, !dbg !7567

if.then176:                                       ; preds = %sw.epilog174
  %81 = load i32, i32* %id.addr, align 4, !dbg !7568
  %cmp177 = icmp eq i32 %81, 81923, !dbg !7571
  br i1 %cmp177, label %if.then179, label %if.end187, !dbg !7572

if.then179:                                       ; preds = %if.then176
  %82 = load i32, i32* %tag.addr, align 4, !dbg !7573
  %cmp180 = icmp eq i32 %82, 3, !dbg !7576
  br i1 %cmp180, label %if.then182, label %if.else184, !dbg !7577

if.then182:                                       ; preds = %if.then179
  %83 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7578
  %84 = load i32, i32* %ch.addr, align 4, !dbg !7579
  %div183 = sdiv i32 %83, %84, !dbg !7580
  store i32 %div183, i32* %retval, align 4, !dbg !7581
  br label %return, !dbg !7581

if.else184:                                       ; preds = %if.then179
  %85 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7582
  %mul185 = mul nsw i32 %85, 2, !dbg !7583
  %86 = load i32, i32* %ch.addr, align 4, !dbg !7584
  %div186 = sdiv i32 %mul185, %86, !dbg !7585
  store i32 %div186, i32* %retval, align 4, !dbg !7586
  br label %return, !dbg !7586

if.end187:                                        ; preds = %if.then176
  br label %if.end188, !dbg !7587

if.end188:                                        ; preds = %if.end187, %sw.epilog174
  %87 = load i32, i32* %ba.addr, align 4, !dbg !7588
  %cmp189 = icmp sgt i32 %87, 0, !dbg !7590
  br i1 %cmp189, label %if.then191, label %if.end240, !dbg !7591

if.then191:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !7592, metadata !1175), !dbg !7594
  %88 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7595
  %89 = load i32, i32* %ba.addr, align 4, !dbg !7596
  %div192 = sdiv i32 %88, %89, !dbg !7597
  store i32 %div192, i32* %blocks, align 4, !dbg !7594
  %90 = load i32, i32* %id.addr, align 4, !dbg !7598
  switch i32 %90, label %sw.epilog239 [
    i32 69633, label %sw.bb193
    i32 69634, label %sw.bb207
    i32 69635, label %sw.bb214
    i32 71683, label %sw.bb221
    i32 69638, label %sw.bb227
    i32 71689, label %sw.bb234
  ], !dbg !7599

sw.bb193:                                         ; preds = %if.then191
  %91 = load i32, i32* %bps, align 4, !dbg !7600
  %cmp194 = icmp slt i32 %91, 2, !dbg !7603
  br i1 %cmp194, label %if.then199, label %lor.lhs.false196, !dbg !7604

lor.lhs.false196:                                 ; preds = %sw.bb193
  %92 = load i32, i32* %bps, align 4, !dbg !7605
  %cmp197 = icmp sgt i32 %92, 5, !dbg !7607
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !7608

if.then199:                                       ; preds = %lor.lhs.false196, %sw.bb193
  store i32 0, i32* %retval, align 4, !dbg !7609
  br label %return, !dbg !7609

if.end200:                                        ; preds = %lor.lhs.false196
  %93 = load i32, i32* %blocks, align 4, !dbg !7610
  %94 = load i32, i32* %ba.addr, align 4, !dbg !7611
  %95 = load i32, i32* %ch.addr, align 4, !dbg !7612
  %mul201 = mul nsw i32 4, %95, !dbg !7613
  %sub202 = sub nsw i32 %94, %mul201, !dbg !7614
  %96 = load i32, i32* %bps, align 4, !dbg !7615
  %97 = load i32, i32* %ch.addr, align 4, !dbg !7616
  %mul203 = mul nsw i32 %96, %97, !dbg !7617
  %div204 = sdiv i32 %sub202, %mul203, !dbg !7618
  %mul205 = mul nsw i32 %div204, 8, !dbg !7619
  %add = add nsw i32 1, %mul205, !dbg !7620
  %mul206 = mul nsw i32 %93, %add, !dbg !7621
  store i32 %mul206, i32* %retval, align 4, !dbg !7622
  br label %return, !dbg !7622

sw.bb207:                                         ; preds = %if.then191
  %98 = load i32, i32* %blocks, align 4, !dbg !7623
  %99 = load i32, i32* %ba.addr, align 4, !dbg !7624
  %sub208 = sub nsw i32 %99, 16, !dbg !7625
  %mul209 = mul nsw i32 %sub208, 2, !dbg !7626
  %div210 = sdiv i32 %mul209, 3, !dbg !7627
  %mul211 = mul nsw i32 %div210, 4, !dbg !7628
  %100 = load i32, i32* %ch.addr, align 4, !dbg !7629
  %div212 = sdiv i32 %mul211, %100, !dbg !7630
  %mul213 = mul nsw i32 %98, %div212, !dbg !7631
  store i32 %mul213, i32* %retval, align 4, !dbg !7632
  br label %return, !dbg !7632

sw.bb214:                                         ; preds = %if.then191
  %101 = load i32, i32* %blocks, align 4, !dbg !7633
  %102 = load i32, i32* %ba.addr, align 4, !dbg !7634
  %103 = load i32, i32* %ch.addr, align 4, !dbg !7635
  %mul215 = mul nsw i32 4, %103, !dbg !7636
  %sub216 = sub nsw i32 %102, %mul215, !dbg !7637
  %mul217 = mul nsw i32 %sub216, 2, !dbg !7638
  %104 = load i32, i32* %ch.addr, align 4, !dbg !7639
  %div218 = sdiv i32 %mul217, %104, !dbg !7640
  %add219 = add nsw i32 1, %div218, !dbg !7641
  %mul220 = mul nsw i32 %101, %add219, !dbg !7642
  store i32 %mul220, i32* %retval, align 4, !dbg !7643
  br label %return, !dbg !7643

sw.bb221:                                         ; preds = %if.then191
  %105 = load i32, i32* %blocks, align 4, !dbg !7644
  %106 = load i32, i32* %ba.addr, align 4, !dbg !7645
  %107 = load i32, i32* %ch.addr, align 4, !dbg !7646
  %mul222 = mul nsw i32 4, %107, !dbg !7647
  %sub223 = sub nsw i32 %106, %mul222, !dbg !7648
  %mul224 = mul nsw i32 %sub223, 2, !dbg !7649
  %108 = load i32, i32* %ch.addr, align 4, !dbg !7650
  %div225 = sdiv i32 %mul224, %108, !dbg !7651
  %mul226 = mul nsw i32 %105, %div225, !dbg !7652
  store i32 %mul226, i32* %retval, align 4, !dbg !7653
  br label %return, !dbg !7653

sw.bb227:                                         ; preds = %if.then191
  %109 = load i32, i32* %blocks, align 4, !dbg !7654
  %110 = load i32, i32* %ba.addr, align 4, !dbg !7655
  %111 = load i32, i32* %ch.addr, align 4, !dbg !7656
  %mul228 = mul nsw i32 7, %111, !dbg !7657
  %sub229 = sub nsw i32 %110, %mul228, !dbg !7658
  %mul230 = mul nsw i32 %sub229, 2, !dbg !7659
  %112 = load i32, i32* %ch.addr, align 4, !dbg !7660
  %div231 = sdiv i32 %mul230, %112, !dbg !7661
  %add232 = add nsw i32 2, %div231, !dbg !7662
  %mul233 = mul nsw i32 %109, %add232, !dbg !7663
  store i32 %mul233, i32* %retval, align 4, !dbg !7664
  br label %return, !dbg !7664

sw.bb234:                                         ; preds = %if.then191
  %113 = load i32, i32* %blocks, align 4, !dbg !7665
  %114 = load i32, i32* %ba.addr, align 4, !dbg !7666
  %sub235 = sub nsw i32 %114, 16, !dbg !7667
  %mul236 = mul nsw i32 %113, %sub235, !dbg !7668
  %mul237 = mul nsw i32 %mul236, 2, !dbg !7669
  %115 = load i32, i32* %ch.addr, align 4, !dbg !7670
  %div238 = sdiv i32 %mul237, %115, !dbg !7671
  store i32 %div238, i32* %retval, align 4, !dbg !7672
  br label %return, !dbg !7672

sw.epilog239:                                     ; preds = %if.then191
  br label %if.end240, !dbg !7673

if.end240:                                        ; preds = %sw.epilog239, %if.end188
  %116 = load i32, i32* %bps, align 4, !dbg !7674
  %cmp241 = icmp sgt i32 %116, 0, !dbg !7676
  br i1 %cmp241, label %if.then243, label %if.end279, !dbg !7677

if.then243:                                       ; preds = %if.end240
  %117 = load i32, i32* %id.addr, align 4, !dbg !7678
  switch i32 %117, label %sw.epilog278 [
    i32 65555, label %sw.bb244
    i32 65560, label %sw.bb258
    i32 65562, label %sw.bb272
  ], !dbg !7680

sw.bb244:                                         ; preds = %if.then243
  %118 = load i32, i32* %bps, align 4, !dbg !7681
  %cmp245 = icmp slt i32 %118, 4, !dbg !7684
  br i1 %cmp245, label %if.then250, label %lor.lhs.false247, !dbg !7685

lor.lhs.false247:                                 ; preds = %sw.bb244
  %119 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7686
  %cmp248 = icmp slt i32 %119, 3, !dbg !7688
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !7689

if.then250:                                       ; preds = %lor.lhs.false247, %sw.bb244
  store i32 0, i32* %retval, align 4, !dbg !7690
  br label %return, !dbg !7690

if.end251:                                        ; preds = %lor.lhs.false247
  %120 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7691
  %sub252 = sub nsw i32 %120, 3, !dbg !7692
  %121 = load i32, i32* %bps, align 4, !dbg !7693
  %mul253 = mul nsw i32 %121, 2, !dbg !7694
  %div254 = sdiv i32 %mul253, 8, !dbg !7695
  %122 = load i32, i32* %ch.addr, align 4, !dbg !7696
  %mul255 = mul nsw i32 %div254, %122, !dbg !7697
  %div256 = sdiv i32 %sub252, %mul255, !dbg !7698
  %mul257 = mul nsw i32 2, %div256, !dbg !7699
  store i32 %mul257, i32* %retval, align 4, !dbg !7700
  br label %return, !dbg !7700

sw.bb258:                                         ; preds = %if.then243
  %123 = load i32, i32* %bps, align 4, !dbg !7701
  %cmp259 = icmp slt i32 %123, 4, !dbg !7703
  br i1 %cmp259, label %if.then264, label %lor.lhs.false261, !dbg !7704

lor.lhs.false261:                                 ; preds = %sw.bb258
  %124 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7705
  %cmp262 = icmp slt i32 %124, 4, !dbg !7707
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !7708

if.then264:                                       ; preds = %lor.lhs.false261, %sw.bb258
  store i32 0, i32* %retval, align 4, !dbg !7709
  br label %return, !dbg !7709

if.end265:                                        ; preds = %lor.lhs.false261
  %125 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7710
  %sub266 = sub nsw i32 %125, 4, !dbg !7711
  %126 = load i32, i32* %ch.addr, align 4, !dbg !7712
  %add267 = add nsw i32 %126, 2, !dbg !7713
  %sub268 = sub nsw i32 %add267, 1, !dbg !7714
  %and = and i32 %sub268, -2, !dbg !7715
  %127 = load i32, i32* %bps, align 4, !dbg !7716
  %mul269 = mul nsw i32 %and, %127, !dbg !7717
  %div270 = sdiv i32 %mul269, 8, !dbg !7718
  %div271 = sdiv i32 %sub266, %div270, !dbg !7719
  store i32 %div271, i32* %retval, align 4, !dbg !7720
  br label %return, !dbg !7720

sw.bb272:                                         ; preds = %if.then243
  %128 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7721
  %129 = load i32, i32* %bps, align 4, !dbg !7722
  %add273 = add nsw i32 %129, 4, !dbg !7723
  %div274 = sdiv i32 %add273, 4, !dbg !7724
  %div275 = sdiv i32 %128, %div274, !dbg !7725
  %mul276 = mul nsw i32 2, %div275, !dbg !7726
  %130 = load i32, i32* %ch.addr, align 4, !dbg !7727
  %div277 = sdiv i32 %mul276, %130, !dbg !7728
  store i32 %div277, i32* %retval, align 4, !dbg !7729
  br label %return, !dbg !7729

sw.epilog278:                                     ; preds = %if.then243
  br label %if.end279, !dbg !7730

if.end279:                                        ; preds = %sw.epilog278, %if.end240
  br label %if.end280, !dbg !7731

if.end280:                                        ; preds = %if.end279, %land.lhs.true116, %if.end113
  br label %if.end281, !dbg !7732

if.end281:                                        ; preds = %if.end280, %if.end80
  %131 = load i32, i32* %frame_size.addr, align 4, !dbg !7733
  %cmp282 = icmp sgt i32 %131, 1, !dbg !7735
  br i1 %cmp282, label %land.lhs.true284, label %if.end287, !dbg !7736

land.lhs.true284:                                 ; preds = %if.end281
  %132 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7737
  %tobool285 = icmp ne i32 %132, 0, !dbg !7737
  br i1 %tobool285, label %if.then286, label %if.end287, !dbg !7739

if.then286:                                       ; preds = %land.lhs.true284
  %133 = load i32, i32* %frame_size.addr, align 4, !dbg !7740
  store i32 %133, i32* %retval, align 4, !dbg !7741
  br label %return, !dbg !7741

if.end287:                                        ; preds = %land.lhs.true284, %if.end281
  %134 = load i64, i64* %bitrate.addr, align 8, !dbg !7742
  %cmp288 = icmp sgt i64 %134, 0, !dbg !7744
  br i1 %cmp288, label %land.lhs.true290, label %if.end313, !dbg !7745

land.lhs.true290:                                 ; preds = %if.end287
  %135 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7746
  %cmp291 = icmp sgt i32 %135, 0, !dbg !7748
  br i1 %cmp291, label %land.lhs.true293, label %if.end313, !dbg !7749

land.lhs.true293:                                 ; preds = %land.lhs.true290
  %136 = load i32, i32* %sr.addr, align 4, !dbg !7750
  %cmp294 = icmp sgt i32 %136, 0, !dbg !7752
  br i1 %cmp294, label %land.lhs.true296, label %if.end313, !dbg !7753

land.lhs.true296:                                 ; preds = %land.lhs.true293
  %137 = load i32, i32* %ba.addr, align 4, !dbg !7754
  %cmp297 = icmp sgt i32 %137, 1, !dbg !7756
  br i1 %cmp297, label %if.then299, label %if.end313, !dbg !7757

if.then299:                                       ; preds = %land.lhs.true296
  %138 = load i32, i32* %id.addr, align 4, !dbg !7758
  %cmp300 = icmp eq i32 %138, 86023, !dbg !7761
  br i1 %cmp300, label %if.then305, label %lor.lhs.false302, !dbg !7762

lor.lhs.false302:                                 ; preds = %if.then299
  %139 = load i32, i32* %id.addr, align 4, !dbg !7763
  %cmp303 = icmp eq i32 %139, 86024, !dbg !7765
  br i1 %cmp303, label %if.then305, label %if.end312, !dbg !7766

if.then305:                                       ; preds = %lor.lhs.false302, %if.then299
  %140 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7767
  %conv306 = sext i32 %140 to i64, !dbg !7767
  %mul307 = mul nsw i64 %conv306, 8, !dbg !7768
  %141 = load i32, i32* %sr.addr, align 4, !dbg !7769
  %conv308 = sext i32 %141 to i64, !dbg !7769
  %mul309 = mul nsw i64 %mul307, %conv308, !dbg !7770
  %142 = load i64, i64* %bitrate.addr, align 8, !dbg !7771
  %div310 = sdiv i64 %mul309, %142, !dbg !7772
  %conv311 = trunc i64 %div310 to i32, !dbg !7773
  store i32 %conv311, i32* %retval, align 4, !dbg !7774
  br label %return, !dbg !7774

if.end312:                                        ; preds = %lor.lhs.false302
  br label %if.end313, !dbg !7775

if.end313:                                        ; preds = %if.end312, %land.lhs.true296, %land.lhs.true293, %land.lhs.true290, %if.end287
  store i32 0, i32* %retval, align 4, !dbg !7776
  br label %return, !dbg !7776

return:                                           ; preds = %if.end313, %if.then305, %if.then286, %sw.bb272, %if.end265, %if.then264, %if.end251, %if.then250, %sw.bb234, %sw.bb227, %sw.bb221, %sw.bb214, %sw.bb207, %if.end200, %if.then199, %if.else184, %if.then182, %sw.bb171, %sw.bb167, %sw.bb164, %sw.bb161, %sw.bb157, %sw.bb154, %sw.bb150, %sw.bb146, %if.then141, %sw.bb136, %sw.bb132, %sw.bb128, %sw.bb124, %sw.bb120, %if.then109, %if.then98, %if.then92, %if.then86, %sw.bb76, %sw.bb75, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %if.then54, %if.then47, %if.then37, %if.then32, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !7777
  ret i32 %143, !dbg !7777
}

; Function Attrs: nounwind uwtable
define i32 @av_get_audio_frame_duration2(%struct.AVCodecParameters* %par, i32 %frame_bytes) #0 !dbg !7778 {
entry:
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %frame_bytes.addr = alloca i32, align 4
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !7781, metadata !1175), !dbg !7782
  store i32 %frame_bytes, i32* %frame_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_bytes.addr, metadata !7783, metadata !1175), !dbg !7784
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7785
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 1, !dbg !7786
  %1 = load i32, i32* %codec_id, align 4, !dbg !7786
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7787
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 23, !dbg !7788
  %3 = load i32, i32* %sample_rate, align 4, !dbg !7788
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7789
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %4, i32 0, i32 22, !dbg !7790
  %5 = load i32, i32* %channels, align 8, !dbg !7790
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7791
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 24, !dbg !7792
  %7 = load i32, i32* %block_align, align 8, !dbg !7792
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7793
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 2, !dbg !7794
  %9 = load i32, i32* %codec_tag, align 8, !dbg !7794
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7795
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 7, !dbg !7796
  %11 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !7796
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7797
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 6, !dbg !7798
  %13 = load i64, i64* %bit_rate, align 8, !dbg !7798
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7799
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 3, !dbg !7800
  %15 = load i8*, i8** %extradata, align 8, !dbg !7800
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7801
  %frame_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 25, !dbg !7802
  %17 = load i32, i32* %frame_size, align 4, !dbg !7802
  %18 = load i32, i32* %frame_bytes.addr, align 4, !dbg !7803
  %call = call i32 @get_audio_frame_duration(i32 %1, i32 %3, i32 %5, i32 %7, i32 %9, i32 %11, i64 %13, i8* %15, i32 %17, i32 %18), !dbg !7804
  ret i32 %call, !dbg !7805
}

; Function Attrs: nounwind uwtable
define i32 @av_xiphlacing(i8* %s, i32 %v) #0 !dbg !7806 {
entry:
  %s.addr = alloca i8*, align 8
  %v.addr = alloca i32, align 4
  %n = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7810, metadata !1175), !dbg !7811
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !7812, metadata !1175), !dbg !7813
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7814, metadata !1175), !dbg !7815
  store i32 0, i32* %n, align 4, !dbg !7815
  br label %while.cond, !dbg !7816

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %v.addr, align 4, !dbg !7817
  %cmp = icmp uge i32 %0, 255, !dbg !7819
  br i1 %cmp, label %while.body, label %while.end, !dbg !7820

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %s.addr, align 8, !dbg !7821
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7821
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !7821
  store i8 -1, i8* %1, align 1, !dbg !7823
  %2 = load i32, i32* %v.addr, align 4, !dbg !7824
  %sub = sub i32 %2, 255, !dbg !7824
  store i32 %sub, i32* %v.addr, align 4, !dbg !7824
  %3 = load i32, i32* %n, align 4, !dbg !7825
  %inc = add i32 %3, 1, !dbg !7825
  store i32 %inc, i32* %n, align 4, !dbg !7825
  br label %while.cond, !dbg !7826, !llvm.loop !7828

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %v.addr, align 4, !dbg !7829
  %conv = trunc i32 %4 to i8, !dbg !7829
  %5 = load i8*, i8** %s.addr, align 8, !dbg !7830
  store i8 %conv, i8* %5, align 1, !dbg !7831
  %6 = load i32, i32* %n, align 4, !dbg !7832
  %inc1 = add i32 %6, 1, !dbg !7832
  store i32 %inc1, i32* %n, align 4, !dbg !7832
  %7 = load i32, i32* %n, align 4, !dbg !7833
  ret i32 %7, !dbg !7834
}

; Function Attrs: nounwind uwtable
define i32 @ff_match_2uint16([2 x i16]* %tab, i32 %size, i32 %a, i32 %b) #0 !dbg !7835 {
entry:
  %tab.addr = alloca [2 x i16]*, align 8
  %size.addr = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store [2 x i16]* %tab, [2 x i16]** %tab.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %tab.addr, metadata !7841, metadata !1175), !dbg !7842
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7843, metadata !1175), !dbg !7844
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7845, metadata !1175), !dbg !7846
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7847, metadata !1175), !dbg !7848
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7849, metadata !1175), !dbg !7850
  store i32 0, i32* %i, align 4, !dbg !7851
  br label %for.cond, !dbg !7853

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7854
  %1 = load i32, i32* %size.addr, align 4, !dbg !7857
  %cmp = icmp slt i32 %0, %1, !dbg !7858
  br i1 %cmp, label %land.rhs, label %land.end11, !dbg !7859

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !7860
  %idxprom = sext i32 %2 to i64, !dbg !7862
  %3 = load [2 x i16]*, [2 x i16]** %tab.addr, align 8, !dbg !7862
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %3, i64 %idxprom, !dbg !7862
  %arrayidx1 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx, i64 0, i64 0, !dbg !7862
  %4 = load i16, i16* %arrayidx1, align 2, !dbg !7862
  %conv = zext i16 %4 to i32, !dbg !7862
  %5 = load i32, i32* %a.addr, align 4, !dbg !7863
  %cmp2 = icmp eq i32 %conv, %5, !dbg !7864
  br i1 %cmp2, label %land.rhs4, label %land.end, !dbg !7865

land.rhs4:                                        ; preds = %land.rhs
  %6 = load i32, i32* %i, align 4, !dbg !7866
  %idxprom5 = sext i32 %6 to i64, !dbg !7868
  %7 = load [2 x i16]*, [2 x i16]** %tab.addr, align 8, !dbg !7868
  %arrayidx6 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 %idxprom5, !dbg !7868
  %arrayidx7 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6, i64 0, i64 1, !dbg !7868
  %8 = load i16, i16* %arrayidx7, align 2, !dbg !7868
  %conv8 = zext i16 %8 to i32, !dbg !7868
  %9 = load i32, i32* %b.addr, align 4, !dbg !7869
  %cmp9 = icmp eq i32 %conv8, %9, !dbg !7870
  br label %land.end

land.end:                                         ; preds = %land.rhs4, %land.rhs
  %10 = phi i1 [ false, %land.rhs ], [ %cmp9, %land.rhs4 ]
  %lnot = xor i1 %10, true, !dbg !7871
  br label %land.end11

land.end11:                                       ; preds = %land.end, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %lnot, %land.end ]
  br i1 %11, label %for.body, label %for.end, !dbg !7873

for.body:                                         ; preds = %land.end11
  br label %for.inc, !dbg !7875

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !7877
  %inc = add nsw i32 %12, 1, !dbg !7877
  store i32 %inc, i32* %i, align 4, !dbg !7877
  br label %for.cond, !dbg !7879, !llvm.loop !7880

for.end:                                          ; preds = %land.end11
  %13 = load i32, i32* %i, align 4, !dbg !7882
  ret i32 %13, !dbg !7883
}

; Function Attrs: nounwind uwtable
define %struct.AVCodecHWConfig* @avcodec_get_hw_config(%struct.AVCodec* %codec, i32 %index) #0 !dbg !7884 {
entry:
  %retval = alloca %struct.AVCodecHWConfig*, align 8
  %codec.addr = alloca %struct.AVCodec*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVCodec* %codec, %struct.AVCodec** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec.addr, metadata !7889, metadata !1175), !dbg !7890
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7891, metadata !1175), !dbg !7892
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7893, metadata !1175), !dbg !7894
  %0 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !7895
  %hw_configs = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i32 0, i32 31, !dbg !7897
  %1 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs, align 8, !dbg !7897
  %tobool = icmp ne %struct.AVCodecHWConfigInternal** %1, null, !dbg !7895
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7898

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %index.addr, align 4, !dbg !7899
  %cmp = icmp slt i32 %2, 0, !dbg !7901
  br i1 %cmp, label %if.then, label %if.end, !dbg !7902

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.AVCodecHWConfig* null, %struct.AVCodecHWConfig** %retval, align 8, !dbg !7903
  br label %return, !dbg !7903

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !7904
  br label %for.cond, !dbg !7906

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !7907
  %4 = load i32, i32* %index.addr, align 4, !dbg !7910
  %cmp1 = icmp sle i32 %3, %4, !dbg !7911
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7912

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !7913
  %idxprom = sext i32 %5 to i64, !dbg !7915
  %6 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !7915
  %hw_configs2 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %6, i32 0, i32 31, !dbg !7916
  %7 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs2, align 8, !dbg !7916
  %arrayidx = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %7, i64 %idxprom, !dbg !7915
  %8 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %arrayidx, align 8, !dbg !7915
  %tobool3 = icmp ne %struct.AVCodecHWConfigInternal* %8, null, !dbg !7915
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7917

if.then4:                                         ; preds = %for.body
  store %struct.AVCodecHWConfig* null, %struct.AVCodecHWConfig** %retval, align 8, !dbg !7918
  br label %return, !dbg !7918

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !7919

for.inc:                                          ; preds = %if.end5
  %9 = load i32, i32* %i, align 4, !dbg !7921
  %inc = add nsw i32 %9, 1, !dbg !7921
  store i32 %inc, i32* %i, align 4, !dbg !7921
  br label %for.cond, !dbg !7923, !llvm.loop !7924

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %index.addr, align 4, !dbg !7926
  %idxprom6 = sext i32 %10 to i64, !dbg !7927
  %11 = load %struct.AVCodec*, %struct.AVCodec** %codec.addr, align 8, !dbg !7927
  %hw_configs7 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %11, i32 0, i32 31, !dbg !7928
  %12 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %hw_configs7, align 8, !dbg !7928
  %arrayidx8 = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %12, i64 %idxprom6, !dbg !7927
  %13 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %arrayidx8, align 8, !dbg !7927
  %public = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %13, i32 0, i32 0, !dbg !7929
  store %struct.AVCodecHWConfig* %public, %struct.AVCodecHWConfig** %retval, align 8, !dbg !7930
  br label %return, !dbg !7930

return:                                           ; preds = %for.end, %if.then4, %if.then
  %14 = load %struct.AVCodecHWConfig*, %struct.AVCodecHWConfig** %retval, align 8, !dbg !7931
  ret %struct.AVCodecHWConfig* %14, !dbg !7931
}

; Function Attrs: nounwind uwtable
define %struct.AVHWAccel* @av_hwaccel_next(%struct.AVHWAccel* %hwaccel) #0 !dbg !7932 {
entry:
  %hwaccel.addr = alloca %struct.AVHWAccel*, align 8
  store %struct.AVHWAccel* %hwaccel, %struct.AVHWAccel** %hwaccel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVHWAccel** %hwaccel.addr, metadata !7936, metadata !1175), !dbg !7937
  ret %struct.AVHWAccel* null, !dbg !7938
}

; Function Attrs: nounwind uwtable
define void @av_register_hwaccel(%struct.AVHWAccel* %hwaccel) #0 !dbg !7939 {
entry:
  %hwaccel.addr = alloca %struct.AVHWAccel*, align 8
  store %struct.AVHWAccel* %hwaccel, %struct.AVHWAccel** %hwaccel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVHWAccel** %hwaccel.addr, metadata !7942, metadata !1175), !dbg !7943
  ret void, !dbg !7944
}

; Function Attrs: nounwind uwtable
define i32 @av_lockmgr_register(i32 (i8**, i32)* %cb) #0 !dbg !7945 {
entry:
  %cb.addr = alloca i32 (i8**, i32)*, align 8
  store i32 (i8**, i32)* %cb, i32 (i8**, i32)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8**, i32)** %cb.addr, metadata !7952, metadata !1175), !dbg !7953
  ret i32 0, !dbg !7954
}

; Function Attrs: nounwind uwtable
define i32 @avpriv_toupper4(i32 %x) #0 !dbg !7955 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7958, metadata !1175), !dbg !7959
  %0 = load i32, i32* %x.addr, align 4, !dbg !7960
  %and = and i32 %0, 255, !dbg !7961
  %call = call i32 @av_toupper(i32 %and) #1, !dbg !7962
  %1 = load i32, i32* %x.addr, align 4, !dbg !7963
  %shr = lshr i32 %1, 8, !dbg !7964
  %and1 = and i32 %shr, 255, !dbg !7965
  %call2 = call i32 @av_toupper(i32 %and1) #1, !dbg !7966
  %shl = shl i32 %call2, 8, !dbg !7967
  %add = add nsw i32 %call, %shl, !dbg !7968
  %2 = load i32, i32* %x.addr, align 4, !dbg !7969
  %shr3 = lshr i32 %2, 16, !dbg !7970
  %and4 = and i32 %shr3, 255, !dbg !7971
  %call5 = call i32 @av_toupper(i32 %and4) #1, !dbg !7972
  %shl6 = shl i32 %call5, 16, !dbg !7973
  %add7 = add nsw i32 %add, %shl6, !dbg !7974
  %3 = load i32, i32* %x.addr, align 4, !dbg !7975
  %shr8 = lshr i32 %3, 24, !dbg !7976
  %and9 = and i32 %shr8, 255, !dbg !7977
  %call10 = call i32 @av_toupper(i32 %and9) #1, !dbg !7978
  %shl11 = shl i32 %call10, 24, !dbg !7979
  %add12 = add i32 %add7, %shl11, !dbg !7980
  ret i32 %add12, !dbg !7981
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @av_toupper(i32 %c) #10 !dbg !7982 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7986, metadata !1175), !dbg !7987
  %0 = load i32, i32* %c.addr, align 4, !dbg !7988
  %cmp = icmp sge i32 %0, 97, !dbg !7990
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7991

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !7992
  %cmp1 = icmp sle i32 %1, 122, !dbg !7994
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7995

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4, !dbg !7996
  %xor = xor i32 %2, 32, !dbg !7996
  store i32 %xor, i32* %c.addr, align 4, !dbg !7996
  br label %if.end, !dbg !7997

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !7998
  ret i32 %3, !dbg !7999
}

; Function Attrs: nounwind uwtable
define i32 @ff_thread_ref_frame(%struct.ThreadFrame* %dst, %struct.ThreadFrame* %src) #0 !dbg !8000 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.ThreadFrame*, align 8
  %src.addr = alloca %struct.ThreadFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.ThreadFrame* %dst, %struct.ThreadFrame** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame** %dst.addr, metadata !8003, metadata !1175), !dbg !8004
  store %struct.ThreadFrame* %src, %struct.ThreadFrame** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame** %src.addr, metadata !8005, metadata !1175), !dbg !8006
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8007, metadata !1175), !dbg !8008
  %0 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !8009
  %owner = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %0, i32 0, i32 1, !dbg !8010
  %arrayidx = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %owner, i64 0, i64 0, !dbg !8009
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %arrayidx, align 8, !dbg !8009
  %2 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8011
  %owner1 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %2, i32 0, i32 1, !dbg !8012
  %arrayidx2 = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %owner1, i64 0, i64 0, !dbg !8011
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %arrayidx2, align 8, !dbg !8013
  %3 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !8014
  %owner3 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %3, i32 0, i32 1, !dbg !8015
  %arrayidx4 = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %owner3, i64 0, i64 1, !dbg !8014
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %arrayidx4, align 8, !dbg !8014
  %5 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8016
  %owner5 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %5, i32 0, i32 1, !dbg !8017
  %arrayidx6 = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %owner5, i64 0, i64 1, !dbg !8016
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %arrayidx6, align 8, !dbg !8018
  %6 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8019
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %6, i32 0, i32 0, !dbg !8020
  %7 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !8020
  %8 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !8021
  %f7 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %8, i32 0, i32 0, !dbg !8022
  %9 = load %struct.AVFrame*, %struct.AVFrame** %f7, align 8, !dbg !8022
  %call = call i32 @av_frame_ref(%struct.AVFrame* %7, %struct.AVFrame* %9), !dbg !8023
  store i32 %call, i32* %ret, align 4, !dbg !8024
  %10 = load i32, i32* %ret, align 4, !dbg !8025
  %cmp = icmp slt i32 %10, 0, !dbg !8027
  br i1 %cmp, label %if.then, label %if.end, !dbg !8028

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !8029
  store i32 %11, i32* %retval, align 4, !dbg !8030
  br label %return, !dbg !8030

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8031, !llvm.loop !8032

do.body:                                          ; preds = %if.end
  %12 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8033
  %progress = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %12, i32 0, i32 2, !dbg !8037
  %13 = load %struct.AVBufferRef*, %struct.AVBufferRef** %progress, align 8, !dbg !8037
  %tobool = icmp ne %struct.AVBufferRef* %13, null, !dbg !8033
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !8038

if.then8:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 1807), !dbg !8039
  call void @abort() #11, !dbg !8042
  unreachable, !dbg !8044

if.end9:                                          ; preds = %do.body
  br label %do.end, !dbg !8045

do.end:                                           ; preds = %if.end9
  %14 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !8047
  %progress10 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %14, i32 0, i32 2, !dbg !8049
  %15 = load %struct.AVBufferRef*, %struct.AVBufferRef** %progress10, align 8, !dbg !8049
  %tobool11 = icmp ne %struct.AVBufferRef* %15, null, !dbg !8047
  br i1 %tobool11, label %land.lhs.true, label %if.end19, !dbg !8050

land.lhs.true:                                    ; preds = %do.end
  %16 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !8051
  %progress12 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %16, i32 0, i32 2, !dbg !8052
  %17 = load %struct.AVBufferRef*, %struct.AVBufferRef** %progress12, align 8, !dbg !8052
  %call13 = call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* %17), !dbg !8053
  %18 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8054
  %progress14 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %18, i32 0, i32 2, !dbg !8055
  store %struct.AVBufferRef* %call13, %struct.AVBufferRef** %progress14, align 8, !dbg !8056
  %tobool15 = icmp ne %struct.AVBufferRef* %call13, null, !dbg !8056
  br i1 %tobool15, label %if.end19, label %if.then16, !dbg !8057

if.then16:                                        ; preds = %land.lhs.true
  %19 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8059
  %owner17 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %19, i32 0, i32 1, !dbg !8061
  %arrayidx18 = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %owner17, i64 0, i64 0, !dbg !8059
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %arrayidx18, align 8, !dbg !8059
  %21 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !8062
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %20, %struct.ThreadFrame* %21), !dbg !8063
  store i32 -12, i32* %retval, align 4, !dbg !8064
  br label %return, !dbg !8064

if.end19:                                         ; preds = %land.lhs.true, %do.end
  store i32 0, i32* %retval, align 4, !dbg !8065
  br label %return, !dbg !8065

return:                                           ; preds = %if.end19, %if.then16, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !8066
  ret i32 %22, !dbg !8066
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #2

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) #2

declare void @ff_thread_release_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*) #2

; Function Attrs: nounwind uwtable
define i32 @avpriv_bprint_to_extradata(%struct.AVCodecContext* %avctx, %struct.AVBPrint* %buf) #0 !dbg !8067 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %buf.addr = alloca %struct.AVBPrint*, align 8
  %ret = alloca i32, align 4
  %str = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8086, metadata !1175), !dbg !8087
  store %struct.AVBPrint* %buf, %struct.AVBPrint** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf.addr, metadata !8088, metadata !1175), !dbg !8089
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8090, metadata !1175), !dbg !8091
  call void @llvm.dbg.declare(metadata i8** %str, metadata !8092, metadata !1175), !dbg !8093
  %0 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !8094
  %call = call i32 @av_bprint_finalize(%struct.AVBPrint* %0, i8** %str), !dbg !8095
  store i32 %call, i32* %ret, align 4, !dbg !8096
  %1 = load i32, i32* %ret, align 4, !dbg !8097
  %cmp = icmp slt i32 %1, 0, !dbg !8099
  br i1 %cmp, label %if.then, label %if.end, !dbg !8100

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8101
  store i32 %2, i32* %retval, align 4, !dbg !8102
  br label %return, !dbg !8102

if.end:                                           ; preds = %entry
  %3 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !8103
  %call1 = call i32 @av_bprint_is_complete(%struct.AVBPrint* %3), !dbg !8105
  %tobool = icmp ne i32 %call1, 0, !dbg !8105
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !8106

if.then2:                                         ; preds = %if.end
  %4 = load i8*, i8** %str, align 8, !dbg !8107
  call void @av_free(i8* %4), !dbg !8109
  store i32 -12, i32* %retval, align 4, !dbg !8110
  br label %return, !dbg !8110

if.end3:                                          ; preds = %if.end
  %5 = load i8*, i8** %str, align 8, !dbg !8111
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8112
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 15, !dbg !8113
  store i8* %5, i8** %extradata, align 8, !dbg !8114
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !8115
  %len = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %7, i32 0, i32 1, !dbg !8116
  %8 = load i32, i32* %len, align 8, !dbg !8116
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8117
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 16, !dbg !8118
  store i32 %8, i32* %extradata_size, align 8, !dbg !8119
  store i32 0, i32* %retval, align 4, !dbg !8120
  br label %return, !dbg !8120

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8121
  ret i32 %10, !dbg !8121
}

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_bprint_is_complete(%struct.AVBPrint* %buf) #3 !dbg !8122 {
entry:
  %buf.addr = alloca %struct.AVBPrint*, align 8
  store %struct.AVBPrint* %buf, %struct.AVBPrint** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf.addr, metadata !8128, metadata !1175), !dbg !8129
  %0 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !8130
  %len = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i32 0, i32 1, !dbg !8131
  %1 = load i32, i32* %len, align 8, !dbg !8131
  %2 = load %struct.AVBPrint*, %struct.AVBPrint** %buf.addr, align 8, !dbg !8132
  %size = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %2, i32 0, i32 2, !dbg !8133
  %3 = load i32, i32* %size, align 4, !dbg !8133
  %cmp = icmp ult i32 %1, %3, !dbg !8134
  %conv = zext i1 %cmp to i32, !dbg !8134
  ret i32 %conv, !dbg !8135
}

declare void @av_free(i8*) #2

; Function Attrs: nounwind uwtable
define i8* @avpriv_find_start_code(i8* noalias %p, i8* %end, i32* noalias %state) #0 !dbg !8136 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8141, metadata !1175), !dbg !8146
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %state.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8148, metadata !1175), !dbg !8149
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8150, metadata !1175), !dbg !8151
  store i32* %state, i32** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %state.addr, metadata !8152, metadata !1175), !dbg !8153
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8154, metadata !1175), !dbg !8155
  br label %do.body, !dbg !8156, !llvm.loop !8157

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %p.addr, align 8, !dbg !8158
  %1 = load i8*, i8** %end.addr, align 8, !dbg !8162
  %cmp = icmp ule i8* %0, %1, !dbg !8163
  br i1 %cmp, label %if.end, label %if.then, !dbg !8164

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 1907), !dbg !8165
  call void @abort() #11, !dbg !8168
  unreachable, !dbg !8170

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !8171

do.end:                                           ; preds = %if.end
  %2 = load i8*, i8** %p.addr, align 8, !dbg !8173
  %3 = load i8*, i8** %end.addr, align 8, !dbg !8175
  %cmp1 = icmp uge i8* %2, %3, !dbg !8176
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8177

if.then2:                                         ; preds = %do.end
  %4 = load i8*, i8** %end.addr, align 8, !dbg !8178
  store i8* %4, i8** %retval, align 8, !dbg !8179
  br label %return, !dbg !8179

if.end3:                                          ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !8180
  br label %for.cond, !dbg !8182

for.cond:                                         ; preds = %for.inc, %if.end3
  %5 = load i32, i32* %i, align 4, !dbg !8183
  %cmp4 = icmp slt i32 %5, 3, !dbg !8186
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8187

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8188, metadata !1175), !dbg !8190
  %6 = load i32*, i32** %state.addr, align 8, !dbg !8191
  %7 = load i32, i32* %6, align 4, !dbg !8192
  %shl = shl i32 %7, 8, !dbg !8193
  store i32 %shl, i32* %tmp, align 4, !dbg !8190
  %8 = load i32, i32* %tmp, align 4, !dbg !8194
  %9 = load i8*, i8** %p.addr, align 8, !dbg !8195
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8195
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !8195
  %10 = load i8, i8* %9, align 1, !dbg !8196
  %conv = zext i8 %10 to i32, !dbg !8196
  %add = add i32 %8, %conv, !dbg !8197
  %11 = load i32*, i32** %state.addr, align 8, !dbg !8198
  store i32 %add, i32* %11, align 4, !dbg !8199
  %12 = load i32, i32* %tmp, align 4, !dbg !8200
  %cmp5 = icmp eq i32 %12, 256, !dbg !8202
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !8203

lor.lhs.false:                                    ; preds = %for.body
  %13 = load i8*, i8** %p.addr, align 8, !dbg !8204
  %14 = load i8*, i8** %end.addr, align 8, !dbg !8206
  %cmp7 = icmp eq i8* %13, %14, !dbg !8207
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8208

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  %15 = load i8*, i8** %p.addr, align 8, !dbg !8209
  store i8* %15, i8** %retval, align 8, !dbg !8210
  br label %return, !dbg !8210

if.end10:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !8211

for.inc:                                          ; preds = %if.end10
  %16 = load i32, i32* %i, align 4, !dbg !8212
  %inc = add nsw i32 %16, 1, !dbg !8212
  store i32 %inc, i32* %i, align 4, !dbg !8212
  br label %for.cond, !dbg !8214, !llvm.loop !8215

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !8217

while.cond:                                       ; preds = %if.end32, %for.end
  %17 = load i8*, i8** %p.addr, align 8, !dbg !8218
  %18 = load i8*, i8** %end.addr, align 8, !dbg !8220
  %cmp11 = icmp ult i8* %17, %18, !dbg !8221
  br i1 %cmp11, label %while.body, label %while.end, !dbg !8222

while.body:                                       ; preds = %while.cond
  %19 = load i8*, i8** %p.addr, align 8, !dbg !8223
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 -1, !dbg !8223
  %20 = load i8, i8* %arrayidx, align 1, !dbg !8223
  %conv13 = zext i8 %20 to i32, !dbg !8223
  %cmp14 = icmp sgt i32 %conv13, 1, !dbg !8226
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !8227

if.then16:                                        ; preds = %while.body
  %21 = load i8*, i8** %p.addr, align 8, !dbg !8228
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 3, !dbg !8228
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !8228
  br label %if.end32, !dbg !8230

if.else:                                          ; preds = %while.body
  %22 = load i8*, i8** %p.addr, align 8, !dbg !8231
  %arrayidx17 = getelementptr inbounds i8, i8* %22, i64 -2, !dbg !8231
  %23 = load i8, i8* %arrayidx17, align 1, !dbg !8231
  %tobool = icmp ne i8 %23, 0, !dbg !8231
  br i1 %tobool, label %if.then18, label %if.else20, !dbg !8233

if.then18:                                        ; preds = %if.else
  %24 = load i8*, i8** %p.addr, align 8, !dbg !8234
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !8234
  store i8* %add.ptr19, i8** %p.addr, align 8, !dbg !8234
  br label %if.end31, !dbg !8236

if.else20:                                        ; preds = %if.else
  %25 = load i8*, i8** %p.addr, align 8, !dbg !8237
  %arrayidx21 = getelementptr inbounds i8, i8* %25, i64 -3, !dbg !8237
  %26 = load i8, i8* %arrayidx21, align 1, !dbg !8237
  %conv22 = zext i8 %26 to i32, !dbg !8237
  %27 = load i8*, i8** %p.addr, align 8, !dbg !8239
  %arrayidx23 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !8239
  %28 = load i8, i8* %arrayidx23, align 1, !dbg !8239
  %conv24 = zext i8 %28 to i32, !dbg !8239
  %sub = sub nsw i32 %conv24, 1, !dbg !8240
  %or = or i32 %conv22, %sub, !dbg !8241
  %tobool25 = icmp ne i32 %or, 0, !dbg !8241
  br i1 %tobool25, label %if.then26, label %if.else28, !dbg !8242

if.then26:                                        ; preds = %if.else20
  %29 = load i8*, i8** %p.addr, align 8, !dbg !8243
  %incdec.ptr27 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !8243
  store i8* %incdec.ptr27, i8** %p.addr, align 8, !dbg !8243
  br label %if.end30, !dbg !8245

if.else28:                                        ; preds = %if.else20
  %30 = load i8*, i8** %p.addr, align 8, !dbg !8246
  %incdec.ptr29 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !8246
  store i8* %incdec.ptr29, i8** %p.addr, align 8, !dbg !8246
  br label %while.end, !dbg !8248

if.end30:                                         ; preds = %if.then26
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then16
  br label %while.cond, !dbg !8249, !llvm.loop !8251

while.end:                                        ; preds = %if.else28, %while.cond
  %31 = load i8*, i8** %p.addr, align 8, !dbg !8252
  %32 = load i8*, i8** %end.addr, align 8, !dbg !8253
  %cmp33 = icmp ugt i8* %31, %32, !dbg !8254
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !8255

cond.true:                                        ; preds = %while.end
  %33 = load i8*, i8** %end.addr, align 8, !dbg !8256
  br label %cond.end, !dbg !8257

cond.false:                                       ; preds = %while.end
  %34 = load i8*, i8** %p.addr, align 8, !dbg !8258
  br label %cond.end, !dbg !8259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %33, %cond.true ], [ %34, %cond.false ], !dbg !8260
  %add.ptr35 = getelementptr inbounds i8, i8* %cond, i64 -4, !dbg !8262
  store i8* %add.ptr35, i8** %p.addr, align 8, !dbg !8263
  %35 = load i8*, i8** %p.addr, align 8, !dbg !8264
  %36 = bitcast i8* %35 to %union.unaligned_32*, !dbg !8265
  %l = bitcast %union.unaligned_32* %36 to i32*, !dbg !8265
  %37 = load i32, i32* %l, align 1, !dbg !8265
  store i32 %37, i32* %x.addr.i, align 4, !dbg !8266
  %38 = load i32, i32* %x.addr.i, align 4, !dbg !8267
  %shl.i = shl i32 %38, 8, !dbg !8268
  %and.i = and i32 %shl.i, 65280, !dbg !8269
  %39 = load i32, i32* %x.addr.i, align 4, !dbg !8270
  %shr.i = lshr i32 %39, 8, !dbg !8271
  %and1.i = and i32 %shr.i, 255, !dbg !8272
  %or.i = or i32 %and.i, %and1.i, !dbg !8273
  %shl2.i = shl i32 %or.i, 16, !dbg !8274
  %40 = load i32, i32* %x.addr.i, align 4, !dbg !8275
  %shr3.i = lshr i32 %40, 16, !dbg !8276
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8277
  %and5.i = and i32 %shl4.i, 65280, !dbg !8278
  %41 = load i32, i32* %x.addr.i, align 4, !dbg !8279
  %shr6.i = lshr i32 %41, 16, !dbg !8280
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8281
  %and8.i = and i32 %shr7.i, 255, !dbg !8282
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8283
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8284
  %42 = load i32*, i32** %state.addr, align 8, !dbg !8285
  store i32 %or10.i, i32* %42, align 4, !dbg !8286
  %43 = load i8*, i8** %p.addr, align 8, !dbg !8287
  %add.ptr36 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !8288
  store i8* %add.ptr36, i8** %retval, align 8, !dbg !8289
  br label %return, !dbg !8289

return:                                           ; preds = %cond.end, %if.then9, %if.then2
  %44 = load i8*, i8** %retval, align 8, !dbg !8290
  ret i8* %44, !dbg !8290
}

; Function Attrs: nounwind uwtable
define %struct.AVCPBProperties* @av_cpb_properties_alloc(i64* %size) #0 !dbg !8291 {
entry:
  %retval = alloca %struct.AVCPBProperties*, align 8
  %size.addr = alloca i64*, align 8
  %props = alloca %struct.AVCPBProperties*, align 8
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !8304, metadata !1175), !dbg !8305
  call void @llvm.dbg.declare(metadata %struct.AVCPBProperties** %props, metadata !8306, metadata !1175), !dbg !8307
  %call = call noalias i8* @av_mallocz(i64 24), !dbg !8308
  %0 = bitcast i8* %call to %struct.AVCPBProperties*, !dbg !8308
  store %struct.AVCPBProperties* %0, %struct.AVCPBProperties** %props, align 8, !dbg !8307
  %1 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8309
  %tobool = icmp ne %struct.AVCPBProperties* %1, null, !dbg !8309
  br i1 %tobool, label %if.end, label %if.then, !dbg !8311

if.then:                                          ; preds = %entry
  store %struct.AVCPBProperties* null, %struct.AVCPBProperties** %retval, align 8, !dbg !8312
  br label %return, !dbg !8312

if.end:                                           ; preds = %entry
  %2 = load i64*, i64** %size.addr, align 8, !dbg !8313
  %tobool1 = icmp ne i64* %2, null, !dbg !8313
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8315

if.then2:                                         ; preds = %if.end
  %3 = load i64*, i64** %size.addr, align 8, !dbg !8316
  store i64 24, i64* %3, align 8, !dbg !8317
  br label %if.end3, !dbg !8318

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8319
  %vbv_delay = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %4, i32 0, i32 4, !dbg !8320
  store i64 -1, i64* %vbv_delay, align 8, !dbg !8321
  %5 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8322
  store %struct.AVCPBProperties* %5, %struct.AVCPBProperties** %retval, align 8, !dbg !8323
  br label %return, !dbg !8323

return:                                           ; preds = %if.end3, %if.then
  %6 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %retval, align 8, !dbg !8324
  ret %struct.AVCPBProperties* %6, !dbg !8324
}

; Function Attrs: nounwind uwtable
define %struct.AVCPBProperties* @ff_add_cpb_side_data(%struct.AVCodecContext* %avctx) #0 !dbg !8325 {
entry:
  %retval = alloca %struct.AVCPBProperties*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %tmp = alloca %struct.AVPacketSideData*, align 8
  %props = alloca %struct.AVCPBProperties*, align 8
  %size = alloca i64, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8328, metadata !1175), !dbg !8329
  call void @llvm.dbg.declare(metadata %struct.AVPacketSideData** %tmp, metadata !8330, metadata !1175), !dbg !8331
  call void @llvm.dbg.declare(metadata %struct.AVCPBProperties** %props, metadata !8332, metadata !1175), !dbg !8333
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8334, metadata !1175), !dbg !8335
  %call = call %struct.AVCPBProperties* @av_cpb_properties_alloc(i64* %size), !dbg !8336
  store %struct.AVCPBProperties* %call, %struct.AVCPBProperties** %props, align 8, !dbg !8337
  %0 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8338
  %tobool = icmp ne %struct.AVCPBProperties* %0, null, !dbg !8338
  br i1 %tobool, label %if.end, label %if.then, !dbg !8340

if.then:                                          ; preds = %entry
  store %struct.AVCPBProperties* null, %struct.AVCPBProperties** %retval, align 8, !dbg !8341
  br label %return, !dbg !8341

if.end:                                           ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8342
  %coded_side_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 180, !dbg !8343
  %2 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %coded_side_data, align 8, !dbg !8343
  %3 = bitcast %struct.AVPacketSideData* %2 to i8*, !dbg !8342
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8344
  %nb_coded_side_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 181, !dbg !8345
  %5 = load i32, i32* %nb_coded_side_data, align 8, !dbg !8345
  %add = add nsw i32 %5, 1, !dbg !8346
  %conv = sext i32 %add to i64, !dbg !8344
  %call3 = call i8* @av_realloc_array(i8* %3, i64 %conv, i64 16), !dbg !8347
  %6 = bitcast i8* %call3 to %struct.AVPacketSideData*, !dbg !8347
  store %struct.AVPacketSideData* %6, %struct.AVPacketSideData** %tmp, align 8, !dbg !8348
  %7 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %tmp, align 8, !dbg !8349
  %tobool4 = icmp ne %struct.AVPacketSideData* %7, null, !dbg !8349
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8351

if.then5:                                         ; preds = %if.end
  %8 = bitcast %struct.AVCPBProperties** %props to i8*, !dbg !8352
  call void @av_freep(i8* %8), !dbg !8354
  store %struct.AVCPBProperties* null, %struct.AVCPBProperties** %retval, align 8, !dbg !8355
  br label %return, !dbg !8355

if.end6:                                          ; preds = %if.end
  %9 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %tmp, align 8, !dbg !8356
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8357
  %coded_side_data7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 180, !dbg !8358
  store %struct.AVPacketSideData* %9, %struct.AVPacketSideData** %coded_side_data7, align 8, !dbg !8359
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8360
  %nb_coded_side_data8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 181, !dbg !8361
  %12 = load i32, i32* %nb_coded_side_data8, align 8, !dbg !8362
  %inc = add nsw i32 %12, 1, !dbg !8362
  store i32 %inc, i32* %nb_coded_side_data8, align 8, !dbg !8362
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8363
  %nb_coded_side_data9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 181, !dbg !8364
  %14 = load i32, i32* %nb_coded_side_data9, align 8, !dbg !8364
  %sub = sub nsw i32 %14, 1, !dbg !8365
  %idxprom = sext i32 %sub to i64, !dbg !8366
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8366
  %coded_side_data10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 180, !dbg !8367
  %16 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %coded_side_data10, align 8, !dbg !8367
  %arrayidx = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %16, i64 %idxprom, !dbg !8366
  %type = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %arrayidx, i32 0, i32 2, !dbg !8368
  store i32 10, i32* %type, align 4, !dbg !8369
  %17 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8370
  %18 = bitcast %struct.AVCPBProperties* %17 to i8*, !dbg !8371
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8372
  %nb_coded_side_data11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 181, !dbg !8373
  %20 = load i32, i32* %nb_coded_side_data11, align 8, !dbg !8373
  %sub12 = sub nsw i32 %20, 1, !dbg !8374
  %idxprom13 = sext i32 %sub12 to i64, !dbg !8375
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8375
  %coded_side_data14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 180, !dbg !8376
  %22 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %coded_side_data14, align 8, !dbg !8376
  %arrayidx15 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %22, i64 %idxprom13, !dbg !8375
  %data = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %arrayidx15, i32 0, i32 0, !dbg !8377
  store i8* %18, i8** %data, align 8, !dbg !8378
  %23 = load i64, i64* %size, align 8, !dbg !8379
  %conv16 = trunc i64 %23 to i32, !dbg !8379
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8380
  %nb_coded_side_data17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 181, !dbg !8381
  %25 = load i32, i32* %nb_coded_side_data17, align 8, !dbg !8381
  %sub18 = sub nsw i32 %25, 1, !dbg !8382
  %idxprom19 = sext i32 %sub18 to i64, !dbg !8383
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8383
  %coded_side_data20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 180, !dbg !8384
  %27 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %coded_side_data20, align 8, !dbg !8384
  %arrayidx21 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %27, i64 %idxprom19, !dbg !8383
  %size22 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %arrayidx21, i32 0, i32 1, !dbg !8385
  store i32 %conv16, i32* %size22, align 8, !dbg !8386
  %28 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %props, align 8, !dbg !8387
  store %struct.AVCPBProperties* %28, %struct.AVCPBProperties** %retval, align 8, !dbg !8388
  br label %return, !dbg !8388

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %29 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %retval, align 8, !dbg !8389
  ret %struct.AVCPBProperties* %29, !dbg !8389
}

declare i8* @av_realloc_array(i8*, i64, i64) #2

; Function Attrs: nounwind uwtable
define %struct.AVCodecParameters* @avcodec_parameters_alloc() #0 !dbg !8390 {
entry:
  %retval = alloca %struct.AVCodecParameters*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !8393, metadata !1175), !dbg !8394
  %call = call noalias i8* @av_mallocz(i64 144), !dbg !8395
  %0 = bitcast i8* %call to %struct.AVCodecParameters*, !dbg !8395
  store %struct.AVCodecParameters* %0, %struct.AVCodecParameters** %par, align 8, !dbg !8394
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8396
  %tobool = icmp ne %struct.AVCodecParameters* %1, null, !dbg !8396
  br i1 %tobool, label %if.end, label %if.then, !dbg !8398

if.then:                                          ; preds = %entry
  store %struct.AVCodecParameters* null, %struct.AVCodecParameters** %retval, align 8, !dbg !8399
  br label %return, !dbg !8399

if.end:                                           ; preds = %entry
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8400
  call void @codec_parameters_reset(%struct.AVCodecParameters* %2), !dbg !8401
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8402
  store %struct.AVCodecParameters* %3, %struct.AVCodecParameters** %retval, align 8, !dbg !8403
  br label %return, !dbg !8403

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %retval, align 8, !dbg !8404
  ret %struct.AVCodecParameters* %4, !dbg !8404
}

; Function Attrs: nounwind uwtable
define internal void @codec_parameters_reset(%struct.AVCodecParameters* %par) #0 !dbg !8405 {
entry:
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8408, metadata !1175), !dbg !8409
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8410
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 3, !dbg !8411
  %1 = bitcast i8** %extradata to i8*, !dbg !8412
  call void @av_freep(i8* %1), !dbg !8413
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8414
  %3 = bitcast %struct.AVCodecParameters* %2 to i8*, !dbg !8415
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 144, i32 8, i1 false), !dbg !8415
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8416
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %4, i32 0, i32 0, !dbg !8417
  store i32 -1, i32* %codec_type, align 8, !dbg !8418
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8419
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 1, !dbg !8420
  store i32 0, i32* %codec_id, align 4, !dbg !8421
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8422
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 5, !dbg !8423
  store i32 -1, i32* %format, align 4, !dbg !8424
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8425
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 14, !dbg !8426
  store i32 0, i32* %field_order, align 8, !dbg !8427
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8428
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 15, !dbg !8429
  store i32 0, i32* %color_range, align 4, !dbg !8430
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8431
  %color_primaries = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 16, !dbg !8432
  store i32 2, i32* %color_primaries, align 8, !dbg !8433
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8434
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 17, !dbg !8435
  store i32 2, i32* %color_trc, align 4, !dbg !8436
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8437
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 18, !dbg !8438
  store i32 2, i32* %color_space, align 8, !dbg !8439
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8440
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 19, !dbg !8441
  store i32 0, i32* %chroma_location, align 4, !dbg !8442
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8443
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 13, !dbg !8444
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8445
  store i32 0, i32* %num, align 4, !dbg !8445
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8445
  store i32 1, i32* %den, align 4, !dbg !8445
  %14 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !8446
  %15 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !8446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false), !dbg !8446
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8447
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 9, !dbg !8448
  store i32 -99, i32* %profile, align 8, !dbg !8449
  %17 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8450
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %17, i32 0, i32 10, !dbg !8451
  store i32 -99, i32* %level, align 4, !dbg !8452
  ret void, !dbg !8453
}

; Function Attrs: nounwind uwtable
define void @avcodec_parameters_free(%struct.AVCodecParameters** %ppar) #0 !dbg !8454 {
entry:
  %ppar.addr = alloca %struct.AVCodecParameters**, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  store %struct.AVCodecParameters** %ppar, %struct.AVCodecParameters*** %ppar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters*** %ppar.addr, metadata !8458, metadata !1175), !dbg !8459
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !8460, metadata !1175), !dbg !8461
  %0 = load %struct.AVCodecParameters**, %struct.AVCodecParameters*** %ppar.addr, align 8, !dbg !8462
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %0, align 8, !dbg !8463
  store %struct.AVCodecParameters* %1, %struct.AVCodecParameters** %par, align 8, !dbg !8461
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8464
  %tobool = icmp ne %struct.AVCodecParameters* %2, null, !dbg !8464
  br i1 %tobool, label %if.end, label %if.then, !dbg !8466

if.then:                                          ; preds = %entry
  br label %return, !dbg !8467

if.end:                                           ; preds = %entry
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8468
  call void @codec_parameters_reset(%struct.AVCodecParameters* %3), !dbg !8469
  %4 = load %struct.AVCodecParameters**, %struct.AVCodecParameters*** %ppar.addr, align 8, !dbg !8470
  %5 = bitcast %struct.AVCodecParameters** %4 to i8*, !dbg !8470
  call void @av_freep(i8* %5), !dbg !8471
  br label %return, !dbg !8472

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8473
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %dst, %struct.AVCodecParameters* %src) #0 !dbg !8475 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.AVCodecParameters*, align 8
  %src.addr = alloca %struct.AVCodecParameters*, align 8
  store %struct.AVCodecParameters* %dst, %struct.AVCodecParameters** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %dst.addr, metadata !8480, metadata !1175), !dbg !8481
  store %struct.AVCodecParameters* %src, %struct.AVCodecParameters** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %src.addr, metadata !8482, metadata !1175), !dbg !8483
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8484
  call void @codec_parameters_reset(%struct.AVCodecParameters* %0), !dbg !8485
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8486
  %2 = bitcast %struct.AVCodecParameters* %1 to i8*, !dbg !8487
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8488
  %4 = bitcast %struct.AVCodecParameters* %3 to i8*, !dbg !8487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %4, i64 144, i32 8, i1 false), !dbg !8487
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8489
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 3, !dbg !8490
  store i8* null, i8** %extradata, align 8, !dbg !8491
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8492
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 4, !dbg !8493
  store i32 0, i32* %extradata_size, align 8, !dbg !8494
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8495
  %extradata1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 3, !dbg !8497
  %8 = load i8*, i8** %extradata1, align 8, !dbg !8497
  %tobool = icmp ne i8* %8, null, !dbg !8495
  br i1 %tobool, label %if.then, label %if.end13, !dbg !8498

if.then:                                          ; preds = %entry
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8499
  %extradata_size2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 4, !dbg !8501
  %10 = load i32, i32* %extradata_size2, align 8, !dbg !8501
  %add = add nsw i32 %10, 64, !dbg !8502
  %conv = sext i32 %add to i64, !dbg !8499
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !8503
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8504
  %extradata3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 3, !dbg !8505
  store i8* %call, i8** %extradata3, align 8, !dbg !8506
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8507
  %extradata4 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 3, !dbg !8509
  %13 = load i8*, i8** %extradata4, align 8, !dbg !8509
  %tobool5 = icmp ne i8* %13, null, !dbg !8507
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !8510

if.then6:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !8511
  br label %return, !dbg !8511

if.end:                                           ; preds = %if.then
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8512
  %extradata7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 3, !dbg !8513
  %15 = load i8*, i8** %extradata7, align 8, !dbg !8513
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8514
  %extradata8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 3, !dbg !8515
  %17 = load i8*, i8** %extradata8, align 8, !dbg !8515
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8516
  %extradata_size9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 4, !dbg !8517
  %19 = load i32, i32* %extradata_size9, align 8, !dbg !8517
  %conv10 = sext i32 %19 to i64, !dbg !8516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %17, i64 %conv10, i32 1, i1 false), !dbg !8518
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %src.addr, align 8, !dbg !8519
  %extradata_size11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 4, !dbg !8520
  %21 = load i32, i32* %extradata_size11, align 8, !dbg !8520
  %22 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %dst.addr, align 8, !dbg !8521
  %extradata_size12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %22, i32 0, i32 4, !dbg !8522
  store i32 %21, i32* %extradata_size12, align 8, !dbg !8523
  br label %if.end13, !dbg !8524

if.end13:                                         ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !8525
  br label %return, !dbg !8525

return:                                           ; preds = %if.end13, %if.then6
  %23 = load i32, i32* %retval, align 4, !dbg !8526
  ret i32 %23, !dbg !8526
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_parameters_from_context(%struct.AVCodecParameters* %par, %struct.AVCodecContext* %codec) #0 !dbg !8527 {
entry:
  %retval = alloca i32, align 4
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %codec.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8530, metadata !1175), !dbg !8531
  store %struct.AVCodecContext* %codec, %struct.AVCodecContext** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %codec.addr, metadata !8532, metadata !1175), !dbg !8533
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8534
  call void @codec_parameters_reset(%struct.AVCodecParameters* %0), !dbg !8535
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8536
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 2, !dbg !8537
  %2 = load i32, i32* %codec_type, align 4, !dbg !8537
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8538
  %codec_type1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %3, i32 0, i32 0, !dbg !8539
  store i32 %2, i32* %codec_type1, align 8, !dbg !8540
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8541
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 4, !dbg !8542
  %5 = load i32, i32* %codec_id, align 8, !dbg !8542
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8543
  %codec_id2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 1, !dbg !8544
  store i32 %5, i32* %codec_id2, align 4, !dbg !8545
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8546
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 5, !dbg !8547
  %8 = load i32, i32* %codec_tag, align 4, !dbg !8547
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8548
  %codec_tag3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 2, !dbg !8549
  store i32 %8, i32* %codec_tag3, align 8, !dbg !8550
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8551
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 9, !dbg !8552
  %11 = load i64, i64* %bit_rate, align 8, !dbg !8552
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8553
  %bit_rate4 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 6, !dbg !8554
  store i64 %11, i64* %bit_rate4, align 8, !dbg !8555
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8556
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 142, !dbg !8557
  %14 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !8557
  %15 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8558
  %bits_per_coded_sample5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %15, i32 0, i32 7, !dbg !8559
  store i32 %14, i32* %bits_per_coded_sample5, align 8, !dbg !8560
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8561
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 143, !dbg !8562
  %17 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !8562
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8563
  %bits_per_raw_sample6 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 8, !dbg !8564
  store i32 %17, i32* %bits_per_raw_sample6, align 4, !dbg !8565
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8566
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 153, !dbg !8567
  %20 = load i32, i32* %profile, align 4, !dbg !8567
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8568
  %profile7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 9, !dbg !8569
  store i32 %20, i32* %profile7, align 8, !dbg !8570
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8571
  %level = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 154, !dbg !8572
  %23 = load i32, i32* %level, align 8, !dbg !8572
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8573
  %level8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i32 0, i32 10, !dbg !8574
  store i32 %23, i32* %level8, align 4, !dbg !8575
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8576
  %codec_type9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 0, !dbg !8577
  %26 = load i32, i32* %codec_type9, align 8, !dbg !8577
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 3, label %sw.bb27
  ], !dbg !8578

sw.bb:                                            ; preds = %entry
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8579
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 25, !dbg !8581
  %28 = load i32, i32* %pix_fmt, align 8, !dbg !8581
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8582
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 5, !dbg !8583
  store i32 %28, i32* %format, align 4, !dbg !8584
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8585
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 20, !dbg !8586
  %31 = load i32, i32* %width, align 4, !dbg !8586
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8587
  %width10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 11, !dbg !8588
  store i32 %31, i32* %width10, align 8, !dbg !8589
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8590
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 21, !dbg !8591
  %34 = load i32, i32* %height, align 8, !dbg !8591
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8592
  %height11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 12, !dbg !8593
  store i32 %34, i32* %height11, align 4, !dbg !8594
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8595
  %field_order = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 81, !dbg !8596
  %37 = load i32, i32* %field_order, align 4, !dbg !8596
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8597
  %field_order12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 14, !dbg !8598
  store i32 %37, i32* %field_order12, align 8, !dbg !8599
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8600
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 78, !dbg !8601
  %40 = load i32, i32* %color_range, align 8, !dbg !8601
  %41 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8602
  %color_range13 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %41, i32 0, i32 15, !dbg !8603
  store i32 %40, i32* %color_range13, align 4, !dbg !8604
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8605
  %color_primaries = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 75, !dbg !8606
  %43 = load i32, i32* %color_primaries, align 4, !dbg !8606
  %44 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8607
  %color_primaries14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %44, i32 0, i32 16, !dbg !8608
  store i32 %43, i32* %color_primaries14, align 8, !dbg !8609
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8610
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 76, !dbg !8611
  %46 = load i32, i32* %color_trc, align 8, !dbg !8611
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8612
  %color_trc15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i32 0, i32 17, !dbg !8613
  store i32 %46, i32* %color_trc15, align 4, !dbg !8614
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8615
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 77, !dbg !8616
  %49 = load i32, i32* %colorspace, align 4, !dbg !8616
  %50 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8617
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %50, i32 0, i32 18, !dbg !8618
  store i32 %49, i32* %color_space, align 8, !dbg !8619
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8620
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 79, !dbg !8621
  %52 = load i32, i32* %chroma_sample_location, align 4, !dbg !8621
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8622
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i32 0, i32 19, !dbg !8623
  store i32 %52, i32* %chroma_location, align 4, !dbg !8624
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8625
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 13, !dbg !8626
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8627
  %sample_aspect_ratio16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 44, !dbg !8628
  %56 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !8628
  %57 = bitcast %struct.AVRational* %sample_aspect_ratio16 to i8*, !dbg !8628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false), !dbg !8628
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8629
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 32, !dbg !8630
  %59 = load i32, i32* %has_b_frames, align 8, !dbg !8630
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8631
  %video_delay = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i32 0, i32 20, !dbg !8632
  store i32 %59, i32* %video_delay, align 8, !dbg !8633
  br label %sw.epilog, !dbg !8634

sw.bb17:                                          ; preds = %entry
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8635
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 84, !dbg !8636
  %62 = load i32, i32* %sample_fmt, align 8, !dbg !8636
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8637
  %format18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i32 0, i32 5, !dbg !8638
  store i32 %62, i32* %format18, align 4, !dbg !8639
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8640
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 89, !dbg !8641
  %65 = load i64, i64* %channel_layout, align 8, !dbg !8641
  %66 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8642
  %channel_layout19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i32 0, i32 21, !dbg !8643
  store i64 %65, i64* %channel_layout19, align 8, !dbg !8644
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8645
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 83, !dbg !8646
  %68 = load i32, i32* %channels, align 4, !dbg !8646
  %69 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8647
  %channels20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %69, i32 0, i32 22, !dbg !8648
  store i32 %68, i32* %channels20, align 8, !dbg !8649
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8650
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 82, !dbg !8651
  %71 = load i32, i32* %sample_rate, align 8, !dbg !8651
  %72 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8652
  %sample_rate21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %72, i32 0, i32 23, !dbg !8653
  store i32 %71, i32* %sample_rate21, align 4, !dbg !8654
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8655
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 87, !dbg !8656
  %74 = load i32, i32* %block_align, align 4, !dbg !8656
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8657
  %block_align22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 24, !dbg !8658
  store i32 %74, i32* %block_align22, align 8, !dbg !8659
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8660
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 85, !dbg !8661
  %77 = load i32, i32* %frame_size, align 4, !dbg !8661
  %78 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8662
  %frame_size23 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %78, i32 0, i32 25, !dbg !8663
  store i32 %77, i32* %frame_size23, align 4, !dbg !8664
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8665
  %initial_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %79, i32 0, i32 162, !dbg !8666
  %80 = load i32, i32* %initial_padding, align 4, !dbg !8666
  %81 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8667
  %initial_padding24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %81, i32 0, i32 26, !dbg !8668
  store i32 %80, i32* %initial_padding24, align 8, !dbg !8669
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8670
  %trailing_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 184, !dbg !8671
  %83 = load i32, i32* %trailing_padding, align 4, !dbg !8671
  %84 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8672
  %trailing_padding25 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %84, i32 0, i32 27, !dbg !8673
  store i32 %83, i32* %trailing_padding25, align 4, !dbg !8674
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8675
  %seek_preroll = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %85, i32 0, i32 174, !dbg !8676
  %86 = load i32, i32* %seek_preroll, align 8, !dbg !8676
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8677
  %seek_preroll26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i32 0, i32 28, !dbg !8678
  store i32 %86, i32* %seek_preroll26, align 8, !dbg !8679
  br label %sw.epilog, !dbg !8680

sw.bb27:                                          ; preds = %entry
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8681
  %width28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 20, !dbg !8682
  %89 = load i32, i32* %width28, align 4, !dbg !8682
  %90 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8683
  %width29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %90, i32 0, i32 11, !dbg !8684
  store i32 %89, i32* %width29, align 8, !dbg !8685
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8686
  %height30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %91, i32 0, i32 21, !dbg !8687
  %92 = load i32, i32* %height30, align 8, !dbg !8687
  %93 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8688
  %height31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %93, i32 0, i32 12, !dbg !8689
  store i32 %92, i32* %height31, align 4, !dbg !8690
  br label %sw.epilog, !dbg !8691

sw.epilog:                                        ; preds = %entry, %sw.bb27, %sw.bb17, %sw.bb
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8692
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %94, i32 0, i32 15, !dbg !8694
  %95 = load i8*, i8** %extradata, align 8, !dbg !8694
  %tobool = icmp ne i8* %95, null, !dbg !8692
  br i1 %tobool, label %if.then, label %if.end42, !dbg !8695

if.then:                                          ; preds = %sw.epilog
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8696
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 16, !dbg !8698
  %97 = load i32, i32* %extradata_size, align 8, !dbg !8698
  %add = add nsw i32 %97, 64, !dbg !8699
  %conv = sext i32 %add to i64, !dbg !8696
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !8700
  %98 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8701
  %extradata32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %98, i32 0, i32 3, !dbg !8702
  store i8* %call, i8** %extradata32, align 8, !dbg !8703
  %99 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8704
  %extradata33 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %99, i32 0, i32 3, !dbg !8706
  %100 = load i8*, i8** %extradata33, align 8, !dbg !8706
  %tobool34 = icmp ne i8* %100, null, !dbg !8704
  br i1 %tobool34, label %if.end, label %if.then35, !dbg !8707

if.then35:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !8708
  br label %return, !dbg !8708

if.end:                                           ; preds = %if.then
  %101 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8709
  %extradata36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %101, i32 0, i32 3, !dbg !8710
  %102 = load i8*, i8** %extradata36, align 8, !dbg !8710
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8711
  %extradata37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 15, !dbg !8712
  %104 = load i8*, i8** %extradata37, align 8, !dbg !8712
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8713
  %extradata_size38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 16, !dbg !8714
  %106 = load i32, i32* %extradata_size38, align 8, !dbg !8714
  %conv39 = sext i32 %106 to i64, !dbg !8713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %104, i64 %conv39, i32 1, i1 false), !dbg !8715
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8716
  %extradata_size40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %107, i32 0, i32 16, !dbg !8717
  %108 = load i32, i32* %extradata_size40, align 8, !dbg !8717
  %109 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8718
  %extradata_size41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %109, i32 0, i32 4, !dbg !8719
  store i32 %108, i32* %extradata_size41, align 8, !dbg !8720
  br label %if.end42, !dbg !8721

if.end42:                                         ; preds = %if.end, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !8722
  br label %return, !dbg !8722

return:                                           ; preds = %if.end42, %if.then35
  %110 = load i32, i32* %retval, align 4, !dbg !8723
  ret i32 %110, !dbg !8723
}

; Function Attrs: nounwind uwtable
define i32 @avcodec_parameters_to_context(%struct.AVCodecContext* %codec, %struct.AVCodecParameters* %par) #0 !dbg !8724 {
entry:
  %retval = alloca i32, align 4
  %codec.addr = alloca %struct.AVCodecContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  store %struct.AVCodecContext* %codec, %struct.AVCodecContext** %codec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %codec.addr, metadata !8727, metadata !1175), !dbg !8728
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8729, metadata !1175), !dbg !8730
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8731
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 0, !dbg !8732
  %1 = load i32, i32* %codec_type, align 8, !dbg !8732
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8733
  %codec_type1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 2, !dbg !8734
  store i32 %1, i32* %codec_type1, align 4, !dbg !8735
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8736
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %3, i32 0, i32 1, !dbg !8737
  %4 = load i32, i32* %codec_id, align 4, !dbg !8737
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8738
  %codec_id2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 4, !dbg !8739
  store i32 %4, i32* %codec_id2, align 8, !dbg !8740
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8741
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 2, !dbg !8742
  %7 = load i32, i32* %codec_tag, align 8, !dbg !8742
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8743
  %codec_tag3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 5, !dbg !8744
  store i32 %7, i32* %codec_tag3, align 4, !dbg !8745
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8746
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 6, !dbg !8747
  %10 = load i64, i64* %bit_rate, align 8, !dbg !8747
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8748
  %bit_rate4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 9, !dbg !8749
  store i64 %10, i64* %bit_rate4, align 8, !dbg !8750
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8751
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 7, !dbg !8752
  %13 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !8752
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8753
  %bits_per_coded_sample5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 142, !dbg !8754
  store i32 %13, i32* %bits_per_coded_sample5, align 8, !dbg !8755
  %15 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8756
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %15, i32 0, i32 8, !dbg !8757
  %16 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !8757
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8758
  %bits_per_raw_sample6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 143, !dbg !8759
  store i32 %16, i32* %bits_per_raw_sample6, align 4, !dbg !8760
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8761
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 9, !dbg !8762
  %19 = load i32, i32* %profile, align 8, !dbg !8762
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8763
  %profile7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 153, !dbg !8764
  store i32 %19, i32* %profile7, align 4, !dbg !8765
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8766
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 10, !dbg !8767
  %22 = load i32, i32* %level, align 4, !dbg !8767
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8768
  %level8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 154, !dbg !8769
  store i32 %22, i32* %level8, align 8, !dbg !8770
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8771
  %codec_type9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i32 0, i32 0, !dbg !8772
  %25 = load i32, i32* %codec_type9, align 8, !dbg !8772
  switch i32 %25, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 3, label %sw.bb27
  ], !dbg !8773

sw.bb:                                            ; preds = %entry
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8774
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 5, !dbg !8776
  %27 = load i32, i32* %format, align 4, !dbg !8776
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8777
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 25, !dbg !8778
  store i32 %27, i32* %pix_fmt, align 8, !dbg !8779
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8780
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 11, !dbg !8781
  %30 = load i32, i32* %width, align 8, !dbg !8781
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8782
  %width10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 20, !dbg !8783
  store i32 %30, i32* %width10, align 4, !dbg !8784
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8785
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 12, !dbg !8786
  %33 = load i32, i32* %height, align 4, !dbg !8786
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8787
  %height11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 21, !dbg !8788
  store i32 %33, i32* %height11, align 8, !dbg !8789
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8790
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 14, !dbg !8791
  %36 = load i32, i32* %field_order, align 8, !dbg !8791
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8792
  %field_order12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 81, !dbg !8793
  store i32 %36, i32* %field_order12, align 4, !dbg !8794
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8795
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 15, !dbg !8796
  %39 = load i32, i32* %color_range, align 4, !dbg !8796
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8797
  %color_range13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 78, !dbg !8798
  store i32 %39, i32* %color_range13, align 8, !dbg !8799
  %41 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8800
  %color_primaries = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %41, i32 0, i32 16, !dbg !8801
  %42 = load i32, i32* %color_primaries, align 8, !dbg !8801
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8802
  %color_primaries14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 75, !dbg !8803
  store i32 %42, i32* %color_primaries14, align 4, !dbg !8804
  %44 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8805
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %44, i32 0, i32 17, !dbg !8806
  %45 = load i32, i32* %color_trc, align 4, !dbg !8806
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8807
  %color_trc15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 76, !dbg !8808
  store i32 %45, i32* %color_trc15, align 8, !dbg !8809
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8810
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i32 0, i32 18, !dbg !8811
  %48 = load i32, i32* %color_space, align 8, !dbg !8811
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8812
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 77, !dbg !8813
  store i32 %48, i32* %colorspace, align 4, !dbg !8814
  %50 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8815
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %50, i32 0, i32 19, !dbg !8816
  %51 = load i32, i32* %chroma_location, align 4, !dbg !8816
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8817
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 79, !dbg !8818
  store i32 %51, i32* %chroma_sample_location, align 4, !dbg !8819
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8820
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 44, !dbg !8821
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8822
  %sample_aspect_ratio16 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 13, !dbg !8823
  %55 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !8823
  %56 = bitcast %struct.AVRational* %sample_aspect_ratio16 to i8*, !dbg !8823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 8, i1 false), !dbg !8823
  %57 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8824
  %video_delay = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %57, i32 0, i32 20, !dbg !8825
  %58 = load i32, i32* %video_delay, align 8, !dbg !8825
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8826
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 32, !dbg !8827
  store i32 %58, i32* %has_b_frames, align 8, !dbg !8828
  br label %sw.epilog, !dbg !8829

sw.bb17:                                          ; preds = %entry
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8830
  %format18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i32 0, i32 5, !dbg !8831
  %61 = load i32, i32* %format18, align 4, !dbg !8831
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8832
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 84, !dbg !8833
  store i32 %61, i32* %sample_fmt, align 8, !dbg !8834
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8835
  %channel_layout = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i32 0, i32 21, !dbg !8836
  %64 = load i64, i64* %channel_layout, align 8, !dbg !8836
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8837
  %channel_layout19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 89, !dbg !8838
  store i64 %64, i64* %channel_layout19, align 8, !dbg !8839
  %66 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8840
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i32 0, i32 22, !dbg !8841
  %67 = load i32, i32* %channels, align 8, !dbg !8841
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8842
  %channels20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 83, !dbg !8843
  store i32 %67, i32* %channels20, align 4, !dbg !8844
  %69 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8845
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %69, i32 0, i32 23, !dbg !8846
  %70 = load i32, i32* %sample_rate, align 4, !dbg !8846
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8847
  %sample_rate21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 82, !dbg !8848
  store i32 %70, i32* %sample_rate21, align 8, !dbg !8849
  %72 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8850
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %72, i32 0, i32 24, !dbg !8851
  %73 = load i32, i32* %block_align, align 8, !dbg !8851
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8852
  %block_align22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 87, !dbg !8853
  store i32 %73, i32* %block_align22, align 4, !dbg !8854
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8855
  %frame_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 25, !dbg !8856
  %76 = load i32, i32* %frame_size, align 4, !dbg !8856
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8857
  %frame_size23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %77, i32 0, i32 85, !dbg !8858
  store i32 %76, i32* %frame_size23, align 4, !dbg !8859
  %78 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8860
  %initial_padding = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %78, i32 0, i32 26, !dbg !8861
  %79 = load i32, i32* %initial_padding, align 8, !dbg !8861
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8862
  %initial_padding24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %80, i32 0, i32 162, !dbg !8863
  store i32 %79, i32* %initial_padding24, align 4, !dbg !8864
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8865
  %delay = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 19, !dbg !8866
  store i32 %79, i32* %delay, align 8, !dbg !8867
  %82 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8868
  %trailing_padding = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %82, i32 0, i32 27, !dbg !8869
  %83 = load i32, i32* %trailing_padding, align 4, !dbg !8869
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8870
  %trailing_padding25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 184, !dbg !8871
  store i32 %83, i32* %trailing_padding25, align 4, !dbg !8872
  %85 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8873
  %seek_preroll = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %85, i32 0, i32 28, !dbg !8874
  %86 = load i32, i32* %seek_preroll, align 8, !dbg !8874
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8875
  %seek_preroll26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 174, !dbg !8876
  store i32 %86, i32* %seek_preroll26, align 8, !dbg !8877
  br label %sw.epilog, !dbg !8878

sw.bb27:                                          ; preds = %entry
  %88 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8879
  %width28 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %88, i32 0, i32 11, !dbg !8880
  %89 = load i32, i32* %width28, align 8, !dbg !8880
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8881
  %width29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 20, !dbg !8882
  store i32 %89, i32* %width29, align 4, !dbg !8883
  %91 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8884
  %height30 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %91, i32 0, i32 12, !dbg !8885
  %92 = load i32, i32* %height30, align 4, !dbg !8885
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8886
  %height31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %93, i32 0, i32 21, !dbg !8887
  store i32 %92, i32* %height31, align 8, !dbg !8888
  br label %sw.epilog, !dbg !8889

sw.epilog:                                        ; preds = %entry, %sw.bb27, %sw.bb17, %sw.bb
  %94 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8890
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %94, i32 0, i32 3, !dbg !8892
  %95 = load i8*, i8** %extradata, align 8, !dbg !8892
  %tobool = icmp ne i8* %95, null, !dbg !8890
  br i1 %tobool, label %if.then, label %if.end43, !dbg !8893

if.then:                                          ; preds = %sw.epilog
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8894
  %extradata32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 15, !dbg !8896
  %97 = bitcast i8** %extradata32 to i8*, !dbg !8897
  call void @av_freep(i8* %97), !dbg !8898
  %98 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8899
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %98, i32 0, i32 4, !dbg !8900
  %99 = load i32, i32* %extradata_size, align 8, !dbg !8900
  %add = add nsw i32 %99, 64, !dbg !8901
  %conv = sext i32 %add to i64, !dbg !8899
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !8902
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8903
  %extradata33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 15, !dbg !8904
  store i8* %call, i8** %extradata33, align 8, !dbg !8905
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8906
  %extradata34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 15, !dbg !8908
  %102 = load i8*, i8** %extradata34, align 8, !dbg !8908
  %tobool35 = icmp ne i8* %102, null, !dbg !8906
  br i1 %tobool35, label %if.end, label %if.then36, !dbg !8909

if.then36:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !8910
  br label %return, !dbg !8910

if.end:                                           ; preds = %if.then
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8911
  %extradata37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 15, !dbg !8912
  %104 = load i8*, i8** %extradata37, align 8, !dbg !8912
  %105 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8913
  %extradata38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %105, i32 0, i32 3, !dbg !8914
  %106 = load i8*, i8** %extradata38, align 8, !dbg !8914
  %107 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8915
  %extradata_size39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %107, i32 0, i32 4, !dbg !8916
  %108 = load i32, i32* %extradata_size39, align 8, !dbg !8916
  %conv40 = sext i32 %108 to i64, !dbg !8915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 %conv40, i32 1, i1 false), !dbg !8917
  %109 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8918
  %extradata_size41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %109, i32 0, i32 4, !dbg !8919
  %110 = load i32, i32* %extradata_size41, align 8, !dbg !8919
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec.addr, align 8, !dbg !8920
  %extradata_size42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 16, !dbg !8921
  store i32 %110, i32* %extradata_size42, align 8, !dbg !8922
  br label %if.end43, !dbg !8923

if.end43:                                         ; preds = %if.end, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !8924
  br label %return, !dbg !8924

return:                                           ; preds = %if.end43, %if.then36
  %112 = load i32, i32* %retval, align 4, !dbg !8925
  ret i32 %112, !dbg !8925
}

; Function Attrs: nounwind uwtable
define i32 @ff_alloc_a53_sei(%struct.AVFrame* %frame, i64 %prefix_len, i8** %data, i64* %sei_size) #0 !dbg !8926 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.AVFrame*, align 8
  %prefix_len.addr = alloca i64, align 8
  %data.addr = alloca i8**, align 8
  %sei_size.addr = alloca i64*, align 8
  %side_data = alloca %struct.AVFrameSideData*, align 8
  %sei_data = alloca i8*, align 8
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !8929, metadata !1175), !dbg !8930
  store i64 %prefix_len, i64* %prefix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %prefix_len.addr, metadata !8931, metadata !1175), !dbg !8932
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !8933, metadata !1175), !dbg !8934
  store i64* %sei_size, i64** %sei_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %sei_size.addr, metadata !8935, metadata !1175), !dbg !8936
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %side_data, metadata !8937, metadata !1175), !dbg !8938
  store %struct.AVFrameSideData* null, %struct.AVFrameSideData** %side_data, align 8, !dbg !8938
  call void @llvm.dbg.declare(metadata i8** %sei_data, metadata !8939, metadata !1175), !dbg !8940
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !8941
  %tobool = icmp ne %struct.AVFrame* %0, null, !dbg !8941
  br i1 %tobool, label %if.then, label %if.end, !dbg !8943

if.then:                                          ; preds = %entry
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !8944
  %call = call %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame* %1, i32 1), !dbg !8945
  store %struct.AVFrameSideData* %call, %struct.AVFrameSideData** %side_data, align 8, !dbg !8946
  br label %if.end, !dbg !8947

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !8948
  %tobool1 = icmp ne %struct.AVFrameSideData* %2, null, !dbg !8948
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8950

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %data.addr, align 8, !dbg !8951
  store i8* null, i8** %3, align 8, !dbg !8953
  store i32 0, i32* %retval, align 4, !dbg !8954
  br label %return, !dbg !8954

if.end3:                                          ; preds = %if.end
  %4 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !8955
  %size = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %4, i32 0, i32 2, !dbg !8956
  %5 = load i32, i32* %size, align 8, !dbg !8956
  %add = add nsw i32 %5, 11, !dbg !8957
  %conv = sext i32 %add to i64, !dbg !8955
  %6 = load i64*, i64** %sei_size.addr, align 8, !dbg !8958
  store i64 %conv, i64* %6, align 8, !dbg !8959
  %7 = load i64*, i64** %sei_size.addr, align 8, !dbg !8960
  %8 = load i64, i64* %7, align 8, !dbg !8961
  %9 = load i64, i64* %prefix_len.addr, align 8, !dbg !8962
  %add4 = add i64 %8, %9, !dbg !8963
  %call5 = call noalias i8* @av_mallocz(i64 %add4), !dbg !8964
  %10 = load i8**, i8*** %data.addr, align 8, !dbg !8965
  store i8* %call5, i8** %10, align 8, !dbg !8966
  %11 = load i8**, i8*** %data.addr, align 8, !dbg !8967
  %12 = load i8*, i8** %11, align 8, !dbg !8969
  %tobool6 = icmp ne i8* %12, null, !dbg !8969
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8970

if.then7:                                         ; preds = %if.end3
  store i32 -12, i32* %retval, align 4, !dbg !8971
  br label %return, !dbg !8971

if.end8:                                          ; preds = %if.end3
  %13 = load i8**, i8*** %data.addr, align 8, !dbg !8972
  %14 = load i8*, i8** %13, align 8, !dbg !8973
  %15 = load i64, i64* %prefix_len.addr, align 8, !dbg !8974
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !8975
  store i8* %add.ptr, i8** %sei_data, align 8, !dbg !8976
  %16 = load i8*, i8** %sei_data, align 8, !dbg !8977
  %arrayidx = getelementptr inbounds i8, i8* %16, i64 0, !dbg !8977
  store i8 -75, i8* %arrayidx, align 1, !dbg !8978
  %17 = load i8*, i8** %sei_data, align 8, !dbg !8979
  %arrayidx9 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !8979
  store i8 0, i8* %arrayidx9, align 1, !dbg !8980
  %18 = load i8*, i8** %sei_data, align 8, !dbg !8981
  %arrayidx10 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !8981
  store i8 49, i8* %arrayidx10, align 1, !dbg !8982
  %19 = load i8*, i8** %sei_data, align 8, !dbg !8983
  %add.ptr11 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !8984
  %20 = bitcast i8* %add.ptr11 to %union.unaligned_32*, !dbg !8985
  %l = bitcast %union.unaligned_32* %20 to i32*, !dbg !8985
  store i32 876167495, i32* %l, align 1, !dbg !8986
  %21 = load i8*, i8** %sei_data, align 8, !dbg !8987
  %arrayidx12 = getelementptr inbounds i8, i8* %21, i64 7, !dbg !8987
  store i8 3, i8* %arrayidx12, align 1, !dbg !8988
  %22 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !8989
  %size13 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %22, i32 0, i32 2, !dbg !8990
  %23 = load i32, i32* %size13, align 8, !dbg !8990
  %div = sdiv i32 %23, 3, !dbg !8991
  %and = and i32 %div, 31, !dbg !8992
  %or = or i32 %and, 64, !dbg !8993
  %conv14 = trunc i32 %or to i8, !dbg !8994
  %24 = load i8*, i8** %sei_data, align 8, !dbg !8995
  %arrayidx15 = getelementptr inbounds i8, i8* %24, i64 8, !dbg !8995
  store i8 %conv14, i8* %arrayidx15, align 1, !dbg !8996
  %25 = load i8*, i8** %sei_data, align 8, !dbg !8997
  %arrayidx16 = getelementptr inbounds i8, i8* %25, i64 9, !dbg !8997
  store i8 0, i8* %arrayidx16, align 1, !dbg !8998
  %26 = load i8*, i8** %sei_data, align 8, !dbg !8999
  %add.ptr17 = getelementptr inbounds i8, i8* %26, i64 10, !dbg !9000
  %27 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !9001
  %data18 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %27, i32 0, i32 1, !dbg !9002
  %28 = load i8*, i8** %data18, align 8, !dbg !9002
  %29 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !9003
  %size19 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %29, i32 0, i32 2, !dbg !9004
  %30 = load i32, i32* %size19, align 8, !dbg !9004
  %conv20 = sext i32 %30 to i64, !dbg !9003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr17, i8* %28, i64 %conv20, i32 1, i1 false), !dbg !9005
  %31 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %side_data, align 8, !dbg !9006
  %size21 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %31, i32 0, i32 2, !dbg !9007
  %32 = load i32, i32* %size21, align 8, !dbg !9007
  %add22 = add nsw i32 %32, 10, !dbg !9008
  %idxprom = sext i32 %add22 to i64, !dbg !9009
  %33 = load i8*, i8** %sei_data, align 8, !dbg !9009
  %arrayidx23 = getelementptr inbounds i8, i8* %33, i64 %idxprom, !dbg !9009
  store i8 -1, i8* %arrayidx23, align 1, !dbg !9010
  store i32 0, i32* %retval, align 4, !dbg !9011
  br label %return, !dbg !9011

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %34 = load i32, i32* %retval, align 4, !dbg !9012
  ret i32 %34, !dbg !9012
}

; Function Attrs: nounwind uwtable
define i64 @ff_guess_coded_bitrate(%struct.AVCodecContext* %avctx) #0 !dbg !9013 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !4055, metadata !1175), !dbg !9014
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !4065, metadata !1175), !dbg !9017
  %retval = alloca i64, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %framerate = alloca %struct.AVRational, align 4
  %bits_per_coded_sample = alloca i32, align 4
  %bitrate = alloca i64, align 8
  %coerce = alloca %struct.AVRational, align 4
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !9018, metadata !1175), !dbg !9019
  call void @llvm.dbg.declare(metadata %struct.AVRational* %framerate, metadata !9020, metadata !1175), !dbg !9021
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9022
  %framerate1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 163, !dbg !9023
  %1 = bitcast %struct.AVRational* %framerate to i8*, !dbg !9023
  %2 = bitcast %struct.AVRational* %framerate1 to i8*, !dbg !9023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 4, i1 false), !dbg !9023
  call void @llvm.dbg.declare(metadata i32* %bits_per_coded_sample, metadata !9024, metadata !1175), !dbg !9025
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9026
  %bits_per_coded_sample2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 142, !dbg !9027
  %4 = load i32, i32* %bits_per_coded_sample2, align 8, !dbg !9027
  store i32 %4, i32* %bits_per_coded_sample, align 4, !dbg !9025
  call void @llvm.dbg.declare(metadata i64* %bitrate, metadata !9028, metadata !1175), !dbg !9029
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 0, !dbg !9030
  %5 = load i32, i32* %num, align 4, !dbg !9030
  %tobool = icmp ne i32 %5, 0, !dbg !9031
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9032

land.lhs.true:                                    ; preds = %entry
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 1, !dbg !9033
  %6 = load i32, i32* %den, align 4, !dbg !9033
  %tobool3 = icmp ne i32 %6, 0, !dbg !9035
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9036

if.then:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9037
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 17, !dbg !9038
  %8 = bitcast %struct.AVRational* %time_base to i64*, !dbg !9039
  %9 = load i64, i64* %8, align 4, !dbg !9039
  %10 = bitcast %struct.AVRational* %q.i to i64*, !dbg !9039
  store i64 %9, i64* %10, align 4, !dbg !9039
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !9040
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !9041
  %11 = load i32, i32* %den.i, align 4, !dbg !9041
  store i32 %11, i32* %num.i, align 4, !dbg !9040
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !9040
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !9042
  %12 = load i32, i32* %num2.i, align 4, !dbg !9042
  store i32 %12, i32* %den1.i, align 4, !dbg !9040
  %13 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !9043
  %14 = bitcast %struct.AVRational* %r.i to i8*, !dbg !9043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false) #12, !dbg !9043
  %15 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !9044
  %16 = load i64, i64* %15, align 4, !dbg !9044
  %17 = bitcast %struct.AVRational* %coerce to i64*, !dbg !9039
  store i64 %16, i64* %17, align 4, !dbg !9039
  %18 = bitcast %struct.AVRational* %framerate to i8*, !dbg !9039
  %19 = bitcast %struct.AVRational* %coerce to i8*, !dbg !9039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false), !dbg !9045
  br label %if.end, !dbg !9046

if.end:                                           ; preds = %if.then, %land.lhs.true
  %num4 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 0, !dbg !9047
  %20 = load i32, i32* %num4, align 4, !dbg !9047
  %tobool5 = icmp ne i32 %20, 0, !dbg !9049
  br i1 %tobool5, label %land.lhs.true6, label %if.then9, !dbg !9050

land.lhs.true6:                                   ; preds = %if.end
  %den7 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 1, !dbg !9051
  %21 = load i32, i32* %den7, align 4, !dbg !9051
  %tobool8 = icmp ne i32 %21, 0, !dbg !9053
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9054

if.then9:                                         ; preds = %land.lhs.true6, %if.end
  store i64 0, i64* %retval, align 8, !dbg !9055
  br label %return, !dbg !9055

if.end10:                                         ; preds = %land.lhs.true6
  %22 = load i32, i32* %bits_per_coded_sample, align 4, !dbg !9056
  %tobool11 = icmp ne i32 %22, 0, !dbg !9056
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !9058

if.then12:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !9059, metadata !1175), !dbg !9061
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9062
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 25, !dbg !9063
  %24 = load i32, i32* %pix_fmt, align 8, !dbg !9063
  %call13 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %24), !dbg !9064
  store %struct.AVPixFmtDescriptor* %call13, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !9061
  %25 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !9065
  %call14 = call i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor* %25), !dbg !9066
  store i32 %call14, i32* %bits_per_coded_sample, align 4, !dbg !9067
  br label %if.end15, !dbg !9068

if.end15:                                         ; preds = %if.then12, %if.end10
  %26 = load i32, i32* %bits_per_coded_sample, align 4, !dbg !9069
  %conv = sext i32 %26 to i64, !dbg !9070
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9071
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 20, !dbg !9072
  %28 = load i32, i32* %width, align 4, !dbg !9072
  %conv16 = sext i32 %28 to i64, !dbg !9071
  %mul = mul nsw i64 %conv, %conv16, !dbg !9073
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9074
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 21, !dbg !9075
  %30 = load i32, i32* %height, align 8, !dbg !9075
  %conv17 = sext i32 %30 to i64, !dbg !9074
  %mul18 = mul nsw i64 %mul, %conv17, !dbg !9076
  %num19 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 0, !dbg !9077
  %31 = load i32, i32* %num19, align 4, !dbg !9077
  %conv20 = sext i32 %31 to i64, !dbg !9078
  %mul21 = mul nsw i64 %mul18, %conv20, !dbg !9079
  %den22 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 1, !dbg !9080
  %32 = load i32, i32* %den22, align 4, !dbg !9080
  %conv23 = sext i32 %32 to i64, !dbg !9081
  %div = sdiv i64 %mul21, %conv23, !dbg !9082
  store i64 %div, i64* %bitrate, align 8, !dbg !9083
  %33 = load i64, i64* %bitrate, align 8, !dbg !9084
  store i64 %33, i64* %retval, align 8, !dbg !9085
  br label %return, !dbg !9085

return:                                           ; preds = %if.end15, %if.then9
  %34 = load i64, i64* %retval, align 8, !dbg !9086
  ret i64 %34, !dbg !9086
}

declare i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor*) #2

; Function Attrs: nounwind uwtable
define i32 @ff_int_from_list_or_default(i8* %ctx, i8* %val_name, i32 %val, i32* %array_valid_values, i32 %default_value) #0 !dbg !9087 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca i8*, align 8
  %val_name.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  %array_valid_values.addr = alloca i32*, align 8
  %default_value.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ref_val = alloca i32, align 4
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !9090, metadata !1175), !dbg !9091
  store i8* %val_name, i8** %val_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val_name.addr, metadata !9092, metadata !1175), !dbg !9093
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9094, metadata !1175), !dbg !9095
  store i32* %array_valid_values, i32** %array_valid_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %array_valid_values.addr, metadata !9096, metadata !1175), !dbg !9097
  store i32 %default_value, i32* %default_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_value.addr, metadata !9098, metadata !1175), !dbg !9099
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9100, metadata !1175), !dbg !9101
  store i32 0, i32* %i, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %ref_val, metadata !9102, metadata !1175), !dbg !9103
  br label %while.body, !dbg !9104

while.body:                                       ; preds = %entry, %if.end3
  %0 = load i32, i32* %i, align 4, !dbg !9105
  %idxprom = sext i32 %0 to i64, !dbg !9107
  %1 = load i32*, i32** %array_valid_values.addr, align 8, !dbg !9107
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !9107
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9107
  store i32 %2, i32* %ref_val, align 4, !dbg !9108
  %3 = load i32, i32* %ref_val, align 4, !dbg !9109
  %cmp = icmp eq i32 %3, 2147483647, !dbg !9111
  br i1 %cmp, label %if.then, label %if.end, !dbg !9112

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !9113

if.end:                                           ; preds = %while.body
  %4 = load i32, i32* %val.addr, align 4, !dbg !9114
  %5 = load i32, i32* %ref_val, align 4, !dbg !9116
  %cmp1 = icmp eq i32 %4, %5, !dbg !9117
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9118

if.then2:                                         ; preds = %if.end
  %6 = load i32, i32* %val.addr, align 4, !dbg !9119
  store i32 %6, i32* %retval, align 4, !dbg !9120
  br label %return, !dbg !9120

if.end3:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !9121
  %inc = add nsw i32 %7, 1, !dbg !9121
  store i32 %inc, i32* %i, align 4, !dbg !9121
  br label %while.body, !dbg !9122, !llvm.loop !9124

while.end:                                        ; preds = %if.then
  %8 = load i8*, i8** %ctx.addr, align 8, !dbg !9125
  %9 = load i8*, i8** %val_name.addr, align 8, !dbg !9126
  %10 = load i32, i32* %val.addr, align 4, !dbg !9127
  %11 = load i32, i32* %default_value.addr, align 4, !dbg !9128
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 48, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.82, i32 0, i32 0), i8* %9, i32 %10, i32 %11), !dbg !9129
  %12 = load i32, i32* %default_value.addr, align 4, !dbg !9130
  store i32 %12, i32* %retval, align 4, !dbg !9131
  br label %return, !dbg !9131

return:                                           ; preds = %while.end, %if.then2
  %13 = load i32, i32* %retval, align 4, !dbg !9132
  ret i32 %13, !dbg !9132
}

declare noalias i8* @av_malloc(i64) #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #6

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1164, !1165}
!llvm.ident = !{!1166}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !956, globals: !1120)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--utils.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !901, !910, !919, !925, !939, !950}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OutputFormat", file: !895, line: 123, size: 32, align: 32, elements: !896)
!895 = !DIFile(filename: "libavcodec/mpegutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!896 = !{!897, !898, !899, !900}
!897 = !DIEnumerator(name: "FMT_MPEG1", value: 0)
!898 = !DIEnumerator(name: "FMT_H261", value: 1)
!899 = !DIEnumerator(name: "FMT_H263", value: 2)
!900 = !DIEnumerator(name: "FMT_MJPEG", value: 3)
!901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !902, line: 37, size: 32, align: 32, elements: !903)
!902 = !DIFile(filename: "libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!903 = !{!904, !905, !906, !907, !908, !909}
!904 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!905 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!906 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!907 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!908 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!909 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918}
!912 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!913 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!914 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!915 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!916 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!917 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!918 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !920)
!920 = !{!921, !922, !923, !924}
!921 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!922 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!923 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!924 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVHWDeviceType", file: !926, line: 27, size: 32, align: 32, elements: !927)
!926 = !DIFile(filename: "./libavutil/hwcontext.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!927 = !{!928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938}
!928 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_NONE", value: 0)
!929 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VDPAU", value: 1)
!930 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_CUDA", value: 2)
!931 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VAAPI", value: 3)
!932 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DXVA2", value: 4)
!933 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_QSV", value: 5)
!934 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VIDEOTOOLBOX", value: 6)
!935 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_D3D11VA", value: 7)
!936 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DRM", value: 8)
!937 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_OPENCL", value: 9)
!938 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_MEDIACODEC", value: 10)
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMatrixEncoding", file: !940, line: 114, size: 32, align: 32, elements: !941)
!940 = !DIFile(filename: "./libavutil/channel_layout.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!941 = !{!942, !943, !944, !945, !946, !947, !948, !949}
!942 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NONE", value: 0)
!943 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBY", value: 1)
!944 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLII", value: 2)
!945 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIX", value: 3)
!946 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIZ", value: 4)
!947 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYEX", value: 5)
!948 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYHEADPHONE", value: 6)
!949 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NB", value: 7)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVLockOp", file: !14, line: 6113, size: 32, align: 32, elements: !951)
!951 = !{!952, !953, !954, !955}
!952 = !DIEnumerator(name: "AV_LOCK_CREATE", value: 0)
!953 = !DIEnumerator(name: "AV_LOCK_OBTAIN", value: 1)
!954 = !DIEnumerator(name: "AV_LOCK_RELEASE", value: 2)
!955 = !DIEnumerator(name: "AV_LOCK_DESTROY", value: 3)
!956 = !{!957, !958, !962, !964, !965, !968, !970, !1054, !1109, !977, !991, !997, !1111, !1112, !1119}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !960, line: 48, baseType: !961)
!960 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!961 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !960, line: 119, baseType: !963)
!963 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !960, line: 49, baseType: !967)
!967 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !975)
!975 = !{!976, !979, !983, !1013, !1014, !1015, !1016, !1020, !1026, !1028, !1032}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !974, file: !713, line: 72, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !974, file: !713, line: 78, baseType: !980, size: 64, align: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!977, !964}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !974, file: !713, line: 85, baseType: !984, size: 64, align: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !987)
!987 = !{!988, !989, !990, !992, !993, !1009, !1010, !1011, !1012}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !986, file: !691, line: 247, baseType: !977, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !986, file: !691, line: 253, baseType: !977, size: 64, align: 64, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !986, file: !691, line: 259, baseType: !991, size: 32, align: 32, offset: 128)
!991 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !986, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !986, file: !691, line: 271, baseType: !994, size: 64, align: 64, offset: 192)
!994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !691, line: 265, size: 64, align: 64, elements: !995)
!995 = !{!996, !999, !1001, !1002}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !994, file: !691, line: 266, baseType: !997, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !998, line: 197, baseType: !963)
!998 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!999 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !994, file: !691, line: 267, baseType: !1000, size: 64, align: 64)
!1000 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !994, file: !691, line: 268, baseType: !977, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !994, file: !691, line: 270, baseType: !1003, size: 64, align: 32)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1004, line: 61, baseType: !1005)
!1004 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1004, line: 58, size: 64, align: 32, elements: !1006)
!1006 = !{!1007, !1008}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1005, file: !1004, line: 59, baseType: !991, size: 32, align: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1005, file: !1004, line: 60, baseType: !991, size: 32, align: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !986, file: !691, line: 272, baseType: !1000, size: 64, align: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !986, file: !691, line: 273, baseType: !1000, size: 64, align: 64, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !986, file: !691, line: 275, baseType: !991, size: 32, align: 32, offset: 384)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !986, file: !691, line: 300, baseType: !977, size: 64, align: 64, offset: 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !974, file: !713, line: 93, baseType: !991, size: 32, align: 32, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !974, file: !713, line: 99, baseType: !991, size: 32, align: 32, offset: 224)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !974, file: !713, line: 108, baseType: !991, size: 32, align: 32, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !974, file: !713, line: 113, baseType: !1017, size: 64, align: 64, offset: 320)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!964, !964, !964}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !974, file: !713, line: 123, baseType: !1021, size: 64, align: 64, offset: 384)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!1024, !1024}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !974, file: !713, line: 130, baseType: !1027, size: 32, align: 32, offset: 448)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !974, file: !713, line: 136, baseType: !1029, size: 64, align: 64, offset: 512)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!1027, !964}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !974, file: !713, line: 142, baseType: !1033, size: 64, align: 64, offset: 576)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!991, !1036, !964, !977, !991}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1039)
!1039 = !{!1040, !1052, !1053}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1038, file: !691, line: 360, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1050, !1051}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1044, file: !691, line: 307, baseType: !977, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1044, file: !691, line: 313, baseType: !1000, size: 64, align: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1044, file: !691, line: 313, baseType: !1000, size: 64, align: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1044, file: !691, line: 318, baseType: !1000, size: 64, align: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1044, file: !691, line: 318, baseType: !1000, size: 64, align: 64, offset: 256)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1044, file: !691, line: 323, baseType: !991, size: 32, align: 32, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1038, file: !691, line: 364, baseType: !991, size: 32, align: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1038, file: !691, line: 368, baseType: !991, size: 32, align: 32, offset: 96)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWFramesContext", file: !926, line: 229, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWFramesContext", file: !926, line: 123, size: 704, align: 64, elements: !1057)
!1057 = !{!1058, !1059, !1063, !1075, !1093, !1094, !1099, !1100, !1104, !1105, !1106, !1107, !1108}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1056, file: !926, line: 127, baseType: !971, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1056, file: !926, line: 133, baseType: !1060, size: 64, align: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWFramesInternal", file: !926, line: 111, baseType: !1062)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWFramesInternal", file: !926, line: 111, flags: DIFlagFwdDecl)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "device_ref", scope: !1056, file: !926, line: 140, baseType: !1064, size: 64, align: 64, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1066, line: 94, baseType: !1067)
!1066 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1066, line: 81, size: 192, align: 64, elements: !1068)
!1068 = !{!1069, !1073, !1074}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1067, file: !1066, line: 82, baseType: !1070, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1066, line: 73, baseType: !1072)
!1072 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1066, line: 73, flags: DIFlagFwdDecl)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1067, file: !1066, line: 89, baseType: !958, size: 64, align: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1067, file: !1066, line: 93, baseType: !991, size: 32, align: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "device_ctx", scope: !1056, file: !926, line: 148, baseType: !1076, size: 64, align: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWDeviceContext", file: !926, line: 109, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWDeviceContext", file: !926, line: 60, size: 384, align: 64, elements: !1079)
!1079 = !{!1080, !1081, !1085, !1086, !1087, !1092}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1078, file: !926, line: 64, baseType: !971, size: 64, align: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1078, file: !926, line: 70, baseType: !1082, size: 64, align: 64, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64, align: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWDeviceInternal", file: !926, line: 41, baseType: !1084)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWDeviceInternal", file: !926, line: 41, flags: DIFlagFwdDecl)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1078, file: !926, line: 78, baseType: !925, size: 32, align: 32, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "hwctx", scope: !1078, file: !926, line: 91, baseType: !964, size: 64, align: 64, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1078, file: !926, line: 103, baseType: !1088, size: 64, align: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !1091}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "user_opaque", scope: !1078, file: !926, line: 108, baseType: !964, size: 64, align: 64, offset: 320)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "hwctx", scope: !1056, file: !926, line: 161, baseType: !964, size: 64, align: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1056, file: !926, line: 169, baseType: !1095, size: 64, align: 64, offset: 320)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "user_opaque", scope: !1056, file: !926, line: 174, baseType: !964, size: 64, align: 64, offset: 384)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1056, file: !926, line: 189, baseType: !1101, size: 64, align: 64, offset: 448)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1066, line: 238, baseType: !1103)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1066, line: 238, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "initial_pool_size", scope: !1056, file: !926, line: 198, baseType: !991, size: 32, align: 32, offset: 512)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1056, file: !926, line: 208, baseType: !473, size: 32, align: 32, offset: 544)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "sw_format", scope: !1056, file: !926, line: 221, baseType: !473, size: 32, align: 32, offset: 576)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1056, file: !926, line: 228, baseType: !991, size: 32, align: 32, offset: 608)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1056, file: !926, line: 228, baseType: !991, size: 32, align: 32, offset: 640)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "iconv_t", file: !1110, line: 29, baseType: !964)
!1110 = !DIFile(filename: "/usr/include/iconv.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1111 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1115, line: 221, size: 32, align: 8, elements: !1116)
!1115 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1116 = !{!1117}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1114, file: !1115, line: 221, baseType: !1118, size: 32, align: 32)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !960, line: 51, baseType: !1111)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1120 = !{!1121, !1126, !1136}
!1121 = distinct !DIGlobalVariable(name: "av_codec_ffversion", scope: !0, file: !1122, line: 66, type: !1123, isLocal: false, isDefinition: true, variable: [32 x i8]* @av_codec_ffversion)
!1122 = !DIFile(filename: "libavcodec/utils.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 256, align: 8, elements: !1124)
!1124 = !{!1125}
!1125 = !DISubrange(count: 32)
!1126 = distinct !DIGlobalVariable(name: "map", scope: !1127, file: !1122, line: 1488, type: !1131, isLocal: true, isDefinition: true, variable: [12 x [2 x i32]]* @av_get_pcm_codec.map)
!1127 = distinct !DISubprogram(name: "av_get_pcm_codec", scope: !1122, file: !1122, line: 1486, type: !1128, isLocal: false, isDefinition: true, scopeLine: 1487, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!13, !673, !991}
!1130 = !{}
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 768, align: 32, elements: !1133)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1133 = !{!1134, !1135}
!1134 = !DISubrange(count: 12)
!1135 = !DISubrange(count: 2)
!1136 = distinct !DIGlobalVariable(name: "codec_mutex", scope: !0, file: !1122, line: 68, type: !1137, isLocal: true, isDefinition: true, variable: %union.pthread_mutex_t* @codec_mutex)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !1138, line: 128, baseType: !1139)
!1138 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1139 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1138, line: 90, size: 320, align: 64, elements: !1140)
!1140 = !{!1141, !1159, !1163}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !1139, file: !1138, line: 125, baseType: !1142, size: 320, align: 64)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !1138, line: 92, size: 320, align: 64, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1151, !1152}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !1142, file: !1138, line: 94, baseType: !991, size: 32, align: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1142, file: !1138, line: 95, baseType: !1111, size: 32, align: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !1142, file: !1138, line: 96, baseType: !991, size: 32, align: 32, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !1142, file: !1138, line: 98, baseType: !1111, size: 32, align: 32, offset: 96)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !1142, file: !1138, line: 102, baseType: !991, size: 32, align: 32, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !1142, file: !1138, line: 104, baseType: !1150, size: 16, align: 16, offset: 160)
!1150 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !1142, file: !1138, line: 105, baseType: !1150, size: 16, align: 16, offset: 176)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !1142, file: !1138, line: 106, baseType: !1153, size: 128, align: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !1138, line: 79, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !1138, line: 75, size: 128, align: 64, elements: !1155)
!1155 = !{!1156, !1158}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !1154, file: !1138, line: 77, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !1154, file: !1138, line: 78, baseType: !1157, size: 64, align: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !1139, file: !1138, line: 126, baseType: !1160, size: 320, align: 8)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 320, align: 8, elements: !1161)
!1161 = !{!1162}
!1162 = !DISubrange(count: 40)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !1139, file: !1138, line: 127, baseType: !963, size: 64, align: 64)
!1164 = !{i32 2, !"Dwarf Version", i32 4}
!1165 = !{i32 2, !"Debug Info Version", i32 3}
!1166 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1167 = distinct !DISubprogram(name: "av_fast_padded_malloc", scope: !1122, file: !1122, line: 70, type: !1168, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{null, !964, !1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1172, line: 216, baseType: !1173)
!1172 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1173 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1174 = !DILocalVariable(name: "ptr", arg: 1, scope: !1167, file: !1122, line: 70, type: !964)
!1175 = !DIExpression()
!1176 = !DILocation(line: 70, column: 34, scope: !1167)
!1177 = !DILocalVariable(name: "size", arg: 2, scope: !1167, file: !1122, line: 70, type: !1170)
!1178 = !DILocation(line: 70, column: 53, scope: !1167)
!1179 = !DILocalVariable(name: "min_size", arg: 3, scope: !1167, file: !1122, line: 70, type: !1171)
!1180 = !DILocation(line: 70, column: 66, scope: !1167)
!1181 = !DILocalVariable(name: "p", scope: !1167, file: !1122, line: 72, type: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64, align: 64)
!1183 = !DILocation(line: 72, column: 15, scope: !1167)
!1184 = !DILocation(line: 72, column: 19, scope: !1167)
!1185 = !DILocation(line: 73, column: 9, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1167, file: !1122, line: 73, column: 9)
!1187 = !DILocation(line: 73, column: 18, scope: !1186)
!1188 = !DILocation(line: 73, column: 9, scope: !1167)
!1189 = !DILocation(line: 74, column: 18, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1186, file: !1122, line: 73, column: 34)
!1191 = !DILocation(line: 74, column: 9, scope: !1190)
!1192 = !DILocation(line: 75, column: 10, scope: !1190)
!1193 = !DILocation(line: 75, column: 15, scope: !1190)
!1194 = !DILocation(line: 76, column: 9, scope: !1190)
!1195 = !DILocation(line: 78, column: 25, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1167, file: !1122, line: 78, column: 9)
!1197 = !DILocation(line: 78, column: 28, scope: !1196)
!1198 = !DILocation(line: 78, column: 34, scope: !1196)
!1199 = !DILocation(line: 78, column: 43, scope: !1196)
!1200 = !DILocation(line: 78, column: 10, scope: !1196)
!1201 = !DILocation(line: 78, column: 9, scope: !1167)
!1202 = !DILocation(line: 79, column: 17, scope: !1196)
!1203 = !DILocation(line: 79, column: 16, scope: !1196)
!1204 = !DILocation(line: 79, column: 21, scope: !1196)
!1205 = !DILocation(line: 79, column: 19, scope: !1196)
!1206 = !DILocation(line: 79, column: 9, scope: !1196)
!1207 = !DILocation(line: 80, column: 1, scope: !1167)
!1208 = distinct !DISubprogram(name: "ff_fast_malloc", scope: !1209, file: !1209, line: 27, type: !1210, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!1209 = !DIFile(filename: "./libavutil/mem_internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!991, !964, !1170, !1171, !991}
!1212 = !DILocalVariable(name: "ptr", arg: 1, scope: !1208, file: !1209, line: 27, type: !964)
!1213 = !DILocation(line: 27, column: 40, scope: !1208)
!1214 = !DILocalVariable(name: "size", arg: 2, scope: !1208, file: !1209, line: 27, type: !1170)
!1215 = !DILocation(line: 27, column: 59, scope: !1208)
!1216 = !DILocalVariable(name: "min_size", arg: 3, scope: !1208, file: !1209, line: 27, type: !1171)
!1217 = !DILocation(line: 27, column: 72, scope: !1208)
!1218 = !DILocalVariable(name: "zero_realloc", arg: 4, scope: !1208, file: !1209, line: 27, type: !991)
!1219 = !DILocation(line: 27, column: 86, scope: !1208)
!1220 = !DILocalVariable(name: "val", scope: !1208, file: !1209, line: 29, type: !964)
!1221 = !DILocation(line: 29, column: 11, scope: !1208)
!1222 = !DILocation(line: 31, column: 5, scope: !1208)
!1223 = !DILocation(line: 31, column: 18, scope: !1208)
!1224 = !DILocation(line: 32, column: 9, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1208, file: !1209, line: 32, column: 9)
!1226 = !DILocation(line: 32, column: 22, scope: !1225)
!1227 = !DILocation(line: 32, column: 21, scope: !1225)
!1228 = !DILocation(line: 32, column: 18, scope: !1225)
!1229 = !DILocation(line: 32, column: 9, scope: !1208)
!1230 = !DILocation(line: 33, column: 9, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1225, file: !1209, line: 32, column: 28)
!1232 = distinct !{!1232, !1230}
!1233 = !DILocation(line: 33, column: 20, scope: !1234)
!1234 = !DILexicalBlockFile(scope: !1235, file: !1209, discriminator: 1)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !1209, line: 33, column: 18)
!1236 = distinct !DILexicalBlock(scope: !1231, file: !1209, line: 33, column: 12)
!1237 = !DILocation(line: 33, column: 24, scope: !1234)
!1238 = !DILocation(line: 33, column: 28, scope: !1239)
!1239 = !DILexicalBlockFile(scope: !1235, file: !1209, discriminator: 2)
!1240 = !DILocation(line: 33, column: 18, scope: !1239)
!1241 = !DILocation(line: 33, column: 41, scope: !1242)
!1242 = !DILexicalBlockFile(scope: !1243, file: !1209, discriminator: 3)
!1243 = distinct !DILexicalBlock(scope: !1235, file: !1209, line: 33, column: 39)
!1244 = !DILocation(line: 33, column: 102, scope: !1245)
!1245 = !DILexicalBlockFile(scope: !1242, file: !1209, discriminator: 5)
!1246 = !DILocation(line: 33, column: 102, scope: !1242)
!1247 = !DILocation(line: 33, column: 113, scope: !1248)
!1248 = !DILexicalBlockFile(scope: !1236, file: !1209, discriminator: 4)
!1249 = !DILocation(line: 34, column: 9, scope: !1231)
!1250 = !DILocation(line: 36, column: 18, scope: !1208)
!1251 = !DILocation(line: 36, column: 29, scope: !1208)
!1252 = !DILocation(line: 36, column: 38, scope: !1208)
!1253 = !DILocation(line: 36, column: 27, scope: !1208)
!1254 = !DILocation(line: 36, column: 43, scope: !1208)
!1255 = !DILocation(line: 36, column: 52, scope: !1208)
!1256 = !DILocation(line: 36, column: 49, scope: !1208)
!1257 = !DILocation(line: 36, column: 17, scope: !1208)
!1258 = !DILocation(line: 36, column: 65, scope: !1259)
!1259 = !DILexicalBlockFile(scope: !1208, file: !1209, discriminator: 1)
!1260 = !DILocation(line: 36, column: 76, scope: !1259)
!1261 = !DILocation(line: 36, column: 85, scope: !1259)
!1262 = !DILocation(line: 36, column: 74, scope: !1259)
!1263 = !DILocation(line: 36, column: 90, scope: !1259)
!1264 = !DILocation(line: 36, column: 17, scope: !1259)
!1265 = !DILocation(line: 36, column: 99, scope: !1266)
!1266 = !DILexicalBlockFile(scope: !1208, file: !1209, discriminator: 2)
!1267 = !DILocation(line: 36, column: 17, scope: !1266)
!1268 = !DILocation(line: 36, column: 17, scope: !1269)
!1269 = !DILexicalBlockFile(scope: !1208, file: !1209, discriminator: 3)
!1270 = !DILocation(line: 36, column: 14, scope: !1269)
!1271 = !DILocation(line: 37, column: 14, scope: !1208)
!1272 = !DILocation(line: 37, column: 5, scope: !1208)
!1273 = !DILocation(line: 38, column: 11, scope: !1208)
!1274 = !DILocation(line: 38, column: 37, scope: !1259)
!1275 = !DILocation(line: 38, column: 26, scope: !1259)
!1276 = !DILocation(line: 38, column: 11, scope: !1259)
!1277 = !DILocation(line: 38, column: 59, scope: !1266)
!1278 = !DILocation(line: 38, column: 49, scope: !1266)
!1279 = !DILocation(line: 38, column: 11, scope: !1266)
!1280 = !DILocation(line: 38, column: 11, scope: !1269)
!1281 = !DILocation(line: 38, column: 9, scope: !1269)
!1282 = !DILocation(line: 39, column: 12, scope: !1208)
!1283 = !DILocation(line: 39, column: 5, scope: !1208)
!1284 = !DILocation(line: 40, column: 10, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1208, file: !1209, line: 40, column: 9)
!1286 = !DILocation(line: 40, column: 9, scope: !1208)
!1287 = !DILocation(line: 41, column: 18, scope: !1285)
!1288 = !DILocation(line: 41, column: 9, scope: !1285)
!1289 = !DILocation(line: 42, column: 13, scope: !1208)
!1290 = !DILocation(line: 42, column: 6, scope: !1208)
!1291 = !DILocation(line: 42, column: 11, scope: !1208)
!1292 = !DILocation(line: 43, column: 5, scope: !1208)
!1293 = !DILocation(line: 44, column: 1, scope: !1208)
!1294 = distinct !DISubprogram(name: "av_fast_padded_mallocz", scope: !1122, file: !1122, line: 82, type: !1168, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!1295 = !DILocalVariable(name: "ptr", arg: 1, scope: !1294, file: !1122, line: 82, type: !964)
!1296 = !DILocation(line: 82, column: 35, scope: !1294)
!1297 = !DILocalVariable(name: "size", arg: 2, scope: !1294, file: !1122, line: 82, type: !1170)
!1298 = !DILocation(line: 82, column: 54, scope: !1294)
!1299 = !DILocalVariable(name: "min_size", arg: 3, scope: !1294, file: !1122, line: 82, type: !1171)
!1300 = !DILocation(line: 82, column: 67, scope: !1294)
!1301 = !DILocalVariable(name: "p", scope: !1294, file: !1122, line: 84, type: !1182)
!1302 = !DILocation(line: 84, column: 15, scope: !1294)
!1303 = !DILocation(line: 84, column: 19, scope: !1294)
!1304 = !DILocation(line: 85, column: 9, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1294, file: !1122, line: 85, column: 9)
!1306 = !DILocation(line: 85, column: 18, scope: !1305)
!1307 = !DILocation(line: 85, column: 9, scope: !1294)
!1308 = !DILocation(line: 86, column: 18, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1305, file: !1122, line: 85, column: 34)
!1310 = !DILocation(line: 86, column: 9, scope: !1309)
!1311 = !DILocation(line: 87, column: 10, scope: !1309)
!1312 = !DILocation(line: 87, column: 15, scope: !1309)
!1313 = !DILocation(line: 88, column: 9, scope: !1309)
!1314 = !DILocation(line: 90, column: 25, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1294, file: !1122, line: 90, column: 9)
!1316 = !DILocation(line: 90, column: 28, scope: !1315)
!1317 = !DILocation(line: 90, column: 34, scope: !1315)
!1318 = !DILocation(line: 90, column: 43, scope: !1315)
!1319 = !DILocation(line: 90, column: 10, scope: !1315)
!1320 = !DILocation(line: 90, column: 9, scope: !1294)
!1321 = !DILocation(line: 91, column: 17, scope: !1315)
!1322 = !DILocation(line: 91, column: 16, scope: !1315)
!1323 = !DILocation(line: 91, column: 23, scope: !1315)
!1324 = !DILocation(line: 91, column: 32, scope: !1315)
!1325 = !DILocation(line: 91, column: 9, scope: !1315)
!1326 = !DILocation(line: 92, column: 1, scope: !1294)
!1327 = distinct !DISubprogram(name: "av_codec_is_encoder", scope: !1122, file: !1122, line: 94, type: !1328, isLocal: false, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!991, !1330}
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1343, !1346, !1349, !1352, !1356, !1357, !1358, !1366, !1367, !1368, !1370, !2788, !2794, !2802, !2806, !2807, !2844, !2848, !2852, !2853, !2857, !2861, !2862, !2866, !2867, !2868}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1333, file: !14, line: 3475, baseType: !977, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1333, file: !14, line: 3480, baseType: !977, size: 64, align: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1333, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1333, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1333, file: !14, line: 3487, baseType: !991, size: 32, align: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1333, file: !14, line: 3488, baseType: !1341, size: 64, align: 64, offset: 256)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1333, file: !14, line: 3489, baseType: !1344, size: 64, align: 64, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1333, file: !14, line: 3490, baseType: !1347, size: 64, align: 64, offset: 384)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1333, file: !14, line: 3491, baseType: !1350, size: 64, align: 64, offset: 448)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1333, file: !14, line: 3492, baseType: !1353, size: 64, align: 64, offset: 512)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !960, line: 55, baseType: !1173)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1333, file: !14, line: 3493, baseType: !959, size: 8, align: 8, offset: 576)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1333, file: !14, line: 3494, baseType: !971, size: 64, align: 64, offset: 640)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1333, file: !14, line: 3495, baseType: !1359, size: 64, align: 64, offset: 704)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1362, file: !14, line: 3402, baseType: !991, size: 32, align: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !14, line: 3403, baseType: !977, size: 64, align: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1333, file: !14, line: 3507, baseType: !977, size: 64, align: 64, offset: 768)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1333, file: !14, line: 3516, baseType: !991, size: 32, align: 32, offset: 832)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1333, file: !14, line: 3517, baseType: !1369, size: 64, align: 64, offset: 896)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1333, file: !14, line: 3527, baseType: !1371, size: 64, align: 64, offset: 960)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{!991, !1374}
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1384, !1385, !1386, !1387, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1648, !1652, !1653, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2726, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1376, file: !14, line: 1561, baseType: !971, size: 64, align: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1376, file: !14, line: 1562, baseType: !991, size: 32, align: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1376, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1376, file: !14, line: 1565, baseType: !1382, size: 64, align: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1376, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1376, file: !14, line: 1581, baseType: !1111, size: 32, align: 32, offset: 224)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1376, file: !14, line: 1583, baseType: !964, size: 64, align: 64, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1376, file: !14, line: 1591, baseType: !1388, size: 64, align: 64, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1390, line: 129, size: 1664, align: 64, elements: !1391)
!1390 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1391 = !{!1392, !1393, !1394, !1395, !1478, !1496, !1497, !1526, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1389, file: !1390, line: 136, baseType: !991, size: 32, align: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1389, file: !1390, line: 151, baseType: !991, size: 32, align: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1389, file: !1390, line: 157, baseType: !991, size: 32, align: 32, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1389, file: !1390, line: 159, baseType: !1396, size: 64, align: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1399)
!1399 = !{!1400, !1404, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1432, !1434, !1435, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1398, file: !744, line: 282, baseType: !1401, size: 512, align: 64)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 512, align: 64, elements: !1402)
!1402 = !{!1403}
!1403 = !DISubrange(count: 8)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1398, file: !744, line: 299, baseType: !1405, size: 256, align: 32, offset: 512)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 256, align: 32, elements: !1402)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1398, file: !744, line: 315, baseType: !1182, size: 64, align: 64, offset: 768)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1398, file: !744, line: 326, baseType: !991, size: 32, align: 32, offset: 832)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1398, file: !744, line: 326, baseType: !991, size: 32, align: 32, offset: 864)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1398, file: !744, line: 334, baseType: !991, size: 32, align: 32, offset: 896)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1398, file: !744, line: 341, baseType: !991, size: 32, align: 32, offset: 928)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1398, file: !744, line: 346, baseType: !991, size: 32, align: 32, offset: 960)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1398, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1398, file: !744, line: 356, baseType: !1003, size: 64, align: 32, offset: 1024)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1398, file: !744, line: 361, baseType: !997, size: 64, align: 64, offset: 1088)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1398, file: !744, line: 369, baseType: !997, size: 64, align: 64, offset: 1152)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1398, file: !744, line: 377, baseType: !997, size: 64, align: 64, offset: 1216)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1398, file: !744, line: 382, baseType: !991, size: 32, align: 32, offset: 1280)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1398, file: !744, line: 386, baseType: !991, size: 32, align: 32, offset: 1312)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1398, file: !744, line: 391, baseType: !991, size: 32, align: 32, offset: 1344)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1398, file: !744, line: 396, baseType: !964, size: 64, align: 64, offset: 1408)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1398, file: !744, line: 403, baseType: !1422, size: 512, align: 64, offset: 1472)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1355, size: 512, align: 64, elements: !1402)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1398, file: !744, line: 410, baseType: !991, size: 32, align: 32, offset: 1984)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1398, file: !744, line: 415, baseType: !991, size: 32, align: 32, offset: 2016)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1398, file: !744, line: 420, baseType: !991, size: 32, align: 32, offset: 2048)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1398, file: !744, line: 425, baseType: !991, size: 32, align: 32, offset: 2080)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1398, file: !744, line: 435, baseType: !997, size: 64, align: 64, offset: 2112)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1398, file: !744, line: 440, baseType: !991, size: 32, align: 32, offset: 2176)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1398, file: !744, line: 445, baseType: !1355, size: 64, align: 64, offset: 2240)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1398, file: !744, line: 459, baseType: !1431, size: 512, align: 64, offset: 2304)
!1431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1064, size: 512, align: 64, elements: !1402)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1398, file: !744, line: 473, baseType: !1433, size: 64, align: 64, offset: 2816)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1398, file: !744, line: 477, baseType: !991, size: 32, align: 32, offset: 2880)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1398, file: !744, line: 479, baseType: !1436, size: 64, align: 64, offset: 2944)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64, align: 64)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1439)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1449}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1439, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1439, file: !744, line: 203, baseType: !958, size: 64, align: 64, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1439, file: !744, line: 204, baseType: !991, size: 32, align: 32, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1439, file: !744, line: 205, baseType: !1445, size: 64, align: 64, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1447, line: 86, baseType: !1448)
!1447 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1447, line: 86, flags: DIFlagFwdDecl)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1439, file: !744, line: 206, baseType: !1064, size: 64, align: 64, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1398, file: !744, line: 480, baseType: !991, size: 32, align: 32, offset: 3008)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1398, file: !744, line: 505, baseType: !991, size: 32, align: 32, offset: 3040)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1398, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1398, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1398, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1398, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1398, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1398, file: !744, line: 532, baseType: !997, size: 64, align: 64, offset: 3264)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1398, file: !744, line: 539, baseType: !997, size: 64, align: 64, offset: 3328)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1398, file: !744, line: 547, baseType: !997, size: 64, align: 64, offset: 3392)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1398, file: !744, line: 554, baseType: !1445, size: 64, align: 64, offset: 3456)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1398, file: !744, line: 563, baseType: !991, size: 32, align: 32, offset: 3520)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1398, file: !744, line: 572, baseType: !991, size: 32, align: 32, offset: 3552)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1398, file: !744, line: 581, baseType: !991, size: 32, align: 32, offset: 3584)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1398, file: !744, line: 588, baseType: !1465, size: 64, align: 64, offset: 3648)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !998, line: 194, baseType: !1467)
!1467 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1398, file: !744, line: 593, baseType: !991, size: 32, align: 32, offset: 3712)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1398, file: !744, line: 596, baseType: !991, size: 32, align: 32, offset: 3744)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1398, file: !744, line: 599, baseType: !1064, size: 64, align: 64, offset: 3776)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1398, file: !744, line: 605, baseType: !1064, size: 64, align: 64, offset: 3840)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1398, file: !744, line: 616, baseType: !1064, size: 64, align: 64, offset: 3904)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1398, file: !744, line: 626, baseType: !1171, size: 64, align: 64, offset: 3968)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1398, file: !744, line: 627, baseType: !1171, size: 64, align: 64, offset: 4032)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1398, file: !744, line: 628, baseType: !1171, size: 64, align: 64, offset: 4096)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1398, file: !744, line: 629, baseType: !1171, size: 64, align: 64, offset: 4160)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1398, file: !744, line: 645, baseType: !1064, size: 64, align: 64, offset: 4224)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1389, file: !1390, line: 161, baseType: !1479, size: 64, align: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1390, line: 117, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1390, line: 100, size: 832, align: 64, elements: !1482)
!1482 = !{!1483, !1487, !1488, !1489, !1490, !1491, !1493, !1494, !1495}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1481, file: !1390, line: 105, baseType: !1484, size: 256, align: 64)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 256, align: 64, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 4)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1481, file: !1390, line: 110, baseType: !991, size: 32, align: 32, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1481, file: !1390, line: 111, baseType: !991, size: 32, align: 32, offset: 288)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1481, file: !1390, line: 111, baseType: !991, size: 32, align: 32, offset: 320)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1481, file: !1390, line: 112, baseType: !1405, size: 256, align: 32, offset: 352)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1481, file: !1390, line: 113, baseType: !1492, size: 128, align: 32, offset: 608)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, align: 32, elements: !1485)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1481, file: !1390, line: 114, baseType: !991, size: 32, align: 32, offset: 736)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1481, file: !1390, line: 115, baseType: !991, size: 32, align: 32, offset: 768)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1481, file: !1390, line: 116, baseType: !991, size: 32, align: 32, offset: 800)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1389, file: !1390, line: 163, baseType: !964, size: 64, align: 64, offset: 256)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1389, file: !1390, line: 165, baseType: !1498, size: 128, align: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1390, line: 122, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1390, line: 119, size: 128, align: 64, elements: !1500)
!1500 = !{!1501, !1525}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1499, file: !1390, line: 120, baseType: !1502, size: 64, align: 64)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64, align: 64)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1521, !1522, !1523, !1524}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1504, file: !14, line: 1451, baseType: !1064, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1504, file: !14, line: 1461, baseType: !997, size: 64, align: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1504, file: !14, line: 1467, baseType: !997, size: 64, align: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1504, file: !14, line: 1468, baseType: !958, size: 64, align: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1504, file: !14, line: 1469, baseType: !991, size: 32, align: 32, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1504, file: !14, line: 1470, baseType: !991, size: 32, align: 32, offset: 288)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1504, file: !14, line: 1474, baseType: !991, size: 32, align: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1504, file: !14, line: 1479, baseType: !1514, size: 64, align: 64, offset: 384)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64, align: 64)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1517)
!1517 = !{!1518, !1519, !1520}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1516, file: !14, line: 1412, baseType: !958, size: 64, align: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1516, file: !14, line: 1413, baseType: !991, size: 32, align: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1516, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1504, file: !14, line: 1480, baseType: !991, size: 32, align: 32, offset: 448)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1504, file: !14, line: 1486, baseType: !997, size: 64, align: 64, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1504, file: !14, line: 1488, baseType: !997, size: 64, align: 64, offset: 576)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1504, file: !14, line: 1497, baseType: !997, size: 64, align: 64, offset: 640)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1499, file: !1390, line: 121, baseType: !1396, size: 64, align: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1389, file: !1390, line: 166, baseType: !1527, size: 128, align: 64, offset: 448)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1390, line: 127, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1390, line: 124, size: 128, align: 64, elements: !1529)
!1529 = !{!1530, !1602}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1528, file: !1390, line: 125, baseType: !1531, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1535)
!1535 = !{!1536, !1537, !1560, !1564, !1565, !1599, !1600, !1601}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1534, file: !14, line: 5751, baseType: !971, size: 64, align: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1534, file: !14, line: 5756, baseType: !1538, size: 64, align: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1541)
!1541 = !{!1542, !1543, !1545, !1546, !1547, !1551, !1555, !1559}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1540, file: !14, line: 5797, baseType: !977, size: 64, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1540, file: !14, line: 5804, baseType: !1544, size: 64, align: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1540, file: !14, line: 5815, baseType: !971, size: 64, align: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1540, file: !14, line: 5825, baseType: !991, size: 32, align: 32, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1540, file: !14, line: 5826, baseType: !1548, size: 64, align: 64, offset: 256)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!991, !1532}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1540, file: !14, line: 5827, baseType: !1552, size: 64, align: 64, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!991, !1532, !1502}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1540, file: !14, line: 5828, baseType: !1556, size: 64, align: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{null, !1532}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1540, file: !14, line: 5829, baseType: !1556, size: 64, align: 64, offset: 448)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1534, file: !14, line: 5762, baseType: !1561, size: 64, align: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64, align: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1563)
!1563 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1534, file: !14, line: 5768, baseType: !964, size: 64, align: 64, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1534, file: !14, line: 5775, baseType: !1566, size: 64, align: 64, offset: 256)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1568, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1568, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1568, file: !14, line: 3948, baseType: !1118, size: 32, align: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1568, file: !14, line: 3958, baseType: !958, size: 64, align: 64, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1568, file: !14, line: 3962, baseType: !991, size: 32, align: 32, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1568, file: !14, line: 3968, baseType: !991, size: 32, align: 32, offset: 224)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1568, file: !14, line: 3973, baseType: !997, size: 64, align: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1568, file: !14, line: 3986, baseType: !991, size: 32, align: 32, offset: 320)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1568, file: !14, line: 3999, baseType: !991, size: 32, align: 32, offset: 352)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1568, file: !14, line: 4004, baseType: !991, size: 32, align: 32, offset: 384)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1568, file: !14, line: 4005, baseType: !991, size: 32, align: 32, offset: 416)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1568, file: !14, line: 4010, baseType: !991, size: 32, align: 32, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1568, file: !14, line: 4011, baseType: !991, size: 32, align: 32, offset: 480)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1568, file: !14, line: 4020, baseType: !1003, size: 64, align: 32, offset: 512)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1568, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1568, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1568, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1568, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1568, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1568, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1568, file: !14, line: 4039, baseType: !991, size: 32, align: 32, offset: 768)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1568, file: !14, line: 4046, baseType: !1355, size: 64, align: 64, offset: 832)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1568, file: !14, line: 4050, baseType: !991, size: 32, align: 32, offset: 896)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1568, file: !14, line: 4054, baseType: !991, size: 32, align: 32, offset: 928)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1568, file: !14, line: 4061, baseType: !991, size: 32, align: 32, offset: 960)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1568, file: !14, line: 4065, baseType: !991, size: 32, align: 32, offset: 992)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1568, file: !14, line: 4073, baseType: !991, size: 32, align: 32, offset: 1024)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1568, file: !14, line: 4080, baseType: !991, size: 32, align: 32, offset: 1056)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1568, file: !14, line: 4084, baseType: !991, size: 32, align: 32, offset: 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1534, file: !14, line: 5781, baseType: !1566, size: 64, align: 64, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1534, file: !14, line: 5787, baseType: !1003, size: 64, align: 32, offset: 384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1534, file: !14, line: 5793, baseType: !1003, size: 64, align: 32, offset: 448)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1528, file: !1390, line: 126, baseType: !991, size: 32, align: 32, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1389, file: !1390, line: 172, baseType: !1502, size: 64, align: 64, offset: 576)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1389, file: !1390, line: 177, baseType: !958, size: 64, align: 64, offset: 640)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1389, file: !1390, line: 178, baseType: !1111, size: 32, align: 32, offset: 704)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1389, file: !1390, line: 180, baseType: !964, size: 64, align: 64, offset: 768)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1389, file: !1390, line: 185, baseType: !991, size: 32, align: 32, offset: 832)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1389, file: !1390, line: 190, baseType: !964, size: 64, align: 64, offset: 896)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1389, file: !1390, line: 195, baseType: !991, size: 32, align: 32, offset: 960)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1389, file: !1390, line: 200, baseType: !1502, size: 64, align: 64, offset: 1024)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1389, file: !1390, line: 201, baseType: !991, size: 32, align: 32, offset: 1088)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1389, file: !1390, line: 202, baseType: !1396, size: 64, align: 64, offset: 1152)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1389, file: !1390, line: 203, baseType: !991, size: 32, align: 32, offset: 1216)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1389, file: !1390, line: 205, baseType: !991, size: 32, align: 32, offset: 1248)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1389, file: !1390, line: 206, baseType: !991, size: 32, align: 32, offset: 1280)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1389, file: !1390, line: 209, baseType: !1171, size: 64, align: 64, offset: 1344)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1389, file: !1390, line: 212, baseType: !1171, size: 64, align: 64, offset: 1408)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1389, file: !1390, line: 213, baseType: !1396, size: 64, align: 64, offset: 1472)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1389, file: !1390, line: 215, baseType: !991, size: 32, align: 32, offset: 1536)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1389, file: !1390, line: 217, baseType: !991, size: 32, align: 32, offset: 1568)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1389, file: !1390, line: 220, baseType: !991, size: 32, align: 32, offset: 1600)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1376, file: !14, line: 1598, baseType: !964, size: 64, align: 64, offset: 384)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1376, file: !14, line: 1606, baseType: !997, size: 64, align: 64, offset: 448)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1376, file: !14, line: 1614, baseType: !991, size: 32, align: 32, offset: 512)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1376, file: !14, line: 1622, baseType: !991, size: 32, align: 32, offset: 544)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1376, file: !14, line: 1628, baseType: !991, size: 32, align: 32, offset: 576)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1376, file: !14, line: 1636, baseType: !991, size: 32, align: 32, offset: 608)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1376, file: !14, line: 1643, baseType: !991, size: 32, align: 32, offset: 640)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1376, file: !14, line: 1657, baseType: !958, size: 64, align: 64, offset: 704)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1376, file: !14, line: 1658, baseType: !991, size: 32, align: 32, offset: 768)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1376, file: !14, line: 1679, baseType: !1003, size: 64, align: 32, offset: 800)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1376, file: !14, line: 1688, baseType: !991, size: 32, align: 32, offset: 864)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1376, file: !14, line: 1712, baseType: !991, size: 32, align: 32, offset: 896)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1376, file: !14, line: 1729, baseType: !991, size: 32, align: 32, offset: 928)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1376, file: !14, line: 1729, baseType: !991, size: 32, align: 32, offset: 960)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1376, file: !14, line: 1744, baseType: !991, size: 32, align: 32, offset: 992)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1376, file: !14, line: 1744, baseType: !991, size: 32, align: 32, offset: 1024)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1376, file: !14, line: 1751, baseType: !991, size: 32, align: 32, offset: 1056)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1376, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1376, file: !14, line: 1791, baseType: !1641, size: 64, align: 64, offset: 1152)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !1644, !1645, !1647, !991, !991, !991}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1376, file: !14, line: 1808, baseType: !1649, size: 64, align: 64, offset: 1216)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!473, !1644, !1344}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1376, file: !14, line: 1816, baseType: !991, size: 32, align: 32, offset: 1280)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1376, file: !14, line: 1825, baseType: !1654, size: 32, align: 32, offset: 1312)
!1654 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1376, file: !14, line: 1830, baseType: !991, size: 32, align: 32, offset: 1344)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1376, file: !14, line: 1838, baseType: !1654, size: 32, align: 32, offset: 1376)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1376, file: !14, line: 1846, baseType: !991, size: 32, align: 32, offset: 1408)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1376, file: !14, line: 1851, baseType: !991, size: 32, align: 32, offset: 1440)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1376, file: !14, line: 1861, baseType: !1654, size: 32, align: 32, offset: 1472)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1376, file: !14, line: 1868, baseType: !1654, size: 32, align: 32, offset: 1504)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1376, file: !14, line: 1875, baseType: !1654, size: 32, align: 32, offset: 1536)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1376, file: !14, line: 1882, baseType: !1654, size: 32, align: 32, offset: 1568)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1376, file: !14, line: 1889, baseType: !1654, size: 32, align: 32, offset: 1600)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1376, file: !14, line: 1896, baseType: !1654, size: 32, align: 32, offset: 1632)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1376, file: !14, line: 1903, baseType: !1654, size: 32, align: 32, offset: 1664)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1376, file: !14, line: 1910, baseType: !991, size: 32, align: 32, offset: 1696)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1376, file: !14, line: 1915, baseType: !991, size: 32, align: 32, offset: 1728)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1376, file: !14, line: 1926, baseType: !1647, size: 64, align: 64, offset: 1792)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1376, file: !14, line: 1935, baseType: !1003, size: 64, align: 32, offset: 1856)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1376, file: !14, line: 1942, baseType: !991, size: 32, align: 32, offset: 1920)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1376, file: !14, line: 1948, baseType: !991, size: 32, align: 32, offset: 1952)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1376, file: !14, line: 1954, baseType: !991, size: 32, align: 32, offset: 1984)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1376, file: !14, line: 1960, baseType: !991, size: 32, align: 32, offset: 2016)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1376, file: !14, line: 1984, baseType: !991, size: 32, align: 32, offset: 2048)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1376, file: !14, line: 1991, baseType: !991, size: 32, align: 32, offset: 2080)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1376, file: !14, line: 1996, baseType: !991, size: 32, align: 32, offset: 2112)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1376, file: !14, line: 2004, baseType: !991, size: 32, align: 32, offset: 2144)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1376, file: !14, line: 2011, baseType: !991, size: 32, align: 32, offset: 2176)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1376, file: !14, line: 2018, baseType: !991, size: 32, align: 32, offset: 2208)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1376, file: !14, line: 2027, baseType: !991, size: 32, align: 32, offset: 2240)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1376, file: !14, line: 2034, baseType: !991, size: 32, align: 32, offset: 2272)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1376, file: !14, line: 2044, baseType: !991, size: 32, align: 32, offset: 2304)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1376, file: !14, line: 2054, baseType: !965, size: 64, align: 64, offset: 2368)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1376, file: !14, line: 2061, baseType: !965, size: 64, align: 64, offset: 2432)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1376, file: !14, line: 2066, baseType: !991, size: 32, align: 32, offset: 2496)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1376, file: !14, line: 2070, baseType: !991, size: 32, align: 32, offset: 2528)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1376, file: !14, line: 2078, baseType: !991, size: 32, align: 32, offset: 2560)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1376, file: !14, line: 2085, baseType: !991, size: 32, align: 32, offset: 2592)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1376, file: !14, line: 2092, baseType: !991, size: 32, align: 32, offset: 2624)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1376, file: !14, line: 2099, baseType: !991, size: 32, align: 32, offset: 2656)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1376, file: !14, line: 2106, baseType: !991, size: 32, align: 32, offset: 2688)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1376, file: !14, line: 2113, baseType: !991, size: 32, align: 32, offset: 2720)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1376, file: !14, line: 2120, baseType: !991, size: 32, align: 32, offset: 2752)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1376, file: !14, line: 2125, baseType: !991, size: 32, align: 32, offset: 2784)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1376, file: !14, line: 2133, baseType: !991, size: 32, align: 32, offset: 2816)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1376, file: !14, line: 2140, baseType: !991, size: 32, align: 32, offset: 2848)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1376, file: !14, line: 2145, baseType: !991, size: 32, align: 32, offset: 2880)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1376, file: !14, line: 2153, baseType: !991, size: 32, align: 32, offset: 2912)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1376, file: !14, line: 2158, baseType: !991, size: 32, align: 32, offset: 2944)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1376, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1376, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1376, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1376, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1376, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1376, file: !14, line: 2203, baseType: !991, size: 32, align: 32, offset: 3136)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1376, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1376, file: !14, line: 2212, baseType: !991, size: 32, align: 32, offset: 3200)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1376, file: !14, line: 2213, baseType: !991, size: 32, align: 32, offset: 3232)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1376, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1376, file: !14, line: 2232, baseType: !991, size: 32, align: 32, offset: 3296)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1376, file: !14, line: 2243, baseType: !991, size: 32, align: 32, offset: 3328)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1376, file: !14, line: 2249, baseType: !991, size: 32, align: 32, offset: 3360)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1376, file: !14, line: 2256, baseType: !991, size: 32, align: 32, offset: 3392)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1376, file: !14, line: 2263, baseType: !1355, size: 64, align: 64, offset: 3456)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1376, file: !14, line: 2270, baseType: !1355, size: 64, align: 64, offset: 3520)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1376, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1376, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1376, file: !14, line: 2367, baseType: !1719, size: 64, align: 64, offset: 3648)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64, align: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!991, !1644, !1396, !991}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1376, file: !14, line: 2383, baseType: !991, size: 32, align: 32, offset: 3712)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1376, file: !14, line: 2386, baseType: !1654, size: 32, align: 32, offset: 3744)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1376, file: !14, line: 2387, baseType: !1654, size: 32, align: 32, offset: 3776)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1376, file: !14, line: 2394, baseType: !991, size: 32, align: 32, offset: 3808)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1376, file: !14, line: 2401, baseType: !991, size: 32, align: 32, offset: 3840)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1376, file: !14, line: 2408, baseType: !991, size: 32, align: 32, offset: 3872)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1376, file: !14, line: 2415, baseType: !991, size: 32, align: 32, offset: 3904)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1376, file: !14, line: 2422, baseType: !991, size: 32, align: 32, offset: 3936)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1376, file: !14, line: 2423, baseType: !1731, size: 64, align: 64, offset: 3968)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1733, file: !14, line: 827, baseType: !991, size: 32, align: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1733, file: !14, line: 828, baseType: !991, size: 32, align: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1733, file: !14, line: 829, baseType: !991, size: 32, align: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1733, file: !14, line: 830, baseType: !1654, size: 32, align: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1376, file: !14, line: 2430, baseType: !997, size: 64, align: 64, offset: 4032)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1376, file: !14, line: 2437, baseType: !997, size: 64, align: 64, offset: 4096)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1376, file: !14, line: 2444, baseType: !1654, size: 32, align: 32, offset: 4160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1376, file: !14, line: 2451, baseType: !1654, size: 32, align: 32, offset: 4192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1376, file: !14, line: 2458, baseType: !991, size: 32, align: 32, offset: 4224)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1376, file: !14, line: 2469, baseType: !991, size: 32, align: 32, offset: 4256)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1376, file: !14, line: 2475, baseType: !991, size: 32, align: 32, offset: 4288)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1376, file: !14, line: 2481, baseType: !991, size: 32, align: 32, offset: 4320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1376, file: !14, line: 2485, baseType: !991, size: 32, align: 32, offset: 4352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1376, file: !14, line: 2489, baseType: !991, size: 32, align: 32, offset: 4384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1376, file: !14, line: 2493, baseType: !991, size: 32, align: 32, offset: 4416)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1376, file: !14, line: 2501, baseType: !991, size: 32, align: 32, offset: 4448)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1376, file: !14, line: 2506, baseType: !991, size: 32, align: 32, offset: 4480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1376, file: !14, line: 2510, baseType: !991, size: 32, align: 32, offset: 4512)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1376, file: !14, line: 2514, baseType: !997, size: 64, align: 64, offset: 4544)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1376, file: !14, line: 2528, baseType: !1755, size: 64, align: 64, offset: 4608)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !1644, !964, !991, !991}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1376, file: !14, line: 2534, baseType: !991, size: 32, align: 32, offset: 4672)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1376, file: !14, line: 2545, baseType: !991, size: 32, align: 32, offset: 4704)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1376, file: !14, line: 2547, baseType: !991, size: 32, align: 32, offset: 4736)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1376, file: !14, line: 2549, baseType: !991, size: 32, align: 32, offset: 4768)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1376, file: !14, line: 2551, baseType: !991, size: 32, align: 32, offset: 4800)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !14, line: 2553, baseType: !991, size: 32, align: 32, offset: 4832)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1376, file: !14, line: 2555, baseType: !991, size: 32, align: 32, offset: 4864)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1376, file: !14, line: 2557, baseType: !991, size: 32, align: 32, offset: 4896)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1376, file: !14, line: 2559, baseType: !991, size: 32, align: 32, offset: 4928)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1376, file: !14, line: 2563, baseType: !991, size: 32, align: 32, offset: 4960)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1376, file: !14, line: 2571, baseType: !968, size: 64, align: 64, offset: 4992)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1376, file: !14, line: 2579, baseType: !968, size: 64, align: 64, offset: 5056)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1376, file: !14, line: 2586, baseType: !991, size: 32, align: 32, offset: 5120)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1376, file: !14, line: 2615, baseType: !991, size: 32, align: 32, offset: 5152)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1376, file: !14, line: 2627, baseType: !991, size: 32, align: 32, offset: 5184)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1376, file: !14, line: 2637, baseType: !991, size: 32, align: 32, offset: 5216)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1376, file: !14, line: 2681, baseType: !991, size: 32, align: 32, offset: 5248)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1376, file: !14, line: 2709, baseType: !997, size: 64, align: 64, offset: 5312)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1376, file: !14, line: 2716, baseType: !1777, size: 64, align: 64, offset: 5376)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1780)
!1780 = !{!1781, !1782, !1783, !1784, !1785, !1786, !1790, !1796, !1800, !1801, !1802, !1803, !2699, !2700, !2701, !2702, !2703}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1779, file: !14, line: 3642, baseType: !977, size: 64, align: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1779, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1779, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1779, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1779, file: !14, line: 3669, baseType: !991, size: 32, align: 32, offset: 160)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1779, file: !14, line: 3682, baseType: !1787, size: 64, align: 64, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!991, !1374, !1396}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1779, file: !14, line: 3698, baseType: !1791, size: 64, align: 64, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!991, !1374, !1794, !1118}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1779, file: !14, line: 3712, baseType: !1797, size: 64, align: 64, offset: 320)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!991, !1374, !991, !1794, !1118}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1779, file: !14, line: 3726, baseType: !1791, size: 64, align: 64, offset: 384)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1779, file: !14, line: 3737, baseType: !1371, size: 64, align: 64, offset: 448)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1779, file: !14, line: 3746, baseType: !991, size: 32, align: 32, offset: 512)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1779, file: !14, line: 3757, baseType: !1804, size: 64, align: 64, offset: 576)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64, align: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{null, !1807}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64, align: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !1809, line: 81, size: 86208, align: 64, elements: !1810)
!1809 = !DIFile(filename: "libavcodec/mpegvideo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1810 = !{!1811, !1813, !1814, !1815, !1816, !1819, !1820, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1867, !1868, !1921, !1923, !1924, !1925, !1926, !1927, !1938, !1939, !1940, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1954, !1956, !1958, !1959, !1960, !1961, !1962, !1963, !1968, !1970, !1971, !1972, !1973, !1974, !1975, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !2002, !2003, !2004, !2005, !2021, !2028, !2040, !2056, !2078, !2118, !2131, !2158, !2173, !2187, !2200, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2221, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2234, !2236, !2237, !2238, !2239, !2240, !2241, !2244, !2246, !2248, !2249, !2252, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2319, !2320, !2322, !2323, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2345, !2346, !2347, !2350, !2351, !2352, !2353, !2355, !2357, !2358, !2359, !2360, !2361, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2443, !2444, !2445, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2574, !2575, !2576, !2577, !2581, !2582, !2586, !2590, !2594, !2595, !2600, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2615, !2616, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2634, !2635, !2636, !2686, !2687, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1808, file: !1809, line: 82, baseType: !1812, size: 64, align: 64)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64, align: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale", scope: !1808, file: !1809, line: 84, baseType: !991, size: 32, align: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale", scope: !1808, file: !1809, line: 84, baseType: !991, size: 32, align: 32, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "ac_pred", scope: !1808, file: !1809, line: 85, baseType: !991, size: 32, align: 32, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !1808, file: !1809, line: 86, baseType: !1817, size: 384, align: 32, offset: 160)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 384, align: 32, elements: !1818)
!1818 = !{!1134}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic", scope: !1808, file: !1809, line: 87, baseType: !991, size: 32, align: 32, offset: 544)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scantable", scope: !1808, file: !1809, line: 90, baseType: !1821, size: 1088, align: 64, offset: 576)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !902, line: 35, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !902, line: 31, size: 1088, align: 64, elements: !1823)
!1823 = !{!1824, !1825, !1829}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1822, file: !902, line: 32, baseType: !1794, size: 64, align: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !1822, file: !902, line: 33, baseType: !1826, size: 512, align: 8, offset: 64)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 512, align: 8, elements: !1827)
!1827 = !{!1828}
!1828 = !DISubrange(count: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !1822, file: !902, line: 34, baseType: !1826, size: 512, align: 8, offset: 576)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "intra_scantable", scope: !1808, file: !1809, line: 91, baseType: !1821, size: 1088, align: 64, offset: 1664)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "intra_h_scantable", scope: !1808, file: !1809, line: 92, baseType: !1821, size: 1088, align: 64, offset: 2752)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "intra_v_scantable", scope: !1808, file: !1809, line: 93, baseType: !1821, size: 1088, align: 64, offset: 3840)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1808, file: !1809, line: 98, baseType: !1644, size: 64, align: 64, offset: 4928)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1808, file: !1809, line: 100, baseType: !991, size: 32, align: 32, offset: 4992)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1808, file: !1809, line: 100, baseType: !991, size: 32, align: 32, offset: 5024)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1808, file: !1809, line: 101, baseType: !991, size: 32, align: 32, offset: 5056)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !1808, file: !1809, line: 102, baseType: !991, size: 32, align: 32, offset: 5088)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1808, file: !1809, line: 103, baseType: !997, size: 64, align: 64, offset: 5120)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "out_format", scope: !1808, file: !1809, line: 104, baseType: !894, size: 32, align: 32, offset: 5184)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "h263_pred", scope: !1808, file: !1809, line: 105, baseType: !991, size: 32, align: 32, offset: 5216)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pb_frame", scope: !1808, file: !1809, line: 106, baseType: !991, size: 32, align: 32, offset: 5248)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "h263_plus", scope: !1808, file: !1809, line: 109, baseType: !991, size: 32, align: 32, offset: 5280)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "h263_flv", scope: !1808, file: !1809, line: 110, baseType: !991, size: 32, align: 32, offset: 5312)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1808, file: !1809, line: 112, baseType: !13, size: 32, align: 32, offset: 5344)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_qscale", scope: !1808, file: !1809, line: 113, baseType: !991, size: 32, align: 32, offset: 5376)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1808, file: !1809, line: 114, baseType: !991, size: 32, align: 32, offset: 5408)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1808, file: !1809, line: 115, baseType: !991, size: 32, align: 32, offset: 5440)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "luma_elim_threshold", scope: !1808, file: !1809, line: 116, baseType: !991, size: 32, align: 32, offset: 5472)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_elim_threshold", scope: !1808, file: !1809, line: 117, baseType: !991, size: 32, align: 32, offset: 5504)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1808, file: !1809, line: 118, baseType: !991, size: 32, align: 32, offset: 5536)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1808, file: !1809, line: 119, baseType: !991, size: 32, align: 32, offset: 5568)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1808, file: !1809, line: 120, baseType: !991, size: 32, align: 32, offset: 5600)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "context_initialized", scope: !1808, file: !1809, line: 124, baseType: !991, size: 32, align: 32, offset: 5632)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture_number", scope: !1808, file: !1809, line: 125, baseType: !991, size: 32, align: 32, offset: 5664)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1808, file: !1809, line: 126, baseType: !991, size: 32, align: 32, offset: 5696)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !1808, file: !1809, line: 127, baseType: !991, size: 32, align: 32, offset: 5728)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "picture_in_gop_number", scope: !1808, file: !1809, line: 128, baseType: !991, size: 32, align: 32, offset: 5760)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !1808, file: !1809, line: 129, baseType: !991, size: 32, align: 32, offset: 5792)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !1808, file: !1809, line: 129, baseType: !991, size: 32, align: 32, offset: 5824)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !1808, file: !1809, line: 130, baseType: !991, size: 32, align: 32, offset: 5856)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !1808, file: !1809, line: 131, baseType: !991, size: 32, align: 32, offset: 5888)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "h_edge_pos", scope: !1808, file: !1809, line: 132, baseType: !991, size: 32, align: 32, offset: 5920)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "v_edge_pos", scope: !1808, file: !1809, line: 132, baseType: !991, size: 32, align: 32, offset: 5952)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !1808, file: !1809, line: 133, baseType: !991, size: 32, align: 32, offset: 5984)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1808, file: !1809, line: 134, baseType: !1866, size: 64, align: 64, offset: 6016)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1172, line: 149, baseType: !963)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "uvlinesize", scope: !1808, file: !1809, line: 135, baseType: !1866, size: 64, align: 64, offset: 6080)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1808, file: !1809, line: 136, baseType: !1869, size: 64, align: 64, offset: 6144)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "Picture", file: !1871, line: 91, baseType: !1872)
!1871 = !DIFile(filename: "libavcodec/mpegpicture.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Picture", file: !1871, line: 45, size: 2624, align: 64, elements: !1873)
!1873 = !{!1874, !1876, !1886, !1887, !1888, !1890, !1895, !1896, !1898, !1899, !1900, !1901, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1872, file: !1871, line: 46, baseType: !1875, size: 64, align: 64)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64, align: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1872, file: !1871, line: 47, baseType: !1877, size: 256, align: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1878, line: 40, baseType: !1879)
!1878 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1878, line: 34, size: 256, align: 64, elements: !1880)
!1880 = !{!1881, !1882, !1885}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1879, file: !1878, line: 35, baseType: !1396, size: 64, align: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1879, file: !1878, line: 36, baseType: !1883, size: 128, align: 64, offset: 64)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 128, align: 64, elements: !1884)
!1884 = !{!1135}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1879, file: !1878, line: 39, baseType: !1064, size: 64, align: 64, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table_buf", scope: !1872, file: !1871, line: 49, baseType: !1064, size: 64, align: 64, offset: 320)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1872, file: !1871, line: 50, baseType: !1465, size: 64, align: 64, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !1872, file: !1871, line: 52, baseType: !1889, size: 128, align: 64, offset: 448)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1064, size: 128, align: 64, elements: !1884)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1872, file: !1871, line: 53, baseType: !1891, size: 128, align: 64, offset: 576)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 128, align: 64, elements: !1884)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64, align: 64)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 32, align: 16, elements: !1884)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !998, line: 195, baseType: !1150)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !1872, file: !1871, line: 55, baseType: !1064, size: 64, align: 64, offset: 704)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1872, file: !1871, line: 56, baseType: !1897, size: 64, align: 64, offset: 768)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64, align: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table_buf", scope: !1872, file: !1871, line: 58, baseType: !1064, size: 64, align: 64, offset: 832)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1872, file: !1871, line: 59, baseType: !958, size: 64, align: 64, offset: 896)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !1872, file: !1871, line: 61, baseType: !1889, size: 128, align: 64, offset: 960)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !1872, file: !1871, line: 62, baseType: !1902, size: 128, align: 64, offset: 1088)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 128, align: 64, elements: !1884)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_buf", scope: !1872, file: !1871, line: 64, baseType: !1064, size: 64, align: 64, offset: 1216)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var", scope: !1872, file: !1871, line: 65, baseType: !965, size: 64, align: 64, offset: 1280)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_buf", scope: !1872, file: !1871, line: 67, baseType: !1064, size: 64, align: 64, offset: 1344)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var", scope: !1872, file: !1871, line: 68, baseType: !965, size: 64, align: 64, offset: 1408)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_width", scope: !1872, file: !1871, line: 70, baseType: !991, size: 32, align: 32, offset: 1472)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_height", scope: !1872, file: !1871, line: 71, baseType: !991, size: 32, align: 32, offset: 1504)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean_buf", scope: !1872, file: !1871, line: 73, baseType: !1064, size: 64, align: 64, offset: 1536)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean", scope: !1872, file: !1871, line: 74, baseType: !958, size: 64, align: 64, offset: 1600)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !1872, file: !1871, line: 76, baseType: !1064, size: 64, align: 64, offset: 1664)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !1872, file: !1871, line: 77, baseType: !964, size: 64, align: 64, offset: 1728)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !1872, file: !1871, line: 79, baseType: !991, size: 32, align: 32, offset: 1792)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !1872, file: !1871, line: 81, baseType: !997, size: 64, align: 64, offset: 1856)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !1872, file: !1871, line: 82, baseType: !997, size: 64, align: 64, offset: 1920)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_score", scope: !1872, file: !1871, line: 84, baseType: !991, size: 32, align: 32, offset: 1984)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "needs_realloc", scope: !1872, file: !1871, line: 85, baseType: !991, size: 32, align: 32, offset: 2016)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1872, file: !1871, line: 87, baseType: !991, size: 32, align: 32, offset: 2048)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1872, file: !1871, line: 88, baseType: !991, size: 32, align: 32, offset: 2080)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_error", scope: !1872, file: !1871, line: 90, baseType: !1422, size: 512, align: 64, offset: 2112)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture", scope: !1808, file: !1809, line: 137, baseType: !1922, size: 64, align: 64, offset: 6208)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_input_picture", scope: !1808, file: !1809, line: 138, baseType: !1922, size: 64, align: 64, offset: 6272)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "user_specified_pts", scope: !1808, file: !1809, line: 140, baseType: !997, size: 64, align: 64, offset: 6336)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "dts_delta", scope: !1808, file: !1809, line: 144, baseType: !997, size: 64, align: 64, offset: 6400)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_pts", scope: !1808, file: !1809, line: 148, baseType: !997, size: 64, align: 64, offset: 6464)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1808, file: !1809, line: 151, baseType: !1928, size: 320, align: 64, offset: 6528)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1929, line: 40, baseType: !1930)
!1929 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1929, line: 35, size: 320, align: 64, elements: !1931)
!1931 = !{!1932, !1933, !1934, !1935, !1936, !1937}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1930, file: !1929, line: 36, baseType: !1118, size: 32, align: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1930, file: !1929, line: 37, baseType: !991, size: 32, align: 32, offset: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1930, file: !1929, line: 38, baseType: !958, size: 64, align: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1930, file: !1929, line: 38, baseType: !958, size: 64, align: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1930, file: !1929, line: 38, baseType: !958, size: 64, align: 64, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1930, file: !1929, line: 39, baseType: !991, size: 32, align: 32, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "start_mb_y", scope: !1808, file: !1809, line: 153, baseType: !991, size: 32, align: 32, offset: 6848)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "end_mb_y", scope: !1808, file: !1809, line: 154, baseType: !991, size: 32, align: 32, offset: 6880)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "thread_context", scope: !1808, file: !1809, line: 155, baseType: !1941, size: 2048, align: 64, offset: 6912)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 2048, align: 64, elements: !1124)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "slice_context_count", scope: !1808, file: !1809, line: 156, baseType: !991, size: 32, align: 32, offset: 8960)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture", scope: !1808, file: !1809, line: 162, baseType: !1870, size: 2624, align: 64, offset: 9024)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture", scope: !1808, file: !1809, line: 168, baseType: !1870, size: 2624, align: 64, offset: 11648)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "new_picture", scope: !1808, file: !1809, line: 174, baseType: !1870, size: 2624, align: 64, offset: 14272)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture", scope: !1808, file: !1809, line: 180, baseType: !1870, size: 2624, align: 64, offset: 16896)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_ptr", scope: !1808, file: !1809, line: 182, baseType: !1869, size: 64, align: 64, offset: 19520)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture_ptr", scope: !1808, file: !1809, line: 183, baseType: !1869, size: 64, align: 64, offset: 19584)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture_ptr", scope: !1808, file: !1809, line: 184, baseType: !1869, size: 64, align: 64, offset: 19648)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "last_dc", scope: !1808, file: !1809, line: 185, baseType: !1951, size: 96, align: 32, offset: 19712)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 96, align: 32, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 3)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val_base", scope: !1808, file: !1809, line: 186, baseType: !1955, size: 64, align: 64, offset: 19840)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64, align: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !1808, file: !1809, line: 187, baseType: !1957, size: 192, align: 64, offset: 19904)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 192, align: 64, elements: !1952)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale_table", scope: !1808, file: !1809, line: 188, baseType: !1794, size: 64, align: 64, offset: 20096)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale_table", scope: !1808, file: !1809, line: 189, baseType: !1794, size: 64, align: 64, offset: 20160)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale_table", scope: !1808, file: !1809, line: 190, baseType: !1794, size: 64, align: 64, offset: 20224)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block_base", scope: !1808, file: !1809, line: 191, baseType: !958, size: 64, align: 64, offset: 20288)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block", scope: !1808, file: !1809, line: 192, baseType: !958, size: 64, align: 64, offset: 20352)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val_base", scope: !1808, file: !1809, line: 193, baseType: !1964, size: 64, align: 64, offset: 20416)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 256, align: 16, elements: !1966)
!1966 = !{!1967}
!1967 = !DISubrange(count: 16)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val", scope: !1808, file: !1809, line: 194, baseType: !1969, size: 192, align: 64, offset: 20480)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 192, align: 64, elements: !1952)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skipped", scope: !1808, file: !1809, line: 195, baseType: !991, size: 32, align: 32, offset: 20672)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1808, file: !1809, line: 196, baseType: !958, size: 64, align: 64, offset: 20736)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !1808, file: !1809, line: 198, baseType: !958, size: 64, align: 64, offset: 20800)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "cbp_table", scope: !1808, file: !1809, line: 199, baseType: !958, size: 64, align: 64, offset: 20864)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pred_dir_table", scope: !1808, file: !1809, line: 200, baseType: !958, size: 64, align: 64, offset: 20928)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !1808, file: !1809, line: 202, baseType: !1976, size: 256, align: 64, offset: 20992)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScratchpadContext", file: !1871, line: 40, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScratchpadContext", file: !1871, line: 35, size: 256, align: 64, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1977, file: !1871, line: 36, baseType: !958, size: 64, align: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "rd_scratchpad", scope: !1977, file: !1871, line: 37, baseType: !958, size: 64, align: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "obmc_scratchpad", scope: !1977, file: !1871, line: 38, baseType: !958, size: 64, align: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "b_scratchpad", scope: !1977, file: !1871, line: 39, baseType: !958, size: 64, align: 64, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1808, file: !1809, line: 204, baseType: !991, size: 32, align: 32, offset: 21248)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale", scope: !1808, file: !1809, line: 205, baseType: !991, size: 32, align: 32, offset: 21280)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !1808, file: !1809, line: 206, baseType: !1111, size: 32, align: 32, offset: 21312)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "lambda2", scope: !1808, file: !1809, line: 207, baseType: !1111, size: 32, align: 32, offset: 21344)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_table", scope: !1808, file: !1809, line: 208, baseType: !1647, size: 64, align: 64, offset: 21376)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_quant", scope: !1808, file: !1809, line: 209, baseType: !991, size: 32, align: 32, offset: 21440)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !1808, file: !1809, line: 210, baseType: !991, size: 32, align: 32, offset: 21472)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "closed_gop", scope: !1808, file: !1809, line: 211, baseType: !991, size: 32, align: 32, offset: 21504)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1808, file: !1809, line: 212, baseType: !991, size: 32, align: 32, offset: 21536)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1808, file: !1809, line: 213, baseType: !991, size: 32, align: 32, offset: 21568)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "last_pict_type", scope: !1808, file: !1809, line: 214, baseType: !991, size: 32, align: 32, offset: 21600)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !1808, file: !1809, line: 215, baseType: !991, size: 32, align: 32, offset: 21632)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "droppable", scope: !1808, file: !1809, line: 216, baseType: !991, size: 32, align: 32, offset: 21664)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate_index", scope: !1808, file: !1809, line: 217, baseType: !991, size: 32, align: 32, offset: 21696)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg2_frame_rate_ext", scope: !1808, file: !1809, line: 218, baseType: !1003, size: 64, align: 32, offset: 21728)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "last_lambda_for", scope: !1808, file: !1809, line: 219, baseType: !1999, size: 160, align: 32, offset: 21792)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 160, align: 32, elements: !2000)
!2000 = !{!2001}
!2001 = !DISubrange(count: 5)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "skipdct", scope: !1808, file: !1809, line: 220, baseType: !991, size: 32, align: 32, offset: 21952)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "unrestricted_mv", scope: !1808, file: !1809, line: 223, baseType: !991, size: 32, align: 32, offset: 21984)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "h263_long_vectors", scope: !1808, file: !1809, line: 224, baseType: !991, size: 32, align: 32, offset: 22016)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1808, file: !1809, line: 226, baseType: !2006, size: 256, align: 64, offset: 22080)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !2007, line: 40, baseType: !2008)
!2007 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !2007, line: 35, size: 256, align: 64, elements: !2009)
!2009 = !{!2010, !2014, !2015}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !2008, file: !2007, line: 36, baseType: !2011, size: 64, align: 64)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64, align: 64)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{null, !1955}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !2008, file: !2007, line: 37, baseType: !2011, size: 64, align: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !2008, file: !2007, line: 39, baseType: !2016, size: 128, align: 64, offset: 128)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 128, align: 64, elements: !1884)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !2007, line: 32, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64, align: 64)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !958, !959, !1866, !991}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1808, file: !1809, line: 227, baseType: !2022, size: 128, align: 64, offset: 22336)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "FDCTDSPContext", file: !2023, line: 29, baseType: !2024)
!2023 = !DIFile(filename: "libavcodec/fdctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FDCTDSPContext", file: !2023, line: 26, size: 128, align: 64, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "fdct", scope: !2024, file: !2023, line: 27, baseType: !2011, size: 64, align: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "fdct248", scope: !2024, file: !2023, line: 28, baseType: !2011, size: 64, align: 64, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "h264chroma", scope: !1808, file: !1809, line: 228, baseType: !2029, size: 512, align: 64, offset: 22464)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264ChromaContext", file: !2030, line: 30, baseType: !2031)
!2030 = !DIFile(filename: "libavcodec/h264chroma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264ChromaContext", file: !2030, line: 27, size: 512, align: 64, elements: !2032)
!2032 = !{!2033, !2039}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "put_h264_chroma_pixels_tab", scope: !2031, file: !2030, line: 28, baseType: !2034, size: 256, align: 64)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 256, align: 64, elements: !1485)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_chroma_mc_func", file: !2030, line: 25, baseType: !2036)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64, align: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !958, !958, !1866, !991, !991, !991}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "avg_h264_chroma_pixels_tab", scope: !2031, file: !2030, line: 29, baseType: !2034, size: 256, align: 64, offset: 256)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1808, file: !1809, line: 229, baseType: !2041, size: 3328, align: 64, offset: 22976)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !2042, line: 95, baseType: !2043)
!2042 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !2042, line: 45, size: 3328, align: 64, elements: !2044)
!2044 = !{!2045, !2052, !2053, !2054}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !2043, file: !2042, line: 56, baseType: !2046, size: 1024, align: 64)
!2046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2047, size: 1024, align: 64, elements: !2051)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !2042, line: 38, baseType: !2048)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64, align: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !958, !1794, !1866, !991}
!2051 = !{!1486, !1486}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !2043, file: !2042, line: 68, baseType: !2046, size: 1024, align: 64, offset: 1024)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !2043, file: !2042, line: 82, baseType: !2046, size: 1024, align: 64, offset: 2048)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !2043, file: !2042, line: 94, baseType: !2055, size: 256, align: 64, offset: 3072)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2047, size: 256, align: 64, elements: !1485)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !1808, file: !1809, line: 230, baseType: !2057, size: 960, align: 64, offset: 26304)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !902, line: 100, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !902, line: 53, size: 960, align: 64, elements: !2059)
!2059 = !{!2060, !2067, !2068, !2069, !2070, !2074, !2075, !2076, !2077}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !2058, file: !902, line: 55, baseType: !2061, size: 64, align: 64)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64, align: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !2064, !2066, !1866}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64, align: 64)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!2066 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !958)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !2058, file: !902, line: 58, baseType: !2061, size: 64, align: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !2058, file: !902, line: 61, baseType: !2061, size: 64, align: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !2058, file: !902, line: 65, baseType: !2011, size: 64, align: 64, offset: 192)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !2058, file: !902, line: 72, baseType: !2071, size: 64, align: 64, offset: 256)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64, align: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !958, !1866, !1955}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !2058, file: !902, line: 79, baseType: !2071, size: 64, align: 64, offset: 320)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !2058, file: !902, line: 96, baseType: !1826, size: 512, align: 8, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !2058, file: !902, line: 97, baseType: !901, size: 32, align: 32, offset: 896)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !2058, file: !902, line: 99, baseType: !991, size: 32, align: 32, offset: 928)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !1808, file: !1809, line: 231, baseType: !2079, size: 8640, align: 64, offset: 27264)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "MECmpContext", file: !2080, line: 80, baseType: !2081)
!2080 = !DIFile(filename: "libavcodec/me_cmp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MECmpContext", file: !2080, line: 53, size: 8640, align: 64, elements: !2082)
!2082 = !{!2083, !2087, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2117}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "sum_abs_dctelem", scope: !2081, file: !2080, line: 54, baseType: !2084, size: 64, align: 64)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64, align: 64)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!991, !1955}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !2081, file: !2080, line: 56, baseType: !2088, size: 384, align: 64, offset: 64)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2089, size: 384, align: 64, elements: !2093)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "me_cmp_func", file: !2080, line: 48, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64, align: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!991, !1807, !958, !958, !1866, !991}
!2093 = !{!2094}
!2094 = !DISubrange(count: 6)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sse", scope: !2081, file: !2080, line: 57, baseType: !2088, size: 384, align: 64, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard8_diff", scope: !2081, file: !2080, line: 58, baseType: !2088, size: 384, align: 64, offset: 832)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "dct_sad", scope: !2081, file: !2080, line: 59, baseType: !2088, size: 384, align: 64, offset: 1216)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "quant_psnr", scope: !2081, file: !2080, line: 60, baseType: !2088, size: 384, align: 64, offset: 1600)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2081, file: !2080, line: 61, baseType: !2088, size: 384, align: 64, offset: 1984)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !2081, file: !2080, line: 62, baseType: !2088, size: 384, align: 64, offset: 2368)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vsad", scope: !2081, file: !2080, line: 63, baseType: !2088, size: 384, align: 64, offset: 2752)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vsse", scope: !2081, file: !2080, line: 64, baseType: !2088, size: 384, align: 64, offset: 3136)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "nsse", scope: !2081, file: !2080, line: 65, baseType: !2088, size: 384, align: 64, offset: 3520)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "w53", scope: !2081, file: !2080, line: 66, baseType: !2088, size: 384, align: 64, offset: 3904)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "w97", scope: !2081, file: !2080, line: 67, baseType: !2088, size: 384, align: 64, offset: 4288)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "dct_max", scope: !2081, file: !2080, line: 68, baseType: !2088, size: 384, align: 64, offset: 4672)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dct264_sad", scope: !2081, file: !2080, line: 69, baseType: !2088, size: 384, align: 64, offset: 5056)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !2081, file: !2080, line: 71, baseType: !2088, size: 384, align: 64, offset: 5440)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !2081, file: !2080, line: 72, baseType: !2088, size: 384, align: 64, offset: 5824)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !2081, file: !2080, line: 73, baseType: !2088, size: 384, align: 64, offset: 6208)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !2081, file: !2080, line: 74, baseType: !2088, size: 384, align: 64, offset: 6592)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !2081, file: !2080, line: 75, baseType: !2088, size: 384, align: 64, offset: 6976)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !2081, file: !2080, line: 76, baseType: !2088, size: 384, align: 64, offset: 7360)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pix_abs", scope: !2081, file: !2080, line: 78, baseType: !2115, size: 512, align: 64, offset: 7744)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2089, size: 512, align: 64, elements: !2116)
!2116 = !{!1135, !1486}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "median_sad", scope: !2081, file: !2080, line: 79, baseType: !2088, size: 384, align: 64, offset: 8256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "mdsp", scope: !1808, file: !1809, line: 232, baseType: !2119, size: 128, align: 64, offset: 35904)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegVideoDSPContext", file: !2120, line: 41, baseType: !2121)
!2120 = !DIFile(filename: "libavcodec/mpegvideodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegVideoDSPContext", file: !2120, line: 28, size: 128, align: 64, elements: !2122)
!2122 = !{!2123, !2127}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "gmc1", scope: !2121, file: !2120, line: 32, baseType: !2124, size: 64, align: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64, align: 64)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !958, !958, !991, !991, !991, !991, !991}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "gmc", scope: !2121, file: !2120, line: 37, baseType: !2128, size: 64, align: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64, align: 64)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !958, !958, !991, !991, !991, !991, !991, !991, !991, !991, !991, !991, !991, !991}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "mpvencdsp", scope: !1808, file: !1809, line: 233, baseType: !2132, size: 576, align: 64, offset: 36032)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegvideoEncDSPContext", file: !2133, line: 45, baseType: !2134)
!2133 = !DIFile(filename: "libavcodec/mpegvideoencdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegvideoEncDSPContext", file: !2133, line: 32, size: 576, align: 64, elements: !2135)
!2135 = !{!2136, !2140, !2144, !2148, !2149, !2154}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "try_8x8basis", scope: !2134, file: !2133, line: 33, baseType: !2137, size: 64, align: 64)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64, align: 64)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!991, !1955, !1955, !1955, !991}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "add_8x8basis", scope: !2134, file: !2133, line: 35, baseType: !2141, size: 64, align: 64, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64, align: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !1955, !1955, !991}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pix_sum", scope: !2134, file: !2133, line: 37, baseType: !2145, size: 64, align: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64, align: 64)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!991, !958, !991}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "pix_norm1", scope: !2134, file: !2133, line: 38, baseType: !2145, size: 64, align: 64, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "shrink", scope: !2134, file: !2133, line: 40, baseType: !2150, size: 256, align: 64, offset: 256)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2151, size: 256, align: 64, elements: !1485)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64, align: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !958, !991, !1794, !991, !991, !991}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "draw_edges", scope: !2134, file: !2133, line: 43, baseType: !2155, size: 64, align: 64, offset: 512)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64, align: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{null, !958, !991, !991, !991, !991, !991, !991}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pdsp", scope: !1808, file: !1809, line: 234, baseType: !2159, size: 192, align: 64, offset: 36608)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixblockDSPContext", file: !2160, line: 41, baseType: !2161)
!2160 = !DIFile(filename: "libavcodec/pixblockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixblockDSPContext", file: !2160, line: 28, size: 192, align: 64, elements: !2162)
!2162 = !{!2163, !2168, !2172}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "get_pixels", scope: !2161, file: !2160, line: 29, baseType: !2164, size: 64, align: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64, align: 64)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !2167, !1794, !1866}
!2167 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1955)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels", scope: !2161, file: !2160, line: 32, baseType: !2169, size: 64, align: 64, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64, align: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !2167, !1794, !1794, !1866}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels_unaligned", scope: !2161, file: !2160, line: 36, baseType: !2169, size: 64, align: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "qdsp", scope: !1808, file: !1809, line: 235, baseType: !2174, size: 6144, align: 64, offset: 36800)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "QpelDSPContext", file: !2175, line: 76, baseType: !2176)
!2175 = !DIFile(filename: "libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QpelDSPContext", file: !2175, line: 72, size: 6144, align: 64, elements: !2177)
!2177 = !{!2178, !2185, !2186}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "put_qpel_pixels_tab", scope: !2176, file: !2175, line: 73, baseType: !2179, size: 2048, align: 64)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2180, size: 2048, align: 64, elements: !2184)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !2175, line: 65, baseType: !2181)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64, align: 64)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{null, !958, !1794, !1866}
!2184 = !{!1135, !1967}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "avg_qpel_pixels_tab", scope: !2176, file: !2175, line: 74, baseType: !2179, size: 2048, align: 64, offset: 2048)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_qpel_pixels_tab", scope: !2176, file: !2175, line: 75, baseType: !2179, size: 2048, align: 64, offset: 4096)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1808, file: !1809, line: 236, baseType: !2188, size: 128, align: 64, offset: 42944)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !2189, line: 77, baseType: !2190)
!2189 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !2189, line: 41, size: 128, align: 64, elements: !2191)
!2191 = !{!2192, !2196}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !2190, file: !2189, line: 63, baseType: !2193, size: 64, align: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64, align: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{null, !958, !1794, !1866, !1866, !991, !991, !991, !991, !991, !991}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !2190, file: !2189, line: 76, baseType: !2197, size: 64, align: 64, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64, align: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !958, !1866, !991}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "h263dsp", scope: !1808, file: !1809, line: 237, baseType: !2201, size: 128, align: 64, offset: 43072)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "H263DSPContext", file: !2202, line: 29, baseType: !2203)
!2202 = !DIFile(filename: "libavcodec/h263dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H263DSPContext", file: !2202, line: 26, size: 128, align: 64, elements: !2204)
!2204 = !{!2205, !2209}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "h263_h_loop_filter", scope: !2203, file: !2202, line: 27, baseType: !2206, size: 64, align: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64, align: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !958, !991, !991}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "h263_v_loop_filter", scope: !2203, file: !2202, line: 28, baseType: !2206, size: 64, align: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1808, file: !1809, line: 238, baseType: !991, size: 32, align: 32, offset: 43200)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !1808, file: !1809, line: 239, baseType: !991, size: 32, align: 32, offset: 43232)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table_base", scope: !1808, file: !1809, line: 240, baseType: !1892, size: 64, align: 64, offset: 43264)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table_base", scope: !1808, file: !1809, line: 241, baseType: !1892, size: 64, align: 64, offset: 43328)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table_base", scope: !1808, file: !1809, line: 242, baseType: !1892, size: 64, align: 64, offset: 43392)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table_base", scope: !1808, file: !1809, line: 243, baseType: !1892, size: 64, align: 64, offset: 43456)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table_base", scope: !1808, file: !1809, line: 244, baseType: !1892, size: 64, align: 64, offset: 43520)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table_base", scope: !1808, file: !1809, line: 245, baseType: !1892, size: 64, align: 64, offset: 43584)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table_base", scope: !1808, file: !1809, line: 246, baseType: !2219, size: 256, align: 64, offset: 43648)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 256, align: 64, elements: !2220)
!2220 = !{!1135, !1135}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table_base", scope: !1808, file: !1809, line: 247, baseType: !2222, size: 512, align: 64, offset: 43904)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 512, align: 64, elements: !2223)
!2223 = !{!1135, !1135, !1135}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table", scope: !1808, file: !1809, line: 248, baseType: !1892, size: 64, align: 64, offset: 44416)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table", scope: !1808, file: !1809, line: 249, baseType: !1892, size: 64, align: 64, offset: 44480)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table", scope: !1808, file: !1809, line: 250, baseType: !1892, size: 64, align: 64, offset: 44544)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table", scope: !1808, file: !1809, line: 251, baseType: !1892, size: 64, align: 64, offset: 44608)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table", scope: !1808, file: !1809, line: 252, baseType: !1892, size: 64, align: 64, offset: 44672)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table", scope: !1808, file: !1809, line: 253, baseType: !1892, size: 64, align: 64, offset: 44736)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table", scope: !1808, file: !1809, line: 254, baseType: !2219, size: 256, align: 64, offset: 44800)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table", scope: !1808, file: !1809, line: 255, baseType: !2222, size: 512, align: 64, offset: 45056)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_select_table", scope: !1808, file: !1809, line: 256, baseType: !2233, size: 128, align: 64, offset: 45568)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 128, align: 64, elements: !1884)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_select_table", scope: !1808, file: !1809, line: 257, baseType: !2235, size: 256, align: 64, offset: 45696)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 256, align: 64, elements: !2220)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "motion_est", scope: !1808, file: !1809, line: 258, baseType: !991, size: 32, align: 32, offset: 45952)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1808, file: !1809, line: 259, baseType: !991, size: 32, align: 32, offset: 45984)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre", scope: !1808, file: !1809, line: 260, baseType: !991, size: 32, align: 32, offset: 46016)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mv_dir", scope: !1808, file: !1809, line: 261, baseType: !991, size: 32, align: 32, offset: 46048)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type", scope: !1808, file: !1809, line: 265, baseType: !991, size: 32, align: 32, offset: 46080)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !1808, file: !1809, line: 276, baseType: !2242, size: 512, align: 32, offset: 46112)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 512, align: 32, elements: !2243)
!2243 = !{!1135, !1486, !1135}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "field_select", scope: !1808, file: !1809, line: 277, baseType: !2245, size: 128, align: 32, offset: 46624)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, align: 32, elements: !2220)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv", scope: !1808, file: !1809, line: 278, baseType: !2247, size: 256, align: 32, offset: 46752)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 256, align: 32, elements: !2223)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "fcode_tab", scope: !1808, file: !1809, line: 279, baseType: !958, size: 64, align: 64, offset: 47040)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "direct_scale_mv", scope: !1808, file: !1809, line: 280, baseType: !2250, size: 2048, align: 16, offset: 47104)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 2048, align: 16, elements: !2251)
!2251 = !{!1135, !1828}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1808, file: !1809, line: 282, baseType: !2253, size: 4416, align: 64, offset: 49152)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "MotionEstContext", file: !2254, line: 99, baseType: !2255)
!2254 = !DIFile(filename: "libavcodec/motion_est.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MotionEstContext", file: !2254, line: 47, size: 4416, align: 64, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2296, !2297, !2300, !2301, !2306, !2307}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2255, file: !2254, line: 48, baseType: !1374, size: 64, align: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2255, file: !2254, line: 49, baseType: !991, size: 32, align: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "co_located_mv", scope: !2255, file: !2254, line: 50, baseType: !2260, size: 256, align: 32, offset: 96)
!2260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 256, align: 32, elements: !2261)
!2261 = !{!1486, !1135}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "direct_basis_mv", scope: !2255, file: !2254, line: 51, baseType: !2260, size: 256, align: 32, offset: 352)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !2255, file: !2254, line: 52, baseType: !958, size: 64, align: 64, offset: 640)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "best_mb", scope: !2255, file: !2254, line: 54, baseType: !958, size: 64, align: 64, offset: 704)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "temp_mb", scope: !2255, file: !2254, line: 55, baseType: !2233, size: 128, align: 64, offset: 768)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2255, file: !2254, line: 56, baseType: !958, size: 64, align: 64, offset: 896)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "best_bits", scope: !2255, file: !2254, line: 57, baseType: !991, size: 32, align: 32, offset: 960)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2255, file: !2254, line: 58, baseType: !1897, size: 64, align: 64, offset: 1024)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "score_map", scope: !2255, file: !2254, line: 59, baseType: !1897, size: 64, align: 64, offset: 1088)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "map_generation", scope: !2255, file: !2254, line: 60, baseType: !1111, size: 32, align: 32, offset: 1152)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pre_penalty_factor", scope: !2255, file: !2254, line: 61, baseType: !991, size: 32, align: 32, offset: 1184)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "penalty_factor", scope: !2255, file: !2254, line: 62, baseType: !991, size: 32, align: 32, offset: 1216)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "sub_penalty_factor", scope: !2255, file: !2254, line: 67, baseType: !991, size: 32, align: 32, offset: 1248)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "mb_penalty_factor", scope: !2255, file: !2254, line: 68, baseType: !991, size: 32, align: 32, offset: 1280)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2255, file: !2254, line: 69, baseType: !991, size: 32, align: 32, offset: 1312)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sub_flags", scope: !2255, file: !2254, line: 70, baseType: !991, size: 32, align: 32, offset: 1344)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "mb_flags", scope: !2255, file: !2254, line: 71, baseType: !991, size: 32, align: 32, offset: 1376)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "pre_pass", scope: !2255, file: !2254, line: 72, baseType: !991, size: 32, align: 32, offset: 1408)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !2255, file: !2254, line: 73, baseType: !991, size: 32, align: 32, offset: 1440)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2255, file: !2254, line: 74, baseType: !991, size: 32, align: 32, offset: 1472)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2255, file: !2254, line: 75, baseType: !991, size: 32, align: 32, offset: 1504)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2255, file: !2254, line: 76, baseType: !991, size: 32, align: 32, offset: 1536)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2255, file: !2254, line: 77, baseType: !991, size: 32, align: 32, offset: 1568)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pred_x", scope: !2255, file: !2254, line: 78, baseType: !991, size: 32, align: 32, offset: 1600)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "pred_y", scope: !2255, file: !2254, line: 79, baseType: !991, size: 32, align: 32, offset: 1632)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2255, file: !2254, line: 80, baseType: !2287, size: 1024, align: 64, offset: 1664)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 1024, align: 64, elements: !2051)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2255, file: !2254, line: 81, baseType: !2287, size: 1024, align: 64, offset: 2688)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2255, file: !2254, line: 82, baseType: !991, size: 32, align: 32, offset: 3712)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "uvstride", scope: !2255, file: !2254, line: 83, baseType: !991, size: 32, align: 32, offset: 3744)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum_temp", scope: !2255, file: !2254, line: 85, baseType: !997, size: 64, align: 64, offset: 3776)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum_temp", scope: !2255, file: !2254, line: 86, baseType: !997, size: 64, align: 64, offset: 3840)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "scene_change_score", scope: !2255, file: !2254, line: 87, baseType: !991, size: 32, align: 32, offset: 3904)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_put", scope: !2255, file: !2254, line: 89, baseType: !2295, size: 64, align: 64, offset: 3968)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64, align: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_avg", scope: !2255, file: !2254, line: 90, baseType: !2295, size: 64, align: 64, offset: 4032)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_put", scope: !2255, file: !2254, line: 91, baseType: !2298, size: 64, align: 64, offset: 4096)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64, align: 64)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2180, size: 1024, align: 64, elements: !1966)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_avg", scope: !2255, file: !2254, line: 92, baseType: !2298, size: 64, align: 64, offset: 4160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "mv_penalty", scope: !2255, file: !2254, line: 93, baseType: !2302, size: 64, align: 64, offset: 4224)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 131080, align: 8, elements: !2304)
!2304 = !{!2305}
!2305 = !DISubrange(count: 16385)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "current_mv_penalty", scope: !2255, file: !2254, line: 94, baseType: !958, size: 64, align: 64, offset: 4288)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sub_motion_search", scope: !2255, file: !2254, line: 95, baseType: !2308, size: 64, align: 64, offset: 4352)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64, align: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!991, !1807, !1647, !1647, !991, !991, !991, !991, !991}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "no_rounding", scope: !1808, file: !1809, line: 284, baseType: !991, size: 32, align: 32, offset: 53568)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !1808, file: !1809, line: 288, baseType: !991, size: 32, align: 32, offset: 53600)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !1808, file: !1809, line: 288, baseType: !991, size: 32, align: 32, offset: 53632)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skip_run", scope: !1808, file: !1809, line: 289, baseType: !991, size: 32, align: 32, offset: 53664)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "mb_intra", scope: !1808, file: !1809, line: 290, baseType: !991, size: 32, align: 32, offset: 53696)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1808, file: !1809, line: 291, baseType: !965, size: 64, align: 64, offset: 53760)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "block_index", scope: !1808, file: !1809, line: 293, baseType: !2318, size: 192, align: 32, offset: 53824)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 192, align: 32, elements: !2093)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "block_wrap", scope: !1808, file: !1809, line: 294, baseType: !2318, size: 192, align: 32, offset: 54016)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1808, file: !1809, line: 295, baseType: !2321, size: 192, align: 64, offset: 54208)
!2321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 192, align: 64, elements: !1952)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !1808, file: !1809, line: 297, baseType: !1647, size: 64, align: 64, offset: 54400)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1808, file: !1809, line: 300, baseType: !2324, size: 1024, align: 16, offset: 54464)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 1024, align: 16, elements: !1827)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1808, file: !1809, line: 301, baseType: !2324, size: 1024, align: 16, offset: 55488)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1808, file: !1809, line: 302, baseType: !2324, size: 1024, align: 16, offset: 56512)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_inter_matrix", scope: !1808, file: !1809, line: 303, baseType: !2324, size: 1024, align: 16, offset: 57536)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "force_duplicated_matrix", scope: !1808, file: !1809, line: 304, baseType: !991, size: 32, align: 32, offset: 58560)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "intra_quant_bias", scope: !1808, file: !1809, line: 306, baseType: !991, size: 32, align: 32, offset: 58592)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "inter_quant_bias", scope: !1808, file: !1809, line: 307, baseType: !991, size: 32, align: 32, offset: 58624)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "min_qcoeff", scope: !1808, file: !1809, line: 308, baseType: !991, size: 32, align: 32, offset: 58656)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "max_qcoeff", scope: !1808, file: !1809, line: 309, baseType: !991, size: 32, align: 32, offset: 58688)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ac_esc_length", scope: !1808, file: !1809, line: 310, baseType: !991, size: 32, align: 32, offset: 58720)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_length", scope: !1808, file: !1809, line: 311, baseType: !958, size: 64, align: 64, offset: 58752)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_last_length", scope: !1808, file: !1809, line: 312, baseType: !958, size: 64, align: 64, offset: 58816)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_length", scope: !1808, file: !1809, line: 313, baseType: !958, size: 64, align: 64, offset: 58880)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_last_length", scope: !1808, file: !1809, line: 314, baseType: !958, size: 64, align: 64, offset: 58944)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_length", scope: !1808, file: !1809, line: 315, baseType: !958, size: 64, align: 64, offset: 59008)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_last_length", scope: !1808, file: !1809, line: 316, baseType: !958, size: 64, align: 64, offset: 59072)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "luma_dc_vlc_length", scope: !1808, file: !1809, line: 317, baseType: !958, size: 64, align: 64, offset: 59136)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "coded_score", scope: !1808, file: !1809, line: 320, baseType: !1817, size: 384, align: 32, offset: 59200)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix", scope: !1808, file: !1809, line: 323, baseType: !2343, size: 64, align: 64, offset: 59584)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64, align: 64)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 2048, align: 32, elements: !1827)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix", scope: !1808, file: !1809, line: 324, baseType: !2343, size: 64, align: 64, offset: 59648)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix", scope: !1808, file: !1809, line: 325, baseType: !2343, size: 64, align: 64, offset: 59712)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix16", scope: !1808, file: !1809, line: 327, baseType: !2348, size: 64, align: 64, offset: 59776)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64, align: 64)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 2048, align: 16, elements: !2251)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix16", scope: !1808, file: !1809, line: 328, baseType: !2348, size: 64, align: 64, offset: 59840)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix16", scope: !1808, file: !1809, line: 329, baseType: !2348, size: 64, align: 64, offset: 59904)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dct_error_sum", scope: !1808, file: !1809, line: 332, baseType: !2343, size: 64, align: 64, offset: 59968)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dct_count", scope: !1808, file: !1809, line: 333, baseType: !2354, size: 64, align: 32, offset: 60032)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 64, align: 32, elements: !1884)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "dct_offset", scope: !1808, file: !1809, line: 334, baseType: !2356, size: 64, align: 64, offset: 60096)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64, align: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "total_bits", scope: !1808, file: !1809, line: 337, baseType: !997, size: 64, align: 64, offset: 60160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1808, file: !1809, line: 338, baseType: !991, size: 32, align: 32, offset: 60224)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "stuffing_bits", scope: !1808, file: !1809, line: 339, baseType: !991, size: 32, align: 32, offset: 60256)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "next_lambda", scope: !1808, file: !1809, line: 340, baseType: !991, size: 32, align: 32, offset: 60288)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "rc_context", scope: !1808, file: !1809, line: 341, baseType: !2362, size: 3584, align: 64, offset: 60352)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlContext", file: !2363, line: 87, baseType: !2364)
!2363 = !DIFile(filename: "libavcodec/ratecontrol.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlContext", file: !2363, line: 63, size: 3584, align: 64, elements: !2365)
!2365 = !{!2366, !2367, !2388, !2389, !2397, !2398, !2399, !2400, !2401, !2402, !2404, !2405, !2406, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2364, file: !2363, line: 64, baseType: !991, size: 32, align: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2364, file: !2363, line: 65, baseType: !2368, size: 64, align: 64, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64, align: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlEntry", file: !2363, line: 58, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlEntry", file: !2363, line: 41, size: 640, align: 64, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2370, file: !2363, line: 42, baseType: !991, size: 32, align: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2370, file: !2363, line: 43, baseType: !1654, size: 32, align: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !2370, file: !2363, line: 44, baseType: !991, size: 32, align: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !2370, file: !2363, line: 45, baseType: !991, size: 32, align: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !2370, file: !2363, line: 46, baseType: !991, size: 32, align: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !2370, file: !2363, line: 47, baseType: !991, size: 32, align: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !2370, file: !2363, line: 48, baseType: !991, size: 32, align: 32, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "expected_bits", scope: !2370, file: !2363, line: 49, baseType: !1355, size: 64, align: 64, offset: 256)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "new_pict_type", scope: !2370, file: !2363, line: 50, baseType: !991, size: 32, align: 32, offset: 320)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "new_qscale", scope: !2370, file: !2363, line: 51, baseType: !1654, size: 32, align: 32, offset: 352)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !2370, file: !2363, line: 52, baseType: !997, size: 64, align: 64, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !2370, file: !2363, line: 53, baseType: !997, size: 64, align: 64, offset: 448)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !2370, file: !2363, line: 54, baseType: !991, size: 32, align: 32, offset: 512)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !2370, file: !2363, line: 55, baseType: !991, size: 32, align: 32, offset: 544)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !2370, file: !2363, line: 56, baseType: !991, size: 32, align: 32, offset: 576)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !2370, file: !2363, line: 57, baseType: !991, size: 32, align: 32, offset: 608)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_index", scope: !2364, file: !2363, line: 66, baseType: !1000, size: 64, align: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2364, file: !2363, line: 67, baseType: !2390, size: 960, align: 64, offset: 192)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 960, align: 64, elements: !2000)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "Predictor", file: !2363, line: 39, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Predictor", file: !2363, line: 35, size: 192, align: 64, elements: !2393)
!2393 = !{!2394, !2395, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2392, file: !2363, line: 36, baseType: !1000, size: 64, align: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2392, file: !2363, line: 37, baseType: !1000, size: 64, align: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "decay", scope: !2392, file: !2363, line: 38, baseType: !1000, size: 64, align: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qsum", scope: !2364, file: !2363, line: 68, baseType: !1000, size: 64, align: 64, offset: 1152)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qcount", scope: !2364, file: !2363, line: 69, baseType: !1000, size: 64, align: 64, offset: 1216)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_rc_eq_output_sum", scope: !2364, file: !2363, line: 70, baseType: !1000, size: 64, align: 64, offset: 1280)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_wanted_bits", scope: !2364, file: !2363, line: 71, baseType: !1000, size: 64, align: 64, offset: 1344)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale", scope: !2364, file: !2363, line: 72, baseType: !1000, size: 64, align: 64, offset: 1408)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale_for", scope: !2364, file: !2363, line: 73, baseType: !2403, size: 320, align: 64, offset: 1472)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 320, align: 64, elements: !2000)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "last_mc_mb_var_sum", scope: !2364, file: !2363, line: 74, baseType: !997, size: 64, align: 64, offset: 1792)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_var_sum", scope: !2364, file: !2363, line: 75, baseType: !997, size: 64, align: 64, offset: 1856)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "i_cplx_sum", scope: !2364, file: !2363, line: 76, baseType: !2407, size: 320, align: 64, offset: 1920)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1355, size: 320, align: 64, elements: !2000)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "p_cplx_sum", scope: !2364, file: !2363, line: 77, baseType: !2407, size: 320, align: 64, offset: 2240)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits_sum", scope: !2364, file: !2363, line: 78, baseType: !2407, size: 320, align: 64, offset: 2560)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_sum", scope: !2364, file: !2363, line: 79, baseType: !2407, size: 320, align: 64, offset: 2880)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2364, file: !2363, line: 80, baseType: !1999, size: 160, align: 32, offset: 3200)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !2364, file: !2363, line: 81, baseType: !991, size: 32, align: 32, offset: 3360)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "non_lavc_opaque", scope: !2364, file: !2363, line: 83, baseType: !964, size: 64, align: 64, offset: 3392)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dry_run_qscale", scope: !2364, file: !2363, line: 84, baseType: !1654, size: 32, align: 32, offset: 3456)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_number", scope: !2364, file: !2363, line: 85, baseType: !991, size: 32, align: 32, offset: 3488)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq_eval", scope: !2364, file: !2363, line: 86, baseType: !2417, size: 64, align: 64, offset: 3520)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !2419, line: 31, baseType: !2420)
!2419 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2420 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !2419, line: 31, flags: DIFlagFwdDecl)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1808, file: !1809, line: 344, baseType: !991, size: 32, align: 32, offset: 63936)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1808, file: !1809, line: 345, baseType: !991, size: 32, align: 32, offset: 63968)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1808, file: !1809, line: 346, baseType: !991, size: 32, align: 32, offset: 64000)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1808, file: !1809, line: 347, baseType: !991, size: 32, align: 32, offset: 64032)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1808, file: !1809, line: 348, baseType: !991, size: 32, align: 32, offset: 64064)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1808, file: !1809, line: 349, baseType: !991, size: 32, align: 32, offset: 64096)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "b_count", scope: !1808, file: !1809, line: 350, baseType: !991, size: 32, align: 32, offset: 64128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1808, file: !1809, line: 351, baseType: !991, size: 32, align: 32, offset: 64160)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1808, file: !1809, line: 352, baseType: !991, size: 32, align: 32, offset: 64192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "last_bits", scope: !1808, file: !1809, line: 353, baseType: !991, size: 32, align: 32, offset: 64224)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_x", scope: !1808, file: !1809, line: 356, baseType: !991, size: 32, align: 32, offset: 64256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_y", scope: !1808, file: !1809, line: 357, baseType: !991, size: 32, align: 32, offset: 64288)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "last_resync_gb", scope: !1808, file: !1809, line: 358, baseType: !2434, size: 256, align: 64, offset: 64320)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2435, line: 70, baseType: !2436)
!2435 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2435, line: 61, size: 256, align: 64, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2436, file: !2435, line: 62, baseType: !1794, size: 64, align: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2436, file: !2435, line: 62, baseType: !1794, size: 64, align: 64, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2436, file: !2435, line: 67, baseType: !991, size: 32, align: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2436, file: !2435, line: 68, baseType: !991, size: 32, align: 32, offset: 160)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2436, file: !2435, line: 69, baseType: !991, size: 32, align: 32, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num_left", scope: !1808, file: !1809, line: 359, baseType: !991, size: 32, align: 32, offset: 64576)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_frame_damaged", scope: !1808, file: !1809, line: 360, baseType: !991, size: 32, align: 32, offset: 64608)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "parse_context", scope: !1808, file: !1809, line: 362, baseType: !2446, size: 384, align: 64, offset: 64640)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParseContext", file: !2447, line: 38, baseType: !2448)
!2447 = !DIFile(filename: "libavcodec/parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParseContext", file: !2447, line: 28, size: 384, align: 64, elements: !2449)
!2449 = !{!2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2448, file: !2447, line: 29, baseType: !958, size: 64, align: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2448, file: !2447, line: 30, baseType: !991, size: 32, align: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "last_index", scope: !2448, file: !2447, line: 31, baseType: !991, size: 32, align: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2448, file: !2447, line: 32, baseType: !1111, size: 32, align: 32, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2448, file: !2447, line: 33, baseType: !1118, size: 32, align: 32, offset: 160)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "frame_start_found", scope: !2448, file: !2447, line: 34, baseType: !991, size: 32, align: 32, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !2448, file: !2447, line: 35, baseType: !991, size: 32, align: 32, offset: 224)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "overread_index", scope: !2448, file: !2447, line: 36, baseType: !991, size: 32, align: 32, offset: 256)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "state64", scope: !2448, file: !2447, line: 37, baseType: !1355, size: 64, align: 64, offset: 320)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "gob_index", scope: !1808, file: !1809, line: 365, baseType: !991, size: 32, align: 32, offset: 65024)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "obmc", scope: !1808, file: !1809, line: 366, baseType: !991, size: 32, align: 32, offset: 65056)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info", scope: !1808, file: !1809, line: 367, baseType: !991, size: 32, align: 32, offset: 65088)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mb_info", scope: !1808, file: !1809, line: 368, baseType: !991, size: 32, align: 32, offset: 65120)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_info", scope: !1808, file: !1809, line: 368, baseType: !991, size: 32, align: 32, offset: 65152)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_ptr", scope: !1808, file: !1809, line: 369, baseType: !958, size: 64, align: 64, offset: 65216)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_size", scope: !1808, file: !1809, line: 370, baseType: !991, size: 32, align: 32, offset: 65280)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ehc_mode", scope: !1808, file: !1809, line: 371, baseType: !991, size: 32, align: 32, offset: 65312)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "rc_strategy", scope: !1808, file: !1809, line: 372, baseType: !991, size: 32, align: 32, offset: 65344)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "umvplus", scope: !1808, file: !1809, line: 375, baseType: !991, size: 32, align: 32, offset: 65376)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic_dir", scope: !1808, file: !1809, line: 376, baseType: !991, size: 32, align: 32, offset: 65408)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "h263_slice_structured", scope: !1808, file: !1809, line: 377, baseType: !991, size: 32, align: 32, offset: 65440)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "alt_inter_vlc", scope: !1808, file: !1809, line: 378, baseType: !991, size: 32, align: 32, offset: 65472)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "modified_quant", scope: !1808, file: !1809, line: 379, baseType: !991, size: 32, align: 32, offset: 65504)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter", scope: !1808, file: !1809, line: 380, baseType: !991, size: 32, align: 32, offset: 65536)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "custom_pcf", scope: !1808, file: !1809, line: 381, baseType: !991, size: 32, align: 32, offset: 65568)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "studio_profile", scope: !1808, file: !1809, line: 384, baseType: !991, size: 32, align: 32, offset: 65600)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "dct_precision", scope: !1808, file: !1809, line: 385, baseType: !991, size: 32, align: 32, offset: 65632)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "time_increment_bits", scope: !1808, file: !1809, line: 387, baseType: !991, size: 32, align: 32, offset: 65664)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "last_time_base", scope: !1808, file: !1809, line: 388, baseType: !991, size: 32, align: 32, offset: 65696)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1808, file: !1809, line: 389, baseType: !991, size: 32, align: 32, offset: 65728)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1808, file: !1809, line: 390, baseType: !997, size: 64, align: 64, offset: 65792)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_time", scope: !1808, file: !1809, line: 391, baseType: !997, size: 64, align: 64, offset: 65856)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !1808, file: !1809, line: 392, baseType: !966, size: 16, align: 16, offset: 65920)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !1808, file: !1809, line: 393, baseType: !966, size: 16, align: 16, offset: 65936)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "pp_field_time", scope: !1808, file: !1809, line: 394, baseType: !966, size: 16, align: 16, offset: 65952)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pb_field_time", scope: !1808, file: !1809, line: 395, baseType: !966, size: 16, align: 16, offset: 65968)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "real_sprite_warping_points", scope: !1808, file: !1809, line: 396, baseType: !991, size: 32, align: 32, offset: 65984)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_offset", scope: !1808, file: !1809, line: 397, baseType: !2245, size: 128, align: 32, offset: 66016)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_delta", scope: !1808, file: !1809, line: 398, baseType: !2245, size: 128, align: 32, offset: 66144)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "mcsel", scope: !1808, file: !1809, line: 399, baseType: !991, size: 32, align: 32, offset: 66272)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "quant_precision", scope: !1808, file: !1809, line: 400, baseType: !991, size: 32, align: 32, offset: 66304)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !1808, file: !1809, line: 401, baseType: !991, size: 32, align: 32, offset: 66336)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_info", scope: !1808, file: !1809, line: 402, baseType: !991, size: 32, align: 32, offset: 66368)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_warping_accuracy", scope: !1808, file: !1809, line: 403, baseType: !991, size: 32, align: 32, offset: 66400)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "data_partitioning", scope: !1808, file: !1809, line: 404, baseType: !991, size: 32, align: 32, offset: 66432)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !1808, file: !1809, line: 405, baseType: !991, size: 32, align: 32, offset: 66464)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !1808, file: !1809, line: 406, baseType: !991, size: 32, align: 32, offset: 66496)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "vo_type", scope: !1808, file: !1809, line: 407, baseType: !991, size: 32, align: 32, offset: 66528)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pb", scope: !1808, file: !1809, line: 408, baseType: !1928, size: 320, align: 64, offset: 66560)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pb2", scope: !1808, file: !1809, line: 409, baseType: !1928, size: 320, align: 64, offset: 66880)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1808, file: !1809, line: 410, baseType: !991, size: 32, align: 32, offset: 67200)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "padding_bug_score", scope: !1808, file: !1809, line: 411, baseType: !991, size: 32, align: 32, offset: 67232)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "divx_packed", scope: !1808, file: !1809, line: 414, baseType: !991, size: 32, align: 32, offset: 67264)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer", scope: !1808, file: !1809, line: 415, baseType: !958, size: 64, align: 64, offset: 67328)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer_size", scope: !1808, file: !1809, line: 416, baseType: !991, size: 32, align: 32, offset: 67392)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bitstream_buffer_size", scope: !1808, file: !1809, line: 417, baseType: !1111, size: 32, align: 32, offset: 67424)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_version", scope: !1808, file: !1809, line: 420, baseType: !991, size: 32, align: 32, offset: 67456)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_first_dc_coded", scope: !1808, file: !1809, line: 421, baseType: !1951, size: 96, align: 32, offset: 67488)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "mjpeg_ctx", scope: !1808, file: !1809, line: 424, baseType: !2509, size: 64, align: 64, offset: 67584)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64, align: 64)
!2510 = !DICompositeType(tag: DW_TAG_structure_type, name: "MJpegContext", file: !1809, line: 424, flags: DIFlagFwdDecl)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "esc_pos", scope: !1808, file: !1809, line: 425, baseType: !991, size: 32, align: 32, offset: 67648)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1808, file: !1809, line: 426, baseType: !991, size: 32, align: 32, offset: 67680)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "huffman", scope: !1808, file: !1809, line: 427, baseType: !991, size: 32, align: 32, offset: 67712)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "mv_table_index", scope: !1808, file: !1809, line: 430, baseType: !991, size: 32, align: 32, offset: 67744)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table_index", scope: !1808, file: !1809, line: 431, baseType: !991, size: 32, align: 32, offset: 67776)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "rl_chroma_table_index", scope: !1808, file: !1809, line: 432, baseType: !991, size: 32, align: 32, offset: 67808)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dc_table_index", scope: !1808, file: !1809, line: 433, baseType: !991, size: 32, align: 32, offset: 67840)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "use_skip_mb_code", scope: !1808, file: !1809, line: 434, baseType: !991, size: 32, align: 32, offset: 67872)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1808, file: !1809, line: 435, baseType: !991, size: 32, align: 32, offset: 67904)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "first_slice_line", scope: !1808, file: !1809, line: 436, baseType: !991, size: 32, align: 32, offset: 67936)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "flipflop_rounding", scope: !1808, file: !1809, line: 437, baseType: !991, size: 32, align: 32, offset: 67968)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "msmpeg4_version", scope: !1808, file: !1809, line: 438, baseType: !991, size: 32, align: 32, offset: 68000)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "per_mb_rl_table", scope: !1808, file: !1809, line: 439, baseType: !991, size: 32, align: 32, offset: 68032)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_level_length", scope: !1808, file: !1809, line: 440, baseType: !991, size: 32, align: 32, offset: 68064)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_run_length", scope: !1808, file: !1809, line: 441, baseType: !991, size: 32, align: 32, offset: 68096)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "ac_stats", scope: !1808, file: !1809, line: 443, baseType: !2527, size: 64, align: 64, offset: 68160)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64, align: 64)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 540800, align: 32, elements: !2529)
!2529 = !{!1135, !2530, !2530, !1135}
!2530 = !DISubrange(count: 65)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "inter_intra_pred", scope: !1808, file: !1809, line: 444, baseType: !991, size: 32, align: 32, offset: 68224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "mspel", scope: !1808, file: !1809, line: 445, baseType: !991, size: 32, align: 32, offset: 68256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1808, file: !1809, line: 448, baseType: !2434, size: 256, align: 64, offset: 68288)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "gop_picture_number", scope: !1808, file: !1809, line: 451, baseType: !991, size: 32, align: 32, offset: 68544)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv_dir", scope: !1808, file: !1809, line: 452, baseType: !991, size: 32, align: 32, offset: 68576)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay_ptr", scope: !1808, file: !1809, line: 453, baseType: !958, size: 64, align: 64, offset: 68608)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_sequence", scope: !1808, file: !1809, line: 456, baseType: !991, size: 32, align: 32, offset: 68672)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_f_code", scope: !1808, file: !1809, line: 457, baseType: !2245, size: 128, align: 32, offset: 68704)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !1808, file: !1809, line: 460, baseType: !991, size: 32, align: 32, offset: 68832)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1808, file: !1809, line: 462, baseType: !997, size: 64, align: 64, offset: 68864)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1808, file: !1809, line: 463, baseType: !991, size: 32, align: 32, offset: 68928)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pred_frame_dct", scope: !1808, file: !1809, line: 464, baseType: !991, size: 32, align: 32, offset: 68960)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1808, file: !1809, line: 465, baseType: !991, size: 32, align: 32, offset: 68992)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "concealment_motion_vectors", scope: !1808, file: !1809, line: 466, baseType: !991, size: 32, align: 32, offset: 69024)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "q_scale_type", scope: !1808, file: !1809, line: 467, baseType: !991, size: 32, align: 32, offset: 69056)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1808, file: !1809, line: 468, baseType: !991, size: 32, align: 32, offset: 69088)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "intra_vlc_format", scope: !1808, file: !1809, line: 469, baseType: !991, size: 32, align: 32, offset: 69120)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "alternate_scan", scope: !1808, file: !1809, line: 470, baseType: !991, size: 32, align: 32, offset: 69152)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "seq_disp_ext", scope: !1808, file: !1809, line: 471, baseType: !991, size: 32, align: 32, offset: 69184)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !1808, file: !1809, line: 472, baseType: !991, size: 32, align: 32, offset: 69216)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_first_field", scope: !1808, file: !1809, line: 479, baseType: !991, size: 32, align: 32, offset: 69248)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_420_type", scope: !1808, file: !1809, line: 480, baseType: !991, size: 32, align: 32, offset: 69280)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format", scope: !1808, file: !1809, line: 481, baseType: !991, size: 32, align: 32, offset: 69312)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !1808, file: !1809, line: 485, baseType: !991, size: 32, align: 32, offset: 69344)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !1808, file: !1809, line: 486, baseType: !991, size: 32, align: 32, offset: 69376)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_frame", scope: !1808, file: !1809, line: 488, baseType: !991, size: 32, align: 32, offset: 69408)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "full_pel", scope: !1808, file: !1809, line: 489, baseType: !2354, size: 64, align: 32, offset: 69440)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_dct", scope: !1808, file: !1809, line: 490, baseType: !991, size: 32, align: 32, offset: 69504)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "first_field", scope: !1808, file: !1809, line: 491, baseType: !991, size: 32, align: 32, offset: 69536)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "drop_frame_timecode", scope: !1808, file: !1809, line: 492, baseType: !991, size: 32, align: 32, offset: 69568)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "scan_offset", scope: !1808, file: !1809, line: 493, baseType: !991, size: 32, align: 32, offset: 69600)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_mode", scope: !1808, file: !1809, line: 496, baseType: !991, size: 32, align: 32, offset: 69632)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1808, file: !1809, line: 497, baseType: !991, size: 32, align: 32, offset: 69664)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "tc_opt_str", scope: !1808, file: !1809, line: 499, baseType: !968, size: 64, align: 64, offset: 69696)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1808, file: !1809, line: 500, baseType: !2566, size: 160, align: 32, offset: 69760)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !2567, line: 46, baseType: !2568)
!2567 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2567, line: 41, size: 160, align: 32, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2568, file: !2567, line: 42, baseType: !991, size: 32, align: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2568, file: !2567, line: 43, baseType: !1118, size: 32, align: 32, offset: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2568, file: !2567, line: 44, baseType: !1003, size: 64, align: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !2568, file: !2567, line: 45, baseType: !1111, size: 32, align: 32, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_lastgob", scope: !1808, file: !1809, line: 502, baseType: !958, size: 64, align: 64, offset: 69952)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_uv", scope: !1808, file: !1809, line: 503, baseType: !991, size: 32, align: 32, offset: 70016)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "pack_pblocks", scope: !1808, file: !1809, line: 504, baseType: !991, size: 32, align: 32, offset: 70048)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "pblocks", scope: !1808, file: !1809, line: 505, baseType: !2578, size: 768, align: 64, offset: 70080)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2579, size: 768, align: 64, elements: !1818)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64, align: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 1024, align: 16, elements: !1827)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1808, file: !1809, line: 507, baseType: !2579, size: 64, align: 64, offset: 70848)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1808, file: !1809, line: 508, baseType: !2583, size: 64, align: 64, offset: 70912)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64, align: 64)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 12288, align: 16, elements: !2585)
!2585 = !{!1134, !1828}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1808, file: !1809, line: 509, baseType: !2587, size: 64, align: 64, offset: 70976)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64, align: 64)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!991, !1807, !2579}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "block32", scope: !1808, file: !1809, line: 511, baseType: !2591, size: 64, align: 64, offset: 71040)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64, align: 64)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2593, size: 24576, align: 32, elements: !2585)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !998, line: 196, baseType: !991)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_direction", scope: !1808, file: !1809, line: 512, baseType: !991, size: 32, align: 32, offset: 71104)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_macroblock", scope: !1808, file: !1809, line: 513, baseType: !2596, size: 64, align: 64, offset: 71168)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64, align: 64)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 12288, align: 16, elements: !2598)
!2598 = !{!1953, !2599}
!2599 = !DISubrange(count: 256)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_intra", scope: !1808, file: !1809, line: 520, baseType: !2601, size: 64, align: 64, offset: 71232)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64, align: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{null, !1807, !1955, !991, !991}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_inter", scope: !1808, file: !1809, line: 522, baseType: !2601, size: 64, align: 64, offset: 71296)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_intra", scope: !1808, file: !1809, line: 524, baseType: !2601, size: 64, align: 64, offset: 71360)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_inter", scope: !1808, file: !1809, line: 526, baseType: !2601, size: 64, align: 64, offset: 71424)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_intra", scope: !1808, file: !1809, line: 528, baseType: !2601, size: 64, align: 64, offset: 71488)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_inter", scope: !1808, file: !1809, line: 530, baseType: !2601, size: 64, align: 64, offset: 71552)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_intra", scope: !1808, file: !1809, line: 532, baseType: !2601, size: 64, align: 64, offset: 71616)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_inter", scope: !1808, file: !1809, line: 534, baseType: !2601, size: 64, align: 64, offset: 71680)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dct_quantize", scope: !1808, file: !1809, line: 536, baseType: !2612, size: 64, align: 64, offset: 71744)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64, align: 64)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!991, !1807, !1955, !991, !991, !1647}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "fast_dct_quantize", scope: !1808, file: !1809, line: 537, baseType: !2612, size: 64, align: 64, offset: 71808)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !1808, file: !1809, line: 538, baseType: !2617, size: 64, align: 64, offset: 71872)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64, align: 64)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{null, !1807, !1955}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "mpv_flags", scope: !1808, file: !1809, line: 540, baseType: !991, size: 32, align: 32, offset: 71936)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "quantizer_noise_shaping", scope: !1808, file: !1809, line: 541, baseType: !991, size: 32, align: 32, offset: 71968)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qsquish", scope: !1808, file: !1809, line: 547, baseType: !1654, size: 32, align: 32, offset: 72000)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_amp", scope: !1808, file: !1809, line: 548, baseType: !1654, size: 32, align: 32, offset: 72032)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_freq", scope: !1808, file: !1809, line: 549, baseType: !991, size: 32, align: 32, offset: 72064)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_cplx", scope: !1808, file: !1809, line: 550, baseType: !1654, size: 32, align: 32, offset: 72096)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_aggressivity", scope: !1808, file: !1809, line: 551, baseType: !1654, size: 32, align: 32, offset: 72128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "border_masking", scope: !1808, file: !1809, line: 552, baseType: !1654, size: 32, align: 32, offset: 72160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "lmin", scope: !1808, file: !1809, line: 553, baseType: !991, size: 32, align: 32, offset: 72192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "lmax", scope: !1808, file: !1809, line: 553, baseType: !991, size: 32, align: 32, offset: 72224)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_ignore_qmax", scope: !1808, file: !1809, line: 554, baseType: !991, size: 32, align: 32, offset: 72256)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq", scope: !1808, file: !1809, line: 556, baseType: !968, size: 64, align: 64, offset: 72320)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "cplx_tab", scope: !1808, file: !1809, line: 559, baseType: !2633, size: 64, align: 64, offset: 72384)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bits_tab", scope: !1808, file: !1809, line: 559, baseType: !2633, size: 64, align: 64, offset: 72448)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "context_reinit", scope: !1808, file: !1809, line: 563, baseType: !991, size: 32, align: 32, offset: 72512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "er", scope: !1808, file: !1809, line: 565, baseType: !2637, size: 12160, align: 64, offset: 72576)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERContext", file: !2638, line: 90, baseType: !2639)
!2638 = !DIFile(filename: "libavcodec/error_resilience.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERContext", file: !2638, line: 53, size: 12160, align: 64, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2685}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2639, file: !2638, line: 54, baseType: !1374, size: 64, align: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !2639, file: !2638, line: 55, baseType: !2079, size: 8640, align: 64, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "mecc_inited", scope: !2639, file: !2638, line: 56, baseType: !991, size: 32, align: 32, offset: 8704)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !2639, file: !2638, line: 58, baseType: !1647, size: 64, align: 64, offset: 8768)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !2639, file: !2638, line: 59, baseType: !991, size: 32, align: 32, offset: 8832)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !2639, file: !2638, line: 60, baseType: !991, size: 32, align: 32, offset: 8864)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !2639, file: !2638, line: 60, baseType: !991, size: 32, align: 32, offset: 8896)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !2639, file: !2638, line: 61, baseType: !1866, size: 64, align: 64, offset: 8960)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !2639, file: !2638, line: 62, baseType: !1866, size: 64, align: 64, offset: 9024)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2639, file: !2638, line: 64, baseType: !2651, size: 32, align: 32, offset: 9088)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int", file: !2652, line: 46, baseType: !991)
!2652 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdatomic.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "error_occurred", scope: !2639, file: !2638, line: 65, baseType: !991, size: 32, align: 32, offset: 9120)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "error_status_table", scope: !2639, file: !2638, line: 66, baseType: !958, size: 64, align: 64, offset: 9152)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "er_temp_buffer", scope: !2639, file: !2638, line: 67, baseType: !958, size: 64, align: 64, offset: 9216)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !2639, file: !2638, line: 68, baseType: !1957, size: 192, align: 64, offset: 9280)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !2639, file: !2638, line: 69, baseType: !958, size: 64, align: 64, offset: 9472)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !2639, file: !2638, line: 70, baseType: !958, size: 64, align: 64, offset: 9536)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2639, file: !2638, line: 71, baseType: !2242, size: 512, align: 32, offset: 9600)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pic", scope: !2639, file: !2638, line: 73, baseType: !2661, size: 512, align: 64, offset: 10112)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERPicture", file: !2638, line: 51, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERPicture", file: !2638, line: 41, size: 512, align: 64, elements: !2663)
!2663 = !{!2664, !2665, !2667, !2668, !2669, !2670}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2662, file: !2638, line: 42, baseType: !1396, size: 64, align: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2662, file: !2638, line: 43, baseType: !2666, size: 64, align: 64, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !2662, file: !2638, line: 46, baseType: !1891, size: 128, align: 64, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !2662, file: !2638, line: 47, baseType: !1902, size: 128, align: 64, offset: 256)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2662, file: !2638, line: 49, baseType: !1897, size: 64, align: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !2662, file: !2638, line: 50, baseType: !991, size: 32, align: 32, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "last_pic", scope: !2639, file: !2638, line: 74, baseType: !2661, size: 512, align: 64, offset: 10624)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "next_pic", scope: !2639, file: !2638, line: 75, baseType: !2661, size: 512, align: 64, offset: 11136)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !2639, file: !2638, line: 77, baseType: !1889, size: 128, align: 64, offset: 11648)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !2639, file: !2638, line: 78, baseType: !1889, size: 128, align: 64, offset: 11776)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !2639, file: !2638, line: 80, baseType: !966, size: 16, align: 16, offset: 11904)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !2639, file: !2638, line: 81, baseType: !966, size: 16, align: 16, offset: 11920)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !2639, file: !2638, line: 82, baseType: !991, size: 32, align: 32, offset: 11936)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !2639, file: !2638, line: 83, baseType: !991, size: 32, align: 32, offset: 11968)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2639, file: !2638, line: 84, baseType: !991, size: 32, align: 32, offset: 12000)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2639, file: !2638, line: 86, baseType: !2681, size: 64, align: 64, offset: 12032)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64, align: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{null, !964, !991, !991, !991, !2684, !991, !991, !991, !991}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2639, file: !2638, line: 89, baseType: !964, size: 64, align: 64, offset: 12096)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "error_rate", scope: !1808, file: !1809, line: 567, baseType: !991, size: 32, align: 32, offset: 84736)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_frames", scope: !1808, file: !1809, line: 570, baseType: !2688, size: 1152, align: 64, offset: 84800)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 1152, align: 64, elements: !2689)
!2689 = !{!2690}
!2690 = !DISubrange(count: 18)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1808, file: !1809, line: 571, baseType: !991, size: 32, align: 32, offset: 85952)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1808, file: !1809, line: 572, baseType: !991, size: 32, align: 32, offset: 85984)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1808, file: !1809, line: 575, baseType: !991, size: 32, align: 32, offset: 86016)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1808, file: !1809, line: 576, baseType: !991, size: 32, align: 32, offset: 86048)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1808, file: !1809, line: 577, baseType: !991, size: 32, align: 32, offset: 86080)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1808, file: !1809, line: 578, baseType: !991, size: 32, align: 32, offset: 86112)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1808, file: !1809, line: 580, baseType: !991, size: 32, align: 32, offset: 86144)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1808, file: !1809, line: 581, baseType: !991, size: 32, align: 32, offset: 86176)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1779, file: !14, line: 3766, baseType: !1371, size: 64, align: 64, offset: 640)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1779, file: !14, line: 3774, baseType: !1371, size: 64, align: 64, offset: 704)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1779, file: !14, line: 3780, baseType: !991, size: 32, align: 32, offset: 768)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1779, file: !14, line: 3785, baseType: !991, size: 32, align: 32, offset: 800)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1779, file: !14, line: 3795, baseType: !2704, size: 64, align: 64, offset: 832)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64, align: 64)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!991, !1374, !1064}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1376, file: !14, line: 2728, baseType: !964, size: 64, align: 64, offset: 5440)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1376, file: !14, line: 2735, baseType: !1422, size: 512, align: 64, offset: 5504)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1376, file: !14, line: 2742, baseType: !991, size: 32, align: 32, offset: 6016)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1376, file: !14, line: 2755, baseType: !991, size: 32, align: 32, offset: 6048)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1376, file: !14, line: 2776, baseType: !991, size: 32, align: 32, offset: 6080)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1376, file: !14, line: 2783, baseType: !991, size: 32, align: 32, offset: 6112)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1376, file: !14, line: 2791, baseType: !991, size: 32, align: 32, offset: 6144)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1376, file: !14, line: 2802, baseType: !1396, size: 64, align: 64, offset: 6208)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1376, file: !14, line: 2811, baseType: !991, size: 32, align: 32, offset: 6272)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1376, file: !14, line: 2821, baseType: !991, size: 32, align: 32, offset: 6304)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1376, file: !14, line: 2830, baseType: !991, size: 32, align: 32, offset: 6336)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1376, file: !14, line: 2840, baseType: !991, size: 32, align: 32, offset: 6368)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1376, file: !14, line: 2851, baseType: !2720, size: 64, align: 64, offset: 6400)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64, align: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!991, !1644, !2723, !964, !1647, !991, !991}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64, align: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!991, !1644, !964}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1376, file: !14, line: 2871, baseType: !2727, size: 64, align: 64, offset: 6464)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64, align: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!991, !1644, !2730, !964, !1647, !991}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64, align: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!991, !1644, !964, !991, !991}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1376, file: !14, line: 2878, baseType: !991, size: 32, align: 32, offset: 6528)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1376, file: !14, line: 2885, baseType: !991, size: 32, align: 32, offset: 6560)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1376, file: !14, line: 3005, baseType: !991, size: 32, align: 32, offset: 6592)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1376, file: !14, line: 3013, baseType: !910, size: 32, align: 32, offset: 6624)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1376, file: !14, line: 3020, baseType: !910, size: 32, align: 32, offset: 6656)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1376, file: !14, line: 3027, baseType: !910, size: 32, align: 32, offset: 6688)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1376, file: !14, line: 3037, baseType: !958, size: 64, align: 64, offset: 6720)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1376, file: !14, line: 3038, baseType: !991, size: 32, align: 32, offset: 6784)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1376, file: !14, line: 3050, baseType: !1355, size: 64, align: 64, offset: 6848)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1376, file: !14, line: 3065, baseType: !991, size: 32, align: 32, offset: 6912)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1376, file: !14, line: 3083, baseType: !991, size: 32, align: 32, offset: 6944)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1376, file: !14, line: 3092, baseType: !1003, size: 64, align: 32, offset: 6976)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1376, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1376, file: !14, line: 3106, baseType: !1003, size: 64, align: 32, offset: 7072)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1376, file: !14, line: 3113, baseType: !2748, size: 64, align: 64, offset: 7168)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64, align: 64)
!2749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2750)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !2752)
!2752 = !{!2753, !2754, !2755, !2756, !2757, !2758, !2761}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2751, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2751, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2751, file: !14, line: 720, baseType: !977, size: 64, align: 64, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2751, file: !14, line: 724, baseType: !977, size: 64, align: 64, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2751, file: !14, line: 728, baseType: !991, size: 32, align: 32, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2751, file: !14, line: 734, baseType: !2759, size: 64, align: 64, offset: 256)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64, align: 64)
!2760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2751, file: !14, line: 739, baseType: !2762, size: 64, align: 64, offset: 320)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64, align: 64)
!2763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1376, file: !14, line: 3129, baseType: !997, size: 64, align: 64, offset: 7232)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1376, file: !14, line: 3130, baseType: !997, size: 64, align: 64, offset: 7296)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1376, file: !14, line: 3131, baseType: !997, size: 64, align: 64, offset: 7360)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1376, file: !14, line: 3132, baseType: !997, size: 64, align: 64, offset: 7424)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1376, file: !14, line: 3139, baseType: !968, size: 64, align: 64, offset: 7488)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1376, file: !14, line: 3147, baseType: !991, size: 32, align: 32, offset: 7552)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1376, file: !14, line: 3165, baseType: !991, size: 32, align: 32, offset: 7584)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1376, file: !14, line: 3172, baseType: !991, size: 32, align: 32, offset: 7616)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1376, file: !14, line: 3180, baseType: !991, size: 32, align: 32, offset: 7648)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1376, file: !14, line: 3191, baseType: !965, size: 64, align: 64, offset: 7680)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1376, file: !14, line: 3199, baseType: !958, size: 64, align: 64, offset: 7744)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1376, file: !14, line: 3207, baseType: !968, size: 64, align: 64, offset: 7808)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1376, file: !14, line: 3214, baseType: !1111, size: 32, align: 32, offset: 7872)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1376, file: !14, line: 3224, baseType: !1514, size: 64, align: 64, offset: 7936)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1376, file: !14, line: 3225, baseType: !991, size: 32, align: 32, offset: 8000)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1376, file: !14, line: 3249, baseType: !1064, size: 64, align: 64, offset: 8064)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1376, file: !14, line: 3256, baseType: !991, size: 32, align: 32, offset: 8128)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1376, file: !14, line: 3271, baseType: !991, size: 32, align: 32, offset: 8160)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1376, file: !14, line: 3279, baseType: !997, size: 64, align: 64, offset: 8192)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1376, file: !14, line: 3301, baseType: !1064, size: 64, align: 64, offset: 8256)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1376, file: !14, line: 3310, baseType: !991, size: 32, align: 32, offset: 8320)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1376, file: !14, line: 3337, baseType: !991, size: 32, align: 32, offset: 8352)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1376, file: !14, line: 3351, baseType: !991, size: 32, align: 32, offset: 8384)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1376, file: !14, line: 3359, baseType: !991, size: 32, align: 32, offset: 8416)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1333, file: !14, line: 3535, baseType: !2789, size: 64, align: 64, offset: 1024)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64, align: 64)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!991, !1374, !2792}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64, align: 64)
!2793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1333, file: !14, line: 3541, baseType: !2795, size: 64, align: 64, offset: 1088)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64, align: 64)
!2796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2797)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !2798)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1390, line: 223, size: 128, align: 64, elements: !2799)
!2799 = !{!2800, !2801}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2798, file: !1390, line: 224, baseType: !1794, size: 64, align: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2798, file: !1390, line: 225, baseType: !1794, size: 64, align: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1333, file: !14, line: 3549, baseType: !2803, size: 64, align: 64, offset: 1152)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64, align: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{null, !1369}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1333, file: !14, line: 3551, baseType: !1371, size: 64, align: 64, offset: 1216)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1333, file: !14, line: 3552, baseType: !2808, size: 64, align: 64, offset: 1280)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64, align: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!991, !1374, !958, !991, !2811}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64, align: 64)
!2812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !2814)
!2814 = !{!2815, !2816, !2817, !2818, !2819, !2843}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2813, file: !14, line: 3921, baseType: !966, size: 16, align: 16)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !2813, file: !14, line: 3922, baseType: !1118, size: 32, align: 32, offset: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !2813, file: !14, line: 3923, baseType: !1118, size: 32, align: 32, offset: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !2813, file: !14, line: 3924, baseType: !1111, size: 32, align: 32, offset: 96)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !2813, file: !14, line: 3925, baseType: !2820, size: 64, align: 64, offset: 128)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64, align: 64)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64, align: 64)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !2823)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !2824)
!2824 = !{!2825, !2826, !2827, !2828, !2829, !2830, !2836, !2838, !2839, !2840, !2841, !2842}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2823, file: !14, line: 3886, baseType: !991, size: 32, align: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2823, file: !14, line: 3887, baseType: !991, size: 32, align: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2823, file: !14, line: 3888, baseType: !991, size: 32, align: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2823, file: !14, line: 3889, baseType: !991, size: 32, align: 32, offset: 96)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !2823, file: !14, line: 3890, baseType: !991, size: 32, align: 32, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !2823, file: !14, line: 3897, baseType: !2831, size: 768, align: 64, offset: 192)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !2832)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2832, file: !14, line: 3855, baseType: !1401, size: 512, align: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2832, file: !14, line: 3857, baseType: !1405, size: 256, align: 32, offset: 512)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2823, file: !14, line: 3903, baseType: !2837, size: 256, align: 64, offset: 960)
!2837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 256, align: 64, elements: !1485)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2823, file: !14, line: 3904, baseType: !1492, size: 128, align: 32, offset: 1216)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2823, file: !14, line: 3906, baseType: !919, size: 32, align: 32, offset: 1344)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2823, file: !14, line: 3908, baseType: !968, size: 64, align: 64, offset: 1408)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !2823, file: !14, line: 3915, baseType: !968, size: 64, align: 64, offset: 1472)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2823, file: !14, line: 3917, baseType: !991, size: 32, align: 32, offset: 1536)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2813, file: !14, line: 3926, baseType: !997, size: 64, align: 64, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1333, file: !14, line: 3564, baseType: !2845, size: 64, align: 64, offset: 1344)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64, align: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!991, !1374, !1502, !1645, !1647}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1333, file: !14, line: 3566, baseType: !2849, size: 64, align: 64, offset: 1408)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64, align: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!991, !1374, !964, !1647, !1502}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1333, file: !14, line: 3567, baseType: !1371, size: 64, align: 64, offset: 1472)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1333, file: !14, line: 3576, baseType: !2854, size: 64, align: 64, offset: 1536)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64, align: 64)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{!991, !1374, !1645}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1333, file: !14, line: 3577, baseType: !2858, size: 64, align: 64, offset: 1600)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64, align: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!991, !1374, !1502}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1333, file: !14, line: 3584, baseType: !1787, size: 64, align: 64, offset: 1664)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1333, file: !14, line: 3589, baseType: !2863, size: 64, align: 64, offset: 1728)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64, align: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !1374}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1333, file: !14, line: 3594, baseType: !991, size: 32, align: 32, offset: 1792)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1333, file: !14, line: 3600, baseType: !977, size: 64, align: 64, offset: 1856)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1333, file: !14, line: 3609, baseType: !2869, size: 64, align: 64, offset: 1920)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64, align: 64)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64, align: 64)
!2871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !2873, line: 29, size: 192, align: 64, elements: !2874)
!2873 = !DIFile(filename: "libavcodec/hwaccel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2874 = !{!2875, !2882}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "public", scope: !2872, file: !2873, line: 34, baseType: !2876, size: 96, align: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecHWConfig", file: !14, line: 3459, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfig", file: !14, line: 3442, size: 96, align: 32, elements: !2878)
!2878 = !{!2879, !2880, !2881}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2877, file: !14, line: 3446, baseType: !473, size: 32, align: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !2877, file: !14, line: 3451, baseType: !991, size: 32, align: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !2877, file: !14, line: 3458, baseType: !925, size: 32, align: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !2872, file: !2873, line: 39, baseType: !2883, size: 64, align: 64, offset: 128)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64, align: 64)
!2884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2885)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWAccel", file: !14, line: 3796, baseType: !1779)
!2886 = !DILocalVariable(name: "codec", arg: 1, scope: !1327, file: !1122, line: 94, type: !1330)
!2887 = !DILocation(line: 94, column: 40, scope: !1327)
!2888 = !DILocation(line: 96, column: 12, scope: !1327)
!2889 = !DILocation(line: 96, column: 18, scope: !1327)
!2890 = !DILocation(line: 96, column: 22, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !1327, file: !1122, discriminator: 1)
!2892 = !DILocation(line: 96, column: 29, scope: !2891)
!2893 = !DILocation(line: 96, column: 40, scope: !2891)
!2894 = !DILocation(line: 96, column: 43, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !1327, file: !1122, discriminator: 2)
!2896 = !DILocation(line: 96, column: 50, scope: !2895)
!2897 = !DILocation(line: 96, column: 58, scope: !2895)
!2898 = !DILocation(line: 96, column: 60, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !1327, file: !1122, discriminator: 3)
!2900 = !DILocation(line: 96, column: 67, scope: !2899)
!2901 = !DILocation(line: 96, column: 58, scope: !2899)
!2902 = !DILocation(line: 96, column: 18, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !1327, file: !1122, discriminator: 4)
!2904 = !DILocation(line: 96, column: 5, scope: !2903)
!2905 = distinct !DISubprogram(name: "av_codec_is_decoder", scope: !1122, file: !1122, line: 99, type: !1328, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!2906 = !DILocalVariable(name: "codec", arg: 1, scope: !2905, file: !1122, line: 99, type: !1330)
!2907 = !DILocation(line: 99, column: 40, scope: !2905)
!2908 = !DILocation(line: 101, column: 12, scope: !2905)
!2909 = !DILocation(line: 101, column: 18, scope: !2905)
!2910 = !DILocation(line: 101, column: 22, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !2905, file: !1122, discriminator: 1)
!2912 = !DILocation(line: 101, column: 29, scope: !2911)
!2913 = !DILocation(line: 101, column: 36, scope: !2911)
!2914 = !DILocation(line: 101, column: 39, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2905, file: !1122, discriminator: 2)
!2916 = !DILocation(line: 101, column: 46, scope: !2915)
!2917 = !DILocation(line: 101, column: 36, scope: !2915)
!2918 = !DILocation(line: 101, column: 18, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2905, file: !1122, discriminator: 3)
!2920 = !DILocation(line: 101, column: 5, scope: !2919)
!2921 = distinct !DISubprogram(name: "ff_set_dimensions", scope: !1122, file: !1122, line: 104, type: !2922, isLocal: false, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!991, !1374, !991, !991}
!2924 = !DILocalVariable(name: "s", arg: 1, scope: !2921, file: !1122, line: 104, type: !1374)
!2925 = !DILocation(line: 104, column: 39, scope: !2921)
!2926 = !DILocalVariable(name: "width", arg: 2, scope: !2921, file: !1122, line: 104, type: !991)
!2927 = !DILocation(line: 104, column: 46, scope: !2921)
!2928 = !DILocalVariable(name: "height", arg: 3, scope: !2921, file: !1122, line: 104, type: !991)
!2929 = !DILocation(line: 104, column: 57, scope: !2921)
!2930 = !DILocalVariable(name: "ret", scope: !2921, file: !1122, line: 106, type: !991)
!2931 = !DILocation(line: 106, column: 9, scope: !2921)
!2932 = !DILocation(line: 106, column: 36, scope: !2921)
!2933 = !DILocation(line: 106, column: 43, scope: !2921)
!2934 = !DILocation(line: 106, column: 51, scope: !2921)
!2935 = !DILocation(line: 106, column: 54, scope: !2921)
!2936 = !DILocation(line: 106, column: 86, scope: !2921)
!2937 = !DILocation(line: 106, column: 15, scope: !2921)
!2938 = !DILocation(line: 108, column: 9, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2921, file: !1122, line: 108, column: 9)
!2940 = !DILocation(line: 108, column: 13, scope: !2939)
!2941 = !DILocation(line: 108, column: 9, scope: !2921)
!2942 = !DILocation(line: 109, column: 24, scope: !2939)
!2943 = !DILocation(line: 109, column: 15, scope: !2939)
!2944 = !DILocation(line: 109, column: 9, scope: !2939)
!2945 = !DILocation(line: 111, column: 22, scope: !2921)
!2946 = !DILocation(line: 111, column: 5, scope: !2921)
!2947 = !DILocation(line: 111, column: 8, scope: !2921)
!2948 = !DILocation(line: 111, column: 20, scope: !2921)
!2949 = !DILocation(line: 112, column: 23, scope: !2921)
!2950 = !DILocation(line: 112, column: 5, scope: !2921)
!2951 = !DILocation(line: 112, column: 8, scope: !2921)
!2952 = !DILocation(line: 112, column: 21, scope: !2921)
!2953 = !DILocation(line: 113, column: 57, scope: !2921)
!2954 = !DILocation(line: 113, column: 55, scope: !2921)
!2955 = !DILocation(line: 113, column: 69, scope: !2921)
!2956 = !DILocation(line: 113, column: 72, scope: !2921)
!2957 = !DILocation(line: 113, column: 65, scope: !2921)
!2958 = !DILocation(line: 113, column: 52, scope: !2921)
!2959 = !DILocation(line: 113, column: 5, scope: !2921)
!2960 = !DILocation(line: 113, column: 8, scope: !2921)
!2961 = !DILocation(line: 113, column: 14, scope: !2921)
!2962 = !DILocation(line: 114, column: 58, scope: !2921)
!2963 = !DILocation(line: 114, column: 56, scope: !2921)
!2964 = !DILocation(line: 114, column: 71, scope: !2921)
!2965 = !DILocation(line: 114, column: 74, scope: !2921)
!2966 = !DILocation(line: 114, column: 67, scope: !2921)
!2967 = !DILocation(line: 114, column: 53, scope: !2921)
!2968 = !DILocation(line: 114, column: 5, scope: !2921)
!2969 = !DILocation(line: 114, column: 8, scope: !2921)
!2970 = !DILocation(line: 114, column: 15, scope: !2921)
!2971 = !DILocation(line: 116, column: 12, scope: !2921)
!2972 = !DILocation(line: 116, column: 5, scope: !2921)
!2973 = distinct !DISubprogram(name: "ff_set_sar", scope: !1122, file: !1122, line: 119, type: !2974, isLocal: false, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!991, !1374, !1003}
!2976 = !DILocalVariable(name: "avctx", arg: 1, scope: !2973, file: !1122, line: 119, type: !1374)
!2977 = !DILocation(line: 119, column: 32, scope: !2973)
!2978 = !DILocalVariable(name: "sar", arg: 2, scope: !2973, file: !1122, line: 119, type: !1003)
!2979 = !DILocation(line: 119, column: 50, scope: !2973)
!2980 = !DILocalVariable(name: "ret", scope: !2973, file: !1122, line: 121, type: !991)
!2981 = !DILocation(line: 121, column: 9, scope: !2973)
!2982 = !DILocation(line: 121, column: 34, scope: !2973)
!2983 = !DILocation(line: 121, column: 41, scope: !2973)
!2984 = !DILocation(line: 121, column: 48, scope: !2973)
!2985 = !DILocation(line: 121, column: 55, scope: !2973)
!2986 = !DILocation(line: 121, column: 15, scope: !2973)
!2987 = !DILocation(line: 123, column: 9, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2973, file: !1122, line: 123, column: 9)
!2989 = !DILocation(line: 123, column: 13, scope: !2988)
!2990 = !DILocation(line: 123, column: 9, scope: !2973)
!2991 = !DILocation(line: 124, column: 16, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2988, file: !1122, line: 123, column: 18)
!2993 = !DILocation(line: 125, column: 20, scope: !2992)
!2994 = !DILocation(line: 125, column: 29, scope: !2992)
!2995 = !DILocation(line: 124, column: 9, scope: !2992)
!2996 = !DILocation(line: 126, column: 9, scope: !2992)
!2997 = !DILocation(line: 126, column: 16, scope: !2992)
!2998 = !DILocation(line: 126, column: 50, scope: !2992)
!2999 = !DILocation(line: 126, column: 38, scope: !2992)
!3000 = !DILocation(line: 127, column: 16, scope: !2992)
!3001 = !DILocation(line: 127, column: 9, scope: !2992)
!3002 = !DILocation(line: 129, column: 9, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2988, file: !1122, line: 128, column: 12)
!3004 = !DILocation(line: 129, column: 16, scope: !3003)
!3005 = !DILocation(line: 129, column: 38, scope: !3003)
!3006 = !DILocation(line: 131, column: 5, scope: !2973)
!3007 = !DILocation(line: 132, column: 1, scope: !2973)
!3008 = distinct !DISubprogram(name: "ff_side_data_update_matrix_encoding", scope: !1122, file: !1122, line: 134, type: !3009, isLocal: false, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!991, !1396, !939}
!3011 = !DILocalVariable(name: "frame", arg: 1, scope: !3008, file: !1122, line: 134, type: !1396)
!3012 = !DILocation(line: 134, column: 50, scope: !3008)
!3013 = !DILocalVariable(name: "matrix_encoding", arg: 2, scope: !3008, file: !1122, line: 135, type: !939)
!3014 = !DILocation(line: 135, column: 63, scope: !3008)
!3015 = !DILocalVariable(name: "side_data", scope: !3008, file: !1122, line: 137, type: !1437)
!3016 = !DILocation(line: 137, column: 22, scope: !3008)
!3017 = !DILocalVariable(name: "data", scope: !3008, file: !1122, line: 138, type: !957)
!3018 = !DILocation(line: 138, column: 28, scope: !3008)
!3019 = !DILocation(line: 140, column: 40, scope: !3008)
!3020 = !DILocation(line: 140, column: 17, scope: !3008)
!3021 = !DILocation(line: 140, column: 15, scope: !3008)
!3022 = !DILocation(line: 141, column: 10, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3008, file: !1122, line: 141, column: 9)
!3024 = !DILocation(line: 141, column: 9, scope: !3008)
!3025 = !DILocation(line: 142, column: 44, scope: !3023)
!3026 = !DILocation(line: 142, column: 21, scope: !3023)
!3027 = !DILocation(line: 142, column: 19, scope: !3023)
!3028 = !DILocation(line: 142, column: 9, scope: !3023)
!3029 = !DILocation(line: 145, column: 10, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3008, file: !1122, line: 145, column: 9)
!3031 = !DILocation(line: 145, column: 9, scope: !3008)
!3032 = !DILocation(line: 146, column: 9, scope: !3030)
!3033 = !DILocation(line: 148, column: 36, scope: !3008)
!3034 = !DILocation(line: 148, column: 47, scope: !3008)
!3035 = !DILocation(line: 148, column: 12, scope: !3008)
!3036 = !DILocation(line: 148, column: 10, scope: !3008)
!3037 = !DILocation(line: 149, column: 13, scope: !3008)
!3038 = !DILocation(line: 149, column: 6, scope: !3008)
!3039 = !DILocation(line: 149, column: 11, scope: !3008)
!3040 = !DILocation(line: 151, column: 5, scope: !3008)
!3041 = !DILocation(line: 152, column: 1, scope: !3008)
!3042 = distinct !DISubprogram(name: "avcodec_align_dimensions2", scope: !1122, file: !1122, line: 154, type: !3043, isLocal: false, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{null, !1374, !1647, !1647, !1647}
!3045 = !DILocalVariable(name: "s", arg: 1, scope: !3042, file: !1122, line: 154, type: !1374)
!3046 = !DILocation(line: 154, column: 48, scope: !3042)
!3047 = !DILocalVariable(name: "width", arg: 2, scope: !3042, file: !1122, line: 154, type: !1647)
!3048 = !DILocation(line: 154, column: 56, scope: !3042)
!3049 = !DILocalVariable(name: "height", arg: 3, scope: !3042, file: !1122, line: 154, type: !1647)
!3050 = !DILocation(line: 154, column: 68, scope: !3042)
!3051 = !DILocalVariable(name: "linesize_align", arg: 4, scope: !3042, file: !1122, line: 155, type: !1647)
!3052 = !DILocation(line: 155, column: 36, scope: !3042)
!3053 = !DILocalVariable(name: "i", scope: !3042, file: !1122, line: 157, type: !991)
!3054 = !DILocation(line: 157, column: 9, scope: !3042)
!3055 = !DILocalVariable(name: "w_align", scope: !3042, file: !1122, line: 158, type: !991)
!3056 = !DILocation(line: 158, column: 9, scope: !3042)
!3057 = !DILocalVariable(name: "h_align", scope: !3042, file: !1122, line: 159, type: !991)
!3058 = !DILocation(line: 159, column: 9, scope: !3042)
!3059 = !DILocalVariable(name: "desc", scope: !3042, file: !1122, line: 160, type: !3060)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64, align: 64)
!3061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3062)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !3063, line: 123, baseType: !3064)
!3063 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !3063, line: 81, size: 1280, align: 64, elements: !3065)
!3065 = !{!3066, !3067, !3068, !3069, !3070, !3071, !3084}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3064, file: !3063, line: 82, baseType: !977, size: 64, align: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !3064, file: !3063, line: 83, baseType: !959, size: 8, align: 8, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !3064, file: !3063, line: 92, baseType: !959, size: 8, align: 8, offset: 72)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !3064, file: !3063, line: 101, baseType: !959, size: 8, align: 8, offset: 80)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3064, file: !3063, line: 106, baseType: !1355, size: 64, align: 64, offset: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !3064, file: !3063, line: 117, baseType: !3072, size: 1024, align: 32, offset: 192)
!3072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3073, size: 1024, align: 32, elements: !1485)
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !3063, line: 70, baseType: !3074)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !3063, line: 31, size: 256, align: 32, elements: !3075)
!3075 = !{!3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !3074, file: !3063, line: 35, baseType: !991, size: 32, align: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3074, file: !3063, line: 41, baseType: !991, size: 32, align: 32, offset: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3074, file: !3063, line: 47, baseType: !991, size: 32, align: 32, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3074, file: !3063, line: 53, baseType: !991, size: 32, align: 32, offset: 96)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3074, file: !3063, line: 58, baseType: !991, size: 32, align: 32, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !3074, file: !3063, line: 62, baseType: !991, size: 32, align: 32, offset: 160)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !3074, file: !3063, line: 65, baseType: !991, size: 32, align: 32, offset: 192)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !3074, file: !3063, line: 68, baseType: !991, size: 32, align: 32, offset: 224)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3064, file: !3063, line: 122, baseType: !977, size: 64, align: 64, offset: 1216)
!3085 = !DILocation(line: 160, column: 31, scope: !3042)
!3086 = !DILocation(line: 160, column: 58, scope: !3042)
!3087 = !DILocation(line: 160, column: 61, scope: !3042)
!3088 = !DILocation(line: 160, column: 38, scope: !3042)
!3089 = !DILocation(line: 162, column: 9, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3042, file: !1122, line: 162, column: 9)
!3091 = !DILocation(line: 162, column: 9, scope: !3042)
!3092 = !DILocation(line: 163, column: 24, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3090, file: !1122, line: 162, column: 15)
!3094 = !DILocation(line: 163, column: 30, scope: !3093)
!3095 = !DILocation(line: 163, column: 21, scope: !3093)
!3096 = !DILocation(line: 163, column: 17, scope: !3093)
!3097 = !DILocation(line: 164, column: 24, scope: !3093)
!3098 = !DILocation(line: 164, column: 30, scope: !3093)
!3099 = !DILocation(line: 164, column: 21, scope: !3093)
!3100 = !DILocation(line: 164, column: 17, scope: !3093)
!3101 = !DILocation(line: 165, column: 5, scope: !3093)
!3102 = !DILocation(line: 167, column: 13, scope: !3042)
!3103 = !DILocation(line: 167, column: 16, scope: !3042)
!3104 = !DILocation(line: 167, column: 5, scope: !3042)
!3105 = !DILocation(line: 257, column: 17, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3042, file: !1122, line: 167, column: 25)
!3107 = !DILocation(line: 258, column: 17, scope: !3106)
!3108 = !DILocation(line: 259, column: 9, scope: !3106)
!3109 = !DILocation(line: 263, column: 17, scope: !3106)
!3110 = !DILocation(line: 264, column: 17, scope: !3106)
!3111 = !DILocation(line: 265, column: 9, scope: !3106)
!3112 = !DILocation(line: 267, column: 13, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 267, column: 13)
!3114 = !DILocation(line: 267, column: 16, scope: !3113)
!3115 = !DILocation(line: 267, column: 25, scope: !3113)
!3116 = !DILocation(line: 267, column: 13, scope: !3106)
!3117 = !DILocation(line: 268, column: 21, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3113, file: !1122, line: 267, column: 46)
!3119 = !DILocation(line: 269, column: 21, scope: !3118)
!3120 = !DILocation(line: 270, column: 9, scope: !3118)
!3121 = !DILocation(line: 271, column: 9, scope: !3106)
!3122 = !DILocation(line: 273, column: 13, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 273, column: 13)
!3124 = !DILocation(line: 273, column: 16, scope: !3123)
!3125 = !DILocation(line: 273, column: 25, scope: !3123)
!3126 = !DILocation(line: 273, column: 13, scope: !3106)
!3127 = !DILocation(line: 274, column: 21, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3123, file: !1122, line: 273, column: 46)
!3129 = !DILocation(line: 275, column: 21, scope: !3128)
!3130 = !DILocation(line: 276, column: 9, scope: !3128)
!3131 = !DILocation(line: 277, column: 13, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 277, column: 13)
!3133 = !DILocation(line: 277, column: 16, scope: !3132)
!3134 = !DILocation(line: 277, column: 25, scope: !3132)
!3135 = !DILocation(line: 277, column: 13, scope: !3106)
!3136 = !DILocation(line: 278, column: 21, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3132, file: !1122, line: 277, column: 57)
!3138 = !DILocation(line: 279, column: 21, scope: !3137)
!3139 = !DILocation(line: 280, column: 9, scope: !3137)
!3140 = !DILocation(line: 281, column: 9, scope: !3106)
!3141 = !DILocation(line: 285, column: 13, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 285, column: 13)
!3143 = !DILocation(line: 285, column: 16, scope: !3142)
!3144 = !DILocation(line: 285, column: 25, scope: !3142)
!3145 = !DILocation(line: 285, column: 44, scope: !3142)
!3146 = !DILocation(line: 286, column: 13, scope: !3142)
!3147 = !DILocation(line: 286, column: 16, scope: !3142)
!3148 = !DILocation(line: 286, column: 25, scope: !3142)
!3149 = !DILocation(line: 285, column: 13, scope: !3150)
!3150 = !DILexicalBlockFile(scope: !3106, file: !1122, discriminator: 1)
!3151 = !DILocation(line: 287, column: 21, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3142, file: !1122, line: 286, column: 49)
!3153 = !DILocation(line: 288, column: 21, scope: !3152)
!3154 = !DILocation(line: 289, column: 9, scope: !3152)
!3155 = !DILocation(line: 290, column: 13, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 290, column: 13)
!3157 = !DILocation(line: 290, column: 16, scope: !3156)
!3158 = !DILocation(line: 290, column: 25, scope: !3156)
!3159 = !DILocation(line: 290, column: 43, scope: !3156)
!3160 = !DILocation(line: 291, column: 13, scope: !3156)
!3161 = !DILocation(line: 291, column: 16, scope: !3156)
!3162 = !DILocation(line: 291, column: 25, scope: !3156)
!3163 = !DILocation(line: 290, column: 13, scope: !3150)
!3164 = !DILocation(line: 292, column: 21, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3156, file: !1122, line: 291, column: 57)
!3166 = !DILocation(line: 293, column: 21, scope: !3165)
!3167 = !DILocation(line: 294, column: 9, scope: !3165)
!3168 = !DILocation(line: 295, column: 9, scope: !3106)
!3169 = !DILocation(line: 297, column: 14, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 297, column: 13)
!3171 = !DILocation(line: 297, column: 17, scope: !3170)
!3172 = !DILocation(line: 297, column: 26, scope: !3170)
!3173 = !DILocation(line: 297, column: 47, scope: !3170)
!3174 = !DILocation(line: 298, column: 14, scope: !3170)
!3175 = !DILocation(line: 298, column: 17, scope: !3170)
!3176 = !DILocation(line: 298, column: 26, scope: !3170)
!3177 = !DILocation(line: 297, column: 13, scope: !3150)
!3178 = !DILocation(line: 299, column: 21, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3170, file: !1122, line: 298, column: 48)
!3180 = !DILocation(line: 300, column: 21, scope: !3179)
!3181 = !DILocation(line: 301, column: 9, scope: !3179)
!3182 = !DILocation(line: 302, column: 9, scope: !3106)
!3183 = !DILocation(line: 304, column: 13, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3106, file: !1122, line: 304, column: 13)
!3185 = !DILocation(line: 304, column: 16, scope: !3184)
!3186 = !DILocation(line: 304, column: 25, scope: !3184)
!3187 = !DILocation(line: 304, column: 13, scope: !3106)
!3188 = !DILocation(line: 305, column: 21, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !1122, line: 304, column: 49)
!3190 = !DILocation(line: 306, column: 21, scope: !3189)
!3191 = !DILocation(line: 307, column: 9, scope: !3189)
!3192 = !DILocation(line: 308, column: 9, scope: !3106)
!3193 = !DILocation(line: 310, column: 9, scope: !3106)
!3194 = !DILocation(line: 313, column: 9, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3042, file: !1122, line: 313, column: 9)
!3196 = !DILocation(line: 313, column: 12, scope: !3195)
!3197 = !DILocation(line: 313, column: 21, scope: !3195)
!3198 = !DILocation(line: 313, column: 9, scope: !3042)
!3199 = !DILocation(line: 314, column: 21, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3195, file: !1122, line: 313, column: 46)
!3201 = !DILocation(line: 314, column: 30, scope: !3200)
!3202 = !DILocation(line: 314, column: 20, scope: !3200)
!3203 = !DILocation(line: 314, column: 39, scope: !3204)
!3204 = !DILexicalBlockFile(scope: !3200, file: !1122, discriminator: 1)
!3205 = !DILocation(line: 314, column: 20, scope: !3204)
!3206 = !DILocation(line: 314, column: 20, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !3200, file: !1122, discriminator: 2)
!3208 = !DILocation(line: 314, column: 20, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !3200, file: !1122, discriminator: 3)
!3210 = !DILocation(line: 314, column: 17, scope: !3209)
!3211 = !DILocation(line: 315, column: 5, scope: !3200)
!3212 = !DILocation(line: 317, column: 18, scope: !3042)
!3213 = !DILocation(line: 317, column: 17, scope: !3042)
!3214 = !DILocation(line: 317, column: 26, scope: !3042)
!3215 = !DILocation(line: 317, column: 24, scope: !3042)
!3216 = !DILocation(line: 317, column: 34, scope: !3042)
!3217 = !DILocation(line: 317, column: 41, scope: !3042)
!3218 = !DILocation(line: 317, column: 49, scope: !3042)
!3219 = !DILocation(line: 317, column: 38, scope: !3042)
!3220 = !DILocation(line: 317, column: 37, scope: !3042)
!3221 = !DILocation(line: 317, column: 6, scope: !3042)
!3222 = !DILocation(line: 317, column: 12, scope: !3042)
!3223 = !DILocation(line: 318, column: 19, scope: !3042)
!3224 = !DILocation(line: 318, column: 18, scope: !3042)
!3225 = !DILocation(line: 318, column: 28, scope: !3042)
!3226 = !DILocation(line: 318, column: 26, scope: !3042)
!3227 = !DILocation(line: 318, column: 36, scope: !3042)
!3228 = !DILocation(line: 318, column: 43, scope: !3042)
!3229 = !DILocation(line: 318, column: 51, scope: !3042)
!3230 = !DILocation(line: 318, column: 40, scope: !3042)
!3231 = !DILocation(line: 318, column: 39, scope: !3042)
!3232 = !DILocation(line: 318, column: 6, scope: !3042)
!3233 = !DILocation(line: 318, column: 13, scope: !3042)
!3234 = !DILocation(line: 319, column: 9, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3042, file: !1122, line: 319, column: 9)
!3236 = !DILocation(line: 319, column: 12, scope: !3235)
!3237 = !DILocation(line: 319, column: 21, scope: !3235)
!3238 = !DILocation(line: 319, column: 41, scope: !3235)
!3239 = !DILocation(line: 319, column: 44, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3235, file: !1122, discriminator: 1)
!3241 = !DILocation(line: 319, column: 47, scope: !3240)
!3242 = !DILocation(line: 319, column: 54, scope: !3240)
!3243 = !DILocation(line: 320, column: 9, scope: !3235)
!3244 = !DILocation(line: 320, column: 12, scope: !3235)
!3245 = !DILocation(line: 320, column: 21, scope: !3235)
!3246 = !DILocation(line: 320, column: 40, scope: !3235)
!3247 = !DILocation(line: 320, column: 43, scope: !3240)
!3248 = !DILocation(line: 320, column: 46, scope: !3240)
!3249 = !DILocation(line: 320, column: 55, scope: !3240)
!3250 = !DILocation(line: 320, column: 74, scope: !3240)
!3251 = !DILocation(line: 321, column: 9, scope: !3235)
!3252 = !DILocation(line: 321, column: 12, scope: !3235)
!3253 = !DILocation(line: 321, column: 21, scope: !3235)
!3254 = !DILocation(line: 321, column: 41, scope: !3235)
!3255 = !DILocation(line: 321, column: 44, scope: !3240)
!3256 = !DILocation(line: 321, column: 47, scope: !3240)
!3257 = !DILocation(line: 321, column: 56, scope: !3240)
!3258 = !DILocation(line: 319, column: 9, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3042, file: !1122, discriminator: 2)
!3260 = !DILocation(line: 325, column: 10, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3235, file: !1122, line: 322, column: 7)
!3262 = !DILocation(line: 325, column: 17, scope: !3261)
!3263 = !DILocation(line: 331, column: 21, scope: !3261)
!3264 = !DILocation(line: 331, column: 20, scope: !3261)
!3265 = !DILocation(line: 331, column: 28, scope: !3261)
!3266 = !DILocation(line: 331, column: 19, scope: !3261)
!3267 = !DILocation(line: 331, column: 39, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3261, file: !1122, discriminator: 1)
!3269 = !DILocation(line: 331, column: 38, scope: !3268)
!3270 = !DILocation(line: 331, column: 19, scope: !3268)
!3271 = !DILocation(line: 331, column: 19, scope: !3272)
!3272 = !DILexicalBlockFile(scope: !3261, file: !1122, discriminator: 2)
!3273 = !DILocation(line: 331, column: 19, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3261, file: !1122, discriminator: 3)
!3275 = !DILocation(line: 331, column: 10, scope: !3274)
!3276 = !DILocation(line: 331, column: 16, scope: !3274)
!3277 = !DILocation(line: 332, column: 5, scope: !3261)
!3278 = !DILocation(line: 334, column: 12, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3042, file: !1122, line: 334, column: 5)
!3280 = !DILocation(line: 334, column: 10, scope: !3279)
!3281 = !DILocation(line: 334, column: 17, scope: !3282)
!3282 = !DILexicalBlockFile(scope: !3283, file: !1122, discriminator: 1)
!3283 = distinct !DILexicalBlock(scope: !3279, file: !1122, line: 334, column: 5)
!3284 = !DILocation(line: 334, column: 19, scope: !3282)
!3285 = !DILocation(line: 334, column: 5, scope: !3282)
!3286 = !DILocation(line: 335, column: 24, scope: !3283)
!3287 = !DILocation(line: 335, column: 9, scope: !3283)
!3288 = !DILocation(line: 335, column: 27, scope: !3283)
!3289 = !DILocation(line: 334, column: 25, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3283, file: !1122, discriminator: 2)
!3291 = !DILocation(line: 334, column: 5, scope: !3290)
!3292 = distinct !{!3292, !3293}
!3293 = !DILocation(line: 334, column: 5, scope: !3042)
!3294 = !DILocation(line: 336, column: 1, scope: !3042)
!3295 = distinct !DISubprogram(name: "avcodec_align_dimensions", scope: !1122, file: !1122, line: 338, type: !3296, isLocal: false, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{null, !1374, !1647, !1647}
!3298 = !DILocalVariable(name: "s", arg: 1, scope: !3295, file: !1122, line: 338, type: !1374)
!3299 = !DILocation(line: 338, column: 47, scope: !3295)
!3300 = !DILocalVariable(name: "width", arg: 2, scope: !3295, file: !1122, line: 338, type: !1647)
!3301 = !DILocation(line: 338, column: 55, scope: !3295)
!3302 = !DILocalVariable(name: "height", arg: 3, scope: !3295, file: !1122, line: 338, type: !1647)
!3303 = !DILocation(line: 338, column: 67, scope: !3295)
!3304 = !DILocalVariable(name: "desc", scope: !3295, file: !1122, line: 340, type: !3060)
!3305 = !DILocation(line: 340, column: 31, scope: !3295)
!3306 = !DILocation(line: 340, column: 58, scope: !3295)
!3307 = !DILocation(line: 340, column: 61, scope: !3295)
!3308 = !DILocation(line: 340, column: 38, scope: !3295)
!3309 = !DILocalVariable(name: "chroma_shift", scope: !3295, file: !1122, line: 341, type: !991)
!3310 = !DILocation(line: 341, column: 9, scope: !3295)
!3311 = !DILocation(line: 341, column: 24, scope: !3295)
!3312 = !DILocation(line: 341, column: 30, scope: !3295)
!3313 = !DILocalVariable(name: "linesize_align", scope: !3295, file: !1122, line: 342, type: !1405)
!3314 = !DILocation(line: 342, column: 9, scope: !3295)
!3315 = !DILocalVariable(name: "align", scope: !3295, file: !1122, line: 343, type: !991)
!3316 = !DILocation(line: 343, column: 9, scope: !3295)
!3317 = !DILocation(line: 345, column: 31, scope: !3295)
!3318 = !DILocation(line: 345, column: 34, scope: !3295)
!3319 = !DILocation(line: 345, column: 41, scope: !3295)
!3320 = !DILocation(line: 345, column: 49, scope: !3295)
!3321 = !DILocation(line: 345, column: 5, scope: !3295)
!3322 = !DILocation(line: 346, column: 15, scope: !3295)
!3323 = !DILocation(line: 346, column: 37, scope: !3295)
!3324 = !DILocation(line: 346, column: 34, scope: !3295)
!3325 = !DILocation(line: 346, column: 14, scope: !3295)
!3326 = !DILocation(line: 346, column: 59, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 1)
!3328 = !DILocation(line: 346, column: 14, scope: !3327)
!3329 = !DILocation(line: 346, column: 81, scope: !3330)
!3330 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 2)
!3331 = !DILocation(line: 346, column: 14, scope: !3330)
!3332 = !DILocation(line: 346, column: 14, scope: !3333)
!3333 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 3)
!3334 = !DILocation(line: 346, column: 11, scope: !3333)
!3335 = !DILocation(line: 347, column: 27, scope: !3295)
!3336 = !DILocation(line: 347, column: 5, scope: !3295)
!3337 = !DILocation(line: 347, column: 23, scope: !3295)
!3338 = !DILocation(line: 348, column: 27, scope: !3295)
!3339 = !DILocation(line: 348, column: 5, scope: !3295)
!3340 = !DILocation(line: 348, column: 23, scope: !3295)
!3341 = !DILocation(line: 349, column: 17, scope: !3295)
!3342 = !DILocation(line: 349, column: 27, scope: !3295)
!3343 = !DILocation(line: 349, column: 24, scope: !3295)
!3344 = !DILocation(line: 349, column: 16, scope: !3295)
!3345 = !DILocation(line: 349, column: 49, scope: !3327)
!3346 = !DILocation(line: 349, column: 16, scope: !3327)
!3347 = !DILocation(line: 349, column: 59, scope: !3330)
!3348 = !DILocation(line: 349, column: 16, scope: !3330)
!3349 = !DILocation(line: 349, column: 16, scope: !3333)
!3350 = !DILocation(line: 349, column: 83, scope: !3333)
!3351 = !DILocation(line: 349, column: 80, scope: !3333)
!3352 = !DILocation(line: 349, column: 14, scope: !3333)
!3353 = !DILocation(line: 349, column: 107, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 4)
!3355 = !DILocation(line: 349, column: 117, scope: !3354)
!3356 = !DILocation(line: 349, column: 114, scope: !3354)
!3357 = !DILocation(line: 349, column: 106, scope: !3354)
!3358 = !DILocation(line: 349, column: 139, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 5)
!3360 = !DILocation(line: 349, column: 106, scope: !3359)
!3361 = !DILocation(line: 349, column: 149, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 6)
!3363 = !DILocation(line: 349, column: 106, scope: !3362)
!3364 = !DILocation(line: 349, column: 106, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 7)
!3366 = !DILocation(line: 349, column: 14, scope: !3365)
!3367 = !DILocation(line: 349, column: 173, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 8)
!3369 = !DILocation(line: 349, column: 14, scope: !3368)
!3370 = !DILocation(line: 349, column: 14, scope: !3371)
!3371 = !DILexicalBlockFile(scope: !3295, file: !1122, discriminator: 9)
!3372 = !DILocation(line: 349, column: 11, scope: !3371)
!3373 = !DILocation(line: 350, column: 18, scope: !3295)
!3374 = !DILocation(line: 350, column: 17, scope: !3295)
!3375 = !DILocation(line: 350, column: 26, scope: !3295)
!3376 = !DILocation(line: 350, column: 24, scope: !3295)
!3377 = !DILocation(line: 350, column: 32, scope: !3295)
!3378 = !DILocation(line: 350, column: 39, scope: !3295)
!3379 = !DILocation(line: 350, column: 45, scope: !3295)
!3380 = !DILocation(line: 350, column: 36, scope: !3295)
!3381 = !DILocation(line: 350, column: 35, scope: !3295)
!3382 = !DILocation(line: 350, column: 6, scope: !3295)
!3383 = !DILocation(line: 350, column: 12, scope: !3295)
!3384 = !DILocation(line: 351, column: 1, scope: !3295)
!3385 = distinct !DISubprogram(name: "avcodec_enum_to_chroma_pos", scope: !1122, file: !1122, line: 353, type: !3386, isLocal: false, isDefinition: true, scopeLine: 354, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!991, !1647, !1647, !834}
!3388 = !DILocalVariable(name: "xpos", arg: 1, scope: !3385, file: !1122, line: 353, type: !1647)
!3389 = !DILocation(line: 353, column: 37, scope: !3385)
!3390 = !DILocalVariable(name: "ypos", arg: 2, scope: !3385, file: !1122, line: 353, type: !1647)
!3391 = !DILocation(line: 353, column: 48, scope: !3385)
!3392 = !DILocalVariable(name: "pos", arg: 3, scope: !3385, file: !1122, line: 353, type: !834)
!3393 = !DILocation(line: 353, column: 76, scope: !3385)
!3394 = !DILocation(line: 355, column: 9, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3385, file: !1122, line: 355, column: 9)
!3396 = !DILocation(line: 355, column: 13, scope: !3395)
!3397 = !DILocation(line: 355, column: 41, scope: !3395)
!3398 = !DILocation(line: 355, column: 44, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !3395, file: !1122, discriminator: 1)
!3400 = !DILocation(line: 355, column: 48, scope: !3399)
!3401 = !DILocation(line: 355, column: 9, scope: !3399)
!3402 = !DILocation(line: 356, column: 9, scope: !3395)
!3403 = !DILocation(line: 357, column: 8, scope: !3385)
!3404 = !DILocation(line: 359, column: 14, scope: !3385)
!3405 = !DILocation(line: 359, column: 17, scope: !3385)
!3406 = !DILocation(line: 359, column: 21, scope: !3385)
!3407 = !DILocation(line: 359, column: 6, scope: !3385)
!3408 = !DILocation(line: 359, column: 11, scope: !3385)
!3409 = !DILocation(line: 360, column: 15, scope: !3385)
!3410 = !DILocation(line: 360, column: 18, scope: !3385)
!3411 = !DILocation(line: 360, column: 24, scope: !3385)
!3412 = !DILocation(line: 360, column: 27, scope: !3385)
!3413 = !DILocation(line: 360, column: 22, scope: !3385)
!3414 = !DILocation(line: 360, column: 32, scope: !3385)
!3415 = !DILocation(line: 360, column: 6, scope: !3385)
!3416 = !DILocation(line: 360, column: 11, scope: !3385)
!3417 = !DILocation(line: 362, column: 5, scope: !3385)
!3418 = !DILocation(line: 363, column: 1, scope: !3385)
!3419 = distinct !DISubprogram(name: "avcodec_chroma_pos_to_enum", scope: !1122, file: !1122, line: 365, type: !3420, isLocal: false, isDefinition: true, scopeLine: 366, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!834, !991, !991}
!3422 = !DILocalVariable(name: "xpos", arg: 1, scope: !3419, file: !1122, line: 365, type: !991)
!3423 = !DILocation(line: 365, column: 54, scope: !3419)
!3424 = !DILocalVariable(name: "ypos", arg: 2, scope: !3419, file: !1122, line: 365, type: !991)
!3425 = !DILocation(line: 365, column: 64, scope: !3419)
!3426 = !DILocalVariable(name: "pos", scope: !3419, file: !1122, line: 367, type: !991)
!3427 = !DILocation(line: 367, column: 9, scope: !3419)
!3428 = !DILocalVariable(name: "xout", scope: !3419, file: !1122, line: 367, type: !991)
!3429 = !DILocation(line: 367, column: 14, scope: !3419)
!3430 = !DILocalVariable(name: "yout", scope: !3419, file: !1122, line: 367, type: !991)
!3431 = !DILocation(line: 367, column: 20, scope: !3419)
!3432 = !DILocation(line: 369, column: 14, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3419, file: !1122, line: 369, column: 5)
!3434 = !DILocation(line: 369, column: 10, scope: !3433)
!3435 = !DILocation(line: 369, column: 46, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3437, file: !1122, discriminator: 1)
!3437 = distinct !DILexicalBlock(scope: !3433, file: !1122, line: 369, column: 5)
!3438 = !DILocation(line: 369, column: 50, scope: !3436)
!3439 = !DILocation(line: 369, column: 5, scope: !3436)
!3440 = !DILocation(line: 370, column: 54, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !1122, line: 370, column: 13)
!3442 = distinct !DILexicalBlock(scope: !3437, file: !1122, line: 369, column: 76)
!3443 = !DILocation(line: 370, column: 13, scope: !3441)
!3444 = !DILocation(line: 370, column: 59, scope: !3441)
!3445 = !DILocation(line: 370, column: 64, scope: !3441)
!3446 = !DILocation(line: 370, column: 67, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !3441, file: !1122, discriminator: 1)
!3448 = !DILocation(line: 370, column: 75, scope: !3447)
!3449 = !DILocation(line: 370, column: 72, scope: !3447)
!3450 = !DILocation(line: 370, column: 80, scope: !3447)
!3451 = !DILocation(line: 370, column: 83, scope: !3452)
!3452 = !DILexicalBlockFile(scope: !3441, file: !1122, discriminator: 2)
!3453 = !DILocation(line: 370, column: 91, scope: !3452)
!3454 = !DILocation(line: 370, column: 88, scope: !3452)
!3455 = !DILocation(line: 370, column: 13, scope: !3452)
!3456 = !DILocation(line: 371, column: 20, scope: !3441)
!3457 = !DILocation(line: 371, column: 13, scope: !3441)
!3458 = !DILocation(line: 372, column: 5, scope: !3442)
!3459 = !DILocation(line: 369, column: 72, scope: !3460)
!3460 = !DILexicalBlockFile(scope: !3437, file: !1122, discriminator: 2)
!3461 = !DILocation(line: 369, column: 5, scope: !3460)
!3462 = distinct !{!3462, !3463}
!3463 = !DILocation(line: 369, column: 5, scope: !3419)
!3464 = !DILocation(line: 373, column: 5, scope: !3419)
!3465 = !DILocation(line: 374, column: 1, scope: !3419)
!3466 = distinct !DISubprogram(name: "avcodec_fill_audio_frame", scope: !1122, file: !1122, line: 376, type: !3467, isLocal: false, isDefinition: true, scopeLine: 379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!991, !1396, !991, !673, !1794, !991, !991}
!3469 = !DILocalVariable(name: "frame", arg: 1, scope: !3466, file: !1122, line: 376, type: !1396)
!3470 = !DILocation(line: 376, column: 39, scope: !3466)
!3471 = !DILocalVariable(name: "nb_channels", arg: 2, scope: !3466, file: !1122, line: 376, type: !991)
!3472 = !DILocation(line: 376, column: 50, scope: !3466)
!3473 = !DILocalVariable(name: "sample_fmt", arg: 3, scope: !3466, file: !1122, line: 377, type: !673)
!3474 = !DILocation(line: 377, column: 50, scope: !3466)
!3475 = !DILocalVariable(name: "buf", arg: 4, scope: !3466, file: !1122, line: 377, type: !1794)
!3476 = !DILocation(line: 377, column: 77, scope: !3466)
!3477 = !DILocalVariable(name: "buf_size", arg: 5, scope: !3466, file: !1122, line: 378, type: !991)
!3478 = !DILocation(line: 378, column: 34, scope: !3466)
!3479 = !DILocalVariable(name: "align", arg: 6, scope: !3466, file: !1122, line: 378, type: !991)
!3480 = !DILocation(line: 378, column: 48, scope: !3466)
!3481 = !DILocalVariable(name: "ch", scope: !3466, file: !1122, line: 380, type: !991)
!3482 = !DILocation(line: 380, column: 9, scope: !3466)
!3483 = !DILocalVariable(name: "planar", scope: !3466, file: !1122, line: 380, type: !991)
!3484 = !DILocation(line: 380, column: 13, scope: !3466)
!3485 = !DILocalVariable(name: "needed_size", scope: !3466, file: !1122, line: 380, type: !991)
!3486 = !DILocation(line: 380, column: 21, scope: !3466)
!3487 = !DILocalVariable(name: "ret", scope: !3466, file: !1122, line: 380, type: !991)
!3488 = !DILocation(line: 380, column: 34, scope: !3466)
!3489 = !DILocation(line: 382, column: 51, scope: !3466)
!3490 = !DILocation(line: 383, column: 46, scope: !3466)
!3491 = !DILocation(line: 383, column: 53, scope: !3466)
!3492 = !DILocation(line: 383, column: 65, scope: !3466)
!3493 = !DILocation(line: 384, column: 46, scope: !3466)
!3494 = !DILocation(line: 382, column: 19, scope: !3466)
!3495 = !DILocation(line: 382, column: 17, scope: !3466)
!3496 = !DILocation(line: 385, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3466, file: !1122, line: 385, column: 9)
!3498 = !DILocation(line: 385, column: 20, scope: !3497)
!3499 = !DILocation(line: 385, column: 18, scope: !3497)
!3500 = !DILocation(line: 385, column: 9, scope: !3466)
!3501 = !DILocation(line: 386, column: 9, scope: !3497)
!3502 = !DILocation(line: 388, column: 38, scope: !3466)
!3503 = !DILocation(line: 388, column: 14, scope: !3466)
!3504 = !DILocation(line: 388, column: 12, scope: !3466)
!3505 = !DILocation(line: 389, column: 9, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3466, file: !1122, line: 389, column: 9)
!3507 = !DILocation(line: 389, column: 16, scope: !3506)
!3508 = !DILocation(line: 389, column: 19, scope: !3509)
!3509 = !DILexicalBlockFile(scope: !3506, file: !1122, discriminator: 1)
!3510 = !DILocation(line: 389, column: 31, scope: !3509)
!3511 = !DILocation(line: 389, column: 9, scope: !3509)
!3512 = !DILocation(line: 390, column: 55, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !1122, line: 390, column: 13)
!3514 = distinct !DILexicalBlock(scope: !3506, file: !1122, line: 389, column: 36)
!3515 = !DILocation(line: 390, column: 38, scope: !3513)
!3516 = !DILocation(line: 390, column: 15, scope: !3513)
!3517 = !DILocation(line: 390, column: 22, scope: !3513)
!3518 = !DILocation(line: 390, column: 36, scope: !3513)
!3519 = !DILocation(line: 390, column: 13, scope: !3514)
!3520 = !DILocation(line: 392, column: 13, scope: !3513)
!3521 = !DILocation(line: 393, column: 5, scope: !3514)
!3522 = !DILocation(line: 394, column: 32, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3506, file: !1122, line: 393, column: 12)
!3524 = !DILocation(line: 394, column: 39, scope: !3523)
!3525 = !DILocation(line: 394, column: 9, scope: !3523)
!3526 = !DILocation(line: 394, column: 16, scope: !3523)
!3527 = !DILocation(line: 394, column: 30, scope: !3523)
!3528 = !DILocation(line: 397, column: 39, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3466, file: !1122, line: 397, column: 9)
!3530 = !DILocation(line: 397, column: 46, scope: !3529)
!3531 = !DILocation(line: 397, column: 62, scope: !3529)
!3532 = !DILocation(line: 397, column: 69, scope: !3529)
!3533 = !DILocation(line: 398, column: 60, scope: !3529)
!3534 = !DILocation(line: 398, column: 50, scope: !3529)
!3535 = !DILocation(line: 398, column: 39, scope: !3529)
!3536 = !DILocation(line: 398, column: 65, scope: !3529)
!3537 = !DILocation(line: 398, column: 78, scope: !3529)
!3538 = !DILocation(line: 398, column: 85, scope: !3529)
!3539 = !DILocation(line: 399, column: 39, scope: !3529)
!3540 = !DILocation(line: 399, column: 51, scope: !3529)
!3541 = !DILocation(line: 397, column: 16, scope: !3529)
!3542 = !DILocation(line: 397, column: 14, scope: !3529)
!3543 = !DILocation(line: 399, column: 59, scope: !3529)
!3544 = !DILocation(line: 397, column: 9, scope: !3466)
!3545 = !DILocation(line: 400, column: 13, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !1122, line: 400, column: 13)
!3547 = distinct !DILexicalBlock(scope: !3529, file: !1122, line: 399, column: 64)
!3548 = !DILocation(line: 400, column: 20, scope: !3546)
!3549 = !DILocation(line: 400, column: 37, scope: !3546)
!3550 = !DILocation(line: 400, column: 44, scope: !3546)
!3551 = !DILocation(line: 400, column: 34, scope: !3546)
!3552 = !DILocation(line: 400, column: 13, scope: !3547)
!3553 = !DILocation(line: 401, column: 23, scope: !3546)
!3554 = !DILocation(line: 401, column: 30, scope: !3546)
!3555 = !DILocation(line: 401, column: 22, scope: !3546)
!3556 = !DILocation(line: 401, column: 13, scope: !3546)
!3557 = !DILocation(line: 402, column: 16, scope: !3547)
!3558 = !DILocation(line: 402, column: 9, scope: !3547)
!3559 = !DILocation(line: 404, column: 9, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3466, file: !1122, line: 404, column: 9)
!3561 = !DILocation(line: 404, column: 16, scope: !3560)
!3562 = !DILocation(line: 404, column: 33, scope: !3560)
!3563 = !DILocation(line: 404, column: 40, scope: !3560)
!3564 = !DILocation(line: 404, column: 30, scope: !3560)
!3565 = !DILocation(line: 404, column: 9, scope: !3466)
!3566 = !DILocation(line: 405, column: 17, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !1122, line: 405, column: 9)
!3568 = distinct !DILexicalBlock(scope: !3560, file: !1122, line: 404, column: 46)
!3569 = !DILocation(line: 405, column: 14, scope: !3567)
!3570 = !DILocation(line: 405, column: 22, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !3572, file: !1122, discriminator: 1)
!3572 = distinct !DILexicalBlock(scope: !3567, file: !1122, line: 405, column: 9)
!3573 = !DILocation(line: 405, column: 25, scope: !3571)
!3574 = !DILocation(line: 405, column: 9, scope: !3571)
!3575 = !DILocation(line: 406, column: 52, scope: !3572)
!3576 = !DILocation(line: 406, column: 31, scope: !3572)
!3577 = !DILocation(line: 406, column: 38, scope: !3572)
!3578 = !DILocation(line: 406, column: 25, scope: !3572)
!3579 = !DILocation(line: 406, column: 13, scope: !3572)
!3580 = !DILocation(line: 406, column: 20, scope: !3572)
!3581 = !DILocation(line: 406, column: 29, scope: !3572)
!3582 = !DILocation(line: 405, column: 32, scope: !3583)
!3583 = !DILexicalBlockFile(scope: !3572, file: !1122, discriminator: 2)
!3584 = !DILocation(line: 405, column: 9, scope: !3583)
!3585 = distinct !{!3585, !3586}
!3586 = !DILocation(line: 405, column: 9, scope: !3568)
!3587 = !DILocation(line: 407, column: 5, scope: !3568)
!3588 = !DILocation(line: 409, column: 12, scope: !3466)
!3589 = !DILocation(line: 409, column: 5, scope: !3466)
!3590 = !DILocation(line: 410, column: 1, scope: !3466)
!3591 = distinct !DISubprogram(name: "ff_color_frame", scope: !1122, file: !1122, line: 412, type: !3592, isLocal: false, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{null, !1396, !1347}
!3594 = !DILocalVariable(name: "frame", arg: 1, scope: !3591, file: !1122, line: 412, type: !1396)
!3595 = !DILocation(line: 412, column: 30, scope: !3591)
!3596 = !DILocalVariable(name: "c", arg: 2, scope: !3591, file: !1122, line: 412, type: !1347)
!3597 = !DILocation(line: 412, column: 47, scope: !3591)
!3598 = !DILocalVariable(name: "desc", scope: !3591, file: !1122, line: 414, type: !3060)
!3599 = !DILocation(line: 414, column: 31, scope: !3591)
!3600 = !DILocation(line: 414, column: 58, scope: !3591)
!3601 = !DILocation(line: 414, column: 65, scope: !3591)
!3602 = !DILocation(line: 414, column: 38, scope: !3591)
!3603 = !DILocalVariable(name: "p", scope: !3591, file: !1122, line: 415, type: !991)
!3604 = !DILocation(line: 415, column: 9, scope: !3591)
!3605 = !DILocalVariable(name: "y", scope: !3591, file: !1122, line: 415, type: !991)
!3606 = !DILocation(line: 415, column: 12, scope: !3591)
!3607 = !DILocalVariable(name: "x", scope: !3591, file: !1122, line: 415, type: !991)
!3608 = !DILocation(line: 415, column: 15, scope: !3591)
!3609 = !DILocation(line: 417, column: 5, scope: !3591)
!3610 = distinct !{!3610, !3609}
!3611 = !DILocation(line: 417, column: 16, scope: !3612)
!3612 = !DILexicalBlockFile(scope: !3613, file: !1122, discriminator: 1)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !1122, line: 417, column: 14)
!3614 = distinct !DILexicalBlock(scope: !3591, file: !1122, line: 417, column: 8)
!3615 = !DILocation(line: 417, column: 22, scope: !3612)
!3616 = !DILocation(line: 417, column: 28, scope: !3612)
!3617 = !DILocation(line: 417, column: 14, scope: !3612)
!3618 = !DILocation(line: 417, column: 43, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3620, file: !1122, discriminator: 2)
!3620 = distinct !DILexicalBlock(scope: !3613, file: !1122, line: 417, column: 41)
!3621 = !DILocation(line: 417, column: 97, scope: !3622)
!3622 = !DILexicalBlockFile(scope: !3619, file: !1122, discriminator: 4)
!3623 = !DILocation(line: 417, column: 97, scope: !3619)
!3624 = !DILocation(line: 417, column: 108, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3614, file: !1122, discriminator: 3)
!3626 = !DILocation(line: 419, column: 12, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3591, file: !1122, line: 419, column: 5)
!3628 = !DILocation(line: 419, column: 10, scope: !3627)
!3629 = !DILocation(line: 419, column: 17, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3631, file: !1122, discriminator: 1)
!3631 = distinct !DILexicalBlock(scope: !3627, file: !1122, line: 419, column: 5)
!3632 = !DILocation(line: 419, column: 19, scope: !3630)
!3633 = !DILocation(line: 419, column: 25, scope: !3630)
!3634 = !DILocation(line: 419, column: 18, scope: !3630)
!3635 = !DILocation(line: 419, column: 5, scope: !3630)
!3636 = !DILocalVariable(name: "dst", scope: !3637, file: !1122, line: 420, type: !958)
!3637 = distinct !DILexicalBlock(scope: !3631, file: !1122, line: 419, column: 45)
!3638 = !DILocation(line: 420, column: 18, scope: !3637)
!3639 = !DILocation(line: 420, column: 36, scope: !3637)
!3640 = !DILocation(line: 420, column: 24, scope: !3637)
!3641 = !DILocation(line: 420, column: 31, scope: !3637)
!3642 = !DILocalVariable(name: "is_chroma", scope: !3637, file: !1122, line: 421, type: !991)
!3643 = !DILocation(line: 421, column: 13, scope: !3637)
!3644 = !DILocation(line: 421, column: 25, scope: !3637)
!3645 = !DILocation(line: 421, column: 27, scope: !3637)
!3646 = !DILocation(line: 421, column: 32, scope: !3637)
!3647 = !DILocation(line: 421, column: 35, scope: !3648)
!3648 = !DILexicalBlockFile(scope: !3637, file: !1122, discriminator: 1)
!3649 = !DILocation(line: 421, column: 37, scope: !3648)
!3650 = !DILocation(line: 421, column: 32, scope: !3648)
!3651 = !DILocation(line: 421, column: 32, scope: !3652)
!3652 = !DILexicalBlockFile(scope: !3637, file: !1122, discriminator: 2)
!3653 = !DILocation(line: 421, column: 13, scope: !3652)
!3654 = !DILocalVariable(name: "bytes", scope: !3637, file: !1122, line: 422, type: !991)
!3655 = !DILocation(line: 422, column: 13, scope: !3637)
!3656 = !DILocation(line: 422, column: 21, scope: !3637)
!3657 = !DILocation(line: 422, column: 84, scope: !3648)
!3658 = !DILocation(line: 422, column: 91, scope: !3648)
!3659 = !DILocation(line: 422, column: 82, scope: !3648)
!3660 = !DILocation(line: 422, column: 103, scope: !3648)
!3661 = !DILocation(line: 422, column: 109, scope: !3648)
!3662 = !DILocation(line: 422, column: 102, scope: !3648)
!3663 = !DILocation(line: 422, column: 99, scope: !3648)
!3664 = !DILocation(line: 422, column: 79, scope: !3648)
!3665 = !DILocation(line: 422, column: 21, scope: !3648)
!3666 = !DILocation(line: 422, column: 205, scope: !3652)
!3667 = !DILocation(line: 422, column: 212, scope: !3652)
!3668 = !DILocation(line: 422, column: 21, scope: !3652)
!3669 = !DILocation(line: 422, column: 21, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3637, file: !1122, discriminator: 3)
!3671 = !DILocation(line: 422, column: 13, scope: !3670)
!3672 = !DILocalVariable(name: "height", scope: !3637, file: !1122, line: 423, type: !991)
!3673 = !DILocation(line: 423, column: 13, scope: !3637)
!3674 = !DILocation(line: 423, column: 22, scope: !3637)
!3675 = !DILocation(line: 423, column: 85, scope: !3648)
!3676 = !DILocation(line: 423, column: 92, scope: !3648)
!3677 = !DILocation(line: 423, column: 83, scope: !3648)
!3678 = !DILocation(line: 423, column: 105, scope: !3648)
!3679 = !DILocation(line: 423, column: 111, scope: !3648)
!3680 = !DILocation(line: 423, column: 104, scope: !3648)
!3681 = !DILocation(line: 423, column: 101, scope: !3648)
!3682 = !DILocation(line: 423, column: 80, scope: !3648)
!3683 = !DILocation(line: 423, column: 22, scope: !3648)
!3684 = !DILocation(line: 423, column: 208, scope: !3652)
!3685 = !DILocation(line: 423, column: 215, scope: !3652)
!3686 = !DILocation(line: 423, column: 22, scope: !3652)
!3687 = !DILocation(line: 423, column: 22, scope: !3670)
!3688 = !DILocation(line: 423, column: 13, scope: !3670)
!3689 = !DILocation(line: 424, column: 16, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3637, file: !1122, line: 424, column: 9)
!3691 = !DILocation(line: 424, column: 14, scope: !3690)
!3692 = !DILocation(line: 424, column: 21, scope: !3693)
!3693 = !DILexicalBlockFile(scope: !3694, file: !1122, discriminator: 1)
!3694 = distinct !DILexicalBlock(scope: !3690, file: !1122, line: 424, column: 9)
!3695 = !DILocation(line: 424, column: 25, scope: !3693)
!3696 = !DILocation(line: 424, column: 23, scope: !3693)
!3697 = !DILocation(line: 424, column: 9, scope: !3693)
!3698 = !DILocation(line: 425, column: 17, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !1122, line: 425, column: 17)
!3700 = distinct !DILexicalBlock(scope: !3694, file: !1122, line: 424, column: 38)
!3701 = !DILocation(line: 425, column: 23, scope: !3699)
!3702 = !DILocation(line: 425, column: 31, scope: !3699)
!3703 = !DILocation(line: 425, column: 37, scope: !3699)
!3704 = !DILocation(line: 425, column: 17, scope: !3700)
!3705 = !DILocation(line: 426, column: 24, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !1122, line: 426, column: 17)
!3707 = distinct !DILexicalBlock(scope: !3699, file: !1122, line: 425, column: 43)
!3708 = !DILocation(line: 426, column: 22, scope: !3706)
!3709 = !DILocation(line: 426, column: 29, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3711, file: !1122, discriminator: 1)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !1122, line: 426, column: 17)
!3712 = !DILocation(line: 426, column: 31, scope: !3710)
!3713 = !DILocation(line: 426, column: 30, scope: !3710)
!3714 = !DILocation(line: 426, column: 17, scope: !3710)
!3715 = !DILocation(line: 427, column: 45, scope: !3711)
!3716 = !DILocation(line: 427, column: 43, scope: !3711)
!3717 = !DILocation(line: 427, column: 38, scope: !3711)
!3718 = !DILocation(line: 427, column: 21, scope: !3711)
!3719 = !DILocation(line: 427, column: 33, scope: !3711)
!3720 = !DILocation(line: 427, column: 41, scope: !3711)
!3721 = !DILocation(line: 426, column: 39, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !3711, file: !1122, discriminator: 2)
!3723 = !DILocation(line: 426, column: 17, scope: !3722)
!3724 = distinct !{!3724, !3725}
!3725 = !DILocation(line: 426, column: 17, scope: !3707)
!3726 = !DILocation(line: 428, column: 13, scope: !3707)
!3727 = !DILocation(line: 429, column: 24, scope: !3699)
!3728 = !DILocation(line: 429, column: 31, scope: !3699)
!3729 = !DILocation(line: 429, column: 29, scope: !3699)
!3730 = !DILocation(line: 429, column: 17, scope: !3699)
!3731 = !DILocation(line: 429, column: 35, scope: !3699)
!3732 = !DILocation(line: 430, column: 36, scope: !3700)
!3733 = !DILocation(line: 430, column: 20, scope: !3700)
!3734 = !DILocation(line: 430, column: 27, scope: !3700)
!3735 = !DILocation(line: 430, column: 17, scope: !3700)
!3736 = !DILocation(line: 431, column: 9, scope: !3700)
!3737 = !DILocation(line: 424, column: 34, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !3694, file: !1122, discriminator: 2)
!3739 = !DILocation(line: 424, column: 9, scope: !3738)
!3740 = distinct !{!3740, !3741}
!3741 = !DILocation(line: 424, column: 9, scope: !3637)
!3742 = !DILocation(line: 432, column: 5, scope: !3637)
!3743 = !DILocation(line: 419, column: 41, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3631, file: !1122, discriminator: 2)
!3745 = !DILocation(line: 419, column: 5, scope: !3744)
!3746 = distinct !{!3746, !3747}
!3747 = !DILocation(line: 419, column: 5, scope: !3591)
!3748 = !DILocation(line: 433, column: 1, scope: !3591)
!3749 = distinct !DISubprogram(name: "avcodec_default_execute", scope: !1122, file: !1122, line: 435, type: !3750, isLocal: false, isDefinition: true, scopeLine: 436, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!991, !1374, !3752, !964, !1647, !991, !991}
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64, align: 64)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!991, !1374, !964}
!3755 = !DILocalVariable(name: "c", arg: 1, scope: !3749, file: !1122, line: 435, type: !1374)
!3756 = !DILocation(line: 435, column: 45, scope: !3749)
!3757 = !DILocalVariable(name: "func", arg: 2, scope: !3749, file: !1122, line: 435, type: !3752)
!3758 = !DILocation(line: 435, column: 54, scope: !3749)
!3759 = !DILocalVariable(name: "arg", arg: 3, scope: !3749, file: !1122, line: 435, type: !964)
!3760 = !DILocation(line: 435, column: 99, scope: !3749)
!3761 = !DILocalVariable(name: "ret", arg: 4, scope: !3749, file: !1122, line: 435, type: !1647)
!3762 = !DILocation(line: 435, column: 109, scope: !3749)
!3763 = !DILocalVariable(name: "count", arg: 5, scope: !3749, file: !1122, line: 435, type: !991)
!3764 = !DILocation(line: 435, column: 118, scope: !3749)
!3765 = !DILocalVariable(name: "size", arg: 6, scope: !3749, file: !1122, line: 435, type: !991)
!3766 = !DILocation(line: 435, column: 129, scope: !3749)
!3767 = !DILocalVariable(name: "i", scope: !3749, file: !1122, line: 437, type: !991)
!3768 = !DILocation(line: 437, column: 9, scope: !3749)
!3769 = !DILocation(line: 439, column: 12, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3749, file: !1122, line: 439, column: 5)
!3771 = !DILocation(line: 439, column: 10, scope: !3770)
!3772 = !DILocation(line: 439, column: 17, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3774, file: !1122, discriminator: 1)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !1122, line: 439, column: 5)
!3775 = !DILocation(line: 439, column: 21, scope: !3773)
!3776 = !DILocation(line: 439, column: 19, scope: !3773)
!3777 = !DILocation(line: 439, column: 5, scope: !3773)
!3778 = !DILocalVariable(name: "r", scope: !3779, file: !1122, line: 440, type: !991)
!3779 = distinct !DILexicalBlock(scope: !3774, file: !1122, line: 439, column: 33)
!3780 = !DILocation(line: 440, column: 13, scope: !3779)
!3781 = !DILocation(line: 440, column: 17, scope: !3779)
!3782 = !DILocation(line: 440, column: 22, scope: !3779)
!3783 = !DILocation(line: 440, column: 33, scope: !3779)
!3784 = !DILocation(line: 440, column: 39, scope: !3779)
!3785 = !DILocation(line: 440, column: 43, scope: !3779)
!3786 = !DILocation(line: 440, column: 41, scope: !3779)
!3787 = !DILocation(line: 440, column: 37, scope: !3779)
!3788 = !DILocation(line: 441, column: 13, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3779, file: !1122, line: 441, column: 13)
!3790 = !DILocation(line: 441, column: 13, scope: !3779)
!3791 = !DILocation(line: 442, column: 22, scope: !3789)
!3792 = !DILocation(line: 442, column: 17, scope: !3789)
!3793 = !DILocation(line: 442, column: 13, scope: !3789)
!3794 = !DILocation(line: 442, column: 20, scope: !3789)
!3795 = !DILocation(line: 443, column: 5, scope: !3779)
!3796 = !DILocation(line: 439, column: 29, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !3774, file: !1122, discriminator: 2)
!3798 = !DILocation(line: 439, column: 5, scope: !3797)
!3799 = distinct !{!3799, !3800}
!3800 = !DILocation(line: 439, column: 5, scope: !3749)
!3801 = !DILocation(line: 46, column: 9, scope: !3802, inlinedAt: !3806)
!3802 = distinct !DISubprogram(name: "emms_c", scope: !3803, file: !3803, line: 37, type: !3804, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3803 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3804 = !DISubroutineType(types: !3805)
!3805 = !{null}
!3806 = distinct !DILocation(line: 444, column: 5, scope: !3749)
!3807 = !{i32 100597}
!3808 = !DILocation(line: 445, column: 5, scope: !3749)
!3809 = distinct !DISubprogram(name: "avcodec_default_execute2", scope: !1122, file: !1122, line: 448, type: !3810, isLocal: false, isDefinition: true, scopeLine: 449, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!991, !1374, !3812, !964, !1647, !991}
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64, align: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!991, !1374, !964, !991, !991}
!3815 = !DILocalVariable(name: "c", arg: 1, scope: !3809, file: !1122, line: 448, type: !1374)
!3816 = !DILocation(line: 448, column: 46, scope: !3809)
!3817 = !DILocalVariable(name: "func", arg: 2, scope: !3809, file: !1122, line: 448, type: !3812)
!3818 = !DILocation(line: 448, column: 55, scope: !3809)
!3819 = !DILocalVariable(name: "arg", arg: 3, scope: !3809, file: !1122, line: 448, type: !964)
!3820 = !DILocation(line: 448, column: 125, scope: !3809)
!3821 = !DILocalVariable(name: "ret", arg: 4, scope: !3809, file: !1122, line: 448, type: !1647)
!3822 = !DILocation(line: 448, column: 135, scope: !3809)
!3823 = !DILocalVariable(name: "count", arg: 5, scope: !3809, file: !1122, line: 448, type: !991)
!3824 = !DILocation(line: 448, column: 144, scope: !3809)
!3825 = !DILocalVariable(name: "i", scope: !3809, file: !1122, line: 450, type: !991)
!3826 = !DILocation(line: 450, column: 9, scope: !3809)
!3827 = !DILocation(line: 452, column: 12, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3809, file: !1122, line: 452, column: 5)
!3829 = !DILocation(line: 452, column: 10, scope: !3828)
!3830 = !DILocation(line: 452, column: 17, scope: !3831)
!3831 = !DILexicalBlockFile(scope: !3832, file: !1122, discriminator: 1)
!3832 = distinct !DILexicalBlock(scope: !3828, file: !1122, line: 452, column: 5)
!3833 = !DILocation(line: 452, column: 21, scope: !3831)
!3834 = !DILocation(line: 452, column: 19, scope: !3831)
!3835 = !DILocation(line: 452, column: 5, scope: !3831)
!3836 = !DILocalVariable(name: "r", scope: !3837, file: !1122, line: 453, type: !991)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !1122, line: 452, column: 33)
!3838 = !DILocation(line: 453, column: 13, scope: !3837)
!3839 = !DILocation(line: 453, column: 17, scope: !3837)
!3840 = !DILocation(line: 453, column: 22, scope: !3837)
!3841 = !DILocation(line: 453, column: 25, scope: !3837)
!3842 = !DILocation(line: 453, column: 30, scope: !3837)
!3843 = !DILocation(line: 454, column: 13, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3837, file: !1122, line: 454, column: 13)
!3845 = !DILocation(line: 454, column: 13, scope: !3837)
!3846 = !DILocation(line: 455, column: 22, scope: !3844)
!3847 = !DILocation(line: 455, column: 17, scope: !3844)
!3848 = !DILocation(line: 455, column: 13, scope: !3844)
!3849 = !DILocation(line: 455, column: 20, scope: !3844)
!3850 = !DILocation(line: 456, column: 5, scope: !3837)
!3851 = !DILocation(line: 452, column: 29, scope: !3852)
!3852 = !DILexicalBlockFile(scope: !3832, file: !1122, discriminator: 2)
!3853 = !DILocation(line: 452, column: 5, scope: !3852)
!3854 = distinct !{!3854, !3855}
!3855 = !DILocation(line: 452, column: 5, scope: !3809)
!3856 = !DILocation(line: 46, column: 9, scope: !3802, inlinedAt: !3857)
!3857 = distinct !DILocation(line: 457, column: 5, scope: !3809)
!3858 = !DILocation(line: 458, column: 5, scope: !3809)
!3859 = distinct !DISubprogram(name: "avpriv_find_pix_fmt", scope: !1122, file: !1122, line: 461, type: !3860, isLocal: false, isDefinition: true, scopeLine: 463, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!473, !3862, !1111}
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64, align: 64)
!3863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3864)
!3864 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelFormatTag", file: !3865, line: 37, baseType: !3866)
!3865 = !DIFile(filename: "libavcodec/raw.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixelFormatTag", file: !3865, line: 34, size: 64, align: 32, elements: !3867)
!3867 = !{!3868, !3869}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !3866, file: !3865, line: 35, baseType: !473, size: 32, align: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !3866, file: !3865, line: 36, baseType: !1111, size: 32, align: 32, offset: 32)
!3870 = !DILocalVariable(name: "tags", arg: 1, scope: !3859, file: !1122, line: 461, type: !3862)
!3871 = !DILocation(line: 461, column: 62, scope: !3859)
!3872 = !DILocalVariable(name: "fourcc", arg: 2, scope: !3859, file: !1122, line: 462, type: !1111)
!3873 = !DILocation(line: 462, column: 53, scope: !3859)
!3874 = !DILocation(line: 464, column: 5, scope: !3859)
!3875 = !DILocation(line: 464, column: 12, scope: !3876)
!3876 = !DILexicalBlockFile(scope: !3859, file: !1122, discriminator: 1)
!3877 = !DILocation(line: 464, column: 18, scope: !3876)
!3878 = !DILocation(line: 464, column: 26, scope: !3876)
!3879 = !DILocation(line: 464, column: 5, scope: !3876)
!3880 = !DILocation(line: 465, column: 13, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !1122, line: 465, column: 13)
!3882 = distinct !DILexicalBlock(scope: !3859, file: !1122, line: 464, column: 32)
!3883 = !DILocation(line: 465, column: 19, scope: !3881)
!3884 = !DILocation(line: 465, column: 29, scope: !3881)
!3885 = !DILocation(line: 465, column: 26, scope: !3881)
!3886 = !DILocation(line: 465, column: 13, scope: !3882)
!3887 = !DILocation(line: 466, column: 20, scope: !3881)
!3888 = !DILocation(line: 466, column: 26, scope: !3881)
!3889 = !DILocation(line: 466, column: 13, scope: !3881)
!3890 = !DILocation(line: 467, column: 13, scope: !3882)
!3891 = !DILocation(line: 464, column: 5, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3859, file: !1122, discriminator: 2)
!3893 = distinct !{!3893, !3874}
!3894 = !DILocation(line: 469, column: 5, scope: !3859)
!3895 = !DILocation(line: 470, column: 1, scope: !3859)
!3896 = distinct !DISubprogram(name: "av_codec_get_pkt_timebase", scope: !1122, file: !1122, line: 473, type: !3897, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!1003, !2792}
!3899 = !DILocalVariable(name: "s", arg: 1, scope: !3896, file: !1122, line: 473, type: !2792)
!3900 = !DILocation(line: 473, column: 60, scope: !3896)
!3901 = !DILocation(line: 473, column: 72, scope: !3896)
!3902 = !DILocation(line: 473, column: 75, scope: !3896)
!3903 = !DILocation(line: 473, column: 65, scope: !3896)
!3904 = distinct !DISubprogram(name: "av_codec_set_pkt_timebase", scope: !1122, file: !1122, line: 473, type: !3905, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !1374, !1003}
!3907 = !DILocalVariable(name: "s", arg: 1, scope: !3904, file: !1122, line: 473, type: !1374)
!3908 = !DILocation(line: 473, column: 138, scope: !3904)
!3909 = !DILocalVariable(name: "v", arg: 2, scope: !3904, file: !1122, line: 473, type: !1003)
!3910 = !DILocation(line: 473, column: 152, scope: !3904)
!3911 = !DILocation(line: 473, column: 157, scope: !3904)
!3912 = !DILocation(line: 473, column: 160, scope: !3904)
!3913 = !DILocation(line: 473, column: 175, scope: !3904)
!3914 = !DILocation(line: 473, column: 178, scope: !3904)
!3915 = distinct !DISubprogram(name: "av_codec_get_codec_descriptor", scope: !1122, file: !1122, line: 474, type: !3916, isLocal: false, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!2748, !2792}
!3918 = !DILocalVariable(name: "s", arg: 1, scope: !3915, file: !1122, line: 474, type: !2792)
!3919 = !DILocation(line: 474, column: 79, scope: !3915)
!3920 = !DILocation(line: 474, column: 91, scope: !3915)
!3921 = !DILocation(line: 474, column: 94, scope: !3915)
!3922 = !DILocation(line: 474, column: 84, scope: !3915)
!3923 = distinct !DISubprogram(name: "av_codec_set_codec_descriptor", scope: !1122, file: !1122, line: 474, type: !3924, isLocal: false, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !1374, !2748}
!3926 = !DILocalVariable(name: "s", arg: 1, scope: !3923, file: !1122, line: 474, type: !1374)
!3927 = !DILocation(line: 474, column: 165, scope: !3923)
!3928 = !DILocalVariable(name: "v", arg: 2, scope: !3923, file: !1122, line: 474, type: !2748)
!3929 = !DILocation(line: 474, column: 194, scope: !3923)
!3930 = !DILocation(line: 474, column: 221, scope: !3923)
!3931 = !DILocation(line: 474, column: 199, scope: !3923)
!3932 = !DILocation(line: 474, column: 202, scope: !3923)
!3933 = !DILocation(line: 474, column: 219, scope: !3923)
!3934 = !DILocation(line: 474, column: 224, scope: !3923)
!3935 = distinct !DISubprogram(name: "av_codec_get_lowres", scope: !1122, file: !1122, line: 475, type: !3936, isLocal: false, isDefinition: true, scopeLine: 475, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!991, !2792}
!3938 = !DILocalVariable(name: "s", arg: 1, scope: !3935, file: !1122, line: 475, type: !2792)
!3939 = !DILocation(line: 475, column: 47, scope: !3935)
!3940 = !DILocation(line: 475, column: 59, scope: !3935)
!3941 = !DILocation(line: 475, column: 62, scope: !3935)
!3942 = !DILocation(line: 475, column: 52, scope: !3935)
!3943 = distinct !DISubprogram(name: "av_codec_set_lowres", scope: !1122, file: !1122, line: 475, type: !3944, isLocal: false, isDefinition: true, scopeLine: 475, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !1374, !991}
!3946 = !DILocalVariable(name: "s", arg: 1, scope: !3943, file: !1122, line: 475, type: !1374)
!3947 = !DILocation(line: 475, column: 113, scope: !3943)
!3948 = !DILocalVariable(name: "v", arg: 2, scope: !3943, file: !1122, line: 475, type: !991)
!3949 = !DILocation(line: 475, column: 120, scope: !3943)
!3950 = !DILocation(line: 475, column: 137, scope: !3943)
!3951 = !DILocation(line: 475, column: 125, scope: !3943)
!3952 = !DILocation(line: 475, column: 128, scope: !3943)
!3953 = !DILocation(line: 475, column: 135, scope: !3943)
!3954 = !DILocation(line: 475, column: 140, scope: !3943)
!3955 = distinct !DISubprogram(name: "av_codec_get_seek_preroll", scope: !1122, file: !1122, line: 476, type: !3936, isLocal: false, isDefinition: true, scopeLine: 476, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3956 = !DILocalVariable(name: "s", arg: 1, scope: !3955, file: !1122, line: 476, type: !2792)
!3957 = !DILocation(line: 476, column: 53, scope: !3955)
!3958 = !DILocation(line: 476, column: 65, scope: !3955)
!3959 = !DILocation(line: 476, column: 68, scope: !3955)
!3960 = !DILocation(line: 476, column: 58, scope: !3955)
!3961 = distinct !DISubprogram(name: "av_codec_set_seek_preroll", scope: !1122, file: !1122, line: 476, type: !3944, isLocal: false, isDefinition: true, scopeLine: 476, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3962 = !DILocalVariable(name: "s", arg: 1, scope: !3961, file: !1122, line: 476, type: !1374)
!3963 = !DILocation(line: 476, column: 131, scope: !3961)
!3964 = !DILocalVariable(name: "v", arg: 2, scope: !3961, file: !1122, line: 476, type: !991)
!3965 = !DILocation(line: 476, column: 138, scope: !3961)
!3966 = !DILocation(line: 476, column: 161, scope: !3961)
!3967 = !DILocation(line: 476, column: 143, scope: !3961)
!3968 = !DILocation(line: 476, column: 146, scope: !3961)
!3969 = !DILocation(line: 476, column: 159, scope: !3961)
!3970 = !DILocation(line: 476, column: 164, scope: !3961)
!3971 = distinct !DISubprogram(name: "av_codec_get_chroma_intra_matrix", scope: !1122, file: !1122, line: 477, type: !3972, isLocal: false, isDefinition: true, scopeLine: 477, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!965, !2792}
!3974 = !DILocalVariable(name: "s", arg: 1, scope: !3971, file: !1122, line: 477, type: !2792)
!3975 = !DILocation(line: 477, column: 66, scope: !3971)
!3976 = !DILocation(line: 477, column: 78, scope: !3971)
!3977 = !DILocation(line: 477, column: 81, scope: !3971)
!3978 = !DILocation(line: 477, column: 71, scope: !3971)
!3979 = distinct !DISubprogram(name: "av_codec_set_chroma_intra_matrix", scope: !1122, file: !1122, line: 477, type: !3980, isLocal: false, isDefinition: true, scopeLine: 477, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{null, !1374, !965}
!3982 = !DILocalVariable(name: "s", arg: 1, scope: !3979, file: !1122, line: 477, type: !1374)
!3983 = !DILocation(line: 477, column: 158, scope: !3979)
!3984 = !DILocalVariable(name: "v", arg: 2, scope: !3979, file: !1122, line: 477, type: !965)
!3985 = !DILocation(line: 477, column: 171, scope: !3979)
!3986 = !DILocation(line: 477, column: 201, scope: !3979)
!3987 = !DILocation(line: 477, column: 176, scope: !3979)
!3988 = !DILocation(line: 477, column: 179, scope: !3979)
!3989 = !DILocation(line: 477, column: 199, scope: !3979)
!3990 = !DILocation(line: 477, column: 204, scope: !3979)
!3991 = distinct !DISubprogram(name: "av_codec_get_codec_properties", scope: !1122, file: !1122, line: 479, type: !3992, isLocal: false, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!1111, !2792}
!3994 = !DILocalVariable(name: "codec", arg: 1, scope: !3991, file: !1122, line: 479, type: !2792)
!3995 = !DILocation(line: 479, column: 62, scope: !3991)
!3996 = !DILocation(line: 481, column: 12, scope: !3991)
!3997 = !DILocation(line: 481, column: 19, scope: !3991)
!3998 = !DILocation(line: 481, column: 5, scope: !3991)
!3999 = distinct !DISubprogram(name: "av_codec_get_max_lowres", scope: !1122, file: !1122, line: 484, type: !1328, isLocal: false, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4000 = !DILocalVariable(name: "codec", arg: 1, scope: !3999, file: !1122, line: 484, type: !1330)
!4001 = !DILocation(line: 484, column: 44, scope: !3999)
!4002 = !DILocation(line: 486, column: 12, scope: !3999)
!4003 = !DILocation(line: 486, column: 19, scope: !3999)
!4004 = !DILocation(line: 486, column: 5, scope: !3999)
!4005 = distinct !DISubprogram(name: "avpriv_codec_get_cap_skip_frame_fill_param", scope: !1122, file: !1122, line: 490, type: !1328, isLocal: false, isDefinition: true, scopeLine: 490, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4006 = !DILocalVariable(name: "codec", arg: 1, scope: !4005, file: !1122, line: 490, type: !1330)
!4007 = !DILocation(line: 490, column: 63, scope: !4005)
!4008 = !DILocation(line: 491, column: 15, scope: !4005)
!4009 = !DILocation(line: 491, column: 22, scope: !4005)
!4010 = !DILocation(line: 491, column: 36, scope: !4005)
!4011 = !DILocation(line: 491, column: 13, scope: !4005)
!4012 = !DILocation(line: 491, column: 12, scope: !4005)
!4013 = !DILocation(line: 491, column: 5, scope: !4005)
!4014 = distinct !DISubprogram(name: "ff_codec_open2_recursive", scope: !1122, file: !1122, line: 530, type: !4015, isLocal: false, isDefinition: true, scopeLine: 531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!991, !1374, !1330, !4017}
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64, align: 64)
!4018 = !DILocalVariable(name: "avctx", arg: 1, scope: !4014, file: !1122, line: 530, type: !1374)
!4019 = !DILocation(line: 530, column: 46, scope: !4014)
!4020 = !DILocalVariable(name: "codec", arg: 2, scope: !4014, file: !1122, line: 530, type: !1330)
!4021 = !DILocation(line: 530, column: 68, scope: !4014)
!4022 = !DILocalVariable(name: "options", arg: 3, scope: !4014, file: !1122, line: 530, type: !4017)
!4023 = !DILocation(line: 530, column: 90, scope: !4014)
!4024 = !DILocalVariable(name: "ret", scope: !4014, file: !1122, line: 532, type: !991)
!4025 = !DILocation(line: 532, column: 9, scope: !4014)
!4026 = !DILocation(line: 534, column: 23, scope: !4014)
!4027 = !DILocation(line: 534, column: 5, scope: !4014)
!4028 = !DILocation(line: 536, column: 25, scope: !4014)
!4029 = !DILocation(line: 536, column: 32, scope: !4014)
!4030 = !DILocation(line: 536, column: 39, scope: !4014)
!4031 = !DILocation(line: 536, column: 11, scope: !4014)
!4032 = !DILocation(line: 536, column: 9, scope: !4014)
!4033 = !DILocation(line: 538, column: 21, scope: !4014)
!4034 = !DILocation(line: 538, column: 28, scope: !4014)
!4035 = !DILocation(line: 538, column: 5, scope: !4014)
!4036 = !DILocation(line: 539, column: 12, scope: !4014)
!4037 = !DILocation(line: 539, column: 5, scope: !4014)
!4038 = distinct !DISubprogram(name: "ff_unlock_avcodec", scope: !1122, file: !1122, line: 524, type: !4039, isLocal: true, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{null, !1330}
!4041 = !DILocalVariable(name: "codec", arg: 1, scope: !4038, file: !1122, line: 524, type: !1330)
!4042 = !DILocation(line: 524, column: 46, scope: !4038)
!4043 = !DILocation(line: 526, column: 11, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4038, file: !1122, line: 526, column: 9)
!4045 = !DILocation(line: 526, column: 18, scope: !4044)
!4046 = !DILocation(line: 526, column: 32, scope: !4044)
!4047 = !DILocation(line: 526, column: 44, scope: !4044)
!4048 = !DILocation(line: 526, column: 47, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !4044, file: !1122, discriminator: 1)
!4050 = !DILocation(line: 526, column: 54, scope: !4049)
!4051 = !DILocation(line: 526, column: 9, scope: !4049)
!4052 = !DILocation(line: 527, column: 9, scope: !4044)
!4053 = !DILocation(line: 528, column: 1, scope: !4038)
!4054 = distinct !DISubprogram(name: "avcodec_open2", scope: !1122, file: !1122, line: 542, type: !4015, isLocal: false, isDefinition: true, scopeLine: 543, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4055 = !DILocalVariable(name: "q", arg: 1, scope: !4056, file: !1004, line: 159, type: !1003)
!4056 = distinct !DISubprogram(name: "av_inv_q", scope: !1004, file: !1004, line: 159, type: !4057, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!1003, !1003}
!4059 = !DILocation(line: 159, column: 77, scope: !4056, inlinedAt: !4060)
!4060 = distinct !DILocation(line: 1005, column: 32, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4062, file: !1122, discriminator: 1)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !1122, line: 1004, column: 13)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !1122, line: 942, column: 44)
!4064 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 942, column: 9)
!4065 = !DILocalVariable(name: "r", scope: !4056, file: !1004, line: 161, type: !1003)
!4066 = !DILocation(line: 161, column: 16, scope: !4056, inlinedAt: !4060)
!4067 = !DILocalVariable(name: "avctx", arg: 1, scope: !4054, file: !1122, line: 542, type: !1374)
!4068 = !DILocation(line: 542, column: 35, scope: !4054)
!4069 = !DILocalVariable(name: "codec", arg: 2, scope: !4054, file: !1122, line: 542, type: !1330)
!4070 = !DILocation(line: 542, column: 57, scope: !4054)
!4071 = !DILocalVariable(name: "options", arg: 3, scope: !4054, file: !1122, line: 542, type: !4017)
!4072 = !DILocation(line: 542, column: 79, scope: !4054)
!4073 = !DILocalVariable(name: "ret", scope: !4054, file: !1122, line: 544, type: !991)
!4074 = !DILocation(line: 544, column: 9, scope: !4054)
!4075 = !DILocalVariable(name: "tmp", scope: !4054, file: !1122, line: 545, type: !1445)
!4076 = !DILocation(line: 545, column: 19, scope: !4054)
!4077 = !DILocalVariable(name: "pixdesc", scope: !4054, file: !1122, line: 546, type: !3060)
!4078 = !DILocation(line: 546, column: 31, scope: !4054)
!4079 = !DILocation(line: 548, column: 25, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 548, column: 9)
!4081 = !DILocation(line: 548, column: 9, scope: !4080)
!4082 = !DILocation(line: 548, column: 9, scope: !4054)
!4083 = !DILocation(line: 549, column: 9, scope: !4080)
!4084 = !DILocation(line: 551, column: 11, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 551, column: 9)
!4086 = !DILocation(line: 551, column: 17, scope: !4085)
!4087 = !DILocation(line: 551, column: 21, scope: !4088)
!4088 = !DILexicalBlockFile(scope: !4085, file: !1122, discriminator: 1)
!4089 = !DILocation(line: 551, column: 28, scope: !4088)
!4090 = !DILocation(line: 551, column: 9, scope: !4088)
!4091 = !DILocation(line: 552, column: 16, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4085, file: !1122, line: 551, column: 36)
!4093 = !DILocation(line: 552, column: 9, scope: !4092)
!4094 = !DILocation(line: 553, column: 9, scope: !4092)
!4095 = !DILocation(line: 555, column: 10, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 555, column: 9)
!4097 = !DILocation(line: 555, column: 16, scope: !4096)
!4098 = !DILocation(line: 555, column: 19, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !4096, file: !1122, discriminator: 1)
!4100 = !DILocation(line: 555, column: 26, scope: !4099)
!4101 = !DILocation(line: 555, column: 32, scope: !4099)
!4102 = !DILocation(line: 555, column: 35, scope: !4103)
!4103 = !DILexicalBlockFile(scope: !4096, file: !1122, discriminator: 2)
!4104 = !DILocation(line: 555, column: 44, scope: !4103)
!4105 = !DILocation(line: 555, column: 51, scope: !4103)
!4106 = !DILocation(line: 555, column: 41, scope: !4103)
!4107 = !DILocation(line: 555, column: 9, scope: !4103)
!4108 = !DILocation(line: 556, column: 16, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4096, file: !1122, line: 555, column: 59)
!4110 = !DILocation(line: 557, column: 75, scope: !4109)
!4111 = !DILocation(line: 557, column: 82, scope: !4109)
!4112 = !DILocation(line: 557, column: 89, scope: !4109)
!4113 = !DILocation(line: 557, column: 95, scope: !4109)
!4114 = !DILocation(line: 557, column: 102, scope: !4109)
!4115 = !DILocation(line: 556, column: 9, scope: !4109)
!4116 = !DILocation(line: 558, column: 9, scope: !4109)
!4117 = !DILocation(line: 560, column: 10, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 560, column: 9)
!4119 = !DILocation(line: 560, column: 9, scope: !4054)
!4120 = !DILocation(line: 561, column: 17, scope: !4118)
!4121 = !DILocation(line: 561, column: 24, scope: !4118)
!4122 = !DILocation(line: 561, column: 15, scope: !4118)
!4123 = !DILocation(line: 561, column: 9, scope: !4118)
!4124 = !DILocation(line: 563, column: 9, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 563, column: 9)
!4126 = !DILocation(line: 563, column: 16, scope: !4125)
!4127 = !DILocation(line: 563, column: 31, scope: !4125)
!4128 = !DILocation(line: 563, column: 35, scope: !4125)
!4129 = !DILocation(line: 563, column: 38, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !4125, file: !1122, discriminator: 1)
!4131 = !DILocation(line: 563, column: 45, scope: !4130)
!4132 = !DILocation(line: 563, column: 60, scope: !4130)
!4133 = !DILocation(line: 563, column: 9, scope: !4130)
!4134 = !DILocation(line: 564, column: 9, scope: !4125)
!4135 = !DILocation(line: 566, column: 9, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 566, column: 9)
!4137 = !DILocation(line: 566, column: 9, scope: !4054)
!4138 = !DILocation(line: 567, column: 29, scope: !4136)
!4139 = !DILocation(line: 567, column: 28, scope: !4136)
!4140 = !DILocation(line: 567, column: 9, scope: !4136)
!4141 = !DILocation(line: 569, column: 21, scope: !4054)
!4142 = !DILocation(line: 569, column: 28, scope: !4054)
!4143 = !DILocation(line: 569, column: 5, scope: !4054)
!4144 = !DILocation(line: 571, column: 23, scope: !4054)
!4145 = !DILocation(line: 571, column: 5, scope: !4054)
!4146 = !DILocation(line: 571, column: 12, scope: !4054)
!4147 = !DILocation(line: 571, column: 21, scope: !4054)
!4148 = !DILocation(line: 572, column: 10, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 572, column: 9)
!4150 = !DILocation(line: 572, column: 17, scope: !4149)
!4151 = !DILocation(line: 572, column: 9, scope: !4054)
!4152 = !DILocation(line: 573, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !1122, line: 572, column: 27)
!4154 = !DILocation(line: 574, column: 9, scope: !4153)
!4155 = !DILocation(line: 577, column: 29, scope: !4054)
!4156 = !DILocation(line: 577, column: 5, scope: !4054)
!4157 = !DILocation(line: 577, column: 12, scope: !4054)
!4158 = !DILocation(line: 577, column: 22, scope: !4054)
!4159 = !DILocation(line: 577, column: 27, scope: !4054)
!4160 = !DILocation(line: 578, column: 10, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 578, column: 9)
!4162 = !DILocation(line: 578, column: 17, scope: !4161)
!4163 = !DILocation(line: 578, column: 27, scope: !4161)
!4164 = !DILocation(line: 578, column: 9, scope: !4054)
!4165 = !DILocation(line: 579, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4161, file: !1122, line: 578, column: 33)
!4167 = !DILocation(line: 580, column: 9, scope: !4166)
!4168 = !DILocation(line: 583, column: 32, scope: !4054)
!4169 = !DILocation(line: 583, column: 5, scope: !4054)
!4170 = !DILocation(line: 583, column: 12, scope: !4054)
!4171 = !DILocation(line: 583, column: 22, scope: !4054)
!4172 = !DILocation(line: 583, column: 30, scope: !4054)
!4173 = !DILocation(line: 584, column: 10, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 584, column: 9)
!4175 = !DILocation(line: 584, column: 17, scope: !4174)
!4176 = !DILocation(line: 584, column: 27, scope: !4174)
!4177 = !DILocation(line: 584, column: 9, scope: !4054)
!4178 = !DILocation(line: 585, column: 13, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !1122, line: 584, column: 36)
!4180 = !DILocation(line: 586, column: 9, scope: !4179)
!4181 = !DILocation(line: 589, column: 44, scope: !4054)
!4182 = !DILocation(line: 589, column: 5, scope: !4054)
!4183 = !DILocation(line: 589, column: 12, scope: !4054)
!4184 = !DILocation(line: 589, column: 22, scope: !4054)
!4185 = !DILocation(line: 589, column: 42, scope: !4054)
!4186 = !DILocation(line: 590, column: 10, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 590, column: 9)
!4188 = !DILocation(line: 590, column: 17, scope: !4187)
!4189 = !DILocation(line: 590, column: 27, scope: !4187)
!4190 = !DILocation(line: 590, column: 9, scope: !4054)
!4191 = !DILocation(line: 591, column: 13, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !1122, line: 590, column: 48)
!4193 = !DILocation(line: 592, column: 9, scope: !4192)
!4194 = !DILocation(line: 595, column: 37, scope: !4054)
!4195 = !DILocation(line: 595, column: 5, scope: !4054)
!4196 = !DILocation(line: 595, column: 12, scope: !4054)
!4197 = !DILocation(line: 595, column: 22, scope: !4054)
!4198 = !DILocation(line: 595, column: 35, scope: !4054)
!4199 = !DILocation(line: 596, column: 10, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 596, column: 9)
!4201 = !DILocation(line: 596, column: 17, scope: !4200)
!4202 = !DILocation(line: 596, column: 27, scope: !4200)
!4203 = !DILocation(line: 596, column: 9, scope: !4054)
!4204 = !DILocation(line: 597, column: 13, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !1122, line: 596, column: 41)
!4206 = !DILocation(line: 598, column: 9, scope: !4205)
!4207 = !DILocation(line: 601, column: 35, scope: !4054)
!4208 = !DILocation(line: 601, column: 5, scope: !4054)
!4209 = !DILocation(line: 601, column: 12, scope: !4054)
!4210 = !DILocation(line: 601, column: 22, scope: !4054)
!4211 = !DILocation(line: 601, column: 33, scope: !4054)
!4212 = !DILocation(line: 602, column: 10, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 602, column: 9)
!4214 = !DILocation(line: 602, column: 17, scope: !4213)
!4215 = !DILocation(line: 602, column: 27, scope: !4213)
!4216 = !DILocation(line: 602, column: 9, scope: !4054)
!4217 = !DILocation(line: 603, column: 13, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !1122, line: 602, column: 39)
!4219 = !DILocation(line: 604, column: 9, scope: !4218)
!4220 = !DILocation(line: 607, column: 34, scope: !4054)
!4221 = !DILocation(line: 607, column: 5, scope: !4054)
!4222 = !DILocation(line: 607, column: 12, scope: !4054)
!4223 = !DILocation(line: 607, column: 22, scope: !4054)
!4224 = !DILocation(line: 607, column: 25, scope: !4054)
!4225 = !DILocation(line: 607, column: 32, scope: !4054)
!4226 = !DILocation(line: 608, column: 10, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 608, column: 9)
!4228 = !DILocation(line: 608, column: 17, scope: !4227)
!4229 = !DILocation(line: 608, column: 27, scope: !4227)
!4230 = !DILocation(line: 608, column: 30, scope: !4227)
!4231 = !DILocation(line: 608, column: 9, scope: !4054)
!4232 = !DILocation(line: 609, column: 13, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !1122, line: 608, column: 38)
!4234 = !DILocation(line: 610, column: 9, scope: !4233)
!4235 = !DILocation(line: 613, column: 39, scope: !4054)
!4236 = !DILocation(line: 613, column: 5, scope: !4054)
!4237 = !DILocation(line: 613, column: 12, scope: !4054)
!4238 = !DILocation(line: 613, column: 22, scope: !4054)
!4239 = !DILocation(line: 613, column: 37, scope: !4054)
!4240 = !DILocation(line: 614, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 614, column: 9)
!4242 = !DILocation(line: 614, column: 17, scope: !4241)
!4243 = !DILocation(line: 614, column: 27, scope: !4241)
!4244 = !DILocation(line: 614, column: 9, scope: !4054)
!4245 = !DILocation(line: 615, column: 13, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !1122, line: 614, column: 43)
!4247 = !DILocation(line: 616, column: 9, scope: !4246)
!4248 = !DILocation(line: 619, column: 5, scope: !4054)
!4249 = !DILocation(line: 619, column: 12, scope: !4054)
!4250 = !DILocation(line: 619, column: 22, scope: !4054)
!4251 = !DILocation(line: 619, column: 46, scope: !4054)
!4252 = !DILocation(line: 621, column: 9, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 621, column: 9)
!4254 = !DILocation(line: 621, column: 16, scope: !4253)
!4255 = !DILocation(line: 621, column: 31, scope: !4253)
!4256 = !DILocation(line: 621, column: 9, scope: !4054)
!4257 = !DILocation(line: 622, column: 14, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !1122, line: 622, column: 13)
!4259 = distinct !DILexicalBlock(scope: !4253, file: !1122, line: 621, column: 36)
!4260 = !DILocation(line: 622, column: 21, scope: !4258)
!4261 = !DILocation(line: 622, column: 13, scope: !4259)
!4262 = !DILocation(line: 623, column: 43, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4258, file: !1122, line: 622, column: 32)
!4264 = !DILocation(line: 623, column: 50, scope: !4263)
!4265 = !DILocation(line: 623, column: 32, scope: !4263)
!4266 = !DILocation(line: 623, column: 13, scope: !4263)
!4267 = !DILocation(line: 623, column: 20, scope: !4263)
!4268 = !DILocation(line: 623, column: 30, scope: !4263)
!4269 = !DILocation(line: 624, column: 18, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4263, file: !1122, line: 624, column: 17)
!4271 = !DILocation(line: 624, column: 25, scope: !4270)
!4272 = !DILocation(line: 624, column: 17, scope: !4263)
!4273 = !DILocation(line: 625, column: 21, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !1122, line: 624, column: 36)
!4275 = !DILocation(line: 626, column: 17, scope: !4274)
!4276 = !DILocation(line: 628, column: 17, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4263, file: !1122, line: 628, column: 17)
!4278 = !DILocation(line: 628, column: 24, scope: !4277)
!4279 = !DILocation(line: 628, column: 17, scope: !4263)
!4280 = !DILocation(line: 629, column: 55, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4277, file: !1122, line: 628, column: 36)
!4282 = !DILocation(line: 629, column: 62, scope: !4281)
!4283 = !DILocation(line: 629, column: 36, scope: !4281)
!4284 = !DILocation(line: 629, column: 43, scope: !4281)
!4285 = !DILocation(line: 629, column: 18, scope: !4281)
!4286 = !DILocation(line: 629, column: 53, scope: !4281)
!4287 = !DILocation(line: 630, column: 37, scope: !4281)
!4288 = !DILocation(line: 630, column: 44, scope: !4281)
!4289 = !DILocation(line: 630, column: 17, scope: !4281)
!4290 = !DILocation(line: 631, column: 13, scope: !4281)
!4291 = !DILocation(line: 632, column: 9, scope: !4263)
!4292 = !DILocation(line: 633, column: 13, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4259, file: !1122, line: 633, column: 13)
!4294 = !DILocation(line: 633, column: 20, scope: !4293)
!4295 = !DILocation(line: 633, column: 31, scope: !4293)
!4296 = !DILocation(line: 633, column: 57, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !4293, file: !1122, discriminator: 1)
!4298 = !DILocation(line: 633, column: 64, scope: !4297)
!4299 = !DILocation(line: 633, column: 41, scope: !4297)
!4300 = !DILocation(line: 633, column: 39, scope: !4297)
!4301 = !DILocation(line: 633, column: 82, scope: !4297)
!4302 = !DILocation(line: 633, column: 13, scope: !4297)
!4303 = !DILocation(line: 634, column: 13, scope: !4293)
!4304 = !DILocation(line: 635, column: 5, scope: !4259)
!4305 = !DILocation(line: 636, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4253, file: !1122, line: 635, column: 12)
!4307 = !DILocation(line: 636, column: 16, scope: !4306)
!4308 = !DILocation(line: 636, column: 26, scope: !4306)
!4309 = !DILocation(line: 638, column: 32, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 638, column: 9)
!4311 = !DILocation(line: 638, column: 16, scope: !4310)
!4312 = !DILocation(line: 638, column: 14, scope: !4310)
!4313 = !DILocation(line: 638, column: 46, scope: !4310)
!4314 = !DILocation(line: 638, column: 9, scope: !4054)
!4315 = !DILocation(line: 639, column: 9, scope: !4310)
!4316 = !DILocation(line: 641, column: 9, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 641, column: 9)
!4318 = !DILocation(line: 641, column: 16, scope: !4317)
!4319 = !DILocation(line: 641, column: 32, scope: !4317)
!4320 = !DILocation(line: 641, column: 49, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4317, file: !1122, discriminator: 1)
!4322 = !DILocation(line: 641, column: 56, scope: !4321)
!4323 = !DILocation(line: 641, column: 62, scope: !4321)
!4324 = !DILocation(line: 641, column: 69, scope: !4321)
!4325 = !DILocation(line: 641, column: 35, scope: !4321)
!4326 = !DILocation(line: 641, column: 91, scope: !4321)
!4327 = !DILocation(line: 641, column: 9, scope: !4321)
!4328 = !DILocation(line: 642, column: 16, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4317, file: !1122, line: 641, column: 97)
!4330 = !DILocation(line: 642, column: 67, scope: !4329)
!4331 = !DILocation(line: 642, column: 74, scope: !4329)
!4332 = !DILocation(line: 642, column: 80, scope: !4329)
!4333 = !DILocation(line: 642, column: 87, scope: !4329)
!4334 = !DILocation(line: 642, column: 9, scope: !4329)
!4335 = !DILocation(line: 643, column: 13, scope: !4329)
!4336 = !DILocation(line: 644, column: 9, scope: !4329)
!4337 = !DILocation(line: 648, column: 11, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 648, column: 9)
!4339 = !DILocation(line: 648, column: 18, scope: !4338)
!4340 = !DILocation(line: 648, column: 30, scope: !4338)
!4341 = !DILocation(line: 648, column: 33, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4338, file: !1122, discriminator: 1)
!4343 = !DILocation(line: 648, column: 40, scope: !4342)
!4344 = !DILocation(line: 648, column: 53, scope: !4342)
!4345 = !DILocation(line: 648, column: 56, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4338, file: !1122, discriminator: 2)
!4347 = !DILocation(line: 648, column: 63, scope: !4346)
!4348 = !DILocation(line: 648, column: 69, scope: !4346)
!4349 = !DILocation(line: 648, column: 72, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4338, file: !1122, discriminator: 3)
!4351 = !DILocation(line: 648, column: 79, scope: !4350)
!4352 = !DILocation(line: 648, column: 86, scope: !4350)
!4353 = !DILocation(line: 649, column: 12, scope: !4338)
!4354 = !DILocation(line: 649, column: 19, scope: !4338)
!4355 = !DILocation(line: 649, column: 28, scope: !4338)
!4356 = !DILocation(line: 649, column: 48, scope: !4338)
!4357 = !DILocation(line: 649, column: 51, scope: !4342)
!4358 = !DILocation(line: 649, column: 58, scope: !4342)
!4359 = !DILocation(line: 649, column: 67, scope: !4342)
!4360 = !DILocation(line: 649, column: 87, scope: !4342)
!4361 = !DILocation(line: 649, column: 90, scope: !4346)
!4362 = !DILocation(line: 649, column: 97, scope: !4346)
!4363 = !DILocation(line: 649, column: 106, scope: !4346)
!4364 = !DILocation(line: 648, column: 9, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4054, file: !1122, discriminator: 4)
!4366 = !DILocation(line: 650, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !1122, line: 650, column: 9)
!4368 = distinct !DILexicalBlock(scope: !4338, file: !1122, line: 649, column: 128)
!4369 = !DILocation(line: 650, column: 16, scope: !4367)
!4370 = !DILocation(line: 650, column: 28, scope: !4367)
!4371 = !DILocation(line: 650, column: 31, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !4367, file: !1122, discriminator: 1)
!4373 = !DILocation(line: 650, column: 38, scope: !4372)
!4374 = !DILocation(line: 650, column: 9, scope: !4372)
!4375 = !DILocation(line: 651, column: 33, scope: !4367)
!4376 = !DILocation(line: 651, column: 40, scope: !4367)
!4377 = !DILocation(line: 651, column: 47, scope: !4367)
!4378 = !DILocation(line: 651, column: 60, scope: !4367)
!4379 = !DILocation(line: 651, column: 67, scope: !4367)
!4380 = !DILocation(line: 651, column: 15, scope: !4367)
!4381 = !DILocation(line: 651, column: 13, scope: !4367)
!4382 = !DILocation(line: 651, column: 9, scope: !4367)
!4383 = !DILocation(line: 652, column: 14, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4367, file: !1122, line: 652, column: 14)
!4385 = !DILocation(line: 652, column: 21, scope: !4384)
!4386 = !DILocation(line: 652, column: 27, scope: !4384)
!4387 = !DILocation(line: 652, column: 30, scope: !4388)
!4388 = !DILexicalBlockFile(scope: !4384, file: !1122, discriminator: 1)
!4389 = !DILocation(line: 652, column: 37, scope: !4388)
!4390 = !DILocation(line: 652, column: 14, scope: !4388)
!4391 = !DILocation(line: 653, column: 33, scope: !4384)
!4392 = !DILocation(line: 653, column: 40, scope: !4384)
!4393 = !DILocation(line: 653, column: 47, scope: !4384)
!4394 = !DILocation(line: 653, column: 54, scope: !4384)
!4395 = !DILocation(line: 653, column: 61, scope: !4384)
!4396 = !DILocation(line: 653, column: 15, scope: !4384)
!4397 = !DILocation(line: 653, column: 13, scope: !4384)
!4398 = !DILocation(line: 653, column: 9, scope: !4384)
!4399 = !DILocation(line: 654, column: 9, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4368, file: !1122, line: 654, column: 9)
!4401 = !DILocation(line: 654, column: 13, scope: !4400)
!4402 = !DILocation(line: 654, column: 9, scope: !4368)
!4403 = !DILocation(line: 655, column: 9, scope: !4400)
!4404 = !DILocation(line: 656, column: 5, scope: !4368)
!4405 = !DILocation(line: 658, column: 10, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 658, column: 9)
!4407 = !DILocation(line: 658, column: 17, scope: !4406)
!4408 = !DILocation(line: 658, column: 29, scope: !4406)
!4409 = !DILocation(line: 658, column: 32, scope: !4410)
!4410 = !DILexicalBlockFile(scope: !4406, file: !1122, discriminator: 1)
!4411 = !DILocation(line: 658, column: 39, scope: !4410)
!4412 = !DILocation(line: 658, column: 52, scope: !4410)
!4413 = !DILocation(line: 658, column: 55, scope: !4414)
!4414 = !DILexicalBlockFile(scope: !4406, file: !1122, discriminator: 2)
!4415 = !DILocation(line: 658, column: 62, scope: !4414)
!4416 = !DILocation(line: 658, column: 68, scope: !4414)
!4417 = !DILocation(line: 658, column: 71, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !4406, file: !1122, discriminator: 3)
!4419 = !DILocation(line: 658, column: 78, scope: !4418)
!4420 = !DILocation(line: 659, column: 9, scope: !4406)
!4421 = !DILocation(line: 659, column: 35, scope: !4410)
!4422 = !DILocation(line: 659, column: 42, scope: !4410)
!4423 = !DILocation(line: 659, column: 55, scope: !4410)
!4424 = !DILocation(line: 659, column: 62, scope: !4410)
!4425 = !DILocation(line: 659, column: 76, scope: !4410)
!4426 = !DILocation(line: 659, column: 83, scope: !4410)
!4427 = !DILocation(line: 659, column: 115, scope: !4410)
!4428 = !DILocation(line: 659, column: 14, scope: !4410)
!4429 = !DILocation(line: 659, column: 122, scope: !4410)
!4430 = !DILocation(line: 660, column: 12, scope: !4406)
!4431 = !DILocation(line: 660, column: 36, scope: !4410)
!4432 = !DILocation(line: 660, column: 43, scope: !4410)
!4433 = !DILocation(line: 660, column: 50, scope: !4410)
!4434 = !DILocation(line: 660, column: 57, scope: !4410)
!4435 = !DILocation(line: 660, column: 65, scope: !4410)
!4436 = !DILocation(line: 660, column: 72, scope: !4410)
!4437 = !DILocation(line: 660, column: 104, scope: !4410)
!4438 = !DILocation(line: 660, column: 15, scope: !4410)
!4439 = !DILocation(line: 660, column: 111, scope: !4410)
!4440 = !DILocation(line: 658, column: 9, scope: !4365)
!4441 = !DILocation(line: 661, column: 16, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4406, file: !1122, line: 660, column: 117)
!4443 = !DILocation(line: 661, column: 9, scope: !4442)
!4444 = !DILocation(line: 662, column: 27, scope: !4442)
!4445 = !DILocation(line: 662, column: 9, scope: !4442)
!4446 = !DILocation(line: 663, column: 5, scope: !4442)
!4447 = !DILocation(line: 665, column: 9, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 665, column: 9)
!4449 = !DILocation(line: 665, column: 16, scope: !4448)
!4450 = !DILocation(line: 665, column: 22, scope: !4448)
!4451 = !DILocation(line: 665, column: 26, scope: !4448)
!4452 = !DILocation(line: 665, column: 29, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !4448, file: !1122, discriminator: 1)
!4454 = !DILocation(line: 665, column: 36, scope: !4453)
!4455 = !DILocation(line: 665, column: 43, scope: !4453)
!4456 = !DILocation(line: 665, column: 9, scope: !4453)
!4457 = !DILocation(line: 666, column: 32, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !1122, line: 666, column: 13)
!4459 = distinct !DILexicalBlock(scope: !4448, file: !1122, line: 665, column: 48)
!4460 = !DILocation(line: 666, column: 39, scope: !4458)
!4461 = !DILocation(line: 666, column: 46, scope: !4458)
!4462 = !DILocation(line: 666, column: 53, scope: !4458)
!4463 = !DILocation(line: 667, column: 32, scope: !4458)
!4464 = !DILocation(line: 667, column: 39, scope: !4458)
!4465 = !DILocation(line: 666, column: 13, scope: !4458)
!4466 = !DILocation(line: 667, column: 60, scope: !4458)
!4467 = !DILocation(line: 666, column: 13, scope: !4459)
!4468 = !DILocation(line: 668, column: 20, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4458, file: !1122, line: 667, column: 65)
!4470 = !DILocation(line: 669, column: 20, scope: !4469)
!4471 = !DILocation(line: 669, column: 27, scope: !4469)
!4472 = !DILocation(line: 669, column: 47, scope: !4469)
!4473 = !DILocation(line: 670, column: 20, scope: !4469)
!4474 = !DILocation(line: 670, column: 27, scope: !4469)
!4475 = !DILocation(line: 670, column: 47, scope: !4469)
!4476 = !DILocation(line: 668, column: 13, scope: !4469)
!4477 = !DILocation(line: 671, column: 13, scope: !4469)
!4478 = !DILocation(line: 671, column: 20, scope: !4469)
!4479 = !DILocation(line: 671, column: 54, scope: !4469)
!4480 = !DILocation(line: 671, column: 42, scope: !4469)
!4481 = !DILocation(line: 672, column: 9, scope: !4469)
!4482 = !DILocation(line: 673, column: 5, scope: !4459)
!4483 = !DILocation(line: 677, column: 29, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 677, column: 9)
!4485 = !DILocation(line: 677, column: 9, scope: !4484)
!4486 = !DILocation(line: 677, column: 9, scope: !4054)
!4487 = !DILocation(line: 678, column: 19, scope: !4484)
!4488 = !DILocation(line: 678, column: 26, scope: !4484)
!4489 = !DILocation(line: 678, column: 18, scope: !4484)
!4490 = !DILocation(line: 678, column: 9, scope: !4484)
!4491 = !DILocation(line: 680, column: 9, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 680, column: 9)
!4493 = !DILocation(line: 680, column: 16, scope: !4492)
!4494 = !DILocation(line: 680, column: 25, scope: !4492)
!4495 = !DILocation(line: 680, column: 9, scope: !4054)
!4496 = !DILocation(line: 681, column: 16, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !1122, line: 680, column: 33)
!4498 = !DILocation(line: 681, column: 54, scope: !4497)
!4499 = !DILocation(line: 681, column: 61, scope: !4497)
!4500 = !DILocation(line: 681, column: 9, scope: !4497)
!4501 = !DILocation(line: 682, column: 13, scope: !4497)
!4502 = !DILocation(line: 683, column: 9, scope: !4497)
!4503 = !DILocation(line: 686, column: 20, scope: !4054)
!4504 = !DILocation(line: 686, column: 5, scope: !4054)
!4505 = !DILocation(line: 686, column: 12, scope: !4054)
!4506 = !DILocation(line: 686, column: 18, scope: !4054)
!4507 = !DILocation(line: 687, column: 10, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 687, column: 9)
!4509 = !DILocation(line: 687, column: 17, scope: !4508)
!4510 = !DILocation(line: 687, column: 28, scope: !4508)
!4511 = !DILocation(line: 687, column: 52, scope: !4508)
!4512 = !DILocation(line: 687, column: 55, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !4508, file: !1122, discriminator: 1)
!4514 = !DILocation(line: 687, column: 62, scope: !4513)
!4515 = !DILocation(line: 687, column: 76, scope: !4513)
!4516 = !DILocation(line: 687, column: 83, scope: !4513)
!4517 = !DILocation(line: 687, column: 73, scope: !4513)
!4518 = !DILocation(line: 687, column: 89, scope: !4513)
!4519 = !DILocation(line: 688, column: 9, scope: !4508)
!4520 = !DILocation(line: 688, column: 16, scope: !4508)
!4521 = !DILocation(line: 688, column: 25, scope: !4508)
!4522 = !DILocation(line: 687, column: 9, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !4054, file: !1122, discriminator: 2)
!4524 = !DILocation(line: 689, column: 29, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4508, file: !1122, line: 688, column: 46)
!4526 = !DILocation(line: 689, column: 36, scope: !4525)
!4527 = !DILocation(line: 689, column: 9, scope: !4525)
!4528 = !DILocation(line: 689, column: 16, scope: !4525)
!4529 = !DILocation(line: 689, column: 27, scope: !4525)
!4530 = !DILocation(line: 690, column: 27, scope: !4525)
!4531 = !DILocation(line: 690, column: 34, scope: !4525)
!4532 = !DILocation(line: 690, column: 9, scope: !4525)
!4533 = !DILocation(line: 690, column: 16, scope: !4525)
!4534 = !DILocation(line: 690, column: 25, scope: !4525)
!4535 = !DILocation(line: 691, column: 5, scope: !4525)
!4536 = !DILocation(line: 692, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 692, column: 9)
!4538 = !DILocation(line: 692, column: 16, scope: !4537)
!4539 = !DILocation(line: 692, column: 28, scope: !4537)
!4540 = !DILocation(line: 692, column: 35, scope: !4537)
!4541 = !DILocation(line: 692, column: 25, scope: !4537)
!4542 = !DILocation(line: 692, column: 38, scope: !4537)
!4543 = !DILocation(line: 692, column: 42, scope: !4544)
!4544 = !DILexicalBlockFile(scope: !4537, file: !1122, discriminator: 1)
!4545 = !DILocation(line: 692, column: 49, scope: !4544)
!4546 = !DILocation(line: 692, column: 63, scope: !4544)
!4547 = !DILocation(line: 692, column: 70, scope: !4544)
!4548 = !DILocation(line: 692, column: 60, scope: !4544)
!4549 = !DILocation(line: 693, column: 42, scope: !4537)
!4550 = !DILocation(line: 693, column: 45, scope: !4544)
!4551 = !DILocation(line: 693, column: 52, scope: !4544)
!4552 = !DILocation(line: 693, column: 63, scope: !4544)
!4553 = !DILocation(line: 692, column: 9, scope: !4523)
!4554 = !DILocation(line: 694, column: 16, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4537, file: !1122, line: 693, column: 92)
!4556 = !DILocation(line: 694, column: 9, scope: !4555)
!4557 = !DILocation(line: 695, column: 13, scope: !4555)
!4558 = !DILocation(line: 696, column: 9, scope: !4555)
!4559 = !DILocation(line: 698, column: 5, scope: !4054)
!4560 = !DILocation(line: 698, column: 12, scope: !4054)
!4561 = !DILocation(line: 698, column: 25, scope: !4054)
!4562 = !DILocation(line: 699, column: 54, scope: !4054)
!4563 = !DILocation(line: 699, column: 61, scope: !4054)
!4564 = !DILocation(line: 699, column: 31, scope: !4054)
!4565 = !DILocation(line: 699, column: 5, scope: !4054)
!4566 = !DILocation(line: 699, column: 12, scope: !4054)
!4567 = !DILocation(line: 699, column: 29, scope: !4054)
!4568 = !DILocation(line: 701, column: 10, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 701, column: 9)
!4570 = !DILocation(line: 701, column: 17, scope: !4569)
!4571 = !DILocation(line: 701, column: 24, scope: !4569)
!4572 = !DILocation(line: 701, column: 37, scope: !4569)
!4573 = !DILocation(line: 701, column: 49, scope: !4569)
!4574 = !DILocation(line: 702, column: 9, scope: !4569)
!4575 = !DILocation(line: 702, column: 16, scope: !4569)
!4576 = !DILocation(line: 702, column: 38, scope: !4569)
!4577 = !DILocation(line: 701, column: 9, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4054, file: !1122, discriminator: 1)
!4579 = !DILocalVariable(name: "codec_string", scope: !4580, file: !1122, line: 703, type: !977)
!4580 = distinct !DILexicalBlock(scope: !4569, file: !1122, line: 702, column: 44)
!4581 = !DILocation(line: 703, column: 21, scope: !4580)
!4582 = !DILocation(line: 703, column: 56, scope: !4580)
!4583 = !DILocation(line: 703, column: 36, scope: !4580)
!4584 = !DILocalVariable(name: "codec2", scope: !4580, file: !1122, line: 704, type: !4585)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64, align: 64)
!4586 = !DILocation(line: 704, column: 18, scope: !4580)
!4587 = !DILocation(line: 705, column: 16, scope: !4580)
!4588 = !DILocation(line: 708, column: 16, scope: !4580)
!4589 = !DILocation(line: 708, column: 30, scope: !4580)
!4590 = !DILocation(line: 708, column: 37, scope: !4580)
!4591 = !DILocation(line: 705, column: 9, scope: !4580)
!4592 = !DILocation(line: 709, column: 38, scope: !4580)
!4593 = !DILocation(line: 709, column: 18, scope: !4580)
!4594 = !DILocation(line: 709, column: 68, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !4580, file: !1122, discriminator: 1)
!4596 = !DILocation(line: 709, column: 75, scope: !4595)
!4597 = !DILocation(line: 709, column: 47, scope: !4595)
!4598 = !DILocation(line: 709, column: 18, scope: !4595)
!4599 = !DILocation(line: 709, column: 102, scope: !4600)
!4600 = !DILexicalBlockFile(scope: !4580, file: !1122, discriminator: 2)
!4601 = !DILocation(line: 709, column: 109, scope: !4600)
!4602 = !DILocation(line: 709, column: 81, scope: !4600)
!4603 = !DILocation(line: 709, column: 18, scope: !4600)
!4604 = !DILocation(line: 709, column: 18, scope: !4605)
!4605 = !DILexicalBlockFile(scope: !4580, file: !1122, discriminator: 3)
!4606 = !DILocation(line: 709, column: 16, scope: !4605)
!4607 = !DILocation(line: 710, column: 15, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4580, file: !1122, line: 710, column: 13)
!4609 = !DILocation(line: 710, column: 23, scope: !4608)
!4610 = !DILocation(line: 710, column: 36, scope: !4608)
!4611 = !DILocation(line: 710, column: 13, scope: !4580)
!4612 = !DILocation(line: 711, column: 20, scope: !4608)
!4613 = !DILocation(line: 712, column: 17, scope: !4608)
!4614 = !DILocation(line: 712, column: 31, scope: !4608)
!4615 = !DILocation(line: 712, column: 39, scope: !4608)
!4616 = !DILocation(line: 711, column: 13, scope: !4608)
!4617 = !DILocation(line: 713, column: 13, scope: !4580)
!4618 = !DILocation(line: 714, column: 9, scope: !4580)
!4619 = !DILocation(line: 717, column: 9, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 717, column: 9)
!4621 = !DILocation(line: 717, column: 16, scope: !4620)
!4622 = !DILocation(line: 717, column: 27, scope: !4620)
!4623 = !DILocation(line: 717, column: 49, scope: !4620)
!4624 = !DILocation(line: 718, column: 11, scope: !4620)
!4625 = !DILocation(line: 718, column: 18, scope: !4620)
!4626 = !DILocation(line: 718, column: 28, scope: !4620)
!4627 = !DILocation(line: 718, column: 32, scope: !4620)
!4628 = !DILocation(line: 718, column: 36, scope: !4629)
!4629 = !DILexicalBlockFile(scope: !4620, file: !1122, discriminator: 1)
!4630 = !DILocation(line: 718, column: 43, scope: !4629)
!4631 = !DILocation(line: 718, column: 53, scope: !4629)
!4632 = !DILocation(line: 717, column: 9, scope: !4578)
!4633 = !DILocation(line: 719, column: 9, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4620, file: !1122, line: 718, column: 59)
!4635 = !DILocation(line: 719, column: 16, scope: !4634)
!4636 = !DILocation(line: 719, column: 26, scope: !4634)
!4637 = !DILocation(line: 719, column: 30, scope: !4634)
!4638 = !DILocation(line: 720, column: 32, scope: !4634)
!4639 = !DILocation(line: 720, column: 39, scope: !4634)
!4640 = !DILocation(line: 720, column: 9, scope: !4634)
!4641 = !DILocation(line: 720, column: 16, scope: !4634)
!4642 = !DILocation(line: 720, column: 26, scope: !4634)
!4643 = !DILocation(line: 720, column: 30, scope: !4634)
!4644 = !DILocation(line: 721, column: 5, scope: !4634)
!4645 = !DILocation(line: 726, column: 34, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 726, column: 9)
!4647 = !DILocation(line: 726, column: 41, scope: !4646)
!4648 = !DILocation(line: 726, column: 14, scope: !4646)
!4649 = !DILocation(line: 726, column: 9, scope: !4054)
!4650 = !DILocation(line: 727, column: 27, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !1122, line: 726, column: 49)
!4652 = !DILocation(line: 727, column: 9, scope: !4651)
!4653 = !DILocation(line: 728, column: 44, scope: !4651)
!4654 = !DILocation(line: 728, column: 51, scope: !4651)
!4655 = !DILocation(line: 728, column: 62, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4651, file: !1122, discriminator: 1)
!4657 = !DILocation(line: 728, column: 61, scope: !4656)
!4658 = !DILocation(line: 728, column: 51, scope: !4656)
!4659 = !DILocation(line: 728, column: 51, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !4651, file: !1122, discriminator: 2)
!4661 = !DILocation(line: 728, column: 51, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4651, file: !1122, discriminator: 3)
!4663 = !DILocation(line: 728, column: 15, scope: !4662)
!4664 = !DILocation(line: 728, column: 13, scope: !4662)
!4665 = !DILocation(line: 729, column: 25, scope: !4651)
!4666 = !DILocation(line: 729, column: 32, scope: !4651)
!4667 = !DILocation(line: 729, column: 9, scope: !4651)
!4668 = !DILocation(line: 730, column: 13, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4651, file: !1122, line: 730, column: 13)
!4670 = !DILocation(line: 730, column: 17, scope: !4669)
!4671 = !DILocation(line: 730, column: 13, scope: !4651)
!4672 = !DILocation(line: 731, column: 13, scope: !4669)
!4673 = !DILocation(line: 732, column: 5, scope: !4651)
!4674 = !DILocation(line: 734, column: 29, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 734, column: 9)
!4676 = !DILocation(line: 734, column: 36, scope: !4675)
!4677 = !DILocation(line: 734, column: 9, scope: !4675)
!4678 = !DILocation(line: 734, column: 9, scope: !4054)
!4679 = !DILocation(line: 735, column: 35, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !1122, line: 734, column: 44)
!4681 = !DILocation(line: 735, column: 15, scope: !4680)
!4682 = !DILocation(line: 735, column: 13, scope: !4680)
!4683 = !DILocation(line: 736, column: 13, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !1122, line: 736, column: 13)
!4685 = !DILocation(line: 736, column: 17, scope: !4684)
!4686 = !DILocation(line: 736, column: 13, scope: !4680)
!4687 = !DILocation(line: 737, column: 13, scope: !4684)
!4688 = !DILocation(line: 738, column: 5, scope: !4680)
!4689 = !DILocation(line: 741, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 740, column: 9)
!4691 = !DILocation(line: 741, column: 21, scope: !4690)
!4692 = !DILocation(line: 741, column: 31, scope: !4690)
!4693 = !DILocation(line: 741, column: 52, scope: !4690)
!4694 = !DILocation(line: 741, column: 56, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4690, file: !1122, discriminator: 1)
!4696 = !DILocation(line: 741, column: 63, scope: !4695)
!4697 = !DILocation(line: 741, column: 81, scope: !4695)
!4698 = !DILocation(line: 740, column: 9, scope: !4054)
!4699 = !DILocation(line: 742, column: 30, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4690, file: !1122, line: 741, column: 87)
!4701 = !DILocation(line: 742, column: 15, scope: !4700)
!4702 = !DILocation(line: 742, column: 13, scope: !4700)
!4703 = !DILocation(line: 743, column: 13, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4700, file: !1122, line: 743, column: 13)
!4705 = !DILocation(line: 743, column: 17, scope: !4704)
!4706 = !DILocation(line: 743, column: 13, scope: !4700)
!4707 = !DILocation(line: 744, column: 13, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !1122, line: 743, column: 22)
!4709 = !DILocation(line: 746, column: 5, scope: !4700)
!4710 = !DILocation(line: 750, column: 9, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 750, column: 9)
!4712 = !DILocation(line: 750, column: 16, scope: !4711)
!4713 = !DILocation(line: 750, column: 23, scope: !4711)
!4714 = !DILocation(line: 750, column: 36, scope: !4711)
!4715 = !DILocation(line: 750, column: 43, scope: !4711)
!4716 = !DILocation(line: 750, column: 34, scope: !4711)
!4717 = !DILocation(line: 750, column: 50, scope: !4711)
!4718 = !DILocation(line: 750, column: 53, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4711, file: !1122, discriminator: 1)
!4720 = !DILocation(line: 750, column: 60, scope: !4719)
!4721 = !DILocation(line: 750, column: 67, scope: !4719)
!4722 = !DILocation(line: 750, column: 9, scope: !4719)
!4723 = !DILocation(line: 751, column: 16, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4711, file: !1122, line: 750, column: 72)
!4725 = !DILocation(line: 752, column: 16, scope: !4724)
!4726 = !DILocation(line: 752, column: 23, scope: !4724)
!4727 = !DILocation(line: 752, column: 30, scope: !4724)
!4728 = !DILocation(line: 751, column: 9, scope: !4724)
!4729 = !DILocation(line: 753, column: 25, scope: !4724)
!4730 = !DILocation(line: 753, column: 32, scope: !4724)
!4731 = !DILocation(line: 753, column: 39, scope: !4724)
!4732 = !DILocation(line: 753, column: 9, scope: !4724)
!4733 = !DILocation(line: 753, column: 16, scope: !4724)
!4734 = !DILocation(line: 753, column: 23, scope: !4724)
!4735 = !DILocation(line: 754, column: 5, scope: !4724)
!4736 = !DILocation(line: 756, column: 29, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 756, column: 9)
!4738 = !DILocation(line: 756, column: 36, scope: !4737)
!4739 = !DILocation(line: 756, column: 9, scope: !4737)
!4740 = !DILocation(line: 756, column: 9, scope: !4054)
!4741 = !DILocalVariable(name: "i", scope: !4742, file: !1122, line: 757, type: !991)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !1122, line: 756, column: 44)
!4743 = !DILocation(line: 757, column: 13, scope: !4742)
!4744 = !DILocation(line: 760, column: 30, scope: !4742)
!4745 = !DILocation(line: 760, column: 9, scope: !4742)
!4746 = !DILocation(line: 760, column: 16, scope: !4742)
!4747 = !DILocation(line: 760, column: 28, scope: !4742)
!4748 = !DILocation(line: 761, column: 14, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 761, column: 13)
!4750 = !DILocation(line: 761, column: 21, scope: !4749)
!4751 = !DILocation(line: 761, column: 13, scope: !4742)
!4752 = !DILocation(line: 762, column: 17, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !1122, line: 761, column: 34)
!4754 = !DILocation(line: 763, column: 13, scope: !4753)
!4755 = !DILocation(line: 768, column: 13, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 768, column: 13)
!4757 = !DILocation(line: 768, column: 20, scope: !4756)
!4758 = !DILocation(line: 768, column: 30, scope: !4756)
!4759 = !DILocation(line: 768, column: 34, scope: !4756)
!4760 = !DILocation(line: 768, column: 39, scope: !4756)
!4761 = !DILocation(line: 768, column: 42, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4756, file: !1122, discriminator: 1)
!4763 = !DILocation(line: 768, column: 49, scope: !4762)
!4764 = !DILocation(line: 768, column: 59, scope: !4762)
!4765 = !DILocation(line: 768, column: 63, scope: !4762)
!4766 = !DILocation(line: 768, column: 13, scope: !4762)
!4767 = !DILocation(line: 769, column: 20, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4756, file: !1122, line: 768, column: 69)
!4769 = !DILocation(line: 769, column: 13, scope: !4768)
!4770 = !DILocation(line: 770, column: 17, scope: !4768)
!4771 = !DILocation(line: 771, column: 13, scope: !4768)
!4772 = !DILocation(line: 774, column: 13, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 774, column: 13)
!4774 = !DILocation(line: 774, column: 20, scope: !4773)
!4775 = !DILocation(line: 774, column: 27, scope: !4773)
!4776 = !DILocation(line: 774, column: 13, scope: !4742)
!4777 = !DILocation(line: 775, column: 20, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !1122, line: 775, column: 13)
!4779 = distinct !DILexicalBlock(scope: !4773, file: !1122, line: 774, column: 40)
!4780 = !DILocation(line: 775, column: 18, scope: !4778)
!4781 = !DILocation(line: 775, column: 51, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4783, file: !1122, discriminator: 1)
!4783 = distinct !DILexicalBlock(scope: !4778, file: !1122, line: 775, column: 13)
!4784 = !DILocation(line: 775, column: 25, scope: !4782)
!4785 = !DILocation(line: 775, column: 32, scope: !4782)
!4786 = !DILocation(line: 775, column: 39, scope: !4782)
!4787 = !DILocation(line: 775, column: 54, scope: !4782)
!4788 = !DILocation(line: 775, column: 13, scope: !4782)
!4789 = !DILocation(line: 776, column: 21, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !1122, line: 776, column: 21)
!4791 = distinct !DILexicalBlock(scope: !4783, file: !1122, line: 775, column: 82)
!4792 = !DILocation(line: 776, column: 28, scope: !4790)
!4793 = !DILocation(line: 776, column: 68, scope: !4790)
!4794 = !DILocation(line: 776, column: 42, scope: !4790)
!4795 = !DILocation(line: 776, column: 49, scope: !4790)
!4796 = !DILocation(line: 776, column: 56, scope: !4790)
!4797 = !DILocation(line: 776, column: 39, scope: !4790)
!4798 = !DILocation(line: 776, column: 21, scope: !4791)
!4799 = !DILocation(line: 777, column: 21, scope: !4790)
!4800 = !DILocation(line: 778, column: 21, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4791, file: !1122, line: 778, column: 21)
!4802 = !DILocation(line: 778, column: 28, scope: !4801)
!4803 = !DILocation(line: 778, column: 37, scope: !4801)
!4804 = !DILocation(line: 778, column: 42, scope: !4801)
!4805 = !DILocation(line: 779, column: 46, scope: !4801)
!4806 = !DILocation(line: 779, column: 53, scope: !4801)
!4807 = !DILocation(line: 779, column: 21, scope: !4801)
!4808 = !DILocation(line: 780, column: 72, scope: !4801)
!4809 = !DILocation(line: 780, column: 46, scope: !4801)
!4810 = !DILocation(line: 780, column: 53, scope: !4801)
!4811 = !DILocation(line: 780, column: 60, scope: !4801)
!4812 = !DILocation(line: 780, column: 21, scope: !4801)
!4813 = !DILocation(line: 779, column: 65, scope: !4801)
!4814 = !DILocation(line: 778, column: 21, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4791, file: !1122, discriminator: 1)
!4816 = !DILocation(line: 781, column: 67, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4801, file: !1122, line: 780, column: 77)
!4818 = !DILocation(line: 781, column: 41, scope: !4817)
!4819 = !DILocation(line: 781, column: 48, scope: !4817)
!4820 = !DILocation(line: 781, column: 55, scope: !4817)
!4821 = !DILocation(line: 781, column: 21, scope: !4817)
!4822 = !DILocation(line: 781, column: 28, scope: !4817)
!4823 = !DILocation(line: 781, column: 39, scope: !4817)
!4824 = !DILocation(line: 782, column: 21, scope: !4817)
!4825 = !DILocation(line: 784, column: 13, scope: !4791)
!4826 = !DILocation(line: 775, column: 78, scope: !4827)
!4827 = !DILexicalBlockFile(scope: !4783, file: !1122, discriminator: 2)
!4828 = !DILocation(line: 775, column: 13, scope: !4827)
!4829 = distinct !{!4829, !4830}
!4830 = !DILocation(line: 775, column: 13, scope: !4779)
!4831 = !DILocation(line: 785, column: 43, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4779, file: !1122, line: 785, column: 17)
!4833 = !DILocation(line: 785, column: 17, scope: !4832)
!4834 = !DILocation(line: 785, column: 24, scope: !4832)
!4835 = !DILocation(line: 785, column: 31, scope: !4832)
!4836 = !DILocation(line: 785, column: 46, scope: !4832)
!4837 = !DILocation(line: 785, column: 17, scope: !4779)
!4838 = !DILocalVariable(name: "buf", scope: !4839, file: !1122, line: 786, type: !4840)
!4839 = distinct !DILexicalBlock(scope: !4832, file: !1122, line: 785, column: 69)
!4840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 1024, align: 8, elements: !4841)
!4841 = !{!4842}
!4842 = !DISubrange(count: 128)
!4843 = !DILocation(line: 786, column: 22, scope: !4839)
!4844 = !DILocation(line: 787, column: 26, scope: !4839)
!4845 = !DILocation(line: 787, column: 50, scope: !4839)
!4846 = !DILocation(line: 787, column: 57, scope: !4839)
!4847 = !DILocation(line: 787, column: 17, scope: !4839)
!4848 = !DILocation(line: 788, column: 24, scope: !4839)
!4849 = !DILocation(line: 789, column: 68, scope: !4839)
!4850 = !DILocation(line: 789, column: 75, scope: !4839)
!4851 = !DILocation(line: 789, column: 45, scope: !4839)
!4852 = !DILocation(line: 789, column: 88, scope: !4839)
!4853 = !DILocation(line: 789, column: 32, scope: !4854)
!4854 = !DILexicalBlockFile(scope: !4839, file: !1122, discriminator: 1)
!4855 = !DILocation(line: 788, column: 17, scope: !4839)
!4856 = !DILocation(line: 790, column: 21, scope: !4839)
!4857 = !DILocation(line: 791, column: 17, scope: !4839)
!4858 = !DILocation(line: 793, column: 9, scope: !4779)
!4859 = !DILocation(line: 794, column: 13, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 794, column: 13)
!4861 = !DILocation(line: 794, column: 20, scope: !4860)
!4862 = !DILocation(line: 794, column: 27, scope: !4860)
!4863 = !DILocation(line: 794, column: 13, scope: !4742)
!4864 = !DILocation(line: 795, column: 20, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !1122, line: 795, column: 13)
!4866 = distinct !DILexicalBlock(scope: !4860, file: !1122, line: 794, column: 37)
!4867 = !DILocation(line: 795, column: 18, scope: !4865)
!4868 = !DILocation(line: 795, column: 48, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4870, file: !1122, discriminator: 1)
!4870 = distinct !DILexicalBlock(scope: !4865, file: !1122, line: 795, column: 13)
!4871 = !DILocation(line: 795, column: 25, scope: !4869)
!4872 = !DILocation(line: 795, column: 32, scope: !4869)
!4873 = !DILocation(line: 795, column: 39, scope: !4869)
!4874 = !DILocation(line: 795, column: 51, scope: !4869)
!4875 = !DILocation(line: 795, column: 13, scope: !4869)
!4876 = !DILocation(line: 796, column: 21, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4870, file: !1122, line: 796, column: 21)
!4878 = !DILocation(line: 796, column: 28, scope: !4877)
!4879 = !DILocation(line: 796, column: 62, scope: !4877)
!4880 = !DILocation(line: 796, column: 39, scope: !4877)
!4881 = !DILocation(line: 796, column: 46, scope: !4877)
!4882 = !DILocation(line: 796, column: 53, scope: !4877)
!4883 = !DILocation(line: 796, column: 36, scope: !4877)
!4884 = !DILocation(line: 796, column: 21, scope: !4870)
!4885 = !DILocation(line: 797, column: 21, scope: !4877)
!4886 = !DILocation(line: 796, column: 63, scope: !4887)
!4887 = !DILexicalBlockFile(scope: !4877, file: !1122, discriminator: 1)
!4888 = !DILocation(line: 795, column: 72, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !4870, file: !1122, discriminator: 2)
!4890 = !DILocation(line: 795, column: 13, scope: !4889)
!4891 = distinct !{!4891, !4892}
!4892 = !DILocation(line: 795, column: 13, scope: !4866)
!4893 = !DILocation(line: 798, column: 40, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4866, file: !1122, line: 798, column: 17)
!4895 = !DILocation(line: 798, column: 17, scope: !4894)
!4896 = !DILocation(line: 798, column: 24, scope: !4894)
!4897 = !DILocation(line: 798, column: 31, scope: !4894)
!4898 = !DILocation(line: 798, column: 43, scope: !4894)
!4899 = !DILocation(line: 799, column: 17, scope: !4894)
!4900 = !DILocation(line: 799, column: 23, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4894, file: !1122, discriminator: 1)
!4902 = !DILocation(line: 799, column: 30, scope: !4901)
!4903 = !DILocation(line: 799, column: 39, scope: !4901)
!4904 = !DILocation(line: 799, column: 60, scope: !4901)
!4905 = !DILocation(line: 799, column: 63, scope: !4906)
!4906 = !DILexicalBlockFile(scope: !4894, file: !1122, discriminator: 2)
!4907 = !DILocation(line: 799, column: 70, scope: !4906)
!4908 = !DILocation(line: 799, column: 79, scope: !4906)
!4909 = !DILocation(line: 800, column: 22, scope: !4894)
!4910 = !DILocation(line: 800, column: 25, scope: !4901)
!4911 = !DILocation(line: 800, column: 32, scope: !4901)
!4912 = !DILocation(line: 800, column: 54, scope: !4901)
!4913 = !DILocation(line: 798, column: 17, scope: !4914)
!4914 = !DILexicalBlockFile(scope: !4866, file: !1122, discriminator: 1)
!4915 = !DILocalVariable(name: "buf", scope: !4916, file: !1122, line: 801, type: !4840)
!4916 = distinct !DILexicalBlock(scope: !4894, file: !1122, line: 800, column: 62)
!4917 = !DILocation(line: 801, column: 22, scope: !4916)
!4918 = !DILocation(line: 802, column: 26, scope: !4916)
!4919 = !DILocation(line: 802, column: 50, scope: !4916)
!4920 = !DILocation(line: 802, column: 57, scope: !4916)
!4921 = !DILocation(line: 802, column: 17, scope: !4916)
!4922 = !DILocation(line: 803, column: 24, scope: !4916)
!4923 = !DILocation(line: 804, column: 65, scope: !4916)
!4924 = !DILocation(line: 804, column: 72, scope: !4916)
!4925 = !DILocation(line: 804, column: 45, scope: !4916)
!4926 = !DILocation(line: 804, column: 82, scope: !4916)
!4927 = !DILocation(line: 804, column: 32, scope: !4928)
!4928 = !DILexicalBlockFile(scope: !4916, file: !1122, discriminator: 1)
!4929 = !DILocation(line: 803, column: 17, scope: !4916)
!4930 = !DILocation(line: 805, column: 21, scope: !4916)
!4931 = !DILocation(line: 806, column: 17, scope: !4916)
!4932 = !DILocation(line: 808, column: 40, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4866, file: !1122, line: 808, column: 17)
!4934 = !DILocation(line: 808, column: 17, scope: !4933)
!4935 = !DILocation(line: 808, column: 24, scope: !4933)
!4936 = !DILocation(line: 808, column: 31, scope: !4933)
!4937 = !DILocation(line: 808, column: 43, scope: !4933)
!4938 = !DILocation(line: 808, column: 66, scope: !4933)
!4939 = !DILocation(line: 809, column: 40, scope: !4933)
!4940 = !DILocation(line: 809, column: 17, scope: !4933)
!4941 = !DILocation(line: 809, column: 24, scope: !4933)
!4942 = !DILocation(line: 809, column: 31, scope: !4933)
!4943 = !DILocation(line: 809, column: 43, scope: !4933)
!4944 = !DILocation(line: 809, column: 66, scope: !4933)
!4945 = !DILocation(line: 810, column: 40, scope: !4933)
!4946 = !DILocation(line: 810, column: 17, scope: !4933)
!4947 = !DILocation(line: 810, column: 24, scope: !4933)
!4948 = !DILocation(line: 810, column: 31, scope: !4933)
!4949 = !DILocation(line: 810, column: 43, scope: !4933)
!4950 = !DILocation(line: 810, column: 66, scope: !4933)
!4951 = !DILocation(line: 811, column: 40, scope: !4933)
!4952 = !DILocation(line: 811, column: 17, scope: !4933)
!4953 = !DILocation(line: 811, column: 24, scope: !4933)
!4954 = !DILocation(line: 811, column: 31, scope: !4933)
!4955 = !DILocation(line: 811, column: 43, scope: !4933)
!4956 = !DILocation(line: 811, column: 66, scope: !4933)
!4957 = !DILocation(line: 812, column: 40, scope: !4933)
!4958 = !DILocation(line: 812, column: 17, scope: !4933)
!4959 = !DILocation(line: 812, column: 24, scope: !4933)
!4960 = !DILocation(line: 812, column: 31, scope: !4933)
!4961 = !DILocation(line: 812, column: 43, scope: !4933)
!4962 = !DILocation(line: 808, column: 17, scope: !4914)
!4963 = !DILocation(line: 813, column: 17, scope: !4933)
!4964 = !DILocation(line: 813, column: 24, scope: !4933)
!4965 = !DILocation(line: 813, column: 36, scope: !4933)
!4966 = !DILocation(line: 814, column: 9, scope: !4866)
!4967 = !DILocation(line: 815, column: 13, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 815, column: 13)
!4969 = !DILocation(line: 815, column: 20, scope: !4968)
!4970 = !DILocation(line: 815, column: 27, scope: !4968)
!4971 = !DILocation(line: 815, column: 13, scope: !4742)
!4972 = !DILocation(line: 816, column: 20, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !1122, line: 816, column: 13)
!4974 = distinct !DILexicalBlock(scope: !4968, file: !1122, line: 815, column: 50)
!4975 = !DILocation(line: 816, column: 18, scope: !4973)
!4976 = !DILocation(line: 816, column: 61, scope: !4977)
!4977 = !DILexicalBlockFile(scope: !4978, file: !1122, discriminator: 1)
!4978 = distinct !DILexicalBlock(scope: !4973, file: !1122, line: 816, column: 13)
!4979 = !DILocation(line: 816, column: 25, scope: !4977)
!4980 = !DILocation(line: 816, column: 32, scope: !4977)
!4981 = !DILocation(line: 816, column: 39, scope: !4977)
!4982 = !DILocation(line: 816, column: 64, scope: !4977)
!4983 = !DILocation(line: 816, column: 13, scope: !4977)
!4984 = !DILocation(line: 817, column: 21, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4978, file: !1122, line: 817, column: 21)
!4986 = !DILocation(line: 817, column: 28, scope: !4985)
!4987 = !DILocation(line: 817, column: 79, scope: !4985)
!4988 = !DILocation(line: 817, column: 43, scope: !4985)
!4989 = !DILocation(line: 817, column: 50, scope: !4985)
!4990 = !DILocation(line: 817, column: 57, scope: !4985)
!4991 = !DILocation(line: 817, column: 40, scope: !4985)
!4992 = !DILocation(line: 817, column: 21, scope: !4978)
!4993 = !DILocation(line: 818, column: 21, scope: !4985)
!4994 = !DILocation(line: 817, column: 80, scope: !4995)
!4995 = !DILexicalBlockFile(scope: !4985, file: !1122, discriminator: 1)
!4996 = !DILocation(line: 816, column: 71, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4978, file: !1122, discriminator: 2)
!4998 = !DILocation(line: 816, column: 13, scope: !4997)
!4999 = distinct !{!4999, !5000}
!5000 = !DILocation(line: 816, column: 13, scope: !4974)
!5001 = !DILocation(line: 819, column: 53, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4974, file: !1122, line: 819, column: 17)
!5003 = !DILocation(line: 819, column: 17, scope: !5002)
!5004 = !DILocation(line: 819, column: 24, scope: !5002)
!5005 = !DILocation(line: 819, column: 31, scope: !5002)
!5006 = !DILocation(line: 819, column: 56, scope: !5002)
!5007 = !DILocation(line: 819, column: 17, scope: !4974)
!5008 = !DILocation(line: 820, column: 24, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5002, file: !1122, line: 819, column: 62)
!5010 = !DILocation(line: 821, column: 24, scope: !5009)
!5011 = !DILocation(line: 821, column: 31, scope: !5009)
!5012 = !DILocation(line: 820, column: 17, scope: !5009)
!5013 = !DILocation(line: 822, column: 21, scope: !5009)
!5014 = !DILocation(line: 823, column: 17, scope: !5009)
!5015 = !DILocation(line: 825, column: 9, scope: !4974)
!5016 = !DILocation(line: 826, column: 13, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 826, column: 13)
!5018 = !DILocation(line: 826, column: 20, scope: !5017)
!5019 = !DILocation(line: 826, column: 32, scope: !5017)
!5020 = !DILocation(line: 826, column: 13, scope: !4742)
!5021 = !DILocation(line: 827, column: 20, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !1122, line: 826, column: 37)
!5023 = !DILocation(line: 828, column: 21, scope: !5022)
!5024 = !DILocation(line: 828, column: 28, scope: !5022)
!5025 = !DILocation(line: 827, column: 13, scope: !5022)
!5026 = !DILocation(line: 829, column: 17, scope: !5022)
!5027 = !DILocation(line: 830, column: 13, scope: !5022)
!5028 = !DILocation(line: 832, column: 13, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 832, column: 13)
!5030 = !DILocation(line: 832, column: 20, scope: !5029)
!5031 = !DILocation(line: 832, column: 27, scope: !5029)
!5032 = !DILocation(line: 832, column: 13, scope: !4742)
!5033 = !DILocation(line: 833, column: 18, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !1122, line: 833, column: 17)
!5035 = distinct !DILexicalBlock(scope: !5029, file: !1122, line: 832, column: 44)
!5036 = !DILocation(line: 833, column: 25, scope: !5034)
!5037 = !DILocation(line: 833, column: 17, scope: !5035)
!5038 = !DILocation(line: 834, column: 24, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5034, file: !1122, line: 833, column: 41)
!5040 = !DILocation(line: 834, column: 17, scope: !5039)
!5041 = !DILocation(line: 835, column: 13, scope: !5039)
!5042 = !DILocation(line: 836, column: 24, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !1122, line: 836, column: 17)
!5044 = distinct !DILexicalBlock(scope: !5034, file: !1122, line: 835, column: 20)
!5045 = !DILocation(line: 836, column: 22, scope: !5043)
!5046 = !DILocation(line: 836, column: 59, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !5048, file: !1122, discriminator: 1)
!5048 = distinct !DILexicalBlock(scope: !5043, file: !1122, line: 836, column: 17)
!5049 = !DILocation(line: 836, column: 29, scope: !5047)
!5050 = !DILocation(line: 836, column: 36, scope: !5047)
!5051 = !DILocation(line: 836, column: 43, scope: !5047)
!5052 = !DILocation(line: 836, column: 62, scope: !5047)
!5053 = !DILocation(line: 836, column: 17, scope: !5047)
!5054 = !DILocation(line: 837, column: 25, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5048, file: !1122, line: 837, column: 25)
!5056 = !DILocation(line: 837, column: 32, scope: !5055)
!5057 = !DILocation(line: 837, column: 80, scope: !5055)
!5058 = !DILocation(line: 837, column: 50, scope: !5055)
!5059 = !DILocation(line: 837, column: 57, scope: !5055)
!5060 = !DILocation(line: 837, column: 64, scope: !5055)
!5061 = !DILocation(line: 837, column: 47, scope: !5055)
!5062 = !DILocation(line: 837, column: 25, scope: !5048)
!5063 = !DILocation(line: 838, column: 25, scope: !5055)
!5064 = !DILocation(line: 837, column: 81, scope: !5065)
!5065 = !DILexicalBlockFile(scope: !5055, file: !1122, discriminator: 1)
!5066 = !DILocation(line: 836, column: 69, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !5048, file: !1122, discriminator: 2)
!5068 = !DILocation(line: 836, column: 17, scope: !5067)
!5069 = distinct !{!5069, !5070}
!5070 = !DILocation(line: 836, column: 17, scope: !5044)
!5071 = !DILocation(line: 839, column: 51, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5044, file: !1122, line: 839, column: 21)
!5073 = !DILocation(line: 839, column: 21, scope: !5072)
!5074 = !DILocation(line: 839, column: 28, scope: !5072)
!5075 = !DILocation(line: 839, column: 35, scope: !5072)
!5076 = !DILocation(line: 839, column: 54, scope: !5072)
!5077 = !DILocation(line: 839, column: 21, scope: !5044)
!5078 = !DILocalVariable(name: "buf", scope: !5079, file: !1122, line: 840, type: !5080)
!5079 = distinct !DILexicalBlock(scope: !5072, file: !1122, line: 839, column: 60)
!5080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 4096, align: 8, elements: !5081)
!5081 = !{!5082}
!5082 = !DISubrange(count: 512)
!5083 = !DILocation(line: 840, column: 26, scope: !5079)
!5084 = !DILocation(line: 841, column: 50, scope: !5079)
!5085 = !DILocation(line: 841, column: 72, scope: !5079)
!5086 = !DILocation(line: 841, column: 79, scope: !5079)
!5087 = !DILocation(line: 841, column: 21, scope: !5079)
!5088 = !DILocation(line: 842, column: 28, scope: !5079)
!5089 = !DILocation(line: 842, column: 91, scope: !5079)
!5090 = !DILocation(line: 842, column: 21, scope: !5079)
!5091 = !DILocation(line: 843, column: 25, scope: !5079)
!5092 = !DILocation(line: 844, column: 21, scope: !5079)
!5093 = !DILocation(line: 847, column: 9, scope: !5035)
!5094 = !DILocation(line: 848, column: 13, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 848, column: 13)
!5096 = !DILocation(line: 848, column: 20, scope: !5095)
!5097 = !DILocation(line: 848, column: 35, scope: !5095)
!5098 = !DILocation(line: 848, column: 38, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !5095, file: !1122, discriminator: 1)
!5100 = !DILocation(line: 848, column: 45, scope: !5099)
!5101 = !DILocation(line: 848, column: 13, scope: !5099)
!5102 = !DILocalVariable(name: "channels", scope: !5103, file: !1122, line: 849, type: !991)
!5103 = distinct !DILexicalBlock(scope: !5095, file: !1122, line: 848, column: 55)
!5104 = !DILocation(line: 849, column: 17, scope: !5103)
!5105 = !DILocation(line: 849, column: 62, scope: !5103)
!5106 = !DILocation(line: 849, column: 69, scope: !5103)
!5107 = !DILocation(line: 849, column: 28, scope: !5103)
!5108 = !DILocation(line: 850, column: 17, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5103, file: !1122, line: 850, column: 17)
!5110 = !DILocation(line: 850, column: 29, scope: !5109)
!5111 = !DILocation(line: 850, column: 36, scope: !5109)
!5112 = !DILocation(line: 850, column: 26, scope: !5109)
!5113 = !DILocation(line: 850, column: 17, scope: !5103)
!5114 = !DILocalVariable(name: "buf", scope: !5115, file: !1122, line: 851, type: !5080)
!5115 = distinct !DILexicalBlock(scope: !5109, file: !1122, line: 850, column: 46)
!5116 = !DILocation(line: 851, column: 22, scope: !5115)
!5117 = !DILocation(line: 852, column: 46, scope: !5115)
!5118 = !DILocation(line: 852, column: 68, scope: !5115)
!5119 = !DILocation(line: 852, column: 75, scope: !5115)
!5120 = !DILocation(line: 852, column: 17, scope: !5115)
!5121 = !DILocation(line: 853, column: 24, scope: !5115)
!5122 = !DILocation(line: 855, column: 24, scope: !5115)
!5123 = !DILocation(line: 855, column: 29, scope: !5115)
!5124 = !DILocation(line: 855, column: 39, scope: !5115)
!5125 = !DILocation(line: 855, column: 46, scope: !5115)
!5126 = !DILocation(line: 853, column: 17, scope: !5115)
!5127 = !DILocation(line: 856, column: 21, scope: !5115)
!5128 = !DILocation(line: 857, column: 17, scope: !5115)
!5129 = !DILocation(line: 859, column: 9, scope: !5103)
!5130 = !DILocation(line: 859, column: 20, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !5132, file: !1122, discriminator: 1)
!5132 = distinct !DILexicalBlock(scope: !5095, file: !1122, line: 859, column: 20)
!5133 = !DILocation(line: 859, column: 27, scope: !5131)
!5134 = !DILocation(line: 860, column: 65, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !1122, line: 859, column: 43)
!5136 = !DILocation(line: 860, column: 72, scope: !5135)
!5137 = !DILocation(line: 860, column: 31, scope: !5135)
!5138 = !DILocation(line: 860, column: 13, scope: !5135)
!5139 = !DILocation(line: 860, column: 20, scope: !5135)
!5140 = !DILocation(line: 860, column: 29, scope: !5135)
!5141 = !DILocation(line: 861, column: 9, scope: !5135)
!5142 = !DILocation(line: 862, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 862, column: 13)
!5144 = !DILocation(line: 862, column: 20, scope: !5143)
!5145 = !DILocation(line: 862, column: 29, scope: !5143)
!5146 = !DILocation(line: 862, column: 13, scope: !4742)
!5147 = !DILocation(line: 863, column: 20, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5143, file: !1122, line: 862, column: 34)
!5149 = !DILocation(line: 864, column: 21, scope: !5148)
!5150 = !DILocation(line: 864, column: 28, scope: !5148)
!5151 = !DILocation(line: 863, column: 13, scope: !5148)
!5152 = !DILocation(line: 865, column: 17, scope: !5148)
!5153 = !DILocation(line: 866, column: 13, scope: !5148)
!5154 = !DILocation(line: 868, column: 12, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 868, column: 12)
!5156 = !DILocation(line: 868, column: 19, scope: !5155)
!5157 = !DILocation(line: 868, column: 30, scope: !5155)
!5158 = !DILocation(line: 868, column: 12, scope: !4742)
!5159 = !DILocation(line: 869, column: 43, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5155, file: !1122, line: 868, column: 53)
!5161 = !DILocation(line: 869, column: 50, scope: !5160)
!5162 = !DILocation(line: 869, column: 23, scope: !5160)
!5163 = !DILocation(line: 869, column: 21, scope: !5160)
!5164 = !DILocation(line: 870, column: 18, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5160, file: !1122, line: 870, column: 18)
!5166 = !DILocation(line: 870, column: 25, scope: !5165)
!5167 = !DILocation(line: 870, column: 45, scope: !5165)
!5168 = !DILocation(line: 871, column: 17, scope: !5165)
!5169 = !DILocation(line: 871, column: 21, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !5165, file: !1122, discriminator: 1)
!5171 = !DILocation(line: 871, column: 28, scope: !5170)
!5172 = !DILocation(line: 871, column: 48, scope: !5170)
!5173 = !DILocation(line: 871, column: 52, scope: !5170)
!5174 = !DILocation(line: 871, column: 55, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5165, file: !1122, discriminator: 2)
!5176 = !DILocation(line: 871, column: 64, scope: !5175)
!5177 = !DILocation(line: 871, column: 72, scope: !5175)
!5178 = !DILocation(line: 871, column: 78, scope: !5175)
!5179 = !DILocation(line: 870, column: 18, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5160, file: !1122, discriminator: 1)
!5181 = !DILocation(line: 872, column: 24, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5165, file: !1122, line: 871, column: 85)
!5183 = !DILocation(line: 873, column: 21, scope: !5182)
!5184 = !DILocation(line: 873, column: 28, scope: !5182)
!5185 = !DILocation(line: 873, column: 49, scope: !5182)
!5186 = !DILocation(line: 873, column: 58, scope: !5182)
!5187 = !DILocation(line: 873, column: 66, scope: !5182)
!5188 = !DILocation(line: 872, column: 17, scope: !5182)
!5189 = !DILocation(line: 874, column: 46, scope: !5182)
!5190 = !DILocation(line: 874, column: 55, scope: !5182)
!5191 = !DILocation(line: 874, column: 63, scope: !5182)
!5192 = !DILocation(line: 874, column: 17, scope: !5182)
!5193 = !DILocation(line: 874, column: 24, scope: !5182)
!5194 = !DILocation(line: 874, column: 44, scope: !5182)
!5195 = !DILocation(line: 875, column: 13, scope: !5182)
!5196 = !DILocation(line: 876, column: 17, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5160, file: !1122, line: 876, column: 17)
!5198 = !DILocation(line: 876, column: 24, scope: !5197)
!5199 = !DILocation(line: 876, column: 30, scope: !5197)
!5200 = !DILocation(line: 876, column: 35, scope: !5197)
!5201 = !DILocation(line: 876, column: 38, scope: !5202)
!5202 = !DILexicalBlockFile(scope: !5197, file: !1122, discriminator: 1)
!5203 = !DILocation(line: 876, column: 45, scope: !5202)
!5204 = !DILocation(line: 876, column: 52, scope: !5202)
!5205 = !DILocation(line: 876, column: 17, scope: !5202)
!5206 = !DILocation(line: 877, column: 24, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5197, file: !1122, line: 876, column: 58)
!5208 = !DILocation(line: 877, column: 17, scope: !5207)
!5209 = !DILocation(line: 878, column: 21, scope: !5207)
!5210 = !DILocation(line: 879, column: 17, scope: !5207)
!5211 = !DILocation(line: 881, column: 9, scope: !5160)
!5212 = !DILocation(line: 882, column: 15, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 882, column: 14)
!5214 = !DILocation(line: 882, column: 22, scope: !5213)
!5215 = !DILocation(line: 882, column: 33, scope: !5213)
!5216 = !DILocation(line: 882, column: 55, scope: !5213)
!5217 = !DILocation(line: 882, column: 58, scope: !5218)
!5218 = !DILexicalBlockFile(scope: !5213, file: !1122, discriminator: 1)
!5219 = !DILocation(line: 882, column: 65, scope: !5218)
!5220 = !DILocation(line: 882, column: 76, scope: !5218)
!5221 = !DILocation(line: 883, column: 13, scope: !5213)
!5222 = !DILocation(line: 883, column: 16, scope: !5218)
!5223 = !DILocation(line: 883, column: 23, scope: !5218)
!5224 = !DILocation(line: 883, column: 31, scope: !5218)
!5225 = !DILocation(line: 883, column: 34, scope: !5218)
!5226 = !DILocation(line: 883, column: 37, scope: !5227)
!5227 = !DILexicalBlockFile(scope: !5213, file: !1122, discriminator: 2)
!5228 = !DILocation(line: 883, column: 44, scope: !5227)
!5229 = !DILocation(line: 883, column: 52, scope: !5227)
!5230 = !DILocation(line: 882, column: 14, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !4742, file: !1122, discriminator: 2)
!5232 = !DILocation(line: 884, column: 20, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5213, file: !1122, line: 883, column: 59)
!5234 = !DILocation(line: 884, column: 109, scope: !5233)
!5235 = !DILocation(line: 884, column: 116, scope: !5233)
!5236 = !DILocation(line: 884, column: 126, scope: !5233)
!5237 = !DILocation(line: 884, column: 133, scope: !5233)
!5238 = !DILocation(line: 884, column: 13, scope: !5233)
!5239 = !DILocation(line: 885, column: 9, scope: !5233)
!5240 = !DILocation(line: 887, column: 14, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 887, column: 13)
!5242 = !DILocation(line: 887, column: 21, scope: !5241)
!5243 = !DILocation(line: 887, column: 13, scope: !4742)
!5244 = !DILocation(line: 888, column: 50, scope: !5241)
!5245 = !DILocation(line: 888, column: 57, scope: !5241)
!5246 = !DILocation(line: 888, column: 72, scope: !5241)
!5247 = !DILocation(line: 888, column: 78, scope: !5241)
!5248 = !DILocation(line: 888, column: 13, scope: !5241)
!5249 = !DILocation(line: 888, column: 20, scope: !5241)
!5250 = !DILocation(line: 888, column: 48, scope: !5241)
!5251 = !DILocation(line: 890, column: 13, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 890, column: 13)
!5253 = !DILocation(line: 890, column: 20, scope: !5252)
!5254 = !DILocation(line: 890, column: 36, scope: !5252)
!5255 = !DILocation(line: 890, column: 39, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5252, file: !1122, discriminator: 1)
!5257 = !DILocation(line: 890, column: 46, scope: !5256)
!5258 = !DILocation(line: 890, column: 56, scope: !5256)
!5259 = !DILocation(line: 890, column: 60, scope: !5256)
!5260 = !DILocation(line: 891, column: 13, scope: !5252)
!5261 = !DILocation(line: 891, column: 20, scope: !5252)
!5262 = !DILocation(line: 891, column: 51, scope: !5252)
!5263 = !DILocation(line: 891, column: 58, scope: !5252)
!5264 = !DILocation(line: 891, column: 68, scope: !5252)
!5265 = !DILocation(line: 891, column: 49, scope: !5252)
!5266 = !DILocation(line: 891, column: 36, scope: !5252)
!5267 = !DILocation(line: 890, column: 13, scope: !5231)
!5268 = !DILocation(line: 892, column: 20, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5252, file: !1122, line: 891, column: 73)
!5270 = !DILocation(line: 894, column: 20, scope: !5269)
!5271 = !DILocation(line: 894, column: 27, scope: !5269)
!5272 = !DILocation(line: 895, column: 20, scope: !5269)
!5273 = !DILocation(line: 895, column: 27, scope: !5269)
!5274 = !DILocation(line: 895, column: 37, scope: !5269)
!5275 = !DILocation(line: 896, column: 20, scope: !5269)
!5276 = !DILocation(line: 896, column: 27, scope: !5269)
!5277 = !DILocation(line: 896, column: 37, scope: !5269)
!5278 = !DILocation(line: 892, column: 13, scope: !5269)
!5279 = !DILocation(line: 897, column: 13, scope: !5269)
!5280 = !DILocation(line: 900, column: 13, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !4742, file: !1122, line: 900, column: 13)
!5282 = !DILocation(line: 900, column: 20, scope: !5281)
!5283 = !DILocation(line: 900, column: 13, scope: !4742)
!5284 = !DILocalVariable(name: "frames_ctx", scope: !5285, file: !1122, line: 901, type: !1054)
!5285 = distinct !DILexicalBlock(scope: !5281, file: !1122, line: 900, column: 35)
!5286 = !DILocation(line: 901, column: 32, scope: !5285)
!5287 = !DILocation(line: 901, column: 65, scope: !5285)
!5288 = !DILocation(line: 901, column: 72, scope: !5285)
!5289 = !DILocation(line: 901, column: 87, scope: !5285)
!5290 = !DILocation(line: 901, column: 45, scope: !5285)
!5291 = !DILocation(line: 902, column: 17, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5285, file: !1122, line: 902, column: 17)
!5293 = !DILocation(line: 902, column: 29, scope: !5292)
!5294 = !DILocation(line: 902, column: 39, scope: !5292)
!5295 = !DILocation(line: 902, column: 46, scope: !5292)
!5296 = !DILocation(line: 902, column: 36, scope: !5292)
!5297 = !DILocation(line: 902, column: 17, scope: !5285)
!5298 = !DILocation(line: 903, column: 24, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5292, file: !1122, line: 902, column: 55)
!5300 = !DILocation(line: 903, column: 17, scope: !5299)
!5301 = !DILocation(line: 905, column: 21, scope: !5299)
!5302 = !DILocation(line: 906, column: 17, scope: !5299)
!5303 = !DILocation(line: 908, column: 17, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5285, file: !1122, line: 908, column: 17)
!5305 = !DILocation(line: 908, column: 24, scope: !5304)
!5306 = !DILocation(line: 908, column: 35, scope: !5304)
!5307 = !DILocation(line: 908, column: 54, scope: !5304)
!5308 = !DILocation(line: 909, column: 17, scope: !5304)
!5309 = !DILocation(line: 909, column: 24, scope: !5304)
!5310 = !DILocation(line: 909, column: 38, scope: !5304)
!5311 = !DILocation(line: 909, column: 50, scope: !5304)
!5312 = !DILocation(line: 909, column: 35, scope: !5304)
!5313 = !DILocation(line: 908, column: 17, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5285, file: !1122, discriminator: 1)
!5315 = !DILocation(line: 910, column: 24, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5304, file: !1122, line: 909, column: 61)
!5317 = !DILocation(line: 913, column: 44, scope: !5316)
!5318 = !DILocation(line: 913, column: 51, scope: !5316)
!5319 = !DILocation(line: 913, column: 24, scope: !5316)
!5320 = !DILocation(line: 914, column: 44, scope: !5316)
!5321 = !DILocation(line: 914, column: 56, scope: !5316)
!5322 = !DILocation(line: 914, column: 24, scope: !5316)
!5323 = !DILocation(line: 910, column: 17, scope: !5316)
!5324 = !DILocation(line: 915, column: 21, scope: !5316)
!5325 = !DILocation(line: 916, column: 17, scope: !5316)
!5326 = !DILocation(line: 918, column: 33, scope: !5285)
!5327 = !DILocation(line: 918, column: 45, scope: !5285)
!5328 = !DILocation(line: 918, column: 13, scope: !5285)
!5329 = !DILocation(line: 918, column: 20, scope: !5285)
!5330 = !DILocation(line: 918, column: 31, scope: !5285)
!5331 = !DILocation(line: 919, column: 9, scope: !5285)
!5332 = !DILocation(line: 920, column: 5, scope: !4742)
!5333 = !DILocation(line: 923, column: 5, scope: !4054)
!5334 = !DILocation(line: 923, column: 12, scope: !4054)
!5335 = !DILocation(line: 923, column: 42, scope: !4054)
!5336 = !DILocation(line: 922, column: 5, scope: !4054)
!5337 = !DILocation(line: 922, column: 12, scope: !4054)
!5338 = !DILocation(line: 922, column: 42, scope: !4054)
!5339 = !DILocation(line: 925, column: 5, scope: !4054)
!5340 = !DILocation(line: 925, column: 12, scope: !4054)
!5341 = !DILocation(line: 925, column: 36, scope: !4054)
!5342 = !DILocation(line: 924, column: 5, scope: !4054)
!5343 = !DILocation(line: 924, column: 12, scope: !4054)
!5344 = !DILocation(line: 924, column: 36, scope: !4054)
!5345 = !DILocation(line: 927, column: 16, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 927, column: 10)
!5347 = !DILocation(line: 927, column: 23, scope: !5346)
!5348 = !DILocation(line: 927, column: 29, scope: !5346)
!5349 = !DILocation(line: 928, column: 9, scope: !5346)
!5350 = !DILocation(line: 928, column: 12, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5346, file: !1122, discriminator: 1)
!5352 = !DILocation(line: 928, column: 19, scope: !5351)
!5353 = !DILocation(line: 928, column: 37, scope: !5351)
!5354 = !DILocation(line: 928, column: 42, scope: !5351)
!5355 = !DILocation(line: 927, column: 10, scope: !4578)
!5356 = !DILocation(line: 929, column: 16, scope: !5346)
!5357 = !DILocation(line: 929, column: 9, scope: !5346)
!5358 = !DILocation(line: 932, column: 10, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 932, column: 10)
!5360 = !DILocation(line: 932, column: 17, scope: !5359)
!5361 = !DILocation(line: 932, column: 24, scope: !5359)
!5362 = !DILocation(line: 932, column: 29, scope: !5359)
!5363 = !DILocation(line: 932, column: 35, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !5359, file: !1122, discriminator: 1)
!5365 = !DILocation(line: 932, column: 42, scope: !5364)
!5366 = !DILocation(line: 932, column: 60, scope: !5364)
!5367 = !DILocation(line: 933, column: 9, scope: !5359)
!5368 = !DILocation(line: 933, column: 12, scope: !5364)
!5369 = !DILocation(line: 933, column: 19, scope: !5364)
!5370 = !DILocation(line: 933, column: 29, scope: !5364)
!5371 = !DILocation(line: 932, column: 10, scope: !4523)
!5372 = !DILocation(line: 934, column: 15, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5359, file: !1122, line: 933, column: 52)
!5374 = !DILocation(line: 934, column: 22, scope: !5373)
!5375 = !DILocation(line: 934, column: 29, scope: !5373)
!5376 = !DILocation(line: 934, column: 34, scope: !5373)
!5377 = !DILocation(line: 934, column: 13, scope: !5373)
!5378 = !DILocation(line: 935, column: 13, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5373, file: !1122, line: 935, column: 13)
!5380 = !DILocation(line: 935, column: 17, scope: !5379)
!5381 = !DILocation(line: 935, column: 13, scope: !5373)
!5382 = !DILocation(line: 936, column: 13, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !1122, line: 935, column: 22)
!5384 = !DILocation(line: 938, column: 5, scope: !5373)
!5385 = !DILocation(line: 940, column: 8, scope: !4054)
!5386 = !DILocation(line: 942, column: 29, scope: !4064)
!5387 = !DILocation(line: 942, column: 36, scope: !4064)
!5388 = !DILocation(line: 942, column: 9, scope: !4064)
!5389 = !DILocation(line: 942, column: 9, scope: !4054)
!5390 = !DILocation(line: 943, column: 14, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !4063, file: !1122, line: 943, column: 13)
!5392 = !DILocation(line: 943, column: 21, scope: !5391)
!5393 = !DILocation(line: 943, column: 13, scope: !4063)
!5394 = !DILocation(line: 944, column: 44, scope: !5391)
!5395 = !DILocation(line: 944, column: 31, scope: !5391)
!5396 = !DILocation(line: 944, column: 13, scope: !5391)
!5397 = !DILocation(line: 944, column: 20, scope: !5391)
!5398 = !DILocation(line: 944, column: 29, scope: !5391)
!5399 = !DILocation(line: 946, column: 13, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !4063, file: !1122, line: 946, column: 13)
!5401 = !DILocation(line: 946, column: 20, scope: !5400)
!5402 = !DILocation(line: 946, column: 13, scope: !4063)
!5403 = !DILocalVariable(name: "channels", scope: !5404, file: !1122, line: 947, type: !991)
!5404 = distinct !DILexicalBlock(scope: !5400, file: !1122, line: 946, column: 36)
!5405 = !DILocation(line: 947, column: 17, scope: !5404)
!5406 = !DILocation(line: 947, column: 62, scope: !5404)
!5407 = !DILocation(line: 947, column: 69, scope: !5404)
!5408 = !DILocation(line: 947, column: 28, scope: !5404)
!5409 = !DILocation(line: 948, column: 18, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5404, file: !1122, line: 948, column: 17)
!5411 = !DILocation(line: 948, column: 25, scope: !5410)
!5412 = !DILocation(line: 948, column: 17, scope: !5404)
!5413 = !DILocation(line: 949, column: 35, scope: !5410)
!5414 = !DILocation(line: 949, column: 17, scope: !5410)
!5415 = !DILocation(line: 949, column: 24, scope: !5410)
!5416 = !DILocation(line: 949, column: 33, scope: !5410)
!5417 = !DILocation(line: 950, column: 22, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5410, file: !1122, line: 950, column: 22)
!5419 = !DILocation(line: 950, column: 34, scope: !5418)
!5420 = !DILocation(line: 950, column: 41, scope: !5418)
!5421 = !DILocation(line: 950, column: 31, scope: !5418)
!5422 = !DILocation(line: 950, column: 22, scope: !5410)
!5423 = !DILocalVariable(name: "buf", scope: !5424, file: !1122, line: 951, type: !5080)
!5424 = distinct !DILexicalBlock(scope: !5418, file: !1122, line: 950, column: 51)
!5425 = !DILocation(line: 951, column: 22, scope: !5424)
!5426 = !DILocation(line: 952, column: 46, scope: !5424)
!5427 = !DILocation(line: 952, column: 68, scope: !5424)
!5428 = !DILocation(line: 952, column: 75, scope: !5424)
!5429 = !DILocation(line: 952, column: 17, scope: !5424)
!5430 = !DILocation(line: 953, column: 24, scope: !5424)
!5431 = !DILocation(line: 956, column: 24, scope: !5424)
!5432 = !DILocation(line: 956, column: 29, scope: !5424)
!5433 = !DILocation(line: 956, column: 39, scope: !5424)
!5434 = !DILocation(line: 956, column: 46, scope: !5424)
!5435 = !DILocation(line: 953, column: 17, scope: !5424)
!5436 = !DILocation(line: 957, column: 17, scope: !5424)
!5437 = !DILocation(line: 957, column: 24, scope: !5424)
!5438 = !DILocation(line: 957, column: 39, scope: !5424)
!5439 = !DILocation(line: 958, column: 13, scope: !5424)
!5440 = !DILocation(line: 959, column: 9, scope: !5404)
!5441 = !DILocation(line: 960, column: 13, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !4063, file: !1122, line: 960, column: 13)
!5443 = !DILocation(line: 960, column: 20, scope: !5442)
!5444 = !DILocation(line: 960, column: 29, scope: !5442)
!5445 = !DILocation(line: 960, column: 32, scope: !5446)
!5446 = !DILexicalBlockFile(scope: !5442, file: !1122, discriminator: 1)
!5447 = !DILocation(line: 960, column: 39, scope: !5446)
!5448 = !DILocation(line: 960, column: 48, scope: !5446)
!5449 = !DILocation(line: 960, column: 52, scope: !5446)
!5450 = !DILocation(line: 961, column: 13, scope: !5442)
!5451 = !DILocation(line: 961, column: 20, scope: !5442)
!5452 = !DILocation(line: 961, column: 29, scope: !5442)
!5453 = !DILocation(line: 960, column: 13, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !4063, file: !1122, discriminator: 2)
!5455 = !DILocation(line: 962, column: 17, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5442, file: !1122, line: 961, column: 37)
!5457 = !DILocation(line: 963, column: 13, scope: !5456)
!5458 = !DILocation(line: 965, column: 13, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !4063, file: !1122, line: 965, column: 13)
!5460 = !DILocation(line: 965, column: 20, scope: !5459)
!5461 = !DILocation(line: 965, column: 13, scope: !4063)
!5462 = !DILocation(line: 966, column: 17, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !1122, line: 966, column: 17)
!5464 = distinct !DILexicalBlock(scope: !5459, file: !1122, line: 965, column: 33)
!5465 = !DILocation(line: 966, column: 24, scope: !5463)
!5466 = !DILocation(line: 966, column: 35, scope: !5463)
!5467 = !DILocation(line: 966, column: 17, scope: !5464)
!5468 = !DILocation(line: 967, column: 24, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5463, file: !1122, line: 966, column: 61)
!5470 = !DILocation(line: 967, column: 17, scope: !5469)
!5471 = !DILocation(line: 969, column: 21, scope: !5469)
!5472 = !DILocation(line: 970, column: 17, scope: !5469)
!5473 = !DILocation(line: 971, column: 24, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5463, file: !1122, line: 971, column: 24)
!5475 = !DILocation(line: 971, column: 31, scope: !5474)
!5476 = !DILocation(line: 971, column: 49, scope: !5474)
!5477 = !DILocation(line: 971, column: 55, scope: !5474)
!5478 = !DILocation(line: 971, column: 24, scope: !5463)
!5479 = !DILocation(line: 972, column: 24, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5474, file: !1122, line: 971, column: 68)
!5481 = !DILocation(line: 974, column: 24, scope: !5480)
!5482 = !DILocation(line: 974, column: 31, scope: !5480)
!5483 = !DILocation(line: 974, column: 49, scope: !5480)
!5484 = !DILocation(line: 972, column: 17, scope: !5480)
!5485 = !DILocation(line: 975, column: 17, scope: !5480)
!5486 = !DILocation(line: 975, column: 24, scope: !5480)
!5487 = !DILocation(line: 975, column: 41, scope: !5480)
!5488 = !DILocation(line: 976, column: 13, scope: !5480)
!5489 = !DILocation(line: 979, column: 21, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !1122, line: 979, column: 21)
!5491 = distinct !DILexicalBlock(scope: !5474, file: !1122, line: 976, column: 20)
!5492 = !DILocation(line: 979, column: 28, scope: !5490)
!5493 = !DILocation(line: 979, column: 45, scope: !5490)
!5494 = !DILocation(line: 979, column: 21, scope: !5491)
!5495 = !DILocation(line: 980, column: 21, scope: !5490)
!5496 = !DILocation(line: 980, column: 28, scope: !5490)
!5497 = !DILocation(line: 980, column: 45, scope: !5490)
!5498 = !DILocation(line: 982, column: 21, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5491, file: !1122, line: 982, column: 21)
!5500 = !DILocation(line: 982, column: 28, scope: !5499)
!5501 = !DILocation(line: 982, column: 45, scope: !5499)
!5502 = !DILocation(line: 982, column: 21, scope: !5491)
!5503 = !DILocalVariable(name: "cd", scope: !5504, file: !1122, line: 984, type: !1109)
!5504 = distinct !DILexicalBlock(scope: !5499, file: !1122, line: 982, column: 51)
!5505 = !DILocation(line: 984, column: 29, scope: !5504)
!5506 = !DILocation(line: 984, column: 54, scope: !5504)
!5507 = !DILocation(line: 984, column: 61, scope: !5504)
!5508 = !DILocation(line: 984, column: 34, scope: !5504)
!5509 = !DILocation(line: 985, column: 25, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !1122, line: 985, column: 25)
!5511 = !DILocation(line: 985, column: 28, scope: !5510)
!5512 = !DILocation(line: 985, column: 25, scope: !5504)
!5513 = !DILocation(line: 986, column: 32, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5510, file: !1122, line: 985, column: 44)
!5515 = !DILocation(line: 986, column: 31, scope: !5514)
!5516 = !DILocation(line: 986, column: 29, scope: !5514)
!5517 = !DILocation(line: 987, column: 32, scope: !5514)
!5518 = !DILocation(line: 988, column: 74, scope: !5514)
!5519 = !DILocation(line: 988, column: 81, scope: !5514)
!5520 = !DILocation(line: 987, column: 25, scope: !5514)
!5521 = !DILocation(line: 989, column: 25, scope: !5514)
!5522 = !DILocation(line: 991, column: 33, scope: !5504)
!5523 = !DILocation(line: 991, column: 21, scope: !5504)
!5524 = !DILocation(line: 999, column: 17, scope: !5504)
!5525 = !DILocation(line: 1001, column: 9, scope: !5464)
!5526 = !DILocation(line: 1004, column: 13, scope: !4062)
!5527 = !DILocation(line: 1004, column: 20, scope: !4062)
!5528 = !DILocation(line: 1004, column: 30, scope: !4062)
!5529 = !DILocation(line: 1004, column: 34, scope: !4062)
!5530 = !DILocation(line: 1004, column: 38, scope: !4062)
!5531 = !DILocation(line: 1004, column: 41, scope: !4061)
!5532 = !DILocation(line: 1004, column: 48, scope: !4061)
!5533 = !DILocation(line: 1004, column: 58, scope: !4061)
!5534 = !DILocation(line: 1004, column: 62, scope: !4061)
!5535 = !DILocation(line: 1004, column: 13, scope: !4061)
!5536 = !DILocation(line: 1005, column: 13, scope: !4062)
!5537 = !DILocation(line: 1005, column: 20, scope: !4062)
!5538 = !DILocation(line: 1005, column: 50, scope: !4062)
!5539 = !DILocation(line: 1005, column: 57, scope: !4062)
!5540 = !DILocation(line: 1005, column: 80, scope: !4062)
!5541 = !DILocation(line: 1005, column: 81, scope: !4062)
!5542 = !DILocation(line: 1005, column: 88, scope: !4062)
!5543 = !DILocation(line: 1005, column: 41, scope: !4062)
!5544 = !DILocation(line: 1005, column: 32, scope: !4062)
!5545 = !DILocation(line: 1005, column: 32, scope: !4061)
!5546 = !DILocation(line: 161, column: 20, scope: !4056, inlinedAt: !4060)
!5547 = !DILocation(line: 161, column: 24, scope: !4056, inlinedAt: !4060)
!5548 = !DILocation(line: 161, column: 31, scope: !4056, inlinedAt: !4060)
!5549 = !DILocation(line: 162, column: 12, scope: !4056, inlinedAt: !4060)
!5550 = !DILocation(line: 162, column: 5, scope: !4056, inlinedAt: !4060)
!5551 = !DILocation(line: 1005, column: 32, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !4062, file: !1122, discriminator: 2)
!5553 = !DILocation(line: 1007, column: 5, scope: !4063)
!5554 = !DILocation(line: 1008, column: 9, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 1008, column: 9)
!5556 = !DILocation(line: 1008, column: 16, scope: !5555)
!5557 = !DILocation(line: 1008, column: 31, scope: !5555)
!5558 = !DILocation(line: 1008, column: 35, scope: !5555)
!5559 = !DILocation(line: 1008, column: 38, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5555, file: !1122, discriminator: 1)
!5561 = !DILocation(line: 1008, column: 45, scope: !5560)
!5562 = !DILocation(line: 1008, column: 55, scope: !5560)
!5563 = !DILocation(line: 1008, column: 58, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5555, file: !1122, discriminator: 2)
!5565 = !DILocation(line: 1008, column: 65, scope: !5564)
!5566 = !DILocation(line: 1008, column: 9, scope: !5564)
!5567 = !DILocation(line: 1009, column: 9, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5555, file: !1122, line: 1008, column: 77)
!5569 = distinct !{!5569, !5567}
!5570 = !DILocation(line: 1009, column: 39, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5572, file: !1122, discriminator: 1)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !1122, line: 1009, column: 18)
!5573 = distinct !DILexicalBlock(scope: !5568, file: !1122, line: 1009, column: 12)
!5574 = !DILocation(line: 1009, column: 46, scope: !5571)
!5575 = !DILocation(line: 1009, column: 21, scope: !5571)
!5576 = !DILocation(line: 1009, column: 20, scope: !5571)
!5577 = !DILocation(line: 1009, column: 59, scope: !5571)
!5578 = !DILocation(line: 1009, column: 66, scope: !5571)
!5579 = !DILocation(line: 1009, column: 56, scope: !5571)
!5580 = !DILocation(line: 1009, column: 18, scope: !5571)
!5581 = !DILocation(line: 1009, column: 81, scope: !5582)
!5582 = !DILexicalBlockFile(scope: !5583, file: !1122, discriminator: 2)
!5583 = distinct !DILexicalBlock(scope: !5572, file: !1122, line: 1009, column: 79)
!5584 = !DILocation(line: 1009, column: 136, scope: !5585)
!5585 = !DILexicalBlockFile(scope: !5582, file: !1122, discriminator: 4)
!5586 = !DILocation(line: 1009, column: 136, scope: !5582)
!5587 = !DILocation(line: 1009, column: 147, scope: !5588)
!5588 = !DILexicalBlockFile(scope: !5573, file: !1122, discriminator: 3)
!5589 = !DILocation(line: 1010, column: 5, scope: !5568)
!5590 = !DILocation(line: 1008, column: 65, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !5555, file: !1122, discriminator: 3)
!5592 = !DILocation(line: 1013, column: 23, scope: !4054)
!5593 = !DILocation(line: 1013, column: 5, scope: !4054)
!5594 = !DILocation(line: 1014, column: 9, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 1014, column: 9)
!5596 = !DILocation(line: 1014, column: 9, scope: !4054)
!5597 = !DILocation(line: 1015, column: 22, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !1122, line: 1014, column: 18)
!5599 = !DILocation(line: 1015, column: 9, scope: !5598)
!5600 = !DILocation(line: 1016, column: 20, scope: !5598)
!5601 = !DILocation(line: 1016, column: 10, scope: !5598)
!5602 = !DILocation(line: 1016, column: 18, scope: !5598)
!5603 = !DILocation(line: 1017, column: 5, scope: !5598)
!5604 = !DILocation(line: 1019, column: 12, scope: !4054)
!5605 = !DILocation(line: 1019, column: 5, scope: !4054)
!5606 = !DILocation(line: 1021, column: 9, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 1021, column: 9)
!5608 = !DILocation(line: 1021, column: 16, scope: !5607)
!5609 = !DILocation(line: 1021, column: 22, scope: !5607)
!5610 = !DILocation(line: 1022, column: 10, scope: !5607)
!5611 = !DILocation(line: 1022, column: 17, scope: !5607)
!5612 = !DILocation(line: 1022, column: 24, scope: !5607)
!5613 = !DILocation(line: 1022, column: 38, scope: !5607)
!5614 = !DILocation(line: 1021, column: 9, scope: !4578)
!5615 = !DILocation(line: 1023, column: 9, scope: !5607)
!5616 = !DILocation(line: 1023, column: 16, scope: !5607)
!5617 = !DILocation(line: 1023, column: 23, scope: !5607)
!5618 = !DILocation(line: 1023, column: 29, scope: !5607)
!5619 = !DILocation(line: 1025, column: 9, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 1025, column: 9)
!5621 = !DILocation(line: 1025, column: 16, scope: !5620)
!5622 = !DILocation(line: 1025, column: 27, scope: !5620)
!5623 = !DILocation(line: 1025, column: 30, scope: !5624)
!5624 = !DILexicalBlockFile(scope: !5620, file: !1122, discriminator: 1)
!5625 = !DILocation(line: 1025, column: 37, scope: !5624)
!5626 = !DILocation(line: 1025, column: 9, scope: !5624)
!5627 = !DILocation(line: 1026, column: 21, scope: !5620)
!5628 = !DILocation(line: 1026, column: 28, scope: !5620)
!5629 = !DILocation(line: 1026, column: 9, scope: !5620)
!5630 = !DILocation(line: 1027, column: 17, scope: !4054)
!5631 = !DILocation(line: 1027, column: 5, scope: !4054)
!5632 = !DILocation(line: 1031, column: 20, scope: !4054)
!5633 = !DILocation(line: 1031, column: 27, scope: !4054)
!5634 = !DILocation(line: 1031, column: 5, scope: !4054)
!5635 = !DILocation(line: 1035, column: 5, scope: !4054)
!5636 = !DILocation(line: 1036, column: 15, scope: !4054)
!5637 = !DILocation(line: 1036, column: 22, scope: !4054)
!5638 = !DILocation(line: 1036, column: 14, scope: !4054)
!5639 = !DILocation(line: 1036, column: 5, scope: !4054)
!5640 = !DILocation(line: 1037, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !4054, file: !1122, line: 1037, column: 9)
!5642 = !DILocation(line: 1037, column: 16, scope: !5641)
!5643 = !DILocation(line: 1037, column: 9, scope: !4054)
!5644 = !DILocation(line: 1038, column: 24, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !1122, line: 1037, column: 26)
!5646 = !DILocation(line: 1038, column: 31, scope: !5645)
!5647 = !DILocation(line: 1038, column: 41, scope: !5645)
!5648 = !DILocation(line: 1038, column: 9, scope: !5645)
!5649 = !DILocation(line: 1039, column: 24, scope: !5645)
!5650 = !DILocation(line: 1039, column: 31, scope: !5645)
!5651 = !DILocation(line: 1039, column: 41, scope: !5645)
!5652 = !DILocation(line: 1039, column: 9, scope: !5645)
!5653 = !DILocation(line: 1040, column: 24, scope: !5645)
!5654 = !DILocation(line: 1040, column: 31, scope: !5645)
!5655 = !DILocation(line: 1040, column: 41, scope: !5645)
!5656 = !DILocation(line: 1040, column: 9, scope: !5645)
!5657 = !DILocation(line: 1041, column: 25, scope: !5645)
!5658 = !DILocation(line: 1041, column: 32, scope: !5645)
!5659 = !DILocation(line: 1041, column: 42, scope: !5645)
!5660 = !DILocation(line: 1041, column: 9, scope: !5645)
!5661 = !DILocation(line: 1042, column: 25, scope: !5645)
!5662 = !DILocation(line: 1042, column: 32, scope: !5645)
!5663 = !DILocation(line: 1042, column: 42, scope: !5645)
!5664 = !DILocation(line: 1042, column: 9, scope: !5645)
!5665 = !DILocation(line: 1044, column: 25, scope: !5645)
!5666 = !DILocation(line: 1044, column: 32, scope: !5645)
!5667 = !DILocation(line: 1044, column: 42, scope: !5645)
!5668 = !DILocation(line: 1044, column: 45, scope: !5645)
!5669 = !DILocation(line: 1044, column: 9, scope: !5645)
!5670 = !DILocation(line: 1045, column: 31, scope: !5645)
!5671 = !DILocation(line: 1045, column: 9, scope: !5645)
!5672 = !DILocation(line: 1047, column: 19, scope: !5645)
!5673 = !DILocation(line: 1047, column: 26, scope: !5645)
!5674 = !DILocation(line: 1047, column: 36, scope: !5645)
!5675 = !DILocation(line: 1047, column: 18, scope: !5645)
!5676 = !DILocation(line: 1047, column: 9, scope: !5645)
!5677 = !DILocation(line: 1048, column: 5, scope: !5645)
!5678 = !DILocation(line: 1049, column: 15, scope: !4054)
!5679 = !DILocation(line: 1049, column: 22, scope: !4054)
!5680 = !DILocation(line: 1049, column: 14, scope: !4054)
!5681 = !DILocation(line: 1049, column: 5, scope: !4054)
!5682 = !DILocation(line: 1050, column: 5, scope: !4054)
!5683 = !DILocation(line: 1050, column: 12, scope: !4054)
!5684 = !DILocation(line: 1050, column: 18, scope: !4054)
!5685 = !DILocation(line: 1051, column: 5, scope: !4054)
!5686 = !DILocation(line: 1052, column: 1, scope: !4054)
!5687 = distinct !DISubprogram(name: "ff_lock_avcodec", scope: !1122, file: !1122, line: 518, type: !5688, isLocal: true, isDefinition: true, scopeLine: 519, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5688 = !DISubroutineType(types: !5689)
!5689 = !{null, !1374, !1330}
!5690 = !DILocalVariable(name: "log_ctx", arg: 1, scope: !5687, file: !1122, line: 518, type: !1374)
!5691 = !DILocation(line: 518, column: 45, scope: !5687)
!5692 = !DILocalVariable(name: "codec", arg: 2, scope: !5687, file: !1122, line: 518, type: !1330)
!5693 = !DILocation(line: 518, column: 69, scope: !5687)
!5694 = !DILocation(line: 520, column: 11, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5687, file: !1122, line: 520, column: 9)
!5696 = !DILocation(line: 520, column: 18, scope: !5695)
!5697 = !DILocation(line: 520, column: 32, scope: !5695)
!5698 = !DILocation(line: 520, column: 44, scope: !5695)
!5699 = !DILocation(line: 520, column: 47, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !5695, file: !1122, discriminator: 1)
!5701 = !DILocation(line: 520, column: 54, scope: !5700)
!5702 = !DILocation(line: 520, column: 9, scope: !5700)
!5703 = !DILocation(line: 521, column: 9, scope: !5695)
!5704 = !DILocation(line: 522, column: 1, scope: !5687)
!5705 = distinct !DISubprogram(name: "avcodec_is_open", scope: !1122, file: !1122, line: 1873, type: !1372, isLocal: false, isDefinition: true, scopeLine: 1874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5706 = !DILocalVariable(name: "s", arg: 1, scope: !5705, file: !1122, line: 1873, type: !1374)
!5707 = !DILocation(line: 1873, column: 37, scope: !5705)
!5708 = !DILocation(line: 1875, column: 14, scope: !5705)
!5709 = !DILocation(line: 1875, column: 17, scope: !5705)
!5710 = !DILocation(line: 1875, column: 13, scope: !5705)
!5711 = !DILocation(line: 1875, column: 12, scope: !5705)
!5712 = !DILocation(line: 1875, column: 5, scope: !5705)
!5713 = distinct !DISubprogram(name: "av_x_if_null", scope: !4, file: !4, line: 308, type: !5714, isLocal: true, isDefinition: true, scopeLine: 309, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{!964, !5716, !5716}
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64, align: 64)
!5717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5718 = !DILocalVariable(name: "p", arg: 1, scope: !5713, file: !4, line: 308, type: !5716)
!5719 = !DILocation(line: 308, column: 46, scope: !5713)
!5720 = !DILocalVariable(name: "x", arg: 2, scope: !5713, file: !4, line: 308, type: !5716)
!5721 = !DILocation(line: 308, column: 61, scope: !5713)
!5722 = !DILocation(line: 310, column: 31, scope: !5713)
!5723 = !DILocation(line: 310, column: 35, scope: !5724)
!5724 = !DILexicalBlockFile(scope: !5713, file: !4, discriminator: 1)
!5725 = !DILocation(line: 310, column: 31, scope: !5724)
!5726 = !DILocation(line: 310, column: 39, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5713, file: !4, discriminator: 2)
!5728 = !DILocation(line: 310, column: 31, scope: !5727)
!5729 = !DILocation(line: 310, column: 31, scope: !5730)
!5730 = !DILexicalBlockFile(scope: !5713, file: !4, discriminator: 3)
!5731 = !DILocation(line: 310, column: 20, scope: !5730)
!5732 = !DILocation(line: 310, column: 12, scope: !5730)
!5733 = !DILocation(line: 310, column: 5, scope: !5730)
!5734 = distinct !DISubprogram(name: "get_bit_rate", scope: !1122, file: !1122, line: 494, type: !5735, isLocal: true, isDefinition: true, scopeLine: 495, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!997, !1374}
!5737 = !DILocalVariable(name: "ctx", arg: 1, scope: !5734, file: !1122, line: 494, type: !1374)
!5738 = !DILocation(line: 494, column: 45, scope: !5734)
!5739 = !DILocalVariable(name: "bit_rate", scope: !5734, file: !1122, line: 496, type: !997)
!5740 = !DILocation(line: 496, column: 13, scope: !5734)
!5741 = !DILocalVariable(name: "bits_per_sample", scope: !5734, file: !1122, line: 497, type: !991)
!5742 = !DILocation(line: 497, column: 9, scope: !5734)
!5743 = !DILocation(line: 499, column: 13, scope: !5734)
!5744 = !DILocation(line: 499, column: 18, scope: !5734)
!5745 = !DILocation(line: 499, column: 5, scope: !5734)
!5746 = !DILocation(line: 504, column: 20, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5734, file: !1122, line: 499, column: 30)
!5748 = !DILocation(line: 504, column: 25, scope: !5747)
!5749 = !DILocation(line: 504, column: 18, scope: !5747)
!5750 = !DILocation(line: 505, column: 9, scope: !5747)
!5751 = !DILocation(line: 507, column: 50, scope: !5747)
!5752 = !DILocation(line: 507, column: 55, scope: !5747)
!5753 = !DILocation(line: 507, column: 27, scope: !5747)
!5754 = !DILocation(line: 507, column: 25, scope: !5747)
!5755 = !DILocation(line: 508, column: 20, scope: !5747)
!5756 = !DILocation(line: 508, column: 38, scope: !5757)
!5757 = !DILexicalBlockFile(scope: !5747, file: !1122, discriminator: 1)
!5758 = !DILocation(line: 508, column: 43, scope: !5757)
!5759 = !DILocation(line: 508, column: 66, scope: !5757)
!5760 = !DILocation(line: 508, column: 71, scope: !5757)
!5761 = !DILocation(line: 508, column: 57, scope: !5757)
!5762 = !DILocation(line: 508, column: 55, scope: !5757)
!5763 = !DILocation(line: 508, column: 82, scope: !5757)
!5764 = !DILocation(line: 508, column: 80, scope: !5757)
!5765 = !DILocation(line: 508, column: 20, scope: !5757)
!5766 = !DILocation(line: 508, column: 100, scope: !5767)
!5767 = !DILexicalBlockFile(scope: !5747, file: !1122, discriminator: 2)
!5768 = !DILocation(line: 508, column: 105, scope: !5767)
!5769 = !DILocation(line: 508, column: 20, scope: !5767)
!5770 = !DILocation(line: 508, column: 20, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !5747, file: !1122, discriminator: 3)
!5772 = !DILocation(line: 508, column: 18, scope: !5771)
!5773 = !DILocation(line: 509, column: 9, scope: !5747)
!5774 = !DILocation(line: 511, column: 18, scope: !5747)
!5775 = !DILocation(line: 512, column: 9, scope: !5747)
!5776 = !DILocation(line: 514, column: 12, scope: !5734)
!5777 = !DILocation(line: 514, column: 5, scope: !5734)
!5778 = distinct !DISubprogram(name: "avsubtitle_free", scope: !1122, file: !1122, line: 1054, type: !5779, isLocal: false, isDefinition: true, scopeLine: 1055, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{null, !5781}
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 64, align: 64)
!5782 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitle", file: !14, line: 3927, baseType: !2813)
!5783 = !DILocalVariable(name: "sub", arg: 1, scope: !5778, file: !1122, line: 1054, type: !5781)
!5784 = !DILocation(line: 1054, column: 34, scope: !5778)
!5785 = !DILocalVariable(name: "i", scope: !5778, file: !1122, line: 1056, type: !991)
!5786 = !DILocation(line: 1056, column: 9, scope: !5778)
!5787 = !DILocation(line: 1058, column: 12, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5778, file: !1122, line: 1058, column: 5)
!5789 = !DILocation(line: 1058, column: 10, scope: !5788)
!5790 = !DILocation(line: 1058, column: 17, scope: !5791)
!5791 = !DILexicalBlockFile(scope: !5792, file: !1122, discriminator: 1)
!5792 = distinct !DILexicalBlock(scope: !5788, file: !1122, line: 1058, column: 5)
!5793 = !DILocation(line: 1058, column: 21, scope: !5791)
!5794 = !DILocation(line: 1058, column: 26, scope: !5791)
!5795 = !DILocation(line: 1058, column: 19, scope: !5791)
!5796 = !DILocation(line: 1058, column: 5, scope: !5791)
!5797 = !DILocation(line: 1059, column: 30, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5792, file: !1122, line: 1058, column: 42)
!5799 = !DILocation(line: 1059, column: 19, scope: !5798)
!5800 = !DILocation(line: 1059, column: 24, scope: !5798)
!5801 = !DILocation(line: 1059, column: 34, scope: !5798)
!5802 = !DILocation(line: 1059, column: 18, scope: !5798)
!5803 = !DILocation(line: 1059, column: 9, scope: !5798)
!5804 = !DILocation(line: 1060, column: 30, scope: !5798)
!5805 = !DILocation(line: 1060, column: 19, scope: !5798)
!5806 = !DILocation(line: 1060, column: 24, scope: !5798)
!5807 = !DILocation(line: 1060, column: 34, scope: !5798)
!5808 = !DILocation(line: 1060, column: 18, scope: !5798)
!5809 = !DILocation(line: 1060, column: 9, scope: !5798)
!5810 = !DILocation(line: 1061, column: 30, scope: !5798)
!5811 = !DILocation(line: 1061, column: 19, scope: !5798)
!5812 = !DILocation(line: 1061, column: 24, scope: !5798)
!5813 = !DILocation(line: 1061, column: 34, scope: !5798)
!5814 = !DILocation(line: 1061, column: 18, scope: !5798)
!5815 = !DILocation(line: 1061, column: 9, scope: !5798)
!5816 = !DILocation(line: 1062, column: 30, scope: !5798)
!5817 = !DILocation(line: 1062, column: 19, scope: !5798)
!5818 = !DILocation(line: 1062, column: 24, scope: !5798)
!5819 = !DILocation(line: 1062, column: 34, scope: !5798)
!5820 = !DILocation(line: 1062, column: 18, scope: !5798)
!5821 = !DILocation(line: 1062, column: 9, scope: !5798)
!5822 = !DILocation(line: 1063, column: 30, scope: !5798)
!5823 = !DILocation(line: 1063, column: 19, scope: !5798)
!5824 = !DILocation(line: 1063, column: 24, scope: !5798)
!5825 = !DILocation(line: 1063, column: 34, scope: !5798)
!5826 = !DILocation(line: 1063, column: 18, scope: !5798)
!5827 = !DILocation(line: 1063, column: 9, scope: !5798)
!5828 = !DILocation(line: 1064, column: 30, scope: !5798)
!5829 = !DILocation(line: 1064, column: 19, scope: !5798)
!5830 = !DILocation(line: 1064, column: 24, scope: !5798)
!5831 = !DILocation(line: 1064, column: 34, scope: !5798)
!5832 = !DILocation(line: 1064, column: 18, scope: !5798)
!5833 = !DILocation(line: 1064, column: 9, scope: !5798)
!5834 = !DILocation(line: 1065, column: 30, scope: !5798)
!5835 = !DILocation(line: 1065, column: 19, scope: !5798)
!5836 = !DILocation(line: 1065, column: 24, scope: !5798)
!5837 = !DILocation(line: 1065, column: 18, scope: !5798)
!5838 = !DILocation(line: 1065, column: 9, scope: !5798)
!5839 = !DILocation(line: 1066, column: 5, scope: !5798)
!5840 = !DILocation(line: 1058, column: 38, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5792, file: !1122, discriminator: 2)
!5842 = !DILocation(line: 1058, column: 5, scope: !5841)
!5843 = distinct !{!5843, !5844}
!5844 = !DILocation(line: 1058, column: 5, scope: !5778)
!5845 = !DILocation(line: 1068, column: 15, scope: !5778)
!5846 = !DILocation(line: 1068, column: 20, scope: !5778)
!5847 = !DILocation(line: 1068, column: 14, scope: !5778)
!5848 = !DILocation(line: 1068, column: 5, scope: !5778)
!5849 = !DILocation(line: 1070, column: 12, scope: !5778)
!5850 = !DILocation(line: 1070, column: 5, scope: !5778)
!5851 = !DILocation(line: 1071, column: 1, scope: !5778)
!5852 = distinct !DISubprogram(name: "avcodec_close", scope: !1122, file: !1122, line: 1073, type: !1372, isLocal: false, isDefinition: true, scopeLine: 1074, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!5853 = !DILocalVariable(name: "avctx", arg: 1, scope: !5852, file: !1122, line: 1073, type: !1374)
!5854 = !DILocation(line: 1073, column: 57, scope: !5852)
!5855 = !DILocalVariable(name: "i", scope: !5852, file: !1122, line: 1075, type: !991)
!5856 = !DILocation(line: 1075, column: 9, scope: !5852)
!5857 = !DILocation(line: 1077, column: 10, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !1122, line: 1077, column: 9)
!5859 = !DILocation(line: 1077, column: 9, scope: !5852)
!5860 = !DILocation(line: 1078, column: 9, scope: !5858)
!5861 = !DILocation(line: 1080, column: 25, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5852, file: !1122, line: 1080, column: 9)
!5863 = !DILocation(line: 1080, column: 9, scope: !5862)
!5864 = !DILocation(line: 1080, column: 9, scope: !5852)
!5865 = !DILocalVariable(name: "pool", scope: !5866, file: !1122, line: 1081, type: !1479)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !1122, line: 1080, column: 33)
!5867 = !DILocation(line: 1081, column: 20, scope: !5866)
!5868 = !DILocation(line: 1081, column: 27, scope: !5866)
!5869 = !DILocation(line: 1081, column: 34, scope: !5866)
!5870 = !DILocation(line: 1081, column: 44, scope: !5866)
!5871 = !DILocation(line: 1083, column: 13, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5866, file: !1122, line: 1082, column: 13)
!5873 = !DILocation(line: 1083, column: 20, scope: !5872)
!5874 = !DILocation(line: 1083, column: 30, scope: !5872)
!5875 = !DILocation(line: 1083, column: 51, scope: !5872)
!5876 = !DILocation(line: 1083, column: 54, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5872, file: !1122, discriminator: 1)
!5878 = !DILocation(line: 1083, column: 61, scope: !5877)
!5879 = !DILocation(line: 1083, column: 74, scope: !5877)
!5880 = !DILocation(line: 1082, column: 13, scope: !5866)
!5881 = !DILocation(line: 1084, column: 42, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5872, file: !1122, line: 1083, column: 79)
!5883 = !DILocation(line: 1084, column: 13, scope: !5882)
!5884 = !DILocation(line: 1085, column: 9, scope: !5882)
!5885 = !DILocation(line: 1086, column: 18, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5866, file: !1122, line: 1086, column: 13)
!5887 = !DILocation(line: 1086, column: 25, scope: !5886)
!5888 = !DILocation(line: 1086, column: 35, scope: !5886)
!5889 = !DILocation(line: 1086, column: 13, scope: !5866)
!5890 = !DILocation(line: 1087, column: 28, scope: !5886)
!5891 = !DILocation(line: 1087, column: 13, scope: !5886)
!5892 = !DILocation(line: 1088, column: 13, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5866, file: !1122, line: 1088, column: 13)
!5894 = !DILocation(line: 1088, column: 20, scope: !5893)
!5895 = !DILocation(line: 1088, column: 26, scope: !5893)
!5896 = !DILocation(line: 1088, column: 29, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5893, file: !1122, discriminator: 1)
!5898 = !DILocation(line: 1088, column: 36, scope: !5897)
!5899 = !DILocation(line: 1088, column: 43, scope: !5897)
!5900 = !DILocation(line: 1088, column: 13, scope: !5897)
!5901 = !DILocation(line: 1089, column: 13, scope: !5893)
!5902 = !DILocation(line: 1089, column: 20, scope: !5893)
!5903 = !DILocation(line: 1089, column: 27, scope: !5893)
!5904 = !DILocation(line: 1089, column: 33, scope: !5893)
!5905 = !DILocation(line: 1090, column: 9, scope: !5866)
!5906 = !DILocation(line: 1090, column: 16, scope: !5866)
!5907 = !DILocation(line: 1090, column: 26, scope: !5866)
!5908 = !DILocation(line: 1090, column: 43, scope: !5866)
!5909 = !DILocation(line: 1091, column: 19, scope: !5866)
!5910 = !DILocation(line: 1091, column: 26, scope: !5866)
!5911 = !DILocation(line: 1091, column: 36, scope: !5866)
!5912 = !DILocation(line: 1091, column: 18, scope: !5866)
!5913 = !DILocation(line: 1091, column: 9, scope: !5866)
!5914 = !DILocation(line: 1092, column: 24, scope: !5866)
!5915 = !DILocation(line: 1092, column: 31, scope: !5866)
!5916 = !DILocation(line: 1092, column: 41, scope: !5866)
!5917 = !DILocation(line: 1092, column: 9, scope: !5866)
!5918 = !DILocation(line: 1093, column: 24, scope: !5866)
!5919 = !DILocation(line: 1093, column: 31, scope: !5866)
!5920 = !DILocation(line: 1093, column: 41, scope: !5866)
!5921 = !DILocation(line: 1093, column: 9, scope: !5866)
!5922 = !DILocation(line: 1094, column: 24, scope: !5866)
!5923 = !DILocation(line: 1094, column: 31, scope: !5866)
!5924 = !DILocation(line: 1094, column: 41, scope: !5866)
!5925 = !DILocation(line: 1094, column: 9, scope: !5866)
!5926 = !DILocation(line: 1095, column: 25, scope: !5866)
!5927 = !DILocation(line: 1095, column: 32, scope: !5866)
!5928 = !DILocation(line: 1095, column: 42, scope: !5866)
!5929 = !DILocation(line: 1095, column: 9, scope: !5866)
!5930 = !DILocation(line: 1096, column: 25, scope: !5866)
!5931 = !DILocation(line: 1096, column: 32, scope: !5866)
!5932 = !DILocation(line: 1096, column: 42, scope: !5866)
!5933 = !DILocation(line: 1096, column: 9, scope: !5866)
!5934 = !DILocation(line: 1098, column: 25, scope: !5866)
!5935 = !DILocation(line: 1098, column: 32, scope: !5866)
!5936 = !DILocation(line: 1098, column: 42, scope: !5866)
!5937 = !DILocation(line: 1098, column: 45, scope: !5866)
!5938 = !DILocation(line: 1098, column: 9, scope: !5866)
!5939 = !DILocation(line: 1100, column: 16, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5866, file: !1122, line: 1100, column: 9)
!5941 = !DILocation(line: 1100, column: 14, scope: !5940)
!5942 = !DILocation(line: 1100, column: 21, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5944, file: !1122, discriminator: 1)
!5944 = distinct !DILexicalBlock(scope: !5940, file: !1122, line: 1100, column: 9)
!5945 = !DILocation(line: 1100, column: 23, scope: !5943)
!5946 = !DILocation(line: 1100, column: 9, scope: !5943)
!5947 = !DILocation(line: 1101, column: 48, scope: !5944)
!5948 = !DILocation(line: 1101, column: 36, scope: !5944)
!5949 = !DILocation(line: 1101, column: 42, scope: !5944)
!5950 = !DILocation(line: 1101, column: 13, scope: !5944)
!5951 = !DILocation(line: 1100, column: 76, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5944, file: !1122, discriminator: 2)
!5953 = !DILocation(line: 1100, column: 9, scope: !5952)
!5954 = distinct !{!5954, !5955}
!5955 = !DILocation(line: 1100, column: 9, scope: !5866)
!5956 = !DILocation(line: 1102, column: 19, scope: !5866)
!5957 = !DILocation(line: 1102, column: 26, scope: !5866)
!5958 = !DILocation(line: 1102, column: 36, scope: !5866)
!5959 = !DILocation(line: 1102, column: 18, scope: !5866)
!5960 = !DILocation(line: 1102, column: 9, scope: !5866)
!5961 = !DILocation(line: 1104, column: 13, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5866, file: !1122, line: 1104, column: 13)
!5963 = !DILocation(line: 1104, column: 20, scope: !5962)
!5964 = !DILocation(line: 1104, column: 28, scope: !5962)
!5965 = !DILocation(line: 1104, column: 31, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !5962, file: !1122, discriminator: 1)
!5967 = !DILocation(line: 1104, column: 38, scope: !5966)
!5968 = !DILocation(line: 1104, column: 47, scope: !5966)
!5969 = !DILocation(line: 1104, column: 13, scope: !5966)
!5970 = !DILocation(line: 1105, column: 13, scope: !5962)
!5971 = !DILocation(line: 1105, column: 20, scope: !5962)
!5972 = !DILocation(line: 1105, column: 29, scope: !5962)
!5973 = !DILocation(line: 1105, column: 36, scope: !5962)
!5974 = !DILocation(line: 1106, column: 19, scope: !5866)
!5975 = !DILocation(line: 1106, column: 26, scope: !5866)
!5976 = !DILocation(line: 1106, column: 36, scope: !5866)
!5977 = !DILocation(line: 1106, column: 18, scope: !5866)
!5978 = !DILocation(line: 1106, column: 9, scope: !5866)
!5979 = !DILocation(line: 1108, column: 31, scope: !5866)
!5980 = !DILocation(line: 1108, column: 9, scope: !5866)
!5981 = !DILocation(line: 1110, column: 19, scope: !5866)
!5982 = !DILocation(line: 1110, column: 26, scope: !5866)
!5983 = !DILocation(line: 1110, column: 18, scope: !5866)
!5984 = !DILocation(line: 1110, column: 9, scope: !5866)
!5985 = !DILocation(line: 1111, column: 5, scope: !5866)
!5986 = !DILocation(line: 1113, column: 12, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5852, file: !1122, line: 1113, column: 5)
!5988 = !DILocation(line: 1113, column: 10, scope: !5987)
!5989 = !DILocation(line: 1113, column: 17, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5991, file: !1122, discriminator: 1)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !1122, line: 1113, column: 5)
!5992 = !DILocation(line: 1113, column: 21, scope: !5990)
!5993 = !DILocation(line: 1113, column: 28, scope: !5990)
!5994 = !DILocation(line: 1113, column: 19, scope: !5990)
!5995 = !DILocation(line: 1113, column: 5, scope: !5990)
!5996 = !DILocation(line: 1114, column: 42, scope: !5991)
!5997 = !DILocation(line: 1114, column: 19, scope: !5991)
!5998 = !DILocation(line: 1114, column: 26, scope: !5991)
!5999 = !DILocation(line: 1114, column: 45, scope: !5991)
!6000 = !DILocation(line: 1114, column: 18, scope: !5991)
!6001 = !DILocation(line: 1114, column: 9, scope: !5991)
!6002 = !DILocation(line: 1113, column: 49, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !5991, file: !1122, discriminator: 2)
!6004 = !DILocation(line: 1113, column: 5, scope: !6003)
!6005 = distinct !{!6005, !6006}
!6006 = !DILocation(line: 1113, column: 5, scope: !5852)
!6007 = !DILocation(line: 1115, column: 15, scope: !5852)
!6008 = !DILocation(line: 1115, column: 22, scope: !5852)
!6009 = !DILocation(line: 1115, column: 14, scope: !5852)
!6010 = !DILocation(line: 1115, column: 5, scope: !5852)
!6011 = !DILocation(line: 1116, column: 5, scope: !5852)
!6012 = !DILocation(line: 1116, column: 12, scope: !5852)
!6013 = !DILocation(line: 1116, column: 31, scope: !5852)
!6014 = !DILocation(line: 1118, column: 22, scope: !5852)
!6015 = !DILocation(line: 1118, column: 29, scope: !5852)
!6016 = !DILocation(line: 1118, column: 5, scope: !5852)
!6017 = !DILocation(line: 1119, column: 22, scope: !5852)
!6018 = !DILocation(line: 1119, column: 29, scope: !5852)
!6019 = !DILocation(line: 1119, column: 5, scope: !5852)
!6020 = !DILocation(line: 1121, column: 9, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5852, file: !1122, line: 1121, column: 9)
!6022 = !DILocation(line: 1121, column: 16, scope: !6021)
!6023 = !DILocation(line: 1121, column: 26, scope: !6021)
!6024 = !DILocation(line: 1121, column: 29, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !6021, file: !1122, discriminator: 1)
!6026 = !DILocation(line: 1121, column: 36, scope: !6025)
!6027 = !DILocation(line: 1121, column: 42, scope: !6025)
!6028 = !DILocation(line: 1121, column: 45, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !6021, file: !1122, discriminator: 2)
!6030 = !DILocation(line: 1121, column: 52, scope: !6029)
!6031 = !DILocation(line: 1121, column: 59, scope: !6029)
!6032 = !DILocation(line: 1121, column: 9, scope: !6029)
!6033 = !DILocation(line: 1122, column: 21, scope: !6021)
!6034 = !DILocation(line: 1122, column: 28, scope: !6021)
!6035 = !DILocation(line: 1122, column: 9, scope: !6021)
!6036 = !DILocation(line: 1123, column: 17, scope: !5852)
!6037 = !DILocation(line: 1123, column: 5, scope: !5852)
!6038 = !DILocation(line: 1124, column: 15, scope: !5852)
!6039 = !DILocation(line: 1124, column: 22, scope: !5852)
!6040 = !DILocation(line: 1124, column: 14, scope: !5852)
!6041 = !DILocation(line: 1124, column: 5, scope: !5852)
!6042 = !DILocation(line: 1125, column: 29, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5852, file: !1122, line: 1125, column: 9)
!6044 = !DILocation(line: 1125, column: 36, scope: !6043)
!6045 = !DILocation(line: 1125, column: 9, scope: !6043)
!6046 = !DILocation(line: 1125, column: 9, scope: !5852)
!6047 = !DILocation(line: 1126, column: 19, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !1122, line: 1125, column: 44)
!6049 = !DILocation(line: 1126, column: 26, scope: !6048)
!6050 = !DILocation(line: 1126, column: 18, scope: !6048)
!6051 = !DILocation(line: 1126, column: 9, scope: !6048)
!6052 = !DILocation(line: 1129, column: 24, scope: !6048)
!6053 = !DILocation(line: 1129, column: 31, scope: !6048)
!6054 = !DILocation(line: 1129, column: 9, scope: !6048)
!6055 = !DILocation(line: 1132, column: 5, scope: !6048)
!6056 = !DILocation(line: 1133, column: 5, scope: !5852)
!6057 = !DILocation(line: 1133, column: 12, scope: !5852)
!6058 = !DILocation(line: 1133, column: 18, scope: !5852)
!6059 = !DILocation(line: 1134, column: 5, scope: !5852)
!6060 = !DILocation(line: 1134, column: 12, scope: !5852)
!6061 = !DILocation(line: 1134, column: 31, scope: !5852)
!6062 = !DILocation(line: 1136, column: 5, scope: !5852)
!6063 = !DILocation(line: 1137, column: 1, scope: !5852)
!6064 = distinct !DISubprogram(name: "avcodec_get_name", scope: !1122, file: !1122, line: 1139, type: !6065, isLocal: false, isDefinition: true, scopeLine: 1140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!977, !13}
!6067 = !DILocalVariable(name: "id", arg: 1, scope: !6064, file: !1122, line: 1139, type: !13)
!6068 = !DILocation(line: 1139, column: 45, scope: !6064)
!6069 = !DILocalVariable(name: "cd", scope: !6064, file: !1122, line: 1141, type: !2748)
!6070 = !DILocation(line: 1141, column: 30, scope: !6064)
!6071 = !DILocalVariable(name: "codec", scope: !6064, file: !1122, line: 1142, type: !4585)
!6072 = !DILocation(line: 1142, column: 14, scope: !6064)
!6073 = !DILocation(line: 1144, column: 9, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6064, file: !1122, line: 1144, column: 9)
!6075 = !DILocation(line: 1144, column: 12, scope: !6074)
!6076 = !DILocation(line: 1144, column: 9, scope: !6064)
!6077 = !DILocation(line: 1145, column: 9, scope: !6074)
!6078 = !DILocation(line: 1146, column: 33, scope: !6064)
!6079 = !DILocation(line: 1146, column: 10, scope: !6064)
!6080 = !DILocation(line: 1146, column: 8, scope: !6064)
!6081 = !DILocation(line: 1147, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6064, file: !1122, line: 1147, column: 9)
!6083 = !DILocation(line: 1147, column: 9, scope: !6064)
!6084 = !DILocation(line: 1148, column: 16, scope: !6082)
!6085 = !DILocation(line: 1148, column: 20, scope: !6082)
!6086 = !DILocation(line: 1148, column: 9, scope: !6082)
!6087 = !DILocation(line: 1149, column: 62, scope: !6064)
!6088 = !DILocation(line: 1149, column: 5, scope: !6064)
!6089 = !DILocation(line: 1150, column: 34, scope: !6064)
!6090 = !DILocation(line: 1150, column: 13, scope: !6064)
!6091 = !DILocation(line: 1150, column: 11, scope: !6064)
!6092 = !DILocation(line: 1151, column: 9, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6064, file: !1122, line: 1151, column: 9)
!6094 = !DILocation(line: 1151, column: 9, scope: !6064)
!6095 = !DILocation(line: 1152, column: 16, scope: !6093)
!6096 = !DILocation(line: 1152, column: 23, scope: !6093)
!6097 = !DILocation(line: 1152, column: 9, scope: !6093)
!6098 = !DILocation(line: 1153, column: 34, scope: !6064)
!6099 = !DILocation(line: 1153, column: 13, scope: !6064)
!6100 = !DILocation(line: 1153, column: 11, scope: !6064)
!6101 = !DILocation(line: 1154, column: 9, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6064, file: !1122, line: 1154, column: 9)
!6103 = !DILocation(line: 1154, column: 9, scope: !6064)
!6104 = !DILocation(line: 1155, column: 16, scope: !6102)
!6105 = !DILocation(line: 1155, column: 23, scope: !6102)
!6106 = !DILocation(line: 1155, column: 9, scope: !6102)
!6107 = !DILocation(line: 1156, column: 5, scope: !6064)
!6108 = !DILocation(line: 1157, column: 1, scope: !6064)
!6109 = distinct !DISubprogram(name: "av_get_codec_tag_string", scope: !1122, file: !1122, line: 1159, type: !6110, isLocal: false, isDefinition: true, scopeLine: 1160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{!1171, !968, !1171, !1111}
!6112 = !DILocalVariable(name: "buf", arg: 1, scope: !6109, file: !1122, line: 1159, type: !968)
!6113 = !DILocation(line: 1159, column: 38, scope: !6109)
!6114 = !DILocalVariable(name: "buf_size", arg: 2, scope: !6109, file: !1122, line: 1159, type: !1171)
!6115 = !DILocation(line: 1159, column: 50, scope: !6109)
!6116 = !DILocalVariable(name: "codec_tag", arg: 3, scope: !6109, file: !1122, line: 1159, type: !1111)
!6117 = !DILocation(line: 1159, column: 73, scope: !6109)
!6118 = !DILocalVariable(name: "i", scope: !6109, file: !1122, line: 1161, type: !991)
!6119 = !DILocation(line: 1161, column: 9, scope: !6109)
!6120 = !DILocalVariable(name: "len", scope: !6109, file: !1122, line: 1161, type: !991)
!6121 = !DILocation(line: 1161, column: 12, scope: !6109)
!6122 = !DILocalVariable(name: "ret", scope: !6109, file: !1122, line: 1161, type: !991)
!6123 = !DILocation(line: 1161, column: 17, scope: !6109)
!6124 = !DILocation(line: 1168, column: 12, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6109, file: !1122, line: 1168, column: 5)
!6126 = !DILocation(line: 1168, column: 10, scope: !6125)
!6127 = !DILocation(line: 1168, column: 17, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !6129, file: !1122, discriminator: 1)
!6129 = distinct !DILexicalBlock(scope: !6125, file: !1122, line: 1168, column: 5)
!6130 = !DILocation(line: 1168, column: 19, scope: !6128)
!6131 = !DILocation(line: 1168, column: 5, scope: !6128)
!6132 = !DILocation(line: 1169, column: 24, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !1122, line: 1168, column: 29)
!6134 = !DILocation(line: 1169, column: 29, scope: !6133)
!6135 = !DILocation(line: 1170, column: 27, scope: !6133)
!6136 = !DILocation(line: 1170, column: 37, scope: !6133)
!6137 = !DILocation(line: 1170, column: 45, scope: !6133)
!6138 = !DILocation(line: 1170, column: 52, scope: !6133)
!6139 = !DILocation(line: 1170, column: 56, scope: !6140)
!6140 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 1)
!6141 = !DILocation(line: 1170, column: 66, scope: !6140)
!6142 = !DILocation(line: 1170, column: 74, scope: !6140)
!6143 = !DILocation(line: 1170, column: 82, scope: !6140)
!6144 = !DILocation(line: 1170, column: 87, scope: !6145)
!6145 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 2)
!6146 = !DILocation(line: 1170, column: 97, scope: !6145)
!6147 = !DILocation(line: 1170, column: 105, scope: !6145)
!6148 = !DILocation(line: 1170, column: 112, scope: !6145)
!6149 = !DILocation(line: 1170, column: 116, scope: !6150)
!6150 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 3)
!6151 = !DILocation(line: 1170, column: 126, scope: !6150)
!6152 = !DILocation(line: 1170, column: 134, scope: !6150)
!6153 = !DILocation(line: 1170, column: 142, scope: !6150)
!6154 = !DILocation(line: 1170, column: 147, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 4)
!6156 = !DILocation(line: 1170, column: 157, scope: !6155)
!6157 = !DILocation(line: 1170, column: 165, scope: !6155)
!6158 = !DILocation(line: 1170, column: 172, scope: !6155)
!6159 = !DILocation(line: 1170, column: 176, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 5)
!6161 = !DILocation(line: 1170, column: 186, scope: !6160)
!6162 = !DILocation(line: 1170, column: 194, scope: !6160)
!6163 = !DILocation(line: 1170, column: 202, scope: !6160)
!6164 = !DILocation(line: 1170, column: 207, scope: !6165)
!6165 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 6)
!6166 = !DILocation(line: 1170, column: 217, scope: !6165)
!6167 = !DILocation(line: 1170, column: 225, scope: !6165)
!6168 = !DILocation(line: 1170, column: 232, scope: !6165)
!6169 = !DILocation(line: 1170, column: 236, scope: !6170)
!6170 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 7)
!6171 = !DILocation(line: 1170, column: 246, scope: !6170)
!6172 = !DILocation(line: 1170, column: 254, scope: !6170)
!6173 = !DILocation(line: 1170, column: 261, scope: !6170)
!6174 = !DILocation(line: 1170, column: 265, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 8)
!6176 = !DILocation(line: 1170, column: 275, scope: !6175)
!6177 = !DILocation(line: 1170, column: 283, scope: !6175)
!6178 = !DILocation(line: 1170, column: 290, scope: !6175)
!6179 = !DILocation(line: 1170, column: 294, scope: !6180)
!6180 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 9)
!6181 = !DILocation(line: 1170, column: 304, scope: !6180)
!6182 = !DILocation(line: 1170, column: 312, scope: !6180)
!6183 = !DILocation(line: 1170, column: 290, scope: !6180)
!6184 = !DILocation(line: 1170, column: 202, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 10)
!6186 = !DILocation(line: 1170, column: 24, scope: !6187)
!6187 = !DILexicalBlockFile(scope: !6133, file: !1122, discriminator: 11)
!6188 = !DILocation(line: 1170, column: 338, scope: !6187)
!6189 = !DILocation(line: 1170, column: 348, scope: !6187)
!6190 = !DILocation(line: 1169, column: 15, scope: !6140)
!6191 = !DILocation(line: 1169, column: 13, scope: !6140)
!6192 = !DILocation(line: 1171, column: 16, scope: !6133)
!6193 = !DILocation(line: 1171, column: 13, scope: !6133)
!6194 = !DILocation(line: 1172, column: 20, scope: !6133)
!6195 = !DILocation(line: 1172, column: 31, scope: !6133)
!6196 = !DILocation(line: 1172, column: 29, scope: !6133)
!6197 = !DILocation(line: 1172, column: 37, scope: !6140)
!6198 = !DILocation(line: 1172, column: 48, scope: !6140)
!6199 = !DILocation(line: 1172, column: 46, scope: !6140)
!6200 = !DILocation(line: 1172, column: 20, scope: !6140)
!6201 = !DILocation(line: 1172, column: 20, scope: !6145)
!6202 = !DILocation(line: 1172, column: 20, scope: !6150)
!6203 = !DILocation(line: 1172, column: 18, scope: !6150)
!6204 = !DILocation(line: 1173, column: 16, scope: !6133)
!6205 = !DILocation(line: 1173, column: 13, scope: !6133)
!6206 = !DILocation(line: 1174, column: 19, scope: !6133)
!6207 = !DILocation(line: 1175, column: 5, scope: !6133)
!6208 = !DILocation(line: 1168, column: 25, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !6129, file: !1122, discriminator: 2)
!6210 = !DILocation(line: 1168, column: 5, scope: !6209)
!6211 = distinct !{!6211, !6212}
!6212 = !DILocation(line: 1168, column: 5, scope: !6109)
!6213 = !DILocation(line: 1176, column: 12, scope: !6109)
!6214 = !DILocation(line: 1176, column: 5, scope: !6109)
!6215 = distinct !DISubprogram(name: "avcodec_string", scope: !1122, file: !1122, line: 1179, type: !6216, isLocal: false, isDefinition: true, scopeLine: 1180, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !968, !991, !1374, !991}
!6218 = !DILocalVariable(name: "buf", arg: 1, scope: !6215, file: !1122, line: 1179, type: !968)
!6219 = !DILocation(line: 1179, column: 27, scope: !6215)
!6220 = !DILocalVariable(name: "buf_size", arg: 2, scope: !6215, file: !1122, line: 1179, type: !991)
!6221 = !DILocation(line: 1179, column: 36, scope: !6215)
!6222 = !DILocalVariable(name: "enc", arg: 3, scope: !6215, file: !1122, line: 1179, type: !1374)
!6223 = !DILocation(line: 1179, column: 62, scope: !6215)
!6224 = !DILocalVariable(name: "encode", arg: 4, scope: !6215, file: !1122, line: 1179, type: !991)
!6225 = !DILocation(line: 1179, column: 71, scope: !6215)
!6226 = !DILocalVariable(name: "codec_type", scope: !6215, file: !1122, line: 1181, type: !977)
!6227 = !DILocation(line: 1181, column: 17, scope: !6215)
!6228 = !DILocalVariable(name: "codec_name", scope: !6215, file: !1122, line: 1182, type: !977)
!6229 = !DILocation(line: 1182, column: 17, scope: !6215)
!6230 = !DILocalVariable(name: "profile", scope: !6215, file: !1122, line: 1183, type: !977)
!6231 = !DILocation(line: 1183, column: 17, scope: !6215)
!6232 = !DILocalVariable(name: "bitrate", scope: !6215, file: !1122, line: 1184, type: !997)
!6233 = !DILocation(line: 1184, column: 13, scope: !6215)
!6234 = !DILocalVariable(name: "new_line", scope: !6215, file: !1122, line: 1185, type: !991)
!6235 = !DILocation(line: 1185, column: 9, scope: !6215)
!6236 = !DILocalVariable(name: "display_aspect_ratio", scope: !6215, file: !1122, line: 1186, type: !1003)
!6237 = !DILocation(line: 1186, column: 16, scope: !6215)
!6238 = !DILocalVariable(name: "separator", scope: !6215, file: !1122, line: 1187, type: !977)
!6239 = !DILocation(line: 1187, column: 17, scope: !6215)
!6240 = !DILocation(line: 1187, column: 29, scope: !6215)
!6241 = !DILocation(line: 1187, column: 34, scope: !6215)
!6242 = !DILocation(line: 1187, column: 65, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !6215, file: !1122, discriminator: 1)
!6244 = !DILocation(line: 1187, column: 70, scope: !6243)
!6245 = !DILocation(line: 1187, column: 29, scope: !6243)
!6246 = !DILocation(line: 1187, column: 29, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6215, file: !1122, discriminator: 2)
!6248 = !DILocation(line: 1187, column: 29, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6215, file: !1122, discriminator: 3)
!6250 = !DILocation(line: 1187, column: 17, scope: !6249)
!6251 = !DILocation(line: 1189, column: 10, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1189, column: 9)
!6253 = !DILocation(line: 1189, column: 14, scope: !6252)
!6254 = !DILocation(line: 1189, column: 17, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6252, file: !1122, discriminator: 1)
!6256 = !DILocation(line: 1189, column: 26, scope: !6255)
!6257 = !DILocation(line: 1189, column: 9, scope: !6255)
!6258 = !DILocation(line: 1190, column: 9, scope: !6252)
!6259 = !DILocation(line: 1191, column: 43, scope: !6215)
!6260 = !DILocation(line: 1191, column: 48, scope: !6215)
!6261 = !DILocation(line: 1191, column: 18, scope: !6215)
!6262 = !DILocation(line: 1191, column: 16, scope: !6215)
!6263 = !DILocation(line: 1192, column: 35, scope: !6215)
!6264 = !DILocation(line: 1192, column: 40, scope: !6215)
!6265 = !DILocation(line: 1192, column: 18, scope: !6215)
!6266 = !DILocation(line: 1192, column: 16, scope: !6215)
!6267 = !DILocation(line: 1193, column: 36, scope: !6215)
!6268 = !DILocation(line: 1193, column: 41, scope: !6215)
!6269 = !DILocation(line: 1193, column: 51, scope: !6215)
!6270 = !DILocation(line: 1193, column: 56, scope: !6215)
!6271 = !DILocation(line: 1193, column: 15, scope: !6215)
!6272 = !DILocation(line: 1193, column: 13, scope: !6215)
!6273 = !DILocation(line: 1195, column: 14, scope: !6215)
!6274 = !DILocation(line: 1195, column: 19, scope: !6215)
!6275 = !DILocation(line: 1195, column: 39, scope: !6215)
!6276 = !DILocation(line: 1195, column: 52, scope: !6243)
!6277 = !DILocation(line: 1195, column: 39, scope: !6243)
!6278 = !DILocation(line: 1195, column: 39, scope: !6247)
!6279 = !DILocation(line: 1195, column: 39, scope: !6249)
!6280 = !DILocation(line: 1196, column: 14, scope: !6215)
!6281 = !DILocation(line: 1195, column: 5, scope: !6249)
!6282 = !DILocation(line: 1197, column: 5, scope: !6215)
!6283 = !DILocation(line: 1197, column: 12, scope: !6215)
!6284 = !DILocation(line: 1199, column: 9, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1199, column: 9)
!6286 = !DILocation(line: 1199, column: 14, scope: !6285)
!6287 = !DILocation(line: 1199, column: 20, scope: !6285)
!6288 = !DILocation(line: 1199, column: 30, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6285, file: !1122, discriminator: 1)
!6290 = !DILocation(line: 1199, column: 35, scope: !6289)
!6291 = !DILocation(line: 1199, column: 42, scope: !6289)
!6292 = !DILocation(line: 1199, column: 48, scope: !6289)
!6293 = !DILocation(line: 1199, column: 23, scope: !6289)
!6294 = !DILocation(line: 1199, column: 9, scope: !6289)
!6295 = !DILocation(line: 1200, column: 18, scope: !6285)
!6296 = !DILocation(line: 1200, column: 31, scope: !6285)
!6297 = !DILocation(line: 1200, column: 24, scope: !6285)
!6298 = !DILocation(line: 1200, column: 22, scope: !6285)
!6299 = !DILocation(line: 1200, column: 37, scope: !6285)
!6300 = !DILocation(line: 1200, column: 55, scope: !6285)
!6301 = !DILocation(line: 1200, column: 48, scope: !6289)
!6302 = !DILocation(line: 1200, column: 46, scope: !6285)
!6303 = !DILocation(line: 1200, column: 70, scope: !6285)
!6304 = !DILocation(line: 1200, column: 75, scope: !6285)
!6305 = !DILocation(line: 1200, column: 82, scope: !6285)
!6306 = !DILocation(line: 1200, column: 9, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6285, file: !1122, discriminator: 2)
!6308 = !DILocation(line: 1200, column: 9, scope: !6285)
!6309 = !DILocation(line: 1202, column: 9, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1202, column: 9)
!6311 = !DILocation(line: 1202, column: 9, scope: !6215)
!6312 = !DILocation(line: 1203, column: 18, scope: !6310)
!6313 = !DILocation(line: 1203, column: 31, scope: !6310)
!6314 = !DILocation(line: 1203, column: 24, scope: !6310)
!6315 = !DILocation(line: 1203, column: 22, scope: !6310)
!6316 = !DILocation(line: 1203, column: 37, scope: !6310)
!6317 = !DILocation(line: 1203, column: 55, scope: !6310)
!6318 = !DILocation(line: 1203, column: 48, scope: !6319)
!6319 = !DILexicalBlockFile(scope: !6310, file: !1122, discriminator: 1)
!6320 = !DILocation(line: 1203, column: 46, scope: !6310)
!6321 = !DILocation(line: 1203, column: 70, scope: !6310)
!6322 = !DILocation(line: 1203, column: 9, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6310, file: !1122, discriminator: 2)
!6324 = !DILocation(line: 1203, column: 9, scope: !6310)
!6325 = !DILocation(line: 1204, column: 10, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1204, column: 10)
!6327 = !DILocation(line: 1204, column: 15, scope: !6326)
!6328 = !DILocation(line: 1204, column: 26, scope: !6326)
!6329 = !DILocation(line: 1205, column: 9, scope: !6326)
!6330 = !DILocation(line: 1205, column: 12, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6326, file: !1122, discriminator: 1)
!6332 = !DILocation(line: 1205, column: 31, scope: !6331)
!6333 = !DILocation(line: 1206, column: 9, scope: !6326)
!6334 = !DILocation(line: 1206, column: 12, scope: !6331)
!6335 = !DILocation(line: 1206, column: 17, scope: !6331)
!6336 = !DILocation(line: 1204, column: 10, scope: !6243)
!6337 = !DILocation(line: 1207, column: 18, scope: !6326)
!6338 = !DILocation(line: 1207, column: 31, scope: !6326)
!6339 = !DILocation(line: 1207, column: 24, scope: !6326)
!6340 = !DILocation(line: 1207, column: 22, scope: !6326)
!6341 = !DILocation(line: 1207, column: 37, scope: !6326)
!6342 = !DILocation(line: 1207, column: 55, scope: !6326)
!6343 = !DILocation(line: 1207, column: 48, scope: !6331)
!6344 = !DILocation(line: 1207, column: 46, scope: !6326)
!6345 = !DILocation(line: 1209, column: 18, scope: !6326)
!6346 = !DILocation(line: 1209, column: 23, scope: !6326)
!6347 = !DILocation(line: 1209, column: 29, scope: !6326)
!6348 = !DILocation(line: 1209, column: 34, scope: !6326)
!6349 = !DILocation(line: 1209, column: 39, scope: !6326)
!6350 = !DILocation(line: 1207, column: 9, scope: !6351)
!6351 = !DILexicalBlockFile(scope: !6326, file: !1122, discriminator: 2)
!6352 = !DILocation(line: 1207, column: 9, scope: !6326)
!6353 = !DILocation(line: 1211, column: 9, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1211, column: 9)
!6355 = !DILocation(line: 1211, column: 14, scope: !6354)
!6356 = !DILocation(line: 1211, column: 9, scope: !6215)
!6357 = !DILocation(line: 1212, column: 18, scope: !6354)
!6358 = !DILocation(line: 1212, column: 31, scope: !6354)
!6359 = !DILocation(line: 1212, column: 24, scope: !6354)
!6360 = !DILocation(line: 1212, column: 22, scope: !6354)
!6361 = !DILocation(line: 1212, column: 37, scope: !6354)
!6362 = !DILocation(line: 1212, column: 55, scope: !6354)
!6363 = !DILocation(line: 1212, column: 48, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !6354, file: !1122, discriminator: 1)
!6365 = !DILocation(line: 1212, column: 46, scope: !6354)
!6366 = !DILocation(line: 1213, column: 40, scope: !6354)
!6367 = !DILocation(line: 1213, column: 50, scope: !6354)
!6368 = !DILocation(line: 1213, column: 55, scope: !6354)
!6369 = !DILocation(line: 1213, column: 60, scope: !6354)
!6370 = !DILocation(line: 1213, column: 18, scope: !6364)
!6371 = !DILocation(line: 1213, column: 72, scope: !6354)
!6372 = !DILocation(line: 1213, column: 77, scope: !6354)
!6373 = !DILocation(line: 1212, column: 9, scope: !6374)
!6374 = !DILexicalBlockFile(scope: !6354, file: !1122, discriminator: 2)
!6375 = !DILocation(line: 1212, column: 9, scope: !6354)
!6376 = !DILocation(line: 1215, column: 13, scope: !6215)
!6377 = !DILocation(line: 1215, column: 18, scope: !6215)
!6378 = !DILocation(line: 1215, column: 5, scope: !6215)
!6379 = !DILocalVariable(name: "detail", scope: !6380, file: !1122, line: 1218, type: !6382)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1217, column: 9)
!6381 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1215, column: 30)
!6382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 2048, align: 8, elements: !6383)
!6383 = !{!2599}
!6384 = !DILocation(line: 1218, column: 18, scope: !6380)
!6385 = !DILocation(line: 1220, column: 24, scope: !6380)
!6386 = !DILocation(line: 1220, column: 29, scope: !6380)
!6387 = !DILocation(line: 1220, column: 40, scope: !6380)
!6388 = !DILocation(line: 1220, column: 13, scope: !6380)
!6389 = !DILocation(line: 1222, column: 22, scope: !6380)
!6390 = !DILocation(line: 1222, column: 35, scope: !6380)
!6391 = !DILocation(line: 1222, column: 28, scope: !6380)
!6392 = !DILocation(line: 1222, column: 26, scope: !6380)
!6393 = !DILocation(line: 1222, column: 41, scope: !6380)
!6394 = !DILocation(line: 1222, column: 59, scope: !6380)
!6395 = !DILocation(line: 1222, column: 52, scope: !6396)
!6396 = !DILexicalBlockFile(scope: !6380, file: !1122, discriminator: 2)
!6397 = !DILocation(line: 1222, column: 50, scope: !6380)
!6398 = !DILocation(line: 1223, column: 24, scope: !6380)
!6399 = !DILocation(line: 1223, column: 29, scope: !6380)
!6400 = !DILocation(line: 1223, column: 37, scope: !6380)
!6401 = !DILocation(line: 1223, column: 24, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6380, file: !1122, discriminator: 1)
!6403 = !DILocation(line: 1224, column: 42, scope: !6380)
!6404 = !DILocation(line: 1224, column: 47, scope: !6380)
!6405 = !DILocation(line: 1224, column: 22, scope: !6380)
!6406 = !DILocation(line: 1223, column: 24, scope: !6396)
!6407 = !DILocation(line: 1223, column: 24, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !6380, file: !1122, discriminator: 3)
!6409 = !DILocation(line: 1222, column: 13, scope: !6402)
!6410 = !DILocation(line: 1225, column: 17, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1225, column: 17)
!6412 = !DILocation(line: 1225, column: 22, scope: !6411)
!6413 = !DILocation(line: 1225, column: 42, scope: !6411)
!6414 = !DILocation(line: 1225, column: 45, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6411, file: !1122, discriminator: 1)
!6416 = !DILocation(line: 1225, column: 50, scope: !6415)
!6417 = !DILocation(line: 1225, column: 58, scope: !6415)
!6418 = !DILocation(line: 1225, column: 77, scope: !6415)
!6419 = !DILocation(line: 1226, column: 17, scope: !6411)
!6420 = !DILocation(line: 1226, column: 22, scope: !6411)
!6421 = !DILocation(line: 1226, column: 64, scope: !6411)
!6422 = !DILocation(line: 1226, column: 69, scope: !6411)
!6423 = !DILocation(line: 1226, column: 44, scope: !6411)
!6424 = !DILocation(line: 1226, column: 79, scope: !6411)
!6425 = !DILocation(line: 1226, column: 87, scope: !6411)
!6426 = !DILocation(line: 1226, column: 42, scope: !6411)
!6427 = !DILocation(line: 1225, column: 17, scope: !6396)
!6428 = !DILocation(line: 1227, column: 29, scope: !6411)
!6429 = !DILocation(line: 1227, column: 65, scope: !6411)
!6430 = !DILocation(line: 1227, column: 70, scope: !6411)
!6431 = !DILocation(line: 1227, column: 17, scope: !6411)
!6432 = !DILocation(line: 1228, column: 17, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1228, column: 17)
!6434 = !DILocation(line: 1228, column: 22, scope: !6433)
!6435 = !DILocation(line: 1228, column: 34, scope: !6433)
!6436 = !DILocation(line: 1228, column: 17, scope: !6380)
!6437 = !DILocation(line: 1229, column: 29, scope: !6433)
!6438 = !DILocation(line: 1230, column: 49, scope: !6433)
!6439 = !DILocation(line: 1230, column: 54, scope: !6433)
!6440 = !DILocation(line: 1230, column: 29, scope: !6433)
!6441 = !DILocation(line: 1229, column: 17, scope: !6433)
!6442 = !DILocation(line: 1232, column: 17, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1232, column: 17)
!6444 = !DILocation(line: 1232, column: 22, scope: !6443)
!6445 = !DILocation(line: 1232, column: 33, scope: !6443)
!6446 = !DILocation(line: 1232, column: 58, scope: !6443)
!6447 = !DILocation(line: 1233, column: 17, scope: !6443)
!6448 = !DILocation(line: 1233, column: 22, scope: !6443)
!6449 = !DILocation(line: 1233, column: 38, scope: !6443)
!6450 = !DILocation(line: 1233, column: 63, scope: !6443)
!6451 = !DILocation(line: 1234, column: 17, scope: !6443)
!6452 = !DILocation(line: 1234, column: 22, scope: !6443)
!6453 = !DILocation(line: 1234, column: 32, scope: !6443)
!6454 = !DILocation(line: 1232, column: 17, scope: !6402)
!6455 = !DILocation(line: 1235, column: 21, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !1122, line: 1235, column: 21)
!6457 = distinct !DILexicalBlock(scope: !6443, file: !1122, line: 1234, column: 58)
!6458 = !DILocation(line: 1235, column: 26, scope: !6456)
!6459 = !DILocation(line: 1235, column: 45, scope: !6456)
!6460 = !DILocation(line: 1235, column: 50, scope: !6456)
!6461 = !DILocation(line: 1235, column: 37, scope: !6456)
!6462 = !DILocation(line: 1235, column: 66, scope: !6456)
!6463 = !DILocation(line: 1236, column: 21, scope: !6456)
!6464 = !DILocation(line: 1236, column: 26, scope: !6456)
!6465 = !DILocation(line: 1236, column: 45, scope: !6456)
!6466 = !DILocation(line: 1236, column: 50, scope: !6456)
!6467 = !DILocation(line: 1236, column: 37, scope: !6456)
!6468 = !DILocation(line: 1235, column: 21, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6457, file: !1122, discriminator: 1)
!6470 = !DILocation(line: 1237, column: 30, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6456, file: !1122, line: 1236, column: 61)
!6472 = !DILocation(line: 1238, column: 33, scope: !6471)
!6473 = !DILocation(line: 1239, column: 53, scope: !6471)
!6474 = !DILocation(line: 1239, column: 58, scope: !6471)
!6475 = !DILocation(line: 1239, column: 33, scope: !6471)
!6476 = !DILocation(line: 1240, column: 57, scope: !6471)
!6477 = !DILocation(line: 1240, column: 62, scope: !6471)
!6478 = !DILocation(line: 1240, column: 33, scope: !6471)
!6479 = !DILocation(line: 1241, column: 56, scope: !6471)
!6480 = !DILocation(line: 1241, column: 61, scope: !6471)
!6481 = !DILocation(line: 1241, column: 33, scope: !6471)
!6482 = !DILocation(line: 1238, column: 21, scope: !6471)
!6483 = !DILocation(line: 1242, column: 17, scope: !6471)
!6484 = !DILocation(line: 1243, column: 33, scope: !6456)
!6485 = !DILocation(line: 1244, column: 56, scope: !6456)
!6486 = !DILocation(line: 1244, column: 61, scope: !6456)
!6487 = !DILocation(line: 1244, column: 33, scope: !6456)
!6488 = !DILocation(line: 1243, column: 21, scope: !6456)
!6489 = !DILocation(line: 1245, column: 13, scope: !6457)
!6490 = !DILocation(line: 1247, column: 17, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1247, column: 17)
!6492 = !DILocation(line: 1247, column: 22, scope: !6491)
!6493 = !DILocation(line: 1247, column: 34, scope: !6491)
!6494 = !DILocation(line: 1247, column: 17, scope: !6380)
!6495 = !DILocalVariable(name: "field_order", scope: !6496, file: !1122, line: 1248, type: !977)
!6496 = distinct !DILexicalBlock(scope: !6491, file: !1122, line: 1247, column: 55)
!6497 = !DILocation(line: 1248, column: 29, scope: !6496)
!6498 = !DILocation(line: 1249, column: 21, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6496, file: !1122, line: 1249, column: 21)
!6500 = !DILocation(line: 1249, column: 26, scope: !6499)
!6501 = !DILocation(line: 1249, column: 38, scope: !6499)
!6502 = !DILocation(line: 1249, column: 21, scope: !6496)
!6503 = !DILocation(line: 1250, column: 33, scope: !6499)
!6504 = !DILocation(line: 1250, column: 21, scope: !6499)
!6505 = !DILocation(line: 1251, column: 26, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6499, file: !1122, line: 1251, column: 26)
!6507 = !DILocation(line: 1251, column: 31, scope: !6506)
!6508 = !DILocation(line: 1251, column: 43, scope: !6506)
!6509 = !DILocation(line: 1251, column: 26, scope: !6499)
!6510 = !DILocation(line: 1252, column: 33, scope: !6506)
!6511 = !DILocation(line: 1252, column: 21, scope: !6506)
!6512 = !DILocation(line: 1253, column: 26, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6506, file: !1122, line: 1253, column: 26)
!6514 = !DILocation(line: 1253, column: 31, scope: !6513)
!6515 = !DILocation(line: 1253, column: 43, scope: !6513)
!6516 = !DILocation(line: 1253, column: 26, scope: !6506)
!6517 = !DILocation(line: 1254, column: 33, scope: !6513)
!6518 = !DILocation(line: 1254, column: 21, scope: !6513)
!6519 = !DILocation(line: 1255, column: 26, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6513, file: !1122, line: 1255, column: 26)
!6521 = !DILocation(line: 1255, column: 31, scope: !6520)
!6522 = !DILocation(line: 1255, column: 43, scope: !6520)
!6523 = !DILocation(line: 1255, column: 26, scope: !6513)
!6524 = !DILocation(line: 1256, column: 33, scope: !6520)
!6525 = !DILocation(line: 1256, column: 21, scope: !6520)
!6526 = !DILocation(line: 1258, column: 29, scope: !6496)
!6527 = !DILocation(line: 1258, column: 61, scope: !6496)
!6528 = !DILocation(line: 1258, column: 17, scope: !6496)
!6529 = !DILocation(line: 1259, column: 13, scope: !6496)
!6530 = !DILocation(line: 1261, column: 17, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1261, column: 17)
!6532 = !DILocation(line: 1261, column: 36, scope: !6531)
!6533 = !DILocation(line: 1261, column: 42, scope: !6531)
!6534 = !DILocation(line: 1262, column: 17, scope: !6531)
!6535 = !DILocation(line: 1262, column: 22, scope: !6531)
!6536 = !DILocation(line: 1262, column: 45, scope: !6531)
!6537 = !DILocation(line: 1261, column: 17, scope: !6402)
!6538 = !DILocation(line: 1263, column: 29, scope: !6531)
!6539 = !DILocation(line: 1264, column: 53, scope: !6531)
!6540 = !DILocation(line: 1264, column: 58, scope: !6531)
!6541 = !DILocation(line: 1264, column: 29, scope: !6531)
!6542 = !DILocation(line: 1263, column: 17, scope: !6531)
!6543 = !DILocation(line: 1266, column: 24, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6380, file: !1122, line: 1266, column: 17)
!6545 = !DILocation(line: 1266, column: 17, scope: !6544)
!6546 = !DILocation(line: 1266, column: 32, scope: !6544)
!6547 = !DILocation(line: 1266, column: 17, scope: !6380)
!6548 = !DILocation(line: 1267, column: 31, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6544, file: !1122, line: 1266, column: 37)
!6550 = !DILocation(line: 1267, column: 24, scope: !6549)
!6551 = !DILocation(line: 1267, column: 39, scope: !6549)
!6552 = !DILocation(line: 1267, column: 17, scope: !6549)
!6553 = !DILocation(line: 1267, column: 44, scope: !6549)
!6554 = !DILocation(line: 1268, column: 29, scope: !6549)
!6555 = !DILocation(line: 1268, column: 34, scope: !6549)
!6556 = !DILocation(line: 1268, column: 51, scope: !6549)
!6557 = !DILocation(line: 1268, column: 17, scope: !6549)
!6558 = !DILocation(line: 1269, column: 13, scope: !6549)
!6559 = !DILocation(line: 1272, column: 13, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1272, column: 13)
!6561 = !DILocation(line: 1272, column: 18, scope: !6560)
!6562 = !DILocation(line: 1272, column: 13, scope: !6381)
!6563 = !DILocation(line: 1273, column: 24, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6560, file: !1122, line: 1272, column: 25)
!6565 = !DILocation(line: 1273, column: 29, scope: !6564)
!6566 = !DILocation(line: 1273, column: 40, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !6564, file: !1122, discriminator: 1)
!6568 = !DILocation(line: 1273, column: 29, scope: !6567)
!6569 = !DILocation(line: 1273, column: 29, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !6564, file: !1122, discriminator: 2)
!6571 = !DILocation(line: 1273, column: 29, scope: !6572)
!6572 = !DILexicalBlockFile(scope: !6564, file: !1122, discriminator: 3)
!6573 = !DILocation(line: 1273, column: 58, scope: !6572)
!6574 = !DILocation(line: 1273, column: 13, scope: !6572)
!6575 = !DILocation(line: 1275, column: 22, scope: !6564)
!6576 = !DILocation(line: 1275, column: 35, scope: !6564)
!6577 = !DILocation(line: 1275, column: 28, scope: !6564)
!6578 = !DILocation(line: 1275, column: 26, scope: !6564)
!6579 = !DILocation(line: 1275, column: 41, scope: !6564)
!6580 = !DILocation(line: 1275, column: 59, scope: !6564)
!6581 = !DILocation(line: 1275, column: 52, scope: !6567)
!6582 = !DILocation(line: 1275, column: 50, scope: !6564)
!6583 = !DILocation(line: 1277, column: 22, scope: !6564)
!6584 = !DILocation(line: 1277, column: 27, scope: !6564)
!6585 = !DILocation(line: 1277, column: 34, scope: !6564)
!6586 = !DILocation(line: 1277, column: 39, scope: !6564)
!6587 = !DILocation(line: 1275, column: 13, scope: !6570)
!6588 = !DILocation(line: 1279, column: 17, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6564, file: !1122, line: 1279, column: 17)
!6590 = !DILocation(line: 1279, column: 36, scope: !6589)
!6591 = !DILocation(line: 1279, column: 42, scope: !6589)
!6592 = !DILocation(line: 1280, column: 18, scope: !6589)
!6593 = !DILocation(line: 1280, column: 23, scope: !6589)
!6594 = !DILocation(line: 1280, column: 32, scope: !6589)
!6595 = !DILocation(line: 1280, column: 37, scope: !6589)
!6596 = !DILocation(line: 1280, column: 29, scope: !6589)
!6597 = !DILocation(line: 1280, column: 49, scope: !6589)
!6598 = !DILocation(line: 1281, column: 18, scope: !6589)
!6599 = !DILocation(line: 1281, column: 23, scope: !6589)
!6600 = !DILocation(line: 1281, column: 33, scope: !6589)
!6601 = !DILocation(line: 1281, column: 38, scope: !6589)
!6602 = !DILocation(line: 1281, column: 30, scope: !6589)
!6603 = !DILocation(line: 1279, column: 17, scope: !6567)
!6604 = !DILocation(line: 1282, column: 26, scope: !6589)
!6605 = !DILocation(line: 1282, column: 39, scope: !6589)
!6606 = !DILocation(line: 1282, column: 32, scope: !6589)
!6607 = !DILocation(line: 1282, column: 30, scope: !6589)
!6608 = !DILocation(line: 1282, column: 45, scope: !6589)
!6609 = !DILocation(line: 1282, column: 63, scope: !6589)
!6610 = !DILocation(line: 1282, column: 56, scope: !6611)
!6611 = !DILexicalBlockFile(scope: !6589, file: !1122, discriminator: 1)
!6612 = !DILocation(line: 1282, column: 54, scope: !6589)
!6613 = !DILocation(line: 1283, column: 38, scope: !6589)
!6614 = !DILocation(line: 1283, column: 43, scope: !6589)
!6615 = !DILocation(line: 1283, column: 56, scope: !6589)
!6616 = !DILocation(line: 1283, column: 61, scope: !6589)
!6617 = !DILocation(line: 1282, column: 17, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6589, file: !1122, discriminator: 2)
!6619 = !DILocation(line: 1282, column: 17, scope: !6589)
!6620 = !DILocation(line: 1285, column: 17, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6564, file: !1122, line: 1285, column: 17)
!6622 = !DILocation(line: 1285, column: 22, scope: !6621)
!6623 = !DILocation(line: 1285, column: 42, scope: !6621)
!6624 = !DILocation(line: 1285, column: 17, scope: !6564)
!6625 = !DILocation(line: 1286, column: 49, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6621, file: !1122, line: 1285, column: 47)
!6627 = !DILocation(line: 1286, column: 76, scope: !6626)
!6628 = !DILocation(line: 1287, column: 27, scope: !6626)
!6629 = !DILocation(line: 1287, column: 32, scope: !6626)
!6630 = !DILocation(line: 1287, column: 49, scope: !6626)
!6631 = !DILocation(line: 1287, column: 54, scope: !6626)
!6632 = !DILocation(line: 1287, column: 74, scope: !6626)
!6633 = !DILocation(line: 1287, column: 40, scope: !6626)
!6634 = !DILocation(line: 1287, column: 38, scope: !6626)
!6635 = !DILocation(line: 1288, column: 27, scope: !6626)
!6636 = !DILocation(line: 1288, column: 32, scope: !6626)
!6637 = !DILocation(line: 1288, column: 50, scope: !6626)
!6638 = !DILocation(line: 1288, column: 55, scope: !6626)
!6639 = !DILocation(line: 1288, column: 75, scope: !6626)
!6640 = !DILocation(line: 1288, column: 41, scope: !6626)
!6641 = !DILocation(line: 1288, column: 39, scope: !6626)
!6642 = !DILocation(line: 1286, column: 17, scope: !6626)
!6643 = !DILocation(line: 1290, column: 26, scope: !6626)
!6644 = !DILocation(line: 1290, column: 39, scope: !6626)
!6645 = !DILocation(line: 1290, column: 32, scope: !6626)
!6646 = !DILocation(line: 1290, column: 30, scope: !6626)
!6647 = !DILocation(line: 1290, column: 45, scope: !6626)
!6648 = !DILocation(line: 1290, column: 63, scope: !6626)
!6649 = !DILocation(line: 1290, column: 56, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !6626, file: !1122, discriminator: 1)
!6651 = !DILocation(line: 1290, column: 54, scope: !6626)
!6652 = !DILocation(line: 1292, column: 26, scope: !6626)
!6653 = !DILocation(line: 1292, column: 31, scope: !6626)
!6654 = !DILocation(line: 1292, column: 51, scope: !6626)
!6655 = !DILocation(line: 1292, column: 56, scope: !6626)
!6656 = !DILocation(line: 1292, column: 61, scope: !6626)
!6657 = !DILocation(line: 1292, column: 81, scope: !6626)
!6658 = !DILocation(line: 1293, column: 47, scope: !6626)
!6659 = !DILocation(line: 1293, column: 73, scope: !6626)
!6660 = !DILocation(line: 1290, column: 17, scope: !6661)
!6661 = !DILexicalBlockFile(scope: !6626, file: !1122, discriminator: 2)
!6662 = !DILocation(line: 1294, column: 13, scope: !6626)
!6663 = !DILocation(line: 1295, column: 17, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6564, file: !1122, line: 1295, column: 17)
!6665 = !DILocation(line: 1295, column: 36, scope: !6664)
!6666 = !DILocation(line: 1295, column: 17, scope: !6564)
!6667 = !DILocalVariable(name: "g", scope: !6668, file: !1122, line: 1296, type: !991)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !1122, line: 1295, column: 43)
!6669 = !DILocation(line: 1296, column: 21, scope: !6668)
!6670 = !DILocation(line: 1296, column: 32, scope: !6668)
!6671 = !DILocation(line: 1296, column: 37, scope: !6668)
!6672 = !DILocation(line: 1296, column: 47, scope: !6668)
!6673 = !DILocation(line: 1296, column: 52, scope: !6668)
!6674 = !DILocation(line: 1296, column: 57, scope: !6668)
!6675 = !DILocation(line: 1296, column: 67, scope: !6668)
!6676 = !DILocation(line: 1296, column: 25, scope: !6668)
!6677 = !DILocation(line: 1297, column: 26, scope: !6668)
!6678 = !DILocation(line: 1297, column: 39, scope: !6668)
!6679 = !DILocation(line: 1297, column: 32, scope: !6668)
!6680 = !DILocation(line: 1297, column: 30, scope: !6668)
!6681 = !DILocation(line: 1297, column: 45, scope: !6668)
!6682 = !DILocation(line: 1297, column: 63, scope: !6668)
!6683 = !DILocation(line: 1297, column: 56, scope: !6684)
!6684 = !DILexicalBlockFile(scope: !6668, file: !1122, discriminator: 1)
!6685 = !DILocation(line: 1297, column: 54, scope: !6668)
!6686 = !DILocation(line: 1299, column: 26, scope: !6668)
!6687 = !DILocation(line: 1299, column: 31, scope: !6668)
!6688 = !DILocation(line: 1299, column: 41, scope: !6668)
!6689 = !DILocation(line: 1299, column: 47, scope: !6668)
!6690 = !DILocation(line: 1299, column: 45, scope: !6668)
!6691 = !DILocation(line: 1299, column: 50, scope: !6668)
!6692 = !DILocation(line: 1299, column: 55, scope: !6668)
!6693 = !DILocation(line: 1299, column: 65, scope: !6668)
!6694 = !DILocation(line: 1299, column: 71, scope: !6668)
!6695 = !DILocation(line: 1299, column: 69, scope: !6668)
!6696 = !DILocation(line: 1297, column: 17, scope: !6697)
!6697 = !DILexicalBlockFile(scope: !6668, file: !1122, discriminator: 2)
!6698 = !DILocation(line: 1300, column: 13, scope: !6668)
!6699 = !DILocation(line: 1301, column: 9, scope: !6564)
!6700 = !DILocation(line: 1302, column: 13, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1302, column: 13)
!6702 = !DILocation(line: 1302, column: 13, scope: !6381)
!6703 = !DILocation(line: 1303, column: 22, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6701, file: !1122, line: 1302, column: 21)
!6705 = !DILocation(line: 1303, column: 35, scope: !6704)
!6706 = !DILocation(line: 1303, column: 28, scope: !6704)
!6707 = !DILocation(line: 1303, column: 26, scope: !6704)
!6708 = !DILocation(line: 1303, column: 41, scope: !6704)
!6709 = !DILocation(line: 1303, column: 59, scope: !6704)
!6710 = !DILocation(line: 1303, column: 52, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !6704, file: !1122, discriminator: 1)
!6712 = !DILocation(line: 1303, column: 50, scope: !6704)
!6713 = !DILocation(line: 1304, column: 35, scope: !6704)
!6714 = !DILocation(line: 1304, column: 40, scope: !6704)
!6715 = !DILocation(line: 1304, column: 46, scope: !6704)
!6716 = !DILocation(line: 1304, column: 51, scope: !6704)
!6717 = !DILocation(line: 1303, column: 13, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6704, file: !1122, discriminator: 2)
!6719 = !DILocation(line: 1305, column: 9, scope: !6704)
!6720 = !DILocation(line: 1306, column: 17, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !1122, line: 1306, column: 17)
!6722 = distinct !DILexicalBlock(scope: !6701, file: !1122, line: 1305, column: 16)
!6723 = !DILocation(line: 1306, column: 22, scope: !6721)
!6724 = !DILocation(line: 1306, column: 33, scope: !6721)
!6725 = !DILocation(line: 1306, column: 17, scope: !6722)
!6726 = !DILocation(line: 1307, column: 26, scope: !6721)
!6727 = !DILocation(line: 1307, column: 39, scope: !6721)
!6728 = !DILocation(line: 1307, column: 32, scope: !6721)
!6729 = !DILocation(line: 1307, column: 30, scope: !6721)
!6730 = !DILocation(line: 1307, column: 45, scope: !6721)
!6731 = !DILocation(line: 1307, column: 63, scope: !6721)
!6732 = !DILocation(line: 1307, column: 56, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6721, file: !1122, discriminator: 1)
!6734 = !DILocation(line: 1307, column: 54, scope: !6721)
!6735 = !DILocation(line: 1307, column: 17, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6721, file: !1122, discriminator: 2)
!6737 = !DILocation(line: 1307, column: 17, scope: !6721)
!6738 = !DILocation(line: 1309, column: 17, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6722, file: !1122, line: 1309, column: 17)
!6740 = !DILocation(line: 1309, column: 22, scope: !6739)
!6741 = !DILocation(line: 1309, column: 33, scope: !6739)
!6742 = !DILocation(line: 1309, column: 17, scope: !6722)
!6743 = !DILocation(line: 1310, column: 26, scope: !6739)
!6744 = !DILocation(line: 1310, column: 39, scope: !6739)
!6745 = !DILocation(line: 1310, column: 32, scope: !6739)
!6746 = !DILocation(line: 1310, column: 30, scope: !6739)
!6747 = !DILocation(line: 1310, column: 45, scope: !6739)
!6748 = !DILocation(line: 1310, column: 63, scope: !6739)
!6749 = !DILocation(line: 1310, column: 56, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !6739, file: !1122, discriminator: 1)
!6751 = !DILocation(line: 1310, column: 54, scope: !6739)
!6752 = !DILocation(line: 1310, column: 17, scope: !6753)
!6753 = !DILexicalBlockFile(scope: !6739, file: !1122, discriminator: 2)
!6754 = !DILocation(line: 1310, column: 17, scope: !6739)
!6755 = !DILocation(line: 1313, column: 9, scope: !6381)
!6756 = !DILocation(line: 1315, column: 20, scope: !6381)
!6757 = !DILocation(line: 1315, column: 25, scope: !6381)
!6758 = !DILocation(line: 1315, column: 36, scope: !6381)
!6759 = !DILocation(line: 1315, column: 9, scope: !6381)
!6760 = !DILocation(line: 1317, column: 13, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1317, column: 13)
!6762 = !DILocation(line: 1317, column: 18, scope: !6761)
!6763 = !DILocation(line: 1317, column: 13, scope: !6381)
!6764 = !DILocation(line: 1318, column: 22, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6761, file: !1122, line: 1317, column: 31)
!6766 = !DILocation(line: 1318, column: 35, scope: !6765)
!6767 = !DILocation(line: 1318, column: 28, scope: !6765)
!6768 = !DILocation(line: 1318, column: 26, scope: !6765)
!6769 = !DILocation(line: 1318, column: 41, scope: !6765)
!6770 = !DILocation(line: 1318, column: 59, scope: !6765)
!6771 = !DILocation(line: 1318, column: 52, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !6765, file: !1122, discriminator: 1)
!6773 = !DILocation(line: 1318, column: 50, scope: !6765)
!6774 = !DILocation(line: 1319, column: 33, scope: !6765)
!6775 = !DILocation(line: 1319, column: 38, scope: !6765)
!6776 = !DILocation(line: 1318, column: 13, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6765, file: !1122, discriminator: 2)
!6778 = !DILocation(line: 1320, column: 9, scope: !6765)
!6779 = !DILocation(line: 1321, column: 38, scope: !6381)
!6780 = !DILocation(line: 1321, column: 51, scope: !6381)
!6781 = !DILocation(line: 1321, column: 44, scope: !6381)
!6782 = !DILocation(line: 1321, column: 42, scope: !6381)
!6783 = !DILocation(line: 1321, column: 57, scope: !6381)
!6784 = !DILocation(line: 1321, column: 75, scope: !6381)
!6785 = !DILocation(line: 1321, column: 68, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !6381, file: !1122, discriminator: 1)
!6787 = !DILocation(line: 1321, column: 66, scope: !6381)
!6788 = !DILocation(line: 1321, column: 81, scope: !6381)
!6789 = !DILocation(line: 1321, column: 86, scope: !6381)
!6790 = !DILocation(line: 1321, column: 96, scope: !6381)
!6791 = !DILocation(line: 1321, column: 101, scope: !6381)
!6792 = !DILocation(line: 1321, column: 9, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !6381, file: !1122, discriminator: 2)
!6794 = !DILocation(line: 1322, column: 13, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1322, column: 13)
!6796 = !DILocation(line: 1322, column: 18, scope: !6795)
!6797 = !DILocation(line: 1322, column: 29, scope: !6795)
!6798 = !DILocation(line: 1322, column: 13, scope: !6381)
!6799 = !DILocation(line: 1323, column: 22, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6795, file: !1122, line: 1322, column: 52)
!6801 = !DILocation(line: 1323, column: 35, scope: !6800)
!6802 = !DILocation(line: 1323, column: 28, scope: !6800)
!6803 = !DILocation(line: 1323, column: 26, scope: !6800)
!6804 = !DILocation(line: 1323, column: 41, scope: !6800)
!6805 = !DILocation(line: 1323, column: 59, scope: !6800)
!6806 = !DILocation(line: 1323, column: 52, scope: !6807)
!6807 = !DILexicalBlockFile(scope: !6800, file: !1122, discriminator: 1)
!6808 = !DILocation(line: 1323, column: 50, scope: !6800)
!6809 = !DILocation(line: 1324, column: 53, scope: !6800)
!6810 = !DILocation(line: 1324, column: 58, scope: !6800)
!6811 = !DILocation(line: 1324, column: 30, scope: !6800)
!6812 = !DILocation(line: 1323, column: 13, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6800, file: !1122, discriminator: 2)
!6814 = !DILocation(line: 1325, column: 9, scope: !6800)
!6815 = !DILocation(line: 1326, column: 14, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1326, column: 14)
!6817 = !DILocation(line: 1326, column: 19, scope: !6816)
!6818 = !DILocation(line: 1326, column: 39, scope: !6816)
!6819 = !DILocation(line: 1327, column: 13, scope: !6816)
!6820 = !DILocation(line: 1327, column: 16, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6816, file: !1122, discriminator: 1)
!6822 = !DILocation(line: 1327, column: 21, scope: !6821)
!6823 = !DILocation(line: 1327, column: 68, scope: !6821)
!6824 = !DILocation(line: 1327, column: 73, scope: !6821)
!6825 = !DILocation(line: 1327, column: 44, scope: !6821)
!6826 = !DILocation(line: 1327, column: 85, scope: !6821)
!6827 = !DILocation(line: 1327, column: 41, scope: !6821)
!6828 = !DILocation(line: 1326, column: 14, scope: !6786)
!6829 = !DILocation(line: 1328, column: 22, scope: !6816)
!6830 = !DILocation(line: 1328, column: 35, scope: !6816)
!6831 = !DILocation(line: 1328, column: 28, scope: !6816)
!6832 = !DILocation(line: 1328, column: 26, scope: !6816)
!6833 = !DILocation(line: 1328, column: 41, scope: !6816)
!6834 = !DILocation(line: 1328, column: 59, scope: !6816)
!6835 = !DILocation(line: 1328, column: 52, scope: !6821)
!6836 = !DILocation(line: 1328, column: 50, scope: !6816)
!6837 = !DILocation(line: 1329, column: 35, scope: !6816)
!6838 = !DILocation(line: 1329, column: 40, scope: !6816)
!6839 = !DILocation(line: 1328, column: 13, scope: !6840)
!6840 = !DILexicalBlockFile(scope: !6816, file: !1122, discriminator: 2)
!6841 = !DILocation(line: 1328, column: 13, scope: !6816)
!6842 = !DILocation(line: 1330, column: 13, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1330, column: 13)
!6844 = !DILocation(line: 1330, column: 32, scope: !6843)
!6845 = !DILocation(line: 1330, column: 13, scope: !6381)
!6846 = !DILocation(line: 1331, column: 17, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !1122, line: 1331, column: 17)
!6848 = distinct !DILexicalBlock(scope: !6843, file: !1122, line: 1330, column: 39)
!6849 = !DILocation(line: 1331, column: 22, scope: !6847)
!6850 = !DILocation(line: 1331, column: 17, scope: !6848)
!6851 = !DILocation(line: 1332, column: 26, scope: !6847)
!6852 = !DILocation(line: 1332, column: 39, scope: !6847)
!6853 = !DILocation(line: 1332, column: 32, scope: !6847)
!6854 = !DILocation(line: 1332, column: 30, scope: !6847)
!6855 = !DILocation(line: 1332, column: 45, scope: !6847)
!6856 = !DILocation(line: 1332, column: 63, scope: !6847)
!6857 = !DILocation(line: 1332, column: 56, scope: !6858)
!6858 = !DILexicalBlockFile(scope: !6847, file: !1122, discriminator: 1)
!6859 = !DILocation(line: 1332, column: 54, scope: !6847)
!6860 = !DILocation(line: 1333, column: 40, scope: !6847)
!6861 = !DILocation(line: 1333, column: 45, scope: !6847)
!6862 = !DILocation(line: 1332, column: 17, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !6847, file: !1122, discriminator: 2)
!6864 = !DILocation(line: 1332, column: 17, scope: !6847)
!6865 = !DILocation(line: 1334, column: 17, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6848, file: !1122, line: 1334, column: 17)
!6867 = !DILocation(line: 1334, column: 22, scope: !6866)
!6868 = !DILocation(line: 1334, column: 17, scope: !6848)
!6869 = !DILocation(line: 1335, column: 26, scope: !6866)
!6870 = !DILocation(line: 1335, column: 39, scope: !6866)
!6871 = !DILocation(line: 1335, column: 32, scope: !6866)
!6872 = !DILocation(line: 1335, column: 30, scope: !6866)
!6873 = !DILocation(line: 1335, column: 45, scope: !6866)
!6874 = !DILocation(line: 1335, column: 63, scope: !6866)
!6875 = !DILocation(line: 1335, column: 56, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !6866, file: !1122, discriminator: 1)
!6877 = !DILocation(line: 1335, column: 54, scope: !6866)
!6878 = !DILocation(line: 1336, column: 42, scope: !6866)
!6879 = !DILocation(line: 1336, column: 47, scope: !6866)
!6880 = !DILocation(line: 1335, column: 17, scope: !6881)
!6881 = !DILexicalBlockFile(scope: !6866, file: !1122, discriminator: 2)
!6882 = !DILocation(line: 1335, column: 17, scope: !6866)
!6883 = !DILocation(line: 1337, column: 9, scope: !6848)
!6884 = !DILocation(line: 1338, column: 9, scope: !6381)
!6885 = !DILocation(line: 1340, column: 13, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1340, column: 13)
!6887 = !DILocation(line: 1340, column: 32, scope: !6886)
!6888 = !DILocation(line: 1340, column: 13, scope: !6381)
!6889 = !DILocalVariable(name: "g", scope: !6890, file: !1122, line: 1341, type: !991)
!6890 = distinct !DILexicalBlock(scope: !6886, file: !1122, line: 1340, column: 39)
!6891 = !DILocation(line: 1341, column: 17, scope: !6890)
!6892 = !DILocation(line: 1341, column: 28, scope: !6890)
!6893 = !DILocation(line: 1341, column: 33, scope: !6890)
!6894 = !DILocation(line: 1341, column: 43, scope: !6890)
!6895 = !DILocation(line: 1341, column: 48, scope: !6890)
!6896 = !DILocation(line: 1341, column: 53, scope: !6890)
!6897 = !DILocation(line: 1341, column: 63, scope: !6890)
!6898 = !DILocation(line: 1341, column: 21, scope: !6890)
!6899 = !DILocation(line: 1342, column: 17, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6890, file: !1122, line: 1342, column: 17)
!6901 = !DILocation(line: 1342, column: 17, scope: !6890)
!6902 = !DILocation(line: 1343, column: 26, scope: !6900)
!6903 = !DILocation(line: 1343, column: 39, scope: !6900)
!6904 = !DILocation(line: 1343, column: 32, scope: !6900)
!6905 = !DILocation(line: 1343, column: 30, scope: !6900)
!6906 = !DILocation(line: 1343, column: 45, scope: !6900)
!6907 = !DILocation(line: 1343, column: 63, scope: !6900)
!6908 = !DILocation(line: 1343, column: 56, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !6900, file: !1122, discriminator: 1)
!6910 = !DILocation(line: 1343, column: 54, scope: !6900)
!6911 = !DILocation(line: 1345, column: 26, scope: !6900)
!6912 = !DILocation(line: 1345, column: 31, scope: !6900)
!6913 = !DILocation(line: 1345, column: 41, scope: !6900)
!6914 = !DILocation(line: 1345, column: 47, scope: !6900)
!6915 = !DILocation(line: 1345, column: 45, scope: !6900)
!6916 = !DILocation(line: 1345, column: 50, scope: !6900)
!6917 = !DILocation(line: 1345, column: 55, scope: !6900)
!6918 = !DILocation(line: 1345, column: 65, scope: !6900)
!6919 = !DILocation(line: 1345, column: 71, scope: !6900)
!6920 = !DILocation(line: 1345, column: 69, scope: !6900)
!6921 = !DILocation(line: 1343, column: 17, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !6900, file: !1122, discriminator: 2)
!6923 = !DILocation(line: 1343, column: 17, scope: !6900)
!6924 = !DILocation(line: 1346, column: 9, scope: !6890)
!6925 = !DILocation(line: 1347, column: 9, scope: !6381)
!6926 = !DILocation(line: 1349, column: 13, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6381, file: !1122, line: 1349, column: 13)
!6928 = !DILocation(line: 1349, column: 18, scope: !6927)
!6929 = !DILocation(line: 1349, column: 13, scope: !6381)
!6930 = !DILocation(line: 1350, column: 22, scope: !6927)
!6931 = !DILocation(line: 1350, column: 35, scope: !6927)
!6932 = !DILocation(line: 1350, column: 28, scope: !6927)
!6933 = !DILocation(line: 1350, column: 26, scope: !6927)
!6934 = !DILocation(line: 1350, column: 41, scope: !6927)
!6935 = !DILocation(line: 1350, column: 59, scope: !6927)
!6936 = !DILocation(line: 1350, column: 52, scope: !6937)
!6937 = !DILexicalBlockFile(scope: !6927, file: !1122, discriminator: 1)
!6938 = !DILocation(line: 1350, column: 50, scope: !6927)
!6939 = !DILocation(line: 1351, column: 33, scope: !6927)
!6940 = !DILocation(line: 1351, column: 38, scope: !6927)
!6941 = !DILocation(line: 1351, column: 45, scope: !6927)
!6942 = !DILocation(line: 1351, column: 50, scope: !6927)
!6943 = !DILocation(line: 1350, column: 13, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6927, file: !1122, discriminator: 2)
!6945 = !DILocation(line: 1350, column: 13, scope: !6927)
!6946 = !DILocation(line: 1352, column: 9, scope: !6381)
!6947 = !DILocation(line: 1354, column: 9, scope: !6381)
!6948 = !DILocation(line: 1356, column: 9, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1356, column: 9)
!6950 = !DILocation(line: 1356, column: 9, scope: !6215)
!6951 = !DILocation(line: 1357, column: 13, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !1122, line: 1357, column: 13)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !1122, line: 1356, column: 17)
!6954 = !DILocation(line: 1357, column: 18, scope: !6952)
!6955 = !DILocation(line: 1357, column: 24, scope: !6952)
!6956 = !DILocation(line: 1357, column: 13, scope: !6953)
!6957 = !DILocation(line: 1358, column: 22, scope: !6952)
!6958 = !DILocation(line: 1358, column: 35, scope: !6952)
!6959 = !DILocation(line: 1358, column: 28, scope: !6952)
!6960 = !DILocation(line: 1358, column: 26, scope: !6952)
!6961 = !DILocation(line: 1358, column: 41, scope: !6952)
!6962 = !DILocation(line: 1358, column: 59, scope: !6952)
!6963 = !DILocation(line: 1358, column: 52, scope: !6964)
!6964 = !DILexicalBlockFile(scope: !6952, file: !1122, discriminator: 1)
!6965 = !DILocation(line: 1358, column: 50, scope: !6952)
!6966 = !DILocation(line: 1358, column: 13, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !6952, file: !1122, discriminator: 2)
!6968 = !DILocation(line: 1358, column: 13, scope: !6952)
!6969 = !DILocation(line: 1360, column: 13, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6953, file: !1122, line: 1360, column: 13)
!6971 = !DILocation(line: 1360, column: 18, scope: !6970)
!6972 = !DILocation(line: 1360, column: 24, scope: !6970)
!6973 = !DILocation(line: 1360, column: 13, scope: !6953)
!6974 = !DILocation(line: 1361, column: 22, scope: !6970)
!6975 = !DILocation(line: 1361, column: 35, scope: !6970)
!6976 = !DILocation(line: 1361, column: 28, scope: !6970)
!6977 = !DILocation(line: 1361, column: 26, scope: !6970)
!6978 = !DILocation(line: 1361, column: 41, scope: !6970)
!6979 = !DILocation(line: 1361, column: 59, scope: !6970)
!6980 = !DILocation(line: 1361, column: 52, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !6970, file: !1122, discriminator: 1)
!6982 = !DILocation(line: 1361, column: 50, scope: !6970)
!6983 = !DILocation(line: 1361, column: 13, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !6970, file: !1122, discriminator: 2)
!6985 = !DILocation(line: 1361, column: 13, scope: !6970)
!6986 = !DILocation(line: 1363, column: 5, scope: !6953)
!6987 = !DILocation(line: 1364, column: 28, scope: !6215)
!6988 = !DILocation(line: 1364, column: 15, scope: !6215)
!6989 = !DILocation(line: 1364, column: 13, scope: !6215)
!6990 = !DILocation(line: 1365, column: 9, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6215, file: !1122, line: 1365, column: 9)
!6992 = !DILocation(line: 1365, column: 17, scope: !6991)
!6993 = !DILocation(line: 1365, column: 9, scope: !6215)
!6994 = !DILocation(line: 1366, column: 18, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6991, file: !1122, line: 1365, column: 23)
!6996 = !DILocation(line: 1366, column: 31, scope: !6995)
!6997 = !DILocation(line: 1366, column: 24, scope: !6995)
!6998 = !DILocation(line: 1366, column: 22, scope: !6995)
!6999 = !DILocation(line: 1366, column: 37, scope: !6995)
!7000 = !DILocation(line: 1366, column: 55, scope: !6995)
!7001 = !DILocation(line: 1366, column: 48, scope: !7002)
!7002 = !DILexicalBlockFile(scope: !6995, file: !1122, discriminator: 1)
!7003 = !DILocation(line: 1366, column: 46, scope: !6995)
!7004 = !DILocation(line: 1367, column: 37, scope: !6995)
!7005 = !DILocation(line: 1367, column: 45, scope: !6995)
!7006 = !DILocation(line: 1366, column: 9, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !6995, file: !1122, discriminator: 2)
!7008 = !DILocation(line: 1368, column: 5, scope: !6995)
!7009 = !DILocation(line: 1368, column: 16, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !7011, file: !1122, discriminator: 1)
!7011 = distinct !DILexicalBlock(scope: !6991, file: !1122, line: 1368, column: 16)
!7012 = !DILocation(line: 1368, column: 21, scope: !7010)
!7013 = !DILocation(line: 1368, column: 33, scope: !7010)
!7014 = !DILocation(line: 1369, column: 18, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !1122, line: 1368, column: 38)
!7016 = !DILocation(line: 1369, column: 31, scope: !7015)
!7017 = !DILocation(line: 1369, column: 24, scope: !7015)
!7018 = !DILocation(line: 1369, column: 22, scope: !7015)
!7019 = !DILocation(line: 1369, column: 37, scope: !7015)
!7020 = !DILocation(line: 1369, column: 55, scope: !7015)
!7021 = !DILocation(line: 1369, column: 48, scope: !7022)
!7022 = !DILexicalBlockFile(scope: !7015, file: !1122, discriminator: 1)
!7023 = !DILocation(line: 1369, column: 46, scope: !7015)
!7024 = !DILocation(line: 1370, column: 42, scope: !7015)
!7025 = !DILocation(line: 1370, column: 47, scope: !7015)
!7026 = !DILocation(line: 1370, column: 59, scope: !7015)
!7027 = !DILocation(line: 1369, column: 9, scope: !7028)
!7028 = !DILexicalBlockFile(scope: !7015, file: !1122, discriminator: 2)
!7029 = !DILocation(line: 1371, column: 5, scope: !7015)
!7030 = !DILocation(line: 1372, column: 1, scope: !6215)
!7031 = distinct !DISubprogram(name: "avcodec_profile_name", scope: !1122, file: !1122, line: 1387, type: !7032, isLocal: false, isDefinition: true, scopeLine: 1388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!977, !13, !991}
!7034 = !DILocalVariable(name: "codec_id", arg: 1, scope: !7031, file: !1122, line: 1387, type: !13)
!7035 = !DILocation(line: 1387, column: 49, scope: !7031)
!7036 = !DILocalVariable(name: "profile", arg: 2, scope: !7031, file: !1122, line: 1387, type: !991)
!7037 = !DILocation(line: 1387, column: 63, scope: !7031)
!7038 = !DILocalVariable(name: "desc", scope: !7031, file: !1122, line: 1389, type: !2748)
!7039 = !DILocation(line: 1389, column: 30, scope: !7031)
!7040 = !DILocation(line: 1389, column: 60, scope: !7031)
!7041 = !DILocation(line: 1389, column: 37, scope: !7031)
!7042 = !DILocalVariable(name: "p", scope: !7031, file: !1122, line: 1390, type: !1359)
!7043 = !DILocation(line: 1390, column: 22, scope: !7031)
!7044 = !DILocation(line: 1392, column: 9, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7031, file: !1122, line: 1392, column: 9)
!7046 = !DILocation(line: 1392, column: 17, scope: !7045)
!7047 = !DILocation(line: 1392, column: 24, scope: !7045)
!7048 = !DILocation(line: 1392, column: 28, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !7045, file: !1122, discriminator: 1)
!7050 = !DILocation(line: 1392, column: 33, scope: !7049)
!7051 = !DILocation(line: 1392, column: 37, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !7045, file: !1122, discriminator: 2)
!7053 = !DILocation(line: 1392, column: 43, scope: !7052)
!7054 = !DILocation(line: 1392, column: 9, scope: !7052)
!7055 = !DILocation(line: 1393, column: 9, scope: !7045)
!7056 = !DILocation(line: 1395, column: 14, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7031, file: !1122, line: 1395, column: 5)
!7058 = !DILocation(line: 1395, column: 20, scope: !7057)
!7059 = !DILocation(line: 1395, column: 12, scope: !7057)
!7060 = !DILocation(line: 1395, column: 10, scope: !7057)
!7061 = !DILocation(line: 1395, column: 30, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7063, file: !1122, discriminator: 1)
!7063 = distinct !DILexicalBlock(scope: !7057, file: !1122, line: 1395, column: 5)
!7064 = !DILocation(line: 1395, column: 33, scope: !7062)
!7065 = !DILocation(line: 1395, column: 41, scope: !7062)
!7066 = !DILocation(line: 1395, column: 5, scope: !7062)
!7067 = !DILocation(line: 1396, column: 13, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7063, file: !1122, line: 1396, column: 13)
!7069 = !DILocation(line: 1396, column: 16, scope: !7068)
!7070 = !DILocation(line: 1396, column: 27, scope: !7068)
!7071 = !DILocation(line: 1396, column: 24, scope: !7068)
!7072 = !DILocation(line: 1396, column: 13, scope: !7063)
!7073 = !DILocation(line: 1397, column: 20, scope: !7068)
!7074 = !DILocation(line: 1397, column: 23, scope: !7068)
!7075 = !DILocation(line: 1397, column: 13, scope: !7068)
!7076 = !DILocation(line: 1396, column: 27, scope: !7077)
!7077 = !DILexicalBlockFile(scope: !7068, file: !1122, discriminator: 1)
!7078 = !DILocation(line: 1395, column: 50, scope: !7079)
!7079 = !DILexicalBlockFile(scope: !7063, file: !1122, discriminator: 2)
!7080 = !DILocation(line: 1395, column: 5, scope: !7079)
!7081 = distinct !{!7081, !7082}
!7082 = !DILocation(line: 1395, column: 5, scope: !7031)
!7083 = !DILocation(line: 1399, column: 5, scope: !7031)
!7084 = !DILocation(line: 1400, column: 1, scope: !7031)
!7085 = distinct !DISubprogram(name: "av_get_profile_name", scope: !1122, file: !1122, line: 1374, type: !7086, isLocal: false, isDefinition: true, scopeLine: 1375, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!977, !1330, !991}
!7088 = !DILocalVariable(name: "codec", arg: 1, scope: !7085, file: !1122, line: 1374, type: !1330)
!7089 = !DILocation(line: 1374, column: 48, scope: !7085)
!7090 = !DILocalVariable(name: "profile", arg: 2, scope: !7085, file: !1122, line: 1374, type: !991)
!7091 = !DILocation(line: 1374, column: 59, scope: !7085)
!7092 = !DILocalVariable(name: "p", scope: !7085, file: !1122, line: 1376, type: !1359)
!7093 = !DILocation(line: 1376, column: 22, scope: !7085)
!7094 = !DILocation(line: 1377, column: 9, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7085, file: !1122, line: 1377, column: 9)
!7096 = !DILocation(line: 1377, column: 17, scope: !7095)
!7097 = !DILocation(line: 1377, column: 24, scope: !7095)
!7098 = !DILocation(line: 1377, column: 28, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7095, file: !1122, discriminator: 1)
!7100 = !DILocation(line: 1377, column: 35, scope: !7099)
!7101 = !DILocation(line: 1377, column: 9, scope: !7099)
!7102 = !DILocation(line: 1378, column: 9, scope: !7095)
!7103 = !DILocation(line: 1380, column: 14, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7085, file: !1122, line: 1380, column: 5)
!7105 = !DILocation(line: 1380, column: 21, scope: !7104)
!7106 = !DILocation(line: 1380, column: 12, scope: !7104)
!7107 = !DILocation(line: 1380, column: 10, scope: !7104)
!7108 = !DILocation(line: 1380, column: 31, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !7110, file: !1122, discriminator: 1)
!7110 = distinct !DILexicalBlock(scope: !7104, file: !1122, line: 1380, column: 5)
!7111 = !DILocation(line: 1380, column: 34, scope: !7109)
!7112 = !DILocation(line: 1380, column: 42, scope: !7109)
!7113 = !DILocation(line: 1380, column: 5, scope: !7109)
!7114 = !DILocation(line: 1381, column: 13, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7110, file: !1122, line: 1381, column: 13)
!7116 = !DILocation(line: 1381, column: 16, scope: !7115)
!7117 = !DILocation(line: 1381, column: 27, scope: !7115)
!7118 = !DILocation(line: 1381, column: 24, scope: !7115)
!7119 = !DILocation(line: 1381, column: 13, scope: !7110)
!7120 = !DILocation(line: 1382, column: 20, scope: !7115)
!7121 = !DILocation(line: 1382, column: 23, scope: !7115)
!7122 = !DILocation(line: 1382, column: 13, scope: !7115)
!7123 = !DILocation(line: 1381, column: 27, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !7115, file: !1122, discriminator: 1)
!7125 = !DILocation(line: 1380, column: 51, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7110, file: !1122, discriminator: 2)
!7127 = !DILocation(line: 1380, column: 5, scope: !7126)
!7128 = distinct !{!7128, !7129}
!7129 = !DILocation(line: 1380, column: 5, scope: !7085)
!7130 = !DILocation(line: 1384, column: 5, scope: !7085)
!7131 = !DILocation(line: 1385, column: 1, scope: !7085)
!7132 = distinct !DISubprogram(name: "avcodec_version", scope: !1122, file: !1122, line: 1402, type: !7133, isLocal: false, isDefinition: true, scopeLine: 1403, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!1111}
!7135 = !DILocation(line: 1405, column: 5, scope: !7132)
!7136 = distinct !{!7136, !7135}
!7137 = !DILocation(line: 1405, column: 119, scope: !7138)
!7138 = !DILexicalBlockFile(scope: !7139, file: !1122, discriminator: 1)
!7139 = distinct !DILexicalBlock(scope: !7132, file: !1122, line: 1405, column: 8)
!7140 = !DILocation(line: 1406, column: 5, scope: !7132)
!7141 = distinct !{!7141, !7140}
!7142 = !DILocation(line: 1406, column: 116, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !7144, file: !1122, discriminator: 1)
!7144 = distinct !DILexicalBlock(scope: !7132, file: !1122, line: 1406, column: 8)
!7145 = !DILocation(line: 1408, column: 5, scope: !7132)
!7146 = distinct !{!7146, !7145}
!7147 = !DILocation(line: 1408, column: 109, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !7149, file: !1122, discriminator: 1)
!7149 = distinct !DILexicalBlock(scope: !7132, file: !1122, line: 1408, column: 8)
!7150 = !DILocation(line: 1409, column: 5, scope: !7132)
!7151 = distinct !{!7151, !7150}
!7152 = !DILocation(line: 1409, column: 97, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !7154, file: !1122, discriminator: 1)
!7154 = distinct !DILexicalBlock(scope: !7132, file: !1122, line: 1409, column: 8)
!7155 = !DILocation(line: 1411, column: 5, scope: !7132)
!7156 = distinct !DISubprogram(name: "avcodec_configuration", scope: !1122, file: !1122, line: 1414, type: !7157, isLocal: false, isDefinition: true, scopeLine: 1415, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!977}
!7159 = !DILocation(line: 1416, column: 5, scope: !7156)
!7160 = distinct !DISubprogram(name: "avcodec_license", scope: !1122, file: !1122, line: 1419, type: !7157, isLocal: false, isDefinition: true, scopeLine: 1420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7161 = !DILocation(line: 1422, column: 5, scope: !7160)
!7162 = distinct !DISubprogram(name: "av_get_exact_bits_per_sample", scope: !1122, file: !1122, line: 1425, type: !7163, isLocal: false, isDefinition: true, scopeLine: 1426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!991, !13}
!7165 = !DILocalVariable(name: "codec_id", arg: 1, scope: !7162, file: !1122, line: 1425, type: !13)
!7166 = !DILocation(line: 1425, column: 49, scope: !7162)
!7167 = !DILocation(line: 1427, column: 13, scope: !7162)
!7168 = !DILocation(line: 1427, column: 5, scope: !7162)
!7169 = !DILocation(line: 1438, column: 9, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7162, file: !1122, line: 1427, column: 23)
!7171 = !DILocation(line: 1451, column: 9, scope: !7170)
!7172 = !DILocation(line: 1458, column: 9, scope: !7170)
!7173 = !DILocation(line: 1465, column: 9, scope: !7170)
!7174 = !DILocation(line: 1475, column: 9, scope: !7170)
!7175 = !DILocation(line: 1480, column: 9, scope: !7170)
!7176 = !DILocation(line: 1482, column: 9, scope: !7170)
!7177 = !DILocation(line: 1484, column: 1, scope: !7162)
!7178 = !DILocalVariable(name: "fmt", arg: 1, scope: !1127, file: !1122, line: 1486, type: !673)
!7179 = !DILocation(line: 1486, column: 53, scope: !1127)
!7180 = !DILocalVariable(name: "be", arg: 2, scope: !1127, file: !1122, line: 1486, type: !991)
!7181 = !DILocation(line: 1486, column: 62, scope: !1127)
!7182 = !DILocation(line: 1501, column: 9, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !1127, file: !1122, line: 1501, column: 9)
!7184 = !DILocation(line: 1501, column: 13, scope: !7183)
!7185 = !DILocation(line: 1501, column: 17, scope: !7183)
!7186 = !DILocation(line: 1501, column: 20, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !7183, file: !1122, discriminator: 1)
!7188 = !DILocation(line: 1501, column: 24, scope: !7187)
!7189 = !DILocation(line: 1501, column: 9, scope: !7187)
!7190 = !DILocation(line: 1502, column: 9, scope: !7183)
!7191 = !DILocation(line: 1503, column: 9, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !1127, file: !1122, line: 1503, column: 9)
!7193 = !DILocation(line: 1503, column: 12, scope: !7192)
!7194 = !DILocation(line: 1503, column: 16, scope: !7192)
!7195 = !DILocation(line: 1503, column: 19, scope: !7196)
!7196 = !DILexicalBlockFile(scope: !7192, file: !1122, discriminator: 1)
!7197 = !DILocation(line: 1503, column: 22, scope: !7196)
!7198 = !DILocation(line: 1503, column: 9, scope: !7196)
!7199 = !DILocation(line: 1504, column: 12, scope: !7192)
!7200 = !DILocation(line: 1504, column: 9, scope: !7192)
!7201 = !DILocation(line: 1505, column: 21, scope: !1127)
!7202 = !DILocation(line: 1505, column: 12, scope: !1127)
!7203 = !DILocation(line: 1505, column: 16, scope: !1127)
!7204 = !DILocation(line: 1505, column: 5, scope: !1127)
!7205 = !DILocation(line: 1506, column: 1, scope: !1127)
!7206 = distinct !DISubprogram(name: "av_get_bits_per_sample", scope: !1122, file: !1122, line: 1508, type: !7163, isLocal: false, isDefinition: true, scopeLine: 1509, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7207 = !DILocalVariable(name: "codec_id", arg: 1, scope: !7206, file: !1122, line: 1508, type: !13)
!7208 = !DILocation(line: 1508, column: 43, scope: !7206)
!7209 = !DILocation(line: 1510, column: 13, scope: !7206)
!7210 = !DILocation(line: 1510, column: 5, scope: !7206)
!7211 = !DILocation(line: 1512, column: 9, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7206, file: !1122, line: 1510, column: 23)
!7213 = !DILocation(line: 1514, column: 9, scope: !7212)
!7214 = !DILocation(line: 1520, column: 9, scope: !7212)
!7215 = !DILocation(line: 1522, column: 45, scope: !7212)
!7216 = !DILocation(line: 1522, column: 16, scope: !7212)
!7217 = !DILocation(line: 1522, column: 9, scope: !7212)
!7218 = !DILocation(line: 1524, column: 1, scope: !7206)
!7219 = distinct !DISubprogram(name: "av_get_audio_frame_duration", scope: !1122, file: !1122, line: 1712, type: !7220, isLocal: false, isDefinition: true, scopeLine: 1713, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!991, !1374, !991}
!7222 = !DILocalVariable(name: "avctx", arg: 1, scope: !7219, file: !1122, line: 1712, type: !1374)
!7223 = !DILocation(line: 1712, column: 49, scope: !7219)
!7224 = !DILocalVariable(name: "frame_bytes", arg: 2, scope: !7219, file: !1122, line: 1712, type: !991)
!7225 = !DILocation(line: 1712, column: 60, scope: !7219)
!7226 = !DILocation(line: 1714, column: 37, scope: !7219)
!7227 = !DILocation(line: 1714, column: 44, scope: !7219)
!7228 = !DILocation(line: 1714, column: 54, scope: !7219)
!7229 = !DILocation(line: 1714, column: 61, scope: !7219)
!7230 = !DILocation(line: 1715, column: 37, scope: !7219)
!7231 = !DILocation(line: 1715, column: 44, scope: !7219)
!7232 = !DILocation(line: 1715, column: 54, scope: !7219)
!7233 = !DILocation(line: 1715, column: 61, scope: !7219)
!7234 = !DILocation(line: 1716, column: 37, scope: !7219)
!7235 = !DILocation(line: 1716, column: 44, scope: !7219)
!7236 = !DILocation(line: 1716, column: 55, scope: !7219)
!7237 = !DILocation(line: 1716, column: 62, scope: !7219)
!7238 = !DILocation(line: 1717, column: 37, scope: !7219)
!7239 = !DILocation(line: 1717, column: 44, scope: !7219)
!7240 = !DILocation(line: 1717, column: 54, scope: !7219)
!7241 = !DILocation(line: 1717, column: 61, scope: !7219)
!7242 = !DILocation(line: 1717, column: 72, scope: !7219)
!7243 = !DILocation(line: 1717, column: 79, scope: !7219)
!7244 = !DILocation(line: 1718, column: 37, scope: !7219)
!7245 = !DILocation(line: 1714, column: 12, scope: !7219)
!7246 = !DILocation(line: 1714, column: 5, scope: !7219)
!7247 = distinct !DISubprogram(name: "get_audio_frame_duration", scope: !1122, file: !1122, line: 1526, type: !7248, isLocal: true, isDefinition: true, scopeLine: 1529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!991, !13, !991, !991, !991, !1118, !991, !997, !958, !991, !991}
!7250 = !DILocalVariable(name: "id", arg: 1, scope: !7247, file: !1122, line: 1526, type: !13)
!7251 = !DILocation(line: 1526, column: 52, scope: !7247)
!7252 = !DILocalVariable(name: "sr", arg: 2, scope: !7247, file: !1122, line: 1526, type: !991)
!7253 = !DILocation(line: 1526, column: 60, scope: !7247)
!7254 = !DILocalVariable(name: "ch", arg: 3, scope: !7247, file: !1122, line: 1526, type: !991)
!7255 = !DILocation(line: 1526, column: 68, scope: !7247)
!7256 = !DILocalVariable(name: "ba", arg: 4, scope: !7247, file: !1122, line: 1526, type: !991)
!7257 = !DILocation(line: 1526, column: 76, scope: !7247)
!7258 = !DILocalVariable(name: "tag", arg: 5, scope: !7247, file: !1122, line: 1527, type: !1118)
!7259 = !DILocation(line: 1527, column: 46, scope: !7247)
!7260 = !DILocalVariable(name: "bits_per_coded_sample", arg: 6, scope: !7247, file: !1122, line: 1527, type: !991)
!7261 = !DILocation(line: 1527, column: 55, scope: !7247)
!7262 = !DILocalVariable(name: "bitrate", arg: 7, scope: !7247, file: !1122, line: 1527, type: !997)
!7263 = !DILocation(line: 1527, column: 86, scope: !7247)
!7264 = !DILocalVariable(name: "extradata", arg: 8, scope: !7247, file: !1122, line: 1528, type: !958)
!7265 = !DILocation(line: 1528, column: 47, scope: !7247)
!7266 = !DILocalVariable(name: "frame_size", arg: 9, scope: !7247, file: !1122, line: 1528, type: !991)
!7267 = !DILocation(line: 1528, column: 62, scope: !7247)
!7268 = !DILocalVariable(name: "frame_bytes", arg: 10, scope: !7247, file: !1122, line: 1528, type: !991)
!7269 = !DILocation(line: 1528, column: 78, scope: !7247)
!7270 = !DILocalVariable(name: "bps", scope: !7247, file: !1122, line: 1530, type: !991)
!7271 = !DILocation(line: 1530, column: 9, scope: !7247)
!7272 = !DILocation(line: 1530, column: 44, scope: !7247)
!7273 = !DILocation(line: 1530, column: 15, scope: !7247)
!7274 = !DILocalVariable(name: "framecount", scope: !7247, file: !1122, line: 1531, type: !991)
!7275 = !DILocation(line: 1531, column: 9, scope: !7247)
!7276 = !DILocation(line: 1531, column: 23, scope: !7247)
!7277 = !DILocation(line: 1531, column: 26, scope: !7247)
!7278 = !DILocation(line: 1531, column: 30, scope: !7247)
!7279 = !DILocation(line: 1531, column: 33, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !7247, file: !1122, discriminator: 1)
!7281 = !DILocation(line: 1531, column: 47, scope: !7280)
!7282 = !DILocation(line: 1531, column: 45, scope: !7280)
!7283 = !DILocation(line: 1531, column: 50, scope: !7280)
!7284 = !DILocation(line: 1531, column: 22, scope: !7280)
!7285 = !DILocation(line: 1531, column: 57, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7247, file: !1122, discriminator: 2)
!7287 = !DILocation(line: 1531, column: 71, scope: !7286)
!7288 = !DILocation(line: 1531, column: 69, scope: !7286)
!7289 = !DILocation(line: 1531, column: 22, scope: !7286)
!7290 = !DILocation(line: 1531, column: 22, scope: !7291)
!7291 = !DILexicalBlockFile(scope: !7247, file: !1122, discriminator: 3)
!7292 = !DILocation(line: 1531, column: 22, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7247, file: !1122, discriminator: 4)
!7294 = !DILocation(line: 1531, column: 9, scope: !7293)
!7295 = !DILocation(line: 1534, column: 9, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1534, column: 9)
!7297 = !DILocation(line: 1534, column: 13, scope: !7296)
!7298 = !DILocation(line: 1534, column: 17, scope: !7296)
!7299 = !DILocation(line: 1534, column: 20, scope: !7300)
!7300 = !DILexicalBlockFile(scope: !7296, file: !1122, discriminator: 1)
!7301 = !DILocation(line: 1534, column: 23, scope: !7300)
!7302 = !DILocation(line: 1534, column: 27, scope: !7300)
!7303 = !DILocation(line: 1534, column: 30, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7296, file: !1122, discriminator: 2)
!7305 = !DILocation(line: 1534, column: 42, scope: !7304)
!7306 = !DILocation(line: 1534, column: 46, scope: !7304)
!7307 = !DILocation(line: 1534, column: 49, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7296, file: !1122, discriminator: 3)
!7309 = !DILocation(line: 1534, column: 52, scope: !7308)
!7310 = !DILocation(line: 1534, column: 60, scope: !7308)
!7311 = !DILocation(line: 1534, column: 63, scope: !7312)
!7312 = !DILexicalBlockFile(scope: !7296, file: !1122, discriminator: 4)
!7313 = !DILocation(line: 1534, column: 67, scope: !7312)
!7314 = !DILocation(line: 1534, column: 9, scope: !7312)
!7315 = !DILocation(line: 1535, column: 17, scope: !7296)
!7316 = !DILocation(line: 1535, column: 29, scope: !7296)
!7317 = !DILocation(line: 1535, column: 39, scope: !7296)
!7318 = !DILocation(line: 1535, column: 45, scope: !7296)
!7319 = !DILocation(line: 1535, column: 43, scope: !7296)
!7320 = !DILocation(line: 1535, column: 38, scope: !7296)
!7321 = !DILocation(line: 1535, column: 36, scope: !7296)
!7322 = !DILocation(line: 1535, column: 16, scope: !7296)
!7323 = !DILocation(line: 1535, column: 9, scope: !7296)
!7324 = !DILocation(line: 1536, column: 11, scope: !7247)
!7325 = !DILocation(line: 1536, column: 9, scope: !7247)
!7326 = !DILocation(line: 1539, column: 13, scope: !7247)
!7327 = !DILocation(line: 1539, column: 5, scope: !7247)
!7328 = !DILocation(line: 1540, column: 33, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1539, column: 17)
!7330 = !DILocation(line: 1541, column: 36, scope: !7329)
!7331 = !DILocation(line: 1542, column: 36, scope: !7329)
!7332 = !DILocation(line: 1547, column: 30, scope: !7329)
!7333 = !DILocation(line: 1549, column: 30, scope: !7329)
!7334 = !DILocation(line: 1550, column: 27, scope: !7329)
!7335 = !DILocation(line: 1551, column: 30, scope: !7329)
!7336 = !DILocation(line: 1553, column: 44, scope: !7329)
!7337 = !DILocation(line: 1553, column: 42, scope: !7329)
!7338 = !DILocation(line: 1553, column: 30, scope: !7329)
!7339 = !DILocation(line: 1554, column: 31, scope: !7329)
!7340 = !DILocation(line: 1556, column: 33, scope: !7329)
!7341 = !DILocation(line: 1557, column: 27, scope: !7329)
!7342 = !DILocation(line: 1560, column: 9, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1560, column: 9)
!7344 = !DILocation(line: 1560, column: 12, scope: !7343)
!7345 = !DILocation(line: 1560, column: 9, scope: !7247)
!7346 = !DILocation(line: 1562, column: 13, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !1122, line: 1562, column: 13)
!7348 = distinct !DILexicalBlock(scope: !7343, file: !1122, line: 1560, column: 17)
!7349 = !DILocation(line: 1562, column: 16, scope: !7347)
!7350 = !DILocation(line: 1562, column: 13, scope: !7348)
!7351 = !DILocation(line: 1563, column: 26, scope: !7347)
!7352 = !DILocation(line: 1563, column: 24, scope: !7347)
!7353 = !DILocation(line: 1563, column: 29, scope: !7347)
!7354 = !DILocation(line: 1563, column: 13, scope: !7347)
!7355 = !DILocation(line: 1564, column: 18, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7347, file: !1122, line: 1564, column: 18)
!7357 = !DILocation(line: 1564, column: 21, scope: !7356)
!7358 = !DILocation(line: 1564, column: 18, scope: !7347)
!7359 = !DILocation(line: 1565, column: 26, scope: !7356)
!7360 = !DILocation(line: 1565, column: 24, scope: !7356)
!7361 = !DILocation(line: 1565, column: 29, scope: !7356)
!7362 = !DILocation(line: 1565, column: 13, scope: !7356)
!7363 = !DILocation(line: 1567, column: 13, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7348, file: !1122, line: 1567, column: 13)
!7365 = !DILocation(line: 1567, column: 16, scope: !7364)
!7366 = !DILocation(line: 1567, column: 13, scope: !7348)
!7367 = !DILocation(line: 1569, column: 17, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !1122, line: 1569, column: 17)
!7369 = distinct !DILexicalBlock(scope: !7364, file: !1122, line: 1567, column: 21)
!7370 = !DILocation(line: 1569, column: 20, scope: !7368)
!7371 = !DILocation(line: 1569, column: 17, scope: !7369)
!7372 = !DILocation(line: 1570, column: 33, scope: !7368)
!7373 = !DILocation(line: 1570, column: 36, scope: !7368)
!7374 = !DILocation(line: 1570, column: 29, scope: !7368)
!7375 = !DILocation(line: 1570, column: 48, scope: !7368)
!7376 = !DILocation(line: 1570, column: 46, scope: !7368)
!7377 = !DILocation(line: 1570, column: 17, scope: !7368)
!7378 = !DILocation(line: 1571, column: 9, scope: !7369)
!7379 = !DILocation(line: 1573, column: 13, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7348, file: !1122, line: 1573, column: 13)
!7381 = !DILocation(line: 1573, column: 16, scope: !7380)
!7382 = !DILocation(line: 1573, column: 13, scope: !7348)
!7383 = !DILocation(line: 1574, column: 20, scope: !7380)
!7384 = !DILocation(line: 1574, column: 23, scope: !7380)
!7385 = !DILocation(line: 1574, column: 13, scope: !7380)
!7386 = !DILocation(line: 1575, column: 5, scope: !7348)
!7387 = !DILocation(line: 1577, column: 9, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1577, column: 9)
!7389 = !DILocation(line: 1577, column: 12, scope: !7388)
!7390 = !DILocation(line: 1577, column: 9, scope: !7247)
!7391 = !DILocation(line: 1579, column: 13, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !1122, line: 1579, column: 13)
!7393 = distinct !DILexicalBlock(scope: !7388, file: !1122, line: 1577, column: 17)
!7394 = !DILocation(line: 1579, column: 16, scope: !7392)
!7395 = !DILocation(line: 1579, column: 13, scope: !7393)
!7396 = !DILocation(line: 1580, column: 21, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7392, file: !1122, line: 1579, column: 37)
!7398 = !DILocation(line: 1580, column: 13, scope: !7397)
!7399 = !DILocation(line: 1581, column: 22, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7397, file: !1122, line: 1580, column: 25)
!7401 = !DILocation(line: 1582, column: 22, scope: !7400)
!7402 = !DILocation(line: 1583, column: 22, scope: !7400)
!7403 = !DILocation(line: 1584, column: 22, scope: !7400)
!7404 = !DILocation(line: 1586, column: 9, scope: !7397)
!7405 = !DILocation(line: 1586, column: 20, scope: !7406)
!7406 = !DILexicalBlockFile(scope: !7407, file: !1122, discriminator: 1)
!7407 = distinct !DILexicalBlock(scope: !7392, file: !1122, line: 1586, column: 20)
!7408 = !DILocation(line: 1586, column: 23, scope: !7406)
!7409 = !DILocation(line: 1587, column: 21, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !1122, line: 1586, column: 44)
!7411 = !DILocation(line: 1587, column: 13, scope: !7410)
!7412 = !DILocation(line: 1588, column: 22, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7410, file: !1122, line: 1587, column: 25)
!7414 = !DILocation(line: 1589, column: 22, scope: !7413)
!7415 = !DILocation(line: 1591, column: 9, scope: !7410)
!7416 = !DILocation(line: 1592, column: 5, scope: !7393)
!7417 = !DILocation(line: 1594, column: 9, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1594, column: 9)
!7419 = !DILocation(line: 1594, column: 21, scope: !7418)
!7420 = !DILocation(line: 1594, column: 9, scope: !7247)
!7421 = !DILocation(line: 1596, column: 13, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !1122, line: 1596, column: 13)
!7423 = distinct !DILexicalBlock(scope: !7418, file: !1122, line: 1594, column: 26)
!7424 = !DILocation(line: 1596, column: 16, scope: !7422)
!7425 = !DILocation(line: 1596, column: 13, scope: !7423)
!7426 = !DILocation(line: 1597, column: 27, scope: !7422)
!7427 = !DILocation(line: 1597, column: 39, scope: !7422)
!7428 = !DILocation(line: 1597, column: 24, scope: !7422)
!7429 = !DILocation(line: 1597, column: 13, scope: !7422)
!7430 = !DILocation(line: 1598, column: 13, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7423, file: !1122, line: 1598, column: 13)
!7432 = !DILocation(line: 1598, column: 16, scope: !7431)
!7433 = !DILocation(line: 1598, column: 13, scope: !7423)
!7434 = !DILocation(line: 1599, column: 27, scope: !7431)
!7435 = !DILocation(line: 1599, column: 39, scope: !7431)
!7436 = !DILocation(line: 1599, column: 24, scope: !7431)
!7437 = !DILocation(line: 1599, column: 13, scope: !7431)
!7438 = !DILocation(line: 1600, column: 13, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7423, file: !1122, line: 1600, column: 13)
!7440 = !DILocation(line: 1600, column: 16, scope: !7439)
!7441 = !DILocation(line: 1600, column: 13, scope: !7423)
!7442 = !DILocation(line: 1601, column: 27, scope: !7439)
!7443 = !DILocation(line: 1601, column: 39, scope: !7439)
!7444 = !DILocation(line: 1601, column: 24, scope: !7439)
!7445 = !DILocation(line: 1601, column: 13, scope: !7439)
!7446 = !DILocation(line: 1603, column: 13, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7423, file: !1122, line: 1603, column: 13)
!7448 = !DILocation(line: 1603, column: 17, scope: !7447)
!7449 = !DILocation(line: 1603, column: 13, scope: !7423)
!7450 = !DILocation(line: 1605, column: 17, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !1122, line: 1605, column: 17)
!7452 = distinct !DILexicalBlock(scope: !7447, file: !1122, line: 1603, column: 22)
!7453 = !DILocation(line: 1605, column: 20, scope: !7451)
!7454 = !DILocation(line: 1605, column: 46, scope: !7451)
!7455 = !DILocation(line: 1605, column: 49, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7451, file: !1122, discriminator: 1)
!7457 = !DILocation(line: 1605, column: 52, scope: !7456)
!7458 = !DILocation(line: 1605, column: 17, scope: !7456)
!7459 = !DILocation(line: 1606, column: 24, scope: !7451)
!7460 = !DILocation(line: 1606, column: 36, scope: !7451)
!7461 = !DILocation(line: 1606, column: 42, scope: !7451)
!7462 = !DILocation(line: 1606, column: 40, scope: !7451)
!7463 = !DILocation(line: 1606, column: 17, scope: !7451)
!7464 = !DILocation(line: 1607, column: 9, scope: !7452)
!7465 = !DILocation(line: 1609, column: 13, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7423, file: !1122, line: 1609, column: 13)
!7467 = !DILocation(line: 1609, column: 16, scope: !7466)
!7468 = !DILocation(line: 1609, column: 20, scope: !7466)
!7469 = !DILocation(line: 1609, column: 23, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7466, file: !1122, discriminator: 1)
!7471 = !DILocation(line: 1609, column: 26, scope: !7470)
!7472 = !DILocation(line: 1609, column: 13, scope: !7470)
!7473 = !DILocation(line: 1611, column: 21, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7466, file: !1122, line: 1609, column: 43)
!7475 = !DILocation(line: 1611, column: 13, scope: !7474)
!7476 = !DILocation(line: 1613, column: 24, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7474, file: !1122, line: 1611, column: 25)
!7478 = !DILocation(line: 1613, column: 43, scope: !7477)
!7479 = !DILocation(line: 1613, column: 41, scope: !7477)
!7480 = !DILocation(line: 1613, column: 36, scope: !7477)
!7481 = !DILocation(line: 1613, column: 47, scope: !7477)
!7482 = !DILocation(line: 1613, column: 17, scope: !7477)
!7483 = !DILocation(line: 1616, column: 24, scope: !7477)
!7484 = !DILocation(line: 1616, column: 44, scope: !7477)
!7485 = !DILocation(line: 1616, column: 42, scope: !7477)
!7486 = !DILocation(line: 1616, column: 36, scope: !7477)
!7487 = !DILocation(line: 1616, column: 48, scope: !7477)
!7488 = !DILocation(line: 1616, column: 17, scope: !7477)
!7489 = !DILocation(line: 1620, column: 25, scope: !7477)
!7490 = !DILocation(line: 1620, column: 43, scope: !7477)
!7491 = !DILocation(line: 1620, column: 41, scope: !7477)
!7492 = !DILocation(line: 1620, column: 37, scope: !7477)
!7493 = !DILocation(line: 1620, column: 47, scope: !7477)
!7494 = !DILocation(line: 1620, column: 53, scope: !7477)
!7495 = !DILocation(line: 1620, column: 51, scope: !7477)
!7496 = !DILocation(line: 1620, column: 17, scope: !7477)
!7497 = !DILocation(line: 1622, column: 25, scope: !7477)
!7498 = !DILocation(line: 1622, column: 37, scope: !7477)
!7499 = !DILocation(line: 1622, column: 42, scope: !7477)
!7500 = !DILocation(line: 1622, column: 48, scope: !7477)
!7501 = !DILocation(line: 1622, column: 46, scope: !7477)
!7502 = !DILocation(line: 1622, column: 17, scope: !7477)
!7503 = !DILocation(line: 1624, column: 25, scope: !7477)
!7504 = !DILocation(line: 1624, column: 37, scope: !7477)
!7505 = !DILocation(line: 1624, column: 42, scope: !7477)
!7506 = !DILocation(line: 1624, column: 48, scope: !7477)
!7507 = !DILocation(line: 1624, column: 46, scope: !7477)
!7508 = !DILocation(line: 1624, column: 17, scope: !7477)
!7509 = !DILocation(line: 1627, column: 21, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7477, file: !1122, line: 1627, column: 21)
!7511 = !DILocation(line: 1627, column: 21, scope: !7477)
!7512 = !DILocation(line: 1628, column: 28, scope: !7510)
!7513 = !DILocation(line: 1628, column: 40, scope: !7510)
!7514 = !DILocation(line: 1628, column: 52, scope: !7510)
!7515 = !DILocation(line: 1628, column: 50, scope: !7510)
!7516 = !DILocation(line: 1628, column: 45, scope: !7510)
!7517 = !DILocation(line: 1628, column: 21, scope: !7510)
!7518 = !DILocation(line: 1629, column: 17, scope: !7477)
!7519 = !DILocation(line: 1631, column: 25, scope: !7477)
!7520 = !DILocation(line: 1631, column: 37, scope: !7477)
!7521 = !DILocation(line: 1631, column: 44, scope: !7477)
!7522 = !DILocation(line: 1631, column: 52, scope: !7477)
!7523 = !DILocation(line: 1631, column: 50, scope: !7477)
!7524 = !DILocation(line: 1631, column: 17, scope: !7477)
!7525 = !DILocation(line: 1633, column: 25, scope: !7477)
!7526 = !DILocation(line: 1633, column: 37, scope: !7477)
!7527 = !DILocation(line: 1633, column: 43, scope: !7477)
!7528 = !DILocation(line: 1633, column: 41, scope: !7477)
!7529 = !DILocation(line: 1633, column: 49, scope: !7477)
!7530 = !DILocation(line: 1633, column: 47, scope: !7477)
!7531 = !DILocation(line: 1633, column: 17, scope: !7477)
!7532 = !DILocation(line: 1635, column: 25, scope: !7477)
!7533 = !DILocation(line: 1635, column: 37, scope: !7477)
!7534 = !DILocation(line: 1635, column: 44, scope: !7477)
!7535 = !DILocation(line: 1635, column: 42, scope: !7477)
!7536 = !DILocation(line: 1635, column: 17, scope: !7477)
!7537 = !DILocation(line: 1637, column: 25, scope: !7477)
!7538 = !DILocation(line: 1637, column: 43, scope: !7477)
!7539 = !DILocation(line: 1637, column: 41, scope: !7477)
!7540 = !DILocation(line: 1637, column: 37, scope: !7477)
!7541 = !DILocation(line: 1637, column: 49, scope: !7477)
!7542 = !DILocation(line: 1637, column: 47, scope: !7477)
!7543 = !DILocation(line: 1637, column: 17, scope: !7477)
!7544 = !DILocation(line: 1639, column: 28, scope: !7477)
!7545 = !DILocation(line: 1639, column: 26, scope: !7477)
!7546 = !DILocation(line: 1639, column: 42, scope: !7477)
!7547 = !DILocation(line: 1639, column: 40, scope: !7477)
!7548 = !DILocation(line: 1639, column: 17, scope: !7477)
!7549 = !DILocation(line: 1641, column: 28, scope: !7477)
!7550 = !DILocation(line: 1641, column: 26, scope: !7477)
!7551 = !DILocation(line: 1641, column: 42, scope: !7477)
!7552 = !DILocation(line: 1641, column: 40, scope: !7477)
!7553 = !DILocation(line: 1641, column: 17, scope: !7477)
!7554 = !DILocation(line: 1643, column: 29, scope: !7477)
!7555 = !DILocation(line: 1643, column: 48, scope: !7477)
!7556 = !DILocation(line: 1643, column: 46, scope: !7477)
!7557 = !DILocation(line: 1643, column: 41, scope: !7477)
!7558 = !DILocation(line: 1643, column: 26, scope: !7477)
!7559 = !DILocation(line: 1643, column: 17, scope: !7477)
!7560 = !DILocation(line: 1646, column: 28, scope: !7477)
!7561 = !DILocation(line: 1646, column: 26, scope: !7477)
!7562 = !DILocation(line: 1646, column: 42, scope: !7477)
!7563 = !DILocation(line: 1646, column: 40, scope: !7477)
!7564 = !DILocation(line: 1646, column: 17, scope: !7477)
!7565 = !DILocation(line: 1649, column: 17, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7474, file: !1122, line: 1649, column: 17)
!7567 = !DILocation(line: 1649, column: 17, scope: !7474)
!7568 = !DILocation(line: 1651, column: 21, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !1122, line: 1651, column: 21)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !1122, line: 1649, column: 22)
!7571 = !DILocation(line: 1651, column: 24, scope: !7569)
!7572 = !DILocation(line: 1651, column: 21, scope: !7570)
!7573 = !DILocation(line: 1652, column: 25, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !1122, line: 1652, column: 25)
!7575 = distinct !DILexicalBlock(scope: !7569, file: !1122, line: 1651, column: 49)
!7576 = !DILocation(line: 1652, column: 29, scope: !7574)
!7577 = !DILocation(line: 1652, column: 25, scope: !7575)
!7578 = !DILocation(line: 1653, column: 32, scope: !7574)
!7579 = !DILocation(line: 1653, column: 46, scope: !7574)
!7580 = !DILocation(line: 1653, column: 44, scope: !7574)
!7581 = !DILocation(line: 1653, column: 25, scope: !7574)
!7582 = !DILocation(line: 1655, column: 32, scope: !7574)
!7583 = !DILocation(line: 1655, column: 44, scope: !7574)
!7584 = !DILocation(line: 1655, column: 50, scope: !7574)
!7585 = !DILocation(line: 1655, column: 48, scope: !7574)
!7586 = !DILocation(line: 1655, column: 25, scope: !7574)
!7587 = !DILocation(line: 1657, column: 13, scope: !7570)
!7588 = !DILocation(line: 1659, column: 17, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7474, file: !1122, line: 1659, column: 17)
!7590 = !DILocation(line: 1659, column: 20, scope: !7589)
!7591 = !DILocation(line: 1659, column: 17, scope: !7474)
!7592 = !DILocalVariable(name: "blocks", scope: !7593, file: !1122, line: 1661, type: !991)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !1122, line: 1659, column: 25)
!7594 = !DILocation(line: 1661, column: 21, scope: !7593)
!7595 = !DILocation(line: 1661, column: 30, scope: !7593)
!7596 = !DILocation(line: 1661, column: 44, scope: !7593)
!7597 = !DILocation(line: 1661, column: 42, scope: !7593)
!7598 = !DILocation(line: 1662, column: 25, scope: !7593)
!7599 = !DILocation(line: 1662, column: 17, scope: !7593)
!7600 = !DILocation(line: 1664, column: 25, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !1122, line: 1664, column: 25)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !1122, line: 1662, column: 29)
!7603 = !DILocation(line: 1664, column: 29, scope: !7601)
!7604 = !DILocation(line: 1664, column: 33, scope: !7601)
!7605 = !DILocation(line: 1664, column: 36, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7601, file: !1122, discriminator: 1)
!7607 = !DILocation(line: 1664, column: 40, scope: !7606)
!7608 = !DILocation(line: 1664, column: 25, scope: !7606)
!7609 = !DILocation(line: 1665, column: 25, scope: !7601)
!7610 = !DILocation(line: 1666, column: 28, scope: !7602)
!7611 = !DILocation(line: 1666, column: 43, scope: !7602)
!7612 = !DILocation(line: 1666, column: 52, scope: !7602)
!7613 = !DILocation(line: 1666, column: 50, scope: !7602)
!7614 = !DILocation(line: 1666, column: 46, scope: !7602)
!7615 = !DILocation(line: 1666, column: 59, scope: !7602)
!7616 = !DILocation(line: 1666, column: 65, scope: !7602)
!7617 = !DILocation(line: 1666, column: 63, scope: !7602)
!7618 = !DILocation(line: 1666, column: 56, scope: !7602)
!7619 = !DILocation(line: 1666, column: 69, scope: !7602)
!7620 = !DILocation(line: 1666, column: 40, scope: !7602)
!7621 = !DILocation(line: 1666, column: 35, scope: !7602)
!7622 = !DILocation(line: 1666, column: 21, scope: !7602)
!7623 = !DILocation(line: 1668, column: 28, scope: !7602)
!7624 = !DILocation(line: 1668, column: 40, scope: !7602)
!7625 = !DILocation(line: 1668, column: 43, scope: !7602)
!7626 = !DILocation(line: 1668, column: 49, scope: !7602)
!7627 = !DILocation(line: 1668, column: 53, scope: !7602)
!7628 = !DILocation(line: 1668, column: 57, scope: !7602)
!7629 = !DILocation(line: 1668, column: 64, scope: !7602)
!7630 = !DILocation(line: 1668, column: 62, scope: !7602)
!7631 = !DILocation(line: 1668, column: 35, scope: !7602)
!7632 = !DILocation(line: 1668, column: 21, scope: !7602)
!7633 = !DILocation(line: 1670, column: 28, scope: !7602)
!7634 = !DILocation(line: 1670, column: 43, scope: !7602)
!7635 = !DILocation(line: 1670, column: 52, scope: !7602)
!7636 = !DILocation(line: 1670, column: 50, scope: !7602)
!7637 = !DILocation(line: 1670, column: 46, scope: !7602)
!7638 = !DILocation(line: 1670, column: 56, scope: !7602)
!7639 = !DILocation(line: 1670, column: 62, scope: !7602)
!7640 = !DILocation(line: 1670, column: 60, scope: !7602)
!7641 = !DILocation(line: 1670, column: 40, scope: !7602)
!7642 = !DILocation(line: 1670, column: 35, scope: !7602)
!7643 = !DILocation(line: 1670, column: 21, scope: !7602)
!7644 = !DILocation(line: 1672, column: 28, scope: !7602)
!7645 = !DILocation(line: 1672, column: 39, scope: !7602)
!7646 = !DILocation(line: 1672, column: 48, scope: !7602)
!7647 = !DILocation(line: 1672, column: 46, scope: !7602)
!7648 = !DILocation(line: 1672, column: 42, scope: !7602)
!7649 = !DILocation(line: 1672, column: 52, scope: !7602)
!7650 = !DILocation(line: 1672, column: 58, scope: !7602)
!7651 = !DILocation(line: 1672, column: 56, scope: !7602)
!7652 = !DILocation(line: 1672, column: 35, scope: !7602)
!7653 = !DILocation(line: 1672, column: 21, scope: !7602)
!7654 = !DILocation(line: 1674, column: 28, scope: !7602)
!7655 = !DILocation(line: 1674, column: 43, scope: !7602)
!7656 = !DILocation(line: 1674, column: 52, scope: !7602)
!7657 = !DILocation(line: 1674, column: 50, scope: !7602)
!7658 = !DILocation(line: 1674, column: 46, scope: !7602)
!7659 = !DILocation(line: 1674, column: 56, scope: !7602)
!7660 = !DILocation(line: 1674, column: 62, scope: !7602)
!7661 = !DILocation(line: 1674, column: 60, scope: !7602)
!7662 = !DILocation(line: 1674, column: 40, scope: !7602)
!7663 = !DILocation(line: 1674, column: 35, scope: !7602)
!7664 = !DILocation(line: 1674, column: 21, scope: !7602)
!7665 = !DILocation(line: 1676, column: 28, scope: !7602)
!7666 = !DILocation(line: 1676, column: 38, scope: !7602)
!7667 = !DILocation(line: 1676, column: 41, scope: !7602)
!7668 = !DILocation(line: 1676, column: 35, scope: !7602)
!7669 = !DILocation(line: 1676, column: 47, scope: !7602)
!7670 = !DILocation(line: 1676, column: 53, scope: !7602)
!7671 = !DILocation(line: 1676, column: 51, scope: !7602)
!7672 = !DILocation(line: 1676, column: 21, scope: !7602)
!7673 = !DILocation(line: 1678, column: 13, scope: !7593)
!7674 = !DILocation(line: 1680, column: 17, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7474, file: !1122, line: 1680, column: 17)
!7676 = !DILocation(line: 1680, column: 21, scope: !7675)
!7677 = !DILocation(line: 1680, column: 17, scope: !7474)
!7678 = !DILocation(line: 1682, column: 25, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7675, file: !1122, line: 1680, column: 26)
!7680 = !DILocation(line: 1682, column: 17, scope: !7679)
!7681 = !DILocation(line: 1684, column: 24, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !1122, line: 1684, column: 24)
!7683 = distinct !DILexicalBlock(scope: !7679, file: !1122, line: 1682, column: 29)
!7684 = !DILocation(line: 1684, column: 27, scope: !7682)
!7685 = !DILocation(line: 1684, column: 30, scope: !7682)
!7686 = !DILocation(line: 1684, column: 33, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7682, file: !1122, discriminator: 1)
!7688 = !DILocation(line: 1684, column: 44, scope: !7687)
!7689 = !DILocation(line: 1684, column: 24, scope: !7687)
!7690 = !DILocation(line: 1685, column: 25, scope: !7682)
!7691 = !DILocation(line: 1686, column: 34, scope: !7683)
!7692 = !DILocation(line: 1686, column: 46, scope: !7683)
!7693 = !DILocation(line: 1686, column: 55, scope: !7683)
!7694 = !DILocation(line: 1686, column: 59, scope: !7683)
!7695 = !DILocation(line: 1686, column: 63, scope: !7683)
!7696 = !DILocation(line: 1686, column: 70, scope: !7683)
!7697 = !DILocation(line: 1686, column: 68, scope: !7683)
!7698 = !DILocation(line: 1686, column: 51, scope: !7683)
!7699 = !DILocation(line: 1686, column: 30, scope: !7683)
!7700 = !DILocation(line: 1686, column: 21, scope: !7683)
!7701 = !DILocation(line: 1688, column: 24, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7683, file: !1122, line: 1688, column: 24)
!7703 = !DILocation(line: 1688, column: 27, scope: !7702)
!7704 = !DILocation(line: 1688, column: 30, scope: !7702)
!7705 = !DILocation(line: 1688, column: 33, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7702, file: !1122, discriminator: 1)
!7707 = !DILocation(line: 1688, column: 44, scope: !7706)
!7708 = !DILocation(line: 1688, column: 24, scope: !7706)
!7709 = !DILocation(line: 1689, column: 25, scope: !7702)
!7710 = !DILocation(line: 1690, column: 29, scope: !7683)
!7711 = !DILocation(line: 1690, column: 41, scope: !7683)
!7712 = !DILocation(line: 1690, column: 53, scope: !7683)
!7713 = !DILocation(line: 1690, column: 56, scope: !7683)
!7714 = !DILocation(line: 1690, column: 60, scope: !7683)
!7715 = !DILocation(line: 1690, column: 63, scope: !7683)
!7716 = !DILocation(line: 1690, column: 76, scope: !7683)
!7717 = !DILocation(line: 1690, column: 74, scope: !7683)
!7718 = !DILocation(line: 1690, column: 81, scope: !7683)
!7719 = !DILocation(line: 1690, column: 46, scope: !7683)
!7720 = !DILocation(line: 1690, column: 21, scope: !7683)
!7721 = !DILocation(line: 1692, column: 33, scope: !7683)
!7722 = !DILocation(line: 1692, column: 49, scope: !7683)
!7723 = !DILocation(line: 1692, column: 53, scope: !7683)
!7724 = !DILocation(line: 1692, column: 58, scope: !7683)
!7725 = !DILocation(line: 1692, column: 45, scope: !7683)
!7726 = !DILocation(line: 1692, column: 30, scope: !7683)
!7727 = !DILocation(line: 1692, column: 66, scope: !7683)
!7728 = !DILocation(line: 1692, column: 64, scope: !7683)
!7729 = !DILocation(line: 1692, column: 21, scope: !7683)
!7730 = !DILocation(line: 1694, column: 13, scope: !7679)
!7731 = !DILocation(line: 1695, column: 9, scope: !7474)
!7732 = !DILocation(line: 1696, column: 5, scope: !7423)
!7733 = !DILocation(line: 1699, column: 9, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1699, column: 9)
!7735 = !DILocation(line: 1699, column: 20, scope: !7734)
!7736 = !DILocation(line: 1699, column: 24, scope: !7734)
!7737 = !DILocation(line: 1699, column: 27, scope: !7738)
!7738 = !DILexicalBlockFile(scope: !7734, file: !1122, discriminator: 1)
!7739 = !DILocation(line: 1699, column: 9, scope: !7738)
!7740 = !DILocation(line: 1700, column: 16, scope: !7734)
!7741 = !DILocation(line: 1700, column: 9, scope: !7734)
!7742 = !DILocation(line: 1704, column: 9, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7247, file: !1122, line: 1704, column: 9)
!7744 = !DILocation(line: 1704, column: 17, scope: !7743)
!7745 = !DILocation(line: 1704, column: 21, scope: !7743)
!7746 = !DILocation(line: 1704, column: 24, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !7743, file: !1122, discriminator: 1)
!7748 = !DILocation(line: 1704, column: 36, scope: !7747)
!7749 = !DILocation(line: 1704, column: 40, scope: !7747)
!7750 = !DILocation(line: 1704, column: 43, scope: !7751)
!7751 = !DILexicalBlockFile(scope: !7743, file: !1122, discriminator: 2)
!7752 = !DILocation(line: 1704, column: 46, scope: !7751)
!7753 = !DILocation(line: 1704, column: 50, scope: !7751)
!7754 = !DILocation(line: 1704, column: 53, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !7743, file: !1122, discriminator: 3)
!7756 = !DILocation(line: 1704, column: 56, scope: !7755)
!7757 = !DILocation(line: 1704, column: 9, scope: !7755)
!7758 = !DILocation(line: 1705, column: 13, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !1122, line: 1705, column: 13)
!7760 = distinct !DILexicalBlock(scope: !7743, file: !1122, line: 1704, column: 61)
!7761 = !DILocation(line: 1705, column: 16, scope: !7759)
!7762 = !DILocation(line: 1705, column: 37, scope: !7759)
!7763 = !DILocation(line: 1705, column: 40, scope: !7764)
!7764 = !DILexicalBlockFile(scope: !7759, file: !1122, discriminator: 1)
!7765 = !DILocation(line: 1705, column: 43, scope: !7764)
!7766 = !DILocation(line: 1705, column: 13, scope: !7764)
!7767 = !DILocation(line: 1706, column: 21, scope: !7759)
!7768 = !DILocation(line: 1706, column: 33, scope: !7759)
!7769 = !DILocation(line: 1706, column: 41, scope: !7759)
!7770 = !DILocation(line: 1706, column: 39, scope: !7759)
!7771 = !DILocation(line: 1706, column: 47, scope: !7759)
!7772 = !DILocation(line: 1706, column: 45, scope: !7759)
!7773 = !DILocation(line: 1706, column: 20, scope: !7759)
!7774 = !DILocation(line: 1706, column: 13, scope: !7759)
!7775 = !DILocation(line: 1707, column: 5, scope: !7760)
!7776 = !DILocation(line: 1709, column: 5, scope: !7247)
!7777 = !DILocation(line: 1710, column: 1, scope: !7247)
!7778 = distinct !DISubprogram(name: "av_get_audio_frame_duration2", scope: !1122, file: !1122, line: 1721, type: !7779, isLocal: false, isDefinition: true, scopeLine: 1722, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!991, !1566, !991}
!7781 = !DILocalVariable(name: "par", arg: 1, scope: !7778, file: !1122, line: 1721, type: !1566)
!7782 = !DILocation(line: 1721, column: 53, scope: !7778)
!7783 = !DILocalVariable(name: "frame_bytes", arg: 2, scope: !7778, file: !1122, line: 1721, type: !991)
!7784 = !DILocation(line: 1721, column: 62, scope: !7778)
!7785 = !DILocation(line: 1723, column: 37, scope: !7778)
!7786 = !DILocation(line: 1723, column: 42, scope: !7778)
!7787 = !DILocation(line: 1723, column: 52, scope: !7778)
!7788 = !DILocation(line: 1723, column: 57, scope: !7778)
!7789 = !DILocation(line: 1724, column: 37, scope: !7778)
!7790 = !DILocation(line: 1724, column: 42, scope: !7778)
!7791 = !DILocation(line: 1724, column: 52, scope: !7778)
!7792 = !DILocation(line: 1724, column: 57, scope: !7778)
!7793 = !DILocation(line: 1725, column: 37, scope: !7778)
!7794 = !DILocation(line: 1725, column: 42, scope: !7778)
!7795 = !DILocation(line: 1725, column: 53, scope: !7778)
!7796 = !DILocation(line: 1725, column: 58, scope: !7778)
!7797 = !DILocation(line: 1726, column: 37, scope: !7778)
!7798 = !DILocation(line: 1726, column: 42, scope: !7778)
!7799 = !DILocation(line: 1726, column: 52, scope: !7778)
!7800 = !DILocation(line: 1726, column: 57, scope: !7778)
!7801 = !DILocation(line: 1726, column: 68, scope: !7778)
!7802 = !DILocation(line: 1726, column: 73, scope: !7778)
!7803 = !DILocation(line: 1727, column: 37, scope: !7778)
!7804 = !DILocation(line: 1723, column: 12, scope: !7778)
!7805 = !DILocation(line: 1723, column: 5, scope: !7778)
!7806 = distinct !DISubprogram(name: "av_xiphlacing", scope: !1122, file: !1122, line: 1738, type: !7807, isLocal: false, isDefinition: true, scopeLine: 1739, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!1111, !7809, !1111}
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!7810 = !DILocalVariable(name: "s", arg: 1, scope: !7806, file: !1122, line: 1738, type: !7809)
!7811 = !DILocation(line: 1738, column: 43, scope: !7806)
!7812 = !DILocalVariable(name: "v", arg: 2, scope: !7806, file: !1122, line: 1738, type: !1111)
!7813 = !DILocation(line: 1738, column: 59, scope: !7806)
!7814 = !DILocalVariable(name: "n", scope: !7806, file: !1122, line: 1740, type: !1111)
!7815 = !DILocation(line: 1740, column: 18, scope: !7806)
!7816 = !DILocation(line: 1742, column: 5, scope: !7806)
!7817 = !DILocation(line: 1742, column: 12, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7806, file: !1122, discriminator: 1)
!7819 = !DILocation(line: 1742, column: 14, scope: !7818)
!7820 = !DILocation(line: 1742, column: 5, scope: !7818)
!7821 = !DILocation(line: 1743, column: 11, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7806, file: !1122, line: 1742, column: 23)
!7823 = !DILocation(line: 1743, column: 14, scope: !7822)
!7824 = !DILocation(line: 1744, column: 11, scope: !7822)
!7825 = !DILocation(line: 1745, column: 10, scope: !7822)
!7826 = !DILocation(line: 1742, column: 5, scope: !7827)
!7827 = !DILexicalBlockFile(scope: !7806, file: !1122, discriminator: 2)
!7828 = distinct !{!7828, !7816}
!7829 = !DILocation(line: 1747, column: 10, scope: !7806)
!7830 = !DILocation(line: 1747, column: 6, scope: !7806)
!7831 = !DILocation(line: 1747, column: 8, scope: !7806)
!7832 = !DILocation(line: 1748, column: 6, scope: !7806)
!7833 = !DILocation(line: 1749, column: 12, scope: !7806)
!7834 = !DILocation(line: 1749, column: 5, scope: !7806)
!7835 = distinct !DISubprogram(name: "ff_match_2uint16", scope: !1122, file: !1122, line: 1752, type: !7836, isLocal: false, isDefinition: true, scopeLine: 1753, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!991, !7838, !991, !991, !991}
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64, align: 64)
!7839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7840, size: 32, align: 16, elements: !1884)
!7840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!7841 = !DILocalVariable(name: "tab", arg: 1, scope: !7835, file: !1122, line: 1752, type: !7838)
!7842 = !DILocation(line: 1752, column: 38, scope: !7835)
!7843 = !DILocalVariable(name: "size", arg: 2, scope: !7835, file: !1122, line: 1752, type: !991)
!7844 = !DILocation(line: 1752, column: 51, scope: !7835)
!7845 = !DILocalVariable(name: "a", arg: 3, scope: !7835, file: !1122, line: 1752, type: !991)
!7846 = !DILocation(line: 1752, column: 61, scope: !7835)
!7847 = !DILocalVariable(name: "b", arg: 4, scope: !7835, file: !1122, line: 1752, type: !991)
!7848 = !DILocation(line: 1752, column: 68, scope: !7835)
!7849 = !DILocalVariable(name: "i", scope: !7835, file: !1122, line: 1754, type: !991)
!7850 = !DILocation(line: 1754, column: 9, scope: !7835)
!7851 = !DILocation(line: 1755, column: 12, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7835, file: !1122, line: 1755, column: 5)
!7853 = !DILocation(line: 1755, column: 10, scope: !7852)
!7854 = !DILocation(line: 1755, column: 17, scope: !7855)
!7855 = !DILexicalBlockFile(scope: !7856, file: !1122, discriminator: 1)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !1122, line: 1755, column: 5)
!7857 = !DILocation(line: 1755, column: 21, scope: !7855)
!7858 = !DILocation(line: 1755, column: 19, scope: !7855)
!7859 = !DILocation(line: 1755, column: 26, scope: !7855)
!7860 = !DILocation(line: 1755, column: 35, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !7856, file: !1122, discriminator: 2)
!7862 = !DILocation(line: 1755, column: 31, scope: !7861)
!7863 = !DILocation(line: 1755, column: 44, scope: !7861)
!7864 = !DILocation(line: 1755, column: 41, scope: !7861)
!7865 = !DILocation(line: 1755, column: 46, scope: !7861)
!7866 = !DILocation(line: 1755, column: 53, scope: !7867)
!7867 = !DILexicalBlockFile(scope: !7856, file: !1122, discriminator: 3)
!7868 = !DILocation(line: 1755, column: 49, scope: !7867)
!7869 = !DILocation(line: 1755, column: 62, scope: !7867)
!7870 = !DILocation(line: 1755, column: 59, scope: !7867)
!7871 = !DILocation(line: 1755, column: 29, scope: !7872)
!7872 = !DILexicalBlockFile(scope: !7856, file: !1122, discriminator: 4)
!7873 = !DILocation(line: 1755, column: 5, scope: !7874)
!7874 = !DILexicalBlockFile(scope: !7852, file: !1122, discriminator: 5)
!7875 = !DILocation(line: 1755, column: 5, scope: !7876)
!7876 = !DILexicalBlockFile(scope: !7852, file: !1122, discriminator: 6)
!7877 = !DILocation(line: 1755, column: 67, scope: !7878)
!7878 = !DILexicalBlockFile(scope: !7856, file: !1122, discriminator: 7)
!7879 = !DILocation(line: 1755, column: 5, scope: !7878)
!7880 = distinct !{!7880, !7881}
!7881 = !DILocation(line: 1755, column: 5, scope: !7835)
!7882 = !DILocation(line: 1756, column: 12, scope: !7835)
!7883 = !DILocation(line: 1756, column: 5, scope: !7835)
!7884 = distinct !DISubprogram(name: "avcodec_get_hw_config", scope: !1122, file: !1122, line: 1759, type: !7885, isLocal: false, isDefinition: true, scopeLine: 1760, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7885 = !DISubroutineType(types: !7886)
!7886 = !{!7887, !1330, !991}
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64, align: 64)
!7888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2876)
!7889 = !DILocalVariable(name: "codec", arg: 1, scope: !7884, file: !1122, line: 1759, type: !1330)
!7890 = !DILocation(line: 1759, column: 61, scope: !7884)
!7891 = !DILocalVariable(name: "index", arg: 2, scope: !7884, file: !1122, line: 1759, type: !991)
!7892 = !DILocation(line: 1759, column: 72, scope: !7884)
!7893 = !DILocalVariable(name: "i", scope: !7884, file: !1122, line: 1761, type: !991)
!7894 = !DILocation(line: 1761, column: 9, scope: !7884)
!7895 = !DILocation(line: 1762, column: 10, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7884, file: !1122, line: 1762, column: 9)
!7897 = !DILocation(line: 1762, column: 17, scope: !7896)
!7898 = !DILocation(line: 1762, column: 28, scope: !7896)
!7899 = !DILocation(line: 1762, column: 31, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7896, file: !1122, discriminator: 1)
!7901 = !DILocation(line: 1762, column: 37, scope: !7900)
!7902 = !DILocation(line: 1762, column: 9, scope: !7900)
!7903 = !DILocation(line: 1763, column: 9, scope: !7896)
!7904 = !DILocation(line: 1764, column: 12, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7884, file: !1122, line: 1764, column: 5)
!7906 = !DILocation(line: 1764, column: 10, scope: !7905)
!7907 = !DILocation(line: 1764, column: 17, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7909, file: !1122, discriminator: 1)
!7909 = distinct !DILexicalBlock(scope: !7905, file: !1122, line: 1764, column: 5)
!7910 = !DILocation(line: 1764, column: 22, scope: !7908)
!7911 = !DILocation(line: 1764, column: 19, scope: !7908)
!7912 = !DILocation(line: 1764, column: 5, scope: !7908)
!7913 = !DILocation(line: 1765, column: 32, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7909, file: !1122, line: 1765, column: 13)
!7915 = !DILocation(line: 1765, column: 14, scope: !7914)
!7916 = !DILocation(line: 1765, column: 21, scope: !7914)
!7917 = !DILocation(line: 1765, column: 13, scope: !7909)
!7918 = !DILocation(line: 1766, column: 13, scope: !7914)
!7919 = !DILocation(line: 1765, column: 33, scope: !7920)
!7920 = !DILexicalBlockFile(scope: !7914, file: !1122, discriminator: 1)
!7921 = !DILocation(line: 1764, column: 30, scope: !7922)
!7922 = !DILexicalBlockFile(scope: !7909, file: !1122, discriminator: 2)
!7923 = !DILocation(line: 1764, column: 5, scope: !7922)
!7924 = distinct !{!7924, !7925}
!7925 = !DILocation(line: 1764, column: 5, scope: !7884)
!7926 = !DILocation(line: 1767, column: 31, scope: !7884)
!7927 = !DILocation(line: 1767, column: 13, scope: !7884)
!7928 = !DILocation(line: 1767, column: 20, scope: !7884)
!7929 = !DILocation(line: 1767, column: 39, scope: !7884)
!7930 = !DILocation(line: 1767, column: 5, scope: !7884)
!7931 = !DILocation(line: 1768, column: 1, scope: !7884)
!7932 = distinct !DISubprogram(name: "av_hwaccel_next", scope: !1122, file: !1122, line: 1771, type: !7933, isLocal: false, isDefinition: true, scopeLine: 1772, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{!7935, !2883}
!7935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64, align: 64)
!7936 = !DILocalVariable(name: "hwaccel", arg: 1, scope: !7932, file: !1122, line: 1771, type: !2883)
!7937 = !DILocation(line: 1771, column: 45, scope: !7932)
!7938 = !DILocation(line: 1773, column: 5, scope: !7932)
!7939 = distinct !DISubprogram(name: "av_register_hwaccel", scope: !1122, file: !1122, line: 1776, type: !7940, isLocal: false, isDefinition: true, scopeLine: 1777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !7935}
!7942 = !DILocalVariable(name: "hwaccel", arg: 1, scope: !7939, file: !1122, line: 1776, type: !7935)
!7943 = !DILocation(line: 1776, column: 37, scope: !7939)
!7944 = !DILocation(line: 1778, column: 1, scope: !7939)
!7945 = distinct !DISubprogram(name: "av_lockmgr_register", scope: !1122, file: !1122, line: 1782, type: !7946, isLocal: false, isDefinition: true, scopeLine: 1783, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!991, !7948}
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7949, size: 64, align: 64)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!991, !7951, !950}
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!7952 = !DILocalVariable(name: "cb", arg: 1, scope: !7945, file: !1122, line: 1782, type: !7948)
!7953 = !DILocation(line: 1782, column: 31, scope: !7945)
!7954 = !DILocation(line: 1784, column: 5, scope: !7945)
!7955 = distinct !DISubprogram(name: "avpriv_toupper4", scope: !1122, file: !1122, line: 1788, type: !7956, isLocal: false, isDefinition: true, scopeLine: 1789, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!1111, !1111}
!7958 = !DILocalVariable(name: "x", arg: 1, scope: !7955, file: !1122, line: 1788, type: !1111)
!7959 = !DILocation(line: 1788, column: 43, scope: !7955)
!7960 = !DILocation(line: 1790, column: 23, scope: !7955)
!7961 = !DILocation(line: 1790, column: 25, scope: !7955)
!7962 = !DILocation(line: 1790, column: 12, scope: !7955)
!7963 = !DILocation(line: 1791, column: 24, scope: !7955)
!7964 = !DILocation(line: 1791, column: 26, scope: !7955)
!7965 = !DILocation(line: 1791, column: 32, scope: !7955)
!7966 = !DILocation(line: 1791, column: 12, scope: !7955)
!7967 = !DILocation(line: 1791, column: 40, scope: !7955)
!7968 = !DILocation(line: 1790, column: 33, scope: !7955)
!7969 = !DILocation(line: 1792, column: 24, scope: !7955)
!7970 = !DILocation(line: 1792, column: 26, scope: !7955)
!7971 = !DILocation(line: 1792, column: 33, scope: !7955)
!7972 = !DILocation(line: 1792, column: 12, scope: !7955)
!7973 = !DILocation(line: 1792, column: 41, scope: !7955)
!7974 = !DILocation(line: 1791, column: 46, scope: !7955)
!7975 = !DILocation(line: 1793, column: 24, scope: !7955)
!7976 = !DILocation(line: 1793, column: 26, scope: !7955)
!7977 = !DILocation(line: 1793, column: 33, scope: !7955)
!7978 = !DILocation(line: 1793, column: 12, scope: !7955)
!7979 = !DILocation(line: 1793, column: 41, scope: !7955)
!7980 = !DILocation(line: 1792, column: 48, scope: !7955)
!7981 = !DILocation(line: 1790, column: 5, scope: !7955)
!7982 = distinct !DISubprogram(name: "av_toupper", scope: !7983, file: !7983, line: 231, type: !7984, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!7983 = !DIFile(filename: "./libavutil/avstring.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!991, !991}
!7986 = !DILocalVariable(name: "c", arg: 1, scope: !7982, file: !7983, line: 231, type: !991)
!7987 = !DILocation(line: 231, column: 57, scope: !7982)
!7988 = !DILocation(line: 233, column: 9, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7982, file: !7983, line: 233, column: 9)
!7990 = !DILocation(line: 233, column: 11, scope: !7989)
!7991 = !DILocation(line: 233, column: 18, scope: !7989)
!7992 = !DILocation(line: 233, column: 21, scope: !7993)
!7993 = !DILexicalBlockFile(scope: !7989, file: !7983, discriminator: 1)
!7994 = !DILocation(line: 233, column: 23, scope: !7993)
!7995 = !DILocation(line: 233, column: 9, scope: !7993)
!7996 = !DILocation(line: 234, column: 11, scope: !7989)
!7997 = !DILocation(line: 234, column: 9, scope: !7989)
!7998 = !DILocation(line: 235, column: 12, scope: !7982)
!7999 = !DILocation(line: 235, column: 5, scope: !7982)
!8000 = distinct !DISubprogram(name: "ff_thread_ref_frame", scope: !1122, file: !1122, line: 1796, type: !8001, isLocal: false, isDefinition: true, scopeLine: 1797, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{!991, !2666, !2666}
!8003 = !DILocalVariable(name: "dst", arg: 1, scope: !8000, file: !1122, line: 1796, type: !2666)
!8004 = !DILocation(line: 1796, column: 38, scope: !8000)
!8005 = !DILocalVariable(name: "src", arg: 2, scope: !8000, file: !1122, line: 1796, type: !2666)
!8006 = !DILocation(line: 1796, column: 56, scope: !8000)
!8007 = !DILocalVariable(name: "ret", scope: !8000, file: !1122, line: 1798, type: !991)
!8008 = !DILocation(line: 1798, column: 9, scope: !8000)
!8009 = !DILocation(line: 1800, column: 21, scope: !8000)
!8010 = !DILocation(line: 1800, column: 26, scope: !8000)
!8011 = !DILocation(line: 1800, column: 5, scope: !8000)
!8012 = !DILocation(line: 1800, column: 10, scope: !8000)
!8013 = !DILocation(line: 1800, column: 19, scope: !8000)
!8014 = !DILocation(line: 1801, column: 21, scope: !8000)
!8015 = !DILocation(line: 1801, column: 26, scope: !8000)
!8016 = !DILocation(line: 1801, column: 5, scope: !8000)
!8017 = !DILocation(line: 1801, column: 10, scope: !8000)
!8018 = !DILocation(line: 1801, column: 19, scope: !8000)
!8019 = !DILocation(line: 1803, column: 24, scope: !8000)
!8020 = !DILocation(line: 1803, column: 29, scope: !8000)
!8021 = !DILocation(line: 1803, column: 32, scope: !8000)
!8022 = !DILocation(line: 1803, column: 37, scope: !8000)
!8023 = !DILocation(line: 1803, column: 11, scope: !8000)
!8024 = !DILocation(line: 1803, column: 9, scope: !8000)
!8025 = !DILocation(line: 1804, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8000, file: !1122, line: 1804, column: 9)
!8027 = !DILocation(line: 1804, column: 13, scope: !8026)
!8028 = !DILocation(line: 1804, column: 9, scope: !8000)
!8029 = !DILocation(line: 1805, column: 16, scope: !8026)
!8030 = !DILocation(line: 1805, column: 9, scope: !8026)
!8031 = !DILocation(line: 1807, column: 5, scope: !8000)
!8032 = distinct !{!8032, !8031}
!8033 = !DILocation(line: 1807, column: 17, scope: !8034)
!8034 = !DILexicalBlockFile(scope: !8035, file: !1122, discriminator: 1)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !1122, line: 1807, column: 14)
!8036 = distinct !DILexicalBlock(scope: !8000, file: !1122, line: 1807, column: 8)
!8037 = !DILocation(line: 1807, column: 22, scope: !8034)
!8038 = !DILocation(line: 1807, column: 14, scope: !8034)
!8039 = !DILocation(line: 1807, column: 35, scope: !8040)
!8040 = !DILexicalBlockFile(scope: !8041, file: !1122, discriminator: 2)
!8041 = distinct !DILexicalBlock(scope: !8035, file: !1122, line: 1807, column: 33)
!8042 = !DILocation(line: 1807, column: 90, scope: !8043)
!8043 = !DILexicalBlockFile(scope: !8040, file: !1122, discriminator: 4)
!8044 = !DILocation(line: 1807, column: 90, scope: !8040)
!8045 = !DILocation(line: 1807, column: 101, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !8036, file: !1122, discriminator: 3)
!8047 = !DILocation(line: 1809, column: 9, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8000, file: !1122, line: 1809, column: 9)
!8049 = !DILocation(line: 1809, column: 14, scope: !8048)
!8050 = !DILocation(line: 1809, column: 23, scope: !8048)
!8051 = !DILocation(line: 1810, column: 41, scope: !8048)
!8052 = !DILocation(line: 1810, column: 46, scope: !8048)
!8053 = !DILocation(line: 1810, column: 27, scope: !8048)
!8054 = !DILocation(line: 1810, column: 11, scope: !8048)
!8055 = !DILocation(line: 1810, column: 16, scope: !8048)
!8056 = !DILocation(line: 1810, column: 25, scope: !8048)
!8057 = !DILocation(line: 1809, column: 9, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8000, file: !1122, discriminator: 1)
!8059 = !DILocation(line: 1811, column: 34, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8048, file: !1122, line: 1810, column: 58)
!8061 = !DILocation(line: 1811, column: 39, scope: !8060)
!8062 = !DILocation(line: 1811, column: 49, scope: !8060)
!8063 = !DILocation(line: 1811, column: 9, scope: !8060)
!8064 = !DILocation(line: 1812, column: 9, scope: !8060)
!8065 = !DILocation(line: 1815, column: 5, scope: !8000)
!8066 = !DILocation(line: 1816, column: 1, scope: !8000)
!8067 = distinct !DISubprogram(name: "avpriv_bprint_to_extradata", scope: !1122, file: !1122, line: 1878, type: !8068, isLocal: false, isDefinition: true, scopeLine: 1879, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!991, !1374, !8070}
!8070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8071, size: 64, align: 64)
!8071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBPrint", file: !8072, line: 82, size: 8192, align: 64, elements: !8073)
!8072 = !DIFile(filename: "./libavutil/bprint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8073 = !{!8074, !8075, !8076, !8077, !8078, !8082}
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !8071, file: !8072, line: 82, baseType: !968, size: 64, align: 64)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8071, file: !8072, line: 82, baseType: !1111, size: 32, align: 32, offset: 64)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8071, file: !8072, line: 82, baseType: !1111, size: 32, align: 32, offset: 96)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !8071, file: !8072, line: 82, baseType: !1111, size: 32, align: 32, offset: 128)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_internal_buffer", scope: !8071, file: !8072, line: 82, baseType: !8079, size: 8, align: 8, offset: 160)
!8079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 8, align: 8, elements: !8080)
!8080 = !{!8081}
!8081 = !DISubrange(count: 1)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_padding", scope: !8071, file: !8072, line: 82, baseType: !8083, size: 8000, align: 8, offset: 168)
!8083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 8000, align: 8, elements: !8084)
!8084 = !{!8085}
!8085 = !DISubrange(count: 1000)
!8086 = !DILocalVariable(name: "avctx", arg: 1, scope: !8067, file: !1122, line: 1878, type: !1374)
!8087 = !DILocation(line: 1878, column: 48, scope: !8067)
!8088 = !DILocalVariable(name: "buf", arg: 2, scope: !8067, file: !1122, line: 1878, type: !8070)
!8089 = !DILocation(line: 1878, column: 72, scope: !8067)
!8090 = !DILocalVariable(name: "ret", scope: !8067, file: !1122, line: 1880, type: !991)
!8091 = !DILocation(line: 1880, column: 9, scope: !8067)
!8092 = !DILocalVariable(name: "str", scope: !8067, file: !1122, line: 1881, type: !968)
!8093 = !DILocation(line: 1881, column: 11, scope: !8067)
!8094 = !DILocation(line: 1883, column: 30, scope: !8067)
!8095 = !DILocation(line: 1883, column: 11, scope: !8067)
!8096 = !DILocation(line: 1883, column: 9, scope: !8067)
!8097 = !DILocation(line: 1884, column: 9, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8067, file: !1122, line: 1884, column: 9)
!8099 = !DILocation(line: 1884, column: 13, scope: !8098)
!8100 = !DILocation(line: 1884, column: 9, scope: !8067)
!8101 = !DILocation(line: 1885, column: 16, scope: !8098)
!8102 = !DILocation(line: 1885, column: 9, scope: !8098)
!8103 = !DILocation(line: 1886, column: 32, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8067, file: !1122, line: 1886, column: 9)
!8105 = !DILocation(line: 1886, column: 10, scope: !8104)
!8106 = !DILocation(line: 1886, column: 9, scope: !8067)
!8107 = !DILocation(line: 1887, column: 17, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8104, file: !1122, line: 1886, column: 38)
!8109 = !DILocation(line: 1887, column: 9, scope: !8108)
!8110 = !DILocation(line: 1888, column: 9, scope: !8108)
!8111 = !DILocation(line: 1891, column: 24, scope: !8067)
!8112 = !DILocation(line: 1891, column: 5, scope: !8067)
!8113 = !DILocation(line: 1891, column: 12, scope: !8067)
!8114 = !DILocation(line: 1891, column: 22, scope: !8067)
!8115 = !DILocation(line: 1897, column: 29, scope: !8067)
!8116 = !DILocation(line: 1897, column: 34, scope: !8067)
!8117 = !DILocation(line: 1897, column: 5, scope: !8067)
!8118 = !DILocation(line: 1897, column: 12, scope: !8067)
!8119 = !DILocation(line: 1897, column: 27, scope: !8067)
!8120 = !DILocation(line: 1898, column: 5, scope: !8067)
!8121 = !DILocation(line: 1899, column: 1, scope: !8067)
!8122 = distinct !DISubprogram(name: "av_bprint_is_complete", scope: !8072, file: !8072, line: 185, type: !8123, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!991, !8125}
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8126, size: 64, align: 64)
!8126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8127)
!8127 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBPrint", file: !8072, line: 82, baseType: !8071)
!8128 = !DILocalVariable(name: "buf", arg: 1, scope: !8122, file: !8072, line: 185, type: !8125)
!8129 = !DILocation(line: 185, column: 57, scope: !8122)
!8130 = !DILocation(line: 187, column: 12, scope: !8122)
!8131 = !DILocation(line: 187, column: 17, scope: !8122)
!8132 = !DILocation(line: 187, column: 23, scope: !8122)
!8133 = !DILocation(line: 187, column: 28, scope: !8122)
!8134 = !DILocation(line: 187, column: 21, scope: !8122)
!8135 = !DILocation(line: 187, column: 5, scope: !8122)
!8136 = distinct !DISubprogram(name: "avpriv_find_start_code", scope: !1122, file: !1122, line: 1901, type: !8137, isLocal: false, isDefinition: true, scopeLine: 1904, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8137 = !DISubroutineType(types: !8138)
!8138 = !{!1794, !8139, !1794, !8140}
!8139 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1794)
!8140 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1897)
!8141 = !DILocalVariable(name: "x", arg: 1, scope: !8142, file: !8143, line: 66, type: !1118)
!8142 = distinct !DISubprogram(name: "av_bswap32", scope: !8143, file: !8143, line: 66, type: !8144, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8143 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!1118, !1118}
!8146 = !DILocation(line: 66, column: 98, scope: !8142, inlinedAt: !8147)
!8147 = distinct !DILocation(line: 1929, column: 14, scope: !8136)
!8148 = !DILocalVariable(name: "p", arg: 1, scope: !8136, file: !1122, line: 1901, type: !8139)
!8149 = !DILocation(line: 1901, column: 63, scope: !8136)
!8150 = !DILocalVariable(name: "end", arg: 2, scope: !8136, file: !1122, line: 1902, type: !1794)
!8151 = !DILocation(line: 1902, column: 54, scope: !8136)
!8152 = !DILocalVariable(name: "state", arg: 3, scope: !8136, file: !1122, line: 1903, type: !8140)
!8153 = !DILocation(line: 1903, column: 58, scope: !8136)
!8154 = !DILocalVariable(name: "i", scope: !8136, file: !1122, line: 1905, type: !991)
!8155 = !DILocation(line: 1905, column: 9, scope: !8136)
!8156 = !DILocation(line: 1907, column: 5, scope: !8136)
!8157 = distinct !{!8157, !8156}
!8158 = !DILocation(line: 1907, column: 16, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !8160, file: !1122, discriminator: 1)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !1122, line: 1907, column: 14)
!8161 = distinct !DILexicalBlock(scope: !8136, file: !1122, line: 1907, column: 8)
!8162 = !DILocation(line: 1907, column: 21, scope: !8159)
!8163 = !DILocation(line: 1907, column: 18, scope: !8159)
!8164 = !DILocation(line: 1907, column: 14, scope: !8159)
!8165 = !DILocation(line: 1907, column: 29, scope: !8166)
!8166 = !DILexicalBlockFile(scope: !8167, file: !1122, discriminator: 2)
!8167 = distinct !DILexicalBlock(scope: !8160, file: !1122, line: 1907, column: 27)
!8168 = !DILocation(line: 1907, column: 84, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8166, file: !1122, discriminator: 4)
!8170 = !DILocation(line: 1907, column: 84, scope: !8166)
!8171 = !DILocation(line: 1907, column: 95, scope: !8172)
!8172 = !DILexicalBlockFile(scope: !8161, file: !1122, discriminator: 3)
!8173 = !DILocation(line: 1908, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8136, file: !1122, line: 1908, column: 9)
!8175 = !DILocation(line: 1908, column: 14, scope: !8174)
!8176 = !DILocation(line: 1908, column: 11, scope: !8174)
!8177 = !DILocation(line: 1908, column: 9, scope: !8136)
!8178 = !DILocation(line: 1909, column: 16, scope: !8174)
!8179 = !DILocation(line: 1909, column: 9, scope: !8174)
!8180 = !DILocation(line: 1911, column: 12, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8136, file: !1122, line: 1911, column: 5)
!8182 = !DILocation(line: 1911, column: 10, scope: !8181)
!8183 = !DILocation(line: 1911, column: 17, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8185, file: !1122, discriminator: 1)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !1122, line: 1911, column: 5)
!8186 = !DILocation(line: 1911, column: 19, scope: !8184)
!8187 = !DILocation(line: 1911, column: 5, scope: !8184)
!8188 = !DILocalVariable(name: "tmp", scope: !8189, file: !1122, line: 1912, type: !1118)
!8189 = distinct !DILexicalBlock(scope: !8185, file: !1122, line: 1911, column: 29)
!8190 = !DILocation(line: 1912, column: 18, scope: !8189)
!8191 = !DILocation(line: 1912, column: 25, scope: !8189)
!8192 = !DILocation(line: 1912, column: 24, scope: !8189)
!8193 = !DILocation(line: 1912, column: 31, scope: !8189)
!8194 = !DILocation(line: 1913, column: 18, scope: !8189)
!8195 = !DILocation(line: 1913, column: 27, scope: !8189)
!8196 = !DILocation(line: 1913, column: 24, scope: !8189)
!8197 = !DILocation(line: 1913, column: 22, scope: !8189)
!8198 = !DILocation(line: 1913, column: 10, scope: !8189)
!8199 = !DILocation(line: 1913, column: 16, scope: !8189)
!8200 = !DILocation(line: 1914, column: 13, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8189, file: !1122, line: 1914, column: 13)
!8202 = !DILocation(line: 1914, column: 17, scope: !8201)
!8203 = !DILocation(line: 1914, column: 26, scope: !8201)
!8204 = !DILocation(line: 1914, column: 29, scope: !8205)
!8205 = !DILexicalBlockFile(scope: !8201, file: !1122, discriminator: 1)
!8206 = !DILocation(line: 1914, column: 34, scope: !8205)
!8207 = !DILocation(line: 1914, column: 31, scope: !8205)
!8208 = !DILocation(line: 1914, column: 13, scope: !8205)
!8209 = !DILocation(line: 1915, column: 20, scope: !8201)
!8210 = !DILocation(line: 1915, column: 13, scope: !8201)
!8211 = !DILocation(line: 1916, column: 5, scope: !8189)
!8212 = !DILocation(line: 1911, column: 25, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8185, file: !1122, discriminator: 2)
!8214 = !DILocation(line: 1911, column: 5, scope: !8213)
!8215 = distinct !{!8215, !8216}
!8216 = !DILocation(line: 1911, column: 5, scope: !8136)
!8217 = !DILocation(line: 1918, column: 5, scope: !8136)
!8218 = !DILocation(line: 1918, column: 12, scope: !8219)
!8219 = !DILexicalBlockFile(scope: !8136, file: !1122, discriminator: 1)
!8220 = !DILocation(line: 1918, column: 16, scope: !8219)
!8221 = !DILocation(line: 1918, column: 14, scope: !8219)
!8222 = !DILocation(line: 1918, column: 5, scope: !8219)
!8223 = !DILocation(line: 1919, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !1122, line: 1919, column: 13)
!8225 = distinct !DILexicalBlock(scope: !8136, file: !1122, line: 1918, column: 21)
!8226 = !DILocation(line: 1919, column: 19, scope: !8224)
!8227 = !DILocation(line: 1919, column: 13, scope: !8225)
!8228 = !DILocation(line: 1919, column: 27, scope: !8229)
!8229 = !DILexicalBlockFile(scope: !8224, file: !1122, discriminator: 1)
!8230 = !DILocation(line: 1919, column: 25, scope: !8229)
!8231 = !DILocation(line: 1920, column: 18, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8224, file: !1122, line: 1920, column: 18)
!8233 = !DILocation(line: 1920, column: 18, scope: !8224)
!8234 = !DILocation(line: 1920, column: 28, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !8232, file: !1122, discriminator: 1)
!8236 = !DILocation(line: 1920, column: 26, scope: !8235)
!8237 = !DILocation(line: 1921, column: 18, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8232, file: !1122, line: 1921, column: 18)
!8239 = !DILocation(line: 1921, column: 25, scope: !8238)
!8240 = !DILocation(line: 1921, column: 30, scope: !8238)
!8241 = !DILocation(line: 1921, column: 23, scope: !8238)
!8242 = !DILocation(line: 1921, column: 18, scope: !8232)
!8243 = !DILocation(line: 1921, column: 36, scope: !8244)
!8244 = !DILexicalBlockFile(scope: !8238, file: !1122, discriminator: 1)
!8245 = !DILocation(line: 1921, column: 35, scope: !8244)
!8246 = !DILocation(line: 1923, column: 14, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8238, file: !1122, line: 1922, column: 14)
!8248 = !DILocation(line: 1924, column: 13, scope: !8247)
!8249 = !DILocation(line: 1918, column: 5, scope: !8250)
!8250 = !DILexicalBlockFile(scope: !8136, file: !1122, discriminator: 2)
!8251 = distinct !{!8251, !8217}
!8252 = !DILocation(line: 1928, column: 11, scope: !8136)
!8253 = !DILocation(line: 1928, column: 17, scope: !8136)
!8254 = !DILocation(line: 1928, column: 14, scope: !8136)
!8255 = !DILocation(line: 1928, column: 10, scope: !8136)
!8256 = !DILocation(line: 1928, column: 25, scope: !8219)
!8257 = !DILocation(line: 1928, column: 10, scope: !8219)
!8258 = !DILocation(line: 1928, column: 33, scope: !8250)
!8259 = !DILocation(line: 1928, column: 10, scope: !8250)
!8260 = !DILocation(line: 1928, column: 10, scope: !8261)
!8261 = !DILexicalBlockFile(scope: !8136, file: !1122, discriminator: 3)
!8262 = !DILocation(line: 1928, column: 37, scope: !8261)
!8263 = !DILocation(line: 1928, column: 7, scope: !8261)
!8264 = !DILocation(line: 1929, column: 57, scope: !8136)
!8265 = !DILocation(line: 1929, column: 62, scope: !8136)
!8266 = !DILocation(line: 1929, column: 14, scope: !8136)
!8267 = !DILocation(line: 68, column: 16, scope: !8142, inlinedAt: !8147)
!8268 = !DILocation(line: 68, column: 19, scope: !8142, inlinedAt: !8147)
!8269 = !DILocation(line: 68, column: 24, scope: !8142, inlinedAt: !8147)
!8270 = !DILocation(line: 68, column: 38, scope: !8142, inlinedAt: !8147)
!8271 = !DILocation(line: 68, column: 41, scope: !8142, inlinedAt: !8147)
!8272 = !DILocation(line: 68, column: 46, scope: !8142, inlinedAt: !8147)
!8273 = !DILocation(line: 68, column: 34, scope: !8142, inlinedAt: !8147)
!8274 = !DILocation(line: 68, column: 57, scope: !8142, inlinedAt: !8147)
!8275 = !DILocation(line: 68, column: 69, scope: !8142, inlinedAt: !8147)
!8276 = !DILocation(line: 68, column: 72, scope: !8142, inlinedAt: !8147)
!8277 = !DILocation(line: 68, column: 79, scope: !8142, inlinedAt: !8147)
!8278 = !DILocation(line: 68, column: 84, scope: !8142, inlinedAt: !8147)
!8279 = !DILocation(line: 68, column: 99, scope: !8142, inlinedAt: !8147)
!8280 = !DILocation(line: 68, column: 102, scope: !8142, inlinedAt: !8147)
!8281 = !DILocation(line: 68, column: 109, scope: !8142, inlinedAt: !8147)
!8282 = !DILocation(line: 68, column: 114, scope: !8142, inlinedAt: !8147)
!8283 = !DILocation(line: 68, column: 94, scope: !8142, inlinedAt: !8147)
!8284 = !DILocation(line: 68, column: 63, scope: !8142, inlinedAt: !8147)
!8285 = !DILocation(line: 1929, column: 6, scope: !8136)
!8286 = !DILocation(line: 1929, column: 12, scope: !8136)
!8287 = !DILocation(line: 1931, column: 12, scope: !8136)
!8288 = !DILocation(line: 1931, column: 14, scope: !8136)
!8289 = !DILocation(line: 1931, column: 5, scope: !8136)
!8290 = !DILocation(line: 1932, column: 1, scope: !8136)
!8291 = distinct !DISubprogram(name: "av_cpb_properties_alloc", scope: !1122, file: !1122, line: 1934, type: !8292, isLocal: false, isDefinition: true, scopeLine: 1935, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{!8294, !8303}
!8294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8295, size: 64, align: 64)
!8295 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCPBProperties", file: !14, line: 1162, baseType: !8296)
!8296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCPBProperties", file: !14, line: 1119, size: 192, align: 64, elements: !8297)
!8297 = !{!8298, !8299, !8300, !8301, !8302}
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "max_bitrate", scope: !8296, file: !14, line: 1125, baseType: !991, size: 32, align: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "min_bitrate", scope: !8296, file: !14, line: 1134, baseType: !991, size: 32, align: 32, offset: 32)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "avg_bitrate", scope: !8296, file: !14, line: 1143, baseType: !991, size: 32, align: 32, offset: 64)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !8296, file: !14, line: 1152, baseType: !991, size: 32, align: 32, offset: 96)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !8296, file: !14, line: 1161, baseType: !1355, size: 64, align: 64, offset: 128)
!8303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!8304 = !DILocalVariable(name: "size", arg: 1, scope: !8291, file: !1122, line: 1934, type: !8303)
!8305 = !DILocation(line: 1934, column: 50, scope: !8291)
!8306 = !DILocalVariable(name: "props", scope: !8291, file: !1122, line: 1936, type: !8294)
!8307 = !DILocation(line: 1936, column: 22, scope: !8291)
!8308 = !DILocation(line: 1936, column: 30, scope: !8291)
!8309 = !DILocation(line: 1937, column: 10, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8291, file: !1122, line: 1937, column: 9)
!8311 = !DILocation(line: 1937, column: 9, scope: !8291)
!8312 = !DILocation(line: 1938, column: 9, scope: !8310)
!8313 = !DILocation(line: 1940, column: 9, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8291, file: !1122, line: 1940, column: 9)
!8315 = !DILocation(line: 1940, column: 9, scope: !8291)
!8316 = !DILocation(line: 1941, column: 10, scope: !8314)
!8317 = !DILocation(line: 1941, column: 15, scope: !8314)
!8318 = !DILocation(line: 1941, column: 9, scope: !8314)
!8319 = !DILocation(line: 1943, column: 5, scope: !8291)
!8320 = !DILocation(line: 1943, column: 12, scope: !8291)
!8321 = !DILocation(line: 1943, column: 22, scope: !8291)
!8322 = !DILocation(line: 1945, column: 12, scope: !8291)
!8323 = !DILocation(line: 1945, column: 5, scope: !8291)
!8324 = !DILocation(line: 1946, column: 1, scope: !8291)
!8325 = distinct !DISubprogram(name: "ff_add_cpb_side_data", scope: !1122, file: !1122, line: 1948, type: !8326, isLocal: false, isDefinition: true, scopeLine: 1949, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!8294, !1374}
!8328 = !DILocalVariable(name: "avctx", arg: 1, scope: !8325, file: !1122, line: 1948, type: !1374)
!8329 = !DILocation(line: 1948, column: 55, scope: !8325)
!8330 = !DILocalVariable(name: "tmp", scope: !8325, file: !1122, line: 1950, type: !1514)
!8331 = !DILocation(line: 1950, column: 23, scope: !8325)
!8332 = !DILocalVariable(name: "props", scope: !8325, file: !1122, line: 1951, type: !8294)
!8333 = !DILocation(line: 1951, column: 22, scope: !8325)
!8334 = !DILocalVariable(name: "size", scope: !8325, file: !1122, line: 1952, type: !1171)
!8335 = !DILocation(line: 1952, column: 12, scope: !8325)
!8336 = !DILocation(line: 1954, column: 13, scope: !8325)
!8337 = !DILocation(line: 1954, column: 11, scope: !8325)
!8338 = !DILocation(line: 1955, column: 10, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8325, file: !1122, line: 1955, column: 9)
!8340 = !DILocation(line: 1955, column: 9, scope: !8325)
!8341 = !DILocation(line: 1956, column: 9, scope: !8339)
!8342 = !DILocation(line: 1958, column: 28, scope: !8325)
!8343 = !DILocation(line: 1958, column: 35, scope: !8325)
!8344 = !DILocation(line: 1958, column: 52, scope: !8325)
!8345 = !DILocation(line: 1958, column: 59, scope: !8325)
!8346 = !DILocation(line: 1958, column: 78, scope: !8325)
!8347 = !DILocation(line: 1958, column: 11, scope: !8325)
!8348 = !DILocation(line: 1958, column: 9, scope: !8325)
!8349 = !DILocation(line: 1959, column: 10, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8325, file: !1122, line: 1959, column: 9)
!8351 = !DILocation(line: 1959, column: 9, scope: !8325)
!8352 = !DILocation(line: 1960, column: 18, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8350, file: !1122, line: 1959, column: 15)
!8354 = !DILocation(line: 1960, column: 9, scope: !8353)
!8355 = !DILocation(line: 1961, column: 9, scope: !8353)
!8356 = !DILocation(line: 1964, column: 30, scope: !8325)
!8357 = !DILocation(line: 1964, column: 5, scope: !8325)
!8358 = !DILocation(line: 1964, column: 12, scope: !8325)
!8359 = !DILocation(line: 1964, column: 28, scope: !8325)
!8360 = !DILocation(line: 1965, column: 5, scope: !8325)
!8361 = !DILocation(line: 1965, column: 12, scope: !8325)
!8362 = !DILocation(line: 1965, column: 30, scope: !8325)
!8363 = !DILocation(line: 1967, column: 28, scope: !8325)
!8364 = !DILocation(line: 1967, column: 35, scope: !8325)
!8365 = !DILocation(line: 1967, column: 54, scope: !8325)
!8366 = !DILocation(line: 1967, column: 5, scope: !8325)
!8367 = !DILocation(line: 1967, column: 12, scope: !8325)
!8368 = !DILocation(line: 1967, column: 59, scope: !8325)
!8369 = !DILocation(line: 1967, column: 64, scope: !8325)
!8370 = !DILocation(line: 1968, column: 76, scope: !8325)
!8371 = !DILocation(line: 1968, column: 66, scope: !8325)
!8372 = !DILocation(line: 1968, column: 28, scope: !8325)
!8373 = !DILocation(line: 1968, column: 35, scope: !8325)
!8374 = !DILocation(line: 1968, column: 54, scope: !8325)
!8375 = !DILocation(line: 1968, column: 5, scope: !8325)
!8376 = !DILocation(line: 1968, column: 12, scope: !8325)
!8377 = !DILocation(line: 1968, column: 59, scope: !8325)
!8378 = !DILocation(line: 1968, column: 64, scope: !8325)
!8379 = !DILocation(line: 1969, column: 66, scope: !8325)
!8380 = !DILocation(line: 1969, column: 28, scope: !8325)
!8381 = !DILocation(line: 1969, column: 35, scope: !8325)
!8382 = !DILocation(line: 1969, column: 54, scope: !8325)
!8383 = !DILocation(line: 1969, column: 5, scope: !8325)
!8384 = !DILocation(line: 1969, column: 12, scope: !8325)
!8385 = !DILocation(line: 1969, column: 59, scope: !8325)
!8386 = !DILocation(line: 1969, column: 64, scope: !8325)
!8387 = !DILocation(line: 1971, column: 12, scope: !8325)
!8388 = !DILocation(line: 1971, column: 5, scope: !8325)
!8389 = !DILocation(line: 1972, column: 1, scope: !8325)
!8390 = distinct !DISubprogram(name: "avcodec_parameters_alloc", scope: !1122, file: !1122, line: 1994, type: !8391, isLocal: false, isDefinition: true, scopeLine: 1995, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8391 = !DISubroutineType(types: !8392)
!8392 = !{!1566}
!8393 = !DILocalVariable(name: "par", scope: !8390, file: !1122, line: 1996, type: !1566)
!8394 = !DILocation(line: 1996, column: 24, scope: !8390)
!8395 = !DILocation(line: 1996, column: 30, scope: !8390)
!8396 = !DILocation(line: 1998, column: 10, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8390, file: !1122, line: 1998, column: 9)
!8398 = !DILocation(line: 1998, column: 9, scope: !8390)
!8399 = !DILocation(line: 1999, column: 9, scope: !8397)
!8400 = !DILocation(line: 2000, column: 28, scope: !8390)
!8401 = !DILocation(line: 2000, column: 5, scope: !8390)
!8402 = !DILocation(line: 2001, column: 12, scope: !8390)
!8403 = !DILocation(line: 2001, column: 5, scope: !8390)
!8404 = !DILocation(line: 2002, column: 1, scope: !8390)
!8405 = distinct !DISubprogram(name: "codec_parameters_reset", scope: !1122, file: !1122, line: 1974, type: !8406, isLocal: true, isDefinition: true, scopeLine: 1975, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{null, !1566}
!8408 = !DILocalVariable(name: "par", arg: 1, scope: !8405, file: !1122, line: 1974, type: !1566)
!8409 = !DILocation(line: 1974, column: 55, scope: !8405)
!8410 = !DILocation(line: 1976, column: 15, scope: !8405)
!8411 = !DILocation(line: 1976, column: 20, scope: !8405)
!8412 = !DILocation(line: 1976, column: 14, scope: !8405)
!8413 = !DILocation(line: 1976, column: 5, scope: !8405)
!8414 = !DILocation(line: 1978, column: 12, scope: !8405)
!8415 = !DILocation(line: 1978, column: 5, scope: !8405)
!8416 = !DILocation(line: 1980, column: 5, scope: !8405)
!8417 = !DILocation(line: 1980, column: 10, scope: !8405)
!8418 = !DILocation(line: 1980, column: 21, scope: !8405)
!8419 = !DILocation(line: 1981, column: 5, scope: !8405)
!8420 = !DILocation(line: 1981, column: 10, scope: !8405)
!8421 = !DILocation(line: 1981, column: 19, scope: !8405)
!8422 = !DILocation(line: 1982, column: 5, scope: !8405)
!8423 = !DILocation(line: 1982, column: 10, scope: !8405)
!8424 = !DILocation(line: 1982, column: 17, scope: !8405)
!8425 = !DILocation(line: 1983, column: 5, scope: !8405)
!8426 = !DILocation(line: 1983, column: 10, scope: !8405)
!8427 = !DILocation(line: 1983, column: 22, scope: !8405)
!8428 = !DILocation(line: 1984, column: 5, scope: !8405)
!8429 = !DILocation(line: 1984, column: 10, scope: !8405)
!8430 = !DILocation(line: 1984, column: 22, scope: !8405)
!8431 = !DILocation(line: 1985, column: 5, scope: !8405)
!8432 = !DILocation(line: 1985, column: 10, scope: !8405)
!8433 = !DILocation(line: 1985, column: 26, scope: !8405)
!8434 = !DILocation(line: 1986, column: 5, scope: !8405)
!8435 = !DILocation(line: 1986, column: 10, scope: !8405)
!8436 = !DILocation(line: 1986, column: 20, scope: !8405)
!8437 = !DILocation(line: 1987, column: 5, scope: !8405)
!8438 = !DILocation(line: 1987, column: 10, scope: !8405)
!8439 = !DILocation(line: 1987, column: 22, scope: !8405)
!8440 = !DILocation(line: 1988, column: 5, scope: !8405)
!8441 = !DILocation(line: 1988, column: 10, scope: !8405)
!8442 = !DILocation(line: 1988, column: 26, scope: !8405)
!8443 = !DILocation(line: 1989, column: 5, scope: !8405)
!8444 = !DILocation(line: 1989, column: 10, scope: !8405)
!8445 = !DILocation(line: 1989, column: 44, scope: !8405)
!8446 = !DILocation(line: 1989, column: 32, scope: !8405)
!8447 = !DILocation(line: 1990, column: 5, scope: !8405)
!8448 = !DILocation(line: 1990, column: 10, scope: !8405)
!8449 = !DILocation(line: 1990, column: 18, scope: !8405)
!8450 = !DILocation(line: 1991, column: 5, scope: !8405)
!8451 = !DILocation(line: 1991, column: 10, scope: !8405)
!8452 = !DILocation(line: 1991, column: 16, scope: !8405)
!8453 = !DILocation(line: 1992, column: 1, scope: !8405)
!8454 = distinct !DISubprogram(name: "avcodec_parameters_free", scope: !1122, file: !1122, line: 2004, type: !8455, isLocal: false, isDefinition: true, scopeLine: 2005, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{null, !8457}
!8457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64, align: 64)
!8458 = !DILocalVariable(name: "ppar", arg: 1, scope: !8454, file: !1122, line: 2004, type: !8457)
!8459 = !DILocation(line: 2004, column: 50, scope: !8454)
!8460 = !DILocalVariable(name: "par", scope: !8454, file: !1122, line: 2006, type: !1566)
!8461 = !DILocation(line: 2006, column: 24, scope: !8454)
!8462 = !DILocation(line: 2006, column: 31, scope: !8454)
!8463 = !DILocation(line: 2006, column: 30, scope: !8454)
!8464 = !DILocation(line: 2008, column: 10, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8454, file: !1122, line: 2008, column: 9)
!8466 = !DILocation(line: 2008, column: 9, scope: !8454)
!8467 = !DILocation(line: 2009, column: 9, scope: !8465)
!8468 = !DILocation(line: 2010, column: 28, scope: !8454)
!8469 = !DILocation(line: 2010, column: 5, scope: !8454)
!8470 = !DILocation(line: 2012, column: 14, scope: !8454)
!8471 = !DILocation(line: 2012, column: 5, scope: !8454)
!8472 = !DILocation(line: 2013, column: 1, scope: !8454)
!8473 = !DILocation(line: 2013, column: 1, scope: !8474)
!8474 = !DILexicalBlockFile(scope: !8454, file: !1122, discriminator: 1)
!8475 = distinct !DISubprogram(name: "avcodec_parameters_copy", scope: !1122, file: !1122, line: 2015, type: !8476, isLocal: false, isDefinition: true, scopeLine: 2016, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{!991, !1566, !8478}
!8478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8479, size: 64, align: 64)
!8479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!8480 = !DILocalVariable(name: "dst", arg: 1, scope: !8475, file: !1122, line: 2015, type: !1566)
!8481 = !DILocation(line: 2015, column: 48, scope: !8475)
!8482 = !DILocalVariable(name: "src", arg: 2, scope: !8475, file: !1122, line: 2015, type: !8478)
!8483 = !DILocation(line: 2015, column: 78, scope: !8475)
!8484 = !DILocation(line: 2017, column: 28, scope: !8475)
!8485 = !DILocation(line: 2017, column: 5, scope: !8475)
!8486 = !DILocation(line: 2018, column: 12, scope: !8475)
!8487 = !DILocation(line: 2018, column: 5, scope: !8475)
!8488 = !DILocation(line: 2018, column: 17, scope: !8475)
!8489 = !DILocation(line: 2020, column: 5, scope: !8475)
!8490 = !DILocation(line: 2020, column: 10, scope: !8475)
!8491 = !DILocation(line: 2020, column: 20, scope: !8475)
!8492 = !DILocation(line: 2021, column: 5, scope: !8475)
!8493 = !DILocation(line: 2021, column: 10, scope: !8475)
!8494 = !DILocation(line: 2021, column: 25, scope: !8475)
!8495 = !DILocation(line: 2022, column: 9, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8475, file: !1122, line: 2022, column: 9)
!8497 = !DILocation(line: 2022, column: 14, scope: !8496)
!8498 = !DILocation(line: 2022, column: 9, scope: !8475)
!8499 = !DILocation(line: 2023, column: 37, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8496, file: !1122, line: 2022, column: 25)
!8501 = !DILocation(line: 2023, column: 42, scope: !8500)
!8502 = !DILocation(line: 2023, column: 57, scope: !8500)
!8503 = !DILocation(line: 2023, column: 26, scope: !8500)
!8504 = !DILocation(line: 2023, column: 9, scope: !8500)
!8505 = !DILocation(line: 2023, column: 14, scope: !8500)
!8506 = !DILocation(line: 2023, column: 24, scope: !8500)
!8507 = !DILocation(line: 2024, column: 14, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8500, file: !1122, line: 2024, column: 13)
!8509 = !DILocation(line: 2024, column: 19, scope: !8508)
!8510 = !DILocation(line: 2024, column: 13, scope: !8500)
!8511 = !DILocation(line: 2025, column: 13, scope: !8508)
!8512 = !DILocation(line: 2026, column: 16, scope: !8500)
!8513 = !DILocation(line: 2026, column: 21, scope: !8500)
!8514 = !DILocation(line: 2026, column: 32, scope: !8500)
!8515 = !DILocation(line: 2026, column: 37, scope: !8500)
!8516 = !DILocation(line: 2026, column: 48, scope: !8500)
!8517 = !DILocation(line: 2026, column: 53, scope: !8500)
!8518 = !DILocation(line: 2026, column: 9, scope: !8500)
!8519 = !DILocation(line: 2027, column: 31, scope: !8500)
!8520 = !DILocation(line: 2027, column: 36, scope: !8500)
!8521 = !DILocation(line: 2027, column: 9, scope: !8500)
!8522 = !DILocation(line: 2027, column: 14, scope: !8500)
!8523 = !DILocation(line: 2027, column: 29, scope: !8500)
!8524 = !DILocation(line: 2028, column: 5, scope: !8500)
!8525 = !DILocation(line: 2030, column: 5, scope: !8475)
!8526 = !DILocation(line: 2031, column: 1, scope: !8475)
!8527 = distinct !DISubprogram(name: "avcodec_parameters_from_context", scope: !1122, file: !1122, line: 2033, type: !8528, isLocal: false, isDefinition: true, scopeLine: 2035, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!991, !1566, !2792}
!8530 = !DILocalVariable(name: "par", arg: 1, scope: !8527, file: !1122, line: 2033, type: !1566)
!8531 = !DILocation(line: 2033, column: 56, scope: !8527)
!8532 = !DILocalVariable(name: "codec", arg: 2, scope: !8527, file: !1122, line: 2034, type: !2792)
!8533 = !DILocation(line: 2034, column: 59, scope: !8527)
!8534 = !DILocation(line: 2036, column: 28, scope: !8527)
!8535 = !DILocation(line: 2036, column: 5, scope: !8527)
!8536 = !DILocation(line: 2038, column: 23, scope: !8527)
!8537 = !DILocation(line: 2038, column: 30, scope: !8527)
!8538 = !DILocation(line: 2038, column: 5, scope: !8527)
!8539 = !DILocation(line: 2038, column: 10, scope: !8527)
!8540 = !DILocation(line: 2038, column: 21, scope: !8527)
!8541 = !DILocation(line: 2039, column: 21, scope: !8527)
!8542 = !DILocation(line: 2039, column: 28, scope: !8527)
!8543 = !DILocation(line: 2039, column: 5, scope: !8527)
!8544 = !DILocation(line: 2039, column: 10, scope: !8527)
!8545 = !DILocation(line: 2039, column: 19, scope: !8527)
!8546 = !DILocation(line: 2040, column: 22, scope: !8527)
!8547 = !DILocation(line: 2040, column: 29, scope: !8527)
!8548 = !DILocation(line: 2040, column: 5, scope: !8527)
!8549 = !DILocation(line: 2040, column: 10, scope: !8527)
!8550 = !DILocation(line: 2040, column: 20, scope: !8527)
!8551 = !DILocation(line: 2042, column: 21, scope: !8527)
!8552 = !DILocation(line: 2042, column: 28, scope: !8527)
!8553 = !DILocation(line: 2042, column: 5, scope: !8527)
!8554 = !DILocation(line: 2042, column: 10, scope: !8527)
!8555 = !DILocation(line: 2042, column: 19, scope: !8527)
!8556 = !DILocation(line: 2043, column: 34, scope: !8527)
!8557 = !DILocation(line: 2043, column: 41, scope: !8527)
!8558 = !DILocation(line: 2043, column: 5, scope: !8527)
!8559 = !DILocation(line: 2043, column: 10, scope: !8527)
!8560 = !DILocation(line: 2043, column: 32, scope: !8527)
!8561 = !DILocation(line: 2044, column: 32, scope: !8527)
!8562 = !DILocation(line: 2044, column: 39, scope: !8527)
!8563 = !DILocation(line: 2044, column: 5, scope: !8527)
!8564 = !DILocation(line: 2044, column: 10, scope: !8527)
!8565 = !DILocation(line: 2044, column: 30, scope: !8527)
!8566 = !DILocation(line: 2045, column: 20, scope: !8527)
!8567 = !DILocation(line: 2045, column: 27, scope: !8527)
!8568 = !DILocation(line: 2045, column: 5, scope: !8527)
!8569 = !DILocation(line: 2045, column: 10, scope: !8527)
!8570 = !DILocation(line: 2045, column: 18, scope: !8527)
!8571 = !DILocation(line: 2046, column: 18, scope: !8527)
!8572 = !DILocation(line: 2046, column: 25, scope: !8527)
!8573 = !DILocation(line: 2046, column: 5, scope: !8527)
!8574 = !DILocation(line: 2046, column: 10, scope: !8527)
!8575 = !DILocation(line: 2046, column: 16, scope: !8527)
!8576 = !DILocation(line: 2048, column: 13, scope: !8527)
!8577 = !DILocation(line: 2048, column: 18, scope: !8527)
!8578 = !DILocation(line: 2048, column: 5, scope: !8527)
!8579 = !DILocation(line: 2050, column: 23, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8527, file: !1122, line: 2048, column: 30)
!8581 = !DILocation(line: 2050, column: 30, scope: !8580)
!8582 = !DILocation(line: 2050, column: 9, scope: !8580)
!8583 = !DILocation(line: 2050, column: 14, scope: !8580)
!8584 = !DILocation(line: 2050, column: 21, scope: !8580)
!8585 = !DILocation(line: 2051, column: 22, scope: !8580)
!8586 = !DILocation(line: 2051, column: 29, scope: !8580)
!8587 = !DILocation(line: 2051, column: 9, scope: !8580)
!8588 = !DILocation(line: 2051, column: 14, scope: !8580)
!8589 = !DILocation(line: 2051, column: 20, scope: !8580)
!8590 = !DILocation(line: 2052, column: 23, scope: !8580)
!8591 = !DILocation(line: 2052, column: 30, scope: !8580)
!8592 = !DILocation(line: 2052, column: 9, scope: !8580)
!8593 = !DILocation(line: 2052, column: 14, scope: !8580)
!8594 = !DILocation(line: 2052, column: 21, scope: !8580)
!8595 = !DILocation(line: 2053, column: 28, scope: !8580)
!8596 = !DILocation(line: 2053, column: 35, scope: !8580)
!8597 = !DILocation(line: 2053, column: 9, scope: !8580)
!8598 = !DILocation(line: 2053, column: 14, scope: !8580)
!8599 = !DILocation(line: 2053, column: 26, scope: !8580)
!8600 = !DILocation(line: 2054, column: 28, scope: !8580)
!8601 = !DILocation(line: 2054, column: 35, scope: !8580)
!8602 = !DILocation(line: 2054, column: 9, scope: !8580)
!8603 = !DILocation(line: 2054, column: 14, scope: !8580)
!8604 = !DILocation(line: 2054, column: 26, scope: !8580)
!8605 = !DILocation(line: 2055, column: 32, scope: !8580)
!8606 = !DILocation(line: 2055, column: 39, scope: !8580)
!8607 = !DILocation(line: 2055, column: 9, scope: !8580)
!8608 = !DILocation(line: 2055, column: 14, scope: !8580)
!8609 = !DILocation(line: 2055, column: 30, scope: !8580)
!8610 = !DILocation(line: 2056, column: 26, scope: !8580)
!8611 = !DILocation(line: 2056, column: 33, scope: !8580)
!8612 = !DILocation(line: 2056, column: 9, scope: !8580)
!8613 = !DILocation(line: 2056, column: 14, scope: !8580)
!8614 = !DILocation(line: 2056, column: 24, scope: !8580)
!8615 = !DILocation(line: 2057, column: 28, scope: !8580)
!8616 = !DILocation(line: 2057, column: 35, scope: !8580)
!8617 = !DILocation(line: 2057, column: 9, scope: !8580)
!8618 = !DILocation(line: 2057, column: 14, scope: !8580)
!8619 = !DILocation(line: 2057, column: 26, scope: !8580)
!8620 = !DILocation(line: 2058, column: 32, scope: !8580)
!8621 = !DILocation(line: 2058, column: 39, scope: !8580)
!8622 = !DILocation(line: 2058, column: 9, scope: !8580)
!8623 = !DILocation(line: 2058, column: 14, scope: !8580)
!8624 = !DILocation(line: 2058, column: 30, scope: !8580)
!8625 = !DILocation(line: 2059, column: 9, scope: !8580)
!8626 = !DILocation(line: 2059, column: 14, scope: !8580)
!8627 = !DILocation(line: 2059, column: 36, scope: !8580)
!8628 = !DILocation(line: 2059, column: 43, scope: !8580)
!8629 = !DILocation(line: 2060, column: 28, scope: !8580)
!8630 = !DILocation(line: 2060, column: 35, scope: !8580)
!8631 = !DILocation(line: 2060, column: 9, scope: !8580)
!8632 = !DILocation(line: 2060, column: 14, scope: !8580)
!8633 = !DILocation(line: 2060, column: 26, scope: !8580)
!8634 = !DILocation(line: 2061, column: 9, scope: !8580)
!8635 = !DILocation(line: 2063, column: 23, scope: !8580)
!8636 = !DILocation(line: 2063, column: 30, scope: !8580)
!8637 = !DILocation(line: 2063, column: 9, scope: !8580)
!8638 = !DILocation(line: 2063, column: 14, scope: !8580)
!8639 = !DILocation(line: 2063, column: 21, scope: !8580)
!8640 = !DILocation(line: 2064, column: 31, scope: !8580)
!8641 = !DILocation(line: 2064, column: 38, scope: !8580)
!8642 = !DILocation(line: 2064, column: 9, scope: !8580)
!8643 = !DILocation(line: 2064, column: 14, scope: !8580)
!8644 = !DILocation(line: 2064, column: 29, scope: !8580)
!8645 = !DILocation(line: 2065, column: 25, scope: !8580)
!8646 = !DILocation(line: 2065, column: 32, scope: !8580)
!8647 = !DILocation(line: 2065, column: 9, scope: !8580)
!8648 = !DILocation(line: 2065, column: 14, scope: !8580)
!8649 = !DILocation(line: 2065, column: 23, scope: !8580)
!8650 = !DILocation(line: 2066, column: 28, scope: !8580)
!8651 = !DILocation(line: 2066, column: 35, scope: !8580)
!8652 = !DILocation(line: 2066, column: 9, scope: !8580)
!8653 = !DILocation(line: 2066, column: 14, scope: !8580)
!8654 = !DILocation(line: 2066, column: 26, scope: !8580)
!8655 = !DILocation(line: 2067, column: 28, scope: !8580)
!8656 = !DILocation(line: 2067, column: 35, scope: !8580)
!8657 = !DILocation(line: 2067, column: 9, scope: !8580)
!8658 = !DILocation(line: 2067, column: 14, scope: !8580)
!8659 = !DILocation(line: 2067, column: 26, scope: !8580)
!8660 = !DILocation(line: 2068, column: 27, scope: !8580)
!8661 = !DILocation(line: 2068, column: 34, scope: !8580)
!8662 = !DILocation(line: 2068, column: 9, scope: !8580)
!8663 = !DILocation(line: 2068, column: 14, scope: !8580)
!8664 = !DILocation(line: 2068, column: 25, scope: !8580)
!8665 = !DILocation(line: 2069, column: 32, scope: !8580)
!8666 = !DILocation(line: 2069, column: 39, scope: !8580)
!8667 = !DILocation(line: 2069, column: 9, scope: !8580)
!8668 = !DILocation(line: 2069, column: 14, scope: !8580)
!8669 = !DILocation(line: 2069, column: 30, scope: !8580)
!8670 = !DILocation(line: 2070, column: 33, scope: !8580)
!8671 = !DILocation(line: 2070, column: 40, scope: !8580)
!8672 = !DILocation(line: 2070, column: 9, scope: !8580)
!8673 = !DILocation(line: 2070, column: 14, scope: !8580)
!8674 = !DILocation(line: 2070, column: 31, scope: !8580)
!8675 = !DILocation(line: 2071, column: 29, scope: !8580)
!8676 = !DILocation(line: 2071, column: 36, scope: !8580)
!8677 = !DILocation(line: 2071, column: 9, scope: !8580)
!8678 = !DILocation(line: 2071, column: 14, scope: !8580)
!8679 = !DILocation(line: 2071, column: 27, scope: !8580)
!8680 = !DILocation(line: 2072, column: 9, scope: !8580)
!8681 = !DILocation(line: 2074, column: 22, scope: !8580)
!8682 = !DILocation(line: 2074, column: 29, scope: !8580)
!8683 = !DILocation(line: 2074, column: 9, scope: !8580)
!8684 = !DILocation(line: 2074, column: 14, scope: !8580)
!8685 = !DILocation(line: 2074, column: 20, scope: !8580)
!8686 = !DILocation(line: 2075, column: 23, scope: !8580)
!8687 = !DILocation(line: 2075, column: 30, scope: !8580)
!8688 = !DILocation(line: 2075, column: 9, scope: !8580)
!8689 = !DILocation(line: 2075, column: 14, scope: !8580)
!8690 = !DILocation(line: 2075, column: 21, scope: !8580)
!8691 = !DILocation(line: 2076, column: 9, scope: !8580)
!8692 = !DILocation(line: 2079, column: 9, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8527, file: !1122, line: 2079, column: 9)
!8694 = !DILocation(line: 2079, column: 16, scope: !8693)
!8695 = !DILocation(line: 2079, column: 9, scope: !8527)
!8696 = !DILocation(line: 2080, column: 37, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8693, file: !1122, line: 2079, column: 27)
!8698 = !DILocation(line: 2080, column: 44, scope: !8697)
!8699 = !DILocation(line: 2080, column: 59, scope: !8697)
!8700 = !DILocation(line: 2080, column: 26, scope: !8697)
!8701 = !DILocation(line: 2080, column: 9, scope: !8697)
!8702 = !DILocation(line: 2080, column: 14, scope: !8697)
!8703 = !DILocation(line: 2080, column: 24, scope: !8697)
!8704 = !DILocation(line: 2081, column: 14, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8697, file: !1122, line: 2081, column: 13)
!8706 = !DILocation(line: 2081, column: 19, scope: !8705)
!8707 = !DILocation(line: 2081, column: 13, scope: !8697)
!8708 = !DILocation(line: 2082, column: 13, scope: !8705)
!8709 = !DILocation(line: 2083, column: 16, scope: !8697)
!8710 = !DILocation(line: 2083, column: 21, scope: !8697)
!8711 = !DILocation(line: 2083, column: 32, scope: !8697)
!8712 = !DILocation(line: 2083, column: 39, scope: !8697)
!8713 = !DILocation(line: 2083, column: 50, scope: !8697)
!8714 = !DILocation(line: 2083, column: 57, scope: !8697)
!8715 = !DILocation(line: 2083, column: 9, scope: !8697)
!8716 = !DILocation(line: 2084, column: 31, scope: !8697)
!8717 = !DILocation(line: 2084, column: 38, scope: !8697)
!8718 = !DILocation(line: 2084, column: 9, scope: !8697)
!8719 = !DILocation(line: 2084, column: 14, scope: !8697)
!8720 = !DILocation(line: 2084, column: 29, scope: !8697)
!8721 = !DILocation(line: 2085, column: 5, scope: !8697)
!8722 = !DILocation(line: 2087, column: 5, scope: !8527)
!8723 = !DILocation(line: 2088, column: 1, scope: !8527)
!8724 = distinct !DISubprogram(name: "avcodec_parameters_to_context", scope: !1122, file: !1122, line: 2090, type: !8725, isLocal: false, isDefinition: true, scopeLine: 2092, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!991, !1374, !8478}
!8727 = !DILocalVariable(name: "codec", arg: 1, scope: !8724, file: !1122, line: 2090, type: !1374)
!8728 = !DILocation(line: 2090, column: 51, scope: !8724)
!8729 = !DILocalVariable(name: "par", arg: 2, scope: !8724, file: !1122, line: 2091, type: !8478)
!8730 = !DILocation(line: 2091, column: 60, scope: !8724)
!8731 = !DILocation(line: 2093, column: 25, scope: !8724)
!8732 = !DILocation(line: 2093, column: 30, scope: !8724)
!8733 = !DILocation(line: 2093, column: 5, scope: !8724)
!8734 = !DILocation(line: 2093, column: 12, scope: !8724)
!8735 = !DILocation(line: 2093, column: 23, scope: !8724)
!8736 = !DILocation(line: 2094, column: 23, scope: !8724)
!8737 = !DILocation(line: 2094, column: 28, scope: !8724)
!8738 = !DILocation(line: 2094, column: 5, scope: !8724)
!8739 = !DILocation(line: 2094, column: 12, scope: !8724)
!8740 = !DILocation(line: 2094, column: 21, scope: !8724)
!8741 = !DILocation(line: 2095, column: 24, scope: !8724)
!8742 = !DILocation(line: 2095, column: 29, scope: !8724)
!8743 = !DILocation(line: 2095, column: 5, scope: !8724)
!8744 = !DILocation(line: 2095, column: 12, scope: !8724)
!8745 = !DILocation(line: 2095, column: 22, scope: !8724)
!8746 = !DILocation(line: 2097, column: 23, scope: !8724)
!8747 = !DILocation(line: 2097, column: 28, scope: !8724)
!8748 = !DILocation(line: 2097, column: 5, scope: !8724)
!8749 = !DILocation(line: 2097, column: 12, scope: !8724)
!8750 = !DILocation(line: 2097, column: 21, scope: !8724)
!8751 = !DILocation(line: 2098, column: 36, scope: !8724)
!8752 = !DILocation(line: 2098, column: 41, scope: !8724)
!8753 = !DILocation(line: 2098, column: 5, scope: !8724)
!8754 = !DILocation(line: 2098, column: 12, scope: !8724)
!8755 = !DILocation(line: 2098, column: 34, scope: !8724)
!8756 = !DILocation(line: 2099, column: 34, scope: !8724)
!8757 = !DILocation(line: 2099, column: 39, scope: !8724)
!8758 = !DILocation(line: 2099, column: 5, scope: !8724)
!8759 = !DILocation(line: 2099, column: 12, scope: !8724)
!8760 = !DILocation(line: 2099, column: 32, scope: !8724)
!8761 = !DILocation(line: 2100, column: 22, scope: !8724)
!8762 = !DILocation(line: 2100, column: 27, scope: !8724)
!8763 = !DILocation(line: 2100, column: 5, scope: !8724)
!8764 = !DILocation(line: 2100, column: 12, scope: !8724)
!8765 = !DILocation(line: 2100, column: 20, scope: !8724)
!8766 = !DILocation(line: 2101, column: 20, scope: !8724)
!8767 = !DILocation(line: 2101, column: 25, scope: !8724)
!8768 = !DILocation(line: 2101, column: 5, scope: !8724)
!8769 = !DILocation(line: 2101, column: 12, scope: !8724)
!8770 = !DILocation(line: 2101, column: 18, scope: !8724)
!8771 = !DILocation(line: 2103, column: 13, scope: !8724)
!8772 = !DILocation(line: 2103, column: 18, scope: !8724)
!8773 = !DILocation(line: 2103, column: 5, scope: !8724)
!8774 = !DILocation(line: 2105, column: 26, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8724, file: !1122, line: 2103, column: 30)
!8776 = !DILocation(line: 2105, column: 31, scope: !8775)
!8777 = !DILocation(line: 2105, column: 9, scope: !8775)
!8778 = !DILocation(line: 2105, column: 16, scope: !8775)
!8779 = !DILocation(line: 2105, column: 24, scope: !8775)
!8780 = !DILocation(line: 2106, column: 24, scope: !8775)
!8781 = !DILocation(line: 2106, column: 29, scope: !8775)
!8782 = !DILocation(line: 2106, column: 9, scope: !8775)
!8783 = !DILocation(line: 2106, column: 16, scope: !8775)
!8784 = !DILocation(line: 2106, column: 22, scope: !8775)
!8785 = !DILocation(line: 2107, column: 25, scope: !8775)
!8786 = !DILocation(line: 2107, column: 30, scope: !8775)
!8787 = !DILocation(line: 2107, column: 9, scope: !8775)
!8788 = !DILocation(line: 2107, column: 16, scope: !8775)
!8789 = !DILocation(line: 2107, column: 23, scope: !8775)
!8790 = !DILocation(line: 2108, column: 30, scope: !8775)
!8791 = !DILocation(line: 2108, column: 35, scope: !8775)
!8792 = !DILocation(line: 2108, column: 9, scope: !8775)
!8793 = !DILocation(line: 2108, column: 16, scope: !8775)
!8794 = !DILocation(line: 2108, column: 28, scope: !8775)
!8795 = !DILocation(line: 2109, column: 30, scope: !8775)
!8796 = !DILocation(line: 2109, column: 35, scope: !8775)
!8797 = !DILocation(line: 2109, column: 9, scope: !8775)
!8798 = !DILocation(line: 2109, column: 16, scope: !8775)
!8799 = !DILocation(line: 2109, column: 28, scope: !8775)
!8800 = !DILocation(line: 2110, column: 34, scope: !8775)
!8801 = !DILocation(line: 2110, column: 39, scope: !8775)
!8802 = !DILocation(line: 2110, column: 9, scope: !8775)
!8803 = !DILocation(line: 2110, column: 16, scope: !8775)
!8804 = !DILocation(line: 2110, column: 32, scope: !8775)
!8805 = !DILocation(line: 2111, column: 28, scope: !8775)
!8806 = !DILocation(line: 2111, column: 33, scope: !8775)
!8807 = !DILocation(line: 2111, column: 9, scope: !8775)
!8808 = !DILocation(line: 2111, column: 16, scope: !8775)
!8809 = !DILocation(line: 2111, column: 26, scope: !8775)
!8810 = !DILocation(line: 2112, column: 29, scope: !8775)
!8811 = !DILocation(line: 2112, column: 34, scope: !8775)
!8812 = !DILocation(line: 2112, column: 9, scope: !8775)
!8813 = !DILocation(line: 2112, column: 16, scope: !8775)
!8814 = !DILocation(line: 2112, column: 27, scope: !8775)
!8815 = !DILocation(line: 2113, column: 41, scope: !8775)
!8816 = !DILocation(line: 2113, column: 46, scope: !8775)
!8817 = !DILocation(line: 2113, column: 9, scope: !8775)
!8818 = !DILocation(line: 2113, column: 16, scope: !8775)
!8819 = !DILocation(line: 2113, column: 39, scope: !8775)
!8820 = !DILocation(line: 2114, column: 9, scope: !8775)
!8821 = !DILocation(line: 2114, column: 16, scope: !8775)
!8822 = !DILocation(line: 2114, column: 38, scope: !8775)
!8823 = !DILocation(line: 2114, column: 43, scope: !8775)
!8824 = !DILocation(line: 2115, column: 31, scope: !8775)
!8825 = !DILocation(line: 2115, column: 36, scope: !8775)
!8826 = !DILocation(line: 2115, column: 9, scope: !8775)
!8827 = !DILocation(line: 2115, column: 16, scope: !8775)
!8828 = !DILocation(line: 2115, column: 29, scope: !8775)
!8829 = !DILocation(line: 2116, column: 9, scope: !8775)
!8830 = !DILocation(line: 2118, column: 29, scope: !8775)
!8831 = !DILocation(line: 2118, column: 34, scope: !8775)
!8832 = !DILocation(line: 2118, column: 9, scope: !8775)
!8833 = !DILocation(line: 2118, column: 16, scope: !8775)
!8834 = !DILocation(line: 2118, column: 27, scope: !8775)
!8835 = !DILocation(line: 2119, column: 33, scope: !8775)
!8836 = !DILocation(line: 2119, column: 38, scope: !8775)
!8837 = !DILocation(line: 2119, column: 9, scope: !8775)
!8838 = !DILocation(line: 2119, column: 16, scope: !8775)
!8839 = !DILocation(line: 2119, column: 31, scope: !8775)
!8840 = !DILocation(line: 2120, column: 27, scope: !8775)
!8841 = !DILocation(line: 2120, column: 32, scope: !8775)
!8842 = !DILocation(line: 2120, column: 9, scope: !8775)
!8843 = !DILocation(line: 2120, column: 16, scope: !8775)
!8844 = !DILocation(line: 2120, column: 25, scope: !8775)
!8845 = !DILocation(line: 2121, column: 30, scope: !8775)
!8846 = !DILocation(line: 2121, column: 35, scope: !8775)
!8847 = !DILocation(line: 2121, column: 9, scope: !8775)
!8848 = !DILocation(line: 2121, column: 16, scope: !8775)
!8849 = !DILocation(line: 2121, column: 28, scope: !8775)
!8850 = !DILocation(line: 2122, column: 30, scope: !8775)
!8851 = !DILocation(line: 2122, column: 35, scope: !8775)
!8852 = !DILocation(line: 2122, column: 9, scope: !8775)
!8853 = !DILocation(line: 2122, column: 16, scope: !8775)
!8854 = !DILocation(line: 2122, column: 28, scope: !8775)
!8855 = !DILocation(line: 2123, column: 29, scope: !8775)
!8856 = !DILocation(line: 2123, column: 34, scope: !8775)
!8857 = !DILocation(line: 2123, column: 9, scope: !8775)
!8858 = !DILocation(line: 2123, column: 16, scope: !8775)
!8859 = !DILocation(line: 2123, column: 27, scope: !8775)
!8860 = !DILocation(line: 2125, column: 34, scope: !8775)
!8861 = !DILocation(line: 2125, column: 39, scope: !8775)
!8862 = !DILocation(line: 2125, column: 9, scope: !8775)
!8863 = !DILocation(line: 2125, column: 16, scope: !8775)
!8864 = !DILocation(line: 2125, column: 32, scope: !8775)
!8865 = !DILocation(line: 2124, column: 9, scope: !8775)
!8866 = !DILocation(line: 2124, column: 16, scope: !8775)
!8867 = !DILocation(line: 2124, column: 22, scope: !8775)
!8868 = !DILocation(line: 2126, column: 35, scope: !8775)
!8869 = !DILocation(line: 2126, column: 40, scope: !8775)
!8870 = !DILocation(line: 2126, column: 9, scope: !8775)
!8871 = !DILocation(line: 2126, column: 16, scope: !8775)
!8872 = !DILocation(line: 2126, column: 33, scope: !8775)
!8873 = !DILocation(line: 2127, column: 31, scope: !8775)
!8874 = !DILocation(line: 2127, column: 36, scope: !8775)
!8875 = !DILocation(line: 2127, column: 9, scope: !8775)
!8876 = !DILocation(line: 2127, column: 16, scope: !8775)
!8877 = !DILocation(line: 2127, column: 29, scope: !8775)
!8878 = !DILocation(line: 2128, column: 9, scope: !8775)
!8879 = !DILocation(line: 2130, column: 24, scope: !8775)
!8880 = !DILocation(line: 2130, column: 29, scope: !8775)
!8881 = !DILocation(line: 2130, column: 9, scope: !8775)
!8882 = !DILocation(line: 2130, column: 16, scope: !8775)
!8883 = !DILocation(line: 2130, column: 22, scope: !8775)
!8884 = !DILocation(line: 2131, column: 25, scope: !8775)
!8885 = !DILocation(line: 2131, column: 30, scope: !8775)
!8886 = !DILocation(line: 2131, column: 9, scope: !8775)
!8887 = !DILocation(line: 2131, column: 16, scope: !8775)
!8888 = !DILocation(line: 2131, column: 23, scope: !8775)
!8889 = !DILocation(line: 2132, column: 9, scope: !8775)
!8890 = !DILocation(line: 2135, column: 9, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8724, file: !1122, line: 2135, column: 9)
!8892 = !DILocation(line: 2135, column: 14, scope: !8891)
!8893 = !DILocation(line: 2135, column: 9, scope: !8724)
!8894 = !DILocation(line: 2136, column: 19, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8891, file: !1122, line: 2135, column: 25)
!8896 = !DILocation(line: 2136, column: 26, scope: !8895)
!8897 = !DILocation(line: 2136, column: 18, scope: !8895)
!8898 = !DILocation(line: 2136, column: 9, scope: !8895)
!8899 = !DILocation(line: 2137, column: 39, scope: !8895)
!8900 = !DILocation(line: 2137, column: 44, scope: !8895)
!8901 = !DILocation(line: 2137, column: 59, scope: !8895)
!8902 = !DILocation(line: 2137, column: 28, scope: !8895)
!8903 = !DILocation(line: 2137, column: 9, scope: !8895)
!8904 = !DILocation(line: 2137, column: 16, scope: !8895)
!8905 = !DILocation(line: 2137, column: 26, scope: !8895)
!8906 = !DILocation(line: 2138, column: 14, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8895, file: !1122, line: 2138, column: 13)
!8908 = !DILocation(line: 2138, column: 21, scope: !8907)
!8909 = !DILocation(line: 2138, column: 13, scope: !8895)
!8910 = !DILocation(line: 2139, column: 13, scope: !8907)
!8911 = !DILocation(line: 2140, column: 16, scope: !8895)
!8912 = !DILocation(line: 2140, column: 23, scope: !8895)
!8913 = !DILocation(line: 2140, column: 34, scope: !8895)
!8914 = !DILocation(line: 2140, column: 39, scope: !8895)
!8915 = !DILocation(line: 2140, column: 50, scope: !8895)
!8916 = !DILocation(line: 2140, column: 55, scope: !8895)
!8917 = !DILocation(line: 2140, column: 9, scope: !8895)
!8918 = !DILocation(line: 2141, column: 33, scope: !8895)
!8919 = !DILocation(line: 2141, column: 38, scope: !8895)
!8920 = !DILocation(line: 2141, column: 9, scope: !8895)
!8921 = !DILocation(line: 2141, column: 16, scope: !8895)
!8922 = !DILocation(line: 2141, column: 31, scope: !8895)
!8923 = !DILocation(line: 2142, column: 5, scope: !8895)
!8924 = !DILocation(line: 2144, column: 5, scope: !8724)
!8925 = !DILocation(line: 2145, column: 1, scope: !8724)
!8926 = distinct !DISubprogram(name: "ff_alloc_a53_sei", scope: !1122, file: !1122, line: 2147, type: !8927, isLocal: false, isDefinition: true, scopeLine: 2149, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{!991, !1645, !1171, !7951, !8303}
!8929 = !DILocalVariable(name: "frame", arg: 1, scope: !8926, file: !1122, line: 2147, type: !1645)
!8930 = !DILocation(line: 2147, column: 37, scope: !8926)
!8931 = !DILocalVariable(name: "prefix_len", arg: 2, scope: !8926, file: !1122, line: 2147, type: !1171)
!8932 = !DILocation(line: 2147, column: 51, scope: !8926)
!8933 = !DILocalVariable(name: "data", arg: 3, scope: !8926, file: !1122, line: 2148, type: !7951)
!8934 = !DILocation(line: 2148, column: 29, scope: !8926)
!8935 = !DILocalVariable(name: "sei_size", arg: 4, scope: !8926, file: !1122, line: 2148, type: !8303)
!8936 = !DILocation(line: 2148, column: 43, scope: !8926)
!8937 = !DILocalVariable(name: "side_data", scope: !8926, file: !1122, line: 2150, type: !1437)
!8938 = !DILocation(line: 2150, column: 22, scope: !8926)
!8939 = !DILocalVariable(name: "sei_data", scope: !8926, file: !1122, line: 2151, type: !958)
!8940 = !DILocation(line: 2151, column: 14, scope: !8926)
!8941 = !DILocation(line: 2153, column: 9, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8926, file: !1122, line: 2153, column: 9)
!8943 = !DILocation(line: 2153, column: 9, scope: !8926)
!8944 = !DILocation(line: 2154, column: 44, scope: !8942)
!8945 = !DILocation(line: 2154, column: 21, scope: !8942)
!8946 = !DILocation(line: 2154, column: 19, scope: !8942)
!8947 = !DILocation(line: 2154, column: 9, scope: !8942)
!8948 = !DILocation(line: 2156, column: 10, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8926, file: !1122, line: 2156, column: 9)
!8950 = !DILocation(line: 2156, column: 9, scope: !8926)
!8951 = !DILocation(line: 2157, column: 10, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8949, file: !1122, line: 2156, column: 21)
!8953 = !DILocation(line: 2157, column: 15, scope: !8952)
!8954 = !DILocation(line: 2158, column: 9, scope: !8952)
!8955 = !DILocation(line: 2161, column: 17, scope: !8926)
!8956 = !DILocation(line: 2161, column: 28, scope: !8926)
!8957 = !DILocation(line: 2161, column: 33, scope: !8926)
!8958 = !DILocation(line: 2161, column: 6, scope: !8926)
!8959 = !DILocation(line: 2161, column: 15, scope: !8926)
!8960 = !DILocation(line: 2162, column: 25, scope: !8926)
!8961 = !DILocation(line: 2162, column: 24, scope: !8926)
!8962 = !DILocation(line: 2162, column: 36, scope: !8926)
!8963 = !DILocation(line: 2162, column: 34, scope: !8926)
!8964 = !DILocation(line: 2162, column: 13, scope: !8926)
!8965 = !DILocation(line: 2162, column: 6, scope: !8926)
!8966 = !DILocation(line: 2162, column: 11, scope: !8926)
!8967 = !DILocation(line: 2163, column: 11, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8926, file: !1122, line: 2163, column: 9)
!8969 = !DILocation(line: 2163, column: 10, scope: !8968)
!8970 = !DILocation(line: 2163, column: 9, scope: !8926)
!8971 = !DILocation(line: 2164, column: 9, scope: !8968)
!8972 = !DILocation(line: 2165, column: 27, scope: !8926)
!8973 = !DILocation(line: 2165, column: 26, scope: !8926)
!8974 = !DILocation(line: 2165, column: 34, scope: !8926)
!8975 = !DILocation(line: 2165, column: 32, scope: !8926)
!8976 = !DILocation(line: 2165, column: 14, scope: !8926)
!8977 = !DILocation(line: 2168, column: 5, scope: !8926)
!8978 = !DILocation(line: 2168, column: 17, scope: !8926)
!8979 = !DILocation(line: 2169, column: 5, scope: !8926)
!8980 = !DILocation(line: 2169, column: 17, scope: !8926)
!8981 = !DILocation(line: 2170, column: 5, scope: !8926)
!8982 = !DILocation(line: 2170, column: 17, scope: !8926)
!8983 = !DILocation(line: 2178, column: 32, scope: !8926)
!8984 = !DILocation(line: 2178, column: 41, scope: !8926)
!8985 = !DILocation(line: 2178, column: 48, scope: !8926)
!8986 = !DILocation(line: 2178, column: 51, scope: !8926)
!8987 = !DILocation(line: 2179, column: 5, scope: !8926)
!8988 = !DILocation(line: 2179, column: 17, scope: !8926)
!8989 = !DILocation(line: 2180, column: 21, scope: !8926)
!8990 = !DILocation(line: 2180, column: 32, scope: !8926)
!8991 = !DILocation(line: 2180, column: 36, scope: !8926)
!8992 = !DILocation(line: 2180, column: 40, scope: !8926)
!8993 = !DILocation(line: 2180, column: 48, scope: !8926)
!8994 = !DILocation(line: 2180, column: 19, scope: !8926)
!8995 = !DILocation(line: 2180, column: 5, scope: !8926)
!8996 = !DILocation(line: 2180, column: 17, scope: !8926)
!8997 = !DILocation(line: 2181, column: 5, scope: !8926)
!8998 = !DILocation(line: 2181, column: 17, scope: !8926)
!8999 = !DILocation(line: 2183, column: 12, scope: !8926)
!9000 = !DILocation(line: 2183, column: 21, scope: !8926)
!9001 = !DILocation(line: 2183, column: 27, scope: !8926)
!9002 = !DILocation(line: 2183, column: 38, scope: !8926)
!9003 = !DILocation(line: 2183, column: 44, scope: !8926)
!9004 = !DILocation(line: 2183, column: 55, scope: !8926)
!9005 = !DILocation(line: 2183, column: 5, scope: !8926)
!9006 = !DILocation(line: 2185, column: 14, scope: !8926)
!9007 = !DILocation(line: 2185, column: 25, scope: !8926)
!9008 = !DILocation(line: 2185, column: 29, scope: !8926)
!9009 = !DILocation(line: 2185, column: 5, scope: !8926)
!9010 = !DILocation(line: 2185, column: 34, scope: !8926)
!9011 = !DILocation(line: 2187, column: 5, scope: !8926)
!9012 = !DILocation(line: 2188, column: 1, scope: !8926)
!9013 = distinct !DISubprogram(name: "ff_guess_coded_bitrate", scope: !1122, file: !1122, line: 2190, type: !5735, isLocal: false, isDefinition: true, scopeLine: 2191, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!9014 = !DILocation(line: 159, column: 77, scope: !4056, inlinedAt: !9015)
!9015 = distinct !DILocation(line: 2197, column: 21, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !1122, line: 2196, column: 9)
!9017 = !DILocation(line: 161, column: 16, scope: !4056, inlinedAt: !9015)
!9018 = !DILocalVariable(name: "avctx", arg: 1, scope: !9013, file: !1122, line: 2190, type: !1374)
!9019 = !DILocation(line: 2190, column: 48, scope: !9013)
!9020 = !DILocalVariable(name: "framerate", scope: !9013, file: !1122, line: 2192, type: !1003)
!9021 = !DILocation(line: 2192, column: 16, scope: !9013)
!9022 = !DILocation(line: 2192, column: 28, scope: !9013)
!9023 = !DILocation(line: 2192, column: 35, scope: !9013)
!9024 = !DILocalVariable(name: "bits_per_coded_sample", scope: !9013, file: !1122, line: 2193, type: !991)
!9025 = !DILocation(line: 2193, column: 9, scope: !9013)
!9026 = !DILocation(line: 2193, column: 33, scope: !9013)
!9027 = !DILocation(line: 2193, column: 40, scope: !9013)
!9028 = !DILocalVariable(name: "bitrate", scope: !9013, file: !1122, line: 2194, type: !997)
!9029 = !DILocation(line: 2194, column: 13, scope: !9013)
!9030 = !DILocation(line: 2196, column: 21, scope: !9016)
!9031 = !DILocation(line: 2196, column: 11, scope: !9016)
!9032 = !DILocation(line: 2196, column: 25, scope: !9016)
!9033 = !DILocation(line: 2196, column: 38, scope: !9034)
!9034 = !DILexicalBlockFile(scope: !9016, file: !1122, discriminator: 1)
!9035 = !DILocation(line: 2196, column: 28, scope: !9034)
!9036 = !DILocation(line: 2196, column: 9, scope: !9034)
!9037 = !DILocation(line: 2197, column: 30, scope: !9016)
!9038 = !DILocation(line: 2197, column: 37, scope: !9016)
!9039 = !DILocation(line: 2197, column: 21, scope: !9016)
!9040 = !DILocation(line: 161, column: 20, scope: !4056, inlinedAt: !9015)
!9041 = !DILocation(line: 161, column: 24, scope: !4056, inlinedAt: !9015)
!9042 = !DILocation(line: 161, column: 31, scope: !4056, inlinedAt: !9015)
!9043 = !DILocation(line: 162, column: 12, scope: !4056, inlinedAt: !9015)
!9044 = !DILocation(line: 162, column: 5, scope: !4056, inlinedAt: !9015)
!9045 = !DILocation(line: 2197, column: 21, scope: !9034)
!9046 = !DILocation(line: 2197, column: 9, scope: !9016)
!9047 = !DILocation(line: 2198, column: 21, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9013, file: !1122, line: 2198, column: 9)
!9049 = !DILocation(line: 2198, column: 11, scope: !9048)
!9050 = !DILocation(line: 2198, column: 25, scope: !9048)
!9051 = !DILocation(line: 2198, column: 38, scope: !9052)
!9052 = !DILexicalBlockFile(scope: !9048, file: !1122, discriminator: 1)
!9053 = !DILocation(line: 2198, column: 28, scope: !9052)
!9054 = !DILocation(line: 2198, column: 9, scope: !9052)
!9055 = !DILocation(line: 2199, column: 9, scope: !9048)
!9056 = !DILocation(line: 2201, column: 10, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9013, file: !1122, line: 2201, column: 9)
!9058 = !DILocation(line: 2201, column: 9, scope: !9013)
!9059 = !DILocalVariable(name: "desc", scope: !9060, file: !1122, line: 2202, type: !3060)
!9060 = distinct !DILexicalBlock(scope: !9057, file: !1122, line: 2201, column: 33)
!9061 = !DILocation(line: 2202, column: 35, scope: !9060)
!9062 = !DILocation(line: 2202, column: 62, scope: !9060)
!9063 = !DILocation(line: 2202, column: 69, scope: !9060)
!9064 = !DILocation(line: 2202, column: 42, scope: !9060)
!9065 = !DILocation(line: 2203, column: 55, scope: !9060)
!9066 = !DILocation(line: 2203, column: 33, scope: !9060)
!9067 = !DILocation(line: 2203, column: 31, scope: !9060)
!9068 = !DILocation(line: 2204, column: 5, scope: !9060)
!9069 = !DILocation(line: 2205, column: 24, scope: !9013)
!9070 = !DILocation(line: 2205, column: 15, scope: !9013)
!9071 = !DILocation(line: 2205, column: 48, scope: !9013)
!9072 = !DILocation(line: 2205, column: 55, scope: !9013)
!9073 = !DILocation(line: 2205, column: 46, scope: !9013)
!9074 = !DILocation(line: 2205, column: 63, scope: !9013)
!9075 = !DILocation(line: 2205, column: 70, scope: !9013)
!9076 = !DILocation(line: 2205, column: 61, scope: !9013)
!9077 = !DILocation(line: 2206, column: 25, scope: !9013)
!9078 = !DILocation(line: 2206, column: 15, scope: !9013)
!9079 = !DILocation(line: 2205, column: 77, scope: !9013)
!9080 = !DILocation(line: 2206, column: 41, scope: !9013)
!9081 = !DILocation(line: 2206, column: 31, scope: !9013)
!9082 = !DILocation(line: 2206, column: 29, scope: !9013)
!9083 = !DILocation(line: 2205, column: 13, scope: !9013)
!9084 = !DILocation(line: 2208, column: 12, scope: !9013)
!9085 = !DILocation(line: 2208, column: 5, scope: !9013)
!9086 = !DILocation(line: 2209, column: 1, scope: !9013)
!9087 = distinct !DISubprogram(name: "ff_int_from_list_or_default", scope: !1122, file: !1122, line: 2211, type: !9088, isLocal: false, isDefinition: true, scopeLine: 2213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1130)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!991, !964, !977, !991, !1347, !991}
!9090 = !DILocalVariable(name: "ctx", arg: 1, scope: !9087, file: !1122, line: 2211, type: !964)
!9091 = !DILocation(line: 2211, column: 39, scope: !9087)
!9092 = !DILocalVariable(name: "val_name", arg: 2, scope: !9087, file: !1122, line: 2211, type: !977)
!9093 = !DILocation(line: 2211, column: 57, scope: !9087)
!9094 = !DILocalVariable(name: "val", arg: 3, scope: !9087, file: !1122, line: 2211, type: !991)
!9095 = !DILocation(line: 2211, column: 71, scope: !9087)
!9096 = !DILocalVariable(name: "array_valid_values", arg: 4, scope: !9087, file: !1122, line: 2212, type: !1347)
!9097 = !DILocation(line: 2212, column: 45, scope: !9087)
!9098 = !DILocalVariable(name: "default_value", arg: 5, scope: !9087, file: !1122, line: 2212, type: !991)
!9099 = !DILocation(line: 2212, column: 69, scope: !9087)
!9100 = !DILocalVariable(name: "i", scope: !9087, file: !1122, line: 2214, type: !991)
!9101 = !DILocation(line: 2214, column: 9, scope: !9087)
!9102 = !DILocalVariable(name: "ref_val", scope: !9087, file: !1122, line: 2214, type: !991)
!9103 = !DILocation(line: 2214, column: 16, scope: !9087)
!9104 = !DILocation(line: 2216, column: 5, scope: !9087)
!9105 = !DILocation(line: 2217, column: 38, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9087, file: !1122, line: 2216, column: 15)
!9107 = !DILocation(line: 2217, column: 19, scope: !9106)
!9108 = !DILocation(line: 2217, column: 17, scope: !9106)
!9109 = !DILocation(line: 2218, column: 13, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !1122, line: 2218, column: 13)
!9111 = !DILocation(line: 2218, column: 21, scope: !9110)
!9112 = !DILocation(line: 2218, column: 13, scope: !9106)
!9113 = !DILocation(line: 2219, column: 13, scope: !9110)
!9114 = !DILocation(line: 2220, column: 13, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9106, file: !1122, line: 2220, column: 13)
!9116 = !DILocation(line: 2220, column: 20, scope: !9115)
!9117 = !DILocation(line: 2220, column: 17, scope: !9115)
!9118 = !DILocation(line: 2220, column: 13, scope: !9106)
!9119 = !DILocation(line: 2221, column: 20, scope: !9115)
!9120 = !DILocation(line: 2221, column: 13, scope: !9115)
!9121 = !DILocation(line: 2222, column: 10, scope: !9106)
!9122 = !DILocation(line: 2216, column: 5, scope: !9123)
!9123 = !DILexicalBlockFile(scope: !9087, file: !1122, discriminator: 1)
!9124 = distinct !{!9124, !9104}
!9125 = !DILocation(line: 2225, column: 12, scope: !9087)
!9126 = !DILocation(line: 2226, column: 68, scope: !9087)
!9127 = !DILocation(line: 2226, column: 78, scope: !9087)
!9128 = !DILocation(line: 2226, column: 83, scope: !9087)
!9129 = !DILocation(line: 2225, column: 5, scope: !9087)
!9130 = !DILocation(line: 2227, column: 12, scope: !9087)
!9131 = !DILocation(line: 2227, column: 5, scope: !9087)
!9132 = !DILocation(line: 2228, column: 1, scope: !9087)
