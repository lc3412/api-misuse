; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac9dec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac9dec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.ATRAC9BlockConfig = type { i64, [5 x i32], [5 x [2 x i32]], i32 }
%struct.HuffmanCodebook = type { i8*, i16*, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.ATRAC9Context = type { %struct.AVCodecContext*, %struct.AVFloatDSPContext*, %struct.FFTContext, [5 x %struct.ATRAC9BlockData], %struct.AVLFG, i32, i32, i32, i32, %struct.ATRAC9BlockConfig*, [2 x [8 x %struct.VLC]], [2 x [8 x [4 x %struct.VLC]]], [48 x [48 x i8]], [256 x float], [256 x float] }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.ATRAC9BlockData = type { [2 x %struct.ATRAC9ChannelData], i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32], i32, [30 x i32], [4 x i8] }
%struct.ATRAC9ChannelData = type { i32, i32, [4 x i32], [31 x i32], [31 x i32], [30 x i32], [30 x i32], [30 x i32], [30 x i32], [256 x i32], [256 x i32], [16 x i8], [256 x float], [128 x float] }
%struct.AVLFG = type { [64 x i32], i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%union.unaligned_32 = type { i32 }
%union.anon = type { i32 }

@at9_q_unit_to_codebookidx = constant [30 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03", align 16
@.str = private unnamed_addr constant [7 x i8] c"atrac9\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"ATRAC9 (Adaptive TRansform Acoustic Coding 9)\00", align 1
@ff_atrac9_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 88084, i32 258, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 51648, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @atrac9_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @atrac9_decode_frame, i32 (%struct.AVCodecContext*)* @atrac9_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @atrac9_decode_flush, i32 3, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [27 x i8] c"Invalid extradata length!\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Unsupported version (%i)!\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Incorrect magic byte!\0A\00", align 1
@at9_tab_samplerates = internal constant [16 x i32] [i32 11025, i32 12000, i32 16000, i32 22050, i32 24000, i32 32000, i32 44100, i32 48000, i32 44100, i32 48000, i32 64000, i32 88200, i32 96000, i32 128000, i32 176400, i32 192000], align 16
@.str.5 = private unnamed_addr constant [25 x i8] c"Incorrect block config!\0A\00", align 1
@at9_block_layout = internal constant [6 x %struct.ATRAC9BlockConfig] [%struct.ATRAC9BlockConfig { i64 4, [5 x i32] zeroinitializer, [5 x [2 x i32]] zeroinitializer, i32 1 }, %struct.ATRAC9BlockConfig { i64 3, [5 x i32] zeroinitializer, [5 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer], i32 2 }, %struct.ATRAC9BlockConfig { i64 3, [5 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer], i32 1 }, %struct.ATRAC9BlockConfig { i64 1551, [5 x i32] [i32 1, i32 0, i32 2, i32 1, i32 0], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 0], [2 x i32] [i32 3, i32 0], [2 x i32] [i32 4, i32 5], [2 x i32] zeroinitializer], i32 4 }, %struct.ATRAC9BlockConfig { i64 1599, [5 x i32] [i32 1, i32 0, i32 2, i32 1, i32 1], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 0], [2 x i32] [i32 3, i32 0], [2 x i32] [i32 4, i32 5], [2 x i32] [i32 6, i32 7]], i32 5 }, %struct.ATRAC9BlockConfig { i64 51, [5 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 3], [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer], i32 2 }], align 16
@.str.6 = private unnamed_addr constant [29 x i8] c"Incorrect verification bit!\0A\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"Invalid superframe index!\0A\00", align 1
@at9_tab_sri_frame_log2 = internal constant [16 x i8] c"\06\06\07\07\07\08\08\08\06\06\07\07\07\08\08\08", align 16
@at9_tab_b_dist = internal constant [48 x i8] c"\01\01\01\01\02\02\02\02\03\03\03\04\04\05\05\06\07\08\09\0A\0B\0C\0D\0F\06\12\13\14\15\16\17\18\19\1A\1A\1B\1B\1C\1C\1C\1D\1D\1D\1D\1E\1E\1E\1E", align 16
@at9_huffman_sf_unsigned = internal constant [7 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @huff_sfb_a1_bits, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @huff_sfb_a1_codes, i32 0, i32 0), i32 2, i32 1, i32 0, i32 1, i32 1 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @huff_sfb_a2_bits, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @huff_sfb_a2_codes, i32 0, i32 0), i32 4, i32 1, i32 0, i32 2, i32 3 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_sfb_a3_bits, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @huff_sfb_a3_codes, i32 0, i32 0), i32 8, i32 1, i32 0, i32 3, i32 6 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @huff_sfb_a4_bits, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @huff_sfb_a4_codes, i32 0, i32 0), i32 16, i32 1, i32 0, i32 4, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_sfb_a5_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_sfb_a5_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_sfb_a6_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_sfb_a6_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 8 }], align 16
@at9_huffman_sf_signed = internal constant [6 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @huff_sfb_b2_bits, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @huff_sfb_b2_codes, i32 0, i32 0), i32 4, i32 1, i32 0, i32 2, i32 2 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_sfb_b3_bits, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @huff_sfb_b3_codes, i32 0, i32 0), i32 8, i32 1, i32 0, i32 3, i32 6 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @huff_sfb_b4_bits, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @huff_sfb_b4_codes, i32 0, i32 0), i32 16, i32 1, i32 0, i32 4, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_sfb_b5_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_sfb_b5_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 8 }], align 16
@at9_huffman_coeffs = internal constant [2 x [8 x [4 x %struct.HuffmanCodebook]]] [[8 x [4 x %struct.HuffmanCodebook]] [[4 x %struct.HuffmanCodebook] zeroinitializer, [4 x %struct.HuffmanCodebook] zeroinitializer, [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @huff_spec_a21_bits, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @huff_spec_a21_codes, i32 0, i32 0), i32 16, i32 2, i32 1, i32 2, i32 3 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a22_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a22_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a23_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a23_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a24_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a24_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a31_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a31_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a32_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a32_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a33_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a33_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a34_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a34_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a41_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a41_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a42_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a42_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a43_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a43_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_a44_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_a44_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_a51_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_a51_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 6 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_a52_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_a52_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 6 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_a53_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_a53_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_a54_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_a54_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 8 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a61_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a61_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a62_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a62_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a63_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a63_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_a64_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_a64_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 9 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_a71_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_a71_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_a72_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_a72_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_a73_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_a73_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_a74_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_a74_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 10 }]], [8 x [4 x %struct.HuffmanCodebook]] [[4 x %struct.HuffmanCodebook] zeroinitializer, [4 x %struct.HuffmanCodebook] zeroinitializer, [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b22_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b22_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b23_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b23_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b24_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b24_codes, i32 0, i32 0), i32 256, i32 4, i32 2, i32 2, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b32_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b32_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b33_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b33_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b34_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b34_codes, i32 0, i32 0), i32 64, i32 2, i32 1, i32 3, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b42_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b42_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b43_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b43_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_spec_b44_bits, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @huff_spec_b44_codes, i32 0, i32 0), i32 256, i32 2, i32 1, i32 4, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_b52_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_b52_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 7 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_b53_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_b53_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @huff_spec_b54_bits, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @huff_spec_b54_codes, i32 0, i32 0), i32 32, i32 1, i32 0, i32 5, i32 9 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b62_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b62_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 8 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b63_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b63_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @huff_spec_b64_bits, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @huff_spec_b64_codes, i32 0, i32 0), i32 64, i32 1, i32 0, i32 6, i32 10 }], [4 x %struct.HuffmanCodebook] [%struct.HuffmanCodebook zeroinitializer, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_b72_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_b72_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 9 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_b73_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_b73_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 10 }, %struct.HuffmanCodebook { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @huff_spec_b74_bits, i32 0, i32 0), i16* getelementptr inbounds ([128 x i16], [128 x i16]* @huff_spec_b74_codes, i32 0, i32 0), i32 128, i32 1, i32 0, i32 7, i32 10 }]]], align 16
@huff_sfb_a1_bits = internal constant [2 x i8] c"\01\01", align 1
@huff_sfb_a1_codes = internal constant [2 x i16] [i16 0, i16 1], align 2
@huff_sfb_a2_bits = internal constant [4 x i8] c"\01\03\03\02", align 1
@huff_sfb_a2_codes = internal constant [4 x i16] [i16 0, i16 6, i16 7, i16 2], align 2
@huff_sfb_a3_bits = internal constant [8 x i8] c"\02\02\04\06\06\05\03\02", align 1
@huff_sfb_a3_codes = internal constant [8 x i16] [i16 0, i16 1, i16 14, i16 62, i16 63, i16 30, i16 6, i16 2], align 16
@huff_sfb_a4_bits = internal constant [16 x i8] c"\02\02\04\05\06\07\08\08\08\08\08\08\06\05\04\02", align 16
@huff_sfb_a4_codes = internal constant [16 x i16] [i16 1, i16 2, i16 0, i16 6, i16 15, i16 19, i16 35, i16 36, i16 37, i16 34, i16 33, i16 32, i16 14, i16 5, i16 1, i16 3], align 16
@huff_sfb_a5_bits = internal constant [32 x i8] c"\02\03\03\04\05\05\06\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\07\07\06\05\05\04\03", align 16
@huff_sfb_a5_codes = internal constant [32 x i16] [i16 2, i16 1, i16 7, i16 13, i16 12, i16 24, i16 27, i16 33, i16 63, i16 106, i16 107, i16 104, i16 115, i16 121, i16 124, i16 125, i16 122, i16 123, i16 120, i16 114, i16 68, i16 69, i16 71, i16 70, i16 105, i16 56, i16 32, i16 29, i16 25, i16 9, i16 5, i16 0], align 16
@huff_sfb_a6_bits = internal constant [64 x i8] c"\03\03\04\04\05\05\06\06\06\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\07\07\07\06\06\05\05\05\04\04\04", align 16
@huff_sfb_a6_codes = internal constant [64 x i16] [i16 0, i16 1, i16 4, i16 5, i16 18, i16 19, i16 46, i16 47, i16 48, i16 102, i16 103, i16 214, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 104, i16 105, i16 106, i16 49, i16 50, i16 20, i16 21, i16 22, i16 6, i16 7, i16 8], align 16
@huff_sfb_b2_bits = internal constant [4 x i8] c"\01\02\00\02", align 1
@huff_sfb_b2_codes = internal constant [4 x i16] [i16 0, i16 3, i16 0, i16 2], align 2
@huff_sfb_b3_bits = internal constant [8 x i8] c"\01\03\05\06\00\06\04\02", align 1
@huff_sfb_b3_codes = internal constant [8 x i16] [i16 1, i16 0, i16 4, i16 11, i16 0, i16 10, i16 3, i16 1], align 16
@huff_sfb_b4_bits = internal constant [16 x i8] c"\01\03\04\05\05\07\08\08\00\08\08\07\06\06\04\03", align 16
@huff_sfb_b4_codes = internal constant [16 x i16] [i16 1, i16 1, i16 4, i16 14, i16 15, i16 44, i16 90, i16 93, i16 0, i16 92, i16 91, i16 47, i16 21, i16 20, i16 6, i16 0], align 16
@huff_sfb_b5_bits = internal constant [32 x i8] c"\03\03\04\04\04\04\04\04\04\05\06\07\07\07\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\06\03", align 16
@huff_sfb_b5_codes = internal constant [32 x i16] [i16 0, i16 5, i16 7, i16 12, i16 4, i16 2, i16 3, i16 5, i16 9, i16 16, i16 35, i16 51, i16 54, i16 110, i16 96, i16 101, i16 98, i16 97, i16 99, i16 100, i16 111, i16 109, i16 108, i16 107, i16 106, i16 104, i16 105, i16 69, i16 68, i16 55, i16 26, i16 7], align 16
@huff_spec_a21_bits = internal constant [16 x i8] c"\00\03\00\03\03\03\00\03\00\00\00\00\03\03\00\03", align 16
@huff_spec_a21_codes = internal constant [16 x i16] [i16 0, i16 0, i16 0, i16 1, i16 3, i16 7, i16 0, i16 4, i16 0, i16 0, i16 0, i16 0, i16 2, i16 5, i16 0, i16 6], align 16
@huff_spec_a22_bits = internal constant [256 x i8] calign 16
@huff_spec_a22_codes = internal constant [256 x i16] [i16 0, i16 2, i16 0, i16 3, i16 16, i16 60, i16 0, i16 63, i16 0, i16 0, i16 0, i16 0, i16 17, i16 62, i16 0, i16 61, i16 14, i16 0, i16 0, i16 57, i16 24, i16 38, i16 0, i16 117, i16 0, i16 0, i16 0, i16 0, i16 27, i16 36, i16 0, i16 109, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 15, i16 56, i16 0, i16 1, i16 26, i16 108, i16 0, i16 37, i16 0, i16 0, i16 0, i16 0, i16 25, i16 116, i16 0, i16 39, i16 22, i16 20, i16 0, i16 23, i16 118, i16 6, i16 0, i16 9, i16 0, i16 0, i16 0, i16 0, i16 53, i16 100, i16 0, i16 111, i16 38, i16 4, i16 0, i16 99, i16 34, i16 162, i16 0, i16 151, i16 0, i16 0, i16 0, i16 0, i16 103, i16 160, i16 0, i16 13, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 43, i16 82, i16 0, i16 11, i16 32, i16 146, i16 0, i16 145, i16 0, i16 0, i16 0, i16 0, i16 97, i16 14, i16 0, i16 149, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 23, i16 22, i16 0, i16 21, i16 52, i16 110, i16 0, i16 101, i16 0, i16 0, i16 0, i16 0, i16 119, i16 8, i16 0, i16 7, i16 42, i16 10, i16 0, i16 83, i16 96, i16 148, i16 0, i16 15, i16 0, i16 0, i16 0, i16 0, i16 33, i16 144, i16 0, i16 147, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 39, i16 98, i16 0, i16 5, i16 102, i16 12, i16 0, i16 161, i16 0, i16 0, i16 0, i16 0, i16 35, i16 150, i16 0, i16 163], align 16
@huff_spec_a23_bits = internal constant [256 x i8] calign 16
@huff_spec_a23_codes = internal constant [256 x i16] [i16 6, i16 2, i16 0, i16 3, i16 22, i16 30, i16 0, i16 33, i16 0, i16 0, i16 0, i16 0, i16 23, i16 32, i16 0, i16 31, i16 28, i16 84, i16 0, i16 39, i16 16, i16 166, i16 0, i16 39, i16 0, i16 0, i16 0, i16 0, i16 21, i16 164, i16 0, i16 45, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 29, i16 38, i16 0, i16 85, i16 20, i16 44, i16 0, i16 165, i16 0, i16 0, i16 0, i16 0, i16 17, i16 38, i16 0, i16 167, i16 30, i16 0, i16 0, i16 3, i16 74, i16 116, i16 0, i16 113, i16 0, i16 0, i16 0, i16 0, i16 35, i16 10, i16 0, i16 9, i16 24, i16 114, i16 0, i16 13, i16 162, i16 346, i16 0, i16 291, i16 0, i16 0, i16 0, i16 0, i16 15, i16 344, i16 0, i16 93, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 27, i16 174, i16 0, i16 119, i16 146, i16 320, i16 0, i16 289, i16 0, i16 0, i16 0, i16 0, i16 37, i16 94, i16 0, i16 323, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 31, i16 2, i16 0, i16 1, i16 34, i16 8, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 75, i16 112, i16 0, i16 117, i16 26, i16 118, i16 0, i16 175, i16 36, i16 322, i16 0, i16 95, i16 0, i16 0, i16 0, i16 0, i16 147, i16 288, i16 0, i16 321, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 25, i16 12, i16 0, i16 115, i16 14, i16 92, i16 0, i16 345, i16 0, i16 0, i16 0, i16 0, i16 163, i16 290, i16 0, i16 347], align 16
@huff_spec_a24_bits = internal constant [256 x i8] calign 16
@huff_spec_a24_codes = internal constant [256 x i16] [i16 2, i16 2, i16 0, i16 3, i16 30, i16 16, i16 0, i16 19, i16 0, i16 0, i16 0, i16 0, i16 31, i16 18, i16 0, i16 17, i16 26, i16 48, i16 0, i16 27, i16 0, i16 100, i16 0, i16 193, i16 0, i16 0, i16 0, i16 0, i16 3, i16 82, i16 0, i16 125, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 27, i16 26, i16 0, i16 49, i16 2, i16 124, i16 0, i16 83, i16 0, i16 0, i16 0, i16 0, i16 1, i16 192, i16 0, i16 101, i16 28, i16 98, i16 0, i16 101, i16 42, i16 408, i16 0, i16 411, i16 0, i16 0, i16 0, i16 0, i16 23, i16 120, i16 0, i16 123, i16 4, i16 254, i16 0, i16 119, i16 80, i16 826, i16 0, i16 505, i16 0, i16 0, i16 0, i16 0, i16 115, i16 824, i16 0, i16 225, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 7, i16 102, i16 0, i16 391, i16 414, i16 776, i16 0, i16 779, i16 0, i16 0, i16 0, i16 0, i16 117, i16 226, i16 0, i16 507, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 29, i16 100, i16 0, i16 99, i16 22, i16 122, i16 0, i16 121, i16 0, i16 0, i16 0, i16 0, i16 43, i16 410, i16 0, i16 409, i16 6, i16 390, i16 0, i16 103, i16 116, i16 506, i16 0, i16 227, i16 0, i16 0, i16 0, i16 0, i16 415, i16 778, i16 0, i16 777, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 5, i16 118, i16 0, i16 255, i16 114, i16 224, i16 0, i16 825, i16 0, i16 0, i16 0, i16 0, i16 81, i16 504, i16 0, i16 827], align 16
@huff_spec_a31_bits = internal constant [64 x i8] c"\00\00\04\05\00\05\04\00\00\00\05\05\00\05\05\00\05\05\06\06\00\06\05\05\05\06\06\07\00\07\06\06\00\00\00\00\00\00\00\00\05\06\06\07\00\07\06\06\05\05\05\06\00\06\06\05\00\00\05\05\00\05\05\00", align 16
@huff_spec_a31_codes = internal constant [64 x i16] [i16 0, i16 0, i16 2, i16 24, i16 0, i16 25, i16 3, i16 0, i16 0, i16 0, i16 18, i16 2, i16 0, i16 9, i16 21, i16 0, i16 26, i16 10, i16 62, i16 44, i16 0, i16 47, i16 1, i16 13, i16 14, i16 56, i16 32, i16 120, i16 0, i16 123, i16 35, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 15, i16 58, i16 34, i16 122, i16 0, i16 121, i16 33, i16 57, i16 27, i16 12, i16 0, i16 46, i16 0, i16 45, i16 63, i16 11, i16 0, i16 0, i16 20, i16 8, i16 0, i16 3, i16 19, i16 0], align 16
@huff_spec_a32_bits = internal constant [64 x i8] c"\04\05\05\06\00\06\05\05\05\06\05\06\00\06\05\05\05\05\06\07\00\07\06\05\06\06\07\07\00\07\07\06\00\00\00\00\00\00\00\00\06\06\07\07\00\07\07\06\05\05\06\07\00\07\06\05\05\05\05\06\00\06\05\06", align 16
@huff_spec_a32_codes = internal constant [64 x i16] [i16 13, i16 24, i16 22, i16 58, i16 0, i16 59, i16 23, i16 25, i16 18, i16 62, i16 8, i16 28, i16 0, i16 27, i16 7, i16 1, i16 16, i16 2, i16 40, i16 120, i16 0, i16 123, i16 31, i16 5, i16 42, i16 22, i16 114, i16 42, i16 0, i16 41, i16 113, i16 25, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 43, i16 24, i16 112, i16 40, i16 0, i16 43, i16 115, i16 23, i16 17, i16 4, i16 30, i16 122, i16 0, i16 121, i16 41, i16 3, i16 19, i16 0, i16 6, i16 26, i16 0, i16 29, i16 9, i16 63], align 16
@huff_spec_a33_bits = internal constant [64 x i8] c"\03\04\05\06\00\06\05\04\04\05\06\07\00\07\06\05\05\06\06\07\00\07\06\06\06\07\08\08\00\08\08\07\00\00\00\00\00\00\00\00\06\07\08\08\00\08\08\07\05\06\06\07\00\07\06\06\04\05\06\07\00\07\06\05", align 16
@huff_spec_a33_codes = internal constant [64 x i16] [i16 5, i16 6, i16 16, i16 8, i16 0, i16 9, i16 17, i16 7, i16 4, i16 18, i16 62, i16 106, i16 0, i16 109, i16 61, i16 25, i16 6, i16 58, i16 6, i16 2, i16 0, i16 1, i16 5, i16 57, i16 2, i16 22, i16 220, i16 42, i16 0, i16 41, i16 223, i16 105, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 3, i16 104, i16 222, i16 40, i16 0, i16 43, i16 221, i16 23, i16 7, i16 56, i16 4, i16 0, i16 0, i16 3, i16 7, i16 59, i16 5, i16 24, i16 60, i16 108, i16 0, i16 107, i16 63, i16 19], align 16
@huff_spec_a34_bits = internal constant [64 x i8] c"\02\04\05\07\00\07\05\04\04\05\06\08\00\08\06\05\05\06\07\08\00\08\07\06\07\08\08\0A\00\0A\09\08\00\00\00\00\00\00\00\00\07\08\09\0A\00\0A\08\08\05\06\07\08\00\08\07\06\04\05\06\08\00\08\06\05", align 16
@huff_spec_a34_codes = internal constant [64 x i16] [i16 0, i16 10, i16 10, i16 52, i16 0, i16 53, i16 11, i16 11, i16 8, i16 28, i16 50, i16 218, i16 0, i16 221, i16 53, i16 31, i16 8, i16 30, i16 58, i16 108, i16 0, i16 99, i16 57, i16 49, i16 50, i16 110, i16 96, i16 890, i16 0, i16 889, i16 447, i16 217, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 51, i16 216, i16 446, i16 888, i16 0, i16 891, i16 97, i16 111, i16 9, i16 48, i16 56, i16 98, i16 0, i16 109, i16 59, i16 31, i16 9, i16 30, i16 52, i16 220, i16 0, i16 219, i16 51, i16 29], align 16
@huff_spec_a41_bits = internal constant [256 x i8] calign 16
@huff_spec_a41_codes = internal constant [256 x i16] [i16 0, i16 0, i16 0, i16 0, i16 24, i16 14, i16 94, i16 40, i16 0, i16 41, i16 95, i16 15, i16 25, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 118, i16 110, i16 62, i16 4, i16 0, i16 23, i16 69, i16 123, i16 19, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 74, i16 72, i16 16, i16 206, i16 0, i16 225, i16 35, i16 85, i16 83, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 24, i16 214, i16 158, i16 0, i16 157, i16 229, i16 43, i16 27, i16 0, i16 0, i16 0, i16 124, i16 92, i16 56, i16 252, i16 2, i16 210, i16 154, i16 92, i16 0, i16 107, i16 163, i16 217, i16 15, i16 255, i16 61, i16 97, i16 116, i16 86, i16 54, i16 0, i16 204, i16 140, i16 88, i16 482, i16 0, i16 15, i16 95, i16 161, i16 213, i16 13, i16 59, i16 89, i16 64, i16 20, i16 218, i16 182, i16 132, i16 64, i16 480, i16 406, i16 0, i16 417, i16 13, i16 67, i16 135, i16 199, i16 227, i16 11, i16 242, i16 196, i16 142, i16 90, i16 36, i16 460, i16 404, i16 360, i16 0, i16 363, i16 419, i16 463, i16 39, i16 105, i16 153, i16 201, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 243, i16 200, i16 152, i16 104, i16 38, i16 462, i16 418, i16 362, i16 0, i16 361, i16 405, i16 461, i16 37, i16 91, i16 143, i16 197, i16 65, i16 10, i16 226, i16 198, i16 134, i16 66, i16 12, i16 416, i16 0, i16 407, i16 481, i16 65, i16 133, i16 183, i16 219, i16 21, i16 117, i16 88, i16 58, i16 12, i16 212, i16 160, i16 94, i16 14, i16 0, i16 483, i16 89, i16 141, i16 205, i16 1, i16 55, i16 87, i16 125, i16 96, i16 60, i16 254, i16 14, i16 216, i16 162, i16 106, i16 0, i16 93, i16 155, i16 211, i16 3, i16 253, i16 57, i16 93, i16 0, i16 0, i16 0, i16 0, i16 26, i16 42, i16 228, i16 156, i16 0, i16 159, i16 215, i16 25, i16 9, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 82, i16 84, i16 34, i16 224, i16 0, i16 207, i16 17, i16 73, i16 75, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 18, i16 122, i16 68, i16 22, i16 0, i16 5, i16 63, i16 111, i16 119, i16 0, i16 0, i16 0], align 16
@huff_spec_a42_bits = internal constant [256 x i8] calign 16
@huff_spec_a42_codes = internal constant [256 x i16] [i16 3, i16 24, i16 88, i16 0, i16 102, i16 60, i16 214, i16 124, i16 0, i16 125, i16 215, i16 61, i16 103, i16 1, i16 89, i16 25, i16 2, i16 100, i16 54, i16 218, i16 76, i16 28, i16 190, i16 44, i16 0, i16 55, i16 197, i16 41, i16 75, i16 231, i16 59, i16 105, i16 68, i16 46, i16 250, i16 146, i16 32, i16 248, i16 134, i16 508, i16 0, i16 487, i16 127, i16 245, i16 35, i16 173, i16 253, i16 45, i16 246, i16 220, i16 156, i16 62, i16 240, i16 182, i16 38, i16 390, i16 0, i16 397, i16 47, i16 181, i16 225, i16 61, i16 175, i16 217, i16 84, i16 64, i16 20, i16 236, i16 188, i16 84, i16 454, i16 264, i16 0, i16 267, i16 453, i16 105, i16 185, i16 223, i16 25, i16 71, i16 38, i16 8, i16 228, i16 162, i16 86, i16 476, i16 322, i16 106, i16 0, i16 145, i16 291, i16 479, i16 75, i16 167, i16 235, i16 11, i16 192, i16 158, i16 106, i16 34, i16 426, i16 320, i16 146, i16 970, i16 0, i16 935, i16 75, i16 289, i16 399, i16 7, i16 113, i16 165, i16 32, i16 4, i16 424, i16 372, i16 228, i16 104, i16 932, i16 750, i16 0, i16 749, i16 969, i16 73, i16 231, i16 389, i16 465, i16 511, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 33, i16 510, i16 464, i16 388, i16 230, i16 72, i16 968, i16 748, i16 0, i16 751, i16 933, i16 105, i16 229, i16 373, i16 425, i16 5, i16 193, i16 164, i16 112, i16 6, i16 398, i16 288, i16 74, i16 934, i16 0, i16 971, i16 147, i16 321, i16 427, i16 35, i16 107, i16 159, i16 39, i16 10, i16 234, i16 166, i16 74, i16 478, i16 290, i16 144, i16 0, i16 107, i16 323, i16 477, i16 87, i16 163, i16 229, i16 9, i16 85, i16 70, i16 24, i16 222, i16 184, i16 104, i16 452, i16 266, i16 0, i16 265, i16 455, i16 85, i16 189, i16 237, i16 21, i16 65, i16 247, i16 216, i16 174, i16 60, i16 224, i16 180, i16 46, i16 396, i16 0, i16 391, i16 39, i16 183, i16 241, i16 63, i16 157, i16 221, i16 69, i16 44, i16 252, i16 172, i16 34, i16 244, i16 126, i16 486, i16 0, i16 509, i16 135, i16 249, i16 33, i16 147, i16 251, i16 47, i16 3, i16 104, i16 58, i16 230, i16 74, i16 40, i16 196, i16 54, i16 0, i16 45, i16 191, i16 29, i16 77, i16 219, i16 55, i16 101], align 16
@huff_spec_a43_bits = internal constant [256 x i8] calign 16
@huff_spec_a43_codes = internal constant [256 x i16] [i16 2, i16 62, i16 22, i16 96, i16 78, i16 220, i16 74, i16 304, i16 0, i16 305, i16 75, i16 221, i16 79, i16 97, i16 23, i16 63, i16 2, i16 44, i16 118, i16 66, i16 52, i16 206, i16 2, i16 232, i16 0, i16 207, i16 1, i16 209, i16 55, i16 69, i16 123, i16 47, i16 20, i16 114, i16 82, i16 26, i16 224, i16 128, i16 408, i16 30, i16 0, i16 29, i16 411, i16 131, i16 223, i16 25, i16 85, i16 121, i16 80, i16 60, i16 4, i16 196, i16 150, i16 12, i16 234, i16 842, i16 0, i16 847, i16 237, i16 471, i16 149, i16 175, i16 3, i16 63, i16 70, i16 38, i16 214, i16 146, i16 70, i16 346, i16 936, i16 264, i16 0, i16 271, i16 931, i16 309, i16 57, i16 145, i16 217, i16 49, i16 212, i16 202, i16 114, i16 454, i16 310, i16 144, i16 690, i16 260, i16 0, i16 259, i16 273, i16 139, i16 307, i16 467, i16 113, i16 201, i16 62, i16 436, i16 396, i16 204, i16 906, i16 688, i16 262, i16 242, i16 0, i16 239, i16 257, i16 275, i16 929, i16 203, i16 399, i16 439, i16 238, i16 146, i16 904, i16 840, i16 266, i16 244, i16 240, i16 234, i16 0, i16 233, i16 237, i16 247, i16 269, i16 845, i16 939, i16 201, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 239, i16 200, i16 938, i16 844, i16 268, i16 246, i16 236, i16 232, i16 0, i16 235, i16 241, i16 245, i16 267, i16 841, i16 905, i16 147, i16 63, i16 438, i16 398, i16 202, i16 928, i16 274, i16 256, i16 238, i16 0, i16 243, i16 263, i16 689, i16 907, i16 205, i16 397, i16 437, i16 213, i16 200, i16 112, i16 466, i16 306, i16 138, i16 272, i16 258, i16 0, i16 261, i16 691, i16 145, i16 311, i16 455, i16 115, i16 203, i16 71, i16 48, i16 216, i16 144, i16 56, i16 308, i16 930, i16 270, i16 0, i16 265, i16 937, i16 347, i16 71, i16 147, i16 215, i16 39, i16 81, i16 62, i16 2, i16 174, i16 148, i16 470, i16 236, i16 846, i16 0, i16 843, i16 235, i16 13, i16 151, i16 197, i16 5, i16 61, i16 21, i16 120, i16 84, i16 24, i16 222, i16 130, i16 410, i16 28, i16 0, i16 31, i16 409, i16 129, i16 225, i16 27, i16 83, i16 115, i16 3, i16 46, i16 122, i16 68, i16 54, i16 208, i16 0, i16 206, i16 0, i16 233, i16 3, i16 207, i16 53, i16 67, i16 119, i16 45], align 16
@huff_spec_a44_bits = internal constant [256 x i8] calign 16
@huff_spec_a44_codes = internal constant [256 x i16] [i16 10, i16 18, i16 48, i16 110, i16 36, i16 116, i16 236, i16 126, i16 0, i16 127, i16 237, i16 117, i16 37, i16 111, i16 49, i16 19, i16 16, i16 60, i16 24, i16 90, i16 2, i16 70, i16 158, i16 124, i16 0, i16 121, i16 229, i16 77, i16 7, i16 101, i16 27, i16 63, i16 46, i16 22, i16 114, i16 26, i16 214, i16 454, i16 948, i16 102, i16 0, i16 107, i16 951, i16 473, i16 213, i16 33, i16 117, i16 21, i16 108, i16 62, i16 30, i16 204, i16 68, i16 242, i16 130, i16 92, i16 0, i16 95, i16 135, i16 245, i16 49, i16 207, i16 23, i16 89, i16 28, i16 238, i16 208, i16 36, i16 448, i16 142, i16 110, i16 72, i16 0, i16 77, i16 109, i16 137, i16 247, i16 51, i16 211, i16 1, i16 112, i16 40, i16 450, i16 240, i16 138, i16 116, i16 84, i16 64, i16 0, i16 67, i16 83, i16 115, i16 153, i16 239, i16 453, i16 43, i16 230, i16 78, i16 140, i16 128, i16 104, i16 88, i16 70, i16 42, i16 0, i16 41, i16 69, i16 81, i16 101, i16 133, i16 155, i16 157, i16 122, i16 118, i16 96, i16 86, i16 78, i16 44, i16 36, i16 34, i16 0, i16 33, i16 39, i16 47, i16 75, i16 91, i16 99, i16 113, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 123, i16 112, i16 98, i16 90, i16 74, i16 46, i16 38, i16 32, i16 0, i16 35, i16 37, i16 45, i16 79, i16 87, i16 97, i16 119, i16 231, i16 156, i16 154, i16 132, i16 100, i16 80, i16 68, i16 40, i16 0, i16 43, i16 71, i16 89, i16 105, i16 129, i16 141, i16 79, i16 113, i16 42, i16 452, i16 238, i16 152, i16 114, i16 82, i16 66, i16 0, i16 65, i16 85, i16 117, i16 139, i16 241, i16 451, i16 41, i16 29, i16 0, i16 210, i16 50, i16 246, i16 136, i16 108, i16 76, i16 0, i16 73, i16 111, i16 143, i16 449, i16 37, i16 209, i16 239, i16 109, i16 88, i16 22, i16 206, i16 48, i16 244, i16 134, i16 94, i16 0, i16 93, i16 131, i16 243, i16 69, i16 205, i16 31, i16 63, i16 47, i16 20, i16 116, i16 32, i16 212, i16 472, i16 950, i16 106, i16 0, i16 103, i16 949, i16 455, i16 215, i16 27, i16 115, i16 23, i16 17, i16 62, i16 26, i16 100, i16 6, i16 76, i16 228, i16 120, i16 0, i16 125, i16 159, i16 71, i16 3, i16 91, i16 25, i16 61], align 16
@huff_spec_a51_bits = internal constant [32 x i8] c"\05\05\05\05\05\06\06\06\04\04\05\05\05\05\05\05\00\05\05\05\05\05\05\04\04\06\06\06\05\05\05\05", align 16
@huff_spec_a51_codes = internal constant [32 x i16] [i16 25, i16 22, i16 18, i16 14, i16 6, i16 58, i16 56, i16 48, i16 0, i16 4, i16 30, i16 26, i16 20, i16 16, i16 12, i16 4, i16 0, i16 5, i16 13, i16 17, i16 21, i16 27, i16 31, i16 5, i16 1, i16 49, i16 57, i16 59, i16 7, i16 15, i16 19, i16 23], align 16
@huff_spec_a52_bits = internal constant [32 x i8] c"\04\04\04\05\05\05\05\05\05\05\05\05\06\06\06\06\00\06\06\06\06\05\05\05\05\05\05\05\05\05\04\04", align 16
@huff_spec_a52_codes = internal constant [32 x i16] [i16 9, i16 4, i16 0, i16 30, i16 26, i16 20, i16 12, i16 6, i16 24, i16 22, i16 14, i16 4, i16 58, i16 56, i16 34, i16 32, i16 0, i16 33, i16 35, i16 57, i16 59, i16 5, i16 15, i16 23, i16 25, i16 7, i16 13, i16 21, i16 27, i16 31, i16 1, i16 5], align 16
@huff_spec_a53_bits = internal constant [32 x i8] c"\03\04\04\04\05\05\05\05\05\05\06\06\07\07\07\07\00\07\07\07\07\06\06\05\05\05\05\05\05\04\04\04", align 16
@huff_spec_a53_codes = internal constant [32 x i16] [i16 0, i16 12, i16 8, i16 4, i16 30, i16 22, i16 20, i16 6, i16 12, i16 4, i16 56, i16 30, i16 118, i16 116, i16 58, i16 56, i16 0, i16 57, i16 59, i16 117, i16 119, i16 31, i16 57, i16 5, i16 13, i16 7, i16 21, i16 23, i16 31, i16 5, i16 9, i16 13], align 16
@huff_spec_a54_bits = internal constant [32 x i8] c"\03\04\04\04\04\05\05\05\05\06\06\07\07\07\08\08\00\08\08\07\07\07\06\06\05\05\05\05\04\04\04\04", align 16
@huff_spec_a54_codes = internal constant [32 x i16] [i16 2, i16 14, i16 10, i16 8, i16 2, i16 26, i16 14, i16 2, i16 0, i16 48, i16 24, i16 102, i16 54, i16 52, i16 202, i16 200, i16 0, i16 201, i16 203, i16 53, i16 55, i16 103, i16 25, i16 49, i16 1, i16 3, i16 15, i16 27, i16 3, i16 9, i16 11, i16 15], align 16
@huff_spec_a61_bits = internal constant [64 x i8] c"\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\00\06\06\06\06\06\06\06\06\06\06\06\06\05\05\05\05\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06", align 16
@huff_spec_a61_codes = internal constant [64 x i16] [i16 53, i16 48, i16 42, i16 40, i16 36, i16 32, i16 24, i16 14, i16 12, i16 126, i16 124, i16 114, i16 112, i16 104, i16 94, i16 92, i16 4, i16 14, i16 8, i16 0, i16 60, i16 58, i16 54, i16 50, i16 44, i16 38, i16 34, i16 26, i16 22, i16 20, i16 6, i16 4, i16 0, i16 5, i16 7, i16 21, i16 23, i16 27, i16 35, i16 39, i16 45, i16 51, i16 55, i16 59, i16 61, i16 1, i16 9, i16 15, i16 5, i16 93, i16 95, i16 105, i16 113, i16 115, i16 125, i16 127, i16 13, i16 15, i16 25, i16 33, i16 37, i16 41, i16 43, i16 49], align 16
@huff_spec_a62_bits = internal constant [64 x i8] c"\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\00\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\05\05\05\05", align 16
@huff_spec_a62_codes = internal constant [64 x i16] [i16 20, i16 14, i16 8, i16 4, i16 2, i16 62, i16 60, i16 56, i16 52, i16 48, i16 42, i16 36, i16 26, i16 24, i16 14, i16 2, i16 50, i16 54, i16 44, i16 38, i16 32, i16 22, i16 12, i16 0, i16 118, i16 116, i16 94, i16 92, i16 70, i16 68, i16 42, i16 40, i16 0, i16 41, i16 43, i16 69, i16 71, i16 93, i16 95, i16 117, i16 119, i16 1, i16 13, i16 23, i16 33, i16 39, i16 45, i16 55, i16 51, i16 3, i16 15, i16 25, i16 27, i16 37, i16 43, i16 49, i16 53, i16 57, i16 61, i16 63, i16 3, i16 5, i16 9, i16 15], align 16
@huff_spec_a63_bits = internal constant [64 x i8] c"\04\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\08\08\08\08\08\08\00\08\08\08\08\08\08\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05", align 16
@huff_spec_a63_codes = internal constant [64 x i16] [i16 0, i16 28, i16 24, i16 20, i16 16, i16 10, i16 8, i16 2, i16 62, i16 54, i16 46, i16 44, i16 36, i16 28, i16 14, i16 8, i16 30, i16 26, i16 12, i16 122, i16 106, i16 104, i16 76, i16 50, i16 22, i16 20, i16 242, i16 240, i16 158, i16 156, i16 98, i16 96, i16 0, i16 97, i16 99, i16 157, i16 159, i16 241, i16 243, i16 21, i16 23, i16 51, i16 77, i16 105, i16 107, i16 123, i16 13, i16 27, i16 31, i16 9, i16 15, i16 29, i16 37, i16 45, i16 47, i16 55, i16 63, i16 3, i16 9, i16 11, i16 17, i16 21, i16 25, i16 29], align 16
@huff_spec_a64_bits = internal constant [64 x i8] c"\04\04\05\05\05\05\05\05\05\06\06\06\06\06\06\07\06\07\07\07\07\07\08\08\08\08\08\08\09\09\09\09\00\09\09\09\09\08\08\08\08\08\08\07\07\07\07\07\06\07\06\06\06\06\06\06\05\05\05\05\05\05\05\04", align 16
@huff_spec_a64_codes = internal constant [64 x i16] [i16 6, i16 2, i16 28, i16 26, i16 22, i16 18, i16 14, i16 10, i16 2, i16 62, i16 50, i16 42, i16 34, i16 32, i16 16, i16 122, i16 0, i16 120, i16 96, i16 80, i16 36, i16 6, i16 198, i16 196, i16 164, i16 78, i16 10, i16 8, i16 334, i16 332, i16 154, i16 152, i16 0, i16 153, i16 155, i16 333, i16 335, i16 9, i16 11, i16 79, i16 165, i16 197, i16 199, i16 7, i16 37, i16 81, i16 97, i16 121, i16 1, i16 123, i16 17, i16 33, i16 35, i16 43, i16 51, i16 63, i16 3, i16 11, i16 15, i16 19, i16 23, i16 27, i16 29, i16 3], align 16
@huff_spec_a71_bits = internal constant [128 x i8] c"\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\00\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\08\08\08\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07", align 16
@huff_spec_a71_codes = internal constant [128 x i16] [i16 108, i16 102, i16 98, i16 92, i16 86, i16 80, i16 82, i16 78, i16 72, i16 62, i16 54, i16 52, i16 42, i16 38, i16 30, i16 22, i16 14, i16 8, i16 0, i16 246, i16 244, i16 238, i16 236, i16 226, i16 224, i16 218, i16 210, i16 208, i16 190, i16 188, i16 178, i16 176, i16 12, i16 32, i16 28, i16 22, i16 16, i16 8, i16 2, i16 126, i16 124, i16 120, i16 116, i16 114, i16 110, i16 106, i16 100, i16 96, i16 90, i16 84, i16 76, i16 74, i16 70, i16 68, i16 60, i16 50, i16 48, i16 40, i16 36, i16 28, i16 20, i16 12, i16 10, i16 2, i16 0, i16 3, i16 11, i16 13, i16 21, i16 29, i16 37, i16 41, i16 49, i16 51, i16 61, i16 69, i16 71, i16 75, i16 77, i16 85, i16 91, i16 97, i16 101, i16 107, i16 111, i16 115, i16 117, i16 121, i16 125, i16 127, i16 3, i16 9, i16 17, i16 23, i16 29, i16 33, i16 13, i16 177, i16 179, i16 189, i16 191, i16 209, i16 211, i16 219, i16 225, i16 227, i16 237, i16 239, i16 245, i16 247, i16 1, i16 9, i16 15, i16 23, i16 31, i16 39, i16 43, i16 53, i16 55, i16 63, i16 73, i16 79, i16 83, i16 81, i16 87, i16 93, i16 99, i16 103], align 16
@huff_spec_a72_bits = internal constant [128 x i8] c"\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\00\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06", align 16
@huff_spec_a72_codes = internal constant [128 x i16] [i16 42, i16 36, i16 28, i16 24, i16 18, i16 14, i16 10, i16 6, i16 2, i16 126, i16 124, i16 122, i16 118, i16 114, i16 112, i16 106, i16 104, i16 98, i16 92, i16 90, i16 82, i16 78, i16 70, i16 66, i16 60, i16 52, i16 42, i16 40, i16 32, i16 18, i16 16, i16 8, i16 102, i16 116, i16 108, i16 100, i16 94, i16 88, i16 80, i16 68, i16 64, i16 54, i16 44, i16 34, i16 26, i16 10, i16 2, i16 0, i16 242, i16 240, i16 222, i16 220, i16 194, i16 192, i16 174, i16 172, i16 154, i16 152, i16 126, i16 124, i16 94, i16 92, i16 50, i16 48, i16 0, i16 49, i16 51, i16 93, i16 95, i16 125, i16 127, i16 153, i16 155, i16 173, i16 175, i16 193, i16 195, i16 221, i16 223, i16 241, i16 243, i16 1, i16 3, i16 11, i16 27, i16 35, i16 45, i16 55, i16 65, i16 69, i16 81, i16 89, i16 95, i16 101, i16 109, i16 117, i16 103, i16 9, i16 17, i16 19, i16 33, i16 41, i16 43, i16 53, i16 61, i16 67, i16 71, i16 79, i16 83, i16 91, i16 93, i16 99, i16 105, i16 107, i16 113, i16 115, i16 119, i16 123, i16 125, i16 127, i16 3, i16 7, i16 11, i16 15, i16 19, i16 25, i16 29, i16 37], align 16
@huff_spec_a73_bits = internal constant [128 x i8] c"\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\09\09\00\09\09\09\09\09\09\09\09\09\09\09\09\08\08\08\08\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06", align 16
@huff_spec_a73_codes = internal constant [128 x i16] [i16 3, i16 62, i16 56, i16 52, i16 48, i16 44, i16 40, i16 36, i16 32, i16 28, i16 22, i16 20, i16 14, i16 10, i16 4, i16 0, i16 122, i16 118, i16 110, i16 108, i16 100, i16 94, i16 86, i16 78, i16 76, i16 68, i16 54, i16 48, i16 34, i16 24, i16 18, i16 4, i16 60, i16 62, i16 50, i16 36, i16 32, i16 16, i16 242, i16 240, i16 232, i16 206, i16 186, i16 184, i16 168, i16 140, i16 106, i16 78, i16 76, i16 52, i16 14, i16 12, i16 470, i16 468, i16 410, i16 408, i16 342, i16 340, i16 286, i16 284, i16 210, i16 208, i16 110, i16 108, i16 0, i16 109, i16 111, i16 209, i16 211, i16 285, i16 287, i16 341, i16 343, i16 409, i16 411, i16 469, i16 471, i16 13, i16 15, i16 53, i16 77, i16 79, i16 107, i16 141, i16 169, i16 185, i16 187, i16 207, i16 233, i16 241, i16 243, i16 17, i16 33, i16 37, i16 51, i16 63, i16 61, i16 5, i16 19, i16 25, i16 35, i16 49, i16 55, i16 69, i16 77, i16 79, i16 87, i16 95, i16 101, i16 109, i16 111, i16 119, i16 123, i16 1, i16 5, i16 11, i16 15, i16 21, i16 23, i16 29, i16 33, i16 37, i16 41, i16 45, i16 49, i16 53, i16 57, i16 63], align 16
@huff_spec_a74_bits = internal constant [128 x i8] c"\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\08\08\07\08\08\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\09\09\09\09\09\09\09\09\09\09\09\08\08\08\08\08\08\08\08\08\08\07\08\08\07\07\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\06\06\06\05\05\05", align 16
@huff_spec_a74_codes = internal constant [128 x i16] [i16 13, i16 10, i16 4, i16 0, i16 58, i16 54, i16 50, i16 48, i16 44, i16 40, i16 38, i16 34, i16 30, i16 24, i16 18, i16 14, i16 6, i16 126, i16 122, i16 112, i16 106, i16 94, i16 86, i16 84, i16 72, i16 64, i16 56, i16 34, i16 26, i16 10, i16 248, i16 230, i16 8, i16 250, i16 240, i16 210, i16 186, i16 184, i16 148, i16 132, i16 116, i16 66, i16 50, i16 486, i16 458, i16 456, i16 418, i16 302, i16 270, i16 268, i16 236, i16 130, i16 98, i16 96, i16 970, i16 968, i16 834, i16 832, i16 602, i16 600, i16 478, i16 476, i16 258, i16 256, i16 0, i16 257, i16 259, i16 477, i16 479, i16 601, i16 603, i16 833, i16 835, i16 969, i16 971, i16 97, i16 99, i16 131, i16 237, i16 269, i16 271, i16 303, i16 419, i16 457, i16 459, i16 487, i16 51, i16 67, i16 117, i16 133, i16 149, i16 185, i16 187, i16 211, i16 241, i16 251, i16 9, i16 231, i16 249, i16 11, i16 27, i16 35, i16 57, i16 65, i16 73, i16 85, i16 87, i16 95, i16 107, i16 113, i16 123, i16 127, i16 7, i16 15, i16 19, i16 25, i16 31, i16 35, i16 39, i16 41, i16 45, i16 49, i16 51, i16 55, i16 59, i16 1, i16 5, i16 11], align 16
@huff_spec_b22_bits = internal constant [256 x i8] calign 16
@huff_spec_b22_codes = internal constant [256 x i16] [i16 0, i16 14, i16 0, i16 15, i16 8, i16 6, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 7, i16 6, i16 10, i16 0, i16 41, i16 6, i16 344, i16 0, i16 35, i16 0, i16 0, i16 0, i16 0, i16 19, i16 372, i16 0, i16 33, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 7, i16 40, i16 0, i16 11, i16 18, i16 32, i16 0, i16 373, i16 0, i16 0, i16 0, i16 0, i16 7, i16 34, i16 0, i16 345, i16 12, i16 188, i16 0, i16 191, i16 34, i16 696, i16 0, i16 699, i16 0, i16 0, i16 0, i16 0, i16 11, i16 368, i16 0, i16 347, i16 0, i16 78, i16 0, i16 351, i16 66, i16 74, i16 0, i16 65, i16 0, i16 0, i16 0, i16 0, i16 85, i16 68, i16 0, i16 77, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 45, i16 370, i16 0, i16 749, i16 64, i16 66, i16 0, i16 71, i16 0, i16 0, i16 0, i16 0, i16 19, i16 750, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 190, i16 0, i16 189, i16 10, i16 346, i16 0, i16 369, i16 0, i16 0, i16 0, i16 0, i16 35, i16 698, i16 0, i16 697, i16 44, i16 748, i16 0, i16 371, i16 18, i16 72, i16 0, i16 751, i16 0, i16 0, i16 0, i16 0, i16 65, i16 70, i16 0, i16 67, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 350, i16 0, i16 79, i16 84, i16 76, i16 0, i16 69, i16 0, i16 0, i16 0, i16 0, i16 67, i16 64, i16 0, i16 75], align 16
@huff_spec_b23_bits = internal constant [256 x i8] calign 16
@huff_spec_b23_codes = internal constant [256 x i16] [i16 3, i16 8, i16 0, i16 9, i16 2, i16 24, i16 0, i16 27, i16 0, i16 0, i16 0, i16 0, i16 3, i16 26, i16 0, i16 25, i16 0, i16 380, i16 0, i16 85, i16 86, i16 232, i16 0, i16 125, i16 0, i16 0, i16 0, i16 0, i16 89, i16 246, i16 0, i16 127, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 84, i16 0, i16 381, i16 88, i16 126, i16 0, i16 247, i16 0, i16 0, i16 0, i16 0, i16 87, i16 124, i16 0, i16 233, i16 4, i16 162, i16 0, i16 161, i16 378, i16 474, i16 0, i16 473, i16 0, i16 0, i16 0, i16 0, i16 83, i16 488, i16 0, i16 755, i16 92, i16 470, i16 0, i16 487, i16 490, i16 482, i16 0, i16 463, i16 0, i16 0, i16 0, i16 0, i16 383, i16 458, i16 0, i16 477, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 91, i16 752, i16 0, i16 479, i16 484, i16 460, i16 0, i16 469, i16 0, i16 0, i16 0, i16 0, i16 113, i16 480, i16 0, i16 457, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 5, i16 160, i16 0, i16 163, i16 82, i16 754, i16 0, i16 489, i16 0, i16 0, i16 0, i16 0, i16 379, i16 472, i16 0, i16 475, i16 90, i16 478, i16 0, i16 753, i16 112, i16 456, i16 0, i16 481, i16 0, i16 0, i16 0, i16 0, i16 485, i16 468, i16 0, i16 461, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 93, i16 486, i16 0, i16 471, i16 382, i16 476, i16 0, i16 459, i16 0, i16 0, i16 0, i16 0, i16 491, i16 462, i16 0, i16 483], align 16
@huff_spec_b24_bits = internal constant [256 x i8] calign 16
@huff_spec_b24_codes = internal constant [256 x i16] [i16 1, i16 0, i16 0, i16 1, i16 10, i16 28, i16 0, i16 51, i16 0, i16 0, i16 0, i16 0, i16 11, i16 50, i16 0, i16 29, i16 8, i16 216, i16 0, i16 49, i16 110, i16 250, i16 0, i16 215, i16 0, i16 0, i16 0, i16 0, i16 17, i16 244, i16 0, i16 213, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 9, i16 48, i16 0, i16 217, i16 16, i16 212, i16 0, i16 245, i16 0, i16 0, i16 0, i16 0, i16 111, i16 214, i16 0, i16 251, i16 14, i16 218, i16 0, i16 37, i16 210, i16 212, i16 0, i16 219, i16 0, i16 0, i16 0, i16 0, i16 23, i16 254, i16 0, i16 253, i16 20, i16 220, i16 0, i16 249, i16 242, i16 214, i16 0, i16 155, i16 0, i16 0, i16 0, i16 0, i16 419, i16 156, i16 0, i16 211, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 25, i16 246, i16 0, i16 217, i16 240, i16 158, i16 0, i16 209, i16 0, i16 0, i16 0, i16 0, i16 417, i16 222, i16 0, i16 153, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 15, i16 36, i16 0, i16 219, i16 22, i16 252, i16 0, i16 255, i16 0, i16 0, i16 0, i16 0, i16 211, i16 218, i16 0, i16 213, i16 24, i16 216, i16 0, i16 247, i16 416, i16 152, i16 0, i16 223, i16 0, i16 0, i16 0, i16 0, i16 241, i16 208, i16 0, i16 159, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 21, i16 248, i16 0, i16 221, i16 418, i16 210, i16 0, i16 157, i16 0, i16 0, i16 0, i16 0, i16 243, i16 154, i16 0, i16 215], align 16
@huff_spec_b32_bits = internal constant [64 x i8] c"\02\04\05\06\00\06\05\04\05\06\06\07\00\06\05\06\05\06\07\07\00\08\07\06\06\07\08\09\00\09\08\07\00\00\00\00\00\00\00\00\06\07\08\09\00\09\08\07\05\06\07\08\00\07\07\06\05\06\05\06\00\07\06\06", align 16
@huff_spec_b32_codes = internal constant [64 x i16] [i16 1, i16 2, i16 30, i16 42, i16 0, i16 43, i16 31, i16 3, i16 22, i16 32, i16 58, i16 100, i16 0, i16 5, i16 1, i16 35, i16 26, i16 38, i16 112, i16 12, i16 0, i16 207, i16 115, i16 49, i16 36, i16 14, i16 204, i16 326, i16 0, i16 325, i16 161, i16 83, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 37, i16 82, i16 160, i16 324, i16 0, i16 327, i16 205, i16 15, i16 27, i16 48, i16 114, i16 206, i16 0, i16 13, i16 113, i16 39, i16 23, i16 34, i16 0, i16 4, i16 0, i16 101, i16 59, i16 33], align 16
@huff_spec_b33_bits = internal constant [64 x i8] c"\02\04\05\07\00\07\05\04\04\05\06\08\00\07\06\05\05\06\07\09\00\08\07\06\07\08\09\0A\00\0A\09\08\00\00\00\00\00\00\00\00\07\08\09\0A\00\0A\09\08\05\06\07\08\00\09\07\06\04\05\06\07\00\08\06\05", align 16
@huff_spec_b33_codes = internal constant [64 x i16] [i16 3, i16 8, i16 20, i16 94, i16 0, i16 95, i16 21, i16 9, i16 4, i16 2, i16 28, i16 186, i16 0, i16 17, i16 31, i16 1, i16 12, i16 12, i16 20, i16 358, i16 0, i16 45, i16 19, i16 15, i16 90, i16 176, i16 94, i16 184, i16 0, i16 187, i16 357, i16 185, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 91, i16 184, i16 356, i16 186, i16 0, i16 185, i16 95, i16 177, i16 13, i16 14, i16 18, i16 44, i16 0, i16 359, i16 21, i16 13, i16 5, i16 0, i16 30, i16 16, i16 0, i16 187, i16 29, i16 3], align 16
@huff_spec_b34_bits = internal constant [64 x i8] c"\01\04\06\08\00\08\06\04\04\06\07\09\00\08\07\06\06\07\08\0A\00\0A\08\07\08\09\0A\0A\00\0A\0A\09\00\00\00\00\00\00\00\00\08\09\0A\0A\00\0A\0A\09\06\07\08\0A\00\0A\08\07\04\06\07\08\00\09\07\06", align 16
@huff_spec_b34_codes = internal constant [64 x i16] [i16 0, i16 10, i16 56, i16 238, i16 0, i16 239, i16 57, i16 11, i16 8, i16 60, i16 110, i16 472, i16 0, i16 193, i16 117, i16 63, i16 50, i16 104, i16 196, i16 856, i16 0, i16 783, i16 199, i16 109, i16 212, i16 430, i16 780, i16 776, i16 0, i16 779, i16 859, i16 475, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 213, i16 474, i16 858, i16 778, i16 0, i16 777, i16 781, i16 431, i16 51, i16 108, i16 198, i16 782, i16 0, i16 857, i16 197, i16 105, i16 9, i16 62, i16 116, i16 192, i16 0, i16 473, i16 111, i16 61], align 16
@huff_spec_b42_bits = internal constant [256 x i8] calign 16
@huff_spec_b42_codes = internal constant [256 x i16] [i16 14, i16 24, i16 16, i16 240, i16 36, i16 90, i16 246, i16 120, i16 0, i16 121, i16 247, i16 91, i16 37, i16 241, i16 17, i16 25, i16 12, i16 20, i16 28, i16 54, i16 92, i16 18, i16 158, i16 484, i16 0, i16 11, i16 169, i16 59, i16 95, i16 113, i16 25, i16 23, i16 110, i16 0, i16 62, i16 276, i16 2, i16 176, i16 426, i16 122, i16 0, i16 153, i16 487, i16 179, i16 11, i16 305, i16 127, i16 13, i16 216, i16 510, i16 274, i16 558, i16 134, i16 16, i16 308, i16 860, i16 0, i16 863, i16 307, i16 19, i16 129, i16 557, i16 281, i16 123, i16 10, i16 80, i16 248, i16 78, i16 436, i16 340, i16 1004, i16 210, i16 0, i16 215, i16 983, i16 311, i16 509, i16 115, i16 253, i16 87, i16 82, i16 16, i16 142, i16 488, i16 282, i16 1006, i16 242, i16 60, i16 0, i16 63, i16 241, i16 981, i16 273, i16 501, i16 157, i16 37, i16 210, i16 130, i16 416, i16 248, i16 878, i16 212, i16 114, i16 58, i16 0, i16 39, i16 113, i16 125, i16 877, i16 251, i16 429, i16 133, i16 12, i16 424, i16 60, i16 838, i16 208, i16 118, i16 36, i16 32, i16 0, i16 35, i16 57, i16 117, i16 127, i16 837, i16 155, i16 343, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 342, i16 154, i16 836, i16 126, i16 116, i16 56, i16 34, i16 0, i16 33, i16 37, i16 119, i16 209, i16 839, i16 61, i16 425, i16 211, i16 132, i16 428, i16 250, i16 876, i16 124, i16 112, i16 38, i16 0, i16 59, i16 115, i16 213, i16 879, i16 249, i16 417, i16 131, i16 83, i16 36, i16 156, i16 500, i16 272, i16 980, i16 240, i16 62, i16 0, i16 61, i16 243, i16 1007, i16 283, i16 489, i16 143, i16 17, i16 11, i16 86, i16 252, i16 114, i16 508, i16 310, i16 982, i16 214, i16 0, i16 211, i16 1005, i16 341, i16 437, i16 79, i16 249, i16 81, i16 217, i16 122, i16 280, i16 556, i16 128, i16 18, i16 306, i16 862, i16 0, i16 861, i16 309, i16 17, i16 135, i16 559, i16 275, i16 511, i16 111, i16 12, i16 126, i16 304, i16 10, i16 178, i16 486, i16 152, i16 0, i16 123, i16 427, i16 177, i16 3, i16 277, i16 63, i16 1, i16 13, i16 22, i16 24, i16 112, i16 94, i16 58, i16 168, i16 10, i16 0, i16 485, i16 159, i16 19, i16 93, i16 55, i16 29, i16 21], align 16
@huff_spec_b43_bits = internal constant [256 x i8] c"\02\05\06\07\07\08\08\09\00\09\08\08\07\07\06\05\05\06\07\08\07\08\09\0A\00\0A\09\08\07\08\07\06\06\07\08\09\08\09\0A\0A\00\0A\0A\09\08\09\08\07\07\08\09\0A\09\09\0A\0A\00\0A\0A\0A\09\0A\09\08\07\08\08\09\0A\0A\0A\0A\00\0A\0A\0A\0A\09\08\07\08\08\09\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\09\08\09\09\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\09\0A\0A\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0A\0A\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\09\09\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\09\08\08\09\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\09\08\07\07\08\09\0A\0A\0A\0A\00\0A\0A\0A\0A\09\08\08\07\08\09\0A\09\0A\0A\0A\00\0A\0A\09\09\0A\09\08\06\07\08\09\08\09\0A\0A\00\0A\0A\09\08\09\08\07\05\06\07\08\07\08\09\0A\00\0A\09\08\07\08\07\06", align 16
@huff_spec_b43_codes = internal constant [256 x i16] [i16 1, i16 30, i16 34, i16 24, i16 100, i16 236, i16 8, i16 256, i16 0, i16 257, i16 9, i16 237, i16 101, i16 25, i16 35, i16 31, i16 26, i16 48, i16 86, i16 154, i16 10, i16 144, i16 300, i16 166, i16 0, i16 169, i16 303, i16 147, i16 15, i16 159, i16 89, i16 57, i16 14, i16 84, i16 188, i16 414, i16 130, i16 374, i16 172, i16 136, i16 0, i16 139, i16 175, i16 413, i16 149, i16 465, i16 191, i16 81, i16 2, i16 152, i16 468, i16 184, i16 368, i16 70, i16 144, i16 96, i16 0, i16 103, i16 149, i16 189, i16 371, i16 181, i16 467, i16 157, i16 82, i16 238, i16 52, i16 372, i16 186, i16 156, i16 128, i16 68, i16 0, i16 71, i16 109, i16 153, i16 191, i16 367, i16 133, i16 1, i16 204, i16 54, i16 364, i16 176, i16 154, i16 132, i16 78, i16 62, i16 0, i16 55, i16 75, i16 107, i16 161, i16 179, i16 363, i16 135, i16 470, i16 258, i16 164, i16 146, i16 104, i16 76, i16 52, i16 48, i16 0, i16 45, i16 61, i16 73, i16 131, i16 151, i16 171, i16 361, i16 182, i16 158, i16 110, i16 100, i16 64, i16 56, i16 46, i16 42, i16 0, i16 41, i16 51, i16 59, i16 67, i16 99, i16 135, i16 163, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 183, i16 162, i16 134, i16 98, i16 66, i16 58, i16 50, i16 40, i16 0, i16 43, i16 47, i16 57, i16 65, i16 101, i16 111, i16 159, i16 471, i16 360, i16 170, i16 150, i16 130, i16 72, i16 60, i16 44, i16 0, i16 49, i16 53, i16 77, i16 105, i16 147, i16 165, i16 259, i16 205, i16 134, i16 362, i16 178, i16 160, i16 106, i16 74, i16 54, i16 0, i16 63, i16 79, i16 133, i16 155, i16 177, i16 365, i16 55, i16 83, i16 0, i16 132, i16 366, i16 190, i16 152, i16 108, i16 70, i16 0, i16 69, i16 129, i16 157, i16 187, i16 373, i16 53, i16 239, i16 3, i16 156, i16 466, i16 180, i16 370, i16 188, i16 148, i16 102, i16 0, i16 97, i16 145, i16 71, i16 369, i16 185, i16 469, i16 153, i16 15, i16 80, i16 190, i16 464, i16 148, i16 412, i16 174, i16 138, i16 0, i16 137, i16 173, i16 375, i16 131, i16 415, i16 189, i16 85, i16 27, i16 56, i16 88, i16 158, i16 14, i16 146, i16 302, i16 168, i16 0, i16 167, i16 301, i16 145, i16 11, i16 155, i16 87, i16 49], align 16
@huff_spec_b44_bits = internal constant [256 x i8] calign 16
@huff_spec_b44_codes = internal constant [256 x i16] [i16 2, i16 2, i16 48, i16 0, i16 2, i16 12, i16 466, i16 430, i16 0, i16 431, i16 467, i16 13, i16 3, i16 1, i16 49, i16 3, i16 30, i16 2, i16 112, i16 200, i16 126, i16 488, i16 448, i16 374, i16 0, i16 383, i16 451, i16 491, i16 207, i16 211, i16 115, i16 9, i16 24, i16 106, i16 236, i16 478, i16 418, i16 458, i16 426, i16 356, i16 0, i16 365, i16 429, i16 465, i16 495, i16 477, i16 235, i16 109, i16 232, i16 202, i16 446, i16 462, i16 474, i16 438, i16 368, i16 340, i16 0, i16 339, i16 371, i16 433, i16 471, i16 469, i16 835, i16 205, i16 220, i16 120, i16 832, i16 460, i16 442, i16 424, i16 342, i16 328, i16 0, i16 325, i16 351, i16 417, i16 445, i16 473, i16 493, i16 125, i16 444, i16 476, i16 452, i16 434, i16 380, i16 346, i16 330, i16 58, i16 0, i16 57, i16 327, i16 363, i16 379, i16 437, i16 457, i16 479, i16 454, i16 440, i16 418, i16 360, i16 352, i16 332, i16 46, i16 36, i16 0, i16 39, i16 61, i16 337, i16 349, i16 367, i16 423, i16 447, i16 420, i16 372, i16 354, i16 334, i16 320, i16 44, i16 42, i16 34, i16 0, i16 33, i16 41, i16 63, i16 323, i16 345, i16 359, i16 377, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 421, i16 376, i16 358, i16 344, i16 322, i16 62, i16 40, i16 32, i16 0, i16 35, i16 43, i16 45, i16 321, i16 335, i16 355, i16 373, i16 455, i16 446, i16 422, i16 366, i16 348, i16 336, i16 60, i16 38, i16 0, i16 37, i16 47, i16 333, i16 353, i16 361, i16 419, i16 441, i16 445, i16 478, i16 456, i16 436, i16 378, i16 362, i16 326, i16 56, i16 0, i16 59, i16 331, i16 347, i16 381, i16 435, i16 453, i16 477, i16 221, i16 124, i16 492, i16 472, i16 444, i16 416, i16 350, i16 324, i16 0, i16 329, i16 343, i16 425, i16 443, i16 461, i16 833, i16 121, i16 233, i16 204, i16 834, i16 468, i16 470, i16 432, i16 370, i16 338, i16 0, i16 341, i16 369, i16 439, i16 475, i16 463, i16 447, i16 203, i16 25, i16 108, i16 234, i16 476, i16 494, i16 464, i16 428, i16 364, i16 0, i16 357, i16 427, i16 459, i16 419, i16 479, i16 237, i16 107, i16 31, i16 8, i16 114, i16 210, i16 206, i16 490, i16 450, i16 382, i16 0, i16 375, i16 449, i16 489, i16 127, i16 201, i16 113, i16 3], align 16
@huff_spec_b52_bits = internal constant [32 x i8] c"\03\04\04\04\05\05\06\06\05\05\05\06\06\06\07\07\00\07\07\06\06\06\05\05\05\06\06\05\05\04\04\04", align 16
@huff_spec_b52_codes = internal constant [32 x i16] [i16 6, i16 14, i16 6, i16 0, i16 10, i16 4, i16 44, i16 18, i16 20, i16 16, i16 6, i16 46, i16 36, i16 16, i16 78, i16 76, i16 0, i16 77, i16 79, i16 17, i16 37, i16 47, i16 7, i16 17, i16 21, i16 19, i16 45, i16 5, i16 11, i16 1, i16 7, i16 15], align 16
@huff_spec_b53_bits = internal constant [32 x i8] c"\02\03\04\05\05\06\06\06\06\06\06\07\07\07\08\08\00\08\08\07\07\07\06\06\06\06\06\06\05\05\04\03", align 16
@huff_spec_b53_codes = internal constant [32 x i16] [i16 2, i16 0, i16 6, i16 28, i16 24, i16 62, i16 22, i16 16, i16 60, i16 54, i16 20, i16 106, i16 38, i16 36, i16 210, i16 208, i16 0, i16 209, i16 211, i16 37, i16 39, i16 107, i16 21, i16 55, i16 61, i16 17, i16 23, i16 63, i16 25, i16 29, i16 7, i16 1], align 16
@huff_spec_b54_bits = internal constant [32 x i8] c"\02\03\04\04\05\06\06\07\06\06\07\08\08\08\09\09\00\09\09\08\08\08\07\06\06\07\06\06\05\04\04\03", align 16
@huff_spec_b54_codes = internal constant [32 x i16] [i16 3, i16 2, i16 8, i16 0, i16 20, i16 46, i16 14, i16 90, i16 10, i16 8, i16 26, i16 178, i16 50, i16 48, i16 354, i16 352, i16 0, i16 353, i16 355, i16 49, i16 51, i16 179, i16 27, i16 9, i16 11, i16 91, i16 15, i16 47, i16 21, i16 1, i16 9, i16 3], align 16
@huff_spec_b62_bits = internal constant [64 x i8] c"\04\04\05\05\05\05\06\06\06\06\06\06\07\07\07\07\06\06\06\06\06\06\07\07\07\07\07\07\08\08\08\08\00\08\08\08\08\07\07\07\07\07\07\06\06\06\06\06\06\07\07\07\07\06\06\06\06\06\06\05\05\05\05\04", align 16
@huff_spec_b62_codes = internal constant [64 x i16] [i16 13, i16 6, i16 28, i16 20, i16 10, i16 4, i16 62, i16 46, i16 34, i16 14, i16 6, i16 0, i16 90, i16 78, i16 64, i16 32, i16 48, i16 50, i16 36, i16 18, i16 12, i16 2, i16 120, i16 88, i16 66, i16 34, i16 10, i16 8, i16 246, i16 244, i16 154, i16 152, i16 0, i16 153, i16 155, i16 245, i16 247, i16 9, i16 11, i16 35, i16 67, i16 89, i16 121, i16 3, i16 13, i16 19, i16 37, i16 51, i16 49, i16 33, i16 65, i16 79, i16 91, i16 1, i16 7, i16 15, i16 35, i16 47, i16 63, i16 5, i16 11, i16 21, i16 29, i16 7], align 16
@huff_spec_b63_bits = internal constant [64 x i8] c"\03\04\04\05\05\05\05\06\06\06\06\07\07\07\07\08\06\06\07\07\07\07\08\08\08\08\09\09\09\09\09\09\00\09\09\09\09\09\09\08\08\08\08\07\07\07\07\06\06\08\07\07\07\07\06\06\06\06\05\05\05\05\04\04", align 16
@huff_spec_b63_codes = internal constant [64 x i16] [i16 6, i16 14, i16 4, i16 20, i16 16, i16 6, i16 0, i16 38, i16 28, i16 24, i16 4, i16 92, i16 74, i16 60, i16 22, i16 188, i16 6, i16 8, i16 88, i16 62, i16 54, i16 20, i16 182, i16 180, i16 144, i16 104, i16 382, i16 380, i16 294, i16 292, i16 214, i16 212, i16 0, i16 213, i16 215, i16 293, i16 295, i16 381, i16 383, i16 105, i16 145, i16 181, i16 183, i16 21, i16 55, i16 63, i16 89, i16 9, i16 7, i16 189, i16 23, i16 61, i16 75, i16 93, i16 5, i16 25, i16 29, i16 39, i16 1, i16 7, i16 17, i16 21, i16 5, i16 15], align 16
@huff_spec_b64_bits = internal constant [64 x i8] c"\03\03\04\05\05\05\06\06\06\06\07\07\07\07\07\08\07\07\07\08\08\08\09\09\09\09\09\09\0A\0A\0A\0A\00\0A\0A\0A\0A\09\09\09\09\09\09\08\08\08\07\07\07\08\07\07\07\07\07\06\06\06\06\05\05\05\04\03", align 16
@huff_spec_b64_codes = internal constant [64 x i16] [i16 7, i16 0, i16 8, i16 26, i16 20, i16 12, i16 50, i16 46, i16 30, i16 20, i16 98, i16 90, i16 58, i16 38, i16 32, i16 178, i16 56, i16 44, i16 34, i16 192, i16 94, i16 74, i16 390, i16 388, i16 352, i16 186, i16 146, i16 144, i16 710, i16 708, i16 370, i16 368, i16 0, i16 369, i16 371, i16 709, i16 711, i16 145, i16 147, i16 187, i16 353, i16 389, i16 391, i16 75, i16 95, i16 193, i16 35, i16 45, i16 57, i16 179, i16 33, i16 39, i16 59, i16 91, i16 99, i16 21, i16 31, i16 47, i16 51, i16 13, i16 21, i16 27, i16 9, i16 1], align 16
@huff_spec_b72_bits = internal constant [128 x i8] c"\05\05\05\05\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\00\09\09\09\09\09\09\09\09\09\09\08\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\05\05\05", align 16
@huff_spec_b72_codes = internal constant [128 x i16] [i16 30, i16 22, i16 12, i16 0, i16 56, i16 50, i16 40, i16 34, i16 28, i16 18, i16 14, i16 6, i16 118, i16 108, i16 96, i16 78, i16 62, i16 42, i16 34, i16 26, i16 18, i16 10, i16 252, i16 220, i16 198, i16 168, i16 148, i16 134, i16 88, i16 66, i16 64, i16 42, i16 104, i16 124, i16 106, i16 86, i16 72, i16 64, i16 46, i16 40, i16 22, i16 16, i16 8, i16 234, i16 222, i16 170, i16 154, i16 150, i16 122, i16 120, i16 90, i16 50, i16 48, i16 40, i16 510, i16 508, i16 466, i16 464, i16 394, i16 392, i16 306, i16 304, i16 266, i16 264, i16 0, i16 265, i16 267, i16 305, i16 307, i16 393, i16 395, i16 465, i16 467, i16 509, i16 511, i16 41, i16 49, i16 51, i16 91, i16 121, i16 123, i16 151, i16 155, i16 171, i16 223, i16 235, i16 9, i16 17, i16 23, i16 41, i16 47, i16 65, i16 73, i16 87, i16 107, i16 125, i16 105, i16 43, i16 65, i16 67, i16 89, i16 135, i16 149, i16 169, i16 199, i16 221, i16 253, i16 11, i16 19, i16 27, i16 35, i16 43, i16 63, i16 79, i16 97, i16 109, i16 119, i16 7, i16 15, i16 19, i16 29, i16 35, i16 41, i16 51, i16 57, i16 1, i16 13, i16 23], align 16
@huff_spec_b73_bits = internal constant [128 x i8] c"\03\04\05\05\05\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\09\09\08\07\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\09\09\09\09\09\09\09\09\09\09\08\08\08\08\08\08\08\08\07\08\09\09\08\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\05\05\05\04", align 16
@huff_spec_b73_codes = internal constant [128 x i16] [i16 0, i16 6, i16 24, i16 16, i16 4, i16 58, i16 52, i16 42, i16 38, i16 20, i16 16, i16 126, i16 114, i16 110, i16 92, i16 82, i16 74, i16 44, i16 36, i16 24, i16 244, i16 224, i16 218, i16 182, i16 178, i16 160, i16 94, i16 78, i16 56, i16 52, i16 486, i16 434, i16 250, i16 30, i16 248, i16 240, i16 190, i16 180, i16 162, i16 144, i16 76, i16 58, i16 494, i16 484, i16 454, i16 432, i16 376, i16 354, i16 294, i16 292, i16 184, i16 108, i16 986, i16 984, i16 906, i16 904, i16 758, i16 756, i16 706, i16 704, i16 374, i16 372, i16 220, i16 222, i16 0, i16 223, i16 221, i16 373, i16 375, i16 705, i16 707, i16 757, i16 759, i16 905, i16 907, i16 985, i16 987, i16 109, i16 185, i16 293, i16 295, i16 355, i16 377, i16 433, i16 455, i16 485, i16 495, i16 59, i16 77, i16 145, i16 163, i16 181, i16 191, i16 241, i16 249, i16 31, i16 251, i16 435, i16 487, i16 53, i16 57, i16 79, i16 95, i16 161, i16 179, i16 183, i16 219, i16 225, i16 245, i16 25, i16 37, i16 45, i16 75, i16 83, i16 93, i16 111, i16 115, i16 127, i16 17, i16 21, i16 39, i16 43, i16 53, i16 59, i16 5, i16 17, i16 25, i16 7], align 16
@huff_spec_b74_bits = internal constant [128 x i8] c"\03\04\05\05\05\05\06\06\06\06\06\06\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\09\09\09\08\08\08\08\08\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\09\09\09\09\09\09\09\08\08\08\08\08\09\09\09\08\08\08\08\08\08\08\08\08\07\07\07\07\07\07\07\07\06\06\06\06\06\06\05\05\05\05\04", align 16
@huff_spec_b74_codes = internal constant [128 x i16] [i16 1, i16 8, i16 30, i16 24, i16 12, i16 2, i16 58, i16 52, i16 44, i16 30, i16 22, i16 18, i16 114, i16 110, i16 94, i16 86, i16 80, i16 56, i16 34, i16 4, i16 226, i16 218, i16 186, i16 168, i16 118, i16 84, i16 80, i16 2, i16 0, i16 448, i16 432, i16 342, i16 164, i16 166, i16 116, i16 82, i16 4, i16 450, i16 434, i16 368, i16 340, i16 174, i16 172, i16 134, i16 742, i16 740, i16 266, i16 264, i16 262, i16 260, i16 258, i16 256, i16 62, i16 58, i16 60, i16 56, i16 54, i16 52, i16 50, i16 48, i16 30, i16 26, i16 28, i16 24, i16 0, i16 25, i16 29, i16 27, i16 31, i16 49, i16 51, i16 53, i16 55, i16 57, i16 61, i16 59, i16 63, i16 257, i16 259, i16 261, i16 263, i16 265, i16 267, i16 741, i16 743, i16 135, i16 173, i16 175, i16 341, i16 369, i16 435, i16 451, i16 5, i16 83, i16 117, i16 167, i16 165, i16 343, i16 433, i16 449, i16 1, i16 3, i16 81, i16 85, i16 119, i16 169, i16 187, i16 219, i16 227, i16 5, i16 35, i16 57, i16 81, i16 87, i16 95, i16 111, i16 115, i16 19, i16 23, i16 31, i16 45, i16 53, i16 59, i16 3, i16 13, i16 25, i16 31, i16 9], align 16
@at9_q_unit_to_coeff_idx = internal constant [31 x i32] [i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 20, i32 24, i32 28, i32 32, i32 40, i32 48, i32 56, i32 64, i32 72, i32 80, i32 88, i32 96, i32 112, i32 128, i32 144, i32 160, i32 176, i32 192, i32 208, i32 224, i32 240, i32 256], align 16
@.str.8 = private unnamed_addr constant [22 x i8] c"Invalid block flags!\0A\00", align 1
@at9_tab_band_q_unit_map = internal constant [19 x i8] c"\00\04\08\0A\0C\0D\0E\0F\10\12\14\15\16\17\18\19\1A\1C\1E", align 16
@at9_tab_sri_max_bands = internal constant [16 x i8] c"\08\08\0C\0C\0C\12\12\12\08\08\0C\0C\0C\10\10\10", align 16
@.str.9 = private unnamed_addr constant [24 x i8] c"Invalid band count %i!\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"Invalid stereo band %i!\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"Invalid extension band %i!\0A\00", align 1
@at9_quant_step_coarse = internal constant [16 x float] [float 2.000000e+00, float 0x3FE5555560000000, float 0x3FD24924A0000000, float 0x3FC1111120000000, float 0x3FB0842100000000, float 0x3FA0410420000000, float 0x3F90204080000000, float 0x3F80101020000000, float 0x3F70080400000000, float 0x3F60040100000000, float 0x3F50020040000000, float 0x3F40010020000000, float 0x3F30008000000000, float 0x3F20004000000000, float 0x3F10002000000000, float 0x3F00001000000000], align 16
@at9_quant_step_fine = internal constant [16 x float] [float 0x3F00001000000000, float 0x3EE5556AA0000000, float 0x3ED24936E0000000, float 0x3EC1112220000000, float 0x3EB0843180000000, float 0x3EA0411460000000, float 0x3E902050A0000000, float 0x3E80102020000000, float 0x3E70081400000000, float 0x3E60041100000000, float 0x3E50021040000000, float 0x3E40011020000000, float 0x3E30009000000000, float 0x3E20005000000000, float 0x3E10003000000000, float 0x3E00002000000000], align 16
@at9_scalefactor_c = internal constant [32 x float] [float 0x3F00000000000000, float 0x3F10000000000000, float 0x3F20000000000000, float 0x3F30000000000000, float 0x3F40000000000000, float 9.765625e-04, float 1.953125e-03, float 3.906250e-03, float 7.812500e-03, float 1.562500e-02, float 3.125000e-02, float 6.250000e-02, float 1.250000e-01, float 2.500000e-01, float 5.000000e-01, float 1.000000e+00, float 2.000000e+00, float 4.000000e+00, float 8.000000e+00, float 1.600000e+01, float 3.200000e+01, float 6.400000e+01, float 1.280000e+02, float 2.560000e+02, float 5.120000e+02, float 1.024000e+03, float 2.048000e+03, float 4.096000e+03, float 8.192000e+03, float 1.638400e+04, float 3.276800e+04, float 6.553600e+04], align 16
@at9_tab_band_ext_group = internal constant [8 x [3 x i8]] [[3 x i8] c"\10\15\00", [3 x i8] c"\12\16\01", [3 x i8] c"\14\16\02", [3 x i8] c"\15\16\03", [3 x i8] c"\15\16\03", [3 x i8] c"\17\18\04", [3 x i8] c"\17\18\04", [3 x i8] c"\18\18\05"], align 16
@at9_tab_band_ext_cnt = internal constant [5 x [6 x i8]] [[6 x i8] c"\00\00\00\04\04\02", [6 x i8] zeroinitializer, [6 x i8] c"\00\00\00\02\02\01", [6 x i8] c"\00\00\00\02\02\02", [6 x i8] c"\01\01\01\00\00\00"], align 16
@at9_tab_band_ext_lengths = internal constant [5 x [6 x [4 x i8]]] [[6 x [4 x i8]] [[4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] c"\05\04\03\03", [4 x i8] c"\04\04\03\04", [4 x i8] c"\04\05\00\00"], [6 x [4 x i8]] zeroinitializer, [6 x [4 x i8]] [[4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] c"\06\06\00\00", [4 x i8] c"\06\06\00\00", [4 x i8] c"\06\00\00\00"], [6 x [4 x i8]] [[4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] c"\04\04\00\00", [4 x i8] c"\04\04\00\00", [4 x i8] c"\04\04\00\00"], [6 x [4 x i8]] [[4 x i8] c"\03\00\00\00", [4 x i8] c"\03\00\00\00", [4 x i8] c"\03\00\00\00", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer]], align 16
@read_scalefactors.mode_map = internal constant [2 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 0, i32 2, i32 3, i32 4]], align 16
@.str.12 = private unnamed_addr constant [34 x i8] c"Invalid scalefactor coding mode!\0A\00", align 1
@at9_tab_sf_weights = internal constant [8 x [32 x i8]] [[32 x i8] c"\00\00\00\01\01\02\02\02\02\02\02\03\02\03\03\04\04\04\04\04\04\05\05\06\06\07\07\08\0A\0C\0C\0C", [32 x i8] c"\03\02\02\01\01\01\01\01\00\01\01\01\00\00\00\01\00\01\01\01\01\01\01\02\03\03\04\05\07\0A\0A\0A", [32 x i8] c"\00\02\04\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\08\09\0C\0C\0C", [32 x i8] c"\00\01\01\02\02\02\03\03\03\03\03\04\04\04\05\05\05\06\06\06\06\07\08\08\0A\0B\0B\0C\0D\0D\0D\0D", [32 x i8] c"\00\02\02\03\03\04\04\05\04\05\05\05\05\06\07\08\08\08\08\09\09\09\0A\0A\0B\0C\0C\0D\0D\0E\0E\0E", [32 x i8] c"\01\01\00\00\00\00\01\00\00\01\01\01\01\01\02\02\02\02\02\03\03\03\04\04\05\06\07\07\09\0B\0B\0B", [32 x i8] c"\00\05\08\0A\0B\0B\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0C\0C\0C\0C\0D\0F\0F\0F", [32 x i8] c"\00\02\03\04\05\06\06\07\07\08\08\08\09\09\0A\0A\0A\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0D\0D\0F\0F\0F"], align 16
@at9_q_unit_to_coeff_cnt = internal constant [30 x i8] c"\02\02\02\02\02\02\02\02\04\04\04\04\08\08\08\08\08\08\08\08\10\10\10\10\10\10\10\10\10\10", align 16
@at9_band_ext_scales_m0 = internal constant [3 x [5 x [32 x float]]] [[5 x [32 x float]] [[32 x float] [float 0.000000e+00, float 0x3FC972FFE0000000, float 0x3FD0177FE0000000, float 0x3FD2F27FE0000000, float 0x3FD4E30020000000, float 0x3FD822FFE0000000, float 0x3FD83C7FE0000000, float 0x3FDD0EFFE0000000, float 0x3FDF378040000000, float 0x3FE0D70000000000, float 0x3FE16E4020000000, float 0x3FE25BC020000000, float 0x3FE3E10000000000, float 0x3FE3E9BFE0000000, float 0x3FE4FEC000000000, float 0x3FE611BFE0000000, float 0x3FE82D8000000000, float 0x3FE891BFE0000000, float 0x3FE9568000000000, float 0x3FE9824020000000, float 0x3FEA33BFE0000000, float 0x3FEB070000000000, float 0x3FEF547FE0000000, float 0x3FEF6E4020000000, float 0x3FEF81FFE0000000, float 0x3FEF8CC000000000, float 0x3FEF903FE0000000, float 0x3FEF908020000000, float 0x3FEF984000000000, float 0x3FEF9EC020000000, float 0x3FEFAD0020000000, float 0x3FEFB90000000000], [32 x float] [float 0.000000e+00, float 0x3FEFF20000000000, float 0x3FB36FFFE0000000, float 0x3FE6F97FE0000000, float 0x3FEF863FE0000000, float 0x3FE116C000000000, float 0x3FECD80000000000, float 0x3FE4514000000000, float 0x3FE71FBFE0000000, float 0x3FC8F0FFC0000000, float 0x3FE8690000000000, float 0x3FEF988000000000, float 0x3FE9F58020000000, float 0x3FD1610000000000, float 0x3FEF264000000000, float 0x3FC27B0060000000, float 0x3FDDB28020000000, float 0x3FD4CB8040000000, float 0x3FD8430020000000, float 0x3FB5300000000000, float 0x3FE30E0000000000, float 0x3FD2550000000000, float 0x3FEF61C000000000, float 0x3FE95F8000000000, float 0x3FE4228000000000, float 0x3FDF470000000000, float 0x3FD297FFE0000000, float 0x3FC0AA0020000000, float 0x3FD41A0000000000, float 0x3FE18B4000000000, float 0x3FDAF2FFE0000000, float 0x3FBE47FF80000000], [32 x float] [float 0.000000e+00, float 0x3FA0280020000000, float 0x3FB5F80000000000, float 0x3FC177FFE0000000, float 0x3FC7CB0040000000, float 0x3FCE50FFC0000000, float 0x3FD27C0020000000, float 0x3FD5F7FFE0000000, float 0x3FD9ADFFE0000000, float 0x3FDD968000000000, float 0x3FE0DE4000000000, float 0x3FE30E4000000000, float 0x3FE5613FE0000000, float 0x3FE7D5C000000000, float 0x3FEA628000000000, float 0x3FED1C8000000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3FA69FFFE0000000, float 0x3FC0B00000000000, float 0x3FCD1A0060000000, float 0x3FD5BC0000000000, float 0x3FDE4F0020000000, float 0x3FE40E0000000000, float 0x3FE99CC000000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3F9CB7FFC0000000, float 0x3FB8CA0020000000, float 0x3FC7AE0060000000, float 0x3FD33CFFE0000000, float 0x3FDC9C8000000000, float 0x3FE3BD4000000000, float 0x3FE9A00020000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00]], [5 x [32 x float]] [[32 x float] [float 0.000000e+00, float 0x3FD155FFE0000000, float 0x3FD644FFE0000000, float 0x3FD6E68000000000, float 0x3FE0448000000000, float 0x3FE0F50000000000, float 0x3FE29F0000000000, float 0x3FE46C0000000000, float 0x3FE7494020000000, float 0x3FE84E4000000000, float 0x3FE9364000000000, float 0x3FEF103FE0000000, float 0x3FEF150000000000, float 0x3FEF27C000000000, float 0x3FEF3B4020000000, float 0x3FEF76BFE0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3FCDD4FFA0000000, float 0x3FE2DA3FE0000000, float 0x3FE6F20000000000, float 0x3FCA110000000000, float 0x3FC4A6FFC0000000, float 0x3FE5570000000000, float 0x3FEE570000000000, float 0x3FEF437FE0000000, float 0x3FE05B7FE0000000, float 0x3FD68B8000000000, float 0x3FEA454020000000, float 0x3FD2C70000000000, float 0x3FEF397FE0000000, float 0x3FE0ED8000000000, float 0x3FDBFB7FE0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3FA6540000000000, float 0x3FBB0C00C0000000, float 0x3FC45BFFE0000000, float 0x3FCA9BFFA0000000, float 0x3FD0778000000000, float 0x3FD3BA8020000000, float 0x3FD7248020000000, float 0x3FDAD37FE0000000, float 0x3FDEAB7FE0000000, float 0x3FE1674020000000, float 0x3FE399C000000000, float 0x3FE5E43FE0000000, float 0x3FE8494020000000, float 0x3FEAC4BFE0000000, float 0x3FED463FE0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3FA4DC0020000000, float 0x3FBDD00060000000, float 0x3FCA95FFC0000000, float 0x3FD4617FE0000000, float 0x3FDD018040000000, float 0x3FE3990020000000, float 0x3FE9620000000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3F82300000000000, float 0x3F9E07FFE0000000, float 0x3FACA40000000000, float 0x3FB6980020000000, float 0x3FC01DFFC0000000, float 0x3FC6090060000000, float 0x3FCD110000000000, float 0x3FD291FFE0000000, float 0x3FD6E90000000000, float 0x3FDBBCFFE0000000, float 0x3FE0788000000000, float 0x3FE3463FE0000000, float 0x3FE6428000000000, float 0x3FE9730000000000, float 0x3FECBA4000000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00]], [5 x [32 x float]] [[32 x float] [float 0.000000e+00, float 0x3FB2E3FFE0000000, float 0x3FC71EFFA0000000, float 0x3FD1328020000000, float 0x3FD5CF8000000000, float 0x3FD9E77FE0000000, float 0x3FDD947FE0000000, float 0x3FE08A4000000000, float 5.703125e-01, float 0x3FE3F5C000000000, float 0x3FE5A4C000000000, float 0x3FE7528000000000, float 0x3FE8FCC000000000, float 0x3FEAAE4020000000, float 0x3FEC660000000000, float 0x3FEE234000000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [32 x float] [float 0.000000e+00, float 0x3FB46E0000000000, float 0x3FC4ACFFA0000000, float 0x3FC551FFA0000000, float 0x3FC7530060000000, float 0x3FCBFA0000000000, float 0x3FCD56FFC0000000, float 0x3FCF720000000000, float 0x3FD1108020000000, float 0x3FD5298020000000, float 0x3FD550FFC0000000, float 0x3FD8190020000000, float 0x3FDA250000000000, float 0x3FDC28FFE0000000, float 0x3FDC358020000000, float 0x3FDED50000000000, float 0x3FDF837FE0000000, float 0x3FE106C000000000, float 0x3FE2DC4000000000, float 0x3FE39EC020000000, float 0x3FE3E13FE0000000, float 0x3FE4170000000000, float 0x3FE4304000000000, float 0x3FE883C020000000, float 0x3FE91F4000000000, float 0x3FE9503FE0000000, float 0x3FE95FBFE0000000, float 0x3FE9B90000000000, float 0x3FEF78C000000000, float 0x3FEF81FFE0000000, float 0x3FEF870000000000, float 0x3FEF8F8000000000], [32 x float] [float 0.000000e+00, float 0x3FE3784020000000, float 0x3FD7818040000000, float 0x3FD42BFFC0000000, float 0x3FC30F0040000000, float 0x3FD0757FE0000000, float 0x3FE054C020000000, float 0x3FD530FFE0000000, float 0x3FABC7FFE0000000, float 0x3FDB3A8020000000, float 0x3FE9984000000000, float 0x3FE931C000000000, float 0x3FE1570000000000, float 0x3FD2B88000000000, float 0x3FB5AE0000000000, float 0x3FC20DFFA0000000, float 0x3FEF6C4000000000, float 0x3FEEBFC000000000, float 0x3FA2140020000000, float 0x3FB8E80000000000, float 0x3FE26D4000000000, float 0x3FEFD03FE0000000, float 0x3FE7170000000000, float 0x3FE6FC8020000000, float 0x3FC9F80060000000, float 0x3FB88C0000000000, float 0x3FCA030060000000, float 0x3FC122FFE0000000, float 0x3FE002C000000000, float 0x3FC7FE0040000000, float 0x3FEF604020000000, float 0x3FBC5BFFE0000000], [32 x float] zeroinitializer, [32 x float] zeroinitializer]], align 16
@at9_band_ext_scales_m2 = internal constant [64 x float] [float 0x3F3C000000000000, float 0x3F55800020000000, float 0x3F63FFFFE0000000, float 0x3F6E400000000000, float 0x3F74200000000000, float 0x3F79200000000000, float 0x3F7EC00000000000, float 0x3F82600000000000, float 0x3F85800060000000, float 0x3F89100020000000, float 0x3F8CCFFF80000000, float 0x3F905FFFE0000000, float 0x3F926FFFE0000000, float 0x3F94BFFFE0000000, float 0x3F972FFFC0000000, float 0x3F99C7FFE0000000, float 0x3F9C97FFC0000000, float 0x3F9F77FFE0000000, float 0x3FA1200020000000, float 0x3FA2980020000000, float 0x3FA43BFFE0000000, float 0x3FA5E40020000000, float 0x3FA797FFE0000000, float 0x3FA9700020000000, float 0x3FAB6C0000000000, float 0x3FAD9C0000000000, float 0x3FAFB7FFE0000000, float 0x3FB1180000000000, float 0x3FB26C0000000000, float 0x3FB3D40000000000, float 0x3FB54C0000000000, float 0x3FB7060000000000, float 0x3FB8FBFFE0000000, float 0x3FBB09FF60000000, float 0x3FBD280000000000, float 0x3FBFA5FFE0000000, float 0x3FC1420060000000, float 0x3FC2D20020000000, float 0x3FC4860060000000, float 0x3FC678FFC0000000, float 0x3FC8650040000000, float 0x3FCA830000000000, float 0x3FCCBCFFE0000000, float 0x3FCF490020000000, float 0x3FD1048020000000, float 0x3FD28B8000000000, float 0x3FD4228000000000, float 0x3FD6147FE0000000, float 0x3FD81A7FE0000000, float 0x3FDA628020000000, float 0x3FDCD5FFE0000000, float 0x3FDF520020000000, float 0x3FE0FA4000000000, float 0x3FE2570000000000, float 0x3FE3B48000000000, float 0x3FE50F0020000000, float 0x3FE65A3FE0000000, float 0x3FE7CB0000000000, float 0x3FE92BC000000000, float 0x3FEA917FE0000000, float 0x3FEBE64000000000, float 0x3FED33BFE0000000, float 0x3FEEA48020000000, float 0x3FEFFD4000000000], align 16
@at9_band_ext_scales_m3 = internal constant [16 x [2 x float]] [[2 x float] [float 0x3FD6580000000000, float 0xBFD2A5FFE0000000], [2 x float] [float 0x3FE1300000000000, float 0xBFD0440000000000], [2 x float] [float 0x3FE5B40020000000, float 0xBFC54E0040000000], [2 x float] [float 0x3FE9500000000000, float 0xBFC2E5FFA0000000], [2 x float] [float 0x3FECFC0000000000, float 0xBFC12DFFE0000000], [2 x float] [float 0x3FF065FFA0000000, float 0xBFBF3FFFC0000000], [2 x float] [float 1.156250e+00, float 0xBFBC9C0080000000], [2 x float] [float 0x3FF4A5FFA0000000, float 0xBFBA47FF80000000], [2 x float] [float 0x3FF757FFA0000000, float 0xBFB8280000000000], [2 x float] [float 0x3FFAA20040000000, float 0xBFB5B80000000000], [2 x float] [float 0x3FFEE00080000000, float 0xBFB3240000000000], [2 x float] [float 0x400239FFE0000000, float 0xBFB0240000000000], [2 x float] [float 0x4006A70000000000, float 0xBFA7000020000000], [2 x float] [float 0x400D460020000000, float 0xBF99100020000000], [2 x float] [float 0x4015080020000000, float 0x3F28000040000000], [2 x float] [float 0x4020BF0000000000, float 0x3FA5600020000000]], align 16
@at9_band_ext_scales_m4 = internal constant [8 x float] [float 0x3FA27BFFE0000000, float 0x3FC022FFE0000000, float 0x3FCC830000000000, float 0x3FD55D8000000000, float 0x3FDDD67FE0000000, float 0x3FE3E87FE0000000, float 0x3FE990C000000000, float 0x3FEFCE8000000000], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @atrac9_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2062 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %s = alloca %struct.ATRAC9Context*, align 8
  %version = alloca i32, align 4
  %block_config_idx = alloca i32, align 4
  %superframe_idx = alloca i32, align 4
  %alloc_c_len = alloca i32, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %sidx = alloca float, align 4
  %eidx = alloca float, align 4
  %s_c = alloca float, align 4
  %e_c = alloca float, align 4
  %i76 = alloca i32, align 4
  %j = alloca i32, align 4
  %i100 = alloca i32, align 4
  %hf = alloca %struct.HuffmanCodebook*, align 8
  %i114 = alloca i32, align 4
  %hf119 = alloca %struct.HuffmanCodebook*, align 8
  %nums = alloca i32, align 4
  %sym = alloca [32 x i16], align 16
  %j123 = alloca i32, align 4
  %i146 = alloca i32, align 4
  %j151 = alloca i32, align 4
  %k = alloca i32, align 4
  %hf160 = alloca %struct.HuffmanCodebook*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2063, metadata !2064), !dbg !2065
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2066, metadata !2064), !dbg !2067
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s, metadata !2068, metadata !2064), !dbg !2069
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2070
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2071
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2071
  %2 = bitcast i8* %1 to %struct.ATRAC9Context*, !dbg !2070
  store %struct.ATRAC9Context* %2, %struct.ATRAC9Context** %s, align 8, !dbg !2069
  call void @llvm.dbg.declare(metadata i32* %version, metadata !2072, metadata !2064), !dbg !2073
  call void @llvm.dbg.declare(metadata i32* %block_config_idx, metadata !2074, metadata !2064), !dbg !2075
  call void @llvm.dbg.declare(metadata i32* %superframe_idx, metadata !2076, metadata !2064), !dbg !2077
  call void @llvm.dbg.declare(metadata i32* %alloc_c_len, metadata !2078, metadata !2064), !dbg !2079
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2080
  %4 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2081
  %avctx1 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %4, i32 0, i32 0, !dbg !2082
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 32, !dbg !2083
  %5 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2084
  %lfg = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %5, i32 0, i32 4, !dbg !2085
  call void @av_lfg_init(%struct.AVLFG* %lfg, i32 -72486899), !dbg !2086
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2087
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 16, !dbg !2089
  %7 = load i32, i32* %extradata_size, align 8, !dbg !2089
  %cmp = icmp ne i32 %7, 12, !dbg !2090
  br i1 %cmp, label %if.then, label %if.end, !dbg !2091

if.then:                                          ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2092
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !2092
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0)), !dbg !2094
  store i32 -1094995529, i32* %retval, align 4, !dbg !2095
  br label %return, !dbg !2095

if.end:                                           ; preds = %entry
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2096
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 15, !dbg !2097
  %11 = load i8*, i8** %extradata, align 8, !dbg !2097
  %12 = bitcast i8* %11 to %union.unaligned_32*, !dbg !2098
  %l = bitcast %union.unaligned_32* %12 to i32*, !dbg !2098
  %13 = load i32, i32* %l, align 1, !dbg !2098
  store i32 %13, i32* %version, align 4, !dbg !2099
  %14 = load i32, i32* %version, align 4, !dbg !2100
  %cmp2 = icmp sgt i32 %14, 2, !dbg !2102
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2103

if.then3:                                         ; preds = %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2104
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !2104
  %17 = load i32, i32* %version, align 4, !dbg !2106
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 %17), !dbg !2107
  store i32 -1094995529, i32* %retval, align 4, !dbg !2108
  br label %return, !dbg !2108

if.end4:                                          ; preds = %if.end
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2109
  %extradata5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 15, !dbg !2110
  %19 = load i8*, i8** %extradata5, align 8, !dbg !2110
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 4, !dbg !2111
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2112
  %extradata_size6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 16, !dbg !2113
  %21 = load i32, i32* %extradata_size6, align 8, !dbg !2113
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %21), !dbg !2114
  %call7 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !2115
  %cmp8 = icmp ne i32 %call7, 254, !dbg !2117
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2118

if.then9:                                         ; preds = %if.end4
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2119
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !2119
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)), !dbg !2121
  store i32 -1094995529, i32* %retval, align 4, !dbg !2122
  br label %return, !dbg !2122

if.end10:                                         ; preds = %if.end4
  %call11 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !2123
  %24 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2124
  %samplerate_idx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %24, i32 0, i32 8, !dbg !2125
  store i32 %call11, i32* %samplerate_idx, align 16, !dbg !2126
  %25 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2127
  %samplerate_idx12 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %25, i32 0, i32 8, !dbg !2128
  %26 = load i32, i32* %samplerate_idx12, align 16, !dbg !2128
  %idxprom = sext i32 %26 to i64, !dbg !2129
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @at9_tab_samplerates, i64 0, i64 %idxprom, !dbg !2129
  %27 = load i32, i32* %arrayidx, align 4, !dbg !2129
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2130
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 82, !dbg !2131
  store i32 %27, i32* %sample_rate, align 8, !dbg !2132
  %call13 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 3), !dbg !2133
  store i32 %call13, i32* %block_config_idx, align 4, !dbg !2134
  %29 = load i32, i32* %block_config_idx, align 4, !dbg !2135
  %cmp14 = icmp sgt i32 %29, 5, !dbg !2137
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2138

if.then15:                                        ; preds = %if.end10
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2139
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !2139
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0)), !dbg !2141
  store i32 -1094995529, i32* %retval, align 4, !dbg !2142
  br label %return, !dbg !2142

if.end16:                                         ; preds = %if.end10
  %32 = load i32, i32* %block_config_idx, align 4, !dbg !2143
  %idxprom17 = sext i32 %32 to i64, !dbg !2144
  %arrayidx18 = getelementptr inbounds [6 x %struct.ATRAC9BlockConfig], [6 x %struct.ATRAC9BlockConfig]* @at9_block_layout, i64 0, i64 %idxprom17, !dbg !2144
  %33 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2145
  %block_config = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %33, i32 0, i32 9, !dbg !2146
  store %struct.ATRAC9BlockConfig* %arrayidx18, %struct.ATRAC9BlockConfig** %block_config, align 8, !dbg !2147
  %34 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2148
  %block_config19 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %34, i32 0, i32 9, !dbg !2149
  %35 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config19, align 8, !dbg !2149
  %channel_layout = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %35, i32 0, i32 0, !dbg !2150
  %36 = load i64, i64* %channel_layout, align 8, !dbg !2150
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2151
  %channel_layout20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 89, !dbg !2152
  store i64 %36, i64* %channel_layout20, align 8, !dbg !2153
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2154
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 84, !dbg !2155
  store i32 8, i32* %sample_fmt, align 8, !dbg !2156
  %call21 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2157
  %tobool = icmp ne i32 %call21, 0, !dbg !2157
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !2159

if.then22:                                        ; preds = %if.end16
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2160
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !2160
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0)), !dbg !2162
  store i32 -1094995529, i32* %retval, align 4, !dbg !2163
  br label %return, !dbg !2163

if.end23:                                         ; preds = %if.end16
  %call24 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 11), !dbg !2164
  %add = add i32 %call24, 1, !dbg !2165
  %41 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2166
  %avg_frame_size = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %41, i32 0, i32 6, !dbg !2167
  store i32 %add, i32* %avg_frame_size, align 8, !dbg !2168
  %call25 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 2), !dbg !2169
  store i32 %call25, i32* %superframe_idx, align 4, !dbg !2170
  %42 = load i32, i32* %superframe_idx, align 4, !dbg !2171
  %and = and i32 %42, 1, !dbg !2173
  %tobool26 = icmp ne i32 %and, 0, !dbg !2173
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2174

if.then27:                                        ; preds = %if.end23
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2175
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !2175
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i32 0, i32 0)), !dbg !2177
  store i32 -1094995529, i32* %retval, align 4, !dbg !2178
  br label %return, !dbg !2178

if.end28:                                         ; preds = %if.end23
  %45 = load i32, i32* %superframe_idx, align 4, !dbg !2179
  %shl = shl i32 1, %45, !dbg !2180
  %46 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2181
  %frame_count = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %46, i32 0, i32 7, !dbg !2182
  store i32 %shl, i32* %frame_count, align 4, !dbg !2183
  %47 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2184
  %samplerate_idx29 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %47, i32 0, i32 8, !dbg !2185
  %48 = load i32, i32* %samplerate_idx29, align 16, !dbg !2185
  %idxprom30 = sext i32 %48 to i64, !dbg !2186
  %arrayidx31 = getelementptr inbounds [16 x i8], [16 x i8]* @at9_tab_sri_frame_log2, i64 0, i64 %idxprom30, !dbg !2186
  %49 = load i8, i8* %arrayidx31, align 1, !dbg !2186
  %conv = zext i8 %49 to i32, !dbg !2186
  %50 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2187
  %frame_log2 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %50, i32 0, i32 5, !dbg !2188
  store i32 %conv, i32* %frame_log2, align 4, !dbg !2189
  %51 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2190
  %imdct = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %51, i32 0, i32 2, !dbg !2192
  %52 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2193
  %frame_log232 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %52, i32 0, i32 5, !dbg !2194
  %53 = load i32, i32* %frame_log232, align 4, !dbg !2194
  %add33 = add nsw i32 %53, 1, !dbg !2195
  %call34 = call i32 @ff_mdct_init(%struct.FFTContext* %imdct, i32 %add33, i32 1, double 0x3F00000000000000), !dbg !2196
  %tobool35 = icmp ne i32 %call34, 0, !dbg !2196
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !2197

if.then36:                                        ; preds = %if.end28
  store i32 -12, i32* %retval, align 4, !dbg !2198
  br label %return, !dbg !2198

if.end37:                                         ; preds = %if.end28
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2199
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 13, !dbg !2200
  %55 = load i32, i32* %flags, align 4, !dbg !2200
  %and38 = and i32 %55, 8388608, !dbg !2201
  %call39 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and38), !dbg !2202
  %56 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2203
  %fdsp = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %56, i32 0, i32 1, !dbg !2204
  store %struct.AVFloatDSPContext* %call39, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2205
  %57 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2206
  %fdsp40 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %57, i32 0, i32 1, !dbg !2208
  %58 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp40, align 8, !dbg !2208
  %tobool41 = icmp ne %struct.AVFloatDSPContext* %58, null, !dbg !2206
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !2209

if.then42:                                        ; preds = %if.end37
  store i32 -12, i32* %retval, align 4, !dbg !2210
  br label %return, !dbg !2210

if.end43:                                         ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2211, metadata !2064), !dbg !2213
  store i32 0, i32* %i, align 4, !dbg !2213
  br label %for.cond, !dbg !2214

for.cond:                                         ; preds = %for.inc, %if.end43
  %59 = load i32, i32* %i, align 4, !dbg !2215
  %60 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2218
  %frame_log244 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %60, i32 0, i32 5, !dbg !2219
  %61 = load i32, i32* %frame_log244, align 4, !dbg !2219
  %shl45 = shl i32 1, %61, !dbg !2220
  %cmp46 = icmp slt i32 %59, %shl45, !dbg !2221
  br i1 %cmp46, label %for.body, label %for.end, !dbg !2222

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2223, metadata !2064), !dbg !2225
  %62 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2226
  %frame_log248 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %62, i32 0, i32 5, !dbg !2227
  %63 = load i32, i32* %frame_log248, align 4, !dbg !2227
  %shl49 = shl i32 1, %63, !dbg !2228
  store i32 %shl49, i32* %len, align 4, !dbg !2225
  call void @llvm.dbg.declare(metadata float* %sidx, metadata !2229, metadata !2064), !dbg !2230
  %64 = load i32, i32* %i, align 4, !dbg !2231
  %conv50 = sitofp i32 %64 to float, !dbg !2231
  %add51 = fadd float %conv50, 5.000000e-01, !dbg !2232
  %65 = load i32, i32* %len, align 4, !dbg !2233
  %conv52 = sitofp i32 %65 to float, !dbg !2233
  %div = fdiv float %add51, %conv52, !dbg !2234
  store float %div, float* %sidx, align 4, !dbg !2230
  call void @llvm.dbg.declare(metadata float* %eidx, metadata !2235, metadata !2064), !dbg !2236
  %66 = load i32, i32* %len, align 4, !dbg !2237
  %67 = load i32, i32* %i, align 4, !dbg !2238
  %sub = sub nsw i32 %66, %67, !dbg !2239
  %conv53 = sitofp i32 %sub to float, !dbg !2237
  %sub54 = fsub float %conv53, 5.000000e-01, !dbg !2240
  %68 = load i32, i32* %len, align 4, !dbg !2241
  %conv55 = sitofp i32 %68 to float, !dbg !2241
  %div56 = fdiv float %sub54, %conv55, !dbg !2242
  store float %div56, float* %eidx, align 4, !dbg !2236
  call void @llvm.dbg.declare(metadata float* %s_c, metadata !2243, metadata !2064), !dbg !2244
  %69 = load float, float* %sidx, align 4, !dbg !2245
  %conv57 = fpext float %69 to double, !dbg !2245
  %mul = fmul double %conv57, 0x400921FB54442D18, !dbg !2246
  %sub58 = fsub double %mul, 0x3FF921FB54442D18, !dbg !2247
  %conv59 = fptrunc double %sub58 to float, !dbg !2245
  %call60 = call float @sinf(float %conv59) #8, !dbg !2248
  %mul61 = fmul float %call60, 5.000000e-01, !dbg !2249
  %add62 = fadd float %mul61, 5.000000e-01, !dbg !2250
  store float %add62, float* %s_c, align 4, !dbg !2244
  call void @llvm.dbg.declare(metadata float* %e_c, metadata !2251, metadata !2064), !dbg !2252
  %70 = load float, float* %eidx, align 4, !dbg !2253
  %conv63 = fpext float %70 to double, !dbg !2253
  %mul64 = fmul double %conv63, 0x400921FB54442D18, !dbg !2254
  %sub65 = fsub double %mul64, 0x3FF921FB54442D18, !dbg !2255
  %conv66 = fptrunc double %sub65 to float, !dbg !2253
  %call67 = call float @sinf(float %conv66) #8, !dbg !2256
  %mul68 = fmul float %call67, 5.000000e-01, !dbg !2257
  %add69 = fadd float %mul68, 5.000000e-01, !dbg !2258
  store float %add69, float* %e_c, align 4, !dbg !2252
  %71 = load float, float* %s_c, align 4, !dbg !2259
  %72 = load float, float* %s_c, align 4, !dbg !2260
  %73 = load float, float* %s_c, align 4, !dbg !2261
  %mul70 = fmul float %72, %73, !dbg !2262
  %74 = load float, float* %e_c, align 4, !dbg !2263
  %75 = load float, float* %e_c, align 4, !dbg !2264
  %mul71 = fmul float %74, %75, !dbg !2265
  %add72 = fadd float %mul70, %mul71, !dbg !2266
  %div73 = fdiv float %71, %add72, !dbg !2267
  %76 = load i32, i32* %i, align 4, !dbg !2268
  %idxprom74 = sext i32 %76 to i64, !dbg !2269
  %77 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2269
  %imdct_win = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %77, i32 0, i32 13, !dbg !2270
  %arrayidx75 = getelementptr inbounds [256 x float], [256 x float]* %imdct_win, i64 0, i64 %idxprom74, !dbg !2269
  store float %div73, float* %arrayidx75, align 4, !dbg !2271
  br label %for.inc, !dbg !2272

for.inc:                                          ; preds = %for.body
  %78 = load i32, i32* %i, align 4, !dbg !2273
  %inc = add nsw i32 %78, 1, !dbg !2273
  store i32 %inc, i32* %i, align 4, !dbg !2273
  br label %for.cond, !dbg !2275, !llvm.loop !2276

for.end:                                          ; preds = %for.cond
  store i32 48, i32* %alloc_c_len, align 4, !dbg !2278
  call void @llvm.dbg.declare(metadata i32* %i76, metadata !2279, metadata !2064), !dbg !2281
  store i32 1, i32* %i76, align 4, !dbg !2281
  br label %for.cond77, !dbg !2282

for.cond77:                                       ; preds = %for.inc97, %for.end
  %79 = load i32, i32* %i76, align 4, !dbg !2283
  %80 = load i32, i32* %alloc_c_len, align 4, !dbg !2286
  %cmp78 = icmp sle i32 %79, %80, !dbg !2287
  br i1 %cmp78, label %for.body80, label %for.end99, !dbg !2288

for.body80:                                       ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2289, metadata !2064), !dbg !2291
  store i32 0, i32* %j, align 4, !dbg !2291
  br label %for.cond81, !dbg !2292

for.cond81:                                       ; preds = %for.inc94, %for.body80
  %81 = load i32, i32* %j, align 4, !dbg !2293
  %82 = load i32, i32* %i76, align 4, !dbg !2296
  %cmp82 = icmp slt i32 %81, %82, !dbg !2297
  br i1 %cmp82, label %for.body84, label %for.end96, !dbg !2298

for.body84:                                       ; preds = %for.cond81
  %83 = load i32, i32* %j, align 4, !dbg !2299
  %84 = load i32, i32* %alloc_c_len, align 4, !dbg !2300
  %mul85 = mul nsw i32 %83, %84, !dbg !2301
  %85 = load i32, i32* %i76, align 4, !dbg !2302
  %div86 = sdiv i32 %mul85, %85, !dbg !2303
  %idxprom87 = sext i32 %div86 to i64, !dbg !2304
  %arrayidx88 = getelementptr inbounds [48 x i8], [48 x i8]* @at9_tab_b_dist, i64 0, i64 %idxprom87, !dbg !2304
  %86 = load i8, i8* %arrayidx88, align 1, !dbg !2304
  %87 = load i32, i32* %j, align 4, !dbg !2305
  %idxprom89 = sext i32 %87 to i64, !dbg !2306
  %88 = load i32, i32* %i76, align 4, !dbg !2307
  %sub90 = sub nsw i32 %88, 1, !dbg !2308
  %idxprom91 = sext i32 %sub90 to i64, !dbg !2306
  %89 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2306
  %alloc_curve = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %89, i32 0, i32 12, !dbg !2309
  %arrayidx92 = getelementptr inbounds [48 x [48 x i8]], [48 x [48 x i8]]* %alloc_curve, i64 0, i64 %idxprom91, !dbg !2306
  %arrayidx93 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx92, i64 0, i64 %idxprom89, !dbg !2306
  store i8 %86, i8* %arrayidx93, align 1, !dbg !2310
  br label %for.inc94, !dbg !2306

for.inc94:                                        ; preds = %for.body84
  %90 = load i32, i32* %j, align 4, !dbg !2311
  %inc95 = add nsw i32 %90, 1, !dbg !2311
  store i32 %inc95, i32* %j, align 4, !dbg !2311
  br label %for.cond81, !dbg !2313, !llvm.loop !2314

for.end96:                                        ; preds = %for.cond81
  br label %for.inc97, !dbg !2316

for.inc97:                                        ; preds = %for.end96
  %91 = load i32, i32* %i76, align 4, !dbg !2318
  %inc98 = add nsw i32 %91, 1, !dbg !2318
  store i32 %inc98, i32* %i76, align 4, !dbg !2318
  br label %for.cond77, !dbg !2320, !llvm.loop !2321

for.end99:                                        ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata i32* %i100, metadata !2323, metadata !2064), !dbg !2325
  store i32 1, i32* %i100, align 4, !dbg !2325
  br label %for.cond101, !dbg !2326

for.cond101:                                      ; preds = %for.inc111, %for.end99
  %92 = load i32, i32* %i100, align 4, !dbg !2327
  %cmp102 = icmp slt i32 %92, 7, !dbg !2330
  br i1 %cmp102, label %for.body104, label %for.end113, !dbg !2331

for.body104:                                      ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata %struct.HuffmanCodebook** %hf, metadata !2332, metadata !2064), !dbg !2335
  %93 = load i32, i32* %i100, align 4, !dbg !2336
  %idxprom105 = sext i32 %93 to i64, !dbg !2337
  %arrayidx106 = getelementptr inbounds [7 x %struct.HuffmanCodebook], [7 x %struct.HuffmanCodebook]* @at9_huffman_sf_unsigned, i64 0, i64 %idxprom105, !dbg !2337
  store %struct.HuffmanCodebook* %arrayidx106, %struct.HuffmanCodebook** %hf, align 8, !dbg !2335
  %94 = load i32, i32* %i100, align 4, !dbg !2338
  %idxprom107 = sext i32 %94 to i64, !dbg !2339
  %95 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2339
  %sf_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %95, i32 0, i32 10, !dbg !2340
  %arrayidx108 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc, i64 0, i64 0, !dbg !2339
  %arrayidx109 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx108, i64 0, i64 %idxprom107, !dbg !2339
  %96 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf, align 8, !dbg !2341
  %size = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %96, i32 0, i32 2, !dbg !2342
  %97 = load i32, i32* %size, align 8, !dbg !2342
  %98 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf, align 8, !dbg !2343
  %bits = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %98, i32 0, i32 0, !dbg !2344
  %99 = load i8*, i8** %bits, align 8, !dbg !2344
  %100 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf, align 8, !dbg !2345
  %codes = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %100, i32 0, i32 1, !dbg !2346
  %101 = load i16*, i16** %codes, align 8, !dbg !2346
  %102 = bitcast i16* %101 to i8*, !dbg !2345
  %call110 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx109, i32 9, i32 %97, i8* %99, i32 1, i32 1, i8* %102, i32 2, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !2347
  br label %for.inc111, !dbg !2348

for.inc111:                                       ; preds = %for.body104
  %103 = load i32, i32* %i100, align 4, !dbg !2349
  %inc112 = add nsw i32 %103, 1, !dbg !2349
  store i32 %inc112, i32* %i100, align 4, !dbg !2349
  br label %for.cond101, !dbg !2351, !llvm.loop !2352

for.end113:                                       ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata i32* %i114, metadata !2354, metadata !2064), !dbg !2356
  store i32 2, i32* %i114, align 4, !dbg !2356
  br label %for.cond115, !dbg !2357

for.cond115:                                      ; preds = %for.inc143, %for.end113
  %104 = load i32, i32* %i114, align 4, !dbg !2358
  %cmp116 = icmp slt i32 %104, 6, !dbg !2361
  br i1 %cmp116, label %for.body118, label %for.end145, !dbg !2362

for.body118:                                      ; preds = %for.cond115
  call void @llvm.dbg.declare(metadata %struct.HuffmanCodebook** %hf119, metadata !2363, metadata !2064), !dbg !2365
  %105 = load i32, i32* %i114, align 4, !dbg !2366
  %idxprom120 = sext i32 %105 to i64, !dbg !2367
  %arrayidx121 = getelementptr inbounds [6 x %struct.HuffmanCodebook], [6 x %struct.HuffmanCodebook]* @at9_huffman_sf_signed, i64 0, i64 %idxprom120, !dbg !2367
  store %struct.HuffmanCodebook* %arrayidx121, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2365
  call void @llvm.dbg.declare(metadata i32* %nums, metadata !2368, metadata !2064), !dbg !2369
  %106 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2370
  %size122 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %106, i32 0, i32 2, !dbg !2371
  %107 = load i32, i32* %size122, align 8, !dbg !2371
  store i32 %107, i32* %nums, align 4, !dbg !2369
  call void @llvm.dbg.declare(metadata [32 x i16]* %sym, metadata !2372, metadata !2064), !dbg !2374
  call void @llvm.dbg.declare(metadata i32* %j123, metadata !2375, metadata !2064), !dbg !2377
  store i32 0, i32* %j123, align 4, !dbg !2377
  br label %for.cond124, !dbg !2378

for.cond124:                                      ; preds = %for.inc132, %for.body118
  %108 = load i32, i32* %j123, align 4, !dbg !2379
  %109 = load i32, i32* %nums, align 4, !dbg !2382
  %cmp125 = icmp slt i32 %108, %109, !dbg !2383
  br i1 %cmp125, label %for.body127, label %for.end134, !dbg !2384

for.body127:                                      ; preds = %for.cond124
  %110 = load i32, i32* %j123, align 4, !dbg !2385
  %111 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2386
  %value_bits = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %111, i32 0, i32 5, !dbg !2387
  %112 = load i32, i32* %value_bits, align 4, !dbg !2387
  %call128 = call i32 @sign_extend(i32 %110, i32 %112) #2, !dbg !2388
  %conv129 = trunc i32 %call128 to i16, !dbg !2388
  %113 = load i32, i32* %j123, align 4, !dbg !2389
  %idxprom130 = sext i32 %113 to i64, !dbg !2390
  %arrayidx131 = getelementptr inbounds [32 x i16], [32 x i16]* %sym, i64 0, i64 %idxprom130, !dbg !2390
  store i16 %conv129, i16* %arrayidx131, align 2, !dbg !2391
  br label %for.inc132, !dbg !2390

for.inc132:                                       ; preds = %for.body127
  %114 = load i32, i32* %j123, align 4, !dbg !2392
  %inc133 = add nsw i32 %114, 1, !dbg !2392
  store i32 %inc133, i32* %j123, align 4, !dbg !2392
  br label %for.cond124, !dbg !2394, !llvm.loop !2395

for.end134:                                       ; preds = %for.cond124
  %115 = load i32, i32* %i114, align 4, !dbg !2397
  %idxprom135 = sext i32 %115 to i64, !dbg !2398
  %116 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2398
  %sf_vlc136 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %116, i32 0, i32 10, !dbg !2399
  %arrayidx137 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc136, i64 0, i64 1, !dbg !2398
  %arrayidx138 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx137, i64 0, i64 %idxprom135, !dbg !2398
  %117 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2400
  %size139 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %117, i32 0, i32 2, !dbg !2401
  %118 = load i32, i32* %size139, align 8, !dbg !2401
  %119 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2402
  %bits140 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %119, i32 0, i32 0, !dbg !2403
  %120 = load i8*, i8** %bits140, align 8, !dbg !2403
  %121 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf119, align 8, !dbg !2404
  %codes141 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %121, i32 0, i32 1, !dbg !2405
  %122 = load i16*, i16** %codes141, align 8, !dbg !2405
  %123 = bitcast i16* %122 to i8*, !dbg !2404
  %arraydecay = getelementptr inbounds [32 x i16], [32 x i16]* %sym, i32 0, i32 0, !dbg !2406
  %124 = bitcast i16* %arraydecay to i8*, !dbg !2406
  %call142 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx138, i32 9, i32 %118, i8* %120, i32 1, i32 1, i8* %123, i32 2, i32 2, i8* %124, i32 2, i32 2, i32 0), !dbg !2407
  br label %for.inc143, !dbg !2408

for.inc143:                                       ; preds = %for.end134
  %125 = load i32, i32* %i114, align 4, !dbg !2409
  %inc144 = add nsw i32 %125, 1, !dbg !2409
  store i32 %inc144, i32* %i114, align 4, !dbg !2409
  br label %for.cond115, !dbg !2411, !llvm.loop !2412

for.end145:                                       ; preds = %for.cond115
  call void @llvm.dbg.declare(metadata i32* %i146, metadata !2414, metadata !2064), !dbg !2416
  store i32 0, i32* %i146, align 4, !dbg !2416
  br label %for.cond147, !dbg !2417

for.cond147:                                      ; preds = %for.inc183, %for.end145
  %126 = load i32, i32* %i146, align 4, !dbg !2418
  %cmp148 = icmp slt i32 %126, 2, !dbg !2421
  br i1 %cmp148, label %for.body150, label %for.end185, !dbg !2422

for.body150:                                      ; preds = %for.cond147
  call void @llvm.dbg.declare(metadata i32* %j151, metadata !2423, metadata !2064), !dbg !2426
  store i32 0, i32* %j151, align 4, !dbg !2426
  br label %for.cond152, !dbg !2427

for.cond152:                                      ; preds = %for.inc180, %for.body150
  %127 = load i32, i32* %j151, align 4, !dbg !2428
  %cmp153 = icmp slt i32 %127, 8, !dbg !2431
  br i1 %cmp153, label %for.body155, label %for.end182, !dbg !2432

for.body155:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2433, metadata !2064), !dbg !2436
  store i32 0, i32* %k, align 4, !dbg !2436
  br label %for.cond156, !dbg !2437

for.cond156:                                      ; preds = %for.inc177, %for.body155
  %128 = load i32, i32* %k, align 4, !dbg !2438
  %cmp157 = icmp slt i32 %128, 4, !dbg !2441
  br i1 %cmp157, label %for.body159, label %for.end179, !dbg !2442

for.body159:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata %struct.HuffmanCodebook** %hf160, metadata !2443, metadata !2064), !dbg !2445
  %129 = load i32, i32* %k, align 4, !dbg !2446
  %idxprom161 = sext i32 %129 to i64, !dbg !2447
  %130 = load i32, i32* %j151, align 4, !dbg !2448
  %idxprom162 = sext i32 %130 to i64, !dbg !2447
  %131 = load i32, i32* %i146, align 4, !dbg !2449
  %idxprom163 = sext i32 %131 to i64, !dbg !2447
  %arrayidx164 = getelementptr inbounds [2 x [8 x [4 x %struct.HuffmanCodebook]]], [2 x [8 x [4 x %struct.HuffmanCodebook]]]* @at9_huffman_coeffs, i64 0, i64 %idxprom163, !dbg !2447
  %arrayidx165 = getelementptr inbounds [8 x [4 x %struct.HuffmanCodebook]], [8 x [4 x %struct.HuffmanCodebook]]* %arrayidx164, i64 0, i64 %idxprom162, !dbg !2447
  %arrayidx166 = getelementptr inbounds [4 x %struct.HuffmanCodebook], [4 x %struct.HuffmanCodebook]* %arrayidx165, i64 0, i64 %idxprom161, !dbg !2447
  store %struct.HuffmanCodebook* %arrayidx166, %struct.HuffmanCodebook** %hf160, align 8, !dbg !2445
  %132 = load i32, i32* %k, align 4, !dbg !2450
  %idxprom167 = sext i32 %132 to i64, !dbg !2451
  %133 = load i32, i32* %j151, align 4, !dbg !2452
  %idxprom168 = sext i32 %133 to i64, !dbg !2451
  %134 = load i32, i32* %i146, align 4, !dbg !2453
  %idxprom169 = sext i32 %134 to i64, !dbg !2451
  %135 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2451
  %coeff_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %135, i32 0, i32 11, !dbg !2454
  %arrayidx170 = getelementptr inbounds [2 x [8 x [4 x %struct.VLC]]], [2 x [8 x [4 x %struct.VLC]]]* %coeff_vlc, i64 0, i64 %idxprom169, !dbg !2451
  %arrayidx171 = getelementptr inbounds [8 x [4 x %struct.VLC]], [8 x [4 x %struct.VLC]]* %arrayidx170, i64 0, i64 %idxprom168, !dbg !2451
  %arrayidx172 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx171, i64 0, i64 %idxprom167, !dbg !2451
  %136 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf160, align 8, !dbg !2455
  %size173 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %136, i32 0, i32 2, !dbg !2456
  %137 = load i32, i32* %size173, align 8, !dbg !2456
  %138 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf160, align 8, !dbg !2457
  %bits174 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %138, i32 0, i32 0, !dbg !2458
  %139 = load i8*, i8** %bits174, align 8, !dbg !2458
  %140 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %hf160, align 8, !dbg !2459
  %codes175 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %140, i32 0, i32 1, !dbg !2460
  %141 = load i16*, i16** %codes175, align 8, !dbg !2460
  %142 = bitcast i16* %141 to i8*, !dbg !2459
  %call176 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx172, i32 9, i32 %137, i8* %139, i32 1, i32 1, i8* %142, i32 2, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !2461
  br label %for.inc177, !dbg !2462

for.inc177:                                       ; preds = %for.body159
  %143 = load i32, i32* %k, align 4, !dbg !2463
  %inc178 = add nsw i32 %143, 1, !dbg !2463
  store i32 %inc178, i32* %k, align 4, !dbg !2463
  br label %for.cond156, !dbg !2465, !llvm.loop !2466

for.end179:                                       ; preds = %for.cond156
  br label %for.inc180, !dbg !2468

for.inc180:                                       ; preds = %for.end179
  %144 = load i32, i32* %j151, align 4, !dbg !2469
  %inc181 = add nsw i32 %144, 1, !dbg !2469
  store i32 %inc181, i32* %j151, align 4, !dbg !2469
  br label %for.cond152, !dbg !2471, !llvm.loop !2472

for.end182:                                       ; preds = %for.cond152
  br label %for.inc183, !dbg !2474

for.inc183:                                       ; preds = %for.end182
  %145 = load i32, i32* %i146, align 4, !dbg !2475
  %inc184 = add nsw i32 %145, 1, !dbg !2475
  store i32 %inc184, i32* %i146, align 4, !dbg !2475
  br label %for.cond147, !dbg !2477, !llvm.loop !2478

for.end185:                                       ; preds = %for.cond147
  store i32 0, i32* %retval, align 4, !dbg !2480
  br label %return, !dbg !2480

return:                                           ; preds = %for.end185, %if.then42, %if.then36, %if.then27, %if.then22, %if.then15, %if.then9, %if.then3, %if.then
  %146 = load i32, i32* %retval, align 4, !dbg !2481
  ret i32 %146, !dbg !2481
}

; Function Attrs: nounwind uwtable
define internal i32 @atrac9_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2482 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %s = alloca %struct.ATRAC9Context*, align 8
  %frames = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2483, metadata !2064), !dbg !2484
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2485, metadata !2064), !dbg !2486
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2487, metadata !2064), !dbg !2488
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2489, metadata !2064), !dbg !2490
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2491, metadata !2064), !dbg !2492
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2493, metadata !2064), !dbg !2494
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2495, metadata !2064), !dbg !2496
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2497
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2497
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2496
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s, metadata !2498, metadata !2064), !dbg !2499
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2500
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 6, !dbg !2501
  %3 = load i8*, i8** %priv_data, align 8, !dbg !2501
  %4 = bitcast i8* %3 to %struct.ATRAC9Context*, !dbg !2500
  store %struct.ATRAC9Context* %4, %struct.ATRAC9Context** %s, align 8, !dbg !2499
  call void @llvm.dbg.declare(metadata i32* %frames, metadata !2502, metadata !2064), !dbg !2503
  %5 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2504
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !2505
  %6 = load i32, i32* %size, align 8, !dbg !2505
  %7 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2506
  %avg_frame_size = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %7, i32 0, i32 6, !dbg !2507
  %8 = load i32, i32* %avg_frame_size, align 8, !dbg !2507
  %div = sdiv i32 %6, %8, !dbg !2508
  %9 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2509
  %frame_count = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %9, i32 0, i32 7, !dbg !2510
  %10 = load i32, i32* %frame_count, align 4, !dbg !2510
  %cmp = icmp sgt i32 %div, %10, !dbg !2511
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2512

cond.true:                                        ; preds = %entry
  %11 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2513
  %frame_count1 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %11, i32 0, i32 7, !dbg !2515
  %12 = load i32, i32* %frame_count1, align 4, !dbg !2515
  br label %cond.end, !dbg !2516

cond.false:                                       ; preds = %entry
  %13 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2517
  %size2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %13, i32 0, i32 4, !dbg !2519
  %14 = load i32, i32* %size2, align 8, !dbg !2519
  %15 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2520
  %avg_frame_size3 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %15, i32 0, i32 6, !dbg !2521
  %16 = load i32, i32* %avg_frame_size3, align 8, !dbg !2521
  %div4 = sdiv i32 %14, %16, !dbg !2522
  br label %cond.end, !dbg !2523

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %div4, %cond.false ], !dbg !2524
  store i32 %cond, i32* %frames, align 4, !dbg !2526
  %17 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2527
  %frame_log2 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %17, i32 0, i32 5, !dbg !2528
  %18 = load i32, i32* %frame_log2, align 4, !dbg !2528
  %shl = shl i32 1, %18, !dbg !2529
  %19 = load i32, i32* %frames, align 4, !dbg !2530
  %mul = mul nsw i32 %shl, %19, !dbg !2531
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2532
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 5, !dbg !2533
  store i32 %mul, i32* %nb_samples, align 8, !dbg !2534
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2535
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2536
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %21, %struct.AVFrame* %22, i32 0), !dbg !2537
  store i32 %call, i32* %ret, align 4, !dbg !2538
  %23 = load i32, i32* %ret, align 4, !dbg !2539
  %cmp5 = icmp slt i32 %23, 0, !dbg !2541
  br i1 %cmp5, label %if.then, label %if.end, !dbg !2542

if.then:                                          ; preds = %cond.end
  %24 = load i32, i32* %ret, align 4, !dbg !2543
  store i32 %24, i32* %retval, align 4, !dbg !2544
  br label %return, !dbg !2544

if.end:                                           ; preds = %cond.end
  %25 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2545
  %data6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i32 0, i32 3, !dbg !2546
  %26 = load i8*, i8** %data6, align 8, !dbg !2546
  %27 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2547
  %size7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %27, i32 0, i32 4, !dbg !2548
  %28 = load i32, i32* %size7, align 8, !dbg !2548
  %call8 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %26, i32 %28), !dbg !2549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2550, metadata !2064), !dbg !2552
  store i32 0, i32* %i, align 4, !dbg !2552
  br label %for.cond, !dbg !2553

for.cond:                                         ; preds = %for.inc17, %if.end
  %29 = load i32, i32* %i, align 4, !dbg !2554
  %30 = load i32, i32* %frames, align 4, !dbg !2557
  %cmp9 = icmp slt i32 %29, %30, !dbg !2558
  br i1 %cmp9, label %for.body, label %for.end19, !dbg !2559

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2560, metadata !2064), !dbg !2563
  store i32 0, i32* %j, align 4, !dbg !2563
  br label %for.cond10, !dbg !2564

for.cond10:                                       ; preds = %for.inc, %for.body
  %31 = load i32, i32* %j, align 4, !dbg !2565
  %32 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2568
  %block_config = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %32, i32 0, i32 9, !dbg !2569
  %33 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config, align 8, !dbg !2569
  %count = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %33, i32 0, i32 3, !dbg !2570
  %34 = load i32, i32* %count, align 4, !dbg !2570
  %cmp11 = icmp slt i32 %31, %34, !dbg !2571
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !2572

for.body12:                                       ; preds = %for.cond10
  %35 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2573
  %36 = load i32, i32* %j, align 4, !dbg !2575
  %idxprom = sext i32 %36 to i64, !dbg !2576
  %37 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2576
  %block = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %37, i32 0, i32 3, !dbg !2577
  %arrayidx = getelementptr inbounds [5 x %struct.ATRAC9BlockData], [5 x %struct.ATRAC9BlockData]* %block, i64 0, i64 %idxprom, !dbg !2576
  %38 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2578
  %39 = load i32, i32* %i, align 4, !dbg !2579
  %40 = load i32, i32* %j, align 4, !dbg !2580
  %call13 = call i32 @atrac9_decode_block(%struct.ATRAC9Context* %35, %struct.GetBitContext* %gb, %struct.ATRAC9BlockData* %arrayidx, %struct.AVFrame* %38, i32 %39, i32 %40), !dbg !2581
  store i32 %call13, i32* %ret, align 4, !dbg !2582
  %41 = load i32, i32* %ret, align 4, !dbg !2583
  %tobool = icmp ne i32 %41, 0, !dbg !2583
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !2585

if.then14:                                        ; preds = %for.body12
  %42 = load i32, i32* %ret, align 4, !dbg !2586
  store i32 %42, i32* %retval, align 4, !dbg !2587
  br label %return, !dbg !2587

if.end15:                                         ; preds = %for.body12
  %call16 = call i8* @align_get_bits(%struct.GetBitContext* %gb), !dbg !2588
  br label %for.inc, !dbg !2589

for.inc:                                          ; preds = %if.end15
  %43 = load i32, i32* %j, align 4, !dbg !2590
  %inc = add nsw i32 %43, 1, !dbg !2590
  store i32 %inc, i32* %j, align 4, !dbg !2590
  br label %for.cond10, !dbg !2592, !llvm.loop !2593

for.end:                                          ; preds = %for.cond10
  br label %for.inc17, !dbg !2595

for.inc17:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !2596
  %inc18 = add nsw i32 %44, 1, !dbg !2596
  store i32 %inc18, i32* %i, align 4, !dbg !2596
  br label %for.cond, !dbg !2598, !llvm.loop !2599

for.end19:                                        ; preds = %for.cond
  %45 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2601
  store i32 1, i32* %45, align 4, !dbg !2602
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2603
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 87, !dbg !2604
  %47 = load i32, i32* %block_align, align 4, !dbg !2604
  store i32 %47, i32* %retval, align 4, !dbg !2605
  br label %return, !dbg !2605

return:                                           ; preds = %for.end19, %if.then14, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !2606
  ret i32 %48, !dbg !2606
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @atrac9_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2607 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.ATRAC9Context*, align 8
  %i = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i13 = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2608, metadata !2064), !dbg !2609
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s, metadata !2610, metadata !2064), !dbg !2611
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2612
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2613
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2613
  %2 = bitcast i8* %1 to %struct.ATRAC9Context*, !dbg !2612
  store %struct.ATRAC9Context* %2, %struct.ATRAC9Context** %s, align 8, !dbg !2611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2614, metadata !2064), !dbg !2616
  store i32 1, i32* %i, align 4, !dbg !2616
  br label %for.cond, !dbg !2617

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2618
  %cmp = icmp slt i32 %3, 7, !dbg !2621
  br i1 %cmp, label %for.body, label %for.end, !dbg !2622

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !2623
  %idxprom = sext i32 %4 to i64, !dbg !2624
  %5 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2624
  %sf_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %5, i32 0, i32 10, !dbg !2625
  %arrayidx = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc, i64 0, i64 0, !dbg !2624
  %arrayidx1 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom, !dbg !2624
  call void @ff_free_vlc(%struct.VLC* %arrayidx1), !dbg !2626
  br label %for.inc, !dbg !2626

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !2627
  %inc = add nsw i32 %6, 1, !dbg !2627
  store i32 %inc, i32* %i, align 4, !dbg !2627
  br label %for.cond, !dbg !2629, !llvm.loop !2630

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !2632, metadata !2064), !dbg !2634
  store i32 2, i32* %i2, align 4, !dbg !2634
  br label %for.cond3, !dbg !2635

for.cond3:                                        ; preds = %for.inc10, %for.end
  %7 = load i32, i32* %i2, align 4, !dbg !2636
  %cmp4 = icmp slt i32 %7, 6, !dbg !2639
  br i1 %cmp4, label %for.body5, label %for.end12, !dbg !2640

for.body5:                                        ; preds = %for.cond3
  %8 = load i32, i32* %i2, align 4, !dbg !2641
  %idxprom6 = sext i32 %8 to i64, !dbg !2642
  %9 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2642
  %sf_vlc7 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %9, i32 0, i32 10, !dbg !2643
  %arrayidx8 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc7, i64 0, i64 1, !dbg !2642
  %arrayidx9 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !2642
  call void @ff_free_vlc(%struct.VLC* %arrayidx9), !dbg !2644
  br label %for.inc10, !dbg !2644

for.inc10:                                        ; preds = %for.body5
  %10 = load i32, i32* %i2, align 4, !dbg !2645
  %inc11 = add nsw i32 %10, 1, !dbg !2645
  store i32 %inc11, i32* %i2, align 4, !dbg !2645
  br label %for.cond3, !dbg !2647, !llvm.loop !2648

for.end12:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %i13, metadata !2650, metadata !2064), !dbg !2652
  store i32 0, i32* %i13, align 4, !dbg !2652
  br label %for.cond14, !dbg !2653

for.cond14:                                       ; preds = %for.inc35, %for.end12
  %11 = load i32, i32* %i13, align 4, !dbg !2654
  %cmp15 = icmp slt i32 %11, 2, !dbg !2657
  br i1 %cmp15, label %for.body16, label %for.end37, !dbg !2658

for.body16:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2659, metadata !2064), !dbg !2661
  store i32 0, i32* %j, align 4, !dbg !2661
  br label %for.cond17, !dbg !2662

for.cond17:                                       ; preds = %for.inc32, %for.body16
  %12 = load i32, i32* %j, align 4, !dbg !2663
  %cmp18 = icmp slt i32 %12, 8, !dbg !2666
  br i1 %cmp18, label %for.body19, label %for.end34, !dbg !2667

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2668, metadata !2064), !dbg !2670
  store i32 0, i32* %k, align 4, !dbg !2670
  br label %for.cond20, !dbg !2671

for.cond20:                                       ; preds = %for.inc29, %for.body19
  %13 = load i32, i32* %k, align 4, !dbg !2672
  %cmp21 = icmp slt i32 %13, 4, !dbg !2675
  br i1 %cmp21, label %for.body22, label %for.end31, !dbg !2676

for.body22:                                       ; preds = %for.cond20
  %14 = load i32, i32* %k, align 4, !dbg !2677
  %idxprom23 = sext i32 %14 to i64, !dbg !2678
  %15 = load i32, i32* %j, align 4, !dbg !2679
  %idxprom24 = sext i32 %15 to i64, !dbg !2678
  %16 = load i32, i32* %i13, align 4, !dbg !2680
  %idxprom25 = sext i32 %16 to i64, !dbg !2678
  %17 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2678
  %coeff_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %17, i32 0, i32 11, !dbg !2681
  %arrayidx26 = getelementptr inbounds [2 x [8 x [4 x %struct.VLC]]], [2 x [8 x [4 x %struct.VLC]]]* %coeff_vlc, i64 0, i64 %idxprom25, !dbg !2678
  %arrayidx27 = getelementptr inbounds [8 x [4 x %struct.VLC]], [8 x [4 x %struct.VLC]]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !2678
  %arrayidx28 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx27, i64 0, i64 %idxprom23, !dbg !2678
  call void @ff_free_vlc(%struct.VLC* %arrayidx28), !dbg !2682
  br label %for.inc29, !dbg !2682

for.inc29:                                        ; preds = %for.body22
  %18 = load i32, i32* %k, align 4, !dbg !2683
  %inc30 = add nsw i32 %18, 1, !dbg !2683
  store i32 %inc30, i32* %k, align 4, !dbg !2683
  br label %for.cond20, !dbg !2685, !llvm.loop !2686

for.end31:                                        ; preds = %for.cond20
  br label %for.inc32, !dbg !2688

for.inc32:                                        ; preds = %for.end31
  %19 = load i32, i32* %j, align 4, !dbg !2690
  %inc33 = add nsw i32 %19, 1, !dbg !2690
  store i32 %inc33, i32* %j, align 4, !dbg !2690
  br label %for.cond17, !dbg !2692, !llvm.loop !2693

for.end34:                                        ; preds = %for.cond17
  br label %for.inc35, !dbg !2695

for.inc35:                                        ; preds = %for.end34
  %20 = load i32, i32* %i13, align 4, !dbg !2697
  %inc36 = add nsw i32 %20, 1, !dbg !2697
  store i32 %inc36, i32* %i13, align 4, !dbg !2697
  br label %for.cond14, !dbg !2699, !llvm.loop !2700

for.end37:                                        ; preds = %for.cond14
  %21 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2702
  %imdct = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %21, i32 0, i32 2, !dbg !2703
  call void @ff_mdct_end(%struct.FFTContext* %imdct), !dbg !2704
  %22 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2705
  %fdsp = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %22, i32 0, i32 1, !dbg !2706
  %23 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2706
  %24 = bitcast %struct.AVFloatDSPContext* %23 to i8*, !dbg !2705
  call void @av_free(i8* %24), !dbg !2707
  ret i32 0, !dbg !2708
}

; Function Attrs: nounwind uwtable
define internal void @atrac9_decode_flush(%struct.AVCodecContext* %avctx) #1 !dbg !2709 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.ATRAC9Context*, align 8
  %j = alloca i32, align 4
  %b = alloca %struct.ATRAC9BlockData*, align 8
  %stereo = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca %struct.ATRAC9ChannelData*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2710, metadata !2064), !dbg !2711
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s, metadata !2712, metadata !2064), !dbg !2713
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2714
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2715
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2715
  %2 = bitcast i8* %1 to %struct.ATRAC9Context*, !dbg !2714
  store %struct.ATRAC9Context* %2, %struct.ATRAC9Context** %s, align 8, !dbg !2713
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2716, metadata !2064), !dbg !2718
  store i32 0, i32* %j, align 4, !dbg !2718
  br label %for.cond, !dbg !2719

for.cond:                                         ; preds = %for.inc11, %entry
  %3 = load i32, i32* %j, align 4, !dbg !2720
  %4 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2723
  %block_config = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %4, i32 0, i32 9, !dbg !2724
  %5 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config, align 8, !dbg !2724
  %count = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %5, i32 0, i32 3, !dbg !2725
  %6 = load i32, i32* %count, align 4, !dbg !2725
  %cmp = icmp slt i32 %3, %6, !dbg !2726
  br i1 %cmp, label %for.body, label %for.end13, !dbg !2727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b, metadata !2728, metadata !2064), !dbg !2730
  %7 = load i32, i32* %j, align 4, !dbg !2731
  %idxprom = sext i32 %7 to i64, !dbg !2732
  %8 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2732
  %block = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %8, i32 0, i32 3, !dbg !2733
  %arrayidx = getelementptr inbounds [5 x %struct.ATRAC9BlockData], [5 x %struct.ATRAC9BlockData]* %block, i64 0, i64 %idxprom, !dbg !2732
  store %struct.ATRAC9BlockData* %arrayidx, %struct.ATRAC9BlockData** %b, align 8, !dbg !2730
  call void @llvm.dbg.declare(metadata i32* %stereo, metadata !2734, metadata !2064), !dbg !2735
  %9 = load i32, i32* %j, align 4, !dbg !2736
  %idxprom1 = sext i32 %9 to i64, !dbg !2737
  %10 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s, align 8, !dbg !2737
  %block_config2 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %10, i32 0, i32 9, !dbg !2738
  %11 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config2, align 8, !dbg !2738
  %type = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %11, i32 0, i32 1, !dbg !2739
  %arrayidx3 = getelementptr inbounds [5 x i32], [5 x i32]* %type, i64 0, i64 %idxprom1, !dbg !2737
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !2737
  %cmp4 = icmp eq i32 %12, 1, !dbg !2740
  %conv = zext i1 %cmp4 to i32, !dbg !2740
  store i32 %conv, i32* %stereo, align 4, !dbg !2735
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2741, metadata !2064), !dbg !2743
  store i32 0, i32* %i, align 4, !dbg !2743
  br label %for.cond5, !dbg !2744

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !2745
  %14 = load i32, i32* %stereo, align 4, !dbg !2748
  %cmp6 = icmp sle i32 %13, %14, !dbg !2749
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !2750

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c, metadata !2751, metadata !2064), !dbg !2753
  %15 = load i32, i32* %i, align 4, !dbg !2754
  %idxprom9 = sext i32 %15 to i64, !dbg !2755
  %16 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b, align 8, !dbg !2755
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %16, i32 0, i32 0, !dbg !2756
  %arrayidx10 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 %idxprom9, !dbg !2755
  store %struct.ATRAC9ChannelData* %arrayidx10, %struct.ATRAC9ChannelData** %c, align 8, !dbg !2753
  %17 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !2757
  %prev_win = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %17, i32 0, i32 13, !dbg !2758
  %arraydecay = getelementptr inbounds [128 x float], [128 x float]* %prev_win, i32 0, i32 0, !dbg !2759
  %18 = bitcast float* %arraydecay to i8*, !dbg !2759
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 512, i32 32, i1 false), !dbg !2759
  br label %for.inc, !dbg !2760

for.inc:                                          ; preds = %for.body8
  %19 = load i32, i32* %i, align 4, !dbg !2761
  %inc = add nsw i32 %19, 1, !dbg !2761
  store i32 %inc, i32* %i, align 4, !dbg !2761
  br label %for.cond5, !dbg !2763, !llvm.loop !2764

for.end:                                          ; preds = %for.cond5
  br label %for.inc11, !dbg !2766

for.inc11:                                        ; preds = %for.end
  %20 = load i32, i32* %j, align 4, !dbg !2767
  %inc12 = add nsw i32 %20, 1, !dbg !2767
  store i32 %inc12, i32* %j, align 4, !dbg !2767
  br label %for.cond, !dbg !2769, !llvm.loop !2770

for.end13:                                        ; preds = %for.cond
  ret void, !dbg !2772
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_lfg_init(%struct.AVLFG*, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !2773 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2776, metadata !2064), !dbg !2777
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2778, metadata !2064), !dbg !2779
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !2780, metadata !2064), !dbg !2781
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !2782
  %cmp = icmp sgt i32 %0, 268435455, !dbg !2784
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2785

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !2786
  %cmp1 = icmp slt i32 %1, 0, !dbg !2788
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2789

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !2790
  br label %if.end, !dbg !2791

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2792
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !2793
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !2794
  %mul = mul nsw i32 %4, 8, !dbg !2795
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !2796
  ret i32 %call, !dbg !2797
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !2798 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2801, metadata !2064), !dbg !2806
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2808, metadata !2064), !dbg !2809
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2810, metadata !2064), !dbg !2811
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2812, metadata !2064), !dbg !2813
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2814, metadata !2064), !dbg !2815
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2816
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2817
  %1 = load i32, i32* %index, align 8, !dbg !2817
  store i32 %1, i32* %re_index, align 4, !dbg !2815
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2818, metadata !2064), !dbg !2819
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2820, metadata !2064), !dbg !2821
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2822
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2823
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2823
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2821
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2824
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2825
  %5 = load i8*, i8** %buffer, align 8, !dbg !2825
  %6 = load i32, i32* %re_index, align 4, !dbg !2826
  %shr = lshr i32 %6, 3, !dbg !2827
  %idx.ext = zext i32 %shr to i64, !dbg !2828
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2828
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2829
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2829
  %8 = load i32, i32* %l, align 1, !dbg !2829
  store i32 %8, i32* %x.addr.i, align 4, !dbg !2830
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !2831
  %shl.i = shl i32 %9, 8, !dbg !2832
  %and.i = and i32 %shl.i, 65280, !dbg !2833
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !2834
  %shr.i = lshr i32 %10, 8, !dbg !2835
  %and1.i = and i32 %shr.i, 255, !dbg !2836
  %or.i = or i32 %and.i, %and1.i, !dbg !2837
  %shl2.i = shl i32 %or.i, 16, !dbg !2838
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !2839
  %shr3.i = lshr i32 %11, 16, !dbg !2840
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2841
  %and5.i = and i32 %shl4.i, 65280, !dbg !2842
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !2843
  %shr6.i = lshr i32 %12, 16, !dbg !2844
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2845
  %and8.i = and i32 %shr7.i, 255, !dbg !2846
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2847
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2848
  %13 = load i32, i32* %re_index, align 4, !dbg !2849
  %and = and i32 %13, 7, !dbg !2850
  %shl = shl i32 %or10.i, %and, !dbg !2851
  store i32 %shl, i32* %re_cache, align 4, !dbg !2852
  %14 = load i32, i32* %re_cache, align 4, !dbg !2853
  %15 = load i32, i32* %n.addr, align 4, !dbg !2854
  %conv = trunc i32 %15 to i8, !dbg !2854
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !2855
  store i32 %call4, i32* %tmp, align 4, !dbg !2856
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !2857
  %17 = load i32, i32* %re_index, align 4, !dbg !2858
  %18 = load i32, i32* %n.addr, align 4, !dbg !2859
  %add = add i32 %17, %18, !dbg !2860
  %cmp = icmp ugt i32 %16, %add, !dbg !2861
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2862

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !2863
  %20 = load i32, i32* %n.addr, align 4, !dbg !2865
  %add6 = add i32 %19, %20, !dbg !2866
  br label %cond.end, !dbg !2867

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !2868
  br label %cond.end, !dbg !2870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !2871
  store i32 %cond, i32* %re_index, align 4, !dbg !2873
  %22 = load i32, i32* %re_index, align 4, !dbg !2874
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2875
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !2876
  store i32 %22, i32* %index7, align 8, !dbg !2877
  %24 = load i32, i32* %tmp, align 4, !dbg !2878
  ret i32 %24, !dbg !2879
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !2880 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2883, metadata !2064), !dbg !2884
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2885, metadata !2064), !dbg !2886
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2887
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2888
  %1 = load i32, i32* %index1, align 8, !dbg !2888
  store i32 %1, i32* %index, align 4, !dbg !2886
  call void @llvm.dbg.declare(metadata i8* %result, metadata !2889, metadata !2064), !dbg !2890
  %2 = load i32, i32* %index, align 4, !dbg !2891
  %shr = lshr i32 %2, 3, !dbg !2892
  %idxprom = zext i32 %shr to i64, !dbg !2893
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2893
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !2894
  %4 = load i8*, i8** %buffer, align 8, !dbg !2894
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !2893
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2893
  store i8 %5, i8* %result, align 1, !dbg !2890
  %6 = load i32, i32* %index, align 4, !dbg !2895
  %and = and i32 %6, 7, !dbg !2896
  %7 = load i8, i8* %result, align 1, !dbg !2897
  %conv = zext i8 %7 to i32, !dbg !2897
  %shl = shl i32 %conv, %and, !dbg !2897
  %conv2 = trunc i32 %shl to i8, !dbg !2897
  store i8 %conv2, i8* %result, align 1, !dbg !2897
  %8 = load i8, i8* %result, align 1, !dbg !2898
  %conv3 = zext i8 %8 to i32, !dbg !2898
  %shr4 = ashr i32 %conv3, 7, !dbg !2898
  %conv5 = trunc i32 %shr4 to i8, !dbg !2898
  store i8 %conv5, i8* %result, align 1, !dbg !2898
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2899
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !2901
  %10 = load i32, i32* %index6, align 8, !dbg !2901
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2902
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !2903
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2903
  %cmp = icmp slt i32 %10, %12, !dbg !2904
  br i1 %cmp, label %if.then, label %if.end, !dbg !2905

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !2906
  %inc = add i32 %13, 1, !dbg !2906
  store i32 %inc, i32* %index, align 4, !dbg !2906
  br label %if.end, !dbg !2907

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !2908
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2909
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !2910
  store i32 %14, i32* %index8, align 8, !dbg !2911
  %16 = load i8, i8* %result, align 1, !dbg !2912
  %conv9 = zext i8 %16 to i32, !dbg !2912
  ret i32 %conv9, !dbg !2913
}

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #3

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

; Function Attrs: nounwind
declare float @sinf(float) #5

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #6 !dbg !2914 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !2918, metadata !2064), !dbg !2919
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !2920, metadata !2064), !dbg !2921
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2922, metadata !2064), !dbg !2923
  %0 = load i32, i32* %bits.addr, align 4, !dbg !2924
  %conv = zext i32 %0 to i64, !dbg !2924
  %sub = sub i64 32, %conv, !dbg !2925
  %conv1 = trunc i64 %sub to i32, !dbg !2926
  store i32 %conv1, i32* %shift, align 4, !dbg !2923
  call void @llvm.dbg.declare(metadata %union.anon* %v, metadata !2927, metadata !2064), !dbg !2932
  %u = bitcast %union.anon* %v to i32*, !dbg !2933
  %1 = load i32, i32* %val.addr, align 4, !dbg !2934
  %2 = load i32, i32* %shift, align 4, !dbg !2935
  %shl = shl i32 %1, %2, !dbg !2936
  store i32 %shl, i32* %u, align 4, !dbg !2933
  %s = bitcast %union.anon* %v to i32*, !dbg !2937
  %3 = load i32, i32* %s, align 4, !dbg !2937
  %4 = load i32, i32* %shift, align 4, !dbg !2938
  %shr = ashr i32 %3, %4, !dbg !2939
  ret i32 %shr, !dbg !2940
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !2941 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2942, metadata !2064), !dbg !2943
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2944, metadata !2064), !dbg !2945
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !2946, metadata !2064), !dbg !2947
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !2948, metadata !2064), !dbg !2949
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2950, metadata !2064), !dbg !2951
  store i32 0, i32* %ret, align 4, !dbg !2951
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !2952
  %cmp = icmp sge i32 %0, 2147483135, !dbg !2954
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2955

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !2956
  %cmp1 = icmp slt i32 %1, 0, !dbg !2958
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2959

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2960
  %tobool = icmp ne i8* %2, null, !dbg !2960
  br i1 %tobool, label %if.end, label %if.then, !dbg !2962

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !2963
  store i8* null, i8** %buffer.addr, align 8, !dbg !2965
  store i32 -1094995529, i32* %ret, align 4, !dbg !2966
  br label %if.end, !dbg !2967

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !2968
  %add = add nsw i32 %3, 7, !dbg !2969
  %shr = ashr i32 %add, 3, !dbg !2970
  store i32 %shr, i32* %buffer_size, align 4, !dbg !2971
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2972
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2973
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !2974
  store i8* %4, i8** %buffer3, align 8, !dbg !2975
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !2976
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2977
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !2978
  store i32 %6, i32* %size_in_bits, align 4, !dbg !2979
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !2980
  %add4 = add nsw i32 %8, 8, !dbg !2981
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2982
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !2983
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !2984
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !2985
  %11 = load i32, i32* %buffer_size, align 4, !dbg !2986
  %idx.ext = sext i32 %11 to i64, !dbg !2987
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !2987
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2988
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !2989
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !2990
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2991
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !2992
  store i32 0, i32* %index, align 8, !dbg !2993
  %14 = load i32, i32* %ret, align 4, !dbg !2994
  ret i32 %14, !dbg !2995
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !2996 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !3000, metadata !2064), !dbg !3001
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !3002, metadata !2064), !dbg !3003
  %0 = load i32, i32* %a.addr, align 4, !dbg !3004
  %1 = load i8, i8* %s.addr, align 1, !dbg !3005
  %conv = sext i8 %1 to i32, !dbg !3005
  %sub = sub nsw i32 0, %conv, !dbg !3006
  %conv1 = trunc i32 %sub to i8, !dbg !3007
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !3004, !srcloc !3008
  store i32 %2, i32* %a.addr, align 4, !dbg !3004
  %3 = load i32, i32* %a.addr, align 4, !dbg !3009
  ret i32 %3, !dbg !3010
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @atrac9_decode_block(%struct.ATRAC9Context* %s, %struct.GetBitContext* %gb, %struct.ATRAC9BlockData* %b, %struct.AVFrame* %frame, i32 %frame_idx, i32 %block_idx) #1 !dbg !3011 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %frame_idx.addr = alloca i32, align 4
  %block_idx.addr = alloca i32, align 4
  %first_in_pkt = alloca i32, align 4
  %reuse_params = alloca i32, align 4
  %stereo = alloca i32, align 4
  %c = alloca %struct.ATRAC9ChannelData*, align 8
  %precision = alloca i32, align 4
  %i = alloca i32, align 4
  %i24 = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %j = alloca i32, align 4
  %stereo_band = alloca i32, align 4
  %ext_band = alloca i32, align 4
  %min_band_count = alloca i32, align 4
  %i125 = alloca i32, align 4
  %i138 = alloca i32, align 4
  %i156 = alloca i32, align 4
  %c161 = alloca %struct.ATRAC9ChannelData*, align 8
  %i187 = alloca i32, align 4
  %c192 = alloca %struct.ATRAC9ChannelData*, align 8
  %dst_idx = alloca i32, align 4
  %wsize = alloca i32, align 4
  %offset = alloca i64, align 8
  %dst = alloca float*, align 8
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !3014, metadata !2064), !dbg !3015
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3016, metadata !2064), !dbg !3017
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !3018, metadata !2064), !dbg !3019
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3020, metadata !2064), !dbg !3021
  store i32 %frame_idx, i32* %frame_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_idx.addr, metadata !3022, metadata !2064), !dbg !3023
  store i32 %block_idx, i32* %block_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block_idx.addr, metadata !3024, metadata !2064), !dbg !3025
  call void @llvm.dbg.declare(metadata i32* %first_in_pkt, metadata !3026, metadata !2064), !dbg !3027
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3028
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !3029
  %tobool = icmp ne i32 %call, 0, !dbg !3030
  %lnot = xor i1 %tobool, true, !dbg !3030
  %lnot.ext = zext i1 %lnot to i32, !dbg !3030
  store i32 %lnot.ext, i32* %first_in_pkt, align 4, !dbg !3027
  call void @llvm.dbg.declare(metadata i32* %reuse_params, metadata !3031, metadata !2064), !dbg !3032
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3033
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %1), !dbg !3034
  store i32 %call1, i32* %reuse_params, align 4, !dbg !3032
  call void @llvm.dbg.declare(metadata i32* %stereo, metadata !3035, metadata !2064), !dbg !3036
  %2 = load i32, i32* %block_idx.addr, align 4, !dbg !3037
  %idxprom = sext i32 %2 to i64, !dbg !3038
  %3 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3038
  %block_config = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %3, i32 0, i32 9, !dbg !3039
  %4 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config, align 8, !dbg !3039
  %type = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %4, i32 0, i32 1, !dbg !3040
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %type, i64 0, i64 %idxprom, !dbg !3038
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3038
  %cmp = icmp eq i32 %5, 1, !dbg !3041
  %conv = zext i1 %cmp to i32, !dbg !3041
  store i32 %conv, i32* %stereo, align 4, !dbg !3036
  %6 = load i32, i32* %block_idx.addr, align 4, !dbg !3042
  %idxprom2 = sext i32 %6 to i64, !dbg !3044
  %7 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3044
  %block_config3 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %7, i32 0, i32 9, !dbg !3045
  %8 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config3, align 8, !dbg !3045
  %type4 = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %8, i32 0, i32 1, !dbg !3046
  %arrayidx5 = getelementptr inbounds [5 x i32], [5 x i32]* %type4, i64 0, i64 %idxprom2, !dbg !3044
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !3044
  %cmp6 = icmp eq i32 %9, 2, !dbg !3047
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3048

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c, metadata !3049, metadata !2064), !dbg !3051
  %10 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3052
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %10, i32 0, i32 0, !dbg !3053
  %arrayidx8 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 0, !dbg !3052
  store %struct.ATRAC9ChannelData* %arrayidx8, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %precision, metadata !3054, metadata !2064), !dbg !3055
  %11 = load i32, i32* %reuse_params, align 4, !dbg !3056
  %tobool9 = icmp ne i32 %11, 0, !dbg !3056
  %cond = select i1 %tobool9, i32 8, i32 4, !dbg !3056
  store i32 %cond, i32* %precision, align 4, !dbg !3055
  %12 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3057
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %12, i32 0, i32 2, !dbg !3058
  store i32 2, i32* %q_unit_cnt, align 4, !dbg !3059
  %13 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3060
  %q_unit_cnt10 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %13, i32 0, i32 1, !dbg !3061
  store i32 2, i32* %q_unit_cnt10, align 4, !dbg !3062
  %14 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3063
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %14, i32 0, i32 3, !dbg !3064
  %arraydecay = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i32 0, i32 0, !dbg !3065
  %15 = bitcast i32* %arraydecay to i8*, !dbg !3065
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 124, i32 8, i1 false), !dbg !3065
  %16 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3066
  %q_coeffs_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %16, i32 0, i32 10, !dbg !3067
  %arraydecay11 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_fine, i32 0, i32 0, !dbg !3068
  %17 = bitcast i32* %arraydecay11 to i8*, !dbg !3068
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 1024, i32 16, i1 false), !dbg !3068
  %18 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3069
  %q_coeffs_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %18, i32 0, i32 9, !dbg !3070
  %arraydecay12 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_coarse, i32 0, i32 0, !dbg !3071
  %19 = bitcast i32* %arraydecay12 to i8*, !dbg !3071
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 1024, i32 16, i1 false), !dbg !3071
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3072, metadata !2064), !dbg !3074
  store i32 0, i32* %i, align 4, !dbg !3074
  br label %for.cond, !dbg !3075

for.cond:                                         ; preds = %for.inc, %if.then
  %20 = load i32, i32* %i, align 4, !dbg !3076
  %21 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3079
  %q_unit_cnt13 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %21, i32 0, i32 2, !dbg !3080
  %22 = load i32, i32* %q_unit_cnt13, align 4, !dbg !3080
  %cmp14 = icmp slt i32 %20, %22, !dbg !3081
  br i1 %cmp14, label %for.body, label %for.end, !dbg !3082

for.body:                                         ; preds = %for.cond
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3083
  %call16 = call i32 @get_bits(%struct.GetBitContext* %23, i32 5), !dbg !3085
  %24 = load i32, i32* %i, align 4, !dbg !3086
  %idxprom17 = sext i32 %24 to i64, !dbg !3087
  %25 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3087
  %scalefactors18 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %25, i32 0, i32 3, !dbg !3088
  %arrayidx19 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors18, i64 0, i64 %idxprom17, !dbg !3087
  store i32 %call16, i32* %arrayidx19, align 4, !dbg !3089
  %26 = load i32, i32* %precision, align 4, !dbg !3090
  %27 = load i32, i32* %i, align 4, !dbg !3091
  %idxprom20 = sext i32 %27 to i64, !dbg !3092
  %28 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3092
  %precision_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %28, i32 0, i32 5, !dbg !3093
  %arrayidx21 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse, i64 0, i64 %idxprom20, !dbg !3092
  store i32 %26, i32* %arrayidx21, align 4, !dbg !3094
  %29 = load i32, i32* %i, align 4, !dbg !3095
  %idxprom22 = sext i32 %29 to i64, !dbg !3096
  %30 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3096
  %precision_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %30, i32 0, i32 6, !dbg !3097
  %arrayidx23 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine, i64 0, i64 %idxprom22, !dbg !3096
  store i32 0, i32* %arrayidx23, align 4, !dbg !3098
  br label %for.inc, !dbg !3099

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !3100
  %inc = add nsw i32 %31, 1, !dbg !3100
  store i32 %inc, i32* %i, align 4, !dbg !3100
  br label %for.cond, !dbg !3102, !llvm.loop !3103

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i24, metadata !3105, metadata !2064), !dbg !3107
  store i32 0, i32* %i24, align 4, !dbg !3107
  br label %for.cond25, !dbg !3108

for.cond25:                                       ; preds = %for.inc50, %for.end
  %32 = load i32, i32* %i24, align 4, !dbg !3109
  %33 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3112
  %q_unit_cnt26 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %33, i32 0, i32 1, !dbg !3113
  %34 = load i32, i32* %q_unit_cnt26, align 4, !dbg !3113
  %cmp27 = icmp slt i32 %32, %34, !dbg !3114
  br i1 %cmp27, label %for.body29, label %for.end52, !dbg !3115

for.body29:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3116, metadata !2064), !dbg !3118
  %35 = load i32, i32* %i24, align 4, !dbg !3119
  %add = add nsw i32 %35, 0, !dbg !3120
  %idxprom30 = sext i32 %add to i64, !dbg !3121
  %arrayidx31 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom30, !dbg !3121
  %36 = load i32, i32* %arrayidx31, align 4, !dbg !3121
  store i32 %36, i32* %start, align 4, !dbg !3118
  call void @llvm.dbg.declare(metadata i32* %end, metadata !3122, metadata !2064), !dbg !3123
  %37 = load i32, i32* %i24, align 4, !dbg !3124
  %add32 = add nsw i32 %37, 1, !dbg !3125
  %idxprom33 = sext i32 %add32 to i64, !dbg !3126
  %arrayidx34 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom33, !dbg !3126
  %38 = load i32, i32* %arrayidx34, align 4, !dbg !3126
  store i32 %38, i32* %end, align 4, !dbg !3123
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3127, metadata !2064), !dbg !3129
  %39 = load i32, i32* %start, align 4, !dbg !3130
  store i32 %39, i32* %j, align 4, !dbg !3129
  br label %for.cond35, !dbg !3131

for.cond35:                                       ; preds = %for.inc47, %for.body29
  %40 = load i32, i32* %j, align 4, !dbg !3132
  %41 = load i32, i32* %end, align 4, !dbg !3135
  %cmp36 = icmp slt i32 %40, %41, !dbg !3136
  br i1 %cmp36, label %for.body38, label %for.end49, !dbg !3137

for.body38:                                       ; preds = %for.cond35
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3138
  %43 = load i32, i32* %i24, align 4, !dbg !3139
  %idxprom39 = sext i32 %43 to i64, !dbg !3140
  %44 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3140
  %precision_coarse40 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %44, i32 0, i32 5, !dbg !3141
  %arrayidx41 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse40, i64 0, i64 %idxprom39, !dbg !3140
  %45 = load i32, i32* %arrayidx41, align 4, !dbg !3140
  %add42 = add nsw i32 %45, 1, !dbg !3142
  %call43 = call i32 @get_bits(%struct.GetBitContext* %42, i32 %add42), !dbg !3143
  %46 = load i32, i32* %j, align 4, !dbg !3144
  %idxprom44 = sext i32 %46 to i64, !dbg !3145
  %47 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3145
  %q_coeffs_coarse45 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %47, i32 0, i32 9, !dbg !3146
  %arrayidx46 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_coarse45, i64 0, i64 %idxprom44, !dbg !3145
  store i32 %call43, i32* %arrayidx46, align 4, !dbg !3147
  br label %for.inc47, !dbg !3145

for.inc47:                                        ; preds = %for.body38
  %48 = load i32, i32* %j, align 4, !dbg !3148
  %inc48 = add nsw i32 %48, 1, !dbg !3148
  store i32 %inc48, i32* %j, align 4, !dbg !3148
  br label %for.cond35, !dbg !3150, !llvm.loop !3151

for.end49:                                        ; preds = %for.cond35
  br label %for.inc50, !dbg !3153

for.inc50:                                        ; preds = %for.end49
  %49 = load i32, i32* %i24, align 4, !dbg !3154
  %inc51 = add nsw i32 %49, 1, !dbg !3154
  store i32 %inc51, i32* %i24, align 4, !dbg !3154
  br label %for.cond25, !dbg !3156, !llvm.loop !3157

for.end52:                                        ; preds = %for.cond25
  %50 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3159
  %51 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3160
  %52 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !3161
  call void @dequantize(%struct.ATRAC9Context* %50, %struct.ATRAC9BlockData* %51, %struct.ATRAC9ChannelData* %52), !dbg !3162
  %53 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3163
  %54 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3164
  call void @apply_scalefactors(%struct.ATRAC9Context* %53, %struct.ATRAC9BlockData* %54, i32 0), !dbg !3165
  br label %imdct, !dbg !3166

if.end:                                           ; preds = %entry
  %55 = load i32, i32* %first_in_pkt, align 4, !dbg !3167
  %tobool53 = icmp ne i32 %55, 0, !dbg !3167
  br i1 %tobool53, label %land.lhs.true, label %if.end56, !dbg !3169

land.lhs.true:                                    ; preds = %if.end
  %56 = load i32, i32* %reuse_params, align 4, !dbg !3170
  %tobool54 = icmp ne i32 %56, 0, !dbg !3170
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !3172

if.then55:                                        ; preds = %land.lhs.true
  %57 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3173
  %avctx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %57, i32 0, i32 0, !dbg !3175
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3175
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !3173
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i32 0, i32 0)), !dbg !3176
  store i32 -1094995529, i32* %retval, align 4, !dbg !3177
  br label %return, !dbg !3177

if.end56:                                         ; preds = %land.lhs.true, %if.end
  %60 = load i32, i32* %reuse_params, align 4, !dbg !3178
  %tobool57 = icmp ne i32 %60, 0, !dbg !3178
  br i1 %tobool57, label %if.end113, label %if.then58, !dbg !3180

if.then58:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i32* %stereo_band, metadata !3181, metadata !2064), !dbg !3183
  call void @llvm.dbg.declare(metadata i32* %ext_band, metadata !3184, metadata !2064), !dbg !3185
  call void @llvm.dbg.declare(metadata i32* %min_band_count, metadata !3186, metadata !2064), !dbg !3187
  %61 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3188
  %samplerate_idx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %61, i32 0, i32 8, !dbg !3189
  %62 = load i32, i32* %samplerate_idx, align 16, !dbg !3189
  %cmp59 = icmp sgt i32 %62, 7, !dbg !3190
  %cond61 = select i1 %cmp59, i32 1, i32 3, !dbg !3188
  store i32 %cond61, i32* %min_band_count, align 4, !dbg !3187
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3191
  %call62 = call i32 @get_bits(%struct.GetBitContext* %63, i32 4), !dbg !3192
  %64 = load i32, i32* %min_band_count, align 4, !dbg !3193
  %add63 = add i32 %call62, %64, !dbg !3194
  %65 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3195
  %band_count = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %65, i32 0, i32 1, !dbg !3196
  store i32 %add63, i32* %band_count, align 32, !dbg !3197
  %66 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3198
  %band_count64 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %66, i32 0, i32 1, !dbg !3199
  %67 = load i32, i32* %band_count64, align 32, !dbg !3199
  %idxprom65 = sext i32 %67 to i64, !dbg !3200
  %arrayidx66 = getelementptr inbounds [19 x i8], [19 x i8]* @at9_tab_band_q_unit_map, i64 0, i64 %idxprom65, !dbg !3200
  %68 = load i8, i8* %arrayidx66, align 1, !dbg !3200
  %conv67 = zext i8 %68 to i32, !dbg !3200
  %69 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3201
  %q_unit_cnt68 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %69, i32 0, i32 2, !dbg !3202
  store i32 %conv67, i32* %q_unit_cnt68, align 4, !dbg !3203
  %70 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3204
  %q_unit_cnt69 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %70, i32 0, i32 2, !dbg !3205
  %71 = load i32, i32* %q_unit_cnt69, align 4, !dbg !3205
  %72 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3206
  %stereo_q_unit = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %72, i32 0, i32 4, !dbg !3207
  store i32 %71, i32* %stereo_q_unit, align 4, !dbg !3208
  %73 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3209
  %band_ext_q_unit = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %73, i32 0, i32 7, !dbg !3210
  store i32 %71, i32* %band_ext_q_unit, align 8, !dbg !3211
  %74 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3212
  %band_count70 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %74, i32 0, i32 1, !dbg !3214
  %75 = load i32, i32* %band_count70, align 32, !dbg !3214
  %76 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3215
  %samplerate_idx71 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %76, i32 0, i32 8, !dbg !3216
  %77 = load i32, i32* %samplerate_idx71, align 16, !dbg !3216
  %idxprom72 = sext i32 %77 to i64, !dbg !3217
  %arrayidx73 = getelementptr inbounds [16 x i8], [16 x i8]* @at9_tab_sri_max_bands, i64 0, i64 %idxprom72, !dbg !3217
  %78 = load i8, i8* %arrayidx73, align 1, !dbg !3217
  %conv74 = zext i8 %78 to i32, !dbg !3217
  %cmp75 = icmp sgt i32 %75, %conv74, !dbg !3218
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !3219

if.then77:                                        ; preds = %if.then58
  %79 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3220
  %avctx78 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %79, i32 0, i32 0, !dbg !3222
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx78, align 32, !dbg !3222
  %81 = bitcast %struct.AVCodecContext* %80 to i8*, !dbg !3220
  %82 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3223
  %band_count79 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %82, i32 0, i32 1, !dbg !3224
  %83 = load i32, i32* %band_count79, align 32, !dbg !3224
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i32 %83), !dbg !3225
  store i32 -1094995529, i32* %retval, align 4, !dbg !3226
  br label %return, !dbg !3226

if.end80:                                         ; preds = %if.then58
  %84 = load i32, i32* %stereo, align 4, !dbg !3227
  %tobool81 = icmp ne i32 %84, 0, !dbg !3227
  br i1 %tobool81, label %if.then82, label %if.end95, !dbg !3229

if.then82:                                        ; preds = %if.end80
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3230
  %call83 = call i32 @get_bits(%struct.GetBitContext* %85, i32 4), !dbg !3232
  %86 = load i32, i32* %min_band_count, align 4, !dbg !3233
  %add84 = add i32 %call83, %86, !dbg !3234
  store i32 %add84, i32* %stereo_band, align 4, !dbg !3235
  %87 = load i32, i32* %stereo_band, align 4, !dbg !3236
  %88 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3238
  %band_count85 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %88, i32 0, i32 1, !dbg !3239
  %89 = load i32, i32* %band_count85, align 32, !dbg !3239
  %cmp86 = icmp sgt i32 %87, %89, !dbg !3240
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !3241

if.then88:                                        ; preds = %if.then82
  %90 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3242
  %avctx89 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %90, i32 0, i32 0, !dbg !3244
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx89, align 32, !dbg !3244
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !3242
  %93 = load i32, i32* %stereo_band, align 4, !dbg !3245
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0), i32 %93), !dbg !3246
  store i32 -1094995529, i32* %retval, align 4, !dbg !3247
  br label %return, !dbg !3247

if.end90:                                         ; preds = %if.then82
  %94 = load i32, i32* %stereo_band, align 4, !dbg !3248
  %idxprom91 = sext i32 %94 to i64, !dbg !3249
  %arrayidx92 = getelementptr inbounds [19 x i8], [19 x i8]* @at9_tab_band_q_unit_map, i64 0, i64 %idxprom91, !dbg !3249
  %95 = load i8, i8* %arrayidx92, align 1, !dbg !3249
  %conv93 = zext i8 %95 to i32, !dbg !3249
  %96 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3250
  %stereo_q_unit94 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %96, i32 0, i32 4, !dbg !3251
  store i32 %conv93, i32* %stereo_q_unit94, align 4, !dbg !3252
  br label %if.end95, !dbg !3253

if.end95:                                         ; preds = %if.end90, %if.end80
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3254
  %call96 = call i32 @get_bits1(%struct.GetBitContext* %97), !dbg !3255
  %98 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3256
  %has_band_ext = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %98, i32 0, i32 5, !dbg !3257
  store i32 %call96, i32* %has_band_ext, align 16, !dbg !3258
  %99 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3259
  %has_band_ext97 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %99, i32 0, i32 5, !dbg !3261
  %100 = load i32, i32* %has_band_ext97, align 16, !dbg !3261
  %tobool98 = icmp ne i32 %100, 0, !dbg !3259
  br i1 %tobool98, label %if.then99, label %if.end112, !dbg !3262

if.then99:                                        ; preds = %if.end95
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3263
  %call100 = call i32 @get_bits(%struct.GetBitContext* %101, i32 4), !dbg !3265
  %102 = load i32, i32* %min_band_count, align 4, !dbg !3266
  %add101 = add i32 %call100, %102, !dbg !3267
  store i32 %add101, i32* %ext_band, align 4, !dbg !3268
  %103 = load i32, i32* %ext_band, align 4, !dbg !3269
  %104 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3271
  %band_count102 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %104, i32 0, i32 1, !dbg !3272
  %105 = load i32, i32* %band_count102, align 32, !dbg !3272
  %cmp103 = icmp slt i32 %103, %105, !dbg !3273
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !3274

if.then105:                                       ; preds = %if.then99
  %106 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3275
  %avctx106 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %106, i32 0, i32 0, !dbg !3277
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx106, align 32, !dbg !3277
  %108 = bitcast %struct.AVCodecContext* %107 to i8*, !dbg !3275
  %109 = load i32, i32* %ext_band, align 4, !dbg !3278
  call void (i8*, i32, i8*, ...) @av_log(i8* %108, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i32 0, i32 0), i32 %109), !dbg !3279
  store i32 -1094995529, i32* %retval, align 4, !dbg !3280
  br label %return, !dbg !3280

if.end107:                                        ; preds = %if.then99
  %110 = load i32, i32* %ext_band, align 4, !dbg !3281
  %idxprom108 = sext i32 %110 to i64, !dbg !3282
  %arrayidx109 = getelementptr inbounds [19 x i8], [19 x i8]* @at9_tab_band_q_unit_map, i64 0, i64 %idxprom108, !dbg !3282
  %111 = load i8, i8* %arrayidx109, align 1, !dbg !3282
  %conv110 = zext i8 %111 to i32, !dbg !3282
  %112 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3283
  %band_ext_q_unit111 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %112, i32 0, i32 7, !dbg !3284
  store i32 %conv110, i32* %band_ext_q_unit111, align 8, !dbg !3285
  br label %if.end112, !dbg !3286

if.end112:                                        ; preds = %if.end107, %if.end95
  br label %if.end113, !dbg !3287

if.end113:                                        ; preds = %if.end112, %if.end56
  %113 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3288
  %114 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3290
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3291
  %call114 = call i32 @parse_gradient(%struct.ATRAC9Context* %113, %struct.ATRAC9BlockData* %114, %struct.GetBitContext* %115), !dbg !3292
  %tobool115 = icmp ne i32 %call114, 0, !dbg !3292
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !3293

if.then116:                                       ; preds = %if.end113
  store i32 -1094995529, i32* %retval, align 4, !dbg !3294
  br label %return, !dbg !3294

if.end117:                                        ; preds = %if.end113
  %116 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3295
  %cpe_base_channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %116, i32 0, i32 11, !dbg !3296
  store i32 0, i32* %cpe_base_channel, align 32, !dbg !3297
  %117 = load i32, i32* %stereo, align 4, !dbg !3298
  %tobool118 = icmp ne i32 %117, 0, !dbg !3298
  br i1 %tobool118, label %if.then119, label %if.end151, !dbg !3300

if.then119:                                       ; preds = %if.end117
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3301
  %call120 = call i32 @get_bits1(%struct.GetBitContext* %118), !dbg !3303
  %119 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3304
  %cpe_base_channel121 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %119, i32 0, i32 11, !dbg !3305
  store i32 %call120, i32* %cpe_base_channel121, align 32, !dbg !3306
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3307
  %call122 = call i32 @get_bits1(%struct.GetBitContext* %120), !dbg !3309
  %tobool123 = icmp ne i32 %call122, 0, !dbg !3309
  br i1 %tobool123, label %if.then124, label %if.else, !dbg !3310

if.then124:                                       ; preds = %if.then119
  call void @llvm.dbg.declare(metadata i32* %i125, metadata !3311, metadata !2064), !dbg !3314
  %121 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3315
  %stereo_q_unit126 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %121, i32 0, i32 4, !dbg !3316
  %122 = load i32, i32* %stereo_q_unit126, align 4, !dbg !3316
  store i32 %122, i32* %i125, align 4, !dbg !3314
  br label %for.cond127, !dbg !3317

for.cond127:                                      ; preds = %for.inc135, %if.then124
  %123 = load i32, i32* %i125, align 4, !dbg !3318
  %124 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3321
  %q_unit_cnt128 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %124, i32 0, i32 2, !dbg !3322
  %125 = load i32, i32* %q_unit_cnt128, align 4, !dbg !3322
  %cmp129 = icmp slt i32 %123, %125, !dbg !3323
  br i1 %cmp129, label %for.body131, label %for.end137, !dbg !3324

for.body131:                                      ; preds = %for.cond127
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3325
  %call132 = call i32 @get_bits1(%struct.GetBitContext* %126), !dbg !3326
  %mul = mul i32 2, %call132, !dbg !3327
  %sub = sub i32 1, %mul, !dbg !3328
  %127 = load i32, i32* %i125, align 4, !dbg !3329
  %idxprom133 = sext i32 %127 to i64, !dbg !3330
  %128 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3330
  %is_signs = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %128, i32 0, i32 12, !dbg !3331
  %arrayidx134 = getelementptr inbounds [30 x i32], [30 x i32]* %is_signs, i64 0, i64 %idxprom133, !dbg !3330
  store i32 %sub, i32* %arrayidx134, align 4, !dbg !3332
  br label %for.inc135, !dbg !3330

for.inc135:                                       ; preds = %for.body131
  %129 = load i32, i32* %i125, align 4, !dbg !3333
  %inc136 = add nsw i32 %129, 1, !dbg !3333
  store i32 %inc136, i32* %i125, align 4, !dbg !3333
  br label %for.cond127, !dbg !3335, !llvm.loop !3336

for.end137:                                       ; preds = %for.cond127
  br label %if.end150, !dbg !3338

if.else:                                          ; preds = %if.then119
  call void @llvm.dbg.declare(metadata i32* %i138, metadata !3339, metadata !2064), !dbg !3342
  store i32 0, i32* %i138, align 4, !dbg !3342
  br label %for.cond139, !dbg !3343

for.cond139:                                      ; preds = %for.inc147, %if.else
  %130 = load i32, i32* %i138, align 4, !dbg !3344
  %conv140 = sext i32 %130 to i64, !dbg !3344
  %cmp141 = icmp ult i64 %conv140, 30, !dbg !3347
  br i1 %cmp141, label %for.body143, label %for.end149, !dbg !3348

for.body143:                                      ; preds = %for.cond139
  %131 = load i32, i32* %i138, align 4, !dbg !3349
  %idxprom144 = sext i32 %131 to i64, !dbg !3350
  %132 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3350
  %is_signs145 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %132, i32 0, i32 12, !dbg !3351
  %arrayidx146 = getelementptr inbounds [30 x i32], [30 x i32]* %is_signs145, i64 0, i64 %idxprom144, !dbg !3350
  store i32 1, i32* %arrayidx146, align 4, !dbg !3352
  br label %for.inc147, !dbg !3350

for.inc147:                                       ; preds = %for.body143
  %133 = load i32, i32* %i138, align 4, !dbg !3353
  %inc148 = add nsw i32 %133, 1, !dbg !3353
  store i32 %inc148, i32* %i138, align 4, !dbg !3353
  br label %for.cond139, !dbg !3355, !llvm.loop !3356

for.end149:                                       ; preds = %for.cond139
  br label %if.end150

if.end150:                                        ; preds = %for.end149, %for.end137
  br label %if.end151, !dbg !3358

if.end151:                                        ; preds = %if.end150, %if.end117
  %134 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3359
  %135 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3361
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3362
  %137 = load i32, i32* %stereo, align 4, !dbg !3363
  %call152 = call i32 @parse_band_ext(%struct.ATRAC9Context* %134, %struct.ATRAC9BlockData* %135, %struct.GetBitContext* %136, i32 %137), !dbg !3364
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3364
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !3365

if.then154:                                       ; preds = %if.end151
  store i32 -1094995529, i32* %retval, align 4, !dbg !3366
  br label %return, !dbg !3366

if.end155:                                        ; preds = %if.end151
  call void @llvm.dbg.declare(metadata i32* %i156, metadata !3367, metadata !2064), !dbg !3369
  store i32 0, i32* %i156, align 4, !dbg !3369
  br label %for.cond157, !dbg !3370

for.cond157:                                      ; preds = %for.inc176, %if.end155
  %138 = load i32, i32* %i156, align 4, !dbg !3371
  %139 = load i32, i32* %stereo, align 4, !dbg !3374
  %cmp158 = icmp sle i32 %138, %139, !dbg !3375
  br i1 %cmp158, label %for.body160, label %for.end178, !dbg !3376

for.body160:                                      ; preds = %for.cond157
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c161, metadata !3377, metadata !2064), !dbg !3379
  %140 = load i32, i32* %i156, align 4, !dbg !3380
  %idxprom162 = sext i32 %140 to i64, !dbg !3381
  %141 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3381
  %channel163 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %141, i32 0, i32 0, !dbg !3382
  %arrayidx164 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel163, i64 0, i64 %idxprom162, !dbg !3381
  store %struct.ATRAC9ChannelData* %arrayidx164, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3379
  %142 = load i32, i32* %i156, align 4, !dbg !3383
  %143 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3384
  %cpe_base_channel165 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %143, i32 0, i32 11, !dbg !3385
  %144 = load i32, i32* %cpe_base_channel165, align 32, !dbg !3385
  %cmp166 = icmp eq i32 %142, %144, !dbg !3386
  br i1 %cmp166, label %cond.true, label %cond.false, !dbg !3383

cond.true:                                        ; preds = %for.body160
  %145 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3387
  %q_unit_cnt168 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %145, i32 0, i32 2, !dbg !3389
  %146 = load i32, i32* %q_unit_cnt168, align 4, !dbg !3389
  br label %cond.end, !dbg !3390

cond.false:                                       ; preds = %for.body160
  %147 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3391
  %stereo_q_unit169 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %147, i32 0, i32 4, !dbg !3392
  %148 = load i32, i32* %stereo_q_unit169, align 4, !dbg !3392
  br label %cond.end, !dbg !3393

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond170 = phi i32 [ %146, %cond.true ], [ %148, %cond.false ], !dbg !3395
  %149 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3397
  %q_unit_cnt171 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %149, i32 0, i32 1, !dbg !3398
  store i32 %cond170, i32* %q_unit_cnt171, align 4, !dbg !3399
  %150 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3400
  %151 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3402
  %152 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3403
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3404
  %154 = load i32, i32* %i156, align 4, !dbg !3405
  %155 = load i32, i32* %first_in_pkt, align 4, !dbg !3406
  %call172 = call i32 @read_scalefactors(%struct.ATRAC9Context* %150, %struct.ATRAC9BlockData* %151, %struct.ATRAC9ChannelData* %152, %struct.GetBitContext* %153, i32 %154, i32 %155), !dbg !3407
  %tobool173 = icmp ne i32 %call172, 0, !dbg !3407
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !3408

if.then174:                                       ; preds = %cond.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3409
  br label %return, !dbg !3409

if.end175:                                        ; preds = %cond.end
  %156 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3410
  %157 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3411
  %158 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3412
  call void @calc_precision(%struct.ATRAC9Context* %156, %struct.ATRAC9BlockData* %157, %struct.ATRAC9ChannelData* %158), !dbg !3413
  %159 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3414
  %160 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3415
  %161 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3416
  call void @calc_codebook_idx(%struct.ATRAC9Context* %159, %struct.ATRAC9BlockData* %160, %struct.ATRAC9ChannelData* %161), !dbg !3417
  %162 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3418
  %163 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3419
  %164 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3420
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3421
  call void @read_coeffs_coarse(%struct.ATRAC9Context* %162, %struct.ATRAC9BlockData* %163, %struct.ATRAC9ChannelData* %164, %struct.GetBitContext* %165), !dbg !3422
  %166 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3423
  %167 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3424
  %168 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3425
  %169 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3426
  call void @read_coeffs_fine(%struct.ATRAC9Context* %166, %struct.ATRAC9BlockData* %167, %struct.ATRAC9ChannelData* %168, %struct.GetBitContext* %169), !dbg !3427
  %170 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3428
  %171 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3429
  %172 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c161, align 8, !dbg !3430
  call void @dequantize(%struct.ATRAC9Context* %170, %struct.ATRAC9BlockData* %171, %struct.ATRAC9ChannelData* %172), !dbg !3431
  br label %for.inc176, !dbg !3432

for.inc176:                                       ; preds = %if.end175
  %173 = load i32, i32* %i156, align 4, !dbg !3433
  %inc177 = add nsw i32 %173, 1, !dbg !3433
  store i32 %inc177, i32* %i156, align 4, !dbg !3433
  br label %for.cond157, !dbg !3435, !llvm.loop !3436

for.end178:                                       ; preds = %for.cond157
  %174 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3438
  %has_band_ext179 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %174, i32 0, i32 5, !dbg !3439
  %175 = load i32, i32* %has_band_ext179, align 16, !dbg !3439
  %tobool180 = icmp ne i32 %175, 0, !dbg !3438
  br i1 %tobool180, label %cond.true181, label %cond.false183, !dbg !3438

cond.true181:                                     ; preds = %for.end178
  %176 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3440
  %band_ext_q_unit182 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %176, i32 0, i32 7, !dbg !3442
  %177 = load i32, i32* %band_ext_q_unit182, align 8, !dbg !3442
  br label %cond.end185, !dbg !3443

cond.false183:                                    ; preds = %for.end178
  %178 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3444
  %q_unit_cnt184 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %178, i32 0, i32 2, !dbg !3446
  %179 = load i32, i32* %q_unit_cnt184, align 4, !dbg !3446
  br label %cond.end185, !dbg !3447

cond.end185:                                      ; preds = %cond.false183, %cond.true181
  %cond186 = phi i32 [ %177, %cond.true181 ], [ %179, %cond.false183 ], !dbg !3448
  %180 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3450
  %q_unit_cnt_prev = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %180, i32 0, i32 3, !dbg !3451
  store i32 %cond186, i32* %q_unit_cnt_prev, align 8, !dbg !3452
  %181 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3453
  %182 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3454
  %183 = load i32, i32* %stereo, align 4, !dbg !3455
  call void @apply_intensity_stereo(%struct.ATRAC9Context* %181, %struct.ATRAC9BlockData* %182, i32 %183), !dbg !3456
  %184 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3457
  %185 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3458
  %186 = load i32, i32* %stereo, align 4, !dbg !3459
  call void @apply_scalefactors(%struct.ATRAC9Context* %184, %struct.ATRAC9BlockData* %185, i32 %186), !dbg !3460
  %187 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3461
  %188 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3462
  %189 = load i32, i32* %stereo, align 4, !dbg !3463
  call void @apply_band_extension(%struct.ATRAC9Context* %187, %struct.ATRAC9BlockData* %188, i32 %189), !dbg !3464
  br label %imdct, !dbg !3464

imdct:                                            ; preds = %cond.end185, %for.end52
  call void @llvm.dbg.declare(metadata i32* %i187, metadata !3465, metadata !2064), !dbg !3467
  store i32 0, i32* %i187, align 4, !dbg !3467
  br label %for.cond188, !dbg !3468

for.cond188:                                      ; preds = %for.inc223, %imdct
  %190 = load i32, i32* %i187, align 4, !dbg !3469
  %191 = load i32, i32* %stereo, align 4, !dbg !3472
  %cmp189 = icmp sle i32 %190, %191, !dbg !3473
  br i1 %cmp189, label %for.body191, label %for.end225, !dbg !3474

for.body191:                                      ; preds = %for.cond188
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c192, metadata !3475, metadata !2064), !dbg !3477
  %192 = load i32, i32* %i187, align 4, !dbg !3478
  %idxprom193 = sext i32 %192 to i64, !dbg !3479
  %193 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3479
  %channel194 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %193, i32 0, i32 0, !dbg !3480
  %arrayidx195 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel194, i64 0, i64 %idxprom193, !dbg !3479
  store %struct.ATRAC9ChannelData* %arrayidx195, %struct.ATRAC9ChannelData** %c192, align 8, !dbg !3477
  call void @llvm.dbg.declare(metadata i32* %dst_idx, metadata !3481, metadata !2064), !dbg !3482
  %194 = load i32, i32* %i187, align 4, !dbg !3483
  %idxprom196 = sext i32 %194 to i64, !dbg !3484
  %195 = load i32, i32* %block_idx.addr, align 4, !dbg !3485
  %idxprom197 = sext i32 %195 to i64, !dbg !3484
  %196 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3484
  %block_config198 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %196, i32 0, i32 9, !dbg !3486
  %197 = load %struct.ATRAC9BlockConfig*, %struct.ATRAC9BlockConfig** %block_config198, align 8, !dbg !3486
  %plane_map = getelementptr inbounds %struct.ATRAC9BlockConfig, %struct.ATRAC9BlockConfig* %197, i32 0, i32 2, !dbg !3487
  %arrayidx199 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %plane_map, i64 0, i64 %idxprom197, !dbg !3484
  %arrayidx200 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx199, i64 0, i64 %idxprom196, !dbg !3484
  %198 = load i32, i32* %arrayidx200, align 4, !dbg !3484
  store i32 %198, i32* %dst_idx, align 4, !dbg !3482
  call void @llvm.dbg.declare(metadata i32* %wsize, metadata !3488, metadata !2064), !dbg !3489
  %199 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3490
  %frame_log2 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %199, i32 0, i32 5, !dbg !3491
  %200 = load i32, i32* %frame_log2, align 4, !dbg !3491
  %shl = shl i32 1, %200, !dbg !3492
  store i32 %shl, i32* %wsize, align 4, !dbg !3489
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !3493, metadata !2064), !dbg !3496
  %201 = load i32, i32* %wsize, align 4, !dbg !3497
  %202 = load i32, i32* %frame_idx.addr, align 4, !dbg !3498
  %mul201 = mul nsw i32 %201, %202, !dbg !3499
  %conv202 = sext i32 %mul201 to i64, !dbg !3497
  %mul203 = mul i64 %conv202, 4, !dbg !3500
  store i64 %mul203, i64* %offset, align 8, !dbg !3496
  call void @llvm.dbg.declare(metadata float** %dst, metadata !3501, metadata !2064), !dbg !3502
  %203 = load i32, i32* %dst_idx, align 4, !dbg !3503
  %idxprom204 = sext i32 %203 to i64, !dbg !3504
  %204 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3504
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %204, i32 0, i32 2, !dbg !3505
  %205 = load i8**, i8*** %extended_data, align 8, !dbg !3505
  %arrayidx205 = getelementptr inbounds i8*, i8** %205, i64 %idxprom204, !dbg !3504
  %206 = load i8*, i8** %arrayidx205, align 8, !dbg !3504
  %207 = load i64, i64* %offset, align 8, !dbg !3506
  %add.ptr = getelementptr inbounds i8, i8* %206, i64 %207, !dbg !3507
  %208 = bitcast i8* %add.ptr to float*, !dbg !3508
  store float* %208, float** %dst, align 8, !dbg !3502
  %209 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3509
  %imdct206 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %209, i32 0, i32 2, !dbg !3510
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct206, i32 0, i32 11, !dbg !3511
  %210 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !3511
  %211 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3512
  %imdct207 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %211, i32 0, i32 2, !dbg !3513
  %212 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3514
  %temp = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %212, i32 0, i32 14, !dbg !3515
  %arraydecay208 = getelementptr inbounds [256 x float], [256 x float]* %temp, i32 0, i32 0, !dbg !3514
  %213 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c192, align 8, !dbg !3516
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %213, i32 0, i32 12, !dbg !3517
  %arraydecay209 = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i32 0, i32 0, !dbg !3516
  call void %210(%struct.FFTContext* %imdct207, float* %arraydecay208, float* %arraydecay209), !dbg !3509
  %214 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3518
  %fdsp = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %214, i32 0, i32 1, !dbg !3519
  %215 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !3519
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %215, i32 0, i32 5, !dbg !3520
  %216 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !3520
  %217 = load float*, float** %dst, align 8, !dbg !3521
  %218 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c192, align 8, !dbg !3522
  %prev_win = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %218, i32 0, i32 13, !dbg !3523
  %arraydecay210 = getelementptr inbounds [128 x float], [128 x float]* %prev_win, i32 0, i32 0, !dbg !3522
  %219 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3524
  %temp211 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %219, i32 0, i32 14, !dbg !3525
  %arraydecay212 = getelementptr inbounds [256 x float], [256 x float]* %temp211, i32 0, i32 0, !dbg !3524
  %220 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3526
  %imdct_win = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %220, i32 0, i32 13, !dbg !3527
  %arraydecay213 = getelementptr inbounds [256 x float], [256 x float]* %imdct_win, i32 0, i32 0, !dbg !3526
  %221 = load i32, i32* %wsize, align 4, !dbg !3528
  %shr = ashr i32 %221, 1, !dbg !3529
  call void %216(float* %217, float* %arraydecay210, float* %arraydecay212, float* %arraydecay213, i32 %shr), !dbg !3518
  %222 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c192, align 8, !dbg !3530
  %prev_win214 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %222, i32 0, i32 13, !dbg !3531
  %arraydecay215 = getelementptr inbounds [128 x float], [128 x float]* %prev_win214, i32 0, i32 0, !dbg !3532
  %223 = bitcast float* %arraydecay215 to i8*, !dbg !3532
  %224 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3533
  %temp216 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %224, i32 0, i32 14, !dbg !3534
  %arraydecay217 = getelementptr inbounds [256 x float], [256 x float]* %temp216, i32 0, i32 0, !dbg !3533
  %225 = load i32, i32* %wsize, align 4, !dbg !3535
  %shr218 = ashr i32 %225, 1, !dbg !3536
  %idx.ext = sext i32 %shr218 to i64, !dbg !3537
  %add.ptr219 = getelementptr inbounds float, float* %arraydecay217, i64 %idx.ext, !dbg !3537
  %226 = bitcast float* %add.ptr219 to i8*, !dbg !3532
  %227 = load i32, i32* %wsize, align 4, !dbg !3538
  %conv220 = sext i32 %227 to i64, !dbg !3538
  %mul221 = mul i64 4, %conv220, !dbg !3539
  %shr222 = lshr i64 %mul221, 1, !dbg !3540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %223, i8* %226, i64 %shr222, i32 4, i1 false), !dbg !3532
  br label %for.inc223, !dbg !3541

for.inc223:                                       ; preds = %for.body191
  %228 = load i32, i32* %i187, align 4, !dbg !3542
  %inc224 = add nsw i32 %228, 1, !dbg !3542
  store i32 %inc224, i32* %i187, align 4, !dbg !3542
  br label %for.cond188, !dbg !3544, !llvm.loop !3545

for.end225:                                       ; preds = %for.cond188
  store i32 0, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

return:                                           ; preds = %for.end225, %if.then174, %if.then154, %if.then116, %if.then105, %if.then88, %if.then77, %if.then55
  %229 = load i32, i32* %retval, align 4, !dbg !3548
  ret i32 %229, !dbg !3548
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #4 !dbg !3549 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3552, metadata !2064), !dbg !3553
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3554, metadata !2064), !dbg !3555
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3556
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3557
  %sub = sub nsw i32 0, %call, !dbg !3558
  %and = and i32 %sub, 7, !dbg !3559
  store i32 %and, i32* %n, align 4, !dbg !3555
  %1 = load i32, i32* %n, align 4, !dbg !3560
  %tobool = icmp ne i32 %1, 0, !dbg !3560
  br i1 %tobool, label %if.then, label %if.end, !dbg !3562

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3563
  %3 = load i32, i32* %n, align 4, !dbg !3564
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !3565
  br label %if.end, !dbg !3565

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3566
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3567
  %5 = load i8*, i8** %buffer, align 8, !dbg !3567
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3568
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !3569
  %7 = load i32, i32* %index, align 8, !dbg !3569
  %shr = ashr i32 %7, 3, !dbg !3570
  %idx.ext = sext i32 %shr to i64, !dbg !3571
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3571
  ret i8* %add.ptr, !dbg !3572
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: inlinehint nounwind uwtable
define internal void @dequantize(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c) #4 !dbg !3573 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %coarse_c = alloca float, align 4
  %fine_c = alloca float, align 4
  %j = alloca i32, align 4
  %vc = alloca float, align 4
  %vf = alloca float, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !3576, metadata !2064), !dbg !3577
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !3578, metadata !2064), !dbg !3579
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !3580, metadata !2064), !dbg !3581
  %0 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3582
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %0, i32 0, i32 12, !dbg !3583
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i32 0, i32 0, !dbg !3584
  %1 = bitcast float* %arraydecay to i8*, !dbg !3584
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 1024, i32 32, i1 false), !dbg !3584
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3585, metadata !2064), !dbg !3587
  store i32 0, i32* %i, align 4, !dbg !3587
  br label %for.cond, !dbg !3588

for.cond:                                         ; preds = %for.inc25, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3589
  %3 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3592
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %3, i32 0, i32 1, !dbg !3593
  %4 = load i32, i32* %q_unit_cnt, align 4, !dbg !3593
  %cmp = icmp slt i32 %2, %4, !dbg !3594
  br i1 %cmp, label %for.body, label %for.end27, !dbg !3595

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3596, metadata !2064), !dbg !3598
  %5 = load i32, i32* %i, align 4, !dbg !3599
  %add = add nsw i32 %5, 0, !dbg !3600
  %idxprom = sext i32 %add to i64, !dbg !3601
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom, !dbg !3601
  %6 = load i32, i32* %arrayidx, align 4, !dbg !3601
  store i32 %6, i32* %start, align 4, !dbg !3598
  call void @llvm.dbg.declare(metadata i32* %end, metadata !3602, metadata !2064), !dbg !3603
  %7 = load i32, i32* %i, align 4, !dbg !3604
  %add1 = add nsw i32 %7, 1, !dbg !3605
  %idxprom2 = sext i32 %add1 to i64, !dbg !3606
  %arrayidx3 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom2, !dbg !3606
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !3606
  store i32 %8, i32* %end, align 4, !dbg !3603
  call void @llvm.dbg.declare(metadata float* %coarse_c, metadata !3607, metadata !2064), !dbg !3608
  %9 = load i32, i32* %i, align 4, !dbg !3609
  %idxprom4 = sext i32 %9 to i64, !dbg !3610
  %10 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3610
  %precision_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %10, i32 0, i32 5, !dbg !3611
  %arrayidx5 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse, i64 0, i64 %idxprom4, !dbg !3610
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !3610
  %idxprom6 = sext i32 %11 to i64, !dbg !3612
  %arrayidx7 = getelementptr inbounds [16 x float], [16 x float]* @at9_quant_step_coarse, i64 0, i64 %idxprom6, !dbg !3612
  %12 = load float, float* %arrayidx7, align 4, !dbg !3612
  store float %12, float* %coarse_c, align 4, !dbg !3608
  call void @llvm.dbg.declare(metadata float* %fine_c, metadata !3613, metadata !2064), !dbg !3614
  %13 = load i32, i32* %i, align 4, !dbg !3615
  %idxprom8 = sext i32 %13 to i64, !dbg !3616
  %14 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3616
  %precision_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %14, i32 0, i32 6, !dbg !3617
  %arrayidx9 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine, i64 0, i64 %idxprom8, !dbg !3616
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !3616
  %idxprom10 = sext i32 %15 to i64, !dbg !3618
  %arrayidx11 = getelementptr inbounds [16 x float], [16 x float]* @at9_quant_step_fine, i64 0, i64 %idxprom10, !dbg !3618
  %16 = load float, float* %arrayidx11, align 4, !dbg !3618
  store float %16, float* %fine_c, align 4, !dbg !3614
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3619, metadata !2064), !dbg !3621
  %17 = load i32, i32* %start, align 4, !dbg !3622
  store i32 %17, i32* %j, align 4, !dbg !3621
  br label %for.cond12, !dbg !3623

for.cond12:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %j, align 4, !dbg !3624
  %19 = load i32, i32* %end, align 4, !dbg !3627
  %cmp13 = icmp slt i32 %18, %19, !dbg !3628
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !3629

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata float* %vc, metadata !3630, metadata !2064), !dbg !3632
  %20 = load i32, i32* %j, align 4, !dbg !3633
  %idxprom15 = sext i32 %20 to i64, !dbg !3634
  %21 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3634
  %q_coeffs_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %21, i32 0, i32 9, !dbg !3635
  %arrayidx16 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_coarse, i64 0, i64 %idxprom15, !dbg !3634
  %22 = load i32, i32* %arrayidx16, align 4, !dbg !3634
  %conv = sitofp i32 %22 to float, !dbg !3634
  %23 = load float, float* %coarse_c, align 4, !dbg !3636
  %mul = fmul float %conv, %23, !dbg !3637
  store float %mul, float* %vc, align 4, !dbg !3632
  call void @llvm.dbg.declare(metadata float* %vf, metadata !3638, metadata !2064), !dbg !3639
  %24 = load i32, i32* %j, align 4, !dbg !3640
  %idxprom17 = sext i32 %24 to i64, !dbg !3641
  %25 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3641
  %q_coeffs_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %25, i32 0, i32 10, !dbg !3642
  %arrayidx18 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_fine, i64 0, i64 %idxprom17, !dbg !3641
  %26 = load i32, i32* %arrayidx18, align 4, !dbg !3641
  %conv19 = sitofp i32 %26 to float, !dbg !3641
  %27 = load float, float* %fine_c, align 4, !dbg !3643
  %mul20 = fmul float %conv19, %27, !dbg !3644
  store float %mul20, float* %vf, align 4, !dbg !3639
  %28 = load float, float* %vc, align 4, !dbg !3645
  %29 = load float, float* %vf, align 4, !dbg !3646
  %add21 = fadd float %28, %29, !dbg !3647
  %30 = load i32, i32* %j, align 4, !dbg !3648
  %idxprom22 = sext i32 %30 to i64, !dbg !3649
  %31 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !3649
  %coeffs23 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %31, i32 0, i32 12, !dbg !3650
  %arrayidx24 = getelementptr inbounds [256 x float], [256 x float]* %coeffs23, i64 0, i64 %idxprom22, !dbg !3649
  store float %add21, float* %arrayidx24, align 4, !dbg !3651
  br label %for.inc, !dbg !3652

for.inc:                                          ; preds = %for.body14
  %32 = load i32, i32* %j, align 4, !dbg !3653
  %inc = add nsw i32 %32, 1, !dbg !3653
  store i32 %inc, i32* %j, align 4, !dbg !3653
  br label %for.cond12, !dbg !3655, !llvm.loop !3656

for.end:                                          ; preds = %for.cond12
  br label %for.inc25, !dbg !3658

for.inc25:                                        ; preds = %for.end
  %33 = load i32, i32* %i, align 4, !dbg !3659
  %inc26 = add nsw i32 %33, 1, !dbg !3659
  store i32 %inc26, i32* %i, align 4, !dbg !3659
  br label %for.cond, !dbg !3661, !llvm.loop !3662

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !3664
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @apply_scalefactors(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, i32 %stereo) #4 !dbg !3665 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %stereo.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %coeffs = alloca float*, align 8
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %scalefactor = alloca i32, align 4
  %scale = alloca float, align 4
  %k = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !3668, metadata !2064), !dbg !3669
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !3670, metadata !2064), !dbg !3671
  store i32 %stereo, i32* %stereo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.addr, metadata !3672, metadata !2064), !dbg !3673
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3674, metadata !2064), !dbg !3676
  store i32 0, i32* %i, align 4, !dbg !3676
  br label %for.cond, !dbg !3677

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3678
  %1 = load i32, i32* %stereo.addr, align 4, !dbg !3681
  %cmp = icmp sle i32 %0, %1, !dbg !3682
  br i1 %cmp, label %for.body, label %for.end27, !dbg !3683

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %coeffs, metadata !3684, metadata !2064), !dbg !3686
  %2 = load i32, i32* %i, align 4, !dbg !3687
  %idxprom = sext i32 %2 to i64, !dbg !3688
  %3 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3688
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %3, i32 0, i32 0, !dbg !3689
  %arrayidx = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 %idxprom, !dbg !3688
  %coeffs1 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx, i32 0, i32 12, !dbg !3690
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %coeffs1, i32 0, i32 0, !dbg !3688
  store float* %arraydecay, float** %coeffs, align 8, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3691, metadata !2064), !dbg !3693
  store i32 0, i32* %j, align 4, !dbg !3693
  br label %for.cond2, !dbg !3694

for.cond2:                                        ; preds = %for.inc22, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3695
  %5 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3698
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %5, i32 0, i32 2, !dbg !3699
  %6 = load i32, i32* %q_unit_cnt, align 4, !dbg !3699
  %cmp3 = icmp slt i32 %4, %6, !dbg !3700
  br i1 %cmp3, label %for.body4, label %for.end24, !dbg !3701

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3702, metadata !2064), !dbg !3704
  %7 = load i32, i32* %j, align 4, !dbg !3705
  %add = add nsw i32 %7, 0, !dbg !3706
  %idxprom5 = sext i32 %add to i64, !dbg !3707
  %arrayidx6 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom5, !dbg !3707
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !3707
  store i32 %8, i32* %start, align 4, !dbg !3704
  call void @llvm.dbg.declare(metadata i32* %end, metadata !3708, metadata !2064), !dbg !3709
  %9 = load i32, i32* %j, align 4, !dbg !3710
  %add7 = add nsw i32 %9, 1, !dbg !3711
  %idxprom8 = sext i32 %add7 to i64, !dbg !3712
  %arrayidx9 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom8, !dbg !3712
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !3712
  store i32 %10, i32* %end, align 4, !dbg !3709
  call void @llvm.dbg.declare(metadata i32* %scalefactor, metadata !3713, metadata !2064), !dbg !3714
  %11 = load i32, i32* %j, align 4, !dbg !3715
  %idxprom10 = sext i32 %11 to i64, !dbg !3716
  %12 = load i32, i32* %i, align 4, !dbg !3717
  %idxprom11 = sext i32 %12 to i64, !dbg !3716
  %13 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3716
  %channel12 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %13, i32 0, i32 0, !dbg !3718
  %arrayidx13 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel12, i64 0, i64 %idxprom11, !dbg !3716
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx13, i32 0, i32 3, !dbg !3719
  %arrayidx14 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i64 0, i64 %idxprom10, !dbg !3716
  %14 = load i32, i32* %arrayidx14, align 4, !dbg !3716
  store i32 %14, i32* %scalefactor, align 4, !dbg !3714
  call void @llvm.dbg.declare(metadata float* %scale, metadata !3720, metadata !2064), !dbg !3721
  %15 = load i32, i32* %scalefactor, align 4, !dbg !3722
  %idxprom15 = sext i32 %15 to i64, !dbg !3723
  %arrayidx16 = getelementptr inbounds [32 x float], [32 x float]* @at9_scalefactor_c, i64 0, i64 %idxprom15, !dbg !3723
  %16 = load float, float* %arrayidx16, align 4, !dbg !3723
  store float %16, float* %scale, align 4, !dbg !3721
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3724, metadata !2064), !dbg !3726
  %17 = load i32, i32* %start, align 4, !dbg !3727
  store i32 %17, i32* %k, align 4, !dbg !3726
  br label %for.cond17, !dbg !3728

for.cond17:                                       ; preds = %for.inc, %for.body4
  %18 = load i32, i32* %k, align 4, !dbg !3729
  %19 = load i32, i32* %end, align 4, !dbg !3732
  %cmp18 = icmp slt i32 %18, %19, !dbg !3733
  br i1 %cmp18, label %for.body19, label %for.end, !dbg !3734

for.body19:                                       ; preds = %for.cond17
  %20 = load float, float* %scale, align 4, !dbg !3735
  %21 = load i32, i32* %k, align 4, !dbg !3736
  %idxprom20 = sext i32 %21 to i64, !dbg !3737
  %22 = load float*, float** %coeffs, align 8, !dbg !3737
  %arrayidx21 = getelementptr inbounds float, float* %22, i64 %idxprom20, !dbg !3737
  %23 = load float, float* %arrayidx21, align 4, !dbg !3738
  %mul = fmul float %23, %20, !dbg !3738
  store float %mul, float* %arrayidx21, align 4, !dbg !3738
  br label %for.inc, !dbg !3737

for.inc:                                          ; preds = %for.body19
  %24 = load i32, i32* %k, align 4, !dbg !3739
  %inc = add nsw i32 %24, 1, !dbg !3739
  store i32 %inc, i32* %k, align 4, !dbg !3739
  br label %for.cond17, !dbg !3741, !llvm.loop !3742

for.end:                                          ; preds = %for.cond17
  br label %for.inc22, !dbg !3744

for.inc22:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !3745
  %inc23 = add nsw i32 %25, 1, !dbg !3745
  store i32 %inc23, i32* %j, align 4, !dbg !3745
  br label %for.cond2, !dbg !3747, !llvm.loop !3748

for.end24:                                        ; preds = %for.cond2
  br label %for.inc25, !dbg !3750

for.inc25:                                        ; preds = %for.end24
  %26 = load i32, i32* %i, align 4, !dbg !3751
  %inc26 = add nsw i32 %26, 1, !dbg !3751
  store i32 %inc26, i32* %i, align 4, !dbg !3751
  br label %for.cond, !dbg !3753, !llvm.loop !3754

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !3756
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_gradient(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.GetBitContext* %gb) #4 !dbg !3757 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %grad_range = alloca [2 x i32], align 4
  %grad_value = alloca [2 x i32], align 4
  %values = alloca i32, align 4
  %sign = alloca i32, align 4
  %base = alloca i32, align 4
  %curve = alloca i8*, align 8
  %scale = alloca float, align 4
  %i = alloca i32, align 4
  %i59 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !3760, metadata !2064), !dbg !3761
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !3762, metadata !2064), !dbg !3763
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3764, metadata !2064), !dbg !3765
  call void @llvm.dbg.declare(metadata [2 x i32]* %grad_range, metadata !3766, metadata !2064), !dbg !3768
  call void @llvm.dbg.declare(metadata [2 x i32]* %grad_value, metadata !3769, metadata !2064), !dbg !3770
  call void @llvm.dbg.declare(metadata i32* %values, metadata !3771, metadata !2064), !dbg !3772
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !3773, metadata !2064), !dbg !3774
  call void @llvm.dbg.declare(metadata i32* %base, metadata !3775, metadata !2064), !dbg !3776
  call void @llvm.dbg.declare(metadata i8** %curve, metadata !3777, metadata !2064), !dbg !3778
  call void @llvm.dbg.declare(metadata float* %scale, metadata !3779, metadata !2064), !dbg !3780
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3781
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !3782
  %1 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3783
  %grad_mode = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %1, i32 0, i32 8, !dbg !3784
  store i32 %call, i32* %grad_mode, align 4, !dbg !3785
  %2 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3786
  %grad_mode1 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %2, i32 0, i32 8, !dbg !3788
  %3 = load i32, i32* %grad_mode1, align 4, !dbg !3788
  %tobool = icmp ne i32 %3, 0, !dbg !3786
  br i1 %tobool, label %if.then, label %if.else, !dbg !3789

if.then:                                          ; preds = %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3790
  %call2 = call i32 @get_bits(%struct.GetBitContext* %4, i32 5), !dbg !3792
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3793
  store i32 %call2, i32* %arrayidx, align 4, !dbg !3794
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3795
  store i32 31, i32* %arrayidx3, align 4, !dbg !3796
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3797
  %call4 = call i32 @get_bits(%struct.GetBitContext* %5, i32 5), !dbg !3798
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 0, !dbg !3799
  store i32 %call4, i32* %arrayidx5, align 4, !dbg !3800
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 1, !dbg !3801
  store i32 31, i32* %arrayidx6, align 4, !dbg !3802
  br label %if.end, !dbg !3803

if.else:                                          ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3804
  %call7 = call i32 @get_bits(%struct.GetBitContext* %6, i32 6), !dbg !3806
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3807
  store i32 %call7, i32* %arrayidx8, align 4, !dbg !3808
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3809
  %call9 = call i32 @get_bits(%struct.GetBitContext* %7, i32 6), !dbg !3810
  %add = add i32 %call9, 1, !dbg !3811
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3812
  store i32 %add, i32* %arrayidx10, align 4, !dbg !3813
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3814
  %call11 = call i32 @get_bits(%struct.GetBitContext* %8, i32 5), !dbg !3815
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 0, !dbg !3816
  store i32 %call11, i32* %arrayidx12, align 4, !dbg !3817
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3818
  %call13 = call i32 @get_bits(%struct.GetBitContext* %9, i32 5), !dbg !3819
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 1, !dbg !3820
  store i32 %call13, i32* %arrayidx14, align 4, !dbg !3821
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3822
  %call15 = call i32 @get_bits(%struct.GetBitContext* %10, i32 4), !dbg !3823
  %11 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3824
  %grad_boundary = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %11, i32 0, i32 9, !dbg !3825
  store i32 %call15, i32* %grad_boundary, align 32, !dbg !3826
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3827
  %12 = load i32, i32* %arrayidx16, align 4, !dbg !3827
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3829
  %13 = load i32, i32* %arrayidx17, align 4, !dbg !3829
  %cmp = icmp sge i32 %12, %13, !dbg !3830
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !3831

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3832
  %14 = load i32, i32* %arrayidx18, align 4, !dbg !3832
  %cmp19 = icmp sgt i32 %14, 47, !dbg !3834
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !3835

if.then20:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3836
  br label %return, !dbg !3836

if.end21:                                         ; preds = %lor.lhs.false
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 0, !dbg !3837
  %15 = load i32, i32* %arrayidx22, align 4, !dbg !3837
  %cmp23 = icmp sgt i32 %15, 31, !dbg !3839
  br i1 %cmp23, label %if.then27, label %lor.lhs.false24, !dbg !3840

lor.lhs.false24:                                  ; preds = %if.end21
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 1, !dbg !3841
  %16 = load i32, i32* %arrayidx25, align 4, !dbg !3841
  %cmp26 = icmp sgt i32 %16, 31, !dbg !3843
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !3844

if.then27:                                        ; preds = %lor.lhs.false24, %if.end21
  store i32 -1094995529, i32* %retval, align 4, !dbg !3845
  br label %return, !dbg !3845

if.end28:                                         ; preds = %lor.lhs.false24
  %17 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3846
  %grad_boundary29 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %17, i32 0, i32 9, !dbg !3848
  %18 = load i32, i32* %grad_boundary29, align 32, !dbg !3848
  %19 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3849
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %19, i32 0, i32 2, !dbg !3850
  %20 = load i32, i32* %q_unit_cnt, align 4, !dbg !3850
  %cmp30 = icmp sgt i32 %18, %20, !dbg !3851
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3852

if.then31:                                        ; preds = %if.end28
  store i32 -1094995529, i32* %retval, align 4, !dbg !3853
  br label %return, !dbg !3853

if.end32:                                         ; preds = %if.end28
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 1, !dbg !3854
  %21 = load i32, i32* %arrayidx33, align 4, !dbg !3854
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 0, !dbg !3855
  %22 = load i32, i32* %arrayidx34, align 4, !dbg !3855
  %sub = sub nsw i32 %21, %22, !dbg !3856
  store i32 %sub, i32* %values, align 4, !dbg !3857
  %23 = load i32, i32* %values, align 4, !dbg !3858
  %cmp35 = icmp slt i32 %23, 0, !dbg !3859
  %conv = zext i1 %cmp35 to i32, !dbg !3859
  %mul = mul nsw i32 2, %conv, !dbg !3860
  %sub36 = sub nsw i32 1, %mul, !dbg !3861
  store i32 %sub36, i32* %sign, align 4, !dbg !3862
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 0, !dbg !3863
  %24 = load i32, i32* %arrayidx37, align 4, !dbg !3863
  %25 = load i32, i32* %sign, align 4, !dbg !3864
  %add38 = add nsw i32 %24, %25, !dbg !3865
  store i32 %add38, i32* %base, align 4, !dbg !3866
  %26 = load i32, i32* %values, align 4, !dbg !3867
  %cmp39 = icmp sge i32 %26, 0, !dbg !3868
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !3869

cond.true:                                        ; preds = %if.end32
  %27 = load i32, i32* %values, align 4, !dbg !3870
  br label %cond.end, !dbg !3872

cond.false:                                       ; preds = %if.end32
  %28 = load i32, i32* %values, align 4, !dbg !3873
  %sub41 = sub nsw i32 0, %28, !dbg !3875
  br label %cond.end, !dbg !3876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ %sub41, %cond.false ], !dbg !3877
  %sub42 = sub nsw i32 %cond, 1, !dbg !3879
  %conv43 = sitofp i32 %sub42 to float, !dbg !3880
  %div = fdiv float %conv43, 3.100000e+01, !dbg !3881
  store float %div, float* %scale, align 4, !dbg !3882
  %arrayidx44 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3883
  %29 = load i32, i32* %arrayidx44, align 4, !dbg !3883
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3884
  %30 = load i32, i32* %arrayidx45, align 4, !dbg !3884
  %sub46 = sub nsw i32 %29, %30, !dbg !3885
  %sub47 = sub nsw i32 %sub46, 1, !dbg !3886
  %idxprom = sext i32 %sub47 to i64, !dbg !3887
  %31 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !3887
  %alloc_curve = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %31, i32 0, i32 12, !dbg !3888
  %arrayidx48 = getelementptr inbounds [48 x [48 x i8]], [48 x [48 x i8]]* %alloc_curve, i64 0, i64 %idxprom, !dbg !3887
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx48, i32 0, i32 0, !dbg !3887
  store i8* %arraydecay, i8** %curve, align 8, !dbg !3889
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3890, metadata !2064), !dbg !3892
  store i32 0, i32* %i, align 4, !dbg !3892
  br label %for.cond, !dbg !3893

for.cond:                                         ; preds = %for.inc, %cond.end
  %32 = load i32, i32* %i, align 4, !dbg !3894
  %33 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3897
  %q_unit_cnt49 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %33, i32 0, i32 2, !dbg !3898
  %34 = load i32, i32* %q_unit_cnt49, align 4, !dbg !3898
  %cmp50 = icmp sle i32 %32, %34, !dbg !3899
  br i1 %cmp50, label %for.body, label %for.end, !dbg !3900

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !3901
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3902
  %36 = load i32, i32* %arrayidx52, align 4, !dbg !3902
  %cmp53 = icmp sge i32 %35, %36, !dbg !3903
  %conv54 = zext i1 %cmp53 to i32, !dbg !3903
  %idxprom55 = sext i32 %conv54 to i64, !dbg !3904
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_value, i64 0, i64 %idxprom55, !dbg !3904
  %37 = load i32, i32* %arrayidx56, align 4, !dbg !3904
  %38 = load i32, i32* %i, align 4, !dbg !3905
  %idxprom57 = sext i32 %38 to i64, !dbg !3906
  %39 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3906
  %gradient = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %39, i32 0, i32 10, !dbg !3907
  %arrayidx58 = getelementptr inbounds [31 x i32], [31 x i32]* %gradient, i64 0, i64 %idxprom57, !dbg !3906
  store i32 %37, i32* %arrayidx58, align 4, !dbg !3908
  br label %for.inc, !dbg !3906

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !3909
  %inc = add nsw i32 %40, 1, !dbg !3909
  store i32 %inc, i32* %i, align 4, !dbg !3909
  br label %for.cond, !dbg !3911, !llvm.loop !3912

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i59, metadata !3914, metadata !2064), !dbg !3916
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3917
  %41 = load i32, i32* %arrayidx60, align 4, !dbg !3917
  store i32 %41, i32* %i59, align 4, !dbg !3916
  br label %for.cond61, !dbg !3918

for.cond61:                                       ; preds = %for.inc79, %for.end
  %42 = load i32, i32* %i59, align 4, !dbg !3919
  %arrayidx62 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 1, !dbg !3922
  %43 = load i32, i32* %arrayidx62, align 4, !dbg !3922
  %cmp63 = icmp slt i32 %42, %43, !dbg !3923
  br i1 %cmp63, label %for.body65, label %for.end81, !dbg !3924

for.body65:                                       ; preds = %for.cond61
  %44 = load i32, i32* %base, align 4, !dbg !3925
  %45 = load i32, i32* %sign, align 4, !dbg !3926
  %46 = load float, float* %scale, align 4, !dbg !3927
  %47 = load i32, i32* %i59, align 4, !dbg !3928
  %arrayidx66 = getelementptr inbounds [2 x i32], [2 x i32]* %grad_range, i64 0, i64 0, !dbg !3929
  %48 = load i32, i32* %arrayidx66, align 4, !dbg !3929
  %sub67 = sub nsw i32 %47, %48, !dbg !3930
  %idxprom68 = sext i32 %sub67 to i64, !dbg !3931
  %49 = load i8*, i8** %curve, align 8, !dbg !3931
  %arrayidx69 = getelementptr inbounds i8, i8* %49, i64 %idxprom68, !dbg !3931
  %50 = load i8, i8* %arrayidx69, align 1, !dbg !3931
  %conv70 = zext i8 %50 to i32, !dbg !3931
  %conv71 = sitofp i32 %conv70 to float, !dbg !3931
  %mul72 = fmul float %46, %conv71, !dbg !3932
  %conv73 = fptosi float %mul72 to i32, !dbg !3933
  %mul74 = mul nsw i32 %45, %conv73, !dbg !3934
  %add75 = add nsw i32 %44, %mul74, !dbg !3935
  %51 = load i32, i32* %i59, align 4, !dbg !3936
  %idxprom76 = sext i32 %51 to i64, !dbg !3937
  %52 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3937
  %gradient77 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %52, i32 0, i32 10, !dbg !3938
  %arrayidx78 = getelementptr inbounds [31 x i32], [31 x i32]* %gradient77, i64 0, i64 %idxprom76, !dbg !3937
  store i32 %add75, i32* %arrayidx78, align 4, !dbg !3939
  br label %for.inc79, !dbg !3937

for.inc79:                                        ; preds = %for.body65
  %53 = load i32, i32* %i59, align 4, !dbg !3940
  %inc80 = add nsw i32 %53, 1, !dbg !3940
  store i32 %inc80, i32* %i59, align 4, !dbg !3940
  br label %for.cond61, !dbg !3942, !llvm.loop !3943

for.end81:                                        ; preds = %for.cond61
  store i32 0, i32* %retval, align 4, !dbg !3945
  br label %return, !dbg !3945

return:                                           ; preds = %for.end81, %if.then31, %if.then27, %if.then20
  %54 = load i32, i32* %retval, align 4, !dbg !3946
  ret i32 %54, !dbg !3946
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_band_ext(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.GetBitContext* %gb, i32 %stereo) #4 !dbg !3947 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %stereo.addr = alloca i32, align 4
  %ext_band = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca %struct.ATRAC9ChannelData*, align 8
  %count = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !3950, metadata !2064), !dbg !3951
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !3952, metadata !2064), !dbg !3953
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3954, metadata !2064), !dbg !3955
  store i32 %stereo, i32* %stereo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.addr, metadata !3956, metadata !2064), !dbg !3957
  call void @llvm.dbg.declare(metadata i32* %ext_band, metadata !3958, metadata !2064), !dbg !3959
  store i32 0, i32* %ext_band, align 4, !dbg !3959
  %0 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3960
  %has_band_ext = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %0, i32 0, i32 5, !dbg !3962
  %1 = load i32, i32* %has_band_ext, align 16, !dbg !3962
  %tobool = icmp ne i32 %1, 0, !dbg !3960
  br i1 %tobool, label %if.then, label %if.end12, !dbg !3963

if.then:                                          ; preds = %entry
  %2 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3964
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %2, i32 0, i32 2, !dbg !3966
  %3 = load i32, i32* %q_unit_cnt, align 4, !dbg !3966
  %sub = sub nsw i32 %3, 13, !dbg !3967
  %idxprom = sext i32 %sub to i64, !dbg !3968
  %arrayidx = getelementptr inbounds [8 x [3 x i8]], [8 x [3 x i8]]* @at9_tab_band_ext_group, i64 0, i64 %idxprom, !dbg !3968
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 2, !dbg !3968
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !3968
  %conv = zext i8 %4 to i32, !dbg !3968
  store i32 %conv, i32* %ext_band, align 4, !dbg !3969
  %5 = load i32, i32* %stereo.addr, align 4, !dbg !3970
  %tobool2 = icmp ne i32 %5, 0, !dbg !3970
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3972

if.then3:                                         ; preds = %if.then
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3973
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 2), !dbg !3975
  %7 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3976
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %7, i32 0, i32 0, !dbg !3977
  %arrayidx4 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 1, !dbg !3976
  %band_ext = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx4, i32 0, i32 0, !dbg !3978
  store i32 %call, i32* %band_ext, align 32, !dbg !3979
  %8 = load i32, i32* %ext_band, align 4, !dbg !3980
  %cmp = icmp sgt i32 %8, 2, !dbg !3981
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3980

cond.true:                                        ; preds = %if.then3
  %9 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3982
  %channel6 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %9, i32 0, i32 0, !dbg !3984
  %arrayidx7 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel6, i64 0, i64 1, !dbg !3982
  %band_ext8 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx7, i32 0, i32 0, !dbg !3985
  %10 = load i32, i32* %band_ext8, align 32, !dbg !3985
  br label %cond.end, !dbg !3986

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !3987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ 4, %cond.false ], !dbg !3989
  %11 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !3991
  %channel9 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %11, i32 0, i32 0, !dbg !3992
  %arrayidx10 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel9, i64 0, i64 1, !dbg !3991
  %band_ext11 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx10, i32 0, i32 0, !dbg !3993
  store i32 %cond, i32* %band_ext11, align 32, !dbg !3994
  br label %if.end, !dbg !3995

if.else:                                          ; preds = %if.then
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3996
  call void @skip_bits1(%struct.GetBitContext* %12), !dbg !3998
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  br label %if.end12, !dbg !3999

if.end12:                                         ; preds = %if.end, %entry
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4000
  %call13 = call i32 @get_bits1(%struct.GetBitContext* %13), !dbg !4001
  %14 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4002
  %has_band_ext_data = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %14, i32 0, i32 6, !dbg !4003
  store i32 %call13, i32* %has_band_ext_data, align 4, !dbg !4004
  %15 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4005
  %has_band_ext_data14 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %15, i32 0, i32 6, !dbg !4007
  %16 = load i32, i32* %has_band_ext_data14, align 4, !dbg !4007
  %tobool15 = icmp ne i32 %16, 0, !dbg !4005
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4008

if.then16:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !4009
  br label %return, !dbg !4009

if.end17:                                         ; preds = %if.end12
  %17 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4010
  %has_band_ext18 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %17, i32 0, i32 5, !dbg !4012
  %18 = load i32, i32* %has_band_ext18, align 16, !dbg !4012
  %tobool19 = icmp ne i32 %18, 0, !dbg !4010
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !4013

if.then20:                                        ; preds = %if.end17
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4014
  call void @skip_bits(%struct.GetBitContext* %19, i32 2), !dbg !4016
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4017
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4018
  %call21 = call i32 @get_bits(%struct.GetBitContext* %21, i32 5), !dbg !4019
  call void @skip_bits_long(%struct.GetBitContext* %20, i32 %call21), !dbg !4020
  store i32 0, i32* %retval, align 4, !dbg !4022
  br label %return, !dbg !4022

if.end22:                                         ; preds = %if.end17
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4023
  %call23 = call i32 @get_bits(%struct.GetBitContext* %22, i32 2), !dbg !4024
  %23 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4025
  %channel24 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %23, i32 0, i32 0, !dbg !4026
  %arrayidx25 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel24, i64 0, i64 0, !dbg !4025
  %band_ext26 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx25, i32 0, i32 0, !dbg !4027
  store i32 %call23, i32* %band_ext26, align 32, !dbg !4028
  %24 = load i32, i32* %ext_band, align 4, !dbg !4029
  %cmp27 = icmp sgt i32 %24, 2, !dbg !4030
  br i1 %cmp27, label %cond.true29, label %cond.false33, !dbg !4029

cond.true29:                                      ; preds = %if.end22
  %25 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4031
  %channel30 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %25, i32 0, i32 0, !dbg !4033
  %arrayidx31 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel30, i64 0, i64 0, !dbg !4031
  %band_ext32 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx31, i32 0, i32 0, !dbg !4034
  %26 = load i32, i32* %band_ext32, align 32, !dbg !4034
  br label %cond.end34, !dbg !4035

cond.false33:                                     ; preds = %if.end22
  br label %cond.end34, !dbg !4036

cond.end34:                                       ; preds = %cond.false33, %cond.true29
  %cond35 = phi i32 [ %26, %cond.true29 ], [ 4, %cond.false33 ], !dbg !4038
  %27 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4040
  %channel36 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %27, i32 0, i32 0, !dbg !4041
  %arrayidx37 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel36, i64 0, i64 0, !dbg !4040
  %band_ext38 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx37, i32 0, i32 0, !dbg !4042
  store i32 %cond35, i32* %band_ext38, align 32, !dbg !4043
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4044
  %call39 = call i32 @get_bits(%struct.GetBitContext* %28, i32 5), !dbg !4046
  %tobool40 = icmp ne i32 %call39, 0, !dbg !4046
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !4047

if.then41:                                        ; preds = %cond.end34
  store i32 0, i32* %retval, align 4, !dbg !4048
  br label %return, !dbg !4048

if.end42:                                         ; preds = %cond.end34
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4049, metadata !2064), !dbg !4051
  store i32 0, i32* %i, align 4, !dbg !4051
  br label %for.cond, !dbg !4052

for.cond:                                         ; preds = %for.inc69, %if.end42
  %29 = load i32, i32* %i, align 4, !dbg !4053
  %30 = load i32, i32* %stereo.addr, align 4, !dbg !4056
  %cmp43 = icmp sle i32 %29, %30, !dbg !4057
  br i1 %cmp43, label %for.body, label %for.end71, !dbg !4058

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c, metadata !4059, metadata !2064), !dbg !4061
  %31 = load i32, i32* %i, align 4, !dbg !4062
  %idxprom45 = sext i32 %31 to i64, !dbg !4063
  %32 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4063
  %channel46 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %32, i32 0, i32 0, !dbg !4064
  %arrayidx47 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel46, i64 0, i64 %idxprom45, !dbg !4063
  store %struct.ATRAC9ChannelData* %arrayidx47, %struct.ATRAC9ChannelData** %c, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4065, metadata !2064), !dbg !4066
  %33 = load i32, i32* %ext_band, align 4, !dbg !4067
  %idxprom48 = sext i32 %33 to i64, !dbg !4068
  %34 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !4069
  %band_ext49 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %34, i32 0, i32 0, !dbg !4070
  %35 = load i32, i32* %band_ext49, align 32, !dbg !4070
  %idxprom50 = sext i32 %35 to i64, !dbg !4068
  %arrayidx51 = getelementptr inbounds [5 x [6 x i8]], [5 x [6 x i8]]* @at9_tab_band_ext_cnt, i64 0, i64 %idxprom50, !dbg !4068
  %arrayidx52 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !4068
  %36 = load i8, i8* %arrayidx52, align 1, !dbg !4068
  %conv53 = zext i8 %36 to i32, !dbg !4068
  store i32 %conv53, i32* %count, align 4, !dbg !4066
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4071, metadata !2064), !dbg !4073
  store i32 0, i32* %j, align 4, !dbg !4073
  br label %for.cond54, !dbg !4074

for.cond54:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %j, align 4, !dbg !4075
  %38 = load i32, i32* %count, align 4, !dbg !4078
  %cmp55 = icmp slt i32 %37, %38, !dbg !4079
  br i1 %cmp55, label %for.body57, label %for.end, !dbg !4080

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4081, metadata !2064), !dbg !4083
  %39 = load i32, i32* %j, align 4, !dbg !4084
  %idxprom58 = sext i32 %39 to i64, !dbg !4085
  %40 = load i32, i32* %ext_band, align 4, !dbg !4086
  %idxprom59 = sext i32 %40 to i64, !dbg !4085
  %41 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !4087
  %band_ext60 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %41, i32 0, i32 0, !dbg !4088
  %42 = load i32, i32* %band_ext60, align 32, !dbg !4088
  %idxprom61 = sext i32 %42 to i64, !dbg !4085
  %arrayidx62 = getelementptr inbounds [5 x [6 x [4 x i8]]], [5 x [6 x [4 x i8]]]* @at9_tab_band_ext_lengths, i64 0, i64 %idxprom61, !dbg !4085
  %arrayidx63 = getelementptr inbounds [6 x [4 x i8]], [6 x [4 x i8]]* %arrayidx62, i64 0, i64 %idxprom59, !dbg !4085
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx63, i64 0, i64 %idxprom58, !dbg !4085
  %43 = load i8, i8* %arrayidx64, align 1, !dbg !4085
  %conv65 = zext i8 %43 to i32, !dbg !4085
  store i32 %conv65, i32* %len, align 4, !dbg !4083
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4089
  %45 = load i32, i32* %len, align 4, !dbg !4090
  %call66 = call i32 @get_bits(%struct.GetBitContext* %44, i32 %45), !dbg !4091
  %46 = load i32, i32* %j, align 4, !dbg !4092
  %idxprom67 = sext i32 %46 to i64, !dbg !4093
  %47 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !4093
  %band_ext_data = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %47, i32 0, i32 2, !dbg !4094
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data, i64 0, i64 %idxprom67, !dbg !4093
  store i32 %call66, i32* %arrayidx68, align 4, !dbg !4095
  br label %for.inc, !dbg !4096

for.inc:                                          ; preds = %for.body57
  %48 = load i32, i32* %j, align 4, !dbg !4097
  %inc = add nsw i32 %48, 1, !dbg !4097
  store i32 %inc, i32* %j, align 4, !dbg !4097
  br label %for.cond54, !dbg !4099, !llvm.loop !4100

for.end:                                          ; preds = %for.cond54
  br label %for.inc69, !dbg !4102

for.inc69:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4103
  %inc70 = add nsw i32 %49, 1, !dbg !4103
  store i32 %inc70, i32* %i, align 4, !dbg !4103
  br label %for.cond, !dbg !4105, !llvm.loop !4106

for.end71:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4108
  br label %return, !dbg !4108

return:                                           ; preds = %for.end71, %if.then41, %if.then20, %if.then16
  %50 = load i32, i32* %retval, align 4, !dbg !4109
  ret i32 %50, !dbg !4109
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @read_scalefactors(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c, %struct.GetBitContext* %gb, i32 %channel_idx, i32 %first_in_pkt) #4 !dbg !1855 {
entry:
  %x.addr.i96.i407 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i407, metadata !2801, metadata !2064), !dbg !4110
  %x.addr.i81.i408 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i408, metadata !2801, metadata !2064), !dbg !4127
  %x.addr.i.i409 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i409, metadata !2801, metadata !2064), !dbg !4130
  %s.addr.i410 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i410, metadata !4132, metadata !2064), !dbg !4133
  %table.addr.i411 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i411, metadata !4134, metadata !2064), !dbg !4135
  %bits.addr.i412 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i412, metadata !4136, metadata !2064), !dbg !4137
  %max_depth.addr.i413 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i413, metadata !4138, metadata !2064), !dbg !4139
  %code.i414 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i414, metadata !4140, metadata !2064), !dbg !4141
  %re_index.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i415, metadata !4142, metadata !2064), !dbg !4143
  %re_cache.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i416, metadata !4144, metadata !2064), !dbg !4145
  %re_size_plus8.i417 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i417, metadata !4146, metadata !2064), !dbg !4147
  %n.i418 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i418, metadata !4148, metadata !2064), !dbg !4149
  %nb_bits.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i419, metadata !4150, metadata !2064), !dbg !4151
  %index1.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i420, metadata !4152, metadata !2064), !dbg !4153
  %x.addr.i96.i261 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i261, metadata !2801, metadata !2064), !dbg !4154
  %x.addr.i81.i262 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i262, metadata !2801, metadata !2064), !dbg !4161
  %x.addr.i.i263 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i263, metadata !2801, metadata !2064), !dbg !4163
  %s.addr.i264 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i264, metadata !4132, metadata !2064), !dbg !4165
  %table.addr.i265 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i265, metadata !4134, metadata !2064), !dbg !4166
  %bits.addr.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i266, metadata !4136, metadata !2064), !dbg !4167
  %max_depth.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i267, metadata !4138, metadata !2064), !dbg !4168
  %code.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i268, metadata !4140, metadata !2064), !dbg !4169
  %re_index.i269 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i269, metadata !4142, metadata !2064), !dbg !4170
  %re_cache.i270 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i270, metadata !4144, metadata !2064), !dbg !4171
  %re_size_plus8.i271 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i271, metadata !4146, metadata !2064), !dbg !4172
  %n.i272 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i272, metadata !4148, metadata !2064), !dbg !4173
  %nb_bits.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i273, metadata !4150, metadata !2064), !dbg !4174
  %index1.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i274, metadata !4152, metadata !2064), !dbg !4175
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2801, metadata !2064), !dbg !4176
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2801, metadata !2064), !dbg !4183
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2801, metadata !2064), !dbg !4185
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4132, metadata !2064), !dbg !4187
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4134, metadata !2064), !dbg !4188
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4136, metadata !2064), !dbg !4189
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4138, metadata !2064), !dbg !4190
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4140, metadata !2064), !dbg !4191
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4142, metadata !2064), !dbg !4192
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4144, metadata !2064), !dbg !4193
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4146, metadata !2064), !dbg !4194
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4148, metadata !2064), !dbg !4195
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4150, metadata !2064), !dbg !4196
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !4152, metadata !2064), !dbg !4197
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %channel_idx.addr = alloca i32, align 4
  %first_in_pkt.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %sf_weights = alloca i8*, align 8
  %base = alloca i32, align 4
  %len = alloca i32, align 4
  %tab = alloca %struct.VLC*, align 8
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  %i28 = alloca i32, align 4
  %len44 = alloca i32, align 4
  %base47 = alloca i32, align 4
  %i51 = alloca i32, align 4
  %baseline = alloca i32*, align 8
  %baseline_len = alloca i32, align 4
  %len96 = alloca i32, align 4
  %unit_cnt = alloca i32, align 4
  %tab107 = alloca %struct.VLC*, align 8
  %i112 = alloca i32, align 4
  %dist = alloca i32, align 4
  %i128 = alloca i32, align 4
  %baseline142 = alloca i32*, align 8
  %baseline_len154 = alloca i32, align 4
  %base162 = alloca i32, align 4
  %len165 = alloca i32, align 4
  %unit_cnt168 = alloca i32, align 4
  %tab177 = alloca %struct.VLC*, align 8
  %i185 = alloca i32, align 4
  %val190 = alloca i32, align 4
  %i207 = alloca i32, align 4
  %i222 = alloca i32, align 4
  %i235 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !4198, metadata !2064), !dbg !4199
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !4200, metadata !2064), !dbg !4201
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !4202, metadata !2064), !dbg !4203
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4204, metadata !2064), !dbg !4205
  store i32 %channel_idx, i32* %channel_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_idx.addr, metadata !4206, metadata !2064), !dbg !4207
  store i32 %first_in_pkt, i32* %first_in_pkt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_in_pkt.addr, metadata !4208, metadata !2064), !dbg !4209
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !4210, metadata !2064), !dbg !4211
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4212
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !4213
  %idxprom = zext i32 %call to i64, !dbg !4214
  %1 = load i32, i32* %channel_idx.addr, align 4, !dbg !4215
  %idxprom1 = sext i32 %1 to i64, !dbg !4214
  %arrayidx = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* @read_scalefactors.mode_map, i64 0, i64 %idxprom1, !dbg !4214
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !4214
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !4214
  store i32 %2, i32* %mode, align 4, !dbg !4211
  %3 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4216
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %3, i32 0, i32 3, !dbg !4217
  %arraydecay = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i32 0, i32 0, !dbg !4218
  %4 = bitcast i32* %arraydecay to i8*, !dbg !4218
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 124, i32 8, i1 false), !dbg !4218
  %5 = load i32, i32* %first_in_pkt.addr, align 4, !dbg !4219
  %tobool = icmp ne i32 %5, 0, !dbg !4219
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4221

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %mode, align 4, !dbg !4222
  %cmp = icmp eq i32 %6, 4, !dbg !4224
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4225

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load i32, i32* %mode, align 4, !dbg !4226
  %cmp3 = icmp eq i32 %7, 3, !dbg !4228
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !4229

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %channel_idx.addr, align 4, !dbg !4230
  %tobool5 = icmp ne i32 %8, 0, !dbg !4230
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4232

if.then:                                          ; preds = %land.lhs.true4, %land.lhs.true
  %9 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !4233
  %avctx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %9, i32 0, i32 0, !dbg !4235
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4235
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !4233
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0)), !dbg !4236
  store i32 -1094995529, i32* %retval, align 4, !dbg !4237
  br label %return, !dbg !4237

if.end:                                           ; preds = %land.lhs.true4, %lor.lhs.false, %entry
  %12 = load i32, i32* %mode, align 4, !dbg !4238
  switch i32 %12, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb43
    i32 2, label %sw.bb65
    i32 4, label %sw.bb65
    i32 3, label %sw.bb141
  ], !dbg !4239

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %sf_weights, metadata !4240, metadata !2064), !dbg !4241
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4242
  %call6 = call i32 @get_bits(%struct.GetBitContext* %13, i32 3), !dbg !4243
  %idxprom7 = zext i32 %call6 to i64, !dbg !4244
  %arrayidx8 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* @at9_tab_sf_weights, i64 0, i64 %idxprom7, !dbg !4244
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx8, i32 0, i32 0, !dbg !4244
  store i8* %arraydecay9, i8** %sf_weights, align 8, !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %base, metadata !4245, metadata !2064), !dbg !4246
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4247
  %call10 = call i32 @get_bits(%struct.GetBitContext* %14, i32 5), !dbg !4248
  store i32 %call10, i32* %base, align 4, !dbg !4246
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4249, metadata !2064), !dbg !4250
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4251
  %call11 = call i32 @get_bits(%struct.GetBitContext* %15, i32 2), !dbg !4252
  %add = add i32 %call11, 3, !dbg !4253
  store i32 %add, i32* %len, align 4, !dbg !4250
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab, metadata !4254, metadata !2064), !dbg !4257
  %16 = load i32, i32* %len, align 4, !dbg !4258
  %idxprom12 = sext i32 %16 to i64, !dbg !4259
  %17 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !4259
  %sf_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %17, i32 0, i32 10, !dbg !4260
  %arrayidx13 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc, i64 0, i64 0, !dbg !4259
  %arrayidx14 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx13, i64 0, i64 %idxprom12, !dbg !4259
  store %struct.VLC* %arrayidx14, %struct.VLC** %tab, align 8, !dbg !4257
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4261
  %19 = load i32, i32* %len, align 4, !dbg !4262
  %call15 = call i32 @get_bits(%struct.GetBitContext* %18, i32 %19), !dbg !4263
  %20 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4264
  %scalefactors16 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %20, i32 0, i32 3, !dbg !4265
  %arrayidx17 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors16, i64 0, i64 0, !dbg !4264
  store i32 %call15, i32* %arrayidx17, align 8, !dbg !4266
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4267, metadata !2064), !dbg !4268
  store i32 1, i32* %i, align 4, !dbg !4268
  br label %for.cond, !dbg !4269

for.cond:                                         ; preds = %for.inc, %sw.bb
  %21 = load i32, i32* %i, align 4, !dbg !4270
  %22 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4272
  %band_ext_q_unit = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %22, i32 0, i32 7, !dbg !4273
  %23 = load i32, i32* %band_ext_q_unit, align 8, !dbg !4273
  %cmp18 = icmp slt i32 %21, %23, !dbg !4274
  br i1 %cmp18, label %for.body, label %for.end, !dbg !4275

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !4276, metadata !2064), !dbg !4277
  %24 = load i32, i32* %i, align 4, !dbg !4278
  %sub = sub nsw i32 %24, 1, !dbg !4279
  %idxprom19 = sext i32 %sub to i64, !dbg !4280
  %25 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4280
  %scalefactors20 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %25, i32 0, i32 3, !dbg !4281
  %arrayidx21 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors20, i64 0, i64 %idxprom19, !dbg !4280
  %26 = load i32, i32* %arrayidx21, align 4, !dbg !4280
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4282
  %28 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !4283
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %28, i32 0, i32 1, !dbg !4284
  %29 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4284
  store %struct.GetBitContext* %27, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4285
  store [2 x i16]* %29, [2 x i16]** %table.addr.i, align 8, !dbg !4285
  store i32 9, i32* %bits.addr.i, align 4, !dbg !4285
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !4285
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4286
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %30, i32 0, i32 2, !dbg !4287
  %31 = load i32, i32* %index.i, align 8, !dbg !4287
  store i32 %31, i32* %re_index.i, align 4, !dbg !4192
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4288
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 4, !dbg !4289
  %33 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4289
  store i32 %33, i32* %re_size_plus8.i, align 4, !dbg !4194
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4290
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 0, !dbg !4291
  %35 = load i8*, i8** %buffer.i, align 8, !dbg !4291
  %36 = load i32, i32* %re_index.i, align 4, !dbg !4292
  %shr.i = lshr i32 %36, 3, !dbg !4293
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4294
  %add.ptr.i = getelementptr inbounds i8, i8* %35, i64 %idx.ext.i, !dbg !4294
  %37 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4295
  %l.i = bitcast %union.unaligned_32* %37 to i32*, !dbg !4295
  %38 = load i32, i32* %l.i, align 1, !dbg !4295
  store i32 %38, i32* %x.addr.i.i, align 4, !dbg !4296
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !4297
  %shl.i.i = shl i32 %39, 8, !dbg !4298
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4299
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !4300
  %shr.i.i = lshr i32 %40, 8, !dbg !4301
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4302
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4303
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4304
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !4305
  %shr3.i.i = lshr i32 %41, 16, !dbg !4306
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4307
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4308
  %42 = load i32, i32* %x.addr.i.i, align 4, !dbg !4309
  %shr6.i.i = lshr i32 %42, 16, !dbg !4310
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4311
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4312
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4313
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4314
  %43 = load i32, i32* %re_index.i, align 4, !dbg !4315
  %and.i = and i32 %43, 7, !dbg !4316
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !4317
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !4318
  %44 = load i32, i32* %re_cache.i, align 4, !dbg !4319
  %45 = load i32, i32* %bits.addr.i, align 4, !dbg !4321
  %conv.i = trunc i32 %45 to i8, !dbg !4321
  %call2.i = call i32 @NEG_USR32(i32 %44, i8 signext %conv.i) #8, !dbg !4322
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !4323
  %46 = load i32, i32* %index1.i, align 4, !dbg !4324
  %idxprom.i = zext i32 %46 to i64, !dbg !4325
  %47 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4325
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %47, i64 %idxprom.i, !dbg !4325
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4325
  %48 = load i16, i16* %arrayidx3.i, align 2, !dbg !4325
  %conv4.i = sext i16 %48 to i32, !dbg !4325
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !4326
  %49 = load i32, i32* %index1.i, align 4, !dbg !4327
  %idxprom5.i = zext i32 %49 to i64, !dbg !4328
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4328
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom5.i, !dbg !4328
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !4328
  %51 = load i16, i16* %arrayidx7.i, align 2, !dbg !4328
  %conv8.i = sext i16 %51 to i32, !dbg !4328
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !4329
  %52 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4330
  %cmp.i = icmp sgt i32 %52, 1, !dbg !4331
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !4332

land.lhs.true.i:                                  ; preds = %for.body
  %53 = load i32, i32* %n.i, align 4, !dbg !4333
  %cmp10.i = icmp slt i32 %53, 0, !dbg !4335
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !4336

if.then.i:                                        ; preds = %land.lhs.true.i
  %54 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4337
  %55 = load i32, i32* %re_index.i, align 4, !dbg !4339
  %56 = load i32, i32* %bits.addr.i, align 4, !dbg !4340
  %add.i = add i32 %55, %56, !dbg !4341
  %cmp12.i = icmp ugt i32 %54, %add.i, !dbg !4342
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !4343

cond.true.i:                                      ; preds = %if.then.i
  %57 = load i32, i32* %re_index.i, align 4, !dbg !4344
  %58 = load i32, i32* %bits.addr.i, align 4, !dbg !4346
  %add14.i = add i32 %57, %58, !dbg !4347
  br label %cond.end.i, !dbg !4348

cond.false.i:                                     ; preds = %if.then.i
  %59 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4349
  br label %cond.end.i, !dbg !4351

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %59, %cond.false.i ], !dbg !4352
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4353
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4354
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %60, i32 0, i32 0, !dbg !4355
  %61 = load i8*, i8** %buffer15.i, align 8, !dbg !4355
  %62 = load i32, i32* %re_index.i, align 4, !dbg !4356
  %shr16.i = lshr i32 %62, 3, !dbg !4357
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !4358
  %add.ptr18.i = getelementptr inbounds i8, i8* %61, i64 %idx.ext17.i, !dbg !4358
  %63 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !4359
  %l19.i = bitcast %union.unaligned_32* %63 to i32*, !dbg !4359
  %64 = load i32, i32* %l19.i, align 1, !dbg !4359
  store i32 %64, i32* %x.addr.i81.i, align 4, !dbg !4360
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4361
  %shl.i82.i = shl i32 %65, 8, !dbg !4362
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !4363
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4364
  %shr.i84.i = lshr i32 %66, 8, !dbg !4365
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !4366
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !4367
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !4368
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4369
  %shr3.i88.i = lshr i32 %67, 16, !dbg !4370
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !4371
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !4372
  %68 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4373
  %shr6.i91.i = lshr i32 %68, 16, !dbg !4374
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !4375
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !4376
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !4377
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !4378
  %69 = load i32, i32* %re_index.i, align 4, !dbg !4379
  %and21.i = and i32 %69, 7, !dbg !4380
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !4381
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !4382
  %70 = load i32, i32* %n.i, align 4, !dbg !4383
  %sub.i = sub nsw i32 0, %70, !dbg !4384
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4385
  %71 = load i32, i32* %re_cache.i, align 4, !dbg !4386
  %72 = load i32, i32* %nb_bits.i, align 4, !dbg !4387
  %conv23.i = trunc i32 %72 to i8, !dbg !4387
  %call24.i = call i32 @NEG_USR32(i32 %71, i8 signext %conv23.i) #8, !dbg !4388
  %73 = load i32, i32* %code.i, align 4, !dbg !4390
  %add25.i = add i32 %call24.i, %73, !dbg !4391
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !4392
  %74 = load i32, i32* %index1.i, align 4, !dbg !4393
  %idxprom26.i = zext i32 %74 to i64, !dbg !4394
  %75 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4394
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %75, i64 %idxprom26.i, !dbg !4394
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !4394
  %76 = load i16, i16* %arrayidx28.i, align 2, !dbg !4394
  %conv29.i = sext i16 %76 to i32, !dbg !4394
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !4395
  %77 = load i32, i32* %index1.i, align 4, !dbg !4396
  %idxprom30.i = zext i32 %77 to i64, !dbg !4397
  %78 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4397
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom30.i, !dbg !4397
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !4397
  %79 = load i16, i16* %arrayidx32.i, align 2, !dbg !4397
  %conv33.i = sext i16 %79 to i32, !dbg !4397
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !4398
  %80 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4399
  %cmp34.i = icmp sgt i32 %80, 2, !dbg !4400
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !4401

land.lhs.true36.i:                                ; preds = %cond.end.i
  %81 = load i32, i32* %n.i, align 4, !dbg !4402
  %cmp37.i = icmp slt i32 %81, 0, !dbg !4404
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !4405

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %82 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4406
  %83 = load i32, i32* %re_index.i, align 4, !dbg !4408
  %84 = load i32, i32* %nb_bits.i, align 4, !dbg !4409
  %add40.i = add i32 %83, %84, !dbg !4410
  %cmp41.i = icmp ugt i32 %82, %add40.i, !dbg !4411
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !4412

cond.true43.i:                                    ; preds = %if.then39.i
  %85 = load i32, i32* %re_index.i, align 4, !dbg !4413
  %86 = load i32, i32* %nb_bits.i, align 4, !dbg !4415
  %add44.i = add i32 %85, %86, !dbg !4416
  br label %cond.end46.i, !dbg !4417

cond.false45.i:                                   ; preds = %if.then39.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4418
  br label %cond.end46.i, !dbg !4420

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %87, %cond.false45.i ], !dbg !4421
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !4422
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4423
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %88, i32 0, i32 0, !dbg !4424
  %89 = load i8*, i8** %buffer48.i, align 8, !dbg !4424
  %90 = load i32, i32* %re_index.i, align 4, !dbg !4425
  %shr49.i = lshr i32 %90, 3, !dbg !4426
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !4427
  %add.ptr51.i = getelementptr inbounds i8, i8* %89, i64 %idx.ext50.i, !dbg !4427
  %91 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !4428
  %l52.i = bitcast %union.unaligned_32* %91 to i32*, !dbg !4428
  %92 = load i32, i32* %l52.i, align 1, !dbg !4428
  store i32 %92, i32* %x.addr.i96.i, align 4, !dbg !4429
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4430
  %shl.i97.i = shl i32 %93, 8, !dbg !4431
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !4432
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4433
  %shr.i99.i = lshr i32 %94, 8, !dbg !4434
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !4435
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !4436
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !4437
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4438
  %shr3.i103.i = lshr i32 %95, 16, !dbg !4439
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !4440
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !4441
  %96 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4442
  %shr6.i106.i = lshr i32 %96, 16, !dbg !4443
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !4444
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !4445
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !4446
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !4447
  %97 = load i32, i32* %re_index.i, align 4, !dbg !4448
  %and54.i = and i32 %97, 7, !dbg !4449
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !4450
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !4451
  %98 = load i32, i32* %n.i, align 4, !dbg !4452
  %sub56.i = sub nsw i32 0, %98, !dbg !4453
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4454
  %99 = load i32, i32* %re_cache.i, align 4, !dbg !4455
  %100 = load i32, i32* %nb_bits.i, align 4, !dbg !4456
  %conv57.i = trunc i32 %100 to i8, !dbg !4456
  %call58.i = call i32 @NEG_USR32(i32 %99, i8 signext %conv57.i) #8, !dbg !4457
  %101 = load i32, i32* %code.i, align 4, !dbg !4459
  %add59.i = add i32 %call58.i, %101, !dbg !4460
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4461
  %102 = load i32, i32* %index1.i, align 4, !dbg !4462
  %idxprom60.i = zext i32 %102 to i64, !dbg !4463
  %103 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4463
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %103, i64 %idxprom60.i, !dbg !4463
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4463
  %104 = load i16, i16* %arrayidx62.i, align 2, !dbg !4463
  %conv63.i = sext i16 %104 to i32, !dbg !4463
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4464
  %105 = load i32, i32* %index1.i, align 4, !dbg !4465
  %idxprom64.i = zext i32 %105 to i64, !dbg !4466
  %106 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4466
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %106, i64 %idxprom64.i, !dbg !4466
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4466
  %107 = load i16, i16* %arrayidx66.i, align 2, !dbg !4466
  %conv67.i = sext i16 %107 to i32, !dbg !4466
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4467
  br label %if.end.i, !dbg !4468

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4469

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body
  %108 = load i32, i32* %n.i, align 4, !dbg !4471
  %109 = load i32, i32* %re_cache.i, align 4, !dbg !4474
  %shl70.i = shl i32 %109, %108, !dbg !4474
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4474
  %110 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4475
  %111 = load i32, i32* %re_index.i, align 4, !dbg !4476
  %112 = load i32, i32* %n.i, align 4, !dbg !4477
  %add71.i = add i32 %111, %112, !dbg !4478
  %cmp72.i = icmp ugt i32 %110, %add71.i, !dbg !4479
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4480

cond.true74.i:                                    ; preds = %if.end68.i
  %113 = load i32, i32* %re_index.i, align 4, !dbg !4481
  %114 = load i32, i32* %n.i, align 4, !dbg !4483
  %add75.i = add i32 %113, %114, !dbg !4484
  br label %get_vlc2.exit, !dbg !4485

cond.false76.i:                                   ; preds = %if.end68.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4486
  br label %get_vlc2.exit, !dbg !4488

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %115, %cond.false76.i ], !dbg !4489
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4491
  %116 = load i32, i32* %re_index.i, align 4, !dbg !4492
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4493
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 2, !dbg !4494
  store i32 %116, i32* %index80.i, align 8, !dbg !4495
  %118 = load i32, i32* %code.i, align 4, !dbg !4496
  %add23 = add nsw i32 %26, %118, !dbg !4497
  store i32 %add23, i32* %val, align 4, !dbg !4277
  %119 = load i32, i32* %val, align 4, !dbg !4498
  %120 = load i32, i32* %len, align 4, !dbg !4499
  %shl = shl i32 1, %120, !dbg !4500
  %sub24 = sub nsw i32 %shl, 1, !dbg !4501
  %and = and i32 %119, %sub24, !dbg !4502
  %121 = load i32, i32* %i, align 4, !dbg !4503
  %idxprom25 = sext i32 %121 to i64, !dbg !4504
  %122 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4504
  %scalefactors26 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %122, i32 0, i32 3, !dbg !4505
  %arrayidx27 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors26, i64 0, i64 %idxprom25, !dbg !4504
  store i32 %and, i32* %arrayidx27, align 4, !dbg !4506
  br label %for.inc, !dbg !4507

for.inc:                                          ; preds = %get_vlc2.exit
  %123 = load i32, i32* %i, align 4, !dbg !4508
  %inc = add nsw i32 %123, 1, !dbg !4508
  store i32 %inc, i32* %i, align 4, !dbg !4508
  br label %for.cond, !dbg !4510, !llvm.loop !4511

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i28, metadata !4513, metadata !2064), !dbg !4515
  store i32 0, i32* %i28, align 4, !dbg !4515
  br label %for.cond29, !dbg !4516

for.cond29:                                       ; preds = %for.inc40, %for.end
  %124 = load i32, i32* %i28, align 4, !dbg !4517
  %125 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4520
  %band_ext_q_unit30 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %125, i32 0, i32 7, !dbg !4521
  %126 = load i32, i32* %band_ext_q_unit30, align 8, !dbg !4521
  %cmp31 = icmp slt i32 %124, %126, !dbg !4522
  br i1 %cmp31, label %for.body32, label %for.end42, !dbg !4523

for.body32:                                       ; preds = %for.cond29
  %127 = load i32, i32* %base, align 4, !dbg !4524
  %128 = load i32, i32* %i28, align 4, !dbg !4525
  %idxprom33 = sext i32 %128 to i64, !dbg !4526
  %129 = load i8*, i8** %sf_weights, align 8, !dbg !4526
  %arrayidx34 = getelementptr inbounds i8, i8* %129, i64 %idxprom33, !dbg !4526
  %130 = load i8, i8* %arrayidx34, align 1, !dbg !4526
  %conv = zext i8 %130 to i32, !dbg !4526
  %sub35 = sub nsw i32 %127, %conv, !dbg !4527
  %131 = load i32, i32* %i28, align 4, !dbg !4528
  %idxprom36 = sext i32 %131 to i64, !dbg !4529
  %132 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4529
  %scalefactors37 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %132, i32 0, i32 3, !dbg !4530
  %arrayidx38 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors37, i64 0, i64 %idxprom36, !dbg !4529
  %133 = load i32, i32* %arrayidx38, align 4, !dbg !4531
  %add39 = add nsw i32 %133, %sub35, !dbg !4531
  store i32 %add39, i32* %arrayidx38, align 4, !dbg !4531
  br label %for.inc40, !dbg !4529

for.inc40:                                        ; preds = %for.body32
  %134 = load i32, i32* %i28, align 4, !dbg !4532
  %inc41 = add nsw i32 %134, 1, !dbg !4532
  store i32 %inc41, i32* %i28, align 4, !dbg !4532
  br label %for.cond29, !dbg !4534, !llvm.loop !4535

for.end42:                                        ; preds = %for.cond29
  br label %sw.epilog, !dbg !4537

sw.bb43:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %len44, metadata !4538, metadata !2064), !dbg !4540
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4541
  %call45 = call i32 @get_bits(%struct.GetBitContext* %135, i32 2), !dbg !4542
  %add46 = add i32 %call45, 2, !dbg !4543
  store i32 %add46, i32* %len44, align 4, !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %base47, metadata !4544, metadata !2064), !dbg !4545
  %136 = load i32, i32* %len44, align 4, !dbg !4546
  %cmp48 = icmp slt i32 %136, 5, !dbg !4547
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !4546

cond.true:                                        ; preds = %sw.bb43
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4548
  %call50 = call i32 @get_bits(%struct.GetBitContext* %137, i32 5), !dbg !4550
  br label %cond.end, !dbg !4551

cond.false:                                       ; preds = %sw.bb43
  br label %cond.end, !dbg !4552

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call50, %cond.true ], [ 0, %cond.false ], !dbg !4554
  store i32 %cond, i32* %base47, align 4, !dbg !4556
  call void @llvm.dbg.declare(metadata i32* %i51, metadata !4557, metadata !2064), !dbg !4559
  store i32 0, i32* %i51, align 4, !dbg !4559
  br label %for.cond52, !dbg !4560

for.cond52:                                       ; preds = %for.inc62, %cond.end
  %138 = load i32, i32* %i51, align 4, !dbg !4561
  %139 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4564
  %band_ext_q_unit53 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %139, i32 0, i32 7, !dbg !4565
  %140 = load i32, i32* %band_ext_q_unit53, align 8, !dbg !4565
  %cmp54 = icmp slt i32 %138, %140, !dbg !4566
  br i1 %cmp54, label %for.body56, label %for.end64, !dbg !4567

for.body56:                                       ; preds = %for.cond52
  %141 = load i32, i32* %base47, align 4, !dbg !4568
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4569
  %143 = load i32, i32* %len44, align 4, !dbg !4570
  %call57 = call i32 @get_bits(%struct.GetBitContext* %142, i32 %143), !dbg !4571
  %add58 = add i32 %141, %call57, !dbg !4572
  %144 = load i32, i32* %i51, align 4, !dbg !4573
  %idxprom59 = sext i32 %144 to i64, !dbg !4574
  %145 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4574
  %scalefactors60 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %145, i32 0, i32 3, !dbg !4575
  %arrayidx61 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors60, i64 0, i64 %idxprom59, !dbg !4574
  store i32 %add58, i32* %arrayidx61, align 4, !dbg !4576
  br label %for.inc62, !dbg !4574

for.inc62:                                        ; preds = %for.body56
  %146 = load i32, i32* %i51, align 4, !dbg !4577
  %inc63 = add nsw i32 %146, 1, !dbg !4577
  store i32 %inc63, i32* %i51, align 4, !dbg !4577
  br label %for.cond52, !dbg !4579, !llvm.loop !4580

for.end64:                                        ; preds = %for.cond52
  br label %sw.epilog, !dbg !4582

sw.bb65:                                          ; preds = %if.end, %if.end
  call void @llvm.dbg.declare(metadata i32** %baseline, metadata !4583, metadata !2064), !dbg !4584
  %147 = load i32, i32* %mode, align 4, !dbg !4585
  %cmp66 = icmp eq i32 %147, 4, !dbg !4586
  br i1 %cmp66, label %cond.true68, label %cond.false70, !dbg !4585

cond.true68:                                      ; preds = %sw.bb65
  %148 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4587
  %scalefactors_prev = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %148, i32 0, i32 4, !dbg !4589
  %arraydecay69 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors_prev, i32 0, i32 0, !dbg !4587
  br label %cond.end81, !dbg !4590

cond.false70:                                     ; preds = %sw.bb65
  %149 = load i32, i32* %channel_idx.addr, align 4, !dbg !4591
  %tobool71 = icmp ne i32 %149, 0, !dbg !4591
  br i1 %tobool71, label %cond.true72, label %cond.false76, !dbg !4591

cond.true72:                                      ; preds = %cond.false70
  %150 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4592
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %150, i32 0, i32 0, !dbg !4593
  %arrayidx73 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 0, !dbg !4592
  %scalefactors74 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx73, i32 0, i32 3, !dbg !4594
  %arraydecay75 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors74, i32 0, i32 0, !dbg !4592
  br label %cond.end79, !dbg !4595

cond.false76:                                     ; preds = %cond.false70
  %151 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4596
  %scalefactors_prev77 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %151, i32 0, i32 4, !dbg !4597
  %arraydecay78 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors_prev77, i32 0, i32 0, !dbg !4596
  br label %cond.end79, !dbg !4598

cond.end79:                                       ; preds = %cond.false76, %cond.true72
  %cond80 = phi i32* [ %arraydecay75, %cond.true72 ], [ %arraydecay78, %cond.false76 ], !dbg !4600
  br label %cond.end81, !dbg !4602

cond.end81:                                       ; preds = %cond.end79, %cond.true68
  %cond82 = phi i32* [ %arraydecay69, %cond.true68 ], [ %cond80, %cond.end79 ], !dbg !4603
  store i32* %cond82, i32** %baseline, align 8, !dbg !4604
  call void @llvm.dbg.declare(metadata i32* %baseline_len, metadata !4605, metadata !2064), !dbg !4606
  %152 = load i32, i32* %mode, align 4, !dbg !4607
  %cmp83 = icmp eq i32 %152, 4, !dbg !4608
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !4607

cond.true85:                                      ; preds = %cond.end81
  %153 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4609
  %q_unit_cnt_prev = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %153, i32 0, i32 3, !dbg !4610
  %154 = load i32, i32* %q_unit_cnt_prev, align 8, !dbg !4610
  br label %cond.end94, !dbg !4611

cond.false86:                                     ; preds = %cond.end81
  %155 = load i32, i32* %channel_idx.addr, align 4, !dbg !4612
  %tobool87 = icmp ne i32 %155, 0, !dbg !4612
  br i1 %tobool87, label %cond.true88, label %cond.false90, !dbg !4612

cond.true88:                                      ; preds = %cond.false86
  %156 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4613
  %band_ext_q_unit89 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %156, i32 0, i32 7, !dbg !4614
  %157 = load i32, i32* %band_ext_q_unit89, align 8, !dbg !4614
  br label %cond.end92, !dbg !4615

cond.false90:                                     ; preds = %cond.false86
  %158 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4616
  %q_unit_cnt_prev91 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %158, i32 0, i32 3, !dbg !4617
  %159 = load i32, i32* %q_unit_cnt_prev91, align 8, !dbg !4617
  br label %cond.end92, !dbg !4618

cond.end92:                                       ; preds = %cond.false90, %cond.true88
  %cond93 = phi i32 [ %157, %cond.true88 ], [ %159, %cond.false90 ], !dbg !4619
  br label %cond.end94, !dbg !4620

cond.end94:                                       ; preds = %cond.end92, %cond.true85
  %cond95 = phi i32 [ %154, %cond.true85 ], [ %cond93, %cond.end92 ], !dbg !4621
  store i32 %cond95, i32* %baseline_len, align 4, !dbg !4622
  call void @llvm.dbg.declare(metadata i32* %len96, metadata !4623, metadata !2064), !dbg !4624
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4625
  %call97 = call i32 @get_bits(%struct.GetBitContext* %160, i32 2), !dbg !4626
  %add98 = add i32 %call97, 2, !dbg !4627
  store i32 %add98, i32* %len96, align 4, !dbg !4624
  call void @llvm.dbg.declare(metadata i32* %unit_cnt, metadata !4628, metadata !2064), !dbg !4629
  %161 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4630
  %band_ext_q_unit99 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %161, i32 0, i32 7, !dbg !4631
  %162 = load i32, i32* %band_ext_q_unit99, align 8, !dbg !4631
  %163 = load i32, i32* %baseline_len, align 4, !dbg !4632
  %cmp100 = icmp sgt i32 %162, %163, !dbg !4633
  br i1 %cmp100, label %cond.true102, label %cond.false103, !dbg !4634

cond.true102:                                     ; preds = %cond.end94
  %164 = load i32, i32* %baseline_len, align 4, !dbg !4635
  br label %cond.end105, !dbg !4636

cond.false103:                                    ; preds = %cond.end94
  %165 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4637
  %band_ext_q_unit104 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %165, i32 0, i32 7, !dbg !4638
  %166 = load i32, i32* %band_ext_q_unit104, align 8, !dbg !4638
  br label %cond.end105, !dbg !4639

cond.end105:                                      ; preds = %cond.false103, %cond.true102
  %cond106 = phi i32 [ %164, %cond.true102 ], [ %166, %cond.false103 ], !dbg !4640
  store i32 %cond106, i32* %unit_cnt, align 4, !dbg !4641
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab107, metadata !4642, metadata !2064), !dbg !4643
  %167 = load i32, i32* %len96, align 4, !dbg !4644
  %idxprom108 = sext i32 %167 to i64, !dbg !4645
  %168 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !4645
  %sf_vlc109 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %168, i32 0, i32 10, !dbg !4646
  %arrayidx110 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc109, i64 0, i64 1, !dbg !4645
  %arrayidx111 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx110, i64 0, i64 %idxprom108, !dbg !4645
  store %struct.VLC* %arrayidx111, %struct.VLC** %tab107, align 8, !dbg !4643
  call void @llvm.dbg.declare(metadata i32* %i112, metadata !4647, metadata !2064), !dbg !4648
  store i32 0, i32* %i112, align 4, !dbg !4648
  br label %for.cond113, !dbg !4649

for.cond113:                                      ; preds = %for.inc125, %cond.end105
  %169 = load i32, i32* %i112, align 4, !dbg !4650
  %170 = load i32, i32* %unit_cnt, align 4, !dbg !4652
  %cmp114 = icmp slt i32 %169, %170, !dbg !4653
  br i1 %cmp114, label %for.body116, label %for.end127, !dbg !4654

for.body116:                                      ; preds = %for.cond113
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !4655, metadata !2064), !dbg !4656
  %171 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4657
  %172 = load %struct.VLC*, %struct.VLC** %tab107, align 8, !dbg !4658
  %table117 = getelementptr inbounds %struct.VLC, %struct.VLC* %172, i32 0, i32 1, !dbg !4659
  %173 = load [2 x i16]*, [2 x i16]** %table117, align 8, !dbg !4659
  store %struct.GetBitContext* %171, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4660
  store [2 x i16]* %173, [2 x i16]** %table.addr.i265, align 8, !dbg !4660
  store i32 9, i32* %bits.addr.i266, align 4, !dbg !4660
  store i32 2, i32* %max_depth.addr.i267, align 4, !dbg !4660
  %174 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4661
  %index.i275 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %174, i32 0, i32 2, !dbg !4662
  %175 = load i32, i32* %index.i275, align 8, !dbg !4662
  store i32 %175, i32* %re_index.i269, align 4, !dbg !4170
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4663
  %size_in_bits_plus8.i276 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %176, i32 0, i32 4, !dbg !4664
  %177 = load i32, i32* %size_in_bits_plus8.i276, align 8, !dbg !4664
  store i32 %177, i32* %re_size_plus8.i271, align 4, !dbg !4172
  %178 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4665
  %buffer.i277 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %178, i32 0, i32 0, !dbg !4666
  %179 = load i8*, i8** %buffer.i277, align 8, !dbg !4666
  %180 = load i32, i32* %re_index.i269, align 4, !dbg !4667
  %shr.i278 = lshr i32 %180, 3, !dbg !4668
  %idx.ext.i279 = zext i32 %shr.i278 to i64, !dbg !4669
  %add.ptr.i280 = getelementptr inbounds i8, i8* %179, i64 %idx.ext.i279, !dbg !4669
  %181 = bitcast i8* %add.ptr.i280 to %union.unaligned_32*, !dbg !4670
  %l.i281 = bitcast %union.unaligned_32* %181 to i32*, !dbg !4670
  %182 = load i32, i32* %l.i281, align 1, !dbg !4670
  store i32 %182, i32* %x.addr.i.i263, align 4, !dbg !4671
  %183 = load i32, i32* %x.addr.i.i263, align 4, !dbg !4672
  %shl.i.i282 = shl i32 %183, 8, !dbg !4673
  %and.i.i283 = and i32 %shl.i.i282, 65280, !dbg !4674
  %184 = load i32, i32* %x.addr.i.i263, align 4, !dbg !4675
  %shr.i.i284 = lshr i32 %184, 8, !dbg !4676
  %and1.i.i285 = and i32 %shr.i.i284, 255, !dbg !4677
  %or.i.i286 = or i32 %and.i.i283, %and1.i.i285, !dbg !4678
  %shl2.i.i287 = shl i32 %or.i.i286, 16, !dbg !4679
  %185 = load i32, i32* %x.addr.i.i263, align 4, !dbg !4680
  %shr3.i.i288 = lshr i32 %185, 16, !dbg !4681
  %shl4.i.i289 = shl i32 %shr3.i.i288, 8, !dbg !4682
  %and5.i.i290 = and i32 %shl4.i.i289, 65280, !dbg !4683
  %186 = load i32, i32* %x.addr.i.i263, align 4, !dbg !4684
  %shr6.i.i291 = lshr i32 %186, 16, !dbg !4685
  %shr7.i.i292 = lshr i32 %shr6.i.i291, 8, !dbg !4686
  %and8.i.i293 = and i32 %shr7.i.i292, 255, !dbg !4687
  %or9.i.i294 = or i32 %and5.i.i290, %and8.i.i293, !dbg !4688
  %or10.i.i295 = or i32 %shl2.i.i287, %or9.i.i294, !dbg !4689
  %187 = load i32, i32* %re_index.i269, align 4, !dbg !4690
  %and.i296 = and i32 %187, 7, !dbg !4691
  %shl.i297 = shl i32 %or10.i.i295, %and.i296, !dbg !4692
  store i32 %shl.i297, i32* %re_cache.i270, align 4, !dbg !4693
  %188 = load i32, i32* %re_cache.i270, align 4, !dbg !4694
  %189 = load i32, i32* %bits.addr.i266, align 4, !dbg !4695
  %conv.i298 = trunc i32 %189 to i8, !dbg !4695
  %call2.i299 = call i32 @NEG_USR32(i32 %188, i8 signext %conv.i298) #8, !dbg !4696
  store i32 %call2.i299, i32* %index1.i274, align 4, !dbg !4697
  %190 = load i32, i32* %index1.i274, align 4, !dbg !4698
  %idxprom.i300 = zext i32 %190 to i64, !dbg !4699
  %191 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4699
  %arrayidx.i301 = getelementptr inbounds [2 x i16], [2 x i16]* %191, i64 %idxprom.i300, !dbg !4699
  %arrayidx3.i302 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i301, i64 0, i64 0, !dbg !4699
  %192 = load i16, i16* %arrayidx3.i302, align 2, !dbg !4699
  %conv4.i303 = sext i16 %192 to i32, !dbg !4699
  store i32 %conv4.i303, i32* %code.i268, align 4, !dbg !4700
  %193 = load i32, i32* %index1.i274, align 4, !dbg !4701
  %idxprom5.i304 = zext i32 %193 to i64, !dbg !4702
  %194 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4702
  %arrayidx6.i305 = getelementptr inbounds [2 x i16], [2 x i16]* %194, i64 %idxprom5.i304, !dbg !4702
  %arrayidx7.i306 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i305, i64 0, i64 1, !dbg !4702
  %195 = load i16, i16* %arrayidx7.i306, align 2, !dbg !4702
  %conv8.i307 = sext i16 %195 to i32, !dbg !4702
  store i32 %conv8.i307, i32* %n.i272, align 4, !dbg !4703
  %196 = load i32, i32* %max_depth.addr.i267, align 4, !dbg !4704
  %cmp.i308 = icmp sgt i32 %196, 1, !dbg !4705
  br i1 %cmp.i308, label %land.lhs.true.i310, label %if.end68.i397, !dbg !4706

land.lhs.true.i310:                               ; preds = %for.body116
  %197 = load i32, i32* %n.i272, align 4, !dbg !4707
  %cmp10.i309 = icmp slt i32 %197, 0, !dbg !4708
  br i1 %cmp10.i309, label %if.then.i313, label %if.end68.i397, !dbg !4709

if.then.i313:                                     ; preds = %land.lhs.true.i310
  %198 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4710
  %199 = load i32, i32* %re_index.i269, align 4, !dbg !4711
  %200 = load i32, i32* %bits.addr.i266, align 4, !dbg !4712
  %add.i311 = add i32 %199, %200, !dbg !4713
  %cmp12.i312 = icmp ugt i32 %198, %add.i311, !dbg !4714
  br i1 %cmp12.i312, label %cond.true.i315, label %cond.false.i316, !dbg !4715

cond.true.i315:                                   ; preds = %if.then.i313
  %201 = load i32, i32* %re_index.i269, align 4, !dbg !4716
  %202 = load i32, i32* %bits.addr.i266, align 4, !dbg !4717
  %add14.i314 = add i32 %201, %202, !dbg !4718
  br label %cond.end.i352, !dbg !4719

cond.false.i316:                                  ; preds = %if.then.i313
  %203 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4720
  br label %cond.end.i352, !dbg !4721

cond.end.i352:                                    ; preds = %cond.false.i316, %cond.true.i315
  %cond.i317 = phi i32 [ %add14.i314, %cond.true.i315 ], [ %203, %cond.false.i316 ], !dbg !4722
  store i32 %cond.i317, i32* %re_index.i269, align 4, !dbg !4723
  %204 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4724
  %buffer15.i318 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %204, i32 0, i32 0, !dbg !4725
  %205 = load i8*, i8** %buffer15.i318, align 8, !dbg !4725
  %206 = load i32, i32* %re_index.i269, align 4, !dbg !4726
  %shr16.i319 = lshr i32 %206, 3, !dbg !4727
  %idx.ext17.i320 = zext i32 %shr16.i319 to i64, !dbg !4728
  %add.ptr18.i321 = getelementptr inbounds i8, i8* %205, i64 %idx.ext17.i320, !dbg !4728
  %207 = bitcast i8* %add.ptr18.i321 to %union.unaligned_32*, !dbg !4729
  %l19.i322 = bitcast %union.unaligned_32* %207 to i32*, !dbg !4729
  %208 = load i32, i32* %l19.i322, align 1, !dbg !4729
  store i32 %208, i32* %x.addr.i81.i262, align 4, !dbg !4730
  %209 = load i32, i32* %x.addr.i81.i262, align 4, !dbg !4731
  %shl.i82.i323 = shl i32 %209, 8, !dbg !4732
  %and.i83.i324 = and i32 %shl.i82.i323, 65280, !dbg !4733
  %210 = load i32, i32* %x.addr.i81.i262, align 4, !dbg !4734
  %shr.i84.i325 = lshr i32 %210, 8, !dbg !4735
  %and1.i85.i326 = and i32 %shr.i84.i325, 255, !dbg !4736
  %or.i86.i327 = or i32 %and.i83.i324, %and1.i85.i326, !dbg !4737
  %shl2.i87.i328 = shl i32 %or.i86.i327, 16, !dbg !4738
  %211 = load i32, i32* %x.addr.i81.i262, align 4, !dbg !4739
  %shr3.i88.i329 = lshr i32 %211, 16, !dbg !4740
  %shl4.i89.i330 = shl i32 %shr3.i88.i329, 8, !dbg !4741
  %and5.i90.i331 = and i32 %shl4.i89.i330, 65280, !dbg !4742
  %212 = load i32, i32* %x.addr.i81.i262, align 4, !dbg !4743
  %shr6.i91.i332 = lshr i32 %212, 16, !dbg !4744
  %shr7.i92.i333 = lshr i32 %shr6.i91.i332, 8, !dbg !4745
  %and8.i93.i334 = and i32 %shr7.i92.i333, 255, !dbg !4746
  %or9.i94.i335 = or i32 %and5.i90.i331, %and8.i93.i334, !dbg !4747
  %or10.i95.i336 = or i32 %shl2.i87.i328, %or9.i94.i335, !dbg !4748
  %213 = load i32, i32* %re_index.i269, align 4, !dbg !4749
  %and21.i337 = and i32 %213, 7, !dbg !4750
  %shl22.i338 = shl i32 %or10.i95.i336, %and21.i337, !dbg !4751
  store i32 %shl22.i338, i32* %re_cache.i270, align 4, !dbg !4752
  %214 = load i32, i32* %n.i272, align 4, !dbg !4753
  %sub.i339 = sub nsw i32 0, %214, !dbg !4754
  store i32 %sub.i339, i32* %nb_bits.i273, align 4, !dbg !4755
  %215 = load i32, i32* %re_cache.i270, align 4, !dbg !4756
  %216 = load i32, i32* %nb_bits.i273, align 4, !dbg !4757
  %conv23.i340 = trunc i32 %216 to i8, !dbg !4757
  %call24.i341 = call i32 @NEG_USR32(i32 %215, i8 signext %conv23.i340) #8, !dbg !4758
  %217 = load i32, i32* %code.i268, align 4, !dbg !4759
  %add25.i342 = add i32 %call24.i341, %217, !dbg !4760
  store i32 %add25.i342, i32* %index1.i274, align 4, !dbg !4761
  %218 = load i32, i32* %index1.i274, align 4, !dbg !4762
  %idxprom26.i343 = zext i32 %218 to i64, !dbg !4763
  %219 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4763
  %arrayidx27.i344 = getelementptr inbounds [2 x i16], [2 x i16]* %219, i64 %idxprom26.i343, !dbg !4763
  %arrayidx28.i345 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i344, i64 0, i64 0, !dbg !4763
  %220 = load i16, i16* %arrayidx28.i345, align 2, !dbg !4763
  %conv29.i346 = sext i16 %220 to i32, !dbg !4763
  store i32 %conv29.i346, i32* %code.i268, align 4, !dbg !4764
  %221 = load i32, i32* %index1.i274, align 4, !dbg !4765
  %idxprom30.i347 = zext i32 %221 to i64, !dbg !4766
  %222 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4766
  %arrayidx31.i348 = getelementptr inbounds [2 x i16], [2 x i16]* %222, i64 %idxprom30.i347, !dbg !4766
  %arrayidx32.i349 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i348, i64 0, i64 1, !dbg !4766
  %223 = load i16, i16* %arrayidx32.i349, align 2, !dbg !4766
  %conv33.i350 = sext i16 %223 to i32, !dbg !4766
  store i32 %conv33.i350, i32* %n.i272, align 4, !dbg !4767
  %224 = load i32, i32* %max_depth.addr.i267, align 4, !dbg !4768
  %cmp34.i351 = icmp sgt i32 %224, 2, !dbg !4769
  br i1 %cmp34.i351, label %land.lhs.true36.i354, label %if.end.i396, !dbg !4770

land.lhs.true36.i354:                             ; preds = %cond.end.i352
  %225 = load i32, i32* %n.i272, align 4, !dbg !4771
  %cmp37.i353 = icmp slt i32 %225, 0, !dbg !4772
  br i1 %cmp37.i353, label %if.then39.i357, label %if.end.i396, !dbg !4773

if.then39.i357:                                   ; preds = %land.lhs.true36.i354
  %226 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4774
  %227 = load i32, i32* %re_index.i269, align 4, !dbg !4775
  %228 = load i32, i32* %nb_bits.i273, align 4, !dbg !4776
  %add40.i355 = add i32 %227, %228, !dbg !4777
  %cmp41.i356 = icmp ugt i32 %226, %add40.i355, !dbg !4778
  br i1 %cmp41.i356, label %cond.true43.i359, label %cond.false45.i360, !dbg !4779

cond.true43.i359:                                 ; preds = %if.then39.i357
  %229 = load i32, i32* %re_index.i269, align 4, !dbg !4780
  %230 = load i32, i32* %nb_bits.i273, align 4, !dbg !4781
  %add44.i358 = add i32 %229, %230, !dbg !4782
  br label %cond.end46.i395, !dbg !4783

cond.false45.i360:                                ; preds = %if.then39.i357
  %231 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4784
  br label %cond.end46.i395, !dbg !4785

cond.end46.i395:                                  ; preds = %cond.false45.i360, %cond.true43.i359
  %cond47.i361 = phi i32 [ %add44.i358, %cond.true43.i359 ], [ %231, %cond.false45.i360 ], !dbg !4786
  store i32 %cond47.i361, i32* %re_index.i269, align 4, !dbg !4787
  %232 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4788
  %buffer48.i362 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %232, i32 0, i32 0, !dbg !4789
  %233 = load i8*, i8** %buffer48.i362, align 8, !dbg !4789
  %234 = load i32, i32* %re_index.i269, align 4, !dbg !4790
  %shr49.i363 = lshr i32 %234, 3, !dbg !4791
  %idx.ext50.i364 = zext i32 %shr49.i363 to i64, !dbg !4792
  %add.ptr51.i365 = getelementptr inbounds i8, i8* %233, i64 %idx.ext50.i364, !dbg !4792
  %235 = bitcast i8* %add.ptr51.i365 to %union.unaligned_32*, !dbg !4793
  %l52.i366 = bitcast %union.unaligned_32* %235 to i32*, !dbg !4793
  %236 = load i32, i32* %l52.i366, align 1, !dbg !4793
  store i32 %236, i32* %x.addr.i96.i261, align 4, !dbg !4794
  %237 = load i32, i32* %x.addr.i96.i261, align 4, !dbg !4795
  %shl.i97.i367 = shl i32 %237, 8, !dbg !4796
  %and.i98.i368 = and i32 %shl.i97.i367, 65280, !dbg !4797
  %238 = load i32, i32* %x.addr.i96.i261, align 4, !dbg !4798
  %shr.i99.i369 = lshr i32 %238, 8, !dbg !4799
  %and1.i100.i370 = and i32 %shr.i99.i369, 255, !dbg !4800
  %or.i101.i371 = or i32 %and.i98.i368, %and1.i100.i370, !dbg !4801
  %shl2.i102.i372 = shl i32 %or.i101.i371, 16, !dbg !4802
  %239 = load i32, i32* %x.addr.i96.i261, align 4, !dbg !4803
  %shr3.i103.i373 = lshr i32 %239, 16, !dbg !4804
  %shl4.i104.i374 = shl i32 %shr3.i103.i373, 8, !dbg !4805
  %and5.i105.i375 = and i32 %shl4.i104.i374, 65280, !dbg !4806
  %240 = load i32, i32* %x.addr.i96.i261, align 4, !dbg !4807
  %shr6.i106.i376 = lshr i32 %240, 16, !dbg !4808
  %shr7.i107.i377 = lshr i32 %shr6.i106.i376, 8, !dbg !4809
  %and8.i108.i378 = and i32 %shr7.i107.i377, 255, !dbg !4810
  %or9.i109.i379 = or i32 %and5.i105.i375, %and8.i108.i378, !dbg !4811
  %or10.i110.i380 = or i32 %shl2.i102.i372, %or9.i109.i379, !dbg !4812
  %241 = load i32, i32* %re_index.i269, align 4, !dbg !4813
  %and54.i381 = and i32 %241, 7, !dbg !4814
  %shl55.i382 = shl i32 %or10.i110.i380, %and54.i381, !dbg !4815
  store i32 %shl55.i382, i32* %re_cache.i270, align 4, !dbg !4816
  %242 = load i32, i32* %n.i272, align 4, !dbg !4817
  %sub56.i383 = sub nsw i32 0, %242, !dbg !4818
  store i32 %sub56.i383, i32* %nb_bits.i273, align 4, !dbg !4819
  %243 = load i32, i32* %re_cache.i270, align 4, !dbg !4820
  %244 = load i32, i32* %nb_bits.i273, align 4, !dbg !4821
  %conv57.i384 = trunc i32 %244 to i8, !dbg !4821
  %call58.i385 = call i32 @NEG_USR32(i32 %243, i8 signext %conv57.i384) #8, !dbg !4822
  %245 = load i32, i32* %code.i268, align 4, !dbg !4823
  %add59.i386 = add i32 %call58.i385, %245, !dbg !4824
  store i32 %add59.i386, i32* %index1.i274, align 4, !dbg !4825
  %246 = load i32, i32* %index1.i274, align 4, !dbg !4826
  %idxprom60.i387 = zext i32 %246 to i64, !dbg !4827
  %247 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4827
  %arrayidx61.i388 = getelementptr inbounds [2 x i16], [2 x i16]* %247, i64 %idxprom60.i387, !dbg !4827
  %arrayidx62.i389 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i388, i64 0, i64 0, !dbg !4827
  %248 = load i16, i16* %arrayidx62.i389, align 2, !dbg !4827
  %conv63.i390 = sext i16 %248 to i32, !dbg !4827
  store i32 %conv63.i390, i32* %code.i268, align 4, !dbg !4828
  %249 = load i32, i32* %index1.i274, align 4, !dbg !4829
  %idxprom64.i391 = zext i32 %249 to i64, !dbg !4830
  %250 = load [2 x i16]*, [2 x i16]** %table.addr.i265, align 8, !dbg !4830
  %arrayidx65.i392 = getelementptr inbounds [2 x i16], [2 x i16]* %250, i64 %idxprom64.i391, !dbg !4830
  %arrayidx66.i393 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i392, i64 0, i64 1, !dbg !4830
  %251 = load i16, i16* %arrayidx66.i393, align 2, !dbg !4830
  %conv67.i394 = sext i16 %251 to i32, !dbg !4830
  store i32 %conv67.i394, i32* %n.i272, align 4, !dbg !4831
  br label %if.end.i396, !dbg !4832

if.end.i396:                                      ; preds = %cond.end46.i395, %land.lhs.true36.i354, %cond.end.i352
  br label %if.end68.i397, !dbg !4833

if.end68.i397:                                    ; preds = %if.end.i396, %land.lhs.true.i310, %for.body116
  %252 = load i32, i32* %n.i272, align 4, !dbg !4834
  %253 = load i32, i32* %re_cache.i270, align 4, !dbg !4835
  %shl70.i398 = shl i32 %253, %252, !dbg !4835
  store i32 %shl70.i398, i32* %re_cache.i270, align 4, !dbg !4835
  %254 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4836
  %255 = load i32, i32* %re_index.i269, align 4, !dbg !4837
  %256 = load i32, i32* %n.i272, align 4, !dbg !4838
  %add71.i399 = add i32 %255, %256, !dbg !4839
  %cmp72.i400 = icmp ugt i32 %254, %add71.i399, !dbg !4840
  br i1 %cmp72.i400, label %cond.true74.i402, label %cond.false76.i403, !dbg !4841

cond.true74.i402:                                 ; preds = %if.end68.i397
  %257 = load i32, i32* %re_index.i269, align 4, !dbg !4842
  %258 = load i32, i32* %n.i272, align 4, !dbg !4843
  %add75.i401 = add i32 %257, %258, !dbg !4844
  br label %get_vlc2.exit406, !dbg !4845

cond.false76.i403:                                ; preds = %if.end68.i397
  %259 = load i32, i32* %re_size_plus8.i271, align 4, !dbg !4846
  br label %get_vlc2.exit406, !dbg !4847

get_vlc2.exit406:                                 ; preds = %cond.true74.i402, %cond.false76.i403
  %cond78.i404 = phi i32 [ %add75.i401, %cond.true74.i402 ], [ %259, %cond.false76.i403 ], !dbg !4848
  store i32 %cond78.i404, i32* %re_index.i269, align 4, !dbg !4849
  %260 = load i32, i32* %re_index.i269, align 4, !dbg !4850
  %261 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i264, align 8, !dbg !4851
  %index80.i405 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %261, i32 0, i32 2, !dbg !4852
  store i32 %260, i32* %index80.i405, align 8, !dbg !4853
  %262 = load i32, i32* %code.i268, align 4, !dbg !4854
  store i32 %262, i32* %dist, align 4, !dbg !4656
  %263 = load i32, i32* %i112, align 4, !dbg !4855
  %idxprom119 = sext i32 %263 to i64, !dbg !4856
  %264 = load i32*, i32** %baseline, align 8, !dbg !4856
  %arrayidx120 = getelementptr inbounds i32, i32* %264, i64 %idxprom119, !dbg !4856
  %265 = load i32, i32* %arrayidx120, align 4, !dbg !4856
  %266 = load i32, i32* %dist, align 4, !dbg !4857
  %add121 = add nsw i32 %265, %266, !dbg !4858
  %267 = load i32, i32* %i112, align 4, !dbg !4859
  %idxprom122 = sext i32 %267 to i64, !dbg !4860
  %268 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4860
  %scalefactors123 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %268, i32 0, i32 3, !dbg !4861
  %arrayidx124 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors123, i64 0, i64 %idxprom122, !dbg !4860
  store i32 %add121, i32* %arrayidx124, align 4, !dbg !4862
  br label %for.inc125, !dbg !4863

for.inc125:                                       ; preds = %get_vlc2.exit406
  %269 = load i32, i32* %i112, align 4, !dbg !4864
  %inc126 = add nsw i32 %269, 1, !dbg !4864
  store i32 %inc126, i32* %i112, align 4, !dbg !4864
  br label %for.cond113, !dbg !4866, !llvm.loop !4867

for.end127:                                       ; preds = %for.cond113
  call void @llvm.dbg.declare(metadata i32* %i128, metadata !4869, metadata !2064), !dbg !4871
  %270 = load i32, i32* %unit_cnt, align 4, !dbg !4872
  store i32 %270, i32* %i128, align 4, !dbg !4871
  br label %for.cond129, !dbg !4873

for.cond129:                                      ; preds = %for.inc138, %for.end127
  %271 = load i32, i32* %i128, align 4, !dbg !4874
  %272 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4877
  %band_ext_q_unit130 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %272, i32 0, i32 7, !dbg !4878
  %273 = load i32, i32* %band_ext_q_unit130, align 8, !dbg !4878
  %cmp131 = icmp slt i32 %271, %273, !dbg !4879
  br i1 %cmp131, label %for.body133, label %for.end140, !dbg !4880

for.body133:                                      ; preds = %for.cond129
  %274 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4881
  %call134 = call i32 @get_bits(%struct.GetBitContext* %274, i32 5), !dbg !4882
  %275 = load i32, i32* %i128, align 4, !dbg !4883
  %idxprom135 = sext i32 %275 to i64, !dbg !4884
  %276 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4884
  %scalefactors136 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %276, i32 0, i32 3, !dbg !4885
  %arrayidx137 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors136, i64 0, i64 %idxprom135, !dbg !4884
  store i32 %call134, i32* %arrayidx137, align 4, !dbg !4886
  br label %for.inc138, !dbg !4884

for.inc138:                                       ; preds = %for.body133
  %277 = load i32, i32* %i128, align 4, !dbg !4887
  %inc139 = add nsw i32 %277, 1, !dbg !4887
  store i32 %inc139, i32* %i128, align 4, !dbg !4887
  br label %for.cond129, !dbg !4889, !llvm.loop !4890

for.end140:                                       ; preds = %for.cond129
  br label %sw.epilog, !dbg !4892

sw.bb141:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32** %baseline142, metadata !4893, metadata !2064), !dbg !4894
  %278 = load i32, i32* %channel_idx.addr, align 4, !dbg !4895
  %tobool143 = icmp ne i32 %278, 0, !dbg !4895
  br i1 %tobool143, label %cond.true144, label %cond.false149, !dbg !4895

cond.true144:                                     ; preds = %sw.bb141
  %279 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4896
  %channel145 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %279, i32 0, i32 0, !dbg !4898
  %arrayidx146 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel145, i64 0, i64 0, !dbg !4896
  %scalefactors147 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx146, i32 0, i32 3, !dbg !4899
  %arraydecay148 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors147, i32 0, i32 0, !dbg !4896
  br label %cond.end152, !dbg !4900

cond.false149:                                    ; preds = %sw.bb141
  %280 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4901
  %scalefactors_prev150 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %280, i32 0, i32 4, !dbg !4902
  %arraydecay151 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors_prev150, i32 0, i32 0, !dbg !4901
  br label %cond.end152, !dbg !4903

cond.end152:                                      ; preds = %cond.false149, %cond.true144
  %cond153 = phi i32* [ %arraydecay148, %cond.true144 ], [ %arraydecay151, %cond.false149 ], !dbg !4905
  store i32* %cond153, i32** %baseline142, align 8, !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %baseline_len154, metadata !4908, metadata !2064), !dbg !4909
  %281 = load i32, i32* %channel_idx.addr, align 4, !dbg !4910
  %tobool155 = icmp ne i32 %281, 0, !dbg !4910
  br i1 %tobool155, label %cond.true156, label %cond.false158, !dbg !4910

cond.true156:                                     ; preds = %cond.end152
  %282 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4911
  %band_ext_q_unit157 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %282, i32 0, i32 7, !dbg !4912
  %283 = load i32, i32* %band_ext_q_unit157, align 8, !dbg !4912
  br label %cond.end160, !dbg !4913

cond.false158:                                    ; preds = %cond.end152
  %284 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4914
  %q_unit_cnt_prev159 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %284, i32 0, i32 3, !dbg !4915
  %285 = load i32, i32* %q_unit_cnt_prev159, align 8, !dbg !4915
  br label %cond.end160, !dbg !4916

cond.end160:                                      ; preds = %cond.false158, %cond.true156
  %cond161 = phi i32 [ %283, %cond.true156 ], [ %285, %cond.false158 ], !dbg !4917
  store i32 %cond161, i32* %baseline_len154, align 4, !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %base162, metadata !4919, metadata !2064), !dbg !4920
  %286 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4921
  %call163 = call i32 @get_bits(%struct.GetBitContext* %286, i32 5), !dbg !4922
  %sub164 = sub i32 %call163, 16, !dbg !4923
  store i32 %sub164, i32* %base162, align 4, !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %len165, metadata !4924, metadata !2064), !dbg !4925
  %287 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4926
  %call166 = call i32 @get_bits(%struct.GetBitContext* %287, i32 2), !dbg !4927
  %add167 = add i32 %call166, 1, !dbg !4928
  store i32 %add167, i32* %len165, align 4, !dbg !4925
  call void @llvm.dbg.declare(metadata i32* %unit_cnt168, metadata !4929, metadata !2064), !dbg !4930
  %288 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4931
  %band_ext_q_unit169 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %288, i32 0, i32 7, !dbg !4932
  %289 = load i32, i32* %band_ext_q_unit169, align 8, !dbg !4932
  %290 = load i32, i32* %baseline_len154, align 4, !dbg !4933
  %cmp170 = icmp sgt i32 %289, %290, !dbg !4934
  br i1 %cmp170, label %cond.true172, label %cond.false173, !dbg !4935

cond.true172:                                     ; preds = %cond.end160
  %291 = load i32, i32* %baseline_len154, align 4, !dbg !4936
  br label %cond.end175, !dbg !4937

cond.false173:                                    ; preds = %cond.end160
  %292 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !4938
  %band_ext_q_unit174 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %292, i32 0, i32 7, !dbg !4939
  %293 = load i32, i32* %band_ext_q_unit174, align 8, !dbg !4939
  br label %cond.end175, !dbg !4940

cond.end175:                                      ; preds = %cond.false173, %cond.true172
  %cond176 = phi i32 [ %291, %cond.true172 ], [ %293, %cond.false173 ], !dbg !4941
  store i32 %cond176, i32* %unit_cnt168, align 4, !dbg !4942
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab177, metadata !4943, metadata !2064), !dbg !4944
  %294 = load i32, i32* %len165, align 4, !dbg !4945
  %idxprom178 = sext i32 %294 to i64, !dbg !4946
  %295 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !4946
  %sf_vlc179 = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %295, i32 0, i32 10, !dbg !4947
  %arrayidx180 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %sf_vlc179, i64 0, i64 0, !dbg !4946
  %arrayidx181 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx180, i64 0, i64 %idxprom178, !dbg !4946
  store %struct.VLC* %arrayidx181, %struct.VLC** %tab177, align 8, !dbg !4944
  %296 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4948
  %297 = load i32, i32* %len165, align 4, !dbg !4949
  %call182 = call i32 @get_bits(%struct.GetBitContext* %296, i32 %297), !dbg !4950
  %298 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4951
  %scalefactors183 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %298, i32 0, i32 3, !dbg !4952
  %arrayidx184 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors183, i64 0, i64 0, !dbg !4951
  store i32 %call182, i32* %arrayidx184, align 8, !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %i185, metadata !4954, metadata !2064), !dbg !4955
  store i32 1, i32* %i185, align 4, !dbg !4955
  br label %for.cond186, !dbg !4956

for.cond186:                                      ; preds = %for.inc204, %cond.end175
  %299 = load i32, i32* %i185, align 4, !dbg !4957
  %300 = load i32, i32* %unit_cnt168, align 4, !dbg !4959
  %cmp187 = icmp slt i32 %299, %300, !dbg !4960
  br i1 %cmp187, label %for.body189, label %for.end206, !dbg !4961

for.body189:                                      ; preds = %for.cond186
  call void @llvm.dbg.declare(metadata i32* %val190, metadata !4962, metadata !2064), !dbg !4963
  %301 = load i32, i32* %i185, align 4, !dbg !4964
  %sub191 = sub nsw i32 %301, 1, !dbg !4965
  %idxprom192 = sext i32 %sub191 to i64, !dbg !4966
  %302 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !4966
  %scalefactors193 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %302, i32 0, i32 3, !dbg !4967
  %arrayidx194 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors193, i64 0, i64 %idxprom192, !dbg !4966
  %303 = load i32, i32* %arrayidx194, align 4, !dbg !4966
  %304 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4968
  %305 = load %struct.VLC*, %struct.VLC** %tab177, align 8, !dbg !4969
  %table195 = getelementptr inbounds %struct.VLC, %struct.VLC* %305, i32 0, i32 1, !dbg !4970
  %306 = load [2 x i16]*, [2 x i16]** %table195, align 8, !dbg !4970
  store %struct.GetBitContext* %304, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !4971
  store [2 x i16]* %306, [2 x i16]** %table.addr.i411, align 8, !dbg !4971
  store i32 9, i32* %bits.addr.i412, align 4, !dbg !4971
  store i32 2, i32* %max_depth.addr.i413, align 4, !dbg !4971
  %307 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !4972
  %index.i421 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %307, i32 0, i32 2, !dbg !4973
  %308 = load i32, i32* %index.i421, align 8, !dbg !4973
  store i32 %308, i32* %re_index.i415, align 4, !dbg !4143
  %309 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !4974
  %size_in_bits_plus8.i422 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %309, i32 0, i32 4, !dbg !4975
  %310 = load i32, i32* %size_in_bits_plus8.i422, align 8, !dbg !4975
  store i32 %310, i32* %re_size_plus8.i417, align 4, !dbg !4147
  %311 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !4976
  %buffer.i423 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %311, i32 0, i32 0, !dbg !4977
  %312 = load i8*, i8** %buffer.i423, align 8, !dbg !4977
  %313 = load i32, i32* %re_index.i415, align 4, !dbg !4978
  %shr.i424 = lshr i32 %313, 3, !dbg !4979
  %idx.ext.i425 = zext i32 %shr.i424 to i64, !dbg !4980
  %add.ptr.i426 = getelementptr inbounds i8, i8* %312, i64 %idx.ext.i425, !dbg !4980
  %314 = bitcast i8* %add.ptr.i426 to %union.unaligned_32*, !dbg !4981
  %l.i427 = bitcast %union.unaligned_32* %314 to i32*, !dbg !4981
  %315 = load i32, i32* %l.i427, align 1, !dbg !4981
  store i32 %315, i32* %x.addr.i.i409, align 4, !dbg !4982
  %316 = load i32, i32* %x.addr.i.i409, align 4, !dbg !4983
  %shl.i.i428 = shl i32 %316, 8, !dbg !4984
  %and.i.i429 = and i32 %shl.i.i428, 65280, !dbg !4985
  %317 = load i32, i32* %x.addr.i.i409, align 4, !dbg !4986
  %shr.i.i430 = lshr i32 %317, 8, !dbg !4987
  %and1.i.i431 = and i32 %shr.i.i430, 255, !dbg !4988
  %or.i.i432 = or i32 %and.i.i429, %and1.i.i431, !dbg !4989
  %shl2.i.i433 = shl i32 %or.i.i432, 16, !dbg !4990
  %318 = load i32, i32* %x.addr.i.i409, align 4, !dbg !4991
  %shr3.i.i434 = lshr i32 %318, 16, !dbg !4992
  %shl4.i.i435 = shl i32 %shr3.i.i434, 8, !dbg !4993
  %and5.i.i436 = and i32 %shl4.i.i435, 65280, !dbg !4994
  %319 = load i32, i32* %x.addr.i.i409, align 4, !dbg !4995
  %shr6.i.i437 = lshr i32 %319, 16, !dbg !4996
  %shr7.i.i438 = lshr i32 %shr6.i.i437, 8, !dbg !4997
  %and8.i.i439 = and i32 %shr7.i.i438, 255, !dbg !4998
  %or9.i.i440 = or i32 %and5.i.i436, %and8.i.i439, !dbg !4999
  %or10.i.i441 = or i32 %shl2.i.i433, %or9.i.i440, !dbg !5000
  %320 = load i32, i32* %re_index.i415, align 4, !dbg !5001
  %and.i442 = and i32 %320, 7, !dbg !5002
  %shl.i443 = shl i32 %or10.i.i441, %and.i442, !dbg !5003
  store i32 %shl.i443, i32* %re_cache.i416, align 4, !dbg !5004
  %321 = load i32, i32* %re_cache.i416, align 4, !dbg !5005
  %322 = load i32, i32* %bits.addr.i412, align 4, !dbg !5006
  %conv.i444 = trunc i32 %322 to i8, !dbg !5006
  %call2.i445 = call i32 @NEG_USR32(i32 %321, i8 signext %conv.i444) #8, !dbg !5007
  store i32 %call2.i445, i32* %index1.i420, align 4, !dbg !5008
  %323 = load i32, i32* %index1.i420, align 4, !dbg !5009
  %idxprom.i446 = zext i32 %323 to i64, !dbg !5010
  %324 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5010
  %arrayidx.i447 = getelementptr inbounds [2 x i16], [2 x i16]* %324, i64 %idxprom.i446, !dbg !5010
  %arrayidx3.i448 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i447, i64 0, i64 0, !dbg !5010
  %325 = load i16, i16* %arrayidx3.i448, align 2, !dbg !5010
  %conv4.i449 = sext i16 %325 to i32, !dbg !5010
  store i32 %conv4.i449, i32* %code.i414, align 4, !dbg !5011
  %326 = load i32, i32* %index1.i420, align 4, !dbg !5012
  %idxprom5.i450 = zext i32 %326 to i64, !dbg !5013
  %327 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5013
  %arrayidx6.i451 = getelementptr inbounds [2 x i16], [2 x i16]* %327, i64 %idxprom5.i450, !dbg !5013
  %arrayidx7.i452 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i451, i64 0, i64 1, !dbg !5013
  %328 = load i16, i16* %arrayidx7.i452, align 2, !dbg !5013
  %conv8.i453 = sext i16 %328 to i32, !dbg !5013
  store i32 %conv8.i453, i32* %n.i418, align 4, !dbg !5014
  %329 = load i32, i32* %max_depth.addr.i413, align 4, !dbg !5015
  %cmp.i454 = icmp sgt i32 %329, 1, !dbg !5016
  br i1 %cmp.i454, label %land.lhs.true.i456, label %if.end68.i543, !dbg !5017

land.lhs.true.i456:                               ; preds = %for.body189
  %330 = load i32, i32* %n.i418, align 4, !dbg !5018
  %cmp10.i455 = icmp slt i32 %330, 0, !dbg !5019
  br i1 %cmp10.i455, label %if.then.i459, label %if.end68.i543, !dbg !5020

if.then.i459:                                     ; preds = %land.lhs.true.i456
  %331 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5021
  %332 = load i32, i32* %re_index.i415, align 4, !dbg !5022
  %333 = load i32, i32* %bits.addr.i412, align 4, !dbg !5023
  %add.i457 = add i32 %332, %333, !dbg !5024
  %cmp12.i458 = icmp ugt i32 %331, %add.i457, !dbg !5025
  br i1 %cmp12.i458, label %cond.true.i461, label %cond.false.i462, !dbg !5026

cond.true.i461:                                   ; preds = %if.then.i459
  %334 = load i32, i32* %re_index.i415, align 4, !dbg !5027
  %335 = load i32, i32* %bits.addr.i412, align 4, !dbg !5028
  %add14.i460 = add i32 %334, %335, !dbg !5029
  br label %cond.end.i498, !dbg !5030

cond.false.i462:                                  ; preds = %if.then.i459
  %336 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5031
  br label %cond.end.i498, !dbg !5032

cond.end.i498:                                    ; preds = %cond.false.i462, %cond.true.i461
  %cond.i463 = phi i32 [ %add14.i460, %cond.true.i461 ], [ %336, %cond.false.i462 ], !dbg !5033
  store i32 %cond.i463, i32* %re_index.i415, align 4, !dbg !5034
  %337 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !5035
  %buffer15.i464 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %337, i32 0, i32 0, !dbg !5036
  %338 = load i8*, i8** %buffer15.i464, align 8, !dbg !5036
  %339 = load i32, i32* %re_index.i415, align 4, !dbg !5037
  %shr16.i465 = lshr i32 %339, 3, !dbg !5038
  %idx.ext17.i466 = zext i32 %shr16.i465 to i64, !dbg !5039
  %add.ptr18.i467 = getelementptr inbounds i8, i8* %338, i64 %idx.ext17.i466, !dbg !5039
  %340 = bitcast i8* %add.ptr18.i467 to %union.unaligned_32*, !dbg !5040
  %l19.i468 = bitcast %union.unaligned_32* %340 to i32*, !dbg !5040
  %341 = load i32, i32* %l19.i468, align 1, !dbg !5040
  store i32 %341, i32* %x.addr.i81.i408, align 4, !dbg !5041
  %342 = load i32, i32* %x.addr.i81.i408, align 4, !dbg !5042
  %shl.i82.i469 = shl i32 %342, 8, !dbg !5043
  %and.i83.i470 = and i32 %shl.i82.i469, 65280, !dbg !5044
  %343 = load i32, i32* %x.addr.i81.i408, align 4, !dbg !5045
  %shr.i84.i471 = lshr i32 %343, 8, !dbg !5046
  %and1.i85.i472 = and i32 %shr.i84.i471, 255, !dbg !5047
  %or.i86.i473 = or i32 %and.i83.i470, %and1.i85.i472, !dbg !5048
  %shl2.i87.i474 = shl i32 %or.i86.i473, 16, !dbg !5049
  %344 = load i32, i32* %x.addr.i81.i408, align 4, !dbg !5050
  %shr3.i88.i475 = lshr i32 %344, 16, !dbg !5051
  %shl4.i89.i476 = shl i32 %shr3.i88.i475, 8, !dbg !5052
  %and5.i90.i477 = and i32 %shl4.i89.i476, 65280, !dbg !5053
  %345 = load i32, i32* %x.addr.i81.i408, align 4, !dbg !5054
  %shr6.i91.i478 = lshr i32 %345, 16, !dbg !5055
  %shr7.i92.i479 = lshr i32 %shr6.i91.i478, 8, !dbg !5056
  %and8.i93.i480 = and i32 %shr7.i92.i479, 255, !dbg !5057
  %or9.i94.i481 = or i32 %and5.i90.i477, %and8.i93.i480, !dbg !5058
  %or10.i95.i482 = or i32 %shl2.i87.i474, %or9.i94.i481, !dbg !5059
  %346 = load i32, i32* %re_index.i415, align 4, !dbg !5060
  %and21.i483 = and i32 %346, 7, !dbg !5061
  %shl22.i484 = shl i32 %or10.i95.i482, %and21.i483, !dbg !5062
  store i32 %shl22.i484, i32* %re_cache.i416, align 4, !dbg !5063
  %347 = load i32, i32* %n.i418, align 4, !dbg !5064
  %sub.i485 = sub nsw i32 0, %347, !dbg !5065
  store i32 %sub.i485, i32* %nb_bits.i419, align 4, !dbg !5066
  %348 = load i32, i32* %re_cache.i416, align 4, !dbg !5067
  %349 = load i32, i32* %nb_bits.i419, align 4, !dbg !5068
  %conv23.i486 = trunc i32 %349 to i8, !dbg !5068
  %call24.i487 = call i32 @NEG_USR32(i32 %348, i8 signext %conv23.i486) #8, !dbg !5069
  %350 = load i32, i32* %code.i414, align 4, !dbg !5070
  %add25.i488 = add i32 %call24.i487, %350, !dbg !5071
  store i32 %add25.i488, i32* %index1.i420, align 4, !dbg !5072
  %351 = load i32, i32* %index1.i420, align 4, !dbg !5073
  %idxprom26.i489 = zext i32 %351 to i64, !dbg !5074
  %352 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5074
  %arrayidx27.i490 = getelementptr inbounds [2 x i16], [2 x i16]* %352, i64 %idxprom26.i489, !dbg !5074
  %arrayidx28.i491 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i490, i64 0, i64 0, !dbg !5074
  %353 = load i16, i16* %arrayidx28.i491, align 2, !dbg !5074
  %conv29.i492 = sext i16 %353 to i32, !dbg !5074
  store i32 %conv29.i492, i32* %code.i414, align 4, !dbg !5075
  %354 = load i32, i32* %index1.i420, align 4, !dbg !5076
  %idxprom30.i493 = zext i32 %354 to i64, !dbg !5077
  %355 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5077
  %arrayidx31.i494 = getelementptr inbounds [2 x i16], [2 x i16]* %355, i64 %idxprom30.i493, !dbg !5077
  %arrayidx32.i495 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i494, i64 0, i64 1, !dbg !5077
  %356 = load i16, i16* %arrayidx32.i495, align 2, !dbg !5077
  %conv33.i496 = sext i16 %356 to i32, !dbg !5077
  store i32 %conv33.i496, i32* %n.i418, align 4, !dbg !5078
  %357 = load i32, i32* %max_depth.addr.i413, align 4, !dbg !5079
  %cmp34.i497 = icmp sgt i32 %357, 2, !dbg !5080
  br i1 %cmp34.i497, label %land.lhs.true36.i500, label %if.end.i542, !dbg !5081

land.lhs.true36.i500:                             ; preds = %cond.end.i498
  %358 = load i32, i32* %n.i418, align 4, !dbg !5082
  %cmp37.i499 = icmp slt i32 %358, 0, !dbg !5083
  br i1 %cmp37.i499, label %if.then39.i503, label %if.end.i542, !dbg !5084

if.then39.i503:                                   ; preds = %land.lhs.true36.i500
  %359 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5085
  %360 = load i32, i32* %re_index.i415, align 4, !dbg !5086
  %361 = load i32, i32* %nb_bits.i419, align 4, !dbg !5087
  %add40.i501 = add i32 %360, %361, !dbg !5088
  %cmp41.i502 = icmp ugt i32 %359, %add40.i501, !dbg !5089
  br i1 %cmp41.i502, label %cond.true43.i505, label %cond.false45.i506, !dbg !5090

cond.true43.i505:                                 ; preds = %if.then39.i503
  %362 = load i32, i32* %re_index.i415, align 4, !dbg !5091
  %363 = load i32, i32* %nb_bits.i419, align 4, !dbg !5092
  %add44.i504 = add i32 %362, %363, !dbg !5093
  br label %cond.end46.i541, !dbg !5094

cond.false45.i506:                                ; preds = %if.then39.i503
  %364 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5095
  br label %cond.end46.i541, !dbg !5096

cond.end46.i541:                                  ; preds = %cond.false45.i506, %cond.true43.i505
  %cond47.i507 = phi i32 [ %add44.i504, %cond.true43.i505 ], [ %364, %cond.false45.i506 ], !dbg !5097
  store i32 %cond47.i507, i32* %re_index.i415, align 4, !dbg !5098
  %365 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !5099
  %buffer48.i508 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %365, i32 0, i32 0, !dbg !5100
  %366 = load i8*, i8** %buffer48.i508, align 8, !dbg !5100
  %367 = load i32, i32* %re_index.i415, align 4, !dbg !5101
  %shr49.i509 = lshr i32 %367, 3, !dbg !5102
  %idx.ext50.i510 = zext i32 %shr49.i509 to i64, !dbg !5103
  %add.ptr51.i511 = getelementptr inbounds i8, i8* %366, i64 %idx.ext50.i510, !dbg !5103
  %368 = bitcast i8* %add.ptr51.i511 to %union.unaligned_32*, !dbg !5104
  %l52.i512 = bitcast %union.unaligned_32* %368 to i32*, !dbg !5104
  %369 = load i32, i32* %l52.i512, align 1, !dbg !5104
  store i32 %369, i32* %x.addr.i96.i407, align 4, !dbg !5105
  %370 = load i32, i32* %x.addr.i96.i407, align 4, !dbg !5106
  %shl.i97.i513 = shl i32 %370, 8, !dbg !5107
  %and.i98.i514 = and i32 %shl.i97.i513, 65280, !dbg !5108
  %371 = load i32, i32* %x.addr.i96.i407, align 4, !dbg !5109
  %shr.i99.i515 = lshr i32 %371, 8, !dbg !5110
  %and1.i100.i516 = and i32 %shr.i99.i515, 255, !dbg !5111
  %or.i101.i517 = or i32 %and.i98.i514, %and1.i100.i516, !dbg !5112
  %shl2.i102.i518 = shl i32 %or.i101.i517, 16, !dbg !5113
  %372 = load i32, i32* %x.addr.i96.i407, align 4, !dbg !5114
  %shr3.i103.i519 = lshr i32 %372, 16, !dbg !5115
  %shl4.i104.i520 = shl i32 %shr3.i103.i519, 8, !dbg !5116
  %and5.i105.i521 = and i32 %shl4.i104.i520, 65280, !dbg !5117
  %373 = load i32, i32* %x.addr.i96.i407, align 4, !dbg !5118
  %shr6.i106.i522 = lshr i32 %373, 16, !dbg !5119
  %shr7.i107.i523 = lshr i32 %shr6.i106.i522, 8, !dbg !5120
  %and8.i108.i524 = and i32 %shr7.i107.i523, 255, !dbg !5121
  %or9.i109.i525 = or i32 %and5.i105.i521, %and8.i108.i524, !dbg !5122
  %or10.i110.i526 = or i32 %shl2.i102.i518, %or9.i109.i525, !dbg !5123
  %374 = load i32, i32* %re_index.i415, align 4, !dbg !5124
  %and54.i527 = and i32 %374, 7, !dbg !5125
  %shl55.i528 = shl i32 %or10.i110.i526, %and54.i527, !dbg !5126
  store i32 %shl55.i528, i32* %re_cache.i416, align 4, !dbg !5127
  %375 = load i32, i32* %n.i418, align 4, !dbg !5128
  %sub56.i529 = sub nsw i32 0, %375, !dbg !5129
  store i32 %sub56.i529, i32* %nb_bits.i419, align 4, !dbg !5130
  %376 = load i32, i32* %re_cache.i416, align 4, !dbg !5131
  %377 = load i32, i32* %nb_bits.i419, align 4, !dbg !5132
  %conv57.i530 = trunc i32 %377 to i8, !dbg !5132
  %call58.i531 = call i32 @NEG_USR32(i32 %376, i8 signext %conv57.i530) #8, !dbg !5133
  %378 = load i32, i32* %code.i414, align 4, !dbg !5134
  %add59.i532 = add i32 %call58.i531, %378, !dbg !5135
  store i32 %add59.i532, i32* %index1.i420, align 4, !dbg !5136
  %379 = load i32, i32* %index1.i420, align 4, !dbg !5137
  %idxprom60.i533 = zext i32 %379 to i64, !dbg !5138
  %380 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5138
  %arrayidx61.i534 = getelementptr inbounds [2 x i16], [2 x i16]* %380, i64 %idxprom60.i533, !dbg !5138
  %arrayidx62.i535 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i534, i64 0, i64 0, !dbg !5138
  %381 = load i16, i16* %arrayidx62.i535, align 2, !dbg !5138
  %conv63.i536 = sext i16 %381 to i32, !dbg !5138
  store i32 %conv63.i536, i32* %code.i414, align 4, !dbg !5139
  %382 = load i32, i32* %index1.i420, align 4, !dbg !5140
  %idxprom64.i537 = zext i32 %382 to i64, !dbg !5141
  %383 = load [2 x i16]*, [2 x i16]** %table.addr.i411, align 8, !dbg !5141
  %arrayidx65.i538 = getelementptr inbounds [2 x i16], [2 x i16]* %383, i64 %idxprom64.i537, !dbg !5141
  %arrayidx66.i539 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i538, i64 0, i64 1, !dbg !5141
  %384 = load i16, i16* %arrayidx66.i539, align 2, !dbg !5141
  %conv67.i540 = sext i16 %384 to i32, !dbg !5141
  store i32 %conv67.i540, i32* %n.i418, align 4, !dbg !5142
  br label %if.end.i542, !dbg !5143

if.end.i542:                                      ; preds = %cond.end46.i541, %land.lhs.true36.i500, %cond.end.i498
  br label %if.end68.i543, !dbg !5144

if.end68.i543:                                    ; preds = %if.end.i542, %land.lhs.true.i456, %for.body189
  %385 = load i32, i32* %n.i418, align 4, !dbg !5145
  %386 = load i32, i32* %re_cache.i416, align 4, !dbg !5146
  %shl70.i544 = shl i32 %386, %385, !dbg !5146
  store i32 %shl70.i544, i32* %re_cache.i416, align 4, !dbg !5146
  %387 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5147
  %388 = load i32, i32* %re_index.i415, align 4, !dbg !5148
  %389 = load i32, i32* %n.i418, align 4, !dbg !5149
  %add71.i545 = add i32 %388, %389, !dbg !5150
  %cmp72.i546 = icmp ugt i32 %387, %add71.i545, !dbg !5151
  br i1 %cmp72.i546, label %cond.true74.i548, label %cond.false76.i549, !dbg !5152

cond.true74.i548:                                 ; preds = %if.end68.i543
  %390 = load i32, i32* %re_index.i415, align 4, !dbg !5153
  %391 = load i32, i32* %n.i418, align 4, !dbg !5154
  %add75.i547 = add i32 %390, %391, !dbg !5155
  br label %get_vlc2.exit552, !dbg !5156

cond.false76.i549:                                ; preds = %if.end68.i543
  %392 = load i32, i32* %re_size_plus8.i417, align 4, !dbg !5157
  br label %get_vlc2.exit552, !dbg !5158

get_vlc2.exit552:                                 ; preds = %cond.true74.i548, %cond.false76.i549
  %cond78.i550 = phi i32 [ %add75.i547, %cond.true74.i548 ], [ %392, %cond.false76.i549 ], !dbg !5159
  store i32 %cond78.i550, i32* %re_index.i415, align 4, !dbg !5160
  %393 = load i32, i32* %re_index.i415, align 4, !dbg !5161
  %394 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i410, align 8, !dbg !5162
  %index80.i551 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %394, i32 0, i32 2, !dbg !5163
  store i32 %393, i32* %index80.i551, align 8, !dbg !5164
  %395 = load i32, i32* %code.i414, align 4, !dbg !5165
  %add197 = add nsw i32 %303, %395, !dbg !5166
  store i32 %add197, i32* %val190, align 4, !dbg !4963
  %396 = load i32, i32* %val190, align 4, !dbg !5167
  %397 = load i32, i32* %len165, align 4, !dbg !5168
  %shl198 = shl i32 1, %397, !dbg !5169
  %sub199 = sub nsw i32 %shl198, 1, !dbg !5170
  %and200 = and i32 %396, %sub199, !dbg !5171
  %398 = load i32, i32* %i185, align 4, !dbg !5172
  %idxprom201 = sext i32 %398 to i64, !dbg !5173
  %399 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5173
  %scalefactors202 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %399, i32 0, i32 3, !dbg !5174
  %arrayidx203 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors202, i64 0, i64 %idxprom201, !dbg !5173
  store i32 %and200, i32* %arrayidx203, align 4, !dbg !5175
  br label %for.inc204, !dbg !5176

for.inc204:                                       ; preds = %get_vlc2.exit552
  %400 = load i32, i32* %i185, align 4, !dbg !5177
  %inc205 = add nsw i32 %400, 1, !dbg !5177
  store i32 %inc205, i32* %i185, align 4, !dbg !5177
  br label %for.cond186, !dbg !5179, !llvm.loop !5180

for.end206:                                       ; preds = %for.cond186
  call void @llvm.dbg.declare(metadata i32* %i207, metadata !5182, metadata !2064), !dbg !5184
  store i32 0, i32* %i207, align 4, !dbg !5184
  br label %for.cond208, !dbg !5185

for.cond208:                                      ; preds = %for.inc219, %for.end206
  %401 = load i32, i32* %i207, align 4, !dbg !5186
  %402 = load i32, i32* %unit_cnt168, align 4, !dbg !5189
  %cmp209 = icmp slt i32 %401, %402, !dbg !5190
  br i1 %cmp209, label %for.body211, label %for.end221, !dbg !5191

for.body211:                                      ; preds = %for.cond208
  %403 = load i32, i32* %base162, align 4, !dbg !5192
  %404 = load i32, i32* %i207, align 4, !dbg !5193
  %idxprom212 = sext i32 %404 to i64, !dbg !5194
  %405 = load i32*, i32** %baseline142, align 8, !dbg !5194
  %arrayidx213 = getelementptr inbounds i32, i32* %405, i64 %idxprom212, !dbg !5194
  %406 = load i32, i32* %arrayidx213, align 4, !dbg !5194
  %add214 = add nsw i32 %403, %406, !dbg !5195
  %407 = load i32, i32* %i207, align 4, !dbg !5196
  %idxprom215 = sext i32 %407 to i64, !dbg !5197
  %408 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5197
  %scalefactors216 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %408, i32 0, i32 3, !dbg !5198
  %arrayidx217 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors216, i64 0, i64 %idxprom215, !dbg !5197
  %409 = load i32, i32* %arrayidx217, align 4, !dbg !5199
  %add218 = add nsw i32 %409, %add214, !dbg !5199
  store i32 %add218, i32* %arrayidx217, align 4, !dbg !5199
  br label %for.inc219, !dbg !5197

for.inc219:                                       ; preds = %for.body211
  %410 = load i32, i32* %i207, align 4, !dbg !5200
  %inc220 = add nsw i32 %410, 1, !dbg !5200
  store i32 %inc220, i32* %i207, align 4, !dbg !5200
  br label %for.cond208, !dbg !5202, !llvm.loop !5203

for.end221:                                       ; preds = %for.cond208
  call void @llvm.dbg.declare(metadata i32* %i222, metadata !5205, metadata !2064), !dbg !5207
  %411 = load i32, i32* %unit_cnt168, align 4, !dbg !5208
  store i32 %411, i32* %i222, align 4, !dbg !5207
  br label %for.cond223, !dbg !5209

for.cond223:                                      ; preds = %for.inc232, %for.end221
  %412 = load i32, i32* %i222, align 4, !dbg !5210
  %413 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5213
  %band_ext_q_unit224 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %413, i32 0, i32 7, !dbg !5214
  %414 = load i32, i32* %band_ext_q_unit224, align 8, !dbg !5214
  %cmp225 = icmp slt i32 %412, %414, !dbg !5215
  br i1 %cmp225, label %for.body227, label %for.end234, !dbg !5216

for.body227:                                      ; preds = %for.cond223
  %415 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5217
  %call228 = call i32 @get_bits(%struct.GetBitContext* %415, i32 5), !dbg !5218
  %416 = load i32, i32* %i222, align 4, !dbg !5219
  %idxprom229 = sext i32 %416 to i64, !dbg !5220
  %417 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5220
  %scalefactors230 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %417, i32 0, i32 3, !dbg !5221
  %arrayidx231 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors230, i64 0, i64 %idxprom229, !dbg !5220
  store i32 %call228, i32* %arrayidx231, align 4, !dbg !5222
  br label %for.inc232, !dbg !5220

for.inc232:                                       ; preds = %for.body227
  %418 = load i32, i32* %i222, align 4, !dbg !5223
  %inc233 = add nsw i32 %418, 1, !dbg !5223
  store i32 %inc233, i32* %i222, align 4, !dbg !5223
  br label %for.cond223, !dbg !5225, !llvm.loop !5226

for.end234:                                       ; preds = %for.cond223
  br label %sw.epilog, !dbg !5228

sw.epilog:                                        ; preds = %if.end, %for.end234, %for.end140, %for.end64, %for.end42
  call void @llvm.dbg.declare(metadata i32* %i235, metadata !5229, metadata !2064), !dbg !5231
  store i32 0, i32* %i235, align 4, !dbg !5231
  br label %for.cond236, !dbg !5232

for.cond236:                                      ; preds = %for.inc254, %sw.epilog
  %419 = load i32, i32* %i235, align 4, !dbg !5233
  %420 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5236
  %band_ext_q_unit237 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %420, i32 0, i32 7, !dbg !5237
  %421 = load i32, i32* %band_ext_q_unit237, align 8, !dbg !5237
  %cmp238 = icmp slt i32 %419, %421, !dbg !5238
  br i1 %cmp238, label %for.body240, label %for.end256, !dbg !5239

for.body240:                                      ; preds = %for.cond236
  %422 = load i32, i32* %i235, align 4, !dbg !5240
  %idxprom241 = sext i32 %422 to i64, !dbg !5242
  %423 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5242
  %scalefactors242 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %423, i32 0, i32 3, !dbg !5243
  %arrayidx243 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors242, i64 0, i64 %idxprom241, !dbg !5242
  %424 = load i32, i32* %arrayidx243, align 4, !dbg !5242
  %cmp244 = icmp slt i32 %424, 0, !dbg !5244
  br i1 %cmp244, label %if.then252, label %lor.lhs.false246, !dbg !5245

lor.lhs.false246:                                 ; preds = %for.body240
  %425 = load i32, i32* %i235, align 4, !dbg !5246
  %idxprom247 = sext i32 %425 to i64, !dbg !5248
  %426 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5248
  %scalefactors248 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %426, i32 0, i32 3, !dbg !5249
  %arrayidx249 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors248, i64 0, i64 %idxprom247, !dbg !5248
  %427 = load i32, i32* %arrayidx249, align 4, !dbg !5248
  %cmp250 = icmp sgt i32 %427, 31, !dbg !5250
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !5251

if.then252:                                       ; preds = %lor.lhs.false246, %for.body240
  store i32 -1094995529, i32* %retval, align 4, !dbg !5252
  br label %return, !dbg !5252

if.end253:                                        ; preds = %lor.lhs.false246
  br label %for.inc254, !dbg !5253

for.inc254:                                       ; preds = %if.end253
  %428 = load i32, i32* %i235, align 4, !dbg !5255
  %inc255 = add nsw i32 %428, 1, !dbg !5255
  store i32 %inc255, i32* %i235, align 4, !dbg !5255
  br label %for.cond236, !dbg !5257, !llvm.loop !5258

for.end256:                                       ; preds = %for.cond236
  %429 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5260
  %scalefactors_prev257 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %429, i32 0, i32 4, !dbg !5261
  %arraydecay258 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors_prev257, i32 0, i32 0, !dbg !5262
  %430 = bitcast i32* %arraydecay258 to i8*, !dbg !5262
  %431 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5263
  %scalefactors259 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %431, i32 0, i32 3, !dbg !5264
  %arraydecay260 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors259, i32 0, i32 0, !dbg !5262
  %432 = bitcast i32* %arraydecay260 to i8*, !dbg !5262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %430, i8* %432, i64 124, i32 4, i1 false), !dbg !5262
  store i32 0, i32* %retval, align 4, !dbg !5265
  br label %return, !dbg !5265

return:                                           ; preds = %for.end256, %if.then252, %if.then
  %433 = load i32, i32* %retval, align 4, !dbg !5266
  ret i32 %433, !dbg !5266
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @calc_precision(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c) #4 !dbg !5267 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  %neg = alloca i32, align 4
  %i44 = alloca i32, align 4
  %i92 = alloca i32, align 4
  %i112 = alloca i32, align 4
  %i136 = alloca i32, align 4
  %i148 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !5268, metadata !2064), !dbg !5269
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !5270, metadata !2064), !dbg !5271
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !5272, metadata !2064), !dbg !5273
  %0 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5274
  %precision_mask = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %0, i32 0, i32 7, !dbg !5275
  %arraydecay = getelementptr inbounds [30 x i32], [30 x i32]* %precision_mask, i32 0, i32 0, !dbg !5276
  %1 = bitcast i32* %arraydecay to i8*, !dbg !5276
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 120, i32 32, i1 false), !dbg !5276
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5277, metadata !2064), !dbg !5279
  store i32 1, i32* %i, align 4, !dbg !5279
  br label %for.cond, !dbg !5280

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5281
  %3 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5284
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %3, i32 0, i32 2, !dbg !5285
  %4 = load i32, i32* %q_unit_cnt, align 4, !dbg !5285
  %cmp = icmp slt i32 %2, %4, !dbg !5286
  br i1 %cmp, label %for.body, label %for.end, !dbg !5287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !5288, metadata !2064), !dbg !5290
  %5 = load i32, i32* %i, align 4, !dbg !5291
  %idxprom = sext i32 %5 to i64, !dbg !5292
  %6 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5292
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %6, i32 0, i32 3, !dbg !5293
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i64 0, i64 %idxprom, !dbg !5292
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5292
  %8 = load i32, i32* %i, align 4, !dbg !5294
  %sub = sub nsw i32 %8, 1, !dbg !5295
  %idxprom1 = sext i32 %sub to i64, !dbg !5296
  %9 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5296
  %scalefactors2 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %9, i32 0, i32 3, !dbg !5297
  %arrayidx3 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors2, i64 0, i64 %idxprom1, !dbg !5296
  %10 = load i32, i32* %arrayidx3, align 4, !dbg !5296
  %sub4 = sub nsw i32 %7, %10, !dbg !5298
  %cmp5 = icmp sge i32 %sub4, 0, !dbg !5299
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !5300

cond.true:                                        ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !5301
  %idxprom6 = sext i32 %11 to i64, !dbg !5303
  %12 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5303
  %scalefactors7 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %12, i32 0, i32 3, !dbg !5304
  %arrayidx8 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors7, i64 0, i64 %idxprom6, !dbg !5303
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !5303
  %14 = load i32, i32* %i, align 4, !dbg !5305
  %sub9 = sub nsw i32 %14, 1, !dbg !5306
  %idxprom10 = sext i32 %sub9 to i64, !dbg !5307
  %15 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5307
  %scalefactors11 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %15, i32 0, i32 3, !dbg !5308
  %arrayidx12 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors11, i64 0, i64 %idxprom10, !dbg !5307
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !5307
  %sub13 = sub nsw i32 %13, %16, !dbg !5309
  br label %cond.end, !dbg !5310

cond.false:                                       ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5311
  %idxprom14 = sext i32 %17 to i64, !dbg !5313
  %18 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5313
  %scalefactors15 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %18, i32 0, i32 3, !dbg !5314
  %arrayidx16 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors15, i64 0, i64 %idxprom14, !dbg !5313
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !5313
  %20 = load i32, i32* %i, align 4, !dbg !5315
  %sub17 = sub nsw i32 %20, 1, !dbg !5316
  %idxprom18 = sext i32 %sub17 to i64, !dbg !5317
  %21 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5317
  %scalefactors19 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %21, i32 0, i32 3, !dbg !5318
  %arrayidx20 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors19, i64 0, i64 %idxprom18, !dbg !5317
  %22 = load i32, i32* %arrayidx20, align 4, !dbg !5317
  %sub21 = sub nsw i32 %19, %22, !dbg !5319
  %sub22 = sub nsw i32 0, %sub21, !dbg !5320
  br label %cond.end, !dbg !5321

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub13, %cond.true ], [ %sub22, %cond.false ], !dbg !5322
  %sub23 = sub nsw i32 %cond, 1, !dbg !5324
  store i32 %sub23, i32* %delta, align 4, !dbg !5325
  %23 = load i32, i32* %delta, align 4, !dbg !5326
  %cmp24 = icmp sgt i32 %23, 0, !dbg !5328
  br i1 %cmp24, label %if.then, label %if.end, !dbg !5329

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %neg, metadata !5330, metadata !2064), !dbg !5332
  %24 = load i32, i32* %i, align 4, !dbg !5333
  %sub25 = sub nsw i32 %24, 1, !dbg !5334
  %idxprom26 = sext i32 %sub25 to i64, !dbg !5335
  %25 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5335
  %scalefactors27 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %25, i32 0, i32 3, !dbg !5336
  %arrayidx28 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors27, i64 0, i64 %idxprom26, !dbg !5335
  %26 = load i32, i32* %arrayidx28, align 4, !dbg !5335
  %27 = load i32, i32* %i, align 4, !dbg !5337
  %idxprom29 = sext i32 %27 to i64, !dbg !5338
  %28 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5338
  %scalefactors30 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %28, i32 0, i32 3, !dbg !5339
  %arrayidx31 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors30, i64 0, i64 %idxprom29, !dbg !5338
  %29 = load i32, i32* %arrayidx31, align 4, !dbg !5338
  %cmp32 = icmp sgt i32 %26, %29, !dbg !5340
  %conv = zext i1 %cmp32 to i32, !dbg !5340
  store i32 %conv, i32* %neg, align 4, !dbg !5332
  %30 = load i32, i32* %delta, align 4, !dbg !5341
  %cmp33 = icmp sgt i32 %30, 5, !dbg !5342
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !5343

cond.true35:                                      ; preds = %if.then
  br label %cond.end37, !dbg !5344

cond.false36:                                     ; preds = %if.then
  %31 = load i32, i32* %delta, align 4, !dbg !5346
  br label %cond.end37, !dbg !5348

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ 5, %cond.true35 ], [ %31, %cond.false36 ], !dbg !5349
  %32 = load i32, i32* %i, align 4, !dbg !5351
  %33 = load i32, i32* %neg, align 4, !dbg !5352
  %sub39 = sub nsw i32 %32, %33, !dbg !5353
  %idxprom40 = sext i32 %sub39 to i64, !dbg !5354
  %34 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5354
  %precision_mask41 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %34, i32 0, i32 7, !dbg !5355
  %arrayidx42 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_mask41, i64 0, i64 %idxprom40, !dbg !5354
  %35 = load i32, i32* %arrayidx42, align 4, !dbg !5356
  %add = add nsw i32 %35, %cond38, !dbg !5356
  store i32 %add, i32* %arrayidx42, align 4, !dbg !5356
  br label %if.end, !dbg !5357

if.end:                                           ; preds = %cond.end37, %cond.end
  br label %for.inc, !dbg !5358

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !5359
  %inc = add nsw i32 %36, 1, !dbg !5359
  store i32 %inc, i32* %i, align 4, !dbg !5359
  br label %for.cond, !dbg !5361, !llvm.loop !5362

for.end:                                          ; preds = %for.cond
  %37 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5364
  %grad_mode = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %37, i32 0, i32 8, !dbg !5366
  %38 = load i32, i32* %grad_mode, align 4, !dbg !5366
  %tobool = icmp ne i32 %38, 0, !dbg !5364
  br i1 %tobool, label %if.then43, label %if.else, !dbg !5367

if.then43:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %i44, metadata !5368, metadata !2064), !dbg !5371
  store i32 0, i32* %i44, align 4, !dbg !5371
  br label %for.cond45, !dbg !5372

for.cond45:                                       ; preds = %for.inc89, %if.then43
  %39 = load i32, i32* %i44, align 4, !dbg !5373
  %40 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5376
  %q_unit_cnt46 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %40, i32 0, i32 2, !dbg !5377
  %41 = load i32, i32* %q_unit_cnt46, align 4, !dbg !5377
  %cmp47 = icmp slt i32 %39, %41, !dbg !5378
  br i1 %cmp47, label %for.body49, label %for.end91, !dbg !5379

for.body49:                                       ; preds = %for.cond45
  %42 = load i32, i32* %i44, align 4, !dbg !5380
  %idxprom50 = sext i32 %42 to i64, !dbg !5382
  %43 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5382
  %scalefactors51 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %43, i32 0, i32 3, !dbg !5383
  %arrayidx52 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors51, i64 0, i64 %idxprom50, !dbg !5382
  %44 = load i32, i32* %arrayidx52, align 4, !dbg !5382
  %45 = load i32, i32* %i44, align 4, !dbg !5384
  %idxprom53 = sext i32 %45 to i64, !dbg !5385
  %46 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5385
  %precision_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %46, i32 0, i32 5, !dbg !5386
  %arrayidx54 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse, i64 0, i64 %idxprom53, !dbg !5385
  store i32 %44, i32* %arrayidx54, align 4, !dbg !5387
  %47 = load i32, i32* %i44, align 4, !dbg !5388
  %idxprom55 = sext i32 %47 to i64, !dbg !5389
  %48 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5389
  %precision_mask56 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %48, i32 0, i32 7, !dbg !5390
  %arrayidx57 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_mask56, i64 0, i64 %idxprom55, !dbg !5389
  %49 = load i32, i32* %arrayidx57, align 4, !dbg !5389
  %50 = load i32, i32* %i44, align 4, !dbg !5391
  %idxprom58 = sext i32 %50 to i64, !dbg !5392
  %51 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5392
  %gradient = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %51, i32 0, i32 10, !dbg !5393
  %arrayidx59 = getelementptr inbounds [31 x i32], [31 x i32]* %gradient, i64 0, i64 %idxprom58, !dbg !5392
  %52 = load i32, i32* %arrayidx59, align 4, !dbg !5392
  %sub60 = sub nsw i32 %49, %52, !dbg !5394
  %53 = load i32, i32* %i44, align 4, !dbg !5395
  %idxprom61 = sext i32 %53 to i64, !dbg !5396
  %54 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5396
  %precision_coarse62 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %54, i32 0, i32 5, !dbg !5397
  %arrayidx63 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse62, i64 0, i64 %idxprom61, !dbg !5396
  %55 = load i32, i32* %arrayidx63, align 4, !dbg !5398
  %add64 = add nsw i32 %55, %sub60, !dbg !5398
  store i32 %add64, i32* %arrayidx63, align 4, !dbg !5398
  %56 = load i32, i32* %i44, align 4, !dbg !5399
  %idxprom65 = sext i32 %56 to i64, !dbg !5401
  %57 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5401
  %precision_coarse66 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %57, i32 0, i32 5, !dbg !5402
  %arrayidx67 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse66, i64 0, i64 %idxprom65, !dbg !5401
  %58 = load i32, i32* %arrayidx67, align 4, !dbg !5401
  %cmp68 = icmp slt i32 %58, 0, !dbg !5403
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !5404

if.then70:                                        ; preds = %for.body49
  br label %for.inc89, !dbg !5405

if.end71:                                         ; preds = %for.body49
  %59 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5406
  %grad_mode72 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %59, i32 0, i32 8, !dbg !5407
  %60 = load i32, i32* %grad_mode72, align 4, !dbg !5407
  switch i32 %60, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb76
    i32 3, label %sw.bb84
  ], !dbg !5408

sw.bb:                                            ; preds = %if.end71
  %61 = load i32, i32* %i44, align 4, !dbg !5409
  %idxprom73 = sext i32 %61 to i64, !dbg !5411
  %62 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5411
  %precision_coarse74 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %62, i32 0, i32 5, !dbg !5412
  %arrayidx75 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse74, i64 0, i64 %idxprom73, !dbg !5411
  %63 = load i32, i32* %arrayidx75, align 4, !dbg !5413
  %shr = ashr i32 %63, 1, !dbg !5413
  store i32 %shr, i32* %arrayidx75, align 4, !dbg !5413
  br label %sw.epilog, !dbg !5414

sw.bb76:                                          ; preds = %if.end71
  %64 = load i32, i32* %i44, align 4, !dbg !5415
  %idxprom77 = sext i32 %64 to i64, !dbg !5416
  %65 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5416
  %precision_coarse78 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %65, i32 0, i32 5, !dbg !5417
  %arrayidx79 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse78, i64 0, i64 %idxprom77, !dbg !5416
  %66 = load i32, i32* %arrayidx79, align 4, !dbg !5416
  %mul = mul nsw i32 3, %66, !dbg !5418
  %shr80 = ashr i32 %mul, 3, !dbg !5419
  %67 = load i32, i32* %i44, align 4, !dbg !5420
  %idxprom81 = sext i32 %67 to i64, !dbg !5421
  %68 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5421
  %precision_coarse82 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %68, i32 0, i32 5, !dbg !5422
  %arrayidx83 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse82, i64 0, i64 %idxprom81, !dbg !5421
  store i32 %shr80, i32* %arrayidx83, align 4, !dbg !5423
  br label %sw.epilog, !dbg !5424

sw.bb84:                                          ; preds = %if.end71
  %69 = load i32, i32* %i44, align 4, !dbg !5425
  %idxprom85 = sext i32 %69 to i64, !dbg !5426
  %70 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5426
  %precision_coarse86 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %70, i32 0, i32 5, !dbg !5427
  %arrayidx87 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse86, i64 0, i64 %idxprom85, !dbg !5426
  %71 = load i32, i32* %arrayidx87, align 4, !dbg !5428
  %shr88 = ashr i32 %71, 2, !dbg !5428
  store i32 %shr88, i32* %arrayidx87, align 4, !dbg !5428
  br label %sw.epilog, !dbg !5429

sw.epilog:                                        ; preds = %if.end71, %sw.bb84, %sw.bb76, %sw.bb
  br label %for.inc89, !dbg !5430

for.inc89:                                        ; preds = %sw.epilog, %if.then70
  %72 = load i32, i32* %i44, align 4, !dbg !5431
  %inc90 = add nsw i32 %72, 1, !dbg !5431
  store i32 %inc90, i32* %i44, align 4, !dbg !5431
  br label %for.cond45, !dbg !5433, !llvm.loop !5434

for.end91:                                        ; preds = %for.cond45
  br label %if.end111, !dbg !5436

if.else:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %i92, metadata !5437, metadata !2064), !dbg !5440
  store i32 0, i32* %i92, align 4, !dbg !5440
  br label %for.cond93, !dbg !5441

for.cond93:                                       ; preds = %for.inc108, %if.else
  %73 = load i32, i32* %i92, align 4, !dbg !5442
  %74 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5445
  %q_unit_cnt94 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %74, i32 0, i32 2, !dbg !5446
  %75 = load i32, i32* %q_unit_cnt94, align 4, !dbg !5446
  %cmp95 = icmp slt i32 %73, %75, !dbg !5447
  br i1 %cmp95, label %for.body97, label %for.end110, !dbg !5448

for.body97:                                       ; preds = %for.cond93
  %76 = load i32, i32* %i92, align 4, !dbg !5449
  %idxprom98 = sext i32 %76 to i64, !dbg !5450
  %77 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5450
  %scalefactors99 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %77, i32 0, i32 3, !dbg !5451
  %arrayidx100 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors99, i64 0, i64 %idxprom98, !dbg !5450
  %78 = load i32, i32* %arrayidx100, align 4, !dbg !5450
  %79 = load i32, i32* %i92, align 4, !dbg !5452
  %idxprom101 = sext i32 %79 to i64, !dbg !5453
  %80 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5453
  %gradient102 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %80, i32 0, i32 10, !dbg !5454
  %arrayidx103 = getelementptr inbounds [31 x i32], [31 x i32]* %gradient102, i64 0, i64 %idxprom101, !dbg !5453
  %81 = load i32, i32* %arrayidx103, align 4, !dbg !5453
  %sub104 = sub nsw i32 %78, %81, !dbg !5455
  %82 = load i32, i32* %i92, align 4, !dbg !5456
  %idxprom105 = sext i32 %82 to i64, !dbg !5457
  %83 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5457
  %precision_coarse106 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %83, i32 0, i32 5, !dbg !5458
  %arrayidx107 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse106, i64 0, i64 %idxprom105, !dbg !5457
  store i32 %sub104, i32* %arrayidx107, align 4, !dbg !5459
  br label %for.inc108, !dbg !5457

for.inc108:                                       ; preds = %for.body97
  %84 = load i32, i32* %i92, align 4, !dbg !5460
  %inc109 = add nsw i32 %84, 1, !dbg !5460
  store i32 %inc109, i32* %i92, align 4, !dbg !5460
  br label %for.cond93, !dbg !5462, !llvm.loop !5463

for.end110:                                       ; preds = %for.cond93
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %for.end91
  call void @llvm.dbg.declare(metadata i32* %i112, metadata !5465, metadata !2064), !dbg !5467
  store i32 0, i32* %i112, align 4, !dbg !5467
  br label %for.cond113, !dbg !5468

for.cond113:                                      ; preds = %for.inc133, %if.end111
  %85 = load i32, i32* %i112, align 4, !dbg !5469
  %86 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5472
  %q_unit_cnt114 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %86, i32 0, i32 2, !dbg !5473
  %87 = load i32, i32* %q_unit_cnt114, align 4, !dbg !5473
  %cmp115 = icmp slt i32 %85, %87, !dbg !5474
  br i1 %cmp115, label %for.body117, label %for.end135, !dbg !5475

for.body117:                                      ; preds = %for.cond113
  %88 = load i32, i32* %i112, align 4, !dbg !5476
  %idxprom118 = sext i32 %88 to i64, !dbg !5477
  %89 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5477
  %precision_coarse119 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %89, i32 0, i32 5, !dbg !5478
  %arrayidx120 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse119, i64 0, i64 %idxprom118, !dbg !5477
  %90 = load i32, i32* %arrayidx120, align 4, !dbg !5477
  %cmp121 = icmp sgt i32 %90, 1, !dbg !5479
  br i1 %cmp121, label %cond.true123, label %cond.false127, !dbg !5480

cond.true123:                                     ; preds = %for.body117
  %91 = load i32, i32* %i112, align 4, !dbg !5481
  %idxprom124 = sext i32 %91 to i64, !dbg !5482
  %92 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5482
  %precision_coarse125 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %92, i32 0, i32 5, !dbg !5483
  %arrayidx126 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse125, i64 0, i64 %idxprom124, !dbg !5482
  %93 = load i32, i32* %arrayidx126, align 4, !dbg !5482
  br label %cond.end128, !dbg !5484

cond.false127:                                    ; preds = %for.body117
  br label %cond.end128, !dbg !5485

cond.end128:                                      ; preds = %cond.false127, %cond.true123
  %cond129 = phi i32 [ %93, %cond.true123 ], [ 1, %cond.false127 ], !dbg !5487
  %94 = load i32, i32* %i112, align 4, !dbg !5489
  %idxprom130 = sext i32 %94 to i64, !dbg !5490
  %95 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5490
  %precision_coarse131 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %95, i32 0, i32 5, !dbg !5491
  %arrayidx132 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse131, i64 0, i64 %idxprom130, !dbg !5490
  store i32 %cond129, i32* %arrayidx132, align 4, !dbg !5492
  br label %for.inc133, !dbg !5490

for.inc133:                                       ; preds = %cond.end128
  %96 = load i32, i32* %i112, align 4, !dbg !5493
  %inc134 = add nsw i32 %96, 1, !dbg !5493
  store i32 %inc134, i32* %i112, align 4, !dbg !5493
  br label %for.cond113, !dbg !5494, !llvm.loop !5495

for.end135:                                       ; preds = %for.cond113
  call void @llvm.dbg.declare(metadata i32* %i136, metadata !5497, metadata !2064), !dbg !5499
  store i32 0, i32* %i136, align 4, !dbg !5499
  br label %for.cond137, !dbg !5500

for.cond137:                                      ; preds = %for.inc145, %for.end135
  %97 = load i32, i32* %i136, align 4, !dbg !5501
  %98 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5504
  %grad_boundary = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %98, i32 0, i32 9, !dbg !5505
  %99 = load i32, i32* %grad_boundary, align 32, !dbg !5505
  %cmp138 = icmp slt i32 %97, %99, !dbg !5506
  br i1 %cmp138, label %for.body140, label %for.end147, !dbg !5507

for.body140:                                      ; preds = %for.cond137
  %100 = load i32, i32* %i136, align 4, !dbg !5508
  %idxprom141 = sext i32 %100 to i64, !dbg !5509
  %101 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5509
  %precision_coarse142 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %101, i32 0, i32 5, !dbg !5510
  %arrayidx143 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse142, i64 0, i64 %idxprom141, !dbg !5509
  %102 = load i32, i32* %arrayidx143, align 4, !dbg !5511
  %inc144 = add nsw i32 %102, 1, !dbg !5511
  store i32 %inc144, i32* %arrayidx143, align 4, !dbg !5511
  br label %for.inc145, !dbg !5509

for.inc145:                                       ; preds = %for.body140
  %103 = load i32, i32* %i136, align 4, !dbg !5512
  %inc146 = add nsw i32 %103, 1, !dbg !5512
  store i32 %inc146, i32* %i136, align 4, !dbg !5512
  br label %for.cond137, !dbg !5514, !llvm.loop !5515

for.end147:                                       ; preds = %for.cond137
  call void @llvm.dbg.declare(metadata i32* %i148, metadata !5517, metadata !2064), !dbg !5519
  store i32 0, i32* %i148, align 4, !dbg !5519
  br label %for.cond149, !dbg !5520

for.cond149:                                      ; preds = %for.inc173, %for.end147
  %104 = load i32, i32* %i148, align 4, !dbg !5521
  %105 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !5524
  %q_unit_cnt150 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %105, i32 0, i32 2, !dbg !5525
  %106 = load i32, i32* %q_unit_cnt150, align 4, !dbg !5525
  %cmp151 = icmp slt i32 %104, %106, !dbg !5526
  br i1 %cmp151, label %for.body153, label %for.end175, !dbg !5527

for.body153:                                      ; preds = %for.cond149
  %107 = load i32, i32* %i148, align 4, !dbg !5528
  %idxprom154 = sext i32 %107 to i64, !dbg !5530
  %108 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5530
  %precision_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %108, i32 0, i32 6, !dbg !5531
  %arrayidx155 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine, i64 0, i64 %idxprom154, !dbg !5530
  store i32 0, i32* %arrayidx155, align 4, !dbg !5532
  %109 = load i32, i32* %i148, align 4, !dbg !5533
  %idxprom156 = sext i32 %109 to i64, !dbg !5535
  %110 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5535
  %precision_coarse157 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %110, i32 0, i32 5, !dbg !5536
  %arrayidx158 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse157, i64 0, i64 %idxprom156, !dbg !5535
  %111 = load i32, i32* %arrayidx158, align 4, !dbg !5535
  %cmp159 = icmp sgt i32 %111, 15, !dbg !5537
  br i1 %cmp159, label %if.then161, label %if.end172, !dbg !5538

if.then161:                                       ; preds = %for.body153
  %112 = load i32, i32* %i148, align 4, !dbg !5539
  %idxprom162 = sext i32 %112 to i64, !dbg !5541
  %113 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5541
  %precision_coarse163 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %113, i32 0, i32 5, !dbg !5542
  %arrayidx164 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse163, i64 0, i64 %idxprom162, !dbg !5541
  %114 = load i32, i32* %arrayidx164, align 4, !dbg !5541
  %sub165 = sub nsw i32 %114, 15, !dbg !5543
  %115 = load i32, i32* %i148, align 4, !dbg !5544
  %idxprom166 = sext i32 %115 to i64, !dbg !5545
  %116 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5545
  %precision_fine167 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %116, i32 0, i32 6, !dbg !5546
  %arrayidx168 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine167, i64 0, i64 %idxprom166, !dbg !5545
  store i32 %sub165, i32* %arrayidx168, align 4, !dbg !5547
  %117 = load i32, i32* %i148, align 4, !dbg !5548
  %idxprom169 = sext i32 %117 to i64, !dbg !5549
  %118 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5549
  %precision_coarse170 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %118, i32 0, i32 5, !dbg !5550
  %arrayidx171 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse170, i64 0, i64 %idxprom169, !dbg !5549
  store i32 15, i32* %arrayidx171, align 4, !dbg !5551
  br label %if.end172, !dbg !5552

if.end172:                                        ; preds = %if.then161, %for.body153
  br label %for.inc173, !dbg !5553

for.inc173:                                       ; preds = %if.end172
  %119 = load i32, i32* %i148, align 4, !dbg !5554
  %inc174 = add nsw i32 %119, 1, !dbg !5554
  store i32 %inc174, i32* %i148, align 4, !dbg !5554
  br label %for.cond149, !dbg !5556, !llvm.loop !5557

for.end175:                                       ; preds = %for.cond149
  ret void, !dbg !5559
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @calc_codebook_idx(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c) #4 !dbg !5560 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %avg = alloca i32, align 4
  %last_sf = alloca i32, align 4
  %i = alloca i32, align 4
  %i22 = alloca i32, align 4
  %prev = alloca i32, align 4
  %cur = alloca i32, align 4
  %next = alloca i32, align 4
  %min = alloca i32, align 4
  %i52 = alloca i32, align 4
  %cur57 = alloca i32, align 4
  %cnd = alloca i32, align 4
  %min65 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !5561, metadata !2064), !dbg !5562
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !5563, metadata !2064), !dbg !5564
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !5565, metadata !2064), !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %avg, metadata !5567, metadata !2064), !dbg !5568
  store i32 0, i32* %avg, align 4, !dbg !5568
  call void @llvm.dbg.declare(metadata i32* %last_sf, metadata !5569, metadata !2064), !dbg !5570
  %0 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5571
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %0, i32 0, i32 1, !dbg !5572
  %1 = load i32, i32* %q_unit_cnt, align 4, !dbg !5572
  %idxprom = sext i32 %1 to i64, !dbg !5573
  %2 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5573
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %2, i32 0, i32 3, !dbg !5574
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i64 0, i64 %idxprom, !dbg !5573
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5573
  store i32 %3, i32* %last_sf, align 4, !dbg !5570
  %4 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5575
  %codebookset = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %4, i32 0, i32 8, !dbg !5576
  %arraydecay = getelementptr inbounds [30 x i32], [30 x i32]* %codebookset, i32 0, i32 0, !dbg !5577
  %5 = bitcast i32* %arraydecay to i8*, !dbg !5577
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 120, i32 8, i1 false), !dbg !5577
  %6 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5578
  %q_unit_cnt1 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %6, i32 0, i32 1, !dbg !5580
  %7 = load i32, i32* %q_unit_cnt1, align 4, !dbg !5580
  %cmp = icmp sle i32 %7, 1, !dbg !5581
  br i1 %cmp, label %if.then, label %if.end, !dbg !5582

if.then:                                          ; preds = %entry
  br label %return, !dbg !5583

if.end:                                           ; preds = %entry
  %8 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !5584
  %samplerate_idx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %8, i32 0, i32 8, !dbg !5586
  %9 = load i32, i32* %samplerate_idx, align 16, !dbg !5586
  %cmp2 = icmp sgt i32 %9, 7, !dbg !5587
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5588

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !5589

if.end4:                                          ; preds = %if.end
  %10 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5590
  %q_unit_cnt5 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %10, i32 0, i32 1, !dbg !5591
  %11 = load i32, i32* %q_unit_cnt5, align 4, !dbg !5591
  %sub = sub nsw i32 %11, 1, !dbg !5592
  %idxprom6 = sext i32 %sub to i64, !dbg !5593
  %12 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5593
  %scalefactors7 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %12, i32 0, i32 3, !dbg !5594
  %arrayidx8 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors7, i64 0, i64 %idxprom6, !dbg !5593
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !5593
  %14 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5595
  %q_unit_cnt9 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %14, i32 0, i32 1, !dbg !5596
  %15 = load i32, i32* %q_unit_cnt9, align 4, !dbg !5596
  %idxprom10 = sext i32 %15 to i64, !dbg !5597
  %16 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5597
  %scalefactors11 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %16, i32 0, i32 3, !dbg !5598
  %arrayidx12 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors11, i64 0, i64 %idxprom10, !dbg !5597
  store i32 %13, i32* %arrayidx12, align 4, !dbg !5599
  %17 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5600
  %q_unit_cnt13 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %17, i32 0, i32 1, !dbg !5602
  %18 = load i32, i32* %q_unit_cnt13, align 4, !dbg !5602
  %cmp14 = icmp sgt i32 %18, 12, !dbg !5603
  br i1 %cmp14, label %if.then15, label %if.end21, !dbg !5604

if.then15:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5605, metadata !2064), !dbg !5608
  store i32 0, i32* %i, align 4, !dbg !5608
  br label %for.cond, !dbg !5609

for.cond:                                         ; preds = %for.inc, %if.then15
  %19 = load i32, i32* %i, align 4, !dbg !5610
  %cmp16 = icmp slt i32 %19, 12, !dbg !5613
  br i1 %cmp16, label %for.body, label %for.end, !dbg !5614

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !5615
  %idxprom17 = sext i32 %20 to i64, !dbg !5616
  %21 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5616
  %scalefactors18 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %21, i32 0, i32 3, !dbg !5617
  %arrayidx19 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors18, i64 0, i64 %idxprom17, !dbg !5616
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !5616
  %23 = load i32, i32* %avg, align 4, !dbg !5618
  %add = add nsw i32 %23, %22, !dbg !5618
  store i32 %add, i32* %avg, align 4, !dbg !5618
  br label %for.inc, !dbg !5619

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !5620
  %inc = add nsw i32 %24, 1, !dbg !5620
  store i32 %inc, i32* %i, align 4, !dbg !5620
  br label %for.cond, !dbg !5622, !llvm.loop !5623

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %avg, align 4, !dbg !5625
  %add20 = add nsw i32 %25, 6, !dbg !5626
  %div = sdiv i32 %add20, 12, !dbg !5627
  store i32 %div, i32* %avg, align 4, !dbg !5628
  br label %if.end21, !dbg !5629

if.end21:                                         ; preds = %for.end, %if.end4
  call void @llvm.dbg.declare(metadata i32* %i22, metadata !5630, metadata !2064), !dbg !5632
  store i32 8, i32* %i22, align 4, !dbg !5632
  br label %for.cond23, !dbg !5633

for.cond23:                                       ; preds = %for.inc49, %if.end21
  %26 = load i32, i32* %i22, align 4, !dbg !5634
  %27 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5637
  %q_unit_cnt24 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %27, i32 0, i32 1, !dbg !5638
  %28 = load i32, i32* %q_unit_cnt24, align 4, !dbg !5638
  %cmp25 = icmp slt i32 %26, %28, !dbg !5639
  br i1 %cmp25, label %for.body26, label %for.end51, !dbg !5640

for.body26:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !5641, metadata !2064), !dbg !5643
  %29 = load i32, i32* %i22, align 4, !dbg !5644
  %sub27 = sub nsw i32 %29, 1, !dbg !5645
  %idxprom28 = sext i32 %sub27 to i64, !dbg !5646
  %30 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5646
  %scalefactors29 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %30, i32 0, i32 3, !dbg !5647
  %arrayidx30 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors29, i64 0, i64 %idxprom28, !dbg !5646
  %31 = load i32, i32* %arrayidx30, align 4, !dbg !5646
  store i32 %31, i32* %prev, align 4, !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %cur, metadata !5648, metadata !2064), !dbg !5649
  %32 = load i32, i32* %i22, align 4, !dbg !5650
  %idxprom31 = sext i32 %32 to i64, !dbg !5651
  %33 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5651
  %scalefactors32 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %33, i32 0, i32 3, !dbg !5652
  %arrayidx33 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors32, i64 0, i64 %idxprom31, !dbg !5651
  %34 = load i32, i32* %arrayidx33, align 4, !dbg !5651
  store i32 %34, i32* %cur, align 4, !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %next, metadata !5653, metadata !2064), !dbg !5654
  %35 = load i32, i32* %i22, align 4, !dbg !5655
  %add34 = add nsw i32 %35, 1, !dbg !5656
  %idxprom35 = sext i32 %add34 to i64, !dbg !5657
  %36 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5657
  %scalefactors36 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %36, i32 0, i32 3, !dbg !5658
  %arrayidx37 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors36, i64 0, i64 %idxprom35, !dbg !5657
  %37 = load i32, i32* %arrayidx37, align 4, !dbg !5657
  store i32 %37, i32* %next, align 4, !dbg !5654
  call void @llvm.dbg.declare(metadata i32* %min, metadata !5659, metadata !2064), !dbg !5660
  %38 = load i32, i32* %prev, align 4, !dbg !5661
  %39 = load i32, i32* %next, align 4, !dbg !5662
  %cmp38 = icmp sgt i32 %38, %39, !dbg !5663
  br i1 %cmp38, label %cond.true, label %cond.false, !dbg !5664

cond.true:                                        ; preds = %for.body26
  %40 = load i32, i32* %next, align 4, !dbg !5665
  br label %cond.end, !dbg !5667

cond.false:                                       ; preds = %for.body26
  %41 = load i32, i32* %prev, align 4, !dbg !5668
  br label %cond.end, !dbg !5670

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %41, %cond.false ], !dbg !5671
  store i32 %cond, i32* %min, align 4, !dbg !5673
  %42 = load i32, i32* %cur, align 4, !dbg !5674
  %43 = load i32, i32* %min, align 4, !dbg !5676
  %sub39 = sub nsw i32 %42, %43, !dbg !5677
  %cmp40 = icmp sge i32 %sub39, 3, !dbg !5678
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !5679

lor.lhs.false:                                    ; preds = %cond.end
  %44 = load i32, i32* %cur, align 4, !dbg !5680
  %mul = mul nsw i32 2, %44, !dbg !5682
  %45 = load i32, i32* %prev, align 4, !dbg !5683
  %sub41 = sub nsw i32 %mul, %45, !dbg !5684
  %46 = load i32, i32* %next, align 4, !dbg !5685
  %sub42 = sub nsw i32 %sub41, %46, !dbg !5686
  %cmp43 = icmp sge i32 %sub42, 3, !dbg !5687
  br i1 %cmp43, label %if.then44, label %if.end48, !dbg !5688

if.then44:                                        ; preds = %lor.lhs.false, %cond.end
  %47 = load i32, i32* %i22, align 4, !dbg !5689
  %idxprom45 = sext i32 %47 to i64, !dbg !5690
  %48 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5690
  %codebookset46 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %48, i32 0, i32 8, !dbg !5691
  %arrayidx47 = getelementptr inbounds [30 x i32], [30 x i32]* %codebookset46, i64 0, i64 %idxprom45, !dbg !5690
  store i32 1, i32* %arrayidx47, align 4, !dbg !5692
  br label %if.end48, !dbg !5690

if.end48:                                         ; preds = %if.then44, %lor.lhs.false
  br label %for.inc49, !dbg !5693

for.inc49:                                        ; preds = %if.end48
  %49 = load i32, i32* %i22, align 4, !dbg !5694
  %inc50 = add nsw i32 %49, 1, !dbg !5694
  store i32 %inc50, i32* %i22, align 4, !dbg !5694
  br label %for.cond23, !dbg !5696, !llvm.loop !5697

for.end51:                                        ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata i32* %i52, metadata !5699, metadata !2064), !dbg !5701
  store i32 12, i32* %i52, align 4, !dbg !5701
  br label %for.cond53, !dbg !5702

for.cond53:                                       ; preds = %for.inc102, %for.end51
  %50 = load i32, i32* %i52, align 4, !dbg !5703
  %51 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5706
  %q_unit_cnt54 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %51, i32 0, i32 1, !dbg !5707
  %52 = load i32, i32* %q_unit_cnt54, align 4, !dbg !5707
  %cmp55 = icmp slt i32 %50, %52, !dbg !5708
  br i1 %cmp55, label %for.body56, label %for.end104, !dbg !5709

for.body56:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata i32* %cur57, metadata !5710, metadata !2064), !dbg !5712
  %53 = load i32, i32* %i52, align 4, !dbg !5713
  %idxprom58 = sext i32 %53 to i64, !dbg !5714
  %54 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5714
  %scalefactors59 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %54, i32 0, i32 3, !dbg !5715
  %arrayidx60 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors59, i64 0, i64 %idxprom58, !dbg !5714
  %55 = load i32, i32* %arrayidx60, align 4, !dbg !5714
  store i32 %55, i32* %cur57, align 4, !dbg !5712
  call void @llvm.dbg.declare(metadata i32* %cnd, metadata !5716, metadata !2064), !dbg !5717
  %56 = load i32, i32* %i52, align 4, !dbg !5718
  %idxprom61 = sext i32 %56 to i64, !dbg !5719
  %arrayidx62 = getelementptr inbounds [30 x i8], [30 x i8]* @at9_q_unit_to_coeff_cnt, i64 0, i64 %idxprom61, !dbg !5719
  %57 = load i8, i8* %arrayidx62, align 1, !dbg !5719
  %conv = zext i8 %57 to i32, !dbg !5719
  %cmp63 = icmp eq i32 %conv, 16, !dbg !5720
  %conv64 = zext i1 %cmp63 to i32, !dbg !5720
  store i32 %conv64, i32* %cnd, align 4, !dbg !5717
  call void @llvm.dbg.declare(metadata i32* %min65, metadata !5721, metadata !2064), !dbg !5722
  %58 = load i32, i32* %i52, align 4, !dbg !5723
  %add66 = add nsw i32 %58, 1, !dbg !5724
  %idxprom67 = sext i32 %add66 to i64, !dbg !5725
  %59 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5725
  %scalefactors68 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %59, i32 0, i32 3, !dbg !5726
  %arrayidx69 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors68, i64 0, i64 %idxprom67, !dbg !5725
  %60 = load i32, i32* %arrayidx69, align 4, !dbg !5725
  %61 = load i32, i32* %i52, align 4, !dbg !5727
  %sub70 = sub nsw i32 %61, 1, !dbg !5728
  %idxprom71 = sext i32 %sub70 to i64, !dbg !5729
  %62 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5729
  %scalefactors72 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %62, i32 0, i32 3, !dbg !5730
  %arrayidx73 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors72, i64 0, i64 %idxprom71, !dbg !5729
  %63 = load i32, i32* %arrayidx73, align 4, !dbg !5729
  %cmp74 = icmp sgt i32 %60, %63, !dbg !5731
  br i1 %cmp74, label %cond.true76, label %cond.false81, !dbg !5732

cond.true76:                                      ; preds = %for.body56
  %64 = load i32, i32* %i52, align 4, !dbg !5733
  %sub77 = sub nsw i32 %64, 1, !dbg !5735
  %idxprom78 = sext i32 %sub77 to i64, !dbg !5736
  %65 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5736
  %scalefactors79 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %65, i32 0, i32 3, !dbg !5737
  %arrayidx80 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors79, i64 0, i64 %idxprom78, !dbg !5736
  %66 = load i32, i32* %arrayidx80, align 4, !dbg !5736
  br label %cond.end86, !dbg !5738

cond.false81:                                     ; preds = %for.body56
  %67 = load i32, i32* %i52, align 4, !dbg !5739
  %add82 = add nsw i32 %67, 1, !dbg !5741
  %idxprom83 = sext i32 %add82 to i64, !dbg !5742
  %68 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5742
  %scalefactors84 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %68, i32 0, i32 3, !dbg !5743
  %arrayidx85 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors84, i64 0, i64 %idxprom83, !dbg !5742
  %69 = load i32, i32* %arrayidx85, align 4, !dbg !5742
  br label %cond.end86, !dbg !5744

cond.end86:                                       ; preds = %cond.false81, %cond.true76
  %cond87 = phi i32 [ %66, %cond.true76 ], [ %69, %cond.false81 ], !dbg !5745
  store i32 %cond87, i32* %min65, align 4, !dbg !5747
  %70 = load i32, i32* %i52, align 4, !dbg !5748
  %idxprom88 = sext i32 %70 to i64, !dbg !5750
  %71 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5750
  %codebookset89 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %71, i32 0, i32 8, !dbg !5751
  %arrayidx90 = getelementptr inbounds [30 x i32], [30 x i32]* %codebookset89, i64 0, i64 %idxprom88, !dbg !5750
  %72 = load i32, i32* %arrayidx90, align 4, !dbg !5750
  %tobool = icmp ne i32 %72, 0, !dbg !5750
  br i1 %tobool, label %if.then91, label %if.end92, !dbg !5752

if.then91:                                        ; preds = %cond.end86
  br label %for.inc102, !dbg !5753

if.end92:                                         ; preds = %cond.end86
  %73 = load i32, i32* %cur57, align 4, !dbg !5754
  %74 = load i32, i32* %min65, align 4, !dbg !5755
  %sub93 = sub nsw i32 %73, %74, !dbg !5756
  %cmp94 = icmp sge i32 %sub93, 2, !dbg !5757
  br i1 %cmp94, label %land.rhs, label %land.end, !dbg !5758

land.rhs:                                         ; preds = %if.end92
  %75 = load i32, i32* %cur57, align 4, !dbg !5759
  %76 = load i32, i32* %avg, align 4, !dbg !5760
  %77 = load i32, i32* %cnd, align 4, !dbg !5761
  %sub96 = sub nsw i32 %76, %77, !dbg !5762
  %cmp97 = icmp sge i32 %75, %sub96, !dbg !5763
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end92
  %78 = phi i1 [ false, %if.end92 ], [ %cmp97, %land.rhs ]
  %land.ext = zext i1 %78 to i32, !dbg !5764
  %79 = load i32, i32* %i52, align 4, !dbg !5765
  %idxprom99 = sext i32 %79 to i64, !dbg !5766
  %80 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5766
  %codebookset100 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %80, i32 0, i32 8, !dbg !5767
  %arrayidx101 = getelementptr inbounds [30 x i32], [30 x i32]* %codebookset100, i64 0, i64 %idxprom99, !dbg !5766
  store i32 %land.ext, i32* %arrayidx101, align 4, !dbg !5768
  br label %for.inc102, !dbg !5769

for.inc102:                                       ; preds = %land.end, %if.then91
  %81 = load i32, i32* %i52, align 4, !dbg !5770
  %inc103 = add nsw i32 %81, 1, !dbg !5770
  store i32 %inc103, i32* %i52, align 4, !dbg !5770
  br label %for.cond53, !dbg !5772, !llvm.loop !5773

for.end104:                                       ; preds = %for.cond53
  %82 = load i32, i32* %last_sf, align 4, !dbg !5775
  %83 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5776
  %q_unit_cnt105 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %83, i32 0, i32 1, !dbg !5777
  %84 = load i32, i32* %q_unit_cnt105, align 4, !dbg !5777
  %idxprom106 = sext i32 %84 to i64, !dbg !5778
  %85 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5778
  %scalefactors107 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %85, i32 0, i32 3, !dbg !5779
  %arrayidx108 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors107, i64 0, i64 %idxprom106, !dbg !5778
  store i32 %82, i32* %arrayidx108, align 4, !dbg !5780
  br label %return, !dbg !5781

return:                                           ; preds = %for.end104, %if.then3, %if.then
  ret void, !dbg !5782
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @read_coeffs_coarse(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c, %struct.GetBitContext* %gb) #4 !dbg !5784 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2801, metadata !2064), !dbg !5787
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2801, metadata !2064), !dbg !5798
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2801, metadata !2064), !dbg !5800
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4132, metadata !2064), !dbg !5802
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4134, metadata !2064), !dbg !5803
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4136, metadata !2064), !dbg !5804
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4138, metadata !2064), !dbg !5805
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4140, metadata !2064), !dbg !5806
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4142, metadata !2064), !dbg !5807
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4144, metadata !2064), !dbg !5808
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4146, metadata !2064), !dbg !5809
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4148, metadata !2064), !dbg !5810
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4150, metadata !2064), !dbg !5811
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !4152, metadata !2064), !dbg !5812
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %max_prec = alloca i32, align 4
  %i = alloca i32, align 4
  %coeffs = alloca i32*, align 8
  %bands = alloca i32, align 4
  %prec = alloca i32, align 4
  %cb = alloca i32, align 4
  %cbi = alloca i32, align 4
  %tab = alloca %struct.VLC*, align 8
  %huff = alloca %struct.HuffmanCodebook*, align 8
  %groups = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i16, align 2
  %k = alloca i32, align 4
  %j49 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !5813, metadata !2064), !dbg !5814
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !5815, metadata !2064), !dbg !5816
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !5817, metadata !2064), !dbg !5818
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5819, metadata !2064), !dbg !5820
  call void @llvm.dbg.declare(metadata i32* %max_prec, metadata !5821, metadata !2064), !dbg !5822
  %0 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !5823
  %samplerate_idx = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %0, i32 0, i32 8, !dbg !5824
  %1 = load i32, i32* %samplerate_idx, align 16, !dbg !5824
  %cmp = icmp sgt i32 %1, 7, !dbg !5825
  %cond = select i1 %cmp, i32 1, i32 7, !dbg !5823
  store i32 %cond, i32* %max_prec, align 4, !dbg !5822
  %2 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5826
  %q_coeffs_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %2, i32 0, i32 9, !dbg !5827
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_coarse, i32 0, i32 0, !dbg !5828
  %3 = bitcast i32* %arraydecay to i8*, !dbg !5828
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 1024, i32 16, i1 false), !dbg !5828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5829, metadata !2064), !dbg !5830
  store i32 0, i32* %i, align 4, !dbg !5830
  br label %for.cond, !dbg !5831

for.cond:                                         ; preds = %for.inc61, %entry
  %4 = load i32, i32* %i, align 4, !dbg !5832
  %5 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5834
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %5, i32 0, i32 1, !dbg !5835
  %6 = load i32, i32* %q_unit_cnt, align 4, !dbg !5835
  %cmp1 = icmp slt i32 %4, %6, !dbg !5836
  br i1 %cmp1, label %for.body, label %for.end63, !dbg !5837

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %coeffs, metadata !5838, metadata !2064), !dbg !5839
  %7 = load i32, i32* %i, align 4, !dbg !5840
  %idxprom = sext i32 %7 to i64, !dbg !5841
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom, !dbg !5841
  %8 = load i32, i32* %arrayidx, align 4, !dbg !5841
  %idxprom2 = sext i32 %8 to i64, !dbg !5842
  %9 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5842
  %q_coeffs_coarse3 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %9, i32 0, i32 9, !dbg !5843
  %arrayidx4 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_coarse3, i64 0, i64 %idxprom2, !dbg !5842
  store i32* %arrayidx4, i32** %coeffs, align 8, !dbg !5839
  call void @llvm.dbg.declare(metadata i32* %bands, metadata !5844, metadata !2064), !dbg !5845
  %10 = load i32, i32* %i, align 4, !dbg !5846
  %idxprom5 = sext i32 %10 to i64, !dbg !5847
  %arrayidx6 = getelementptr inbounds [30 x i8], [30 x i8]* @at9_q_unit_to_coeff_cnt, i64 0, i64 %idxprom5, !dbg !5847
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !5847
  %conv = zext i8 %11 to i32, !dbg !5847
  store i32 %conv, i32* %bands, align 4, !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %prec, metadata !5848, metadata !2064), !dbg !5849
  %12 = load i32, i32* %i, align 4, !dbg !5850
  %idxprom7 = sext i32 %12 to i64, !dbg !5851
  %13 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5851
  %precision_coarse = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %13, i32 0, i32 5, !dbg !5852
  %arrayidx8 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_coarse, i64 0, i64 %idxprom7, !dbg !5851
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !5851
  %add = add nsw i32 %14, 1, !dbg !5853
  store i32 %add, i32* %prec, align 4, !dbg !5849
  %15 = load i32, i32* %prec, align 4, !dbg !5854
  %16 = load i32, i32* %max_prec, align 4, !dbg !5855
  %cmp9 = icmp sle i32 %15, %16, !dbg !5856
  br i1 %cmp9, label %if.then, label %if.else, !dbg !5857

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !5858, metadata !2064), !dbg !5859
  %17 = load i32, i32* %i, align 4, !dbg !5860
  %idxprom11 = sext i32 %17 to i64, !dbg !5861
  %18 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !5861
  %codebookset = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %18, i32 0, i32 8, !dbg !5862
  %arrayidx12 = getelementptr inbounds [30 x i32], [30 x i32]* %codebookset, i64 0, i64 %idxprom11, !dbg !5861
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !5861
  store i32 %19, i32* %cb, align 4, !dbg !5859
  call void @llvm.dbg.declare(metadata i32* %cbi, metadata !5863, metadata !2064), !dbg !5864
  %20 = load i32, i32* %i, align 4, !dbg !5865
  %idxprom13 = sext i32 %20 to i64, !dbg !5866
  %arrayidx14 = getelementptr inbounds [30 x i8], [30 x i8]* @at9_q_unit_to_codebookidx, i64 0, i64 %idxprom13, !dbg !5866
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !5866
  %conv15 = zext i8 %21 to i32, !dbg !5866
  store i32 %conv15, i32* %cbi, align 4, !dbg !5864
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab, metadata !5867, metadata !2064), !dbg !5868
  %22 = load i32, i32* %cbi, align 4, !dbg !5869
  %idxprom16 = sext i32 %22 to i64, !dbg !5870
  %23 = load i32, i32* %prec, align 4, !dbg !5871
  %idxprom17 = sext i32 %23 to i64, !dbg !5870
  %24 = load i32, i32* %cb, align 4, !dbg !5872
  %idxprom18 = sext i32 %24 to i64, !dbg !5870
  %25 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !5870
  %coeff_vlc = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %25, i32 0, i32 11, !dbg !5873
  %arrayidx19 = getelementptr inbounds [2 x [8 x [4 x %struct.VLC]]], [2 x [8 x [4 x %struct.VLC]]]* %coeff_vlc, i64 0, i64 %idxprom18, !dbg !5870
  %arrayidx20 = getelementptr inbounds [8 x [4 x %struct.VLC]], [8 x [4 x %struct.VLC]]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !5870
  %arrayidx21 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx20, i64 0, i64 %idxprom16, !dbg !5870
  store %struct.VLC* %arrayidx21, %struct.VLC** %tab, align 8, !dbg !5868
  call void @llvm.dbg.declare(metadata %struct.HuffmanCodebook** %huff, metadata !5874, metadata !2064), !dbg !5875
  %26 = load i32, i32* %cbi, align 4, !dbg !5876
  %idxprom22 = sext i32 %26 to i64, !dbg !5877
  %27 = load i32, i32* %prec, align 4, !dbg !5878
  %idxprom23 = sext i32 %27 to i64, !dbg !5877
  %28 = load i32, i32* %cb, align 4, !dbg !5879
  %idxprom24 = sext i32 %28 to i64, !dbg !5877
  %arrayidx25 = getelementptr inbounds [2 x [8 x [4 x %struct.HuffmanCodebook]]], [2 x [8 x [4 x %struct.HuffmanCodebook]]]* @at9_huffman_coeffs, i64 0, i64 %idxprom24, !dbg !5877
  %arrayidx26 = getelementptr inbounds [8 x [4 x %struct.HuffmanCodebook]], [8 x [4 x %struct.HuffmanCodebook]]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !5877
  %arrayidx27 = getelementptr inbounds [4 x %struct.HuffmanCodebook], [4 x %struct.HuffmanCodebook]* %arrayidx26, i64 0, i64 %idxprom22, !dbg !5877
  store %struct.HuffmanCodebook* %arrayidx27, %struct.HuffmanCodebook** %huff, align 8, !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %groups, metadata !5880, metadata !2064), !dbg !5881
  %29 = load i32, i32* %bands, align 4, !dbg !5882
  %30 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !5883
  %value_cnt_pow = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %30, i32 0, i32 4, !dbg !5884
  %31 = load i32, i32* %value_cnt_pow, align 8, !dbg !5884
  %shr = ashr i32 %29, %31, !dbg !5885
  store i32 %shr, i32* %groups, align 4, !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5886, metadata !2064), !dbg !5887
  store i32 0, i32* %j, align 4, !dbg !5887
  br label %for.cond28, !dbg !5888

for.cond28:                                       ; preds = %for.inc46, %if.then
  %32 = load i32, i32* %j, align 4, !dbg !5889
  %33 = load i32, i32* %groups, align 4, !dbg !5891
  %cmp29 = icmp slt i32 %32, %33, !dbg !5892
  br i1 %cmp29, label %for.body31, label %for.end48, !dbg !5893

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i16* %val, metadata !5894, metadata !2064), !dbg !5895
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5896
  %35 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !5897
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %35, i32 0, i32 1, !dbg !5898
  %36 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5898
  %37 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !5899
  %max_bit_size = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %37, i32 0, i32 6, !dbg !5900
  %38 = load i32, i32* %max_bit_size, align 8, !dbg !5900
  store %struct.GetBitContext* %34, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5901
  store [2 x i16]* %36, [2 x i16]** %table.addr.i, align 8, !dbg !5901
  store i32 9, i32* %bits.addr.i, align 4, !dbg !5901
  store i32 %38, i32* %max_depth.addr.i, align 4, !dbg !5901
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5902
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %39, i32 0, i32 2, !dbg !5903
  %40 = load i32, i32* %index.i, align 8, !dbg !5903
  store i32 %40, i32* %re_index.i, align 4, !dbg !5807
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5904
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %41, i32 0, i32 4, !dbg !5905
  %42 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5905
  store i32 %42, i32* %re_size_plus8.i, align 4, !dbg !5809
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5906
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %43, i32 0, i32 0, !dbg !5907
  %44 = load i8*, i8** %buffer.i, align 8, !dbg !5907
  %45 = load i32, i32* %re_index.i, align 4, !dbg !5908
  %shr.i = lshr i32 %45, 3, !dbg !5909
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5910
  %add.ptr.i = getelementptr inbounds i8, i8* %44, i64 %idx.ext.i, !dbg !5910
  %46 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5911
  %l.i = bitcast %union.unaligned_32* %46 to i32*, !dbg !5911
  %47 = load i32, i32* %l.i, align 1, !dbg !5911
  store i32 %47, i32* %x.addr.i.i, align 4, !dbg !5912
  %48 = load i32, i32* %x.addr.i.i, align 4, !dbg !5913
  %shl.i.i = shl i32 %48, 8, !dbg !5914
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !5915
  %49 = load i32, i32* %x.addr.i.i, align 4, !dbg !5916
  %shr.i.i = lshr i32 %49, 8, !dbg !5917
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !5918
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !5919
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !5920
  %50 = load i32, i32* %x.addr.i.i, align 4, !dbg !5921
  %shr3.i.i = lshr i32 %50, 16, !dbg !5922
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !5923
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !5924
  %51 = load i32, i32* %x.addr.i.i, align 4, !dbg !5925
  %shr6.i.i = lshr i32 %51, 16, !dbg !5926
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !5927
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !5928
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !5929
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !5930
  %52 = load i32, i32* %re_index.i, align 4, !dbg !5931
  %and.i = and i32 %52, 7, !dbg !5932
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !5933
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !5934
  %53 = load i32, i32* %re_cache.i, align 4, !dbg !5935
  %54 = load i32, i32* %bits.addr.i, align 4, !dbg !5936
  %conv.i = trunc i32 %54 to i8, !dbg !5936
  %call2.i = call i32 @NEG_USR32(i32 %53, i8 signext %conv.i) #8, !dbg !5937
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !5938
  %55 = load i32, i32* %index1.i, align 4, !dbg !5939
  %idxprom.i = zext i32 %55 to i64, !dbg !5940
  %56 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5940
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %56, i64 %idxprom.i, !dbg !5940
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5940
  %57 = load i16, i16* %arrayidx3.i, align 2, !dbg !5940
  %conv4.i = sext i16 %57 to i32, !dbg !5940
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !5941
  %58 = load i32, i32* %index1.i, align 4, !dbg !5942
  %idxprom5.i = zext i32 %58 to i64, !dbg !5943
  %59 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5943
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %59, i64 %idxprom5.i, !dbg !5943
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !5943
  %60 = load i16, i16* %arrayidx7.i, align 2, !dbg !5943
  %conv8.i = sext i16 %60 to i32, !dbg !5943
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !5944
  %61 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5945
  %cmp.i = icmp sgt i32 %61, 1, !dbg !5946
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !5947

land.lhs.true.i:                                  ; preds = %for.body31
  %62 = load i32, i32* %n.i, align 4, !dbg !5948
  %cmp10.i = icmp slt i32 %62, 0, !dbg !5949
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !5950

if.then.i:                                        ; preds = %land.lhs.true.i
  %63 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5951
  %64 = load i32, i32* %re_index.i, align 4, !dbg !5952
  %65 = load i32, i32* %bits.addr.i, align 4, !dbg !5953
  %add.i = add i32 %64, %65, !dbg !5954
  %cmp12.i = icmp ugt i32 %63, %add.i, !dbg !5955
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !5956

cond.true.i:                                      ; preds = %if.then.i
  %66 = load i32, i32* %re_index.i, align 4, !dbg !5957
  %67 = load i32, i32* %bits.addr.i, align 4, !dbg !5958
  %add14.i = add i32 %66, %67, !dbg !5959
  br label %cond.end.i, !dbg !5960

cond.false.i:                                     ; preds = %if.then.i
  %68 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5961
  br label %cond.end.i, !dbg !5962

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %68, %cond.false.i ], !dbg !5963
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5964
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5965
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %69, i32 0, i32 0, !dbg !5966
  %70 = load i8*, i8** %buffer15.i, align 8, !dbg !5966
  %71 = load i32, i32* %re_index.i, align 4, !dbg !5967
  %shr16.i = lshr i32 %71, 3, !dbg !5968
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !5969
  %add.ptr18.i = getelementptr inbounds i8, i8* %70, i64 %idx.ext17.i, !dbg !5969
  %72 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !5970
  %l19.i = bitcast %union.unaligned_32* %72 to i32*, !dbg !5970
  %73 = load i32, i32* %l19.i, align 1, !dbg !5970
  store i32 %73, i32* %x.addr.i81.i, align 4, !dbg !5971
  %74 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5972
  %shl.i82.i = shl i32 %74, 8, !dbg !5973
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !5974
  %75 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5975
  %shr.i84.i = lshr i32 %75, 8, !dbg !5976
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !5977
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !5978
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !5979
  %76 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5980
  %shr3.i88.i = lshr i32 %76, 16, !dbg !5981
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !5982
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !5983
  %77 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5984
  %shr6.i91.i = lshr i32 %77, 16, !dbg !5985
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !5986
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !5987
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !5988
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !5989
  %78 = load i32, i32* %re_index.i, align 4, !dbg !5990
  %and21.i = and i32 %78, 7, !dbg !5991
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !5992
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !5993
  %79 = load i32, i32* %n.i, align 4, !dbg !5994
  %sub.i = sub nsw i32 0, %79, !dbg !5995
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5996
  %80 = load i32, i32* %re_cache.i, align 4, !dbg !5997
  %81 = load i32, i32* %nb_bits.i, align 4, !dbg !5998
  %conv23.i = trunc i32 %81 to i8, !dbg !5998
  %call24.i = call i32 @NEG_USR32(i32 %80, i8 signext %conv23.i) #8, !dbg !5999
  %82 = load i32, i32* %code.i, align 4, !dbg !6000
  %add25.i = add i32 %call24.i, %82, !dbg !6001
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !6002
  %83 = load i32, i32* %index1.i, align 4, !dbg !6003
  %idxprom26.i = zext i32 %83 to i64, !dbg !6004
  %84 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6004
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %84, i64 %idxprom26.i, !dbg !6004
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !6004
  %85 = load i16, i16* %arrayidx28.i, align 2, !dbg !6004
  %conv29.i = sext i16 %85 to i32, !dbg !6004
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !6005
  %86 = load i32, i32* %index1.i, align 4, !dbg !6006
  %idxprom30.i = zext i32 %86 to i64, !dbg !6007
  %87 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6007
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idxprom30.i, !dbg !6007
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !6007
  %88 = load i16, i16* %arrayidx32.i, align 2, !dbg !6007
  %conv33.i = sext i16 %88 to i32, !dbg !6007
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !6008
  %89 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6009
  %cmp34.i = icmp sgt i32 %89, 2, !dbg !6010
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !6011

land.lhs.true36.i:                                ; preds = %cond.end.i
  %90 = load i32, i32* %n.i, align 4, !dbg !6012
  %cmp37.i = icmp slt i32 %90, 0, !dbg !6013
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !6014

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6015
  %92 = load i32, i32* %re_index.i, align 4, !dbg !6016
  %93 = load i32, i32* %nb_bits.i, align 4, !dbg !6017
  %add40.i = add i32 %92, %93, !dbg !6018
  %cmp41.i = icmp ugt i32 %91, %add40.i, !dbg !6019
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !6020

cond.true43.i:                                    ; preds = %if.then39.i
  %94 = load i32, i32* %re_index.i, align 4, !dbg !6021
  %95 = load i32, i32* %nb_bits.i, align 4, !dbg !6022
  %add44.i = add i32 %94, %95, !dbg !6023
  br label %cond.end46.i, !dbg !6024

cond.false45.i:                                   ; preds = %if.then39.i
  %96 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6025
  br label %cond.end46.i, !dbg !6026

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %96, %cond.false45.i ], !dbg !6027
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !6028
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6029
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %97, i32 0, i32 0, !dbg !6030
  %98 = load i8*, i8** %buffer48.i, align 8, !dbg !6030
  %99 = load i32, i32* %re_index.i, align 4, !dbg !6031
  %shr49.i = lshr i32 %99, 3, !dbg !6032
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !6033
  %add.ptr51.i = getelementptr inbounds i8, i8* %98, i64 %idx.ext50.i, !dbg !6033
  %100 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !6034
  %l52.i = bitcast %union.unaligned_32* %100 to i32*, !dbg !6034
  %101 = load i32, i32* %l52.i, align 1, !dbg !6034
  store i32 %101, i32* %x.addr.i96.i, align 4, !dbg !6035
  %102 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6036
  %shl.i97.i = shl i32 %102, 8, !dbg !6037
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !6038
  %103 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6039
  %shr.i99.i = lshr i32 %103, 8, !dbg !6040
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !6041
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !6042
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !6043
  %104 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6044
  %shr3.i103.i = lshr i32 %104, 16, !dbg !6045
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !6046
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !6047
  %105 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6048
  %shr6.i106.i = lshr i32 %105, 16, !dbg !6049
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !6050
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !6051
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !6052
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !6053
  %106 = load i32, i32* %re_index.i, align 4, !dbg !6054
  %and54.i = and i32 %106, 7, !dbg !6055
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !6056
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !6057
  %107 = load i32, i32* %n.i, align 4, !dbg !6058
  %sub56.i = sub nsw i32 0, %107, !dbg !6059
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !6060
  %108 = load i32, i32* %re_cache.i, align 4, !dbg !6061
  %109 = load i32, i32* %nb_bits.i, align 4, !dbg !6062
  %conv57.i = trunc i32 %109 to i8, !dbg !6062
  %call58.i = call i32 @NEG_USR32(i32 %108, i8 signext %conv57.i) #8, !dbg !6063
  %110 = load i32, i32* %code.i, align 4, !dbg !6064
  %add59.i = add i32 %call58.i, %110, !dbg !6065
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6066
  %111 = load i32, i32* %index1.i, align 4, !dbg !6067
  %idxprom60.i = zext i32 %111 to i64, !dbg !6068
  %112 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6068
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %112, i64 %idxprom60.i, !dbg !6068
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6068
  %113 = load i16, i16* %arrayidx62.i, align 2, !dbg !6068
  %conv63.i = sext i16 %113 to i32, !dbg !6068
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6069
  %114 = load i32, i32* %index1.i, align 4, !dbg !6070
  %idxprom64.i = zext i32 %114 to i64, !dbg !6071
  %115 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6071
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %115, i64 %idxprom64.i, !dbg !6071
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6071
  %116 = load i16, i16* %arrayidx66.i, align 2, !dbg !6071
  %conv67.i = sext i16 %116 to i32, !dbg !6071
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6072
  br label %if.end.i, !dbg !6073

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6074

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body31
  %117 = load i32, i32* %n.i, align 4, !dbg !6075
  %118 = load i32, i32* %re_cache.i, align 4, !dbg !6076
  %shl70.i = shl i32 %118, %117, !dbg !6076
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6076
  %119 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6077
  %120 = load i32, i32* %re_index.i, align 4, !dbg !6078
  %121 = load i32, i32* %n.i, align 4, !dbg !6079
  %add71.i = add i32 %120, %121, !dbg !6080
  %cmp72.i = icmp ugt i32 %119, %add71.i, !dbg !6081
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6082

cond.true74.i:                                    ; preds = %if.end68.i
  %122 = load i32, i32* %re_index.i, align 4, !dbg !6083
  %123 = load i32, i32* %n.i, align 4, !dbg !6084
  %add75.i = add i32 %122, %123, !dbg !6085
  br label %get_vlc2.exit, !dbg !6086

cond.false76.i:                                   ; preds = %if.end68.i
  %124 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6087
  br label %get_vlc2.exit, !dbg !6088

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %124, %cond.false76.i ], !dbg !6089
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6090
  %125 = load i32, i32* %re_index.i, align 4, !dbg !6091
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6092
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %126, i32 0, i32 2, !dbg !6093
  store i32 %125, i32* %index80.i, align 8, !dbg !6094
  %127 = load i32, i32* %code.i, align 4, !dbg !6095
  %conv32 = trunc i32 %127 to i16, !dbg !5901
  store i16 %conv32, i16* %val, align 2, !dbg !5895
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6096, metadata !2064), !dbg !6098
  store i32 0, i32* %k, align 4, !dbg !6098
  br label %for.cond33, !dbg !6099

for.cond33:                                       ; preds = %for.inc, %get_vlc2.exit
  %128 = load i32, i32* %k, align 4, !dbg !6100
  %129 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !6103
  %value_cnt = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %129, i32 0, i32 3, !dbg !6104
  %130 = load i32, i32* %value_cnt, align 4, !dbg !6104
  %cmp34 = icmp slt i32 %128, %130, !dbg !6105
  br i1 %cmp34, label %for.body36, label %for.end, !dbg !6106

for.body36:                                       ; preds = %for.cond33
  %131 = load i16, i16* %val, align 2, !dbg !6107
  %conv37 = zext i16 %131 to i32, !dbg !6107
  %132 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !6109
  %value_bits = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %132, i32 0, i32 5, !dbg !6110
  %133 = load i32, i32* %value_bits, align 4, !dbg !6110
  %call38 = call i32 @sign_extend(i32 %conv37, i32 %133) #2, !dbg !6111
  %134 = load i32, i32* %k, align 4, !dbg !6112
  %idxprom39 = sext i32 %134 to i64, !dbg !6113
  %135 = load i32*, i32** %coeffs, align 8, !dbg !6113
  %arrayidx40 = getelementptr inbounds i32, i32* %135, i64 %idxprom39, !dbg !6113
  store i32 %call38, i32* %arrayidx40, align 4, !dbg !6114
  %136 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !6115
  %value_bits41 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %136, i32 0, i32 5, !dbg !6116
  %137 = load i32, i32* %value_bits41, align 4, !dbg !6116
  %138 = load i16, i16* %val, align 2, !dbg !6117
  %conv42 = zext i16 %138 to i32, !dbg !6117
  %shr43 = ashr i32 %conv42, %137, !dbg !6117
  %conv44 = trunc i32 %shr43 to i16, !dbg !6117
  store i16 %conv44, i16* %val, align 2, !dbg !6117
  br label %for.inc, !dbg !6118

for.inc:                                          ; preds = %for.body36
  %139 = load i32, i32* %k, align 4, !dbg !6119
  %inc = add nsw i32 %139, 1, !dbg !6119
  store i32 %inc, i32* %k, align 4, !dbg !6119
  br label %for.cond33, !dbg !6121, !llvm.loop !6122

for.end:                                          ; preds = %for.cond33
  %140 = load %struct.HuffmanCodebook*, %struct.HuffmanCodebook** %huff, align 8, !dbg !6124
  %value_cnt45 = getelementptr inbounds %struct.HuffmanCodebook, %struct.HuffmanCodebook* %140, i32 0, i32 3, !dbg !6125
  %141 = load i32, i32* %value_cnt45, align 4, !dbg !6125
  %142 = load i32*, i32** %coeffs, align 8, !dbg !6126
  %idx.ext = sext i32 %141 to i64, !dbg !6126
  %add.ptr = getelementptr inbounds i32, i32* %142, i64 %idx.ext, !dbg !6126
  store i32* %add.ptr, i32** %coeffs, align 8, !dbg !6126
  br label %for.inc46, !dbg !6127

for.inc46:                                        ; preds = %for.end
  %143 = load i32, i32* %j, align 4, !dbg !6128
  %inc47 = add nsw i32 %143, 1, !dbg !6128
  store i32 %inc47, i32* %j, align 4, !dbg !6128
  br label %for.cond28, !dbg !6130, !llvm.loop !6131

for.end48:                                        ; preds = %for.cond28
  br label %if.end, !dbg !6133

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j49, metadata !6134, metadata !2064), !dbg !6137
  store i32 0, i32* %j49, align 4, !dbg !6137
  br label %for.cond50, !dbg !6138

for.cond50:                                       ; preds = %for.inc58, %if.else
  %144 = load i32, i32* %j49, align 4, !dbg !6139
  %145 = load i32, i32* %bands, align 4, !dbg !6142
  %cmp51 = icmp slt i32 %144, %145, !dbg !6143
  br i1 %cmp51, label %for.body53, label %for.end60, !dbg !6144

for.body53:                                       ; preds = %for.cond50
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6145
  %147 = load i32, i32* %prec, align 4, !dbg !6146
  %call54 = call i32 @get_bits(%struct.GetBitContext* %146, i32 %147), !dbg !6147
  %148 = load i32, i32* %prec, align 4, !dbg !6148
  %call55 = call i32 @sign_extend(i32 %call54, i32 %148) #2, !dbg !6149
  %149 = load i32, i32* %j49, align 4, !dbg !6150
  %idxprom56 = sext i32 %149 to i64, !dbg !6151
  %150 = load i32*, i32** %coeffs, align 8, !dbg !6151
  %arrayidx57 = getelementptr inbounds i32, i32* %150, i64 %idxprom56, !dbg !6151
  store i32 %call55, i32* %arrayidx57, align 4, !dbg !6152
  br label %for.inc58, !dbg !6151

for.inc58:                                        ; preds = %for.body53
  %151 = load i32, i32* %j49, align 4, !dbg !6153
  %inc59 = add nsw i32 %151, 1, !dbg !6153
  store i32 %inc59, i32* %j49, align 4, !dbg !6153
  br label %for.cond50, !dbg !6155, !llvm.loop !6156

for.end60:                                        ; preds = %for.cond50
  br label %if.end

if.end:                                           ; preds = %for.end60, %for.end48
  br label %for.inc61, !dbg !6158

for.inc61:                                        ; preds = %if.end
  %152 = load i32, i32* %i, align 4, !dbg !6159
  %inc62 = add nsw i32 %152, 1, !dbg !6159
  store i32 %inc62, i32* %i, align 4, !dbg !6159
  br label %for.cond, !dbg !6161, !llvm.loop !6162

for.end63:                                        ; preds = %for.cond
  ret void, !dbg !6164
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @read_coeffs_fine(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, %struct.ATRAC9ChannelData* %c, %struct.GetBitContext* %gb) #4 !dbg !6165 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %len = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !6166, metadata !2064), !dbg !6167
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !6168, metadata !2064), !dbg !6169
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !6170, metadata !2064), !dbg !6171
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6172, metadata !2064), !dbg !6173
  %0 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6174
  %q_coeffs_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %0, i32 0, i32 10, !dbg !6175
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_fine, i32 0, i32 0, !dbg !6176
  %1 = bitcast i32* %arraydecay to i8*, !dbg !6176
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 1024, i32 16, i1 false), !dbg !6176
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6177, metadata !2064), !dbg !6179
  store i32 0, i32* %i, align 4, !dbg !6179
  br label %for.cond, !dbg !6180

for.cond:                                         ; preds = %for.inc18, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6181
  %3 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6184
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %3, i32 0, i32 1, !dbg !6185
  %4 = load i32, i32* %q_unit_cnt, align 4, !dbg !6185
  %cmp = icmp slt i32 %2, %4, !dbg !6186
  br i1 %cmp, label %for.body, label %for.end20, !dbg !6187

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6188, metadata !2064), !dbg !6190
  %5 = load i32, i32* %i, align 4, !dbg !6191
  %add = add nsw i32 %5, 0, !dbg !6192
  %idxprom = sext i32 %add to i64, !dbg !6193
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom, !dbg !6193
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6193
  store i32 %6, i32* %start, align 4, !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6194, metadata !2064), !dbg !6195
  %7 = load i32, i32* %i, align 4, !dbg !6196
  %add1 = add nsw i32 %7, 1, !dbg !6197
  %idxprom2 = sext i32 %add1 to i64, !dbg !6198
  %arrayidx3 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom2, !dbg !6198
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !6198
  store i32 %8, i32* %end, align 4, !dbg !6195
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6199, metadata !2064), !dbg !6200
  %9 = load i32, i32* %i, align 4, !dbg !6201
  %idxprom4 = sext i32 %9 to i64, !dbg !6202
  %10 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6202
  %precision_fine = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %10, i32 0, i32 6, !dbg !6203
  %arrayidx5 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine, i64 0, i64 %idxprom4, !dbg !6202
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !6202
  %add6 = add nsw i32 %11, 1, !dbg !6204
  store i32 %add6, i32* %len, align 4, !dbg !6200
  %12 = load i32, i32* %i, align 4, !dbg !6205
  %idxprom7 = sext i32 %12 to i64, !dbg !6207
  %13 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6207
  %precision_fine8 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %13, i32 0, i32 6, !dbg !6208
  %arrayidx9 = getelementptr inbounds [30 x i32], [30 x i32]* %precision_fine8, i64 0, i64 %idxprom7, !dbg !6207
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !6207
  %cmp10 = icmp sle i32 %14, 0, !dbg !6209
  br i1 %cmp10, label %if.then, label %if.end, !dbg !6210

if.then:                                          ; preds = %for.body
  br label %for.inc18, !dbg !6211

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6212, metadata !2064), !dbg !6214
  %15 = load i32, i32* %start, align 4, !dbg !6215
  store i32 %15, i32* %j, align 4, !dbg !6214
  br label %for.cond11, !dbg !6216

for.cond11:                                       ; preds = %for.inc, %if.end
  %16 = load i32, i32* %j, align 4, !dbg !6217
  %17 = load i32, i32* %end, align 4, !dbg !6220
  %cmp12 = icmp slt i32 %16, %17, !dbg !6221
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !6222

for.body13:                                       ; preds = %for.cond11
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6223
  %19 = load i32, i32* %len, align 4, !dbg !6224
  %call = call i32 @get_bits(%struct.GetBitContext* %18, i32 %19), !dbg !6225
  %20 = load i32, i32* %len, align 4, !dbg !6226
  %call14 = call i32 @sign_extend(i32 %call, i32 %20) #2, !dbg !6227
  %21 = load i32, i32* %j, align 4, !dbg !6228
  %idxprom15 = sext i32 %21 to i64, !dbg !6229
  %22 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6229
  %q_coeffs_fine16 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %22, i32 0, i32 10, !dbg !6230
  %arrayidx17 = getelementptr inbounds [256 x i32], [256 x i32]* %q_coeffs_fine16, i64 0, i64 %idxprom15, !dbg !6229
  store i32 %call14, i32* %arrayidx17, align 4, !dbg !6231
  br label %for.inc, !dbg !6229

for.inc:                                          ; preds = %for.body13
  %23 = load i32, i32* %j, align 4, !dbg !6232
  %inc = add nsw i32 %23, 1, !dbg !6232
  store i32 %inc, i32* %j, align 4, !dbg !6232
  br label %for.cond11, !dbg !6234, !llvm.loop !6235

for.end:                                          ; preds = %for.cond11
  br label %for.inc18, !dbg !6237

for.inc18:                                        ; preds = %for.end, %if.then
  %24 = load i32, i32* %i, align 4, !dbg !6238
  %inc19 = add nsw i32 %24, 1, !dbg !6238
  store i32 %inc19, i32* %i, align 4, !dbg !6238
  br label %for.cond, !dbg !6240, !llvm.loop !6241

for.end20:                                        ; preds = %for.cond
  ret void, !dbg !6243
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @apply_intensity_stereo(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, i32 %stereo) #4 !dbg !6244 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %stereo.addr = alloca i32, align 4
  %src = alloca float*, align 8
  %dst = alloca float*, align 8
  %i = alloca i32, align 4
  %sign = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !6245, metadata !2064), !dbg !6246
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !6247, metadata !2064), !dbg !6248
  store i32 %stereo, i32* %stereo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.addr, metadata !6249, metadata !2064), !dbg !6250
  call void @llvm.dbg.declare(metadata float** %src, metadata !6251, metadata !2064), !dbg !6252
  %0 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6253
  %cpe_base_channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %0, i32 0, i32 11, !dbg !6254
  %1 = load i32, i32* %cpe_base_channel, align 32, !dbg !6254
  %idxprom = sext i32 %1 to i64, !dbg !6255
  %2 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6255
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %2, i32 0, i32 0, !dbg !6256
  %arrayidx = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 %idxprom, !dbg !6255
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx, i32 0, i32 12, !dbg !6257
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i32 0, i32 0, !dbg !6255
  store float* %arraydecay, float** %src, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata float** %dst, metadata !6258, metadata !2064), !dbg !6259
  %3 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6260
  %cpe_base_channel1 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %3, i32 0, i32 11, !dbg !6261
  %4 = load i32, i32* %cpe_base_channel1, align 32, !dbg !6261
  %tobool = icmp ne i32 %4, 0, !dbg !6262
  %lnot = xor i1 %tobool, true, !dbg !6262
  %lnot.ext = zext i1 %lnot to i32, !dbg !6262
  %idxprom2 = sext i32 %lnot.ext to i64, !dbg !6263
  %5 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6263
  %channel3 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %5, i32 0, i32 0, !dbg !6264
  %arrayidx4 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel3, i64 0, i64 %idxprom2, !dbg !6263
  %coeffs5 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %arrayidx4, i32 0, i32 12, !dbg !6265
  %arraydecay6 = getelementptr inbounds [256 x float], [256 x float]* %coeffs5, i32 0, i32 0, !dbg !6263
  store float* %arraydecay6, float** %dst, align 8, !dbg !6259
  %6 = load i32, i32* %stereo.addr, align 4, !dbg !6266
  %tobool7 = icmp ne i32 %6, 0, !dbg !6266
  br i1 %tobool7, label %if.end, label %if.then, !dbg !6268

if.then:                                          ; preds = %entry
  br label %for.end29, !dbg !6269

if.end:                                           ; preds = %entry
  %7 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6270
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %7, i32 0, i32 2, !dbg !6272
  %8 = load i32, i32* %q_unit_cnt, align 4, !dbg !6272
  %9 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6273
  %stereo_q_unit = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %9, i32 0, i32 4, !dbg !6274
  %10 = load i32, i32* %stereo_q_unit, align 4, !dbg !6274
  %cmp = icmp sle i32 %8, %10, !dbg !6275
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6276

if.then8:                                         ; preds = %if.end
  br label %for.end29, !dbg !6277

if.end9:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6278, metadata !2064), !dbg !6280
  %11 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6281
  %stereo_q_unit10 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %11, i32 0, i32 4, !dbg !6282
  %12 = load i32, i32* %stereo_q_unit10, align 4, !dbg !6282
  store i32 %12, i32* %i, align 4, !dbg !6280
  br label %for.cond, !dbg !6283

for.cond:                                         ; preds = %for.inc27, %if.end9
  %13 = load i32, i32* %i, align 4, !dbg !6284
  %14 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6287
  %q_unit_cnt11 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %14, i32 0, i32 2, !dbg !6288
  %15 = load i32, i32* %q_unit_cnt11, align 4, !dbg !6288
  %cmp12 = icmp slt i32 %13, %15, !dbg !6289
  br i1 %cmp12, label %for.body, label %for.end29, !dbg !6290

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6291, metadata !2064), !dbg !6293
  %16 = load i32, i32* %i, align 4, !dbg !6294
  %idxprom13 = sext i32 %16 to i64, !dbg !6295
  %17 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6295
  %is_signs = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %17, i32 0, i32 12, !dbg !6296
  %arrayidx14 = getelementptr inbounds [30 x i32], [30 x i32]* %is_signs, i64 0, i64 %idxprom13, !dbg !6295
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !6295
  store i32 %18, i32* %sign, align 4, !dbg !6293
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6297, metadata !2064), !dbg !6298
  %19 = load i32, i32* %i, align 4, !dbg !6299
  %add = add nsw i32 %19, 0, !dbg !6300
  %idxprom15 = sext i32 %add to i64, !dbg !6301
  %arrayidx16 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom15, !dbg !6301
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !6301
  store i32 %20, i32* %start, align 4, !dbg !6298
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6302, metadata !2064), !dbg !6303
  %21 = load i32, i32* %i, align 4, !dbg !6304
  %add17 = add nsw i32 %21, 1, !dbg !6305
  %idxprom18 = sext i32 %add17 to i64, !dbg !6306
  %arrayidx19 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom18, !dbg !6306
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !6306
  store i32 %22, i32* %end, align 4, !dbg !6303
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6307, metadata !2064), !dbg !6309
  %23 = load i32, i32* %start, align 4, !dbg !6310
  store i32 %23, i32* %j, align 4, !dbg !6309
  br label %for.cond20, !dbg !6311

for.cond20:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4, !dbg !6312
  %25 = load i32, i32* %end, align 4, !dbg !6315
  %cmp21 = icmp slt i32 %24, %25, !dbg !6316
  br i1 %cmp21, label %for.body22, label %for.end, !dbg !6317

for.body22:                                       ; preds = %for.cond20
  %26 = load i32, i32* %sign, align 4, !dbg !6318
  %conv = sitofp i32 %26 to float, !dbg !6318
  %27 = load i32, i32* %j, align 4, !dbg !6319
  %idxprom23 = sext i32 %27 to i64, !dbg !6320
  %28 = load float*, float** %src, align 8, !dbg !6320
  %arrayidx24 = getelementptr inbounds float, float* %28, i64 %idxprom23, !dbg !6320
  %29 = load float, float* %arrayidx24, align 4, !dbg !6320
  %mul = fmul float %conv, %29, !dbg !6321
  %30 = load i32, i32* %j, align 4, !dbg !6322
  %idxprom25 = sext i32 %30 to i64, !dbg !6323
  %31 = load float*, float** %dst, align 8, !dbg !6323
  %arrayidx26 = getelementptr inbounds float, float* %31, i64 %idxprom25, !dbg !6323
  store float %mul, float* %arrayidx26, align 4, !dbg !6324
  br label %for.inc, !dbg !6323

for.inc:                                          ; preds = %for.body22
  %32 = load i32, i32* %j, align 4, !dbg !6325
  %inc = add nsw i32 %32, 1, !dbg !6325
  store i32 %inc, i32* %j, align 4, !dbg !6325
  br label %for.cond20, !dbg !6327, !llvm.loop !6328

for.end:                                          ; preds = %for.cond20
  br label %for.inc27, !dbg !6330

for.inc27:                                        ; preds = %for.end
  %33 = load i32, i32* %i, align 4, !dbg !6331
  %inc28 = add nsw i32 %33, 1, !dbg !6331
  store i32 %inc28, i32* %i, align 4, !dbg !6331
  br label %for.cond, !dbg !6333, !llvm.loop !6334

for.end29:                                        ; preds = %if.then, %if.then8, %for.cond
  ret void, !dbg !6336
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @apply_band_extension(%struct.ATRAC9Context* %s, %struct.ATRAC9BlockData* %b, i32 %stereo) #4 !dbg !6337 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %b.addr = alloca %struct.ATRAC9BlockData*, align 8
  %stereo.addr = alloca i32, align 4
  %g_units = alloca [4 x i32], align 16
  %g_bins = alloca [4 x i32], align 16
  %ch = alloca i32, align 4
  %c = alloca %struct.ATRAC9ChannelData*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sf = alloca [6 x float], align 16
  %l = alloca i32, align 4
  %n_start = alloca i32, align 4
  %n_cnt = alloca i32, align 4
  %sf160 = alloca [6 x float], align 16
  %i161 = alloca i32, align 4
  %g_sf = alloca [2 x float], align 4
  %i198 = alloca i32, align 4
  %j203 = alloca i32, align 4
  %scale = alloca float, align 4
  %rate = alloca float, align 4
  %i238 = alloca i32, align 4
  %m = alloca float, align 4
  %g_sf258 = alloca [3 x float], align 4
  %i265 = alloca i32, align 4
  %j270 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !6338, metadata !2064), !dbg !6339
  store %struct.ATRAC9BlockData* %b, %struct.ATRAC9BlockData** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9BlockData** %b.addr, metadata !6340, metadata !2064), !dbg !6341
  store i32 %stereo, i32* %stereo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.addr, metadata !6342, metadata !2064), !dbg !6343
  call void @llvm.dbg.declare(metadata [4 x i32]* %g_units, metadata !6344, metadata !2064), !dbg !6346
  %arrayinit.begin = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6347
  %0 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6348
  %q_unit_cnt = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %0, i32 0, i32 2, !dbg !6349
  %1 = load i32, i32* %q_unit_cnt, align 4, !dbg !6349
  store i32 %1, i32* %arrayinit.begin, align 4, !dbg !6347
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !6347
  %2 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6350
  %q_unit_cnt1 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %2, i32 0, i32 2, !dbg !6351
  %3 = load i32, i32* %q_unit_cnt1, align 4, !dbg !6351
  %sub = sub nsw i32 %3, 13, !dbg !6352
  %idxprom = sext i32 %sub to i64, !dbg !6353
  %arrayidx = getelementptr inbounds [8 x [3 x i8]], [8 x [3 x i8]]* @at9_tab_band_ext_group, i64 0, i64 %idxprom, !dbg !6353
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !6353
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6353
  %conv = zext i8 %4 to i32, !dbg !6353
  store i32 %conv, i32* %arrayinit.element, align 4, !dbg !6347
  %arrayinit.element3 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !6347
  %5 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6354
  %q_unit_cnt4 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %5, i32 0, i32 2, !dbg !6355
  %6 = load i32, i32* %q_unit_cnt4, align 4, !dbg !6355
  %sub5 = sub nsw i32 %6, 13, !dbg !6356
  %idxprom6 = sext i32 %sub5 to i64, !dbg !6357
  %arrayidx7 = getelementptr inbounds [8 x [3 x i8]], [8 x [3 x i8]]* @at9_tab_band_ext_group, i64 0, i64 %idxprom6, !dbg !6357
  %arrayidx8 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx7, i64 0, i64 1, !dbg !6357
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !6357
  %conv9 = zext i8 %7 to i32, !dbg !6357
  store i32 %conv9, i32* %arrayinit.element3, align 4, !dbg !6347
  %arrayinit.element10 = getelementptr inbounds i32, i32* %arrayinit.element3, i64 1, !dbg !6347
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 2, !dbg !6358
  %8 = load i32, i32* %arrayidx11, align 8, !dbg !6358
  %cmp = icmp sgt i32 %8, 22, !dbg !6359
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6360

cond.true:                                        ; preds = %entry
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 2, !dbg !6361
  %9 = load i32, i32* %arrayidx13, align 8, !dbg !6361
  br label %cond.end, !dbg !6363

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 22, %cond.false ], !dbg !6366
  store i32 %cond, i32* %arrayinit.element10, align 4, !dbg !6368
  call void @llvm.dbg.declare(metadata [4 x i32]* %g_bins, metadata !6369, metadata !2064), !dbg !6370
  %arrayinit.begin14 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 0, !dbg !6371
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6372
  %10 = load i32, i32* %arrayidx15, align 16, !dbg !6372
  %idxprom16 = sext i32 %10 to i64, !dbg !6373
  %arrayidx17 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom16, !dbg !6373
  %11 = load i32, i32* %arrayidx17, align 4, !dbg !6373
  store i32 %11, i32* %arrayinit.begin14, align 4, !dbg !6371
  %arrayinit.element18 = getelementptr inbounds i32, i32* %arrayinit.begin14, i64 1, !dbg !6371
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 1, !dbg !6374
  %12 = load i32, i32* %arrayidx19, align 4, !dbg !6374
  %idxprom20 = sext i32 %12 to i64, !dbg !6375
  %arrayidx21 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom20, !dbg !6375
  %13 = load i32, i32* %arrayidx21, align 4, !dbg !6375
  store i32 %13, i32* %arrayinit.element18, align 4, !dbg !6371
  %arrayinit.element22 = getelementptr inbounds i32, i32* %arrayinit.element18, i64 1, !dbg !6371
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 2, !dbg !6376
  %14 = load i32, i32* %arrayidx23, align 8, !dbg !6376
  %idxprom24 = sext i32 %14 to i64, !dbg !6377
  %arrayidx25 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom24, !dbg !6377
  %15 = load i32, i32* %arrayidx25, align 4, !dbg !6377
  store i32 %15, i32* %arrayinit.element22, align 4, !dbg !6371
  %arrayinit.element26 = getelementptr inbounds i32, i32* %arrayinit.element22, i64 1, !dbg !6371
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6378
  %16 = load i32, i32* %arrayidx27, align 4, !dbg !6378
  %idxprom28 = sext i32 %16 to i64, !dbg !6379
  %arrayidx29 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom28, !dbg !6379
  %17 = load i32, i32* %arrayidx29, align 4, !dbg !6379
  store i32 %17, i32* %arrayinit.element26, align 4, !dbg !6371
  %18 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6380
  %has_band_ext = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %18, i32 0, i32 5, !dbg !6382
  %19 = load i32, i32* %has_band_ext, align 16, !dbg !6382
  %tobool = icmp ne i32 %19, 0, !dbg !6380
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6383

lor.lhs.false:                                    ; preds = %cond.end
  %20 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6384
  %has_band_ext_data = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %20, i32 0, i32 6, !dbg !6386
  %21 = load i32, i32* %has_band_ext_data, align 4, !dbg !6386
  %tobool30 = icmp ne i32 %21, 0, !dbg !6384
  br i1 %tobool30, label %if.end, label %if.then, !dbg !6387

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  br label %for.end296, !dbg !6388

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6389, metadata !2064), !dbg !6391
  store i32 0, i32* %ch, align 4, !dbg !6391
  br label %for.cond, !dbg !6392

for.cond:                                         ; preds = %for.inc294, %if.end
  %22 = load i32, i32* %ch, align 4, !dbg !6393
  %23 = load i32, i32* %stereo.addr, align 4, !dbg !6396
  %cmp31 = icmp sle i32 %22, %23, !dbg !6397
  br i1 %cmp31, label %for.body, label %for.end296, !dbg !6398

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c, metadata !6399, metadata !2064), !dbg !6401
  %24 = load i32, i32* %ch, align 4, !dbg !6402
  %idxprom33 = sext i32 %24 to i64, !dbg !6403
  %25 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6403
  %channel = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %25, i32 0, i32 0, !dbg !6404
  %arrayidx34 = getelementptr inbounds [2 x %struct.ATRAC9ChannelData], [2 x %struct.ATRAC9ChannelData]* %channel, i64 0, i64 %idxprom33, !dbg !6403
  store %struct.ATRAC9ChannelData* %arrayidx34, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6401
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6405, metadata !2064), !dbg !6407
  store i32 0, i32* %i, align 4, !dbg !6407
  br label %for.cond35, !dbg !6408

for.cond35:                                       ; preds = %for.inc61, %for.body
  %26 = load i32, i32* %i, align 4, !dbg !6409
  %cmp36 = icmp slt i32 %26, 3, !dbg !6412
  br i1 %cmp36, label %for.body38, label %for.end63, !dbg !6413

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6414, metadata !2064), !dbg !6416
  store i32 0, i32* %j, align 4, !dbg !6416
  br label %for.cond39, !dbg !6417

for.cond39:                                       ; preds = %for.inc, %for.body38
  %27 = load i32, i32* %j, align 4, !dbg !6418
  %28 = load i32, i32* %i, align 4, !dbg !6421
  %add = add nsw i32 %28, 1, !dbg !6422
  %idxprom40 = sext i32 %add to i64, !dbg !6423
  %arrayidx41 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom40, !dbg !6423
  %29 = load i32, i32* %arrayidx41, align 4, !dbg !6423
  %30 = load i32, i32* %i, align 4, !dbg !6424
  %add42 = add nsw i32 %30, 0, !dbg !6425
  %idxprom43 = sext i32 %add42 to i64, !dbg !6426
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom43, !dbg !6426
  %31 = load i32, i32* %arrayidx44, align 4, !dbg !6426
  %sub45 = sub nsw i32 %29, %31, !dbg !6427
  %cmp46 = icmp slt i32 %27, %sub45, !dbg !6428
  br i1 %cmp46, label %for.body48, label %for.end, !dbg !6429

for.body48:                                       ; preds = %for.cond39
  %32 = load i32, i32* %i, align 4, !dbg !6430
  %idxprom49 = sext i32 %32 to i64, !dbg !6431
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom49, !dbg !6431
  %33 = load i32, i32* %arrayidx50, align 4, !dbg !6431
  %34 = load i32, i32* %j, align 4, !dbg !6432
  %sub51 = sub nsw i32 %33, %34, !dbg !6433
  %sub52 = sub nsw i32 %sub51, 1, !dbg !6434
  %idxprom53 = sext i32 %sub52 to i64, !dbg !6435
  %35 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6435
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %35, i32 0, i32 12, !dbg !6436
  %arrayidx54 = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i64 0, i64 %idxprom53, !dbg !6435
  %36 = load float, float* %arrayidx54, align 4, !dbg !6435
  %37 = load i32, i32* %i, align 4, !dbg !6437
  %idxprom55 = sext i32 %37 to i64, !dbg !6438
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom55, !dbg !6438
  %38 = load i32, i32* %arrayidx56, align 4, !dbg !6438
  %39 = load i32, i32* %j, align 4, !dbg !6439
  %add57 = add nsw i32 %38, %39, !dbg !6440
  %idxprom58 = sext i32 %add57 to i64, !dbg !6441
  %40 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6441
  %coeffs59 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %40, i32 0, i32 12, !dbg !6442
  %arrayidx60 = getelementptr inbounds [256 x float], [256 x float]* %coeffs59, i64 0, i64 %idxprom58, !dbg !6441
  store float %36, float* %arrayidx60, align 4, !dbg !6443
  br label %for.inc, !dbg !6441

for.inc:                                          ; preds = %for.body48
  %41 = load i32, i32* %j, align 4, !dbg !6444
  %inc = add nsw i32 %41, 1, !dbg !6444
  store i32 %inc, i32* %j, align 4, !dbg !6444
  br label %for.cond39, !dbg !6446, !llvm.loop !6447

for.end:                                          ; preds = %for.cond39
  br label %for.inc61, !dbg !6449

for.inc61:                                        ; preds = %for.end
  %42 = load i32, i32* %i, align 4, !dbg !6451
  %inc62 = add nsw i32 %42, 1, !dbg !6451
  store i32 %inc62, i32* %i, align 4, !dbg !6451
  br label %for.cond35, !dbg !6453, !llvm.loop !6454

for.end63:                                        ; preds = %for.cond35
  %43 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6456
  %band_ext = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %43, i32 0, i32 0, !dbg !6457
  %44 = load i32, i32* %band_ext, align 32, !dbg !6457
  switch i32 %44, label %sw.epilog293 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb159
    i32 2, label %sw.bb187
    i32 3, label %sw.bb225
    i32 4, label %sw.bb253
  ], !dbg !6458

sw.bb:                                            ; preds = %for.end63
  call void @llvm.dbg.declare(metadata [6 x float]* %sf, metadata !6459, metadata !2064), !dbg !6463
  %45 = bitcast [6 x float]* %sf to i8*, !dbg !6463
  call void @llvm.memset.p0i8.i64(i8* %45, i8 0, i64 24, i32 16, i1 false), !dbg !6463
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6464, metadata !2064), !dbg !6465
  %arrayidx64 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6466
  %46 = load i32, i32* %arrayidx64, align 4, !dbg !6466
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6467
  %47 = load i32, i32* %arrayidx65, align 16, !dbg !6467
  %sub66 = sub nsw i32 %46, %47, !dbg !6468
  %sub67 = sub nsw i32 %sub66, 1, !dbg !6469
  store i32 %sub67, i32* %l, align 4, !dbg !6465
  call void @llvm.dbg.declare(metadata i32* %n_start, metadata !6470, metadata !2064), !dbg !6471
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6472
  %48 = load i32, i32* %arrayidx68, align 4, !dbg !6472
  %sub69 = sub nsw i32 %48, 1, !dbg !6473
  %idxprom70 = sext i32 %sub69 to i64, !dbg !6474
  %arrayidx71 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom70, !dbg !6474
  %49 = load i32, i32* %arrayidx71, align 4, !dbg !6474
  store i32 %49, i32* %n_start, align 4, !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %n_cnt, metadata !6475, metadata !2064), !dbg !6476
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6477
  %50 = load i32, i32* %arrayidx72, align 4, !dbg !6477
  %sub73 = sub nsw i32 %50, 1, !dbg !6478
  %idxprom74 = sext i32 %sub73 to i64, !dbg !6479
  %arrayidx75 = getelementptr inbounds [30 x i8], [30 x i8]* @at9_q_unit_to_coeff_cnt, i64 0, i64 %idxprom74, !dbg !6479
  %51 = load i8, i8* %arrayidx75, align 1, !dbg !6479
  %conv76 = zext i8 %51 to i32, !dbg !6479
  store i32 %conv76, i32* %n_cnt, align 4, !dbg !6476
  %52 = load %struct.ATRAC9BlockData*, %struct.ATRAC9BlockData** %b.addr, align 8, !dbg !6480
  %q_unit_cnt77 = getelementptr inbounds %struct.ATRAC9BlockData, %struct.ATRAC9BlockData* %52, i32 0, i32 2, !dbg !6481
  %53 = load i32, i32* %q_unit_cnt77, align 4, !dbg !6481
  %sub78 = sub nsw i32 %53, 13, !dbg !6482
  %idxprom79 = sext i32 %sub78 to i64, !dbg !6483
  %arrayidx80 = getelementptr inbounds [8 x [3 x i8]], [8 x [3 x i8]]* @at9_tab_band_ext_group, i64 0, i64 %idxprom79, !dbg !6483
  %arrayidx81 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx80, i64 0, i64 2, !dbg !6483
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !6483
  %conv82 = zext i8 %54 to i32, !dbg !6483
  switch i32 %conv82, label %sw.epilog [
    i32 3, label %sw.bb83
    i32 4, label %sw.bb108
    i32 5, label %sw.bb134
  ], !dbg !6484

sw.bb83:                                          ; preds = %sw.bb
  %55 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6485
  %band_ext_data = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %55, i32 0, i32 2, !dbg !6487
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data, i64 0, i64 0, !dbg !6485
  %56 = load i32, i32* %arrayidx84, align 8, !dbg !6485
  %idxprom85 = sext i32 %56 to i64, !dbg !6488
  %arrayidx86 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 0, i64 0), i64 0, i64 %idxprom85, !dbg !6488
  %57 = load float, float* %arrayidx86, align 4, !dbg !6488
  %arrayidx87 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 0, !dbg !6489
  store float %57, float* %arrayidx87, align 16, !dbg !6490
  %58 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6491
  %band_ext_data88 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %58, i32 0, i32 2, !dbg !6492
  %arrayidx89 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data88, i64 0, i64 0, !dbg !6491
  %59 = load i32, i32* %arrayidx89, align 8, !dbg !6491
  %idxprom90 = sext i32 %59 to i64, !dbg !6493
  %arrayidx91 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 0, i64 1), i64 0, i64 %idxprom90, !dbg !6493
  %60 = load float, float* %arrayidx91, align 4, !dbg !6493
  %arrayidx92 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 1, !dbg !6494
  store float %60, float* %arrayidx92, align 4, !dbg !6495
  %61 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6496
  %band_ext_data93 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %61, i32 0, i32 2, !dbg !6497
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data93, i64 0, i64 1, !dbg !6496
  %62 = load i32, i32* %arrayidx94, align 4, !dbg !6496
  %idxprom95 = sext i32 %62 to i64, !dbg !6498
  %arrayidx96 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 0, i64 2), i64 0, i64 %idxprom95, !dbg !6498
  %63 = load float, float* %arrayidx96, align 4, !dbg !6498
  %arrayidx97 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 2, !dbg !6499
  store float %63, float* %arrayidx97, align 8, !dbg !6500
  %64 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6501
  %band_ext_data98 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %64, i32 0, i32 2, !dbg !6502
  %arrayidx99 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data98, i64 0, i64 2, !dbg !6501
  %65 = load i32, i32* %arrayidx99, align 8, !dbg !6501
  %idxprom100 = sext i32 %65 to i64, !dbg !6503
  %arrayidx101 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 0, i64 3), i64 0, i64 %idxprom100, !dbg !6503
  %66 = load float, float* %arrayidx101, align 4, !dbg !6503
  %arrayidx102 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 3, !dbg !6504
  store float %66, float* %arrayidx102, align 4, !dbg !6505
  %67 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6506
  %band_ext_data103 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %67, i32 0, i32 2, !dbg !6507
  %arrayidx104 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data103, i64 0, i64 3, !dbg !6506
  %68 = load i32, i32* %arrayidx104, align 4, !dbg !6506
  %idxprom105 = sext i32 %68 to i64, !dbg !6508
  %arrayidx106 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 0, i64 4), i64 0, i64 %idxprom105, !dbg !6508
  %69 = load float, float* %arrayidx106, align 4, !dbg !6508
  %arrayidx107 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 4, !dbg !6509
  store float %69, float* %arrayidx107, align 16, !dbg !6510
  br label %sw.epilog, !dbg !6511

sw.bb108:                                         ; preds = %sw.bb
  %70 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6512
  %band_ext_data109 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %70, i32 0, i32 2, !dbg !6513
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data109, i64 0, i64 0, !dbg !6512
  %71 = load i32, i32* %arrayidx110, align 8, !dbg !6512
  %idxprom111 = sext i32 %71 to i64, !dbg !6514
  %arrayidx112 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 1, i64 0), i64 0, i64 %idxprom111, !dbg !6514
  %72 = load float, float* %arrayidx112, align 4, !dbg !6514
  %arrayidx113 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 0, !dbg !6515
  store float %72, float* %arrayidx113, align 16, !dbg !6516
  %73 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6517
  %band_ext_data114 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %73, i32 0, i32 2, !dbg !6518
  %arrayidx115 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data114, i64 0, i64 0, !dbg !6517
  %74 = load i32, i32* %arrayidx115, align 8, !dbg !6517
  %idxprom116 = sext i32 %74 to i64, !dbg !6519
  %arrayidx117 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 1, i64 1), i64 0, i64 %idxprom116, !dbg !6519
  %75 = load float, float* %arrayidx117, align 4, !dbg !6519
  %arrayidx118 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 1, !dbg !6520
  store float %75, float* %arrayidx118, align 4, !dbg !6521
  %76 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6522
  %band_ext_data119 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %76, i32 0, i32 2, !dbg !6523
  %arrayidx120 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data119, i64 0, i64 1, !dbg !6522
  %77 = load i32, i32* %arrayidx120, align 4, !dbg !6522
  %idxprom121 = sext i32 %77 to i64, !dbg !6524
  %arrayidx122 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 1, i64 2), i64 0, i64 %idxprom121, !dbg !6524
  %78 = load float, float* %arrayidx122, align 4, !dbg !6524
  %arrayidx123 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 2, !dbg !6525
  store float %78, float* %arrayidx123, align 8, !dbg !6526
  %79 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6527
  %band_ext_data124 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %79, i32 0, i32 2, !dbg !6528
  %arrayidx125 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data124, i64 0, i64 2, !dbg !6527
  %80 = load i32, i32* %arrayidx125, align 8, !dbg !6527
  %idxprom126 = sext i32 %80 to i64, !dbg !6529
  %arrayidx127 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 1, i64 3), i64 0, i64 %idxprom126, !dbg !6529
  %81 = load float, float* %arrayidx127, align 4, !dbg !6529
  %arrayidx128 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 3, !dbg !6530
  store float %81, float* %arrayidx128, align 4, !dbg !6531
  %82 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6532
  %band_ext_data129 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %82, i32 0, i32 2, !dbg !6533
  %arrayidx130 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data129, i64 0, i64 3, !dbg !6532
  %83 = load i32, i32* %arrayidx130, align 4, !dbg !6532
  %idxprom131 = sext i32 %83 to i64, !dbg !6534
  %arrayidx132 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 1, i64 4), i64 0, i64 %idxprom131, !dbg !6534
  %84 = load float, float* %arrayidx132, align 4, !dbg !6534
  %arrayidx133 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 4, !dbg !6535
  store float %84, float* %arrayidx133, align 16, !dbg !6536
  br label %sw.epilog, !dbg !6537

sw.bb134:                                         ; preds = %sw.bb
  %85 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6538
  %band_ext_data135 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %85, i32 0, i32 2, !dbg !6539
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data135, i64 0, i64 0, !dbg !6538
  %86 = load i32, i32* %arrayidx136, align 8, !dbg !6538
  %idxprom137 = sext i32 %86 to i64, !dbg !6540
  %arrayidx138 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 2, i64 0), i64 0, i64 %idxprom137, !dbg !6540
  %87 = load float, float* %arrayidx138, align 4, !dbg !6540
  %arrayidx139 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 0, !dbg !6541
  store float %87, float* %arrayidx139, align 16, !dbg !6542
  %88 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6543
  %band_ext_data140 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %88, i32 0, i32 2, !dbg !6544
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data140, i64 0, i64 1, !dbg !6543
  %89 = load i32, i32* %arrayidx141, align 4, !dbg !6543
  %idxprom142 = sext i32 %89 to i64, !dbg !6545
  %arrayidx143 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 2, i64 1), i64 0, i64 %idxprom142, !dbg !6545
  %90 = load float, float* %arrayidx143, align 4, !dbg !6545
  %arrayidx144 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 1, !dbg !6546
  store float %90, float* %arrayidx144, align 4, !dbg !6547
  %91 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6548
  %band_ext_data145 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %91, i32 0, i32 2, !dbg !6549
  %arrayidx146 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data145, i64 0, i64 1, !dbg !6548
  %92 = load i32, i32* %arrayidx146, align 4, !dbg !6548
  %idxprom147 = sext i32 %92 to i64, !dbg !6550
  %arrayidx148 = getelementptr inbounds [32 x float], [32 x float]* getelementptr inbounds ([3 x [5 x [32 x float]]], [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0, i64 0, i64 2, i64 2), i64 0, i64 %idxprom147, !dbg !6550
  %93 = load float, float* %arrayidx148, align 4, !dbg !6550
  %arrayidx149 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 2, !dbg !6551
  store float %93, float* %arrayidx149, align 8, !dbg !6552
  br label %sw.epilog, !dbg !6553

sw.epilog:                                        ; preds = %sw.bb, %sw.bb134, %sw.bb108, %sw.bb83
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6554
  %94 = load i32, i32* %arrayidx150, align 16, !dbg !6554
  %idxprom151 = sext i32 %94 to i64, !dbg !6555
  %95 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6555
  %scalefactors = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %95, i32 0, i32 3, !dbg !6556
  %arrayidx152 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors, i64 0, i64 %idxprom151, !dbg !6555
  %96 = load i32, i32* %arrayidx152, align 4, !dbg !6555
  %idxprom153 = sext i32 %96 to i64, !dbg !6557
  %arrayidx154 = getelementptr inbounds [32 x float], [32 x float]* @at9_scalefactor_c, i64 0, i64 %idxprom153, !dbg !6557
  %97 = load float, float* %arrayidx154, align 4, !dbg !6557
  %98 = load i32, i32* %l, align 4, !dbg !6558
  %idxprom155 = sext i32 %98 to i64, !dbg !6559
  %arrayidx156 = getelementptr inbounds [6 x float], [6 x float]* %sf, i64 0, i64 %idxprom155, !dbg !6559
  store float %97, float* %arrayidx156, align 4, !dbg !6560
  %99 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !6561
  %100 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6562
  %101 = load i32, i32* %n_start, align 4, !dbg !6563
  %102 = load i32, i32* %n_cnt, align 4, !dbg !6564
  call void @fill_with_noise(%struct.ATRAC9Context* %99, %struct.ATRAC9ChannelData* %100, i32 %101, i32 %102), !dbg !6565
  %103 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6566
  %arraydecay = getelementptr inbounds [6 x float], [6 x float]* %sf, i32 0, i32 0, !dbg !6567
  %arrayidx157 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6568
  %104 = load i32, i32* %arrayidx157, align 16, !dbg !6568
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6569
  %105 = load i32, i32* %arrayidx158, align 4, !dbg !6569
  call void @scale_band_ext_coeffs(%struct.ATRAC9ChannelData* %103, float* %arraydecay, i32 %104, i32 %105), !dbg !6570
  br label %sw.epilog293, !dbg !6571

sw.bb159:                                         ; preds = %for.end63
  call void @llvm.dbg.declare(metadata [6 x float]* %sf160, metadata !6572, metadata !2064), !dbg !6574
  call void @llvm.dbg.declare(metadata i32* %i161, metadata !6575, metadata !2064), !dbg !6577
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6578
  %106 = load i32, i32* %arrayidx162, align 16, !dbg !6578
  store i32 %106, i32* %i161, align 4, !dbg !6577
  br label %for.cond163, !dbg !6579

for.cond163:                                      ; preds = %for.inc177, %sw.bb159
  %107 = load i32, i32* %i161, align 4, !dbg !6580
  %arrayidx164 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6583
  %108 = load i32, i32* %arrayidx164, align 4, !dbg !6583
  %cmp165 = icmp slt i32 %107, %108, !dbg !6584
  br i1 %cmp165, label %for.body167, label %for.end179, !dbg !6585

for.body167:                                      ; preds = %for.cond163
  %109 = load i32, i32* %i161, align 4, !dbg !6586
  %idxprom168 = sext i32 %109 to i64, !dbg !6587
  %110 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6587
  %scalefactors169 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %110, i32 0, i32 3, !dbg !6588
  %arrayidx170 = getelementptr inbounds [31 x i32], [31 x i32]* %scalefactors169, i64 0, i64 %idxprom168, !dbg !6587
  %111 = load i32, i32* %arrayidx170, align 4, !dbg !6587
  %idxprom171 = sext i32 %111 to i64, !dbg !6589
  %arrayidx172 = getelementptr inbounds [32 x float], [32 x float]* @at9_scalefactor_c, i64 0, i64 %idxprom171, !dbg !6589
  %112 = load float, float* %arrayidx172, align 4, !dbg !6589
  %113 = load i32, i32* %i161, align 4, !dbg !6590
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6591
  %114 = load i32, i32* %arrayidx173, align 16, !dbg !6591
  %sub174 = sub nsw i32 %113, %114, !dbg !6592
  %idxprom175 = sext i32 %sub174 to i64, !dbg !6593
  %arrayidx176 = getelementptr inbounds [6 x float], [6 x float]* %sf160, i64 0, i64 %idxprom175, !dbg !6593
  store float %112, float* %arrayidx176, align 4, !dbg !6594
  br label %for.inc177, !dbg !6593

for.inc177:                                       ; preds = %for.body167
  %115 = load i32, i32* %i161, align 4, !dbg !6595
  %inc178 = add nsw i32 %115, 1, !dbg !6595
  store i32 %inc178, i32* %i161, align 4, !dbg !6595
  br label %for.cond163, !dbg !6597, !llvm.loop !6598

for.end179:                                       ; preds = %for.cond163
  %116 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !6600
  %117 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6601
  %arrayidx180 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 0, !dbg !6602
  %118 = load i32, i32* %arrayidx180, align 16, !dbg !6602
  %arrayidx181 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 3, !dbg !6603
  %119 = load i32, i32* %arrayidx181, align 4, !dbg !6603
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 0, !dbg !6604
  %120 = load i32, i32* %arrayidx182, align 16, !dbg !6604
  %sub183 = sub nsw i32 %119, %120, !dbg !6605
  call void @fill_with_noise(%struct.ATRAC9Context* %116, %struct.ATRAC9ChannelData* %117, i32 %118, i32 %sub183), !dbg !6606
  %121 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6607
  %arraydecay184 = getelementptr inbounds [6 x float], [6 x float]* %sf160, i32 0, i32 0, !dbg !6608
  %arrayidx185 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 0, !dbg !6609
  %122 = load i32, i32* %arrayidx185, align 16, !dbg !6609
  %arrayidx186 = getelementptr inbounds [4 x i32], [4 x i32]* %g_units, i64 0, i64 3, !dbg !6610
  %123 = load i32, i32* %arrayidx186, align 4, !dbg !6610
  call void @scale_band_ext_coeffs(%struct.ATRAC9ChannelData* %121, float* %arraydecay184, i32 %122, i32 %123), !dbg !6611
  br label %sw.epilog293, !dbg !6612

sw.bb187:                                         ; preds = %for.end63
  call void @llvm.dbg.declare(metadata [2 x float]* %g_sf, metadata !6613, metadata !2064), !dbg !6616
  %arrayinit.begin188 = getelementptr inbounds [2 x float], [2 x float]* %g_sf, i64 0, i64 0, !dbg !6617
  %124 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6618
  %band_ext_data189 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %124, i32 0, i32 2, !dbg !6619
  %arrayidx190 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data189, i64 0, i64 0, !dbg !6618
  %125 = load i32, i32* %arrayidx190, align 8, !dbg !6618
  %idxprom191 = sext i32 %125 to i64, !dbg !6620
  %arrayidx192 = getelementptr inbounds [64 x float], [64 x float]* @at9_band_ext_scales_m2, i64 0, i64 %idxprom191, !dbg !6620
  %126 = load float, float* %arrayidx192, align 4, !dbg !6620
  store float %126, float* %arrayinit.begin188, align 4, !dbg !6617
  %arrayinit.element193 = getelementptr inbounds float, float* %arrayinit.begin188, i64 1, !dbg !6617
  %127 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6621
  %band_ext_data194 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %127, i32 0, i32 2, !dbg !6622
  %arrayidx195 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data194, i64 0, i64 1, !dbg !6621
  %128 = load i32, i32* %arrayidx195, align 4, !dbg !6621
  %idxprom196 = sext i32 %128 to i64, !dbg !6623
  %arrayidx197 = getelementptr inbounds [64 x float], [64 x float]* @at9_band_ext_scales_m2, i64 0, i64 %idxprom196, !dbg !6623
  %129 = load float, float* %arrayidx197, align 4, !dbg !6623
  store float %129, float* %arrayinit.element193, align 4, !dbg !6617
  call void @llvm.dbg.declare(metadata i32* %i198, metadata !6624, metadata !2064), !dbg !6626
  store i32 0, i32* %i198, align 4, !dbg !6626
  br label %for.cond199, !dbg !6627

for.cond199:                                      ; preds = %for.inc222, %sw.bb187
  %130 = load i32, i32* %i198, align 4, !dbg !6628
  %cmp200 = icmp slt i32 %130, 2, !dbg !6631
  br i1 %cmp200, label %for.body202, label %for.end224, !dbg !6632

for.body202:                                      ; preds = %for.cond199
  call void @llvm.dbg.declare(metadata i32* %j203, metadata !6633, metadata !2064), !dbg !6635
  %131 = load i32, i32* %i198, align 4, !dbg !6636
  %add204 = add nsw i32 %131, 0, !dbg !6637
  %idxprom205 = sext i32 %add204 to i64, !dbg !6638
  %arrayidx206 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom205, !dbg !6638
  %132 = load i32, i32* %arrayidx206, align 4, !dbg !6638
  store i32 %132, i32* %j203, align 4, !dbg !6635
  br label %for.cond207, !dbg !6639

for.cond207:                                      ; preds = %for.inc219, %for.body202
  %133 = load i32, i32* %j203, align 4, !dbg !6640
  %134 = load i32, i32* %i198, align 4, !dbg !6643
  %add208 = add nsw i32 %134, 1, !dbg !6644
  %idxprom209 = sext i32 %add208 to i64, !dbg !6645
  %arrayidx210 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom209, !dbg !6645
  %135 = load i32, i32* %arrayidx210, align 4, !dbg !6645
  %cmp211 = icmp slt i32 %133, %135, !dbg !6646
  br i1 %cmp211, label %for.body213, label %for.end221, !dbg !6647

for.body213:                                      ; preds = %for.cond207
  %136 = load i32, i32* %i198, align 4, !dbg !6648
  %idxprom214 = sext i32 %136 to i64, !dbg !6649
  %arrayidx215 = getelementptr inbounds [2 x float], [2 x float]* %g_sf, i64 0, i64 %idxprom214, !dbg !6649
  %137 = load float, float* %arrayidx215, align 4, !dbg !6649
  %138 = load i32, i32* %j203, align 4, !dbg !6650
  %idxprom216 = sext i32 %138 to i64, !dbg !6651
  %139 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6651
  %coeffs217 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %139, i32 0, i32 12, !dbg !6652
  %arrayidx218 = getelementptr inbounds [256 x float], [256 x float]* %coeffs217, i64 0, i64 %idxprom216, !dbg !6651
  %140 = load float, float* %arrayidx218, align 4, !dbg !6653
  %mul = fmul float %140, %137, !dbg !6653
  store float %mul, float* %arrayidx218, align 4, !dbg !6653
  br label %for.inc219, !dbg !6651

for.inc219:                                       ; preds = %for.body213
  %141 = load i32, i32* %j203, align 4, !dbg !6654
  %inc220 = add nsw i32 %141, 1, !dbg !6654
  store i32 %inc220, i32* %j203, align 4, !dbg !6654
  br label %for.cond207, !dbg !6656, !llvm.loop !6657

for.end221:                                       ; preds = %for.cond207
  br label %for.inc222, !dbg !6659

for.inc222:                                       ; preds = %for.end221
  %142 = load i32, i32* %i198, align 4, !dbg !6661
  %inc223 = add nsw i32 %142, 1, !dbg !6661
  store i32 %inc223, i32* %i198, align 4, !dbg !6661
  br label %for.cond199, !dbg !6663, !llvm.loop !6664

for.end224:                                       ; preds = %for.cond199
  br label %sw.epilog293, !dbg !6666

sw.bb225:                                         ; preds = %for.end63
  call void @llvm.dbg.declare(metadata float* %scale, metadata !6667, metadata !2064), !dbg !6669
  %143 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6670
  %band_ext_data226 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %143, i32 0, i32 2, !dbg !6671
  %arrayidx227 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data226, i64 0, i64 0, !dbg !6670
  %144 = load i32, i32* %arrayidx227, align 8, !dbg !6670
  %idxprom228 = sext i32 %144 to i64, !dbg !6672
  %arrayidx229 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* @at9_band_ext_scales_m3, i64 0, i64 %idxprom228, !dbg !6672
  %arrayidx230 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx229, i64 0, i64 0, !dbg !6672
  %145 = load float, float* %arrayidx230, align 8, !dbg !6672
  store float %145, float* %scale, align 4, !dbg !6669
  call void @llvm.dbg.declare(metadata float* %rate, metadata !6673, metadata !2064), !dbg !6674
  %146 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6675
  %band_ext_data231 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %146, i32 0, i32 2, !dbg !6676
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data231, i64 0, i64 1, !dbg !6675
  %147 = load i32, i32* %arrayidx232, align 4, !dbg !6675
  %idxprom233 = sext i32 %147 to i64, !dbg !6677
  %arrayidx234 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* @at9_band_ext_scales_m3, i64 0, i64 %idxprom233, !dbg !6677
  %arrayidx235 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx234, i64 0, i64 1, !dbg !6677
  %148 = load float, float* %arrayidx235, align 4, !dbg !6677
  store float %148, float* %rate, align 4, !dbg !6674
  %149 = load float, float* %rate, align 4, !dbg !6678
  %conv236 = fpext float %149 to double, !dbg !6678
  %call = call double @pow(double 2.000000e+00, double %conv236) #8, !dbg !6679
  %conv237 = fptrunc double %call to float, !dbg !6679
  store float %conv237, float* %rate, align 4, !dbg !6680
  call void @llvm.dbg.declare(metadata i32* %i238, metadata !6681, metadata !2064), !dbg !6683
  %arrayidx239 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 0, !dbg !6684
  %150 = load i32, i32* %arrayidx239, align 16, !dbg !6684
  store i32 %150, i32* %i238, align 4, !dbg !6683
  br label %for.cond240, !dbg !6685

for.cond240:                                      ; preds = %for.inc250, %sw.bb225
  %151 = load i32, i32* %i238, align 4, !dbg !6686
  %arrayidx241 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 3, !dbg !6689
  %152 = load i32, i32* %arrayidx241, align 4, !dbg !6689
  %cmp242 = icmp slt i32 %151, %152, !dbg !6690
  br i1 %cmp242, label %for.body244, label %for.end252, !dbg !6691

for.body244:                                      ; preds = %for.cond240
  %153 = load float, float* %rate, align 4, !dbg !6692
  %154 = load float, float* %scale, align 4, !dbg !6694
  %mul245 = fmul float %154, %153, !dbg !6694
  store float %mul245, float* %scale, align 4, !dbg !6694
  %155 = load float, float* %scale, align 4, !dbg !6695
  %156 = load i32, i32* %i238, align 4, !dbg !6696
  %idxprom246 = sext i32 %156 to i64, !dbg !6697
  %157 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6697
  %coeffs247 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %157, i32 0, i32 12, !dbg !6698
  %arrayidx248 = getelementptr inbounds [256 x float], [256 x float]* %coeffs247, i64 0, i64 %idxprom246, !dbg !6697
  %158 = load float, float* %arrayidx248, align 4, !dbg !6699
  %mul249 = fmul float %158, %155, !dbg !6699
  store float %mul249, float* %arrayidx248, align 4, !dbg !6699
  br label %for.inc250, !dbg !6700

for.inc250:                                       ; preds = %for.body244
  %159 = load i32, i32* %i238, align 4, !dbg !6701
  %inc251 = add nsw i32 %159, 1, !dbg !6701
  store i32 %inc251, i32* %i238, align 4, !dbg !6701
  br label %for.cond240, !dbg !6703, !llvm.loop !6704

for.end252:                                       ; preds = %for.cond240
  br label %sw.epilog293, !dbg !6706

sw.bb253:                                         ; preds = %for.end63
  call void @llvm.dbg.declare(metadata float* %m, metadata !6707, metadata !2064), !dbg !6709
  %160 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6710
  %band_ext_data254 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %160, i32 0, i32 2, !dbg !6711
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %band_ext_data254, i64 0, i64 0, !dbg !6710
  %161 = load i32, i32* %arrayidx255, align 8, !dbg !6710
  %idxprom256 = sext i32 %161 to i64, !dbg !6712
  %arrayidx257 = getelementptr inbounds [8 x float], [8 x float]* @at9_band_ext_scales_m4, i64 0, i64 %idxprom256, !dbg !6712
  %162 = load float, float* %arrayidx257, align 4, !dbg !6712
  store float %162, float* %m, align 4, !dbg !6709
  call void @llvm.dbg.declare(metadata [3 x float]* %g_sf258, metadata !6713, metadata !2064), !dbg !6716
  %arrayinit.begin259 = getelementptr inbounds [3 x float], [3 x float]* %g_sf258, i64 0, i64 0, !dbg !6717
  %163 = load float, float* %m, align 4, !dbg !6718
  %mul260 = fmul float 0x3FE6A78000000000, %163, !dbg !6719
  store float %mul260, float* %arrayinit.begin259, align 4, !dbg !6717
  %arrayinit.element261 = getelementptr inbounds float, float* %arrayinit.begin259, i64 1, !dbg !6717
  %164 = load float, float* %m, align 4, !dbg !6720
  %mul262 = fmul float 0x3FE009C000000000, %164, !dbg !6721
  store float %mul262, float* %arrayinit.element261, align 4, !dbg !6717
  %arrayinit.element263 = getelementptr inbounds float, float* %arrayinit.element261, i64 1, !dbg !6717
  %165 = load float, float* %m, align 4, !dbg !6722
  %mul264 = fmul float 0x3FD6B58020000000, %165, !dbg !6723
  store float %mul264, float* %arrayinit.element263, align 4, !dbg !6717
  call void @llvm.dbg.declare(metadata i32* %i265, metadata !6724, metadata !2064), !dbg !6726
  store i32 0, i32* %i265, align 4, !dbg !6726
  br label %for.cond266, !dbg !6727

for.cond266:                                      ; preds = %for.inc290, %sw.bb253
  %166 = load i32, i32* %i265, align 4, !dbg !6728
  %cmp267 = icmp slt i32 %166, 3, !dbg !6731
  br i1 %cmp267, label %for.body269, label %for.end292, !dbg !6732

for.body269:                                      ; preds = %for.cond266
  call void @llvm.dbg.declare(metadata i32* %j270, metadata !6733, metadata !2064), !dbg !6735
  %167 = load i32, i32* %i265, align 4, !dbg !6736
  %add271 = add nsw i32 %167, 0, !dbg !6737
  %idxprom272 = sext i32 %add271 to i64, !dbg !6738
  %arrayidx273 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom272, !dbg !6738
  %168 = load i32, i32* %arrayidx273, align 4, !dbg !6738
  store i32 %168, i32* %j270, align 4, !dbg !6735
  br label %for.cond274, !dbg !6739

for.cond274:                                      ; preds = %for.inc287, %for.body269
  %169 = load i32, i32* %j270, align 4, !dbg !6740
  %170 = load i32, i32* %i265, align 4, !dbg !6743
  %add275 = add nsw i32 %170, 1, !dbg !6744
  %idxprom276 = sext i32 %add275 to i64, !dbg !6745
  %arrayidx277 = getelementptr inbounds [4 x i32], [4 x i32]* %g_bins, i64 0, i64 %idxprom276, !dbg !6745
  %171 = load i32, i32* %arrayidx277, align 4, !dbg !6745
  %cmp278 = icmp slt i32 %169, %171, !dbg !6746
  br i1 %cmp278, label %for.body280, label %for.end289, !dbg !6747

for.body280:                                      ; preds = %for.cond274
  %172 = load i32, i32* %i265, align 4, !dbg !6748
  %idxprom281 = sext i32 %172 to i64, !dbg !6749
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %g_sf258, i64 0, i64 %idxprom281, !dbg !6749
  %173 = load float, float* %arrayidx282, align 4, !dbg !6749
  %174 = load i32, i32* %j270, align 4, !dbg !6750
  %idxprom283 = sext i32 %174 to i64, !dbg !6751
  %175 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c, align 8, !dbg !6751
  %coeffs284 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %175, i32 0, i32 12, !dbg !6752
  %arrayidx285 = getelementptr inbounds [256 x float], [256 x float]* %coeffs284, i64 0, i64 %idxprom283, !dbg !6751
  %176 = load float, float* %arrayidx285, align 4, !dbg !6753
  %mul286 = fmul float %176, %173, !dbg !6753
  store float %mul286, float* %arrayidx285, align 4, !dbg !6753
  br label %for.inc287, !dbg !6751

for.inc287:                                       ; preds = %for.body280
  %177 = load i32, i32* %j270, align 4, !dbg !6754
  %inc288 = add nsw i32 %177, 1, !dbg !6754
  store i32 %inc288, i32* %j270, align 4, !dbg !6754
  br label %for.cond274, !dbg !6756, !llvm.loop !6757

for.end289:                                       ; preds = %for.cond274
  br label %for.inc290, !dbg !6759

for.inc290:                                       ; preds = %for.end289
  %178 = load i32, i32* %i265, align 4, !dbg !6761
  %inc291 = add nsw i32 %178, 1, !dbg !6761
  store i32 %inc291, i32* %i265, align 4, !dbg !6761
  br label %for.cond266, !dbg !6763, !llvm.loop !6764

for.end292:                                       ; preds = %for.cond266
  br label %sw.epilog293, !dbg !6766

sw.epilog293:                                     ; preds = %for.end63, %for.end292, %for.end252, %for.end224, %for.end179, %sw.epilog
  br label %for.inc294, !dbg !6767

for.inc294:                                       ; preds = %sw.epilog293
  %179 = load i32, i32* %ch, align 4, !dbg !6768
  %inc295 = add nsw i32 %179, 1, !dbg !6768
  store i32 %inc295, i32* %ch, align 4, !dbg !6768
  br label %for.cond, !dbg !6770, !llvm.loop !6771

for.end296:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !6773
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #4 !dbg !6774 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6777, metadata !2064), !dbg !6778
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6779
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6782 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6785, metadata !2064), !dbg !6786
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6787, metadata !2064), !dbg !6788
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6789, metadata !2064), !dbg !6790
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6791
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6792
  %1 = load i32, i32* %index, align 8, !dbg !6792
  store i32 %1, i32* %re_index, align 4, !dbg !6790
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6793, metadata !2064), !dbg !6794
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6795, metadata !2064), !dbg !6796
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6797
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6798
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6798
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6796
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !6799
  %5 = load i32, i32* %re_index, align 4, !dbg !6800
  %6 = load i32, i32* %n.addr, align 4, !dbg !6801
  %add = add i32 %5, %6, !dbg !6802
  %cmp = icmp ugt i32 %4, %add, !dbg !6803
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6804

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !6805
  %8 = load i32, i32* %n.addr, align 4, !dbg !6807
  %add1 = add i32 %7, %8, !dbg !6808
  br label %cond.end, !dbg !6809

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !6810
  br label %cond.end, !dbg !6812

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !6813
  store i32 %cond, i32* %re_index, align 4, !dbg !6815
  %10 = load i32, i32* %re_index, align 4, !dbg !6816
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6817
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !6818
  store i32 %10, i32* %index2, align 8, !dbg !6819
  ret void, !dbg !6820
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6821 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6822, metadata !2064), !dbg !6827
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6829, metadata !2064), !dbg !6830
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6831, metadata !2064), !dbg !6832
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6833, metadata !2064), !dbg !6834
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6835, metadata !2064), !dbg !6836
  %0 = load i32, i32* %n.addr, align 4, !dbg !6837
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6838
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !6839
  %2 = load i32, i32* %index, align 8, !dbg !6839
  %sub = sub nsw i32 0, %2, !dbg !6840
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6841
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !6842
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6842
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6843
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !6844
  %6 = load i32, i32* %index1, align 8, !dbg !6844
  %sub2 = sub nsw i32 %4, %6, !dbg !6845
  store i32 %0, i32* %a.addr.i, align 4, !dbg !6846
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !6846
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !6846
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !6847
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !6849
  %cmp.i = icmp slt i32 %7, %8, !dbg !6850
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6851

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !6852
  store i32 %9, i32* %retval.i, align 4, !dbg !6854
  br label %av_clip_c.exit, !dbg !6854

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !6855
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !6857
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !6858
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6859

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !6860
  store i32 %12, i32* %retval.i, align 4, !dbg !6862
  br label %av_clip_c.exit, !dbg !6862

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !6863
  store i32 %13, i32* %retval.i, align 4, !dbg !6864
  br label %av_clip_c.exit, !dbg !6864

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !6865
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6866
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !6867
  %16 = load i32, i32* %index3, align 8, !dbg !6868
  %add = add nsw i32 %16, %14, !dbg !6868
  store i32 %add, i32* %index3, align 8, !dbg !6868
  ret void, !dbg !6869
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @fill_with_noise(%struct.ATRAC9Context* %s, %struct.ATRAC9ChannelData* %c, i32 %start, i32 %count) #4 !dbg !6870 {
entry:
  %s.addr = alloca %struct.ATRAC9Context*, align 8
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %start.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %maxval = alloca float, align 4
  %i = alloca i32, align 4
  %tmp = alloca [2 x double], align 16
  %i108 = alloca i32, align 4
  store %struct.ATRAC9Context* %s, %struct.ATRAC9Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9Context** %s.addr, metadata !6873, metadata !2064), !dbg !6874
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !6875, metadata !2064), !dbg !6876
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !6877, metadata !2064), !dbg !6878
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !6879, metadata !2064), !dbg !6880
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !6881, metadata !2064), !dbg !6882
  store float 0.000000e+00, float* %maxval, align 4, !dbg !6882
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6883, metadata !2064), !dbg !6885
  store i32 0, i32* %i, align 4, !dbg !6885
  br label %for.cond, !dbg !6886

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6887
  %1 = load i32, i32* %count.addr, align 4, !dbg !6890
  %cmp = icmp slt i32 %0, %1, !dbg !6891
  br i1 %cmp, label %for.body, label %for.end, !dbg !6892

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x double]* %tmp, metadata !6893, metadata !2064), !dbg !6896
  %2 = load %struct.ATRAC9Context*, %struct.ATRAC9Context** %s.addr, align 8, !dbg !6897
  %lfg = getelementptr inbounds %struct.ATRAC9Context, %struct.ATRAC9Context* %2, i32 0, i32 4, !dbg !6898
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %tmp, i32 0, i32 0, !dbg !6899
  call void @av_bmg_get(%struct.AVLFG* %lfg, double* %arraydecay), !dbg !6900
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6901
  %3 = load double, double* %arrayidx, align 16, !dbg !6901
  %conv = fptrunc double %3 to float, !dbg !6901
  %4 = load i32, i32* %start.addr, align 4, !dbg !6902
  %5 = load i32, i32* %i, align 4, !dbg !6903
  %add = add nsw i32 %4, %5, !dbg !6904
  %add1 = add nsw i32 %add, 0, !dbg !6905
  %idxprom = sext i32 %add1 to i64, !dbg !6906
  %6 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6906
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %6, i32 0, i32 12, !dbg !6907
  %arrayidx2 = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i64 0, i64 %idxprom, !dbg !6906
  store float %conv, float* %arrayidx2, align 4, !dbg !6908
  %arrayidx3 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6909
  %7 = load double, double* %arrayidx3, align 8, !dbg !6909
  %conv4 = fptrunc double %7 to float, !dbg !6909
  %8 = load i32, i32* %start.addr, align 4, !dbg !6910
  %9 = load i32, i32* %i, align 4, !dbg !6911
  %add5 = add nsw i32 %8, %9, !dbg !6912
  %add6 = add nsw i32 %add5, 1, !dbg !6913
  %idxprom7 = sext i32 %add6 to i64, !dbg !6914
  %10 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !6914
  %coeffs8 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %10, i32 0, i32 12, !dbg !6915
  %arrayidx9 = getelementptr inbounds [256 x float], [256 x float]* %coeffs8, i64 0, i64 %idxprom7, !dbg !6914
  store float %conv4, float* %arrayidx9, align 4, !dbg !6916
  %arrayidx10 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6917
  %11 = load double, double* %arrayidx10, align 16, !dbg !6917
  %cmp11 = fcmp oge double %11, 0.000000e+00, !dbg !6918
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !6919

cond.true:                                        ; preds = %for.body
  %arrayidx13 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6920
  %12 = load double, double* %arrayidx13, align 16, !dbg !6920
  br label %cond.end, !dbg !6922

cond.false:                                       ; preds = %for.body
  %arrayidx14 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6923
  %13 = load double, double* %arrayidx14, align 16, !dbg !6923
  %sub = fsub double -0.000000e+00, %13, !dbg !6925
  br label %cond.end, !dbg !6926

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %12, %cond.true ], [ %sub, %cond.false ], !dbg !6927
  %arrayidx15 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6929
  %14 = load double, double* %arrayidx15, align 8, !dbg !6929
  %cmp16 = fcmp oge double %14, 0.000000e+00, !dbg !6930
  br i1 %cmp16, label %cond.true18, label %cond.false20, !dbg !6931

cond.true18:                                      ; preds = %cond.end
  %arrayidx19 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6932
  %15 = load double, double* %arrayidx19, align 8, !dbg !6932
  br label %cond.end23, !dbg !6934

cond.false20:                                     ; preds = %cond.end
  %arrayidx21 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6935
  %16 = load double, double* %arrayidx21, align 8, !dbg !6935
  %sub22 = fsub double -0.000000e+00, %16, !dbg !6937
  br label %cond.end23, !dbg !6938

cond.end23:                                       ; preds = %cond.false20, %cond.true18
  %cond24 = phi double [ %15, %cond.true18 ], [ %sub22, %cond.false20 ], !dbg !6939
  %cmp25 = fcmp ogt double %cond, %cond24, !dbg !6941
  br i1 %cmp25, label %cond.true27, label %cond.false38, !dbg !6942

cond.true27:                                      ; preds = %cond.end23
  %arrayidx28 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6943
  %17 = load double, double* %arrayidx28, align 16, !dbg !6943
  %cmp29 = fcmp oge double %17, 0.000000e+00, !dbg !6945
  br i1 %cmp29, label %cond.true31, label %cond.false33, !dbg !6946

cond.true31:                                      ; preds = %cond.true27
  %arrayidx32 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6947
  %18 = load double, double* %arrayidx32, align 16, !dbg !6947
  br label %cond.end36, !dbg !6949

cond.false33:                                     ; preds = %cond.true27
  %arrayidx34 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6950
  %19 = load double, double* %arrayidx34, align 16, !dbg !6950
  %sub35 = fsub double -0.000000e+00, %19, !dbg !6952
  br label %cond.end36, !dbg !6953

cond.end36:                                       ; preds = %cond.false33, %cond.true31
  %cond37 = phi double [ %18, %cond.true31 ], [ %sub35, %cond.false33 ], !dbg !6954
  br label %cond.end49, !dbg !6956

cond.false38:                                     ; preds = %cond.end23
  %arrayidx39 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6957
  %20 = load double, double* %arrayidx39, align 8, !dbg !6957
  %cmp40 = fcmp oge double %20, 0.000000e+00, !dbg !6959
  br i1 %cmp40, label %cond.true42, label %cond.false44, !dbg !6960

cond.true42:                                      ; preds = %cond.false38
  %arrayidx43 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6961
  %21 = load double, double* %arrayidx43, align 8, !dbg !6961
  br label %cond.end47, !dbg !6963

cond.false44:                                     ; preds = %cond.false38
  %arrayidx45 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6964
  %22 = load double, double* %arrayidx45, align 8, !dbg !6964
  %sub46 = fsub double -0.000000e+00, %22, !dbg !6966
  br label %cond.end47, !dbg !6967

cond.end47:                                       ; preds = %cond.false44, %cond.true42
  %cond48 = phi double [ %21, %cond.true42 ], [ %sub46, %cond.false44 ], !dbg !6968
  br label %cond.end49, !dbg !6970

cond.end49:                                       ; preds = %cond.end47, %cond.end36
  %cond50 = phi double [ %cond37, %cond.end36 ], [ %cond48, %cond.end47 ], !dbg !6971
  %23 = load float, float* %maxval, align 4, !dbg !6973
  %conv51 = fpext float %23 to double, !dbg !6974
  %cmp52 = fcmp ogt double %cond50, %conv51, !dbg !6975
  br i1 %cmp52, label %cond.true54, label %cond.false101, !dbg !6976

cond.true54:                                      ; preds = %cond.end49
  %arrayidx55 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6977
  %24 = load double, double* %arrayidx55, align 16, !dbg !6977
  %cmp56 = fcmp oge double %24, 0.000000e+00, !dbg !6979
  br i1 %cmp56, label %cond.true58, label %cond.false60, !dbg !6980

cond.true58:                                      ; preds = %cond.true54
  %arrayidx59 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6981
  %25 = load double, double* %arrayidx59, align 16, !dbg !6981
  br label %cond.end63, !dbg !6983

cond.false60:                                     ; preds = %cond.true54
  %arrayidx61 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !6984
  %26 = load double, double* %arrayidx61, align 16, !dbg !6984
  %sub62 = fsub double -0.000000e+00, %26, !dbg !6986
  br label %cond.end63, !dbg !6987

cond.end63:                                       ; preds = %cond.false60, %cond.true58
  %cond64 = phi double [ %25, %cond.true58 ], [ %sub62, %cond.false60 ], !dbg !6988
  %arrayidx65 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6990
  %27 = load double, double* %arrayidx65, align 8, !dbg !6990
  %cmp66 = fcmp oge double %27, 0.000000e+00, !dbg !6991
  br i1 %cmp66, label %cond.true68, label %cond.false70, !dbg !6992

cond.true68:                                      ; preds = %cond.end63
  %arrayidx69 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6993
  %28 = load double, double* %arrayidx69, align 8, !dbg !6993
  br label %cond.end73, !dbg !6995

cond.false70:                                     ; preds = %cond.end63
  %arrayidx71 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !6996
  %29 = load double, double* %arrayidx71, align 8, !dbg !6996
  %sub72 = fsub double -0.000000e+00, %29, !dbg !6998
  br label %cond.end73, !dbg !6999

cond.end73:                                       ; preds = %cond.false70, %cond.true68
  %cond74 = phi double [ %28, %cond.true68 ], [ %sub72, %cond.false70 ], !dbg !7000
  %cmp75 = fcmp ogt double %cond64, %cond74, !dbg !7002
  br i1 %cmp75, label %cond.true77, label %cond.false88, !dbg !7003

cond.true77:                                      ; preds = %cond.end73
  %arrayidx78 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !7004
  %30 = load double, double* %arrayidx78, align 16, !dbg !7004
  %cmp79 = fcmp oge double %30, 0.000000e+00, !dbg !7006
  br i1 %cmp79, label %cond.true81, label %cond.false83, !dbg !7007

cond.true81:                                      ; preds = %cond.true77
  %arrayidx82 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !7008
  %31 = load double, double* %arrayidx82, align 16, !dbg !7008
  br label %cond.end86, !dbg !7010

cond.false83:                                     ; preds = %cond.true77
  %arrayidx84 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 0, !dbg !7011
  %32 = load double, double* %arrayidx84, align 16, !dbg !7011
  %sub85 = fsub double -0.000000e+00, %32, !dbg !7013
  br label %cond.end86, !dbg !7014

cond.end86:                                       ; preds = %cond.false83, %cond.true81
  %cond87 = phi double [ %31, %cond.true81 ], [ %sub85, %cond.false83 ], !dbg !7015
  br label %cond.end99, !dbg !7017

cond.false88:                                     ; preds = %cond.end73
  %arrayidx89 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !7018
  %33 = load double, double* %arrayidx89, align 8, !dbg !7018
  %cmp90 = fcmp oge double %33, 0.000000e+00, !dbg !7020
  br i1 %cmp90, label %cond.true92, label %cond.false94, !dbg !7021

cond.true92:                                      ; preds = %cond.false88
  %arrayidx93 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !7022
  %34 = load double, double* %arrayidx93, align 8, !dbg !7022
  br label %cond.end97, !dbg !7024

cond.false94:                                     ; preds = %cond.false88
  %arrayidx95 = getelementptr inbounds [2 x double], [2 x double]* %tmp, i64 0, i64 1, !dbg !7025
  %35 = load double, double* %arrayidx95, align 8, !dbg !7025
  %sub96 = fsub double -0.000000e+00, %35, !dbg !7027
  br label %cond.end97, !dbg !7028

cond.end97:                                       ; preds = %cond.false94, %cond.true92
  %cond98 = phi double [ %34, %cond.true92 ], [ %sub96, %cond.false94 ], !dbg !7029
  br label %cond.end99, !dbg !7031

cond.end99:                                       ; preds = %cond.end97, %cond.end86
  %cond100 = phi double [ %cond87, %cond.end86 ], [ %cond98, %cond.end97 ], !dbg !7032
  br label %cond.end103, !dbg !7034

cond.false101:                                    ; preds = %cond.end49
  %36 = load float, float* %maxval, align 4, !dbg !7035
  %conv102 = fpext float %36 to double, !dbg !7037
  br label %cond.end103, !dbg !7038

cond.end103:                                      ; preds = %cond.false101, %cond.end99
  %cond104 = phi double [ %cond100, %cond.end99 ], [ %conv102, %cond.false101 ], !dbg !7039
  %conv105 = fptrunc double %cond104 to float, !dbg !7041
  store float %conv105, float* %maxval, align 4, !dbg !7042
  br label %for.inc, !dbg !7043

for.inc:                                          ; preds = %cond.end103
  %37 = load i32, i32* %i, align 4, !dbg !7044
  %add106 = add nsw i32 %37, 2, !dbg !7044
  store i32 %add106, i32* %i, align 4, !dbg !7044
  br label %for.cond, !dbg !7046, !llvm.loop !7047

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i108, metadata !7049, metadata !2064), !dbg !7051
  store i32 0, i32* %i108, align 4, !dbg !7051
  br label %for.cond109, !dbg !7052

for.cond109:                                      ; preds = %for.inc117, %for.end
  %38 = load i32, i32* %i108, align 4, !dbg !7053
  %39 = load i32, i32* %count.addr, align 4, !dbg !7056
  %cmp110 = icmp slt i32 %38, %39, !dbg !7057
  br i1 %cmp110, label %for.body112, label %for.end118, !dbg !7058

for.body112:                                      ; preds = %for.cond109
  %40 = load float, float* %maxval, align 4, !dbg !7059
  %41 = load i32, i32* %start.addr, align 4, !dbg !7060
  %42 = load i32, i32* %i108, align 4, !dbg !7061
  %add113 = add nsw i32 %41, %42, !dbg !7062
  %idxprom114 = sext i32 %add113 to i64, !dbg !7063
  %43 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !7063
  %coeffs115 = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %43, i32 0, i32 12, !dbg !7064
  %arrayidx116 = getelementptr inbounds [256 x float], [256 x float]* %coeffs115, i64 0, i64 %idxprom114, !dbg !7063
  %44 = load float, float* %arrayidx116, align 4, !dbg !7065
  %div = fdiv float %44, %40, !dbg !7065
  store float %div, float* %arrayidx116, align 4, !dbg !7065
  br label %for.inc117, !dbg !7063

for.inc117:                                       ; preds = %for.body112
  %45 = load i32, i32* %i108, align 4, !dbg !7066
  %inc = add nsw i32 %45, 1, !dbg !7066
  store i32 %inc, i32* %i108, align 4, !dbg !7066
  br label %for.cond109, !dbg !7068, !llvm.loop !7069

for.end118:                                       ; preds = %for.cond109
  ret void, !dbg !7071
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @scale_band_ext_coeffs(%struct.ATRAC9ChannelData* %c, float* %sf, i32 %s_unit, i32 %e_unit) #4 !dbg !7072 {
entry:
  %c.addr = alloca %struct.ATRAC9ChannelData*, align 8
  %sf.addr = alloca float*, align 8
  %s_unit.addr = alloca i32, align 4
  %e_unit.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.ATRAC9ChannelData* %c, %struct.ATRAC9ChannelData** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATRAC9ChannelData** %c.addr, metadata !7075, metadata !2064), !dbg !7076
  store float* %sf, float** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sf.addr, metadata !7077, metadata !2064), !dbg !7078
  store i32 %s_unit, i32* %s_unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s_unit.addr, metadata !7079, metadata !2064), !dbg !7080
  store i32 %e_unit, i32* %e_unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e_unit.addr, metadata !7081, metadata !2064), !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7083, metadata !2064), !dbg !7085
  %0 = load i32, i32* %s_unit.addr, align 4, !dbg !7086
  store i32 %0, i32* %i, align 4, !dbg !7085
  br label %for.cond, !dbg !7087

for.cond:                                         ; preds = %for.inc11, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7088
  %2 = load i32, i32* %e_unit.addr, align 4, !dbg !7091
  %cmp = icmp slt i32 %1, %2, !dbg !7092
  br i1 %cmp, label %for.body, label %for.end13, !dbg !7093

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7094, metadata !2064), !dbg !7096
  %3 = load i32, i32* %i, align 4, !dbg !7097
  %add = add nsw i32 %3, 0, !dbg !7098
  %idxprom = sext i32 %add to i64, !dbg !7099
  %arrayidx = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom, !dbg !7099
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7099
  store i32 %4, i32* %start, align 4, !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7100, metadata !2064), !dbg !7101
  %5 = load i32, i32* %i, align 4, !dbg !7102
  %add1 = add nsw i32 %5, 1, !dbg !7103
  %idxprom2 = sext i32 %add1 to i64, !dbg !7104
  %arrayidx3 = getelementptr inbounds [31 x i32], [31 x i32]* @at9_q_unit_to_coeff_idx, i64 0, i64 %idxprom2, !dbg !7104
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !7104
  store i32 %6, i32* %end, align 4, !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7105, metadata !2064), !dbg !7107
  %7 = load i32, i32* %start, align 4, !dbg !7108
  store i32 %7, i32* %j, align 4, !dbg !7107
  br label %for.cond4, !dbg !7109

for.cond4:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %j, align 4, !dbg !7110
  %9 = load i32, i32* %end, align 4, !dbg !7113
  %cmp5 = icmp slt i32 %8, %9, !dbg !7114
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !7115

for.body6:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !7116
  %11 = load i32, i32* %s_unit.addr, align 4, !dbg !7117
  %sub = sub nsw i32 %10, %11, !dbg !7118
  %idxprom7 = sext i32 %sub to i64, !dbg !7119
  %12 = load float*, float** %sf.addr, align 8, !dbg !7119
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 %idxprom7, !dbg !7119
  %13 = load float, float* %arrayidx8, align 4, !dbg !7119
  %14 = load i32, i32* %j, align 4, !dbg !7120
  %idxprom9 = sext i32 %14 to i64, !dbg !7121
  %15 = load %struct.ATRAC9ChannelData*, %struct.ATRAC9ChannelData** %c.addr, align 8, !dbg !7121
  %coeffs = getelementptr inbounds %struct.ATRAC9ChannelData, %struct.ATRAC9ChannelData* %15, i32 0, i32 12, !dbg !7122
  %arrayidx10 = getelementptr inbounds [256 x float], [256 x float]* %coeffs, i64 0, i64 %idxprom9, !dbg !7121
  %16 = load float, float* %arrayidx10, align 4, !dbg !7123
  %mul = fmul float %16, %13, !dbg !7123
  store float %mul, float* %arrayidx10, align 4, !dbg !7123
  br label %for.inc, !dbg !7121

for.inc:                                          ; preds = %for.body6
  %17 = load i32, i32* %j, align 4, !dbg !7124
  %inc = add nsw i32 %17, 1, !dbg !7124
  store i32 %inc, i32* %j, align 4, !dbg !7124
  br label %for.cond4, !dbg !7126, !llvm.loop !7127

for.end:                                          ; preds = %for.cond4
  br label %for.inc11, !dbg !7129

for.inc11:                                        ; preds = %for.end
  %18 = load i32, i32* %i, align 4, !dbg !7130
  %inc12 = add nsw i32 %18, 1, !dbg !7130
  store i32 %inc12, i32* %i, align 4, !dbg !7130
  br label %for.cond, !dbg !7132, !llvm.loop !7133

for.end13:                                        ; preds = %for.cond
  ret void, !dbg !7135
}

; Function Attrs: nounwind
declare double @pow(double, double) #5

declare void @av_bmg_get(%struct.AVLFG*, double*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !7136 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7141, metadata !2064), !dbg !7142
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7143
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7144
  %1 = load i32, i32* %index, align 8, !dbg !7144
  ret i32 %1, !dbg !7145
}

declare void @ff_free_vlc(%struct.VLC*) #3

declare void @ff_mdct_end(%struct.FFTContext*) #3

declare void @av_free(i8*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2059, !2060}
!llvm.ident = !{!2061}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !903, globals: !918)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac9dec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893, !897}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ATRAC9BlockType", file: !898, line: 29, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/atrac9tab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902}
!900 = !DIEnumerator(name: "ATRAC9_BLOCK_TYPE_SCE", value: 0)
!901 = !DIEnumerator(name: "ATRAC9_BLOCK_TYPE_CPE", value: 1)
!902 = !DIEnumerator(name: "ATRAC9_BLOCK_TYPE_LFE", value: 2)
!903 = !{!904, !905, !906, !914, !916}
!904 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!905 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !909, line: 221, size: 32, align: 8, elements: !910)
!909 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !908, file: !909, line: 221, baseType: !912, size: 32, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !913, line: 51, baseType: !905)
!913 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !913, line: 48, baseType: !915)
!915 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!917 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!918 = !{!919, !924, !1651, !1655, !1673, !1675, !1679, !1696, !1699, !1701, !1703, !1705, !1707, !1709, !1710, !1712, !1716, !1718, !1722, !1724, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1737, !1738, !1739, !1743, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1785, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1833, !1836, !1837, !1839, !1843, !1844, !1848, !1851, !1854, !2045, !2048, !2049, !2052, !2054, !2057}
!919 = distinct !DIGlobalVariable(name: "at9_q_unit_to_codebookidx", scope: !0, file: !898, line: 120, type: !920, isLocal: false, isDefinition: true, variable: [30 x i8]* @at9_q_unit_to_codebookidx)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 240, align: 8, elements: !922)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!922 = !{!923}
!923 = !DISubrange(count: 30)
!924 = distinct !DIGlobalVariable(name: "ff_atrac9_decoder", scope: !0, file: !925, line: 942, type: !926, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_atrac9_decoder)
!925 = !DIFile(filename: "libavcodec/atrac9dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !928)
!928 = !{!929, !933, !934, !935, !936, !937, !946, !949, !952, !955, !960, !961, !1003, !1011, !1012, !1013, !1015, !1566, !1572, !1580, !1584, !1585, !1622, !1626, !1630, !1631, !1635, !1639, !1640, !1644, !1645, !1646}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !927, file: !14, line: 3475, baseType: !930, size: 64, align: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !927, file: !14, line: 3480, baseType: !930, size: 64, align: 64, offset: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !927, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !927, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !927, file: !14, line: 3487, baseType: !904, size: 32, align: 32, offset: 192)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !927, file: !14, line: 3488, baseType: !938, size: 64, align: 64, offset: 256)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !941, line: 61, baseType: !942)
!941 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !941, line: 58, size: 64, align: 32, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !942, file: !941, line: 59, baseType: !904, size: 32, align: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !942, file: !941, line: 60, baseType: !904, size: 32, align: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !927, file: !14, line: 3489, baseType: !947, size: 64, align: 64, offset: 320)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !927, file: !14, line: 3490, baseType: !950, size: 64, align: 64, offset: 384)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !927, file: !14, line: 3491, baseType: !953, size: 64, align: 64, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !927, file: !14, line: 3492, baseType: !956, size: 64, align: 64, offset: 512)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !913, line: 55, baseType: !959)
!959 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !927, file: !14, line: 3493, baseType: !914, size: 8, align: 8, offset: 576)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !927, file: !14, line: 3494, baseType: !962, size: 64, align: 64, offset: 640)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !966)
!966 = !{!967, !968, !973, !977, !978, !979, !980, !984, !990, !992, !996}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !965, file: !691, line: 72, baseType: !930, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !965, file: !691, line: 78, baseType: !969, size: 64, align: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!930, !972}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !965, file: !691, line: 85, baseType: !974, size: 64, align: 64, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64, align: 64)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !965, file: !691, line: 93, baseType: !904, size: 32, align: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !965, file: !691, line: 99, baseType: !904, size: 32, align: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !965, file: !691, line: 108, baseType: !904, size: 32, align: 32, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !965, file: !691, line: 113, baseType: !981, size: 64, align: 64, offset: 320)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!972, !972, !972}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !965, file: !691, line: 123, baseType: !985, size: 64, align: 64, offset: 384)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!988, !988}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !965, file: !691, line: 130, baseType: !991, size: 32, align: 32, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !965, file: !691, line: 136, baseType: !993, size: 64, align: 64, offset: 512)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!991, !972}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !965, file: !691, line: 142, baseType: !997, size: 64, align: 64, offset: 576)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!904, !1000, !972, !930, !904}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !927, file: !14, line: 3495, baseType: !1004, size: 64, align: 64, offset: 704)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1007, file: !14, line: 3402, baseType: !904, size: 32, align: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !14, line: 3403, baseType: !930, size: 64, align: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !927, file: !14, line: 3507, baseType: !930, size: 64, align: 64, offset: 768)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !927, file: !14, line: 3516, baseType: !904, size: 32, align: 32, offset: 832)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !927, file: !14, line: 3517, baseType: !1014, size: 64, align: 64, offset: 896)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !927, file: !14, line: 3527, baseType: !1016, size: 64, align: 64, offset: 960)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!904, !1019}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1029, !1030, !1031, !1032, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1314, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1504, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1021, file: !14, line: 1561, baseType: !962, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1021, file: !14, line: 1562, baseType: !904, size: 32, align: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1021, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1021, file: !14, line: 1565, baseType: !1027, size: 64, align: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1021, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1021, file: !14, line: 1581, baseType: !905, size: 32, align: 32, offset: 224)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1021, file: !14, line: 1583, baseType: !972, size: 64, align: 64, offset: 256)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1021, file: !14, line: 1591, baseType: !1033, size: 64, align: 64, offset: 320)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1035, line: 129, size: 1664, align: 64, elements: !1036)
!1035 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1036 = !{!1037, !1038, !1039, !1040, !1140, !1161, !1162, !1191, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1034, file: !1035, line: 136, baseType: !904, size: 32, align: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1034, file: !1035, line: 151, baseType: !904, size: 32, align: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1034, file: !1035, line: 157, baseType: !904, size: 32, align: 32, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1034, file: !1035, line: 159, baseType: !1041, size: 64, align: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1044)
!1044 = !{!1045, !1050, !1052, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1092, !1094, !1095, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1128, !1129, !1130, !1131, !1132, !1133, !1136, !1137, !1138, !1139}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1043, file: !722, line: 282, baseType: !1046, size: 512, align: 64)
!1046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 512, align: 64, elements: !1048)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64, align: 64)
!1048 = !{!1049}
!1049 = !DISubrange(count: 8)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1043, file: !722, line: 299, baseType: !1051, size: 256, align: 32, offset: 512)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 256, align: 32, elements: !1048)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1043, file: !722, line: 315, baseType: !1053, size: 64, align: 64, offset: 768)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1043, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 832)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1043, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 864)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1043, file: !722, line: 334, baseType: !904, size: 32, align: 32, offset: 896)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1043, file: !722, line: 341, baseType: !904, size: 32, align: 32, offset: 928)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1043, file: !722, line: 346, baseType: !904, size: 32, align: 32, offset: 960)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1043, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1043, file: !722, line: 356, baseType: !940, size: 64, align: 32, offset: 1024)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1043, file: !722, line: 361, baseType: !1062, size: 64, align: 64, offset: 1088)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !913, line: 40, baseType: !1063)
!1063 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1043, file: !722, line: 369, baseType: !1062, size: 64, align: 64, offset: 1152)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1043, file: !722, line: 377, baseType: !1062, size: 64, align: 64, offset: 1216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1043, file: !722, line: 382, baseType: !904, size: 32, align: 32, offset: 1280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1043, file: !722, line: 386, baseType: !904, size: 32, align: 32, offset: 1312)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1043, file: !722, line: 391, baseType: !904, size: 32, align: 32, offset: 1344)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1043, file: !722, line: 396, baseType: !972, size: 64, align: 64, offset: 1408)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1043, file: !722, line: 403, baseType: !1071, size: 512, align: 64, offset: 1472)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 512, align: 64, elements: !1048)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1043, file: !722, line: 410, baseType: !904, size: 32, align: 32, offset: 1984)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1043, file: !722, line: 415, baseType: !904, size: 32, align: 32, offset: 2016)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1043, file: !722, line: 420, baseType: !904, size: 32, align: 32, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1043, file: !722, line: 425, baseType: !904, size: 32, align: 32, offset: 2080)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1043, file: !722, line: 435, baseType: !1062, size: 64, align: 64, offset: 2112)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1043, file: !722, line: 440, baseType: !904, size: 32, align: 32, offset: 2176)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1043, file: !722, line: 445, baseType: !958, size: 64, align: 64, offset: 2240)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1043, file: !722, line: 459, baseType: !1080, size: 512, align: 64, offset: 2304)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 512, align: 64, elements: !1048)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1083, line: 94, baseType: !1084)
!1083 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1083, line: 81, size: 192, align: 64, elements: !1085)
!1085 = !{!1086, !1090, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1084, file: !1083, line: 82, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1083, line: 73, baseType: !1089)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1083, line: 73, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1084, file: !1083, line: 89, baseType: !1047, size: 64, align: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1084, file: !1083, line: 93, baseType: !904, size: 32, align: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1043, file: !722, line: 473, baseType: !1093, size: 64, align: 64, offset: 2816)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1043, file: !722, line: 477, baseType: !904, size: 32, align: 32, offset: 2880)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1043, file: !722, line: 479, baseType: !1096, size: 64, align: 64, offset: 2944)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1109}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1099, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !722, line: 203, baseType: !1047, size: 64, align: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1099, file: !722, line: 204, baseType: !904, size: 32, align: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1099, file: !722, line: 205, baseType: !1105, size: 64, align: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1107, line: 86, baseType: !1108)
!1107 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1107, line: 86, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1099, file: !722, line: 206, baseType: !1081, size: 64, align: 64, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1043, file: !722, line: 480, baseType: !904, size: 32, align: 32, offset: 3008)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1043, file: !722, line: 505, baseType: !904, size: 32, align: 32, offset: 3040)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1043, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1043, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1043, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1043, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1043, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1043, file: !722, line: 532, baseType: !1062, size: 64, align: 64, offset: 3264)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1043, file: !722, line: 539, baseType: !1062, size: 64, align: 64, offset: 3328)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1043, file: !722, line: 547, baseType: !1062, size: 64, align: 64, offset: 3392)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1043, file: !722, line: 554, baseType: !1105, size: 64, align: 64, offset: 3456)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1043, file: !722, line: 563, baseType: !904, size: 32, align: 32, offset: 3520)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1043, file: !722, line: 572, baseType: !904, size: 32, align: 32, offset: 3552)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1043, file: !722, line: 581, baseType: !904, size: 32, align: 32, offset: 3584)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1043, file: !722, line: 588, baseType: !1125, size: 64, align: 64, offset: 3648)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !913, line: 36, baseType: !1127)
!1127 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1043, file: !722, line: 593, baseType: !904, size: 32, align: 32, offset: 3712)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1043, file: !722, line: 596, baseType: !904, size: 32, align: 32, offset: 3744)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1043, file: !722, line: 599, baseType: !1081, size: 64, align: 64, offset: 3776)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1043, file: !722, line: 605, baseType: !1081, size: 64, align: 64, offset: 3840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1043, file: !722, line: 616, baseType: !1081, size: 64, align: 64, offset: 3904)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1043, file: !722, line: 626, baseType: !1134, size: 64, align: 64, offset: 3968)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1135, line: 216, baseType: !959)
!1135 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1043, file: !722, line: 627, baseType: !1134, size: 64, align: 64, offset: 4032)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1043, file: !722, line: 628, baseType: !1134, size: 64, align: 64, offset: 4096)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1043, file: !722, line: 629, baseType: !1134, size: 64, align: 64, offset: 4160)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1043, file: !722, line: 645, baseType: !1081, size: 64, align: 64, offset: 4224)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1034, file: !1035, line: 161, baseType: !1141, size: 64, align: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1035, line: 117, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1035, line: 100, size: 832, align: 64, elements: !1144)
!1144 = !{!1145, !1152, !1153, !1154, !1155, !1156, !1158, !1159, !1160}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1143, file: !1035, line: 105, baseType: !1146, size: 256, align: 64)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 256, align: 64, elements: !1150)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1083, line: 238, baseType: !1149)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1083, line: 238, flags: DIFlagFwdDecl)
!1150 = !{!1151}
!1151 = !DISubrange(count: 4)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1143, file: !1035, line: 110, baseType: !904, size: 32, align: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1143, file: !1035, line: 111, baseType: !904, size: 32, align: 32, offset: 288)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1143, file: !1035, line: 111, baseType: !904, size: 32, align: 32, offset: 320)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1143, file: !1035, line: 112, baseType: !1051, size: 256, align: 32, offset: 352)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1143, file: !1035, line: 113, baseType: !1157, size: 128, align: 32, offset: 608)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 128, align: 32, elements: !1150)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1143, file: !1035, line: 114, baseType: !904, size: 32, align: 32, offset: 736)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1143, file: !1035, line: 115, baseType: !904, size: 32, align: 32, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1143, file: !1035, line: 116, baseType: !904, size: 32, align: 32, offset: 800)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1034, file: !1035, line: 163, baseType: !972, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1034, file: !1035, line: 165, baseType: !1163, size: 128, align: 64, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1035, line: 122, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1035, line: 119, size: 128, align: 64, elements: !1165)
!1165 = !{!1166, !1190}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1164, file: !1035, line: 120, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1186, !1187, !1188, !1189}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1169, file: !14, line: 1451, baseType: !1081, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1169, file: !14, line: 1461, baseType: !1062, size: 64, align: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1169, file: !14, line: 1467, baseType: !1062, size: 64, align: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1169, file: !14, line: 1468, baseType: !1047, size: 64, align: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1169, file: !14, line: 1469, baseType: !904, size: 32, align: 32, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1169, file: !14, line: 1470, baseType: !904, size: 32, align: 32, offset: 288)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1169, file: !14, line: 1474, baseType: !904, size: 32, align: 32, offset: 320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1169, file: !14, line: 1479, baseType: !1179, size: 64, align: 64, offset: 384)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1182)
!1182 = !{!1183, !1184, !1185}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !14, line: 1412, baseType: !1047, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1181, file: !14, line: 1413, baseType: !904, size: 32, align: 32, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1181, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1169, file: !14, line: 1480, baseType: !904, size: 32, align: 32, offset: 448)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1169, file: !14, line: 1486, baseType: !1062, size: 64, align: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1169, file: !14, line: 1488, baseType: !1062, size: 64, align: 64, offset: 576)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1169, file: !14, line: 1497, baseType: !1062, size: 64, align: 64, offset: 640)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1164, file: !1035, line: 121, baseType: !1041, size: 64, align: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1034, file: !1035, line: 166, baseType: !1192, size: 128, align: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1035, line: 127, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1035, line: 124, size: 128, align: 64, elements: !1194)
!1194 = !{!1195, !1268}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1193, file: !1035, line: 125, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1200)
!1200 = !{!1201, !1202, !1226, !1230, !1231, !1265, !1266, !1267}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1199, file: !14, line: 5751, baseType: !962, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1199, file: !14, line: 5756, baseType: !1203, size: 64, align: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1206)
!1206 = !{!1207, !1208, !1211, !1212, !1213, !1217, !1221, !1225}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1205, file: !14, line: 5797, baseType: !930, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1205, file: !14, line: 5804, baseType: !1209, size: 64, align: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1205, file: !14, line: 5815, baseType: !962, size: 64, align: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1205, file: !14, line: 5825, baseType: !904, size: 32, align: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1205, file: !14, line: 5826, baseType: !1214, size: 64, align: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!904, !1197}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1205, file: !14, line: 5827, baseType: !1218, size: 64, align: 64, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!904, !1197, !1167}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1205, file: !14, line: 5828, baseType: !1222, size: 64, align: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{null, !1197}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1205, file: !14, line: 5829, baseType: !1222, size: 64, align: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1199, file: !14, line: 5762, baseType: !1227, size: 64, align: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1229)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1199, file: !14, line: 5768, baseType: !972, size: 64, align: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1199, file: !14, line: 5775, baseType: !1232, size: 64, align: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1234, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1234, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1234, file: !14, line: 3948, baseType: !912, size: 32, align: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1234, file: !14, line: 3958, baseType: !1047, size: 64, align: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1234, file: !14, line: 3962, baseType: !904, size: 32, align: 32, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1234, file: !14, line: 3968, baseType: !904, size: 32, align: 32, offset: 224)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1234, file: !14, line: 3973, baseType: !1062, size: 64, align: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1234, file: !14, line: 3986, baseType: !904, size: 32, align: 32, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1234, file: !14, line: 3999, baseType: !904, size: 32, align: 32, offset: 352)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1234, file: !14, line: 4004, baseType: !904, size: 32, align: 32, offset: 384)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1234, file: !14, line: 4005, baseType: !904, size: 32, align: 32, offset: 416)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1234, file: !14, line: 4010, baseType: !904, size: 32, align: 32, offset: 448)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1234, file: !14, line: 4011, baseType: !904, size: 32, align: 32, offset: 480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1234, file: !14, line: 4020, baseType: !940, size: 64, align: 32, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1234, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1234, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1234, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1234, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1234, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1234, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1234, file: !14, line: 4039, baseType: !904, size: 32, align: 32, offset: 768)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1234, file: !14, line: 4046, baseType: !958, size: 64, align: 64, offset: 832)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1234, file: !14, line: 4050, baseType: !904, size: 32, align: 32, offset: 896)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1234, file: !14, line: 4054, baseType: !904, size: 32, align: 32, offset: 928)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1234, file: !14, line: 4061, baseType: !904, size: 32, align: 32, offset: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1234, file: !14, line: 4065, baseType: !904, size: 32, align: 32, offset: 992)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1234, file: !14, line: 4073, baseType: !904, size: 32, align: 32, offset: 1024)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1234, file: !14, line: 4080, baseType: !904, size: 32, align: 32, offset: 1056)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1234, file: !14, line: 4084, baseType: !904, size: 32, align: 32, offset: 1088)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1199, file: !14, line: 5781, baseType: !1232, size: 64, align: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1199, file: !14, line: 5787, baseType: !940, size: 64, align: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1199, file: !14, line: 5793, baseType: !940, size: 64, align: 32, offset: 448)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1193, file: !1035, line: 126, baseType: !904, size: 32, align: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1034, file: !1035, line: 172, baseType: !1167, size: 64, align: 64, offset: 576)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1034, file: !1035, line: 177, baseType: !1047, size: 64, align: 64, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1034, file: !1035, line: 178, baseType: !905, size: 32, align: 32, offset: 704)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1034, file: !1035, line: 180, baseType: !972, size: 64, align: 64, offset: 768)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1034, file: !1035, line: 185, baseType: !904, size: 32, align: 32, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1034, file: !1035, line: 190, baseType: !972, size: 64, align: 64, offset: 896)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1034, file: !1035, line: 195, baseType: !904, size: 32, align: 32, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1034, file: !1035, line: 200, baseType: !1167, size: 64, align: 64, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1034, file: !1035, line: 201, baseType: !904, size: 32, align: 32, offset: 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1034, file: !1035, line: 202, baseType: !1041, size: 64, align: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1034, file: !1035, line: 203, baseType: !904, size: 32, align: 32, offset: 1216)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1034, file: !1035, line: 205, baseType: !904, size: 32, align: 32, offset: 1248)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1034, file: !1035, line: 206, baseType: !904, size: 32, align: 32, offset: 1280)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1034, file: !1035, line: 209, baseType: !1134, size: 64, align: 64, offset: 1344)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1034, file: !1035, line: 212, baseType: !1134, size: 64, align: 64, offset: 1408)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1034, file: !1035, line: 213, baseType: !1041, size: 64, align: 64, offset: 1472)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1034, file: !1035, line: 215, baseType: !904, size: 32, align: 32, offset: 1536)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1034, file: !1035, line: 217, baseType: !904, size: 32, align: 32, offset: 1568)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1034, file: !1035, line: 220, baseType: !904, size: 32, align: 32, offset: 1600)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1021, file: !14, line: 1598, baseType: !972, size: 64, align: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1021, file: !14, line: 1606, baseType: !1062, size: 64, align: 64, offset: 448)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1021, file: !14, line: 1614, baseType: !904, size: 32, align: 32, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1021, file: !14, line: 1622, baseType: !904, size: 32, align: 32, offset: 544)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1021, file: !14, line: 1628, baseType: !904, size: 32, align: 32, offset: 576)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1021, file: !14, line: 1636, baseType: !904, size: 32, align: 32, offset: 608)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1021, file: !14, line: 1643, baseType: !904, size: 32, align: 32, offset: 640)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1021, file: !14, line: 1657, baseType: !1047, size: 64, align: 64, offset: 704)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1021, file: !14, line: 1658, baseType: !904, size: 32, align: 32, offset: 768)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1021, file: !14, line: 1679, baseType: !940, size: 64, align: 32, offset: 800)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1021, file: !14, line: 1688, baseType: !904, size: 32, align: 32, offset: 864)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1021, file: !14, line: 1712, baseType: !904, size: 32, align: 32, offset: 896)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1021, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 928)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1021, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 960)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1021, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 992)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1021, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1021, file: !14, line: 1751, baseType: !904, size: 32, align: 32, offset: 1056)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1021, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1021, file: !14, line: 1791, baseType: !1307, size: 64, align: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1310, !1311, !1313, !904, !904, !904}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1021, file: !14, line: 1808, baseType: !1315, size: 64, align: 64, offset: 1216)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!473, !1310, !947}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1021, file: !14, line: 1816, baseType: !904, size: 32, align: 32, offset: 1280)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1021, file: !14, line: 1825, baseType: !917, size: 32, align: 32, offset: 1312)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1021, file: !14, line: 1830, baseType: !904, size: 32, align: 32, offset: 1344)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1021, file: !14, line: 1838, baseType: !917, size: 32, align: 32, offset: 1376)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1021, file: !14, line: 1846, baseType: !904, size: 32, align: 32, offset: 1408)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1021, file: !14, line: 1851, baseType: !904, size: 32, align: 32, offset: 1440)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1021, file: !14, line: 1861, baseType: !917, size: 32, align: 32, offset: 1472)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1021, file: !14, line: 1868, baseType: !917, size: 32, align: 32, offset: 1504)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1021, file: !14, line: 1875, baseType: !917, size: 32, align: 32, offset: 1536)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1021, file: !14, line: 1882, baseType: !917, size: 32, align: 32, offset: 1568)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1021, file: !14, line: 1889, baseType: !917, size: 32, align: 32, offset: 1600)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1021, file: !14, line: 1896, baseType: !917, size: 32, align: 32, offset: 1632)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1021, file: !14, line: 1903, baseType: !917, size: 32, align: 32, offset: 1664)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1021, file: !14, line: 1910, baseType: !904, size: 32, align: 32, offset: 1696)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1021, file: !14, line: 1915, baseType: !904, size: 32, align: 32, offset: 1728)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1021, file: !14, line: 1926, baseType: !1313, size: 64, align: 64, offset: 1792)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1021, file: !14, line: 1935, baseType: !940, size: 64, align: 32, offset: 1856)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1021, file: !14, line: 1942, baseType: !904, size: 32, align: 32, offset: 1920)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1021, file: !14, line: 1948, baseType: !904, size: 32, align: 32, offset: 1952)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1021, file: !14, line: 1954, baseType: !904, size: 32, align: 32, offset: 1984)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1021, file: !14, line: 1960, baseType: !904, size: 32, align: 32, offset: 2016)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1021, file: !14, line: 1984, baseType: !904, size: 32, align: 32, offset: 2048)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1021, file: !14, line: 1991, baseType: !904, size: 32, align: 32, offset: 2080)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1021, file: !14, line: 1996, baseType: !904, size: 32, align: 32, offset: 2112)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1021, file: !14, line: 2004, baseType: !904, size: 32, align: 32, offset: 2144)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1021, file: !14, line: 2011, baseType: !904, size: 32, align: 32, offset: 2176)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1021, file: !14, line: 2018, baseType: !904, size: 32, align: 32, offset: 2208)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1021, file: !14, line: 2027, baseType: !904, size: 32, align: 32, offset: 2240)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1021, file: !14, line: 2034, baseType: !904, size: 32, align: 32, offset: 2272)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1021, file: !14, line: 2044, baseType: !904, size: 32, align: 32, offset: 2304)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1021, file: !14, line: 2054, baseType: !1349, size: 64, align: 64, offset: 2368)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64, align: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !913, line: 49, baseType: !1351)
!1351 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1021, file: !14, line: 2061, baseType: !1349, size: 64, align: 64, offset: 2432)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1021, file: !14, line: 2066, baseType: !904, size: 32, align: 32, offset: 2496)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1021, file: !14, line: 2070, baseType: !904, size: 32, align: 32, offset: 2528)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1021, file: !14, line: 2078, baseType: !904, size: 32, align: 32, offset: 2560)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1021, file: !14, line: 2085, baseType: !904, size: 32, align: 32, offset: 2592)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1021, file: !14, line: 2092, baseType: !904, size: 32, align: 32, offset: 2624)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1021, file: !14, line: 2099, baseType: !904, size: 32, align: 32, offset: 2656)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1021, file: !14, line: 2106, baseType: !904, size: 32, align: 32, offset: 2688)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1021, file: !14, line: 2113, baseType: !904, size: 32, align: 32, offset: 2720)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1021, file: !14, line: 2120, baseType: !904, size: 32, align: 32, offset: 2752)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1021, file: !14, line: 2125, baseType: !904, size: 32, align: 32, offset: 2784)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1021, file: !14, line: 2133, baseType: !904, size: 32, align: 32, offset: 2816)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1021, file: !14, line: 2140, baseType: !904, size: 32, align: 32, offset: 2848)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1021, file: !14, line: 2145, baseType: !904, size: 32, align: 32, offset: 2880)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1021, file: !14, line: 2153, baseType: !904, size: 32, align: 32, offset: 2912)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1021, file: !14, line: 2158, baseType: !904, size: 32, align: 32, offset: 2944)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1021, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1021, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1021, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1021, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1021, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1021, file: !14, line: 2203, baseType: !904, size: 32, align: 32, offset: 3136)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1021, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1021, file: !14, line: 2212, baseType: !904, size: 32, align: 32, offset: 3200)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1021, file: !14, line: 2213, baseType: !904, size: 32, align: 32, offset: 3232)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1021, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1021, file: !14, line: 2232, baseType: !904, size: 32, align: 32, offset: 3296)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1021, file: !14, line: 2243, baseType: !904, size: 32, align: 32, offset: 3328)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1021, file: !14, line: 2249, baseType: !904, size: 32, align: 32, offset: 3360)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1021, file: !14, line: 2256, baseType: !904, size: 32, align: 32, offset: 3392)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1021, file: !14, line: 2263, baseType: !958, size: 64, align: 64, offset: 3456)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1021, file: !14, line: 2270, baseType: !958, size: 64, align: 64, offset: 3520)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1021, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1021, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1021, file: !14, line: 2367, baseType: !1387, size: 64, align: 64, offset: 3648)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!904, !1310, !1041, !904}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1021, file: !14, line: 2383, baseType: !904, size: 32, align: 32, offset: 3712)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1021, file: !14, line: 2386, baseType: !917, size: 32, align: 32, offset: 3744)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1021, file: !14, line: 2387, baseType: !917, size: 32, align: 32, offset: 3776)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1021, file: !14, line: 2394, baseType: !904, size: 32, align: 32, offset: 3808)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1021, file: !14, line: 2401, baseType: !904, size: 32, align: 32, offset: 3840)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1021, file: !14, line: 2408, baseType: !904, size: 32, align: 32, offset: 3872)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1021, file: !14, line: 2415, baseType: !904, size: 32, align: 32, offset: 3904)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1021, file: !14, line: 2422, baseType: !904, size: 32, align: 32, offset: 3936)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1021, file: !14, line: 2423, baseType: !1399, size: 64, align: 64, offset: 3968)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1401, file: !14, line: 827, baseType: !904, size: 32, align: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1401, file: !14, line: 828, baseType: !904, size: 32, align: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1401, file: !14, line: 829, baseType: !904, size: 32, align: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1401, file: !14, line: 830, baseType: !917, size: 32, align: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1021, file: !14, line: 2430, baseType: !1062, size: 64, align: 64, offset: 4032)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1021, file: !14, line: 2437, baseType: !1062, size: 64, align: 64, offset: 4096)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1021, file: !14, line: 2444, baseType: !917, size: 32, align: 32, offset: 4160)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1021, file: !14, line: 2451, baseType: !917, size: 32, align: 32, offset: 4192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1021, file: !14, line: 2458, baseType: !904, size: 32, align: 32, offset: 4224)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1021, file: !14, line: 2469, baseType: !904, size: 32, align: 32, offset: 4256)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1021, file: !14, line: 2475, baseType: !904, size: 32, align: 32, offset: 4288)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1021, file: !14, line: 2481, baseType: !904, size: 32, align: 32, offset: 4320)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1021, file: !14, line: 2485, baseType: !904, size: 32, align: 32, offset: 4352)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1021, file: !14, line: 2489, baseType: !904, size: 32, align: 32, offset: 4384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1021, file: !14, line: 2493, baseType: !904, size: 32, align: 32, offset: 4416)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1021, file: !14, line: 2501, baseType: !904, size: 32, align: 32, offset: 4448)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1021, file: !14, line: 2506, baseType: !904, size: 32, align: 32, offset: 4480)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1021, file: !14, line: 2510, baseType: !904, size: 32, align: 32, offset: 4512)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1021, file: !14, line: 2514, baseType: !1062, size: 64, align: 64, offset: 4544)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1021, file: !14, line: 2528, baseType: !1423, size: 64, align: 64, offset: 4608)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64, align: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1310, !972, !904, !904}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1021, file: !14, line: 2534, baseType: !904, size: 32, align: 32, offset: 4672)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1021, file: !14, line: 2545, baseType: !904, size: 32, align: 32, offset: 4704)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1021, file: !14, line: 2547, baseType: !904, size: 32, align: 32, offset: 4736)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1021, file: !14, line: 2549, baseType: !904, size: 32, align: 32, offset: 4768)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1021, file: !14, line: 2551, baseType: !904, size: 32, align: 32, offset: 4800)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1021, file: !14, line: 2553, baseType: !904, size: 32, align: 32, offset: 4832)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1021, file: !14, line: 2555, baseType: !904, size: 32, align: 32, offset: 4864)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1021, file: !14, line: 2557, baseType: !904, size: 32, align: 32, offset: 4896)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1021, file: !14, line: 2559, baseType: !904, size: 32, align: 32, offset: 4928)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1021, file: !14, line: 2563, baseType: !904, size: 32, align: 32, offset: 4960)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1021, file: !14, line: 2571, baseType: !1437, size: 64, align: 64, offset: 4992)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1021, file: !14, line: 2579, baseType: !1437, size: 64, align: 64, offset: 5056)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1021, file: !14, line: 2586, baseType: !904, size: 32, align: 32, offset: 5120)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1021, file: !14, line: 2615, baseType: !904, size: 32, align: 32, offset: 5152)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1021, file: !14, line: 2627, baseType: !904, size: 32, align: 32, offset: 5184)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1021, file: !14, line: 2637, baseType: !904, size: 32, align: 32, offset: 5216)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1021, file: !14, line: 2681, baseType: !904, size: 32, align: 32, offset: 5248)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1021, file: !14, line: 2709, baseType: !1062, size: 64, align: 64, offset: 5312)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1021, file: !14, line: 2716, baseType: !1446, size: 64, align: 64, offset: 5376)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64, align: 64)
!1447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455, !1459, !1464, !1468, !1469, !1470, !1471, !1477, !1478, !1479, !1480, !1481}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1448, file: !14, line: 3642, baseType: !930, size: 64, align: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1448, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1448, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1448, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1448, file: !14, line: 3669, baseType: !904, size: 32, align: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1448, file: !14, line: 3682, baseType: !1456, size: 64, align: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!904, !1019, !1041}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1448, file: !14, line: 3698, baseType: !1460, size: 64, align: 64, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64, align: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!904, !1019, !1463, !912}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1448, file: !14, line: 3712, baseType: !1465, size: 64, align: 64, offset: 320)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!904, !1019, !904, !1463, !912}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1448, file: !14, line: 3726, baseType: !1460, size: 64, align: 64, offset: 384)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1448, file: !14, line: 3737, baseType: !1016, size: 64, align: 64, offset: 448)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1448, file: !14, line: 3746, baseType: !904, size: 32, align: 32, offset: 512)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1448, file: !14, line: 3757, baseType: !1472, size: 64, align: 64, offset: 576)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{null, !1475}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1448, file: !14, line: 3766, baseType: !1016, size: 64, align: 64, offset: 640)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1448, file: !14, line: 3774, baseType: !1016, size: 64, align: 64, offset: 704)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1448, file: !14, line: 3780, baseType: !904, size: 32, align: 32, offset: 768)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1448, file: !14, line: 3785, baseType: !904, size: 32, align: 32, offset: 800)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1448, file: !14, line: 3795, baseType: !1482, size: 64, align: 64, offset: 832)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!904, !1019, !1081}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1021, file: !14, line: 2728, baseType: !972, size: 64, align: 64, offset: 5440)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1021, file: !14, line: 2735, baseType: !1071, size: 512, align: 64, offset: 5504)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1021, file: !14, line: 2742, baseType: !904, size: 32, align: 32, offset: 6016)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1021, file: !14, line: 2755, baseType: !904, size: 32, align: 32, offset: 6048)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1021, file: !14, line: 2776, baseType: !904, size: 32, align: 32, offset: 6080)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1021, file: !14, line: 2783, baseType: !904, size: 32, align: 32, offset: 6112)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1021, file: !14, line: 2791, baseType: !904, size: 32, align: 32, offset: 6144)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1021, file: !14, line: 2802, baseType: !1041, size: 64, align: 64, offset: 6208)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1021, file: !14, line: 2811, baseType: !904, size: 32, align: 32, offset: 6272)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1021, file: !14, line: 2821, baseType: !904, size: 32, align: 32, offset: 6304)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1021, file: !14, line: 2830, baseType: !904, size: 32, align: 32, offset: 6336)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1021, file: !14, line: 2840, baseType: !904, size: 32, align: 32, offset: 6368)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1021, file: !14, line: 2851, baseType: !1498, size: 64, align: 64, offset: 6400)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64, align: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!904, !1310, !1501, !972, !1313, !904, !904}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!904, !1310, !972}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1021, file: !14, line: 2871, baseType: !1505, size: 64, align: 64, offset: 6464)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!904, !1310, !1508, !972, !1313, !904}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!904, !1310, !972, !904, !904}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1021, file: !14, line: 2878, baseType: !904, size: 32, align: 32, offset: 6528)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1021, file: !14, line: 2885, baseType: !904, size: 32, align: 32, offset: 6560)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1021, file: !14, line: 3005, baseType: !904, size: 32, align: 32, offset: 6592)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1021, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1021, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1021, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1021, file: !14, line: 3037, baseType: !1047, size: 64, align: 64, offset: 6720)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1021, file: !14, line: 3038, baseType: !904, size: 32, align: 32, offset: 6784)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1021, file: !14, line: 3050, baseType: !958, size: 64, align: 64, offset: 6848)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1021, file: !14, line: 3065, baseType: !904, size: 32, align: 32, offset: 6912)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1021, file: !14, line: 3083, baseType: !904, size: 32, align: 32, offset: 6944)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1021, file: !14, line: 3092, baseType: !940, size: 64, align: 32, offset: 6976)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1021, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1021, file: !14, line: 3106, baseType: !940, size: 64, align: 32, offset: 7072)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1021, file: !14, line: 3113, baseType: !1526, size: 64, align: 64, offset: 7168)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64, align: 64)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535, !1536, !1539}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1529, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1529, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1529, file: !14, line: 720, baseType: !930, size: 64, align: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1529, file: !14, line: 724, baseType: !930, size: 64, align: 64, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1529, file: !14, line: 728, baseType: !904, size: 32, align: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1529, file: !14, line: 734, baseType: !1537, size: 64, align: 64, offset: 256)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64, align: 64)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1529, file: !14, line: 739, baseType: !1540, size: 64, align: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1021, file: !14, line: 3129, baseType: !1062, size: 64, align: 64, offset: 7232)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1021, file: !14, line: 3130, baseType: !1062, size: 64, align: 64, offset: 7296)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1021, file: !14, line: 3131, baseType: !1062, size: 64, align: 64, offset: 7360)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1021, file: !14, line: 3132, baseType: !1062, size: 64, align: 64, offset: 7424)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1021, file: !14, line: 3139, baseType: !1437, size: 64, align: 64, offset: 7488)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1021, file: !14, line: 3147, baseType: !904, size: 32, align: 32, offset: 7552)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1021, file: !14, line: 3165, baseType: !904, size: 32, align: 32, offset: 7584)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1021, file: !14, line: 3172, baseType: !904, size: 32, align: 32, offset: 7616)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1021, file: !14, line: 3180, baseType: !904, size: 32, align: 32, offset: 7648)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1021, file: !14, line: 3191, baseType: !1349, size: 64, align: 64, offset: 7680)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1021, file: !14, line: 3199, baseType: !1047, size: 64, align: 64, offset: 7744)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1021, file: !14, line: 3207, baseType: !1437, size: 64, align: 64, offset: 7808)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1021, file: !14, line: 3214, baseType: !905, size: 32, align: 32, offset: 7872)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1021, file: !14, line: 3224, baseType: !1179, size: 64, align: 64, offset: 7936)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1021, file: !14, line: 3225, baseType: !904, size: 32, align: 32, offset: 8000)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1021, file: !14, line: 3249, baseType: !1081, size: 64, align: 64, offset: 8064)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1021, file: !14, line: 3256, baseType: !904, size: 32, align: 32, offset: 8128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1021, file: !14, line: 3271, baseType: !904, size: 32, align: 32, offset: 8160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1021, file: !14, line: 3279, baseType: !1062, size: 64, align: 64, offset: 8192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1021, file: !14, line: 3301, baseType: !1081, size: 64, align: 64, offset: 8256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1021, file: !14, line: 3310, baseType: !904, size: 32, align: 32, offset: 8320)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1021, file: !14, line: 3337, baseType: !904, size: 32, align: 32, offset: 8352)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1021, file: !14, line: 3351, baseType: !904, size: 32, align: 32, offset: 8384)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1021, file: !14, line: 3359, baseType: !904, size: 32, align: 32, offset: 8416)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !927, file: !14, line: 3535, baseType: !1567, size: 64, align: 64, offset: 1024)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!904, !1019, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!1571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !927, file: !14, line: 3541, baseType: !1573, size: 64, align: 64, offset: 1088)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1035, line: 223, size: 128, align: 64, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1576, file: !1035, line: 224, baseType: !1463, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1576, file: !1035, line: 225, baseType: !1463, size: 64, align: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !927, file: !14, line: 3549, baseType: !1581, size: 64, align: 64, offset: 1152)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1014}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !927, file: !14, line: 3551, baseType: !1016, size: 64, align: 64, offset: 1216)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !927, file: !14, line: 3552, baseType: !1586, size: 64, align: 64, offset: 1280)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!904, !1019, !1047, !904, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1621}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1591, file: !14, line: 3921, baseType: !1350, size: 16, align: 16)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1591, file: !14, line: 3922, baseType: !912, size: 32, align: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1591, file: !14, line: 3923, baseType: !912, size: 32, align: 32, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1591, file: !14, line: 3924, baseType: !905, size: 32, align: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1591, file: !14, line: 3925, baseType: !1598, size: 64, align: 64, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1601)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1614, !1616, !1617, !1618, !1619, !1620}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1601, file: !14, line: 3886, baseType: !904, size: 32, align: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1601, file: !14, line: 3887, baseType: !904, size: 32, align: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1601, file: !14, line: 3888, baseType: !904, size: 32, align: 32, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1601, file: !14, line: 3889, baseType: !904, size: 32, align: 32, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1601, file: !14, line: 3890, baseType: !904, size: 32, align: 32, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1601, file: !14, line: 3897, baseType: !1609, size: 768, align: 64, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1610, file: !14, line: 3855, baseType: !1046, size: 512, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1610, file: !14, line: 3857, baseType: !1051, size: 256, align: 32, offset: 512)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1601, file: !14, line: 3903, baseType: !1615, size: 256, align: 64, offset: 960)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 256, align: 64, elements: !1150)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1601, file: !14, line: 3904, baseType: !1157, size: 128, align: 32, offset: 1216)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1601, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1601, file: !14, line: 3908, baseType: !1437, size: 64, align: 64, offset: 1408)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1601, file: !14, line: 3915, baseType: !1437, size: 64, align: 64, offset: 1472)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1601, file: !14, line: 3917, baseType: !904, size: 32, align: 32, offset: 1536)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1591, file: !14, line: 3926, baseType: !1062, size: 64, align: 64, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !927, file: !14, line: 3564, baseType: !1623, size: 64, align: 64, offset: 1344)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!904, !1019, !1167, !1311, !1313}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !927, file: !14, line: 3566, baseType: !1627, size: 64, align: 64, offset: 1408)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!904, !1019, !972, !1313, !1167}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !927, file: !14, line: 3567, baseType: !1016, size: 64, align: 64, offset: 1472)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !927, file: !14, line: 3576, baseType: !1632, size: 64, align: 64, offset: 1536)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64, align: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!904, !1019, !1311}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !927, file: !14, line: 3577, baseType: !1636, size: 64, align: 64, offset: 1600)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!904, !1019, !1167}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !927, file: !14, line: 3584, baseType: !1456, size: 64, align: 64, offset: 1664)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !927, file: !14, line: 3589, baseType: !1641, size: 64, align: 64, offset: 1728)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !1019}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !927, file: !14, line: 3594, baseType: !904, size: 32, align: 32, offset: 1792)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !927, file: !14, line: 3600, baseType: !930, size: 64, align: 64, offset: 1856)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !927, file: !14, line: 3609, baseType: !1647, size: 64, align: 64, offset: 1920)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1651 = distinct !DIGlobalVariable(name: "at9_tab_samplerates", scope: !0, file: !898, line: 129, type: !1652, isLocal: true, isDefinition: true, variable: [16 x i32]* @at9_tab_samplerates)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 512, align: 32, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 16)
!1655 = distinct !DIGlobalVariable(name: "at9_block_layout", scope: !0, file: !898, line: 42, type: !1656, isLocal: true, isDefinition: true, variable: [6 x %struct.ATRAC9BlockConfig]* @at9_block_layout)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 3456, align: 64, elements: !1671)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATRAC9BlockConfig", file: !898, line: 40, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ATRAC9BlockConfig", file: !898, line: 35, size: 576, align: 64, elements: !1660)
!1660 = !{!1661, !1662, !1666, !1670}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1659, file: !898, line: 36, baseType: !958, size: 64, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1659, file: !898, line: 37, baseType: !1663, size: 160, align: 32, offset: 64)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 160, align: 32, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 5)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "plane_map", scope: !1659, file: !898, line: 38, baseType: !1667, size: 320, align: 32, offset: 224)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 320, align: 32, elements: !1668)
!1668 = !{!1665, !1669}
!1669 = !DISubrange(count: 2)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1659, file: !898, line: 39, baseType: !904, size: 32, align: 32, offset: 544)
!1671 = !{!1672}
!1672 = !DISubrange(count: 6)
!1673 = distinct !DIGlobalVariable(name: "at9_tab_sri_frame_log2", scope: !0, file: !898, line: 102, type: !1674, isLocal: true, isDefinition: true, variable: [16 x i8]* @at9_tab_sri_frame_log2)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 128, align: 8, elements: !1653)
!1675 = distinct !DIGlobalVariable(name: "at9_tab_b_dist", scope: !0, file: !898, line: 383, type: !1676, isLocal: true, isDefinition: true, variable: [48 x i8]* @at9_tab_b_dist)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 384, align: 8, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 48)
!1679 = distinct !DIGlobalVariable(name: "at9_huffman_sf_unsigned", scope: !0, file: !898, line: 495, type: !1680, isLocal: true, isDefinition: true, variable: [7 x %struct.HuffmanCodebook]* @at9_huffman_sf_unsigned)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 2240, align: 64, elements: !1694)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "HuffmanCodebook", file: !898, line: 493, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HuffmanCodebook", file: !898, line: 485, size: 320, align: 64, elements: !1684)
!1684 = !{!1685, !1686, !1689, !1690, !1691, !1692, !1693}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1683, file: !898, line: 486, baseType: !1463, size: 64, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "codes", scope: !1683, file: !898, line: 487, baseType: !1687, size: 64, align: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1350)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1683, file: !898, line: 488, baseType: !951, size: 32, align: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "value_cnt", scope: !1683, file: !898, line: 489, baseType: !951, size: 32, align: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "value_cnt_pow", scope: !1683, file: !898, line: 490, baseType: !951, size: 32, align: 32, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "value_bits", scope: !1683, file: !898, line: 491, baseType: !951, size: 32, align: 32, offset: 224)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "max_bit_size", scope: !1683, file: !898, line: 492, baseType: !951, size: 32, align: 32, offset: 256)
!1694 = !{!1695}
!1695 = !DISubrange(count: 7)
!1696 = distinct !DIGlobalVariable(name: "huff_sfb_a1_bits", scope: !0, file: !898, line: 389, type: !1697, isLocal: true, isDefinition: true, variable: [2 x i8]* @huff_sfb_a1_bits)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 16, align: 8, elements: !1698)
!1698 = !{!1669}
!1699 = distinct !DIGlobalVariable(name: "huff_sfb_a1_codes", scope: !0, file: !898, line: 393, type: !1700, isLocal: true, isDefinition: true, variable: [2 x i16]* @huff_sfb_a1_codes)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 32, align: 16, elements: !1698)
!1701 = distinct !DIGlobalVariable(name: "huff_sfb_a2_bits", scope: !0, file: !898, line: 397, type: !1702, isLocal: true, isDefinition: true, variable: [4 x i8]* @huff_sfb_a2_bits)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 32, align: 8, elements: !1150)
!1703 = distinct !DIGlobalVariable(name: "huff_sfb_a2_codes", scope: !0, file: !898, line: 401, type: !1704, isLocal: true, isDefinition: true, variable: [4 x i16]* @huff_sfb_a2_codes)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 64, align: 16, elements: !1150)
!1705 = distinct !DIGlobalVariable(name: "huff_sfb_a3_bits", scope: !0, file: !898, line: 405, type: !1706, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_sfb_a3_bits)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 64, align: 8, elements: !1048)
!1707 = distinct !DIGlobalVariable(name: "huff_sfb_a3_codes", scope: !0, file: !898, line: 409, type: !1708, isLocal: true, isDefinition: true, variable: [8 x i16]* @huff_sfb_a3_codes)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 128, align: 16, elements: !1048)
!1709 = distinct !DIGlobalVariable(name: "huff_sfb_a4_bits", scope: !0, file: !898, line: 413, type: !1674, isLocal: true, isDefinition: true, variable: [16 x i8]* @huff_sfb_a4_bits)
!1710 = distinct !DIGlobalVariable(name: "huff_sfb_a4_codes", scope: !0, file: !898, line: 417, type: !1711, isLocal: true, isDefinition: true, variable: [16 x i16]* @huff_sfb_a4_codes)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 256, align: 16, elements: !1653)
!1712 = distinct !DIGlobalVariable(name: "huff_sfb_a5_bits", scope: !0, file: !898, line: 422, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_sfb_a5_bits)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 256, align: 8, elements: !1714)
!1714 = !{!1715}
!1715 = !DISubrange(count: 32)
!1716 = distinct !DIGlobalVariable(name: "huff_sfb_a5_codes", scope: !0, file: !898, line: 427, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_sfb_a5_codes)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 512, align: 16, elements: !1714)
!1718 = distinct !DIGlobalVariable(name: "huff_sfb_a6_bits", scope: !0, file: !898, line: 433, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_sfb_a6_bits)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 512, align: 8, elements: !1720)
!1720 = !{!1721}
!1721 = !DISubrange(count: 64)
!1722 = distinct !DIGlobalVariable(name: "huff_sfb_a6_codes", scope: !0, file: !898, line: 440, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_sfb_a6_codes)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 1024, align: 16, elements: !1720)
!1724 = distinct !DIGlobalVariable(name: "at9_huffman_sf_signed", scope: !0, file: !898, line: 505, type: !1725, isLocal: true, isDefinition: true, variable: [6 x %struct.HuffmanCodebook]* @at9_huffman_sf_signed)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 1920, align: 64, elements: !1671)
!1726 = distinct !DIGlobalVariable(name: "huff_sfb_b2_bits", scope: !0, file: !898, line: 449, type: !1702, isLocal: true, isDefinition: true, variable: [4 x i8]* @huff_sfb_b2_bits)
!1727 = distinct !DIGlobalVariable(name: "huff_sfb_b2_codes", scope: !0, file: !898, line: 453, type: !1704, isLocal: true, isDefinition: true, variable: [4 x i16]* @huff_sfb_b2_codes)
!1728 = distinct !DIGlobalVariable(name: "huff_sfb_b3_bits", scope: !0, file: !898, line: 457, type: !1706, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_sfb_b3_bits)
!1729 = distinct !DIGlobalVariable(name: "huff_sfb_b3_codes", scope: !0, file: !898, line: 461, type: !1708, isLocal: true, isDefinition: true, variable: [8 x i16]* @huff_sfb_b3_codes)
!1730 = distinct !DIGlobalVariable(name: "huff_sfb_b4_bits", scope: !0, file: !898, line: 465, type: !1674, isLocal: true, isDefinition: true, variable: [16 x i8]* @huff_sfb_b4_bits)
!1731 = distinct !DIGlobalVariable(name: "huff_sfb_b4_codes", scope: !0, file: !898, line: 469, type: !1711, isLocal: true, isDefinition: true, variable: [16 x i16]* @huff_sfb_b4_codes)
!1732 = distinct !DIGlobalVariable(name: "huff_sfb_b5_bits", scope: !0, file: !898, line: 474, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_sfb_b5_bits)
!1733 = distinct !DIGlobalVariable(name: "huff_sfb_b5_codes", scope: !0, file: !898, line: 479, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_sfb_b5_codes)
!1734 = distinct !DIGlobalVariable(name: "at9_huffman_coeffs", scope: !0, file: !898, line: 1550, type: !1735, isLocal: true, isDefinition: true, variable: [2 x [8 x [4 x %struct.HuffmanCodebook]]]* @at9_huffman_coeffs)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 20480, align: 64, elements: !1736)
!1736 = !{!1669, !1049, !1151}
!1737 = distinct !DIGlobalVariable(name: "huff_spec_a21_bits", scope: !0, file: !898, line: 514, type: !1674, isLocal: true, isDefinition: true, variable: [16 x i8]* @huff_spec_a21_bits)
!1738 = distinct !DIGlobalVariable(name: "huff_spec_a21_codes", scope: !0, file: !898, line: 518, type: !1711, isLocal: true, isDefinition: true, variable: [16 x i16]* @huff_spec_a21_codes)
!1739 = distinct !DIGlobalVariable(name: "huff_spec_a22_bits", scope: !0, file: !898, line: 523, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a22_bits)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 2048, align: 8, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 256)
!1743 = distinct !DIGlobalVariable(name: "huff_spec_a22_codes", scope: !0, file: !898, line: 542, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a22_codes)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 4096, align: 16, elements: !1741)
!1745 = distinct !DIGlobalVariable(name: "huff_spec_a23_bits", scope: !0, file: !898, line: 561, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a23_bits)
!1746 = distinct !DIGlobalVariable(name: "huff_spec_a23_codes", scope: !0, file: !898, line: 580, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a23_codes)
!1747 = distinct !DIGlobalVariable(name: "huff_spec_a24_bits", scope: !0, file: !898, line: 605, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a24_bits)
!1748 = distinct !DIGlobalVariable(name: "huff_spec_a24_codes", scope: !0, file: !898, line: 624, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a24_codes)
!1749 = distinct !DIGlobalVariable(name: "huff_spec_a31_bits", scope: !0, file: !898, line: 649, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a31_bits)
!1750 = distinct !DIGlobalVariable(name: "huff_spec_a31_codes", scope: !0, file: !898, line: 656, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a31_codes)
!1751 = distinct !DIGlobalVariable(name: "huff_spec_a32_bits", scope: !0, file: !898, line: 663, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a32_bits)
!1752 = distinct !DIGlobalVariable(name: "huff_spec_a32_codes", scope: !0, file: !898, line: 670, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a32_codes)
!1753 = distinct !DIGlobalVariable(name: "huff_spec_a33_bits", scope: !0, file: !898, line: 677, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a33_bits)
!1754 = distinct !DIGlobalVariable(name: "huff_spec_a33_codes", scope: !0, file: !898, line: 684, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a33_codes)
!1755 = distinct !DIGlobalVariable(name: "huff_spec_a34_bits", scope: !0, file: !898, line: 691, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a34_bits)
!1756 = distinct !DIGlobalVariable(name: "huff_spec_a34_codes", scope: !0, file: !898, line: 698, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a34_codes)
!1757 = distinct !DIGlobalVariable(name: "huff_spec_a41_bits", scope: !0, file: !898, line: 707, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a41_bits)
!1758 = distinct !DIGlobalVariable(name: "huff_spec_a41_codes", scope: !0, file: !898, line: 726, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a41_codes)
!1759 = distinct !DIGlobalVariable(name: "huff_spec_a42_bits", scope: !0, file: !898, line: 751, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a42_bits)
!1760 = distinct !DIGlobalVariable(name: "huff_spec_a42_codes", scope: !0, file: !898, line: 770, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a42_codes)
!1761 = distinct !DIGlobalVariable(name: "huff_spec_a43_bits", scope: !0, file: !898, line: 795, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a43_bits)
!1762 = distinct !DIGlobalVariable(name: "huff_spec_a43_codes", scope: !0, file: !898, line: 814, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a43_codes)
!1763 = distinct !DIGlobalVariable(name: "huff_spec_a44_bits", scope: !0, file: !898, line: 839, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_a44_bits)
!1764 = distinct !DIGlobalVariable(name: "huff_spec_a44_codes", scope: !0, file: !898, line: 858, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_a44_codes)
!1765 = distinct !DIGlobalVariable(name: "huff_spec_a51_bits", scope: !0, file: !898, line: 883, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_a51_bits)
!1766 = distinct !DIGlobalVariable(name: "huff_spec_a51_codes", scope: !0, file: !898, line: 888, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_a51_codes)
!1767 = distinct !DIGlobalVariable(name: "huff_spec_a52_bits", scope: !0, file: !898, line: 894, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_a52_bits)
!1768 = distinct !DIGlobalVariable(name: "huff_spec_a52_codes", scope: !0, file: !898, line: 899, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_a52_codes)
!1769 = distinct !DIGlobalVariable(name: "huff_spec_a53_bits", scope: !0, file: !898, line: 905, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_a53_bits)
!1770 = distinct !DIGlobalVariable(name: "huff_spec_a53_codes", scope: !0, file: !898, line: 910, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_a53_codes)
!1771 = distinct !DIGlobalVariable(name: "huff_spec_a54_bits", scope: !0, file: !898, line: 916, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_a54_bits)
!1772 = distinct !DIGlobalVariable(name: "huff_spec_a54_codes", scope: !0, file: !898, line: 921, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_a54_codes)
!1773 = distinct !DIGlobalVariable(name: "huff_spec_a61_bits", scope: !0, file: !898, line: 927, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a61_bits)
!1774 = distinct !DIGlobalVariable(name: "huff_spec_a61_codes", scope: !0, file: !898, line: 934, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a61_codes)
!1775 = distinct !DIGlobalVariable(name: "huff_spec_a62_bits", scope: !0, file: !898, line: 943, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a62_bits)
!1776 = distinct !DIGlobalVariable(name: "huff_spec_a62_codes", scope: !0, file: !898, line: 950, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a62_codes)
!1777 = distinct !DIGlobalVariable(name: "huff_spec_a63_bits", scope: !0, file: !898, line: 959, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a63_bits)
!1778 = distinct !DIGlobalVariable(name: "huff_spec_a63_codes", scope: !0, file: !898, line: 966, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a63_codes)
!1779 = distinct !DIGlobalVariable(name: "huff_spec_a64_bits", scope: !0, file: !898, line: 975, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_a64_bits)
!1780 = distinct !DIGlobalVariable(name: "huff_spec_a64_codes", scope: !0, file: !898, line: 982, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_a64_codes)
!1781 = distinct !DIGlobalVariable(name: "huff_spec_a71_bits", scope: !0, file: !898, line: 992, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_a71_bits)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 1024, align: 8, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 128)
!1785 = distinct !DIGlobalVariable(name: "huff_spec_a71_codes", scope: !0, file: !898, line: 1003, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_a71_codes)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 2048, align: 16, elements: !1783)
!1787 = distinct !DIGlobalVariable(name: "huff_spec_a72_bits", scope: !0, file: !898, line: 1014, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_a72_bits)
!1788 = distinct !DIGlobalVariable(name: "huff_spec_a72_codes", scope: !0, file: !898, line: 1025, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_a72_codes)
!1789 = distinct !DIGlobalVariable(name: "huff_spec_a73_bits", scope: !0, file: !898, line: 1036, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_a73_bits)
!1790 = distinct !DIGlobalVariable(name: "huff_spec_a73_codes", scope: !0, file: !898, line: 1047, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_a73_codes)
!1791 = distinct !DIGlobalVariable(name: "huff_spec_a74_bits", scope: !0, file: !898, line: 1061, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_a74_bits)
!1792 = distinct !DIGlobalVariable(name: "huff_spec_a74_codes", scope: !0, file: !898, line: 1072, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_a74_codes)
!1793 = distinct !DIGlobalVariable(name: "huff_spec_b22_bits", scope: !0, file: !898, line: 1086, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b22_bits)
!1794 = distinct !DIGlobalVariable(name: "huff_spec_b22_codes", scope: !0, file: !898, line: 1105, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b22_codes)
!1795 = distinct !DIGlobalVariable(name: "huff_spec_b23_bits", scope: !0, file: !898, line: 1130, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b23_bits)
!1796 = distinct !DIGlobalVariable(name: "huff_spec_b23_codes", scope: !0, file: !898, line: 1149, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b23_codes)
!1797 = distinct !DIGlobalVariable(name: "huff_spec_b24_bits", scope: !0, file: !898, line: 1174, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b24_bits)
!1798 = distinct !DIGlobalVariable(name: "huff_spec_b24_codes", scope: !0, file: !898, line: 1193, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b24_codes)
!1799 = distinct !DIGlobalVariable(name: "huff_spec_b32_bits", scope: !0, file: !898, line: 1218, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b32_bits)
!1800 = distinct !DIGlobalVariable(name: "huff_spec_b32_codes", scope: !0, file: !898, line: 1225, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b32_codes)
!1801 = distinct !DIGlobalVariable(name: "huff_spec_b33_bits", scope: !0, file: !898, line: 1234, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b33_bits)
!1802 = distinct !DIGlobalVariable(name: "huff_spec_b33_codes", scope: !0, file: !898, line: 1241, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b33_codes)
!1803 = distinct !DIGlobalVariable(name: "huff_spec_b34_bits", scope: !0, file: !898, line: 1250, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b34_bits)
!1804 = distinct !DIGlobalVariable(name: "huff_spec_b34_codes", scope: !0, file: !898, line: 1257, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b34_codes)
!1805 = distinct !DIGlobalVariable(name: "huff_spec_b42_bits", scope: !0, file: !898, line: 1266, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b42_bits)
!1806 = distinct !DIGlobalVariable(name: "huff_spec_b42_codes", scope: !0, file: !898, line: 1285, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b42_codes)
!1807 = distinct !DIGlobalVariable(name: "huff_spec_b43_bits", scope: !0, file: !898, line: 1310, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b43_bits)
!1808 = distinct !DIGlobalVariable(name: "huff_spec_b43_codes", scope: !0, file: !898, line: 1329, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b43_codes)
!1809 = distinct !DIGlobalVariable(name: "huff_spec_b44_bits", scope: !0, file: !898, line: 1354, type: !1740, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_spec_b44_bits)
!1810 = distinct !DIGlobalVariable(name: "huff_spec_b44_codes", scope: !0, file: !898, line: 1373, type: !1744, isLocal: true, isDefinition: true, variable: [256 x i16]* @huff_spec_b44_codes)
!1811 = distinct !DIGlobalVariable(name: "huff_spec_b52_bits", scope: !0, file: !898, line: 1398, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_b52_bits)
!1812 = distinct !DIGlobalVariable(name: "huff_spec_b52_codes", scope: !0, file: !898, line: 1403, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_b52_codes)
!1813 = distinct !DIGlobalVariable(name: "huff_spec_b53_bits", scope: !0, file: !898, line: 1408, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_b53_bits)
!1814 = distinct !DIGlobalVariable(name: "huff_spec_b53_codes", scope: !0, file: !898, line: 1413, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_b53_codes)
!1815 = distinct !DIGlobalVariable(name: "huff_spec_b54_bits", scope: !0, file: !898, line: 1418, type: !1713, isLocal: true, isDefinition: true, variable: [32 x i8]* @huff_spec_b54_bits)
!1816 = distinct !DIGlobalVariable(name: "huff_spec_b54_codes", scope: !0, file: !898, line: 1423, type: !1717, isLocal: true, isDefinition: true, variable: [32 x i16]* @huff_spec_b54_codes)
!1817 = distinct !DIGlobalVariable(name: "huff_spec_b62_bits", scope: !0, file: !898, line: 1429, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b62_bits)
!1818 = distinct !DIGlobalVariable(name: "huff_spec_b62_codes", scope: !0, file: !898, line: 1436, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b62_codes)
!1819 = distinct !DIGlobalVariable(name: "huff_spec_b63_bits", scope: !0, file: !898, line: 1443, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b63_bits)
!1820 = distinct !DIGlobalVariable(name: "huff_spec_b63_codes", scope: !0, file: !898, line: 1450, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b63_codes)
!1821 = distinct !DIGlobalVariable(name: "huff_spec_b64_bits", scope: !0, file: !898, line: 1459, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @huff_spec_b64_bits)
!1822 = distinct !DIGlobalVariable(name: "huff_spec_b64_codes", scope: !0, file: !898, line: 1466, type: !1723, isLocal: true, isDefinition: true, variable: [64 x i16]* @huff_spec_b64_codes)
!1823 = distinct !DIGlobalVariable(name: "huff_spec_b72_bits", scope: !0, file: !898, line: 1475, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_b72_bits)
!1824 = distinct !DIGlobalVariable(name: "huff_spec_b72_codes", scope: !0, file: !898, line: 1486, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_b72_codes)
!1825 = distinct !DIGlobalVariable(name: "huff_spec_b73_bits", scope: !0, file: !898, line: 1500, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_b73_bits)
!1826 = distinct !DIGlobalVariable(name: "huff_spec_b73_codes", scope: !0, file: !898, line: 1511, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_b73_codes)
!1827 = distinct !DIGlobalVariable(name: "huff_spec_b74_bits", scope: !0, file: !898, line: 1525, type: !1782, isLocal: true, isDefinition: true, variable: [128 x i8]* @huff_spec_b74_bits)
!1828 = distinct !DIGlobalVariable(name: "huff_spec_b74_codes", scope: !0, file: !898, line: 1536, type: !1786, isLocal: true, isDefinition: true, variable: [128 x i16]* @huff_spec_b74_codes)
!1829 = distinct !DIGlobalVariable(name: "at9_q_unit_to_coeff_idx", scope: !0, file: !898, line: 115, type: !1830, isLocal: true, isDefinition: true, variable: [31 x i32]* @at9_q_unit_to_coeff_idx)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 992, align: 32, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 31)
!1833 = distinct !DIGlobalVariable(name: "at9_quant_step_coarse", scope: !0, file: !898, line: 319, type: !1834, isLocal: true, isDefinition: true, variable: [16 x float]* @at9_quant_step_coarse)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 512, align: 32, elements: !1653)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!1836 = distinct !DIGlobalVariable(name: "at9_quant_step_fine", scope: !0, file: !898, line: 328, type: !1834, isLocal: true, isDefinition: true, variable: [16 x float]* @at9_quant_step_fine)
!1837 = distinct !DIGlobalVariable(name: "at9_scalefactor_c", scope: !0, file: !898, line: 337, type: !1838, isLocal: true, isDefinition: true, variable: [32 x float]* @at9_scalefactor_c)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 1024, align: 32, elements: !1714)
!1839 = distinct !DIGlobalVariable(name: "at9_tab_band_q_unit_map", scope: !0, file: !898, line: 106, type: !1840, isLocal: true, isDefinition: true, variable: [19 x i8]* @at9_tab_band_q_unit_map)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 152, align: 8, elements: !1841)
!1841 = !{!1842}
!1842 = !DISubrange(count: 19)
!1843 = distinct !DIGlobalVariable(name: "at9_tab_sri_max_bands", scope: !0, file: !898, line: 125, type: !1674, isLocal: true, isDefinition: true, variable: [16 x i8]* @at9_tab_sri_max_bands)
!1844 = distinct !DIGlobalVariable(name: "at9_tab_band_ext_group", scope: !0, file: !898, line: 143, type: !1845, isLocal: true, isDefinition: true, variable: [8 x [3 x i8]]* @at9_tab_band_ext_group)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 192, align: 8, elements: !1846)
!1846 = !{!1049, !1847}
!1847 = !DISubrange(count: 3)
!1848 = distinct !DIGlobalVariable(name: "at9_tab_band_ext_cnt", scope: !0, file: !898, line: 134, type: !1849, isLocal: true, isDefinition: true, variable: [5 x [6 x i8]]* @at9_tab_band_ext_cnt)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 240, align: 8, elements: !1850)
!1850 = !{!1665, !1672}
!1851 = distinct !DIGlobalVariable(name: "at9_tab_band_ext_lengths", scope: !0, file: !898, line: 154, type: !1852, isLocal: true, isDefinition: true, variable: [5 x [6 x [4 x i8]]]* @at9_tab_band_ext_lengths)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 960, align: 8, elements: !1853)
!1853 = !{!1665, !1672, !1151}
!1854 = distinct !DIGlobalVariable(name: "mode_map", scope: !1855, file: !925, line: 244, type: !2043, isLocal: true, isDefinition: true, variable: [2 x [4 x i32]]* @read_scalefactors.mode_map)
!1855 = distinct !DISubprogram(name: "read_scalefactors", scope: !925, file: !925, line: 240, type: !1856, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!904, !1858, !2030, !2031, !2032, !904, !904}
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64, align: 64)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATRAC9Context", file: !925, line: 97, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ATRAC9Context", file: !925, line: 76, size: 413184, align: 256, elements: !1861)
!1861 = !{!1862, !1863, !1907, !1952, !1994, !2002, !2003, !2004, !2005, !2006, !2008, !2023, !2025, !2028, !2029}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1860, file: !925, line: 77, baseType: !1019, size: 64, align: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1860, file: !925, line: 78, baseType: !1864, size: 64, align: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1866, line: 192, baseType: !1867)
!1866 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1866, line: 24, size: 704, align: 64, elements: !1868)
!1868 = !{!1869, !1874, !1878, !1886, !1887, !1888, !1892, !1893, !1894, !1899, !1903}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1867, file: !1866, line: 38, baseType: !1870, size: 64, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64, align: 64)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{null, !916, !1873, !1873, !904}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1867, file: !1866, line: 54, baseType: !1875, size: 64, align: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64, align: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !916, !1873, !917, !904}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1867, file: !1866, line: 70, baseType: !1879, size: 64, align: 64, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64, align: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882, !1884, !1883, !904}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1867, file: !1866, line: 85, baseType: !1875, size: 64, align: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1867, file: !1866, line: 100, baseType: !1879, size: 64, align: 64, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1867, file: !1866, line: 119, baseType: !1889, size: 64, align: 64, offset: 320)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64, align: 64)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !916, !1873, !1873, !1873, !904}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1867, file: !1866, line: 137, baseType: !1889, size: 64, align: 64, offset: 384)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1867, file: !1866, line: 154, baseType: !1870, size: 64, align: 64, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1867, file: !1866, line: 164, baseType: !1895, size: 64, align: 64, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{null, !1898, !1898, !904}
!1898 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !916)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1867, file: !1866, line: 175, baseType: !1900, size: 64, align: 64, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!917, !1873, !1873, !904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1867, file: !1866, line: 190, baseType: !1904, size: 64, align: 64, offset: 640)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64, align: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1882, !1884, !1884, !904}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !1860, file: !925, line: 79, baseType: !1908, size: 896, align: 64, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1909, line: 41, baseType: !1910)
!1909 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1911)
!1911 = !{!1912, !1913, !1914, !1915, !1923, !1924, !1925, !1927, !1928, !1933, !1934, !1940, !1941, !1942, !1948, !1949, !1950}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1910, file: !888, line: 89, baseType: !904, size: 32, align: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1910, file: !888, line: 90, baseType: !904, size: 32, align: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1910, file: !888, line: 91, baseType: !1349, size: 64, align: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1910, file: !888, line: 92, baseType: !1916, size: 64, align: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64, align: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1909, line: 39, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1909, line: 37, size: 64, align: 32, elements: !1919)
!1919 = !{!1920, !1922}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1918, file: !1909, line: 38, baseType: !1921, size: 32, align: 32)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1909, line: 35, baseType: !917)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1918, file: !1909, line: 38, baseType: !1921, size: 32, align: 32, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1910, file: !888, line: 93, baseType: !904, size: 32, align: 32, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1910, file: !888, line: 94, baseType: !904, size: 32, align: 32, offset: 224)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1910, file: !888, line: 96, baseType: !1926, size: 64, align: 64, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64, align: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1910, file: !888, line: 97, baseType: !1926, size: 64, align: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1910, file: !888, line: 101, baseType: !1929, size: 64, align: 64, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64, align: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1932, !1916}
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1910, file: !888, line: 106, baseType: !1929, size: 64, align: 64, offset: 448)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1910, file: !888, line: 107, baseType: !1935, size: 64, align: 64, offset: 512)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64, align: 64)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{null, !1932, !1926, !1938}
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1910, file: !888, line: 108, baseType: !1935, size: 64, align: 64, offset: 576)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1910, file: !888, line: 109, baseType: !1935, size: 64, align: 64, offset: 640)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1910, file: !888, line: 110, baseType: !1943, size: 64, align: 64, offset: 704)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64, align: 64)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !1932, !1946, !1938}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64, align: 64)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !917)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1910, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1910, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1910, file: !888, line: 113, baseType: !1951, size: 64, align: 64, offset: 832)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1860, file: !925, line: 80, baseType: !1953, size: 359680, align: 256, offset: 1024)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1954, size: 359680, align: 256, elements: !1664)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATRAC9BlockData", file: !925, line: 74, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ATRAC9BlockData", file: !925, line: 49, size: 71936, align: 256, elements: !1956)
!1956 = !{!1957, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1992, !1993}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1955, file: !925, line: 50, baseType: !1958, size: 69632, align: 256)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 69632, align: 256, elements: !1698)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATRAC9ChannelData", file: !925, line: 47, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ATRAC9ChannelData", file: !925, line: 29, size: 34816, align: 256, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965, !1968, !1969, !1971, !1972, !1973, !1974, !1976, !1977, !1979}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "band_ext", scope: !1960, file: !925, line: 30, baseType: !904, size: 32, align: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "q_unit_cnt", scope: !1960, file: !925, line: 31, baseType: !904, size: 32, align: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "band_ext_data", scope: !1960, file: !925, line: 32, baseType: !1157, size: 128, align: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "scalefactors", scope: !1960, file: !925, line: 33, baseType: !1966, size: 992, align: 32, offset: 192)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 992, align: 32, elements: !1831)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !913, line: 38, baseType: !904)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "scalefactors_prev", scope: !1960, file: !925, line: 34, baseType: !1966, size: 992, align: 32, offset: 1184)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "precision_coarse", scope: !1960, file: !925, line: 36, baseType: !1970, size: 960, align: 32, offset: 2176)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 960, align: 32, elements: !922)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "precision_fine", scope: !1960, file: !925, line: 37, baseType: !1970, size: 960, align: 32, offset: 3136)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "precision_mask", scope: !1960, file: !925, line: 38, baseType: !1970, size: 960, align: 32, offset: 4096)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "codebookset", scope: !1960, file: !925, line: 40, baseType: !1970, size: 960, align: 32, offset: 5056)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "q_coeffs_coarse", scope: !1960, file: !925, line: 42, baseType: !1975, size: 8192, align: 32, offset: 6016)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 8192, align: 32, elements: !1741)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "q_coeffs_fine", scope: !1960, file: !925, line: 43, baseType: !1975, size: 8192, align: 32, offset: 14208)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1960, file: !925, line: 45, baseType: !1978, size: 8192, align: 32, offset: 22528)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 8192, align: 32, elements: !1741)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "prev_win", scope: !1960, file: !925, line: 46, baseType: !1980, size: 4096, align: 32, offset: 30720)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 4096, align: 32, elements: !1783)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "band_count", scope: !1955, file: !925, line: 53, baseType: !904, size: 32, align: 32, offset: 69632)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "q_unit_cnt", scope: !1955, file: !925, line: 54, baseType: !904, size: 32, align: 32, offset: 69664)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "q_unit_cnt_prev", scope: !1955, file: !925, line: 55, baseType: !904, size: 32, align: 32, offset: 69696)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_q_unit", scope: !1955, file: !925, line: 58, baseType: !904, size: 32, align: 32, offset: 69728)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "has_band_ext", scope: !1955, file: !925, line: 61, baseType: !904, size: 32, align: 32, offset: 69760)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "has_band_ext_data", scope: !1955, file: !925, line: 62, baseType: !904, size: 32, align: 32, offset: 69792)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "band_ext_q_unit", scope: !1955, file: !925, line: 63, baseType: !904, size: 32, align: 32, offset: 69824)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "grad_mode", scope: !1955, file: !925, line: 66, baseType: !904, size: 32, align: 32, offset: 69856)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "grad_boundary", scope: !1955, file: !925, line: 67, baseType: !904, size: 32, align: 32, offset: 69888)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1955, file: !925, line: 68, baseType: !1991, size: 992, align: 32, offset: 69920)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 992, align: 32, elements: !1831)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cpe_base_channel", scope: !1955, file: !925, line: 71, baseType: !904, size: 32, align: 32, offset: 70912)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "is_signs", scope: !1955, file: !925, line: 72, baseType: !1970, size: 960, align: 32, offset: 70944)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "lfg", scope: !1860, file: !925, line: 81, baseType: !1995, size: 2080, align: 32, offset: 360704)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !1996, line: 30, baseType: !1997)
!1996 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !1996, line: 27, size: 2080, align: 32, elements: !1998)
!1998 = !{!1999, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1997, file: !1996, line: 28, baseType: !2000, size: 2048, align: 32)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 2048, align: 32, elements: !1720)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1997, file: !1996, line: 29, baseType: !904, size: 32, align: 32, offset: 2048)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "frame_log2", scope: !1860, file: !925, line: 84, baseType: !904, size: 32, align: 32, offset: 362784)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_size", scope: !1860, file: !925, line: 85, baseType: !904, size: 32, align: 32, offset: 362816)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !1860, file: !925, line: 86, baseType: !904, size: 32, align: 32, offset: 362848)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate_idx", scope: !1860, file: !925, line: 87, baseType: !904, size: 32, align: 32, offset: 362880)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "block_config", scope: !1860, file: !925, line: 88, baseType: !2007, size: 64, align: 64, offset: 362944)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sf_vlc", scope: !1860, file: !925, line: 91, baseType: !2009, size: 3072, align: 64, offset: 363008)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2010, size: 3072, align: 64, elements: !2022)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !2011, line: 30, baseType: !2012)
!2011 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !2011, line: 26, size: 192, align: 64, elements: !2013)
!2013 = !{!2014, !2015, !2020, !2021}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2012, file: !2011, line: 27, baseType: !904, size: 32, align: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2012, file: !2011, line: 28, baseType: !2016, size: 64, align: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 32, align: 16, elements: !1698)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !913, line: 37, baseType: !2019)
!2019 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !2012, file: !2011, line: 29, baseType: !904, size: 32, align: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !2012, file: !2011, line: 29, baseType: !904, size: 32, align: 32, offset: 160)
!2022 = !{!1669, !1049}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_vlc", scope: !1860, file: !925, line: 92, baseType: !2024, size: 12288, align: 64, offset: 366080)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2010, size: 12288, align: 64, elements: !1736)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_curve", scope: !1860, file: !925, line: 93, baseType: !2026, size: 18432, align: 8, offset: 378368)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 18432, align: 8, elements: !2027)
!2027 = !{!1678, !1678}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_win", scope: !1860, file: !925, line: 94, baseType: !1978, size: 8192, align: 32, offset: 396800)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1860, file: !925, line: 96, baseType: !1978, size: 8192, align: 32, offset: 404992)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64, align: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64, align: 64)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64, align: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2034, line: 70, baseType: !2035)
!2034 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2034, line: 61, size: 256, align: 64, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040, !2041}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2035, file: !2034, line: 62, baseType: !1463, size: 64, align: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2035, file: !2034, line: 62, baseType: !1463, size: 64, align: 64, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2035, file: !2034, line: 67, baseType: !904, size: 32, align: 32, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2035, file: !2034, line: 68, baseType: !904, size: 32, align: 32, offset: 160)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2035, file: !2034, line: 69, baseType: !904, size: 32, align: 32, offset: 192)
!2042 = !{}
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 256, align: 32, elements: !2044)
!2044 = !{!1669, !1151}
!2045 = distinct !DIGlobalVariable(name: "at9_tab_sf_weights", scope: !0, file: !898, line: 348, type: !2046, isLocal: true, isDefinition: true, variable: [8 x [32 x i8]]* @at9_tab_sf_weights)
!2046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 2048, align: 8, elements: !2047)
!2047 = !{!1049, !1715}
!2048 = distinct !DIGlobalVariable(name: "at9_q_unit_to_coeff_cnt", scope: !0, file: !898, line: 110, type: !920, isLocal: true, isDefinition: true, variable: [30 x i8]* @at9_q_unit_to_coeff_cnt)
!2049 = distinct !DIGlobalVariable(name: "at9_band_ext_scales_m0", scope: !0, file: !898, line: 197, type: !2050, isLocal: true, isDefinition: true, variable: [3 x [5 x [32 x float]]]* @at9_band_ext_scales_m0)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 15360, align: 32, elements: !2051)
!2051 = !{!1847, !1665, !1715}
!2052 = distinct !DIGlobalVariable(name: "at9_band_ext_scales_m2", scope: !0, file: !898, line: 284, type: !2053, isLocal: true, isDefinition: true, variable: [64 x float]* @at9_band_ext_scales_m2)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 2048, align: 32, elements: !1720)
!2054 = distinct !DIGlobalVariable(name: "at9_band_ext_scales_m3", scope: !0, file: !898, line: 303, type: !2055, isLocal: true, isDefinition: true, variable: [16 x [2 x float]]* @at9_band_ext_scales_m3)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 1024, align: 32, elements: !2056)
!2056 = !{!1654, !1669}
!2057 = distinct !DIGlobalVariable(name: "at9_band_ext_scales_m4", scope: !0, file: !898, line: 314, type: !2058, isLocal: true, isDefinition: true, variable: [8 x float]* @at9_band_ext_scales_m4)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 256, align: 32, elements: !1048)
!2059 = !{i32 2, !"Dwarf Version", i32 4}
!2060 = !{i32 2, !"Debug Info Version", i32 3}
!2061 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2062 = distinct !DISubprogram(name: "atrac9_decode_init", scope: !925, file: !925, line: 826, type: !1017, isLocal: true, isDefinition: true, scopeLine: 827, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2063 = !DILocalVariable(name: "avctx", arg: 1, scope: !2062, file: !925, line: 826, type: !1019)
!2064 = !DIExpression()
!2065 = !DILocation(line: 826, column: 69, scope: !2062)
!2066 = !DILocalVariable(name: "gb", scope: !2062, file: !925, line: 828, type: !2033)
!2067 = !DILocation(line: 828, column: 19, scope: !2062)
!2068 = !DILocalVariable(name: "s", scope: !2062, file: !925, line: 829, type: !1858)
!2069 = !DILocation(line: 829, column: 20, scope: !2062)
!2070 = !DILocation(line: 829, column: 24, scope: !2062)
!2071 = !DILocation(line: 829, column: 31, scope: !2062)
!2072 = !DILocalVariable(name: "version", scope: !2062, file: !925, line: 830, type: !904)
!2073 = !DILocation(line: 830, column: 9, scope: !2062)
!2074 = !DILocalVariable(name: "block_config_idx", scope: !2062, file: !925, line: 830, type: !904)
!2075 = !DILocation(line: 830, column: 18, scope: !2062)
!2076 = !DILocalVariable(name: "superframe_idx", scope: !2062, file: !925, line: 830, type: !904)
!2077 = !DILocation(line: 830, column: 36, scope: !2062)
!2078 = !DILocalVariable(name: "alloc_c_len", scope: !2062, file: !925, line: 830, type: !904)
!2079 = !DILocation(line: 830, column: 52, scope: !2062)
!2080 = !DILocation(line: 832, column: 16, scope: !2062)
!2081 = !DILocation(line: 832, column: 5, scope: !2062)
!2082 = !DILocation(line: 832, column: 8, scope: !2062)
!2083 = !DILocation(line: 832, column: 14, scope: !2062)
!2084 = !DILocation(line: 834, column: 18, scope: !2062)
!2085 = !DILocation(line: 834, column: 21, scope: !2062)
!2086 = !DILocation(line: 834, column: 5, scope: !2062)
!2087 = !DILocation(line: 836, column: 9, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 836, column: 9)
!2089 = !DILocation(line: 836, column: 16, scope: !2088)
!2090 = !DILocation(line: 836, column: 31, scope: !2088)
!2091 = !DILocation(line: 836, column: 9, scope: !2062)
!2092 = !DILocation(line: 837, column: 16, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2088, file: !925, line: 836, column: 38)
!2094 = !DILocation(line: 837, column: 9, scope: !2093)
!2095 = !DILocation(line: 838, column: 9, scope: !2093)
!2096 = !DILocation(line: 841, column: 47, scope: !2062)
!2097 = !DILocation(line: 841, column: 54, scope: !2062)
!2098 = !DILocation(line: 841, column: 67, scope: !2062)
!2099 = !DILocation(line: 841, column: 13, scope: !2062)
!2100 = !DILocation(line: 842, column: 9, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 842, column: 9)
!2102 = !DILocation(line: 842, column: 17, scope: !2101)
!2103 = !DILocation(line: 842, column: 9, scope: !2062)
!2104 = !DILocation(line: 843, column: 16, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2101, file: !925, line: 842, column: 22)
!2106 = !DILocation(line: 843, column: 58, scope: !2105)
!2107 = !DILocation(line: 843, column: 9, scope: !2105)
!2108 = !DILocation(line: 844, column: 9, scope: !2105)
!2109 = !DILocation(line: 847, column: 25, scope: !2062)
!2110 = !DILocation(line: 847, column: 32, scope: !2062)
!2111 = !DILocation(line: 847, column: 42, scope: !2062)
!2112 = !DILocation(line: 847, column: 47, scope: !2062)
!2113 = !DILocation(line: 847, column: 54, scope: !2062)
!2114 = !DILocation(line: 847, column: 5, scope: !2062)
!2115 = !DILocation(line: 849, column: 9, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 849, column: 9)
!2117 = !DILocation(line: 849, column: 26, scope: !2116)
!2118 = !DILocation(line: 849, column: 9, scope: !2062)
!2119 = !DILocation(line: 850, column: 16, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2116, file: !925, line: 849, column: 35)
!2121 = !DILocation(line: 850, column: 9, scope: !2120)
!2122 = !DILocation(line: 851, column: 9, scope: !2120)
!2123 = !DILocation(line: 854, column: 25, scope: !2062)
!2124 = !DILocation(line: 854, column: 5, scope: !2062)
!2125 = !DILocation(line: 854, column: 8, scope: !2062)
!2126 = !DILocation(line: 854, column: 23, scope: !2062)
!2127 = !DILocation(line: 855, column: 46, scope: !2062)
!2128 = !DILocation(line: 855, column: 49, scope: !2062)
!2129 = !DILocation(line: 855, column: 26, scope: !2062)
!2130 = !DILocation(line: 855, column: 5, scope: !2062)
!2131 = !DILocation(line: 855, column: 12, scope: !2062)
!2132 = !DILocation(line: 855, column: 24, scope: !2062)
!2133 = !DILocation(line: 857, column: 24, scope: !2062)
!2134 = !DILocation(line: 857, column: 22, scope: !2062)
!2135 = !DILocation(line: 858, column: 9, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 858, column: 9)
!2137 = !DILocation(line: 858, column: 26, scope: !2136)
!2138 = !DILocation(line: 858, column: 9, scope: !2062)
!2139 = !DILocation(line: 859, column: 16, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2136, file: !925, line: 858, column: 31)
!2141 = !DILocation(line: 859, column: 9, scope: !2140)
!2142 = !DILocation(line: 860, column: 9, scope: !2140)
!2143 = !DILocation(line: 862, column: 41, scope: !2062)
!2144 = !DILocation(line: 862, column: 24, scope: !2062)
!2145 = !DILocation(line: 862, column: 5, scope: !2062)
!2146 = !DILocation(line: 862, column: 8, scope: !2062)
!2147 = !DILocation(line: 862, column: 21, scope: !2062)
!2148 = !DILocation(line: 864, column: 29, scope: !2062)
!2149 = !DILocation(line: 864, column: 32, scope: !2062)
!2150 = !DILocation(line: 864, column: 46, scope: !2062)
!2151 = !DILocation(line: 864, column: 5, scope: !2062)
!2152 = !DILocation(line: 864, column: 12, scope: !2062)
!2153 = !DILocation(line: 864, column: 27, scope: !2062)
!2154 = !DILocation(line: 865, column: 5, scope: !2062)
!2155 = !DILocation(line: 865, column: 12, scope: !2062)
!2156 = !DILocation(line: 865, column: 23, scope: !2062)
!2157 = !DILocation(line: 867, column: 9, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 867, column: 9)
!2159 = !DILocation(line: 867, column: 9, scope: !2062)
!2160 = !DILocation(line: 868, column: 16, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2158, file: !925, line: 867, column: 25)
!2162 = !DILocation(line: 868, column: 9, scope: !2161)
!2163 = !DILocation(line: 869, column: 9, scope: !2161)
!2164 = !DILocation(line: 873, column: 25, scope: !2062)
!2165 = !DILocation(line: 873, column: 43, scope: !2062)
!2166 = !DILocation(line: 873, column: 5, scope: !2062)
!2167 = !DILocation(line: 873, column: 8, scope: !2062)
!2168 = !DILocation(line: 873, column: 23, scope: !2062)
!2169 = !DILocation(line: 875, column: 22, scope: !2062)
!2170 = !DILocation(line: 875, column: 20, scope: !2062)
!2171 = !DILocation(line: 876, column: 9, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 876, column: 9)
!2173 = !DILocation(line: 876, column: 24, scope: !2172)
!2174 = !DILocation(line: 876, column: 9, scope: !2062)
!2175 = !DILocation(line: 877, column: 16, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2172, file: !925, line: 876, column: 29)
!2177 = !DILocation(line: 877, column: 9, scope: !2176)
!2178 = !DILocation(line: 878, column: 9, scope: !2176)
!2179 = !DILocation(line: 881, column: 27, scope: !2062)
!2180 = !DILocation(line: 881, column: 24, scope: !2062)
!2181 = !DILocation(line: 881, column: 5, scope: !2062)
!2182 = !DILocation(line: 881, column: 8, scope: !2062)
!2183 = !DILocation(line: 881, column: 20, scope: !2062)
!2184 = !DILocation(line: 882, column: 44, scope: !2062)
!2185 = !DILocation(line: 882, column: 47, scope: !2062)
!2186 = !DILocation(line: 882, column: 21, scope: !2062)
!2187 = !DILocation(line: 882, column: 5, scope: !2062)
!2188 = !DILocation(line: 882, column: 8, scope: !2062)
!2189 = !DILocation(line: 882, column: 19, scope: !2062)
!2190 = !DILocation(line: 884, column: 23, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 884, column: 9)
!2192 = !DILocation(line: 884, column: 26, scope: !2191)
!2193 = !DILocation(line: 884, column: 33, scope: !2191)
!2194 = !DILocation(line: 884, column: 36, scope: !2191)
!2195 = !DILocation(line: 884, column: 47, scope: !2191)
!2196 = !DILocation(line: 884, column: 9, scope: !2191)
!2197 = !DILocation(line: 884, column: 9, scope: !2062)
!2198 = !DILocation(line: 885, column: 9, scope: !2191)
!2199 = !DILocation(line: 887, column: 38, scope: !2062)
!2200 = !DILocation(line: 887, column: 45, scope: !2062)
!2201 = !DILocation(line: 887, column: 51, scope: !2062)
!2202 = !DILocation(line: 887, column: 15, scope: !2062)
!2203 = !DILocation(line: 887, column: 5, scope: !2062)
!2204 = !DILocation(line: 887, column: 8, scope: !2062)
!2205 = !DILocation(line: 887, column: 13, scope: !2062)
!2206 = !DILocation(line: 888, column: 10, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 888, column: 9)
!2208 = !DILocation(line: 888, column: 13, scope: !2207)
!2209 = !DILocation(line: 888, column: 9, scope: !2062)
!2210 = !DILocation(line: 889, column: 9, scope: !2207)
!2211 = !DILocalVariable(name: "i", scope: !2212, file: !925, line: 892, type: !904)
!2212 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 892, column: 5)
!2213 = !DILocation(line: 892, column: 14, scope: !2212)
!2214 = !DILocation(line: 892, column: 10, scope: !2212)
!2215 = !DILocation(line: 892, column: 21, scope: !2216)
!2216 = !DILexicalBlockFile(scope: !2217, file: !925, discriminator: 1)
!2217 = distinct !DILexicalBlock(scope: !2212, file: !925, line: 892, column: 5)
!2218 = !DILocation(line: 892, column: 31, scope: !2216)
!2219 = !DILocation(line: 892, column: 34, scope: !2216)
!2220 = !DILocation(line: 892, column: 28, scope: !2216)
!2221 = !DILocation(line: 892, column: 23, scope: !2216)
!2222 = !DILocation(line: 892, column: 5, scope: !2216)
!2223 = !DILocalVariable(name: "len", scope: !2224, file: !925, line: 893, type: !951)
!2224 = distinct !DILexicalBlock(scope: !2217, file: !925, line: 892, column: 52)
!2225 = !DILocation(line: 893, column: 19, scope: !2224)
!2226 = !DILocation(line: 893, column: 30, scope: !2224)
!2227 = !DILocation(line: 893, column: 33, scope: !2224)
!2228 = !DILocation(line: 893, column: 27, scope: !2224)
!2229 = !DILocalVariable(name: "sidx", scope: !2224, file: !925, line: 894, type: !1835)
!2230 = !DILocation(line: 894, column: 21, scope: !2224)
!2231 = !DILocation(line: 894, column: 30, scope: !2224)
!2232 = !DILocation(line: 894, column: 32, scope: !2224)
!2233 = !DILocation(line: 894, column: 42, scope: !2224)
!2234 = !DILocation(line: 894, column: 40, scope: !2224)
!2235 = !DILocalVariable(name: "eidx", scope: !2224, file: !925, line: 895, type: !1835)
!2236 = !DILocation(line: 895, column: 21, scope: !2224)
!2237 = !DILocation(line: 895, column: 29, scope: !2224)
!2238 = !DILocation(line: 895, column: 35, scope: !2224)
!2239 = !DILocation(line: 895, column: 33, scope: !2224)
!2240 = !DILocation(line: 895, column: 37, scope: !2224)
!2241 = !DILocation(line: 895, column: 47, scope: !2224)
!2242 = !DILocation(line: 895, column: 45, scope: !2224)
!2243 = !DILocalVariable(name: "s_c", scope: !2224, file: !925, line: 896, type: !1835)
!2244 = !DILocation(line: 896, column: 21, scope: !2224)
!2245 = !DILocation(line: 896, column: 32, scope: !2224)
!2246 = !DILocation(line: 896, column: 36, scope: !2224)
!2247 = !DILocation(line: 896, column: 42, scope: !2224)
!2248 = !DILocation(line: 896, column: 27, scope: !2224)
!2249 = !DILocation(line: 896, column: 51, scope: !2224)
!2250 = !DILocation(line: 896, column: 57, scope: !2224)
!2251 = !DILocalVariable(name: "e_c", scope: !2224, file: !925, line: 897, type: !1835)
!2252 = !DILocation(line: 897, column: 21, scope: !2224)
!2253 = !DILocation(line: 897, column: 32, scope: !2224)
!2254 = !DILocation(line: 897, column: 36, scope: !2224)
!2255 = !DILocation(line: 897, column: 42, scope: !2224)
!2256 = !DILocation(line: 897, column: 27, scope: !2224)
!2257 = !DILocation(line: 897, column: 51, scope: !2224)
!2258 = !DILocation(line: 897, column: 57, scope: !2224)
!2259 = !DILocation(line: 898, column: 27, scope: !2224)
!2260 = !DILocation(line: 898, column: 35, scope: !2224)
!2261 = !DILocation(line: 898, column: 41, scope: !2224)
!2262 = !DILocation(line: 898, column: 39, scope: !2224)
!2263 = !DILocation(line: 898, column: 49, scope: !2224)
!2264 = !DILocation(line: 898, column: 55, scope: !2224)
!2265 = !DILocation(line: 898, column: 53, scope: !2224)
!2266 = !DILocation(line: 898, column: 46, scope: !2224)
!2267 = !DILocation(line: 898, column: 31, scope: !2224)
!2268 = !DILocation(line: 898, column: 22, scope: !2224)
!2269 = !DILocation(line: 898, column: 9, scope: !2224)
!2270 = !DILocation(line: 898, column: 12, scope: !2224)
!2271 = !DILocation(line: 898, column: 25, scope: !2224)
!2272 = !DILocation(line: 899, column: 5, scope: !2224)
!2273 = !DILocation(line: 892, column: 48, scope: !2274)
!2274 = !DILexicalBlockFile(scope: !2217, file: !925, discriminator: 2)
!2275 = !DILocation(line: 892, column: 5, scope: !2274)
!2276 = distinct !{!2276, !2277}
!2277 = !DILocation(line: 892, column: 5, scope: !2062)
!2278 = !DILocation(line: 902, column: 17, scope: !2062)
!2279 = !DILocalVariable(name: "i", scope: !2280, file: !925, line: 903, type: !904)
!2280 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 903, column: 5)
!2281 = !DILocation(line: 903, column: 14, scope: !2280)
!2282 = !DILocation(line: 903, column: 10, scope: !2280)
!2283 = !DILocation(line: 903, column: 21, scope: !2284)
!2284 = !DILexicalBlockFile(scope: !2285, file: !925, discriminator: 1)
!2285 = distinct !DILexicalBlock(scope: !2280, file: !925, line: 903, column: 5)
!2286 = !DILocation(line: 903, column: 26, scope: !2284)
!2287 = !DILocation(line: 903, column: 23, scope: !2284)
!2288 = !DILocation(line: 903, column: 5, scope: !2284)
!2289 = !DILocalVariable(name: "j", scope: !2290, file: !925, line: 904, type: !904)
!2290 = distinct !DILexicalBlock(scope: !2285, file: !925, line: 904, column: 9)
!2291 = !DILocation(line: 904, column: 18, scope: !2290)
!2292 = !DILocation(line: 904, column: 14, scope: !2290)
!2293 = !DILocation(line: 904, column: 25, scope: !2294)
!2294 = !DILexicalBlockFile(scope: !2295, file: !925, discriminator: 1)
!2295 = distinct !DILexicalBlock(scope: !2290, file: !925, line: 904, column: 9)
!2296 = !DILocation(line: 904, column: 29, scope: !2294)
!2297 = !DILocation(line: 904, column: 27, scope: !2294)
!2298 = !DILocation(line: 904, column: 9, scope: !2294)
!2299 = !DILocation(line: 905, column: 56, scope: !2295)
!2300 = !DILocation(line: 905, column: 60, scope: !2295)
!2301 = !DILocation(line: 905, column: 58, scope: !2295)
!2302 = !DILocation(line: 905, column: 75, scope: !2295)
!2303 = !DILocation(line: 905, column: 73, scope: !2295)
!2304 = !DILocation(line: 905, column: 40, scope: !2295)
!2305 = !DILocation(line: 905, column: 35, scope: !2295)
!2306 = !DILocation(line: 905, column: 13, scope: !2295)
!2307 = !DILocation(line: 905, column: 28, scope: !2295)
!2308 = !DILocation(line: 905, column: 30, scope: !2295)
!2309 = !DILocation(line: 905, column: 16, scope: !2295)
!2310 = !DILocation(line: 905, column: 38, scope: !2295)
!2311 = !DILocation(line: 904, column: 33, scope: !2312)
!2312 = !DILexicalBlockFile(scope: !2295, file: !925, discriminator: 2)
!2313 = !DILocation(line: 904, column: 9, scope: !2312)
!2314 = distinct !{!2314, !2315}
!2315 = !DILocation(line: 904, column: 9, scope: !2285)
!2316 = !DILocation(line: 905, column: 76, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2290, file: !925, discriminator: 1)
!2318 = !DILocation(line: 903, column: 40, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !2285, file: !925, discriminator: 2)
!2320 = !DILocation(line: 903, column: 5, scope: !2319)
!2321 = distinct !{!2321, !2322}
!2322 = !DILocation(line: 903, column: 5, scope: !2062)
!2323 = !DILocalVariable(name: "i", scope: !2324, file: !925, line: 908, type: !904)
!2324 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 908, column: 5)
!2325 = !DILocation(line: 908, column: 14, scope: !2324)
!2326 = !DILocation(line: 908, column: 10, scope: !2324)
!2327 = !DILocation(line: 908, column: 21, scope: !2328)
!2328 = !DILexicalBlockFile(scope: !2329, file: !925, discriminator: 1)
!2329 = distinct !DILexicalBlock(scope: !2324, file: !925, line: 908, column: 5)
!2330 = !DILocation(line: 908, column: 23, scope: !2328)
!2331 = !DILocation(line: 908, column: 5, scope: !2328)
!2332 = !DILocalVariable(name: "hf", scope: !2333, file: !925, line: 909, type: !2334)
!2333 = distinct !DILexicalBlock(scope: !2329, file: !925, line: 908, column: 33)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!2335 = !DILocation(line: 909, column: 32, scope: !2333)
!2336 = !DILocation(line: 909, column: 62, scope: !2333)
!2337 = !DILocation(line: 909, column: 38, scope: !2333)
!2338 = !DILocation(line: 911, column: 42, scope: !2333)
!2339 = !DILocation(line: 911, column: 29, scope: !2333)
!2340 = !DILocation(line: 911, column: 32, scope: !2333)
!2341 = !DILocation(line: 911, column: 49, scope: !2333)
!2342 = !DILocation(line: 911, column: 53, scope: !2333)
!2343 = !DILocation(line: 911, column: 59, scope: !2333)
!2344 = !DILocation(line: 911, column: 63, scope: !2333)
!2345 = !DILocation(line: 911, column: 75, scope: !2333)
!2346 = !DILocation(line: 911, column: 79, scope: !2333)
!2347 = !DILocation(line: 911, column: 9, scope: !2333)
!2348 = !DILocation(line: 913, column: 5, scope: !2333)
!2349 = !DILocation(line: 908, column: 29, scope: !2350)
!2350 = !DILexicalBlockFile(scope: !2329, file: !925, discriminator: 2)
!2351 = !DILocation(line: 908, column: 5, scope: !2350)
!2352 = distinct !{!2352, !2353}
!2353 = !DILocation(line: 908, column: 5, scope: !2062)
!2354 = !DILocalVariable(name: "i", scope: !2355, file: !925, line: 916, type: !904)
!2355 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 916, column: 5)
!2356 = !DILocation(line: 916, column: 14, scope: !2355)
!2357 = !DILocation(line: 916, column: 10, scope: !2355)
!2358 = !DILocation(line: 916, column: 21, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2360, file: !925, discriminator: 1)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !925, line: 916, column: 5)
!2361 = !DILocation(line: 916, column: 23, scope: !2359)
!2362 = !DILocation(line: 916, column: 5, scope: !2359)
!2363 = !DILocalVariable(name: "hf", scope: !2364, file: !925, line: 917, type: !2334)
!2364 = distinct !DILexicalBlock(scope: !2360, file: !925, line: 916, column: 33)
!2365 = !DILocation(line: 917, column: 32, scope: !2364)
!2366 = !DILocation(line: 917, column: 60, scope: !2364)
!2367 = !DILocation(line: 917, column: 38, scope: !2364)
!2368 = !DILocalVariable(name: "nums", scope: !2364, file: !925, line: 919, type: !904)
!2369 = !DILocation(line: 919, column: 13, scope: !2364)
!2370 = !DILocation(line: 919, column: 20, scope: !2364)
!2371 = !DILocation(line: 919, column: 24, scope: !2364)
!2372 = !DILocalVariable(name: "sym", scope: !2364, file: !925, line: 920, type: !2373)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 512, align: 16, elements: !1714)
!2374 = !DILocation(line: 920, column: 17, scope: !2364)
!2375 = !DILocalVariable(name: "j", scope: !2376, file: !925, line: 921, type: !904)
!2376 = distinct !DILexicalBlock(scope: !2364, file: !925, line: 921, column: 9)
!2377 = !DILocation(line: 921, column: 18, scope: !2376)
!2378 = !DILocation(line: 921, column: 14, scope: !2376)
!2379 = !DILocation(line: 921, column: 25, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2381, file: !925, discriminator: 1)
!2381 = distinct !DILexicalBlock(scope: !2376, file: !925, line: 921, column: 9)
!2382 = !DILocation(line: 921, column: 29, scope: !2380)
!2383 = !DILocation(line: 921, column: 27, scope: !2380)
!2384 = !DILocation(line: 921, column: 9, scope: !2380)
!2385 = !DILocation(line: 922, column: 34, scope: !2381)
!2386 = !DILocation(line: 922, column: 37, scope: !2381)
!2387 = !DILocation(line: 922, column: 41, scope: !2381)
!2388 = !DILocation(line: 922, column: 22, scope: !2381)
!2389 = !DILocation(line: 922, column: 17, scope: !2381)
!2390 = !DILocation(line: 922, column: 13, scope: !2381)
!2391 = !DILocation(line: 922, column: 20, scope: !2381)
!2392 = !DILocation(line: 921, column: 36, scope: !2393)
!2393 = !DILexicalBlockFile(scope: !2381, file: !925, discriminator: 2)
!2394 = !DILocation(line: 921, column: 9, scope: !2393)
!2395 = distinct !{!2395, !2396}
!2396 = !DILocation(line: 921, column: 9, scope: !2364)
!2397 = !DILocation(line: 924, column: 42, scope: !2364)
!2398 = !DILocation(line: 924, column: 29, scope: !2364)
!2399 = !DILocation(line: 924, column: 32, scope: !2364)
!2400 = !DILocation(line: 924, column: 49, scope: !2364)
!2401 = !DILocation(line: 924, column: 53, scope: !2364)
!2402 = !DILocation(line: 924, column: 59, scope: !2364)
!2403 = !DILocation(line: 924, column: 63, scope: !2364)
!2404 = !DILocation(line: 925, column: 28, scope: !2364)
!2405 = !DILocation(line: 925, column: 32, scope: !2364)
!2406 = !DILocation(line: 925, column: 45, scope: !2364)
!2407 = !DILocation(line: 924, column: 9, scope: !2364)
!2408 = !DILocation(line: 926, column: 5, scope: !2364)
!2409 = !DILocation(line: 916, column: 29, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !2360, file: !925, discriminator: 2)
!2411 = !DILocation(line: 916, column: 5, scope: !2410)
!2412 = distinct !{!2412, !2413}
!2413 = !DILocation(line: 916, column: 5, scope: !2062)
!2414 = !DILocalVariable(name: "i", scope: !2415, file: !925, line: 929, type: !904)
!2415 = distinct !DILexicalBlock(scope: !2062, file: !925, line: 929, column: 5)
!2416 = !DILocation(line: 929, column: 14, scope: !2415)
!2417 = !DILocation(line: 929, column: 10, scope: !2415)
!2418 = !DILocation(line: 929, column: 21, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !2420, file: !925, discriminator: 1)
!2420 = distinct !DILexicalBlock(scope: !2415, file: !925, line: 929, column: 5)
!2421 = !DILocation(line: 929, column: 23, scope: !2419)
!2422 = !DILocation(line: 929, column: 5, scope: !2419)
!2423 = !DILocalVariable(name: "j", scope: !2424, file: !925, line: 930, type: !904)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !925, line: 930, column: 9)
!2425 = distinct !DILexicalBlock(scope: !2420, file: !925, line: 929, column: 33)
!2426 = !DILocation(line: 930, column: 18, scope: !2424)
!2427 = !DILocation(line: 930, column: 14, scope: !2424)
!2428 = !DILocation(line: 930, column: 25, scope: !2429)
!2429 = !DILexicalBlockFile(scope: !2430, file: !925, discriminator: 1)
!2430 = distinct !DILexicalBlock(scope: !2424, file: !925, line: 930, column: 9)
!2431 = !DILocation(line: 930, column: 27, scope: !2429)
!2432 = !DILocation(line: 930, column: 9, scope: !2429)
!2433 = !DILocalVariable(name: "k", scope: !2434, file: !925, line: 931, type: !904)
!2434 = distinct !DILexicalBlock(scope: !2435, file: !925, line: 931, column: 13)
!2435 = distinct !DILexicalBlock(scope: !2430, file: !925, line: 930, column: 37)
!2436 = !DILocation(line: 931, column: 22, scope: !2434)
!2437 = !DILocation(line: 931, column: 18, scope: !2434)
!2438 = !DILocation(line: 931, column: 29, scope: !2439)
!2439 = !DILexicalBlockFile(scope: !2440, file: !925, discriminator: 1)
!2440 = distinct !DILexicalBlock(scope: !2434, file: !925, line: 931, column: 13)
!2441 = !DILocation(line: 931, column: 31, scope: !2439)
!2442 = !DILocation(line: 931, column: 13, scope: !2439)
!2443 = !DILocalVariable(name: "hf", scope: !2444, file: !925, line: 932, type: !2334)
!2444 = distinct !DILexicalBlock(scope: !2440, file: !925, line: 931, column: 41)
!2445 = !DILocation(line: 932, column: 40, scope: !2444)
!2446 = !DILocation(line: 932, column: 71, scope: !2444)
!2447 = !DILocation(line: 932, column: 46, scope: !2444)
!2448 = !DILocation(line: 932, column: 68, scope: !2444)
!2449 = !DILocation(line: 932, column: 65, scope: !2444)
!2450 = !DILocation(line: 933, column: 56, scope: !2444)
!2451 = !DILocation(line: 933, column: 37, scope: !2444)
!2452 = !DILocation(line: 933, column: 53, scope: !2444)
!2453 = !DILocation(line: 933, column: 50, scope: !2444)
!2454 = !DILocation(line: 933, column: 40, scope: !2444)
!2455 = !DILocation(line: 933, column: 63, scope: !2444)
!2456 = !DILocation(line: 933, column: 67, scope: !2444)
!2457 = !DILocation(line: 933, column: 73, scope: !2444)
!2458 = !DILocation(line: 933, column: 77, scope: !2444)
!2459 = !DILocation(line: 933, column: 89, scope: !2444)
!2460 = !DILocation(line: 933, column: 93, scope: !2444)
!2461 = !DILocation(line: 933, column: 17, scope: !2444)
!2462 = !DILocation(line: 935, column: 13, scope: !2444)
!2463 = !DILocation(line: 931, column: 37, scope: !2464)
!2464 = !DILexicalBlockFile(scope: !2440, file: !925, discriminator: 2)
!2465 = !DILocation(line: 931, column: 13, scope: !2464)
!2466 = distinct !{!2466, !2467}
!2467 = !DILocation(line: 931, column: 13, scope: !2435)
!2468 = !DILocation(line: 936, column: 9, scope: !2435)
!2469 = !DILocation(line: 930, column: 33, scope: !2470)
!2470 = !DILexicalBlockFile(scope: !2430, file: !925, discriminator: 2)
!2471 = !DILocation(line: 930, column: 9, scope: !2470)
!2472 = distinct !{!2472, !2473}
!2473 = !DILocation(line: 930, column: 9, scope: !2425)
!2474 = !DILocation(line: 937, column: 5, scope: !2425)
!2475 = !DILocation(line: 929, column: 29, scope: !2476)
!2476 = !DILexicalBlockFile(scope: !2420, file: !925, discriminator: 2)
!2477 = !DILocation(line: 929, column: 5, scope: !2476)
!2478 = distinct !{!2478, !2479}
!2479 = !DILocation(line: 929, column: 5, scope: !2062)
!2480 = !DILocation(line: 939, column: 5, scope: !2062)
!2481 = !DILocation(line: 940, column: 1, scope: !2062)
!2482 = distinct !DISubprogram(name: "atrac9_decode_frame", scope: !925, file: !925, line: 763, type: !1628, isLocal: true, isDefinition: true, scopeLine: 765, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2483 = !DILocalVariable(name: "avctx", arg: 1, scope: !2482, file: !925, line: 763, type: !1019)
!2484 = !DILocation(line: 763, column: 48, scope: !2482)
!2485 = !DILocalVariable(name: "data", arg: 2, scope: !2482, file: !925, line: 763, type: !972)
!2486 = !DILocation(line: 763, column: 61, scope: !2482)
!2487 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2482, file: !925, line: 764, type: !1313)
!2488 = !DILocation(line: 764, column: 37, scope: !2482)
!2489 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2482, file: !925, line: 764, type: !1167)
!2490 = !DILocation(line: 764, column: 62, scope: !2482)
!2491 = !DILocalVariable(name: "ret", scope: !2482, file: !925, line: 766, type: !904)
!2492 = !DILocation(line: 766, column: 9, scope: !2482)
!2493 = !DILocalVariable(name: "gb", scope: !2482, file: !925, line: 767, type: !2033)
!2494 = !DILocation(line: 767, column: 19, scope: !2482)
!2495 = !DILocalVariable(name: "frame", scope: !2482, file: !925, line: 768, type: !1041)
!2496 = !DILocation(line: 768, column: 14, scope: !2482)
!2497 = !DILocation(line: 768, column: 22, scope: !2482)
!2498 = !DILocalVariable(name: "s", scope: !2482, file: !925, line: 769, type: !1858)
!2499 = !DILocation(line: 769, column: 20, scope: !2482)
!2500 = !DILocation(line: 769, column: 24, scope: !2482)
!2501 = !DILocation(line: 769, column: 31, scope: !2482)
!2502 = !DILocalVariable(name: "frames", scope: !2482, file: !925, line: 770, type: !951)
!2503 = !DILocation(line: 770, column: 15, scope: !2482)
!2504 = !DILocation(line: 770, column: 26, scope: !2482)
!2505 = !DILocation(line: 770, column: 33, scope: !2482)
!2506 = !DILocation(line: 770, column: 40, scope: !2482)
!2507 = !DILocation(line: 770, column: 43, scope: !2482)
!2508 = !DILocation(line: 770, column: 38, scope: !2482)
!2509 = !DILocation(line: 770, column: 62, scope: !2482)
!2510 = !DILocation(line: 770, column: 65, scope: !2482)
!2511 = !DILocation(line: 770, column: 59, scope: !2482)
!2512 = !DILocation(line: 770, column: 25, scope: !2482)
!2513 = !DILocation(line: 770, column: 81, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2482, file: !925, discriminator: 1)
!2515 = !DILocation(line: 770, column: 84, scope: !2514)
!2516 = !DILocation(line: 770, column: 25, scope: !2514)
!2517 = !DILocation(line: 770, column: 100, scope: !2518)
!2518 = !DILexicalBlockFile(scope: !2482, file: !925, discriminator: 2)
!2519 = !DILocation(line: 770, column: 107, scope: !2518)
!2520 = !DILocation(line: 770, column: 114, scope: !2518)
!2521 = !DILocation(line: 770, column: 117, scope: !2518)
!2522 = !DILocation(line: 770, column: 112, scope: !2518)
!2523 = !DILocation(line: 770, column: 25, scope: !2518)
!2524 = !DILocation(line: 770, column: 25, scope: !2525)
!2525 = !DILexicalBlockFile(scope: !2482, file: !925, discriminator: 3)
!2526 = !DILocation(line: 770, column: 15, scope: !2525)
!2527 = !DILocation(line: 772, column: 31, scope: !2482)
!2528 = !DILocation(line: 772, column: 34, scope: !2482)
!2529 = !DILocation(line: 772, column: 28, scope: !2482)
!2530 = !DILocation(line: 772, column: 48, scope: !2482)
!2531 = !DILocation(line: 772, column: 46, scope: !2482)
!2532 = !DILocation(line: 772, column: 5, scope: !2482)
!2533 = !DILocation(line: 772, column: 12, scope: !2482)
!2534 = !DILocation(line: 772, column: 23, scope: !2482)
!2535 = !DILocation(line: 773, column: 25, scope: !2482)
!2536 = !DILocation(line: 773, column: 32, scope: !2482)
!2537 = !DILocation(line: 773, column: 11, scope: !2482)
!2538 = !DILocation(line: 773, column: 9, scope: !2482)
!2539 = !DILocation(line: 774, column: 9, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2482, file: !925, line: 774, column: 9)
!2541 = !DILocation(line: 774, column: 13, scope: !2540)
!2542 = !DILocation(line: 774, column: 9, scope: !2482)
!2543 = !DILocation(line: 775, column: 16, scope: !2540)
!2544 = !DILocation(line: 775, column: 9, scope: !2540)
!2545 = !DILocation(line: 777, column: 25, scope: !2482)
!2546 = !DILocation(line: 777, column: 32, scope: !2482)
!2547 = !DILocation(line: 777, column: 38, scope: !2482)
!2548 = !DILocation(line: 777, column: 45, scope: !2482)
!2549 = !DILocation(line: 777, column: 5, scope: !2482)
!2550 = !DILocalVariable(name: "i", scope: !2551, file: !925, line: 779, type: !904)
!2551 = distinct !DILexicalBlock(scope: !2482, file: !925, line: 779, column: 5)
!2552 = !DILocation(line: 779, column: 14, scope: !2551)
!2553 = !DILocation(line: 779, column: 10, scope: !2551)
!2554 = !DILocation(line: 779, column: 21, scope: !2555)
!2555 = !DILexicalBlockFile(scope: !2556, file: !925, discriminator: 1)
!2556 = distinct !DILexicalBlock(scope: !2551, file: !925, line: 779, column: 5)
!2557 = !DILocation(line: 779, column: 25, scope: !2555)
!2558 = !DILocation(line: 779, column: 23, scope: !2555)
!2559 = !DILocation(line: 779, column: 5, scope: !2555)
!2560 = !DILocalVariable(name: "j", scope: !2561, file: !925, line: 780, type: !904)
!2561 = distinct !DILexicalBlock(scope: !2562, file: !925, line: 780, column: 9)
!2562 = distinct !DILexicalBlock(scope: !2556, file: !925, line: 779, column: 38)
!2563 = !DILocation(line: 780, column: 18, scope: !2561)
!2564 = !DILocation(line: 780, column: 14, scope: !2561)
!2565 = !DILocation(line: 780, column: 25, scope: !2566)
!2566 = !DILexicalBlockFile(scope: !2567, file: !925, discriminator: 1)
!2567 = distinct !DILexicalBlock(scope: !2561, file: !925, line: 780, column: 9)
!2568 = !DILocation(line: 780, column: 29, scope: !2566)
!2569 = !DILocation(line: 780, column: 32, scope: !2566)
!2570 = !DILocation(line: 780, column: 46, scope: !2566)
!2571 = !DILocation(line: 780, column: 27, scope: !2566)
!2572 = !DILocation(line: 780, column: 9, scope: !2566)
!2573 = !DILocation(line: 781, column: 39, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2567, file: !925, line: 780, column: 58)
!2575 = !DILocation(line: 781, column: 57, scope: !2574)
!2576 = !DILocation(line: 781, column: 48, scope: !2574)
!2577 = !DILocation(line: 781, column: 51, scope: !2574)
!2578 = !DILocation(line: 781, column: 61, scope: !2574)
!2579 = !DILocation(line: 781, column: 68, scope: !2574)
!2580 = !DILocation(line: 781, column: 71, scope: !2574)
!2581 = !DILocation(line: 781, column: 19, scope: !2574)
!2582 = !DILocation(line: 781, column: 17, scope: !2574)
!2583 = !DILocation(line: 782, column: 17, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2574, file: !925, line: 782, column: 17)
!2585 = !DILocation(line: 782, column: 17, scope: !2574)
!2586 = !DILocation(line: 783, column: 24, scope: !2584)
!2587 = !DILocation(line: 783, column: 17, scope: !2584)
!2588 = !DILocation(line: 784, column: 13, scope: !2574)
!2589 = !DILocation(line: 785, column: 9, scope: !2574)
!2590 = !DILocation(line: 780, column: 54, scope: !2591)
!2591 = !DILexicalBlockFile(scope: !2567, file: !925, discriminator: 2)
!2592 = !DILocation(line: 780, column: 9, scope: !2591)
!2593 = distinct !{!2593, !2594}
!2594 = !DILocation(line: 780, column: 9, scope: !2562)
!2595 = !DILocation(line: 786, column: 5, scope: !2562)
!2596 = !DILocation(line: 779, column: 34, scope: !2597)
!2597 = !DILexicalBlockFile(scope: !2556, file: !925, discriminator: 2)
!2598 = !DILocation(line: 779, column: 5, scope: !2597)
!2599 = distinct !{!2599, !2600}
!2600 = !DILocation(line: 779, column: 5, scope: !2482)
!2601 = !DILocation(line: 788, column: 6, scope: !2482)
!2602 = !DILocation(line: 788, column: 20, scope: !2482)
!2603 = !DILocation(line: 790, column: 12, scope: !2482)
!2604 = !DILocation(line: 790, column: 19, scope: !2482)
!2605 = !DILocation(line: 790, column: 5, scope: !2482)
!2606 = !DILocation(line: 791, column: 1, scope: !2482)
!2607 = distinct !DISubprogram(name: "atrac9_decode_close", scope: !925, file: !925, line: 807, type: !1017, isLocal: true, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2608 = !DILocalVariable(name: "avctx", arg: 1, scope: !2607, file: !925, line: 807, type: !1019)
!2609 = !DILocation(line: 807, column: 70, scope: !2607)
!2610 = !DILocalVariable(name: "s", scope: !2607, file: !925, line: 809, type: !1858)
!2611 = !DILocation(line: 809, column: 20, scope: !2607)
!2612 = !DILocation(line: 809, column: 24, scope: !2607)
!2613 = !DILocation(line: 809, column: 31, scope: !2607)
!2614 = !DILocalVariable(name: "i", scope: !2615, file: !925, line: 811, type: !904)
!2615 = distinct !DILexicalBlock(scope: !2607, file: !925, line: 811, column: 5)
!2616 = !DILocation(line: 811, column: 14, scope: !2615)
!2617 = !DILocation(line: 811, column: 10, scope: !2615)
!2618 = !DILocation(line: 811, column: 21, scope: !2619)
!2619 = !DILexicalBlockFile(scope: !2620, file: !925, discriminator: 1)
!2620 = distinct !DILexicalBlock(scope: !2615, file: !925, line: 811, column: 5)
!2621 = !DILocation(line: 811, column: 23, scope: !2619)
!2622 = !DILocation(line: 811, column: 5, scope: !2619)
!2623 = !DILocation(line: 812, column: 35, scope: !2620)
!2624 = !DILocation(line: 812, column: 22, scope: !2620)
!2625 = !DILocation(line: 812, column: 25, scope: !2620)
!2626 = !DILocation(line: 812, column: 9, scope: !2620)
!2627 = !DILocation(line: 811, column: 29, scope: !2628)
!2628 = !DILexicalBlockFile(scope: !2620, file: !925, discriminator: 2)
!2629 = !DILocation(line: 811, column: 5, scope: !2628)
!2630 = distinct !{!2630, !2631}
!2631 = !DILocation(line: 811, column: 5, scope: !2607)
!2632 = !DILocalVariable(name: "i", scope: !2633, file: !925, line: 813, type: !904)
!2633 = distinct !DILexicalBlock(scope: !2607, file: !925, line: 813, column: 5)
!2634 = !DILocation(line: 813, column: 14, scope: !2633)
!2635 = !DILocation(line: 813, column: 10, scope: !2633)
!2636 = !DILocation(line: 813, column: 21, scope: !2637)
!2637 = !DILexicalBlockFile(scope: !2638, file: !925, discriminator: 1)
!2638 = distinct !DILexicalBlock(scope: !2633, file: !925, line: 813, column: 5)
!2639 = !DILocation(line: 813, column: 23, scope: !2637)
!2640 = !DILocation(line: 813, column: 5, scope: !2637)
!2641 = !DILocation(line: 814, column: 35, scope: !2638)
!2642 = !DILocation(line: 814, column: 22, scope: !2638)
!2643 = !DILocation(line: 814, column: 25, scope: !2638)
!2644 = !DILocation(line: 814, column: 9, scope: !2638)
!2645 = !DILocation(line: 813, column: 29, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2638, file: !925, discriminator: 2)
!2647 = !DILocation(line: 813, column: 5, scope: !2646)
!2648 = distinct !{!2648, !2649}
!2649 = !DILocation(line: 813, column: 5, scope: !2607)
!2650 = !DILocalVariable(name: "i", scope: !2651, file: !925, line: 815, type: !904)
!2651 = distinct !DILexicalBlock(scope: !2607, file: !925, line: 815, column: 5)
!2652 = !DILocation(line: 815, column: 14, scope: !2651)
!2653 = !DILocation(line: 815, column: 10, scope: !2651)
!2654 = !DILocation(line: 815, column: 21, scope: !2655)
!2655 = !DILexicalBlockFile(scope: !2656, file: !925, discriminator: 1)
!2656 = distinct !DILexicalBlock(scope: !2651, file: !925, line: 815, column: 5)
!2657 = !DILocation(line: 815, column: 23, scope: !2655)
!2658 = !DILocation(line: 815, column: 5, scope: !2655)
!2659 = !DILocalVariable(name: "j", scope: !2660, file: !925, line: 816, type: !904)
!2660 = distinct !DILexicalBlock(scope: !2656, file: !925, line: 816, column: 9)
!2661 = !DILocation(line: 816, column: 18, scope: !2660)
!2662 = !DILocation(line: 816, column: 14, scope: !2660)
!2663 = !DILocation(line: 816, column: 25, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2665, file: !925, discriminator: 1)
!2665 = distinct !DILexicalBlock(scope: !2660, file: !925, line: 816, column: 9)
!2666 = !DILocation(line: 816, column: 27, scope: !2664)
!2667 = !DILocation(line: 816, column: 9, scope: !2664)
!2668 = !DILocalVariable(name: "k", scope: !2669, file: !925, line: 817, type: !904)
!2669 = distinct !DILexicalBlock(scope: !2665, file: !925, line: 817, column: 13)
!2670 = !DILocation(line: 817, column: 22, scope: !2669)
!2671 = !DILocation(line: 817, column: 18, scope: !2669)
!2672 = !DILocation(line: 817, column: 29, scope: !2673)
!2673 = !DILexicalBlockFile(scope: !2674, file: !925, discriminator: 1)
!2674 = distinct !DILexicalBlock(scope: !2669, file: !925, line: 817, column: 13)
!2675 = !DILocation(line: 817, column: 31, scope: !2673)
!2676 = !DILocation(line: 817, column: 13, scope: !2673)
!2677 = !DILocation(line: 818, column: 49, scope: !2674)
!2678 = !DILocation(line: 818, column: 30, scope: !2674)
!2679 = !DILocation(line: 818, column: 46, scope: !2674)
!2680 = !DILocation(line: 818, column: 43, scope: !2674)
!2681 = !DILocation(line: 818, column: 33, scope: !2674)
!2682 = !DILocation(line: 818, column: 17, scope: !2674)
!2683 = !DILocation(line: 817, column: 37, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !2674, file: !925, discriminator: 2)
!2685 = !DILocation(line: 817, column: 13, scope: !2684)
!2686 = distinct !{!2686, !2687}
!2687 = !DILocation(line: 817, column: 13, scope: !2665)
!2688 = !DILocation(line: 818, column: 51, scope: !2689)
!2689 = !DILexicalBlockFile(scope: !2669, file: !925, discriminator: 1)
!2690 = !DILocation(line: 816, column: 33, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2665, file: !925, discriminator: 2)
!2692 = !DILocation(line: 816, column: 9, scope: !2691)
!2693 = distinct !{!2693, !2694}
!2694 = !DILocation(line: 816, column: 9, scope: !2656)
!2695 = !DILocation(line: 818, column: 51, scope: !2696)
!2696 = !DILexicalBlockFile(scope: !2660, file: !925, discriminator: 2)
!2697 = !DILocation(line: 815, column: 29, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2656, file: !925, discriminator: 2)
!2699 = !DILocation(line: 815, column: 5, scope: !2698)
!2700 = distinct !{!2700, !2701}
!2701 = !DILocation(line: 815, column: 5, scope: !2607)
!2702 = !DILocation(line: 820, column: 18, scope: !2607)
!2703 = !DILocation(line: 820, column: 21, scope: !2607)
!2704 = !DILocation(line: 820, column: 5, scope: !2607)
!2705 = !DILocation(line: 821, column: 13, scope: !2607)
!2706 = !DILocation(line: 821, column: 16, scope: !2607)
!2707 = !DILocation(line: 821, column: 5, scope: !2607)
!2708 = !DILocation(line: 823, column: 5, scope: !2607)
!2709 = distinct !DISubprogram(name: "atrac9_decode_flush", scope: !925, file: !925, line: 793, type: !1642, isLocal: true, isDefinition: true, scopeLine: 794, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2710 = !DILocalVariable(name: "avctx", arg: 1, scope: !2709, file: !925, line: 793, type: !1019)
!2711 = !DILocation(line: 793, column: 49, scope: !2709)
!2712 = !DILocalVariable(name: "s", scope: !2709, file: !925, line: 795, type: !1858)
!2713 = !DILocation(line: 795, column: 20, scope: !2709)
!2714 = !DILocation(line: 795, column: 24, scope: !2709)
!2715 = !DILocation(line: 795, column: 31, scope: !2709)
!2716 = !DILocalVariable(name: "j", scope: !2717, file: !925, line: 797, type: !904)
!2717 = distinct !DILexicalBlock(scope: !2709, file: !925, line: 797, column: 5)
!2718 = !DILocation(line: 797, column: 14, scope: !2717)
!2719 = !DILocation(line: 797, column: 10, scope: !2717)
!2720 = !DILocation(line: 797, column: 21, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2722, file: !925, discriminator: 1)
!2722 = distinct !DILexicalBlock(scope: !2717, file: !925, line: 797, column: 5)
!2723 = !DILocation(line: 797, column: 25, scope: !2721)
!2724 = !DILocation(line: 797, column: 28, scope: !2721)
!2725 = !DILocation(line: 797, column: 42, scope: !2721)
!2726 = !DILocation(line: 797, column: 23, scope: !2721)
!2727 = !DILocation(line: 797, column: 5, scope: !2721)
!2728 = !DILocalVariable(name: "b", scope: !2729, file: !925, line: 798, type: !2030)
!2729 = distinct !DILexicalBlock(scope: !2722, file: !925, line: 797, column: 54)
!2730 = !DILocation(line: 798, column: 26, scope: !2729)
!2731 = !DILocation(line: 798, column: 40, scope: !2729)
!2732 = !DILocation(line: 798, column: 31, scope: !2729)
!2733 = !DILocation(line: 798, column: 34, scope: !2729)
!2734 = !DILocalVariable(name: "stereo", scope: !2729, file: !925, line: 799, type: !951)
!2735 = !DILocation(line: 799, column: 19, scope: !2729)
!2736 = !DILocation(line: 799, column: 50, scope: !2729)
!2737 = !DILocation(line: 799, column: 28, scope: !2729)
!2738 = !DILocation(line: 799, column: 31, scope: !2729)
!2739 = !DILocation(line: 799, column: 45, scope: !2729)
!2740 = !DILocation(line: 799, column: 53, scope: !2729)
!2741 = !DILocalVariable(name: "i", scope: !2742, file: !925, line: 800, type: !904)
!2742 = distinct !DILexicalBlock(scope: !2729, file: !925, line: 800, column: 9)
!2743 = !DILocation(line: 800, column: 18, scope: !2742)
!2744 = !DILocation(line: 800, column: 14, scope: !2742)
!2745 = !DILocation(line: 800, column: 25, scope: !2746)
!2746 = !DILexicalBlockFile(scope: !2747, file: !925, discriminator: 1)
!2747 = distinct !DILexicalBlock(scope: !2742, file: !925, line: 800, column: 9)
!2748 = !DILocation(line: 800, column: 30, scope: !2746)
!2749 = !DILocation(line: 800, column: 27, scope: !2746)
!2750 = !DILocation(line: 800, column: 9, scope: !2746)
!2751 = !DILocalVariable(name: "c", scope: !2752, file: !925, line: 801, type: !2031)
!2752 = distinct !DILexicalBlock(scope: !2747, file: !925, line: 800, column: 43)
!2753 = !DILocation(line: 801, column: 32, scope: !2752)
!2754 = !DILocation(line: 801, column: 48, scope: !2752)
!2755 = !DILocation(line: 801, column: 37, scope: !2752)
!2756 = !DILocation(line: 801, column: 40, scope: !2752)
!2757 = !DILocation(line: 802, column: 20, scope: !2752)
!2758 = !DILocation(line: 802, column: 23, scope: !2752)
!2759 = !DILocation(line: 802, column: 13, scope: !2752)
!2760 = !DILocation(line: 803, column: 9, scope: !2752)
!2761 = !DILocation(line: 800, column: 39, scope: !2762)
!2762 = !DILexicalBlockFile(scope: !2747, file: !925, discriminator: 2)
!2763 = !DILocation(line: 800, column: 9, scope: !2762)
!2764 = distinct !{!2764, !2765}
!2765 = !DILocation(line: 800, column: 9, scope: !2729)
!2766 = !DILocation(line: 804, column: 5, scope: !2729)
!2767 = !DILocation(line: 797, column: 50, scope: !2768)
!2768 = !DILexicalBlockFile(scope: !2722, file: !925, discriminator: 2)
!2769 = !DILocation(line: 797, column: 5, scope: !2768)
!2770 = distinct !{!2770, !2771}
!2771 = !DILocation(line: 797, column: 5, scope: !2709)
!2772 = !DILocation(line: 805, column: 1, scope: !2709)
!2773 = distinct !DISubprogram(name: "init_get_bits8", scope: !2034, file: !2034, line: 650, type: !2774, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!904, !2032, !1463, !904}
!2776 = !DILocalVariable(name: "s", arg: 1, scope: !2773, file: !2034, line: 650, type: !2032)
!2777 = !DILocation(line: 650, column: 49, scope: !2773)
!2778 = !DILocalVariable(name: "buffer", arg: 2, scope: !2773, file: !2034, line: 650, type: !1463)
!2779 = !DILocation(line: 650, column: 67, scope: !2773)
!2780 = !DILocalVariable(name: "byte_size", arg: 3, scope: !2773, file: !2034, line: 651, type: !904)
!2781 = !DILocation(line: 651, column: 38, scope: !2773)
!2782 = !DILocation(line: 653, column: 9, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2773, file: !2034, line: 653, column: 9)
!2784 = !DILocation(line: 653, column: 19, scope: !2783)
!2785 = !DILocation(line: 653, column: 36, scope: !2783)
!2786 = !DILocation(line: 653, column: 39, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !2783, file: !2034, discriminator: 1)
!2788 = !DILocation(line: 653, column: 49, scope: !2787)
!2789 = !DILocation(line: 653, column: 9, scope: !2787)
!2790 = !DILocation(line: 654, column: 19, scope: !2783)
!2791 = !DILocation(line: 654, column: 9, scope: !2783)
!2792 = !DILocation(line: 655, column: 26, scope: !2773)
!2793 = !DILocation(line: 655, column: 29, scope: !2773)
!2794 = !DILocation(line: 655, column: 37, scope: !2773)
!2795 = !DILocation(line: 655, column: 47, scope: !2773)
!2796 = !DILocation(line: 655, column: 12, scope: !2773)
!2797 = !DILocation(line: 655, column: 5, scope: !2773)
!2798 = distinct !DISubprogram(name: "get_bits", scope: !2034, file: !2034, line: 381, type: !2799, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!905, !2032, !904}
!2801 = !DILocalVariable(name: "x", arg: 1, scope: !2802, file: !2803, line: 66, type: !912)
!2802 = distinct !DISubprogram(name: "av_bswap32", scope: !2803, file: !2803, line: 66, type: !2804, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2803 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!912, !912}
!2806 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !2807)
!2807 = distinct !DILocation(line: 401, column: 16, scope: !2798)
!2808 = !DILocalVariable(name: "s", arg: 1, scope: !2798, file: !2034, line: 381, type: !2032)
!2809 = !DILocation(line: 381, column: 52, scope: !2798)
!2810 = !DILocalVariable(name: "n", arg: 2, scope: !2798, file: !2034, line: 381, type: !904)
!2811 = !DILocation(line: 381, column: 59, scope: !2798)
!2812 = !DILocalVariable(name: "tmp", scope: !2798, file: !2034, line: 383, type: !904)
!2813 = !DILocation(line: 383, column: 18, scope: !2798)
!2814 = !DILocalVariable(name: "re_index", scope: !2798, file: !2034, line: 399, type: !905)
!2815 = !DILocation(line: 399, column: 18, scope: !2798)
!2816 = !DILocation(line: 399, column: 30, scope: !2798)
!2817 = !DILocation(line: 399, column: 34, scope: !2798)
!2818 = !DILocalVariable(name: "re_cache", scope: !2798, file: !2034, line: 399, type: !905)
!2819 = !DILocation(line: 399, column: 78, scope: !2798)
!2820 = !DILocalVariable(name: "re_size_plus8", scope: !2798, file: !2034, line: 399, type: !905)
!2821 = !DILocation(line: 399, column: 101, scope: !2798)
!2822 = !DILocation(line: 399, column: 118, scope: !2798)
!2823 = !DILocation(line: 399, column: 122, scope: !2798)
!2824 = !DILocation(line: 401, column: 60, scope: !2798)
!2825 = !DILocation(line: 401, column: 64, scope: !2798)
!2826 = !DILocation(line: 401, column: 74, scope: !2798)
!2827 = !DILocation(line: 401, column: 83, scope: !2798)
!2828 = !DILocation(line: 401, column: 71, scope: !2798)
!2829 = !DILocation(line: 401, column: 92, scope: !2798)
!2830 = !DILocation(line: 401, column: 16, scope: !2798)
!2831 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !2807)
!2832 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !2807)
!2833 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !2807)
!2834 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !2807)
!2835 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !2807)
!2836 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !2807)
!2837 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !2807)
!2838 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !2807)
!2839 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !2807)
!2840 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !2807)
!2841 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !2807)
!2842 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !2807)
!2843 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !2807)
!2844 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !2807)
!2845 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !2807)
!2846 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !2807)
!2847 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !2807)
!2848 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !2807)
!2849 = !DILocation(line: 401, column: 100, scope: !2798)
!2850 = !DILocation(line: 401, column: 109, scope: !2798)
!2851 = !DILocation(line: 401, column: 96, scope: !2798)
!2852 = !DILocation(line: 401, column: 14, scope: !2798)
!2853 = !DILocation(line: 402, column: 21, scope: !2798)
!2854 = !DILocation(line: 402, column: 31, scope: !2798)
!2855 = !DILocation(line: 402, column: 11, scope: !2798)
!2856 = !DILocation(line: 402, column: 9, scope: !2798)
!2857 = !DILocation(line: 403, column: 18, scope: !2798)
!2858 = !DILocation(line: 403, column: 36, scope: !2798)
!2859 = !DILocation(line: 403, column: 48, scope: !2798)
!2860 = !DILocation(line: 403, column: 45, scope: !2798)
!2861 = !DILocation(line: 403, column: 33, scope: !2798)
!2862 = !DILocation(line: 403, column: 17, scope: !2798)
!2863 = !DILocation(line: 403, column: 55, scope: !2864)
!2864 = !DILexicalBlockFile(scope: !2798, file: !2034, discriminator: 1)
!2865 = !DILocation(line: 403, column: 67, scope: !2864)
!2866 = !DILocation(line: 403, column: 64, scope: !2864)
!2867 = !DILocation(line: 403, column: 17, scope: !2864)
!2868 = !DILocation(line: 403, column: 74, scope: !2869)
!2869 = !DILexicalBlockFile(scope: !2798, file: !2034, discriminator: 2)
!2870 = !DILocation(line: 403, column: 17, scope: !2869)
!2871 = !DILocation(line: 403, column: 17, scope: !2872)
!2872 = !DILexicalBlockFile(scope: !2798, file: !2034, discriminator: 3)
!2873 = !DILocation(line: 403, column: 14, scope: !2872)
!2874 = !DILocation(line: 404, column: 18, scope: !2798)
!2875 = !DILocation(line: 404, column: 6, scope: !2798)
!2876 = !DILocation(line: 404, column: 10, scope: !2798)
!2877 = !DILocation(line: 404, column: 16, scope: !2798)
!2878 = !DILocation(line: 406, column: 12, scope: !2798)
!2879 = !DILocation(line: 406, column: 5, scope: !2798)
!2880 = distinct !DISubprogram(name: "get_bits1", scope: !2034, file: !2034, line: 487, type: !2881, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!905, !2032}
!2883 = !DILocalVariable(name: "s", arg: 1, scope: !2880, file: !2034, line: 487, type: !2032)
!2884 = !DILocation(line: 487, column: 53, scope: !2880)
!2885 = !DILocalVariable(name: "index", scope: !2880, file: !2034, line: 499, type: !905)
!2886 = !DILocation(line: 499, column: 18, scope: !2880)
!2887 = !DILocation(line: 499, column: 26, scope: !2880)
!2888 = !DILocation(line: 499, column: 29, scope: !2880)
!2889 = !DILocalVariable(name: "result", scope: !2880, file: !2034, line: 500, type: !914)
!2890 = !DILocation(line: 500, column: 13, scope: !2880)
!2891 = !DILocation(line: 500, column: 32, scope: !2880)
!2892 = !DILocation(line: 500, column: 38, scope: !2880)
!2893 = !DILocation(line: 500, column: 22, scope: !2880)
!2894 = !DILocation(line: 500, column: 25, scope: !2880)
!2895 = !DILocation(line: 505, column: 16, scope: !2880)
!2896 = !DILocation(line: 505, column: 22, scope: !2880)
!2897 = !DILocation(line: 505, column: 12, scope: !2880)
!2898 = !DILocation(line: 506, column: 12, scope: !2880)
!2899 = !DILocation(line: 509, column: 9, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2880, file: !2034, line: 509, column: 9)
!2901 = !DILocation(line: 509, column: 12, scope: !2900)
!2902 = !DILocation(line: 509, column: 20, scope: !2900)
!2903 = !DILocation(line: 509, column: 23, scope: !2900)
!2904 = !DILocation(line: 509, column: 18, scope: !2900)
!2905 = !DILocation(line: 509, column: 9, scope: !2880)
!2906 = !DILocation(line: 511, column: 14, scope: !2900)
!2907 = !DILocation(line: 511, column: 9, scope: !2900)
!2908 = !DILocation(line: 512, column: 16, scope: !2880)
!2909 = !DILocation(line: 512, column: 5, scope: !2880)
!2910 = !DILocation(line: 512, column: 8, scope: !2880)
!2911 = !DILocation(line: 512, column: 14, scope: !2880)
!2912 = !DILocation(line: 514, column: 12, scope: !2880)
!2913 = !DILocation(line: 514, column: 5, scope: !2880)
!2914 = distinct !DISubprogram(name: "sign_extend", scope: !2915, file: !2915, line: 130, type: !2916, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2915 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!904, !904, !905}
!2918 = !DILocalVariable(name: "val", arg: 1, scope: !2914, file: !2915, line: 130, type: !904)
!2919 = !DILocation(line: 130, column: 58, scope: !2914)
!2920 = !DILocalVariable(name: "bits", arg: 2, scope: !2914, file: !2915, line: 130, type: !905)
!2921 = !DILocation(line: 130, column: 72, scope: !2914)
!2922 = !DILocalVariable(name: "shift", scope: !2914, file: !2915, line: 132, type: !905)
!2923 = !DILocation(line: 132, column: 14, scope: !2914)
!2924 = !DILocation(line: 132, column: 40, scope: !2914)
!2925 = !DILocation(line: 132, column: 38, scope: !2914)
!2926 = !DILocation(line: 132, column: 22, scope: !2914)
!2927 = !DILocalVariable(name: "v", scope: !2914, file: !2915, line: 133, type: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2915, line: 133, size: 32, align: 32, elements: !2929)
!2929 = !{!2930, !2931}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2928, file: !2915, line: 133, baseType: !905, size: 32, align: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2928, file: !2915, line: 133, baseType: !904, size: 32, align: 32)
!2932 = !DILocation(line: 133, column: 34, scope: !2914)
!2933 = !DILocation(line: 133, column: 38, scope: !2914)
!2934 = !DILocation(line: 133, column: 51, scope: !2914)
!2935 = !DILocation(line: 133, column: 58, scope: !2914)
!2936 = !DILocation(line: 133, column: 55, scope: !2914)
!2937 = !DILocation(line: 134, column: 14, scope: !2914)
!2938 = !DILocation(line: 134, column: 19, scope: !2914)
!2939 = !DILocation(line: 134, column: 16, scope: !2914)
!2940 = !DILocation(line: 134, column: 5, scope: !2914)
!2941 = distinct !DISubprogram(name: "init_get_bits", scope: !2034, file: !2034, line: 615, type: !2774, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2942 = !DILocalVariable(name: "s", arg: 1, scope: !2941, file: !2034, line: 615, type: !2032)
!2943 = !DILocation(line: 615, column: 48, scope: !2941)
!2944 = !DILocalVariable(name: "buffer", arg: 2, scope: !2941, file: !2034, line: 615, type: !1463)
!2945 = !DILocation(line: 615, column: 66, scope: !2941)
!2946 = !DILocalVariable(name: "bit_size", arg: 3, scope: !2941, file: !2034, line: 616, type: !904)
!2947 = !DILocation(line: 616, column: 37, scope: !2941)
!2948 = !DILocalVariable(name: "buffer_size", scope: !2941, file: !2034, line: 618, type: !904)
!2949 = !DILocation(line: 618, column: 9, scope: !2941)
!2950 = !DILocalVariable(name: "ret", scope: !2941, file: !2034, line: 619, type: !904)
!2951 = !DILocation(line: 619, column: 9, scope: !2941)
!2952 = !DILocation(line: 621, column: 9, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2941, file: !2034, line: 621, column: 9)
!2954 = !DILocation(line: 621, column: 18, scope: !2953)
!2955 = !DILocation(line: 621, column: 64, scope: !2953)
!2956 = !DILocation(line: 621, column: 67, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2953, file: !2034, discriminator: 1)
!2958 = !DILocation(line: 621, column: 76, scope: !2957)
!2959 = !DILocation(line: 621, column: 80, scope: !2957)
!2960 = !DILocation(line: 621, column: 84, scope: !2961)
!2961 = !DILexicalBlockFile(scope: !2953, file: !2034, discriminator: 2)
!2962 = !DILocation(line: 621, column: 9, scope: !2961)
!2963 = !DILocation(line: 622, column: 18, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2953, file: !2034, line: 621, column: 92)
!2965 = !DILocation(line: 623, column: 16, scope: !2964)
!2966 = !DILocation(line: 624, column: 13, scope: !2964)
!2967 = !DILocation(line: 625, column: 5, scope: !2964)
!2968 = !DILocation(line: 627, column: 20, scope: !2941)
!2969 = !DILocation(line: 627, column: 29, scope: !2941)
!2970 = !DILocation(line: 627, column: 34, scope: !2941)
!2971 = !DILocation(line: 627, column: 17, scope: !2941)
!2972 = !DILocation(line: 629, column: 17, scope: !2941)
!2973 = !DILocation(line: 629, column: 5, scope: !2941)
!2974 = !DILocation(line: 629, column: 8, scope: !2941)
!2975 = !DILocation(line: 629, column: 15, scope: !2941)
!2976 = !DILocation(line: 630, column: 23, scope: !2941)
!2977 = !DILocation(line: 630, column: 5, scope: !2941)
!2978 = !DILocation(line: 630, column: 8, scope: !2941)
!2979 = !DILocation(line: 630, column: 21, scope: !2941)
!2980 = !DILocation(line: 631, column: 29, scope: !2941)
!2981 = !DILocation(line: 631, column: 38, scope: !2941)
!2982 = !DILocation(line: 631, column: 5, scope: !2941)
!2983 = !DILocation(line: 631, column: 8, scope: !2941)
!2984 = !DILocation(line: 631, column: 27, scope: !2941)
!2985 = !DILocation(line: 632, column: 21, scope: !2941)
!2986 = !DILocation(line: 632, column: 30, scope: !2941)
!2987 = !DILocation(line: 632, column: 28, scope: !2941)
!2988 = !DILocation(line: 632, column: 5, scope: !2941)
!2989 = !DILocation(line: 632, column: 8, scope: !2941)
!2990 = !DILocation(line: 632, column: 19, scope: !2941)
!2991 = !DILocation(line: 633, column: 5, scope: !2941)
!2992 = !DILocation(line: 633, column: 8, scope: !2941)
!2993 = !DILocation(line: 633, column: 14, scope: !2941)
!2994 = !DILocation(line: 639, column: 12, scope: !2941)
!2995 = !DILocation(line: 639, column: 5, scope: !2941)
!2996 = distinct !DISubprogram(name: "NEG_USR32", scope: !2997, file: !2997, line: 124, type: !2998, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!2997 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!912, !912, !1126}
!3000 = !DILocalVariable(name: "a", arg: 1, scope: !2996, file: !2997, line: 124, type: !912)
!3001 = !DILocation(line: 124, column: 43, scope: !2996)
!3002 = !DILocalVariable(name: "s", arg: 2, scope: !2996, file: !2997, line: 124, type: !1126)
!3003 = !DILocation(line: 124, column: 53, scope: !2996)
!3004 = !DILocation(line: 125, column: 5, scope: !2996)
!3005 = !DILocation(line: 127, column: 29, scope: !2996)
!3006 = !DILocation(line: 127, column: 28, scope: !2996)
!3007 = !DILocation(line: 127, column: 18, scope: !2996)
!3008 = !{i32 183358, i32 183372}
!3009 = !DILocation(line: 129, column: 12, scope: !2996)
!3010 = !DILocation(line: 129, column: 5, scope: !2996)
!3011 = distinct !DISubprogram(name: "atrac9_decode_block", scope: !925, file: !925, line: 626, type: !3012, isLocal: true, isDefinition: true, scopeLine: 629, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!904, !1858, !2032, !2030, !1041, !904, !904}
!3014 = !DILocalVariable(name: "s", arg: 1, scope: !3011, file: !925, line: 626, type: !1858)
!3015 = !DILocation(line: 626, column: 47, scope: !3011)
!3016 = !DILocalVariable(name: "gb", arg: 2, scope: !3011, file: !925, line: 626, type: !2032)
!3017 = !DILocation(line: 626, column: 65, scope: !3011)
!3018 = !DILocalVariable(name: "b", arg: 3, scope: !3011, file: !925, line: 627, type: !2030)
!3019 = !DILocation(line: 627, column: 49, scope: !3011)
!3020 = !DILocalVariable(name: "frame", arg: 4, scope: !3011, file: !925, line: 627, type: !1041)
!3021 = !DILocation(line: 627, column: 61, scope: !3011)
!3022 = !DILocalVariable(name: "frame_idx", arg: 5, scope: !3011, file: !925, line: 628, type: !904)
!3023 = !DILocation(line: 628, column: 36, scope: !3011)
!3024 = !DILocalVariable(name: "block_idx", arg: 6, scope: !3011, file: !925, line: 628, type: !904)
!3025 = !DILocation(line: 628, column: 51, scope: !3011)
!3026 = !DILocalVariable(name: "first_in_pkt", scope: !3011, file: !925, line: 630, type: !951)
!3027 = !DILocation(line: 630, column: 15, scope: !3011)
!3028 = !DILocation(line: 630, column: 41, scope: !3011)
!3029 = !DILocation(line: 630, column: 31, scope: !3011)
!3030 = !DILocation(line: 630, column: 30, scope: !3011)
!3031 = !DILocalVariable(name: "reuse_params", scope: !3011, file: !925, line: 631, type: !951)
!3032 = !DILocation(line: 631, column: 15, scope: !3011)
!3033 = !DILocation(line: 631, column: 40, scope: !3011)
!3034 = !DILocation(line: 631, column: 30, scope: !3011)
!3035 = !DILocalVariable(name: "stereo", scope: !3011, file: !925, line: 632, type: !951)
!3036 = !DILocation(line: 632, column: 15, scope: !3011)
!3037 = !DILocation(line: 632, column: 46, scope: !3011)
!3038 = !DILocation(line: 632, column: 24, scope: !3011)
!3039 = !DILocation(line: 632, column: 27, scope: !3011)
!3040 = !DILocation(line: 632, column: 41, scope: !3011)
!3041 = !DILocation(line: 632, column: 57, scope: !3011)
!3042 = !DILocation(line: 634, column: 31, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 634, column: 9)
!3044 = !DILocation(line: 634, column: 9, scope: !3043)
!3045 = !DILocation(line: 634, column: 12, scope: !3043)
!3046 = !DILocation(line: 634, column: 26, scope: !3043)
!3047 = !DILocation(line: 634, column: 42, scope: !3043)
!3048 = !DILocation(line: 634, column: 9, scope: !3011)
!3049 = !DILocalVariable(name: "c", scope: !3050, file: !925, line: 635, type: !2031)
!3050 = distinct !DILexicalBlock(scope: !3043, file: !925, line: 634, column: 68)
!3051 = !DILocation(line: 635, column: 28, scope: !3050)
!3052 = !DILocation(line: 635, column: 33, scope: !3050)
!3053 = !DILocation(line: 635, column: 36, scope: !3050)
!3054 = !DILocalVariable(name: "precision", scope: !3050, file: !925, line: 636, type: !951)
!3055 = !DILocation(line: 636, column: 19, scope: !3050)
!3056 = !DILocation(line: 636, column: 31, scope: !3050)
!3057 = !DILocation(line: 637, column: 25, scope: !3050)
!3058 = !DILocation(line: 637, column: 28, scope: !3050)
!3059 = !DILocation(line: 637, column: 39, scope: !3050)
!3060 = !DILocation(line: 637, column: 9, scope: !3050)
!3061 = !DILocation(line: 637, column: 12, scope: !3050)
!3062 = !DILocation(line: 637, column: 23, scope: !3050)
!3063 = !DILocation(line: 639, column: 16, scope: !3050)
!3064 = !DILocation(line: 639, column: 19, scope: !3050)
!3065 = !DILocation(line: 639, column: 9, scope: !3050)
!3066 = !DILocation(line: 640, column: 16, scope: !3050)
!3067 = !DILocation(line: 640, column: 19, scope: !3050)
!3068 = !DILocation(line: 640, column: 9, scope: !3050)
!3069 = !DILocation(line: 641, column: 16, scope: !3050)
!3070 = !DILocation(line: 641, column: 19, scope: !3050)
!3071 = !DILocation(line: 641, column: 9, scope: !3050)
!3072 = !DILocalVariable(name: "i", scope: !3073, file: !925, line: 643, type: !904)
!3073 = distinct !DILexicalBlock(scope: !3050, file: !925, line: 643, column: 9)
!3074 = !DILocation(line: 643, column: 18, scope: !3073)
!3075 = !DILocation(line: 643, column: 14, scope: !3073)
!3076 = !DILocation(line: 643, column: 25, scope: !3077)
!3077 = !DILexicalBlockFile(scope: !3078, file: !925, discriminator: 1)
!3078 = distinct !DILexicalBlock(scope: !3073, file: !925, line: 643, column: 9)
!3079 = !DILocation(line: 643, column: 29, scope: !3077)
!3080 = !DILocation(line: 643, column: 32, scope: !3077)
!3081 = !DILocation(line: 643, column: 27, scope: !3077)
!3082 = !DILocation(line: 643, column: 9, scope: !3077)
!3083 = !DILocation(line: 644, column: 43, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3078, file: !925, line: 643, column: 49)
!3085 = !DILocation(line: 644, column: 34, scope: !3084)
!3086 = !DILocation(line: 644, column: 29, scope: !3084)
!3087 = !DILocation(line: 644, column: 13, scope: !3084)
!3088 = !DILocation(line: 644, column: 16, scope: !3084)
!3089 = !DILocation(line: 644, column: 32, scope: !3084)
!3090 = !DILocation(line: 645, column: 38, scope: !3084)
!3091 = !DILocation(line: 645, column: 33, scope: !3084)
!3092 = !DILocation(line: 645, column: 13, scope: !3084)
!3093 = !DILocation(line: 645, column: 16, scope: !3084)
!3094 = !DILocation(line: 645, column: 36, scope: !3084)
!3095 = !DILocation(line: 646, column: 31, scope: !3084)
!3096 = !DILocation(line: 646, column: 13, scope: !3084)
!3097 = !DILocation(line: 646, column: 16, scope: !3084)
!3098 = !DILocation(line: 646, column: 34, scope: !3084)
!3099 = !DILocation(line: 647, column: 9, scope: !3084)
!3100 = !DILocation(line: 643, column: 45, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !3078, file: !925, discriminator: 2)
!3102 = !DILocation(line: 643, column: 9, scope: !3101)
!3103 = distinct !{!3103, !3104}
!3104 = !DILocation(line: 643, column: 9, scope: !3050)
!3105 = !DILocalVariable(name: "i", scope: !3106, file: !925, line: 649, type: !904)
!3106 = distinct !DILexicalBlock(scope: !3050, file: !925, line: 649, column: 9)
!3107 = !DILocation(line: 649, column: 18, scope: !3106)
!3108 = !DILocation(line: 649, column: 14, scope: !3106)
!3109 = !DILocation(line: 649, column: 25, scope: !3110)
!3110 = !DILexicalBlockFile(scope: !3111, file: !925, discriminator: 1)
!3111 = distinct !DILexicalBlock(scope: !3106, file: !925, line: 649, column: 9)
!3112 = !DILocation(line: 649, column: 29, scope: !3110)
!3113 = !DILocation(line: 649, column: 32, scope: !3110)
!3114 = !DILocation(line: 649, column: 27, scope: !3110)
!3115 = !DILocation(line: 649, column: 9, scope: !3110)
!3116 = !DILocalVariable(name: "start", scope: !3117, file: !925, line: 650, type: !951)
!3117 = distinct !DILexicalBlock(scope: !3111, file: !925, line: 649, column: 49)
!3118 = !DILocation(line: 650, column: 23, scope: !3117)
!3119 = !DILocation(line: 650, column: 55, scope: !3117)
!3120 = !DILocation(line: 650, column: 57, scope: !3117)
!3121 = !DILocation(line: 650, column: 31, scope: !3117)
!3122 = !DILocalVariable(name: "end", scope: !3117, file: !925, line: 651, type: !951)
!3123 = !DILocation(line: 651, column: 23, scope: !3117)
!3124 = !DILocation(line: 651, column: 53, scope: !3117)
!3125 = !DILocation(line: 651, column: 55, scope: !3117)
!3126 = !DILocation(line: 651, column: 29, scope: !3117)
!3127 = !DILocalVariable(name: "j", scope: !3128, file: !925, line: 652, type: !904)
!3128 = distinct !DILexicalBlock(scope: !3117, file: !925, line: 652, column: 13)
!3129 = !DILocation(line: 652, column: 22, scope: !3128)
!3130 = !DILocation(line: 652, column: 26, scope: !3128)
!3131 = !DILocation(line: 652, column: 18, scope: !3128)
!3132 = !DILocation(line: 652, column: 33, scope: !3133)
!3133 = !DILexicalBlockFile(scope: !3134, file: !925, discriminator: 1)
!3134 = distinct !DILexicalBlock(scope: !3128, file: !925, line: 652, column: 13)
!3135 = !DILocation(line: 652, column: 37, scope: !3133)
!3136 = !DILocation(line: 652, column: 35, scope: !3133)
!3137 = !DILocation(line: 652, column: 13, scope: !3133)
!3138 = !DILocation(line: 653, column: 50, scope: !3134)
!3139 = !DILocation(line: 653, column: 74, scope: !3134)
!3140 = !DILocation(line: 653, column: 54, scope: !3134)
!3141 = !DILocation(line: 653, column: 57, scope: !3134)
!3142 = !DILocation(line: 653, column: 77, scope: !3134)
!3143 = !DILocation(line: 653, column: 41, scope: !3134)
!3144 = !DILocation(line: 653, column: 36, scope: !3134)
!3145 = !DILocation(line: 653, column: 17, scope: !3134)
!3146 = !DILocation(line: 653, column: 20, scope: !3134)
!3147 = !DILocation(line: 653, column: 39, scope: !3134)
!3148 = !DILocation(line: 652, column: 43, scope: !3149)
!3149 = !DILexicalBlockFile(scope: !3134, file: !925, discriminator: 2)
!3150 = !DILocation(line: 652, column: 13, scope: !3149)
!3151 = distinct !{!3151, !3152}
!3152 = !DILocation(line: 652, column: 13, scope: !3117)
!3153 = !DILocation(line: 654, column: 9, scope: !3117)
!3154 = !DILocation(line: 649, column: 45, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3111, file: !925, discriminator: 2)
!3156 = !DILocation(line: 649, column: 9, scope: !3155)
!3157 = distinct !{!3157, !3158}
!3158 = !DILocation(line: 649, column: 9, scope: !3050)
!3159 = !DILocation(line: 656, column: 21, scope: !3050)
!3160 = !DILocation(line: 656, column: 24, scope: !3050)
!3161 = !DILocation(line: 656, column: 27, scope: !3050)
!3162 = !DILocation(line: 656, column: 9, scope: !3050)
!3163 = !DILocation(line: 657, column: 28, scope: !3050)
!3164 = !DILocation(line: 657, column: 31, scope: !3050)
!3165 = !DILocation(line: 657, column: 9, scope: !3050)
!3166 = !DILocation(line: 659, column: 9, scope: !3050)
!3167 = !DILocation(line: 662, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 662, column: 9)
!3169 = !DILocation(line: 662, column: 22, scope: !3168)
!3170 = !DILocation(line: 662, column: 25, scope: !3171)
!3171 = !DILexicalBlockFile(scope: !3168, file: !925, discriminator: 1)
!3172 = !DILocation(line: 662, column: 9, scope: !3171)
!3173 = !DILocation(line: 663, column: 16, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3168, file: !925, line: 662, column: 39)
!3175 = !DILocation(line: 663, column: 19, scope: !3174)
!3176 = !DILocation(line: 663, column: 9, scope: !3174)
!3177 = !DILocation(line: 664, column: 9, scope: !3174)
!3178 = !DILocation(line: 668, column: 10, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 668, column: 9)
!3180 = !DILocation(line: 668, column: 9, scope: !3011)
!3181 = !DILocalVariable(name: "stereo_band", scope: !3182, file: !925, line: 669, type: !904)
!3182 = distinct !DILexicalBlock(scope: !3179, file: !925, line: 668, column: 24)
!3183 = !DILocation(line: 669, column: 13, scope: !3182)
!3184 = !DILocalVariable(name: "ext_band", scope: !3182, file: !925, line: 669, type: !904)
!3185 = !DILocation(line: 669, column: 26, scope: !3182)
!3186 = !DILocalVariable(name: "min_band_count", scope: !3182, file: !925, line: 670, type: !951)
!3187 = !DILocation(line: 670, column: 19, scope: !3182)
!3188 = !DILocation(line: 670, column: 36, scope: !3182)
!3189 = !DILocation(line: 670, column: 39, scope: !3182)
!3190 = !DILocation(line: 670, column: 54, scope: !3182)
!3191 = !DILocation(line: 671, column: 34, scope: !3182)
!3192 = !DILocation(line: 671, column: 25, scope: !3182)
!3193 = !DILocation(line: 671, column: 43, scope: !3182)
!3194 = !DILocation(line: 671, column: 41, scope: !3182)
!3195 = !DILocation(line: 671, column: 9, scope: !3182)
!3196 = !DILocation(line: 671, column: 12, scope: !3182)
!3197 = !DILocation(line: 671, column: 23, scope: !3182)
!3198 = !DILocation(line: 672, column: 49, scope: !3182)
!3199 = !DILocation(line: 672, column: 52, scope: !3182)
!3200 = !DILocation(line: 672, column: 25, scope: !3182)
!3201 = !DILocation(line: 672, column: 9, scope: !3182)
!3202 = !DILocation(line: 672, column: 12, scope: !3182)
!3203 = !DILocation(line: 672, column: 23, scope: !3182)
!3204 = !DILocation(line: 674, column: 49, scope: !3182)
!3205 = !DILocation(line: 674, column: 52, scope: !3182)
!3206 = !DILocation(line: 674, column: 30, scope: !3182)
!3207 = !DILocation(line: 674, column: 33, scope: !3182)
!3208 = !DILocation(line: 674, column: 47, scope: !3182)
!3209 = !DILocation(line: 674, column: 9, scope: !3182)
!3210 = !DILocation(line: 674, column: 12, scope: !3182)
!3211 = !DILocation(line: 674, column: 28, scope: !3182)
!3212 = !DILocation(line: 676, column: 13, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3182, file: !925, line: 676, column: 13)
!3214 = !DILocation(line: 676, column: 16, scope: !3213)
!3215 = !DILocation(line: 676, column: 51, scope: !3213)
!3216 = !DILocation(line: 676, column: 54, scope: !3213)
!3217 = !DILocation(line: 676, column: 29, scope: !3213)
!3218 = !DILocation(line: 676, column: 27, scope: !3213)
!3219 = !DILocation(line: 676, column: 13, scope: !3182)
!3220 = !DILocation(line: 677, column: 20, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3213, file: !925, line: 676, column: 71)
!3222 = !DILocation(line: 677, column: 23, scope: !3221)
!3223 = !DILocation(line: 678, column: 20, scope: !3221)
!3224 = !DILocation(line: 678, column: 23, scope: !3221)
!3225 = !DILocation(line: 677, column: 13, scope: !3221)
!3226 = !DILocation(line: 679, column: 13, scope: !3221)
!3227 = !DILocation(line: 682, column: 13, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3182, file: !925, line: 682, column: 13)
!3229 = !DILocation(line: 682, column: 13, scope: !3182)
!3230 = !DILocation(line: 683, column: 36, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3228, file: !925, line: 682, column: 21)
!3232 = !DILocation(line: 683, column: 27, scope: !3231)
!3233 = !DILocation(line: 683, column: 45, scope: !3231)
!3234 = !DILocation(line: 683, column: 43, scope: !3231)
!3235 = !DILocation(line: 683, column: 25, scope: !3231)
!3236 = !DILocation(line: 684, column: 17, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3231, file: !925, line: 684, column: 17)
!3238 = !DILocation(line: 684, column: 31, scope: !3237)
!3239 = !DILocation(line: 684, column: 34, scope: !3237)
!3240 = !DILocation(line: 684, column: 29, scope: !3237)
!3241 = !DILocation(line: 684, column: 17, scope: !3231)
!3242 = !DILocation(line: 685, column: 24, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !925, line: 684, column: 46)
!3244 = !DILocation(line: 685, column: 27, scope: !3243)
!3245 = !DILocation(line: 686, column: 24, scope: !3243)
!3246 = !DILocation(line: 685, column: 17, scope: !3243)
!3247 = !DILocation(line: 687, column: 17, scope: !3243)
!3248 = !DILocation(line: 689, column: 56, scope: !3231)
!3249 = !DILocation(line: 689, column: 32, scope: !3231)
!3250 = !DILocation(line: 689, column: 13, scope: !3231)
!3251 = !DILocation(line: 689, column: 16, scope: !3231)
!3252 = !DILocation(line: 689, column: 30, scope: !3231)
!3253 = !DILocation(line: 690, column: 9, scope: !3231)
!3254 = !DILocation(line: 692, column: 37, scope: !3182)
!3255 = !DILocation(line: 692, column: 27, scope: !3182)
!3256 = !DILocation(line: 692, column: 9, scope: !3182)
!3257 = !DILocation(line: 692, column: 12, scope: !3182)
!3258 = !DILocation(line: 692, column: 25, scope: !3182)
!3259 = !DILocation(line: 693, column: 13, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3182, file: !925, line: 693, column: 13)
!3261 = !DILocation(line: 693, column: 16, scope: !3260)
!3262 = !DILocation(line: 693, column: 13, scope: !3182)
!3263 = !DILocation(line: 694, column: 33, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !925, line: 693, column: 30)
!3265 = !DILocation(line: 694, column: 24, scope: !3264)
!3266 = !DILocation(line: 694, column: 42, scope: !3264)
!3267 = !DILocation(line: 694, column: 40, scope: !3264)
!3268 = !DILocation(line: 694, column: 22, scope: !3264)
!3269 = !DILocation(line: 695, column: 17, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3264, file: !925, line: 695, column: 17)
!3271 = !DILocation(line: 695, column: 28, scope: !3270)
!3272 = !DILocation(line: 695, column: 31, scope: !3270)
!3273 = !DILocation(line: 695, column: 26, scope: !3270)
!3274 = !DILocation(line: 695, column: 17, scope: !3264)
!3275 = !DILocation(line: 696, column: 24, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3270, file: !925, line: 695, column: 43)
!3277 = !DILocation(line: 696, column: 27, scope: !3276)
!3278 = !DILocation(line: 697, column: 24, scope: !3276)
!3279 = !DILocation(line: 696, column: 17, scope: !3276)
!3280 = !DILocation(line: 698, column: 17, scope: !3276)
!3281 = !DILocation(line: 700, column: 58, scope: !3264)
!3282 = !DILocation(line: 700, column: 34, scope: !3264)
!3283 = !DILocation(line: 700, column: 13, scope: !3264)
!3284 = !DILocation(line: 700, column: 16, scope: !3264)
!3285 = !DILocation(line: 700, column: 32, scope: !3264)
!3286 = !DILocation(line: 701, column: 9, scope: !3264)
!3287 = !DILocation(line: 702, column: 5, scope: !3182)
!3288 = !DILocation(line: 705, column: 24, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 705, column: 9)
!3290 = !DILocation(line: 705, column: 27, scope: !3289)
!3291 = !DILocation(line: 705, column: 30, scope: !3289)
!3292 = !DILocation(line: 705, column: 9, scope: !3289)
!3293 = !DILocation(line: 705, column: 9, scope: !3011)
!3294 = !DILocation(line: 706, column: 9, scope: !3289)
!3295 = !DILocation(line: 709, column: 5, scope: !3011)
!3296 = !DILocation(line: 709, column: 8, scope: !3011)
!3297 = !DILocation(line: 709, column: 25, scope: !3011)
!3298 = !DILocation(line: 710, column: 9, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 710, column: 9)
!3300 = !DILocation(line: 710, column: 9, scope: !3011)
!3301 = !DILocation(line: 711, column: 41, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3299, file: !925, line: 710, column: 17)
!3303 = !DILocation(line: 711, column: 31, scope: !3302)
!3304 = !DILocation(line: 711, column: 9, scope: !3302)
!3305 = !DILocation(line: 711, column: 12, scope: !3302)
!3306 = !DILocation(line: 711, column: 29, scope: !3302)
!3307 = !DILocation(line: 712, column: 23, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3302, file: !925, line: 712, column: 13)
!3309 = !DILocation(line: 712, column: 13, scope: !3308)
!3310 = !DILocation(line: 712, column: 13, scope: !3302)
!3311 = !DILocalVariable(name: "i", scope: !3312, file: !925, line: 713, type: !904)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !925, line: 713, column: 13)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !925, line: 712, column: 28)
!3314 = !DILocation(line: 713, column: 22, scope: !3312)
!3315 = !DILocation(line: 713, column: 26, scope: !3312)
!3316 = !DILocation(line: 713, column: 29, scope: !3312)
!3317 = !DILocation(line: 713, column: 18, scope: !3312)
!3318 = !DILocation(line: 713, column: 44, scope: !3319)
!3319 = !DILexicalBlockFile(scope: !3320, file: !925, discriminator: 1)
!3320 = distinct !DILexicalBlock(scope: !3312, file: !925, line: 713, column: 13)
!3321 = !DILocation(line: 713, column: 48, scope: !3319)
!3322 = !DILocation(line: 713, column: 51, scope: !3319)
!3323 = !DILocation(line: 713, column: 46, scope: !3319)
!3324 = !DILocation(line: 713, column: 13, scope: !3319)
!3325 = !DILocation(line: 714, column: 50, scope: !3320)
!3326 = !DILocation(line: 714, column: 40, scope: !3320)
!3327 = !DILocation(line: 714, column: 39, scope: !3320)
!3328 = !DILocation(line: 714, column: 36, scope: !3320)
!3329 = !DILocation(line: 714, column: 29, scope: !3320)
!3330 = !DILocation(line: 714, column: 17, scope: !3320)
!3331 = !DILocation(line: 714, column: 20, scope: !3320)
!3332 = !DILocation(line: 714, column: 32, scope: !3320)
!3333 = !DILocation(line: 713, column: 64, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3320, file: !925, discriminator: 2)
!3335 = !DILocation(line: 713, column: 13, scope: !3334)
!3336 = distinct !{!3336, !3337}
!3337 = !DILocation(line: 713, column: 13, scope: !3313)
!3338 = !DILocation(line: 715, column: 9, scope: !3313)
!3339 = !DILocalVariable(name: "i", scope: !3340, file: !925, line: 716, type: !904)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !925, line: 716, column: 13)
!3341 = distinct !DILexicalBlock(scope: !3308, file: !925, line: 715, column: 16)
!3342 = !DILocation(line: 716, column: 22, scope: !3340)
!3343 = !DILocation(line: 716, column: 18, scope: !3340)
!3344 = !DILocation(line: 716, column: 29, scope: !3345)
!3345 = !DILexicalBlockFile(scope: !3346, file: !925, discriminator: 1)
!3346 = distinct !DILexicalBlock(scope: !3340, file: !925, line: 716, column: 13)
!3347 = !DILocation(line: 716, column: 31, scope: !3345)
!3348 = !DILocation(line: 716, column: 13, scope: !3345)
!3349 = !DILocation(line: 717, column: 29, scope: !3346)
!3350 = !DILocation(line: 717, column: 17, scope: !3346)
!3351 = !DILocation(line: 717, column: 20, scope: !3346)
!3352 = !DILocation(line: 717, column: 32, scope: !3346)
!3353 = !DILocation(line: 716, column: 84, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !3346, file: !925, discriminator: 2)
!3355 = !DILocation(line: 716, column: 13, scope: !3354)
!3356 = distinct !{!3356, !3357}
!3357 = !DILocation(line: 716, column: 13, scope: !3341)
!3358 = !DILocation(line: 719, column: 5, scope: !3302)
!3359 = !DILocation(line: 722, column: 24, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 722, column: 9)
!3361 = !DILocation(line: 722, column: 27, scope: !3360)
!3362 = !DILocation(line: 722, column: 30, scope: !3360)
!3363 = !DILocation(line: 722, column: 34, scope: !3360)
!3364 = !DILocation(line: 722, column: 9, scope: !3360)
!3365 = !DILocation(line: 722, column: 9, scope: !3011)
!3366 = !DILocation(line: 723, column: 9, scope: !3360)
!3367 = !DILocalVariable(name: "i", scope: !3368, file: !925, line: 726, type: !904)
!3368 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 726, column: 5)
!3369 = !DILocation(line: 726, column: 14, scope: !3368)
!3370 = !DILocation(line: 726, column: 10, scope: !3368)
!3371 = !DILocation(line: 726, column: 21, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3373, file: !925, discriminator: 1)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !925, line: 726, column: 5)
!3374 = !DILocation(line: 726, column: 26, scope: !3372)
!3375 = !DILocation(line: 726, column: 23, scope: !3372)
!3376 = !DILocation(line: 726, column: 5, scope: !3372)
!3377 = !DILocalVariable(name: "c", scope: !3378, file: !925, line: 727, type: !2031)
!3378 = distinct !DILexicalBlock(scope: !3373, file: !925, line: 726, column: 39)
!3379 = !DILocation(line: 727, column: 28, scope: !3378)
!3380 = !DILocation(line: 727, column: 44, scope: !3378)
!3381 = !DILocation(line: 727, column: 33, scope: !3378)
!3382 = !DILocation(line: 727, column: 36, scope: !3378)
!3383 = !DILocation(line: 728, column: 25, scope: !3378)
!3384 = !DILocation(line: 728, column: 30, scope: !3378)
!3385 = !DILocation(line: 728, column: 33, scope: !3378)
!3386 = !DILocation(line: 728, column: 27, scope: !3378)
!3387 = !DILocation(line: 728, column: 52, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !3378, file: !925, discriminator: 1)
!3389 = !DILocation(line: 728, column: 55, scope: !3388)
!3390 = !DILocation(line: 728, column: 25, scope: !3388)
!3391 = !DILocation(line: 729, column: 52, scope: !3378)
!3392 = !DILocation(line: 729, column: 55, scope: !3378)
!3393 = !DILocation(line: 728, column: 25, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3378, file: !925, discriminator: 2)
!3395 = !DILocation(line: 728, column: 25, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3378, file: !925, discriminator: 3)
!3397 = !DILocation(line: 728, column: 9, scope: !3396)
!3398 = !DILocation(line: 728, column: 12, scope: !3396)
!3399 = !DILocation(line: 728, column: 23, scope: !3396)
!3400 = !DILocation(line: 730, column: 31, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3378, file: !925, line: 730, column: 13)
!3402 = !DILocation(line: 730, column: 34, scope: !3401)
!3403 = !DILocation(line: 730, column: 37, scope: !3401)
!3404 = !DILocation(line: 730, column: 40, scope: !3401)
!3405 = !DILocation(line: 730, column: 44, scope: !3401)
!3406 = !DILocation(line: 730, column: 47, scope: !3401)
!3407 = !DILocation(line: 730, column: 13, scope: !3401)
!3408 = !DILocation(line: 730, column: 13, scope: !3378)
!3409 = !DILocation(line: 731, column: 13, scope: !3401)
!3410 = !DILocation(line: 733, column: 25, scope: !3378)
!3411 = !DILocation(line: 733, column: 28, scope: !3378)
!3412 = !DILocation(line: 733, column: 31, scope: !3378)
!3413 = !DILocation(line: 733, column: 9, scope: !3378)
!3414 = !DILocation(line: 734, column: 28, scope: !3378)
!3415 = !DILocation(line: 734, column: 31, scope: !3378)
!3416 = !DILocation(line: 734, column: 34, scope: !3378)
!3417 = !DILocation(line: 734, column: 9, scope: !3378)
!3418 = !DILocation(line: 735, column: 28, scope: !3378)
!3419 = !DILocation(line: 735, column: 31, scope: !3378)
!3420 = !DILocation(line: 735, column: 34, scope: !3378)
!3421 = !DILocation(line: 735, column: 37, scope: !3378)
!3422 = !DILocation(line: 735, column: 9, scope: !3378)
!3423 = !DILocation(line: 736, column: 27, scope: !3378)
!3424 = !DILocation(line: 736, column: 30, scope: !3378)
!3425 = !DILocation(line: 736, column: 33, scope: !3378)
!3426 = !DILocation(line: 736, column: 36, scope: !3378)
!3427 = !DILocation(line: 736, column: 9, scope: !3378)
!3428 = !DILocation(line: 737, column: 21, scope: !3378)
!3429 = !DILocation(line: 737, column: 24, scope: !3378)
!3430 = !DILocation(line: 737, column: 27, scope: !3378)
!3431 = !DILocation(line: 737, column: 9, scope: !3378)
!3432 = !DILocation(line: 738, column: 5, scope: !3378)
!3433 = !DILocation(line: 726, column: 35, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3373, file: !925, discriminator: 2)
!3435 = !DILocation(line: 726, column: 5, scope: !3434)
!3436 = distinct !{!3436, !3437}
!3437 = !DILocation(line: 726, column: 5, scope: !3011)
!3438 = !DILocation(line: 740, column: 26, scope: !3011)
!3439 = !DILocation(line: 740, column: 29, scope: !3011)
!3440 = !DILocation(line: 740, column: 44, scope: !3441)
!3441 = !DILexicalBlockFile(scope: !3011, file: !925, discriminator: 1)
!3442 = !DILocation(line: 740, column: 47, scope: !3441)
!3443 = !DILocation(line: 740, column: 26, scope: !3441)
!3444 = !DILocation(line: 740, column: 65, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3011, file: !925, discriminator: 2)
!3446 = !DILocation(line: 740, column: 68, scope: !3445)
!3447 = !DILocation(line: 740, column: 26, scope: !3445)
!3448 = !DILocation(line: 740, column: 26, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !3011, file: !925, discriminator: 3)
!3450 = !DILocation(line: 740, column: 5, scope: !3449)
!3451 = !DILocation(line: 740, column: 8, scope: !3449)
!3452 = !DILocation(line: 740, column: 24, scope: !3449)
!3453 = !DILocation(line: 742, column: 28, scope: !3011)
!3454 = !DILocation(line: 742, column: 31, scope: !3011)
!3455 = !DILocation(line: 742, column: 34, scope: !3011)
!3456 = !DILocation(line: 742, column: 5, scope: !3011)
!3457 = !DILocation(line: 743, column: 25, scope: !3011)
!3458 = !DILocation(line: 743, column: 28, scope: !3011)
!3459 = !DILocation(line: 743, column: 31, scope: !3011)
!3460 = !DILocation(line: 743, column: 5, scope: !3011)
!3461 = !DILocation(line: 744, column: 27, scope: !3011)
!3462 = !DILocation(line: 744, column: 30, scope: !3011)
!3463 = !DILocation(line: 744, column: 33, scope: !3011)
!3464 = !DILocation(line: 744, column: 5, scope: !3011)
!3465 = !DILocalVariable(name: "i", scope: !3466, file: !925, line: 747, type: !904)
!3466 = distinct !DILexicalBlock(scope: !3011, file: !925, line: 747, column: 5)
!3467 = !DILocation(line: 747, column: 14, scope: !3466)
!3468 = !DILocation(line: 747, column: 10, scope: !3466)
!3469 = !DILocation(line: 747, column: 21, scope: !3470)
!3470 = !DILexicalBlockFile(scope: !3471, file: !925, discriminator: 1)
!3471 = distinct !DILexicalBlock(scope: !3466, file: !925, line: 747, column: 5)
!3472 = !DILocation(line: 747, column: 26, scope: !3470)
!3473 = !DILocation(line: 747, column: 23, scope: !3470)
!3474 = !DILocation(line: 747, column: 5, scope: !3470)
!3475 = !DILocalVariable(name: "c", scope: !3476, file: !925, line: 748, type: !2031)
!3476 = distinct !DILexicalBlock(scope: !3471, file: !925, line: 747, column: 39)
!3477 = !DILocation(line: 748, column: 28, scope: !3476)
!3478 = !DILocation(line: 748, column: 44, scope: !3476)
!3479 = !DILocation(line: 748, column: 33, scope: !3476)
!3480 = !DILocation(line: 748, column: 36, scope: !3476)
!3481 = !DILocalVariable(name: "dst_idx", scope: !3476, file: !925, line: 749, type: !951)
!3482 = !DILocation(line: 749, column: 19, scope: !3476)
!3483 = !DILocation(line: 749, column: 67, scope: !3476)
!3484 = !DILocation(line: 749, column: 29, scope: !3476)
!3485 = !DILocation(line: 749, column: 56, scope: !3476)
!3486 = !DILocation(line: 749, column: 32, scope: !3476)
!3487 = !DILocation(line: 749, column: 46, scope: !3476)
!3488 = !DILocalVariable(name: "wsize", scope: !3476, file: !925, line: 750, type: !951)
!3489 = !DILocation(line: 750, column: 19, scope: !3476)
!3490 = !DILocation(line: 750, column: 32, scope: !3476)
!3491 = !DILocation(line: 750, column: 35, scope: !3476)
!3492 = !DILocation(line: 750, column: 29, scope: !3476)
!3493 = !DILocalVariable(name: "offset", scope: !3476, file: !925, line: 751, type: !3494)
!3494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3495)
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1135, line: 149, baseType: !1063)
!3496 = !DILocation(line: 751, column: 25, scope: !3476)
!3497 = !DILocation(line: 751, column: 34, scope: !3476)
!3498 = !DILocation(line: 751, column: 40, scope: !3476)
!3499 = !DILocation(line: 751, column: 39, scope: !3476)
!3500 = !DILocation(line: 751, column: 49, scope: !3476)
!3501 = !DILocalVariable(name: "dst", scope: !3476, file: !925, line: 752, type: !916)
!3502 = !DILocation(line: 752, column: 16, scope: !3476)
!3503 = !DILocation(line: 752, column: 53, scope: !3476)
!3504 = !DILocation(line: 752, column: 32, scope: !3476)
!3505 = !DILocation(line: 752, column: 39, scope: !3476)
!3506 = !DILocation(line: 752, column: 64, scope: !3476)
!3507 = !DILocation(line: 752, column: 62, scope: !3476)
!3508 = !DILocation(line: 752, column: 22, scope: !3476)
!3509 = !DILocation(line: 754, column: 9, scope: !3476)
!3510 = !DILocation(line: 754, column: 12, scope: !3476)
!3511 = !DILocation(line: 754, column: 18, scope: !3476)
!3512 = !DILocation(line: 754, column: 30, scope: !3476)
!3513 = !DILocation(line: 754, column: 33, scope: !3476)
!3514 = !DILocation(line: 754, column: 40, scope: !3476)
!3515 = !DILocation(line: 754, column: 43, scope: !3476)
!3516 = !DILocation(line: 754, column: 49, scope: !3476)
!3517 = !DILocation(line: 754, column: 52, scope: !3476)
!3518 = !DILocation(line: 755, column: 9, scope: !3476)
!3519 = !DILocation(line: 755, column: 12, scope: !3476)
!3520 = !DILocation(line: 755, column: 18, scope: !3476)
!3521 = !DILocation(line: 755, column: 37, scope: !3476)
!3522 = !DILocation(line: 755, column: 42, scope: !3476)
!3523 = !DILocation(line: 755, column: 45, scope: !3476)
!3524 = !DILocation(line: 755, column: 55, scope: !3476)
!3525 = !DILocation(line: 755, column: 58, scope: !3476)
!3526 = !DILocation(line: 756, column: 37, scope: !3476)
!3527 = !DILocation(line: 756, column: 40, scope: !3476)
!3528 = !DILocation(line: 756, column: 51, scope: !3476)
!3529 = !DILocation(line: 756, column: 57, scope: !3476)
!3530 = !DILocation(line: 757, column: 16, scope: !3476)
!3531 = !DILocation(line: 757, column: 19, scope: !3476)
!3532 = !DILocation(line: 757, column: 9, scope: !3476)
!3533 = !DILocation(line: 757, column: 29, scope: !3476)
!3534 = !DILocation(line: 757, column: 32, scope: !3476)
!3535 = !DILocation(line: 757, column: 40, scope: !3476)
!3536 = !DILocation(line: 757, column: 46, scope: !3476)
!3537 = !DILocation(line: 757, column: 37, scope: !3476)
!3538 = !DILocation(line: 757, column: 67, scope: !3476)
!3539 = !DILocation(line: 757, column: 66, scope: !3476)
!3540 = !DILocation(line: 757, column: 73, scope: !3476)
!3541 = !DILocation(line: 758, column: 5, scope: !3476)
!3542 = !DILocation(line: 747, column: 35, scope: !3543)
!3543 = !DILexicalBlockFile(scope: !3471, file: !925, discriminator: 2)
!3544 = !DILocation(line: 747, column: 5, scope: !3543)
!3545 = distinct !{!3545, !3546}
!3546 = !DILocation(line: 747, column: 5, scope: !3011)
!3547 = !DILocation(line: 760, column: 5, scope: !3011)
!3548 = !DILocation(line: 761, column: 1, scope: !3011)
!3549 = distinct !DISubprogram(name: "align_get_bits", scope: !2034, file: !2034, line: 658, type: !3550, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!1463, !2032}
!3552 = !DILocalVariable(name: "s", arg: 1, scope: !3549, file: !2034, line: 658, type: !2032)
!3553 = !DILocation(line: 658, column: 60, scope: !3549)
!3554 = !DILocalVariable(name: "n", scope: !3549, file: !2034, line: 660, type: !904)
!3555 = !DILocation(line: 660, column: 9, scope: !3549)
!3556 = !DILocation(line: 660, column: 29, scope: !3549)
!3557 = !DILocation(line: 660, column: 14, scope: !3549)
!3558 = !DILocation(line: 660, column: 13, scope: !3549)
!3559 = !DILocation(line: 660, column: 32, scope: !3549)
!3560 = !DILocation(line: 661, column: 9, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3549, file: !2034, line: 661, column: 9)
!3562 = !DILocation(line: 661, column: 9, scope: !3549)
!3563 = !DILocation(line: 662, column: 19, scope: !3561)
!3564 = !DILocation(line: 662, column: 22, scope: !3561)
!3565 = !DILocation(line: 662, column: 9, scope: !3561)
!3566 = !DILocation(line: 663, column: 12, scope: !3549)
!3567 = !DILocation(line: 663, column: 15, scope: !3549)
!3568 = !DILocation(line: 663, column: 25, scope: !3549)
!3569 = !DILocation(line: 663, column: 28, scope: !3549)
!3570 = !DILocation(line: 663, column: 34, scope: !3549)
!3571 = !DILocation(line: 663, column: 22, scope: !3549)
!3572 = !DILocation(line: 663, column: 5, scope: !3549)
!3573 = distinct !DISubprogram(name: "dequantize", scope: !925, file: !925, line: 437, type: !3574, isLocal: true, isDefinition: true, scopeLine: 439, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{null, !1858, !2030, !2031}
!3576 = !DILocalVariable(name: "s", arg: 1, scope: !3573, file: !925, line: 437, type: !1858)
!3577 = !DILocation(line: 437, column: 46, scope: !3573)
!3578 = !DILocalVariable(name: "b", arg: 2, scope: !3573, file: !925, line: 437, type: !2030)
!3579 = !DILocation(line: 437, column: 66, scope: !3573)
!3580 = !DILocalVariable(name: "c", arg: 3, scope: !3573, file: !925, line: 438, type: !2031)
!3581 = !DILocation(line: 438, column: 50, scope: !3573)
!3582 = !DILocation(line: 440, column: 12, scope: !3573)
!3583 = !DILocation(line: 440, column: 15, scope: !3573)
!3584 = !DILocation(line: 440, column: 5, scope: !3573)
!3585 = !DILocalVariable(name: "i", scope: !3586, file: !925, line: 442, type: !904)
!3586 = distinct !DILexicalBlock(scope: !3573, file: !925, line: 442, column: 5)
!3587 = !DILocation(line: 442, column: 14, scope: !3586)
!3588 = !DILocation(line: 442, column: 10, scope: !3586)
!3589 = !DILocation(line: 442, column: 21, scope: !3590)
!3590 = !DILexicalBlockFile(scope: !3591, file: !925, discriminator: 1)
!3591 = distinct !DILexicalBlock(scope: !3586, file: !925, line: 442, column: 5)
!3592 = !DILocation(line: 442, column: 25, scope: !3590)
!3593 = !DILocation(line: 442, column: 28, scope: !3590)
!3594 = !DILocation(line: 442, column: 23, scope: !3590)
!3595 = !DILocation(line: 442, column: 5, scope: !3590)
!3596 = !DILocalVariable(name: "start", scope: !3597, file: !925, line: 443, type: !951)
!3597 = distinct !DILexicalBlock(scope: !3591, file: !925, line: 442, column: 45)
!3598 = !DILocation(line: 443, column: 19, scope: !3597)
!3599 = !DILocation(line: 443, column: 51, scope: !3597)
!3600 = !DILocation(line: 443, column: 53, scope: !3597)
!3601 = !DILocation(line: 443, column: 27, scope: !3597)
!3602 = !DILocalVariable(name: "end", scope: !3597, file: !925, line: 444, type: !951)
!3603 = !DILocation(line: 444, column: 19, scope: !3597)
!3604 = !DILocation(line: 444, column: 49, scope: !3597)
!3605 = !DILocation(line: 444, column: 51, scope: !3597)
!3606 = !DILocation(line: 444, column: 25, scope: !3597)
!3607 = !DILocalVariable(name: "coarse_c", scope: !3597, file: !925, line: 446, type: !1835)
!3608 = !DILocation(line: 446, column: 21, scope: !3597)
!3609 = !DILocation(line: 446, column: 74, scope: !3597)
!3610 = !DILocation(line: 446, column: 54, scope: !3597)
!3611 = !DILocation(line: 446, column: 57, scope: !3597)
!3612 = !DILocation(line: 446, column: 32, scope: !3597)
!3613 = !DILocalVariable(name: "fine_c", scope: !3597, file: !925, line: 447, type: !1835)
!3614 = !DILocation(line: 447, column: 21, scope: !3597)
!3615 = !DILocation(line: 447, column: 68, scope: !3597)
!3616 = !DILocation(line: 447, column: 50, scope: !3597)
!3617 = !DILocation(line: 447, column: 53, scope: !3597)
!3618 = !DILocation(line: 447, column: 30, scope: !3597)
!3619 = !DILocalVariable(name: "j", scope: !3620, file: !925, line: 449, type: !904)
!3620 = distinct !DILexicalBlock(scope: !3597, file: !925, line: 449, column: 9)
!3621 = !DILocation(line: 449, column: 18, scope: !3620)
!3622 = !DILocation(line: 449, column: 22, scope: !3620)
!3623 = !DILocation(line: 449, column: 14, scope: !3620)
!3624 = !DILocation(line: 449, column: 29, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3626, file: !925, discriminator: 1)
!3626 = distinct !DILexicalBlock(scope: !3620, file: !925, line: 449, column: 9)
!3627 = !DILocation(line: 449, column: 33, scope: !3625)
!3628 = !DILocation(line: 449, column: 31, scope: !3625)
!3629 = !DILocation(line: 449, column: 9, scope: !3625)
!3630 = !DILocalVariable(name: "vc", scope: !3631, file: !925, line: 450, type: !1835)
!3631 = distinct !DILexicalBlock(scope: !3626, file: !925, line: 449, column: 43)
!3632 = !DILocation(line: 450, column: 25, scope: !3631)
!3633 = !DILocation(line: 450, column: 49, scope: !3631)
!3634 = !DILocation(line: 450, column: 30, scope: !3631)
!3635 = !DILocation(line: 450, column: 33, scope: !3631)
!3636 = !DILocation(line: 450, column: 54, scope: !3631)
!3637 = !DILocation(line: 450, column: 52, scope: !3631)
!3638 = !DILocalVariable(name: "vf", scope: !3631, file: !925, line: 451, type: !1835)
!3639 = !DILocation(line: 451, column: 25, scope: !3631)
!3640 = !DILocation(line: 451, column: 47, scope: !3631)
!3641 = !DILocation(line: 451, column: 30, scope: !3631)
!3642 = !DILocation(line: 451, column: 33, scope: !3631)
!3643 = !DILocation(line: 451, column: 52, scope: !3631)
!3644 = !DILocation(line: 451, column: 50, scope: !3631)
!3645 = !DILocation(line: 452, column: 28, scope: !3631)
!3646 = !DILocation(line: 452, column: 33, scope: !3631)
!3647 = !DILocation(line: 452, column: 31, scope: !3631)
!3648 = !DILocation(line: 452, column: 23, scope: !3631)
!3649 = !DILocation(line: 452, column: 13, scope: !3631)
!3650 = !DILocation(line: 452, column: 16, scope: !3631)
!3651 = !DILocation(line: 452, column: 26, scope: !3631)
!3652 = !DILocation(line: 453, column: 9, scope: !3631)
!3653 = !DILocation(line: 449, column: 39, scope: !3654)
!3654 = !DILexicalBlockFile(scope: !3626, file: !925, discriminator: 2)
!3655 = !DILocation(line: 449, column: 9, scope: !3654)
!3656 = distinct !{!3656, !3657}
!3657 = !DILocation(line: 449, column: 9, scope: !3597)
!3658 = !DILocation(line: 454, column: 5, scope: !3597)
!3659 = !DILocation(line: 442, column: 41, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3591, file: !925, discriminator: 2)
!3661 = !DILocation(line: 442, column: 5, scope: !3660)
!3662 = distinct !{!3662, !3663}
!3663 = !DILocation(line: 442, column: 5, scope: !3573)
!3664 = !DILocation(line: 455, column: 1, scope: !3573)
!3665 = distinct !DISubprogram(name: "apply_scalefactors", scope: !925, file: !925, line: 478, type: !3666, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{null, !1858, !2030, !951}
!3668 = !DILocalVariable(name: "s", arg: 1, scope: !3665, file: !925, line: 478, type: !1858)
!3669 = !DILocation(line: 478, column: 54, scope: !3665)
!3670 = !DILocalVariable(name: "b", arg: 2, scope: !3665, file: !925, line: 478, type: !2030)
!3671 = !DILocation(line: 478, column: 74, scope: !3665)
!3672 = !DILocalVariable(name: "stereo", arg: 3, scope: !3665, file: !925, line: 479, type: !951)
!3673 = !DILocation(line: 479, column: 49, scope: !3665)
!3674 = !DILocalVariable(name: "i", scope: !3675, file: !925, line: 481, type: !904)
!3675 = distinct !DILexicalBlock(scope: !3665, file: !925, line: 481, column: 5)
!3676 = !DILocation(line: 481, column: 14, scope: !3675)
!3677 = !DILocation(line: 481, column: 10, scope: !3675)
!3678 = !DILocation(line: 481, column: 21, scope: !3679)
!3679 = !DILexicalBlockFile(scope: !3680, file: !925, discriminator: 1)
!3680 = distinct !DILexicalBlock(scope: !3675, file: !925, line: 481, column: 5)
!3681 = !DILocation(line: 481, column: 26, scope: !3679)
!3682 = !DILocation(line: 481, column: 23, scope: !3679)
!3683 = !DILocation(line: 481, column: 5, scope: !3679)
!3684 = !DILocalVariable(name: "coeffs", scope: !3685, file: !925, line: 482, type: !916)
!3685 = distinct !DILexicalBlock(scope: !3680, file: !925, line: 481, column: 39)
!3686 = !DILocation(line: 482, column: 16, scope: !3685)
!3687 = !DILocation(line: 482, column: 36, scope: !3685)
!3688 = !DILocation(line: 482, column: 25, scope: !3685)
!3689 = !DILocation(line: 482, column: 28, scope: !3685)
!3690 = !DILocation(line: 482, column: 39, scope: !3685)
!3691 = !DILocalVariable(name: "j", scope: !3692, file: !925, line: 483, type: !904)
!3692 = distinct !DILexicalBlock(scope: !3685, file: !925, line: 483, column: 9)
!3693 = !DILocation(line: 483, column: 18, scope: !3692)
!3694 = !DILocation(line: 483, column: 14, scope: !3692)
!3695 = !DILocation(line: 483, column: 25, scope: !3696)
!3696 = !DILexicalBlockFile(scope: !3697, file: !925, discriminator: 1)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !925, line: 483, column: 9)
!3698 = !DILocation(line: 483, column: 29, scope: !3696)
!3699 = !DILocation(line: 483, column: 32, scope: !3696)
!3700 = !DILocation(line: 483, column: 27, scope: !3696)
!3701 = !DILocation(line: 483, column: 9, scope: !3696)
!3702 = !DILocalVariable(name: "start", scope: !3703, file: !925, line: 484, type: !951)
!3703 = distinct !DILexicalBlock(scope: !3697, file: !925, line: 483, column: 49)
!3704 = !DILocation(line: 484, column: 23, scope: !3703)
!3705 = !DILocation(line: 484, column: 55, scope: !3703)
!3706 = !DILocation(line: 484, column: 57, scope: !3703)
!3707 = !DILocation(line: 484, column: 31, scope: !3703)
!3708 = !DILocalVariable(name: "end", scope: !3703, file: !925, line: 485, type: !951)
!3709 = !DILocation(line: 485, column: 23, scope: !3703)
!3710 = !DILocation(line: 485, column: 53, scope: !3703)
!3711 = !DILocation(line: 485, column: 55, scope: !3703)
!3712 = !DILocation(line: 485, column: 29, scope: !3703)
!3713 = !DILocalVariable(name: "scalefactor", scope: !3703, file: !925, line: 486, type: !951)
!3714 = !DILocation(line: 486, column: 23, scope: !3703)
!3715 = !DILocation(line: 486, column: 64, scope: !3703)
!3716 = !DILocation(line: 486, column: 37, scope: !3703)
!3717 = !DILocation(line: 486, column: 48, scope: !3703)
!3718 = !DILocation(line: 486, column: 40, scope: !3703)
!3719 = !DILocation(line: 486, column: 51, scope: !3703)
!3720 = !DILocalVariable(name: "scale", scope: !3703, file: !925, line: 487, type: !1835)
!3721 = !DILocation(line: 487, column: 25, scope: !3703)
!3722 = !DILocation(line: 487, column: 51, scope: !3703)
!3723 = !DILocation(line: 487, column: 33, scope: !3703)
!3724 = !DILocalVariable(name: "k", scope: !3725, file: !925, line: 488, type: !904)
!3725 = distinct !DILexicalBlock(scope: !3703, file: !925, line: 488, column: 13)
!3726 = !DILocation(line: 488, column: 22, scope: !3725)
!3727 = !DILocation(line: 488, column: 26, scope: !3725)
!3728 = !DILocation(line: 488, column: 18, scope: !3725)
!3729 = !DILocation(line: 488, column: 33, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3731, file: !925, discriminator: 1)
!3731 = distinct !DILexicalBlock(scope: !3725, file: !925, line: 488, column: 13)
!3732 = !DILocation(line: 488, column: 37, scope: !3730)
!3733 = !DILocation(line: 488, column: 35, scope: !3730)
!3734 = !DILocation(line: 488, column: 13, scope: !3730)
!3735 = !DILocation(line: 489, column: 30, scope: !3731)
!3736 = !DILocation(line: 489, column: 24, scope: !3731)
!3737 = !DILocation(line: 489, column: 17, scope: !3731)
!3738 = !DILocation(line: 489, column: 27, scope: !3731)
!3739 = !DILocation(line: 488, column: 43, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !3731, file: !925, discriminator: 2)
!3741 = !DILocation(line: 488, column: 13, scope: !3740)
!3742 = distinct !{!3742, !3743}
!3743 = !DILocation(line: 488, column: 13, scope: !3703)
!3744 = !DILocation(line: 490, column: 9, scope: !3703)
!3745 = !DILocation(line: 483, column: 45, scope: !3746)
!3746 = !DILexicalBlockFile(scope: !3697, file: !925, discriminator: 2)
!3747 = !DILocation(line: 483, column: 9, scope: !3746)
!3748 = distinct !{!3748, !3749}
!3749 = !DILocation(line: 483, column: 9, scope: !3685)
!3750 = !DILocation(line: 491, column: 5, scope: !3685)
!3751 = !DILocation(line: 481, column: 35, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3680, file: !925, discriminator: 2)
!3753 = !DILocation(line: 481, column: 5, scope: !3752)
!3754 = distinct !{!3754, !3755}
!3755 = !DILocation(line: 481, column: 5, scope: !3665)
!3756 = !DILocation(line: 492, column: 1, scope: !3665)
!3757 = distinct !DISubprogram(name: "parse_gradient", scope: !925, file: !925, line: 99, type: !3758, isLocal: true, isDefinition: true, scopeLine: 101, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!904, !1858, !2030, !2032}
!3760 = !DILocalVariable(name: "s", arg: 1, scope: !3757, file: !925, line: 99, type: !1858)
!3761 = !DILocation(line: 99, column: 49, scope: !3757)
!3762 = !DILocalVariable(name: "b", arg: 2, scope: !3757, file: !925, line: 99, type: !2030)
!3763 = !DILocation(line: 99, column: 69, scope: !3757)
!3764 = !DILocalVariable(name: "gb", arg: 3, scope: !3757, file: !925, line: 100, type: !2032)
!3765 = !DILocation(line: 100, column: 49, scope: !3757)
!3766 = !DILocalVariable(name: "grad_range", scope: !3757, file: !925, line: 102, type: !3767)
!3767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 64, align: 32, elements: !1698)
!3768 = !DILocation(line: 102, column: 9, scope: !3757)
!3769 = !DILocalVariable(name: "grad_value", scope: !3757, file: !925, line: 103, type: !3767)
!3770 = !DILocation(line: 103, column: 9, scope: !3757)
!3771 = !DILocalVariable(name: "values", scope: !3757, file: !925, line: 104, type: !904)
!3772 = !DILocation(line: 104, column: 9, scope: !3757)
!3773 = !DILocalVariable(name: "sign", scope: !3757, file: !925, line: 104, type: !904)
!3774 = !DILocation(line: 104, column: 17, scope: !3757)
!3775 = !DILocalVariable(name: "base", scope: !3757, file: !925, line: 104, type: !904)
!3776 = !DILocation(line: 104, column: 23, scope: !3757)
!3777 = !DILocalVariable(name: "curve", scope: !3757, file: !925, line: 105, type: !1047)
!3778 = !DILocation(line: 105, column: 14, scope: !3757)
!3779 = !DILocalVariable(name: "scale", scope: !3757, file: !925, line: 106, type: !917)
!3780 = !DILocation(line: 106, column: 11, scope: !3757)
!3781 = !DILocation(line: 108, column: 29, scope: !3757)
!3782 = !DILocation(line: 108, column: 20, scope: !3757)
!3783 = !DILocation(line: 108, column: 5, scope: !3757)
!3784 = !DILocation(line: 108, column: 8, scope: !3757)
!3785 = !DILocation(line: 108, column: 18, scope: !3757)
!3786 = !DILocation(line: 109, column: 9, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 109, column: 9)
!3788 = !DILocation(line: 109, column: 12, scope: !3787)
!3789 = !DILocation(line: 109, column: 9, scope: !3757)
!3790 = !DILocation(line: 110, column: 34, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3787, file: !925, line: 109, column: 23)
!3792 = !DILocation(line: 110, column: 25, scope: !3791)
!3793 = !DILocation(line: 110, column: 9, scope: !3791)
!3794 = !DILocation(line: 110, column: 23, scope: !3791)
!3795 = !DILocation(line: 111, column: 9, scope: !3791)
!3796 = !DILocation(line: 111, column: 23, scope: !3791)
!3797 = !DILocation(line: 112, column: 34, scope: !3791)
!3798 = !DILocation(line: 112, column: 25, scope: !3791)
!3799 = !DILocation(line: 112, column: 9, scope: !3791)
!3800 = !DILocation(line: 112, column: 23, scope: !3791)
!3801 = !DILocation(line: 113, column: 9, scope: !3791)
!3802 = !DILocation(line: 113, column: 23, scope: !3791)
!3803 = !DILocation(line: 114, column: 5, scope: !3791)
!3804 = !DILocation(line: 115, column: 34, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3787, file: !925, line: 114, column: 12)
!3806 = !DILocation(line: 115, column: 25, scope: !3805)
!3807 = !DILocation(line: 115, column: 9, scope: !3805)
!3808 = !DILocation(line: 115, column: 23, scope: !3805)
!3809 = !DILocation(line: 116, column: 34, scope: !3805)
!3810 = !DILocation(line: 116, column: 25, scope: !3805)
!3811 = !DILocation(line: 116, column: 41, scope: !3805)
!3812 = !DILocation(line: 116, column: 9, scope: !3805)
!3813 = !DILocation(line: 116, column: 23, scope: !3805)
!3814 = !DILocation(line: 117, column: 34, scope: !3805)
!3815 = !DILocation(line: 117, column: 25, scope: !3805)
!3816 = !DILocation(line: 117, column: 9, scope: !3805)
!3817 = !DILocation(line: 117, column: 23, scope: !3805)
!3818 = !DILocation(line: 118, column: 34, scope: !3805)
!3819 = !DILocation(line: 118, column: 25, scope: !3805)
!3820 = !DILocation(line: 118, column: 9, scope: !3805)
!3821 = !DILocation(line: 118, column: 23, scope: !3805)
!3822 = !DILocation(line: 120, column: 33, scope: !3757)
!3823 = !DILocation(line: 120, column: 24, scope: !3757)
!3824 = !DILocation(line: 120, column: 5, scope: !3757)
!3825 = !DILocation(line: 120, column: 8, scope: !3757)
!3826 = !DILocation(line: 120, column: 22, scope: !3757)
!3827 = !DILocation(line: 122, column: 9, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 122, column: 9)
!3829 = !DILocation(line: 122, column: 26, scope: !3828)
!3830 = !DILocation(line: 122, column: 23, scope: !3828)
!3831 = !DILocation(line: 122, column: 40, scope: !3828)
!3832 = !DILocation(line: 122, column: 43, scope: !3833)
!3833 = !DILexicalBlockFile(scope: !3828, file: !925, discriminator: 1)
!3834 = !DILocation(line: 122, column: 57, scope: !3833)
!3835 = !DILocation(line: 122, column: 9, scope: !3833)
!3836 = !DILocation(line: 123, column: 9, scope: !3828)
!3837 = !DILocation(line: 125, column: 9, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 125, column: 9)
!3839 = !DILocation(line: 125, column: 23, scope: !3838)
!3840 = !DILocation(line: 125, column: 28, scope: !3838)
!3841 = !DILocation(line: 125, column: 31, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3838, file: !925, discriminator: 1)
!3843 = !DILocation(line: 125, column: 45, scope: !3842)
!3844 = !DILocation(line: 125, column: 9, scope: !3842)
!3845 = !DILocation(line: 126, column: 9, scope: !3838)
!3846 = !DILocation(line: 128, column: 9, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 128, column: 9)
!3848 = !DILocation(line: 128, column: 12, scope: !3847)
!3849 = !DILocation(line: 128, column: 28, scope: !3847)
!3850 = !DILocation(line: 128, column: 31, scope: !3847)
!3851 = !DILocation(line: 128, column: 26, scope: !3847)
!3852 = !DILocation(line: 128, column: 9, scope: !3757)
!3853 = !DILocation(line: 129, column: 9, scope: !3847)
!3854 = !DILocation(line: 131, column: 14, scope: !3757)
!3855 = !DILocation(line: 131, column: 30, scope: !3757)
!3856 = !DILocation(line: 131, column: 28, scope: !3757)
!3857 = !DILocation(line: 131, column: 12, scope: !3757)
!3858 = !DILocation(line: 132, column: 19, scope: !3757)
!3859 = !DILocation(line: 132, column: 26, scope: !3757)
!3860 = !DILocation(line: 132, column: 17, scope: !3757)
!3861 = !DILocation(line: 132, column: 14, scope: !3757)
!3862 = !DILocation(line: 132, column: 10, scope: !3757)
!3863 = !DILocation(line: 133, column: 12, scope: !3757)
!3864 = !DILocation(line: 133, column: 28, scope: !3757)
!3865 = !DILocation(line: 133, column: 26, scope: !3757)
!3866 = !DILocation(line: 133, column: 10, scope: !3757)
!3867 = !DILocation(line: 134, column: 16, scope: !3757)
!3868 = !DILocation(line: 134, column: 24, scope: !3757)
!3869 = !DILocation(line: 134, column: 15, scope: !3757)
!3870 = !DILocation(line: 134, column: 32, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3757, file: !925, discriminator: 1)
!3872 = !DILocation(line: 134, column: 15, scope: !3871)
!3873 = !DILocation(line: 134, column: 45, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !3757, file: !925, discriminator: 2)
!3875 = !DILocation(line: 134, column: 43, scope: !3874)
!3876 = !DILocation(line: 134, column: 15, scope: !3874)
!3877 = !DILocation(line: 134, column: 15, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3757, file: !925, discriminator: 3)
!3879 = !DILocation(line: 134, column: 55, scope: !3878)
!3880 = !DILocation(line: 134, column: 13, scope: !3878)
!3881 = !DILocation(line: 134, column: 60, scope: !3878)
!3882 = !DILocation(line: 134, column: 11, scope: !3878)
!3883 = !DILocation(line: 135, column: 28, scope: !3757)
!3884 = !DILocation(line: 135, column: 44, scope: !3757)
!3885 = !DILocation(line: 135, column: 42, scope: !3757)
!3886 = !DILocation(line: 135, column: 58, scope: !3757)
!3887 = !DILocation(line: 135, column: 13, scope: !3757)
!3888 = !DILocation(line: 135, column: 16, scope: !3757)
!3889 = !DILocation(line: 135, column: 11, scope: !3757)
!3890 = !DILocalVariable(name: "i", scope: !3891, file: !925, line: 137, type: !904)
!3891 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 137, column: 5)
!3892 = !DILocation(line: 137, column: 14, scope: !3891)
!3893 = !DILocation(line: 137, column: 10, scope: !3891)
!3894 = !DILocation(line: 137, column: 21, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3896, file: !925, discriminator: 1)
!3896 = distinct !DILexicalBlock(scope: !3891, file: !925, line: 137, column: 5)
!3897 = !DILocation(line: 137, column: 26, scope: !3895)
!3898 = !DILocation(line: 137, column: 29, scope: !3895)
!3899 = !DILocation(line: 137, column: 23, scope: !3895)
!3900 = !DILocation(line: 137, column: 5, scope: !3895)
!3901 = !DILocation(line: 138, column: 37, scope: !3896)
!3902 = !DILocation(line: 138, column: 42, scope: !3896)
!3903 = !DILocation(line: 138, column: 39, scope: !3896)
!3904 = !DILocation(line: 138, column: 26, scope: !3896)
!3905 = !DILocation(line: 138, column: 21, scope: !3896)
!3906 = !DILocation(line: 138, column: 9, scope: !3896)
!3907 = !DILocation(line: 138, column: 12, scope: !3896)
!3908 = !DILocation(line: 138, column: 24, scope: !3896)
!3909 = !DILocation(line: 137, column: 42, scope: !3910)
!3910 = !DILexicalBlockFile(scope: !3896, file: !925, discriminator: 2)
!3911 = !DILocation(line: 137, column: 5, scope: !3910)
!3912 = distinct !{!3912, !3913}
!3913 = !DILocation(line: 137, column: 5, scope: !3757)
!3914 = !DILocalVariable(name: "i", scope: !3915, file: !925, line: 140, type: !904)
!3915 = distinct !DILexicalBlock(scope: !3757, file: !925, line: 140, column: 5)
!3916 = !DILocation(line: 140, column: 14, scope: !3915)
!3917 = !DILocation(line: 140, column: 18, scope: !3915)
!3918 = !DILocation(line: 140, column: 10, scope: !3915)
!3919 = !DILocation(line: 140, column: 33, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3921, file: !925, discriminator: 1)
!3921 = distinct !DILexicalBlock(scope: !3915, file: !925, line: 140, column: 5)
!3922 = !DILocation(line: 140, column: 37, scope: !3920)
!3923 = !DILocation(line: 140, column: 35, scope: !3920)
!3924 = !DILocation(line: 140, column: 5, scope: !3920)
!3925 = !DILocation(line: 141, column: 26, scope: !3921)
!3926 = !DILocation(line: 141, column: 33, scope: !3921)
!3927 = !DILocation(line: 141, column: 45, scope: !3921)
!3928 = !DILocation(line: 141, column: 57, scope: !3921)
!3929 = !DILocation(line: 141, column: 61, scope: !3921)
!3930 = !DILocation(line: 141, column: 59, scope: !3921)
!3931 = !DILocation(line: 141, column: 51, scope: !3921)
!3932 = !DILocation(line: 141, column: 50, scope: !3921)
!3933 = !DILocation(line: 141, column: 39, scope: !3921)
!3934 = !DILocation(line: 141, column: 37, scope: !3921)
!3935 = !DILocation(line: 141, column: 31, scope: !3921)
!3936 = !DILocation(line: 141, column: 21, scope: !3921)
!3937 = !DILocation(line: 141, column: 9, scope: !3921)
!3938 = !DILocation(line: 141, column: 12, scope: !3921)
!3939 = !DILocation(line: 141, column: 24, scope: !3921)
!3940 = !DILocation(line: 140, column: 53, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3921, file: !925, discriminator: 2)
!3942 = !DILocation(line: 140, column: 5, scope: !3941)
!3943 = distinct !{!3943, !3944}
!3944 = !DILocation(line: 140, column: 5, scope: !3757)
!3945 = !DILocation(line: 143, column: 5, scope: !3757)
!3946 = !DILocation(line: 144, column: 1, scope: !3757)
!3947 = distinct !DISubprogram(name: "parse_band_ext", scope: !925, file: !925, line: 197, type: !3948, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!904, !1858, !2030, !2032, !904}
!3950 = !DILocalVariable(name: "s", arg: 1, scope: !3947, file: !925, line: 197, type: !1858)
!3951 = !DILocation(line: 197, column: 49, scope: !3947)
!3952 = !DILocalVariable(name: "b", arg: 2, scope: !3947, file: !925, line: 197, type: !2030)
!3953 = !DILocation(line: 197, column: 69, scope: !3947)
!3954 = !DILocalVariable(name: "gb", arg: 3, scope: !3947, file: !925, line: 198, type: !2032)
!3955 = !DILocation(line: 198, column: 49, scope: !3947)
!3956 = !DILocalVariable(name: "stereo", arg: 4, scope: !3947, file: !925, line: 198, type: !904)
!3957 = !DILocation(line: 198, column: 57, scope: !3947)
!3958 = !DILocalVariable(name: "ext_band", scope: !3947, file: !925, line: 200, type: !904)
!3959 = !DILocation(line: 200, column: 9, scope: !3947)
!3960 = !DILocation(line: 202, column: 9, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3947, file: !925, line: 202, column: 9)
!3962 = !DILocation(line: 202, column: 12, scope: !3961)
!3963 = !DILocation(line: 202, column: 9, scope: !3947)
!3964 = !DILocation(line: 203, column: 43, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3961, file: !925, line: 202, column: 26)
!3966 = !DILocation(line: 203, column: 46, scope: !3965)
!3967 = !DILocation(line: 203, column: 57, scope: !3965)
!3968 = !DILocation(line: 203, column: 20, scope: !3965)
!3969 = !DILocation(line: 203, column: 18, scope: !3965)
!3970 = !DILocation(line: 204, column: 13, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3965, file: !925, line: 204, column: 13)
!3972 = !DILocation(line: 204, column: 13, scope: !3965)
!3973 = !DILocation(line: 205, column: 47, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3971, file: !925, line: 204, column: 21)
!3975 = !DILocation(line: 205, column: 38, scope: !3974)
!3976 = !DILocation(line: 205, column: 13, scope: !3974)
!3977 = !DILocation(line: 205, column: 16, scope: !3974)
!3978 = !DILocation(line: 205, column: 27, scope: !3974)
!3979 = !DILocation(line: 205, column: 36, scope: !3974)
!3980 = !DILocation(line: 206, column: 38, scope: !3974)
!3981 = !DILocation(line: 206, column: 47, scope: !3974)
!3982 = !DILocation(line: 206, column: 53, scope: !3983)
!3983 = !DILexicalBlockFile(scope: !3974, file: !925, discriminator: 1)
!3984 = !DILocation(line: 206, column: 56, scope: !3983)
!3985 = !DILocation(line: 206, column: 67, scope: !3983)
!3986 = !DILocation(line: 206, column: 38, scope: !3983)
!3987 = !DILocation(line: 206, column: 38, scope: !3988)
!3988 = !DILexicalBlockFile(scope: !3974, file: !925, discriminator: 2)
!3989 = !DILocation(line: 206, column: 38, scope: !3990)
!3990 = !DILexicalBlockFile(scope: !3974, file: !925, discriminator: 3)
!3991 = !DILocation(line: 206, column: 13, scope: !3990)
!3992 = !DILocation(line: 206, column: 16, scope: !3990)
!3993 = !DILocation(line: 206, column: 27, scope: !3990)
!3994 = !DILocation(line: 206, column: 36, scope: !3990)
!3995 = !DILocation(line: 207, column: 9, scope: !3974)
!3996 = !DILocation(line: 208, column: 24, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3971, file: !925, line: 207, column: 16)
!3998 = !DILocation(line: 208, column: 13, scope: !3997)
!3999 = !DILocation(line: 210, column: 5, scope: !3965)
!4000 = !DILocation(line: 212, column: 38, scope: !3947)
!4001 = !DILocation(line: 212, column: 28, scope: !3947)
!4002 = !DILocation(line: 212, column: 5, scope: !3947)
!4003 = !DILocation(line: 212, column: 8, scope: !3947)
!4004 = !DILocation(line: 212, column: 26, scope: !3947)
!4005 = !DILocation(line: 213, column: 10, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3947, file: !925, line: 213, column: 9)
!4007 = !DILocation(line: 213, column: 13, scope: !4006)
!4008 = !DILocation(line: 213, column: 9, scope: !3947)
!4009 = !DILocation(line: 214, column: 9, scope: !4006)
!4010 = !DILocation(line: 216, column: 10, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3947, file: !925, line: 216, column: 9)
!4012 = !DILocation(line: 216, column: 13, scope: !4011)
!4013 = !DILocation(line: 216, column: 9, scope: !3947)
!4014 = !DILocation(line: 217, column: 19, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4011, file: !925, line: 216, column: 27)
!4016 = !DILocation(line: 217, column: 9, scope: !4015)
!4017 = !DILocation(line: 218, column: 24, scope: !4015)
!4018 = !DILocation(line: 218, column: 37, scope: !4015)
!4019 = !DILocation(line: 218, column: 28, scope: !4015)
!4020 = !DILocation(line: 218, column: 9, scope: !4021)
!4021 = !DILexicalBlockFile(scope: !4015, file: !925, discriminator: 1)
!4022 = !DILocation(line: 219, column: 9, scope: !4015)
!4023 = !DILocation(line: 222, column: 39, scope: !3947)
!4024 = !DILocation(line: 222, column: 30, scope: !3947)
!4025 = !DILocation(line: 222, column: 5, scope: !3947)
!4026 = !DILocation(line: 222, column: 8, scope: !3947)
!4027 = !DILocation(line: 222, column: 19, scope: !3947)
!4028 = !DILocation(line: 222, column: 28, scope: !3947)
!4029 = !DILocation(line: 223, column: 30, scope: !3947)
!4030 = !DILocation(line: 223, column: 39, scope: !3947)
!4031 = !DILocation(line: 223, column: 45, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !3947, file: !925, discriminator: 1)
!4033 = !DILocation(line: 223, column: 48, scope: !4032)
!4034 = !DILocation(line: 223, column: 59, scope: !4032)
!4035 = !DILocation(line: 223, column: 30, scope: !4032)
!4036 = !DILocation(line: 223, column: 30, scope: !4037)
!4037 = !DILexicalBlockFile(scope: !3947, file: !925, discriminator: 2)
!4038 = !DILocation(line: 223, column: 30, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !3947, file: !925, discriminator: 3)
!4040 = !DILocation(line: 223, column: 5, scope: !4039)
!4041 = !DILocation(line: 223, column: 8, scope: !4039)
!4042 = !DILocation(line: 223, column: 19, scope: !4039)
!4043 = !DILocation(line: 223, column: 28, scope: !4039)
!4044 = !DILocation(line: 225, column: 19, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3947, file: !925, line: 225, column: 9)
!4046 = !DILocation(line: 225, column: 10, scope: !4045)
!4047 = !DILocation(line: 225, column: 9, scope: !3947)
!4048 = !DILocation(line: 226, column: 9, scope: !4045)
!4049 = !DILocalVariable(name: "i", scope: !4050, file: !925, line: 228, type: !904)
!4050 = distinct !DILexicalBlock(scope: !3947, file: !925, line: 228, column: 5)
!4051 = !DILocation(line: 228, column: 14, scope: !4050)
!4052 = !DILocation(line: 228, column: 10, scope: !4050)
!4053 = !DILocation(line: 228, column: 21, scope: !4054)
!4054 = !DILexicalBlockFile(scope: !4055, file: !925, discriminator: 1)
!4055 = distinct !DILexicalBlock(scope: !4050, file: !925, line: 228, column: 5)
!4056 = !DILocation(line: 228, column: 26, scope: !4054)
!4057 = !DILocation(line: 228, column: 23, scope: !4054)
!4058 = !DILocation(line: 228, column: 5, scope: !4054)
!4059 = !DILocalVariable(name: "c", scope: !4060, file: !925, line: 229, type: !2031)
!4060 = distinct !DILexicalBlock(scope: !4055, file: !925, line: 228, column: 39)
!4061 = !DILocation(line: 229, column: 28, scope: !4060)
!4062 = !DILocation(line: 229, column: 44, scope: !4060)
!4063 = !DILocation(line: 229, column: 33, scope: !4060)
!4064 = !DILocation(line: 229, column: 36, scope: !4060)
!4065 = !DILocalVariable(name: "count", scope: !4060, file: !925, line: 230, type: !951)
!4066 = !DILocation(line: 230, column: 19, scope: !4060)
!4067 = !DILocation(line: 230, column: 61, scope: !4060)
!4068 = !DILocation(line: 230, column: 27, scope: !4060)
!4069 = !DILocation(line: 230, column: 48, scope: !4060)
!4070 = !DILocation(line: 230, column: 51, scope: !4060)
!4071 = !DILocalVariable(name: "j", scope: !4072, file: !925, line: 231, type: !904)
!4072 = distinct !DILexicalBlock(scope: !4060, file: !925, line: 231, column: 9)
!4073 = !DILocation(line: 231, column: 18, scope: !4072)
!4074 = !DILocation(line: 231, column: 14, scope: !4072)
!4075 = !DILocation(line: 231, column: 25, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !4077, file: !925, discriminator: 1)
!4077 = distinct !DILexicalBlock(scope: !4072, file: !925, line: 231, column: 9)
!4078 = !DILocation(line: 231, column: 29, scope: !4076)
!4079 = !DILocation(line: 231, column: 27, scope: !4076)
!4080 = !DILocation(line: 231, column: 9, scope: !4076)
!4081 = !DILocalVariable(name: "len", scope: !4082, file: !925, line: 232, type: !904)
!4082 = distinct !DILexicalBlock(scope: !4077, file: !925, line: 231, column: 41)
!4083 = !DILocation(line: 232, column: 17, scope: !4082)
!4084 = !DILocation(line: 232, column: 71, scope: !4082)
!4085 = !DILocation(line: 232, column: 23, scope: !4082)
!4086 = !DILocation(line: 232, column: 61, scope: !4082)
!4087 = !DILocation(line: 232, column: 48, scope: !4082)
!4088 = !DILocation(line: 232, column: 51, scope: !4082)
!4089 = !DILocation(line: 233, column: 44, scope: !4082)
!4090 = !DILocation(line: 233, column: 48, scope: !4082)
!4091 = !DILocation(line: 233, column: 35, scope: !4082)
!4092 = !DILocation(line: 233, column: 30, scope: !4082)
!4093 = !DILocation(line: 233, column: 13, scope: !4082)
!4094 = !DILocation(line: 233, column: 16, scope: !4082)
!4095 = !DILocation(line: 233, column: 33, scope: !4082)
!4096 = !DILocation(line: 234, column: 9, scope: !4082)
!4097 = !DILocation(line: 231, column: 37, scope: !4098)
!4098 = !DILexicalBlockFile(scope: !4077, file: !925, discriminator: 2)
!4099 = !DILocation(line: 231, column: 9, scope: !4098)
!4100 = distinct !{!4100, !4101}
!4101 = !DILocation(line: 231, column: 9, scope: !4060)
!4102 = !DILocation(line: 235, column: 5, scope: !4060)
!4103 = !DILocation(line: 228, column: 35, scope: !4104)
!4104 = !DILexicalBlockFile(scope: !4055, file: !925, discriminator: 2)
!4105 = !DILocation(line: 228, column: 5, scope: !4104)
!4106 = distinct !{!4106, !4107}
!4107 = !DILocation(line: 228, column: 5, scope: !3947)
!4108 = !DILocation(line: 237, column: 5, scope: !3947)
!4109 = !DILocation(line: 238, column: 1, scope: !3947)
!4110 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4111)
!4111 = distinct !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4121)
!4112 = !DILexicalBlockFile(scope: !4113, file: !2034, discriminator: 11)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !2034, line: 788, column: 490)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !2034, line: 788, column: 466)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !2034, line: 788, column: 154)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !2034, line: 788, column: 130)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !2034, line: 788, column: 8)
!4118 = distinct !DISubprogram(name: "get_vlc2", scope: !2034, file: !2034, line: 762, type: !4119, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!904, !2032, !2016, !904, !904}
!4121 = distinct !DILocation(line: 317, column: 48, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !925, line: 316, column: 44)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !925, line: 316, column: 9)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !925, line: 316, column: 9)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !925, line: 303, column: 13)
!4126 = distinct !DILexicalBlock(scope: !1855, file: !925, line: 254, column: 19)
!4127 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4128)
!4128 = distinct !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4121)
!4129 = !DILexicalBlockFile(scope: !4115, file: !2034, discriminator: 6)
!4130 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4131)
!4131 = distinct !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4121)
!4132 = !DILocalVariable(name: "s", arg: 1, scope: !4118, file: !2034, line: 762, type: !2032)
!4133 = !DILocation(line: 762, column: 74, scope: !4118, inlinedAt: !4121)
!4134 = !DILocalVariable(name: "table", arg: 2, scope: !4118, file: !2034, line: 762, type: !2016)
!4135 = !DILocation(line: 762, column: 87, scope: !4118, inlinedAt: !4121)
!4136 = !DILocalVariable(name: "bits", arg: 3, scope: !4118, file: !2034, line: 763, type: !904)
!4137 = !DILocation(line: 763, column: 42, scope: !4118, inlinedAt: !4121)
!4138 = !DILocalVariable(name: "max_depth", arg: 4, scope: !4118, file: !2034, line: 763, type: !904)
!4139 = !DILocation(line: 763, column: 52, scope: !4118, inlinedAt: !4121)
!4140 = !DILocalVariable(name: "code", scope: !4118, file: !2034, line: 783, type: !904)
!4141 = !DILocation(line: 783, column: 9, scope: !4118, inlinedAt: !4121)
!4142 = !DILocalVariable(name: "re_index", scope: !4118, file: !2034, line: 785, type: !905)
!4143 = !DILocation(line: 785, column: 18, scope: !4118, inlinedAt: !4121)
!4144 = !DILocalVariable(name: "re_cache", scope: !4118, file: !2034, line: 785, type: !905)
!4145 = !DILocation(line: 785, column: 78, scope: !4118, inlinedAt: !4121)
!4146 = !DILocalVariable(name: "re_size_plus8", scope: !4118, file: !2034, line: 785, type: !905)
!4147 = !DILocation(line: 785, column: 101, scope: !4118, inlinedAt: !4121)
!4148 = !DILocalVariable(name: "n", scope: !4117, file: !2034, line: 788, type: !904)
!4149 = !DILocation(line: 788, column: 14, scope: !4117, inlinedAt: !4121)
!4150 = !DILocalVariable(name: "nb_bits", scope: !4117, file: !2034, line: 788, type: !904)
!4151 = !DILocation(line: 788, column: 17, scope: !4117, inlinedAt: !4121)
!4152 = !DILocalVariable(name: "index", scope: !4117, file: !2034, line: 788, type: !905)
!4153 = !DILocation(line: 788, column: 39, scope: !4117, inlinedAt: !4121)
!4154 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4155)
!4155 = distinct !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4156)
!4156 = distinct !DILocation(line: 294, column: 24, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !925, line: 293, column: 44)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !925, line: 293, column: 9)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !925, line: 293, column: 9)
!4160 = distinct !DILexicalBlock(scope: !4126, file: !925, line: 281, column: 13)
!4161 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4162)
!4162 = distinct !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4156)
!4163 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4164)
!4164 = distinct !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4156)
!4165 = !DILocation(line: 762, column: 74, scope: !4118, inlinedAt: !4156)
!4166 = !DILocation(line: 762, column: 87, scope: !4118, inlinedAt: !4156)
!4167 = !DILocation(line: 763, column: 42, scope: !4118, inlinedAt: !4156)
!4168 = !DILocation(line: 763, column: 52, scope: !4118, inlinedAt: !4156)
!4169 = !DILocation(line: 783, column: 9, scope: !4118, inlinedAt: !4156)
!4170 = !DILocation(line: 785, column: 18, scope: !4118, inlinedAt: !4156)
!4171 = !DILocation(line: 785, column: 78, scope: !4118, inlinedAt: !4156)
!4172 = !DILocation(line: 785, column: 101, scope: !4118, inlinedAt: !4156)
!4173 = !DILocation(line: 788, column: 14, scope: !4117, inlinedAt: !4156)
!4174 = !DILocation(line: 788, column: 17, scope: !4117, inlinedAt: !4156)
!4175 = !DILocation(line: 788, column: 39, scope: !4117, inlinedAt: !4156)
!4176 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4177)
!4177 = distinct !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4178)
!4178 = distinct !DILocation(line: 264, column: 48, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !925, line: 263, column: 54)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !925, line: 263, column: 9)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !925, line: 263, column: 9)
!4182 = distinct !DILexicalBlock(scope: !4126, file: !925, line: 255, column: 13)
!4183 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4184)
!4184 = distinct !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4178)
!4185 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !4186)
!4186 = distinct !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4178)
!4187 = !DILocation(line: 762, column: 74, scope: !4118, inlinedAt: !4178)
!4188 = !DILocation(line: 762, column: 87, scope: !4118, inlinedAt: !4178)
!4189 = !DILocation(line: 763, column: 42, scope: !4118, inlinedAt: !4178)
!4190 = !DILocation(line: 763, column: 52, scope: !4118, inlinedAt: !4178)
!4191 = !DILocation(line: 783, column: 9, scope: !4118, inlinedAt: !4178)
!4192 = !DILocation(line: 785, column: 18, scope: !4118, inlinedAt: !4178)
!4193 = !DILocation(line: 785, column: 78, scope: !4118, inlinedAt: !4178)
!4194 = !DILocation(line: 785, column: 101, scope: !4118, inlinedAt: !4178)
!4195 = !DILocation(line: 788, column: 14, scope: !4117, inlinedAt: !4178)
!4196 = !DILocation(line: 788, column: 17, scope: !4117, inlinedAt: !4178)
!4197 = !DILocation(line: 788, column: 39, scope: !4117, inlinedAt: !4178)
!4198 = !DILocalVariable(name: "s", arg: 1, scope: !1855, file: !925, line: 240, type: !1858)
!4199 = !DILocation(line: 240, column: 52, scope: !1855)
!4200 = !DILocalVariable(name: "b", arg: 2, scope: !1855, file: !925, line: 240, type: !2030)
!4201 = !DILocation(line: 240, column: 72, scope: !1855)
!4202 = !DILocalVariable(name: "c", arg: 3, scope: !1855, file: !925, line: 241, type: !2031)
!4203 = !DILocation(line: 241, column: 56, scope: !1855)
!4204 = !DILocalVariable(name: "gb", arg: 4, scope: !1855, file: !925, line: 241, type: !2032)
!4205 = !DILocation(line: 241, column: 74, scope: !1855)
!4206 = !DILocalVariable(name: "channel_idx", arg: 5, scope: !1855, file: !925, line: 242, type: !904)
!4207 = !DILocation(line: 242, column: 41, scope: !1855)
!4208 = !DILocalVariable(name: "first_in_pkt", arg: 6, scope: !1855, file: !925, line: 242, type: !904)
!4209 = !DILocation(line: 242, column: 58, scope: !1855)
!4210 = !DILocalVariable(name: "mode", scope: !1855, file: !925, line: 245, type: !951)
!4211 = !DILocation(line: 245, column: 15, scope: !1855)
!4212 = !DILocation(line: 245, column: 53, scope: !1855)
!4213 = !DILocation(line: 245, column: 44, scope: !1855)
!4214 = !DILocation(line: 245, column: 22, scope: !1855)
!4215 = !DILocation(line: 245, column: 31, scope: !1855)
!4216 = !DILocation(line: 247, column: 12, scope: !1855)
!4217 = !DILocation(line: 247, column: 15, scope: !1855)
!4218 = !DILocation(line: 247, column: 5, scope: !1855)
!4219 = !DILocation(line: 249, column: 9, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !1855, file: !925, line: 249, column: 9)
!4221 = !DILocation(line: 249, column: 22, scope: !4220)
!4222 = !DILocation(line: 249, column: 26, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4220, file: !925, discriminator: 1)
!4224 = !DILocation(line: 249, column: 31, scope: !4223)
!4225 = !DILocation(line: 249, column: 36, scope: !4223)
!4226 = !DILocation(line: 249, column: 41, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4220, file: !925, discriminator: 2)
!4228 = !DILocation(line: 249, column: 46, scope: !4227)
!4229 = !DILocation(line: 249, column: 52, scope: !4227)
!4230 = !DILocation(line: 249, column: 56, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4220, file: !925, discriminator: 3)
!4232 = !DILocation(line: 249, column: 9, scope: !4231)
!4233 = !DILocation(line: 250, column: 16, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4220, file: !925, line: 249, column: 71)
!4235 = !DILocation(line: 250, column: 19, scope: !4234)
!4236 = !DILocation(line: 250, column: 9, scope: !4234)
!4237 = !DILocation(line: 251, column: 9, scope: !4234)
!4238 = !DILocation(line: 254, column: 13, scope: !1855)
!4239 = !DILocation(line: 254, column: 5, scope: !1855)
!4240 = !DILocalVariable(name: "sf_weights", scope: !4182, file: !925, line: 256, type: !1463)
!4241 = !DILocation(line: 256, column: 24, scope: !4182)
!4242 = !DILocation(line: 256, column: 65, scope: !4182)
!4243 = !DILocation(line: 256, column: 56, scope: !4182)
!4244 = !DILocation(line: 256, column: 37, scope: !4182)
!4245 = !DILocalVariable(name: "base", scope: !4182, file: !925, line: 257, type: !951)
!4246 = !DILocation(line: 257, column: 19, scope: !4182)
!4247 = !DILocation(line: 257, column: 35, scope: !4182)
!4248 = !DILocation(line: 257, column: 26, scope: !4182)
!4249 = !DILocalVariable(name: "len", scope: !4182, file: !925, line: 258, type: !951)
!4250 = !DILocation(line: 258, column: 19, scope: !4182)
!4251 = !DILocation(line: 258, column: 34, scope: !4182)
!4252 = !DILocation(line: 258, column: 25, scope: !4182)
!4253 = !DILocation(line: 258, column: 41, scope: !4182)
!4254 = !DILocalVariable(name: "tab", scope: !4182, file: !925, line: 259, type: !4255)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64, align: 64)
!4256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2010)
!4257 = !DILocation(line: 259, column: 20, scope: !4182)
!4258 = !DILocation(line: 259, column: 40, scope: !4182)
!4259 = !DILocation(line: 259, column: 27, scope: !4182)
!4260 = !DILocation(line: 259, column: 30, scope: !4182)
!4261 = !DILocation(line: 261, column: 39, scope: !4182)
!4262 = !DILocation(line: 261, column: 43, scope: !4182)
!4263 = !DILocation(line: 261, column: 30, scope: !4182)
!4264 = !DILocation(line: 261, column: 9, scope: !4182)
!4265 = !DILocation(line: 261, column: 12, scope: !4182)
!4266 = !DILocation(line: 261, column: 28, scope: !4182)
!4267 = !DILocalVariable(name: "i", scope: !4181, file: !925, line: 263, type: !904)
!4268 = !DILocation(line: 263, column: 18, scope: !4181)
!4269 = !DILocation(line: 263, column: 14, scope: !4181)
!4270 = !DILocation(line: 263, column: 25, scope: !4271)
!4271 = !DILexicalBlockFile(scope: !4180, file: !925, discriminator: 1)
!4272 = !DILocation(line: 263, column: 29, scope: !4271)
!4273 = !DILocation(line: 263, column: 32, scope: !4271)
!4274 = !DILocation(line: 263, column: 27, scope: !4271)
!4275 = !DILocation(line: 263, column: 9, scope: !4271)
!4276 = !DILocalVariable(name: "val", scope: !4179, file: !925, line: 264, type: !904)
!4277 = !DILocation(line: 264, column: 17, scope: !4179)
!4278 = !DILocation(line: 264, column: 39, scope: !4179)
!4279 = !DILocation(line: 264, column: 41, scope: !4179)
!4280 = !DILocation(line: 264, column: 23, scope: !4179)
!4281 = !DILocation(line: 264, column: 26, scope: !4179)
!4282 = !DILocation(line: 264, column: 57, scope: !4179)
!4283 = !DILocation(line: 264, column: 61, scope: !4179)
!4284 = !DILocation(line: 264, column: 66, scope: !4179)
!4285 = !DILocation(line: 264, column: 48, scope: !4179)
!4286 = !DILocation(line: 785, column: 30, scope: !4118, inlinedAt: !4178)
!4287 = !DILocation(line: 785, column: 34, scope: !4118, inlinedAt: !4178)
!4288 = !DILocation(line: 785, column: 118, scope: !4118, inlinedAt: !4178)
!4289 = !DILocation(line: 785, column: 122, scope: !4118, inlinedAt: !4178)
!4290 = !DILocation(line: 786, column: 60, scope: !4118, inlinedAt: !4178)
!4291 = !DILocation(line: 786, column: 64, scope: !4118, inlinedAt: !4178)
!4292 = !DILocation(line: 786, column: 74, scope: !4118, inlinedAt: !4178)
!4293 = !DILocation(line: 786, column: 83, scope: !4118, inlinedAt: !4178)
!4294 = !DILocation(line: 786, column: 71, scope: !4118, inlinedAt: !4178)
!4295 = !DILocation(line: 786, column: 92, scope: !4118, inlinedAt: !4178)
!4296 = !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4178)
!4297 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4186)
!4298 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4186)
!4299 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4186)
!4300 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4186)
!4301 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4186)
!4302 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4186)
!4303 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4186)
!4304 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4186)
!4305 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4186)
!4306 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4186)
!4307 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4186)
!4308 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4186)
!4309 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4186)
!4310 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4186)
!4311 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4186)
!4312 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4186)
!4313 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4186)
!4314 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4186)
!4315 = !DILocation(line: 786, column: 100, scope: !4118, inlinedAt: !4178)
!4316 = !DILocation(line: 786, column: 109, scope: !4118, inlinedAt: !4178)
!4317 = !DILocation(line: 786, column: 96, scope: !4118, inlinedAt: !4178)
!4318 = !DILocation(line: 786, column: 14, scope: !4118, inlinedAt: !4178)
!4319 = !DILocation(line: 788, column: 64, scope: !4320, inlinedAt: !4178)
!4320 = !DILexicalBlockFile(scope: !4117, file: !2034, discriminator: 1)
!4321 = !DILocation(line: 788, column: 74, scope: !4320, inlinedAt: !4178)
!4322 = !DILocation(line: 788, column: 54, scope: !4320, inlinedAt: !4178)
!4323 = !DILocation(line: 788, column: 52, scope: !4320, inlinedAt: !4178)
!4324 = !DILocation(line: 788, column: 94, scope: !4320, inlinedAt: !4178)
!4325 = !DILocation(line: 788, column: 88, scope: !4320, inlinedAt: !4178)
!4326 = !DILocation(line: 788, column: 86, scope: !4320, inlinedAt: !4178)
!4327 = !DILocation(line: 788, column: 115, scope: !4320, inlinedAt: !4178)
!4328 = !DILocation(line: 788, column: 109, scope: !4320, inlinedAt: !4178)
!4329 = !DILocation(line: 788, column: 107, scope: !4320, inlinedAt: !4178)
!4330 = !DILocation(line: 788, column: 130, scope: !4320, inlinedAt: !4178)
!4331 = !DILocation(line: 788, column: 140, scope: !4320, inlinedAt: !4178)
!4332 = !DILocation(line: 788, column: 144, scope: !4320, inlinedAt: !4178)
!4333 = !DILocation(line: 788, column: 147, scope: !4334, inlinedAt: !4178)
!4334 = !DILexicalBlockFile(scope: !4116, file: !2034, discriminator: 2)
!4335 = !DILocation(line: 788, column: 149, scope: !4334, inlinedAt: !4178)
!4336 = !DILocation(line: 788, column: 130, scope: !4334, inlinedAt: !4178)
!4337 = !DILocation(line: 788, column: 169, scope: !4338, inlinedAt: !4178)
!4338 = !DILexicalBlockFile(scope: !4115, file: !2034, discriminator: 3)
!4339 = !DILocation(line: 788, column: 187, scope: !4338, inlinedAt: !4178)
!4340 = !DILocation(line: 788, column: 199, scope: !4338, inlinedAt: !4178)
!4341 = !DILocation(line: 788, column: 196, scope: !4338, inlinedAt: !4178)
!4342 = !DILocation(line: 788, column: 184, scope: !4338, inlinedAt: !4178)
!4343 = !DILocation(line: 788, column: 168, scope: !4338, inlinedAt: !4178)
!4344 = !DILocation(line: 788, column: 209, scope: !4345, inlinedAt: !4178)
!4345 = !DILexicalBlockFile(scope: !4115, file: !2034, discriminator: 4)
!4346 = !DILocation(line: 788, column: 221, scope: !4345, inlinedAt: !4178)
!4347 = !DILocation(line: 788, column: 218, scope: !4345, inlinedAt: !4178)
!4348 = !DILocation(line: 788, column: 168, scope: !4345, inlinedAt: !4178)
!4349 = !DILocation(line: 788, column: 231, scope: !4350, inlinedAt: !4178)
!4350 = !DILexicalBlockFile(scope: !4115, file: !2034, discriminator: 5)
!4351 = !DILocation(line: 788, column: 168, scope: !4350, inlinedAt: !4178)
!4352 = !DILocation(line: 788, column: 168, scope: !4129, inlinedAt: !4178)
!4353 = !DILocation(line: 788, column: 165, scope: !4129, inlinedAt: !4178)
!4354 = !DILocation(line: 788, column: 303, scope: !4129, inlinedAt: !4178)
!4355 = !DILocation(line: 788, column: 307, scope: !4129, inlinedAt: !4178)
!4356 = !DILocation(line: 788, column: 317, scope: !4129, inlinedAt: !4178)
!4357 = !DILocation(line: 788, column: 326, scope: !4129, inlinedAt: !4178)
!4358 = !DILocation(line: 788, column: 314, scope: !4129, inlinedAt: !4178)
!4359 = !DILocation(line: 788, column: 335, scope: !4129, inlinedAt: !4178)
!4360 = !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4178)
!4361 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4184)
!4362 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4184)
!4363 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4184)
!4364 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4184)
!4365 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4184)
!4366 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4184)
!4367 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4184)
!4368 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4184)
!4369 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4184)
!4370 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4184)
!4371 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4184)
!4372 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4184)
!4373 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4184)
!4374 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4184)
!4375 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4184)
!4376 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4184)
!4377 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4184)
!4378 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4184)
!4379 = !DILocation(line: 788, column: 343, scope: !4129, inlinedAt: !4178)
!4380 = !DILocation(line: 788, column: 352, scope: !4129, inlinedAt: !4178)
!4381 = !DILocation(line: 788, column: 339, scope: !4129, inlinedAt: !4178)
!4382 = !DILocation(line: 788, column: 257, scope: !4129, inlinedAt: !4178)
!4383 = !DILocation(line: 788, column: 369, scope: !4129, inlinedAt: !4178)
!4384 = !DILocation(line: 788, column: 368, scope: !4129, inlinedAt: !4178)
!4385 = !DILocation(line: 788, column: 366, scope: !4129, inlinedAt: !4178)
!4386 = !DILocation(line: 788, column: 390, scope: !4129, inlinedAt: !4178)
!4387 = !DILocation(line: 788, column: 400, scope: !4129, inlinedAt: !4178)
!4388 = !DILocation(line: 788, column: 380, scope: !4389, inlinedAt: !4178)
!4389 = !DILexicalBlockFile(scope: !4129, file: !2034, discriminator: 19)
!4390 = !DILocation(line: 788, column: 411, scope: !4129, inlinedAt: !4178)
!4391 = !DILocation(line: 788, column: 409, scope: !4129, inlinedAt: !4178)
!4392 = !DILocation(line: 788, column: 378, scope: !4129, inlinedAt: !4178)
!4393 = !DILocation(line: 788, column: 430, scope: !4129, inlinedAt: !4178)
!4394 = !DILocation(line: 788, column: 424, scope: !4129, inlinedAt: !4178)
!4395 = !DILocation(line: 788, column: 422, scope: !4129, inlinedAt: !4178)
!4396 = !DILocation(line: 788, column: 451, scope: !4129, inlinedAt: !4178)
!4397 = !DILocation(line: 788, column: 445, scope: !4129, inlinedAt: !4178)
!4398 = !DILocation(line: 788, column: 443, scope: !4129, inlinedAt: !4178)
!4399 = !DILocation(line: 788, column: 466, scope: !4129, inlinedAt: !4178)
!4400 = !DILocation(line: 788, column: 476, scope: !4129, inlinedAt: !4178)
!4401 = !DILocation(line: 788, column: 480, scope: !4129, inlinedAt: !4178)
!4402 = !DILocation(line: 788, column: 483, scope: !4403, inlinedAt: !4178)
!4403 = !DILexicalBlockFile(scope: !4114, file: !2034, discriminator: 7)
!4404 = !DILocation(line: 788, column: 485, scope: !4403, inlinedAt: !4178)
!4405 = !DILocation(line: 788, column: 466, scope: !4403, inlinedAt: !4178)
!4406 = !DILocation(line: 788, column: 505, scope: !4407, inlinedAt: !4178)
!4407 = !DILexicalBlockFile(scope: !4113, file: !2034, discriminator: 8)
!4408 = !DILocation(line: 788, column: 523, scope: !4407, inlinedAt: !4178)
!4409 = !DILocation(line: 788, column: 535, scope: !4407, inlinedAt: !4178)
!4410 = !DILocation(line: 788, column: 532, scope: !4407, inlinedAt: !4178)
!4411 = !DILocation(line: 788, column: 520, scope: !4407, inlinedAt: !4178)
!4412 = !DILocation(line: 788, column: 504, scope: !4407, inlinedAt: !4178)
!4413 = !DILocation(line: 788, column: 548, scope: !4414, inlinedAt: !4178)
!4414 = !DILexicalBlockFile(scope: !4113, file: !2034, discriminator: 9)
!4415 = !DILocation(line: 788, column: 560, scope: !4414, inlinedAt: !4178)
!4416 = !DILocation(line: 788, column: 557, scope: !4414, inlinedAt: !4178)
!4417 = !DILocation(line: 788, column: 504, scope: !4414, inlinedAt: !4178)
!4418 = !DILocation(line: 788, column: 573, scope: !4419, inlinedAt: !4178)
!4419 = !DILexicalBlockFile(scope: !4113, file: !2034, discriminator: 10)
!4420 = !DILocation(line: 788, column: 504, scope: !4419, inlinedAt: !4178)
!4421 = !DILocation(line: 788, column: 504, scope: !4112, inlinedAt: !4178)
!4422 = !DILocation(line: 788, column: 501, scope: !4112, inlinedAt: !4178)
!4423 = !DILocation(line: 788, column: 645, scope: !4112, inlinedAt: !4178)
!4424 = !DILocation(line: 788, column: 649, scope: !4112, inlinedAt: !4178)
!4425 = !DILocation(line: 788, column: 659, scope: !4112, inlinedAt: !4178)
!4426 = !DILocation(line: 788, column: 668, scope: !4112, inlinedAt: !4178)
!4427 = !DILocation(line: 788, column: 656, scope: !4112, inlinedAt: !4178)
!4428 = !DILocation(line: 788, column: 677, scope: !4112, inlinedAt: !4178)
!4429 = !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4178)
!4430 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4177)
!4431 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4177)
!4432 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4177)
!4433 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4177)
!4434 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4177)
!4435 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4177)
!4436 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4177)
!4437 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4177)
!4438 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4177)
!4439 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4177)
!4440 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4177)
!4441 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4177)
!4442 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4177)
!4443 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4177)
!4444 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4177)
!4445 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4177)
!4446 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4177)
!4447 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4177)
!4448 = !DILocation(line: 788, column: 685, scope: !4112, inlinedAt: !4178)
!4449 = !DILocation(line: 788, column: 694, scope: !4112, inlinedAt: !4178)
!4450 = !DILocation(line: 788, column: 681, scope: !4112, inlinedAt: !4178)
!4451 = !DILocation(line: 788, column: 599, scope: !4112, inlinedAt: !4178)
!4452 = !DILocation(line: 788, column: 711, scope: !4112, inlinedAt: !4178)
!4453 = !DILocation(line: 788, column: 710, scope: !4112, inlinedAt: !4178)
!4454 = !DILocation(line: 788, column: 708, scope: !4112, inlinedAt: !4178)
!4455 = !DILocation(line: 788, column: 732, scope: !4112, inlinedAt: !4178)
!4456 = !DILocation(line: 788, column: 742, scope: !4112, inlinedAt: !4178)
!4457 = !DILocation(line: 788, column: 722, scope: !4458, inlinedAt: !4178)
!4458 = !DILexicalBlockFile(scope: !4112, file: !2034, discriminator: 20)
!4459 = !DILocation(line: 788, column: 753, scope: !4112, inlinedAt: !4178)
!4460 = !DILocation(line: 788, column: 751, scope: !4112, inlinedAt: !4178)
!4461 = !DILocation(line: 788, column: 720, scope: !4112, inlinedAt: !4178)
!4462 = !DILocation(line: 788, column: 772, scope: !4112, inlinedAt: !4178)
!4463 = !DILocation(line: 788, column: 766, scope: !4112, inlinedAt: !4178)
!4464 = !DILocation(line: 788, column: 764, scope: !4112, inlinedAt: !4178)
!4465 = !DILocation(line: 788, column: 793, scope: !4112, inlinedAt: !4178)
!4466 = !DILocation(line: 788, column: 787, scope: !4112, inlinedAt: !4178)
!4467 = !DILocation(line: 788, column: 785, scope: !4112, inlinedAt: !4178)
!4468 = !DILocation(line: 788, column: 804, scope: !4112, inlinedAt: !4178)
!4469 = !DILocation(line: 788, column: 806, scope: !4470, inlinedAt: !4178)
!4470 = !DILexicalBlockFile(scope: !4115, file: !2034, discriminator: 12)
!4471 = !DILocation(line: 788, column: 827, scope: !4472, inlinedAt: !4178)
!4472 = !DILexicalBlockFile(scope: !4473, file: !2034, discriminator: 14)
!4473 = distinct !DILexicalBlock(scope: !4117, file: !2034, line: 788, column: 811)
!4474 = !DILocation(line: 788, column: 822, scope: !4472, inlinedAt: !4178)
!4475 = !DILocation(line: 788, column: 844, scope: !4472, inlinedAt: !4178)
!4476 = !DILocation(line: 788, column: 862, scope: !4472, inlinedAt: !4178)
!4477 = !DILocation(line: 788, column: 874, scope: !4472, inlinedAt: !4178)
!4478 = !DILocation(line: 788, column: 871, scope: !4472, inlinedAt: !4178)
!4479 = !DILocation(line: 788, column: 859, scope: !4472, inlinedAt: !4178)
!4480 = !DILocation(line: 788, column: 843, scope: !4472, inlinedAt: !4178)
!4481 = !DILocation(line: 788, column: 881, scope: !4482, inlinedAt: !4178)
!4482 = !DILexicalBlockFile(scope: !4473, file: !2034, discriminator: 15)
!4483 = !DILocation(line: 788, column: 893, scope: !4482, inlinedAt: !4178)
!4484 = !DILocation(line: 788, column: 890, scope: !4482, inlinedAt: !4178)
!4485 = !DILocation(line: 788, column: 843, scope: !4482, inlinedAt: !4178)
!4486 = !DILocation(line: 788, column: 900, scope: !4487, inlinedAt: !4178)
!4487 = !DILexicalBlockFile(scope: !4473, file: !2034, discriminator: 16)
!4488 = !DILocation(line: 788, column: 843, scope: !4487, inlinedAt: !4178)
!4489 = !DILocation(line: 788, column: 843, scope: !4490, inlinedAt: !4178)
!4490 = !DILexicalBlockFile(scope: !4473, file: !2034, discriminator: 17)
!4491 = !DILocation(line: 788, column: 840, scope: !4490, inlinedAt: !4178)
!4492 = !DILocation(line: 790, column: 18, scope: !4118, inlinedAt: !4178)
!4493 = !DILocation(line: 790, column: 6, scope: !4118, inlinedAt: !4178)
!4494 = !DILocation(line: 790, column: 10, scope: !4118, inlinedAt: !4178)
!4495 = !DILocation(line: 790, column: 16, scope: !4118, inlinedAt: !4178)
!4496 = !DILocation(line: 792, column: 12, scope: !4118, inlinedAt: !4178)
!4497 = !DILocation(line: 264, column: 46, scope: !4179)
!4498 = !DILocation(line: 265, column: 34, scope: !4179)
!4499 = !DILocation(line: 265, column: 47, scope: !4179)
!4500 = !DILocation(line: 265, column: 44, scope: !4179)
!4501 = !DILocation(line: 265, column: 52, scope: !4179)
!4502 = !DILocation(line: 265, column: 38, scope: !4179)
!4503 = !DILocation(line: 265, column: 29, scope: !4179)
!4504 = !DILocation(line: 265, column: 13, scope: !4179)
!4505 = !DILocation(line: 265, column: 16, scope: !4179)
!4506 = !DILocation(line: 265, column: 32, scope: !4179)
!4507 = !DILocation(line: 266, column: 9, scope: !4179)
!4508 = !DILocation(line: 263, column: 50, scope: !4509)
!4509 = !DILexicalBlockFile(scope: !4180, file: !925, discriminator: 2)
!4510 = !DILocation(line: 263, column: 9, scope: !4509)
!4511 = distinct !{!4511, !4512}
!4512 = !DILocation(line: 263, column: 9, scope: !4182)
!4513 = !DILocalVariable(name: "i", scope: !4514, file: !925, line: 268, type: !904)
!4514 = distinct !DILexicalBlock(scope: !4182, file: !925, line: 268, column: 9)
!4515 = !DILocation(line: 268, column: 18, scope: !4514)
!4516 = !DILocation(line: 268, column: 14, scope: !4514)
!4517 = !DILocation(line: 268, column: 25, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4519, file: !925, discriminator: 1)
!4519 = distinct !DILexicalBlock(scope: !4514, file: !925, line: 268, column: 9)
!4520 = !DILocation(line: 268, column: 29, scope: !4518)
!4521 = !DILocation(line: 268, column: 32, scope: !4518)
!4522 = !DILocation(line: 268, column: 27, scope: !4518)
!4523 = !DILocation(line: 268, column: 9, scope: !4518)
!4524 = !DILocation(line: 269, column: 35, scope: !4519)
!4525 = !DILocation(line: 269, column: 53, scope: !4519)
!4526 = !DILocation(line: 269, column: 42, scope: !4519)
!4527 = !DILocation(line: 269, column: 40, scope: !4519)
!4528 = !DILocation(line: 269, column: 29, scope: !4519)
!4529 = !DILocation(line: 269, column: 13, scope: !4519)
!4530 = !DILocation(line: 269, column: 16, scope: !4519)
!4531 = !DILocation(line: 269, column: 32, scope: !4519)
!4532 = !DILocation(line: 268, column: 50, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !4519, file: !925, discriminator: 2)
!4534 = !DILocation(line: 268, column: 9, scope: !4533)
!4535 = distinct !{!4535, !4536}
!4536 = !DILocation(line: 268, column: 9, scope: !4182)
!4537 = !DILocation(line: 271, column: 9, scope: !4182)
!4538 = !DILocalVariable(name: "len", scope: !4539, file: !925, line: 274, type: !951)
!4539 = distinct !DILexicalBlock(scope: !4126, file: !925, line: 273, column: 13)
!4540 = !DILocation(line: 274, column: 19, scope: !4539)
!4541 = !DILocation(line: 274, column: 34, scope: !4539)
!4542 = !DILocation(line: 274, column: 25, scope: !4539)
!4543 = !DILocation(line: 274, column: 41, scope: !4539)
!4544 = !DILocalVariable(name: "base", scope: !4539, file: !925, line: 275, type: !951)
!4545 = !DILocation(line: 275, column: 19, scope: !4539)
!4546 = !DILocation(line: 275, column: 26, scope: !4539)
!4547 = !DILocation(line: 275, column: 30, scope: !4539)
!4548 = !DILocation(line: 275, column: 45, scope: !4549)
!4549 = !DILexicalBlockFile(scope: !4539, file: !925, discriminator: 1)
!4550 = !DILocation(line: 275, column: 36, scope: !4549)
!4551 = !DILocation(line: 275, column: 26, scope: !4549)
!4552 = !DILocation(line: 275, column: 26, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4539, file: !925, discriminator: 2)
!4554 = !DILocation(line: 275, column: 26, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !4539, file: !925, discriminator: 3)
!4556 = !DILocation(line: 275, column: 19, scope: !4555)
!4557 = !DILocalVariable(name: "i", scope: !4558, file: !925, line: 276, type: !904)
!4558 = distinct !DILexicalBlock(scope: !4539, file: !925, line: 276, column: 9)
!4559 = !DILocation(line: 276, column: 18, scope: !4558)
!4560 = !DILocation(line: 276, column: 14, scope: !4558)
!4561 = !DILocation(line: 276, column: 25, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !4563, file: !925, discriminator: 1)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !925, line: 276, column: 9)
!4564 = !DILocation(line: 276, column: 29, scope: !4562)
!4565 = !DILocation(line: 276, column: 32, scope: !4562)
!4566 = !DILocation(line: 276, column: 27, scope: !4562)
!4567 = !DILocation(line: 276, column: 9, scope: !4562)
!4568 = !DILocation(line: 277, column: 34, scope: !4563)
!4569 = !DILocation(line: 277, column: 50, scope: !4563)
!4570 = !DILocation(line: 277, column: 54, scope: !4563)
!4571 = !DILocation(line: 277, column: 41, scope: !4563)
!4572 = !DILocation(line: 277, column: 39, scope: !4563)
!4573 = !DILocation(line: 277, column: 29, scope: !4563)
!4574 = !DILocation(line: 277, column: 13, scope: !4563)
!4575 = !DILocation(line: 277, column: 16, scope: !4563)
!4576 = !DILocation(line: 277, column: 32, scope: !4563)
!4577 = !DILocation(line: 276, column: 50, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4563, file: !925, discriminator: 2)
!4579 = !DILocation(line: 276, column: 9, scope: !4578)
!4580 = distinct !{!4580, !4581}
!4581 = !DILocation(line: 276, column: 9, scope: !4539)
!4582 = !DILocation(line: 278, column: 9, scope: !4539)
!4583 = !DILocalVariable(name: "baseline", scope: !4160, file: !925, line: 282, type: !950)
!4584 = !DILocation(line: 282, column: 20, scope: !4160)
!4585 = !DILocation(line: 282, column: 31, scope: !4160)
!4586 = !DILocation(line: 282, column: 36, scope: !4160)
!4587 = !DILocation(line: 282, column: 43, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !4160, file: !925, discriminator: 1)
!4589 = !DILocation(line: 282, column: 46, scope: !4588)
!4590 = !DILocation(line: 282, column: 31, scope: !4588)
!4591 = !DILocation(line: 283, column: 31, scope: !4160)
!4592 = !DILocation(line: 283, column: 45, scope: !4588)
!4593 = !DILocation(line: 283, column: 48, scope: !4588)
!4594 = !DILocation(line: 283, column: 59, scope: !4588)
!4595 = !DILocation(line: 283, column: 31, scope: !4588)
!4596 = !DILocation(line: 284, column: 31, scope: !4160)
!4597 = !DILocation(line: 284, column: 34, scope: !4160)
!4598 = !DILocation(line: 283, column: 31, scope: !4599)
!4599 = !DILexicalBlockFile(scope: !4160, file: !925, discriminator: 2)
!4600 = !DILocation(line: 283, column: 31, scope: !4601)
!4601 = !DILexicalBlockFile(scope: !4160, file: !925, discriminator: 3)
!4602 = !DILocation(line: 282, column: 31, scope: !4599)
!4603 = !DILocation(line: 282, column: 31, scope: !4601)
!4604 = !DILocation(line: 282, column: 20, scope: !4601)
!4605 = !DILocalVariable(name: "baseline_len", scope: !4160, file: !925, line: 285, type: !951)
!4606 = !DILocation(line: 285, column: 19, scope: !4160)
!4607 = !DILocation(line: 285, column: 34, scope: !4160)
!4608 = !DILocation(line: 285, column: 39, scope: !4160)
!4609 = !DILocation(line: 285, column: 46, scope: !4588)
!4610 = !DILocation(line: 285, column: 49, scope: !4588)
!4611 = !DILocation(line: 285, column: 34, scope: !4588)
!4612 = !DILocation(line: 286, column: 34, scope: !4160)
!4613 = !DILocation(line: 286, column: 48, scope: !4588)
!4614 = !DILocation(line: 286, column: 51, scope: !4588)
!4615 = !DILocation(line: 286, column: 34, scope: !4588)
!4616 = !DILocation(line: 287, column: 34, scope: !4160)
!4617 = !DILocation(line: 287, column: 37, scope: !4160)
!4618 = !DILocation(line: 286, column: 34, scope: !4599)
!4619 = !DILocation(line: 286, column: 34, scope: !4601)
!4620 = !DILocation(line: 285, column: 34, scope: !4599)
!4621 = !DILocation(line: 285, column: 34, scope: !4601)
!4622 = !DILocation(line: 285, column: 19, scope: !4601)
!4623 = !DILocalVariable(name: "len", scope: !4160, file: !925, line: 289, type: !951)
!4624 = !DILocation(line: 289, column: 19, scope: !4160)
!4625 = !DILocation(line: 289, column: 34, scope: !4160)
!4626 = !DILocation(line: 289, column: 25, scope: !4160)
!4627 = !DILocation(line: 289, column: 41, scope: !4160)
!4628 = !DILocalVariable(name: "unit_cnt", scope: !4160, file: !925, line: 290, type: !951)
!4629 = !DILocation(line: 290, column: 19, scope: !4160)
!4630 = !DILocation(line: 290, column: 32, scope: !4160)
!4631 = !DILocation(line: 290, column: 35, scope: !4160)
!4632 = !DILocation(line: 290, column: 55, scope: !4160)
!4633 = !DILocation(line: 290, column: 52, scope: !4160)
!4634 = !DILocation(line: 290, column: 31, scope: !4160)
!4635 = !DILocation(line: 290, column: 72, scope: !4588)
!4636 = !DILocation(line: 290, column: 31, scope: !4588)
!4637 = !DILocation(line: 290, column: 89, scope: !4599)
!4638 = !DILocation(line: 290, column: 92, scope: !4599)
!4639 = !DILocation(line: 290, column: 31, scope: !4599)
!4640 = !DILocation(line: 290, column: 31, scope: !4601)
!4641 = !DILocation(line: 290, column: 19, scope: !4601)
!4642 = !DILocalVariable(name: "tab", scope: !4160, file: !925, line: 291, type: !4255)
!4643 = !DILocation(line: 291, column: 20, scope: !4160)
!4644 = !DILocation(line: 291, column: 40, scope: !4160)
!4645 = !DILocation(line: 291, column: 27, scope: !4160)
!4646 = !DILocation(line: 291, column: 30, scope: !4160)
!4647 = !DILocalVariable(name: "i", scope: !4159, file: !925, line: 293, type: !904)
!4648 = !DILocation(line: 293, column: 18, scope: !4159)
!4649 = !DILocation(line: 293, column: 14, scope: !4159)
!4650 = !DILocation(line: 293, column: 25, scope: !4651)
!4651 = !DILexicalBlockFile(scope: !4158, file: !925, discriminator: 1)
!4652 = !DILocation(line: 293, column: 29, scope: !4651)
!4653 = !DILocation(line: 293, column: 27, scope: !4651)
!4654 = !DILocation(line: 293, column: 9, scope: !4651)
!4655 = !DILocalVariable(name: "dist", scope: !4157, file: !925, line: 294, type: !904)
!4656 = !DILocation(line: 294, column: 17, scope: !4157)
!4657 = !DILocation(line: 294, column: 33, scope: !4157)
!4658 = !DILocation(line: 294, column: 37, scope: !4157)
!4659 = !DILocation(line: 294, column: 42, scope: !4157)
!4660 = !DILocation(line: 294, column: 24, scope: !4157)
!4661 = !DILocation(line: 785, column: 30, scope: !4118, inlinedAt: !4156)
!4662 = !DILocation(line: 785, column: 34, scope: !4118, inlinedAt: !4156)
!4663 = !DILocation(line: 785, column: 118, scope: !4118, inlinedAt: !4156)
!4664 = !DILocation(line: 785, column: 122, scope: !4118, inlinedAt: !4156)
!4665 = !DILocation(line: 786, column: 60, scope: !4118, inlinedAt: !4156)
!4666 = !DILocation(line: 786, column: 64, scope: !4118, inlinedAt: !4156)
!4667 = !DILocation(line: 786, column: 74, scope: !4118, inlinedAt: !4156)
!4668 = !DILocation(line: 786, column: 83, scope: !4118, inlinedAt: !4156)
!4669 = !DILocation(line: 786, column: 71, scope: !4118, inlinedAt: !4156)
!4670 = !DILocation(line: 786, column: 92, scope: !4118, inlinedAt: !4156)
!4671 = !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4156)
!4672 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4164)
!4673 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4164)
!4674 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4164)
!4675 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4164)
!4676 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4164)
!4677 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4164)
!4678 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4164)
!4679 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4164)
!4680 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4164)
!4681 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4164)
!4682 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4164)
!4683 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4164)
!4684 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4164)
!4685 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4164)
!4686 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4164)
!4687 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4164)
!4688 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4164)
!4689 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4164)
!4690 = !DILocation(line: 786, column: 100, scope: !4118, inlinedAt: !4156)
!4691 = !DILocation(line: 786, column: 109, scope: !4118, inlinedAt: !4156)
!4692 = !DILocation(line: 786, column: 96, scope: !4118, inlinedAt: !4156)
!4693 = !DILocation(line: 786, column: 14, scope: !4118, inlinedAt: !4156)
!4694 = !DILocation(line: 788, column: 64, scope: !4320, inlinedAt: !4156)
!4695 = !DILocation(line: 788, column: 74, scope: !4320, inlinedAt: !4156)
!4696 = !DILocation(line: 788, column: 54, scope: !4320, inlinedAt: !4156)
!4697 = !DILocation(line: 788, column: 52, scope: !4320, inlinedAt: !4156)
!4698 = !DILocation(line: 788, column: 94, scope: !4320, inlinedAt: !4156)
!4699 = !DILocation(line: 788, column: 88, scope: !4320, inlinedAt: !4156)
!4700 = !DILocation(line: 788, column: 86, scope: !4320, inlinedAt: !4156)
!4701 = !DILocation(line: 788, column: 115, scope: !4320, inlinedAt: !4156)
!4702 = !DILocation(line: 788, column: 109, scope: !4320, inlinedAt: !4156)
!4703 = !DILocation(line: 788, column: 107, scope: !4320, inlinedAt: !4156)
!4704 = !DILocation(line: 788, column: 130, scope: !4320, inlinedAt: !4156)
!4705 = !DILocation(line: 788, column: 140, scope: !4320, inlinedAt: !4156)
!4706 = !DILocation(line: 788, column: 144, scope: !4320, inlinedAt: !4156)
!4707 = !DILocation(line: 788, column: 147, scope: !4334, inlinedAt: !4156)
!4708 = !DILocation(line: 788, column: 149, scope: !4334, inlinedAt: !4156)
!4709 = !DILocation(line: 788, column: 130, scope: !4334, inlinedAt: !4156)
!4710 = !DILocation(line: 788, column: 169, scope: !4338, inlinedAt: !4156)
!4711 = !DILocation(line: 788, column: 187, scope: !4338, inlinedAt: !4156)
!4712 = !DILocation(line: 788, column: 199, scope: !4338, inlinedAt: !4156)
!4713 = !DILocation(line: 788, column: 196, scope: !4338, inlinedAt: !4156)
!4714 = !DILocation(line: 788, column: 184, scope: !4338, inlinedAt: !4156)
!4715 = !DILocation(line: 788, column: 168, scope: !4338, inlinedAt: !4156)
!4716 = !DILocation(line: 788, column: 209, scope: !4345, inlinedAt: !4156)
!4717 = !DILocation(line: 788, column: 221, scope: !4345, inlinedAt: !4156)
!4718 = !DILocation(line: 788, column: 218, scope: !4345, inlinedAt: !4156)
!4719 = !DILocation(line: 788, column: 168, scope: !4345, inlinedAt: !4156)
!4720 = !DILocation(line: 788, column: 231, scope: !4350, inlinedAt: !4156)
!4721 = !DILocation(line: 788, column: 168, scope: !4350, inlinedAt: !4156)
!4722 = !DILocation(line: 788, column: 168, scope: !4129, inlinedAt: !4156)
!4723 = !DILocation(line: 788, column: 165, scope: !4129, inlinedAt: !4156)
!4724 = !DILocation(line: 788, column: 303, scope: !4129, inlinedAt: !4156)
!4725 = !DILocation(line: 788, column: 307, scope: !4129, inlinedAt: !4156)
!4726 = !DILocation(line: 788, column: 317, scope: !4129, inlinedAt: !4156)
!4727 = !DILocation(line: 788, column: 326, scope: !4129, inlinedAt: !4156)
!4728 = !DILocation(line: 788, column: 314, scope: !4129, inlinedAt: !4156)
!4729 = !DILocation(line: 788, column: 335, scope: !4129, inlinedAt: !4156)
!4730 = !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4156)
!4731 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4162)
!4732 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4162)
!4733 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4162)
!4734 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4162)
!4735 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4162)
!4736 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4162)
!4737 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4162)
!4738 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4162)
!4739 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4162)
!4740 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4162)
!4741 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4162)
!4742 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4162)
!4743 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4162)
!4744 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4162)
!4745 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4162)
!4746 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4162)
!4747 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4162)
!4748 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4162)
!4749 = !DILocation(line: 788, column: 343, scope: !4129, inlinedAt: !4156)
!4750 = !DILocation(line: 788, column: 352, scope: !4129, inlinedAt: !4156)
!4751 = !DILocation(line: 788, column: 339, scope: !4129, inlinedAt: !4156)
!4752 = !DILocation(line: 788, column: 257, scope: !4129, inlinedAt: !4156)
!4753 = !DILocation(line: 788, column: 369, scope: !4129, inlinedAt: !4156)
!4754 = !DILocation(line: 788, column: 368, scope: !4129, inlinedAt: !4156)
!4755 = !DILocation(line: 788, column: 366, scope: !4129, inlinedAt: !4156)
!4756 = !DILocation(line: 788, column: 390, scope: !4129, inlinedAt: !4156)
!4757 = !DILocation(line: 788, column: 400, scope: !4129, inlinedAt: !4156)
!4758 = !DILocation(line: 788, column: 380, scope: !4389, inlinedAt: !4156)
!4759 = !DILocation(line: 788, column: 411, scope: !4129, inlinedAt: !4156)
!4760 = !DILocation(line: 788, column: 409, scope: !4129, inlinedAt: !4156)
!4761 = !DILocation(line: 788, column: 378, scope: !4129, inlinedAt: !4156)
!4762 = !DILocation(line: 788, column: 430, scope: !4129, inlinedAt: !4156)
!4763 = !DILocation(line: 788, column: 424, scope: !4129, inlinedAt: !4156)
!4764 = !DILocation(line: 788, column: 422, scope: !4129, inlinedAt: !4156)
!4765 = !DILocation(line: 788, column: 451, scope: !4129, inlinedAt: !4156)
!4766 = !DILocation(line: 788, column: 445, scope: !4129, inlinedAt: !4156)
!4767 = !DILocation(line: 788, column: 443, scope: !4129, inlinedAt: !4156)
!4768 = !DILocation(line: 788, column: 466, scope: !4129, inlinedAt: !4156)
!4769 = !DILocation(line: 788, column: 476, scope: !4129, inlinedAt: !4156)
!4770 = !DILocation(line: 788, column: 480, scope: !4129, inlinedAt: !4156)
!4771 = !DILocation(line: 788, column: 483, scope: !4403, inlinedAt: !4156)
!4772 = !DILocation(line: 788, column: 485, scope: !4403, inlinedAt: !4156)
!4773 = !DILocation(line: 788, column: 466, scope: !4403, inlinedAt: !4156)
!4774 = !DILocation(line: 788, column: 505, scope: !4407, inlinedAt: !4156)
!4775 = !DILocation(line: 788, column: 523, scope: !4407, inlinedAt: !4156)
!4776 = !DILocation(line: 788, column: 535, scope: !4407, inlinedAt: !4156)
!4777 = !DILocation(line: 788, column: 532, scope: !4407, inlinedAt: !4156)
!4778 = !DILocation(line: 788, column: 520, scope: !4407, inlinedAt: !4156)
!4779 = !DILocation(line: 788, column: 504, scope: !4407, inlinedAt: !4156)
!4780 = !DILocation(line: 788, column: 548, scope: !4414, inlinedAt: !4156)
!4781 = !DILocation(line: 788, column: 560, scope: !4414, inlinedAt: !4156)
!4782 = !DILocation(line: 788, column: 557, scope: !4414, inlinedAt: !4156)
!4783 = !DILocation(line: 788, column: 504, scope: !4414, inlinedAt: !4156)
!4784 = !DILocation(line: 788, column: 573, scope: !4419, inlinedAt: !4156)
!4785 = !DILocation(line: 788, column: 504, scope: !4419, inlinedAt: !4156)
!4786 = !DILocation(line: 788, column: 504, scope: !4112, inlinedAt: !4156)
!4787 = !DILocation(line: 788, column: 501, scope: !4112, inlinedAt: !4156)
!4788 = !DILocation(line: 788, column: 645, scope: !4112, inlinedAt: !4156)
!4789 = !DILocation(line: 788, column: 649, scope: !4112, inlinedAt: !4156)
!4790 = !DILocation(line: 788, column: 659, scope: !4112, inlinedAt: !4156)
!4791 = !DILocation(line: 788, column: 668, scope: !4112, inlinedAt: !4156)
!4792 = !DILocation(line: 788, column: 656, scope: !4112, inlinedAt: !4156)
!4793 = !DILocation(line: 788, column: 677, scope: !4112, inlinedAt: !4156)
!4794 = !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4156)
!4795 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4155)
!4796 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4155)
!4797 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4155)
!4798 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4155)
!4799 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4155)
!4800 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4155)
!4801 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4155)
!4802 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4155)
!4803 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4155)
!4804 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4155)
!4805 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4155)
!4806 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4155)
!4807 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4155)
!4808 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4155)
!4809 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4155)
!4810 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4155)
!4811 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4155)
!4812 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4155)
!4813 = !DILocation(line: 788, column: 685, scope: !4112, inlinedAt: !4156)
!4814 = !DILocation(line: 788, column: 694, scope: !4112, inlinedAt: !4156)
!4815 = !DILocation(line: 788, column: 681, scope: !4112, inlinedAt: !4156)
!4816 = !DILocation(line: 788, column: 599, scope: !4112, inlinedAt: !4156)
!4817 = !DILocation(line: 788, column: 711, scope: !4112, inlinedAt: !4156)
!4818 = !DILocation(line: 788, column: 710, scope: !4112, inlinedAt: !4156)
!4819 = !DILocation(line: 788, column: 708, scope: !4112, inlinedAt: !4156)
!4820 = !DILocation(line: 788, column: 732, scope: !4112, inlinedAt: !4156)
!4821 = !DILocation(line: 788, column: 742, scope: !4112, inlinedAt: !4156)
!4822 = !DILocation(line: 788, column: 722, scope: !4458, inlinedAt: !4156)
!4823 = !DILocation(line: 788, column: 753, scope: !4112, inlinedAt: !4156)
!4824 = !DILocation(line: 788, column: 751, scope: !4112, inlinedAt: !4156)
!4825 = !DILocation(line: 788, column: 720, scope: !4112, inlinedAt: !4156)
!4826 = !DILocation(line: 788, column: 772, scope: !4112, inlinedAt: !4156)
!4827 = !DILocation(line: 788, column: 766, scope: !4112, inlinedAt: !4156)
!4828 = !DILocation(line: 788, column: 764, scope: !4112, inlinedAt: !4156)
!4829 = !DILocation(line: 788, column: 793, scope: !4112, inlinedAt: !4156)
!4830 = !DILocation(line: 788, column: 787, scope: !4112, inlinedAt: !4156)
!4831 = !DILocation(line: 788, column: 785, scope: !4112, inlinedAt: !4156)
!4832 = !DILocation(line: 788, column: 804, scope: !4112, inlinedAt: !4156)
!4833 = !DILocation(line: 788, column: 806, scope: !4470, inlinedAt: !4156)
!4834 = !DILocation(line: 788, column: 827, scope: !4472, inlinedAt: !4156)
!4835 = !DILocation(line: 788, column: 822, scope: !4472, inlinedAt: !4156)
!4836 = !DILocation(line: 788, column: 844, scope: !4472, inlinedAt: !4156)
!4837 = !DILocation(line: 788, column: 862, scope: !4472, inlinedAt: !4156)
!4838 = !DILocation(line: 788, column: 874, scope: !4472, inlinedAt: !4156)
!4839 = !DILocation(line: 788, column: 871, scope: !4472, inlinedAt: !4156)
!4840 = !DILocation(line: 788, column: 859, scope: !4472, inlinedAt: !4156)
!4841 = !DILocation(line: 788, column: 843, scope: !4472, inlinedAt: !4156)
!4842 = !DILocation(line: 788, column: 881, scope: !4482, inlinedAt: !4156)
!4843 = !DILocation(line: 788, column: 893, scope: !4482, inlinedAt: !4156)
!4844 = !DILocation(line: 788, column: 890, scope: !4482, inlinedAt: !4156)
!4845 = !DILocation(line: 788, column: 843, scope: !4482, inlinedAt: !4156)
!4846 = !DILocation(line: 788, column: 900, scope: !4487, inlinedAt: !4156)
!4847 = !DILocation(line: 788, column: 843, scope: !4487, inlinedAt: !4156)
!4848 = !DILocation(line: 788, column: 843, scope: !4490, inlinedAt: !4156)
!4849 = !DILocation(line: 788, column: 840, scope: !4490, inlinedAt: !4156)
!4850 = !DILocation(line: 790, column: 18, scope: !4118, inlinedAt: !4156)
!4851 = !DILocation(line: 790, column: 6, scope: !4118, inlinedAt: !4156)
!4852 = !DILocation(line: 790, column: 10, scope: !4118, inlinedAt: !4156)
!4853 = !DILocation(line: 790, column: 16, scope: !4118, inlinedAt: !4156)
!4854 = !DILocation(line: 792, column: 12, scope: !4118, inlinedAt: !4156)
!4855 = !DILocation(line: 295, column: 43, scope: !4157)
!4856 = !DILocation(line: 295, column: 34, scope: !4157)
!4857 = !DILocation(line: 295, column: 48, scope: !4157)
!4858 = !DILocation(line: 295, column: 46, scope: !4157)
!4859 = !DILocation(line: 295, column: 29, scope: !4157)
!4860 = !DILocation(line: 295, column: 13, scope: !4157)
!4861 = !DILocation(line: 295, column: 16, scope: !4157)
!4862 = !DILocation(line: 295, column: 32, scope: !4157)
!4863 = !DILocation(line: 296, column: 9, scope: !4157)
!4864 = !DILocation(line: 293, column: 40, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4158, file: !925, discriminator: 2)
!4866 = !DILocation(line: 293, column: 9, scope: !4865)
!4867 = distinct !{!4867, !4868}
!4868 = !DILocation(line: 293, column: 9, scope: !4160)
!4869 = !DILocalVariable(name: "i", scope: !4870, file: !925, line: 298, type: !904)
!4870 = distinct !DILexicalBlock(scope: !4160, file: !925, line: 298, column: 9)
!4871 = !DILocation(line: 298, column: 18, scope: !4870)
!4872 = !DILocation(line: 298, column: 22, scope: !4870)
!4873 = !DILocation(line: 298, column: 14, scope: !4870)
!4874 = !DILocation(line: 298, column: 32, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4876, file: !925, discriminator: 1)
!4876 = distinct !DILexicalBlock(scope: !4870, file: !925, line: 298, column: 9)
!4877 = !DILocation(line: 298, column: 36, scope: !4875)
!4878 = !DILocation(line: 298, column: 39, scope: !4875)
!4879 = !DILocation(line: 298, column: 34, scope: !4875)
!4880 = !DILocation(line: 298, column: 9, scope: !4875)
!4881 = !DILocation(line: 299, column: 43, scope: !4876)
!4882 = !DILocation(line: 299, column: 34, scope: !4876)
!4883 = !DILocation(line: 299, column: 29, scope: !4876)
!4884 = !DILocation(line: 299, column: 13, scope: !4876)
!4885 = !DILocation(line: 299, column: 16, scope: !4876)
!4886 = !DILocation(line: 299, column: 32, scope: !4876)
!4887 = !DILocation(line: 298, column: 57, scope: !4888)
!4888 = !DILexicalBlockFile(scope: !4876, file: !925, discriminator: 2)
!4889 = !DILocation(line: 298, column: 9, scope: !4888)
!4890 = distinct !{!4890, !4891}
!4891 = !DILocation(line: 298, column: 9, scope: !4160)
!4892 = !DILocation(line: 301, column: 9, scope: !4160)
!4893 = !DILocalVariable(name: "baseline", scope: !4125, file: !925, line: 304, type: !950)
!4894 = !DILocation(line: 304, column: 20, scope: !4125)
!4895 = !DILocation(line: 304, column: 31, scope: !4125)
!4896 = !DILocation(line: 304, column: 45, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4125, file: !925, discriminator: 1)
!4898 = !DILocation(line: 304, column: 48, scope: !4897)
!4899 = !DILocation(line: 304, column: 59, scope: !4897)
!4900 = !DILocation(line: 304, column: 31, scope: !4897)
!4901 = !DILocation(line: 305, column: 31, scope: !4125)
!4902 = !DILocation(line: 305, column: 34, scope: !4125)
!4903 = !DILocation(line: 304, column: 31, scope: !4904)
!4904 = !DILexicalBlockFile(scope: !4125, file: !925, discriminator: 2)
!4905 = !DILocation(line: 304, column: 31, scope: !4906)
!4906 = !DILexicalBlockFile(scope: !4125, file: !925, discriminator: 3)
!4907 = !DILocation(line: 304, column: 20, scope: !4906)
!4908 = !DILocalVariable(name: "baseline_len", scope: !4125, file: !925, line: 306, type: !951)
!4909 = !DILocation(line: 306, column: 19, scope: !4125)
!4910 = !DILocation(line: 306, column: 34, scope: !4125)
!4911 = !DILocation(line: 306, column: 48, scope: !4897)
!4912 = !DILocation(line: 306, column: 51, scope: !4897)
!4913 = !DILocation(line: 306, column: 34, scope: !4897)
!4914 = !DILocation(line: 307, column: 34, scope: !4125)
!4915 = !DILocation(line: 307, column: 37, scope: !4125)
!4916 = !DILocation(line: 306, column: 34, scope: !4904)
!4917 = !DILocation(line: 306, column: 34, scope: !4906)
!4918 = !DILocation(line: 306, column: 19, scope: !4906)
!4919 = !DILocalVariable(name: "base", scope: !4125, file: !925, line: 309, type: !951)
!4920 = !DILocation(line: 309, column: 19, scope: !4125)
!4921 = !DILocation(line: 309, column: 35, scope: !4125)
!4922 = !DILocation(line: 309, column: 26, scope: !4125)
!4923 = !DILocation(line: 309, column: 42, scope: !4125)
!4924 = !DILocalVariable(name: "len", scope: !4125, file: !925, line: 310, type: !951)
!4925 = !DILocation(line: 310, column: 19, scope: !4125)
!4926 = !DILocation(line: 310, column: 34, scope: !4125)
!4927 = !DILocation(line: 310, column: 25, scope: !4125)
!4928 = !DILocation(line: 310, column: 41, scope: !4125)
!4929 = !DILocalVariable(name: "unit_cnt", scope: !4125, file: !925, line: 311, type: !951)
!4930 = !DILocation(line: 311, column: 19, scope: !4125)
!4931 = !DILocation(line: 311, column: 32, scope: !4125)
!4932 = !DILocation(line: 311, column: 35, scope: !4125)
!4933 = !DILocation(line: 311, column: 55, scope: !4125)
!4934 = !DILocation(line: 311, column: 52, scope: !4125)
!4935 = !DILocation(line: 311, column: 31, scope: !4125)
!4936 = !DILocation(line: 311, column: 72, scope: !4897)
!4937 = !DILocation(line: 311, column: 31, scope: !4897)
!4938 = !DILocation(line: 311, column: 89, scope: !4904)
!4939 = !DILocation(line: 311, column: 92, scope: !4904)
!4940 = !DILocation(line: 311, column: 31, scope: !4904)
!4941 = !DILocation(line: 311, column: 31, scope: !4906)
!4942 = !DILocation(line: 311, column: 19, scope: !4906)
!4943 = !DILocalVariable(name: "tab", scope: !4125, file: !925, line: 312, type: !4255)
!4944 = !DILocation(line: 312, column: 20, scope: !4125)
!4945 = !DILocation(line: 312, column: 40, scope: !4125)
!4946 = !DILocation(line: 312, column: 27, scope: !4125)
!4947 = !DILocation(line: 312, column: 30, scope: !4125)
!4948 = !DILocation(line: 314, column: 39, scope: !4125)
!4949 = !DILocation(line: 314, column: 43, scope: !4125)
!4950 = !DILocation(line: 314, column: 30, scope: !4125)
!4951 = !DILocation(line: 314, column: 9, scope: !4125)
!4952 = !DILocation(line: 314, column: 12, scope: !4125)
!4953 = !DILocation(line: 314, column: 28, scope: !4125)
!4954 = !DILocalVariable(name: "i", scope: !4124, file: !925, line: 316, type: !904)
!4955 = !DILocation(line: 316, column: 18, scope: !4124)
!4956 = !DILocation(line: 316, column: 14, scope: !4124)
!4957 = !DILocation(line: 316, column: 25, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !4123, file: !925, discriminator: 1)
!4959 = !DILocation(line: 316, column: 29, scope: !4958)
!4960 = !DILocation(line: 316, column: 27, scope: !4958)
!4961 = !DILocation(line: 316, column: 9, scope: !4958)
!4962 = !DILocalVariable(name: "val", scope: !4122, file: !925, line: 317, type: !904)
!4963 = !DILocation(line: 317, column: 17, scope: !4122)
!4964 = !DILocation(line: 317, column: 39, scope: !4122)
!4965 = !DILocation(line: 317, column: 41, scope: !4122)
!4966 = !DILocation(line: 317, column: 23, scope: !4122)
!4967 = !DILocation(line: 317, column: 26, scope: !4122)
!4968 = !DILocation(line: 317, column: 57, scope: !4122)
!4969 = !DILocation(line: 317, column: 61, scope: !4122)
!4970 = !DILocation(line: 317, column: 66, scope: !4122)
!4971 = !DILocation(line: 317, column: 48, scope: !4122)
!4972 = !DILocation(line: 785, column: 30, scope: !4118, inlinedAt: !4121)
!4973 = !DILocation(line: 785, column: 34, scope: !4118, inlinedAt: !4121)
!4974 = !DILocation(line: 785, column: 118, scope: !4118, inlinedAt: !4121)
!4975 = !DILocation(line: 785, column: 122, scope: !4118, inlinedAt: !4121)
!4976 = !DILocation(line: 786, column: 60, scope: !4118, inlinedAt: !4121)
!4977 = !DILocation(line: 786, column: 64, scope: !4118, inlinedAt: !4121)
!4978 = !DILocation(line: 786, column: 74, scope: !4118, inlinedAt: !4121)
!4979 = !DILocation(line: 786, column: 83, scope: !4118, inlinedAt: !4121)
!4980 = !DILocation(line: 786, column: 71, scope: !4118, inlinedAt: !4121)
!4981 = !DILocation(line: 786, column: 92, scope: !4118, inlinedAt: !4121)
!4982 = !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !4121)
!4983 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4131)
!4984 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4131)
!4985 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4131)
!4986 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4131)
!4987 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4131)
!4988 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4131)
!4989 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4131)
!4990 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4131)
!4991 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4131)
!4992 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4131)
!4993 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4131)
!4994 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4131)
!4995 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4131)
!4996 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4131)
!4997 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4131)
!4998 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4131)
!4999 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4131)
!5000 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4131)
!5001 = !DILocation(line: 786, column: 100, scope: !4118, inlinedAt: !4121)
!5002 = !DILocation(line: 786, column: 109, scope: !4118, inlinedAt: !4121)
!5003 = !DILocation(line: 786, column: 96, scope: !4118, inlinedAt: !4121)
!5004 = !DILocation(line: 786, column: 14, scope: !4118, inlinedAt: !4121)
!5005 = !DILocation(line: 788, column: 64, scope: !4320, inlinedAt: !4121)
!5006 = !DILocation(line: 788, column: 74, scope: !4320, inlinedAt: !4121)
!5007 = !DILocation(line: 788, column: 54, scope: !4320, inlinedAt: !4121)
!5008 = !DILocation(line: 788, column: 52, scope: !4320, inlinedAt: !4121)
!5009 = !DILocation(line: 788, column: 94, scope: !4320, inlinedAt: !4121)
!5010 = !DILocation(line: 788, column: 88, scope: !4320, inlinedAt: !4121)
!5011 = !DILocation(line: 788, column: 86, scope: !4320, inlinedAt: !4121)
!5012 = !DILocation(line: 788, column: 115, scope: !4320, inlinedAt: !4121)
!5013 = !DILocation(line: 788, column: 109, scope: !4320, inlinedAt: !4121)
!5014 = !DILocation(line: 788, column: 107, scope: !4320, inlinedAt: !4121)
!5015 = !DILocation(line: 788, column: 130, scope: !4320, inlinedAt: !4121)
!5016 = !DILocation(line: 788, column: 140, scope: !4320, inlinedAt: !4121)
!5017 = !DILocation(line: 788, column: 144, scope: !4320, inlinedAt: !4121)
!5018 = !DILocation(line: 788, column: 147, scope: !4334, inlinedAt: !4121)
!5019 = !DILocation(line: 788, column: 149, scope: !4334, inlinedAt: !4121)
!5020 = !DILocation(line: 788, column: 130, scope: !4334, inlinedAt: !4121)
!5021 = !DILocation(line: 788, column: 169, scope: !4338, inlinedAt: !4121)
!5022 = !DILocation(line: 788, column: 187, scope: !4338, inlinedAt: !4121)
!5023 = !DILocation(line: 788, column: 199, scope: !4338, inlinedAt: !4121)
!5024 = !DILocation(line: 788, column: 196, scope: !4338, inlinedAt: !4121)
!5025 = !DILocation(line: 788, column: 184, scope: !4338, inlinedAt: !4121)
!5026 = !DILocation(line: 788, column: 168, scope: !4338, inlinedAt: !4121)
!5027 = !DILocation(line: 788, column: 209, scope: !4345, inlinedAt: !4121)
!5028 = !DILocation(line: 788, column: 221, scope: !4345, inlinedAt: !4121)
!5029 = !DILocation(line: 788, column: 218, scope: !4345, inlinedAt: !4121)
!5030 = !DILocation(line: 788, column: 168, scope: !4345, inlinedAt: !4121)
!5031 = !DILocation(line: 788, column: 231, scope: !4350, inlinedAt: !4121)
!5032 = !DILocation(line: 788, column: 168, scope: !4350, inlinedAt: !4121)
!5033 = !DILocation(line: 788, column: 168, scope: !4129, inlinedAt: !4121)
!5034 = !DILocation(line: 788, column: 165, scope: !4129, inlinedAt: !4121)
!5035 = !DILocation(line: 788, column: 303, scope: !4129, inlinedAt: !4121)
!5036 = !DILocation(line: 788, column: 307, scope: !4129, inlinedAt: !4121)
!5037 = !DILocation(line: 788, column: 317, scope: !4129, inlinedAt: !4121)
!5038 = !DILocation(line: 788, column: 326, scope: !4129, inlinedAt: !4121)
!5039 = !DILocation(line: 788, column: 314, scope: !4129, inlinedAt: !4121)
!5040 = !DILocation(line: 788, column: 335, scope: !4129, inlinedAt: !4121)
!5041 = !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !4121)
!5042 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4128)
!5043 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4128)
!5044 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4128)
!5045 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4128)
!5046 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4128)
!5047 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4128)
!5048 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4128)
!5049 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4128)
!5050 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4128)
!5051 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4128)
!5052 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4128)
!5053 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4128)
!5054 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4128)
!5055 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4128)
!5056 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4128)
!5057 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4128)
!5058 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4128)
!5059 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4128)
!5060 = !DILocation(line: 788, column: 343, scope: !4129, inlinedAt: !4121)
!5061 = !DILocation(line: 788, column: 352, scope: !4129, inlinedAt: !4121)
!5062 = !DILocation(line: 788, column: 339, scope: !4129, inlinedAt: !4121)
!5063 = !DILocation(line: 788, column: 257, scope: !4129, inlinedAt: !4121)
!5064 = !DILocation(line: 788, column: 369, scope: !4129, inlinedAt: !4121)
!5065 = !DILocation(line: 788, column: 368, scope: !4129, inlinedAt: !4121)
!5066 = !DILocation(line: 788, column: 366, scope: !4129, inlinedAt: !4121)
!5067 = !DILocation(line: 788, column: 390, scope: !4129, inlinedAt: !4121)
!5068 = !DILocation(line: 788, column: 400, scope: !4129, inlinedAt: !4121)
!5069 = !DILocation(line: 788, column: 380, scope: !4389, inlinedAt: !4121)
!5070 = !DILocation(line: 788, column: 411, scope: !4129, inlinedAt: !4121)
!5071 = !DILocation(line: 788, column: 409, scope: !4129, inlinedAt: !4121)
!5072 = !DILocation(line: 788, column: 378, scope: !4129, inlinedAt: !4121)
!5073 = !DILocation(line: 788, column: 430, scope: !4129, inlinedAt: !4121)
!5074 = !DILocation(line: 788, column: 424, scope: !4129, inlinedAt: !4121)
!5075 = !DILocation(line: 788, column: 422, scope: !4129, inlinedAt: !4121)
!5076 = !DILocation(line: 788, column: 451, scope: !4129, inlinedAt: !4121)
!5077 = !DILocation(line: 788, column: 445, scope: !4129, inlinedAt: !4121)
!5078 = !DILocation(line: 788, column: 443, scope: !4129, inlinedAt: !4121)
!5079 = !DILocation(line: 788, column: 466, scope: !4129, inlinedAt: !4121)
!5080 = !DILocation(line: 788, column: 476, scope: !4129, inlinedAt: !4121)
!5081 = !DILocation(line: 788, column: 480, scope: !4129, inlinedAt: !4121)
!5082 = !DILocation(line: 788, column: 483, scope: !4403, inlinedAt: !4121)
!5083 = !DILocation(line: 788, column: 485, scope: !4403, inlinedAt: !4121)
!5084 = !DILocation(line: 788, column: 466, scope: !4403, inlinedAt: !4121)
!5085 = !DILocation(line: 788, column: 505, scope: !4407, inlinedAt: !4121)
!5086 = !DILocation(line: 788, column: 523, scope: !4407, inlinedAt: !4121)
!5087 = !DILocation(line: 788, column: 535, scope: !4407, inlinedAt: !4121)
!5088 = !DILocation(line: 788, column: 532, scope: !4407, inlinedAt: !4121)
!5089 = !DILocation(line: 788, column: 520, scope: !4407, inlinedAt: !4121)
!5090 = !DILocation(line: 788, column: 504, scope: !4407, inlinedAt: !4121)
!5091 = !DILocation(line: 788, column: 548, scope: !4414, inlinedAt: !4121)
!5092 = !DILocation(line: 788, column: 560, scope: !4414, inlinedAt: !4121)
!5093 = !DILocation(line: 788, column: 557, scope: !4414, inlinedAt: !4121)
!5094 = !DILocation(line: 788, column: 504, scope: !4414, inlinedAt: !4121)
!5095 = !DILocation(line: 788, column: 573, scope: !4419, inlinedAt: !4121)
!5096 = !DILocation(line: 788, column: 504, scope: !4419, inlinedAt: !4121)
!5097 = !DILocation(line: 788, column: 504, scope: !4112, inlinedAt: !4121)
!5098 = !DILocation(line: 788, column: 501, scope: !4112, inlinedAt: !4121)
!5099 = !DILocation(line: 788, column: 645, scope: !4112, inlinedAt: !4121)
!5100 = !DILocation(line: 788, column: 649, scope: !4112, inlinedAt: !4121)
!5101 = !DILocation(line: 788, column: 659, scope: !4112, inlinedAt: !4121)
!5102 = !DILocation(line: 788, column: 668, scope: !4112, inlinedAt: !4121)
!5103 = !DILocation(line: 788, column: 656, scope: !4112, inlinedAt: !4121)
!5104 = !DILocation(line: 788, column: 677, scope: !4112, inlinedAt: !4121)
!5105 = !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !4121)
!5106 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !4111)
!5107 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !4111)
!5108 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !4111)
!5109 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !4111)
!5110 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !4111)
!5111 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !4111)
!5112 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !4111)
!5113 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !4111)
!5114 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !4111)
!5115 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !4111)
!5116 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !4111)
!5117 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !4111)
!5118 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !4111)
!5119 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !4111)
!5120 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !4111)
!5121 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !4111)
!5122 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !4111)
!5123 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !4111)
!5124 = !DILocation(line: 788, column: 685, scope: !4112, inlinedAt: !4121)
!5125 = !DILocation(line: 788, column: 694, scope: !4112, inlinedAt: !4121)
!5126 = !DILocation(line: 788, column: 681, scope: !4112, inlinedAt: !4121)
!5127 = !DILocation(line: 788, column: 599, scope: !4112, inlinedAt: !4121)
!5128 = !DILocation(line: 788, column: 711, scope: !4112, inlinedAt: !4121)
!5129 = !DILocation(line: 788, column: 710, scope: !4112, inlinedAt: !4121)
!5130 = !DILocation(line: 788, column: 708, scope: !4112, inlinedAt: !4121)
!5131 = !DILocation(line: 788, column: 732, scope: !4112, inlinedAt: !4121)
!5132 = !DILocation(line: 788, column: 742, scope: !4112, inlinedAt: !4121)
!5133 = !DILocation(line: 788, column: 722, scope: !4458, inlinedAt: !4121)
!5134 = !DILocation(line: 788, column: 753, scope: !4112, inlinedAt: !4121)
!5135 = !DILocation(line: 788, column: 751, scope: !4112, inlinedAt: !4121)
!5136 = !DILocation(line: 788, column: 720, scope: !4112, inlinedAt: !4121)
!5137 = !DILocation(line: 788, column: 772, scope: !4112, inlinedAt: !4121)
!5138 = !DILocation(line: 788, column: 766, scope: !4112, inlinedAt: !4121)
!5139 = !DILocation(line: 788, column: 764, scope: !4112, inlinedAt: !4121)
!5140 = !DILocation(line: 788, column: 793, scope: !4112, inlinedAt: !4121)
!5141 = !DILocation(line: 788, column: 787, scope: !4112, inlinedAt: !4121)
!5142 = !DILocation(line: 788, column: 785, scope: !4112, inlinedAt: !4121)
!5143 = !DILocation(line: 788, column: 804, scope: !4112, inlinedAt: !4121)
!5144 = !DILocation(line: 788, column: 806, scope: !4470, inlinedAt: !4121)
!5145 = !DILocation(line: 788, column: 827, scope: !4472, inlinedAt: !4121)
!5146 = !DILocation(line: 788, column: 822, scope: !4472, inlinedAt: !4121)
!5147 = !DILocation(line: 788, column: 844, scope: !4472, inlinedAt: !4121)
!5148 = !DILocation(line: 788, column: 862, scope: !4472, inlinedAt: !4121)
!5149 = !DILocation(line: 788, column: 874, scope: !4472, inlinedAt: !4121)
!5150 = !DILocation(line: 788, column: 871, scope: !4472, inlinedAt: !4121)
!5151 = !DILocation(line: 788, column: 859, scope: !4472, inlinedAt: !4121)
!5152 = !DILocation(line: 788, column: 843, scope: !4472, inlinedAt: !4121)
!5153 = !DILocation(line: 788, column: 881, scope: !4482, inlinedAt: !4121)
!5154 = !DILocation(line: 788, column: 893, scope: !4482, inlinedAt: !4121)
!5155 = !DILocation(line: 788, column: 890, scope: !4482, inlinedAt: !4121)
!5156 = !DILocation(line: 788, column: 843, scope: !4482, inlinedAt: !4121)
!5157 = !DILocation(line: 788, column: 900, scope: !4487, inlinedAt: !4121)
!5158 = !DILocation(line: 788, column: 843, scope: !4487, inlinedAt: !4121)
!5159 = !DILocation(line: 788, column: 843, scope: !4490, inlinedAt: !4121)
!5160 = !DILocation(line: 788, column: 840, scope: !4490, inlinedAt: !4121)
!5161 = !DILocation(line: 790, column: 18, scope: !4118, inlinedAt: !4121)
!5162 = !DILocation(line: 790, column: 6, scope: !4118, inlinedAt: !4121)
!5163 = !DILocation(line: 790, column: 10, scope: !4118, inlinedAt: !4121)
!5164 = !DILocation(line: 790, column: 16, scope: !4118, inlinedAt: !4121)
!5165 = !DILocation(line: 792, column: 12, scope: !4118, inlinedAt: !4121)
!5166 = !DILocation(line: 317, column: 46, scope: !4122)
!5167 = !DILocation(line: 318, column: 34, scope: !4122)
!5168 = !DILocation(line: 318, column: 47, scope: !4122)
!5169 = !DILocation(line: 318, column: 44, scope: !4122)
!5170 = !DILocation(line: 318, column: 52, scope: !4122)
!5171 = !DILocation(line: 318, column: 38, scope: !4122)
!5172 = !DILocation(line: 318, column: 29, scope: !4122)
!5173 = !DILocation(line: 318, column: 13, scope: !4122)
!5174 = !DILocation(line: 318, column: 16, scope: !4122)
!5175 = !DILocation(line: 318, column: 32, scope: !4122)
!5176 = !DILocation(line: 319, column: 9, scope: !4122)
!5177 = !DILocation(line: 316, column: 40, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !4123, file: !925, discriminator: 2)
!5179 = !DILocation(line: 316, column: 9, scope: !5178)
!5180 = distinct !{!5180, !5181}
!5181 = !DILocation(line: 316, column: 9, scope: !4125)
!5182 = !DILocalVariable(name: "i", scope: !5183, file: !925, line: 321, type: !904)
!5183 = distinct !DILexicalBlock(scope: !4125, file: !925, line: 321, column: 9)
!5184 = !DILocation(line: 321, column: 18, scope: !5183)
!5185 = !DILocation(line: 321, column: 14, scope: !5183)
!5186 = !DILocation(line: 321, column: 25, scope: !5187)
!5187 = !DILexicalBlockFile(scope: !5188, file: !925, discriminator: 1)
!5188 = distinct !DILexicalBlock(scope: !5183, file: !925, line: 321, column: 9)
!5189 = !DILocation(line: 321, column: 29, scope: !5187)
!5190 = !DILocation(line: 321, column: 27, scope: !5187)
!5191 = !DILocation(line: 321, column: 9, scope: !5187)
!5192 = !DILocation(line: 322, column: 35, scope: !5188)
!5193 = !DILocation(line: 322, column: 51, scope: !5188)
!5194 = !DILocation(line: 322, column: 42, scope: !5188)
!5195 = !DILocation(line: 322, column: 40, scope: !5188)
!5196 = !DILocation(line: 322, column: 29, scope: !5188)
!5197 = !DILocation(line: 322, column: 13, scope: !5188)
!5198 = !DILocation(line: 322, column: 16, scope: !5188)
!5199 = !DILocation(line: 322, column: 32, scope: !5188)
!5200 = !DILocation(line: 321, column: 40, scope: !5201)
!5201 = !DILexicalBlockFile(scope: !5188, file: !925, discriminator: 2)
!5202 = !DILocation(line: 321, column: 9, scope: !5201)
!5203 = distinct !{!5203, !5204}
!5204 = !DILocation(line: 321, column: 9, scope: !4125)
!5205 = !DILocalVariable(name: "i", scope: !5206, file: !925, line: 324, type: !904)
!5206 = distinct !DILexicalBlock(scope: !4125, file: !925, line: 324, column: 9)
!5207 = !DILocation(line: 324, column: 18, scope: !5206)
!5208 = !DILocation(line: 324, column: 22, scope: !5206)
!5209 = !DILocation(line: 324, column: 14, scope: !5206)
!5210 = !DILocation(line: 324, column: 32, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !5212, file: !925, discriminator: 1)
!5212 = distinct !DILexicalBlock(scope: !5206, file: !925, line: 324, column: 9)
!5213 = !DILocation(line: 324, column: 36, scope: !5211)
!5214 = !DILocation(line: 324, column: 39, scope: !5211)
!5215 = !DILocation(line: 324, column: 34, scope: !5211)
!5216 = !DILocation(line: 324, column: 9, scope: !5211)
!5217 = !DILocation(line: 325, column: 43, scope: !5212)
!5218 = !DILocation(line: 325, column: 34, scope: !5212)
!5219 = !DILocation(line: 325, column: 29, scope: !5212)
!5220 = !DILocation(line: 325, column: 13, scope: !5212)
!5221 = !DILocation(line: 325, column: 16, scope: !5212)
!5222 = !DILocation(line: 325, column: 32, scope: !5212)
!5223 = !DILocation(line: 324, column: 57, scope: !5224)
!5224 = !DILexicalBlockFile(scope: !5212, file: !925, discriminator: 2)
!5225 = !DILocation(line: 324, column: 9, scope: !5224)
!5226 = distinct !{!5226, !5227}
!5227 = !DILocation(line: 324, column: 9, scope: !4125)
!5228 = !DILocation(line: 326, column: 9, scope: !4125)
!5229 = !DILocalVariable(name: "i", scope: !5230, file: !925, line: 330, type: !904)
!5230 = distinct !DILexicalBlock(scope: !1855, file: !925, line: 330, column: 5)
!5231 = !DILocation(line: 330, column: 14, scope: !5230)
!5232 = !DILocation(line: 330, column: 10, scope: !5230)
!5233 = !DILocation(line: 330, column: 21, scope: !5234)
!5234 = !DILexicalBlockFile(scope: !5235, file: !925, discriminator: 1)
!5235 = distinct !DILexicalBlock(scope: !5230, file: !925, line: 330, column: 5)
!5236 = !DILocation(line: 330, column: 25, scope: !5234)
!5237 = !DILocation(line: 330, column: 28, scope: !5234)
!5238 = !DILocation(line: 330, column: 23, scope: !5234)
!5239 = !DILocation(line: 330, column: 5, scope: !5234)
!5240 = !DILocation(line: 331, column: 29, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5235, file: !925, line: 331, column: 13)
!5242 = !DILocation(line: 331, column: 13, scope: !5241)
!5243 = !DILocation(line: 331, column: 16, scope: !5241)
!5244 = !DILocation(line: 331, column: 32, scope: !5241)
!5245 = !DILocation(line: 331, column: 36, scope: !5241)
!5246 = !DILocation(line: 331, column: 55, scope: !5247)
!5247 = !DILexicalBlockFile(scope: !5241, file: !925, discriminator: 1)
!5248 = !DILocation(line: 331, column: 39, scope: !5247)
!5249 = !DILocation(line: 331, column: 42, scope: !5247)
!5250 = !DILocation(line: 331, column: 58, scope: !5247)
!5251 = !DILocation(line: 331, column: 13, scope: !5247)
!5252 = !DILocation(line: 332, column: 13, scope: !5241)
!5253 = !DILocation(line: 331, column: 60, scope: !5254)
!5254 = !DILexicalBlockFile(scope: !5241, file: !925, discriminator: 2)
!5255 = !DILocation(line: 330, column: 46, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5235, file: !925, discriminator: 2)
!5257 = !DILocation(line: 330, column: 5, scope: !5256)
!5258 = distinct !{!5258, !5259}
!5259 = !DILocation(line: 330, column: 5, scope: !1855)
!5260 = !DILocation(line: 334, column: 12, scope: !1855)
!5261 = !DILocation(line: 334, column: 15, scope: !1855)
!5262 = !DILocation(line: 334, column: 5, scope: !1855)
!5263 = !DILocation(line: 334, column: 34, scope: !1855)
!5264 = !DILocation(line: 334, column: 37, scope: !1855)
!5265 = !DILocation(line: 336, column: 5, scope: !1855)
!5266 = !DILocation(line: 337, column: 1, scope: !1855)
!5267 = distinct !DISubprogram(name: "calc_precision", scope: !925, file: !925, line: 146, type: !3574, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!5268 = !DILocalVariable(name: "s", arg: 1, scope: !5267, file: !925, line: 146, type: !1858)
!5269 = !DILocation(line: 146, column: 50, scope: !5267)
!5270 = !DILocalVariable(name: "b", arg: 2, scope: !5267, file: !925, line: 146, type: !2030)
!5271 = !DILocation(line: 146, column: 70, scope: !5267)
!5272 = !DILocalVariable(name: "c", arg: 3, scope: !5267, file: !925, line: 147, type: !2031)
!5273 = !DILocation(line: 147, column: 54, scope: !5267)
!5274 = !DILocation(line: 149, column: 12, scope: !5267)
!5275 = !DILocation(line: 149, column: 15, scope: !5267)
!5276 = !DILocation(line: 149, column: 5, scope: !5267)
!5277 = !DILocalVariable(name: "i", scope: !5278, file: !925, line: 150, type: !904)
!5278 = distinct !DILexicalBlock(scope: !5267, file: !925, line: 150, column: 5)
!5279 = !DILocation(line: 150, column: 14, scope: !5278)
!5280 = !DILocation(line: 150, column: 10, scope: !5278)
!5281 = !DILocation(line: 150, column: 21, scope: !5282)
!5282 = !DILexicalBlockFile(scope: !5283, file: !925, discriminator: 1)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !925, line: 150, column: 5)
!5284 = !DILocation(line: 150, column: 25, scope: !5282)
!5285 = !DILocation(line: 150, column: 28, scope: !5282)
!5286 = !DILocation(line: 150, column: 23, scope: !5282)
!5287 = !DILocation(line: 150, column: 5, scope: !5282)
!5288 = !DILocalVariable(name: "delta", scope: !5289, file: !925, line: 151, type: !951)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !925, line: 150, column: 45)
!5290 = !DILocation(line: 151, column: 19, scope: !5289)
!5291 = !DILocation(line: 151, column: 45, scope: !5289)
!5292 = !DILocation(line: 151, column: 29, scope: !5289)
!5293 = !DILocation(line: 151, column: 32, scope: !5289)
!5294 = !DILocation(line: 151, column: 66, scope: !5289)
!5295 = !DILocation(line: 151, column: 68, scope: !5289)
!5296 = !DILocation(line: 151, column: 50, scope: !5289)
!5297 = !DILocation(line: 151, column: 53, scope: !5289)
!5298 = !DILocation(line: 151, column: 48, scope: !5289)
!5299 = !DILocation(line: 151, column: 74, scope: !5289)
!5300 = !DILocation(line: 151, column: 28, scope: !5289)
!5301 = !DILocation(line: 151, column: 98, scope: !5302)
!5302 = !DILexicalBlockFile(scope: !5289, file: !925, discriminator: 1)
!5303 = !DILocation(line: 151, column: 82, scope: !5302)
!5304 = !DILocation(line: 151, column: 85, scope: !5302)
!5305 = !DILocation(line: 151, column: 119, scope: !5302)
!5306 = !DILocation(line: 151, column: 121, scope: !5302)
!5307 = !DILocation(line: 151, column: 103, scope: !5302)
!5308 = !DILocation(line: 151, column: 106, scope: !5302)
!5309 = !DILocation(line: 151, column: 101, scope: !5302)
!5310 = !DILocation(line: 151, column: 28, scope: !5302)
!5311 = !DILocation(line: 151, column: 148, scope: !5312)
!5312 = !DILexicalBlockFile(scope: !5289, file: !925, discriminator: 2)
!5313 = !DILocation(line: 151, column: 132, scope: !5312)
!5314 = !DILocation(line: 151, column: 135, scope: !5312)
!5315 = !DILocation(line: 151, column: 169, scope: !5312)
!5316 = !DILocation(line: 151, column: 171, scope: !5312)
!5317 = !DILocation(line: 151, column: 153, scope: !5312)
!5318 = !DILocation(line: 151, column: 156, scope: !5312)
!5319 = !DILocation(line: 151, column: 151, scope: !5312)
!5320 = !DILocation(line: 151, column: 130, scope: !5312)
!5321 = !DILocation(line: 151, column: 28, scope: !5312)
!5322 = !DILocation(line: 151, column: 28, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5289, file: !925, discriminator: 3)
!5324 = !DILocation(line: 151, column: 179, scope: !5323)
!5325 = !DILocation(line: 151, column: 19, scope: !5323)
!5326 = !DILocation(line: 152, column: 13, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5289, file: !925, line: 152, column: 13)
!5328 = !DILocation(line: 152, column: 19, scope: !5327)
!5329 = !DILocation(line: 152, column: 13, scope: !5289)
!5330 = !DILocalVariable(name: "neg", scope: !5331, file: !925, line: 153, type: !951)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !925, line: 152, column: 24)
!5332 = !DILocation(line: 153, column: 23, scope: !5331)
!5333 = !DILocation(line: 153, column: 45, scope: !5331)
!5334 = !DILocation(line: 153, column: 47, scope: !5331)
!5335 = !DILocation(line: 153, column: 29, scope: !5331)
!5336 = !DILocation(line: 153, column: 32, scope: !5331)
!5337 = !DILocation(line: 153, column: 70, scope: !5331)
!5338 = !DILocation(line: 153, column: 54, scope: !5331)
!5339 = !DILocation(line: 153, column: 57, scope: !5331)
!5340 = !DILocation(line: 153, column: 52, scope: !5331)
!5341 = !DILocation(line: 154, column: 45, scope: !5331)
!5342 = !DILocation(line: 154, column: 52, scope: !5331)
!5343 = !DILocation(line: 154, column: 44, scope: !5331)
!5344 = !DILocation(line: 154, column: 44, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !5331, file: !925, discriminator: 1)
!5346 = !DILocation(line: 154, column: 67, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5331, file: !925, discriminator: 2)
!5348 = !DILocation(line: 154, column: 44, scope: !5347)
!5349 = !DILocation(line: 154, column: 44, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !5331, file: !925, discriminator: 3)
!5351 = !DILocation(line: 154, column: 31, scope: !5350)
!5352 = !DILocation(line: 154, column: 35, scope: !5350)
!5353 = !DILocation(line: 154, column: 33, scope: !5350)
!5354 = !DILocation(line: 154, column: 13, scope: !5350)
!5355 = !DILocation(line: 154, column: 16, scope: !5350)
!5356 = !DILocation(line: 154, column: 40, scope: !5350)
!5357 = !DILocation(line: 155, column: 9, scope: !5331)
!5358 = !DILocation(line: 156, column: 5, scope: !5289)
!5359 = !DILocation(line: 150, column: 41, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !5283, file: !925, discriminator: 2)
!5361 = !DILocation(line: 150, column: 5, scope: !5360)
!5362 = distinct !{!5362, !5363}
!5363 = !DILocation(line: 150, column: 5, scope: !5267)
!5364 = !DILocation(line: 158, column: 9, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5267, file: !925, line: 158, column: 9)
!5366 = !DILocation(line: 158, column: 12, scope: !5365)
!5367 = !DILocation(line: 158, column: 9, scope: !5267)
!5368 = !DILocalVariable(name: "i", scope: !5369, file: !925, line: 159, type: !904)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !925, line: 159, column: 9)
!5370 = distinct !DILexicalBlock(scope: !5365, file: !925, line: 158, column: 23)
!5371 = !DILocation(line: 159, column: 18, scope: !5369)
!5372 = !DILocation(line: 159, column: 14, scope: !5369)
!5373 = !DILocation(line: 159, column: 25, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5375, file: !925, discriminator: 1)
!5375 = distinct !DILexicalBlock(scope: !5369, file: !925, line: 159, column: 9)
!5376 = !DILocation(line: 159, column: 29, scope: !5374)
!5377 = !DILocation(line: 159, column: 32, scope: !5374)
!5378 = !DILocation(line: 159, column: 27, scope: !5374)
!5379 = !DILocation(line: 159, column: 9, scope: !5374)
!5380 = !DILocation(line: 160, column: 54, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5375, file: !925, line: 159, column: 49)
!5382 = !DILocation(line: 160, column: 38, scope: !5381)
!5383 = !DILocation(line: 160, column: 41, scope: !5381)
!5384 = !DILocation(line: 160, column: 33, scope: !5381)
!5385 = !DILocation(line: 160, column: 13, scope: !5381)
!5386 = !DILocation(line: 160, column: 16, scope: !5381)
!5387 = !DILocation(line: 160, column: 36, scope: !5381)
!5388 = !DILocation(line: 161, column: 57, scope: !5381)
!5389 = !DILocation(line: 161, column: 39, scope: !5381)
!5390 = !DILocation(line: 161, column: 42, scope: !5381)
!5391 = !DILocation(line: 161, column: 74, scope: !5381)
!5392 = !DILocation(line: 161, column: 62, scope: !5381)
!5393 = !DILocation(line: 161, column: 65, scope: !5381)
!5394 = !DILocation(line: 161, column: 60, scope: !5381)
!5395 = !DILocation(line: 161, column: 33, scope: !5381)
!5396 = !DILocation(line: 161, column: 13, scope: !5381)
!5397 = !DILocation(line: 161, column: 16, scope: !5381)
!5398 = !DILocation(line: 161, column: 36, scope: !5381)
!5399 = !DILocation(line: 162, column: 37, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5381, file: !925, line: 162, column: 17)
!5401 = !DILocation(line: 162, column: 17, scope: !5400)
!5402 = !DILocation(line: 162, column: 20, scope: !5400)
!5403 = !DILocation(line: 162, column: 40, scope: !5400)
!5404 = !DILocation(line: 162, column: 17, scope: !5381)
!5405 = !DILocation(line: 163, column: 17, scope: !5400)
!5406 = !DILocation(line: 164, column: 21, scope: !5381)
!5407 = !DILocation(line: 164, column: 24, scope: !5381)
!5408 = !DILocation(line: 164, column: 13, scope: !5381)
!5409 = !DILocation(line: 166, column: 37, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5381, file: !925, line: 164, column: 35)
!5411 = !DILocation(line: 166, column: 17, scope: !5410)
!5412 = !DILocation(line: 166, column: 20, scope: !5410)
!5413 = !DILocation(line: 166, column: 40, scope: !5410)
!5414 = !DILocation(line: 167, column: 17, scope: !5410)
!5415 = !DILocation(line: 169, column: 67, scope: !5410)
!5416 = !DILocation(line: 169, column: 47, scope: !5410)
!5417 = !DILocation(line: 169, column: 50, scope: !5410)
!5418 = !DILocation(line: 169, column: 45, scope: !5410)
!5419 = !DILocation(line: 169, column: 71, scope: !5410)
!5420 = !DILocation(line: 169, column: 37, scope: !5410)
!5421 = !DILocation(line: 169, column: 17, scope: !5410)
!5422 = !DILocation(line: 169, column: 20, scope: !5410)
!5423 = !DILocation(line: 169, column: 40, scope: !5410)
!5424 = !DILocation(line: 170, column: 17, scope: !5410)
!5425 = !DILocation(line: 172, column: 37, scope: !5410)
!5426 = !DILocation(line: 172, column: 17, scope: !5410)
!5427 = !DILocation(line: 172, column: 20, scope: !5410)
!5428 = !DILocation(line: 172, column: 40, scope: !5410)
!5429 = !DILocation(line: 173, column: 17, scope: !5410)
!5430 = !DILocation(line: 175, column: 9, scope: !5381)
!5431 = !DILocation(line: 159, column: 45, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !5375, file: !925, discriminator: 2)
!5433 = !DILocation(line: 159, column: 9, scope: !5432)
!5434 = distinct !{!5434, !5435}
!5435 = !DILocation(line: 159, column: 9, scope: !5370)
!5436 = !DILocation(line: 176, column: 5, scope: !5370)
!5437 = !DILocalVariable(name: "i", scope: !5438, file: !925, line: 177, type: !904)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !925, line: 177, column: 9)
!5439 = distinct !DILexicalBlock(scope: !5365, file: !925, line: 176, column: 12)
!5440 = !DILocation(line: 177, column: 18, scope: !5438)
!5441 = !DILocation(line: 177, column: 14, scope: !5438)
!5442 = !DILocation(line: 177, column: 25, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !5444, file: !925, discriminator: 1)
!5444 = distinct !DILexicalBlock(scope: !5438, file: !925, line: 177, column: 9)
!5445 = !DILocation(line: 177, column: 29, scope: !5443)
!5446 = !DILocation(line: 177, column: 32, scope: !5443)
!5447 = !DILocation(line: 177, column: 27, scope: !5443)
!5448 = !DILocation(line: 177, column: 9, scope: !5443)
!5449 = !DILocation(line: 178, column: 54, scope: !5444)
!5450 = !DILocation(line: 178, column: 38, scope: !5444)
!5451 = !DILocation(line: 178, column: 41, scope: !5444)
!5452 = !DILocation(line: 178, column: 71, scope: !5444)
!5453 = !DILocation(line: 178, column: 59, scope: !5444)
!5454 = !DILocation(line: 178, column: 62, scope: !5444)
!5455 = !DILocation(line: 178, column: 57, scope: !5444)
!5456 = !DILocation(line: 178, column: 33, scope: !5444)
!5457 = !DILocation(line: 178, column: 13, scope: !5444)
!5458 = !DILocation(line: 178, column: 16, scope: !5444)
!5459 = !DILocation(line: 178, column: 36, scope: !5444)
!5460 = !DILocation(line: 177, column: 45, scope: !5461)
!5461 = !DILexicalBlockFile(scope: !5444, file: !925, discriminator: 2)
!5462 = !DILocation(line: 177, column: 9, scope: !5461)
!5463 = distinct !{!5463, !5464}
!5464 = !DILocation(line: 177, column: 9, scope: !5439)
!5465 = !DILocalVariable(name: "i", scope: !5466, file: !925, line: 182, type: !904)
!5466 = distinct !DILexicalBlock(scope: !5267, file: !925, line: 182, column: 5)
!5467 = !DILocation(line: 182, column: 14, scope: !5466)
!5468 = !DILocation(line: 182, column: 10, scope: !5466)
!5469 = !DILocation(line: 182, column: 21, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5471, file: !925, discriminator: 1)
!5471 = distinct !DILexicalBlock(scope: !5466, file: !925, line: 182, column: 5)
!5472 = !DILocation(line: 182, column: 25, scope: !5470)
!5473 = !DILocation(line: 182, column: 28, scope: !5470)
!5474 = !DILocation(line: 182, column: 23, scope: !5470)
!5475 = !DILocation(line: 182, column: 5, scope: !5470)
!5476 = !DILocation(line: 183, column: 56, scope: !5471)
!5477 = !DILocation(line: 183, column: 36, scope: !5471)
!5478 = !DILocation(line: 183, column: 39, scope: !5471)
!5479 = !DILocation(line: 183, column: 60, scope: !5471)
!5480 = !DILocation(line: 183, column: 35, scope: !5471)
!5481 = !DILocation(line: 183, column: 89, scope: !5470)
!5482 = !DILocation(line: 183, column: 69, scope: !5470)
!5483 = !DILocation(line: 183, column: 72, scope: !5470)
!5484 = !DILocation(line: 183, column: 35, scope: !5470)
!5485 = !DILocation(line: 183, column: 35, scope: !5486)
!5486 = !DILexicalBlockFile(scope: !5471, file: !925, discriminator: 2)
!5487 = !DILocation(line: 183, column: 35, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5471, file: !925, discriminator: 3)
!5489 = !DILocation(line: 183, column: 29, scope: !5488)
!5490 = !DILocation(line: 183, column: 9, scope: !5488)
!5491 = !DILocation(line: 183, column: 12, scope: !5488)
!5492 = !DILocation(line: 183, column: 32, scope: !5488)
!5493 = !DILocation(line: 182, column: 41, scope: !5486)
!5494 = !DILocation(line: 182, column: 5, scope: !5486)
!5495 = distinct !{!5495, !5496}
!5496 = !DILocation(line: 182, column: 5, scope: !5267)
!5497 = !DILocalVariable(name: "i", scope: !5498, file: !925, line: 185, type: !904)
!5498 = distinct !DILexicalBlock(scope: !5267, file: !925, line: 185, column: 5)
!5499 = !DILocation(line: 185, column: 14, scope: !5498)
!5500 = !DILocation(line: 185, column: 10, scope: !5498)
!5501 = !DILocation(line: 185, column: 21, scope: !5502)
!5502 = !DILexicalBlockFile(scope: !5503, file: !925, discriminator: 1)
!5503 = distinct !DILexicalBlock(scope: !5498, file: !925, line: 185, column: 5)
!5504 = !DILocation(line: 185, column: 25, scope: !5502)
!5505 = !DILocation(line: 185, column: 28, scope: !5502)
!5506 = !DILocation(line: 185, column: 23, scope: !5502)
!5507 = !DILocation(line: 185, column: 5, scope: !5502)
!5508 = !DILocation(line: 186, column: 29, scope: !5503)
!5509 = !DILocation(line: 186, column: 9, scope: !5503)
!5510 = !DILocation(line: 186, column: 12, scope: !5503)
!5511 = !DILocation(line: 186, column: 31, scope: !5503)
!5512 = !DILocation(line: 185, column: 44, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5503, file: !925, discriminator: 2)
!5514 = !DILocation(line: 185, column: 5, scope: !5513)
!5515 = distinct !{!5515, !5516}
!5516 = !DILocation(line: 185, column: 5, scope: !5267)
!5517 = !DILocalVariable(name: "i", scope: !5518, file: !925, line: 188, type: !904)
!5518 = distinct !DILexicalBlock(scope: !5267, file: !925, line: 188, column: 5)
!5519 = !DILocation(line: 188, column: 14, scope: !5518)
!5520 = !DILocation(line: 188, column: 10, scope: !5518)
!5521 = !DILocation(line: 188, column: 21, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5523, file: !925, discriminator: 1)
!5523 = distinct !DILexicalBlock(scope: !5518, file: !925, line: 188, column: 5)
!5524 = !DILocation(line: 188, column: 25, scope: !5522)
!5525 = !DILocation(line: 188, column: 28, scope: !5522)
!5526 = !DILocation(line: 188, column: 23, scope: !5522)
!5527 = !DILocation(line: 188, column: 5, scope: !5522)
!5528 = !DILocation(line: 189, column: 27, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5523, file: !925, line: 188, column: 45)
!5530 = !DILocation(line: 189, column: 9, scope: !5529)
!5531 = !DILocation(line: 189, column: 12, scope: !5529)
!5532 = !DILocation(line: 189, column: 30, scope: !5529)
!5533 = !DILocation(line: 190, column: 33, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5529, file: !925, line: 190, column: 13)
!5535 = !DILocation(line: 190, column: 13, scope: !5534)
!5536 = !DILocation(line: 190, column: 16, scope: !5534)
!5537 = !DILocation(line: 190, column: 36, scope: !5534)
!5538 = !DILocation(line: 190, column: 13, scope: !5529)
!5539 = !DILocation(line: 191, column: 56, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5534, file: !925, line: 190, column: 42)
!5541 = !DILocation(line: 191, column: 36, scope: !5540)
!5542 = !DILocation(line: 191, column: 39, scope: !5540)
!5543 = !DILocation(line: 191, column: 59, scope: !5540)
!5544 = !DILocation(line: 191, column: 31, scope: !5540)
!5545 = !DILocation(line: 191, column: 13, scope: !5540)
!5546 = !DILocation(line: 191, column: 16, scope: !5540)
!5547 = !DILocation(line: 191, column: 34, scope: !5540)
!5548 = !DILocation(line: 192, column: 33, scope: !5540)
!5549 = !DILocation(line: 192, column: 13, scope: !5540)
!5550 = !DILocation(line: 192, column: 16, scope: !5540)
!5551 = !DILocation(line: 192, column: 36, scope: !5540)
!5552 = !DILocation(line: 193, column: 9, scope: !5540)
!5553 = !DILocation(line: 194, column: 5, scope: !5529)
!5554 = !DILocation(line: 188, column: 41, scope: !5555)
!5555 = !DILexicalBlockFile(scope: !5523, file: !925, discriminator: 2)
!5556 = !DILocation(line: 188, column: 5, scope: !5555)
!5557 = distinct !{!5557, !5558}
!5558 = !DILocation(line: 188, column: 5, scope: !5267)
!5559 = !DILocation(line: 195, column: 1, scope: !5267)
!5560 = distinct !DISubprogram(name: "calc_codebook_idx", scope: !925, file: !925, line: 339, type: !3574, isLocal: true, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!5561 = !DILocalVariable(name: "s", arg: 1, scope: !5560, file: !925, line: 339, type: !1858)
!5562 = !DILocation(line: 339, column: 53, scope: !5560)
!5563 = !DILocalVariable(name: "b", arg: 2, scope: !5560, file: !925, line: 339, type: !2030)
!5564 = !DILocation(line: 339, column: 73, scope: !5560)
!5565 = !DILocalVariable(name: "c", arg: 3, scope: !5560, file: !925, line: 340, type: !2031)
!5566 = !DILocation(line: 340, column: 57, scope: !5560)
!5567 = !DILocalVariable(name: "avg", scope: !5560, file: !925, line: 342, type: !904)
!5568 = !DILocation(line: 342, column: 9, scope: !5560)
!5569 = !DILocalVariable(name: "last_sf", scope: !5560, file: !925, line: 343, type: !951)
!5570 = !DILocation(line: 343, column: 15, scope: !5560)
!5571 = !DILocation(line: 343, column: 41, scope: !5560)
!5572 = !DILocation(line: 343, column: 44, scope: !5560)
!5573 = !DILocation(line: 343, column: 25, scope: !5560)
!5574 = !DILocation(line: 343, column: 28, scope: !5560)
!5575 = !DILocation(line: 345, column: 12, scope: !5560)
!5576 = !DILocation(line: 345, column: 15, scope: !5560)
!5577 = !DILocation(line: 345, column: 5, scope: !5560)
!5578 = !DILocation(line: 347, column: 9, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5560, file: !925, line: 347, column: 9)
!5580 = !DILocation(line: 347, column: 12, scope: !5579)
!5581 = !DILocation(line: 347, column: 23, scope: !5579)
!5582 = !DILocation(line: 347, column: 9, scope: !5560)
!5583 = !DILocation(line: 348, column: 9, scope: !5579)
!5584 = !DILocation(line: 349, column: 9, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5560, file: !925, line: 349, column: 9)
!5586 = !DILocation(line: 349, column: 12, scope: !5585)
!5587 = !DILocation(line: 349, column: 27, scope: !5585)
!5588 = !DILocation(line: 349, column: 9, scope: !5560)
!5589 = !DILocation(line: 350, column: 9, scope: !5585)
!5590 = !DILocation(line: 352, column: 54, scope: !5560)
!5591 = !DILocation(line: 352, column: 57, scope: !5560)
!5592 = !DILocation(line: 352, column: 68, scope: !5560)
!5593 = !DILocation(line: 352, column: 38, scope: !5560)
!5594 = !DILocation(line: 352, column: 41, scope: !5560)
!5595 = !DILocation(line: 352, column: 21, scope: !5560)
!5596 = !DILocation(line: 352, column: 24, scope: !5560)
!5597 = !DILocation(line: 352, column: 5, scope: !5560)
!5598 = !DILocation(line: 352, column: 8, scope: !5560)
!5599 = !DILocation(line: 352, column: 36, scope: !5560)
!5600 = !DILocation(line: 354, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5560, file: !925, line: 354, column: 9)
!5602 = !DILocation(line: 354, column: 12, scope: !5601)
!5603 = !DILocation(line: 354, column: 23, scope: !5601)
!5604 = !DILocation(line: 354, column: 9, scope: !5560)
!5605 = !DILocalVariable(name: "i", scope: !5606, file: !925, line: 355, type: !904)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !925, line: 355, column: 9)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !925, line: 354, column: 29)
!5608 = !DILocation(line: 355, column: 18, scope: !5606)
!5609 = !DILocation(line: 355, column: 14, scope: !5606)
!5610 = !DILocation(line: 355, column: 25, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5612, file: !925, discriminator: 1)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !925, line: 355, column: 9)
!5613 = !DILocation(line: 355, column: 27, scope: !5611)
!5614 = !DILocation(line: 355, column: 9, scope: !5611)
!5615 = !DILocation(line: 356, column: 36, scope: !5612)
!5616 = !DILocation(line: 356, column: 20, scope: !5612)
!5617 = !DILocation(line: 356, column: 23, scope: !5612)
!5618 = !DILocation(line: 356, column: 17, scope: !5612)
!5619 = !DILocation(line: 356, column: 13, scope: !5612)
!5620 = !DILocation(line: 355, column: 34, scope: !5621)
!5621 = !DILexicalBlockFile(scope: !5612, file: !925, discriminator: 2)
!5622 = !DILocation(line: 355, column: 9, scope: !5621)
!5623 = distinct !{!5623, !5624}
!5624 = !DILocation(line: 355, column: 9, scope: !5607)
!5625 = !DILocation(line: 357, column: 16, scope: !5607)
!5626 = !DILocation(line: 357, column: 20, scope: !5607)
!5627 = !DILocation(line: 357, column: 25, scope: !5607)
!5628 = !DILocation(line: 357, column: 13, scope: !5607)
!5629 = !DILocation(line: 358, column: 5, scope: !5607)
!5630 = !DILocalVariable(name: "i", scope: !5631, file: !925, line: 360, type: !904)
!5631 = distinct !DILexicalBlock(scope: !5560, file: !925, line: 360, column: 5)
!5632 = !DILocation(line: 360, column: 14, scope: !5631)
!5633 = !DILocation(line: 360, column: 10, scope: !5631)
!5634 = !DILocation(line: 360, column: 21, scope: !5635)
!5635 = !DILexicalBlockFile(scope: !5636, file: !925, discriminator: 1)
!5636 = distinct !DILexicalBlock(scope: !5631, file: !925, line: 360, column: 5)
!5637 = !DILocation(line: 360, column: 25, scope: !5635)
!5638 = !DILocation(line: 360, column: 28, scope: !5635)
!5639 = !DILocation(line: 360, column: 23, scope: !5635)
!5640 = !DILocation(line: 360, column: 5, scope: !5635)
!5641 = !DILocalVariable(name: "prev", scope: !5642, file: !925, line: 361, type: !951)
!5642 = distinct !DILexicalBlock(scope: !5636, file: !925, line: 360, column: 45)
!5643 = !DILocation(line: 361, column: 19, scope: !5642)
!5644 = !DILocation(line: 361, column: 42, scope: !5642)
!5645 = !DILocation(line: 361, column: 44, scope: !5642)
!5646 = !DILocation(line: 361, column: 26, scope: !5642)
!5647 = !DILocation(line: 361, column: 29, scope: !5642)
!5648 = !DILocalVariable(name: "cur", scope: !5642, file: !925, line: 362, type: !951)
!5649 = !DILocation(line: 362, column: 19, scope: !5642)
!5650 = !DILocation(line: 362, column: 41, scope: !5642)
!5651 = !DILocation(line: 362, column: 25, scope: !5642)
!5652 = !DILocation(line: 362, column: 28, scope: !5642)
!5653 = !DILocalVariable(name: "next", scope: !5642, file: !925, line: 363, type: !951)
!5654 = !DILocation(line: 363, column: 19, scope: !5642)
!5655 = !DILocation(line: 363, column: 42, scope: !5642)
!5656 = !DILocation(line: 363, column: 44, scope: !5642)
!5657 = !DILocation(line: 363, column: 26, scope: !5642)
!5658 = !DILocation(line: 363, column: 29, scope: !5642)
!5659 = !DILocalVariable(name: "min", scope: !5642, file: !925, line: 364, type: !951)
!5660 = !DILocation(line: 364, column: 19, scope: !5642)
!5661 = !DILocation(line: 364, column: 27, scope: !5642)
!5662 = !DILocation(line: 364, column: 36, scope: !5642)
!5663 = !DILocation(line: 364, column: 33, scope: !5642)
!5664 = !DILocation(line: 364, column: 26, scope: !5642)
!5665 = !DILocation(line: 364, column: 45, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !5642, file: !925, discriminator: 1)
!5667 = !DILocation(line: 364, column: 26, scope: !5666)
!5668 = !DILocation(line: 364, column: 54, scope: !5669)
!5669 = !DILexicalBlockFile(scope: !5642, file: !925, discriminator: 2)
!5670 = !DILocation(line: 364, column: 26, scope: !5669)
!5671 = !DILocation(line: 364, column: 26, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !5642, file: !925, discriminator: 3)
!5673 = !DILocation(line: 364, column: 19, scope: !5672)
!5674 = !DILocation(line: 365, column: 14, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5642, file: !925, line: 365, column: 13)
!5676 = !DILocation(line: 365, column: 20, scope: !5675)
!5677 = !DILocation(line: 365, column: 18, scope: !5675)
!5678 = !DILocation(line: 365, column: 24, scope: !5675)
!5679 = !DILocation(line: 365, column: 29, scope: !5675)
!5680 = !DILocation(line: 365, column: 34, scope: !5681)
!5681 = !DILexicalBlockFile(scope: !5675, file: !925, discriminator: 1)
!5682 = !DILocation(line: 365, column: 33, scope: !5681)
!5683 = !DILocation(line: 365, column: 40, scope: !5681)
!5684 = !DILocation(line: 365, column: 38, scope: !5681)
!5685 = !DILocation(line: 365, column: 47, scope: !5681)
!5686 = !DILocation(line: 365, column: 45, scope: !5681)
!5687 = !DILocation(line: 365, column: 52, scope: !5681)
!5688 = !DILocation(line: 365, column: 13, scope: !5681)
!5689 = !DILocation(line: 366, column: 28, scope: !5675)
!5690 = !DILocation(line: 366, column: 13, scope: !5675)
!5691 = !DILocation(line: 366, column: 16, scope: !5675)
!5692 = !DILocation(line: 366, column: 31, scope: !5675)
!5693 = !DILocation(line: 367, column: 5, scope: !5642)
!5694 = !DILocation(line: 360, column: 41, scope: !5695)
!5695 = !DILexicalBlockFile(scope: !5636, file: !925, discriminator: 2)
!5696 = !DILocation(line: 360, column: 5, scope: !5695)
!5697 = distinct !{!5697, !5698}
!5698 = !DILocation(line: 360, column: 5, scope: !5560)
!5699 = !DILocalVariable(name: "i", scope: !5700, file: !925, line: 370, type: !904)
!5700 = distinct !DILexicalBlock(scope: !5560, file: !925, line: 370, column: 5)
!5701 = !DILocation(line: 370, column: 14, scope: !5700)
!5702 = !DILocation(line: 370, column: 10, scope: !5700)
!5703 = !DILocation(line: 370, column: 22, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !5705, file: !925, discriminator: 1)
!5705 = distinct !DILexicalBlock(scope: !5700, file: !925, line: 370, column: 5)
!5706 = !DILocation(line: 370, column: 26, scope: !5704)
!5707 = !DILocation(line: 370, column: 29, scope: !5704)
!5708 = !DILocation(line: 370, column: 24, scope: !5704)
!5709 = !DILocation(line: 370, column: 5, scope: !5704)
!5710 = !DILocalVariable(name: "cur", scope: !5711, file: !925, line: 371, type: !951)
!5711 = distinct !DILexicalBlock(scope: !5705, file: !925, line: 370, column: 46)
!5712 = !DILocation(line: 371, column: 19, scope: !5711)
!5713 = !DILocation(line: 371, column: 41, scope: !5711)
!5714 = !DILocation(line: 371, column: 25, scope: !5711)
!5715 = !DILocation(line: 371, column: 28, scope: !5711)
!5716 = !DILocalVariable(name: "cnd", scope: !5711, file: !925, line: 372, type: !951)
!5717 = !DILocation(line: 372, column: 19, scope: !5711)
!5718 = !DILocation(line: 372, column: 49, scope: !5711)
!5719 = !DILocation(line: 372, column: 25, scope: !5711)
!5720 = !DILocation(line: 372, column: 52, scope: !5711)
!5721 = !DILocalVariable(name: "min", scope: !5711, file: !925, line: 373, type: !951)
!5722 = !DILocation(line: 373, column: 19, scope: !5711)
!5723 = !DILocation(line: 373, column: 43, scope: !5711)
!5724 = !DILocation(line: 373, column: 45, scope: !5711)
!5725 = !DILocation(line: 373, column: 27, scope: !5711)
!5726 = !DILocation(line: 373, column: 30, scope: !5711)
!5727 = !DILocation(line: 373, column: 70, scope: !5711)
!5728 = !DILocation(line: 373, column: 72, scope: !5711)
!5729 = !DILocation(line: 373, column: 54, scope: !5711)
!5730 = !DILocation(line: 373, column: 57, scope: !5711)
!5731 = !DILocation(line: 373, column: 51, scope: !5711)
!5732 = !DILocation(line: 373, column: 26, scope: !5711)
!5733 = !DILocation(line: 373, column: 97, scope: !5734)
!5734 = !DILexicalBlockFile(scope: !5711, file: !925, discriminator: 1)
!5735 = !DILocation(line: 373, column: 99, scope: !5734)
!5736 = !DILocation(line: 373, column: 81, scope: !5734)
!5737 = !DILocation(line: 373, column: 84, scope: !5734)
!5738 = !DILocation(line: 373, column: 26, scope: !5734)
!5739 = !DILocation(line: 373, column: 124, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5711, file: !925, discriminator: 2)
!5741 = !DILocation(line: 373, column: 126, scope: !5740)
!5742 = !DILocation(line: 373, column: 108, scope: !5740)
!5743 = !DILocation(line: 373, column: 111, scope: !5740)
!5744 = !DILocation(line: 373, column: 26, scope: !5740)
!5745 = !DILocation(line: 373, column: 26, scope: !5746)
!5746 = !DILexicalBlockFile(scope: !5711, file: !925, discriminator: 3)
!5747 = !DILocation(line: 373, column: 19, scope: !5746)
!5748 = !DILocation(line: 374, column: 28, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5711, file: !925, line: 374, column: 13)
!5750 = !DILocation(line: 374, column: 13, scope: !5749)
!5751 = !DILocation(line: 374, column: 16, scope: !5749)
!5752 = !DILocation(line: 374, column: 13, scope: !5711)
!5753 = !DILocation(line: 375, column: 13, scope: !5749)
!5754 = !DILocation(line: 377, column: 32, scope: !5711)
!5755 = !DILocation(line: 377, column: 38, scope: !5711)
!5756 = !DILocation(line: 377, column: 36, scope: !5711)
!5757 = !DILocation(line: 377, column: 43, scope: !5711)
!5758 = !DILocation(line: 377, column: 49, scope: !5711)
!5759 = !DILocation(line: 377, column: 53, scope: !5734)
!5760 = !DILocation(line: 377, column: 61, scope: !5734)
!5761 = !DILocation(line: 377, column: 67, scope: !5734)
!5762 = !DILocation(line: 377, column: 65, scope: !5734)
!5763 = !DILocation(line: 377, column: 57, scope: !5734)
!5764 = !DILocation(line: 377, column: 49, scope: !5740)
!5765 = !DILocation(line: 377, column: 24, scope: !5740)
!5766 = !DILocation(line: 377, column: 9, scope: !5740)
!5767 = !DILocation(line: 377, column: 12, scope: !5740)
!5768 = !DILocation(line: 377, column: 27, scope: !5740)
!5769 = !DILocation(line: 378, column: 5, scope: !5711)
!5770 = !DILocation(line: 370, column: 42, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !5705, file: !925, discriminator: 2)
!5772 = !DILocation(line: 370, column: 5, scope: !5771)
!5773 = distinct !{!5773, !5774}
!5774 = !DILocation(line: 370, column: 5, scope: !5560)
!5775 = !DILocation(line: 380, column: 38, scope: !5560)
!5776 = !DILocation(line: 380, column: 21, scope: !5560)
!5777 = !DILocation(line: 380, column: 24, scope: !5560)
!5778 = !DILocation(line: 380, column: 5, scope: !5560)
!5779 = !DILocation(line: 380, column: 8, scope: !5560)
!5780 = !DILocation(line: 380, column: 36, scope: !5560)
!5781 = !DILocation(line: 381, column: 1, scope: !5560)
!5782 = !DILocation(line: 381, column: 1, scope: !5783)
!5783 = !DILexicalBlockFile(scope: !5560, file: !925, discriminator: 1)
!5784 = distinct !DISubprogram(name: "read_coeffs_coarse", scope: !925, file: !925, line: 383, type: !5785, isLocal: true, isDefinition: true, scopeLine: 385, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{null, !1858, !2030, !2031, !2032}
!5787 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !5788)
!5788 = distinct !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !5789)
!5789 = distinct !DILocation(line: 403, column: 32, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !925, line: 402, column: 46)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !925, line: 402, column: 13)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !925, line: 402, column: 13)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !925, line: 395, column: 31)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !925, line: 395, column: 13)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !925, line: 390, column: 45)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !925, line: 390, column: 5)
!5797 = distinct !DILexicalBlock(scope: !5784, file: !925, line: 390, column: 5)
!5798 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !5799)
!5799 = distinct !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !5789)
!5800 = !DILocation(line: 66, column: 98, scope: !2802, inlinedAt: !5801)
!5801 = distinct !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !5789)
!5802 = !DILocation(line: 762, column: 74, scope: !4118, inlinedAt: !5789)
!5803 = !DILocation(line: 762, column: 87, scope: !4118, inlinedAt: !5789)
!5804 = !DILocation(line: 763, column: 42, scope: !4118, inlinedAt: !5789)
!5805 = !DILocation(line: 763, column: 52, scope: !4118, inlinedAt: !5789)
!5806 = !DILocation(line: 783, column: 9, scope: !4118, inlinedAt: !5789)
!5807 = !DILocation(line: 785, column: 18, scope: !4118, inlinedAt: !5789)
!5808 = !DILocation(line: 785, column: 78, scope: !4118, inlinedAt: !5789)
!5809 = !DILocation(line: 785, column: 101, scope: !4118, inlinedAt: !5789)
!5810 = !DILocation(line: 788, column: 14, scope: !4117, inlinedAt: !5789)
!5811 = !DILocation(line: 788, column: 17, scope: !4117, inlinedAt: !5789)
!5812 = !DILocation(line: 788, column: 39, scope: !4117, inlinedAt: !5789)
!5813 = !DILocalVariable(name: "s", arg: 1, scope: !5784, file: !925, line: 383, type: !1858)
!5814 = !DILocation(line: 383, column: 54, scope: !5784)
!5815 = !DILocalVariable(name: "b", arg: 2, scope: !5784, file: !925, line: 383, type: !2030)
!5816 = !DILocation(line: 383, column: 74, scope: !5784)
!5817 = !DILocalVariable(name: "c", arg: 3, scope: !5784, file: !925, line: 384, type: !2031)
!5818 = !DILocation(line: 384, column: 58, scope: !5784)
!5819 = !DILocalVariable(name: "gb", arg: 4, scope: !5784, file: !925, line: 384, type: !2032)
!5820 = !DILocation(line: 384, column: 76, scope: !5784)
!5821 = !DILocalVariable(name: "max_prec", scope: !5784, file: !925, line: 386, type: !951)
!5822 = !DILocation(line: 386, column: 15, scope: !5784)
!5823 = !DILocation(line: 386, column: 26, scope: !5784)
!5824 = !DILocation(line: 386, column: 29, scope: !5784)
!5825 = !DILocation(line: 386, column: 44, scope: !5784)
!5826 = !DILocation(line: 388, column: 12, scope: !5784)
!5827 = !DILocation(line: 388, column: 15, scope: !5784)
!5828 = !DILocation(line: 388, column: 5, scope: !5784)
!5829 = !DILocalVariable(name: "i", scope: !5797, file: !925, line: 390, type: !904)
!5830 = !DILocation(line: 390, column: 14, scope: !5797)
!5831 = !DILocation(line: 390, column: 10, scope: !5797)
!5832 = !DILocation(line: 390, column: 21, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5796, file: !925, discriminator: 1)
!5834 = !DILocation(line: 390, column: 25, scope: !5833)
!5835 = !DILocation(line: 390, column: 28, scope: !5833)
!5836 = !DILocation(line: 390, column: 23, scope: !5833)
!5837 = !DILocation(line: 390, column: 5, scope: !5833)
!5838 = !DILocalVariable(name: "coeffs", scope: !5795, file: !925, line: 391, type: !1313)
!5839 = !DILocation(line: 391, column: 14, scope: !5795)
!5840 = !DILocation(line: 391, column: 67, scope: !5795)
!5841 = !DILocation(line: 391, column: 43, scope: !5795)
!5842 = !DILocation(line: 391, column: 24, scope: !5795)
!5843 = !DILocation(line: 391, column: 27, scope: !5795)
!5844 = !DILocalVariable(name: "bands", scope: !5795, file: !925, line: 392, type: !951)
!5845 = !DILocation(line: 392, column: 19, scope: !5795)
!5846 = !DILocation(line: 392, column: 51, scope: !5795)
!5847 = !DILocation(line: 392, column: 27, scope: !5795)
!5848 = !DILocalVariable(name: "prec", scope: !5795, file: !925, line: 393, type: !951)
!5849 = !DILocation(line: 393, column: 19, scope: !5795)
!5850 = !DILocation(line: 393, column: 46, scope: !5795)
!5851 = !DILocation(line: 393, column: 26, scope: !5795)
!5852 = !DILocation(line: 393, column: 29, scope: !5795)
!5853 = !DILocation(line: 393, column: 49, scope: !5795)
!5854 = !DILocation(line: 395, column: 13, scope: !5794)
!5855 = !DILocation(line: 395, column: 21, scope: !5794)
!5856 = !DILocation(line: 395, column: 18, scope: !5794)
!5857 = !DILocation(line: 395, column: 13, scope: !5795)
!5858 = !DILocalVariable(name: "cb", scope: !5793, file: !925, line: 396, type: !951)
!5859 = !DILocation(line: 396, column: 23, scope: !5793)
!5860 = !DILocation(line: 396, column: 43, scope: !5793)
!5861 = !DILocation(line: 396, column: 28, scope: !5793)
!5862 = !DILocation(line: 396, column: 31, scope: !5793)
!5863 = !DILocalVariable(name: "cbi", scope: !5793, file: !925, line: 397, type: !951)
!5864 = !DILocation(line: 397, column: 23, scope: !5793)
!5865 = !DILocation(line: 397, column: 55, scope: !5793)
!5866 = !DILocation(line: 397, column: 29, scope: !5793)
!5867 = !DILocalVariable(name: "tab", scope: !5793, file: !925, line: 398, type: !4255)
!5868 = !DILocation(line: 398, column: 24, scope: !5793)
!5869 = !DILocation(line: 398, column: 54, scope: !5793)
!5870 = !DILocation(line: 398, column: 31, scope: !5793)
!5871 = !DILocation(line: 398, column: 48, scope: !5793)
!5872 = !DILocation(line: 398, column: 44, scope: !5793)
!5873 = !DILocation(line: 398, column: 34, scope: !5793)
!5874 = !DILocalVariable(name: "huff", scope: !5793, file: !925, line: 399, type: !2334)
!5875 = !DILocation(line: 399, column: 36, scope: !5793)
!5876 = !DILocation(line: 399, column: 73, scope: !5793)
!5877 = !DILocation(line: 399, column: 44, scope: !5793)
!5878 = !DILocation(line: 399, column: 67, scope: !5793)
!5879 = !DILocation(line: 399, column: 63, scope: !5793)
!5880 = !DILocalVariable(name: "groups", scope: !5793, file: !925, line: 400, type: !951)
!5881 = !DILocation(line: 400, column: 23, scope: !5793)
!5882 = !DILocation(line: 400, column: 32, scope: !5793)
!5883 = !DILocation(line: 400, column: 41, scope: !5793)
!5884 = !DILocation(line: 400, column: 47, scope: !5793)
!5885 = !DILocation(line: 400, column: 38, scope: !5793)
!5886 = !DILocalVariable(name: "j", scope: !5792, file: !925, line: 402, type: !904)
!5887 = !DILocation(line: 402, column: 22, scope: !5792)
!5888 = !DILocation(line: 402, column: 18, scope: !5792)
!5889 = !DILocation(line: 402, column: 29, scope: !5890)
!5890 = !DILexicalBlockFile(scope: !5791, file: !925, discriminator: 1)
!5891 = !DILocation(line: 402, column: 33, scope: !5890)
!5892 = !DILocation(line: 402, column: 31, scope: !5890)
!5893 = !DILocation(line: 402, column: 13, scope: !5890)
!5894 = !DILocalVariable(name: "val", scope: !5790, file: !925, line: 403, type: !1350)
!5895 = !DILocation(line: 403, column: 26, scope: !5790)
!5896 = !DILocation(line: 403, column: 41, scope: !5790)
!5897 = !DILocation(line: 403, column: 45, scope: !5790)
!5898 = !DILocation(line: 403, column: 50, scope: !5790)
!5899 = !DILocation(line: 403, column: 60, scope: !5790)
!5900 = !DILocation(line: 403, column: 66, scope: !5790)
!5901 = !DILocation(line: 403, column: 32, scope: !5790)
!5902 = !DILocation(line: 785, column: 30, scope: !4118, inlinedAt: !5789)
!5903 = !DILocation(line: 785, column: 34, scope: !4118, inlinedAt: !5789)
!5904 = !DILocation(line: 785, column: 118, scope: !4118, inlinedAt: !5789)
!5905 = !DILocation(line: 785, column: 122, scope: !4118, inlinedAt: !5789)
!5906 = !DILocation(line: 786, column: 60, scope: !4118, inlinedAt: !5789)
!5907 = !DILocation(line: 786, column: 64, scope: !4118, inlinedAt: !5789)
!5908 = !DILocation(line: 786, column: 74, scope: !4118, inlinedAt: !5789)
!5909 = !DILocation(line: 786, column: 83, scope: !4118, inlinedAt: !5789)
!5910 = !DILocation(line: 786, column: 71, scope: !4118, inlinedAt: !5789)
!5911 = !DILocation(line: 786, column: 92, scope: !4118, inlinedAt: !5789)
!5912 = !DILocation(line: 786, column: 16, scope: !4118, inlinedAt: !5789)
!5913 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !5801)
!5914 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !5801)
!5915 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !5801)
!5916 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !5801)
!5917 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !5801)
!5918 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !5801)
!5919 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !5801)
!5920 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !5801)
!5921 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !5801)
!5922 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !5801)
!5923 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !5801)
!5924 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !5801)
!5925 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !5801)
!5926 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !5801)
!5927 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !5801)
!5928 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !5801)
!5929 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !5801)
!5930 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !5801)
!5931 = !DILocation(line: 786, column: 100, scope: !4118, inlinedAt: !5789)
!5932 = !DILocation(line: 786, column: 109, scope: !4118, inlinedAt: !5789)
!5933 = !DILocation(line: 786, column: 96, scope: !4118, inlinedAt: !5789)
!5934 = !DILocation(line: 786, column: 14, scope: !4118, inlinedAt: !5789)
!5935 = !DILocation(line: 788, column: 64, scope: !4320, inlinedAt: !5789)
!5936 = !DILocation(line: 788, column: 74, scope: !4320, inlinedAt: !5789)
!5937 = !DILocation(line: 788, column: 54, scope: !4320, inlinedAt: !5789)
!5938 = !DILocation(line: 788, column: 52, scope: !4320, inlinedAt: !5789)
!5939 = !DILocation(line: 788, column: 94, scope: !4320, inlinedAt: !5789)
!5940 = !DILocation(line: 788, column: 88, scope: !4320, inlinedAt: !5789)
!5941 = !DILocation(line: 788, column: 86, scope: !4320, inlinedAt: !5789)
!5942 = !DILocation(line: 788, column: 115, scope: !4320, inlinedAt: !5789)
!5943 = !DILocation(line: 788, column: 109, scope: !4320, inlinedAt: !5789)
!5944 = !DILocation(line: 788, column: 107, scope: !4320, inlinedAt: !5789)
!5945 = !DILocation(line: 788, column: 130, scope: !4320, inlinedAt: !5789)
!5946 = !DILocation(line: 788, column: 140, scope: !4320, inlinedAt: !5789)
!5947 = !DILocation(line: 788, column: 144, scope: !4320, inlinedAt: !5789)
!5948 = !DILocation(line: 788, column: 147, scope: !4334, inlinedAt: !5789)
!5949 = !DILocation(line: 788, column: 149, scope: !4334, inlinedAt: !5789)
!5950 = !DILocation(line: 788, column: 130, scope: !4334, inlinedAt: !5789)
!5951 = !DILocation(line: 788, column: 169, scope: !4338, inlinedAt: !5789)
!5952 = !DILocation(line: 788, column: 187, scope: !4338, inlinedAt: !5789)
!5953 = !DILocation(line: 788, column: 199, scope: !4338, inlinedAt: !5789)
!5954 = !DILocation(line: 788, column: 196, scope: !4338, inlinedAt: !5789)
!5955 = !DILocation(line: 788, column: 184, scope: !4338, inlinedAt: !5789)
!5956 = !DILocation(line: 788, column: 168, scope: !4338, inlinedAt: !5789)
!5957 = !DILocation(line: 788, column: 209, scope: !4345, inlinedAt: !5789)
!5958 = !DILocation(line: 788, column: 221, scope: !4345, inlinedAt: !5789)
!5959 = !DILocation(line: 788, column: 218, scope: !4345, inlinedAt: !5789)
!5960 = !DILocation(line: 788, column: 168, scope: !4345, inlinedAt: !5789)
!5961 = !DILocation(line: 788, column: 231, scope: !4350, inlinedAt: !5789)
!5962 = !DILocation(line: 788, column: 168, scope: !4350, inlinedAt: !5789)
!5963 = !DILocation(line: 788, column: 168, scope: !4129, inlinedAt: !5789)
!5964 = !DILocation(line: 788, column: 165, scope: !4129, inlinedAt: !5789)
!5965 = !DILocation(line: 788, column: 303, scope: !4129, inlinedAt: !5789)
!5966 = !DILocation(line: 788, column: 307, scope: !4129, inlinedAt: !5789)
!5967 = !DILocation(line: 788, column: 317, scope: !4129, inlinedAt: !5789)
!5968 = !DILocation(line: 788, column: 326, scope: !4129, inlinedAt: !5789)
!5969 = !DILocation(line: 788, column: 314, scope: !4129, inlinedAt: !5789)
!5970 = !DILocation(line: 788, column: 335, scope: !4129, inlinedAt: !5789)
!5971 = !DILocation(line: 788, column: 259, scope: !4129, inlinedAt: !5789)
!5972 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !5799)
!5973 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !5799)
!5974 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !5799)
!5975 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !5799)
!5976 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !5799)
!5977 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !5799)
!5978 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !5799)
!5979 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !5799)
!5980 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !5799)
!5981 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !5799)
!5982 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !5799)
!5983 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !5799)
!5984 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !5799)
!5985 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !5799)
!5986 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !5799)
!5987 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !5799)
!5988 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !5799)
!5989 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !5799)
!5990 = !DILocation(line: 788, column: 343, scope: !4129, inlinedAt: !5789)
!5991 = !DILocation(line: 788, column: 352, scope: !4129, inlinedAt: !5789)
!5992 = !DILocation(line: 788, column: 339, scope: !4129, inlinedAt: !5789)
!5993 = !DILocation(line: 788, column: 257, scope: !4129, inlinedAt: !5789)
!5994 = !DILocation(line: 788, column: 369, scope: !4129, inlinedAt: !5789)
!5995 = !DILocation(line: 788, column: 368, scope: !4129, inlinedAt: !5789)
!5996 = !DILocation(line: 788, column: 366, scope: !4129, inlinedAt: !5789)
!5997 = !DILocation(line: 788, column: 390, scope: !4129, inlinedAt: !5789)
!5998 = !DILocation(line: 788, column: 400, scope: !4129, inlinedAt: !5789)
!5999 = !DILocation(line: 788, column: 380, scope: !4389, inlinedAt: !5789)
!6000 = !DILocation(line: 788, column: 411, scope: !4129, inlinedAt: !5789)
!6001 = !DILocation(line: 788, column: 409, scope: !4129, inlinedAt: !5789)
!6002 = !DILocation(line: 788, column: 378, scope: !4129, inlinedAt: !5789)
!6003 = !DILocation(line: 788, column: 430, scope: !4129, inlinedAt: !5789)
!6004 = !DILocation(line: 788, column: 424, scope: !4129, inlinedAt: !5789)
!6005 = !DILocation(line: 788, column: 422, scope: !4129, inlinedAt: !5789)
!6006 = !DILocation(line: 788, column: 451, scope: !4129, inlinedAt: !5789)
!6007 = !DILocation(line: 788, column: 445, scope: !4129, inlinedAt: !5789)
!6008 = !DILocation(line: 788, column: 443, scope: !4129, inlinedAt: !5789)
!6009 = !DILocation(line: 788, column: 466, scope: !4129, inlinedAt: !5789)
!6010 = !DILocation(line: 788, column: 476, scope: !4129, inlinedAt: !5789)
!6011 = !DILocation(line: 788, column: 480, scope: !4129, inlinedAt: !5789)
!6012 = !DILocation(line: 788, column: 483, scope: !4403, inlinedAt: !5789)
!6013 = !DILocation(line: 788, column: 485, scope: !4403, inlinedAt: !5789)
!6014 = !DILocation(line: 788, column: 466, scope: !4403, inlinedAt: !5789)
!6015 = !DILocation(line: 788, column: 505, scope: !4407, inlinedAt: !5789)
!6016 = !DILocation(line: 788, column: 523, scope: !4407, inlinedAt: !5789)
!6017 = !DILocation(line: 788, column: 535, scope: !4407, inlinedAt: !5789)
!6018 = !DILocation(line: 788, column: 532, scope: !4407, inlinedAt: !5789)
!6019 = !DILocation(line: 788, column: 520, scope: !4407, inlinedAt: !5789)
!6020 = !DILocation(line: 788, column: 504, scope: !4407, inlinedAt: !5789)
!6021 = !DILocation(line: 788, column: 548, scope: !4414, inlinedAt: !5789)
!6022 = !DILocation(line: 788, column: 560, scope: !4414, inlinedAt: !5789)
!6023 = !DILocation(line: 788, column: 557, scope: !4414, inlinedAt: !5789)
!6024 = !DILocation(line: 788, column: 504, scope: !4414, inlinedAt: !5789)
!6025 = !DILocation(line: 788, column: 573, scope: !4419, inlinedAt: !5789)
!6026 = !DILocation(line: 788, column: 504, scope: !4419, inlinedAt: !5789)
!6027 = !DILocation(line: 788, column: 504, scope: !4112, inlinedAt: !5789)
!6028 = !DILocation(line: 788, column: 501, scope: !4112, inlinedAt: !5789)
!6029 = !DILocation(line: 788, column: 645, scope: !4112, inlinedAt: !5789)
!6030 = !DILocation(line: 788, column: 649, scope: !4112, inlinedAt: !5789)
!6031 = !DILocation(line: 788, column: 659, scope: !4112, inlinedAt: !5789)
!6032 = !DILocation(line: 788, column: 668, scope: !4112, inlinedAt: !5789)
!6033 = !DILocation(line: 788, column: 656, scope: !4112, inlinedAt: !5789)
!6034 = !DILocation(line: 788, column: 677, scope: !4112, inlinedAt: !5789)
!6035 = !DILocation(line: 788, column: 601, scope: !4112, inlinedAt: !5789)
!6036 = !DILocation(line: 68, column: 16, scope: !2802, inlinedAt: !5788)
!6037 = !DILocation(line: 68, column: 19, scope: !2802, inlinedAt: !5788)
!6038 = !DILocation(line: 68, column: 24, scope: !2802, inlinedAt: !5788)
!6039 = !DILocation(line: 68, column: 38, scope: !2802, inlinedAt: !5788)
!6040 = !DILocation(line: 68, column: 41, scope: !2802, inlinedAt: !5788)
!6041 = !DILocation(line: 68, column: 46, scope: !2802, inlinedAt: !5788)
!6042 = !DILocation(line: 68, column: 34, scope: !2802, inlinedAt: !5788)
!6043 = !DILocation(line: 68, column: 57, scope: !2802, inlinedAt: !5788)
!6044 = !DILocation(line: 68, column: 69, scope: !2802, inlinedAt: !5788)
!6045 = !DILocation(line: 68, column: 72, scope: !2802, inlinedAt: !5788)
!6046 = !DILocation(line: 68, column: 79, scope: !2802, inlinedAt: !5788)
!6047 = !DILocation(line: 68, column: 84, scope: !2802, inlinedAt: !5788)
!6048 = !DILocation(line: 68, column: 99, scope: !2802, inlinedAt: !5788)
!6049 = !DILocation(line: 68, column: 102, scope: !2802, inlinedAt: !5788)
!6050 = !DILocation(line: 68, column: 109, scope: !2802, inlinedAt: !5788)
!6051 = !DILocation(line: 68, column: 114, scope: !2802, inlinedAt: !5788)
!6052 = !DILocation(line: 68, column: 94, scope: !2802, inlinedAt: !5788)
!6053 = !DILocation(line: 68, column: 63, scope: !2802, inlinedAt: !5788)
!6054 = !DILocation(line: 788, column: 685, scope: !4112, inlinedAt: !5789)
!6055 = !DILocation(line: 788, column: 694, scope: !4112, inlinedAt: !5789)
!6056 = !DILocation(line: 788, column: 681, scope: !4112, inlinedAt: !5789)
!6057 = !DILocation(line: 788, column: 599, scope: !4112, inlinedAt: !5789)
!6058 = !DILocation(line: 788, column: 711, scope: !4112, inlinedAt: !5789)
!6059 = !DILocation(line: 788, column: 710, scope: !4112, inlinedAt: !5789)
!6060 = !DILocation(line: 788, column: 708, scope: !4112, inlinedAt: !5789)
!6061 = !DILocation(line: 788, column: 732, scope: !4112, inlinedAt: !5789)
!6062 = !DILocation(line: 788, column: 742, scope: !4112, inlinedAt: !5789)
!6063 = !DILocation(line: 788, column: 722, scope: !4458, inlinedAt: !5789)
!6064 = !DILocation(line: 788, column: 753, scope: !4112, inlinedAt: !5789)
!6065 = !DILocation(line: 788, column: 751, scope: !4112, inlinedAt: !5789)
!6066 = !DILocation(line: 788, column: 720, scope: !4112, inlinedAt: !5789)
!6067 = !DILocation(line: 788, column: 772, scope: !4112, inlinedAt: !5789)
!6068 = !DILocation(line: 788, column: 766, scope: !4112, inlinedAt: !5789)
!6069 = !DILocation(line: 788, column: 764, scope: !4112, inlinedAt: !5789)
!6070 = !DILocation(line: 788, column: 793, scope: !4112, inlinedAt: !5789)
!6071 = !DILocation(line: 788, column: 787, scope: !4112, inlinedAt: !5789)
!6072 = !DILocation(line: 788, column: 785, scope: !4112, inlinedAt: !5789)
!6073 = !DILocation(line: 788, column: 804, scope: !4112, inlinedAt: !5789)
!6074 = !DILocation(line: 788, column: 806, scope: !4470, inlinedAt: !5789)
!6075 = !DILocation(line: 788, column: 827, scope: !4472, inlinedAt: !5789)
!6076 = !DILocation(line: 788, column: 822, scope: !4472, inlinedAt: !5789)
!6077 = !DILocation(line: 788, column: 844, scope: !4472, inlinedAt: !5789)
!6078 = !DILocation(line: 788, column: 862, scope: !4472, inlinedAt: !5789)
!6079 = !DILocation(line: 788, column: 874, scope: !4472, inlinedAt: !5789)
!6080 = !DILocation(line: 788, column: 871, scope: !4472, inlinedAt: !5789)
!6081 = !DILocation(line: 788, column: 859, scope: !4472, inlinedAt: !5789)
!6082 = !DILocation(line: 788, column: 843, scope: !4472, inlinedAt: !5789)
!6083 = !DILocation(line: 788, column: 881, scope: !4482, inlinedAt: !5789)
!6084 = !DILocation(line: 788, column: 893, scope: !4482, inlinedAt: !5789)
!6085 = !DILocation(line: 788, column: 890, scope: !4482, inlinedAt: !5789)
!6086 = !DILocation(line: 788, column: 843, scope: !4482, inlinedAt: !5789)
!6087 = !DILocation(line: 788, column: 900, scope: !4487, inlinedAt: !5789)
!6088 = !DILocation(line: 788, column: 843, scope: !4487, inlinedAt: !5789)
!6089 = !DILocation(line: 788, column: 843, scope: !4490, inlinedAt: !5789)
!6090 = !DILocation(line: 788, column: 840, scope: !4490, inlinedAt: !5789)
!6091 = !DILocation(line: 790, column: 18, scope: !4118, inlinedAt: !5789)
!6092 = !DILocation(line: 790, column: 6, scope: !4118, inlinedAt: !5789)
!6093 = !DILocation(line: 790, column: 10, scope: !4118, inlinedAt: !5789)
!6094 = !DILocation(line: 790, column: 16, scope: !4118, inlinedAt: !5789)
!6095 = !DILocation(line: 792, column: 12, scope: !4118, inlinedAt: !5789)
!6096 = !DILocalVariable(name: "k", scope: !6097, file: !925, line: 405, type: !904)
!6097 = distinct !DILexicalBlock(scope: !5790, file: !925, line: 405, column: 17)
!6098 = !DILocation(line: 405, column: 26, scope: !6097)
!6099 = !DILocation(line: 405, column: 22, scope: !6097)
!6100 = !DILocation(line: 405, column: 33, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6102, file: !925, discriminator: 1)
!6102 = distinct !DILexicalBlock(scope: !6097, file: !925, line: 405, column: 17)
!6103 = !DILocation(line: 405, column: 37, scope: !6101)
!6104 = !DILocation(line: 405, column: 43, scope: !6101)
!6105 = !DILocation(line: 405, column: 35, scope: !6101)
!6106 = !DILocation(line: 405, column: 17, scope: !6101)
!6107 = !DILocation(line: 406, column: 45, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6102, file: !925, line: 405, column: 59)
!6109 = !DILocation(line: 406, column: 50, scope: !6108)
!6110 = !DILocation(line: 406, column: 56, scope: !6108)
!6111 = !DILocation(line: 406, column: 33, scope: !6108)
!6112 = !DILocation(line: 406, column: 28, scope: !6108)
!6113 = !DILocation(line: 406, column: 21, scope: !6108)
!6114 = !DILocation(line: 406, column: 31, scope: !6108)
!6115 = !DILocation(line: 407, column: 29, scope: !6108)
!6116 = !DILocation(line: 407, column: 35, scope: !6108)
!6117 = !DILocation(line: 407, column: 25, scope: !6108)
!6118 = !DILocation(line: 408, column: 17, scope: !6108)
!6119 = !DILocation(line: 405, column: 55, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6102, file: !925, discriminator: 2)
!6121 = !DILocation(line: 405, column: 17, scope: !6120)
!6122 = distinct !{!6122, !6123}
!6123 = !DILocation(line: 405, column: 17, scope: !5790)
!6124 = !DILocation(line: 410, column: 27, scope: !5790)
!6125 = !DILocation(line: 410, column: 33, scope: !5790)
!6126 = !DILocation(line: 410, column: 24, scope: !5790)
!6127 = !DILocation(line: 411, column: 13, scope: !5790)
!6128 = !DILocation(line: 402, column: 42, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !5791, file: !925, discriminator: 2)
!6130 = !DILocation(line: 402, column: 13, scope: !6129)
!6131 = distinct !{!6131, !6132}
!6132 = !DILocation(line: 402, column: 13, scope: !5793)
!6133 = !DILocation(line: 412, column: 9, scope: !5793)
!6134 = !DILocalVariable(name: "j", scope: !6135, file: !925, line: 413, type: !904)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !925, line: 413, column: 13)
!6136 = distinct !DILexicalBlock(scope: !5794, file: !925, line: 412, column: 16)
!6137 = !DILocation(line: 413, column: 22, scope: !6135)
!6138 = !DILocation(line: 413, column: 18, scope: !6135)
!6139 = !DILocation(line: 413, column: 29, scope: !6140)
!6140 = !DILexicalBlockFile(scope: !6141, file: !925, discriminator: 1)
!6141 = distinct !DILexicalBlock(scope: !6135, file: !925, line: 413, column: 13)
!6142 = !DILocation(line: 413, column: 33, scope: !6140)
!6143 = !DILocation(line: 413, column: 31, scope: !6140)
!6144 = !DILocation(line: 413, column: 13, scope: !6140)
!6145 = !DILocation(line: 414, column: 50, scope: !6141)
!6146 = !DILocation(line: 414, column: 54, scope: !6141)
!6147 = !DILocation(line: 414, column: 41, scope: !6141)
!6148 = !DILocation(line: 414, column: 61, scope: !6141)
!6149 = !DILocation(line: 414, column: 29, scope: !6140)
!6150 = !DILocation(line: 414, column: 24, scope: !6141)
!6151 = !DILocation(line: 414, column: 17, scope: !6141)
!6152 = !DILocation(line: 414, column: 27, scope: !6141)
!6153 = !DILocation(line: 413, column: 41, scope: !6154)
!6154 = !DILexicalBlockFile(scope: !6141, file: !925, discriminator: 2)
!6155 = !DILocation(line: 413, column: 13, scope: !6154)
!6156 = distinct !{!6156, !6157}
!6157 = !DILocation(line: 413, column: 13, scope: !6136)
!6158 = !DILocation(line: 416, column: 5, scope: !5795)
!6159 = !DILocation(line: 390, column: 41, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !5796, file: !925, discriminator: 2)
!6161 = !DILocation(line: 390, column: 5, scope: !6160)
!6162 = distinct !{!6162, !6163}
!6163 = !DILocation(line: 390, column: 5, scope: !5784)
!6164 = !DILocation(line: 417, column: 1, scope: !5784)
!6165 = distinct !DISubprogram(name: "read_coeffs_fine", scope: !925, file: !925, line: 419, type: !5785, isLocal: true, isDefinition: true, scopeLine: 421, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6166 = !DILocalVariable(name: "s", arg: 1, scope: !6165, file: !925, line: 419, type: !1858)
!6167 = !DILocation(line: 419, column: 52, scope: !6165)
!6168 = !DILocalVariable(name: "b", arg: 2, scope: !6165, file: !925, line: 419, type: !2030)
!6169 = !DILocation(line: 419, column: 72, scope: !6165)
!6170 = !DILocalVariable(name: "c", arg: 3, scope: !6165, file: !925, line: 420, type: !2031)
!6171 = !DILocation(line: 420, column: 56, scope: !6165)
!6172 = !DILocalVariable(name: "gb", arg: 4, scope: !6165, file: !925, line: 420, type: !2032)
!6173 = !DILocation(line: 420, column: 74, scope: !6165)
!6174 = !DILocation(line: 422, column: 12, scope: !6165)
!6175 = !DILocation(line: 422, column: 15, scope: !6165)
!6176 = !DILocation(line: 422, column: 5, scope: !6165)
!6177 = !DILocalVariable(name: "i", scope: !6178, file: !925, line: 424, type: !904)
!6178 = distinct !DILexicalBlock(scope: !6165, file: !925, line: 424, column: 5)
!6179 = !DILocation(line: 424, column: 14, scope: !6178)
!6180 = !DILocation(line: 424, column: 10, scope: !6178)
!6181 = !DILocation(line: 424, column: 21, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6183, file: !925, discriminator: 1)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !925, line: 424, column: 5)
!6184 = !DILocation(line: 424, column: 25, scope: !6182)
!6185 = !DILocation(line: 424, column: 28, scope: !6182)
!6186 = !DILocation(line: 424, column: 23, scope: !6182)
!6187 = !DILocation(line: 424, column: 5, scope: !6182)
!6188 = !DILocalVariable(name: "start", scope: !6189, file: !925, line: 425, type: !951)
!6189 = distinct !DILexicalBlock(scope: !6183, file: !925, line: 424, column: 45)
!6190 = !DILocation(line: 425, column: 19, scope: !6189)
!6191 = !DILocation(line: 425, column: 51, scope: !6189)
!6192 = !DILocation(line: 425, column: 53, scope: !6189)
!6193 = !DILocation(line: 425, column: 27, scope: !6189)
!6194 = !DILocalVariable(name: "end", scope: !6189, file: !925, line: 426, type: !951)
!6195 = !DILocation(line: 426, column: 19, scope: !6189)
!6196 = !DILocation(line: 426, column: 49, scope: !6189)
!6197 = !DILocation(line: 426, column: 51, scope: !6189)
!6198 = !DILocation(line: 426, column: 25, scope: !6189)
!6199 = !DILocalVariable(name: "len", scope: !6189, file: !925, line: 427, type: !951)
!6200 = !DILocation(line: 427, column: 19, scope: !6189)
!6201 = !DILocation(line: 427, column: 43, scope: !6189)
!6202 = !DILocation(line: 427, column: 25, scope: !6189)
!6203 = !DILocation(line: 427, column: 28, scope: !6189)
!6204 = !DILocation(line: 427, column: 46, scope: !6189)
!6205 = !DILocation(line: 429, column: 31, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6189, file: !925, line: 429, column: 13)
!6207 = !DILocation(line: 429, column: 13, scope: !6206)
!6208 = !DILocation(line: 429, column: 16, scope: !6206)
!6209 = !DILocation(line: 429, column: 34, scope: !6206)
!6210 = !DILocation(line: 429, column: 13, scope: !6189)
!6211 = !DILocation(line: 430, column: 13, scope: !6206)
!6212 = !DILocalVariable(name: "j", scope: !6213, file: !925, line: 432, type: !904)
!6213 = distinct !DILexicalBlock(scope: !6189, file: !925, line: 432, column: 9)
!6214 = !DILocation(line: 432, column: 18, scope: !6213)
!6215 = !DILocation(line: 432, column: 22, scope: !6213)
!6216 = !DILocation(line: 432, column: 14, scope: !6213)
!6217 = !DILocation(line: 432, column: 29, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6219, file: !925, discriminator: 1)
!6219 = distinct !DILexicalBlock(scope: !6213, file: !925, line: 432, column: 9)
!6220 = !DILocation(line: 432, column: 33, scope: !6218)
!6221 = !DILocation(line: 432, column: 31, scope: !6218)
!6222 = !DILocation(line: 432, column: 9, scope: !6218)
!6223 = !DILocation(line: 433, column: 56, scope: !6219)
!6224 = !DILocation(line: 433, column: 60, scope: !6219)
!6225 = !DILocation(line: 433, column: 47, scope: !6219)
!6226 = !DILocation(line: 433, column: 66, scope: !6219)
!6227 = !DILocation(line: 433, column: 35, scope: !6218)
!6228 = !DILocation(line: 433, column: 30, scope: !6219)
!6229 = !DILocation(line: 433, column: 13, scope: !6219)
!6230 = !DILocation(line: 433, column: 16, scope: !6219)
!6231 = !DILocation(line: 433, column: 33, scope: !6219)
!6232 = !DILocation(line: 432, column: 39, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !6219, file: !925, discriminator: 2)
!6234 = !DILocation(line: 432, column: 9, scope: !6233)
!6235 = distinct !{!6235, !6236}
!6236 = !DILocation(line: 432, column: 9, scope: !6189)
!6237 = !DILocation(line: 434, column: 5, scope: !6189)
!6238 = !DILocation(line: 424, column: 41, scope: !6239)
!6239 = !DILexicalBlockFile(scope: !6183, file: !925, discriminator: 2)
!6240 = !DILocation(line: 424, column: 5, scope: !6239)
!6241 = distinct !{!6241, !6242}
!6242 = !DILocation(line: 424, column: 5, scope: !6165)
!6243 = !DILocation(line: 435, column: 1, scope: !6165)
!6244 = distinct !DISubprogram(name: "apply_intensity_stereo", scope: !925, file: !925, line: 457, type: !3666, isLocal: true, isDefinition: true, scopeLine: 459, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6245 = !DILocalVariable(name: "s", arg: 1, scope: !6244, file: !925, line: 457, type: !1858)
!6246 = !DILocation(line: 457, column: 58, scope: !6244)
!6247 = !DILocalVariable(name: "b", arg: 2, scope: !6244, file: !925, line: 457, type: !2030)
!6248 = !DILocation(line: 457, column: 78, scope: !6244)
!6249 = !DILocalVariable(name: "stereo", arg: 3, scope: !6244, file: !925, line: 458, type: !951)
!6250 = !DILocation(line: 458, column: 53, scope: !6244)
!6251 = !DILocalVariable(name: "src", scope: !6244, file: !925, line: 460, type: !916)
!6252 = !DILocation(line: 460, column: 12, scope: !6244)
!6253 = !DILocation(line: 460, column: 30, scope: !6244)
!6254 = !DILocation(line: 460, column: 33, scope: !6244)
!6255 = !DILocation(line: 460, column: 18, scope: !6244)
!6256 = !DILocation(line: 460, column: 21, scope: !6244)
!6257 = !DILocation(line: 460, column: 51, scope: !6244)
!6258 = !DILocalVariable(name: "dst", scope: !6244, file: !925, line: 461, type: !916)
!6259 = !DILocation(line: 461, column: 12, scope: !6244)
!6260 = !DILocation(line: 461, column: 30, scope: !6244)
!6261 = !DILocation(line: 461, column: 33, scope: !6244)
!6262 = !DILocation(line: 461, column: 29, scope: !6244)
!6263 = !DILocation(line: 461, column: 18, scope: !6244)
!6264 = !DILocation(line: 461, column: 21, scope: !6244)
!6265 = !DILocation(line: 461, column: 51, scope: !6244)
!6266 = !DILocation(line: 463, column: 10, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6244, file: !925, line: 463, column: 9)
!6268 = !DILocation(line: 463, column: 9, scope: !6244)
!6269 = !DILocation(line: 464, column: 9, scope: !6267)
!6270 = !DILocation(line: 466, column: 9, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6244, file: !925, line: 466, column: 9)
!6272 = !DILocation(line: 466, column: 12, scope: !6271)
!6273 = !DILocation(line: 466, column: 26, scope: !6271)
!6274 = !DILocation(line: 466, column: 29, scope: !6271)
!6275 = !DILocation(line: 466, column: 23, scope: !6271)
!6276 = !DILocation(line: 466, column: 9, scope: !6244)
!6277 = !DILocation(line: 467, column: 9, scope: !6271)
!6278 = !DILocalVariable(name: "i", scope: !6279, file: !925, line: 469, type: !904)
!6279 = distinct !DILexicalBlock(scope: !6244, file: !925, line: 469, column: 5)
!6280 = !DILocation(line: 469, column: 14, scope: !6279)
!6281 = !DILocation(line: 469, column: 18, scope: !6279)
!6282 = !DILocation(line: 469, column: 21, scope: !6279)
!6283 = !DILocation(line: 469, column: 10, scope: !6279)
!6284 = !DILocation(line: 469, column: 36, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !925, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !6279, file: !925, line: 469, column: 5)
!6287 = !DILocation(line: 469, column: 40, scope: !6285)
!6288 = !DILocation(line: 469, column: 43, scope: !6285)
!6289 = !DILocation(line: 469, column: 38, scope: !6285)
!6290 = !DILocation(line: 469, column: 5, scope: !6285)
!6291 = !DILocalVariable(name: "sign", scope: !6292, file: !925, line: 470, type: !951)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !925, line: 469, column: 60)
!6293 = !DILocation(line: 470, column: 19, scope: !6292)
!6294 = !DILocation(line: 470, column: 38, scope: !6292)
!6295 = !DILocation(line: 470, column: 26, scope: !6292)
!6296 = !DILocation(line: 470, column: 29, scope: !6292)
!6297 = !DILocalVariable(name: "start", scope: !6292, file: !925, line: 471, type: !951)
!6298 = !DILocation(line: 471, column: 19, scope: !6292)
!6299 = !DILocation(line: 471, column: 51, scope: !6292)
!6300 = !DILocation(line: 471, column: 53, scope: !6292)
!6301 = !DILocation(line: 471, column: 27, scope: !6292)
!6302 = !DILocalVariable(name: "end", scope: !6292, file: !925, line: 472, type: !951)
!6303 = !DILocation(line: 472, column: 19, scope: !6292)
!6304 = !DILocation(line: 472, column: 49, scope: !6292)
!6305 = !DILocation(line: 472, column: 51, scope: !6292)
!6306 = !DILocation(line: 472, column: 25, scope: !6292)
!6307 = !DILocalVariable(name: "j", scope: !6308, file: !925, line: 473, type: !904)
!6308 = distinct !DILexicalBlock(scope: !6292, file: !925, line: 473, column: 9)
!6309 = !DILocation(line: 473, column: 18, scope: !6308)
!6310 = !DILocation(line: 473, column: 22, scope: !6308)
!6311 = !DILocation(line: 473, column: 14, scope: !6308)
!6312 = !DILocation(line: 473, column: 29, scope: !6313)
!6313 = !DILexicalBlockFile(scope: !6314, file: !925, discriminator: 1)
!6314 = distinct !DILexicalBlock(scope: !6308, file: !925, line: 473, column: 9)
!6315 = !DILocation(line: 473, column: 33, scope: !6313)
!6316 = !DILocation(line: 473, column: 31, scope: !6313)
!6317 = !DILocation(line: 473, column: 9, scope: !6313)
!6318 = !DILocation(line: 474, column: 22, scope: !6314)
!6319 = !DILocation(line: 474, column: 31, scope: !6314)
!6320 = !DILocation(line: 474, column: 27, scope: !6314)
!6321 = !DILocation(line: 474, column: 26, scope: !6314)
!6322 = !DILocation(line: 474, column: 17, scope: !6314)
!6323 = !DILocation(line: 474, column: 13, scope: !6314)
!6324 = !DILocation(line: 474, column: 20, scope: !6314)
!6325 = !DILocation(line: 473, column: 39, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !6314, file: !925, discriminator: 2)
!6327 = !DILocation(line: 473, column: 9, scope: !6326)
!6328 = distinct !{!6328, !6329}
!6329 = !DILocation(line: 473, column: 9, scope: !6292)
!6330 = !DILocation(line: 475, column: 5, scope: !6292)
!6331 = !DILocation(line: 469, column: 56, scope: !6332)
!6332 = !DILexicalBlockFile(scope: !6286, file: !925, discriminator: 2)
!6333 = !DILocation(line: 469, column: 5, scope: !6332)
!6334 = distinct !{!6334, !6335}
!6335 = !DILocation(line: 469, column: 5, scope: !6244)
!6336 = !DILocation(line: 476, column: 1, scope: !6244)
!6337 = distinct !DISubprogram(name: "apply_band_extension", scope: !925, file: !925, line: 521, type: !3666, isLocal: true, isDefinition: true, scopeLine: 523, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6338 = !DILocalVariable(name: "s", arg: 1, scope: !6337, file: !925, line: 521, type: !1858)
!6339 = !DILocation(line: 521, column: 56, scope: !6337)
!6340 = !DILocalVariable(name: "b", arg: 2, scope: !6337, file: !925, line: 521, type: !2030)
!6341 = !DILocation(line: 521, column: 76, scope: !6337)
!6342 = !DILocalVariable(name: "stereo", arg: 3, scope: !6337, file: !925, line: 522, type: !951)
!6343 = !DILocation(line: 522, column: 50, scope: !6337)
!6344 = !DILocalVariable(name: "g_units", scope: !6337, file: !925, line: 524, type: !6345)
!6345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 128, align: 32, elements: !1150)
!6346 = !DILocation(line: 524, column: 15, scope: !6337)
!6347 = !DILocation(line: 524, column: 28, scope: !6337)
!6348 = !DILocation(line: 525, column: 9, scope: !6337)
!6349 = !DILocation(line: 525, column: 12, scope: !6337)
!6350 = !DILocation(line: 526, column: 32, scope: !6337)
!6351 = !DILocation(line: 526, column: 35, scope: !6337)
!6352 = !DILocation(line: 526, column: 46, scope: !6337)
!6353 = !DILocation(line: 526, column: 9, scope: !6337)
!6354 = !DILocation(line: 527, column: 32, scope: !6337)
!6355 = !DILocation(line: 527, column: 35, scope: !6337)
!6356 = !DILocation(line: 527, column: 46, scope: !6337)
!6357 = !DILocation(line: 527, column: 9, scope: !6337)
!6358 = !DILocation(line: 528, column: 11, scope: !6337)
!6359 = !DILocation(line: 528, column: 23, scope: !6337)
!6360 = !DILocation(line: 528, column: 10, scope: !6337)
!6361 = !DILocation(line: 528, column: 33, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !6337, file: !925, discriminator: 1)
!6363 = !DILocation(line: 528, column: 10, scope: !6362)
!6364 = !DILocation(line: 528, column: 10, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6337, file: !925, discriminator: 2)
!6366 = !DILocation(line: 528, column: 10, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !6337, file: !925, discriminator: 3)
!6368 = !DILocation(line: 524, column: 28, scope: !6362)
!6369 = !DILocalVariable(name: "g_bins", scope: !6337, file: !925, line: 531, type: !6345)
!6370 = !DILocation(line: 531, column: 15, scope: !6337)
!6371 = !DILocation(line: 531, column: 27, scope: !6337)
!6372 = !DILocation(line: 532, column: 33, scope: !6337)
!6373 = !DILocation(line: 532, column: 9, scope: !6337)
!6374 = !DILocation(line: 533, column: 33, scope: !6337)
!6375 = !DILocation(line: 533, column: 9, scope: !6337)
!6376 = !DILocation(line: 534, column: 33, scope: !6337)
!6377 = !DILocation(line: 534, column: 9, scope: !6337)
!6378 = !DILocation(line: 535, column: 33, scope: !6337)
!6379 = !DILocation(line: 535, column: 9, scope: !6337)
!6380 = !DILocation(line: 538, column: 10, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6337, file: !925, line: 538, column: 9)
!6382 = !DILocation(line: 538, column: 13, scope: !6381)
!6383 = !DILocation(line: 538, column: 26, scope: !6381)
!6384 = !DILocation(line: 538, column: 30, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !6381, file: !925, discriminator: 1)
!6386 = !DILocation(line: 538, column: 33, scope: !6385)
!6387 = !DILocation(line: 538, column: 9, scope: !6385)
!6388 = !DILocation(line: 539, column: 9, scope: !6381)
!6389 = !DILocalVariable(name: "ch", scope: !6390, file: !925, line: 541, type: !904)
!6390 = distinct !DILexicalBlock(scope: !6337, file: !925, line: 541, column: 5)
!6391 = !DILocation(line: 541, column: 14, scope: !6390)
!6392 = !DILocation(line: 541, column: 10, scope: !6390)
!6393 = !DILocation(line: 541, column: 22, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !6395, file: !925, discriminator: 1)
!6395 = distinct !DILexicalBlock(scope: !6390, file: !925, line: 541, column: 5)
!6396 = !DILocation(line: 541, column: 28, scope: !6394)
!6397 = !DILocation(line: 541, column: 25, scope: !6394)
!6398 = !DILocation(line: 541, column: 5, scope: !6394)
!6399 = !DILocalVariable(name: "c", scope: !6400, file: !925, line: 542, type: !2031)
!6400 = distinct !DILexicalBlock(scope: !6395, file: !925, line: 541, column: 42)
!6401 = !DILocation(line: 542, column: 28, scope: !6400)
!6402 = !DILocation(line: 542, column: 44, scope: !6400)
!6403 = !DILocation(line: 542, column: 33, scope: !6400)
!6404 = !DILocation(line: 542, column: 36, scope: !6400)
!6405 = !DILocalVariable(name: "i", scope: !6406, file: !925, line: 545, type: !904)
!6406 = distinct !DILexicalBlock(scope: !6400, file: !925, line: 545, column: 9)
!6407 = !DILocation(line: 545, column: 18, scope: !6406)
!6408 = !DILocation(line: 545, column: 14, scope: !6406)
!6409 = !DILocation(line: 545, column: 25, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !6411, file: !925, discriminator: 1)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !925, line: 545, column: 9)
!6412 = !DILocation(line: 545, column: 27, scope: !6410)
!6413 = !DILocation(line: 545, column: 9, scope: !6410)
!6414 = !DILocalVariable(name: "j", scope: !6415, file: !925, line: 546, type: !904)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !925, line: 546, column: 13)
!6416 = !DILocation(line: 546, column: 22, scope: !6415)
!6417 = !DILocation(line: 546, column: 18, scope: !6415)
!6418 = !DILocation(line: 546, column: 29, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !6420, file: !925, discriminator: 1)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !925, line: 546, column: 13)
!6421 = !DILocation(line: 546, column: 41, scope: !6419)
!6422 = !DILocation(line: 546, column: 43, scope: !6419)
!6423 = !DILocation(line: 546, column: 34, scope: !6419)
!6424 = !DILocation(line: 546, column: 57, scope: !6419)
!6425 = !DILocation(line: 546, column: 59, scope: !6419)
!6426 = !DILocation(line: 546, column: 50, scope: !6419)
!6427 = !DILocation(line: 546, column: 48, scope: !6419)
!6428 = !DILocation(line: 546, column: 31, scope: !6419)
!6429 = !DILocation(line: 546, column: 13, scope: !6419)
!6430 = !DILocation(line: 547, column: 61, scope: !6420)
!6431 = !DILocation(line: 547, column: 54, scope: !6420)
!6432 = !DILocation(line: 547, column: 66, scope: !6420)
!6433 = !DILocation(line: 547, column: 64, scope: !6420)
!6434 = !DILocation(line: 547, column: 68, scope: !6420)
!6435 = !DILocation(line: 547, column: 44, scope: !6420)
!6436 = !DILocation(line: 547, column: 47, scope: !6420)
!6437 = !DILocation(line: 547, column: 34, scope: !6420)
!6438 = !DILocation(line: 547, column: 27, scope: !6420)
!6439 = !DILocation(line: 547, column: 39, scope: !6420)
!6440 = !DILocation(line: 547, column: 37, scope: !6420)
!6441 = !DILocation(line: 547, column: 17, scope: !6420)
!6442 = !DILocation(line: 547, column: 20, scope: !6420)
!6443 = !DILocation(line: 547, column: 42, scope: !6420)
!6444 = !DILocation(line: 546, column: 67, scope: !6445)
!6445 = !DILexicalBlockFile(scope: !6420, file: !925, discriminator: 2)
!6446 = !DILocation(line: 546, column: 13, scope: !6445)
!6447 = distinct !{!6447, !6448}
!6448 = !DILocation(line: 546, column: 13, scope: !6411)
!6449 = !DILocation(line: 547, column: 71, scope: !6450)
!6450 = !DILexicalBlockFile(scope: !6415, file: !925, discriminator: 1)
!6451 = !DILocation(line: 545, column: 33, scope: !6452)
!6452 = !DILexicalBlockFile(scope: !6411, file: !925, discriminator: 2)
!6453 = !DILocation(line: 545, column: 9, scope: !6452)
!6454 = distinct !{!6454, !6455}
!6455 = !DILocation(line: 545, column: 9, scope: !6400)
!6456 = !DILocation(line: 549, column: 17, scope: !6400)
!6457 = !DILocation(line: 549, column: 20, scope: !6400)
!6458 = !DILocation(line: 549, column: 9, scope: !6400)
!6459 = !DILocalVariable(name: "sf", scope: !6460, file: !925, line: 551, type: !6462)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !925, line: 550, column: 17)
!6461 = distinct !DILexicalBlock(scope: !6400, file: !925, line: 549, column: 30)
!6462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 192, align: 32, elements: !1671)
!6463 = !DILocation(line: 551, column: 19, scope: !6460)
!6464 = !DILocalVariable(name: "l", scope: !6460, file: !925, line: 552, type: !951)
!6465 = !DILocation(line: 552, column: 23, scope: !6460)
!6466 = !DILocation(line: 552, column: 27, scope: !6460)
!6467 = !DILocation(line: 552, column: 40, scope: !6460)
!6468 = !DILocation(line: 552, column: 38, scope: !6460)
!6469 = !DILocation(line: 552, column: 51, scope: !6460)
!6470 = !DILocalVariable(name: "n_start", scope: !6460, file: !925, line: 553, type: !951)
!6471 = !DILocation(line: 553, column: 23, scope: !6460)
!6472 = !DILocation(line: 553, column: 57, scope: !6460)
!6473 = !DILocation(line: 553, column: 68, scope: !6460)
!6474 = !DILocation(line: 553, column: 33, scope: !6460)
!6475 = !DILocalVariable(name: "n_cnt", scope: !6460, file: !925, line: 554, type: !951)
!6476 = !DILocation(line: 554, column: 23, scope: !6460)
!6477 = !DILocation(line: 554, column: 55, scope: !6460)
!6478 = !DILocation(line: 554, column: 66, scope: !6460)
!6479 = !DILocation(line: 554, column: 31, scope: !6460)
!6480 = !DILocation(line: 555, column: 44, scope: !6460)
!6481 = !DILocation(line: 555, column: 47, scope: !6460)
!6482 = !DILocation(line: 555, column: 58, scope: !6460)
!6483 = !DILocation(line: 555, column: 21, scope: !6460)
!6484 = !DILocation(line: 555, column: 13, scope: !6460)
!6485 = !DILocation(line: 557, column: 54, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6460, file: !925, line: 555, column: 68)
!6487 = !DILocation(line: 557, column: 57, scope: !6486)
!6488 = !DILocation(line: 557, column: 25, scope: !6486)
!6489 = !DILocation(line: 557, column: 17, scope: !6486)
!6490 = !DILocation(line: 557, column: 23, scope: !6486)
!6491 = !DILocation(line: 558, column: 54, scope: !6486)
!6492 = !DILocation(line: 558, column: 57, scope: !6486)
!6493 = !DILocation(line: 558, column: 25, scope: !6486)
!6494 = !DILocation(line: 558, column: 17, scope: !6486)
!6495 = !DILocation(line: 558, column: 23, scope: !6486)
!6496 = !DILocation(line: 559, column: 54, scope: !6486)
!6497 = !DILocation(line: 559, column: 57, scope: !6486)
!6498 = !DILocation(line: 559, column: 25, scope: !6486)
!6499 = !DILocation(line: 559, column: 17, scope: !6486)
!6500 = !DILocation(line: 559, column: 23, scope: !6486)
!6501 = !DILocation(line: 560, column: 54, scope: !6486)
!6502 = !DILocation(line: 560, column: 57, scope: !6486)
!6503 = !DILocation(line: 560, column: 25, scope: !6486)
!6504 = !DILocation(line: 560, column: 17, scope: !6486)
!6505 = !DILocation(line: 560, column: 23, scope: !6486)
!6506 = !DILocation(line: 561, column: 54, scope: !6486)
!6507 = !DILocation(line: 561, column: 57, scope: !6486)
!6508 = !DILocation(line: 561, column: 25, scope: !6486)
!6509 = !DILocation(line: 561, column: 17, scope: !6486)
!6510 = !DILocation(line: 561, column: 23, scope: !6486)
!6511 = !DILocation(line: 562, column: 17, scope: !6486)
!6512 = !DILocation(line: 564, column: 54, scope: !6486)
!6513 = !DILocation(line: 564, column: 57, scope: !6486)
!6514 = !DILocation(line: 564, column: 25, scope: !6486)
!6515 = !DILocation(line: 564, column: 17, scope: !6486)
!6516 = !DILocation(line: 564, column: 23, scope: !6486)
!6517 = !DILocation(line: 565, column: 54, scope: !6486)
!6518 = !DILocation(line: 565, column: 57, scope: !6486)
!6519 = !DILocation(line: 565, column: 25, scope: !6486)
!6520 = !DILocation(line: 565, column: 17, scope: !6486)
!6521 = !DILocation(line: 565, column: 23, scope: !6486)
!6522 = !DILocation(line: 566, column: 54, scope: !6486)
!6523 = !DILocation(line: 566, column: 57, scope: !6486)
!6524 = !DILocation(line: 566, column: 25, scope: !6486)
!6525 = !DILocation(line: 566, column: 17, scope: !6486)
!6526 = !DILocation(line: 566, column: 23, scope: !6486)
!6527 = !DILocation(line: 567, column: 54, scope: !6486)
!6528 = !DILocation(line: 567, column: 57, scope: !6486)
!6529 = !DILocation(line: 567, column: 25, scope: !6486)
!6530 = !DILocation(line: 567, column: 17, scope: !6486)
!6531 = !DILocation(line: 567, column: 23, scope: !6486)
!6532 = !DILocation(line: 568, column: 54, scope: !6486)
!6533 = !DILocation(line: 568, column: 57, scope: !6486)
!6534 = !DILocation(line: 568, column: 25, scope: !6486)
!6535 = !DILocation(line: 568, column: 17, scope: !6486)
!6536 = !DILocation(line: 568, column: 23, scope: !6486)
!6537 = !DILocation(line: 569, column: 17, scope: !6486)
!6538 = !DILocation(line: 571, column: 54, scope: !6486)
!6539 = !DILocation(line: 571, column: 57, scope: !6486)
!6540 = !DILocation(line: 571, column: 25, scope: !6486)
!6541 = !DILocation(line: 571, column: 17, scope: !6486)
!6542 = !DILocation(line: 571, column: 23, scope: !6486)
!6543 = !DILocation(line: 572, column: 54, scope: !6486)
!6544 = !DILocation(line: 572, column: 57, scope: !6486)
!6545 = !DILocation(line: 572, column: 25, scope: !6486)
!6546 = !DILocation(line: 572, column: 17, scope: !6486)
!6547 = !DILocation(line: 572, column: 23, scope: !6486)
!6548 = !DILocation(line: 573, column: 54, scope: !6486)
!6549 = !DILocation(line: 573, column: 57, scope: !6486)
!6550 = !DILocation(line: 573, column: 25, scope: !6486)
!6551 = !DILocation(line: 573, column: 17, scope: !6486)
!6552 = !DILocation(line: 573, column: 23, scope: !6486)
!6553 = !DILocation(line: 574, column: 17, scope: !6486)
!6554 = !DILocation(line: 577, column: 55, scope: !6460)
!6555 = !DILocation(line: 577, column: 39, scope: !6460)
!6556 = !DILocation(line: 577, column: 42, scope: !6460)
!6557 = !DILocation(line: 577, column: 21, scope: !6460)
!6558 = !DILocation(line: 577, column: 16, scope: !6460)
!6559 = !DILocation(line: 577, column: 13, scope: !6460)
!6560 = !DILocation(line: 577, column: 19, scope: !6460)
!6561 = !DILocation(line: 579, column: 29, scope: !6460)
!6562 = !DILocation(line: 579, column: 32, scope: !6460)
!6563 = !DILocation(line: 579, column: 35, scope: !6460)
!6564 = !DILocation(line: 579, column: 44, scope: !6460)
!6565 = !DILocation(line: 579, column: 13, scope: !6460)
!6566 = !DILocation(line: 580, column: 35, scope: !6460)
!6567 = !DILocation(line: 580, column: 38, scope: !6460)
!6568 = !DILocation(line: 580, column: 42, scope: !6460)
!6569 = !DILocation(line: 580, column: 54, scope: !6460)
!6570 = !DILocation(line: 580, column: 13, scope: !6460)
!6571 = !DILocation(line: 581, column: 13, scope: !6460)
!6572 = !DILocalVariable(name: "sf", scope: !6573, file: !925, line: 584, type: !6462)
!6573 = distinct !DILexicalBlock(scope: !6461, file: !925, line: 583, column: 17)
!6574 = !DILocation(line: 584, column: 19, scope: !6573)
!6575 = !DILocalVariable(name: "i", scope: !6576, file: !925, line: 585, type: !904)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !925, line: 585, column: 13)
!6577 = !DILocation(line: 585, column: 22, scope: !6576)
!6578 = !DILocation(line: 585, column: 26, scope: !6576)
!6579 = !DILocation(line: 585, column: 18, scope: !6576)
!6580 = !DILocation(line: 585, column: 38, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !6582, file: !925, discriminator: 1)
!6582 = distinct !DILexicalBlock(scope: !6576, file: !925, line: 585, column: 13)
!6583 = !DILocation(line: 585, column: 42, scope: !6581)
!6584 = !DILocation(line: 585, column: 40, scope: !6581)
!6585 = !DILocation(line: 585, column: 13, scope: !6581)
!6586 = !DILocation(line: 586, column: 72, scope: !6582)
!6587 = !DILocation(line: 586, column: 56, scope: !6582)
!6588 = !DILocation(line: 586, column: 59, scope: !6582)
!6589 = !DILocation(line: 586, column: 38, scope: !6582)
!6590 = !DILocation(line: 586, column: 20, scope: !6582)
!6591 = !DILocation(line: 586, column: 24, scope: !6582)
!6592 = !DILocation(line: 586, column: 22, scope: !6582)
!6593 = !DILocation(line: 586, column: 17, scope: !6582)
!6594 = !DILocation(line: 586, column: 36, scope: !6582)
!6595 = !DILocation(line: 585, column: 55, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6582, file: !925, discriminator: 2)
!6597 = !DILocation(line: 585, column: 13, scope: !6596)
!6598 = distinct !{!6598, !6599}
!6599 = !DILocation(line: 585, column: 13, scope: !6573)
!6600 = !DILocation(line: 588, column: 29, scope: !6573)
!6601 = !DILocation(line: 588, column: 32, scope: !6573)
!6602 = !DILocation(line: 588, column: 35, scope: !6573)
!6603 = !DILocation(line: 588, column: 46, scope: !6573)
!6604 = !DILocation(line: 588, column: 58, scope: !6573)
!6605 = !DILocation(line: 588, column: 56, scope: !6573)
!6606 = !DILocation(line: 588, column: 13, scope: !6573)
!6607 = !DILocation(line: 589, column: 35, scope: !6573)
!6608 = !DILocation(line: 589, column: 38, scope: !6573)
!6609 = !DILocation(line: 589, column: 42, scope: !6573)
!6610 = !DILocation(line: 589, column: 54, scope: !6573)
!6611 = !DILocation(line: 589, column: 13, scope: !6573)
!6612 = !DILocation(line: 590, column: 13, scope: !6573)
!6613 = !DILocalVariable(name: "g_sf", scope: !6614, file: !925, line: 593, type: !6615)
!6614 = distinct !DILexicalBlock(scope: !6461, file: !925, line: 592, column: 17)
!6615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 64, align: 32, elements: !1698)
!6616 = !DILocation(line: 593, column: 25, scope: !6614)
!6617 = !DILocation(line: 593, column: 35, scope: !6614)
!6618 = !DILocation(line: 594, column: 40, scope: !6614)
!6619 = !DILocation(line: 594, column: 43, scope: !6614)
!6620 = !DILocation(line: 594, column: 17, scope: !6614)
!6621 = !DILocation(line: 595, column: 40, scope: !6614)
!6622 = !DILocation(line: 595, column: 43, scope: !6614)
!6623 = !DILocation(line: 595, column: 17, scope: !6614)
!6624 = !DILocalVariable(name: "i", scope: !6625, file: !925, line: 598, type: !904)
!6625 = distinct !DILexicalBlock(scope: !6614, file: !925, line: 598, column: 13)
!6626 = !DILocation(line: 598, column: 22, scope: !6625)
!6627 = !DILocation(line: 598, column: 18, scope: !6625)
!6628 = !DILocation(line: 598, column: 29, scope: !6629)
!6629 = !DILexicalBlockFile(scope: !6630, file: !925, discriminator: 1)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !925, line: 598, column: 13)
!6631 = !DILocation(line: 598, column: 31, scope: !6629)
!6632 = !DILocation(line: 598, column: 13, scope: !6629)
!6633 = !DILocalVariable(name: "j", scope: !6634, file: !925, line: 599, type: !904)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !925, line: 599, column: 17)
!6635 = !DILocation(line: 599, column: 26, scope: !6634)
!6636 = !DILocation(line: 599, column: 37, scope: !6634)
!6637 = !DILocation(line: 599, column: 39, scope: !6634)
!6638 = !DILocation(line: 599, column: 30, scope: !6634)
!6639 = !DILocation(line: 599, column: 22, scope: !6634)
!6640 = !DILocation(line: 599, column: 45, scope: !6641)
!6641 = !DILexicalBlockFile(scope: !6642, file: !925, discriminator: 1)
!6642 = distinct !DILexicalBlock(scope: !6634, file: !925, line: 599, column: 17)
!6643 = !DILocation(line: 599, column: 56, scope: !6641)
!6644 = !DILocation(line: 599, column: 58, scope: !6641)
!6645 = !DILocation(line: 599, column: 49, scope: !6641)
!6646 = !DILocation(line: 599, column: 47, scope: !6641)
!6647 = !DILocation(line: 599, column: 17, scope: !6641)
!6648 = !DILocation(line: 600, column: 42, scope: !6642)
!6649 = !DILocation(line: 600, column: 37, scope: !6642)
!6650 = !DILocation(line: 600, column: 31, scope: !6642)
!6651 = !DILocation(line: 600, column: 21, scope: !6642)
!6652 = !DILocation(line: 600, column: 24, scope: !6642)
!6653 = !DILocation(line: 600, column: 34, scope: !6642)
!6654 = !DILocation(line: 599, column: 65, scope: !6655)
!6655 = !DILexicalBlockFile(scope: !6642, file: !925, discriminator: 2)
!6656 = !DILocation(line: 599, column: 17, scope: !6655)
!6657 = distinct !{!6657, !6658}
!6658 = !DILocation(line: 599, column: 17, scope: !6630)
!6659 = !DILocation(line: 600, column: 43, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6634, file: !925, discriminator: 1)
!6661 = !DILocation(line: 598, column: 37, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6630, file: !925, discriminator: 2)
!6663 = !DILocation(line: 598, column: 13, scope: !6662)
!6664 = distinct !{!6664, !6665}
!6665 = !DILocation(line: 598, column: 13, scope: !6614)
!6666 = !DILocation(line: 601, column: 13, scope: !6614)
!6667 = !DILocalVariable(name: "scale", scope: !6668, file: !925, line: 604, type: !917)
!6668 = distinct !DILexicalBlock(scope: !6461, file: !925, line: 603, column: 17)
!6669 = !DILocation(line: 604, column: 19, scope: !6668)
!6670 = !DILocation(line: 604, column: 50, scope: !6668)
!6671 = !DILocation(line: 604, column: 53, scope: !6668)
!6672 = !DILocation(line: 604, column: 27, scope: !6668)
!6673 = !DILocalVariable(name: "rate", scope: !6668, file: !925, line: 605, type: !917)
!6674 = !DILocation(line: 605, column: 19, scope: !6668)
!6675 = !DILocation(line: 605, column: 49, scope: !6668)
!6676 = !DILocation(line: 605, column: 52, scope: !6668)
!6677 = !DILocation(line: 605, column: 26, scope: !6668)
!6678 = !DILocation(line: 606, column: 27, scope: !6668)
!6679 = !DILocation(line: 606, column: 20, scope: !6668)
!6680 = !DILocation(line: 606, column: 18, scope: !6668)
!6681 = !DILocalVariable(name: "i", scope: !6682, file: !925, line: 607, type: !904)
!6682 = distinct !DILexicalBlock(scope: !6668, file: !925, line: 607, column: 13)
!6683 = !DILocation(line: 607, column: 22, scope: !6682)
!6684 = !DILocation(line: 607, column: 26, scope: !6682)
!6685 = !DILocation(line: 607, column: 18, scope: !6682)
!6686 = !DILocation(line: 607, column: 37, scope: !6687)
!6687 = !DILexicalBlockFile(scope: !6688, file: !925, discriminator: 1)
!6688 = distinct !DILexicalBlock(scope: !6682, file: !925, line: 607, column: 13)
!6689 = !DILocation(line: 607, column: 41, scope: !6687)
!6690 = !DILocation(line: 607, column: 39, scope: !6687)
!6691 = !DILocation(line: 607, column: 13, scope: !6687)
!6692 = !DILocation(line: 608, column: 26, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6688, file: !925, line: 607, column: 57)
!6694 = !DILocation(line: 608, column: 23, scope: !6693)
!6695 = !DILocation(line: 609, column: 33, scope: !6693)
!6696 = !DILocation(line: 609, column: 27, scope: !6693)
!6697 = !DILocation(line: 609, column: 17, scope: !6693)
!6698 = !DILocation(line: 609, column: 20, scope: !6693)
!6699 = !DILocation(line: 609, column: 30, scope: !6693)
!6700 = !DILocation(line: 610, column: 13, scope: !6693)
!6701 = !DILocation(line: 607, column: 53, scope: !6702)
!6702 = !DILexicalBlockFile(scope: !6688, file: !925, discriminator: 2)
!6703 = !DILocation(line: 607, column: 13, scope: !6702)
!6704 = distinct !{!6704, !6705}
!6705 = !DILocation(line: 607, column: 13, scope: !6668)
!6706 = !DILocation(line: 611, column: 13, scope: !6668)
!6707 = !DILocalVariable(name: "m", scope: !6708, file: !925, line: 614, type: !1835)
!6708 = distinct !DILexicalBlock(scope: !6461, file: !925, line: 613, column: 17)
!6709 = !DILocation(line: 614, column: 25, scope: !6708)
!6710 = !DILocation(line: 614, column: 52, scope: !6708)
!6711 = !DILocation(line: 614, column: 55, scope: !6708)
!6712 = !DILocation(line: 614, column: 29, scope: !6708)
!6713 = !DILocalVariable(name: "g_sf", scope: !6708, file: !925, line: 615, type: !6714)
!6714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 96, align: 32, elements: !6715)
!6715 = !{!1847}
!6716 = !DILocation(line: 615, column: 25, scope: !6708)
!6717 = !DILocation(line: 615, column: 35, scope: !6708)
!6718 = !DILocation(line: 615, column: 48, scope: !6708)
!6719 = !DILocation(line: 615, column: 47, scope: !6708)
!6720 = !DILocation(line: 615, column: 62, scope: !6708)
!6721 = !DILocation(line: 615, column: 61, scope: !6708)
!6722 = !DILocation(line: 615, column: 76, scope: !6708)
!6723 = !DILocation(line: 615, column: 75, scope: !6708)
!6724 = !DILocalVariable(name: "i", scope: !6725, file: !925, line: 617, type: !904)
!6725 = distinct !DILexicalBlock(scope: !6708, file: !925, line: 617, column: 13)
!6726 = !DILocation(line: 617, column: 22, scope: !6725)
!6727 = !DILocation(line: 617, column: 18, scope: !6725)
!6728 = !DILocation(line: 617, column: 29, scope: !6729)
!6729 = !DILexicalBlockFile(scope: !6730, file: !925, discriminator: 1)
!6730 = distinct !DILexicalBlock(scope: !6725, file: !925, line: 617, column: 13)
!6731 = !DILocation(line: 617, column: 31, scope: !6729)
!6732 = !DILocation(line: 617, column: 13, scope: !6729)
!6733 = !DILocalVariable(name: "j", scope: !6734, file: !925, line: 618, type: !904)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !925, line: 618, column: 17)
!6735 = !DILocation(line: 618, column: 26, scope: !6734)
!6736 = !DILocation(line: 618, column: 37, scope: !6734)
!6737 = !DILocation(line: 618, column: 39, scope: !6734)
!6738 = !DILocation(line: 618, column: 30, scope: !6734)
!6739 = !DILocation(line: 618, column: 22, scope: !6734)
!6740 = !DILocation(line: 618, column: 45, scope: !6741)
!6741 = !DILexicalBlockFile(scope: !6742, file: !925, discriminator: 1)
!6742 = distinct !DILexicalBlock(scope: !6734, file: !925, line: 618, column: 17)
!6743 = !DILocation(line: 618, column: 56, scope: !6741)
!6744 = !DILocation(line: 618, column: 58, scope: !6741)
!6745 = !DILocation(line: 618, column: 49, scope: !6741)
!6746 = !DILocation(line: 618, column: 47, scope: !6741)
!6747 = !DILocation(line: 618, column: 17, scope: !6741)
!6748 = !DILocation(line: 619, column: 42, scope: !6742)
!6749 = !DILocation(line: 619, column: 37, scope: !6742)
!6750 = !DILocation(line: 619, column: 31, scope: !6742)
!6751 = !DILocation(line: 619, column: 21, scope: !6742)
!6752 = !DILocation(line: 619, column: 24, scope: !6742)
!6753 = !DILocation(line: 619, column: 34, scope: !6742)
!6754 = !DILocation(line: 618, column: 65, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6742, file: !925, discriminator: 2)
!6756 = !DILocation(line: 618, column: 17, scope: !6755)
!6757 = distinct !{!6757, !6758}
!6758 = !DILocation(line: 618, column: 17, scope: !6730)
!6759 = !DILocation(line: 619, column: 43, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !6734, file: !925, discriminator: 1)
!6761 = !DILocation(line: 617, column: 37, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6730, file: !925, discriminator: 2)
!6763 = !DILocation(line: 617, column: 13, scope: !6762)
!6764 = distinct !{!6764, !6765}
!6765 = !DILocation(line: 617, column: 13, scope: !6708)
!6766 = !DILocation(line: 620, column: 13, scope: !6708)
!6767 = !DILocation(line: 623, column: 5, scope: !6400)
!6768 = !DILocation(line: 541, column: 38, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6395, file: !925, discriminator: 2)
!6770 = !DILocation(line: 541, column: 5, scope: !6769)
!6771 = distinct !{!6771, !6772}
!6772 = !DILocation(line: 541, column: 5, scope: !6337)
!6773 = !DILocation(line: 624, column: 1, scope: !6337)
!6774 = distinct !DISubprogram(name: "skip_bits1", scope: !2034, file: !2034, line: 523, type: !6775, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{null, !2032}
!6777 = !DILocalVariable(name: "s", arg: 1, scope: !6774, file: !2034, line: 523, type: !2032)
!6778 = !DILocation(line: 523, column: 46, scope: !6774)
!6779 = !DILocation(line: 525, column: 15, scope: !6774)
!6780 = !DILocation(line: 525, column: 5, scope: !6774)
!6781 = !DILocation(line: 526, column: 1, scope: !6774)
!6782 = distinct !DISubprogram(name: "skip_bits", scope: !2034, file: !2034, line: 460, type: !6783, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !2032, !904}
!6785 = !DILocalVariable(name: "s", arg: 1, scope: !6782, file: !2034, line: 460, type: !2032)
!6786 = !DILocation(line: 460, column: 45, scope: !6782)
!6787 = !DILocalVariable(name: "n", arg: 2, scope: !6782, file: !2034, line: 460, type: !904)
!6788 = !DILocation(line: 460, column: 52, scope: !6782)
!6789 = !DILocalVariable(name: "re_index", scope: !6782, file: !2034, line: 481, type: !905)
!6790 = !DILocation(line: 481, column: 18, scope: !6782)
!6791 = !DILocation(line: 481, column: 30, scope: !6782)
!6792 = !DILocation(line: 481, column: 34, scope: !6782)
!6793 = !DILocalVariable(name: "re_cache", scope: !6782, file: !2034, line: 481, type: !905)
!6794 = !DILocation(line: 481, column: 78, scope: !6782)
!6795 = !DILocalVariable(name: "re_size_plus8", scope: !6782, file: !2034, line: 481, type: !905)
!6796 = !DILocation(line: 481, column: 101, scope: !6782)
!6797 = !DILocation(line: 481, column: 118, scope: !6782)
!6798 = !DILocation(line: 481, column: 122, scope: !6782)
!6799 = !DILocation(line: 482, column: 18, scope: !6782)
!6800 = !DILocation(line: 482, column: 36, scope: !6782)
!6801 = !DILocation(line: 482, column: 48, scope: !6782)
!6802 = !DILocation(line: 482, column: 45, scope: !6782)
!6803 = !DILocation(line: 482, column: 33, scope: !6782)
!6804 = !DILocation(line: 482, column: 17, scope: !6782)
!6805 = !DILocation(line: 482, column: 55, scope: !6806)
!6806 = !DILexicalBlockFile(scope: !6782, file: !2034, discriminator: 1)
!6807 = !DILocation(line: 482, column: 67, scope: !6806)
!6808 = !DILocation(line: 482, column: 64, scope: !6806)
!6809 = !DILocation(line: 482, column: 17, scope: !6806)
!6810 = !DILocation(line: 482, column: 74, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6782, file: !2034, discriminator: 2)
!6812 = !DILocation(line: 482, column: 17, scope: !6811)
!6813 = !DILocation(line: 482, column: 17, scope: !6814)
!6814 = !DILexicalBlockFile(scope: !6782, file: !2034, discriminator: 3)
!6815 = !DILocation(line: 482, column: 14, scope: !6814)
!6816 = !DILocation(line: 483, column: 18, scope: !6782)
!6817 = !DILocation(line: 483, column: 6, scope: !6782)
!6818 = !DILocation(line: 483, column: 10, scope: !6782)
!6819 = !DILocation(line: 483, column: 16, scope: !6782)
!6820 = !DILocation(line: 485, column: 1, scope: !6782)
!6821 = distinct !DISubprogram(name: "skip_bits_long", scope: !2034, file: !2034, line: 293, type: !6783, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6822 = !DILocalVariable(name: "a", arg: 1, scope: !6823, file: !6824, line: 127, type: !904)
!6823 = distinct !DISubprogram(name: "av_clip_c", scope: !6824, file: !6824, line: 127, type: !6825, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6824 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!904, !904, !904, !904}
!6827 = !DILocation(line: 127, column: 87, scope: !6823, inlinedAt: !6828)
!6828 = distinct !DILocation(line: 301, column: 17, scope: !6821)
!6829 = !DILocalVariable(name: "amin", arg: 2, scope: !6823, file: !6824, line: 127, type: !904)
!6830 = !DILocation(line: 127, column: 94, scope: !6823, inlinedAt: !6828)
!6831 = !DILocalVariable(name: "amax", arg: 3, scope: !6823, file: !6824, line: 127, type: !904)
!6832 = !DILocation(line: 127, column: 104, scope: !6823, inlinedAt: !6828)
!6833 = !DILocalVariable(name: "s", arg: 1, scope: !6821, file: !2034, line: 293, type: !2032)
!6834 = !DILocation(line: 293, column: 50, scope: !6821)
!6835 = !DILocalVariable(name: "n", arg: 2, scope: !6821, file: !2034, line: 293, type: !904)
!6836 = !DILocation(line: 293, column: 57, scope: !6821)
!6837 = !DILocation(line: 301, column: 27, scope: !6821)
!6838 = !DILocation(line: 301, column: 31, scope: !6821)
!6839 = !DILocation(line: 301, column: 34, scope: !6821)
!6840 = !DILocation(line: 301, column: 30, scope: !6821)
!6841 = !DILocation(line: 301, column: 41, scope: !6821)
!6842 = !DILocation(line: 301, column: 44, scope: !6821)
!6843 = !DILocation(line: 301, column: 65, scope: !6821)
!6844 = !DILocation(line: 301, column: 68, scope: !6821)
!6845 = !DILocation(line: 301, column: 63, scope: !6821)
!6846 = !DILocation(line: 301, column: 17, scope: !6821)
!6847 = !DILocation(line: 132, column: 9, scope: !6848, inlinedAt: !6828)
!6848 = distinct !DILexicalBlock(scope: !6823, file: !6824, line: 132, column: 9)
!6849 = !DILocation(line: 132, column: 13, scope: !6848, inlinedAt: !6828)
!6850 = !DILocation(line: 132, column: 11, scope: !6848, inlinedAt: !6828)
!6851 = !DILocation(line: 132, column: 9, scope: !6823, inlinedAt: !6828)
!6852 = !DILocation(line: 132, column: 26, scope: !6853, inlinedAt: !6828)
!6853 = !DILexicalBlockFile(scope: !6848, file: !6824, discriminator: 1)
!6854 = !DILocation(line: 132, column: 19, scope: !6853, inlinedAt: !6828)
!6855 = !DILocation(line: 133, column: 14, scope: !6856, inlinedAt: !6828)
!6856 = distinct !DILexicalBlock(scope: !6848, file: !6824, line: 133, column: 14)
!6857 = !DILocation(line: 133, column: 18, scope: !6856, inlinedAt: !6828)
!6858 = !DILocation(line: 133, column: 16, scope: !6856, inlinedAt: !6828)
!6859 = !DILocation(line: 133, column: 14, scope: !6848, inlinedAt: !6828)
!6860 = !DILocation(line: 133, column: 31, scope: !6861, inlinedAt: !6828)
!6861 = !DILexicalBlockFile(scope: !6856, file: !6824, discriminator: 1)
!6862 = !DILocation(line: 133, column: 24, scope: !6861, inlinedAt: !6828)
!6863 = !DILocation(line: 134, column: 17, scope: !6856, inlinedAt: !6828)
!6864 = !DILocation(line: 134, column: 10, scope: !6856, inlinedAt: !6828)
!6865 = !DILocation(line: 135, column: 1, scope: !6823, inlinedAt: !6828)
!6866 = !DILocation(line: 301, column: 5, scope: !6821)
!6867 = !DILocation(line: 301, column: 8, scope: !6821)
!6868 = !DILocation(line: 301, column: 14, scope: !6821)
!6869 = !DILocation(line: 304, column: 1, scope: !6821)
!6870 = distinct !DISubprogram(name: "fill_with_noise", scope: !925, file: !925, line: 494, type: !6871, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{null, !1858, !2031, !904, !904}
!6873 = !DILocalVariable(name: "s", arg: 1, scope: !6870, file: !925, line: 494, type: !1858)
!6874 = !DILocation(line: 494, column: 51, scope: !6870)
!6875 = !DILocalVariable(name: "c", arg: 2, scope: !6870, file: !925, line: 494, type: !2031)
!6876 = !DILocation(line: 494, column: 73, scope: !6870)
!6877 = !DILocalVariable(name: "start", arg: 3, scope: !6870, file: !925, line: 495, type: !904)
!6878 = !DILocation(line: 495, column: 40, scope: !6870)
!6879 = !DILocalVariable(name: "count", arg: 4, scope: !6870, file: !925, line: 495, type: !904)
!6880 = !DILocation(line: 495, column: 51, scope: !6870)
!6881 = !DILocalVariable(name: "maxval", scope: !6870, file: !925, line: 497, type: !917)
!6882 = !DILocation(line: 497, column: 11, scope: !6870)
!6883 = !DILocalVariable(name: "i", scope: !6884, file: !925, line: 498, type: !904)
!6884 = distinct !DILexicalBlock(scope: !6870, file: !925, line: 498, column: 5)
!6885 = !DILocation(line: 498, column: 14, scope: !6884)
!6886 = !DILocation(line: 498, column: 10, scope: !6884)
!6887 = !DILocation(line: 498, column: 21, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6889, file: !925, discriminator: 1)
!6889 = distinct !DILexicalBlock(scope: !6884, file: !925, line: 498, column: 5)
!6890 = !DILocation(line: 498, column: 25, scope: !6888)
!6891 = !DILocation(line: 498, column: 23, scope: !6888)
!6892 = !DILocation(line: 498, column: 5, scope: !6888)
!6893 = !DILocalVariable(name: "tmp", scope: !6894, file: !925, line: 499, type: !6895)
!6894 = distinct !DILexicalBlock(scope: !6889, file: !925, line: 498, column: 40)
!6895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 128, align: 64, elements: !1698)
!6896 = !DILocation(line: 499, column: 16, scope: !6894)
!6897 = !DILocation(line: 500, column: 21, scope: !6894)
!6898 = !DILocation(line: 500, column: 24, scope: !6894)
!6899 = !DILocation(line: 500, column: 29, scope: !6894)
!6900 = !DILocation(line: 500, column: 9, scope: !6894)
!6901 = !DILocation(line: 501, column: 36, scope: !6894)
!6902 = !DILocation(line: 501, column: 19, scope: !6894)
!6903 = !DILocation(line: 501, column: 27, scope: !6894)
!6904 = !DILocation(line: 501, column: 25, scope: !6894)
!6905 = !DILocation(line: 501, column: 29, scope: !6894)
!6906 = !DILocation(line: 501, column: 9, scope: !6894)
!6907 = !DILocation(line: 501, column: 12, scope: !6894)
!6908 = !DILocation(line: 501, column: 34, scope: !6894)
!6909 = !DILocation(line: 502, column: 36, scope: !6894)
!6910 = !DILocation(line: 502, column: 19, scope: !6894)
!6911 = !DILocation(line: 502, column: 27, scope: !6894)
!6912 = !DILocation(line: 502, column: 25, scope: !6894)
!6913 = !DILocation(line: 502, column: 29, scope: !6894)
!6914 = !DILocation(line: 502, column: 9, scope: !6894)
!6915 = !DILocation(line: 502, column: 12, scope: !6894)
!6916 = !DILocation(line: 502, column: 34, scope: !6894)
!6917 = !DILocation(line: 503, column: 24, scope: !6894)
!6918 = !DILocation(line: 503, column: 32, scope: !6894)
!6919 = !DILocation(line: 503, column: 23, scope: !6894)
!6920 = !DILocation(line: 503, column: 40, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 1)
!6922 = !DILocation(line: 503, column: 23, scope: !6921)
!6923 = !DILocation(line: 503, column: 53, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 2)
!6925 = !DILocation(line: 503, column: 51, scope: !6924)
!6926 = !DILocation(line: 503, column: 23, scope: !6924)
!6927 = !DILocation(line: 503, column: 23, scope: !6928)
!6928 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 3)
!6929 = !DILocation(line: 503, column: 69, scope: !6928)
!6930 = !DILocation(line: 503, column: 77, scope: !6928)
!6931 = !DILocation(line: 503, column: 68, scope: !6928)
!6932 = !DILocation(line: 503, column: 85, scope: !6933)
!6933 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 4)
!6934 = !DILocation(line: 503, column: 68, scope: !6933)
!6935 = !DILocation(line: 503, column: 98, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 5)
!6937 = !DILocation(line: 503, column: 96, scope: !6936)
!6938 = !DILocation(line: 503, column: 68, scope: !6936)
!6939 = !DILocation(line: 503, column: 68, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 6)
!6941 = !DILocation(line: 503, column: 64, scope: !6940)
!6942 = !DILocation(line: 503, column: 21, scope: !6940)
!6943 = !DILocation(line: 503, column: 114, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 7)
!6945 = !DILocation(line: 503, column: 122, scope: !6944)
!6946 = !DILocation(line: 503, column: 113, scope: !6944)
!6947 = !DILocation(line: 503, column: 130, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 8)
!6949 = !DILocation(line: 503, column: 113, scope: !6948)
!6950 = !DILocation(line: 503, column: 143, scope: !6951)
!6951 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 9)
!6952 = !DILocation(line: 503, column: 141, scope: !6951)
!6953 = !DILocation(line: 503, column: 113, scope: !6951)
!6954 = !DILocation(line: 503, column: 113, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 10)
!6956 = !DILocation(line: 503, column: 21, scope: !6955)
!6957 = !DILocation(line: 503, column: 159, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 11)
!6959 = !DILocation(line: 503, column: 167, scope: !6958)
!6960 = !DILocation(line: 503, column: 158, scope: !6958)
!6961 = !DILocation(line: 503, column: 175, scope: !6962)
!6962 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 12)
!6963 = !DILocation(line: 503, column: 158, scope: !6962)
!6964 = !DILocation(line: 503, column: 188, scope: !6965)
!6965 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 13)
!6966 = !DILocation(line: 503, column: 186, scope: !6965)
!6967 = !DILocation(line: 503, column: 158, scope: !6965)
!6968 = !DILocation(line: 503, column: 158, scope: !6969)
!6969 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 14)
!6970 = !DILocation(line: 503, column: 21, scope: !6969)
!6971 = !DILocation(line: 503, column: 21, scope: !6972)
!6972 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 15)
!6973 = !DILocation(line: 503, column: 204, scope: !6972)
!6974 = !DILocation(line: 503, column: 203, scope: !6972)
!6975 = !DILocation(line: 503, column: 201, scope: !6972)
!6976 = !DILocation(line: 503, column: 19, scope: !6972)
!6977 = !DILocation(line: 503, column: 219, scope: !6978)
!6978 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 16)
!6979 = !DILocation(line: 503, column: 227, scope: !6978)
!6980 = !DILocation(line: 503, column: 218, scope: !6978)
!6981 = !DILocation(line: 503, column: 235, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 17)
!6983 = !DILocation(line: 503, column: 218, scope: !6982)
!6984 = !DILocation(line: 503, column: 248, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 18)
!6986 = !DILocation(line: 503, column: 246, scope: !6985)
!6987 = !DILocation(line: 503, column: 218, scope: !6985)
!6988 = !DILocation(line: 503, column: 218, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 19)
!6990 = !DILocation(line: 503, column: 264, scope: !6989)
!6991 = !DILocation(line: 503, column: 272, scope: !6989)
!6992 = !DILocation(line: 503, column: 263, scope: !6989)
!6993 = !DILocation(line: 503, column: 280, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 20)
!6995 = !DILocation(line: 503, column: 263, scope: !6994)
!6996 = !DILocation(line: 503, column: 293, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 21)
!6998 = !DILocation(line: 503, column: 291, scope: !6997)
!6999 = !DILocation(line: 503, column: 263, scope: !6997)
!7000 = !DILocation(line: 503, column: 263, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 22)
!7002 = !DILocation(line: 503, column: 259, scope: !7001)
!7003 = !DILocation(line: 503, column: 216, scope: !7001)
!7004 = !DILocation(line: 503, column: 309, scope: !7005)
!7005 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 23)
!7006 = !DILocation(line: 503, column: 317, scope: !7005)
!7007 = !DILocation(line: 503, column: 308, scope: !7005)
!7008 = !DILocation(line: 503, column: 325, scope: !7009)
!7009 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 24)
!7010 = !DILocation(line: 503, column: 308, scope: !7009)
!7011 = !DILocation(line: 503, column: 338, scope: !7012)
!7012 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 25)
!7013 = !DILocation(line: 503, column: 336, scope: !7012)
!7014 = !DILocation(line: 503, column: 308, scope: !7012)
!7015 = !DILocation(line: 503, column: 308, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 26)
!7017 = !DILocation(line: 503, column: 216, scope: !7016)
!7018 = !DILocation(line: 503, column: 354, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 27)
!7020 = !DILocation(line: 503, column: 362, scope: !7019)
!7021 = !DILocation(line: 503, column: 353, scope: !7019)
!7022 = !DILocation(line: 503, column: 370, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 28)
!7024 = !DILocation(line: 503, column: 353, scope: !7023)
!7025 = !DILocation(line: 503, column: 383, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 29)
!7027 = !DILocation(line: 503, column: 381, scope: !7026)
!7028 = !DILocation(line: 503, column: 353, scope: !7026)
!7029 = !DILocation(line: 503, column: 353, scope: !7030)
!7030 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 30)
!7031 = !DILocation(line: 503, column: 216, scope: !7030)
!7032 = !DILocation(line: 503, column: 216, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 31)
!7034 = !DILocation(line: 503, column: 19, scope: !7033)
!7035 = !DILocation(line: 503, column: 399, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 32)
!7037 = !DILocation(line: 503, column: 398, scope: !7036)
!7038 = !DILocation(line: 503, column: 19, scope: !7036)
!7039 = !DILocation(line: 503, column: 19, scope: !7040)
!7040 = !DILexicalBlockFile(scope: !6894, file: !925, discriminator: 33)
!7041 = !DILocation(line: 503, column: 18, scope: !7040)
!7042 = !DILocation(line: 503, column: 16, scope: !7040)
!7043 = !DILocation(line: 504, column: 5, scope: !6894)
!7044 = !DILocation(line: 498, column: 34, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !6889, file: !925, discriminator: 2)
!7046 = !DILocation(line: 498, column: 5, scope: !7045)
!7047 = distinct !{!7047, !7048}
!7048 = !DILocation(line: 498, column: 5, scope: !6870)
!7049 = !DILocalVariable(name: "i", scope: !7050, file: !925, line: 506, type: !904)
!7050 = distinct !DILexicalBlock(scope: !6870, file: !925, line: 506, column: 5)
!7051 = !DILocation(line: 506, column: 14, scope: !7050)
!7052 = !DILocation(line: 506, column: 10, scope: !7050)
!7053 = !DILocation(line: 506, column: 21, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !7055, file: !925, discriminator: 1)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !925, line: 506, column: 5)
!7056 = !DILocation(line: 506, column: 25, scope: !7054)
!7057 = !DILocation(line: 506, column: 23, scope: !7054)
!7058 = !DILocation(line: 506, column: 5, scope: !7054)
!7059 = !DILocation(line: 507, column: 33, scope: !7055)
!7060 = !DILocation(line: 507, column: 19, scope: !7055)
!7061 = !DILocation(line: 507, column: 27, scope: !7055)
!7062 = !DILocation(line: 507, column: 25, scope: !7055)
!7063 = !DILocation(line: 507, column: 9, scope: !7055)
!7064 = !DILocation(line: 507, column: 12, scope: !7055)
!7065 = !DILocation(line: 507, column: 30, scope: !7055)
!7066 = !DILocation(line: 506, column: 33, scope: !7067)
!7067 = !DILexicalBlockFile(scope: !7055, file: !925, discriminator: 2)
!7068 = !DILocation(line: 506, column: 5, scope: !7067)
!7069 = distinct !{!7069, !7070}
!7070 = !DILocation(line: 506, column: 5, scope: !6870)
!7071 = !DILocation(line: 508, column: 1, scope: !6870)
!7072 = distinct !DISubprogram(name: "scale_band_ext_coeffs", scope: !925, file: !925, line: 510, type: !7073, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{null, !2031, !916, !951, !951}
!7075 = !DILocalVariable(name: "c", arg: 1, scope: !7072, file: !925, line: 510, type: !2031)
!7076 = !DILocation(line: 510, column: 61, scope: !7072)
!7077 = !DILocalVariable(name: "sf", arg: 2, scope: !7072, file: !925, line: 510, type: !916)
!7078 = !DILocation(line: 510, column: 70, scope: !7072)
!7079 = !DILocalVariable(name: "s_unit", arg: 3, scope: !7072, file: !925, line: 511, type: !951)
!7080 = !DILocation(line: 511, column: 52, scope: !7072)
!7081 = !DILocalVariable(name: "e_unit", arg: 4, scope: !7072, file: !925, line: 511, type: !951)
!7082 = !DILocation(line: 511, column: 70, scope: !7072)
!7083 = !DILocalVariable(name: "i", scope: !7084, file: !925, line: 513, type: !904)
!7084 = distinct !DILexicalBlock(scope: !7072, file: !925, line: 513, column: 5)
!7085 = !DILocation(line: 513, column: 14, scope: !7084)
!7086 = !DILocation(line: 513, column: 18, scope: !7084)
!7087 = !DILocation(line: 513, column: 10, scope: !7084)
!7088 = !DILocation(line: 513, column: 26, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !7090, file: !925, discriminator: 1)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !925, line: 513, column: 5)
!7091 = !DILocation(line: 513, column: 30, scope: !7089)
!7092 = !DILocation(line: 513, column: 28, scope: !7089)
!7093 = !DILocation(line: 513, column: 5, scope: !7089)
!7094 = !DILocalVariable(name: "start", scope: !7095, file: !925, line: 514, type: !951)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !925, line: 513, column: 43)
!7096 = !DILocation(line: 514, column: 19, scope: !7095)
!7097 = !DILocation(line: 514, column: 51, scope: !7095)
!7098 = !DILocation(line: 514, column: 53, scope: !7095)
!7099 = !DILocation(line: 514, column: 27, scope: !7095)
!7100 = !DILocalVariable(name: "end", scope: !7095, file: !925, line: 515, type: !951)
!7101 = !DILocation(line: 515, column: 19, scope: !7095)
!7102 = !DILocation(line: 515, column: 49, scope: !7095)
!7103 = !DILocation(line: 515, column: 51, scope: !7095)
!7104 = !DILocation(line: 515, column: 25, scope: !7095)
!7105 = !DILocalVariable(name: "j", scope: !7106, file: !925, line: 516, type: !904)
!7106 = distinct !DILexicalBlock(scope: !7095, file: !925, line: 516, column: 9)
!7107 = !DILocation(line: 516, column: 18, scope: !7106)
!7108 = !DILocation(line: 516, column: 22, scope: !7106)
!7109 = !DILocation(line: 516, column: 14, scope: !7106)
!7110 = !DILocation(line: 516, column: 29, scope: !7111)
!7111 = !DILexicalBlockFile(scope: !7112, file: !925, discriminator: 1)
!7112 = distinct !DILexicalBlock(scope: !7106, file: !925, line: 516, column: 9)
!7113 = !DILocation(line: 516, column: 33, scope: !7111)
!7114 = !DILocation(line: 516, column: 31, scope: !7111)
!7115 = !DILocation(line: 516, column: 9, scope: !7111)
!7116 = !DILocation(line: 517, column: 32, scope: !7112)
!7117 = !DILocation(line: 517, column: 36, scope: !7112)
!7118 = !DILocation(line: 517, column: 34, scope: !7112)
!7119 = !DILocation(line: 517, column: 29, scope: !7112)
!7120 = !DILocation(line: 517, column: 23, scope: !7112)
!7121 = !DILocation(line: 517, column: 13, scope: !7112)
!7122 = !DILocation(line: 517, column: 16, scope: !7112)
!7123 = !DILocation(line: 517, column: 26, scope: !7112)
!7124 = !DILocation(line: 516, column: 39, scope: !7125)
!7125 = !DILexicalBlockFile(scope: !7112, file: !925, discriminator: 2)
!7126 = !DILocation(line: 516, column: 9, scope: !7125)
!7127 = distinct !{!7127, !7128}
!7128 = !DILocation(line: 516, column: 9, scope: !7095)
!7129 = !DILocation(line: 518, column: 5, scope: !7095)
!7130 = !DILocation(line: 513, column: 39, scope: !7131)
!7131 = !DILexicalBlockFile(scope: !7090, file: !925, discriminator: 2)
!7132 = !DILocation(line: 513, column: 5, scope: !7131)
!7133 = distinct !{!7133, !7134}
!7134 = !DILocation(line: 513, column: 5, scope: !7072)
!7135 = !DILocation(line: 519, column: 1, scope: !7072)
!7136 = distinct !DISubprogram(name: "get_bits_count", scope: !2034, file: !2034, line: 219, type: !7137, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2042)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!904, !7139}
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64, align: 64)
!7140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2033)
!7141 = !DILocalVariable(name: "s", arg: 1, scope: !7136, file: !2034, line: 219, type: !7139)
!7142 = !DILocation(line: 219, column: 55, scope: !7136)
!7143 = !DILocation(line: 224, column: 12, scope: !7136)
!7144 = !DILocation(line: 224, column: 15, scope: !7136)
!7145 = !DILocation(line: 224, column: 5, scope: !7136)
