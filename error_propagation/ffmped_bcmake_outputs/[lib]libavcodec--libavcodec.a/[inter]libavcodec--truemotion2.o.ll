; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--truemotion2.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--truemotion2.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.TM2Context = type { %struct.AVCodecContext*, %struct.AVFrame*, %struct.GetBitContext, i32, %struct.BswapDSPContext, i8*, i32, [7 x i32*], [7 x i32], [7 x i32], [7 x [64 x i32]], [4 x i32], [4 x i32], i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%union.unaligned_32 = type { i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.TM2Codes = type { %struct.VLC, i32, i32*, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.TM2Huff = type { i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }

@.str = private unnamed_addr constant [12 x i8] c"truemotion2\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Duck TrueMotion 2.0\00", align 1
@ff_truemotion2_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 77, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 2152, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [40 x i8] c"Width and height must be multiple of 4\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Cannot allocate temporary buffer\0A\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"no space for tm2_read_stream\0A\00", align 1
@tm2_stream_order = internal constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6], align 16
@.str.5 = private unnamed_addr constant [15 x i8] c"Old TM2 header\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Not a TM2 header: 0x%08X\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"not enough space for len left\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Error, invalid stream size.\0A\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"Incorrect number of tokens: %i\0A\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"Invalid delta token index %d for type %d, n=%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"Incorrect delta table: %i deltas x %i bits\0A\00", align 1
@.str.15 = private unnamed_addr constant [69 x i8] c"Incorrect tree parameters - literal length: %i, max code length: %i\0A\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"Incorrect number of Huffman tree nodes: %i\0A\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"Got less bits than expected: %i of %i\0A\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"Got less codes than expected: %i of %i\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Cannot build VLC table\0A\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"Tree exceeded its given depth (%i)\0A\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"Too many literals\0A\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"Got %i tokens for %i blocks\0A\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"Skipping unknown block type %i\0A\00", align 1
@.str.24 = private unnamed_addr constant [50 x i8] c"Read token from stream %i out of bounds (%i>=%i)\0A\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"token %d is too large\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"MV out of picture\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1650 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %l = alloca %struct.TM2Context*, align 8
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1652, metadata !1653), !dbg !1654
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %l, metadata !1655, metadata !1653), !dbg !1719
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1720
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1721
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1721
  %2 = bitcast i8* %1 to %struct.TM2Context*, !dbg !1720
  store %struct.TM2Context* %2, %struct.TM2Context** %l, align 8, !dbg !1719
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1722, metadata !1653), !dbg !1723
  call void @llvm.dbg.declare(metadata i32* %w, metadata !1724, metadata !1653), !dbg !1725
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1726
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 20, !dbg !1727
  %4 = load i32, i32* %width, align 4, !dbg !1727
  store i32 %4, i32* %w, align 4, !dbg !1725
  call void @llvm.dbg.declare(metadata i32* %h, metadata !1728, metadata !1653), !dbg !1729
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1730
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 21, !dbg !1731
  %6 = load i32, i32* %height, align 8, !dbg !1731
  store i32 %6, i32* %h, align 4, !dbg !1729
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1732
  %width1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 20, !dbg !1734
  %8 = load i32, i32* %width1, align 4, !dbg !1734
  %and = and i32 %8, 3, !dbg !1735
  %tobool = icmp ne i32 %and, 0, !dbg !1735
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !1736

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1737
  %height2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 21, !dbg !1739
  %10 = load i32, i32* %height2, align 8, !dbg !1739
  %and3 = and i32 %10, 3, !dbg !1740
  %tobool4 = icmp ne i32 %and3, 0, !dbg !1740
  br i1 %tobool4, label %if.then, label %if.end, !dbg !1741

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1742
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !1742
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0)), !dbg !1744
  store i32 -22, i32* %retval, align 4, !dbg !1745
  br label %return, !dbg !1745

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1746
  %14 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1747
  %avctx5 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %14, i32 0, i32 0, !dbg !1748
  store %struct.AVCodecContext* %13, %struct.AVCodecContext** %avctx5, align 8, !dbg !1749
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1750
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 25, !dbg !1751
  store i32 3, i32* %pix_fmt, align 8, !dbg !1752
  %call = call %struct.AVFrame* @av_frame_alloc(), !dbg !1753
  %16 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1754
  %pic = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %16, i32 0, i32 1, !dbg !1755
  store %struct.AVFrame* %call, %struct.AVFrame** %pic, align 8, !dbg !1756
  %17 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1757
  %pic6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 1, !dbg !1759
  %18 = load %struct.AVFrame*, %struct.AVFrame** %pic6, align 8, !dbg !1759
  %tobool7 = icmp ne %struct.AVFrame* %18, null, !dbg !1757
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !1760

if.then8:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !1761
  br label %return, !dbg !1761

if.end9:                                          ; preds = %if.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1762
  %bdsp = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 4, !dbg !1763
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !1764
  %20 = load i32, i32* %w, align 4, !dbg !1765
  %shr = ashr i32 %20, 2, !dbg !1766
  %conv = sext i32 %shr to i64, !dbg !1765
  %call10 = call i8* @av_malloc_array(i64 %conv, i64 16), !dbg !1767
  %21 = bitcast i8* %call10 to i32*, !dbg !1767
  %22 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1768
  %last = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %22, i32 0, i32 13, !dbg !1769
  store i32* %21, i32** %last, align 8, !dbg !1770
  %23 = load i32, i32* %w, align 4, !dbg !1771
  %shr11 = ashr i32 %23, 2, !dbg !1772
  %conv12 = sext i32 %shr11 to i64, !dbg !1771
  %call13 = call i8* @av_malloc_array(i64 %conv12, i64 16), !dbg !1773
  %24 = bitcast i8* %call13 to i32*, !dbg !1773
  %25 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1774
  %clast = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %25, i32 0, i32 14, !dbg !1775
  store i32* %24, i32** %clast, align 8, !dbg !1776
  store i32 0, i32* %i, align 4, !dbg !1777
  br label %for.cond, !dbg !1779

for.cond:                                         ; preds = %for.inc, %if.end9
  %26 = load i32, i32* %i, align 4, !dbg !1780
  %cmp = icmp slt i32 %26, 7, !dbg !1783
  br i1 %cmp, label %for.body, label %for.end, !dbg !1784

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4, !dbg !1785
  %idxprom = sext i32 %27 to i64, !dbg !1787
  %28 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1787
  %tokens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 7, !dbg !1788
  %arrayidx = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens, i64 0, i64 %idxprom, !dbg !1787
  store i32* null, i32** %arrayidx, align 8, !dbg !1789
  %29 = load i32, i32* %i, align 4, !dbg !1790
  %idxprom15 = sext i32 %29 to i64, !dbg !1791
  %30 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1791
  %tok_lens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %30, i32 0, i32 8, !dbg !1792
  %arrayidx16 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens, i64 0, i64 %idxprom15, !dbg !1791
  store i32 0, i32* %arrayidx16, align 4, !dbg !1793
  br label %for.inc, !dbg !1794

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !1795
  %inc = add nsw i32 %31, 1, !dbg !1795
  store i32 %inc, i32* %i, align 4, !dbg !1795
  br label %for.cond, !dbg !1797, !llvm.loop !1798

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %w, align 4, !dbg !1800
  %add = add nsw i32 %32, 8, !dbg !1800
  store i32 %add, i32* %w, align 4, !dbg !1800
  %33 = load i32, i32* %h, align 4, !dbg !1801
  %add17 = add nsw i32 %33, 8, !dbg !1801
  store i32 %add17, i32* %h, align 4, !dbg !1801
  %34 = load i32, i32* %w, align 4, !dbg !1802
  %35 = load i32, i32* %h, align 4, !dbg !1803
  %mul = mul nsw i32 %34, %35, !dbg !1804
  %conv18 = sext i32 %mul to i64, !dbg !1802
  %call19 = call noalias i8* @av_calloc(i64 %conv18, i64 4), !dbg !1805
  %36 = bitcast i8* %call19 to i32*, !dbg !1805
  %37 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1806
  %Y1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %37, i32 0, i32 15, !dbg !1807
  store i32* %36, i32** %Y1_base, align 8, !dbg !1808
  %38 = load i32, i32* %w, align 4, !dbg !1809
  %39 = load i32, i32* %h, align 4, !dbg !1810
  %mul20 = mul nsw i32 %38, %39, !dbg !1811
  %conv21 = sext i32 %mul20 to i64, !dbg !1809
  %call22 = call noalias i8* @av_calloc(i64 %conv21, i64 4), !dbg !1812
  %40 = bitcast i8* %call22 to i32*, !dbg !1812
  %41 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1813
  %Y2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %41, i32 0, i32 18, !dbg !1814
  store i32* %40, i32** %Y2_base, align 8, !dbg !1815
  %42 = load i32, i32* %w, align 4, !dbg !1816
  %43 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1817
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %43, i32 0, i32 27, !dbg !1818
  store i32 %42, i32* %y_stride, align 8, !dbg !1819
  %44 = load i32, i32* %w, align 4, !dbg !1820
  %add23 = add nsw i32 %44, 1, !dbg !1821
  %shr24 = ashr i32 %add23, 1, !dbg !1822
  store i32 %shr24, i32* %w, align 4, !dbg !1823
  %45 = load i32, i32* %h, align 4, !dbg !1824
  %add25 = add nsw i32 %45, 1, !dbg !1825
  %shr26 = ashr i32 %add25, 1, !dbg !1826
  store i32 %shr26, i32* %h, align 4, !dbg !1827
  %46 = load i32, i32* %w, align 4, !dbg !1828
  %47 = load i32, i32* %h, align 4, !dbg !1829
  %mul27 = mul nsw i32 %46, %47, !dbg !1830
  %conv28 = sext i32 %mul27 to i64, !dbg !1828
  %call29 = call noalias i8* @av_calloc(i64 %conv28, i64 4), !dbg !1831
  %48 = bitcast i8* %call29 to i32*, !dbg !1831
  %49 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1832
  %U1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %49, i32 0, i32 16, !dbg !1833
  store i32* %48, i32** %U1_base, align 8, !dbg !1834
  %50 = load i32, i32* %w, align 4, !dbg !1835
  %51 = load i32, i32* %h, align 4, !dbg !1836
  %mul30 = mul nsw i32 %50, %51, !dbg !1837
  %conv31 = sext i32 %mul30 to i64, !dbg !1835
  %call32 = call noalias i8* @av_calloc(i64 %conv31, i64 4), !dbg !1838
  %52 = bitcast i8* %call32 to i32*, !dbg !1838
  %53 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1839
  %V1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %53, i32 0, i32 17, !dbg !1840
  store i32* %52, i32** %V1_base, align 8, !dbg !1841
  %54 = load i32, i32* %w, align 4, !dbg !1842
  %55 = load i32, i32* %h, align 4, !dbg !1843
  %mul33 = mul nsw i32 %54, %55, !dbg !1844
  %conv34 = sext i32 %mul33 to i64, !dbg !1842
  %call35 = call noalias i8* @av_calloc(i64 %conv34, i64 4), !dbg !1845
  %56 = bitcast i8* %call35 to i32*, !dbg !1845
  %57 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1846
  %U2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %57, i32 0, i32 19, !dbg !1847
  store i32* %56, i32** %U2_base, align 8, !dbg !1848
  %58 = load i32, i32* %w, align 4, !dbg !1849
  %59 = load i32, i32* %h, align 4, !dbg !1850
  %mul36 = mul nsw i32 %58, %59, !dbg !1851
  %conv37 = sext i32 %mul36 to i64, !dbg !1849
  %call38 = call noalias i8* @av_calloc(i64 %conv37, i64 4), !dbg !1852
  %60 = bitcast i8* %call38 to i32*, !dbg !1852
  %61 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1853
  %V2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %61, i32 0, i32 20, !dbg !1854
  store i32* %60, i32** %V2_base, align 8, !dbg !1855
  %62 = load i32, i32* %w, align 4, !dbg !1856
  %63 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1857
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %63, i32 0, i32 28, !dbg !1858
  store i32 %62, i32* %uv_stride, align 4, !dbg !1859
  %64 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1860
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %64, i32 0, i32 29, !dbg !1861
  store i32 0, i32* %cur, align 8, !dbg !1862
  %65 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1863
  %Y1_base39 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %65, i32 0, i32 15, !dbg !1865
  %66 = load i32*, i32** %Y1_base39, align 8, !dbg !1865
  %tobool40 = icmp ne i32* %66, null, !dbg !1863
  br i1 %tobool40, label %lor.lhs.false41, label %if.then62, !dbg !1866

lor.lhs.false41:                                  ; preds = %for.end
  %67 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1867
  %Y2_base42 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %67, i32 0, i32 18, !dbg !1869
  %68 = load i32*, i32** %Y2_base42, align 8, !dbg !1869
  %tobool43 = icmp ne i32* %68, null, !dbg !1867
  br i1 %tobool43, label %lor.lhs.false44, label %if.then62, !dbg !1870

lor.lhs.false44:                                  ; preds = %lor.lhs.false41
  %69 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1871
  %U1_base45 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %69, i32 0, i32 16, !dbg !1873
  %70 = load i32*, i32** %U1_base45, align 8, !dbg !1873
  %tobool46 = icmp ne i32* %70, null, !dbg !1871
  br i1 %tobool46, label %lor.lhs.false47, label %if.then62, !dbg !1874

lor.lhs.false47:                                  ; preds = %lor.lhs.false44
  %71 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1875
  %V1_base48 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %71, i32 0, i32 17, !dbg !1876
  %72 = load i32*, i32** %V1_base48, align 8, !dbg !1876
  %tobool49 = icmp ne i32* %72, null, !dbg !1875
  br i1 %tobool49, label %lor.lhs.false50, label %if.then62, !dbg !1877

lor.lhs.false50:                                  ; preds = %lor.lhs.false47
  %73 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1878
  %U2_base51 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %73, i32 0, i32 19, !dbg !1879
  %74 = load i32*, i32** %U2_base51, align 8, !dbg !1879
  %tobool52 = icmp ne i32* %74, null, !dbg !1878
  br i1 %tobool52, label %lor.lhs.false53, label %if.then62, !dbg !1880

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %75 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1881
  %V2_base54 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %75, i32 0, i32 20, !dbg !1882
  %76 = load i32*, i32** %V2_base54, align 8, !dbg !1882
  %tobool55 = icmp ne i32* %76, null, !dbg !1881
  br i1 %tobool55, label %lor.lhs.false56, label %if.then62, !dbg !1883

lor.lhs.false56:                                  ; preds = %lor.lhs.false53
  %77 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1884
  %last57 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %77, i32 0, i32 13, !dbg !1885
  %78 = load i32*, i32** %last57, align 8, !dbg !1885
  %tobool58 = icmp ne i32* %78, null, !dbg !1884
  br i1 %tobool58, label %lor.lhs.false59, label %if.then62, !dbg !1886

lor.lhs.false59:                                  ; preds = %lor.lhs.false56
  %79 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1887
  %clast60 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %79, i32 0, i32 14, !dbg !1888
  %80 = load i32*, i32** %clast60, align 8, !dbg !1888
  %tobool61 = icmp ne i32* %80, null, !dbg !1887
  br i1 %tobool61, label %if.end72, label %if.then62, !dbg !1889

if.then62:                                        ; preds = %lor.lhs.false59, %lor.lhs.false56, %lor.lhs.false53, %lor.lhs.false50, %lor.lhs.false47, %lor.lhs.false44, %lor.lhs.false41, %for.end
  %81 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1891
  %Y1_base63 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %81, i32 0, i32 15, !dbg !1893
  %82 = bitcast i32** %Y1_base63 to i8*, !dbg !1894
  call void @av_freep(i8* %82), !dbg !1895
  %83 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1896
  %Y2_base64 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %83, i32 0, i32 18, !dbg !1897
  %84 = bitcast i32** %Y2_base64 to i8*, !dbg !1898
  call void @av_freep(i8* %84), !dbg !1899
  %85 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1900
  %U1_base65 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %85, i32 0, i32 16, !dbg !1901
  %86 = bitcast i32** %U1_base65 to i8*, !dbg !1902
  call void @av_freep(i8* %86), !dbg !1903
  %87 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1904
  %U2_base66 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %87, i32 0, i32 19, !dbg !1905
  %88 = bitcast i32** %U2_base66 to i8*, !dbg !1906
  call void @av_freep(i8* %88), !dbg !1907
  %89 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1908
  %V1_base67 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %89, i32 0, i32 17, !dbg !1909
  %90 = bitcast i32** %V1_base67 to i8*, !dbg !1910
  call void @av_freep(i8* %90), !dbg !1911
  %91 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1912
  %V2_base68 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %91, i32 0, i32 20, !dbg !1913
  %92 = bitcast i32** %V2_base68 to i8*, !dbg !1914
  call void @av_freep(i8* %92), !dbg !1915
  %93 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1916
  %last69 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %93, i32 0, i32 13, !dbg !1917
  %94 = bitcast i32** %last69 to i8*, !dbg !1918
  call void @av_freep(i8* %94), !dbg !1919
  %95 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1920
  %clast70 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %95, i32 0, i32 14, !dbg !1921
  %96 = bitcast i32** %clast70 to i8*, !dbg !1922
  call void @av_freep(i8* %96), !dbg !1923
  %97 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1924
  %pic71 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %97, i32 0, i32 1, !dbg !1925
  call void @av_frame_free(%struct.AVFrame** %pic71), !dbg !1926
  store i32 -12, i32* %retval, align 4, !dbg !1927
  br label %return, !dbg !1927

if.end72:                                         ; preds = %lor.lhs.false59
  %98 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1928
  %Y1_base73 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %98, i32 0, i32 15, !dbg !1929
  %99 = load i32*, i32** %Y1_base73, align 8, !dbg !1929
  %100 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1930
  %y_stride74 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %100, i32 0, i32 27, !dbg !1931
  %101 = load i32, i32* %y_stride74, align 8, !dbg !1931
  %mul75 = mul nsw i32 %101, 4, !dbg !1932
  %idx.ext = sext i32 %mul75 to i64, !dbg !1933
  %add.ptr = getelementptr inbounds i32, i32* %99, i64 %idx.ext, !dbg !1933
  %add.ptr76 = getelementptr inbounds i32, i32* %add.ptr, i64 4, !dbg !1934
  %102 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1935
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %102, i32 0, i32 21, !dbg !1936
  store i32* %add.ptr76, i32** %Y1, align 8, !dbg !1937
  %103 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1938
  %Y2_base77 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %103, i32 0, i32 18, !dbg !1939
  %104 = load i32*, i32** %Y2_base77, align 8, !dbg !1939
  %105 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1940
  %y_stride78 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %105, i32 0, i32 27, !dbg !1941
  %106 = load i32, i32* %y_stride78, align 8, !dbg !1941
  %mul79 = mul nsw i32 %106, 4, !dbg !1942
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !1943
  %add.ptr81 = getelementptr inbounds i32, i32* %104, i64 %idx.ext80, !dbg !1943
  %add.ptr82 = getelementptr inbounds i32, i32* %add.ptr81, i64 4, !dbg !1944
  %107 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1945
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %107, i32 0, i32 24, !dbg !1946
  store i32* %add.ptr82, i32** %Y2, align 8, !dbg !1947
  %108 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1948
  %U1_base83 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %108, i32 0, i32 16, !dbg !1949
  %109 = load i32*, i32** %U1_base83, align 8, !dbg !1949
  %110 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1950
  %uv_stride84 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %110, i32 0, i32 28, !dbg !1951
  %111 = load i32, i32* %uv_stride84, align 4, !dbg !1951
  %mul85 = mul nsw i32 %111, 2, !dbg !1952
  %idx.ext86 = sext i32 %mul85 to i64, !dbg !1953
  %add.ptr87 = getelementptr inbounds i32, i32* %109, i64 %idx.ext86, !dbg !1953
  %add.ptr88 = getelementptr inbounds i32, i32* %add.ptr87, i64 2, !dbg !1954
  %112 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1955
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %112, i32 0, i32 22, !dbg !1956
  store i32* %add.ptr88, i32** %U1, align 8, !dbg !1957
  %113 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1958
  %U2_base89 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %113, i32 0, i32 19, !dbg !1959
  %114 = load i32*, i32** %U2_base89, align 8, !dbg !1959
  %115 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1960
  %uv_stride90 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %115, i32 0, i32 28, !dbg !1961
  %116 = load i32, i32* %uv_stride90, align 4, !dbg !1961
  %mul91 = mul nsw i32 %116, 2, !dbg !1962
  %idx.ext92 = sext i32 %mul91 to i64, !dbg !1963
  %add.ptr93 = getelementptr inbounds i32, i32* %114, i64 %idx.ext92, !dbg !1963
  %add.ptr94 = getelementptr inbounds i32, i32* %add.ptr93, i64 2, !dbg !1964
  %117 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1965
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %117, i32 0, i32 25, !dbg !1966
  store i32* %add.ptr94, i32** %U2, align 8, !dbg !1967
  %118 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1968
  %V1_base95 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %118, i32 0, i32 17, !dbg !1969
  %119 = load i32*, i32** %V1_base95, align 8, !dbg !1969
  %120 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1970
  %uv_stride96 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %120, i32 0, i32 28, !dbg !1971
  %121 = load i32, i32* %uv_stride96, align 4, !dbg !1971
  %mul97 = mul nsw i32 %121, 2, !dbg !1972
  %idx.ext98 = sext i32 %mul97 to i64, !dbg !1973
  %add.ptr99 = getelementptr inbounds i32, i32* %119, i64 %idx.ext98, !dbg !1973
  %add.ptr100 = getelementptr inbounds i32, i32* %add.ptr99, i64 2, !dbg !1974
  %122 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1975
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %122, i32 0, i32 23, !dbg !1976
  store i32* %add.ptr100, i32** %V1, align 8, !dbg !1977
  %123 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1978
  %V2_base101 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %123, i32 0, i32 20, !dbg !1979
  %124 = load i32*, i32** %V2_base101, align 8, !dbg !1979
  %125 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1980
  %uv_stride102 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %125, i32 0, i32 28, !dbg !1981
  %126 = load i32, i32* %uv_stride102, align 4, !dbg !1981
  %mul103 = mul nsw i32 %126, 2, !dbg !1982
  %idx.ext104 = sext i32 %mul103 to i64, !dbg !1983
  %add.ptr105 = getelementptr inbounds i32, i32* %124, i64 %idx.ext104, !dbg !1983
  %add.ptr106 = getelementptr inbounds i32, i32* %add.ptr105, i64 2, !dbg !1984
  %127 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !1985
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %127, i32 0, i32 26, !dbg !1986
  store i32* %add.ptr106, i32** %V2, align 8, !dbg !1987
  store i32 0, i32* %retval, align 4, !dbg !1988
  br label %return, !dbg !1988

return:                                           ; preds = %if.end72, %if.then62, %if.then8, %if.then
  %128 = load i32, i32* %retval, align 4, !dbg !1989
  ret i32 %128, !dbg !1989
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #1 !dbg !1990 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %l = alloca %struct.TM2Context*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %p = alloca %struct.AVFrame*, align 8
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %ret = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1991, metadata !1653), !dbg !1992
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1993, metadata !1653), !dbg !1994
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !1995, metadata !1653), !dbg !1996
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !1997, metadata !1653), !dbg !1998
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %l, metadata !1999, metadata !1653), !dbg !2000
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2001
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2002
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2002
  %2 = bitcast i8* %1 to %struct.TM2Context*, !dbg !2001
  store %struct.TM2Context* %2, %struct.TM2Context** %l, align 8, !dbg !2000
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2003, metadata !1653), !dbg !2004
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2005
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 3, !dbg !2006
  %4 = load i8*, i8** %data1, align 8, !dbg !2006
  store i8* %4, i8** %buf, align 8, !dbg !2004
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2007, metadata !1653), !dbg !2008
  %5 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2009
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !2010
  %6 = load i32, i32* %size, align 8, !dbg !2010
  %and = and i32 %6, -4, !dbg !2011
  store i32 %and, i32* %buf_size, align 4, !dbg !2008
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !2012, metadata !1653), !dbg !2014
  %7 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2015
  %pic = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %7, i32 0, i32 1, !dbg !2016
  %8 = load %struct.AVFrame*, %struct.AVFrame** %pic, align 8, !dbg !2016
  store %struct.AVFrame* %8, %struct.AVFrame** %p, align 8, !dbg !2014
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2017, metadata !1653), !dbg !2018
  store i32 40, i32* %offset, align 4, !dbg !2018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2019, metadata !1653), !dbg !2020
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2021, metadata !1653), !dbg !2022
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2023, metadata !1653), !dbg !2024
  %9 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2025
  %error = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %9, i32 0, i32 3, !dbg !2026
  store i32 0, i32* %error, align 8, !dbg !2027
  %10 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2028
  %buffer = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 5, !dbg !2029
  %11 = bitcast i8** %buffer to i8*, !dbg !2030
  %12 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2031
  %buffer_size = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %12, i32 0, i32 6, !dbg !2032
  %13 = load i32, i32* %buf_size, align 4, !dbg !2033
  %conv = sext i32 %13 to i64, !dbg !2033
  call void @av_fast_padded_malloc(i8* %11, i32* %buffer_size, i64 %conv), !dbg !2034
  %14 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2035
  %buffer2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %14, i32 0, i32 5, !dbg !2037
  %15 = load i8*, i8** %buffer2, align 8, !dbg !2037
  %tobool = icmp ne i8* %15, null, !dbg !2035
  br i1 %tobool, label %if.end, label %if.then, !dbg !2038

if.then:                                          ; preds = %entry
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2039
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !2039
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0)), !dbg !2041
  store i32 -12, i32* %retval, align 4, !dbg !2042
  br label %return, !dbg !2042

if.end:                                           ; preds = %entry
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2043
  %19 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2045
  %call = call i32 @ff_reget_buffer(%struct.AVCodecContext* %18, %struct.AVFrame* %19), !dbg !2046
  store i32 %call, i32* %ret, align 4, !dbg !2047
  %cmp = icmp slt i32 %call, 0, !dbg !2048
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !2049

if.then4:                                         ; preds = %if.end
  %20 = load i32, i32* %ret, align 4, !dbg !2050
  store i32 %20, i32* %retval, align 4, !dbg !2051
  br label %return, !dbg !2051

if.end5:                                          ; preds = %if.end
  %21 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2052
  %bdsp = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %21, i32 0, i32 4, !dbg !2053
  %bswap_buf = getelementptr inbounds %struct.BswapDSPContext, %struct.BswapDSPContext* %bdsp, i32 0, i32 0, !dbg !2054
  %22 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %bswap_buf, align 8, !dbg !2054
  %23 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2055
  %buffer6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %23, i32 0, i32 5, !dbg !2056
  %24 = load i8*, i8** %buffer6, align 8, !dbg !2056
  %25 = bitcast i8* %24 to i32*, !dbg !2057
  %26 = load i8*, i8** %buf, align 8, !dbg !2058
  %27 = bitcast i8* %26 to i32*, !dbg !2059
  %28 = load i32, i32* %buf_size, align 4, !dbg !2060
  %shr = ashr i32 %28, 2, !dbg !2061
  call void %22(i32* %25, i32* %27, i32 %shr), !dbg !2052
  %29 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2062
  %30 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2064
  %buffer7 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %30, i32 0, i32 5, !dbg !2065
  %31 = load i8*, i8** %buffer7, align 8, !dbg !2065
  %call8 = call i32 @tm2_read_header(%struct.TM2Context* %29, i8* %31), !dbg !2066
  store i32 %call8, i32* %ret, align 4, !dbg !2067
  %cmp9 = icmp slt i32 %call8, 0, !dbg !2068
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !2069

if.then11:                                        ; preds = %if.end5
  %32 = load i32, i32* %ret, align 4, !dbg !2070
  store i32 %32, i32* %retval, align 4, !dbg !2072
  br label %return, !dbg !2072

if.end12:                                         ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !2073
  br label %for.cond, !dbg !2075

for.cond:                                         ; preds = %for.inc, %if.end12
  %33 = load i32, i32* %i, align 4, !dbg !2076
  %cmp13 = icmp slt i32 %33, 7, !dbg !2079
  br i1 %cmp13, label %for.body, label %for.end, !dbg !2080

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %offset, align 4, !dbg !2081
  %35 = load i32, i32* %buf_size, align 4, !dbg !2084
  %cmp15 = icmp sge i32 %34, %35, !dbg !2085
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !2086

if.then17:                                        ; preds = %for.body
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2087
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2087
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0)), !dbg !2089
  store i32 -1094995529, i32* %retval, align 4, !dbg !2090
  br label %return, !dbg !2090

if.end18:                                         ; preds = %for.body
  %38 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2091
  %39 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2092
  %buffer19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %39, i32 0, i32 5, !dbg !2093
  %40 = load i8*, i8** %buffer19, align 8, !dbg !2093
  %41 = load i32, i32* %offset, align 4, !dbg !2094
  %idx.ext = sext i32 %41 to i64, !dbg !2095
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %idx.ext, !dbg !2095
  %42 = load i32, i32* %i, align 4, !dbg !2096
  %idxprom = sext i32 %42 to i64, !dbg !2097
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* @tm2_stream_order, i64 0, i64 %idxprom, !dbg !2097
  %43 = load i32, i32* %arrayidx, align 4, !dbg !2097
  %44 = load i32, i32* %buf_size, align 4, !dbg !2098
  %45 = load i32, i32* %offset, align 4, !dbg !2099
  %sub = sub nsw i32 %44, %45, !dbg !2100
  %call20 = call i32 @tm2_read_stream(%struct.TM2Context* %38, i8* %add.ptr, i32 %43, i32 %sub), !dbg !2101
  store i32 %call20, i32* %t, align 4, !dbg !2102
  %46 = load i32, i32* %t, align 4, !dbg !2103
  %cmp21 = icmp slt i32 %46, 0, !dbg !2105
  br i1 %cmp21, label %if.then23, label %if.end37, !dbg !2106

if.then23:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2107, metadata !1653), !dbg !2109
  %47 = load i32, i32* %i, align 4, !dbg !2110
  %idxprom24 = sext i32 %47 to i64, !dbg !2111
  %arrayidx25 = getelementptr inbounds [7 x i32], [7 x i32]* @tm2_stream_order, i64 0, i64 %idxprom24, !dbg !2111
  %48 = load i32, i32* %arrayidx25, align 4, !dbg !2111
  store i32 %48, i32* %j, align 4, !dbg !2109
  %49 = load i32, i32* %j, align 4, !dbg !2112
  %idxprom26 = sext i32 %49 to i64, !dbg !2114
  %50 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2114
  %tok_lens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %50, i32 0, i32 8, !dbg !2115
  %arrayidx27 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens, i64 0, i64 %idxprom26, !dbg !2114
  %51 = load i32, i32* %arrayidx27, align 4, !dbg !2114
  %tobool28 = icmp ne i32 %51, 0, !dbg !2114
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !2116

if.then29:                                        ; preds = %if.then23
  %52 = load i32, i32* %j, align 4, !dbg !2117
  %idxprom30 = sext i32 %52 to i64, !dbg !2118
  %53 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2118
  %tokens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %53, i32 0, i32 7, !dbg !2119
  %arrayidx31 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens, i64 0, i64 %idxprom30, !dbg !2118
  %54 = load i32*, i32** %arrayidx31, align 8, !dbg !2118
  %55 = bitcast i32* %54 to i8*, !dbg !2120
  %56 = load i32, i32* %j, align 4, !dbg !2121
  %idxprom32 = sext i32 %56 to i64, !dbg !2122
  %57 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2122
  %tok_lens33 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %57, i32 0, i32 8, !dbg !2123
  %arrayidx34 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens33, i64 0, i64 %idxprom32, !dbg !2122
  %58 = load i32, i32* %arrayidx34, align 4, !dbg !2122
  %conv35 = sext i32 %58 to i64, !dbg !2122
  %mul = mul i64 4, %conv35, !dbg !2124
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 %mul, i32 4, i1 false), !dbg !2120
  br label %if.end36, !dbg !2120

if.end36:                                         ; preds = %if.then29, %if.then23
  %59 = load i32, i32* %t, align 4, !dbg !2125
  store i32 %59, i32* %retval, align 4, !dbg !2126
  br label %return, !dbg !2126

if.end37:                                         ; preds = %if.end18
  %60 = load i32, i32* %t, align 4, !dbg !2127
  %61 = load i32, i32* %offset, align 4, !dbg !2128
  %add = add nsw i32 %61, %60, !dbg !2128
  store i32 %add, i32* %offset, align 4, !dbg !2128
  br label %for.inc, !dbg !2129

for.inc:                                          ; preds = %if.end37
  %62 = load i32, i32* %i, align 4, !dbg !2130
  %inc = add nsw i32 %62, 1, !dbg !2130
  store i32 %inc, i32* %i, align 4, !dbg !2130
  br label %for.cond, !dbg !2132, !llvm.loop !2133

for.end:                                          ; preds = %for.cond
  %63 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2135
  %64 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2136
  %call38 = call i32 @tm2_decode_blocks(%struct.TM2Context* %63, %struct.AVFrame* %64), !dbg !2137
  %65 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2138
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 7, !dbg !2139
  store i32 %call38, i32* %key_frame, align 8, !dbg !2140
  %66 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2141
  %key_frame39 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 7, !dbg !2143
  %67 = load i32, i32* %key_frame39, align 8, !dbg !2143
  %tobool40 = icmp ne i32 %67, 0, !dbg !2141
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !2144

if.then41:                                        ; preds = %for.end
  %68 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2145
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 8, !dbg !2146
  store i32 1, i32* %pict_type, align 4, !dbg !2147
  br label %if.end43, !dbg !2145

if.else:                                          ; preds = %for.end
  %69 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2148
  %pict_type42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %69, i32 0, i32 8, !dbg !2149
  store i32 2, i32* %pict_type42, align 4, !dbg !2150
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then41
  %70 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2151
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %70, i32 0, i32 29, !dbg !2152
  %71 = load i32, i32* %cur, align 8, !dbg !2152
  %tobool44 = icmp ne i32 %71, 0, !dbg !2153
  %lnot = xor i1 %tobool44, true, !dbg !2153
  %lnot.ext = zext i1 %lnot to i32, !dbg !2153
  %72 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2154
  %cur45 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %72, i32 0, i32 29, !dbg !2155
  store i32 %lnot.ext, i32* %cur45, align 8, !dbg !2156
  %73 = load i32*, i32** %got_frame.addr, align 8, !dbg !2157
  store i32 1, i32* %73, align 4, !dbg !2158
  %74 = load i8*, i8** %data.addr, align 8, !dbg !2159
  %75 = bitcast i8* %74 to %struct.AVFrame*, !dbg !2159
  %76 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2160
  %pic46 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %76, i32 0, i32 1, !dbg !2161
  %77 = load %struct.AVFrame*, %struct.AVFrame** %pic46, align 8, !dbg !2161
  %call47 = call i32 @av_frame_ref(%struct.AVFrame* %75, %struct.AVFrame* %77), !dbg !2162
  store i32 %call47, i32* %ret, align 4, !dbg !2163
  %78 = load i32, i32* %ret, align 4, !dbg !2164
  %cmp48 = icmp slt i32 %78, 0, !dbg !2165
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !2166

cond.true:                                        ; preds = %if.end43
  %79 = load i32, i32* %ret, align 4, !dbg !2167
  br label %cond.end, !dbg !2169

cond.false:                                       ; preds = %if.end43
  %80 = load i32, i32* %buf_size, align 4, !dbg !2170
  br label %cond.end, !dbg !2172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %79, %cond.true ], [ %80, %cond.false ], !dbg !2173
  store i32 %cond, i32* %retval, align 4, !dbg !2175
  br label %return, !dbg !2175

return:                                           ; preds = %cond.end, %if.end36, %if.then17, %if.then11, %if.then4, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !2176
  ret i32 %81, !dbg !2176
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !2177 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %l = alloca %struct.TM2Context*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2178, metadata !1653), !dbg !2179
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %l, metadata !2180, metadata !1653), !dbg !2181
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2182
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2183
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2183
  %2 = bitcast i8* %1 to %struct.TM2Context*, !dbg !2182
  store %struct.TM2Context* %2, %struct.TM2Context** %l, align 8, !dbg !2181
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2184, metadata !1653), !dbg !2185
  %3 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2186
  %last = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %3, i32 0, i32 13, !dbg !2187
  %4 = load i32*, i32** %last, align 8, !dbg !2187
  %5 = bitcast i32* %4 to i8*, !dbg !2186
  call void @av_free(i8* %5), !dbg !2188
  %6 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2189
  %clast = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 14, !dbg !2190
  %7 = load i32*, i32** %clast, align 8, !dbg !2190
  %8 = bitcast i32* %7 to i8*, !dbg !2189
  call void @av_free(i8* %8), !dbg !2191
  store i32 0, i32* %i, align 4, !dbg !2192
  br label %for.cond, !dbg !2194

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !2195
  %cmp = icmp slt i32 %9, 7, !dbg !2198
  br i1 %cmp, label %for.body, label %for.end, !dbg !2199

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !2200
  %idxprom = sext i32 %10 to i64, !dbg !2201
  %11 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2201
  %tokens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %11, i32 0, i32 7, !dbg !2202
  %arrayidx = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens, i64 0, i64 %idxprom, !dbg !2201
  %12 = bitcast i32** %arrayidx to i8*, !dbg !2203
  call void @av_freep(i8* %12), !dbg !2204
  br label %for.inc, !dbg !2204

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !2205
  %inc = add nsw i32 %13, 1, !dbg !2205
  store i32 %inc, i32* %i, align 4, !dbg !2205
  br label %for.cond, !dbg !2207, !llvm.loop !2208

for.end:                                          ; preds = %for.cond
  %14 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2210
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %14, i32 0, i32 21, !dbg !2212
  %15 = load i32*, i32** %Y1, align 8, !dbg !2212
  %tobool = icmp ne i32* %15, null, !dbg !2210
  br i1 %tobool, label %if.then, label %if.end, !dbg !2213

if.then:                                          ; preds = %for.end
  %16 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2214
  %Y1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %16, i32 0, i32 15, !dbg !2216
  %17 = bitcast i32** %Y1_base to i8*, !dbg !2217
  call void @av_freep(i8* %17), !dbg !2218
  %18 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2219
  %U1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %18, i32 0, i32 16, !dbg !2220
  %19 = bitcast i32** %U1_base to i8*, !dbg !2221
  call void @av_freep(i8* %19), !dbg !2222
  %20 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2223
  %V1_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %20, i32 0, i32 17, !dbg !2224
  %21 = bitcast i32** %V1_base to i8*, !dbg !2225
  call void @av_freep(i8* %21), !dbg !2226
  %22 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2227
  %Y2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %22, i32 0, i32 18, !dbg !2228
  %23 = bitcast i32** %Y2_base to i8*, !dbg !2229
  call void @av_freep(i8* %23), !dbg !2230
  %24 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2231
  %U2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 19, !dbg !2232
  %25 = bitcast i32** %U2_base to i8*, !dbg !2233
  call void @av_freep(i8* %25), !dbg !2234
  %26 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2235
  %V2_base = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 20, !dbg !2236
  %27 = bitcast i32** %V2_base to i8*, !dbg !2237
  call void @av_freep(i8* %27), !dbg !2238
  br label %if.end, !dbg !2239

if.end:                                           ; preds = %if.then, %for.end
  %28 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2240
  %buffer = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 5, !dbg !2241
  %29 = bitcast i8** %buffer to i8*, !dbg !2242
  call void @av_freep(i8* %29), !dbg !2243
  %30 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2244
  %buffer_size = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %30, i32 0, i32 6, !dbg !2245
  store i32 0, i32* %buffer_size, align 8, !dbg !2246
  %31 = load %struct.TM2Context*, %struct.TM2Context** %l, align 8, !dbg !2247
  %pic = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %31, i32 0, i32 1, !dbg !2248
  call void @av_frame_free(%struct.AVFrame** %pic), !dbg !2249
  ret i32 0, !dbg !2250
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

declare %struct.AVFrame* @av_frame_alloc() #3

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #3

declare i8* @av_malloc_array(i64, i64) #3

declare noalias i8* @av_calloc(i64, i64) #3

declare void @av_freep(i8*) #3

declare void @av_frame_free(%struct.AVFrame**) #3

declare void @av_fast_padded_malloc(i8*, i32*, i64) #3

declare i32 @ff_reget_buffer(%struct.AVCodecContext*, %struct.AVFrame*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @tm2_read_header(%struct.TM2Context* %ctx, i8* %buf) #4 !dbg !2251 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %buf.addr = alloca i8*, align 8
  %magic = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !2254, metadata !1653), !dbg !2255
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2256, metadata !1653), !dbg !2257
  call void @llvm.dbg.declare(metadata i32* %magic, metadata !2258, metadata !1653), !dbg !2259
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !2260
  %1 = bitcast i8* %0 to %union.unaligned_32*, !dbg !2261
  %l = bitcast %union.unaligned_32* %1 to i32*, !dbg !2261
  %2 = load i32, i32* %l, align 1, !dbg !2261
  store i32 %2, i32* %magic, align 4, !dbg !2259
  %3 = load i32, i32* %magic, align 4, !dbg !2262
  switch i32 %3, label %sw.default [
    i32 256, label %sw.bb
    i32 257, label %sw.bb1
  ], !dbg !2263

sw.bb:                                            ; preds = %entry
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2264
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 0, !dbg !2266
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2266
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !2264
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0)), !dbg !2267
  store i32 0, i32* %retval, align 4, !dbg !2268
  br label %return, !dbg !2268

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2269
  br label %return, !dbg !2269

sw.default:                                       ; preds = %entry
  %7 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2270
  %avctx2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %7, i32 0, i32 0, !dbg !2271
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !2271
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !2270
  %10 = load i32, i32* %magic, align 4, !dbg !2272
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i32 0, i32 0), i32 %10), !dbg !2273
  store i32 -1094995529, i32* %retval, align 4, !dbg !2274
  br label %return, !dbg !2274

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %11 = load i32, i32* %retval, align 4, !dbg !2275
  ret i32 %11, !dbg !2275
}

; Function Attrs: nounwind uwtable
define internal i32 @tm2_read_stream(%struct.TM2Context* %ctx, i8* %buf, i32 %stream_id, i32 %buf_size) #1 !dbg !2276 {
entry:
  %g.addr.i431 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i431, metadata !2279, metadata !1653), !dbg !2291
  %g.addr.i410 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i410, metadata !2293, metadata !1653), !dbg !2297
  %size.addr.i411 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i411, metadata !2301, metadata !1653), !dbg !2302
  %g.addr.i389 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i389, metadata !2293, metadata !1653), !dbg !2303
  %size.addr.i390 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i390, metadata !2301, metadata !1653), !dbg !2306
  %x.addr.i.i.i.i355 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i355, metadata !2307, metadata !1653), !dbg !2312
  %b.addr.i.i.i356 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i356, metadata !2326, metadata !1653), !dbg !2327
  %g.addr.i.i357 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i357, metadata !2328, metadata !1653), !dbg !2329
  %retval.i358 = alloca i32, align 4
  %g.addr.i359 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i359, metadata !2330, metadata !1653), !dbg !2331
  %g.addr.i334 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i334, metadata !2293, metadata !1653), !dbg !2332
  %size.addr.i335 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i335, metadata !2301, metadata !1653), !dbg !2335
  %x.addr.i.i.i.i300 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i300, metadata !2307, metadata !1653), !dbg !2336
  %b.addr.i.i.i301 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i301, metadata !2326, metadata !1653), !dbg !2341
  %g.addr.i.i302 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i302, metadata !2328, metadata !1653), !dbg !2342
  %retval.i303 = alloca i32, align 4
  %g.addr.i304 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i304, metadata !2330, metadata !1653), !dbg !2343
  %g.addr.i293 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i293, metadata !2279, metadata !1653), !dbg !2344
  %g.addr.i284 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i284, metadata !2293, metadata !1653), !dbg !2348
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !2301, metadata !1653), !dbg !2355
  %g.addr.i278 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i278, metadata !2279, metadata !1653), !dbg !2356
  %x.addr.i.i.i.i244 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i244, metadata !2307, metadata !1653), !dbg !2358
  %b.addr.i.i.i245 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i245, metadata !2326, metadata !1653), !dbg !2365
  %g.addr.i.i246 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i246, metadata !2328, metadata !1653), !dbg !2366
  %retval.i247 = alloca i32, align 4
  %g.addr.i248 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i248, metadata !2330, metadata !1653), !dbg !2367
  %x.addr.i.i.i.i210 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i210, metadata !2307, metadata !1653), !dbg !2368
  %b.addr.i.i.i211 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i211, metadata !2326, metadata !1653), !dbg !2373
  %g.addr.i.i212 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i212, metadata !2328, metadata !1653), !dbg !2374
  %retval.i213 = alloca i32, align 4
  %g.addr.i214 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i214, metadata !2330, metadata !1653), !dbg !2375
  %x.addr.i.i.i.i176 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i176, metadata !2307, metadata !1653), !dbg !2376
  %b.addr.i.i.i177 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i177, metadata !2326, metadata !1653), !dbg !2381
  %g.addr.i.i178 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i178, metadata !2328, metadata !1653), !dbg !2382
  %retval.i179 = alloca i32, align 4
  %g.addr.i180 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i180, metadata !2330, metadata !1653), !dbg !2383
  %x.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i, metadata !2307, metadata !1653), !dbg !2384
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2326, metadata !1653), !dbg !2389
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2328, metadata !1653), !dbg !2390
  %retval.i = alloca i32, align 4
  %g.addr.i171 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i171, metadata !2330, metadata !1653), !dbg !2391
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2392, metadata !1653), !dbg !2396
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2398, metadata !1653), !dbg !2399
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2400, metadata !1653), !dbg !2401
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %buf.addr = alloca i8*, align 8
  %stream_id.addr = alloca i32, align 4
  %buf_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %skip = alloca i32, align 4
  %len = alloca i32, align 4
  %toks = alloca i32, align 4
  %pos = alloca i32, align 4
  %codes = alloca %struct.TM2Codes, align 8
  %gb = alloca %struct.GetByteContext, align 8
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !2402, metadata !1653), !dbg !2403
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2404, metadata !1653), !dbg !2405
  store i32 %stream_id, i32* %stream_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_id.addr, metadata !2406, metadata !1653), !dbg !2407
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !2408, metadata !1653), !dbg !2409
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2410, metadata !1653), !dbg !2411
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2412, metadata !1653), !dbg !2413
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2414, metadata !1653), !dbg !2415
  store i32 0, i32* %skip, align 4, !dbg !2415
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2416, metadata !1653), !dbg !2417
  call void @llvm.dbg.declare(metadata i32* %toks, metadata !2418, metadata !1653), !dbg !2419
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !2420, metadata !1653), !dbg !2421
  call void @llvm.dbg.declare(metadata %struct.TM2Codes* %codes, metadata !2422, metadata !1653), !dbg !2444
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !2445, metadata !1653), !dbg !2446
  %0 = load i32, i32* %buf_size.addr, align 4, !dbg !2447
  %cmp = icmp slt i32 %0, 4, !dbg !2449
  br i1 %cmp, label %if.then, label %if.end, !dbg !2450

if.then:                                          ; preds = %entry
  %1 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2451
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %1, i32 0, i32 0, !dbg !2453
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2453
  %3 = bitcast %struct.AVCodecContext* %2 to i8*, !dbg !2451
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i32 0, i32 0)), !dbg !2454
  store i32 -1094995529, i32* %retval, align 4, !dbg !2455
  br label %return, !dbg !2455

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !2456
  %5 = load i32, i32* %buf_size.addr, align 4, !dbg !2457
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2458
  store i8* %4, i8** %buf.addr.i, align 8, !dbg !2458
  store i32 %5, i32* %buf_size.addr.i, align 4, !dbg !2458
  %6 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2459
  %cmp.i = icmp sge i32 %6, 0, !dbg !2463
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !2464

if.then.i:                                        ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 137) #7, !dbg !2465
  call void @abort() #8, !dbg !2468
  unreachable, !dbg !2470

bytestream2_init.exit:                            ; preds = %if.end
  %7 = load i8*, i8** %buf.addr.i, align 8, !dbg !2471
  %8 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2472
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %8, i32 0, i32 0, !dbg !2473
  store i8* %7, i8** %buffer.i, align 8, !dbg !2474
  %9 = load i8*, i8** %buf.addr.i, align 8, !dbg !2475
  %10 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2476
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %10, i32 0, i32 2, !dbg !2477
  store i8* %9, i8** %buffer_start.i, align 8, !dbg !2478
  %11 = load i8*, i8** %buf.addr.i, align 8, !dbg !2479
  %12 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2480
  %idx.ext.i = sext i32 %12 to i64, !dbg !2481
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !2481
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2482
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 1, !dbg !2483
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2484
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2485
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2486
  %buffer_end.i172 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 1, !dbg !2488
  %15 = load i8*, i8** %buffer_end.i172, align 8, !dbg !2488
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2489
  %buffer.i173 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 0, !dbg !2490
  %17 = load i8*, i8** %buffer.i173, align 8, !dbg !2490
  %sub.ptr.lhs.cast.i = ptrtoint i8* %15 to i64, !dbg !2491
  %sub.ptr.rhs.cast.i = ptrtoint i8* %17 to i64, !dbg !2491
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2491
  %cmp.i174 = icmp slt i64 %sub.ptr.sub.i, 4, !dbg !2492
  br i1 %cmp.i174, label %if.then.i175, label %if.end.i, !dbg !2493

if.then.i175:                                     ; preds = %bytestream2_init.exit
  %18 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2494
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %18, i32 0, i32 1, !dbg !2497
  %19 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2497
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2498
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 0, !dbg !2499
  store i8* %19, i8** %buffer2.i, align 8, !dbg !2500
  store i32 0, i32* %retval.i, align 4, !dbg !2501
  br label %bytestream2_get_be32.exit, !dbg !2501

if.end.i:                                         ; preds = %bytestream2_init.exit
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i171, align 8, !dbg !2502
  store %struct.GetByteContext* %21, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2503
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2504
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %22, i32 0, i32 0, !dbg !2505
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !2506
  %23 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2507
  %24 = load i8*, i8** %23, align 8, !dbg !2508
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %24, i64 4, !dbg !2508
  store i8* %add.ptr.i.i.i, i8** %23, align 8, !dbg !2508
  %25 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2509
  %26 = load i8*, i8** %25, align 8, !dbg !2510
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %26, i64 -4, !dbg !2511
  %27 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !2512
  %l.i.i.i = bitcast %union.unaligned_32* %27 to i32*, !dbg !2512
  %28 = load i32, i32* %l.i.i.i, align 1, !dbg !2512
  store i32 %28, i32* %x.addr.i.i.i.i, align 4, !dbg !2513
  %29 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2514
  %shl.i.i.i.i = shl i32 %29, 8, !dbg !2515
  %and.i.i.i.i = and i32 %shl.i.i.i.i, 65280, !dbg !2516
  %30 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2517
  %shr.i.i.i.i = lshr i32 %30, 8, !dbg !2518
  %and1.i.i.i.i = and i32 %shr.i.i.i.i, 255, !dbg !2519
  %or.i.i.i.i = or i32 %and.i.i.i.i, %and1.i.i.i.i, !dbg !2520
  %shl2.i.i.i.i = shl i32 %or.i.i.i.i, 16, !dbg !2521
  %31 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2522
  %shr3.i.i.i.i = lshr i32 %31, 16, !dbg !2523
  %shl4.i.i.i.i = shl i32 %shr3.i.i.i.i, 8, !dbg !2524
  %and5.i.i.i.i = and i32 %shl4.i.i.i.i, 65280, !dbg !2525
  %32 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2526
  %shr6.i.i.i.i = lshr i32 %32, 16, !dbg !2527
  %shr7.i.i.i.i = lshr i32 %shr6.i.i.i.i, 8, !dbg !2528
  %and8.i.i.i.i = and i32 %shr7.i.i.i.i, 255, !dbg !2529
  %or9.i.i.i.i = or i32 %and5.i.i.i.i, %and8.i.i.i.i, !dbg !2530
  %or10.i.i.i.i = or i32 %shl2.i.i.i.i, %or9.i.i.i.i, !dbg !2531
  store i32 %or10.i.i.i.i, i32* %retval.i, align 4, !dbg !2532
  br label %bytestream2_get_be32.exit, !dbg !2532

bytestream2_get_be32.exit:                        ; preds = %if.then.i175, %if.end.i
  %33 = load i32, i32* %retval.i, align 4, !dbg !2533
  store i32 %33, i32* %len, align 4, !dbg !2535
  %34 = load i32, i32* %len, align 4, !dbg !2536
  %cmp1 = icmp eq i32 %34, 0, !dbg !2538
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2539

if.then2:                                         ; preds = %bytestream2_get_be32.exit
  store i32 4, i32* %retval, align 4, !dbg !2540
  br label %return, !dbg !2540

if.end3:                                          ; preds = %bytestream2_get_be32.exit
  %35 = load i32, i32* %len, align 4, !dbg !2541
  %cmp4 = icmp sge i32 %35, 536870910, !dbg !2543
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !2544

lor.lhs.false:                                    ; preds = %if.end3
  %36 = load i32, i32* %len, align 4, !dbg !2545
  %cmp5 = icmp slt i32 %36, 0, !dbg !2547
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6, !dbg !2548

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %37 = load i32, i32* %len, align 4, !dbg !2549
  %mul = mul nsw i32 %37, 4, !dbg !2551
  %add = add nsw i32 %mul, 4, !dbg !2552
  %38 = load i32, i32* %buf_size.addr, align 4, !dbg !2553
  %cmp7 = icmp sgt i32 %add, %38, !dbg !2554
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2555

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end3
  %39 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2556
  %avctx9 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %39, i32 0, i32 0, !dbg !2558
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !2558
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !2556
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i32 0, i32 0)), !dbg !2559
  store i32 -1094995529, i32* %retval, align 4, !dbg !2560
  br label %return, !dbg !2560

if.end10:                                         ; preds = %lor.lhs.false6
  %42 = load i32, i32* %len, align 4, !dbg !2561
  %mul11 = mul nsw i32 %42, 4, !dbg !2562
  %add12 = add nsw i32 %mul11, 4, !dbg !2563
  store i32 %add12, i32* %skip, align 4, !dbg !2564
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2565
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2566
  %buffer_end.i181 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 1, !dbg !2567
  %44 = load i8*, i8** %buffer_end.i181, align 8, !dbg !2567
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2568
  %buffer.i182 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 0, !dbg !2569
  %46 = load i8*, i8** %buffer.i182, align 8, !dbg !2569
  %sub.ptr.lhs.cast.i183 = ptrtoint i8* %44 to i64, !dbg !2570
  %sub.ptr.rhs.cast.i184 = ptrtoint i8* %46 to i64, !dbg !2570
  %sub.ptr.sub.i185 = sub i64 %sub.ptr.lhs.cast.i183, %sub.ptr.rhs.cast.i184, !dbg !2570
  %cmp.i186 = icmp slt i64 %sub.ptr.sub.i185, 4, !dbg !2571
  br i1 %cmp.i186, label %if.then.i189, label %if.end.i208, !dbg !2572

if.then.i189:                                     ; preds = %if.end10
  %47 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2573
  %buffer_end1.i187 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %47, i32 0, i32 1, !dbg !2574
  %48 = load i8*, i8** %buffer_end1.i187, align 8, !dbg !2574
  %49 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2575
  %buffer2.i188 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %49, i32 0, i32 0, !dbg !2576
  store i8* %48, i8** %buffer2.i188, align 8, !dbg !2577
  store i32 0, i32* %retval.i179, align 4, !dbg !2578
  br label %bytestream2_get_be32.exit209, !dbg !2578

if.end.i208:                                      ; preds = %if.end10
  %50 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i180, align 8, !dbg !2579
  store %struct.GetByteContext* %50, %struct.GetByteContext** %g.addr.i.i178, align 8, !dbg !2580
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i178, align 8, !dbg !2581
  %buffer.i.i190 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %51, i32 0, i32 0, !dbg !2582
  store i8** %buffer.i.i190, i8*** %b.addr.i.i.i177, align 8, !dbg !2583
  %52 = load i8**, i8*** %b.addr.i.i.i177, align 8, !dbg !2584
  %53 = load i8*, i8** %52, align 8, !dbg !2585
  %add.ptr.i.i.i191 = getelementptr inbounds i8, i8* %53, i64 4, !dbg !2585
  store i8* %add.ptr.i.i.i191, i8** %52, align 8, !dbg !2585
  %54 = load i8**, i8*** %b.addr.i.i.i177, align 8, !dbg !2586
  %55 = load i8*, i8** %54, align 8, !dbg !2587
  %add.ptr1.i.i.i192 = getelementptr inbounds i8, i8* %55, i64 -4, !dbg !2588
  %56 = bitcast i8* %add.ptr1.i.i.i192 to %union.unaligned_32*, !dbg !2589
  %l.i.i.i193 = bitcast %union.unaligned_32* %56 to i32*, !dbg !2589
  %57 = load i32, i32* %l.i.i.i193, align 1, !dbg !2589
  store i32 %57, i32* %x.addr.i.i.i.i176, align 4, !dbg !2590
  %58 = load i32, i32* %x.addr.i.i.i.i176, align 4, !dbg !2591
  %shl.i.i.i.i194 = shl i32 %58, 8, !dbg !2592
  %and.i.i.i.i195 = and i32 %shl.i.i.i.i194, 65280, !dbg !2593
  %59 = load i32, i32* %x.addr.i.i.i.i176, align 4, !dbg !2594
  %shr.i.i.i.i196 = lshr i32 %59, 8, !dbg !2595
  %and1.i.i.i.i197 = and i32 %shr.i.i.i.i196, 255, !dbg !2596
  %or.i.i.i.i198 = or i32 %and.i.i.i.i195, %and1.i.i.i.i197, !dbg !2597
  %shl2.i.i.i.i199 = shl i32 %or.i.i.i.i198, 16, !dbg !2598
  %60 = load i32, i32* %x.addr.i.i.i.i176, align 4, !dbg !2599
  %shr3.i.i.i.i200 = lshr i32 %60, 16, !dbg !2600
  %shl4.i.i.i.i201 = shl i32 %shr3.i.i.i.i200, 8, !dbg !2601
  %and5.i.i.i.i202 = and i32 %shl4.i.i.i.i201, 65280, !dbg !2602
  %61 = load i32, i32* %x.addr.i.i.i.i176, align 4, !dbg !2603
  %shr6.i.i.i.i203 = lshr i32 %61, 16, !dbg !2604
  %shr7.i.i.i.i204 = lshr i32 %shr6.i.i.i.i203, 8, !dbg !2605
  %and8.i.i.i.i205 = and i32 %shr7.i.i.i.i204, 255, !dbg !2606
  %or9.i.i.i.i206 = or i32 %and5.i.i.i.i202, %and8.i.i.i.i205, !dbg !2607
  %or10.i.i.i.i207 = or i32 %shl2.i.i.i.i199, %or9.i.i.i.i206, !dbg !2608
  store i32 %or10.i.i.i.i207, i32* %retval.i179, align 4, !dbg !2609
  br label %bytestream2_get_be32.exit209, !dbg !2609

bytestream2_get_be32.exit209:                     ; preds = %if.then.i189, %if.end.i208
  %62 = load i32, i32* %retval.i179, align 4, !dbg !2610
  store i32 %62, i32* %toks, align 4, !dbg !2611
  %63 = load i32, i32* %toks, align 4, !dbg !2612
  %and = and i32 %63, 1, !dbg !2613
  %tobool = icmp ne i32 %and, 0, !dbg !2613
  br i1 %tobool, label %if.then14, label %if.end37, !dbg !2614

if.then14:                                        ; preds = %bytestream2_get_be32.exit209
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2615
  %64 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2616
  %buffer_end.i215 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %64, i32 0, i32 1, !dbg !2617
  %65 = load i8*, i8** %buffer_end.i215, align 8, !dbg !2617
  %66 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2618
  %buffer.i216 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %66, i32 0, i32 0, !dbg !2619
  %67 = load i8*, i8** %buffer.i216, align 8, !dbg !2619
  %sub.ptr.lhs.cast.i217 = ptrtoint i8* %65 to i64, !dbg !2620
  %sub.ptr.rhs.cast.i218 = ptrtoint i8* %67 to i64, !dbg !2620
  %sub.ptr.sub.i219 = sub i64 %sub.ptr.lhs.cast.i217, %sub.ptr.rhs.cast.i218, !dbg !2620
  %cmp.i220 = icmp slt i64 %sub.ptr.sub.i219, 4, !dbg !2621
  br i1 %cmp.i220, label %if.then.i223, label %if.end.i242, !dbg !2622

if.then.i223:                                     ; preds = %if.then14
  %68 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2623
  %buffer_end1.i221 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %68, i32 0, i32 1, !dbg !2624
  %69 = load i8*, i8** %buffer_end1.i221, align 8, !dbg !2624
  %70 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2625
  %buffer2.i222 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %70, i32 0, i32 0, !dbg !2626
  store i8* %69, i8** %buffer2.i222, align 8, !dbg !2627
  store i32 0, i32* %retval.i213, align 4, !dbg !2628
  br label %bytestream2_get_be32.exit243, !dbg !2628

if.end.i242:                                      ; preds = %if.then14
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i214, align 8, !dbg !2629
  store %struct.GetByteContext* %71, %struct.GetByteContext** %g.addr.i.i212, align 8, !dbg !2630
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i212, align 8, !dbg !2631
  %buffer.i.i224 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %72, i32 0, i32 0, !dbg !2632
  store i8** %buffer.i.i224, i8*** %b.addr.i.i.i211, align 8, !dbg !2633
  %73 = load i8**, i8*** %b.addr.i.i.i211, align 8, !dbg !2634
  %74 = load i8*, i8** %73, align 8, !dbg !2635
  %add.ptr.i.i.i225 = getelementptr inbounds i8, i8* %74, i64 4, !dbg !2635
  store i8* %add.ptr.i.i.i225, i8** %73, align 8, !dbg !2635
  %75 = load i8**, i8*** %b.addr.i.i.i211, align 8, !dbg !2636
  %76 = load i8*, i8** %75, align 8, !dbg !2637
  %add.ptr1.i.i.i226 = getelementptr inbounds i8, i8* %76, i64 -4, !dbg !2638
  %77 = bitcast i8* %add.ptr1.i.i.i226 to %union.unaligned_32*, !dbg !2639
  %l.i.i.i227 = bitcast %union.unaligned_32* %77 to i32*, !dbg !2639
  %78 = load i32, i32* %l.i.i.i227, align 1, !dbg !2639
  store i32 %78, i32* %x.addr.i.i.i.i210, align 4, !dbg !2640
  %79 = load i32, i32* %x.addr.i.i.i.i210, align 4, !dbg !2641
  %shl.i.i.i.i228 = shl i32 %79, 8, !dbg !2642
  %and.i.i.i.i229 = and i32 %shl.i.i.i.i228, 65280, !dbg !2643
  %80 = load i32, i32* %x.addr.i.i.i.i210, align 4, !dbg !2644
  %shr.i.i.i.i230 = lshr i32 %80, 8, !dbg !2645
  %and1.i.i.i.i231 = and i32 %shr.i.i.i.i230, 255, !dbg !2646
  %or.i.i.i.i232 = or i32 %and.i.i.i.i229, %and1.i.i.i.i231, !dbg !2647
  %shl2.i.i.i.i233 = shl i32 %or.i.i.i.i232, 16, !dbg !2648
  %81 = load i32, i32* %x.addr.i.i.i.i210, align 4, !dbg !2649
  %shr3.i.i.i.i234 = lshr i32 %81, 16, !dbg !2650
  %shl4.i.i.i.i235 = shl i32 %shr3.i.i.i.i234, 8, !dbg !2651
  %and5.i.i.i.i236 = and i32 %shl4.i.i.i.i235, 65280, !dbg !2652
  %82 = load i32, i32* %x.addr.i.i.i.i210, align 4, !dbg !2653
  %shr6.i.i.i.i237 = lshr i32 %82, 16, !dbg !2654
  %shr7.i.i.i.i238 = lshr i32 %shr6.i.i.i.i237, 8, !dbg !2655
  %and8.i.i.i.i239 = and i32 %shr7.i.i.i.i238, 255, !dbg !2656
  %or9.i.i.i.i240 = or i32 %and5.i.i.i.i236, %and8.i.i.i.i239, !dbg !2657
  %or10.i.i.i.i241 = or i32 %shl2.i.i.i.i233, %or9.i.i.i.i240, !dbg !2658
  store i32 %or10.i.i.i.i241, i32* %retval.i213, align 4, !dbg !2659
  br label %bytestream2_get_be32.exit243, !dbg !2659

bytestream2_get_be32.exit243:                     ; preds = %if.then.i223, %if.end.i242
  %83 = load i32, i32* %retval.i213, align 4, !dbg !2660
  store i32 %83, i32* %len, align 4, !dbg !2661
  %84 = load i32, i32* %len, align 4, !dbg !2662
  %cmp16 = icmp eq i32 %84, -2147483648, !dbg !2663
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !2664

if.then17:                                        ; preds = %bytestream2_get_be32.exit243
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2665
  %85 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2666
  %buffer_end.i249 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %85, i32 0, i32 1, !dbg !2667
  %86 = load i8*, i8** %buffer_end.i249, align 8, !dbg !2667
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2668
  %buffer.i250 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 0, !dbg !2669
  %88 = load i8*, i8** %buffer.i250, align 8, !dbg !2669
  %sub.ptr.lhs.cast.i251 = ptrtoint i8* %86 to i64, !dbg !2670
  %sub.ptr.rhs.cast.i252 = ptrtoint i8* %88 to i64, !dbg !2670
  %sub.ptr.sub.i253 = sub i64 %sub.ptr.lhs.cast.i251, %sub.ptr.rhs.cast.i252, !dbg !2670
  %cmp.i254 = icmp slt i64 %sub.ptr.sub.i253, 4, !dbg !2671
  br i1 %cmp.i254, label %if.then.i257, label %if.end.i276, !dbg !2672

if.then.i257:                                     ; preds = %if.then17
  %89 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2673
  %buffer_end1.i255 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %89, i32 0, i32 1, !dbg !2674
  %90 = load i8*, i8** %buffer_end1.i255, align 8, !dbg !2674
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2675
  %buffer2.i256 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %91, i32 0, i32 0, !dbg !2676
  store i8* %90, i8** %buffer2.i256, align 8, !dbg !2677
  store i32 0, i32* %retval.i247, align 4, !dbg !2678
  br label %bytestream2_get_be32.exit277, !dbg !2678

if.end.i276:                                      ; preds = %if.then17
  %92 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i248, align 8, !dbg !2679
  store %struct.GetByteContext* %92, %struct.GetByteContext** %g.addr.i.i246, align 8, !dbg !2680
  %93 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i246, align 8, !dbg !2681
  %buffer.i.i258 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %93, i32 0, i32 0, !dbg !2682
  store i8** %buffer.i.i258, i8*** %b.addr.i.i.i245, align 8, !dbg !2683
  %94 = load i8**, i8*** %b.addr.i.i.i245, align 8, !dbg !2684
  %95 = load i8*, i8** %94, align 8, !dbg !2685
  %add.ptr.i.i.i259 = getelementptr inbounds i8, i8* %95, i64 4, !dbg !2685
  store i8* %add.ptr.i.i.i259, i8** %94, align 8, !dbg !2685
  %96 = load i8**, i8*** %b.addr.i.i.i245, align 8, !dbg !2686
  %97 = load i8*, i8** %96, align 8, !dbg !2687
  %add.ptr1.i.i.i260 = getelementptr inbounds i8, i8* %97, i64 -4, !dbg !2688
  %98 = bitcast i8* %add.ptr1.i.i.i260 to %union.unaligned_32*, !dbg !2689
  %l.i.i.i261 = bitcast %union.unaligned_32* %98 to i32*, !dbg !2689
  %99 = load i32, i32* %l.i.i.i261, align 1, !dbg !2689
  store i32 %99, i32* %x.addr.i.i.i.i244, align 4, !dbg !2690
  %100 = load i32, i32* %x.addr.i.i.i.i244, align 4, !dbg !2691
  %shl.i.i.i.i262 = shl i32 %100, 8, !dbg !2692
  %and.i.i.i.i263 = and i32 %shl.i.i.i.i262, 65280, !dbg !2693
  %101 = load i32, i32* %x.addr.i.i.i.i244, align 4, !dbg !2694
  %shr.i.i.i.i264 = lshr i32 %101, 8, !dbg !2695
  %and1.i.i.i.i265 = and i32 %shr.i.i.i.i264, 255, !dbg !2696
  %or.i.i.i.i266 = or i32 %and.i.i.i.i263, %and1.i.i.i.i265, !dbg !2697
  %shl2.i.i.i.i267 = shl i32 %or.i.i.i.i266, 16, !dbg !2698
  %102 = load i32, i32* %x.addr.i.i.i.i244, align 4, !dbg !2699
  %shr3.i.i.i.i268 = lshr i32 %102, 16, !dbg !2700
  %shl4.i.i.i.i269 = shl i32 %shr3.i.i.i.i268, 8, !dbg !2701
  %and5.i.i.i.i270 = and i32 %shl4.i.i.i.i269, 65280, !dbg !2702
  %103 = load i32, i32* %x.addr.i.i.i.i244, align 4, !dbg !2703
  %shr6.i.i.i.i271 = lshr i32 %103, 16, !dbg !2704
  %shr7.i.i.i.i272 = lshr i32 %shr6.i.i.i.i271, 8, !dbg !2705
  %and8.i.i.i.i273 = and i32 %shr7.i.i.i.i272, 255, !dbg !2706
  %or9.i.i.i.i274 = or i32 %and5.i.i.i.i270, %and8.i.i.i.i273, !dbg !2707
  %or10.i.i.i.i275 = or i32 %shl2.i.i.i.i267, %or9.i.i.i.i274, !dbg !2708
  store i32 %or10.i.i.i.i275, i32* %retval.i247, align 4, !dbg !2709
  br label %bytestream2_get_be32.exit277, !dbg !2709

bytestream2_get_be32.exit277:                     ; preds = %if.then.i257, %if.end.i276
  %104 = load i32, i32* %retval.i247, align 4, !dbg !2710
  store i32 %104, i32* %len, align 4, !dbg !2711
  br label %if.end19, !dbg !2712

if.end19:                                         ; preds = %bytestream2_get_be32.exit277, %bytestream2_get_be32.exit243
  %105 = load i32, i32* %len, align 4, !dbg !2713
  %cmp20 = icmp sgt i32 %105, 0, !dbg !2714
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !2715

if.then21:                                        ; preds = %if.end19
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i278, align 8, !dbg !2716
  %106 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i278, align 8, !dbg !2717
  %buffer.i279 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %106, i32 0, i32 0, !dbg !2718
  %107 = load i8*, i8** %buffer.i279, align 8, !dbg !2718
  %108 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i278, align 8, !dbg !2719
  %buffer_start.i280 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %108, i32 0, i32 2, !dbg !2720
  %109 = load i8*, i8** %buffer_start.i280, align 8, !dbg !2720
  %sub.ptr.lhs.cast.i281 = ptrtoint i8* %107 to i64, !dbg !2721
  %sub.ptr.rhs.cast.i282 = ptrtoint i8* %109 to i64, !dbg !2721
  %sub.ptr.sub.i283 = sub i64 %sub.ptr.lhs.cast.i281, %sub.ptr.rhs.cast.i282, !dbg !2721
  %conv.i = trunc i64 %sub.ptr.sub.i283 to i32, !dbg !2722
  store i32 %conv.i, i32* %pos, align 4, !dbg !2723
  %110 = load i32, i32* %skip, align 4, !dbg !2724
  %111 = load i32, i32* %pos, align 4, !dbg !2726
  %cmp23 = icmp sle i32 %110, %111, !dbg !2727
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !2728

if.then24:                                        ; preds = %if.then21
  store i32 -1094995529, i32* %retval, align 4, !dbg !2729
  br label %return, !dbg !2729

if.end25:                                         ; preds = %if.then21
  %112 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2730
  %gb26 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %112, i32 0, i32 2, !dbg !2731
  %113 = load i8*, i8** %buf.addr, align 8, !dbg !2732
  %114 = load i32, i32* %pos, align 4, !dbg !2733
  %idx.ext = sext i32 %114 to i64, !dbg !2734
  %add.ptr = getelementptr inbounds i8, i8* %113, i64 %idx.ext, !dbg !2734
  %115 = load i32, i32* %skip, align 4, !dbg !2735
  %116 = load i32, i32* %pos, align 4, !dbg !2736
  %sub = sub nsw i32 %115, %116, !dbg !2737
  %mul27 = mul nsw i32 %sub, 8, !dbg !2738
  %call28 = call i32 @init_get_bits(%struct.GetBitContext* %gb26, i8* %add.ptr, i32 %mul27), !dbg !2739
  %117 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2740
  %118 = load i32, i32* %stream_id.addr, align 4, !dbg !2742
  %call29 = call i32 @tm2_read_deltas(%struct.TM2Context* %117, i32 %118), !dbg !2743
  store i32 %call29, i32* %ret, align 4, !dbg !2744
  %cmp30 = icmp slt i32 %call29, 0, !dbg !2745
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !2746

if.then31:                                        ; preds = %if.end25
  %119 = load i32, i32* %ret, align 4, !dbg !2747
  store i32 %119, i32* %retval, align 4, !dbg !2748
  br label %return, !dbg !2748

if.end32:                                         ; preds = %if.end25
  %120 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2749
  %gb33 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %120, i32 0, i32 2, !dbg !2750
  %call34 = call i32 @get_bits_count(%struct.GetBitContext* %gb33), !dbg !2751
  %add35 = add nsw i32 %call34, 31, !dbg !2752
  %shr = ashr i32 %add35, 5, !dbg !2753
  %shl = shl i32 %shr, 2, !dbg !2754
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2755
  store i32 %shl, i32* %size.addr.i, align 4, !dbg !2755
  %121 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2756
  %buffer_end.i285 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %121, i32 0, i32 1, !dbg !2757
  %122 = load i8*, i8** %buffer_end.i285, align 8, !dbg !2757
  %123 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2758
  %buffer.i286 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %123, i32 0, i32 0, !dbg !2759
  %124 = load i8*, i8** %buffer.i286, align 8, !dbg !2759
  %sub.ptr.lhs.cast.i287 = ptrtoint i8* %122 to i64, !dbg !2760
  %sub.ptr.rhs.cast.i288 = ptrtoint i8* %124 to i64, !dbg !2760
  %sub.ptr.sub.i289 = sub i64 %sub.ptr.lhs.cast.i287, %sub.ptr.rhs.cast.i288, !dbg !2760
  %125 = load i32, i32* %size.addr.i, align 4, !dbg !2761
  %conv.i290 = zext i32 %125 to i64, !dbg !2762
  %cmp.i291 = icmp sgt i64 %sub.ptr.sub.i289, %conv.i290, !dbg !2763
  br i1 %cmp.i291, label %cond.true.i, label %cond.false.i, !dbg !2764

cond.true.i:                                      ; preds = %if.end32
  %126 = load i32, i32* %size.addr.i, align 4, !dbg !2765
  %conv2.i = zext i32 %126 to i64, !dbg !2767
  br label %bytestream2_skip.exit, !dbg !2768

cond.false.i:                                     ; preds = %if.end32
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2769
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %127, i32 0, i32 1, !dbg !2771
  %128 = load i8*, i8** %buffer_end3.i, align 8, !dbg !2771
  %129 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2772
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %129, i32 0, i32 0, !dbg !2773
  %130 = load i8*, i8** %buffer4.i, align 8, !dbg !2773
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %128 to i64, !dbg !2774
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %130 to i64, !dbg !2774
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !2774
  br label %bytestream2_skip.exit, !dbg !2775

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !2776
  %131 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i284, align 8, !dbg !2778
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %131, i32 0, i32 0, !dbg !2779
  %132 = load i8*, i8** %buffer8.i, align 8, !dbg !2780
  %add.ptr.i292 = getelementptr inbounds i8, i8* %132, i64 %cond.i, !dbg !2780
  store i8* %add.ptr.i292, i8** %buffer8.i, align 8, !dbg !2780
  br label %if.end36, !dbg !2781

if.end36:                                         ; preds = %bytestream2_skip.exit, %if.end19
  br label %if.end37, !dbg !2782

if.end37:                                         ; preds = %if.end36, %bytestream2_get_be32.exit209
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2783
  %133 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2784
  %buffer_end.i360 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %133, i32 0, i32 1, !dbg !2785
  %134 = load i8*, i8** %buffer_end.i360, align 8, !dbg !2785
  %135 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2786
  %buffer.i361 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %135, i32 0, i32 0, !dbg !2787
  %136 = load i8*, i8** %buffer.i361, align 8, !dbg !2787
  %sub.ptr.lhs.cast.i362 = ptrtoint i8* %134 to i64, !dbg !2788
  %sub.ptr.rhs.cast.i363 = ptrtoint i8* %136 to i64, !dbg !2788
  %sub.ptr.sub.i364 = sub i64 %sub.ptr.lhs.cast.i362, %sub.ptr.rhs.cast.i363, !dbg !2788
  %cmp.i365 = icmp slt i64 %sub.ptr.sub.i364, 4, !dbg !2789
  br i1 %cmp.i365, label %if.then.i368, label %if.end.i387, !dbg !2790

if.then.i368:                                     ; preds = %if.end37
  %137 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2791
  %buffer_end1.i366 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %137, i32 0, i32 1, !dbg !2792
  %138 = load i8*, i8** %buffer_end1.i366, align 8, !dbg !2792
  %139 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2793
  %buffer2.i367 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %139, i32 0, i32 0, !dbg !2794
  store i8* %138, i8** %buffer2.i367, align 8, !dbg !2795
  store i32 0, i32* %retval.i358, align 4, !dbg !2796
  br label %bytestream2_get_be32.exit388, !dbg !2796

if.end.i387:                                      ; preds = %if.end37
  %140 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i359, align 8, !dbg !2797
  store %struct.GetByteContext* %140, %struct.GetByteContext** %g.addr.i.i357, align 8, !dbg !2798
  %141 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i357, align 8, !dbg !2799
  %buffer.i.i369 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %141, i32 0, i32 0, !dbg !2800
  store i8** %buffer.i.i369, i8*** %b.addr.i.i.i356, align 8, !dbg !2801
  %142 = load i8**, i8*** %b.addr.i.i.i356, align 8, !dbg !2802
  %143 = load i8*, i8** %142, align 8, !dbg !2803
  %add.ptr.i.i.i370 = getelementptr inbounds i8, i8* %143, i64 4, !dbg !2803
  store i8* %add.ptr.i.i.i370, i8** %142, align 8, !dbg !2803
  %144 = load i8**, i8*** %b.addr.i.i.i356, align 8, !dbg !2804
  %145 = load i8*, i8** %144, align 8, !dbg !2805
  %add.ptr1.i.i.i371 = getelementptr inbounds i8, i8* %145, i64 -4, !dbg !2806
  %146 = bitcast i8* %add.ptr1.i.i.i371 to %union.unaligned_32*, !dbg !2807
  %l.i.i.i372 = bitcast %union.unaligned_32* %146 to i32*, !dbg !2807
  %147 = load i32, i32* %l.i.i.i372, align 1, !dbg !2807
  store i32 %147, i32* %x.addr.i.i.i.i355, align 4, !dbg !2808
  %148 = load i32, i32* %x.addr.i.i.i.i355, align 4, !dbg !2809
  %shl.i.i.i.i373 = shl i32 %148, 8, !dbg !2810
  %and.i.i.i.i374 = and i32 %shl.i.i.i.i373, 65280, !dbg !2811
  %149 = load i32, i32* %x.addr.i.i.i.i355, align 4, !dbg !2812
  %shr.i.i.i.i375 = lshr i32 %149, 8, !dbg !2813
  %and1.i.i.i.i376 = and i32 %shr.i.i.i.i375, 255, !dbg !2814
  %or.i.i.i.i377 = or i32 %and.i.i.i.i374, %and1.i.i.i.i376, !dbg !2815
  %shl2.i.i.i.i378 = shl i32 %or.i.i.i.i377, 16, !dbg !2816
  %150 = load i32, i32* %x.addr.i.i.i.i355, align 4, !dbg !2817
  %shr3.i.i.i.i379 = lshr i32 %150, 16, !dbg !2818
  %shl4.i.i.i.i380 = shl i32 %shr3.i.i.i.i379, 8, !dbg !2819
  %and5.i.i.i.i381 = and i32 %shl4.i.i.i.i380, 65280, !dbg !2820
  %151 = load i32, i32* %x.addr.i.i.i.i355, align 4, !dbg !2821
  %shr6.i.i.i.i382 = lshr i32 %151, 16, !dbg !2822
  %shr7.i.i.i.i383 = lshr i32 %shr6.i.i.i.i382, 8, !dbg !2823
  %and8.i.i.i.i384 = and i32 %shr7.i.i.i.i383, 255, !dbg !2824
  %or9.i.i.i.i385 = or i32 %and5.i.i.i.i381, %and8.i.i.i.i384, !dbg !2825
  %or10.i.i.i.i386 = or i32 %shl2.i.i.i.i378, %or9.i.i.i.i385, !dbg !2826
  store i32 %or10.i.i.i.i386, i32* %retval.i358, align 4, !dbg !2827
  br label %bytestream2_get_be32.exit388, !dbg !2827

bytestream2_get_be32.exit388:                     ; preds = %if.then.i368, %if.end.i387
  %152 = load i32, i32* %retval.i358, align 4, !dbg !2828
  store i32 %152, i32* %len, align 4, !dbg !2829
  %153 = load i32, i32* %len, align 4, !dbg !2830
  %cmp39 = icmp eq i32 %153, -2147483648, !dbg !2831
  br i1 %cmp39, label %if.then40, label %if.else, !dbg !2832

if.then40:                                        ; preds = %bytestream2_get_be32.exit388
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2833
  store i32 8, i32* %size.addr.i390, align 4, !dbg !2833
  %154 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2834
  %buffer_end.i391 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %154, i32 0, i32 1, !dbg !2835
  %155 = load i8*, i8** %buffer_end.i391, align 8, !dbg !2835
  %156 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2836
  %buffer.i392 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %156, i32 0, i32 0, !dbg !2837
  %157 = load i8*, i8** %buffer.i392, align 8, !dbg !2837
  %sub.ptr.lhs.cast.i393 = ptrtoint i8* %155 to i64, !dbg !2838
  %sub.ptr.rhs.cast.i394 = ptrtoint i8* %157 to i64, !dbg !2838
  %sub.ptr.sub.i395 = sub i64 %sub.ptr.lhs.cast.i393, %sub.ptr.rhs.cast.i394, !dbg !2838
  %158 = load i32, i32* %size.addr.i390, align 4, !dbg !2839
  %conv.i396 = zext i32 %158 to i64, !dbg !2840
  %cmp.i397 = icmp sgt i64 %sub.ptr.sub.i395, %conv.i396, !dbg !2841
  br i1 %cmp.i397, label %cond.true.i399, label %cond.false.i405, !dbg !2842

cond.true.i399:                                   ; preds = %if.then40
  %159 = load i32, i32* %size.addr.i390, align 4, !dbg !2843
  %conv2.i398 = zext i32 %159 to i64, !dbg !2844
  br label %bytestream2_skip.exit409, !dbg !2845

cond.false.i405:                                  ; preds = %if.then40
  %160 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2846
  %buffer_end3.i400 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %160, i32 0, i32 1, !dbg !2847
  %161 = load i8*, i8** %buffer_end3.i400, align 8, !dbg !2847
  %162 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2848
  %buffer4.i401 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %162, i32 0, i32 0, !dbg !2849
  %163 = load i8*, i8** %buffer4.i401, align 8, !dbg !2849
  %sub.ptr.lhs.cast5.i402 = ptrtoint i8* %161 to i64, !dbg !2850
  %sub.ptr.rhs.cast6.i403 = ptrtoint i8* %163 to i64, !dbg !2850
  %sub.ptr.sub7.i404 = sub i64 %sub.ptr.lhs.cast5.i402, %sub.ptr.rhs.cast6.i403, !dbg !2850
  br label %bytestream2_skip.exit409, !dbg !2851

bytestream2_skip.exit409:                         ; preds = %cond.true.i399, %cond.false.i405
  %cond.i406 = phi i64 [ %conv2.i398, %cond.true.i399 ], [ %sub.ptr.sub7.i404, %cond.false.i405 ], !dbg !2852
  %164 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i389, align 8, !dbg !2853
  %buffer8.i407 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %164, i32 0, i32 0, !dbg !2854
  %165 = load i8*, i8** %buffer8.i407, align 8, !dbg !2855
  %add.ptr.i408 = getelementptr inbounds i8, i8* %165, i64 %cond.i406, !dbg !2855
  store i8* %add.ptr.i408, i8** %buffer8.i407, align 8, !dbg !2855
  br label %if.end41, !dbg !2856

if.else:                                          ; preds = %bytestream2_get_be32.exit388
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2857
  store i32 4, i32* %size.addr.i411, align 4, !dbg !2857
  %166 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2858
  %buffer_end.i412 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %166, i32 0, i32 1, !dbg !2859
  %167 = load i8*, i8** %buffer_end.i412, align 8, !dbg !2859
  %168 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2860
  %buffer.i413 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %168, i32 0, i32 0, !dbg !2861
  %169 = load i8*, i8** %buffer.i413, align 8, !dbg !2861
  %sub.ptr.lhs.cast.i414 = ptrtoint i8* %167 to i64, !dbg !2862
  %sub.ptr.rhs.cast.i415 = ptrtoint i8* %169 to i64, !dbg !2862
  %sub.ptr.sub.i416 = sub i64 %sub.ptr.lhs.cast.i414, %sub.ptr.rhs.cast.i415, !dbg !2862
  %170 = load i32, i32* %size.addr.i411, align 4, !dbg !2863
  %conv.i417 = zext i32 %170 to i64, !dbg !2864
  %cmp.i418 = icmp sgt i64 %sub.ptr.sub.i416, %conv.i417, !dbg !2865
  br i1 %cmp.i418, label %cond.true.i420, label %cond.false.i426, !dbg !2866

cond.true.i420:                                   ; preds = %if.else
  %171 = load i32, i32* %size.addr.i411, align 4, !dbg !2867
  %conv2.i419 = zext i32 %171 to i64, !dbg !2868
  br label %bytestream2_skip.exit430, !dbg !2869

cond.false.i426:                                  ; preds = %if.else
  %172 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2870
  %buffer_end3.i421 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %172, i32 0, i32 1, !dbg !2871
  %173 = load i8*, i8** %buffer_end3.i421, align 8, !dbg !2871
  %174 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2872
  %buffer4.i422 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %174, i32 0, i32 0, !dbg !2873
  %175 = load i8*, i8** %buffer4.i422, align 8, !dbg !2873
  %sub.ptr.lhs.cast5.i423 = ptrtoint i8* %173 to i64, !dbg !2874
  %sub.ptr.rhs.cast6.i424 = ptrtoint i8* %175 to i64, !dbg !2874
  %sub.ptr.sub7.i425 = sub i64 %sub.ptr.lhs.cast5.i423, %sub.ptr.rhs.cast6.i424, !dbg !2874
  br label %bytestream2_skip.exit430, !dbg !2875

bytestream2_skip.exit430:                         ; preds = %cond.true.i420, %cond.false.i426
  %cond.i427 = phi i64 [ %conv2.i419, %cond.true.i420 ], [ %sub.ptr.sub7.i425, %cond.false.i426 ], !dbg !2876
  %176 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i410, align 8, !dbg !2877
  %buffer8.i428 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %176, i32 0, i32 0, !dbg !2878
  %177 = load i8*, i8** %buffer8.i428, align 8, !dbg !2879
  %add.ptr.i429 = getelementptr inbounds i8, i8* %177, i64 %cond.i427, !dbg !2879
  store i8* %add.ptr.i429, i8** %buffer8.i428, align 8, !dbg !2879
  br label %if.end41

if.end41:                                         ; preds = %bytestream2_skip.exit430, %bytestream2_skip.exit409
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i431, align 8, !dbg !2880
  %178 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i431, align 8, !dbg !2881
  %buffer.i432 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %178, i32 0, i32 0, !dbg !2882
  %179 = load i8*, i8** %buffer.i432, align 8, !dbg !2882
  %180 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i431, align 8, !dbg !2883
  %buffer_start.i433 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %180, i32 0, i32 2, !dbg !2884
  %181 = load i8*, i8** %buffer_start.i433, align 8, !dbg !2884
  %sub.ptr.lhs.cast.i434 = ptrtoint i8* %179 to i64, !dbg !2885
  %sub.ptr.rhs.cast.i435 = ptrtoint i8* %181 to i64, !dbg !2885
  %sub.ptr.sub.i436 = sub i64 %sub.ptr.lhs.cast.i434, %sub.ptr.rhs.cast.i435, !dbg !2885
  %conv.i437 = trunc i64 %sub.ptr.sub.i436 to i32, !dbg !2886
  store i32 %conv.i437, i32* %pos, align 4, !dbg !2887
  %182 = load i32, i32* %skip, align 4, !dbg !2888
  %183 = load i32, i32* %pos, align 4, !dbg !2890
  %cmp43 = icmp sle i32 %182, %183, !dbg !2891
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !2892

if.then44:                                        ; preds = %if.end41
  store i32 -1094995529, i32* %retval, align 4, !dbg !2893
  br label %return, !dbg !2893

if.end45:                                         ; preds = %if.end41
  %184 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2894
  %gb46 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %184, i32 0, i32 2, !dbg !2895
  %185 = load i8*, i8** %buf.addr, align 8, !dbg !2896
  %186 = load i32, i32* %pos, align 4, !dbg !2897
  %idx.ext47 = sext i32 %186 to i64, !dbg !2898
  %add.ptr48 = getelementptr inbounds i8, i8* %185, i64 %idx.ext47, !dbg !2898
  %187 = load i32, i32* %skip, align 4, !dbg !2899
  %188 = load i32, i32* %pos, align 4, !dbg !2900
  %sub49 = sub nsw i32 %187, %188, !dbg !2901
  %mul50 = mul nsw i32 %sub49, 8, !dbg !2902
  %call51 = call i32 @init_get_bits(%struct.GetBitContext* %gb46, i8* %add.ptr48, i32 %mul50), !dbg !2903
  %189 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2904
  %call52 = call i32 @tm2_build_huff_table(%struct.TM2Context* %189, %struct.TM2Codes* %codes), !dbg !2906
  store i32 %call52, i32* %ret, align 4, !dbg !2907
  %cmp53 = icmp slt i32 %call52, 0, !dbg !2908
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !2909

if.then54:                                        ; preds = %if.end45
  %190 = load i32, i32* %ret, align 4, !dbg !2910
  store i32 %190, i32* %retval, align 4, !dbg !2911
  br label %return, !dbg !2911

if.end55:                                         ; preds = %if.end45
  %191 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2912
  %gb56 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %191, i32 0, i32 2, !dbg !2913
  %call57 = call i32 @get_bits_count(%struct.GetBitContext* %gb56), !dbg !2914
  %add58 = add nsw i32 %call57, 31, !dbg !2915
  %shr59 = ashr i32 %add58, 5, !dbg !2916
  %shl60 = shl i32 %shr59, 2, !dbg !2917
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2918
  store i32 %shl60, i32* %size.addr.i335, align 4, !dbg !2918
  %192 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2919
  %buffer_end.i336 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %192, i32 0, i32 1, !dbg !2920
  %193 = load i8*, i8** %buffer_end.i336, align 8, !dbg !2920
  %194 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2921
  %buffer.i337 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %194, i32 0, i32 0, !dbg !2922
  %195 = load i8*, i8** %buffer.i337, align 8, !dbg !2922
  %sub.ptr.lhs.cast.i338 = ptrtoint i8* %193 to i64, !dbg !2923
  %sub.ptr.rhs.cast.i339 = ptrtoint i8* %195 to i64, !dbg !2923
  %sub.ptr.sub.i340 = sub i64 %sub.ptr.lhs.cast.i338, %sub.ptr.rhs.cast.i339, !dbg !2923
  %196 = load i32, i32* %size.addr.i335, align 4, !dbg !2924
  %conv.i341 = zext i32 %196 to i64, !dbg !2925
  %cmp.i342 = icmp sgt i64 %sub.ptr.sub.i340, %conv.i341, !dbg !2926
  br i1 %cmp.i342, label %cond.true.i344, label %cond.false.i350, !dbg !2927

cond.true.i344:                                   ; preds = %if.end55
  %197 = load i32, i32* %size.addr.i335, align 4, !dbg !2928
  %conv2.i343 = zext i32 %197 to i64, !dbg !2929
  br label %bytestream2_skip.exit354, !dbg !2930

cond.false.i350:                                  ; preds = %if.end55
  %198 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2931
  %buffer_end3.i345 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %198, i32 0, i32 1, !dbg !2932
  %199 = load i8*, i8** %buffer_end3.i345, align 8, !dbg !2932
  %200 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2933
  %buffer4.i346 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %200, i32 0, i32 0, !dbg !2934
  %201 = load i8*, i8** %buffer4.i346, align 8, !dbg !2934
  %sub.ptr.lhs.cast5.i347 = ptrtoint i8* %199 to i64, !dbg !2935
  %sub.ptr.rhs.cast6.i348 = ptrtoint i8* %201 to i64, !dbg !2935
  %sub.ptr.sub7.i349 = sub i64 %sub.ptr.lhs.cast5.i347, %sub.ptr.rhs.cast6.i348, !dbg !2935
  br label %bytestream2_skip.exit354, !dbg !2936

bytestream2_skip.exit354:                         ; preds = %cond.true.i344, %cond.false.i350
  %cond.i351 = phi i64 [ %conv2.i343, %cond.true.i344 ], [ %sub.ptr.sub7.i349, %cond.false.i350 ], !dbg !2937
  %202 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i334, align 8, !dbg !2938
  %buffer8.i352 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %202, i32 0, i32 0, !dbg !2939
  %203 = load i8*, i8** %buffer8.i352, align 8, !dbg !2940
  %add.ptr.i353 = getelementptr inbounds i8, i8* %203, i64 %cond.i351, !dbg !2940
  store i8* %add.ptr.i353, i8** %buffer8.i352, align 8, !dbg !2940
  %204 = load i32, i32* %toks, align 4, !dbg !2941
  %shr61 = ashr i32 %204, 1, !dbg !2941
  store i32 %shr61, i32* %toks, align 4, !dbg !2941
  %205 = load i32, i32* %toks, align 4, !dbg !2942
  %cmp62 = icmp slt i32 %205, 0, !dbg !2944
  br i1 %cmp62, label %if.then65, label %lor.lhs.false63, !dbg !2945

lor.lhs.false63:                                  ; preds = %bytestream2_skip.exit354
  %206 = load i32, i32* %toks, align 4, !dbg !2946
  %cmp64 = icmp sgt i32 %206, 16777215, !dbg !2948
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !2949

if.then65:                                        ; preds = %lor.lhs.false63, %bytestream2_skip.exit354
  %207 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2950
  %avctx66 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %207, i32 0, i32 0, !dbg !2952
  %208 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 8, !dbg !2952
  %209 = bitcast %struct.AVCodecContext* %208 to i8*, !dbg !2950
  %210 = load i32, i32* %toks, align 4, !dbg !2953
  call void (i8*, i32, i8*, ...) @av_log(i8* %209, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i32 0, i32 0), i32 %210), !dbg !2954
  store i32 -1094995529, i32* %ret, align 4, !dbg !2955
  br label %end, !dbg !2956

if.end67:                                         ; preds = %lor.lhs.false63
  %211 = load i32, i32* %stream_id.addr, align 4, !dbg !2957
  %idxprom = sext i32 %211 to i64, !dbg !2958
  %212 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2958
  %tokens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %212, i32 0, i32 7, !dbg !2959
  %arrayidx = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens, i64 0, i64 %idxprom, !dbg !2958
  %213 = bitcast i32** %arrayidx to i8*, !dbg !2960
  %214 = load i32, i32* %toks, align 4, !dbg !2961
  %conv = sext i32 %214 to i64, !dbg !2961
  %call68 = call i32 @av_reallocp_array(i8* %213, i64 %conv, i64 4), !dbg !2962
  store i32 %call68, i32* %ret, align 4, !dbg !2963
  %215 = load i32, i32* %ret, align 4, !dbg !2964
  %cmp69 = icmp slt i32 %215, 0, !dbg !2966
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !2967

if.then71:                                        ; preds = %if.end67
  %216 = load i32, i32* %stream_id.addr, align 4, !dbg !2968
  %idxprom72 = sext i32 %216 to i64, !dbg !2970
  %217 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2970
  %tok_lens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %217, i32 0, i32 8, !dbg !2971
  %arrayidx73 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens, i64 0, i64 %idxprom72, !dbg !2970
  store i32 0, i32* %arrayidx73, align 4, !dbg !2972
  br label %end, !dbg !2973

if.end74:                                         ; preds = %if.end67
  %218 = load i32, i32* %toks, align 4, !dbg !2974
  %219 = load i32, i32* %stream_id.addr, align 4, !dbg !2975
  %idxprom75 = sext i32 %219 to i64, !dbg !2976
  %220 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !2976
  %tok_lens76 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %220, i32 0, i32 8, !dbg !2977
  %arrayidx77 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens76, i64 0, i64 %idxprom75, !dbg !2976
  store i32 %218, i32* %arrayidx77, align 4, !dbg !2978
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2979
  %221 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2980
  %buffer_end.i305 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %221, i32 0, i32 1, !dbg !2981
  %222 = load i8*, i8** %buffer_end.i305, align 8, !dbg !2981
  %223 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2982
  %buffer.i306 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %223, i32 0, i32 0, !dbg !2983
  %224 = load i8*, i8** %buffer.i306, align 8, !dbg !2983
  %sub.ptr.lhs.cast.i307 = ptrtoint i8* %222 to i64, !dbg !2984
  %sub.ptr.rhs.cast.i308 = ptrtoint i8* %224 to i64, !dbg !2984
  %sub.ptr.sub.i309 = sub i64 %sub.ptr.lhs.cast.i307, %sub.ptr.rhs.cast.i308, !dbg !2984
  %cmp.i310 = icmp slt i64 %sub.ptr.sub.i309, 4, !dbg !2985
  br i1 %cmp.i310, label %if.then.i313, label %if.end.i332, !dbg !2986

if.then.i313:                                     ; preds = %if.end74
  %225 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2987
  %buffer_end1.i311 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %225, i32 0, i32 1, !dbg !2988
  %226 = load i8*, i8** %buffer_end1.i311, align 8, !dbg !2988
  %227 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2989
  %buffer2.i312 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %227, i32 0, i32 0, !dbg !2990
  store i8* %226, i8** %buffer2.i312, align 8, !dbg !2991
  store i32 0, i32* %retval.i303, align 4, !dbg !2992
  br label %bytestream2_get_be32.exit333, !dbg !2992

if.end.i332:                                      ; preds = %if.end74
  %228 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i304, align 8, !dbg !2993
  store %struct.GetByteContext* %228, %struct.GetByteContext** %g.addr.i.i302, align 8, !dbg !2994
  %229 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i302, align 8, !dbg !2995
  %buffer.i.i314 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %229, i32 0, i32 0, !dbg !2996
  store i8** %buffer.i.i314, i8*** %b.addr.i.i.i301, align 8, !dbg !2997
  %230 = load i8**, i8*** %b.addr.i.i.i301, align 8, !dbg !2998
  %231 = load i8*, i8** %230, align 8, !dbg !2999
  %add.ptr.i.i.i315 = getelementptr inbounds i8, i8* %231, i64 4, !dbg !2999
  store i8* %add.ptr.i.i.i315, i8** %230, align 8, !dbg !2999
  %232 = load i8**, i8*** %b.addr.i.i.i301, align 8, !dbg !3000
  %233 = load i8*, i8** %232, align 8, !dbg !3001
  %add.ptr1.i.i.i316 = getelementptr inbounds i8, i8* %233, i64 -4, !dbg !3002
  %234 = bitcast i8* %add.ptr1.i.i.i316 to %union.unaligned_32*, !dbg !3003
  %l.i.i.i317 = bitcast %union.unaligned_32* %234 to i32*, !dbg !3003
  %235 = load i32, i32* %l.i.i.i317, align 1, !dbg !3003
  store i32 %235, i32* %x.addr.i.i.i.i300, align 4, !dbg !3004
  %236 = load i32, i32* %x.addr.i.i.i.i300, align 4, !dbg !3005
  %shl.i.i.i.i318 = shl i32 %236, 8, !dbg !3006
  %and.i.i.i.i319 = and i32 %shl.i.i.i.i318, 65280, !dbg !3007
  %237 = load i32, i32* %x.addr.i.i.i.i300, align 4, !dbg !3008
  %shr.i.i.i.i320 = lshr i32 %237, 8, !dbg !3009
  %and1.i.i.i.i321 = and i32 %shr.i.i.i.i320, 255, !dbg !3010
  %or.i.i.i.i322 = or i32 %and.i.i.i.i319, %and1.i.i.i.i321, !dbg !3011
  %shl2.i.i.i.i323 = shl i32 %or.i.i.i.i322, 16, !dbg !3012
  %238 = load i32, i32* %x.addr.i.i.i.i300, align 4, !dbg !3013
  %shr3.i.i.i.i324 = lshr i32 %238, 16, !dbg !3014
  %shl4.i.i.i.i325 = shl i32 %shr3.i.i.i.i324, 8, !dbg !3015
  %and5.i.i.i.i326 = and i32 %shl4.i.i.i.i325, 65280, !dbg !3016
  %239 = load i32, i32* %x.addr.i.i.i.i300, align 4, !dbg !3017
  %shr6.i.i.i.i327 = lshr i32 %239, 16, !dbg !3018
  %shr7.i.i.i.i328 = lshr i32 %shr6.i.i.i.i327, 8, !dbg !3019
  %and8.i.i.i.i329 = and i32 %shr7.i.i.i.i328, 255, !dbg !3020
  %or9.i.i.i.i330 = or i32 %and5.i.i.i.i326, %and8.i.i.i.i329, !dbg !3021
  %or10.i.i.i.i331 = or i32 %shl2.i.i.i.i323, %or9.i.i.i.i330, !dbg !3022
  store i32 %or10.i.i.i.i331, i32* %retval.i303, align 4, !dbg !3023
  br label %bytestream2_get_be32.exit333, !dbg !3023

bytestream2_get_be32.exit333:                     ; preds = %if.then.i313, %if.end.i332
  %240 = load i32, i32* %retval.i303, align 4, !dbg !3024
  store i32 %240, i32* %len, align 4, !dbg !3025
  %241 = load i32, i32* %len, align 4, !dbg !3026
  %cmp79 = icmp sgt i32 %241, 0, !dbg !3027
  br i1 %cmp79, label %if.then81, label %if.else134, !dbg !3028

if.then81:                                        ; preds = %bytestream2_get_be32.exit333
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i293, align 8, !dbg !3029
  %242 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i293, align 8, !dbg !3030
  %buffer.i294 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %242, i32 0, i32 0, !dbg !3031
  %243 = load i8*, i8** %buffer.i294, align 8, !dbg !3031
  %244 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i293, align 8, !dbg !3032
  %buffer_start.i295 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %244, i32 0, i32 2, !dbg !3033
  %245 = load i8*, i8** %buffer_start.i295, align 8, !dbg !3033
  %sub.ptr.lhs.cast.i296 = ptrtoint i8* %243 to i64, !dbg !3034
  %sub.ptr.rhs.cast.i297 = ptrtoint i8* %245 to i64, !dbg !3034
  %sub.ptr.sub.i298 = sub i64 %sub.ptr.lhs.cast.i296, %sub.ptr.rhs.cast.i297, !dbg !3034
  %conv.i299 = trunc i64 %sub.ptr.sub.i298 to i32, !dbg !3035
  store i32 %conv.i299, i32* %pos, align 4, !dbg !3036
  %246 = load i32, i32* %skip, align 4, !dbg !3037
  %247 = load i32, i32* %pos, align 4, !dbg !3039
  %cmp83 = icmp sle i32 %246, %247, !dbg !3040
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !3041

if.then85:                                        ; preds = %if.then81
  store i32 -1094995529, i32* %ret, align 4, !dbg !3042
  br label %end, !dbg !3044

if.end86:                                         ; preds = %if.then81
  %248 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3045
  %gb87 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %248, i32 0, i32 2, !dbg !3046
  %249 = load i8*, i8** %buf.addr, align 8, !dbg !3047
  %250 = load i32, i32* %pos, align 4, !dbg !3048
  %idx.ext88 = sext i32 %250 to i64, !dbg !3049
  %add.ptr89 = getelementptr inbounds i8, i8* %249, i64 %idx.ext88, !dbg !3049
  %251 = load i32, i32* %skip, align 4, !dbg !3050
  %252 = load i32, i32* %pos, align 4, !dbg !3051
  %sub90 = sub nsw i32 %251, %252, !dbg !3052
  %mul91 = mul nsw i32 %sub90, 8, !dbg !3053
  %call92 = call i32 @init_get_bits(%struct.GetBitContext* %gb87, i8* %add.ptr89, i32 %mul91), !dbg !3054
  store i32 0, i32* %i, align 4, !dbg !3055
  br label %for.cond, !dbg !3057

for.cond:                                         ; preds = %for.inc, %if.end86
  %253 = load i32, i32* %i, align 4, !dbg !3058
  %254 = load i32, i32* %toks, align 4, !dbg !3061
  %cmp93 = icmp slt i32 %253, %254, !dbg !3062
  br i1 %cmp93, label %for.body, label %for.end, !dbg !3063

for.body:                                         ; preds = %for.cond
  %255 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3064
  %gb95 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %255, i32 0, i32 2, !dbg !3067
  %call96 = call i32 @get_bits_left(%struct.GetBitContext* %gb95), !dbg !3068
  %cmp97 = icmp sle i32 %call96, 0, !dbg !3069
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !3070

if.then99:                                        ; preds = %for.body
  %256 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3071
  %avctx100 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %256, i32 0, i32 0, !dbg !3073
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx100, align 8, !dbg !3073
  %258 = bitcast %struct.AVCodecContext* %257 to i8*, !dbg !3071
  %259 = load i32, i32* %toks, align 4, !dbg !3074
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i32 0, i32 0), i32 %259), !dbg !3075
  store i32 -1094995529, i32* %ret, align 4, !dbg !3076
  br label %end, !dbg !3077

if.end101:                                        ; preds = %for.body
  %260 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3078
  %gb102 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %260, i32 0, i32 2, !dbg !3079
  %call103 = call i32 @tm2_get_token(%struct.GetBitContext* %gb102, %struct.TM2Codes* %codes), !dbg !3080
  %261 = load i32, i32* %i, align 4, !dbg !3081
  %idxprom104 = sext i32 %261 to i64, !dbg !3082
  %262 = load i32, i32* %stream_id.addr, align 4, !dbg !3083
  %idxprom105 = sext i32 %262 to i64, !dbg !3082
  %263 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3082
  %tokens106 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %263, i32 0, i32 7, !dbg !3084
  %arrayidx107 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens106, i64 0, i64 %idxprom105, !dbg !3082
  %264 = load i32*, i32** %arrayidx107, align 8, !dbg !3082
  %arrayidx108 = getelementptr inbounds i32, i32* %264, i64 %idxprom104, !dbg !3082
  store i32 %call103, i32* %arrayidx108, align 4, !dbg !3085
  %265 = load i32, i32* %stream_id.addr, align 4, !dbg !3086
  %cmp109 = icmp sle i32 %265, 5, !dbg !3088
  br i1 %cmp109, label %land.lhs.true, label %lor.lhs.false118, !dbg !3089

land.lhs.true:                                    ; preds = %if.end101
  %266 = load i32, i32* %i, align 4, !dbg !3090
  %idxprom111 = sext i32 %266 to i64, !dbg !3092
  %267 = load i32, i32* %stream_id.addr, align 4, !dbg !3093
  %idxprom112 = sext i32 %267 to i64, !dbg !3092
  %268 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3092
  %tokens113 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %268, i32 0, i32 7, !dbg !3094
  %arrayidx114 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens113, i64 0, i64 %idxprom112, !dbg !3092
  %269 = load i32*, i32** %arrayidx114, align 8, !dbg !3092
  %arrayidx115 = getelementptr inbounds i32, i32* %269, i64 %idxprom111, !dbg !3092
  %270 = load i32, i32* %arrayidx115, align 4, !dbg !3092
  %cmp116 = icmp sge i32 %270, 64, !dbg !3095
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !3096

lor.lhs.false118:                                 ; preds = %land.lhs.true, %if.end101
  %271 = load i32, i32* %i, align 4, !dbg !3097
  %idxprom119 = sext i32 %271 to i64, !dbg !3099
  %272 = load i32, i32* %stream_id.addr, align 4, !dbg !3100
  %idxprom120 = sext i32 %272 to i64, !dbg !3099
  %273 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3099
  %tokens121 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %273, i32 0, i32 7, !dbg !3101
  %arrayidx122 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens121, i64 0, i64 %idxprom120, !dbg !3099
  %274 = load i32*, i32** %arrayidx122, align 8, !dbg !3099
  %arrayidx123 = getelementptr inbounds i32, i32* %274, i64 %idxprom119, !dbg !3099
  %275 = load i32, i32* %arrayidx123, align 4, !dbg !3099
  %cmp124 = icmp slt i32 %275, 0, !dbg !3102
  br i1 %cmp124, label %if.then126, label %if.end133, !dbg !3103

if.then126:                                       ; preds = %lor.lhs.false118, %land.lhs.true
  %276 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3104
  %avctx127 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %276, i32 0, i32 0, !dbg !3106
  %277 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx127, align 8, !dbg !3106
  %278 = bitcast %struct.AVCodecContext* %277 to i8*, !dbg !3104
  %279 = load i32, i32* %i, align 4, !dbg !3107
  %idxprom128 = sext i32 %279 to i64, !dbg !3108
  %280 = load i32, i32* %stream_id.addr, align 4, !dbg !3109
  %idxprom129 = sext i32 %280 to i64, !dbg !3108
  %281 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3108
  %tokens130 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %281, i32 0, i32 7, !dbg !3110
  %arrayidx131 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens130, i64 0, i64 %idxprom129, !dbg !3108
  %282 = load i32*, i32** %arrayidx131, align 8, !dbg !3108
  %arrayidx132 = getelementptr inbounds i32, i32* %282, i64 %idxprom128, !dbg !3108
  %283 = load i32, i32* %arrayidx132, align 4, !dbg !3108
  %284 = load i32, i32* %stream_id.addr, align 4, !dbg !3111
  %285 = load i32, i32* %i, align 4, !dbg !3112
  call void (i8*, i32, i8*, ...) @av_log(i8* %278, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i32 0, i32 0), i32 %283, i32 %284, i32 %285), !dbg !3113
  store i32 -1094995529, i32* %ret, align 4, !dbg !3114
  br label %end, !dbg !3115

if.end133:                                        ; preds = %lor.lhs.false118
  br label %for.inc, !dbg !3116

for.inc:                                          ; preds = %if.end133
  %286 = load i32, i32* %i, align 4, !dbg !3117
  %inc = add nsw i32 %286, 1, !dbg !3117
  store i32 %inc, i32* %i, align 4, !dbg !3117
  br label %for.cond, !dbg !3119, !llvm.loop !3120

for.end:                                          ; preds = %for.cond
  br label %if.end170, !dbg !3122

if.else134:                                       ; preds = %bytestream2_get_be32.exit333
  %287 = load i32, i32* %len, align 4, !dbg !3123
  %cmp135 = icmp slt i32 %287, 0, !dbg !3126
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !3127

if.then137:                                       ; preds = %if.else134
  store i32 -1094995529, i32* %ret, align 4, !dbg !3128
  br label %end, !dbg !3130

if.end138:                                        ; preds = %if.else134
  store i32 0, i32* %i, align 4, !dbg !3131
  br label %for.cond139, !dbg !3133

for.cond139:                                      ; preds = %for.inc167, %if.end138
  %288 = load i32, i32* %i, align 4, !dbg !3134
  %289 = load i32, i32* %toks, align 4, !dbg !3137
  %cmp140 = icmp slt i32 %288, %289, !dbg !3138
  br i1 %cmp140, label %for.body142, label %for.end169, !dbg !3139

for.body142:                                      ; preds = %for.cond139
  %recode = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %codes, i32 0, i32 2, !dbg !3140
  %290 = load i32*, i32** %recode, align 8, !dbg !3140
  %arrayidx143 = getelementptr inbounds i32, i32* %290, i64 0, !dbg !3142
  %291 = load i32, i32* %arrayidx143, align 4, !dbg !3142
  %292 = load i32, i32* %i, align 4, !dbg !3143
  %idxprom144 = sext i32 %292 to i64, !dbg !3144
  %293 = load i32, i32* %stream_id.addr, align 4, !dbg !3145
  %idxprom145 = sext i32 %293 to i64, !dbg !3144
  %294 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3144
  %tokens146 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %294, i32 0, i32 7, !dbg !3146
  %arrayidx147 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens146, i64 0, i64 %idxprom145, !dbg !3144
  %295 = load i32*, i32** %arrayidx147, align 8, !dbg !3144
  %arrayidx148 = getelementptr inbounds i32, i32* %295, i64 %idxprom144, !dbg !3144
  store i32 %291, i32* %arrayidx148, align 4, !dbg !3147
  %296 = load i32, i32* %stream_id.addr, align 4, !dbg !3148
  %cmp149 = icmp sle i32 %296, 5, !dbg !3150
  br i1 %cmp149, label %land.lhs.true151, label %if.end166, !dbg !3151

land.lhs.true151:                                 ; preds = %for.body142
  %297 = load i32, i32* %i, align 4, !dbg !3152
  %idxprom152 = sext i32 %297 to i64, !dbg !3154
  %298 = load i32, i32* %stream_id.addr, align 4, !dbg !3155
  %idxprom153 = sext i32 %298 to i64, !dbg !3154
  %299 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3154
  %tokens154 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %299, i32 0, i32 7, !dbg !3156
  %arrayidx155 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens154, i64 0, i64 %idxprom153, !dbg !3154
  %300 = load i32*, i32** %arrayidx155, align 8, !dbg !3154
  %arrayidx156 = getelementptr inbounds i32, i32* %300, i64 %idxprom152, !dbg !3154
  %301 = load i32, i32* %arrayidx156, align 4, !dbg !3154
  %cmp157 = icmp sge i32 %301, 64, !dbg !3157
  br i1 %cmp157, label %if.then159, label %if.end166, !dbg !3158

if.then159:                                       ; preds = %land.lhs.true151
  %302 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3159
  %avctx160 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %302, i32 0, i32 0, !dbg !3161
  %303 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx160, align 8, !dbg !3161
  %304 = bitcast %struct.AVCodecContext* %303 to i8*, !dbg !3159
  %305 = load i32, i32* %i, align 4, !dbg !3162
  %idxprom161 = sext i32 %305 to i64, !dbg !3163
  %306 = load i32, i32* %stream_id.addr, align 4, !dbg !3164
  %idxprom162 = sext i32 %306 to i64, !dbg !3163
  %307 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3163
  %tokens163 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %307, i32 0, i32 7, !dbg !3165
  %arrayidx164 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens163, i64 0, i64 %idxprom162, !dbg !3163
  %308 = load i32*, i32** %arrayidx164, align 8, !dbg !3163
  %arrayidx165 = getelementptr inbounds i32, i32* %308, i64 %idxprom161, !dbg !3163
  %309 = load i32, i32* %arrayidx165, align 4, !dbg !3163
  %310 = load i32, i32* %stream_id.addr, align 4, !dbg !3166
  %311 = load i32, i32* %i, align 4, !dbg !3167
  call void (i8*, i32, i8*, ...) @av_log(i8* %304, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i32 0, i32 0), i32 %309, i32 %310, i32 %311), !dbg !3168
  store i32 -1094995529, i32* %ret, align 4, !dbg !3169
  br label %end, !dbg !3170

if.end166:                                        ; preds = %land.lhs.true151, %for.body142
  br label %for.inc167, !dbg !3171

for.inc167:                                       ; preds = %if.end166
  %312 = load i32, i32* %i, align 4, !dbg !3172
  %inc168 = add nsw i32 %312, 1, !dbg !3172
  store i32 %inc168, i32* %i, align 4, !dbg !3172
  br label %for.cond139, !dbg !3174, !llvm.loop !3175

for.end169:                                       ; preds = %for.cond139
  br label %if.end170

if.end170:                                        ; preds = %for.end169, %for.end
  %313 = load i32, i32* %skip, align 4, !dbg !3177
  store i32 %313, i32* %ret, align 4, !dbg !3178
  br label %end, !dbg !3179

end:                                              ; preds = %if.end170, %if.then159, %if.then137, %if.then126, %if.then99, %if.then85, %if.then71, %if.then65
  call void @tm2_free_codes(%struct.TM2Codes* %codes), !dbg !3180
  %314 = load i32, i32* %ret, align 4, !dbg !3181
  store i32 %314, i32* %retval, align 4, !dbg !3182
  br label %return, !dbg !3182

return:                                           ; preds = %end, %if.then54, %if.then44, %if.then31, %if.then24, %if.then8, %if.then2, %if.then
  %315 = load i32, i32* %retval, align 4, !dbg !3183
  ret i32 %315, !dbg !3183
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal i32 @tm2_decode_blocks(%struct.TM2Context* %ctx, %struct.AVFrame* %p) #1 !dbg !3184 {
entry:
  %retval.i307 = alloca i8, align 1
  %a.addr.i308 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i308, metadata !3187, metadata !1653), !dbg !3192
  %retval.i296 = alloca i8, align 1
  %a.addr.i297 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i297, metadata !3187, metadata !1653), !dbg !3200
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3187, metadata !1653), !dbg !3202
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %p.addr = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %bw = alloca i32, align 4
  %bh = alloca i32, align 4
  %cw = alloca i32, align 4
  %type = alloca i32, align 4
  %keyframe = alloca i32, align 4
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %dst = alloca i8*, align 8
  %y = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !3204, metadata !1653), !dbg !3205
  store %struct.AVFrame* %p, %struct.AVFrame** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p.addr, metadata !3206, metadata !1653), !dbg !3207
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3208, metadata !1653), !dbg !3209
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3210, metadata !1653), !dbg !3211
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3212, metadata !1653), !dbg !3213
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3214
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 0, !dbg !3215
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3215
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 20, !dbg !3216
  %2 = load i32, i32* %width, align 4, !dbg !3216
  store i32 %2, i32* %w, align 4, !dbg !3213
  call void @llvm.dbg.declare(metadata i32* %h, metadata !3217, metadata !1653), !dbg !3218
  %3 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3219
  %avctx1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %3, i32 0, i32 0, !dbg !3220
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !3220
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 21, !dbg !3221
  %5 = load i32, i32* %height, align 8, !dbg !3221
  store i32 %5, i32* %h, align 4, !dbg !3218
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !3222, metadata !1653), !dbg !3223
  %6 = load i32, i32* %w, align 4, !dbg !3224
  %shr = ashr i32 %6, 2, !dbg !3225
  store i32 %shr, i32* %bw, align 4, !dbg !3223
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !3226, metadata !1653), !dbg !3227
  %7 = load i32, i32* %h, align 4, !dbg !3228
  %shr2 = ashr i32 %7, 2, !dbg !3229
  store i32 %shr2, i32* %bh, align 4, !dbg !3227
  call void @llvm.dbg.declare(metadata i32* %cw, metadata !3230, metadata !1653), !dbg !3231
  %8 = load i32, i32* %w, align 4, !dbg !3232
  %shr3 = ashr i32 %8, 1, !dbg !3233
  store i32 %shr3, i32* %cw, align 4, !dbg !3231
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3234, metadata !1653), !dbg !3235
  call void @llvm.dbg.declare(metadata i32* %keyframe, metadata !3236, metadata !1653), !dbg !3237
  store i32 1, i32* %keyframe, align 4, !dbg !3237
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !3238, metadata !1653), !dbg !3239
  call void @llvm.dbg.declare(metadata i32** %U, metadata !3240, metadata !1653), !dbg !3241
  call void @llvm.dbg.declare(metadata i32** %V, metadata !3242, metadata !1653), !dbg !3243
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !3244, metadata !1653), !dbg !3245
  store i32 0, i32* %i, align 4, !dbg !3246
  br label %for.cond, !dbg !3248

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !3249
  %cmp = icmp slt i32 %9, 7, !dbg !3252
  br i1 %cmp, label %for.body, label %for.end, !dbg !3253

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !3254
  %idxprom = sext i32 %10 to i64, !dbg !3255
  %11 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3255
  %tok_ptrs = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %11, i32 0, i32 9, !dbg !3256
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs, i64 0, i64 %idxprom, !dbg !3255
  store i32 0, i32* %arrayidx, align 4, !dbg !3257
  br label %for.inc, !dbg !3255

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !3258
  %inc = add nsw i32 %12, 1, !dbg !3258
  store i32 %inc, i32* %i, align 4, !dbg !3258
  br label %for.cond, !dbg !3260, !llvm.loop !3261

for.end:                                          ; preds = %for.cond
  %13 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3263
  %tok_lens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %13, i32 0, i32 8, !dbg !3265
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens, i64 0, i64 6, !dbg !3263
  %14 = load i32, i32* %arrayidx4, align 8, !dbg !3263
  %15 = load i32, i32* %bw, align 4, !dbg !3266
  %16 = load i32, i32* %bh, align 4, !dbg !3267
  %mul = mul nsw i32 %15, %16, !dbg !3268
  %cmp5 = icmp slt i32 %14, %mul, !dbg !3269
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3270

if.then:                                          ; preds = %for.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3271
  %avctx6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 0, !dbg !3273
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !3273
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !3271
  %20 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3274
  %tok_lens7 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %20, i32 0, i32 8, !dbg !3275
  %arrayidx8 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens7, i64 0, i64 6, !dbg !3274
  %21 = load i32, i32* %arrayidx8, align 8, !dbg !3274
  %22 = load i32, i32* %bw, align 4, !dbg !3276
  %23 = load i32, i32* %bh, align 4, !dbg !3277
  %mul9 = mul nsw i32 %22, %23, !dbg !3278
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i32 %21, i32 %mul9), !dbg !3279
  store i32 -1094995529, i32* %retval, align 4, !dbg !3280
  br label %return, !dbg !3280

if.end:                                           ; preds = %for.end
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3281
  %last = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 13, !dbg !3282
  %25 = load i32*, i32** %last, align 8, !dbg !3282
  %26 = bitcast i32* %25 to i8*, !dbg !3283
  %27 = load i32, i32* %bw, align 4, !dbg !3284
  %mul10 = mul nsw i32 4, %27, !dbg !3285
  %conv = sext i32 %mul10 to i64, !dbg !3286
  %mul11 = mul i64 %conv, 4, !dbg !3287
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %mul11, i32 4, i1 false), !dbg !3283
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3288
  %clast = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 14, !dbg !3289
  %29 = load i32*, i32** %clast, align 8, !dbg !3289
  %30 = bitcast i32* %29 to i8*, !dbg !3290
  %31 = load i32, i32* %bw, align 4, !dbg !3291
  %mul12 = mul nsw i32 4, %31, !dbg !3292
  %conv13 = sext i32 %mul12 to i64, !dbg !3293
  %mul14 = mul i64 %conv13, 4, !dbg !3294
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 %mul14, i32 4, i1 false), !dbg !3290
  store i32 0, i32* %j, align 4, !dbg !3295
  br label %for.cond15, !dbg !3297

for.cond15:                                       ; preds = %for.inc36, %if.end
  %32 = load i32, i32* %j, align 4, !dbg !3298
  %33 = load i32, i32* %bh, align 4, !dbg !3301
  %cmp16 = icmp slt i32 %32, %33, !dbg !3302
  br i1 %cmp16, label %for.body18, label %for.end38, !dbg !3303

for.body18:                                       ; preds = %for.cond15
  %34 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3304
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %34, i32 0, i32 11, !dbg !3306
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %D, i32 0, i32 0, !dbg !3307
  %35 = bitcast i32* %arraydecay to i8*, !dbg !3307
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 16, i32 8, i1 false), !dbg !3307
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3308
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 12, !dbg !3309
  %arraydecay19 = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i32 0, i32 0, !dbg !3310
  %37 = bitcast i32* %arraydecay19 to i8*, !dbg !3310
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 16, i32 8, i1 false), !dbg !3310
  store i32 0, i32* %i, align 4, !dbg !3311
  br label %for.cond20, !dbg !3313

for.cond20:                                       ; preds = %for.inc33, %for.body18
  %38 = load i32, i32* %i, align 4, !dbg !3314
  %39 = load i32, i32* %bw, align 4, !dbg !3317
  %cmp21 = icmp slt i32 %38, %39, !dbg !3318
  br i1 %cmp21, label %for.body23, label %for.end35, !dbg !3319

for.body23:                                       ; preds = %for.cond20
  %40 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3320
  %call = call i32 @GET_TOK(%struct.TM2Context* %40, i32 6), !dbg !3322
  store i32 %call, i32* %type, align 4, !dbg !3323
  %41 = load i32, i32* %type, align 4, !dbg !3324
  switch i32 %41, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb24
    i32 2, label %sw.bb25
    i32 3, label %sw.bb26
    i32 4, label %sw.bb27
    i32 5, label %sw.bb28
    i32 6, label %sw.bb29
  ], !dbg !3325

sw.bb:                                            ; preds = %for.body23
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3326
  %43 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3328
  %44 = load i32, i32* %i, align 4, !dbg !3329
  %45 = load i32, i32* %j, align 4, !dbg !3330
  call void @tm2_hi_res_block(%struct.TM2Context* %42, %struct.AVFrame* %43, i32 %44, i32 %45), !dbg !3331
  br label %sw.epilog, !dbg !3332

sw.bb24:                                          ; preds = %for.body23
  %46 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3333
  %47 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3334
  %48 = load i32, i32* %i, align 4, !dbg !3335
  %49 = load i32, i32* %j, align 4, !dbg !3336
  call void @tm2_med_res_block(%struct.TM2Context* %46, %struct.AVFrame* %47, i32 %48, i32 %49), !dbg !3337
  br label %sw.epilog, !dbg !3338

sw.bb25:                                          ; preds = %for.body23
  %50 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3339
  %51 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3340
  %52 = load i32, i32* %i, align 4, !dbg !3341
  %53 = load i32, i32* %j, align 4, !dbg !3342
  call void @tm2_low_res_block(%struct.TM2Context* %50, %struct.AVFrame* %51, i32 %52, i32 %53), !dbg !3343
  br label %sw.epilog, !dbg !3344

sw.bb26:                                          ; preds = %for.body23
  %54 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3345
  %55 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3346
  %56 = load i32, i32* %i, align 4, !dbg !3347
  %57 = load i32, i32* %j, align 4, !dbg !3348
  call void @tm2_null_res_block(%struct.TM2Context* %54, %struct.AVFrame* %55, i32 %56, i32 %57), !dbg !3349
  br label %sw.epilog, !dbg !3350

sw.bb27:                                          ; preds = %for.body23
  %58 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3351
  %59 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3352
  %60 = load i32, i32* %i, align 4, !dbg !3353
  %61 = load i32, i32* %j, align 4, !dbg !3354
  call void @tm2_update_block(%struct.TM2Context* %58, %struct.AVFrame* %59, i32 %60, i32 %61), !dbg !3355
  store i32 0, i32* %keyframe, align 4, !dbg !3356
  br label %sw.epilog, !dbg !3357

sw.bb28:                                          ; preds = %for.body23
  %62 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3358
  %63 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3359
  %64 = load i32, i32* %i, align 4, !dbg !3360
  %65 = load i32, i32* %j, align 4, !dbg !3361
  call void @tm2_still_block(%struct.TM2Context* %62, %struct.AVFrame* %63, i32 %64, i32 %65), !dbg !3362
  store i32 0, i32* %keyframe, align 4, !dbg !3363
  br label %sw.epilog, !dbg !3364

sw.bb29:                                          ; preds = %for.body23
  %66 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3365
  %67 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3366
  %68 = load i32, i32* %i, align 4, !dbg !3367
  %69 = load i32, i32* %j, align 4, !dbg !3368
  call void @tm2_motion_block(%struct.TM2Context* %66, %struct.AVFrame* %67, i32 %68, i32 %69), !dbg !3369
  store i32 0, i32* %keyframe, align 4, !dbg !3370
  br label %sw.epilog, !dbg !3371

sw.default:                                       ; preds = %for.body23
  %70 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3372
  %avctx30 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %70, i32 0, i32 0, !dbg !3373
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx30, align 8, !dbg !3373
  %72 = bitcast %struct.AVCodecContext* %71 to i8*, !dbg !3372
  %73 = load i32, i32* %type, align 4, !dbg !3374
  call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i32 0, i32 0), i32 %73), !dbg !3375
  br label %sw.epilog, !dbg !3376

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb
  %74 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3377
  %error = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %74, i32 0, i32 3, !dbg !3379
  %75 = load i32, i32* %error, align 8, !dbg !3379
  %tobool = icmp ne i32 %75, 0, !dbg !3377
  br i1 %tobool, label %if.then31, label %if.end32, !dbg !3380

if.then31:                                        ; preds = %sw.epilog
  store i32 -1094995529, i32* %retval, align 4, !dbg !3381
  br label %return, !dbg !3381

if.end32:                                         ; preds = %sw.epilog
  br label %for.inc33, !dbg !3382

for.inc33:                                        ; preds = %if.end32
  %76 = load i32, i32* %i, align 4, !dbg !3383
  %inc34 = add nsw i32 %76, 1, !dbg !3383
  store i32 %inc34, i32* %i, align 4, !dbg !3383
  br label %for.cond20, !dbg !3385, !llvm.loop !3386

for.end35:                                        ; preds = %for.cond20
  br label %for.inc36, !dbg !3388

for.inc36:                                        ; preds = %for.end35
  %77 = load i32, i32* %j, align 4, !dbg !3389
  %inc37 = add nsw i32 %77, 1, !dbg !3389
  store i32 %inc37, i32* %j, align 4, !dbg !3389
  br label %for.cond15, !dbg !3391, !llvm.loop !3392

for.end38:                                        ; preds = %for.cond15
  %78 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3394
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %78, i32 0, i32 29, !dbg !3395
  %79 = load i32, i32* %cur, align 8, !dbg !3395
  %tobool39 = icmp ne i32 %79, 0, !dbg !3394
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !3394

cond.true:                                        ; preds = %for.end38
  %80 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3396
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %80, i32 0, i32 24, !dbg !3398
  %81 = load i32*, i32** %Y2, align 8, !dbg !3398
  br label %cond.end, !dbg !3399

cond.false:                                       ; preds = %for.end38
  %82 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3400
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %82, i32 0, i32 21, !dbg !3402
  %83 = load i32*, i32** %Y1, align 8, !dbg !3402
  br label %cond.end, !dbg !3403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %81, %cond.true ], [ %83, %cond.false ], !dbg !3404
  store i32* %cond, i32** %Y, align 8, !dbg !3406
  %84 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3407
  %cur40 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %84, i32 0, i32 29, !dbg !3408
  %85 = load i32, i32* %cur40, align 8, !dbg !3408
  %tobool41 = icmp ne i32 %85, 0, !dbg !3407
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !3407

cond.true42:                                      ; preds = %cond.end
  %86 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3409
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %86, i32 0, i32 25, !dbg !3410
  %87 = load i32*, i32** %U2, align 8, !dbg !3410
  br label %cond.end44, !dbg !3411

cond.false43:                                     ; preds = %cond.end
  %88 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3412
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %88, i32 0, i32 22, !dbg !3413
  %89 = load i32*, i32** %U1, align 8, !dbg !3413
  br label %cond.end44, !dbg !3414

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32* [ %87, %cond.true42 ], [ %89, %cond.false43 ], !dbg !3415
  store i32* %cond45, i32** %U, align 8, !dbg !3416
  %90 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3417
  %cur46 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %90, i32 0, i32 29, !dbg !3418
  %91 = load i32, i32* %cur46, align 8, !dbg !3418
  %tobool47 = icmp ne i32 %91, 0, !dbg !3417
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !3417

cond.true48:                                      ; preds = %cond.end44
  %92 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3419
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %92, i32 0, i32 26, !dbg !3420
  %93 = load i32*, i32** %V2, align 8, !dbg !3420
  br label %cond.end50, !dbg !3421

cond.false49:                                     ; preds = %cond.end44
  %94 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3422
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %94, i32 0, i32 23, !dbg !3423
  %95 = load i32*, i32** %V1, align 8, !dbg !3423
  br label %cond.end50, !dbg !3424

cond.end50:                                       ; preds = %cond.false49, %cond.true48
  %cond51 = phi i32* [ %93, %cond.true48 ], [ %95, %cond.false49 ], !dbg !3425
  store i32* %cond51, i32** %V, align 8, !dbg !3426
  %96 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3427
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %96, i32 0, i32 0, !dbg !3428
  %arrayidx52 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !3427
  %97 = load i8*, i8** %arrayidx52, align 8, !dbg !3427
  store i8* %97, i8** %dst, align 8, !dbg !3429
  store i32 0, i32* %j, align 4, !dbg !3430
  br label %for.cond53, !dbg !3431

for.cond53:                                       ; preds = %for.inc293, %cond.end50
  %98 = load i32, i32* %j, align 4, !dbg !3432
  %99 = load i32, i32* %h, align 4, !dbg !3434
  %cmp54 = icmp slt i32 %98, %99, !dbg !3435
  br i1 %cmp54, label %for.body56, label %for.end295, !dbg !3436

for.body56:                                       ; preds = %for.cond53
  store i32 0, i32* %i, align 4, !dbg !3437
  br label %for.cond57, !dbg !3438

for.cond57:                                       ; preds = %for.inc85, %for.body56
  %100 = load i32, i32* %i, align 4, !dbg !3439
  %101 = load i32, i32* %w, align 4, !dbg !3441
  %cmp58 = icmp slt i32 %100, %101, !dbg !3442
  br i1 %cmp58, label %for.body60, label %for.end87, !dbg !3443

for.body60:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3444, metadata !1653), !dbg !3445
  %102 = load i32, i32* %i, align 4, !dbg !3446
  %idxprom61 = sext i32 %102 to i64, !dbg !3447
  %103 = load i32*, i32** %Y, align 8, !dbg !3447
  %arrayidx62 = getelementptr inbounds i32, i32* %103, i64 %idxprom61, !dbg !3447
  %104 = load i32, i32* %arrayidx62, align 4, !dbg !3447
  store i32 %104, i32* %y, align 4, !dbg !3445
  call void @llvm.dbg.declare(metadata i32* %u, metadata !3448, metadata !1653), !dbg !3449
  %105 = load i32, i32* %i, align 4, !dbg !3450
  %shr63 = ashr i32 %105, 1, !dbg !3451
  %idxprom64 = sext i32 %shr63 to i64, !dbg !3452
  %106 = load i32*, i32** %U, align 8, !dbg !3452
  %arrayidx65 = getelementptr inbounds i32, i32* %106, i64 %idxprom64, !dbg !3452
  %107 = load i32, i32* %arrayidx65, align 4, !dbg !3452
  store i32 %107, i32* %u, align 4, !dbg !3449
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3453, metadata !1653), !dbg !3454
  %108 = load i32, i32* %i, align 4, !dbg !3455
  %shr66 = ashr i32 %108, 1, !dbg !3456
  %idxprom67 = sext i32 %shr66 to i64, !dbg !3457
  %109 = load i32*, i32** %V, align 8, !dbg !3457
  %arrayidx68 = getelementptr inbounds i32, i32* %109, i64 %idxprom67, !dbg !3457
  %110 = load i32, i32* %arrayidx68, align 4, !dbg !3457
  store i32 %110, i32* %v, align 4, !dbg !3454
  %111 = load i32, i32* %y, align 4, !dbg !3458
  %112 = load i32, i32* %v, align 4, !dbg !3459
  %add = add nsw i32 %111, %112, !dbg !3460
  store i32 %add, i32* %a.addr.i, align 4, !dbg !3461
  %113 = load i32, i32* %a.addr.i, align 4, !dbg !3462
  %and.i = and i32 %113, -256, !dbg !3464
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3464
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3465

if.then.i:                                        ; preds = %for.body60
  %114 = load i32, i32* %a.addr.i, align 4, !dbg !3466
  %neg.i = xor i32 %114, -1, !dbg !3468
  %shr.i = ashr i32 %neg.i, 31, !dbg !3469
  %conv.i = trunc i32 %shr.i to i8, !dbg !3470
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !3471
  br label %av_clip_uint8_c.exit, !dbg !3471

if.else.i:                                        ; preds = %for.body60
  %115 = load i32, i32* %a.addr.i, align 4, !dbg !3472
  %conv1.i = trunc i32 %115 to i8, !dbg !3472
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !3473
  br label %av_clip_uint8_c.exit, !dbg !3473

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %116 = load i8, i8* %retval.i, align 1, !dbg !3474
  %117 = load i32, i32* %i, align 4, !dbg !3475
  %mul70 = mul nsw i32 3, %117, !dbg !3476
  %add71 = add nsw i32 %mul70, 0, !dbg !3477
  %idxprom72 = sext i32 %add71 to i64, !dbg !3478
  %118 = load i8*, i8** %dst, align 8, !dbg !3478
  %arrayidx73 = getelementptr inbounds i8, i8* %118, i64 %idxprom72, !dbg !3478
  store i8 %116, i8* %arrayidx73, align 1, !dbg !3479
  %119 = load i32, i32* %y, align 4, !dbg !3480
  store i32 %119, i32* %a.addr.i308, align 4, !dbg !3481
  %120 = load i32, i32* %a.addr.i308, align 4, !dbg !3482
  %and.i309 = and i32 %120, -256, !dbg !3483
  %tobool.i310 = icmp ne i32 %and.i309, 0, !dbg !3483
  br i1 %tobool.i310, label %if.then.i314, label %if.else.i316, !dbg !3484

if.then.i314:                                     ; preds = %av_clip_uint8_c.exit
  %121 = load i32, i32* %a.addr.i308, align 4, !dbg !3485
  %neg.i311 = xor i32 %121, -1, !dbg !3486
  %shr.i312 = ashr i32 %neg.i311, 31, !dbg !3487
  %conv.i313 = trunc i32 %shr.i312 to i8, !dbg !3488
  store i8 %conv.i313, i8* %retval.i307, align 1, !dbg !3489
  br label %av_clip_uint8_c.exit317, !dbg !3489

if.else.i316:                                     ; preds = %av_clip_uint8_c.exit
  %122 = load i32, i32* %a.addr.i308, align 4, !dbg !3490
  %conv1.i315 = trunc i32 %122 to i8, !dbg !3490
  store i8 %conv1.i315, i8* %retval.i307, align 1, !dbg !3491
  br label %av_clip_uint8_c.exit317, !dbg !3491

av_clip_uint8_c.exit317:                          ; preds = %if.then.i314, %if.else.i316
  %123 = load i8, i8* %retval.i307, align 1, !dbg !3492
  %124 = load i32, i32* %i, align 4, !dbg !3493
  %mul75 = mul nsw i32 3, %124, !dbg !3494
  %add76 = add nsw i32 %mul75, 1, !dbg !3495
  %idxprom77 = sext i32 %add76 to i64, !dbg !3496
  %125 = load i8*, i8** %dst, align 8, !dbg !3496
  %arrayidx78 = getelementptr inbounds i8, i8* %125, i64 %idxprom77, !dbg !3496
  store i8 %123, i8* %arrayidx78, align 1, !dbg !3497
  %126 = load i32, i32* %y, align 4, !dbg !3498
  %127 = load i32, i32* %u, align 4, !dbg !3499
  %add79 = add nsw i32 %126, %127, !dbg !3500
  store i32 %add79, i32* %a.addr.i297, align 4, !dbg !3501
  %128 = load i32, i32* %a.addr.i297, align 4, !dbg !3502
  %and.i298 = and i32 %128, -256, !dbg !3503
  %tobool.i299 = icmp ne i32 %and.i298, 0, !dbg !3503
  br i1 %tobool.i299, label %if.then.i303, label %if.else.i305, !dbg !3504

if.then.i303:                                     ; preds = %av_clip_uint8_c.exit317
  %129 = load i32, i32* %a.addr.i297, align 4, !dbg !3505
  %neg.i300 = xor i32 %129, -1, !dbg !3506
  %shr.i301 = ashr i32 %neg.i300, 31, !dbg !3507
  %conv.i302 = trunc i32 %shr.i301 to i8, !dbg !3508
  store i8 %conv.i302, i8* %retval.i296, align 1, !dbg !3509
  br label %av_clip_uint8_c.exit306, !dbg !3509

if.else.i305:                                     ; preds = %av_clip_uint8_c.exit317
  %130 = load i32, i32* %a.addr.i297, align 4, !dbg !3510
  %conv1.i304 = trunc i32 %130 to i8, !dbg !3510
  store i8 %conv1.i304, i8* %retval.i296, align 1, !dbg !3511
  br label %av_clip_uint8_c.exit306, !dbg !3511

av_clip_uint8_c.exit306:                          ; preds = %if.then.i303, %if.else.i305
  %131 = load i8, i8* %retval.i296, align 1, !dbg !3512
  %132 = load i32, i32* %i, align 4, !dbg !3513
  %mul81 = mul nsw i32 3, %132, !dbg !3514
  %add82 = add nsw i32 %mul81, 2, !dbg !3515
  %idxprom83 = sext i32 %add82 to i64, !dbg !3516
  %133 = load i8*, i8** %dst, align 8, !dbg !3516
  %arrayidx84 = getelementptr inbounds i8, i8* %133, i64 %idxprom83, !dbg !3516
  store i8 %131, i8* %arrayidx84, align 1, !dbg !3517
  br label %for.inc85, !dbg !3518

for.inc85:                                        ; preds = %av_clip_uint8_c.exit306
  %134 = load i32, i32* %i, align 4, !dbg !3519
  %inc86 = add nsw i32 %134, 1, !dbg !3519
  store i32 %inc86, i32* %i, align 4, !dbg !3519
  br label %for.cond57, !dbg !3521, !llvm.loop !3522

for.end87:                                        ; preds = %for.cond57
  %135 = load i32*, i32** %Y, align 8, !dbg !3524
  %arrayidx88 = getelementptr inbounds i32, i32* %135, i64 0, !dbg !3524
  %136 = load i32, i32* %arrayidx88, align 4, !dbg !3524
  %137 = load i32*, i32** %Y, align 8, !dbg !3525
  %arrayidx89 = getelementptr inbounds i32, i32* %137, i64 -1, !dbg !3525
  store i32 %136, i32* %arrayidx89, align 4, !dbg !3526
  %138 = load i32*, i32** %Y, align 8, !dbg !3527
  %arrayidx90 = getelementptr inbounds i32, i32* %138, i64 -2, !dbg !3527
  store i32 %136, i32* %arrayidx90, align 4, !dbg !3528
  %139 = load i32*, i32** %Y, align 8, !dbg !3529
  %arrayidx91 = getelementptr inbounds i32, i32* %139, i64 -3, !dbg !3529
  store i32 %136, i32* %arrayidx91, align 4, !dbg !3530
  %140 = load i32*, i32** %Y, align 8, !dbg !3531
  %arrayidx92 = getelementptr inbounds i32, i32* %140, i64 -4, !dbg !3531
  store i32 %136, i32* %arrayidx92, align 4, !dbg !3532
  %141 = load i32, i32* %w, align 4, !dbg !3533
  %sub = sub nsw i32 %141, 1, !dbg !3534
  %idxprom93 = sext i32 %sub to i64, !dbg !3535
  %142 = load i32*, i32** %Y, align 8, !dbg !3535
  %arrayidx94 = getelementptr inbounds i32, i32* %142, i64 %idxprom93, !dbg !3535
  %143 = load i32, i32* %arrayidx94, align 4, !dbg !3535
  %144 = load i32, i32* %w, align 4, !dbg !3536
  %idxprom95 = sext i32 %144 to i64, !dbg !3537
  %145 = load i32*, i32** %Y, align 8, !dbg !3537
  %arrayidx96 = getelementptr inbounds i32, i32* %145, i64 %idxprom95, !dbg !3537
  store i32 %143, i32* %arrayidx96, align 4, !dbg !3538
  %146 = load i32, i32* %w, align 4, !dbg !3539
  %add97 = add nsw i32 %146, 1, !dbg !3540
  %idxprom98 = sext i32 %add97 to i64, !dbg !3541
  %147 = load i32*, i32** %Y, align 8, !dbg !3541
  %arrayidx99 = getelementptr inbounds i32, i32* %147, i64 %idxprom98, !dbg !3541
  store i32 %143, i32* %arrayidx99, align 4, !dbg !3542
  %148 = load i32, i32* %w, align 4, !dbg !3543
  %add100 = add nsw i32 %148, 2, !dbg !3544
  %idxprom101 = sext i32 %add100 to i64, !dbg !3545
  %149 = load i32*, i32** %Y, align 8, !dbg !3545
  %arrayidx102 = getelementptr inbounds i32, i32* %149, i64 %idxprom101, !dbg !3545
  store i32 %143, i32* %arrayidx102, align 4, !dbg !3546
  %150 = load i32, i32* %w, align 4, !dbg !3547
  %add103 = add nsw i32 %150, 3, !dbg !3548
  %idxprom104 = sext i32 %add103 to i64, !dbg !3549
  %151 = load i32*, i32** %Y, align 8, !dbg !3549
  %arrayidx105 = getelementptr inbounds i32, i32* %151, i64 %idxprom104, !dbg !3549
  store i32 %143, i32* %arrayidx105, align 4, !dbg !3550
  %152 = load i32, i32* %j, align 4, !dbg !3551
  %cmp106 = icmp eq i32 %152, 0, !dbg !3553
  br i1 %cmp106, label %if.then108, label %if.else, !dbg !3554

if.then108:                                       ; preds = %for.end87
  %153 = load i32*, i32** %Y, align 8, !dbg !3555
  %add.ptr = getelementptr inbounds i32, i32* %153, i64 -4, !dbg !3557
  %154 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3558
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %154, i32 0, i32 27, !dbg !3559
  %155 = load i32, i32* %y_stride, align 8, !dbg !3559
  %mul109 = mul nsw i32 1, %155, !dbg !3560
  %idx.ext = sext i32 %mul109 to i64, !dbg !3561
  %idx.neg = sub i64 0, %idx.ext, !dbg !3561
  %add.ptr110 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.neg, !dbg !3561
  %156 = bitcast i32* %add.ptr110 to i8*, !dbg !3562
  %157 = load i32*, i32** %Y, align 8, !dbg !3563
  %add.ptr111 = getelementptr inbounds i32, i32* %157, i64 -4, !dbg !3564
  %158 = bitcast i32* %add.ptr111 to i8*, !dbg !3562
  %159 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3565
  %y_stride112 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %159, i32 0, i32 27, !dbg !3566
  %160 = load i32, i32* %y_stride112, align 8, !dbg !3566
  %conv113 = sext i32 %160 to i64, !dbg !3565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %158, i64 %conv113, i32 4, i1 false), !dbg !3562
  %161 = load i32*, i32** %Y, align 8, !dbg !3567
  %add.ptr114 = getelementptr inbounds i32, i32* %161, i64 -4, !dbg !3568
  %162 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3569
  %y_stride115 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %162, i32 0, i32 27, !dbg !3570
  %163 = load i32, i32* %y_stride115, align 8, !dbg !3570
  %mul116 = mul nsw i32 2, %163, !dbg !3571
  %idx.ext117 = sext i32 %mul116 to i64, !dbg !3572
  %idx.neg118 = sub i64 0, %idx.ext117, !dbg !3572
  %add.ptr119 = getelementptr inbounds i32, i32* %add.ptr114, i64 %idx.neg118, !dbg !3572
  %164 = bitcast i32* %add.ptr119 to i8*, !dbg !3573
  %165 = load i32*, i32** %Y, align 8, !dbg !3574
  %add.ptr120 = getelementptr inbounds i32, i32* %165, i64 -4, !dbg !3575
  %166 = bitcast i32* %add.ptr120 to i8*, !dbg !3573
  %167 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3576
  %y_stride121 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %167, i32 0, i32 27, !dbg !3577
  %168 = load i32, i32* %y_stride121, align 8, !dbg !3577
  %conv122 = sext i32 %168 to i64, !dbg !3576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %166, i64 %conv122, i32 4, i1 false), !dbg !3573
  %169 = load i32*, i32** %Y, align 8, !dbg !3578
  %add.ptr123 = getelementptr inbounds i32, i32* %169, i64 -4, !dbg !3579
  %170 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3580
  %y_stride124 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %170, i32 0, i32 27, !dbg !3581
  %171 = load i32, i32* %y_stride124, align 8, !dbg !3581
  %mul125 = mul nsw i32 3, %171, !dbg !3582
  %idx.ext126 = sext i32 %mul125 to i64, !dbg !3583
  %idx.neg127 = sub i64 0, %idx.ext126, !dbg !3583
  %add.ptr128 = getelementptr inbounds i32, i32* %add.ptr123, i64 %idx.neg127, !dbg !3583
  %172 = bitcast i32* %add.ptr128 to i8*, !dbg !3584
  %173 = load i32*, i32** %Y, align 8, !dbg !3585
  %add.ptr129 = getelementptr inbounds i32, i32* %173, i64 -4, !dbg !3586
  %174 = bitcast i32* %add.ptr129 to i8*, !dbg !3584
  %175 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3587
  %y_stride130 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %175, i32 0, i32 27, !dbg !3588
  %176 = load i32, i32* %y_stride130, align 8, !dbg !3588
  %conv131 = sext i32 %176 to i64, !dbg !3587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %174, i64 %conv131, i32 4, i1 false), !dbg !3584
  %177 = load i32*, i32** %Y, align 8, !dbg !3589
  %add.ptr132 = getelementptr inbounds i32, i32* %177, i64 -4, !dbg !3590
  %178 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3591
  %y_stride133 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %178, i32 0, i32 27, !dbg !3592
  %179 = load i32, i32* %y_stride133, align 8, !dbg !3592
  %mul134 = mul nsw i32 4, %179, !dbg !3593
  %idx.ext135 = sext i32 %mul134 to i64, !dbg !3594
  %idx.neg136 = sub i64 0, %idx.ext135, !dbg !3594
  %add.ptr137 = getelementptr inbounds i32, i32* %add.ptr132, i64 %idx.neg136, !dbg !3594
  %180 = bitcast i32* %add.ptr137 to i8*, !dbg !3595
  %181 = load i32*, i32** %Y, align 8, !dbg !3596
  %add.ptr138 = getelementptr inbounds i32, i32* %181, i64 -4, !dbg !3597
  %182 = bitcast i32* %add.ptr138 to i8*, !dbg !3595
  %183 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3598
  %y_stride139 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %183, i32 0, i32 27, !dbg !3599
  %184 = load i32, i32* %y_stride139, align 8, !dbg !3599
  %conv140 = sext i32 %184 to i64, !dbg !3598
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %180, i8* %182, i64 %conv140, i32 4, i1 false), !dbg !3595
  br label %if.end178, !dbg !3600

if.else:                                          ; preds = %for.end87
  %185 = load i32, i32* %j, align 4, !dbg !3601
  %186 = load i32, i32* %h, align 4, !dbg !3604
  %sub141 = sub nsw i32 %186, 1, !dbg !3605
  %cmp142 = icmp eq i32 %185, %sub141, !dbg !3606
  br i1 %cmp142, label %if.then144, label %if.end177, !dbg !3601

if.then144:                                       ; preds = %if.else
  %187 = load i32*, i32** %Y, align 8, !dbg !3607
  %add.ptr145 = getelementptr inbounds i32, i32* %187, i64 -4, !dbg !3609
  %188 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3610
  %y_stride146 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %188, i32 0, i32 27, !dbg !3611
  %189 = load i32, i32* %y_stride146, align 8, !dbg !3611
  %mul147 = mul nsw i32 1, %189, !dbg !3612
  %idx.ext148 = sext i32 %mul147 to i64, !dbg !3613
  %add.ptr149 = getelementptr inbounds i32, i32* %add.ptr145, i64 %idx.ext148, !dbg !3613
  %190 = bitcast i32* %add.ptr149 to i8*, !dbg !3614
  %191 = load i32*, i32** %Y, align 8, !dbg !3615
  %add.ptr150 = getelementptr inbounds i32, i32* %191, i64 -4, !dbg !3616
  %192 = bitcast i32* %add.ptr150 to i8*, !dbg !3614
  %193 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3617
  %y_stride151 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %193, i32 0, i32 27, !dbg !3618
  %194 = load i32, i32* %y_stride151, align 8, !dbg !3618
  %conv152 = sext i32 %194 to i64, !dbg !3617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %192, i64 %conv152, i32 4, i1 false), !dbg !3614
  %195 = load i32*, i32** %Y, align 8, !dbg !3619
  %add.ptr153 = getelementptr inbounds i32, i32* %195, i64 -4, !dbg !3620
  %196 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3621
  %y_stride154 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %196, i32 0, i32 27, !dbg !3622
  %197 = load i32, i32* %y_stride154, align 8, !dbg !3622
  %mul155 = mul nsw i32 2, %197, !dbg !3623
  %idx.ext156 = sext i32 %mul155 to i64, !dbg !3624
  %add.ptr157 = getelementptr inbounds i32, i32* %add.ptr153, i64 %idx.ext156, !dbg !3624
  %198 = bitcast i32* %add.ptr157 to i8*, !dbg !3625
  %199 = load i32*, i32** %Y, align 8, !dbg !3626
  %add.ptr158 = getelementptr inbounds i32, i32* %199, i64 -4, !dbg !3627
  %200 = bitcast i32* %add.ptr158 to i8*, !dbg !3625
  %201 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3628
  %y_stride159 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %201, i32 0, i32 27, !dbg !3629
  %202 = load i32, i32* %y_stride159, align 8, !dbg !3629
  %conv160 = sext i32 %202 to i64, !dbg !3628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %200, i64 %conv160, i32 4, i1 false), !dbg !3625
  %203 = load i32*, i32** %Y, align 8, !dbg !3630
  %add.ptr161 = getelementptr inbounds i32, i32* %203, i64 -4, !dbg !3631
  %204 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3632
  %y_stride162 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %204, i32 0, i32 27, !dbg !3633
  %205 = load i32, i32* %y_stride162, align 8, !dbg !3633
  %mul163 = mul nsw i32 3, %205, !dbg !3634
  %idx.ext164 = sext i32 %mul163 to i64, !dbg !3635
  %add.ptr165 = getelementptr inbounds i32, i32* %add.ptr161, i64 %idx.ext164, !dbg !3635
  %206 = bitcast i32* %add.ptr165 to i8*, !dbg !3636
  %207 = load i32*, i32** %Y, align 8, !dbg !3637
  %add.ptr166 = getelementptr inbounds i32, i32* %207, i64 -4, !dbg !3638
  %208 = bitcast i32* %add.ptr166 to i8*, !dbg !3636
  %209 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3639
  %y_stride167 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %209, i32 0, i32 27, !dbg !3640
  %210 = load i32, i32* %y_stride167, align 8, !dbg !3640
  %conv168 = sext i32 %210 to i64, !dbg !3639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %206, i8* %208, i64 %conv168, i32 4, i1 false), !dbg !3636
  %211 = load i32*, i32** %Y, align 8, !dbg !3641
  %add.ptr169 = getelementptr inbounds i32, i32* %211, i64 -4, !dbg !3642
  %212 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3643
  %y_stride170 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %212, i32 0, i32 27, !dbg !3644
  %213 = load i32, i32* %y_stride170, align 8, !dbg !3644
  %mul171 = mul nsw i32 4, %213, !dbg !3645
  %idx.ext172 = sext i32 %mul171 to i64, !dbg !3646
  %add.ptr173 = getelementptr inbounds i32, i32* %add.ptr169, i64 %idx.ext172, !dbg !3646
  %214 = bitcast i32* %add.ptr173 to i8*, !dbg !3647
  %215 = load i32*, i32** %Y, align 8, !dbg !3648
  %add.ptr174 = getelementptr inbounds i32, i32* %215, i64 -4, !dbg !3649
  %216 = bitcast i32* %add.ptr174 to i8*, !dbg !3647
  %217 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3650
  %y_stride175 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %217, i32 0, i32 27, !dbg !3651
  %218 = load i32, i32* %y_stride175, align 8, !dbg !3651
  %conv176 = sext i32 %218 to i64, !dbg !3650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %214, i8* %216, i64 %conv176, i32 4, i1 false), !dbg !3647
  br label %if.end177, !dbg !3652

if.end177:                                        ; preds = %if.then144, %if.else
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then108
  %219 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3653
  %y_stride179 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %219, i32 0, i32 27, !dbg !3654
  %220 = load i32, i32* %y_stride179, align 8, !dbg !3654
  %221 = load i32*, i32** %Y, align 8, !dbg !3655
  %idx.ext180 = sext i32 %220 to i64, !dbg !3655
  %add.ptr181 = getelementptr inbounds i32, i32* %221, i64 %idx.ext180, !dbg !3655
  store i32* %add.ptr181, i32** %Y, align 8, !dbg !3655
  %222 = load i32, i32* %j, align 4, !dbg !3656
  %and = and i32 %222, 1, !dbg !3658
  %tobool182 = icmp ne i32 %and, 0, !dbg !3658
  br i1 %tobool182, label %if.then183, label %if.end289, !dbg !3659

if.then183:                                       ; preds = %if.end178
  %223 = load i32*, i32** %U, align 8, !dbg !3660
  %arrayidx184 = getelementptr inbounds i32, i32* %223, i64 0, !dbg !3660
  %224 = load i32, i32* %arrayidx184, align 4, !dbg !3660
  %225 = load i32*, i32** %U, align 8, !dbg !3662
  %arrayidx185 = getelementptr inbounds i32, i32* %225, i64 -1, !dbg !3662
  store i32 %224, i32* %arrayidx185, align 4, !dbg !3663
  %226 = load i32*, i32** %U, align 8, !dbg !3664
  %arrayidx186 = getelementptr inbounds i32, i32* %226, i64 -2, !dbg !3664
  store i32 %224, i32* %arrayidx186, align 4, !dbg !3665
  %227 = load i32*, i32** %V, align 8, !dbg !3666
  %arrayidx187 = getelementptr inbounds i32, i32* %227, i64 0, !dbg !3666
  %228 = load i32, i32* %arrayidx187, align 4, !dbg !3666
  %229 = load i32*, i32** %V, align 8, !dbg !3667
  %arrayidx188 = getelementptr inbounds i32, i32* %229, i64 -1, !dbg !3667
  store i32 %228, i32* %arrayidx188, align 4, !dbg !3668
  %230 = load i32*, i32** %V, align 8, !dbg !3669
  %arrayidx189 = getelementptr inbounds i32, i32* %230, i64 -2, !dbg !3669
  store i32 %228, i32* %arrayidx189, align 4, !dbg !3670
  %231 = load i32, i32* %cw, align 4, !dbg !3671
  %sub190 = sub nsw i32 %231, 1, !dbg !3672
  %idxprom191 = sext i32 %sub190 to i64, !dbg !3673
  %232 = load i32*, i32** %U, align 8, !dbg !3673
  %arrayidx192 = getelementptr inbounds i32, i32* %232, i64 %idxprom191, !dbg !3673
  %233 = load i32, i32* %arrayidx192, align 4, !dbg !3673
  %234 = load i32, i32* %cw, align 4, !dbg !3674
  %idxprom193 = sext i32 %234 to i64, !dbg !3675
  %235 = load i32*, i32** %U, align 8, !dbg !3675
  %arrayidx194 = getelementptr inbounds i32, i32* %235, i64 %idxprom193, !dbg !3675
  store i32 %233, i32* %arrayidx194, align 4, !dbg !3676
  %236 = load i32, i32* %cw, align 4, !dbg !3677
  %add195 = add nsw i32 %236, 1, !dbg !3678
  %idxprom196 = sext i32 %add195 to i64, !dbg !3679
  %237 = load i32*, i32** %U, align 8, !dbg !3679
  %arrayidx197 = getelementptr inbounds i32, i32* %237, i64 %idxprom196, !dbg !3679
  store i32 %233, i32* %arrayidx197, align 4, !dbg !3680
  %238 = load i32, i32* %cw, align 4, !dbg !3681
  %sub198 = sub nsw i32 %238, 1, !dbg !3682
  %idxprom199 = sext i32 %sub198 to i64, !dbg !3683
  %239 = load i32*, i32** %V, align 8, !dbg !3683
  %arrayidx200 = getelementptr inbounds i32, i32* %239, i64 %idxprom199, !dbg !3683
  %240 = load i32, i32* %arrayidx200, align 4, !dbg !3683
  %241 = load i32, i32* %cw, align 4, !dbg !3684
  %idxprom201 = sext i32 %241 to i64, !dbg !3685
  %242 = load i32*, i32** %V, align 8, !dbg !3685
  %arrayidx202 = getelementptr inbounds i32, i32* %242, i64 %idxprom201, !dbg !3685
  store i32 %240, i32* %arrayidx202, align 4, !dbg !3686
  %243 = load i32, i32* %cw, align 4, !dbg !3687
  %add203 = add nsw i32 %243, 1, !dbg !3688
  %idxprom204 = sext i32 %add203 to i64, !dbg !3689
  %244 = load i32*, i32** %V, align 8, !dbg !3689
  %arrayidx205 = getelementptr inbounds i32, i32* %244, i64 %idxprom204, !dbg !3689
  store i32 %240, i32* %arrayidx205, align 4, !dbg !3690
  %245 = load i32, i32* %j, align 4, !dbg !3691
  %cmp206 = icmp eq i32 %245, 1, !dbg !3693
  br i1 %cmp206, label %if.then208, label %if.else244, !dbg !3694

if.then208:                                       ; preds = %if.then183
  %246 = load i32*, i32** %U, align 8, !dbg !3695
  %add.ptr209 = getelementptr inbounds i32, i32* %246, i64 -2, !dbg !3697
  %247 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3698
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %247, i32 0, i32 28, !dbg !3699
  %248 = load i32, i32* %uv_stride, align 4, !dbg !3699
  %mul210 = mul nsw i32 1, %248, !dbg !3700
  %idx.ext211 = sext i32 %mul210 to i64, !dbg !3701
  %idx.neg212 = sub i64 0, %idx.ext211, !dbg !3701
  %add.ptr213 = getelementptr inbounds i32, i32* %add.ptr209, i64 %idx.neg212, !dbg !3701
  %249 = bitcast i32* %add.ptr213 to i8*, !dbg !3702
  %250 = load i32*, i32** %U, align 8, !dbg !3703
  %add.ptr214 = getelementptr inbounds i32, i32* %250, i64 -2, !dbg !3704
  %251 = bitcast i32* %add.ptr214 to i8*, !dbg !3702
  %252 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3705
  %uv_stride215 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %252, i32 0, i32 28, !dbg !3706
  %253 = load i32, i32* %uv_stride215, align 4, !dbg !3706
  %conv216 = sext i32 %253 to i64, !dbg !3705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %251, i64 %conv216, i32 4, i1 false), !dbg !3702
  %254 = load i32*, i32** %V, align 8, !dbg !3707
  %add.ptr217 = getelementptr inbounds i32, i32* %254, i64 -2, !dbg !3708
  %255 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3709
  %uv_stride218 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %255, i32 0, i32 28, !dbg !3710
  %256 = load i32, i32* %uv_stride218, align 4, !dbg !3710
  %mul219 = mul nsw i32 1, %256, !dbg !3711
  %idx.ext220 = sext i32 %mul219 to i64, !dbg !3712
  %idx.neg221 = sub i64 0, %idx.ext220, !dbg !3712
  %add.ptr222 = getelementptr inbounds i32, i32* %add.ptr217, i64 %idx.neg221, !dbg !3712
  %257 = bitcast i32* %add.ptr222 to i8*, !dbg !3713
  %258 = load i32*, i32** %V, align 8, !dbg !3714
  %add.ptr223 = getelementptr inbounds i32, i32* %258, i64 -2, !dbg !3715
  %259 = bitcast i32* %add.ptr223 to i8*, !dbg !3713
  %260 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3716
  %uv_stride224 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %260, i32 0, i32 28, !dbg !3717
  %261 = load i32, i32* %uv_stride224, align 4, !dbg !3717
  %conv225 = sext i32 %261 to i64, !dbg !3716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %257, i8* %259, i64 %conv225, i32 4, i1 false), !dbg !3713
  %262 = load i32*, i32** %U, align 8, !dbg !3718
  %add.ptr226 = getelementptr inbounds i32, i32* %262, i64 -2, !dbg !3719
  %263 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3720
  %uv_stride227 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %263, i32 0, i32 28, !dbg !3721
  %264 = load i32, i32* %uv_stride227, align 4, !dbg !3721
  %mul228 = mul nsw i32 2, %264, !dbg !3722
  %idx.ext229 = sext i32 %mul228 to i64, !dbg !3723
  %idx.neg230 = sub i64 0, %idx.ext229, !dbg !3723
  %add.ptr231 = getelementptr inbounds i32, i32* %add.ptr226, i64 %idx.neg230, !dbg !3723
  %265 = bitcast i32* %add.ptr231 to i8*, !dbg !3724
  %266 = load i32*, i32** %U, align 8, !dbg !3725
  %add.ptr232 = getelementptr inbounds i32, i32* %266, i64 -2, !dbg !3726
  %267 = bitcast i32* %add.ptr232 to i8*, !dbg !3724
  %268 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3727
  %uv_stride233 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %268, i32 0, i32 28, !dbg !3728
  %269 = load i32, i32* %uv_stride233, align 4, !dbg !3728
  %conv234 = sext i32 %269 to i64, !dbg !3727
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %265, i8* %267, i64 %conv234, i32 4, i1 false), !dbg !3724
  %270 = load i32*, i32** %V, align 8, !dbg !3729
  %add.ptr235 = getelementptr inbounds i32, i32* %270, i64 -2, !dbg !3730
  %271 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3731
  %uv_stride236 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %271, i32 0, i32 28, !dbg !3732
  %272 = load i32, i32* %uv_stride236, align 4, !dbg !3732
  %mul237 = mul nsw i32 2, %272, !dbg !3733
  %idx.ext238 = sext i32 %mul237 to i64, !dbg !3734
  %idx.neg239 = sub i64 0, %idx.ext238, !dbg !3734
  %add.ptr240 = getelementptr inbounds i32, i32* %add.ptr235, i64 %idx.neg239, !dbg !3734
  %273 = bitcast i32* %add.ptr240 to i8*, !dbg !3735
  %274 = load i32*, i32** %V, align 8, !dbg !3736
  %add.ptr241 = getelementptr inbounds i32, i32* %274, i64 -2, !dbg !3737
  %275 = bitcast i32* %add.ptr241 to i8*, !dbg !3735
  %276 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3738
  %uv_stride242 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %276, i32 0, i32 28, !dbg !3739
  %277 = load i32, i32* %uv_stride242, align 4, !dbg !3739
  %conv243 = sext i32 %277 to i64, !dbg !3738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %275, i64 %conv243, i32 4, i1 false), !dbg !3735
  br label %if.end282, !dbg !3740

if.else244:                                       ; preds = %if.then183
  %278 = load i32, i32* %j, align 4, !dbg !3741
  %279 = load i32, i32* %h, align 4, !dbg !3744
  %sub245 = sub nsw i32 %279, 1, !dbg !3745
  %cmp246 = icmp eq i32 %278, %sub245, !dbg !3746
  br i1 %cmp246, label %if.then248, label %if.end281, !dbg !3741

if.then248:                                       ; preds = %if.else244
  %280 = load i32*, i32** %U, align 8, !dbg !3747
  %add.ptr249 = getelementptr inbounds i32, i32* %280, i64 -2, !dbg !3749
  %281 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3750
  %uv_stride250 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %281, i32 0, i32 28, !dbg !3751
  %282 = load i32, i32* %uv_stride250, align 4, !dbg !3751
  %mul251 = mul nsw i32 1, %282, !dbg !3752
  %idx.ext252 = sext i32 %mul251 to i64, !dbg !3753
  %add.ptr253 = getelementptr inbounds i32, i32* %add.ptr249, i64 %idx.ext252, !dbg !3753
  %283 = bitcast i32* %add.ptr253 to i8*, !dbg !3754
  %284 = load i32*, i32** %U, align 8, !dbg !3755
  %add.ptr254 = getelementptr inbounds i32, i32* %284, i64 -2, !dbg !3756
  %285 = bitcast i32* %add.ptr254 to i8*, !dbg !3754
  %286 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3757
  %uv_stride255 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %286, i32 0, i32 28, !dbg !3758
  %287 = load i32, i32* %uv_stride255, align 4, !dbg !3758
  %conv256 = sext i32 %287 to i64, !dbg !3757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %285, i64 %conv256, i32 4, i1 false), !dbg !3754
  %288 = load i32*, i32** %V, align 8, !dbg !3759
  %add.ptr257 = getelementptr inbounds i32, i32* %288, i64 -2, !dbg !3760
  %289 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3761
  %uv_stride258 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %289, i32 0, i32 28, !dbg !3762
  %290 = load i32, i32* %uv_stride258, align 4, !dbg !3762
  %mul259 = mul nsw i32 1, %290, !dbg !3763
  %idx.ext260 = sext i32 %mul259 to i64, !dbg !3764
  %add.ptr261 = getelementptr inbounds i32, i32* %add.ptr257, i64 %idx.ext260, !dbg !3764
  %291 = bitcast i32* %add.ptr261 to i8*, !dbg !3765
  %292 = load i32*, i32** %V, align 8, !dbg !3766
  %add.ptr262 = getelementptr inbounds i32, i32* %292, i64 -2, !dbg !3767
  %293 = bitcast i32* %add.ptr262 to i8*, !dbg !3765
  %294 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3768
  %uv_stride263 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %294, i32 0, i32 28, !dbg !3769
  %295 = load i32, i32* %uv_stride263, align 4, !dbg !3769
  %conv264 = sext i32 %295 to i64, !dbg !3768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %291, i8* %293, i64 %conv264, i32 4, i1 false), !dbg !3765
  %296 = load i32*, i32** %U, align 8, !dbg !3770
  %add.ptr265 = getelementptr inbounds i32, i32* %296, i64 -2, !dbg !3771
  %297 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3772
  %uv_stride266 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %297, i32 0, i32 28, !dbg !3773
  %298 = load i32, i32* %uv_stride266, align 4, !dbg !3773
  %mul267 = mul nsw i32 2, %298, !dbg !3774
  %idx.ext268 = sext i32 %mul267 to i64, !dbg !3775
  %add.ptr269 = getelementptr inbounds i32, i32* %add.ptr265, i64 %idx.ext268, !dbg !3775
  %299 = bitcast i32* %add.ptr269 to i8*, !dbg !3776
  %300 = load i32*, i32** %U, align 8, !dbg !3777
  %add.ptr270 = getelementptr inbounds i32, i32* %300, i64 -2, !dbg !3778
  %301 = bitcast i32* %add.ptr270 to i8*, !dbg !3776
  %302 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3779
  %uv_stride271 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %302, i32 0, i32 28, !dbg !3780
  %303 = load i32, i32* %uv_stride271, align 4, !dbg !3780
  %conv272 = sext i32 %303 to i64, !dbg !3779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %299, i8* %301, i64 %conv272, i32 4, i1 false), !dbg !3776
  %304 = load i32*, i32** %V, align 8, !dbg !3781
  %add.ptr273 = getelementptr inbounds i32, i32* %304, i64 -2, !dbg !3782
  %305 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3783
  %uv_stride274 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %305, i32 0, i32 28, !dbg !3784
  %306 = load i32, i32* %uv_stride274, align 4, !dbg !3784
  %mul275 = mul nsw i32 2, %306, !dbg !3785
  %idx.ext276 = sext i32 %mul275 to i64, !dbg !3786
  %add.ptr277 = getelementptr inbounds i32, i32* %add.ptr273, i64 %idx.ext276, !dbg !3786
  %307 = bitcast i32* %add.ptr277 to i8*, !dbg !3787
  %308 = load i32*, i32** %V, align 8, !dbg !3788
  %add.ptr278 = getelementptr inbounds i32, i32* %308, i64 -2, !dbg !3789
  %309 = bitcast i32* %add.ptr278 to i8*, !dbg !3787
  %310 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3790
  %uv_stride279 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %310, i32 0, i32 28, !dbg !3791
  %311 = load i32, i32* %uv_stride279, align 4, !dbg !3791
  %conv280 = sext i32 %311 to i64, !dbg !3790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %307, i8* %309, i64 %conv280, i32 4, i1 false), !dbg !3787
  br label %if.end281, !dbg !3792

if.end281:                                        ; preds = %if.then248, %if.else244
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then208
  %312 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3793
  %uv_stride283 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %312, i32 0, i32 28, !dbg !3794
  %313 = load i32, i32* %uv_stride283, align 4, !dbg !3794
  %314 = load i32*, i32** %U, align 8, !dbg !3795
  %idx.ext284 = sext i32 %313 to i64, !dbg !3795
  %add.ptr285 = getelementptr inbounds i32, i32* %314, i64 %idx.ext284, !dbg !3795
  store i32* %add.ptr285, i32** %U, align 8, !dbg !3795
  %315 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3796
  %uv_stride286 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %315, i32 0, i32 28, !dbg !3797
  %316 = load i32, i32* %uv_stride286, align 4, !dbg !3797
  %317 = load i32*, i32** %V, align 8, !dbg !3798
  %idx.ext287 = sext i32 %316 to i64, !dbg !3798
  %add.ptr288 = getelementptr inbounds i32, i32* %317, i64 %idx.ext287, !dbg !3798
  store i32* %add.ptr288, i32** %V, align 8, !dbg !3798
  br label %if.end289, !dbg !3799

if.end289:                                        ; preds = %if.end282, %if.end178
  %318 = load %struct.AVFrame*, %struct.AVFrame** %p.addr, align 8, !dbg !3800
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %318, i32 0, i32 1, !dbg !3801
  %arrayidx290 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !3800
  %319 = load i32, i32* %arrayidx290, align 8, !dbg !3800
  %320 = load i8*, i8** %dst, align 8, !dbg !3802
  %idx.ext291 = sext i32 %319 to i64, !dbg !3802
  %add.ptr292 = getelementptr inbounds i8, i8* %320, i64 %idx.ext291, !dbg !3802
  store i8* %add.ptr292, i8** %dst, align 8, !dbg !3802
  br label %for.inc293, !dbg !3803

for.inc293:                                       ; preds = %if.end289
  %321 = load i32, i32* %j, align 4, !dbg !3804
  %inc294 = add nsw i32 %321, 1, !dbg !3804
  store i32 %inc294, i32* %j, align 4, !dbg !3804
  br label %for.cond53, !dbg !3806, !llvm.loop !3807

for.end295:                                       ; preds = %for.cond53
  %322 = load i32, i32* %keyframe, align 4, !dbg !3809
  store i32 %322, i32* %retval, align 4, !dbg !3810
  br label %return, !dbg !3810

return:                                           ; preds = %for.end295, %if.then31, %if.then
  %323 = load i32, i32* %retval, align 4, !dbg !3811
  ret i32 %323, !dbg !3811
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #3

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !3812 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3816, metadata !1653), !dbg !3817
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3818, metadata !1653), !dbg !3819
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !3820, metadata !1653), !dbg !3821
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !3822, metadata !1653), !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3824, metadata !1653), !dbg !3825
  store i32 0, i32* %ret, align 4, !dbg !3825
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !3826
  %cmp = icmp sge i32 %0, 2147483135, !dbg !3828
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3829

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !3830
  %cmp1 = icmp slt i32 %1, 0, !dbg !3832
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3833

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !3834
  %tobool = icmp ne i8* %2, null, !dbg !3834
  br i1 %tobool, label %if.end, label %if.then, !dbg !3836

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !3837
  store i8* null, i8** %buffer.addr, align 8, !dbg !3839
  store i32 -1094995529, i32* %ret, align 4, !dbg !3840
  br label %if.end, !dbg !3841

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !3842
  %add = add nsw i32 %3, 7, !dbg !3843
  %shr = ashr i32 %add, 3, !dbg !3844
  store i32 %shr, i32* %buffer_size, align 4, !dbg !3845
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !3846
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3847
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !3848
  store i8* %4, i8** %buffer3, align 8, !dbg !3849
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !3850
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3851
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !3852
  store i32 %6, i32* %size_in_bits, align 4, !dbg !3853
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !3854
  %add4 = add nsw i32 %8, 8, !dbg !3855
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3856
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !3857
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !3858
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !3859
  %11 = load i32, i32* %buffer_size, align 4, !dbg !3860
  %idx.ext = sext i32 %11 to i64, !dbg !3861
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3861
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3862
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !3863
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !3864
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3865
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !3866
  store i32 0, i32* %index, align 8, !dbg !3867
  %14 = load i32, i32* %ret, align 4, !dbg !3868
  ret i32 %14, !dbg !3869
}

; Function Attrs: nounwind uwtable
define internal i32 @tm2_read_deltas(%struct.TM2Context* %ctx, i32 %stream_id) #1 !dbg !3870 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %stream_id.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %mb = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !3873, metadata !1653), !dbg !3874
  store i32 %stream_id, i32* %stream_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_id.addr, metadata !3875, metadata !1653), !dbg !3876
  call void @llvm.dbg.declare(metadata i32* %d, metadata !3877, metadata !1653), !dbg !3878
  call void @llvm.dbg.declare(metadata i32* %mb, metadata !3879, metadata !1653), !dbg !3880
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3881, metadata !1653), !dbg !3882
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3883, metadata !1653), !dbg !3884
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3885
  %gb = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 2, !dbg !3886
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 9), !dbg !3887
  store i32 %call, i32* %d, align 4, !dbg !3888
  %1 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3889
  %gb1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %1, i32 0, i32 2, !dbg !3890
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 5), !dbg !3891
  store i32 %call2, i32* %mb, align 4, !dbg !3892
  %2 = load i32, i32* %d, align 4, !dbg !3893
  %cmp = icmp slt i32 %2, 1, !dbg !3895
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3896

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %d, align 4, !dbg !3897
  %cmp3 = icmp sgt i32 %3, 64, !dbg !3899
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3900

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %mb, align 4, !dbg !3901
  %cmp5 = icmp slt i32 %4, 1, !dbg !3903
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3904

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %5 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3905
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %5, i32 0, i32 0, !dbg !3907
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3907
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !3905
  %8 = load i32, i32* %d, align 4, !dbg !3908
  %9 = load i32, i32* %mb, align 4, !dbg !3909
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i32 0, i32 0), i32 %8, i32 %9), !dbg !3910
  store i32 -1094995529, i32* %retval, align 4, !dbg !3911
  br label %return, !dbg !3911

if.end:                                           ; preds = %lor.lhs.false4
  store i32 0, i32* %i, align 4, !dbg !3912
  br label %for.cond, !dbg !3914

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !3915
  %11 = load i32, i32* %d, align 4, !dbg !3918
  %cmp6 = icmp slt i32 %10, %11, !dbg !3919
  br i1 %cmp6, label %for.body, label %for.end, !dbg !3920

for.body:                                         ; preds = %for.cond
  %12 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3921
  %gb7 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %12, i32 0, i32 2, !dbg !3923
  %13 = load i32, i32* %mb, align 4, !dbg !3924
  %call8 = call i32 @get_bits_long(%struct.GetBitContext* %gb7, i32 %13), !dbg !3925
  store i32 %call8, i32* %v, align 4, !dbg !3926
  %14 = load i32, i32* %v, align 4, !dbg !3927
  %15 = load i32, i32* %mb, align 4, !dbg !3929
  %sub = sub nsw i32 %15, 1, !dbg !3930
  %shl = shl i32 1, %sub, !dbg !3931
  %and = and i32 %14, %shl, !dbg !3932
  %tobool = icmp ne i32 %and, 0, !dbg !3932
  br i1 %tobool, label %if.then9, label %if.else, !dbg !3933

if.then9:                                         ; preds = %for.body
  %16 = load i32, i32* %v, align 4, !dbg !3934
  %17 = load i32, i32* %mb, align 4, !dbg !3935
  %shl10 = shl i32 1, %17, !dbg !3936
  %sub11 = sub i32 %16, %shl10, !dbg !3937
  %18 = load i32, i32* %i, align 4, !dbg !3938
  %idxprom = sext i32 %18 to i64, !dbg !3939
  %19 = load i32, i32* %stream_id.addr, align 4, !dbg !3940
  %idxprom12 = sext i32 %19 to i64, !dbg !3939
  %20 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3939
  %deltas = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %20, i32 0, i32 10, !dbg !3941
  %arrayidx = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %deltas, i64 0, i64 %idxprom12, !dbg !3939
  %arrayidx13 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !3939
  store i32 %sub11, i32* %arrayidx13, align 4, !dbg !3942
  br label %if.end19, !dbg !3939

if.else:                                          ; preds = %for.body
  %21 = load i32, i32* %v, align 4, !dbg !3943
  %22 = load i32, i32* %i, align 4, !dbg !3944
  %idxprom14 = sext i32 %22 to i64, !dbg !3945
  %23 = load i32, i32* %stream_id.addr, align 4, !dbg !3946
  %idxprom15 = sext i32 %23 to i64, !dbg !3945
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3945
  %deltas16 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 10, !dbg !3947
  %arrayidx17 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %deltas16, i64 0, i64 %idxprom15, !dbg !3945
  %arrayidx18 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx17, i64 0, i64 %idxprom14, !dbg !3945
  store i32 %21, i32* %arrayidx18, align 4, !dbg !3948
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then9
  br label %for.inc, !dbg !3949

for.inc:                                          ; preds = %if.end19
  %25 = load i32, i32* %i, align 4, !dbg !3950
  %inc = add nsw i32 %25, 1, !dbg !3950
  store i32 %inc, i32* %i, align 4, !dbg !3950
  br label %for.cond, !dbg !3952, !llvm.loop !3953

for.end:                                          ; preds = %for.cond
  br label %for.cond20, !dbg !3955

for.cond20:                                       ; preds = %for.inc28, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !3956
  %cmp21 = icmp slt i32 %26, 64, !dbg !3960
  br i1 %cmp21, label %for.body22, label %for.end30, !dbg !3961

for.body22:                                       ; preds = %for.cond20
  %27 = load i32, i32* %i, align 4, !dbg !3962
  %idxprom23 = sext i32 %27 to i64, !dbg !3963
  %28 = load i32, i32* %stream_id.addr, align 4, !dbg !3964
  %idxprom24 = sext i32 %28 to i64, !dbg !3963
  %29 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !3963
  %deltas25 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %29, i32 0, i32 10, !dbg !3965
  %arrayidx26 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %deltas25, i64 0, i64 %idxprom24, !dbg !3963
  %arrayidx27 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx26, i64 0, i64 %idxprom23, !dbg !3963
  store i32 0, i32* %arrayidx27, align 4, !dbg !3966
  br label %for.inc28, !dbg !3963

for.inc28:                                        ; preds = %for.body22
  %30 = load i32, i32* %i, align 4, !dbg !3967
  %inc29 = add nsw i32 %30, 1, !dbg !3967
  store i32 %inc29, i32* %i, align 4, !dbg !3967
  br label %for.cond20, !dbg !3969, !llvm.loop !3970

for.end30:                                        ; preds = %for.cond20
  store i32 0, i32* %retval, align 4, !dbg !3971
  br label %return, !dbg !3971

return:                                           ; preds = %for.end30, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !3972
  ret i32 %31, !dbg !3972
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !3973 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3978, metadata !1653), !dbg !3979
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3980
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3981
  %1 = load i32, i32* %index, align 8, !dbg !3981
  ret i32 %1, !dbg !3982
}

; Function Attrs: nounwind uwtable
define internal i32 @tm2_build_huff_table(%struct.TM2Context* %ctx, %struct.TM2Codes* %code) #1 !dbg !3983 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %code.addr = alloca %struct.TM2Codes*, align 8
  %huff = alloca %struct.TM2Huff, align 8
  %res = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !3987, metadata !1653), !dbg !3988
  store %struct.TM2Codes* %code, %struct.TM2Codes** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Codes** %code.addr, metadata !3989, metadata !1653), !dbg !3990
  call void @llvm.dbg.declare(metadata %struct.TM2Huff* %huff, metadata !3991, metadata !1653), !dbg !4004
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4005, metadata !1653), !dbg !4006
  store i32 0, i32* %res, align 4, !dbg !4006
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4007
  %gb = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 2, !dbg !4008
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 5), !dbg !4009
  %val_bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 0, !dbg !4010
  store i32 %call, i32* %val_bits, align 8, !dbg !4011
  %1 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4012
  %gb1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %1, i32 0, i32 2, !dbg !4013
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 5), !dbg !4014
  %max_bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4015
  store i32 %call2, i32* %max_bits, align 4, !dbg !4016
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4017
  %gb3 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 2, !dbg !4018
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 5), !dbg !4019
  %min_bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 2, !dbg !4020
  store i32 %call4, i32* %min_bits, align 8, !dbg !4021
  %3 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4022
  %gb5 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %3, i32 0, i32 2, !dbg !4023
  %call6 = call i32 @get_bits_long(%struct.GetBitContext* %gb5, i32 17), !dbg !4024
  %nodes = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 3, !dbg !4025
  store i32 %call6, i32* %nodes, align 4, !dbg !4026
  %num = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 4, !dbg !4027
  store i32 0, i32* %num, align 8, !dbg !4028
  %val_bits7 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 0, !dbg !4029
  %4 = load i32, i32* %val_bits7, align 8, !dbg !4029
  %cmp = icmp slt i32 %4, 1, !dbg !4031
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4032

lor.lhs.false:                                    ; preds = %entry
  %val_bits8 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 0, !dbg !4033
  %5 = load i32, i32* %val_bits8, align 8, !dbg !4033
  %cmp9 = icmp sgt i32 %5, 32, !dbg !4035
  br i1 %cmp9, label %if.then, label %lor.lhs.false10, !dbg !4036

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %max_bits11 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4037
  %6 = load i32, i32* %max_bits11, align 4, !dbg !4037
  %cmp12 = icmp slt i32 %6, 0, !dbg !4038
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !4039

lor.lhs.false13:                                  ; preds = %lor.lhs.false10
  %max_bits14 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4040
  %7 = load i32, i32* %max_bits14, align 4, !dbg !4040
  %cmp15 = icmp sgt i32 %7, 25, !dbg !4041
  br i1 %cmp15, label %if.then, label %if.end, !dbg !4042

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false10, %lor.lhs.false, %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4044
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 0, !dbg !4046
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4046
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !4044
  %val_bits16 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 0, !dbg !4047
  %11 = load i32, i32* %val_bits16, align 8, !dbg !4047
  %max_bits17 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4048
  %12 = load i32, i32* %max_bits17, align 4, !dbg !4048
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.15, i32 0, i32 0), i32 %11, i32 %12), !dbg !4049
  store i32 -1094995529, i32* %retval, align 4, !dbg !4050
  br label %return, !dbg !4050

if.end:                                           ; preds = %lor.lhs.false13
  %nodes18 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 3, !dbg !4051
  %13 = load i32, i32* %nodes18, align 4, !dbg !4051
  %cmp19 = icmp sle i32 %13, 0, !dbg !4053
  br i1 %cmp19, label %if.then23, label %lor.lhs.false20, !dbg !4054

lor.lhs.false20:                                  ; preds = %if.end
  %nodes21 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 3, !dbg !4055
  %14 = load i32, i32* %nodes21, align 4, !dbg !4055
  %cmp22 = icmp sgt i32 %14, 65536, !dbg !4057
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !4058

if.then23:                                        ; preds = %lor.lhs.false20, %if.end
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4059
  %avctx24 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 0, !dbg !4061
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx24, align 8, !dbg !4061
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !4059
  %nodes25 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 3, !dbg !4062
  %18 = load i32, i32* %nodes25, align 4, !dbg !4062
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i32 0, i32 0), i32 %18), !dbg !4063
  store i32 -1094995529, i32* %retval, align 4, !dbg !4064
  br label %return, !dbg !4064

if.end26:                                         ; preds = %lor.lhs.false20
  %max_bits27 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4065
  %19 = load i32, i32* %max_bits27, align 4, !dbg !4065
  %cmp28 = icmp eq i32 %19, 0, !dbg !4067
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !4068

if.then29:                                        ; preds = %if.end26
  %max_bits30 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4069
  store i32 1, i32* %max_bits30, align 4, !dbg !4070
  br label %if.end31, !dbg !4071

if.end31:                                         ; preds = %if.then29, %if.end26
  %nodes32 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 3, !dbg !4072
  %20 = load i32, i32* %nodes32, align 4, !dbg !4072
  %add = add nsw i32 %20, 1, !dbg !4073
  %shr = ashr i32 %add, 1, !dbg !4074
  %max_num = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4075
  store i32 %shr, i32* %max_num, align 4, !dbg !4076
  %max_num33 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4077
  %21 = load i32, i32* %max_num33, align 4, !dbg !4077
  %conv = sext i32 %21 to i64, !dbg !4078
  %call34 = call noalias i8* @av_calloc(i64 %conv, i64 4), !dbg !4079
  %22 = bitcast i8* %call34 to i32*, !dbg !4079
  %nums = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 6, !dbg !4080
  store i32* %22, i32** %nums, align 8, !dbg !4081
  %max_num35 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4082
  %23 = load i32, i32* %max_num35, align 4, !dbg !4082
  %conv36 = sext i32 %23 to i64, !dbg !4083
  %call37 = call noalias i8* @av_calloc(i64 %conv36, i64 4), !dbg !4084
  %24 = bitcast i8* %call37 to i32*, !dbg !4084
  %bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 7, !dbg !4085
  store i32* %24, i32** %bits, align 8, !dbg !4086
  %max_num38 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4087
  %25 = load i32, i32* %max_num38, align 4, !dbg !4087
  %conv39 = sext i32 %25 to i64, !dbg !4088
  %call40 = call noalias i8* @av_calloc(i64 %conv39, i64 4), !dbg !4089
  %26 = bitcast i8* %call40 to i32*, !dbg !4089
  %lens = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 8, !dbg !4090
  store i32* %26, i32** %lens, align 8, !dbg !4091
  %nums41 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 6, !dbg !4092
  %27 = load i32*, i32** %nums41, align 8, !dbg !4092
  %tobool = icmp ne i32* %27, null, !dbg !4094
  br i1 %tobool, label %lor.lhs.false42, label %if.then48, !dbg !4095

lor.lhs.false42:                                  ; preds = %if.end31
  %bits43 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 7, !dbg !4096
  %28 = load i32*, i32** %bits43, align 8, !dbg !4096
  %tobool44 = icmp ne i32* %28, null, !dbg !4098
  br i1 %tobool44, label %lor.lhs.false45, label %if.then48, !dbg !4099

lor.lhs.false45:                                  ; preds = %lor.lhs.false42
  %lens46 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 8, !dbg !4100
  %29 = load i32*, i32** %lens46, align 8, !dbg !4100
  %tobool47 = icmp ne i32* %29, null, !dbg !4102
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !4103

if.then48:                                        ; preds = %lor.lhs.false45, %lor.lhs.false42, %if.end31
  store i32 -12, i32* %res, align 4, !dbg !4104
  br label %out, !dbg !4106

if.end49:                                         ; preds = %lor.lhs.false45
  %30 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4107
  %call50 = call i32 @tm2_read_tree(%struct.TM2Context* %30, i32 0, i32 0, %struct.TM2Huff* %huff), !dbg !4108
  store i32 %call50, i32* %res, align 4, !dbg !4109
  %31 = load i32, i32* %res, align 4, !dbg !4110
  %cmp51 = icmp sge i32 %31, 0, !dbg !4112
  br i1 %cmp51, label %land.lhs.true, label %if.end59, !dbg !4113

land.lhs.true:                                    ; preds = %if.end49
  %32 = load i32, i32* %res, align 4, !dbg !4114
  %max_bits53 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4116
  %33 = load i32, i32* %max_bits53, align 4, !dbg !4116
  %cmp54 = icmp ne i32 %32, %33, !dbg !4117
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !4118

if.then56:                                        ; preds = %land.lhs.true
  %34 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4119
  %avctx57 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %34, i32 0, i32 0, !dbg !4121
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 8, !dbg !4121
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !4119
  %37 = load i32, i32* %res, align 4, !dbg !4122
  %max_bits58 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4123
  %38 = load i32, i32* %max_bits58, align 4, !dbg !4123
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i32 0, i32 0), i32 %37, i32 %38), !dbg !4124
  store i32 -1094995529, i32* %res, align 4, !dbg !4125
  br label %if.end59, !dbg !4126

if.end59:                                         ; preds = %if.then56, %land.lhs.true, %if.end49
  %num60 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 4, !dbg !4127
  %39 = load i32, i32* %num60, align 8, !dbg !4127
  %max_num61 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4129
  %40 = load i32, i32* %max_num61, align 4, !dbg !4129
  %cmp62 = icmp ne i32 %39, %40, !dbg !4130
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !4131

if.then64:                                        ; preds = %if.end59
  %41 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4132
  %avctx65 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %41, i32 0, i32 0, !dbg !4134
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx65, align 8, !dbg !4134
  %43 = bitcast %struct.AVCodecContext* %42 to i8*, !dbg !4132
  %num66 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 4, !dbg !4135
  %44 = load i32, i32* %num66, align 8, !dbg !4135
  %max_num67 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4136
  %45 = load i32, i32* %max_num67, align 4, !dbg !4136
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i32 0, i32 0), i32 %44, i32 %45), !dbg !4137
  store i32 -1094995529, i32* %res, align 4, !dbg !4138
  br label %if.end68, !dbg !4139

if.end68:                                         ; preds = %if.then64, %if.end59
  %46 = load i32, i32* %res, align 4, !dbg !4140
  %cmp69 = icmp sge i32 %46, 0, !dbg !4142
  br i1 %cmp69, label %if.then71, label %if.end99, !dbg !4143

if.then71:                                        ; preds = %if.end68
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4144, metadata !1653), !dbg !4146
  %47 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4147
  %vlc = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %47, i32 0, i32 0, !dbg !4148
  %max_bits72 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4149
  %48 = load i32, i32* %max_bits72, align 4, !dbg !4149
  %max_num73 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4150
  %49 = load i32, i32* %max_num73, align 4, !dbg !4150
  %lens74 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 8, !dbg !4151
  %50 = load i32*, i32** %lens74, align 8, !dbg !4151
  %51 = bitcast i32* %50 to i8*, !dbg !4152
  %bits75 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 7, !dbg !4153
  %52 = load i32*, i32** %bits75, align 8, !dbg !4153
  %53 = bitcast i32* %52 to i8*, !dbg !4154
  %call76 = call i32 @ff_init_vlc_sparse(%struct.VLC* %vlc, i32 %48, i32 %49, i8* %51, i32 4, i32 4, i8* %53, i32 4, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !4155
  store i32 %call76, i32* %res, align 4, !dbg !4156
  %54 = load i32, i32* %res, align 4, !dbg !4157
  %cmp77 = icmp slt i32 %54, 0, !dbg !4159
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !4160

if.then79:                                        ; preds = %if.then71
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4161
  %avctx80 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %55, i32 0, i32 0, !dbg !4162
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx80, align 8, !dbg !4162
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !4161
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i32 0, i32 0)), !dbg !4163
  br label %if.end98, !dbg !4163

if.else:                                          ; preds = %if.then71
  %max_bits81 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 1, !dbg !4164
  %58 = load i32, i32* %max_bits81, align 4, !dbg !4164
  %59 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4166
  %bits82 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %59, i32 0, i32 1, !dbg !4167
  store i32 %58, i32* %bits82, align 8, !dbg !4168
  %max_num83 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 5, !dbg !4169
  %60 = load i32, i32* %max_num83, align 4, !dbg !4169
  %61 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4170
  %length = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %61, i32 0, i32 3, !dbg !4171
  store i32 %60, i32* %length, align 8, !dbg !4172
  %62 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4173
  %length84 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %62, i32 0, i32 3, !dbg !4174
  %63 = load i32, i32* %length84, align 8, !dbg !4174
  %conv85 = sext i32 %63 to i64, !dbg !4173
  %call86 = call i8* @av_malloc_array(i64 %conv85, i64 4), !dbg !4175
  %64 = bitcast i8* %call86 to i32*, !dbg !4175
  %65 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4176
  %recode = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %65, i32 0, i32 2, !dbg !4177
  store i32* %64, i32** %recode, align 8, !dbg !4178
  %66 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4179
  %recode87 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %66, i32 0, i32 2, !dbg !4181
  %67 = load i32*, i32** %recode87, align 8, !dbg !4181
  %tobool88 = icmp ne i32* %67, null, !dbg !4179
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !4182

if.then89:                                        ; preds = %if.else
  store i32 -12, i32* %res, align 4, !dbg !4183
  br label %out, !dbg !4185

if.end90:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !4186
  br label %for.cond, !dbg !4188

for.cond:                                         ; preds = %for.inc, %if.end90
  %68 = load i32, i32* %i, align 4, !dbg !4189
  %69 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4192
  %length91 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %69, i32 0, i32 3, !dbg !4193
  %70 = load i32, i32* %length91, align 8, !dbg !4193
  %cmp92 = icmp slt i32 %68, %70, !dbg !4194
  br i1 %cmp92, label %for.body, label %for.end, !dbg !4195

for.body:                                         ; preds = %for.cond
  %71 = load i32, i32* %i, align 4, !dbg !4196
  %idxprom = sext i32 %71 to i64, !dbg !4197
  %nums94 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 6, !dbg !4198
  %72 = load i32*, i32** %nums94, align 8, !dbg !4198
  %arrayidx = getelementptr inbounds i32, i32* %72, i64 %idxprom, !dbg !4197
  %73 = load i32, i32* %arrayidx, align 4, !dbg !4197
  %74 = load i32, i32* %i, align 4, !dbg !4199
  %idxprom95 = sext i32 %74 to i64, !dbg !4200
  %75 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4200
  %recode96 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %75, i32 0, i32 2, !dbg !4201
  %76 = load i32*, i32** %recode96, align 8, !dbg !4201
  %arrayidx97 = getelementptr inbounds i32, i32* %76, i64 %idxprom95, !dbg !4200
  store i32 %73, i32* %arrayidx97, align 4, !dbg !4202
  br label %for.inc, !dbg !4200

for.inc:                                          ; preds = %for.body
  %77 = load i32, i32* %i, align 4, !dbg !4203
  %inc = add nsw i32 %77, 1, !dbg !4203
  store i32 %inc, i32* %i, align 4, !dbg !4203
  br label %for.cond, !dbg !4205, !llvm.loop !4206

for.end:                                          ; preds = %for.cond
  br label %if.end98

if.end98:                                         ; preds = %for.end, %if.then79
  br label %if.end99, !dbg !4208

if.end99:                                         ; preds = %if.end98, %if.end68
  br label %out, !dbg !4209

out:                                              ; preds = %if.end99, %if.then89, %if.then48
  %nums100 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 6, !dbg !4211
  %78 = load i32*, i32** %nums100, align 8, !dbg !4211
  %79 = bitcast i32* %78 to i8*, !dbg !4212
  call void @av_free(i8* %79), !dbg !4213
  %bits101 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 7, !dbg !4214
  %80 = load i32*, i32** %bits101, align 8, !dbg !4214
  %81 = bitcast i32* %80 to i8*, !dbg !4215
  call void @av_free(i8* %81), !dbg !4216
  %lens102 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %huff, i32 0, i32 8, !dbg !4217
  %82 = load i32*, i32** %lens102, align 8, !dbg !4217
  %83 = bitcast i32* %82 to i8*, !dbg !4218
  call void @av_free(i8* %83), !dbg !4219
  %84 = load i32, i32* %res, align 4, !dbg !4220
  store i32 %84, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

return:                                           ; preds = %out, %if.then23, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !4222
  ret i32 %85, !dbg !4222
}

declare i32 @av_reallocp_array(i8*, i64, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !4223 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4226, metadata !1653), !dbg !4227
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4228
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !4229
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !4229
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4230
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !4231
  %sub = sub nsw i32 %1, %call, !dbg !4232
  ret i32 %sub, !dbg !4233
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @tm2_get_token(%struct.GetBitContext* %gb, %struct.TM2Codes* %code) #4 !dbg !4234 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2307, metadata !1653), !dbg !4237
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2307, metadata !1653), !dbg !4249
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2307, metadata !1653), !dbg !4252
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4254, metadata !1653), !dbg !4255
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4256, metadata !1653), !dbg !4257
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4258, metadata !1653), !dbg !4259
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4260, metadata !1653), !dbg !4261
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4262, metadata !1653), !dbg !4263
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4264, metadata !1653), !dbg !4265
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4266, metadata !1653), !dbg !4267
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4268, metadata !1653), !dbg !4269
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4270, metadata !1653), !dbg !4271
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4272, metadata !1653), !dbg !4273
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !4274, metadata !1653), !dbg !4275
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %code.addr = alloca %struct.TM2Codes*, align 8
  %val = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4276, metadata !1653), !dbg !4277
  store %struct.TM2Codes* %code, %struct.TM2Codes** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Codes** %code.addr, metadata !4278, metadata !1653), !dbg !4279
  call void @llvm.dbg.declare(metadata i32* %val, metadata !4280, metadata !1653), !dbg !4281
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4282
  %1 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4283
  %vlc = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %1, i32 0, i32 0, !dbg !4284
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %vlc, i32 0, i32 1, !dbg !4285
  %2 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4285
  %3 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4286
  %bits = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %3, i32 0, i32 1, !dbg !4287
  %4 = load i32, i32* %bits, align 8, !dbg !4287
  store %struct.GetBitContext* %0, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4288
  store [2 x i16]* %2, [2 x i16]** %table.addr.i, align 8, !dbg !4288
  store i32 %4, i32* %bits.addr.i, align 4, !dbg !4288
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !4288
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4289
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !4290
  %6 = load i32, i32* %index.i, align 8, !dbg !4290
  store i32 %6, i32* %re_index.i, align 4, !dbg !4265
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4291
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 4, !dbg !4292
  %8 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4292
  store i32 %8, i32* %re_size_plus8.i, align 4, !dbg !4269
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4293
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 0, !dbg !4294
  %10 = load i8*, i8** %buffer.i, align 8, !dbg !4294
  %11 = load i32, i32* %re_index.i, align 4, !dbg !4295
  %shr.i = lshr i32 %11, 3, !dbg !4296
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4297
  %add.ptr.i = getelementptr inbounds i8, i8* %10, i64 %idx.ext.i, !dbg !4297
  %12 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4298
  %l.i = bitcast %union.unaligned_32* %12 to i32*, !dbg !4298
  %13 = load i32, i32* %l.i, align 1, !dbg !4298
  store i32 %13, i32* %x.addr.i.i, align 4, !dbg !4299
  %14 = load i32, i32* %x.addr.i.i, align 4, !dbg !4300
  %shl.i.i = shl i32 %14, 8, !dbg !4301
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4302
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !4303
  %shr.i.i = lshr i32 %15, 8, !dbg !4304
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4305
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4306
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4307
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !4308
  %shr3.i.i = lshr i32 %16, 16, !dbg !4309
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4310
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4311
  %17 = load i32, i32* %x.addr.i.i, align 4, !dbg !4312
  %shr6.i.i = lshr i32 %17, 16, !dbg !4313
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4314
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4315
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4316
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4317
  %18 = load i32, i32* %re_index.i, align 4, !dbg !4318
  %and.i = and i32 %18, 7, !dbg !4319
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !4320
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !4321
  %19 = load i32, i32* %re_cache.i, align 4, !dbg !4322
  %20 = load i32, i32* %bits.addr.i, align 4, !dbg !4324
  %conv.i = trunc i32 %20 to i8, !dbg !4324
  %call2.i = call i32 @NEG_USR32(i32 %19, i8 signext %conv.i) #7, !dbg !4325
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !4326
  %21 = load i32, i32* %index1.i, align 4, !dbg !4327
  %idxprom.i = zext i32 %21 to i64, !dbg !4328
  %22 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4328
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %22, i64 %idxprom.i, !dbg !4328
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4328
  %23 = load i16, i16* %arrayidx3.i, align 2, !dbg !4328
  %conv4.i = sext i16 %23 to i32, !dbg !4328
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !4329
  %24 = load i32, i32* %index1.i, align 4, !dbg !4330
  %idxprom5.i = zext i32 %24 to i64, !dbg !4331
  %25 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4331
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %25, i64 %idxprom5.i, !dbg !4331
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !4331
  %26 = load i16, i16* %arrayidx7.i, align 2, !dbg !4331
  %conv8.i = sext i16 %26 to i32, !dbg !4331
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !4332
  %27 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4333
  %cmp.i = icmp sgt i32 %27, 1, !dbg !4334
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !4335

land.lhs.true.i:                                  ; preds = %entry
  %28 = load i32, i32* %n.i, align 4, !dbg !4336
  %cmp10.i = icmp slt i32 %28, 0, !dbg !4338
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !4339

if.then.i:                                        ; preds = %land.lhs.true.i
  %29 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4340
  %30 = load i32, i32* %re_index.i, align 4, !dbg !4342
  %31 = load i32, i32* %bits.addr.i, align 4, !dbg !4343
  %add.i = add i32 %30, %31, !dbg !4344
  %cmp12.i = icmp ugt i32 %29, %add.i, !dbg !4345
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !4346

cond.true.i:                                      ; preds = %if.then.i
  %32 = load i32, i32* %re_index.i, align 4, !dbg !4347
  %33 = load i32, i32* %bits.addr.i, align 4, !dbg !4349
  %add14.i = add i32 %32, %33, !dbg !4350
  br label %cond.end.i, !dbg !4351

cond.false.i:                                     ; preds = %if.then.i
  %34 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4352
  br label %cond.end.i, !dbg !4354

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %34, %cond.false.i ], !dbg !4355
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4356
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4357
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %35, i32 0, i32 0, !dbg !4358
  %36 = load i8*, i8** %buffer15.i, align 8, !dbg !4358
  %37 = load i32, i32* %re_index.i, align 4, !dbg !4359
  %shr16.i = lshr i32 %37, 3, !dbg !4360
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !4361
  %add.ptr18.i = getelementptr inbounds i8, i8* %36, i64 %idx.ext17.i, !dbg !4361
  %38 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !4362
  %l19.i = bitcast %union.unaligned_32* %38 to i32*, !dbg !4362
  %39 = load i32, i32* %l19.i, align 1, !dbg !4362
  store i32 %39, i32* %x.addr.i81.i, align 4, !dbg !4363
  %40 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4364
  %shl.i82.i = shl i32 %40, 8, !dbg !4365
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !4366
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4367
  %shr.i84.i = lshr i32 %41, 8, !dbg !4368
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !4369
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !4370
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !4371
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4372
  %shr3.i88.i = lshr i32 %42, 16, !dbg !4373
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !4374
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !4375
  %43 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4376
  %shr6.i91.i = lshr i32 %43, 16, !dbg !4377
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !4378
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !4379
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !4380
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !4381
  %44 = load i32, i32* %re_index.i, align 4, !dbg !4382
  %and21.i = and i32 %44, 7, !dbg !4383
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !4384
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !4385
  %45 = load i32, i32* %n.i, align 4, !dbg !4386
  %sub.i = sub nsw i32 0, %45, !dbg !4387
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4388
  %46 = load i32, i32* %re_cache.i, align 4, !dbg !4389
  %47 = load i32, i32* %nb_bits.i, align 4, !dbg !4390
  %conv23.i = trunc i32 %47 to i8, !dbg !4390
  %call24.i = call i32 @NEG_USR32(i32 %46, i8 signext %conv23.i) #7, !dbg !4391
  %48 = load i32, i32* %code.i, align 4, !dbg !4393
  %add25.i = add i32 %call24.i, %48, !dbg !4394
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !4395
  %49 = load i32, i32* %index1.i, align 4, !dbg !4396
  %idxprom26.i = zext i32 %49 to i64, !dbg !4397
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4397
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom26.i, !dbg !4397
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !4397
  %51 = load i16, i16* %arrayidx28.i, align 2, !dbg !4397
  %conv29.i = sext i16 %51 to i32, !dbg !4397
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !4398
  %52 = load i32, i32* %index1.i, align 4, !dbg !4399
  %idxprom30.i = zext i32 %52 to i64, !dbg !4400
  %53 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4400
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %53, i64 %idxprom30.i, !dbg !4400
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !4400
  %54 = load i16, i16* %arrayidx32.i, align 2, !dbg !4400
  %conv33.i = sext i16 %54 to i32, !dbg !4400
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !4401
  %55 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4402
  %cmp34.i = icmp sgt i32 %55, 2, !dbg !4403
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !4404

land.lhs.true36.i:                                ; preds = %cond.end.i
  %56 = load i32, i32* %n.i, align 4, !dbg !4405
  %cmp37.i = icmp slt i32 %56, 0, !dbg !4407
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !4408

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %57 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4409
  %58 = load i32, i32* %re_index.i, align 4, !dbg !4411
  %59 = load i32, i32* %nb_bits.i, align 4, !dbg !4412
  %add40.i = add i32 %58, %59, !dbg !4413
  %cmp41.i = icmp ugt i32 %57, %add40.i, !dbg !4414
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !4415

cond.true43.i:                                    ; preds = %if.then39.i
  %60 = load i32, i32* %re_index.i, align 4, !dbg !4416
  %61 = load i32, i32* %nb_bits.i, align 4, !dbg !4418
  %add44.i = add i32 %60, %61, !dbg !4419
  br label %cond.end46.i, !dbg !4420

cond.false45.i:                                   ; preds = %if.then39.i
  %62 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4421
  br label %cond.end46.i, !dbg !4423

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %62, %cond.false45.i ], !dbg !4424
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !4425
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4426
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %63, i32 0, i32 0, !dbg !4427
  %64 = load i8*, i8** %buffer48.i, align 8, !dbg !4427
  %65 = load i32, i32* %re_index.i, align 4, !dbg !4428
  %shr49.i = lshr i32 %65, 3, !dbg !4429
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !4430
  %add.ptr51.i = getelementptr inbounds i8, i8* %64, i64 %idx.ext50.i, !dbg !4430
  %66 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !4431
  %l52.i = bitcast %union.unaligned_32* %66 to i32*, !dbg !4431
  %67 = load i32, i32* %l52.i, align 1, !dbg !4431
  store i32 %67, i32* %x.addr.i96.i, align 4, !dbg !4432
  %68 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4433
  %shl.i97.i = shl i32 %68, 8, !dbg !4434
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !4435
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4436
  %shr.i99.i = lshr i32 %69, 8, !dbg !4437
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !4438
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !4439
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !4440
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4441
  %shr3.i103.i = lshr i32 %70, 16, !dbg !4442
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !4443
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !4444
  %71 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4445
  %shr6.i106.i = lshr i32 %71, 16, !dbg !4446
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !4447
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !4448
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !4449
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !4450
  %72 = load i32, i32* %re_index.i, align 4, !dbg !4451
  %and54.i = and i32 %72, 7, !dbg !4452
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !4453
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !4454
  %73 = load i32, i32* %n.i, align 4, !dbg !4455
  %sub56.i = sub nsw i32 0, %73, !dbg !4456
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4457
  %74 = load i32, i32* %re_cache.i, align 4, !dbg !4458
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !4459
  %conv57.i = trunc i32 %75 to i8, !dbg !4459
  %call58.i = call i32 @NEG_USR32(i32 %74, i8 signext %conv57.i) #7, !dbg !4460
  %76 = load i32, i32* %code.i, align 4, !dbg !4462
  %add59.i = add i32 %call58.i, %76, !dbg !4463
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4464
  %77 = load i32, i32* %index1.i, align 4, !dbg !4465
  %idxprom60.i = zext i32 %77 to i64, !dbg !4466
  %78 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4466
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom60.i, !dbg !4466
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4466
  %79 = load i16, i16* %arrayidx62.i, align 2, !dbg !4466
  %conv63.i = sext i16 %79 to i32, !dbg !4466
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4467
  %80 = load i32, i32* %index1.i, align 4, !dbg !4468
  %idxprom64.i = zext i32 %80 to i64, !dbg !4469
  %81 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4469
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %81, i64 %idxprom64.i, !dbg !4469
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4469
  %82 = load i16, i16* %arrayidx66.i, align 2, !dbg !4469
  %conv67.i = sext i16 %82 to i32, !dbg !4469
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4470
  br label %if.end.i, !dbg !4471

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4472

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %83 = load i32, i32* %n.i, align 4, !dbg !4474
  %84 = load i32, i32* %re_cache.i, align 4, !dbg !4477
  %shl70.i = shl i32 %84, %83, !dbg !4477
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4477
  %85 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4478
  %86 = load i32, i32* %re_index.i, align 4, !dbg !4479
  %87 = load i32, i32* %n.i, align 4, !dbg !4480
  %add71.i = add i32 %86, %87, !dbg !4481
  %cmp72.i = icmp ugt i32 %85, %add71.i, !dbg !4482
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4483

cond.true74.i:                                    ; preds = %if.end68.i
  %88 = load i32, i32* %re_index.i, align 4, !dbg !4484
  %89 = load i32, i32* %n.i, align 4, !dbg !4486
  %add75.i = add i32 %88, %89, !dbg !4487
  br label %get_vlc2.exit, !dbg !4488

cond.false76.i:                                   ; preds = %if.end68.i
  %90 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4489
  br label %get_vlc2.exit, !dbg !4491

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %90, %cond.false76.i ], !dbg !4492
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4494
  %91 = load i32, i32* %re_index.i, align 4, !dbg !4495
  %92 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4496
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %92, i32 0, i32 2, !dbg !4497
  store i32 %91, i32* %index80.i, align 8, !dbg !4498
  %93 = load i32, i32* %code.i, align 4, !dbg !4499
  store i32 %93, i32* %val, align 4, !dbg !4500
  %94 = load i32, i32* %val, align 4, !dbg !4501
  %cmp = icmp slt i32 %94, 0, !dbg !4503
  br i1 %cmp, label %if.then, label %if.end, !dbg !4504

if.then:                                          ; preds = %get_vlc2.exit
  store i32 -1, i32* %retval, align 4, !dbg !4505
  br label %return, !dbg !4505

if.end:                                           ; preds = %get_vlc2.exit
  %95 = load i32, i32* %val, align 4, !dbg !4506
  %idxprom = sext i32 %95 to i64, !dbg !4507
  %96 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4507
  %recode = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %96, i32 0, i32 2, !dbg !4508
  %97 = load i32*, i32** %recode, align 8, !dbg !4508
  %arrayidx = getelementptr inbounds i32, i32* %97, i64 %idxprom, !dbg !4507
  %98 = load i32, i32* %arrayidx, align 4, !dbg !4507
  store i32 %98, i32* %retval, align 4, !dbg !4509
  br label %return, !dbg !4509

return:                                           ; preds = %if.end, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !4510
  ret i32 %99, !dbg !4510
}

; Function Attrs: nounwind uwtable
define internal void @tm2_free_codes(%struct.TM2Codes* %code) #1 !dbg !4511 {
entry:
  %code.addr = alloca %struct.TM2Codes*, align 8
  store %struct.TM2Codes* %code, %struct.TM2Codes** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Codes** %code.addr, metadata !4514, metadata !1653), !dbg !4515
  %0 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4516
  %recode = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %0, i32 0, i32 2, !dbg !4517
  %1 = load i32*, i32** %recode, align 8, !dbg !4517
  %2 = bitcast i32* %1 to i8*, !dbg !4516
  call void @av_free(i8* %2), !dbg !4518
  %3 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4519
  %vlc = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %3, i32 0, i32 0, !dbg !4521
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %vlc, i32 0, i32 1, !dbg !4522
  %4 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4522
  %tobool = icmp ne [2 x i16]* %4, null, !dbg !4519
  br i1 %tobool, label %if.then, label %if.end, !dbg !4523

if.then:                                          ; preds = %entry
  %5 = load %struct.TM2Codes*, %struct.TM2Codes** %code.addr, align 8, !dbg !4524
  %vlc1 = getelementptr inbounds %struct.TM2Codes, %struct.TM2Codes* %5, i32 0, i32 0, !dbg !4525
  call void @ff_free_vlc(%struct.VLC* %vlc1), !dbg !4526
  br label %if.end, !dbg !4526

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4527
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4528 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2307, metadata !1653), !dbg !4531
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4533, metadata !1653), !dbg !4534
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4535, metadata !1653), !dbg !4536
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4537, metadata !1653), !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4539, metadata !1653), !dbg !4540
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4541
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4542
  %1 = load i32, i32* %index, align 8, !dbg !4542
  store i32 %1, i32* %re_index, align 4, !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4543, metadata !1653), !dbg !4544
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4545, metadata !1653), !dbg !4546
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4547
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4548
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4548
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4546
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4549
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !4550
  %5 = load i8*, i8** %buffer, align 8, !dbg !4550
  %6 = load i32, i32* %re_index, align 4, !dbg !4551
  %shr = lshr i32 %6, 3, !dbg !4552
  %idx.ext = zext i32 %shr to i64, !dbg !4553
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4553
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4554
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !4554
  %8 = load i32, i32* %l, align 1, !dbg !4554
  store i32 %8, i32* %x.addr.i, align 4, !dbg !4555
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4556
  %shl.i = shl i32 %9, 8, !dbg !4557
  %and.i = and i32 %shl.i, 65280, !dbg !4558
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !4559
  %shr.i = lshr i32 %10, 8, !dbg !4560
  %and1.i = and i32 %shr.i, 255, !dbg !4561
  %or.i = or i32 %and.i, %and1.i, !dbg !4562
  %shl2.i = shl i32 %or.i, 16, !dbg !4563
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !4564
  %shr3.i = lshr i32 %11, 16, !dbg !4565
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4566
  %and5.i = and i32 %shl4.i, 65280, !dbg !4567
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !4568
  %shr6.i = lshr i32 %12, 16, !dbg !4569
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4570
  %and8.i = and i32 %shr7.i, 255, !dbg !4571
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4572
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4573
  %13 = load i32, i32* %re_index, align 4, !dbg !4574
  %and = and i32 %13, 7, !dbg !4575
  %shl = shl i32 %or10.i, %and, !dbg !4576
  store i32 %shl, i32* %re_cache, align 4, !dbg !4577
  %14 = load i32, i32* %re_cache, align 4, !dbg !4578
  %15 = load i32, i32* %n.addr, align 4, !dbg !4579
  %conv = trunc i32 %15 to i8, !dbg !4579
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !4580
  store i32 %call4, i32* %tmp, align 4, !dbg !4581
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !4582
  %17 = load i32, i32* %re_index, align 4, !dbg !4583
  %18 = load i32, i32* %n.addr, align 4, !dbg !4584
  %add = add i32 %17, %18, !dbg !4585
  %cmp = icmp ugt i32 %16, %add, !dbg !4586
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4587

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !4588
  %20 = load i32, i32* %n.addr, align 4, !dbg !4590
  %add6 = add i32 %19, %20, !dbg !4591
  br label %cond.end, !dbg !4592

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !4593
  br label %cond.end, !dbg !4595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !4596
  store i32 %cond, i32* %re_index, align 4, !dbg !4598
  %22 = load i32, i32* %re_index, align 4, !dbg !4599
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4600
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !4601
  store i32 %22, i32* %index7, align 8, !dbg !4602
  %24 = load i32, i32* %tmp, align 4, !dbg !4603
  ret i32 %24, !dbg !4604
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4605 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4606, metadata !1653), !dbg !4607
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4608, metadata !1653), !dbg !4609
  %0 = load i32, i32* %n.addr, align 4, !dbg !4610
  %tobool = icmp ne i32 %0, 0, !dbg !4610
  br i1 %tobool, label %if.else, label %if.then, !dbg !4612

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4613
  br label %return, !dbg !4613

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !4615
  %cmp = icmp sle i32 %1, 25, !dbg !4617
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !4618

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4619
  %3 = load i32, i32* %n.addr, align 4, !dbg !4621
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !4622
  store i32 %call, i32* %retval, align 4, !dbg !4623
  br label %return, !dbg !4623

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4624, metadata !1653), !dbg !4626
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4627
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !4628
  %5 = load i32, i32* %n.addr, align 4, !dbg !4629
  %sub = sub nsw i32 %5, 16, !dbg !4630
  %shl = shl i32 %call3, %sub, !dbg !4631
  store i32 %shl, i32* %ret, align 4, !dbg !4626
  %6 = load i32, i32* %ret, align 4, !dbg !4632
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4633
  %8 = load i32, i32* %n.addr, align 4, !dbg !4634
  %sub4 = sub nsw i32 %8, 16, !dbg !4635
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !4636
  %or = or i32 %6, %call5, !dbg !4637
  store i32 %or, i32* %retval, align 4, !dbg !4638
  br label %return, !dbg !4638

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4639
  ret i32 %9, !dbg !4639
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !4640 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !4644, metadata !1653), !dbg !4645
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !4646, metadata !1653), !dbg !4647
  %0 = load i32, i32* %a.addr, align 4, !dbg !4648
  %1 = load i8, i8* %s.addr, align 1, !dbg !4649
  %conv = sext i8 %1 to i32, !dbg !4649
  %sub = sub nsw i32 0, %conv, !dbg !4650
  %conv1 = trunc i32 %sub to i8, !dbg !4651
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !4648, !srcloc !4652
  store i32 %2, i32* %a.addr, align 4, !dbg !4648
  %3 = load i32, i32* %a.addr, align 4, !dbg !4653
  ret i32 %3, !dbg !4654
}

; Function Attrs: nounwind uwtable
define internal i32 @tm2_read_tree(%struct.TM2Context* %ctx, i32 %prefix, i32 %length, %struct.TM2Huff* %huff) #1 !dbg !4655 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %prefix.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %huff.addr = alloca %struct.TM2Huff*, align 8
  %ret = alloca i32, align 4
  %ret2 = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !4659, metadata !1653), !dbg !4660
  store i32 %prefix, i32* %prefix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix.addr, metadata !4661, metadata !1653), !dbg !4662
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4663, metadata !1653), !dbg !4664
  store %struct.TM2Huff* %huff, %struct.TM2Huff** %huff.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Huff** %huff.addr, metadata !4665, metadata !1653), !dbg !4666
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4667, metadata !1653), !dbg !4668
  call void @llvm.dbg.declare(metadata i32* %ret2, metadata !4669, metadata !1653), !dbg !4670
  %0 = load i32, i32* %length.addr, align 4, !dbg !4671
  %1 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4673
  %max_bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %1, i32 0, i32 1, !dbg !4674
  %2 = load i32, i32* %max_bits, align 4, !dbg !4674
  %cmp = icmp sgt i32 %0, %2, !dbg !4675
  br i1 %cmp, label %if.then, label %if.end, !dbg !4676

if.then:                                          ; preds = %entry
  %3 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4677
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %3, i32 0, i32 0, !dbg !4679
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4679
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !4677
  %6 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4680
  %max_bits1 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %6, i32 0, i32 1, !dbg !4681
  %7 = load i32, i32* %max_bits1, align 4, !dbg !4681
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i32 0, i32 0), i32 %7), !dbg !4682
  store i32 -1094995529, i32* %retval, align 4, !dbg !4683
  br label %return, !dbg !4683

if.end:                                           ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4684
  %gb = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 2, !dbg !4686
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !4687
  %tobool = icmp ne i32 %call, 0, !dbg !4687
  br i1 %tobool, label %if.else, label %if.then2, !dbg !4688

if.then2:                                         ; preds = %if.end
  %9 = load i32, i32* %length.addr, align 4, !dbg !4689
  %cmp3 = icmp eq i32 %9, 0, !dbg !4692
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4693

if.then4:                                         ; preds = %if.then2
  store i32 1, i32* %length.addr, align 4, !dbg !4694
  br label %if.end5, !dbg !4696

if.end5:                                          ; preds = %if.then4, %if.then2
  %10 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4697
  %num = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %10, i32 0, i32 4, !dbg !4699
  %11 = load i32, i32* %num, align 8, !dbg !4699
  %12 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4700
  %max_num = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %12, i32 0, i32 5, !dbg !4701
  %13 = load i32, i32* %max_num, align 4, !dbg !4701
  %cmp6 = icmp sge i32 %11, %13, !dbg !4702
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !4703

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4704
  %avctx8 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %14, i32 0, i32 0, !dbg !4706
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx8, align 8, !dbg !4706
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !4704
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0)), !dbg !4707
  store i32 -1094995529, i32* %retval, align 4, !dbg !4708
  br label %return, !dbg !4708

if.end9:                                          ; preds = %if.end5
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4709
  %gb10 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 2, !dbg !4710
  %18 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4711
  %val_bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %18, i32 0, i32 0, !dbg !4712
  %19 = load i32, i32* %val_bits, align 8, !dbg !4712
  %call11 = call i32 @get_bits_long(%struct.GetBitContext* %gb10, i32 %19), !dbg !4713
  %20 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4714
  %num12 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %20, i32 0, i32 4, !dbg !4715
  %21 = load i32, i32* %num12, align 8, !dbg !4715
  %idxprom = sext i32 %21 to i64, !dbg !4716
  %22 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4716
  %nums = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %22, i32 0, i32 6, !dbg !4717
  %23 = load i32*, i32** %nums, align 8, !dbg !4717
  %arrayidx = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !4716
  store i32 %call11, i32* %arrayidx, align 4, !dbg !4718
  %24 = load i32, i32* %prefix.addr, align 4, !dbg !4719
  %25 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4720
  %num13 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %25, i32 0, i32 4, !dbg !4721
  %26 = load i32, i32* %num13, align 8, !dbg !4721
  %idxprom14 = sext i32 %26 to i64, !dbg !4722
  %27 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4722
  %bits = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %27, i32 0, i32 7, !dbg !4723
  %28 = load i32*, i32** %bits, align 8, !dbg !4723
  %arrayidx15 = getelementptr inbounds i32, i32* %28, i64 %idxprom14, !dbg !4722
  store i32 %24, i32* %arrayidx15, align 4, !dbg !4724
  %29 = load i32, i32* %length.addr, align 4, !dbg !4725
  %30 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4726
  %num16 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %30, i32 0, i32 4, !dbg !4727
  %31 = load i32, i32* %num16, align 8, !dbg !4727
  %idxprom17 = sext i32 %31 to i64, !dbg !4728
  %32 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4728
  %lens = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %32, i32 0, i32 8, !dbg !4729
  %33 = load i32*, i32** %lens, align 8, !dbg !4729
  %arrayidx18 = getelementptr inbounds i32, i32* %33, i64 %idxprom17, !dbg !4728
  store i32 %29, i32* %arrayidx18, align 4, !dbg !4730
  %34 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4731
  %num19 = getelementptr inbounds %struct.TM2Huff, %struct.TM2Huff* %34, i32 0, i32 4, !dbg !4732
  %35 = load i32, i32* %num19, align 8, !dbg !4733
  %inc = add nsw i32 %35, 1, !dbg !4733
  store i32 %inc, i32* %num19, align 8, !dbg !4733
  %36 = load i32, i32* %length.addr, align 4, !dbg !4734
  store i32 %36, i32* %retval, align 4, !dbg !4735
  br label %return, !dbg !4735

if.else:                                          ; preds = %if.end
  %37 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4736
  %38 = load i32, i32* %prefix.addr, align 4, !dbg !4739
  %shl = shl i32 %38, 1, !dbg !4740
  %39 = load i32, i32* %length.addr, align 4, !dbg !4741
  %add = add nsw i32 %39, 1, !dbg !4742
  %40 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4743
  %call20 = call i32 @tm2_read_tree(%struct.TM2Context* %37, i32 %shl, i32 %add, %struct.TM2Huff* %40), !dbg !4744
  store i32 %call20, i32* %ret2, align 4, !dbg !4745
  %cmp21 = icmp slt i32 %call20, 0, !dbg !4746
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4747

if.then22:                                        ; preds = %if.else
  %41 = load i32, i32* %ret2, align 4, !dbg !4748
  store i32 %41, i32* %retval, align 4, !dbg !4749
  br label %return, !dbg !4749

if.end23:                                         ; preds = %if.else
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4750
  %43 = load i32, i32* %prefix.addr, align 4, !dbg !4752
  %shl24 = shl i32 %43, 1, !dbg !4753
  %or = or i32 %shl24, 1, !dbg !4754
  %44 = load i32, i32* %length.addr, align 4, !dbg !4755
  %add25 = add nsw i32 %44, 1, !dbg !4756
  %45 = load %struct.TM2Huff*, %struct.TM2Huff** %huff.addr, align 8, !dbg !4757
  %call26 = call i32 @tm2_read_tree(%struct.TM2Context* %42, i32 %or, i32 %add25, %struct.TM2Huff* %45), !dbg !4758
  store i32 %call26, i32* %ret, align 4, !dbg !4759
  %cmp27 = icmp slt i32 %call26, 0, !dbg !4760
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !4761

if.then28:                                        ; preds = %if.end23
  %46 = load i32, i32* %ret, align 4, !dbg !4762
  store i32 %46, i32* %retval, align 4, !dbg !4763
  br label %return, !dbg !4763

if.end29:                                         ; preds = %if.end23
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  %47 = load i32, i32* %ret, align 4, !dbg !4764
  %48 = load i32, i32* %ret2, align 4, !dbg !4765
  %cmp31 = icmp sgt i32 %47, %48, !dbg !4766
  br i1 %cmp31, label %cond.true, label %cond.false, !dbg !4767

cond.true:                                        ; preds = %if.end30
  %49 = load i32, i32* %ret, align 4, !dbg !4768
  br label %cond.end, !dbg !4770

cond.false:                                       ; preds = %if.end30
  %50 = load i32, i32* %ret2, align 4, !dbg !4771
  br label %cond.end, !dbg !4773

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %49, %cond.true ], [ %50, %cond.false ], !dbg !4774
  store i32 %cond, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

return:                                           ; preds = %cond.end, %if.then28, %if.then22, %if.end9, %if.then7, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !4777
  ret i32 %51, !dbg !4777
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare void @av_free(i8*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !4778 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4781, metadata !1653), !dbg !4782
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4783, metadata !1653), !dbg !4784
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4785
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4786
  %1 = load i32, i32* %index1, align 8, !dbg !4786
  store i32 %1, i32* %index, align 4, !dbg !4784
  call void @llvm.dbg.declare(metadata i8* %result, metadata !4787, metadata !1653), !dbg !4788
  %2 = load i32, i32* %index, align 4, !dbg !4789
  %shr = lshr i32 %2, 3, !dbg !4790
  %idxprom = zext i32 %shr to i64, !dbg !4791
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4791
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !4792
  %4 = load i8*, i8** %buffer, align 8, !dbg !4792
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4791
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4791
  store i8 %5, i8* %result, align 1, !dbg !4788
  %6 = load i32, i32* %index, align 4, !dbg !4793
  %and = and i32 %6, 7, !dbg !4794
  %7 = load i8, i8* %result, align 1, !dbg !4795
  %conv = zext i8 %7 to i32, !dbg !4795
  %shl = shl i32 %conv, %and, !dbg !4795
  %conv2 = trunc i32 %shl to i8, !dbg !4795
  store i8 %conv2, i8* %result, align 1, !dbg !4795
  %8 = load i8, i8* %result, align 1, !dbg !4796
  %conv3 = zext i8 %8 to i32, !dbg !4796
  %shr4 = ashr i32 %conv3, 7, !dbg !4796
  %conv5 = trunc i32 %shr4 to i8, !dbg !4796
  store i8 %conv5, i8* %result, align 1, !dbg !4796
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4797
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !4799
  %10 = load i32, i32* %index6, align 8, !dbg !4799
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4800
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !4801
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4801
  %cmp = icmp slt i32 %10, %12, !dbg !4802
  br i1 %cmp, label %if.then, label %if.end, !dbg !4803

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !4804
  %inc = add i32 %13, 1, !dbg !4804
  store i32 %inc, i32* %index, align 4, !dbg !4804
  br label %if.end, !dbg !4805

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !4806
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4807
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4808
  store i32 %14, i32* %index8, align 8, !dbg !4809
  %16 = load i8, i8* %result, align 1, !dbg !4810
  %conv9 = zext i8 %16 to i32, !dbg !4810
  ret i32 %conv9, !dbg !4811
}

declare void @ff_free_vlc(%struct.VLC*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @GET_TOK(%struct.TM2Context* %ctx, i32 %type) #4 !dbg !4812 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %type.addr = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !4813, metadata !1653), !dbg !4814
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4815, metadata !1653), !dbg !4816
  %0 = load i32, i32* %type.addr, align 4, !dbg !4817
  %idxprom = sext i32 %0 to i64, !dbg !4819
  %1 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4819
  %tok_ptrs = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %1, i32 0, i32 9, !dbg !4820
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs, i64 0, i64 %idxprom, !dbg !4819
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4819
  %3 = load i32, i32* %type.addr, align 4, !dbg !4821
  %idxprom1 = sext i32 %3 to i64, !dbg !4822
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4822
  %tok_lens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 8, !dbg !4823
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens, i64 0, i64 %idxprom1, !dbg !4822
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !4822
  %cmp = icmp sge i32 %2, %5, !dbg !4824
  br i1 %cmp, label %if.then, label %if.end, !dbg !4825

if.then:                                          ; preds = %entry
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4826
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 0, !dbg !4828
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4828
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !4826
  %9 = load i32, i32* %type.addr, align 4, !dbg !4829
  %10 = load i32, i32* %type.addr, align 4, !dbg !4830
  %idxprom3 = sext i32 %10 to i64, !dbg !4831
  %11 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4831
  %tok_ptrs4 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %11, i32 0, i32 9, !dbg !4832
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs4, i64 0, i64 %idxprom3, !dbg !4831
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !4831
  %13 = load i32, i32* %type.addr, align 4, !dbg !4833
  %idxprom6 = sext i32 %13 to i64, !dbg !4834
  %14 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4834
  %tok_lens7 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %14, i32 0, i32 8, !dbg !4835
  %arrayidx8 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_lens7, i64 0, i64 %idxprom6, !dbg !4834
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !4834
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.24, i32 0, i32 0), i32 %9, i32 %12, i32 %15), !dbg !4836
  %16 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4837
  %error = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %16, i32 0, i32 3, !dbg !4838
  store i32 1, i32* %error, align 8, !dbg !4839
  store i32 0, i32* %retval, align 4, !dbg !4840
  br label %return, !dbg !4840

if.end:                                           ; preds = %entry
  %17 = load i32, i32* %type.addr, align 4, !dbg !4841
  %cmp9 = icmp sle i32 %17, 5, !dbg !4843
  br i1 %cmp9, label %if.then10, label %if.end42, !dbg !4844

if.then10:                                        ; preds = %if.end
  %18 = load i32, i32* %type.addr, align 4, !dbg !4845
  %idxprom11 = sext i32 %18 to i64, !dbg !4848
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4848
  %tok_ptrs12 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 9, !dbg !4849
  %arrayidx13 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs12, i64 0, i64 %idxprom11, !dbg !4848
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !4848
  %idxprom14 = sext i32 %20 to i64, !dbg !4850
  %21 = load i32, i32* %type.addr, align 4, !dbg !4851
  %idxprom15 = sext i32 %21 to i64, !dbg !4850
  %22 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4850
  %tokens = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %22, i32 0, i32 7, !dbg !4852
  %arrayidx16 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens, i64 0, i64 %idxprom15, !dbg !4850
  %23 = load i32*, i32** %arrayidx16, align 8, !dbg !4850
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom14, !dbg !4850
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !4850
  %cmp18 = icmp sge i32 %24, 64, !dbg !4853
  br i1 %cmp18, label %if.then19, label %if.end29, !dbg !4854

if.then19:                                        ; preds = %if.then10
  %25 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4855
  %avctx20 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %25, i32 0, i32 0, !dbg !4857
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 8, !dbg !4857
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !4855
  %28 = load i32, i32* %type.addr, align 4, !dbg !4858
  %idxprom21 = sext i32 %28 to i64, !dbg !4859
  %29 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4859
  %tok_ptrs22 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %29, i32 0, i32 9, !dbg !4860
  %arrayidx23 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs22, i64 0, i64 %idxprom21, !dbg !4859
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !4859
  %idxprom24 = sext i32 %30 to i64, !dbg !4861
  %31 = load i32, i32* %type.addr, align 4, !dbg !4862
  %idxprom25 = sext i32 %31 to i64, !dbg !4861
  %32 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4861
  %tokens26 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %32, i32 0, i32 7, !dbg !4863
  %arrayidx27 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens26, i64 0, i64 %idxprom25, !dbg !4861
  %33 = load i32*, i32** %arrayidx27, align 8, !dbg !4861
  %arrayidx28 = getelementptr inbounds i32, i32* %33, i64 %idxprom24, !dbg !4861
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !4861
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0), i32 %34), !dbg !4864
  store i32 0, i32* %retval, align 4, !dbg !4865
  br label %return, !dbg !4865

if.end29:                                         ; preds = %if.then10
  %35 = load i32, i32* %type.addr, align 4, !dbg !4866
  %idxprom30 = sext i32 %35 to i64, !dbg !4867
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4867
  %tok_ptrs31 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 9, !dbg !4868
  %arrayidx32 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs31, i64 0, i64 %idxprom30, !dbg !4867
  %37 = load i32, i32* %arrayidx32, align 4, !dbg !4869
  %inc = add nsw i32 %37, 1, !dbg !4869
  store i32 %inc, i32* %arrayidx32, align 4, !dbg !4869
  %idxprom33 = sext i32 %37 to i64, !dbg !4870
  %38 = load i32, i32* %type.addr, align 4, !dbg !4871
  %idxprom34 = sext i32 %38 to i64, !dbg !4870
  %39 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4870
  %tokens35 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %39, i32 0, i32 7, !dbg !4872
  %arrayidx36 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens35, i64 0, i64 %idxprom34, !dbg !4870
  %40 = load i32*, i32** %arrayidx36, align 8, !dbg !4870
  %arrayidx37 = getelementptr inbounds i32, i32* %40, i64 %idxprom33, !dbg !4870
  %41 = load i32, i32* %arrayidx37, align 4, !dbg !4870
  %idxprom38 = sext i32 %41 to i64, !dbg !4873
  %42 = load i32, i32* %type.addr, align 4, !dbg !4874
  %idxprom39 = sext i32 %42 to i64, !dbg !4873
  %43 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4873
  %deltas = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %43, i32 0, i32 10, !dbg !4875
  %arrayidx40 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %deltas, i64 0, i64 %idxprom39, !dbg !4873
  %arrayidx41 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx40, i64 0, i64 %idxprom38, !dbg !4873
  %44 = load i32, i32* %arrayidx41, align 4, !dbg !4873
  store i32 %44, i32* %retval, align 4, !dbg !4876
  br label %return, !dbg !4876

if.end42:                                         ; preds = %if.end
  %45 = load i32, i32* %type.addr, align 4, !dbg !4877
  %idxprom43 = sext i32 %45 to i64, !dbg !4878
  %46 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4878
  %tok_ptrs44 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %46, i32 0, i32 9, !dbg !4879
  %arrayidx45 = getelementptr inbounds [7 x i32], [7 x i32]* %tok_ptrs44, i64 0, i64 %idxprom43, !dbg !4878
  %47 = load i32, i32* %arrayidx45, align 4, !dbg !4880
  %inc46 = add nsw i32 %47, 1, !dbg !4880
  store i32 %inc46, i32* %arrayidx45, align 4, !dbg !4880
  %idxprom47 = sext i32 %47 to i64, !dbg !4881
  %48 = load i32, i32* %type.addr, align 4, !dbg !4882
  %idxprom48 = sext i32 %48 to i64, !dbg !4881
  %49 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4881
  %tokens49 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %49, i32 0, i32 7, !dbg !4883
  %arrayidx50 = getelementptr inbounds [7 x i32*], [7 x i32*]* %tokens49, i64 0, i64 %idxprom48, !dbg !4881
  %50 = load i32*, i32** %arrayidx50, align 8, !dbg !4881
  %arrayidx51 = getelementptr inbounds i32, i32* %50, i64 %idxprom47, !dbg !4881
  %51 = load i32, i32* %arrayidx51, align 4, !dbg !4881
  store i32 %51, i32* %retval, align 4, !dbg !4884
  br label %return, !dbg !4884

return:                                           ; preds = %if.end42, %if.end29, %if.then19, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !4885
  ret i32 %52, !dbg !4885
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_hi_res_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !4886 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %deltas = alloca [16 x i32], align 16
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !4889, metadata !1653), !dbg !4890
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !4891, metadata !1653), !dbg !4892
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !4893, metadata !1653), !dbg !4894
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !4895, metadata !1653), !dbg !4896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4897, metadata !1653), !dbg !4898
  call void @llvm.dbg.declare(metadata [16 x i32]* %deltas, metadata !4899, metadata !1653), !dbg !4903
  call void @llvm.dbg.declare(metadata i32** %last, metadata !4904, metadata !1653), !dbg !4905
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !4906, metadata !1653), !dbg !4907
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !4908, metadata !1653), !dbg !4909
  call void @llvm.dbg.declare(metadata i32** %U, metadata !4910, metadata !1653), !dbg !4911
  call void @llvm.dbg.declare(metadata i32** %V, metadata !4912, metadata !1653), !dbg !4913
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !4914, metadata !1653), !dbg !4915
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !4916, metadata !1653), !dbg !4917
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !4918, metadata !1653), !dbg !4919
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4920
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !4921
  %1 = load i32, i32* %y_stride, align 8, !dbg !4921
  store i32 %1, i32* %Ystride, align 4, !dbg !4922
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4923
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !4924
  %3 = load i32, i32* %uv_stride, align 4, !dbg !4924
  store i32 %3, i32* %Vstride, align 4, !dbg !4925
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4926
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !4927
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !4927
  store i32 %5, i32* %Ustride, align 4, !dbg !4928
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4929
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !4930
  %7 = load i32, i32* %cur, align 8, !dbg !4930
  %tobool = icmp ne i32 %7, 0, !dbg !4929
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4929

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4931
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !4933
  %9 = load i32*, i32** %Y2, align 8, !dbg !4933
  br label %cond.end, !dbg !4934

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4935
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !4937
  %11 = load i32*, i32** %Y1, align 8, !dbg !4937
  br label %cond.end, !dbg !4938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !4939
  %12 = load i32, i32* %by.addr, align 4, !dbg !4941
  %mul = mul nsw i32 %12, 4, !dbg !4942
  %13 = load i32, i32* %Ystride, align 4, !dbg !4943
  %mul2 = mul nsw i32 %mul, %13, !dbg !4944
  %idx.ext = sext i32 %mul2 to i64, !dbg !4945
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !4945
  %14 = load i32, i32* %bx.addr, align 4, !dbg !4946
  %mul3 = mul nsw i32 %14, 4, !dbg !4947
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !4948
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !4948
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !4949
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4950
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !4951
  %16 = load i32, i32* %cur6, align 8, !dbg !4951
  %tobool7 = icmp ne i32 %16, 0, !dbg !4950
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !4950

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4952
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !4954
  %18 = load i32*, i32** %V2, align 8, !dbg !4954
  br label %cond.end10, !dbg !4955

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4956
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !4958
  %20 = load i32*, i32** %V1, align 8, !dbg !4958
  br label %cond.end10, !dbg !4959

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !4960
  %21 = load i32, i32* %by.addr, align 4, !dbg !4962
  %mul12 = mul nsw i32 %21, 2, !dbg !4963
  %22 = load i32, i32* %Vstride, align 4, !dbg !4964
  %mul13 = mul nsw i32 %mul12, %22, !dbg !4965
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !4966
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !4966
  %23 = load i32, i32* %bx.addr, align 4, !dbg !4967
  %mul16 = mul nsw i32 %23, 2, !dbg !4968
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !4969
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !4969
  store i32* %add.ptr18, i32** %V, align 8, !dbg !4970
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4971
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !4972
  %25 = load i32, i32* %cur19, align 8, !dbg !4972
  %tobool20 = icmp ne i32 %25, 0, !dbg !4971
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !4971

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4973
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !4975
  %27 = load i32*, i32** %U2, align 8, !dbg !4975
  br label %cond.end23, !dbg !4976

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4977
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !4979
  %29 = load i32*, i32** %U1, align 8, !dbg !4979
  br label %cond.end23, !dbg !4980

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !4981
  %30 = load i32, i32* %by.addr, align 4, !dbg !4983
  %mul25 = mul nsw i32 %30, 2, !dbg !4984
  %31 = load i32, i32* %Ustride, align 4, !dbg !4985
  %mul26 = mul nsw i32 %mul25, %31, !dbg !4986
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !4987
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !4987
  %32 = load i32, i32* %bx.addr, align 4, !dbg !4988
  %mul29 = mul nsw i32 %32, 2, !dbg !4989
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !4990
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !4990
  store i32* %add.ptr31, i32** %U, align 8, !dbg !4991
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4992
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !4993
  %34 = load i32*, i32** %last32, align 8, !dbg !4993
  %35 = load i32, i32* %bx.addr, align 4, !dbg !4994
  %mul33 = mul nsw i32 %35, 4, !dbg !4995
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !4996
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !4996
  store i32* %add.ptr35, i32** %last, align 8, !dbg !4997
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !4998
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !4999
  %37 = load i32*, i32** %clast36, align 8, !dbg !4999
  %38 = load i32, i32* %bx.addr, align 4, !dbg !5000
  %mul37 = mul nsw i32 %38, 4, !dbg !5001
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5002
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !5002
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !5003
  store i32 0, i32* %i, align 4, !dbg !5004
  br label %for.cond, !dbg !5006

for.cond:                                         ; preds = %for.inc, %cond.end23
  %39 = load i32, i32* %i, align 4, !dbg !5007
  %cmp = icmp slt i32 %39, 4, !dbg !5010
  br i1 %cmp, label %for.body, label %for.end, !dbg !5011

for.body:                                         ; preds = %for.cond
  %40 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5012
  %call = call i32 @GET_TOK(%struct.TM2Context* %40, i32 0), !dbg !5014
  %41 = load i32, i32* %i, align 4, !dbg !5015
  %idxprom = sext i32 %41 to i64, !dbg !5016
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom, !dbg !5016
  store i32 %call, i32* %arrayidx, align 4, !dbg !5017
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5018
  %call40 = call i32 @GET_TOK(%struct.TM2Context* %42, i32 0), !dbg !5019
  %43 = load i32, i32* %i, align 4, !dbg !5020
  %add = add nsw i32 %43, 4, !dbg !5021
  %idxprom41 = sext i32 %add to i64, !dbg !5022
  %arrayidx42 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom41, !dbg !5022
  store i32 %call40, i32* %arrayidx42, align 4, !dbg !5023
  br label %for.inc, !dbg !5024

for.inc:                                          ; preds = %for.body
  %44 = load i32, i32* %i, align 4, !dbg !5025
  %inc = add nsw i32 %44, 1, !dbg !5025
  store i32 %inc, i32* %i, align 4, !dbg !5025
  br label %for.cond, !dbg !5027, !llvm.loop !5028

for.end:                                          ; preds = %for.cond
  %45 = load i32*, i32** %U, align 8, !dbg !5030
  %46 = load i32, i32* %Ustride, align 4, !dbg !5031
  %47 = load i32*, i32** %clast, align 8, !dbg !5032
  %48 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5033
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %48, i32 0, i32 12, !dbg !5034
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i32 0, i32 0, !dbg !5033
  %arraydecay43 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5035
  call void @tm2_high_chroma(i32* %45, i32 %46, i32* %47, i32* %arraydecay, i32* %arraydecay43), !dbg !5036
  %49 = load i32*, i32** %V, align 8, !dbg !5037
  %50 = load i32, i32* %Vstride, align 4, !dbg !5038
  %51 = load i32*, i32** %clast, align 8, !dbg !5039
  %add.ptr44 = getelementptr inbounds i32, i32* %51, i64 2, !dbg !5040
  %52 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5041
  %CD45 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %52, i32 0, i32 12, !dbg !5042
  %arraydecay46 = getelementptr inbounds [4 x i32], [4 x i32]* %CD45, i32 0, i32 0, !dbg !5041
  %add.ptr47 = getelementptr inbounds i32, i32* %arraydecay46, i64 2, !dbg !5043
  %arraydecay48 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5044
  %add.ptr49 = getelementptr inbounds i32, i32* %arraydecay48, i64 4, !dbg !5045
  call void @tm2_high_chroma(i32* %49, i32 %50, i32* %add.ptr44, i32* %add.ptr47, i32* %add.ptr49), !dbg !5046
  store i32 0, i32* %i, align 4, !dbg !5047
  br label %for.cond50, !dbg !5049

for.cond50:                                       ; preds = %for.inc56, %for.end
  %53 = load i32, i32* %i, align 4, !dbg !5050
  %cmp51 = icmp slt i32 %53, 16, !dbg !5053
  br i1 %cmp51, label %for.body52, label %for.end58, !dbg !5054

for.body52:                                       ; preds = %for.cond50
  %54 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5055
  %call53 = call i32 @GET_TOK(%struct.TM2Context* %54, i32 2), !dbg !5056
  %55 = load i32, i32* %i, align 4, !dbg !5057
  %idxprom54 = sext i32 %55 to i64, !dbg !5058
  %arrayidx55 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom54, !dbg !5058
  store i32 %call53, i32* %arrayidx55, align 4, !dbg !5059
  br label %for.inc56, !dbg !5058

for.inc56:                                        ; preds = %for.body52
  %56 = load i32, i32* %i, align 4, !dbg !5060
  %inc57 = add nsw i32 %56, 1, !dbg !5060
  store i32 %inc57, i32* %i, align 4, !dbg !5060
  br label %for.cond50, !dbg !5062, !llvm.loop !5063

for.end58:                                        ; preds = %for.cond50
  %57 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5065
  %58 = load i32*, i32** %Y, align 8, !dbg !5066
  %59 = load i32, i32* %Ystride, align 4, !dbg !5067
  %arraydecay59 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5068
  %60 = load i32*, i32** %last, align 8, !dbg !5069
  call void @tm2_apply_deltas(%struct.TM2Context* %57, i32* %58, i32 %59, i32* %arraydecay59, i32* %60), !dbg !5070
  ret void, !dbg !5071
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_med_res_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !5072 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %deltas = alloca [16 x i32], align 16
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !5073, metadata !1653), !dbg !5074
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !5075, metadata !1653), !dbg !5076
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !5077, metadata !1653), !dbg !5078
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !5079, metadata !1653), !dbg !5080
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5081, metadata !1653), !dbg !5082
  call void @llvm.dbg.declare(metadata [16 x i32]* %deltas, metadata !5083, metadata !1653), !dbg !5084
  call void @llvm.dbg.declare(metadata i32** %last, metadata !5085, metadata !1653), !dbg !5086
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !5087, metadata !1653), !dbg !5088
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !5089, metadata !1653), !dbg !5090
  call void @llvm.dbg.declare(metadata i32** %U, metadata !5091, metadata !1653), !dbg !5092
  call void @llvm.dbg.declare(metadata i32** %V, metadata !5093, metadata !1653), !dbg !5094
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !5095, metadata !1653), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !5097, metadata !1653), !dbg !5098
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !5099, metadata !1653), !dbg !5100
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5101
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !5102
  %1 = load i32, i32* %y_stride, align 8, !dbg !5102
  store i32 %1, i32* %Ystride, align 4, !dbg !5103
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5104
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !5105
  %3 = load i32, i32* %uv_stride, align 4, !dbg !5105
  store i32 %3, i32* %Vstride, align 4, !dbg !5106
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5107
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !5108
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !5108
  store i32 %5, i32* %Ustride, align 4, !dbg !5109
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5110
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !5111
  %7 = load i32, i32* %cur, align 8, !dbg !5111
  %tobool = icmp ne i32 %7, 0, !dbg !5110
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5110

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5112
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !5114
  %9 = load i32*, i32** %Y2, align 8, !dbg !5114
  br label %cond.end, !dbg !5115

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5116
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !5118
  %11 = load i32*, i32** %Y1, align 8, !dbg !5118
  br label %cond.end, !dbg !5119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !5120
  %12 = load i32, i32* %by.addr, align 4, !dbg !5122
  %mul = mul nsw i32 %12, 4, !dbg !5123
  %13 = load i32, i32* %Ystride, align 4, !dbg !5124
  %mul2 = mul nsw i32 %mul, %13, !dbg !5125
  %idx.ext = sext i32 %mul2 to i64, !dbg !5126
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !5126
  %14 = load i32, i32* %bx.addr, align 4, !dbg !5127
  %mul3 = mul nsw i32 %14, 4, !dbg !5128
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5129
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !5129
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !5130
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5131
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !5132
  %16 = load i32, i32* %cur6, align 8, !dbg !5132
  %tobool7 = icmp ne i32 %16, 0, !dbg !5131
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !5131

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5133
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !5135
  %18 = load i32*, i32** %V2, align 8, !dbg !5135
  br label %cond.end10, !dbg !5136

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5137
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !5139
  %20 = load i32*, i32** %V1, align 8, !dbg !5139
  br label %cond.end10, !dbg !5140

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !5141
  %21 = load i32, i32* %by.addr, align 4, !dbg !5143
  %mul12 = mul nsw i32 %21, 2, !dbg !5144
  %22 = load i32, i32* %Vstride, align 4, !dbg !5145
  %mul13 = mul nsw i32 %mul12, %22, !dbg !5146
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5147
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !5147
  %23 = load i32, i32* %bx.addr, align 4, !dbg !5148
  %mul16 = mul nsw i32 %23, 2, !dbg !5149
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !5150
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !5150
  store i32* %add.ptr18, i32** %V, align 8, !dbg !5151
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5152
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !5153
  %25 = load i32, i32* %cur19, align 8, !dbg !5153
  %tobool20 = icmp ne i32 %25, 0, !dbg !5152
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5152

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5154
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !5156
  %27 = load i32*, i32** %U2, align 8, !dbg !5156
  br label %cond.end23, !dbg !5157

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5158
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !5160
  %29 = load i32*, i32** %U1, align 8, !dbg !5160
  br label %cond.end23, !dbg !5161

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !5162
  %30 = load i32, i32* %by.addr, align 4, !dbg !5164
  %mul25 = mul nsw i32 %30, 2, !dbg !5165
  %31 = load i32, i32* %Ustride, align 4, !dbg !5166
  %mul26 = mul nsw i32 %mul25, %31, !dbg !5167
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !5168
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !5168
  %32 = load i32, i32* %bx.addr, align 4, !dbg !5169
  %mul29 = mul nsw i32 %32, 2, !dbg !5170
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !5171
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !5171
  store i32* %add.ptr31, i32** %U, align 8, !dbg !5172
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5173
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !5174
  %34 = load i32*, i32** %last32, align 8, !dbg !5174
  %35 = load i32, i32* %bx.addr, align 4, !dbg !5175
  %mul33 = mul nsw i32 %35, 4, !dbg !5176
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !5177
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !5177
  store i32* %add.ptr35, i32** %last, align 8, !dbg !5178
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5179
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !5180
  %37 = load i32*, i32** %clast36, align 8, !dbg !5180
  %38 = load i32, i32* %bx.addr, align 4, !dbg !5181
  %mul37 = mul nsw i32 %38, 4, !dbg !5182
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5183
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !5183
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !5184
  %39 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5185
  %call = call i32 @GET_TOK(%struct.TM2Context* %39, i32 1), !dbg !5186
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5187
  store i32 %call, i32* %arrayidx, align 16, !dbg !5188
  %arrayidx40 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5189
  store i32 0, i32* %arrayidx40, align 4, !dbg !5190
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5191
  store i32 0, i32* %arrayidx41, align 8, !dbg !5192
  %arrayidx42 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5193
  store i32 0, i32* %arrayidx42, align 4, !dbg !5194
  %40 = load i32*, i32** %U, align 8, !dbg !5195
  %41 = load i32, i32* %Ustride, align 4, !dbg !5196
  %42 = load i32*, i32** %clast, align 8, !dbg !5197
  %43 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5198
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %43, i32 0, i32 12, !dbg !5199
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i32 0, i32 0, !dbg !5198
  %arraydecay43 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5200
  %44 = load i32, i32* %bx.addr, align 4, !dbg !5201
  call void @tm2_low_chroma(i32* %40, i32 %41, i32* %42, i32* %arraydecay, i32* %arraydecay43, i32 %44), !dbg !5202
  %45 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5203
  %call44 = call i32 @GET_TOK(%struct.TM2Context* %45, i32 1), !dbg !5204
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5205
  store i32 %call44, i32* %arrayidx45, align 16, !dbg !5206
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5207
  store i32 0, i32* %arrayidx46, align 4, !dbg !5208
  %arrayidx47 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5209
  store i32 0, i32* %arrayidx47, align 8, !dbg !5210
  %arrayidx48 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5211
  store i32 0, i32* %arrayidx48, align 4, !dbg !5212
  %46 = load i32*, i32** %V, align 8, !dbg !5213
  %47 = load i32, i32* %Vstride, align 4, !dbg !5214
  %48 = load i32*, i32** %clast, align 8, !dbg !5215
  %add.ptr49 = getelementptr inbounds i32, i32* %48, i64 2, !dbg !5216
  %49 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5217
  %CD50 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %49, i32 0, i32 12, !dbg !5218
  %arraydecay51 = getelementptr inbounds [4 x i32], [4 x i32]* %CD50, i32 0, i32 0, !dbg !5217
  %add.ptr52 = getelementptr inbounds i32, i32* %arraydecay51, i64 2, !dbg !5219
  %arraydecay53 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5220
  %50 = load i32, i32* %bx.addr, align 4, !dbg !5221
  call void @tm2_low_chroma(i32* %46, i32 %47, i32* %add.ptr49, i32* %add.ptr52, i32* %arraydecay53, i32 %50), !dbg !5222
  store i32 0, i32* %i, align 4, !dbg !5223
  br label %for.cond, !dbg !5225

for.cond:                                         ; preds = %for.inc, %cond.end23
  %51 = load i32, i32* %i, align 4, !dbg !5226
  %cmp = icmp slt i32 %51, 16, !dbg !5229
  br i1 %cmp, label %for.body, label %for.end, !dbg !5230

for.body:                                         ; preds = %for.cond
  %52 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5231
  %call54 = call i32 @GET_TOK(%struct.TM2Context* %52, i32 2), !dbg !5232
  %53 = load i32, i32* %i, align 4, !dbg !5233
  %idxprom = sext i32 %53 to i64, !dbg !5234
  %arrayidx55 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom, !dbg !5234
  store i32 %call54, i32* %arrayidx55, align 4, !dbg !5235
  br label %for.inc, !dbg !5234

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !5236
  %inc = add nsw i32 %54, 1, !dbg !5236
  store i32 %inc, i32* %i, align 4, !dbg !5236
  br label %for.cond, !dbg !5238, !llvm.loop !5239

for.end:                                          ; preds = %for.cond
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5241
  %56 = load i32*, i32** %Y, align 8, !dbg !5242
  %57 = load i32, i32* %Ystride, align 4, !dbg !5243
  %arraydecay56 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5244
  %58 = load i32*, i32** %last, align 8, !dbg !5245
  call void @tm2_apply_deltas(%struct.TM2Context* %55, i32* %56, i32 %57, i32* %arraydecay56, i32* %58), !dbg !5246
  ret void, !dbg !5247
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_low_res_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !5248 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %deltas = alloca [16 x i32], align 16
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !5249, metadata !1653), !dbg !5250
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !5251, metadata !1653), !dbg !5252
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !5253, metadata !1653), !dbg !5254
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !5255, metadata !1653), !dbg !5256
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5257, metadata !1653), !dbg !5258
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !5259, metadata !1653), !dbg !5260
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !5261, metadata !1653), !dbg !5262
  call void @llvm.dbg.declare(metadata [16 x i32]* %deltas, metadata !5263, metadata !1653), !dbg !5264
  call void @llvm.dbg.declare(metadata i32** %last, metadata !5265, metadata !1653), !dbg !5266
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !5267, metadata !1653), !dbg !5268
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !5269, metadata !1653), !dbg !5270
  call void @llvm.dbg.declare(metadata i32** %U, metadata !5271, metadata !1653), !dbg !5272
  call void @llvm.dbg.declare(metadata i32** %V, metadata !5273, metadata !1653), !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !5275, metadata !1653), !dbg !5276
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !5277, metadata !1653), !dbg !5278
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !5279, metadata !1653), !dbg !5280
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5281
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !5282
  %1 = load i32, i32* %y_stride, align 8, !dbg !5282
  store i32 %1, i32* %Ystride, align 4, !dbg !5283
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5284
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !5285
  %3 = load i32, i32* %uv_stride, align 4, !dbg !5285
  store i32 %3, i32* %Vstride, align 4, !dbg !5286
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5287
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !5288
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !5288
  store i32 %5, i32* %Ustride, align 4, !dbg !5289
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5290
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !5291
  %7 = load i32, i32* %cur, align 8, !dbg !5291
  %tobool = icmp ne i32 %7, 0, !dbg !5290
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5290

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5292
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !5294
  %9 = load i32*, i32** %Y2, align 8, !dbg !5294
  br label %cond.end, !dbg !5295

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5296
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !5298
  %11 = load i32*, i32** %Y1, align 8, !dbg !5298
  br label %cond.end, !dbg !5299

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !5300
  %12 = load i32, i32* %by.addr, align 4, !dbg !5302
  %mul = mul nsw i32 %12, 4, !dbg !5303
  %13 = load i32, i32* %Ystride, align 4, !dbg !5304
  %mul2 = mul nsw i32 %mul, %13, !dbg !5305
  %idx.ext = sext i32 %mul2 to i64, !dbg !5306
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !5306
  %14 = load i32, i32* %bx.addr, align 4, !dbg !5307
  %mul3 = mul nsw i32 %14, 4, !dbg !5308
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5309
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !5309
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !5310
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5311
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !5312
  %16 = load i32, i32* %cur6, align 8, !dbg !5312
  %tobool7 = icmp ne i32 %16, 0, !dbg !5311
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !5311

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5313
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !5315
  %18 = load i32*, i32** %V2, align 8, !dbg !5315
  br label %cond.end10, !dbg !5316

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5317
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !5319
  %20 = load i32*, i32** %V1, align 8, !dbg !5319
  br label %cond.end10, !dbg !5320

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !5321
  %21 = load i32, i32* %by.addr, align 4, !dbg !5323
  %mul12 = mul nsw i32 %21, 2, !dbg !5324
  %22 = load i32, i32* %Vstride, align 4, !dbg !5325
  %mul13 = mul nsw i32 %mul12, %22, !dbg !5326
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5327
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !5327
  %23 = load i32, i32* %bx.addr, align 4, !dbg !5328
  %mul16 = mul nsw i32 %23, 2, !dbg !5329
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !5330
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !5330
  store i32* %add.ptr18, i32** %V, align 8, !dbg !5331
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5332
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !5333
  %25 = load i32, i32* %cur19, align 8, !dbg !5333
  %tobool20 = icmp ne i32 %25, 0, !dbg !5332
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5332

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5334
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !5336
  %27 = load i32*, i32** %U2, align 8, !dbg !5336
  br label %cond.end23, !dbg !5337

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5338
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !5340
  %29 = load i32*, i32** %U1, align 8, !dbg !5340
  br label %cond.end23, !dbg !5341

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !5342
  %30 = load i32, i32* %by.addr, align 4, !dbg !5344
  %mul25 = mul nsw i32 %30, 2, !dbg !5345
  %31 = load i32, i32* %Ustride, align 4, !dbg !5346
  %mul26 = mul nsw i32 %mul25, %31, !dbg !5347
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !5348
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !5348
  %32 = load i32, i32* %bx.addr, align 4, !dbg !5349
  %mul29 = mul nsw i32 %32, 2, !dbg !5350
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !5351
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !5351
  store i32* %add.ptr31, i32** %U, align 8, !dbg !5352
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5353
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !5354
  %34 = load i32*, i32** %last32, align 8, !dbg !5354
  %35 = load i32, i32* %bx.addr, align 4, !dbg !5355
  %mul33 = mul nsw i32 %35, 4, !dbg !5356
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !5357
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !5357
  store i32* %add.ptr35, i32** %last, align 8, !dbg !5358
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5359
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !5360
  %37 = load i32*, i32** %clast36, align 8, !dbg !5360
  %38 = load i32, i32* %bx.addr, align 4, !dbg !5361
  %mul37 = mul nsw i32 %38, 4, !dbg !5362
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5363
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !5363
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !5364
  %39 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5365
  %call = call i32 @GET_TOK(%struct.TM2Context* %39, i32 1), !dbg !5366
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5367
  store i32 %call, i32* %arrayidx, align 16, !dbg !5368
  %arrayidx40 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5369
  store i32 0, i32* %arrayidx40, align 4, !dbg !5370
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5371
  store i32 0, i32* %arrayidx41, align 8, !dbg !5372
  %arrayidx42 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5373
  store i32 0, i32* %arrayidx42, align 4, !dbg !5374
  %40 = load i32*, i32** %U, align 8, !dbg !5375
  %41 = load i32, i32* %Ustride, align 4, !dbg !5376
  %42 = load i32*, i32** %clast, align 8, !dbg !5377
  %43 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5378
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %43, i32 0, i32 12, !dbg !5379
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i32 0, i32 0, !dbg !5378
  %arraydecay43 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5380
  %44 = load i32, i32* %bx.addr, align 4, !dbg !5381
  call void @tm2_low_chroma(i32* %40, i32 %41, i32* %42, i32* %arraydecay, i32* %arraydecay43, i32 %44), !dbg !5382
  %45 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5383
  %call44 = call i32 @GET_TOK(%struct.TM2Context* %45, i32 1), !dbg !5384
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5385
  store i32 %call44, i32* %arrayidx45, align 16, !dbg !5386
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5387
  store i32 0, i32* %arrayidx46, align 4, !dbg !5388
  %arrayidx47 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5389
  store i32 0, i32* %arrayidx47, align 8, !dbg !5390
  %arrayidx48 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5391
  store i32 0, i32* %arrayidx48, align 4, !dbg !5392
  %46 = load i32*, i32** %V, align 8, !dbg !5393
  %47 = load i32, i32* %Vstride, align 4, !dbg !5394
  %48 = load i32*, i32** %clast, align 8, !dbg !5395
  %add.ptr49 = getelementptr inbounds i32, i32* %48, i64 2, !dbg !5396
  %49 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5397
  %CD50 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %49, i32 0, i32 12, !dbg !5398
  %arraydecay51 = getelementptr inbounds [4 x i32], [4 x i32]* %CD50, i32 0, i32 0, !dbg !5397
  %add.ptr52 = getelementptr inbounds i32, i32* %arraydecay51, i64 2, !dbg !5399
  %arraydecay53 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5400
  %50 = load i32, i32* %bx.addr, align 4, !dbg !5401
  call void @tm2_low_chroma(i32* %46, i32 %47, i32* %add.ptr49, i32* %add.ptr52, i32* %arraydecay53, i32 %50), !dbg !5402
  store i32 0, i32* %i, align 4, !dbg !5403
  br label %for.cond, !dbg !5405

for.cond:                                         ; preds = %for.inc, %cond.end23
  %51 = load i32, i32* %i, align 4, !dbg !5406
  %cmp = icmp slt i32 %51, 16, !dbg !5409
  br i1 %cmp, label %for.body, label %for.end, !dbg !5410

for.body:                                         ; preds = %for.cond
  %52 = load i32, i32* %i, align 4, !dbg !5411
  %idxprom = sext i32 %52 to i64, !dbg !5412
  %arrayidx54 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom, !dbg !5412
  store i32 0, i32* %arrayidx54, align 4, !dbg !5413
  br label %for.inc, !dbg !5412

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %i, align 4, !dbg !5414
  %inc = add nsw i32 %53, 1, !dbg !5414
  store i32 %inc, i32* %i, align 4, !dbg !5414
  br label %for.cond, !dbg !5416, !llvm.loop !5417

for.end:                                          ; preds = %for.cond
  %54 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5419
  %call55 = call i32 @GET_TOK(%struct.TM2Context* %54, i32 3), !dbg !5420
  %arrayidx56 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5421
  store i32 %call55, i32* %arrayidx56, align 16, !dbg !5422
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5423
  %call57 = call i32 @GET_TOK(%struct.TM2Context* %55, i32 3), !dbg !5424
  %arrayidx58 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5425
  store i32 %call57, i32* %arrayidx58, align 8, !dbg !5426
  %56 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5427
  %call59 = call i32 @GET_TOK(%struct.TM2Context* %56, i32 3), !dbg !5428
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 8, !dbg !5429
  store i32 %call59, i32* %arrayidx60, align 16, !dbg !5430
  %57 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5431
  %call61 = call i32 @GET_TOK(%struct.TM2Context* %57, i32 3), !dbg !5432
  %arrayidx62 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 10, !dbg !5433
  store i32 %call61, i32* %arrayidx62, align 8, !dbg !5434
  %58 = load i32, i32* %bx.addr, align 4, !dbg !5435
  %cmp63 = icmp sgt i32 %58, 0, !dbg !5437
  br i1 %cmp63, label %if.then, label %if.else, !dbg !5438

if.then:                                          ; preds = %for.end
  %59 = load i32*, i32** %last, align 8, !dbg !5439
  %arrayidx64 = getelementptr inbounds i32, i32* %59, i64 -1, !dbg !5439
  %60 = load i32, i32* %arrayidx64, align 4, !dbg !5439
  %61 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5440
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %61, i32 0, i32 11, !dbg !5441
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 0, !dbg !5440
  %62 = load i32, i32* %arrayidx65, align 8, !dbg !5440
  %sub = sub nsw i32 %60, %62, !dbg !5442
  %63 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5443
  %D66 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %63, i32 0, i32 11, !dbg !5444
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %D66, i64 0, i64 1, !dbg !5443
  %64 = load i32, i32* %arrayidx67, align 4, !dbg !5443
  %sub68 = sub nsw i32 %sub, %64, !dbg !5445
  %65 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5446
  %D69 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %65, i32 0, i32 11, !dbg !5447
  %arrayidx70 = getelementptr inbounds [4 x i32], [4 x i32]* %D69, i64 0, i64 2, !dbg !5446
  %66 = load i32, i32* %arrayidx70, align 8, !dbg !5446
  %sub71 = sub nsw i32 %sub68, %66, !dbg !5448
  %67 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5449
  %D72 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %67, i32 0, i32 11, !dbg !5450
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %D72, i64 0, i64 3, !dbg !5449
  %68 = load i32, i32* %arrayidx73, align 4, !dbg !5449
  %sub74 = sub nsw i32 %sub71, %68, !dbg !5451
  %69 = load i32*, i32** %last, align 8, !dbg !5452
  %arrayidx75 = getelementptr inbounds i32, i32* %69, i64 1, !dbg !5452
  %70 = load i32, i32* %arrayidx75, align 4, !dbg !5452
  %add = add nsw i32 %sub74, %70, !dbg !5453
  %shr = ashr i32 %add, 1, !dbg !5454
  %71 = load i32*, i32** %last, align 8, !dbg !5455
  %arrayidx76 = getelementptr inbounds i32, i32* %71, i64 0, !dbg !5455
  store i32 %shr, i32* %arrayidx76, align 4, !dbg !5456
  br label %if.end, !dbg !5455

if.else:                                          ; preds = %for.end
  %72 = load i32*, i32** %last, align 8, !dbg !5457
  %arrayidx77 = getelementptr inbounds i32, i32* %72, i64 1, !dbg !5457
  %73 = load i32, i32* %arrayidx77, align 4, !dbg !5457
  %74 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5458
  %D78 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %74, i32 0, i32 11, !dbg !5459
  %arrayidx79 = getelementptr inbounds [4 x i32], [4 x i32]* %D78, i64 0, i64 0, !dbg !5458
  %75 = load i32, i32* %arrayidx79, align 8, !dbg !5458
  %sub80 = sub nsw i32 %73, %75, !dbg !5460
  %76 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5461
  %D81 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %76, i32 0, i32 11, !dbg !5462
  %arrayidx82 = getelementptr inbounds [4 x i32], [4 x i32]* %D81, i64 0, i64 1, !dbg !5461
  %77 = load i32, i32* %arrayidx82, align 4, !dbg !5461
  %sub83 = sub nsw i32 %sub80, %77, !dbg !5463
  %78 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5464
  %D84 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %78, i32 0, i32 11, !dbg !5465
  %arrayidx85 = getelementptr inbounds [4 x i32], [4 x i32]* %D84, i64 0, i64 2, !dbg !5464
  %79 = load i32, i32* %arrayidx85, align 8, !dbg !5464
  %sub86 = sub nsw i32 %sub83, %79, !dbg !5466
  %80 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5467
  %D87 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %80, i32 0, i32 11, !dbg !5468
  %arrayidx88 = getelementptr inbounds [4 x i32], [4 x i32]* %D87, i64 0, i64 3, !dbg !5467
  %81 = load i32, i32* %arrayidx88, align 4, !dbg !5467
  %sub89 = sub nsw i32 %sub86, %81, !dbg !5469
  %shr90 = ashr i32 %sub89, 1, !dbg !5470
  %82 = load i32*, i32** %last, align 8, !dbg !5471
  %arrayidx91 = getelementptr inbounds i32, i32* %82, i64 0, !dbg !5471
  store i32 %shr90, i32* %arrayidx91, align 4, !dbg !5472
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %83 = load i32*, i32** %last, align 8, !dbg !5473
  %arrayidx92 = getelementptr inbounds i32, i32* %83, i64 1, !dbg !5473
  %84 = load i32, i32* %arrayidx92, align 4, !dbg !5473
  %85 = load i32*, i32** %last, align 8, !dbg !5474
  %arrayidx93 = getelementptr inbounds i32, i32* %85, i64 3, !dbg !5474
  %86 = load i32, i32* %arrayidx93, align 4, !dbg !5474
  %add94 = add nsw i32 %84, %86, !dbg !5475
  %shr95 = ashr i32 %add94, 1, !dbg !5476
  %87 = load i32*, i32** %last, align 8, !dbg !5477
  %arrayidx96 = getelementptr inbounds i32, i32* %87, i64 2, !dbg !5477
  store i32 %shr95, i32* %arrayidx96, align 4, !dbg !5478
  %88 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5479
  %D97 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %88, i32 0, i32 11, !dbg !5480
  %arrayidx98 = getelementptr inbounds [4 x i32], [4 x i32]* %D97, i64 0, i64 0, !dbg !5479
  %89 = load i32, i32* %arrayidx98, align 8, !dbg !5479
  %90 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5481
  %D99 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %90, i32 0, i32 11, !dbg !5482
  %arrayidx100 = getelementptr inbounds [4 x i32], [4 x i32]* %D99, i64 0, i64 1, !dbg !5481
  %91 = load i32, i32* %arrayidx100, align 4, !dbg !5481
  %add101 = add nsw i32 %89, %91, !dbg !5483
  store i32 %add101, i32* %t1, align 4, !dbg !5484
  %92 = load i32, i32* %t1, align 4, !dbg !5485
  %shr102 = ashr i32 %92, 1, !dbg !5486
  %93 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5487
  %D103 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %93, i32 0, i32 11, !dbg !5488
  %arrayidx104 = getelementptr inbounds [4 x i32], [4 x i32]* %D103, i64 0, i64 0, !dbg !5487
  store i32 %shr102, i32* %arrayidx104, align 8, !dbg !5489
  %94 = load i32, i32* %t1, align 4, !dbg !5490
  %95 = load i32, i32* %t1, align 4, !dbg !5491
  %shr105 = ashr i32 %95, 1, !dbg !5492
  %sub106 = sub nsw i32 %94, %shr105, !dbg !5493
  %96 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5494
  %D107 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %96, i32 0, i32 11, !dbg !5495
  %arrayidx108 = getelementptr inbounds [4 x i32], [4 x i32]* %D107, i64 0, i64 1, !dbg !5494
  store i32 %sub106, i32* %arrayidx108, align 4, !dbg !5496
  %97 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5497
  %D109 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %97, i32 0, i32 11, !dbg !5498
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %D109, i64 0, i64 2, !dbg !5497
  %98 = load i32, i32* %arrayidx110, align 8, !dbg !5497
  %99 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5499
  %D111 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %99, i32 0, i32 11, !dbg !5500
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %D111, i64 0, i64 3, !dbg !5499
  %100 = load i32, i32* %arrayidx112, align 4, !dbg !5499
  %add113 = add nsw i32 %98, %100, !dbg !5501
  store i32 %add113, i32* %t2, align 4, !dbg !5502
  %101 = load i32, i32* %t2, align 4, !dbg !5503
  %shr114 = ashr i32 %101, 1, !dbg !5504
  %102 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5505
  %D115 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %102, i32 0, i32 11, !dbg !5506
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %D115, i64 0, i64 2, !dbg !5505
  store i32 %shr114, i32* %arrayidx116, align 8, !dbg !5507
  %103 = load i32, i32* %t2, align 4, !dbg !5508
  %104 = load i32, i32* %t2, align 4, !dbg !5509
  %shr117 = ashr i32 %104, 1, !dbg !5510
  %sub118 = sub nsw i32 %103, %shr117, !dbg !5511
  %105 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5512
  %D119 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %105, i32 0, i32 11, !dbg !5513
  %arrayidx120 = getelementptr inbounds [4 x i32], [4 x i32]* %D119, i64 0, i64 3, !dbg !5512
  store i32 %sub118, i32* %arrayidx120, align 4, !dbg !5514
  %106 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5515
  %107 = load i32*, i32** %Y, align 8, !dbg !5516
  %108 = load i32, i32* %Ystride, align 4, !dbg !5517
  %arraydecay121 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5518
  %109 = load i32*, i32** %last, align 8, !dbg !5519
  call void @tm2_apply_deltas(%struct.TM2Context* %106, i32* %107, i32 %108, i32* %arraydecay121, i32* %109), !dbg !5520
  ret void, !dbg !5521
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_null_res_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !5522 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ct = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %diff = alloca i32, align 4
  %deltas = alloca [16 x i32], align 16
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  %tp = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !5523, metadata !1653), !dbg !5524
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !5525, metadata !1653), !dbg !5526
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !5527, metadata !1653), !dbg !5528
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !5529, metadata !1653), !dbg !5530
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5531, metadata !1653), !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %ct, metadata !5533, metadata !1653), !dbg !5534
  call void @llvm.dbg.declare(metadata i32* %left, metadata !5535, metadata !1653), !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %right, metadata !5537, metadata !1653), !dbg !5538
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !5539, metadata !1653), !dbg !5540
  call void @llvm.dbg.declare(metadata [16 x i32]* %deltas, metadata !5541, metadata !1653), !dbg !5542
  call void @llvm.dbg.declare(metadata i32** %last, metadata !5543, metadata !1653), !dbg !5544
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !5545, metadata !1653), !dbg !5546
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !5547, metadata !1653), !dbg !5548
  call void @llvm.dbg.declare(metadata i32** %U, metadata !5549, metadata !1653), !dbg !5550
  call void @llvm.dbg.declare(metadata i32** %V, metadata !5551, metadata !1653), !dbg !5552
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !5553, metadata !1653), !dbg !5554
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !5555, metadata !1653), !dbg !5556
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !5557, metadata !1653), !dbg !5558
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5559
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !5560
  %1 = load i32, i32* %y_stride, align 8, !dbg !5560
  store i32 %1, i32* %Ystride, align 4, !dbg !5561
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5562
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !5563
  %3 = load i32, i32* %uv_stride, align 4, !dbg !5563
  store i32 %3, i32* %Vstride, align 4, !dbg !5564
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5565
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !5566
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !5566
  store i32 %5, i32* %Ustride, align 4, !dbg !5567
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5568
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !5569
  %7 = load i32, i32* %cur, align 8, !dbg !5569
  %tobool = icmp ne i32 %7, 0, !dbg !5568
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5568

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5570
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !5572
  %9 = load i32*, i32** %Y2, align 8, !dbg !5572
  br label %cond.end, !dbg !5573

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5574
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !5576
  %11 = load i32*, i32** %Y1, align 8, !dbg !5576
  br label %cond.end, !dbg !5577

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !5578
  %12 = load i32, i32* %by.addr, align 4, !dbg !5580
  %mul = mul nsw i32 %12, 4, !dbg !5581
  %13 = load i32, i32* %Ystride, align 4, !dbg !5582
  %mul2 = mul nsw i32 %mul, %13, !dbg !5583
  %idx.ext = sext i32 %mul2 to i64, !dbg !5584
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !5584
  %14 = load i32, i32* %bx.addr, align 4, !dbg !5585
  %mul3 = mul nsw i32 %14, 4, !dbg !5586
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5587
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !5587
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !5588
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5589
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !5590
  %16 = load i32, i32* %cur6, align 8, !dbg !5590
  %tobool7 = icmp ne i32 %16, 0, !dbg !5589
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !5589

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5591
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !5593
  %18 = load i32*, i32** %V2, align 8, !dbg !5593
  br label %cond.end10, !dbg !5594

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5595
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !5597
  %20 = load i32*, i32** %V1, align 8, !dbg !5597
  br label %cond.end10, !dbg !5598

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !5599
  %21 = load i32, i32* %by.addr, align 4, !dbg !5601
  %mul12 = mul nsw i32 %21, 2, !dbg !5602
  %22 = load i32, i32* %Vstride, align 4, !dbg !5603
  %mul13 = mul nsw i32 %mul12, %22, !dbg !5604
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5605
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !5605
  %23 = load i32, i32* %bx.addr, align 4, !dbg !5606
  %mul16 = mul nsw i32 %23, 2, !dbg !5607
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !5608
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !5608
  store i32* %add.ptr18, i32** %V, align 8, !dbg !5609
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5610
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !5611
  %25 = load i32, i32* %cur19, align 8, !dbg !5611
  %tobool20 = icmp ne i32 %25, 0, !dbg !5610
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5610

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5612
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !5614
  %27 = load i32*, i32** %U2, align 8, !dbg !5614
  br label %cond.end23, !dbg !5615

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5616
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !5618
  %29 = load i32*, i32** %U1, align 8, !dbg !5618
  br label %cond.end23, !dbg !5619

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !5620
  %30 = load i32, i32* %by.addr, align 4, !dbg !5622
  %mul25 = mul nsw i32 %30, 2, !dbg !5623
  %31 = load i32, i32* %Ustride, align 4, !dbg !5624
  %mul26 = mul nsw i32 %mul25, %31, !dbg !5625
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !5626
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !5626
  %32 = load i32, i32* %bx.addr, align 4, !dbg !5627
  %mul29 = mul nsw i32 %32, 2, !dbg !5628
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !5629
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !5629
  store i32* %add.ptr31, i32** %U, align 8, !dbg !5630
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5631
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !5632
  %34 = load i32*, i32** %last32, align 8, !dbg !5632
  %35 = load i32, i32* %bx.addr, align 4, !dbg !5633
  %mul33 = mul nsw i32 %35, 4, !dbg !5634
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !5635
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !5635
  store i32* %add.ptr35, i32** %last, align 8, !dbg !5636
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5637
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !5638
  %37 = load i32*, i32** %clast36, align 8, !dbg !5638
  %38 = load i32, i32* %bx.addr, align 4, !dbg !5639
  %mul37 = mul nsw i32 %38, 4, !dbg !5640
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5641
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !5641
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !5642
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5643
  store i32 0, i32* %arrayidx, align 4, !dbg !5644
  %arrayidx40 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5645
  store i32 0, i32* %arrayidx40, align 8, !dbg !5646
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5647
  store i32 0, i32* %arrayidx41, align 4, !dbg !5648
  %arrayidx42 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5649
  store i32 0, i32* %arrayidx42, align 16, !dbg !5650
  %39 = load i32*, i32** %U, align 8, !dbg !5651
  %40 = load i32, i32* %Ustride, align 4, !dbg !5652
  %41 = load i32*, i32** %clast, align 8, !dbg !5653
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5654
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %42, i32 0, i32 12, !dbg !5655
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i32 0, i32 0, !dbg !5654
  %arraydecay43 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5656
  %43 = load i32, i32* %bx.addr, align 4, !dbg !5657
  call void @tm2_low_chroma(i32* %39, i32 %40, i32* %41, i32* %arraydecay, i32* %arraydecay43, i32 %43), !dbg !5658
  %arrayidx44 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 3, !dbg !5659
  store i32 0, i32* %arrayidx44, align 4, !dbg !5660
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 2, !dbg !5661
  store i32 0, i32* %arrayidx45, align 8, !dbg !5662
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 1, !dbg !5663
  store i32 0, i32* %arrayidx46, align 4, !dbg !5664
  %arrayidx47 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 0, !dbg !5665
  store i32 0, i32* %arrayidx47, align 16, !dbg !5666
  %44 = load i32*, i32** %V, align 8, !dbg !5667
  %45 = load i32, i32* %Vstride, align 4, !dbg !5668
  %46 = load i32*, i32** %clast, align 8, !dbg !5669
  %add.ptr48 = getelementptr inbounds i32, i32* %46, i64 2, !dbg !5670
  %47 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5671
  %CD49 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %47, i32 0, i32 12, !dbg !5672
  %arraydecay50 = getelementptr inbounds [4 x i32], [4 x i32]* %CD49, i32 0, i32 0, !dbg !5671
  %add.ptr51 = getelementptr inbounds i32, i32* %arraydecay50, i64 2, !dbg !5673
  %arraydecay52 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5674
  %48 = load i32, i32* %bx.addr, align 4, !dbg !5675
  call void @tm2_low_chroma(i32* %44, i32 %45, i32* %add.ptr48, i32* %add.ptr51, i32* %arraydecay52, i32 %48), !dbg !5676
  store i32 0, i32* %i, align 4, !dbg !5677
  br label %for.cond, !dbg !5679

for.cond:                                         ; preds = %for.inc, %cond.end23
  %49 = load i32, i32* %i, align 4, !dbg !5680
  %cmp = icmp slt i32 %49, 16, !dbg !5683
  br i1 %cmp, label %for.body, label %for.end, !dbg !5684

for.body:                                         ; preds = %for.cond
  %50 = load i32, i32* %i, align 4, !dbg !5685
  %idxprom = sext i32 %50 to i64, !dbg !5686
  %arrayidx53 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i64 0, i64 %idxprom, !dbg !5686
  store i32 0, i32* %arrayidx53, align 4, !dbg !5687
  br label %for.inc, !dbg !5686

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !dbg !5688
  %inc = add nsw i32 %51, 1, !dbg !5688
  store i32 %inc, i32* %i, align 4, !dbg !5688
  br label %for.cond, !dbg !5690, !llvm.loop !5691

for.end:                                          ; preds = %for.cond
  %52 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5693
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %52, i32 0, i32 11, !dbg !5694
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 0, !dbg !5693
  %53 = load i32, i32* %arrayidx54, align 8, !dbg !5693
  %54 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5695
  %D55 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %54, i32 0, i32 11, !dbg !5696
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %D55, i64 0, i64 1, !dbg !5695
  %55 = load i32, i32* %arrayidx56, align 4, !dbg !5695
  %add = add nsw i32 %53, %55, !dbg !5697
  %56 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5698
  %D57 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %56, i32 0, i32 11, !dbg !5699
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %D57, i64 0, i64 2, !dbg !5698
  %57 = load i32, i32* %arrayidx58, align 8, !dbg !5698
  %add59 = add nsw i32 %add, %57, !dbg !5700
  %58 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5701
  %D60 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %58, i32 0, i32 11, !dbg !5702
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %D60, i64 0, i64 3, !dbg !5701
  %59 = load i32, i32* %arrayidx61, align 4, !dbg !5701
  %add62 = add nsw i32 %add59, %59, !dbg !5703
  store i32 %add62, i32* %ct, align 4, !dbg !5704
  %60 = load i32, i32* %bx.addr, align 4, !dbg !5705
  %cmp63 = icmp sgt i32 %60, 0, !dbg !5707
  br i1 %cmp63, label %if.then, label %if.else, !dbg !5708

if.then:                                          ; preds = %for.end
  %61 = load i32*, i32** %last, align 8, !dbg !5709
  %arrayidx64 = getelementptr inbounds i32, i32* %61, i64 -1, !dbg !5709
  %62 = load i32, i32* %arrayidx64, align 4, !dbg !5709
  %63 = load i32, i32* %ct, align 4, !dbg !5710
  %sub = sub nsw i32 %62, %63, !dbg !5711
  store i32 %sub, i32* %left, align 4, !dbg !5712
  br label %if.end, !dbg !5713

if.else:                                          ; preds = %for.end
  store i32 0, i32* %left, align 4, !dbg !5714
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %64 = load i32*, i32** %last, align 8, !dbg !5715
  %arrayidx65 = getelementptr inbounds i32, i32* %64, i64 3, !dbg !5715
  %65 = load i32, i32* %arrayidx65, align 4, !dbg !5715
  store i32 %65, i32* %right, align 4, !dbg !5716
  %66 = load i32, i32* %right, align 4, !dbg !5717
  %67 = load i32, i32* %left, align 4, !dbg !5718
  %sub66 = sub nsw i32 %66, %67, !dbg !5719
  store i32 %sub66, i32* %diff, align 4, !dbg !5720
  %68 = load i32, i32* %left, align 4, !dbg !5721
  %69 = load i32, i32* %diff, align 4, !dbg !5722
  %shr = ashr i32 %69, 2, !dbg !5723
  %add67 = add nsw i32 %68, %shr, !dbg !5724
  %70 = load i32*, i32** %last, align 8, !dbg !5725
  %arrayidx68 = getelementptr inbounds i32, i32* %70, i64 0, !dbg !5725
  store i32 %add67, i32* %arrayidx68, align 4, !dbg !5726
  %71 = load i32, i32* %left, align 4, !dbg !5727
  %72 = load i32, i32* %diff, align 4, !dbg !5728
  %shr69 = ashr i32 %72, 1, !dbg !5729
  %add70 = add nsw i32 %71, %shr69, !dbg !5730
  %73 = load i32*, i32** %last, align 8, !dbg !5731
  %arrayidx71 = getelementptr inbounds i32, i32* %73, i64 1, !dbg !5731
  store i32 %add70, i32* %arrayidx71, align 4, !dbg !5732
  %74 = load i32, i32* %right, align 4, !dbg !5733
  %75 = load i32, i32* %diff, align 4, !dbg !5734
  %shr72 = ashr i32 %75, 2, !dbg !5735
  %sub73 = sub nsw i32 %74, %shr72, !dbg !5736
  %76 = load i32*, i32** %last, align 8, !dbg !5737
  %arrayidx74 = getelementptr inbounds i32, i32* %76, i64 2, !dbg !5737
  store i32 %sub73, i32* %arrayidx74, align 4, !dbg !5738
  %77 = load i32, i32* %right, align 4, !dbg !5739
  %78 = load i32*, i32** %last, align 8, !dbg !5740
  %arrayidx75 = getelementptr inbounds i32, i32* %78, i64 3, !dbg !5740
  store i32 %77, i32* %arrayidx75, align 4, !dbg !5741
  call void @llvm.dbg.declare(metadata i32* %tp, metadata !5742, metadata !1653), !dbg !5744
  %79 = load i32, i32* %left, align 4, !dbg !5745
  store i32 %79, i32* %tp, align 4, !dbg !5744
  %80 = load i32, i32* %tp, align 4, !dbg !5746
  %81 = load i32, i32* %ct, align 4, !dbg !5747
  %shr76 = ashr i32 %81, 2, !dbg !5748
  %add77 = add nsw i32 %80, %shr76, !dbg !5749
  %82 = load i32, i32* %left, align 4, !dbg !5750
  %sub78 = sub nsw i32 %add77, %82, !dbg !5751
  %83 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5752
  %D79 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %83, i32 0, i32 11, !dbg !5753
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %D79, i64 0, i64 0, !dbg !5752
  store i32 %sub78, i32* %arrayidx80, align 8, !dbg !5754
  %84 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5755
  %D81 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %84, i32 0, i32 11, !dbg !5756
  %arrayidx82 = getelementptr inbounds [4 x i32], [4 x i32]* %D81, i64 0, i64 0, !dbg !5755
  %85 = load i32, i32* %arrayidx82, align 8, !dbg !5755
  %86 = load i32, i32* %left, align 4, !dbg !5757
  %add83 = add nsw i32 %86, %85, !dbg !5757
  store i32 %add83, i32* %left, align 4, !dbg !5757
  %87 = load i32, i32* %tp, align 4, !dbg !5758
  %88 = load i32, i32* %ct, align 4, !dbg !5759
  %shr84 = ashr i32 %88, 1, !dbg !5760
  %add85 = add nsw i32 %87, %shr84, !dbg !5761
  %89 = load i32, i32* %left, align 4, !dbg !5762
  %sub86 = sub nsw i32 %add85, %89, !dbg !5763
  %90 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5764
  %D87 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %90, i32 0, i32 11, !dbg !5765
  %arrayidx88 = getelementptr inbounds [4 x i32], [4 x i32]* %D87, i64 0, i64 1, !dbg !5764
  store i32 %sub86, i32* %arrayidx88, align 4, !dbg !5766
  %91 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5767
  %D89 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %91, i32 0, i32 11, !dbg !5768
  %arrayidx90 = getelementptr inbounds [4 x i32], [4 x i32]* %D89, i64 0, i64 1, !dbg !5767
  %92 = load i32, i32* %arrayidx90, align 4, !dbg !5767
  %93 = load i32, i32* %left, align 4, !dbg !5769
  %add91 = add nsw i32 %93, %92, !dbg !5769
  store i32 %add91, i32* %left, align 4, !dbg !5769
  %94 = load i32, i32* %tp, align 4, !dbg !5770
  %95 = load i32, i32* %ct, align 4, !dbg !5771
  %add92 = add nsw i32 %94, %95, !dbg !5772
  %96 = load i32, i32* %ct, align 4, !dbg !5773
  %shr93 = ashr i32 %96, 2, !dbg !5774
  %sub94 = sub nsw i32 %add92, %shr93, !dbg !5775
  %97 = load i32, i32* %left, align 4, !dbg !5776
  %sub95 = sub nsw i32 %sub94, %97, !dbg !5777
  %98 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5778
  %D96 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %98, i32 0, i32 11, !dbg !5779
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %D96, i64 0, i64 2, !dbg !5778
  store i32 %sub95, i32* %arrayidx97, align 8, !dbg !5780
  %99 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5781
  %D98 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %99, i32 0, i32 11, !dbg !5782
  %arrayidx99 = getelementptr inbounds [4 x i32], [4 x i32]* %D98, i64 0, i64 2, !dbg !5781
  %100 = load i32, i32* %arrayidx99, align 8, !dbg !5781
  %101 = load i32, i32* %left, align 4, !dbg !5783
  %add100 = add nsw i32 %101, %100, !dbg !5783
  store i32 %add100, i32* %left, align 4, !dbg !5783
  %102 = load i32, i32* %tp, align 4, !dbg !5784
  %103 = load i32, i32* %ct, align 4, !dbg !5785
  %add101 = add nsw i32 %102, %103, !dbg !5786
  %104 = load i32, i32* %left, align 4, !dbg !5787
  %sub102 = sub nsw i32 %add101, %104, !dbg !5788
  %105 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5789
  %D103 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %105, i32 0, i32 11, !dbg !5790
  %arrayidx104 = getelementptr inbounds [4 x i32], [4 x i32]* %D103, i64 0, i64 3, !dbg !5789
  store i32 %sub102, i32* %arrayidx104, align 4, !dbg !5791
  %106 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5792
  %107 = load i32*, i32** %Y, align 8, !dbg !5793
  %108 = load i32, i32* %Ystride, align 4, !dbg !5794
  %arraydecay105 = getelementptr inbounds [16 x i32], [16 x i32]* %deltas, i32 0, i32 0, !dbg !5795
  %109 = load i32*, i32** %last, align 8, !dbg !5796
  call void @tm2_apply_deltas(%struct.TM2Context* %106, i32* %107, i32 %108, i32* %arraydecay105, i32* %109), !dbg !5797
  ret void, !dbg !5798
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_update_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !5799 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca i32, align 4
  %Yo = alloca i32*, align 8
  %Uo = alloca i32*, align 8
  %Vo = alloca i32*, align 8
  %oYstride = alloca i32, align 4
  %oUstride = alloca i32, align 4
  %oVstride = alloca i32, align 4
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !5800, metadata !1653), !dbg !5801
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !5802, metadata !1653), !dbg !5803
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !5804, metadata !1653), !dbg !5805
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !5806, metadata !1653), !dbg !5807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5808, metadata !1653), !dbg !5809
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5810, metadata !1653), !dbg !5811
  call void @llvm.dbg.declare(metadata i32* %d, metadata !5812, metadata !1653), !dbg !5813
  call void @llvm.dbg.declare(metadata i32** %Yo, metadata !5814, metadata !1653), !dbg !5815
  call void @llvm.dbg.declare(metadata i32** %Uo, metadata !5816, metadata !1653), !dbg !5817
  call void @llvm.dbg.declare(metadata i32** %Vo, metadata !5818, metadata !1653), !dbg !5819
  call void @llvm.dbg.declare(metadata i32* %oYstride, metadata !5820, metadata !1653), !dbg !5821
  call void @llvm.dbg.declare(metadata i32* %oUstride, metadata !5822, metadata !1653), !dbg !5823
  call void @llvm.dbg.declare(metadata i32* %oVstride, metadata !5824, metadata !1653), !dbg !5825
  call void @llvm.dbg.declare(metadata i32** %last, metadata !5826, metadata !1653), !dbg !5827
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !5828, metadata !1653), !dbg !5829
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !5830, metadata !1653), !dbg !5831
  call void @llvm.dbg.declare(metadata i32** %U, metadata !5832, metadata !1653), !dbg !5833
  call void @llvm.dbg.declare(metadata i32** %V, metadata !5834, metadata !1653), !dbg !5835
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !5836, metadata !1653), !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !5838, metadata !1653), !dbg !5839
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !5840, metadata !1653), !dbg !5841
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5842
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !5843
  %1 = load i32, i32* %y_stride, align 8, !dbg !5843
  store i32 %1, i32* %Ystride, align 4, !dbg !5844
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5845
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !5846
  %3 = load i32, i32* %uv_stride, align 4, !dbg !5846
  store i32 %3, i32* %Vstride, align 4, !dbg !5847
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5848
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !5849
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !5849
  store i32 %5, i32* %Ustride, align 4, !dbg !5850
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5851
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !5852
  %7 = load i32, i32* %cur, align 8, !dbg !5852
  %tobool = icmp ne i32 %7, 0, !dbg !5851
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5851

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5853
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !5855
  %9 = load i32*, i32** %Y2, align 8, !dbg !5855
  br label %cond.end, !dbg !5856

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5857
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !5859
  %11 = load i32*, i32** %Y1, align 8, !dbg !5859
  br label %cond.end, !dbg !5860

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !5861
  %12 = load i32, i32* %by.addr, align 4, !dbg !5863
  %mul = mul nsw i32 %12, 4, !dbg !5864
  %13 = load i32, i32* %Ystride, align 4, !dbg !5865
  %mul2 = mul nsw i32 %mul, %13, !dbg !5866
  %idx.ext = sext i32 %mul2 to i64, !dbg !5867
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !5867
  %14 = load i32, i32* %bx.addr, align 4, !dbg !5868
  %mul3 = mul nsw i32 %14, 4, !dbg !5869
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5870
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !5870
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !5871
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5872
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !5873
  %16 = load i32, i32* %cur6, align 8, !dbg !5873
  %tobool7 = icmp ne i32 %16, 0, !dbg !5872
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !5872

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5874
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !5876
  %18 = load i32*, i32** %V2, align 8, !dbg !5876
  br label %cond.end10, !dbg !5877

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5878
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !5880
  %20 = load i32*, i32** %V1, align 8, !dbg !5880
  br label %cond.end10, !dbg !5881

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !5882
  %21 = load i32, i32* %by.addr, align 4, !dbg !5884
  %mul12 = mul nsw i32 %21, 2, !dbg !5885
  %22 = load i32, i32* %Vstride, align 4, !dbg !5886
  %mul13 = mul nsw i32 %mul12, %22, !dbg !5887
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5888
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !5888
  %23 = load i32, i32* %bx.addr, align 4, !dbg !5889
  %mul16 = mul nsw i32 %23, 2, !dbg !5890
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !5891
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !5891
  store i32* %add.ptr18, i32** %V, align 8, !dbg !5892
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5893
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !5894
  %25 = load i32, i32* %cur19, align 8, !dbg !5894
  %tobool20 = icmp ne i32 %25, 0, !dbg !5893
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5893

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5895
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !5897
  %27 = load i32*, i32** %U2, align 8, !dbg !5897
  br label %cond.end23, !dbg !5898

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5899
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !5901
  %29 = load i32*, i32** %U1, align 8, !dbg !5901
  br label %cond.end23, !dbg !5902

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !5903
  %30 = load i32, i32* %by.addr, align 4, !dbg !5905
  %mul25 = mul nsw i32 %30, 2, !dbg !5906
  %31 = load i32, i32* %Ustride, align 4, !dbg !5907
  %mul26 = mul nsw i32 %mul25, %31, !dbg !5908
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !5909
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !5909
  %32 = load i32, i32* %bx.addr, align 4, !dbg !5910
  %mul29 = mul nsw i32 %32, 2, !dbg !5911
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !5912
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !5912
  store i32* %add.ptr31, i32** %U, align 8, !dbg !5913
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5914
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !5915
  %34 = load i32*, i32** %last32, align 8, !dbg !5915
  %35 = load i32, i32* %bx.addr, align 4, !dbg !5916
  %mul33 = mul nsw i32 %35, 4, !dbg !5917
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !5918
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !5918
  store i32* %add.ptr35, i32** %last, align 8, !dbg !5919
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5920
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !5921
  %37 = load i32*, i32** %clast36, align 8, !dbg !5921
  %38 = load i32, i32* %bx.addr, align 4, !dbg !5922
  %mul37 = mul nsw i32 %38, 4, !dbg !5923
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5924
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !5924
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !5925
  %39 = load i32, i32* %Ystride, align 4, !dbg !5926
  store i32 %39, i32* %oYstride, align 4, !dbg !5927
  %40 = load i32, i32* %Vstride, align 4, !dbg !5928
  store i32 %40, i32* %oVstride, align 4, !dbg !5929
  %41 = load i32, i32* %Ustride, align 4, !dbg !5930
  store i32 %41, i32* %oUstride, align 4, !dbg !5931
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5932
  %cur40 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %42, i32 0, i32 29, !dbg !5933
  %43 = load i32, i32* %cur40, align 8, !dbg !5933
  %tobool41 = icmp ne i32 %43, 0, !dbg !5932
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !5932

cond.true42:                                      ; preds = %cond.end23
  %44 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5934
  %Y143 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %44, i32 0, i32 21, !dbg !5936
  %45 = load i32*, i32** %Y143, align 8, !dbg !5936
  br label %cond.end46, !dbg !5937

cond.false44:                                     ; preds = %cond.end23
  %46 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5938
  %Y245 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %46, i32 0, i32 24, !dbg !5940
  %47 = load i32*, i32** %Y245, align 8, !dbg !5940
  br label %cond.end46, !dbg !5941

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i32* [ %45, %cond.true42 ], [ %47, %cond.false44 ], !dbg !5942
  %48 = load i32, i32* %by.addr, align 4, !dbg !5944
  %mul48 = mul nsw i32 %48, 4, !dbg !5945
  %49 = load i32, i32* %oYstride, align 4, !dbg !5946
  %mul49 = mul nsw i32 %mul48, %49, !dbg !5947
  %idx.ext50 = sext i32 %mul49 to i64, !dbg !5948
  %add.ptr51 = getelementptr inbounds i32, i32* %cond47, i64 %idx.ext50, !dbg !5948
  %50 = load i32, i32* %bx.addr, align 4, !dbg !5949
  %mul52 = mul nsw i32 %50, 4, !dbg !5950
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !5951
  %add.ptr54 = getelementptr inbounds i32, i32* %add.ptr51, i64 %idx.ext53, !dbg !5951
  store i32* %add.ptr54, i32** %Yo, align 8, !dbg !5952
  %51 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5953
  %cur55 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %51, i32 0, i32 29, !dbg !5954
  %52 = load i32, i32* %cur55, align 8, !dbg !5954
  %tobool56 = icmp ne i32 %52, 0, !dbg !5953
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !5953

cond.true57:                                      ; preds = %cond.end46
  %53 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5955
  %V158 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %53, i32 0, i32 23, !dbg !5957
  %54 = load i32*, i32** %V158, align 8, !dbg !5957
  br label %cond.end61, !dbg !5958

cond.false59:                                     ; preds = %cond.end46
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5959
  %V260 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %55, i32 0, i32 26, !dbg !5961
  %56 = load i32*, i32** %V260, align 8, !dbg !5961
  br label %cond.end61, !dbg !5962

cond.end61:                                       ; preds = %cond.false59, %cond.true57
  %cond62 = phi i32* [ %54, %cond.true57 ], [ %56, %cond.false59 ], !dbg !5963
  %57 = load i32, i32* %by.addr, align 4, !dbg !5965
  %mul63 = mul nsw i32 %57, 2, !dbg !5966
  %58 = load i32, i32* %oVstride, align 4, !dbg !5967
  %mul64 = mul nsw i32 %mul63, %58, !dbg !5968
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !5969
  %add.ptr66 = getelementptr inbounds i32, i32* %cond62, i64 %idx.ext65, !dbg !5969
  %59 = load i32, i32* %bx.addr, align 4, !dbg !5970
  %mul67 = mul nsw i32 %59, 2, !dbg !5971
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !5972
  %add.ptr69 = getelementptr inbounds i32, i32* %add.ptr66, i64 %idx.ext68, !dbg !5972
  store i32* %add.ptr69, i32** %Vo, align 8, !dbg !5973
  %60 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5974
  %cur70 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %60, i32 0, i32 29, !dbg !5975
  %61 = load i32, i32* %cur70, align 8, !dbg !5975
  %tobool71 = icmp ne i32 %61, 0, !dbg !5974
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !5974

cond.true72:                                      ; preds = %cond.end61
  %62 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5976
  %U173 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %62, i32 0, i32 22, !dbg !5978
  %63 = load i32*, i32** %U173, align 8, !dbg !5978
  br label %cond.end76, !dbg !5979

cond.false74:                                     ; preds = %cond.end61
  %64 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !5980
  %U275 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %64, i32 0, i32 25, !dbg !5982
  %65 = load i32*, i32** %U275, align 8, !dbg !5982
  br label %cond.end76, !dbg !5983

cond.end76:                                       ; preds = %cond.false74, %cond.true72
  %cond77 = phi i32* [ %63, %cond.true72 ], [ %65, %cond.false74 ], !dbg !5984
  %66 = load i32, i32* %by.addr, align 4, !dbg !5986
  %mul78 = mul nsw i32 %66, 2, !dbg !5987
  %67 = load i32, i32* %oUstride, align 4, !dbg !5988
  %mul79 = mul nsw i32 %mul78, %67, !dbg !5989
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !5990
  %add.ptr81 = getelementptr inbounds i32, i32* %cond77, i64 %idx.ext80, !dbg !5990
  %68 = load i32, i32* %bx.addr, align 4, !dbg !5991
  %mul82 = mul nsw i32 %68, 2, !dbg !5992
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !5993
  %add.ptr84 = getelementptr inbounds i32, i32* %add.ptr81, i64 %idx.ext83, !dbg !5993
  store i32* %add.ptr84, i32** %Uo, align 8, !dbg !5994
  store i32 0, i32* %j, align 4, !dbg !5995
  br label %for.cond, !dbg !5997

for.cond:                                         ; preds = %for.inc104, %cond.end76
  %69 = load i32, i32* %j, align 4, !dbg !5998
  %cmp = icmp slt i32 %69, 2, !dbg !6001
  br i1 %cmp, label %for.body, label %for.end106, !dbg !6002

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6003
  br label %for.cond85, !dbg !6006

for.cond85:                                       ; preds = %for.inc, %for.body
  %70 = load i32, i32* %i, align 4, !dbg !6007
  %cmp86 = icmp slt i32 %70, 2, !dbg !6010
  br i1 %cmp86, label %for.body87, label %for.end, !dbg !6011

for.body87:                                       ; preds = %for.cond85
  %71 = load i32, i32* %i, align 4, !dbg !6012
  %idxprom = sext i32 %71 to i64, !dbg !6014
  %72 = load i32*, i32** %Uo, align 8, !dbg !6014
  %arrayidx = getelementptr inbounds i32, i32* %72, i64 %idxprom, !dbg !6014
  %73 = load i32, i32* %arrayidx, align 4, !dbg !6014
  %74 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6015
  %call = call i32 @GET_TOK(%struct.TM2Context* %74, i32 4), !dbg !6016
  %add = add nsw i32 %73, %call, !dbg !6017
  %75 = load i32, i32* %i, align 4, !dbg !6018
  %idxprom88 = sext i32 %75 to i64, !dbg !6019
  %76 = load i32*, i32** %U, align 8, !dbg !6019
  %arrayidx89 = getelementptr inbounds i32, i32* %76, i64 %idxprom88, !dbg !6019
  store i32 %add, i32* %arrayidx89, align 4, !dbg !6020
  %77 = load i32, i32* %i, align 4, !dbg !6021
  %idxprom90 = sext i32 %77 to i64, !dbg !6022
  %78 = load i32*, i32** %Vo, align 8, !dbg !6022
  %arrayidx91 = getelementptr inbounds i32, i32* %78, i64 %idxprom90, !dbg !6022
  %79 = load i32, i32* %arrayidx91, align 4, !dbg !6022
  %80 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6023
  %call92 = call i32 @GET_TOK(%struct.TM2Context* %80, i32 4), !dbg !6024
  %add93 = add nsw i32 %79, %call92, !dbg !6025
  %81 = load i32, i32* %i, align 4, !dbg !6026
  %idxprom94 = sext i32 %81 to i64, !dbg !6027
  %82 = load i32*, i32** %V, align 8, !dbg !6027
  %arrayidx95 = getelementptr inbounds i32, i32* %82, i64 %idxprom94, !dbg !6027
  store i32 %add93, i32* %arrayidx95, align 4, !dbg !6028
  br label %for.inc, !dbg !6029

for.inc:                                          ; preds = %for.body87
  %83 = load i32, i32* %i, align 4, !dbg !6030
  %inc = add nsw i32 %83, 1, !dbg !6030
  store i32 %inc, i32* %i, align 4, !dbg !6030
  br label %for.cond85, !dbg !6032, !llvm.loop !6033

for.end:                                          ; preds = %for.cond85
  %84 = load i32, i32* %Ustride, align 4, !dbg !6035
  %85 = load i32*, i32** %U, align 8, !dbg !6036
  %idx.ext96 = sext i32 %84 to i64, !dbg !6036
  %add.ptr97 = getelementptr inbounds i32, i32* %85, i64 %idx.ext96, !dbg !6036
  store i32* %add.ptr97, i32** %U, align 8, !dbg !6036
  %86 = load i32, i32* %Vstride, align 4, !dbg !6037
  %87 = load i32*, i32** %V, align 8, !dbg !6038
  %idx.ext98 = sext i32 %86 to i64, !dbg !6038
  %add.ptr99 = getelementptr inbounds i32, i32* %87, i64 %idx.ext98, !dbg !6038
  store i32* %add.ptr99, i32** %V, align 8, !dbg !6038
  %88 = load i32, i32* %oUstride, align 4, !dbg !6039
  %89 = load i32*, i32** %Uo, align 8, !dbg !6040
  %idx.ext100 = sext i32 %88 to i64, !dbg !6040
  %add.ptr101 = getelementptr inbounds i32, i32* %89, i64 %idx.ext100, !dbg !6040
  store i32* %add.ptr101, i32** %Uo, align 8, !dbg !6040
  %90 = load i32, i32* %oVstride, align 4, !dbg !6041
  %91 = load i32*, i32** %Vo, align 8, !dbg !6042
  %idx.ext102 = sext i32 %90 to i64, !dbg !6042
  %add.ptr103 = getelementptr inbounds i32, i32* %91, i64 %idx.ext102, !dbg !6042
  store i32* %add.ptr103, i32** %Vo, align 8, !dbg !6042
  br label %for.inc104, !dbg !6043

for.inc104:                                       ; preds = %for.end
  %92 = load i32, i32* %j, align 4, !dbg !6044
  %inc105 = add nsw i32 %92, 1, !dbg !6044
  store i32 %inc105, i32* %j, align 4, !dbg !6044
  br label %for.cond, !dbg !6046, !llvm.loop !6047

for.end106:                                       ; preds = %for.cond
  %93 = load i32, i32* %Ustride, align 4, !dbg !6049
  %mul107 = mul nsw i32 %93, 2, !dbg !6050
  %94 = load i32*, i32** %U, align 8, !dbg !6051
  %idx.ext108 = sext i32 %mul107 to i64, !dbg !6051
  %idx.neg = sub i64 0, %idx.ext108, !dbg !6051
  %add.ptr109 = getelementptr inbounds i32, i32* %94, i64 %idx.neg, !dbg !6051
  store i32* %add.ptr109, i32** %U, align 8, !dbg !6051
  %95 = load i32, i32* %Vstride, align 4, !dbg !6052
  %mul110 = mul nsw i32 %95, 2, !dbg !6053
  %96 = load i32*, i32** %V, align 8, !dbg !6054
  %idx.ext111 = sext i32 %mul110 to i64, !dbg !6054
  %idx.neg112 = sub i64 0, %idx.ext111, !dbg !6054
  %add.ptr113 = getelementptr inbounds i32, i32* %96, i64 %idx.neg112, !dbg !6054
  store i32* %add.ptr113, i32** %V, align 8, !dbg !6054
  %97 = load i32*, i32** %U, align 8, !dbg !6055
  %arrayidx114 = getelementptr inbounds i32, i32* %97, i64 1, !dbg !6055
  %98 = load i32, i32* %arrayidx114, align 4, !dbg !6055
  %99 = load i32*, i32** %clast, align 8, !dbg !6057
  %arrayidx115 = getelementptr inbounds i32, i32* %99, i64 1, !dbg !6057
  %100 = load i32, i32* %arrayidx115, align 4, !dbg !6057
  %sub = sub i32 %98, %100, !dbg !6058
  %101 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6059
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %101, i32 0, i32 12, !dbg !6060
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i64 0, i64 0, !dbg !6059
  store i32 %sub, i32* %arrayidx116, align 8, !dbg !6061
  %102 = load i32, i32* %Ustride, align 4, !dbg !6062
  %add117 = add nsw i32 %102, 1, !dbg !6063
  %idxprom118 = sext i32 %add117 to i64, !dbg !6064
  %103 = load i32*, i32** %U, align 8, !dbg !6064
  %arrayidx119 = getelementptr inbounds i32, i32* %103, i64 %idxprom118, !dbg !6064
  %104 = load i32, i32* %arrayidx119, align 4, !dbg !6064
  %105 = load i32*, i32** %U, align 8, !dbg !6065
  %arrayidx120 = getelementptr inbounds i32, i32* %105, i64 1, !dbg !6065
  %106 = load i32, i32* %arrayidx120, align 4, !dbg !6065
  %sub121 = sub i32 %104, %106, !dbg !6066
  %107 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6067
  %CD122 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %107, i32 0, i32 12, !dbg !6068
  %arrayidx123 = getelementptr inbounds [4 x i32], [4 x i32]* %CD122, i64 0, i64 1, !dbg !6067
  store i32 %sub121, i32* %arrayidx123, align 4, !dbg !6069
  %108 = load i32, i32* %Ustride, align 4, !dbg !6070
  %add124 = add nsw i32 %108, 0, !dbg !6071
  %idxprom125 = sext i32 %add124 to i64, !dbg !6072
  %109 = load i32*, i32** %U, align 8, !dbg !6072
  %arrayidx126 = getelementptr inbounds i32, i32* %109, i64 %idxprom125, !dbg !6072
  %110 = load i32, i32* %arrayidx126, align 4, !dbg !6072
  %111 = load i32*, i32** %clast, align 8, !dbg !6073
  %arrayidx127 = getelementptr inbounds i32, i32* %111, i64 0, !dbg !6073
  store i32 %110, i32* %arrayidx127, align 4, !dbg !6074
  %112 = load i32, i32* %Ustride, align 4, !dbg !6075
  %add128 = add nsw i32 %112, 1, !dbg !6076
  %idxprom129 = sext i32 %add128 to i64, !dbg !6077
  %113 = load i32*, i32** %U, align 8, !dbg !6077
  %arrayidx130 = getelementptr inbounds i32, i32* %113, i64 %idxprom129, !dbg !6077
  %114 = load i32, i32* %arrayidx130, align 4, !dbg !6077
  %115 = load i32*, i32** %clast, align 8, !dbg !6078
  %arrayidx131 = getelementptr inbounds i32, i32* %115, i64 1, !dbg !6078
  store i32 %114, i32* %arrayidx131, align 4, !dbg !6079
  %116 = load i32*, i32** %V, align 8, !dbg !6080
  %arrayidx132 = getelementptr inbounds i32, i32* %116, i64 1, !dbg !6080
  %117 = load i32, i32* %arrayidx132, align 4, !dbg !6080
  %118 = load i32*, i32** %clast, align 8, !dbg !6082
  %add.ptr133 = getelementptr inbounds i32, i32* %118, i64 2, !dbg !6083
  %arrayidx134 = getelementptr inbounds i32, i32* %add.ptr133, i64 1, !dbg !6084
  %119 = load i32, i32* %arrayidx134, align 4, !dbg !6084
  %sub135 = sub i32 %117, %119, !dbg !6085
  %120 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6086
  %CD136 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %120, i32 0, i32 12, !dbg !6087
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD136, i32 0, i32 0, !dbg !6086
  %add.ptr137 = getelementptr inbounds i32, i32* %arraydecay, i64 2, !dbg !6088
  %arrayidx138 = getelementptr inbounds i32, i32* %add.ptr137, i64 0, !dbg !6089
  store i32 %sub135, i32* %arrayidx138, align 4, !dbg !6090
  %121 = load i32, i32* %Vstride, align 4, !dbg !6091
  %add139 = add nsw i32 %121, 1, !dbg !6092
  %idxprom140 = sext i32 %add139 to i64, !dbg !6093
  %122 = load i32*, i32** %V, align 8, !dbg !6093
  %arrayidx141 = getelementptr inbounds i32, i32* %122, i64 %idxprom140, !dbg !6093
  %123 = load i32, i32* %arrayidx141, align 4, !dbg !6093
  %124 = load i32*, i32** %V, align 8, !dbg !6094
  %arrayidx142 = getelementptr inbounds i32, i32* %124, i64 1, !dbg !6094
  %125 = load i32, i32* %arrayidx142, align 4, !dbg !6094
  %sub143 = sub i32 %123, %125, !dbg !6095
  %126 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6096
  %CD144 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %126, i32 0, i32 12, !dbg !6097
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %CD144, i32 0, i32 0, !dbg !6096
  %add.ptr146 = getelementptr inbounds i32, i32* %arraydecay145, i64 2, !dbg !6098
  %arrayidx147 = getelementptr inbounds i32, i32* %add.ptr146, i64 1, !dbg !6099
  store i32 %sub143, i32* %arrayidx147, align 4, !dbg !6100
  %127 = load i32, i32* %Vstride, align 4, !dbg !6101
  %add148 = add nsw i32 %127, 0, !dbg !6102
  %idxprom149 = sext i32 %add148 to i64, !dbg !6103
  %128 = load i32*, i32** %V, align 8, !dbg !6103
  %arrayidx150 = getelementptr inbounds i32, i32* %128, i64 %idxprom149, !dbg !6103
  %129 = load i32, i32* %arrayidx150, align 4, !dbg !6103
  %130 = load i32*, i32** %clast, align 8, !dbg !6104
  %add.ptr151 = getelementptr inbounds i32, i32* %130, i64 2, !dbg !6105
  %arrayidx152 = getelementptr inbounds i32, i32* %add.ptr151, i64 0, !dbg !6106
  store i32 %129, i32* %arrayidx152, align 4, !dbg !6107
  %131 = load i32, i32* %Vstride, align 4, !dbg !6108
  %add153 = add nsw i32 %131, 1, !dbg !6109
  %idxprom154 = sext i32 %add153 to i64, !dbg !6110
  %132 = load i32*, i32** %V, align 8, !dbg !6110
  %arrayidx155 = getelementptr inbounds i32, i32* %132, i64 %idxprom154, !dbg !6110
  %133 = load i32, i32* %arrayidx155, align 4, !dbg !6110
  %134 = load i32*, i32** %clast, align 8, !dbg !6111
  %add.ptr156 = getelementptr inbounds i32, i32* %134, i64 2, !dbg !6112
  %arrayidx157 = getelementptr inbounds i32, i32* %add.ptr156, i64 1, !dbg !6113
  store i32 %133, i32* %arrayidx157, align 4, !dbg !6114
  %135 = load i32*, i32** %Yo, align 8, !dbg !6115
  %arrayidx158 = getelementptr inbounds i32, i32* %135, i64 3, !dbg !6115
  %136 = load i32, i32* %arrayidx158, align 4, !dbg !6115
  %137 = load i32*, i32** %last, align 8, !dbg !6116
  %arrayidx159 = getelementptr inbounds i32, i32* %137, i64 3, !dbg !6116
  %138 = load i32, i32* %arrayidx159, align 4, !dbg !6116
  %sub160 = sub nsw i32 %136, %138, !dbg !6117
  %139 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6118
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %139, i32 0, i32 11, !dbg !6119
  %arrayidx161 = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 0, !dbg !6118
  store i32 %sub160, i32* %arrayidx161, align 8, !dbg !6120
  %140 = load i32, i32* %oYstride, align 4, !dbg !6121
  %add162 = add nsw i32 3, %140, !dbg !6122
  %idxprom163 = sext i32 %add162 to i64, !dbg !6123
  %141 = load i32*, i32** %Yo, align 8, !dbg !6123
  %arrayidx164 = getelementptr inbounds i32, i32* %141, i64 %idxprom163, !dbg !6123
  %142 = load i32, i32* %arrayidx164, align 4, !dbg !6123
  %143 = load i32*, i32** %Yo, align 8, !dbg !6124
  %arrayidx165 = getelementptr inbounds i32, i32* %143, i64 3, !dbg !6124
  %144 = load i32, i32* %arrayidx165, align 4, !dbg !6124
  %sub166 = sub nsw i32 %142, %144, !dbg !6125
  %145 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6126
  %D167 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %145, i32 0, i32 11, !dbg !6127
  %arrayidx168 = getelementptr inbounds [4 x i32], [4 x i32]* %D167, i64 0, i64 1, !dbg !6126
  store i32 %sub166, i32* %arrayidx168, align 4, !dbg !6128
  %146 = load i32, i32* %oYstride, align 4, !dbg !6129
  %mul169 = mul nsw i32 %146, 2, !dbg !6130
  %add170 = add nsw i32 3, %mul169, !dbg !6131
  %idxprom171 = sext i32 %add170 to i64, !dbg !6132
  %147 = load i32*, i32** %Yo, align 8, !dbg !6132
  %arrayidx172 = getelementptr inbounds i32, i32* %147, i64 %idxprom171, !dbg !6132
  %148 = load i32, i32* %arrayidx172, align 4, !dbg !6132
  %149 = load i32, i32* %oYstride, align 4, !dbg !6133
  %add173 = add nsw i32 3, %149, !dbg !6134
  %idxprom174 = sext i32 %add173 to i64, !dbg !6135
  %150 = load i32*, i32** %Yo, align 8, !dbg !6135
  %arrayidx175 = getelementptr inbounds i32, i32* %150, i64 %idxprom174, !dbg !6135
  %151 = load i32, i32* %arrayidx175, align 4, !dbg !6135
  %sub176 = sub nsw i32 %148, %151, !dbg !6136
  %152 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6137
  %D177 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %152, i32 0, i32 11, !dbg !6138
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %D177, i64 0, i64 2, !dbg !6137
  store i32 %sub176, i32* %arrayidx178, align 8, !dbg !6139
  %153 = load i32, i32* %oYstride, align 4, !dbg !6140
  %mul179 = mul nsw i32 %153, 3, !dbg !6141
  %add180 = add nsw i32 3, %mul179, !dbg !6142
  %idxprom181 = sext i32 %add180 to i64, !dbg !6143
  %154 = load i32*, i32** %Yo, align 8, !dbg !6143
  %arrayidx182 = getelementptr inbounds i32, i32* %154, i64 %idxprom181, !dbg !6143
  %155 = load i32, i32* %arrayidx182, align 4, !dbg !6143
  %156 = load i32, i32* %oYstride, align 4, !dbg !6144
  %mul183 = mul nsw i32 %156, 2, !dbg !6145
  %add184 = add nsw i32 3, %mul183, !dbg !6146
  %idxprom185 = sext i32 %add184 to i64, !dbg !6147
  %157 = load i32*, i32** %Yo, align 8, !dbg !6147
  %arrayidx186 = getelementptr inbounds i32, i32* %157, i64 %idxprom185, !dbg !6147
  %158 = load i32, i32* %arrayidx186, align 4, !dbg !6147
  %sub187 = sub nsw i32 %155, %158, !dbg !6148
  %159 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6149
  %D188 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %159, i32 0, i32 11, !dbg !6150
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %D188, i64 0, i64 3, !dbg !6149
  store i32 %sub187, i32* %arrayidx189, align 4, !dbg !6151
  store i32 0, i32* %j, align 4, !dbg !6152
  br label %for.cond190, !dbg !6154

for.cond190:                                      ; preds = %for.inc219, %for.end106
  %160 = load i32, i32* %j, align 4, !dbg !6155
  %cmp191 = icmp slt i32 %160, 4, !dbg !6158
  br i1 %cmp191, label %for.body192, label %for.end221, !dbg !6159

for.body192:                                      ; preds = %for.cond190
  %161 = load i32*, i32** %last, align 8, !dbg !6160
  %arrayidx193 = getelementptr inbounds i32, i32* %161, i64 3, !dbg !6160
  %162 = load i32, i32* %arrayidx193, align 4, !dbg !6160
  store i32 %162, i32* %d, align 4, !dbg !6162
  store i32 0, i32* %i, align 4, !dbg !6163
  br label %for.cond194, !dbg !6165

for.cond194:                                      ; preds = %for.inc207, %for.body192
  %163 = load i32, i32* %i, align 4, !dbg !6166
  %cmp195 = icmp slt i32 %163, 4, !dbg !6169
  br i1 %cmp195, label %for.body196, label %for.end209, !dbg !6170

for.body196:                                      ; preds = %for.cond194
  %164 = load i32, i32* %i, align 4, !dbg !6171
  %idxprom197 = sext i32 %164 to i64, !dbg !6173
  %165 = load i32*, i32** %Yo, align 8, !dbg !6173
  %arrayidx198 = getelementptr inbounds i32, i32* %165, i64 %idxprom197, !dbg !6173
  %166 = load i32, i32* %arrayidx198, align 4, !dbg !6173
  %167 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6174
  %call199 = call i32 @GET_TOK(%struct.TM2Context* %167, i32 4), !dbg !6175
  %add200 = add nsw i32 %166, %call199, !dbg !6176
  %168 = load i32, i32* %i, align 4, !dbg !6177
  %idxprom201 = sext i32 %168 to i64, !dbg !6178
  %169 = load i32*, i32** %Y, align 8, !dbg !6178
  %arrayidx202 = getelementptr inbounds i32, i32* %169, i64 %idxprom201, !dbg !6178
  store i32 %add200, i32* %arrayidx202, align 4, !dbg !6179
  %170 = load i32, i32* %i, align 4, !dbg !6180
  %idxprom203 = sext i32 %170 to i64, !dbg !6181
  %171 = load i32*, i32** %Y, align 8, !dbg !6181
  %arrayidx204 = getelementptr inbounds i32, i32* %171, i64 %idxprom203, !dbg !6181
  %172 = load i32, i32* %arrayidx204, align 4, !dbg !6181
  %173 = load i32, i32* %i, align 4, !dbg !6182
  %idxprom205 = sext i32 %173 to i64, !dbg !6183
  %174 = load i32*, i32** %last, align 8, !dbg !6183
  %arrayidx206 = getelementptr inbounds i32, i32* %174, i64 %idxprom205, !dbg !6183
  store i32 %172, i32* %arrayidx206, align 4, !dbg !6184
  br label %for.inc207, !dbg !6185

for.inc207:                                       ; preds = %for.body196
  %175 = load i32, i32* %i, align 4, !dbg !6186
  %inc208 = add nsw i32 %175, 1, !dbg !6186
  store i32 %inc208, i32* %i, align 4, !dbg !6186
  br label %for.cond194, !dbg !6188, !llvm.loop !6189

for.end209:                                       ; preds = %for.cond194
  %176 = load i32*, i32** %last, align 8, !dbg !6191
  %arrayidx210 = getelementptr inbounds i32, i32* %176, i64 3, !dbg !6191
  %177 = load i32, i32* %arrayidx210, align 4, !dbg !6191
  %178 = load i32, i32* %d, align 4, !dbg !6192
  %sub211 = sub nsw i32 %177, %178, !dbg !6193
  %179 = load i32, i32* %j, align 4, !dbg !6194
  %idxprom212 = sext i32 %179 to i64, !dbg !6195
  %180 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6195
  %D213 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %180, i32 0, i32 11, !dbg !6196
  %arrayidx214 = getelementptr inbounds [4 x i32], [4 x i32]* %D213, i64 0, i64 %idxprom212, !dbg !6195
  store i32 %sub211, i32* %arrayidx214, align 4, !dbg !6197
  %181 = load i32, i32* %Ystride, align 4, !dbg !6198
  %182 = load i32*, i32** %Y, align 8, !dbg !6199
  %idx.ext215 = sext i32 %181 to i64, !dbg !6199
  %add.ptr216 = getelementptr inbounds i32, i32* %182, i64 %idx.ext215, !dbg !6199
  store i32* %add.ptr216, i32** %Y, align 8, !dbg !6199
  %183 = load i32, i32* %oYstride, align 4, !dbg !6200
  %184 = load i32*, i32** %Yo, align 8, !dbg !6201
  %idx.ext217 = sext i32 %183 to i64, !dbg !6201
  %add.ptr218 = getelementptr inbounds i32, i32* %184, i64 %idx.ext217, !dbg !6201
  store i32* %add.ptr218, i32** %Yo, align 8, !dbg !6201
  br label %for.inc219, !dbg !6202

for.inc219:                                       ; preds = %for.end209
  %185 = load i32, i32* %j, align 4, !dbg !6203
  %inc220 = add nsw i32 %185, 1, !dbg !6203
  store i32 %inc220, i32* %j, align 4, !dbg !6203
  br label %for.cond190, !dbg !6205, !llvm.loop !6206

for.end221:                                       ; preds = %for.cond190
  ret void, !dbg !6208
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_still_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !6209 {
entry:
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %Yo = alloca i32*, align 8
  %Uo = alloca i32*, align 8
  %Vo = alloca i32*, align 8
  %oYstride = alloca i32, align 4
  %oUstride = alloca i32, align 4
  %oVstride = alloca i32, align 4
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !6210, metadata !1653), !dbg !6211
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !6212, metadata !1653), !dbg !6213
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !6214, metadata !1653), !dbg !6215
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !6216, metadata !1653), !dbg !6217
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6218, metadata !1653), !dbg !6219
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6220, metadata !1653), !dbg !6221
  call void @llvm.dbg.declare(metadata i32** %Yo, metadata !6222, metadata !1653), !dbg !6223
  call void @llvm.dbg.declare(metadata i32** %Uo, metadata !6224, metadata !1653), !dbg !6225
  call void @llvm.dbg.declare(metadata i32** %Vo, metadata !6226, metadata !1653), !dbg !6227
  call void @llvm.dbg.declare(metadata i32* %oYstride, metadata !6228, metadata !1653), !dbg !6229
  call void @llvm.dbg.declare(metadata i32* %oUstride, metadata !6230, metadata !1653), !dbg !6231
  call void @llvm.dbg.declare(metadata i32* %oVstride, metadata !6232, metadata !1653), !dbg !6233
  call void @llvm.dbg.declare(metadata i32** %last, metadata !6234, metadata !1653), !dbg !6235
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !6236, metadata !1653), !dbg !6237
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !6238, metadata !1653), !dbg !6239
  call void @llvm.dbg.declare(metadata i32** %U, metadata !6240, metadata !1653), !dbg !6241
  call void @llvm.dbg.declare(metadata i32** %V, metadata !6242, metadata !1653), !dbg !6243
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !6244, metadata !1653), !dbg !6245
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !6246, metadata !1653), !dbg !6247
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !6248, metadata !1653), !dbg !6249
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6250
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !6251
  %1 = load i32, i32* %y_stride, align 8, !dbg !6251
  store i32 %1, i32* %Ystride, align 4, !dbg !6252
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6253
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !6254
  %3 = load i32, i32* %uv_stride, align 4, !dbg !6254
  store i32 %3, i32* %Vstride, align 4, !dbg !6255
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6256
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !6257
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !6257
  store i32 %5, i32* %Ustride, align 4, !dbg !6258
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6259
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !6260
  %7 = load i32, i32* %cur, align 8, !dbg !6260
  %tobool = icmp ne i32 %7, 0, !dbg !6259
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6259

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6261
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !6263
  %9 = load i32*, i32** %Y2, align 8, !dbg !6263
  br label %cond.end, !dbg !6264

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6265
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !6267
  %11 = load i32*, i32** %Y1, align 8, !dbg !6267
  br label %cond.end, !dbg !6268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !6269
  %12 = load i32, i32* %by.addr, align 4, !dbg !6271
  %mul = mul nsw i32 %12, 4, !dbg !6272
  %13 = load i32, i32* %Ystride, align 4, !dbg !6273
  %mul2 = mul nsw i32 %mul, %13, !dbg !6274
  %idx.ext = sext i32 %mul2 to i64, !dbg !6275
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !6275
  %14 = load i32, i32* %bx.addr, align 4, !dbg !6276
  %mul3 = mul nsw i32 %14, 4, !dbg !6277
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !6278
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !6278
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !6279
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6280
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !6281
  %16 = load i32, i32* %cur6, align 8, !dbg !6281
  %tobool7 = icmp ne i32 %16, 0, !dbg !6280
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !6280

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6282
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !6284
  %18 = load i32*, i32** %V2, align 8, !dbg !6284
  br label %cond.end10, !dbg !6285

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6286
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !6288
  %20 = load i32*, i32** %V1, align 8, !dbg !6288
  br label %cond.end10, !dbg !6289

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !6290
  %21 = load i32, i32* %by.addr, align 4, !dbg !6292
  %mul12 = mul nsw i32 %21, 2, !dbg !6293
  %22 = load i32, i32* %Vstride, align 4, !dbg !6294
  %mul13 = mul nsw i32 %mul12, %22, !dbg !6295
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !6296
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !6296
  %23 = load i32, i32* %bx.addr, align 4, !dbg !6297
  %mul16 = mul nsw i32 %23, 2, !dbg !6298
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !6299
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !6299
  store i32* %add.ptr18, i32** %V, align 8, !dbg !6300
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6301
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !6302
  %25 = load i32, i32* %cur19, align 8, !dbg !6302
  %tobool20 = icmp ne i32 %25, 0, !dbg !6301
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6301

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6303
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !6305
  %27 = load i32*, i32** %U2, align 8, !dbg !6305
  br label %cond.end23, !dbg !6306

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6307
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !6309
  %29 = load i32*, i32** %U1, align 8, !dbg !6309
  br label %cond.end23, !dbg !6310

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !6311
  %30 = load i32, i32* %by.addr, align 4, !dbg !6313
  %mul25 = mul nsw i32 %30, 2, !dbg !6314
  %31 = load i32, i32* %Ustride, align 4, !dbg !6315
  %mul26 = mul nsw i32 %mul25, %31, !dbg !6316
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !6317
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !6317
  %32 = load i32, i32* %bx.addr, align 4, !dbg !6318
  %mul29 = mul nsw i32 %32, 2, !dbg !6319
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !6320
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !6320
  store i32* %add.ptr31, i32** %U, align 8, !dbg !6321
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6322
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !6323
  %34 = load i32*, i32** %last32, align 8, !dbg !6323
  %35 = load i32, i32* %bx.addr, align 4, !dbg !6324
  %mul33 = mul nsw i32 %35, 4, !dbg !6325
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !6326
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !6326
  store i32* %add.ptr35, i32** %last, align 8, !dbg !6327
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6328
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !6329
  %37 = load i32*, i32** %clast36, align 8, !dbg !6329
  %38 = load i32, i32* %bx.addr, align 4, !dbg !6330
  %mul37 = mul nsw i32 %38, 4, !dbg !6331
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !6332
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !6332
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !6333
  %39 = load i32, i32* %Ystride, align 4, !dbg !6334
  store i32 %39, i32* %oYstride, align 4, !dbg !6335
  %40 = load i32, i32* %Vstride, align 4, !dbg !6336
  store i32 %40, i32* %oVstride, align 4, !dbg !6337
  %41 = load i32, i32* %Ustride, align 4, !dbg !6338
  store i32 %41, i32* %oUstride, align 4, !dbg !6339
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6340
  %cur40 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %42, i32 0, i32 29, !dbg !6341
  %43 = load i32, i32* %cur40, align 8, !dbg !6341
  %tobool41 = icmp ne i32 %43, 0, !dbg !6340
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !6340

cond.true42:                                      ; preds = %cond.end23
  %44 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6342
  %Y143 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %44, i32 0, i32 21, !dbg !6344
  %45 = load i32*, i32** %Y143, align 8, !dbg !6344
  br label %cond.end46, !dbg !6345

cond.false44:                                     ; preds = %cond.end23
  %46 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6346
  %Y245 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %46, i32 0, i32 24, !dbg !6348
  %47 = load i32*, i32** %Y245, align 8, !dbg !6348
  br label %cond.end46, !dbg !6349

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i32* [ %45, %cond.true42 ], [ %47, %cond.false44 ], !dbg !6350
  %48 = load i32, i32* %by.addr, align 4, !dbg !6352
  %mul48 = mul nsw i32 %48, 4, !dbg !6353
  %49 = load i32, i32* %oYstride, align 4, !dbg !6354
  %mul49 = mul nsw i32 %mul48, %49, !dbg !6355
  %idx.ext50 = sext i32 %mul49 to i64, !dbg !6356
  %add.ptr51 = getelementptr inbounds i32, i32* %cond47, i64 %idx.ext50, !dbg !6356
  %50 = load i32, i32* %bx.addr, align 4, !dbg !6357
  %mul52 = mul nsw i32 %50, 4, !dbg !6358
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !6359
  %add.ptr54 = getelementptr inbounds i32, i32* %add.ptr51, i64 %idx.ext53, !dbg !6359
  store i32* %add.ptr54, i32** %Yo, align 8, !dbg !6360
  %51 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6361
  %cur55 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %51, i32 0, i32 29, !dbg !6362
  %52 = load i32, i32* %cur55, align 8, !dbg !6362
  %tobool56 = icmp ne i32 %52, 0, !dbg !6361
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !6361

cond.true57:                                      ; preds = %cond.end46
  %53 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6363
  %V158 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %53, i32 0, i32 23, !dbg !6365
  %54 = load i32*, i32** %V158, align 8, !dbg !6365
  br label %cond.end61, !dbg !6366

cond.false59:                                     ; preds = %cond.end46
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6367
  %V260 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %55, i32 0, i32 26, !dbg !6369
  %56 = load i32*, i32** %V260, align 8, !dbg !6369
  br label %cond.end61, !dbg !6370

cond.end61:                                       ; preds = %cond.false59, %cond.true57
  %cond62 = phi i32* [ %54, %cond.true57 ], [ %56, %cond.false59 ], !dbg !6371
  %57 = load i32, i32* %by.addr, align 4, !dbg !6373
  %mul63 = mul nsw i32 %57, 2, !dbg !6374
  %58 = load i32, i32* %oVstride, align 4, !dbg !6375
  %mul64 = mul nsw i32 %mul63, %58, !dbg !6376
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !6377
  %add.ptr66 = getelementptr inbounds i32, i32* %cond62, i64 %idx.ext65, !dbg !6377
  %59 = load i32, i32* %bx.addr, align 4, !dbg !6378
  %mul67 = mul nsw i32 %59, 2, !dbg !6379
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !6380
  %add.ptr69 = getelementptr inbounds i32, i32* %add.ptr66, i64 %idx.ext68, !dbg !6380
  store i32* %add.ptr69, i32** %Vo, align 8, !dbg !6381
  %60 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6382
  %cur70 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %60, i32 0, i32 29, !dbg !6383
  %61 = load i32, i32* %cur70, align 8, !dbg !6383
  %tobool71 = icmp ne i32 %61, 0, !dbg !6382
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !6382

cond.true72:                                      ; preds = %cond.end61
  %62 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6384
  %U173 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %62, i32 0, i32 22, !dbg !6386
  %63 = load i32*, i32** %U173, align 8, !dbg !6386
  br label %cond.end76, !dbg !6387

cond.false74:                                     ; preds = %cond.end61
  %64 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6388
  %U275 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %64, i32 0, i32 25, !dbg !6390
  %65 = load i32*, i32** %U275, align 8, !dbg !6390
  br label %cond.end76, !dbg !6391

cond.end76:                                       ; preds = %cond.false74, %cond.true72
  %cond77 = phi i32* [ %63, %cond.true72 ], [ %65, %cond.false74 ], !dbg !6392
  %66 = load i32, i32* %by.addr, align 4, !dbg !6394
  %mul78 = mul nsw i32 %66, 2, !dbg !6395
  %67 = load i32, i32* %oUstride, align 4, !dbg !6396
  %mul79 = mul nsw i32 %mul78, %67, !dbg !6397
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !6398
  %add.ptr81 = getelementptr inbounds i32, i32* %cond77, i64 %idx.ext80, !dbg !6398
  %68 = load i32, i32* %bx.addr, align 4, !dbg !6399
  %mul82 = mul nsw i32 %68, 2, !dbg !6400
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !6401
  %add.ptr84 = getelementptr inbounds i32, i32* %add.ptr81, i64 %idx.ext83, !dbg !6401
  store i32* %add.ptr84, i32** %Uo, align 8, !dbg !6402
  store i32 0, i32* %j, align 4, !dbg !6403
  br label %for.cond, !dbg !6405

for.cond:                                         ; preds = %for.inc102, %cond.end76
  %69 = load i32, i32* %j, align 4, !dbg !6406
  %cmp = icmp slt i32 %69, 2, !dbg !6409
  br i1 %cmp, label %for.body, label %for.end104, !dbg !6410

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6411
  br label %for.cond85, !dbg !6414

for.cond85:                                       ; preds = %for.inc, %for.body
  %70 = load i32, i32* %i, align 4, !dbg !6415
  %cmp86 = icmp slt i32 %70, 2, !dbg !6418
  br i1 %cmp86, label %for.body87, label %for.end, !dbg !6419

for.body87:                                       ; preds = %for.cond85
  %71 = load i32, i32* %i, align 4, !dbg !6420
  %idxprom = sext i32 %71 to i64, !dbg !6422
  %72 = load i32*, i32** %Uo, align 8, !dbg !6422
  %arrayidx = getelementptr inbounds i32, i32* %72, i64 %idxprom, !dbg !6422
  %73 = load i32, i32* %arrayidx, align 4, !dbg !6422
  %74 = load i32, i32* %i, align 4, !dbg !6423
  %idxprom88 = sext i32 %74 to i64, !dbg !6424
  %75 = load i32*, i32** %U, align 8, !dbg !6424
  %arrayidx89 = getelementptr inbounds i32, i32* %75, i64 %idxprom88, !dbg !6424
  store i32 %73, i32* %arrayidx89, align 4, !dbg !6425
  %76 = load i32, i32* %i, align 4, !dbg !6426
  %idxprom90 = sext i32 %76 to i64, !dbg !6427
  %77 = load i32*, i32** %Vo, align 8, !dbg !6427
  %arrayidx91 = getelementptr inbounds i32, i32* %77, i64 %idxprom90, !dbg !6427
  %78 = load i32, i32* %arrayidx91, align 4, !dbg !6427
  %79 = load i32, i32* %i, align 4, !dbg !6428
  %idxprom92 = sext i32 %79 to i64, !dbg !6429
  %80 = load i32*, i32** %V, align 8, !dbg !6429
  %arrayidx93 = getelementptr inbounds i32, i32* %80, i64 %idxprom92, !dbg !6429
  store i32 %78, i32* %arrayidx93, align 4, !dbg !6430
  br label %for.inc, !dbg !6431

for.inc:                                          ; preds = %for.body87
  %81 = load i32, i32* %i, align 4, !dbg !6432
  %inc = add nsw i32 %81, 1, !dbg !6432
  store i32 %inc, i32* %i, align 4, !dbg !6432
  br label %for.cond85, !dbg !6434, !llvm.loop !6435

for.end:                                          ; preds = %for.cond85
  %82 = load i32, i32* %Ustride, align 4, !dbg !6437
  %83 = load i32*, i32** %U, align 8, !dbg !6438
  %idx.ext94 = sext i32 %82 to i64, !dbg !6438
  %add.ptr95 = getelementptr inbounds i32, i32* %83, i64 %idx.ext94, !dbg !6438
  store i32* %add.ptr95, i32** %U, align 8, !dbg !6438
  %84 = load i32, i32* %Vstride, align 4, !dbg !6439
  %85 = load i32*, i32** %V, align 8, !dbg !6440
  %idx.ext96 = sext i32 %84 to i64, !dbg !6440
  %add.ptr97 = getelementptr inbounds i32, i32* %85, i64 %idx.ext96, !dbg !6440
  store i32* %add.ptr97, i32** %V, align 8, !dbg !6440
  %86 = load i32, i32* %oUstride, align 4, !dbg !6441
  %87 = load i32*, i32** %Uo, align 8, !dbg !6442
  %idx.ext98 = sext i32 %86 to i64, !dbg !6442
  %add.ptr99 = getelementptr inbounds i32, i32* %87, i64 %idx.ext98, !dbg !6442
  store i32* %add.ptr99, i32** %Uo, align 8, !dbg !6442
  %88 = load i32, i32* %oVstride, align 4, !dbg !6443
  %89 = load i32*, i32** %Vo, align 8, !dbg !6444
  %idx.ext100 = sext i32 %88 to i64, !dbg !6444
  %add.ptr101 = getelementptr inbounds i32, i32* %89, i64 %idx.ext100, !dbg !6444
  store i32* %add.ptr101, i32** %Vo, align 8, !dbg !6444
  br label %for.inc102, !dbg !6445

for.inc102:                                       ; preds = %for.end
  %90 = load i32, i32* %j, align 4, !dbg !6446
  %inc103 = add nsw i32 %90, 1, !dbg !6446
  store i32 %inc103, i32* %j, align 4, !dbg !6446
  br label %for.cond, !dbg !6448, !llvm.loop !6449

for.end104:                                       ; preds = %for.cond
  %91 = load i32, i32* %Ustride, align 4, !dbg !6451
  %mul105 = mul nsw i32 %91, 2, !dbg !6452
  %92 = load i32*, i32** %U, align 8, !dbg !6453
  %idx.ext106 = sext i32 %mul105 to i64, !dbg !6453
  %idx.neg = sub i64 0, %idx.ext106, !dbg !6453
  %add.ptr107 = getelementptr inbounds i32, i32* %92, i64 %idx.neg, !dbg !6453
  store i32* %add.ptr107, i32** %U, align 8, !dbg !6453
  %93 = load i32, i32* %Vstride, align 4, !dbg !6454
  %mul108 = mul nsw i32 %93, 2, !dbg !6455
  %94 = load i32*, i32** %V, align 8, !dbg !6456
  %idx.ext109 = sext i32 %mul108 to i64, !dbg !6456
  %idx.neg110 = sub i64 0, %idx.ext109, !dbg !6456
  %add.ptr111 = getelementptr inbounds i32, i32* %94, i64 %idx.neg110, !dbg !6456
  store i32* %add.ptr111, i32** %V, align 8, !dbg !6456
  %95 = load i32*, i32** %U, align 8, !dbg !6457
  %arrayidx112 = getelementptr inbounds i32, i32* %95, i64 1, !dbg !6457
  %96 = load i32, i32* %arrayidx112, align 4, !dbg !6457
  %97 = load i32*, i32** %clast, align 8, !dbg !6459
  %arrayidx113 = getelementptr inbounds i32, i32* %97, i64 1, !dbg !6459
  %98 = load i32, i32* %arrayidx113, align 4, !dbg !6459
  %sub = sub i32 %96, %98, !dbg !6460
  %99 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6461
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %99, i32 0, i32 12, !dbg !6462
  %arrayidx114 = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i64 0, i64 0, !dbg !6461
  store i32 %sub, i32* %arrayidx114, align 8, !dbg !6463
  %100 = load i32, i32* %Ustride, align 4, !dbg !6464
  %add = add nsw i32 %100, 1, !dbg !6465
  %idxprom115 = sext i32 %add to i64, !dbg !6466
  %101 = load i32*, i32** %U, align 8, !dbg !6466
  %arrayidx116 = getelementptr inbounds i32, i32* %101, i64 %idxprom115, !dbg !6466
  %102 = load i32, i32* %arrayidx116, align 4, !dbg !6466
  %103 = load i32*, i32** %U, align 8, !dbg !6467
  %arrayidx117 = getelementptr inbounds i32, i32* %103, i64 1, !dbg !6467
  %104 = load i32, i32* %arrayidx117, align 4, !dbg !6467
  %sub118 = sub i32 %102, %104, !dbg !6468
  %105 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6469
  %CD119 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %105, i32 0, i32 12, !dbg !6470
  %arrayidx120 = getelementptr inbounds [4 x i32], [4 x i32]* %CD119, i64 0, i64 1, !dbg !6469
  store i32 %sub118, i32* %arrayidx120, align 4, !dbg !6471
  %106 = load i32, i32* %Ustride, align 4, !dbg !6472
  %add121 = add nsw i32 %106, 0, !dbg !6473
  %idxprom122 = sext i32 %add121 to i64, !dbg !6474
  %107 = load i32*, i32** %U, align 8, !dbg !6474
  %arrayidx123 = getelementptr inbounds i32, i32* %107, i64 %idxprom122, !dbg !6474
  %108 = load i32, i32* %arrayidx123, align 4, !dbg !6474
  %109 = load i32*, i32** %clast, align 8, !dbg !6475
  %arrayidx124 = getelementptr inbounds i32, i32* %109, i64 0, !dbg !6475
  store i32 %108, i32* %arrayidx124, align 4, !dbg !6476
  %110 = load i32, i32* %Ustride, align 4, !dbg !6477
  %add125 = add nsw i32 %110, 1, !dbg !6478
  %idxprom126 = sext i32 %add125 to i64, !dbg !6479
  %111 = load i32*, i32** %U, align 8, !dbg !6479
  %arrayidx127 = getelementptr inbounds i32, i32* %111, i64 %idxprom126, !dbg !6479
  %112 = load i32, i32* %arrayidx127, align 4, !dbg !6479
  %113 = load i32*, i32** %clast, align 8, !dbg !6480
  %arrayidx128 = getelementptr inbounds i32, i32* %113, i64 1, !dbg !6480
  store i32 %112, i32* %arrayidx128, align 4, !dbg !6481
  %114 = load i32*, i32** %V, align 8, !dbg !6482
  %arrayidx129 = getelementptr inbounds i32, i32* %114, i64 1, !dbg !6482
  %115 = load i32, i32* %arrayidx129, align 4, !dbg !6482
  %116 = load i32*, i32** %clast, align 8, !dbg !6484
  %add.ptr130 = getelementptr inbounds i32, i32* %116, i64 2, !dbg !6485
  %arrayidx131 = getelementptr inbounds i32, i32* %add.ptr130, i64 1, !dbg !6486
  %117 = load i32, i32* %arrayidx131, align 4, !dbg !6486
  %sub132 = sub i32 %115, %117, !dbg !6487
  %118 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6488
  %CD133 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %118, i32 0, i32 12, !dbg !6489
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD133, i32 0, i32 0, !dbg !6488
  %add.ptr134 = getelementptr inbounds i32, i32* %arraydecay, i64 2, !dbg !6490
  %arrayidx135 = getelementptr inbounds i32, i32* %add.ptr134, i64 0, !dbg !6491
  store i32 %sub132, i32* %arrayidx135, align 4, !dbg !6492
  %119 = load i32, i32* %Vstride, align 4, !dbg !6493
  %add136 = add nsw i32 %119, 1, !dbg !6494
  %idxprom137 = sext i32 %add136 to i64, !dbg !6495
  %120 = load i32*, i32** %V, align 8, !dbg !6495
  %arrayidx138 = getelementptr inbounds i32, i32* %120, i64 %idxprom137, !dbg !6495
  %121 = load i32, i32* %arrayidx138, align 4, !dbg !6495
  %122 = load i32*, i32** %V, align 8, !dbg !6496
  %arrayidx139 = getelementptr inbounds i32, i32* %122, i64 1, !dbg !6496
  %123 = load i32, i32* %arrayidx139, align 4, !dbg !6496
  %sub140 = sub i32 %121, %123, !dbg !6497
  %124 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6498
  %CD141 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %124, i32 0, i32 12, !dbg !6499
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %CD141, i32 0, i32 0, !dbg !6498
  %add.ptr143 = getelementptr inbounds i32, i32* %arraydecay142, i64 2, !dbg !6500
  %arrayidx144 = getelementptr inbounds i32, i32* %add.ptr143, i64 1, !dbg !6501
  store i32 %sub140, i32* %arrayidx144, align 4, !dbg !6502
  %125 = load i32, i32* %Vstride, align 4, !dbg !6503
  %add145 = add nsw i32 %125, 0, !dbg !6504
  %idxprom146 = sext i32 %add145 to i64, !dbg !6505
  %126 = load i32*, i32** %V, align 8, !dbg !6505
  %arrayidx147 = getelementptr inbounds i32, i32* %126, i64 %idxprom146, !dbg !6505
  %127 = load i32, i32* %arrayidx147, align 4, !dbg !6505
  %128 = load i32*, i32** %clast, align 8, !dbg !6506
  %add.ptr148 = getelementptr inbounds i32, i32* %128, i64 2, !dbg !6507
  %arrayidx149 = getelementptr inbounds i32, i32* %add.ptr148, i64 0, !dbg !6508
  store i32 %127, i32* %arrayidx149, align 4, !dbg !6509
  %129 = load i32, i32* %Vstride, align 4, !dbg !6510
  %add150 = add nsw i32 %129, 1, !dbg !6511
  %idxprom151 = sext i32 %add150 to i64, !dbg !6512
  %130 = load i32*, i32** %V, align 8, !dbg !6512
  %arrayidx152 = getelementptr inbounds i32, i32* %130, i64 %idxprom151, !dbg !6512
  %131 = load i32, i32* %arrayidx152, align 4, !dbg !6512
  %132 = load i32*, i32** %clast, align 8, !dbg !6513
  %add.ptr153 = getelementptr inbounds i32, i32* %132, i64 2, !dbg !6514
  %arrayidx154 = getelementptr inbounds i32, i32* %add.ptr153, i64 1, !dbg !6515
  store i32 %131, i32* %arrayidx154, align 4, !dbg !6516
  %133 = load i32*, i32** %Yo, align 8, !dbg !6517
  %arrayidx155 = getelementptr inbounds i32, i32* %133, i64 3, !dbg !6517
  %134 = load i32, i32* %arrayidx155, align 4, !dbg !6517
  %135 = load i32*, i32** %last, align 8, !dbg !6518
  %arrayidx156 = getelementptr inbounds i32, i32* %135, i64 3, !dbg !6518
  %136 = load i32, i32* %arrayidx156, align 4, !dbg !6518
  %sub157 = sub nsw i32 %134, %136, !dbg !6519
  %137 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6520
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %137, i32 0, i32 11, !dbg !6521
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 0, !dbg !6520
  store i32 %sub157, i32* %arrayidx158, align 8, !dbg !6522
  %138 = load i32, i32* %oYstride, align 4, !dbg !6523
  %add159 = add nsw i32 3, %138, !dbg !6524
  %idxprom160 = sext i32 %add159 to i64, !dbg !6525
  %139 = load i32*, i32** %Yo, align 8, !dbg !6525
  %arrayidx161 = getelementptr inbounds i32, i32* %139, i64 %idxprom160, !dbg !6525
  %140 = load i32, i32* %arrayidx161, align 4, !dbg !6525
  %141 = load i32*, i32** %Yo, align 8, !dbg !6526
  %arrayidx162 = getelementptr inbounds i32, i32* %141, i64 3, !dbg !6526
  %142 = load i32, i32* %arrayidx162, align 4, !dbg !6526
  %sub163 = sub nsw i32 %140, %142, !dbg !6527
  %143 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6528
  %D164 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %143, i32 0, i32 11, !dbg !6529
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* %D164, i64 0, i64 1, !dbg !6528
  store i32 %sub163, i32* %arrayidx165, align 4, !dbg !6530
  %144 = load i32, i32* %oYstride, align 4, !dbg !6531
  %mul166 = mul nsw i32 %144, 2, !dbg !6532
  %add167 = add nsw i32 3, %mul166, !dbg !6533
  %idxprom168 = sext i32 %add167 to i64, !dbg !6534
  %145 = load i32*, i32** %Yo, align 8, !dbg !6534
  %arrayidx169 = getelementptr inbounds i32, i32* %145, i64 %idxprom168, !dbg !6534
  %146 = load i32, i32* %arrayidx169, align 4, !dbg !6534
  %147 = load i32, i32* %oYstride, align 4, !dbg !6535
  %add170 = add nsw i32 3, %147, !dbg !6536
  %idxprom171 = sext i32 %add170 to i64, !dbg !6537
  %148 = load i32*, i32** %Yo, align 8, !dbg !6537
  %arrayidx172 = getelementptr inbounds i32, i32* %148, i64 %idxprom171, !dbg !6537
  %149 = load i32, i32* %arrayidx172, align 4, !dbg !6537
  %sub173 = sub nsw i32 %146, %149, !dbg !6538
  %150 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6539
  %D174 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %150, i32 0, i32 11, !dbg !6540
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %D174, i64 0, i64 2, !dbg !6539
  store i32 %sub173, i32* %arrayidx175, align 8, !dbg !6541
  %151 = load i32, i32* %oYstride, align 4, !dbg !6542
  %mul176 = mul nsw i32 %151, 3, !dbg !6543
  %add177 = add nsw i32 3, %mul176, !dbg !6544
  %idxprom178 = sext i32 %add177 to i64, !dbg !6545
  %152 = load i32*, i32** %Yo, align 8, !dbg !6545
  %arrayidx179 = getelementptr inbounds i32, i32* %152, i64 %idxprom178, !dbg !6545
  %153 = load i32, i32* %arrayidx179, align 4, !dbg !6545
  %154 = load i32, i32* %oYstride, align 4, !dbg !6546
  %mul180 = mul nsw i32 %154, 2, !dbg !6547
  %add181 = add nsw i32 3, %mul180, !dbg !6548
  %idxprom182 = sext i32 %add181 to i64, !dbg !6549
  %155 = load i32*, i32** %Yo, align 8, !dbg !6549
  %arrayidx183 = getelementptr inbounds i32, i32* %155, i64 %idxprom182, !dbg !6549
  %156 = load i32, i32* %arrayidx183, align 4, !dbg !6549
  %sub184 = sub nsw i32 %153, %156, !dbg !6550
  %157 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6551
  %D185 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %157, i32 0, i32 11, !dbg !6552
  %arrayidx186 = getelementptr inbounds [4 x i32], [4 x i32]* %D185, i64 0, i64 3, !dbg !6551
  store i32 %sub184, i32* %arrayidx186, align 4, !dbg !6553
  store i32 0, i32* %j, align 4, !dbg !6554
  br label %for.cond187, !dbg !6556

for.cond187:                                      ; preds = %for.inc208, %for.end104
  %158 = load i32, i32* %j, align 4, !dbg !6557
  %cmp188 = icmp slt i32 %158, 4, !dbg !6560
  br i1 %cmp188, label %for.body189, label %for.end210, !dbg !6561

for.body189:                                      ; preds = %for.cond187
  store i32 0, i32* %i, align 4, !dbg !6562
  br label %for.cond190, !dbg !6565

for.cond190:                                      ; preds = %for.inc201, %for.body189
  %159 = load i32, i32* %i, align 4, !dbg !6566
  %cmp191 = icmp slt i32 %159, 4, !dbg !6569
  br i1 %cmp191, label %for.body192, label %for.end203, !dbg !6570

for.body192:                                      ; preds = %for.cond190
  %160 = load i32, i32* %i, align 4, !dbg !6571
  %idxprom193 = sext i32 %160 to i64, !dbg !6573
  %161 = load i32*, i32** %Yo, align 8, !dbg !6573
  %arrayidx194 = getelementptr inbounds i32, i32* %161, i64 %idxprom193, !dbg !6573
  %162 = load i32, i32* %arrayidx194, align 4, !dbg !6573
  %163 = load i32, i32* %i, align 4, !dbg !6574
  %idxprom195 = sext i32 %163 to i64, !dbg !6575
  %164 = load i32*, i32** %Y, align 8, !dbg !6575
  %arrayidx196 = getelementptr inbounds i32, i32* %164, i64 %idxprom195, !dbg !6575
  store i32 %162, i32* %arrayidx196, align 4, !dbg !6576
  %165 = load i32, i32* %i, align 4, !dbg !6577
  %idxprom197 = sext i32 %165 to i64, !dbg !6578
  %166 = load i32*, i32** %Yo, align 8, !dbg !6578
  %arrayidx198 = getelementptr inbounds i32, i32* %166, i64 %idxprom197, !dbg !6578
  %167 = load i32, i32* %arrayidx198, align 4, !dbg !6578
  %168 = load i32, i32* %i, align 4, !dbg !6579
  %idxprom199 = sext i32 %168 to i64, !dbg !6580
  %169 = load i32*, i32** %last, align 8, !dbg !6580
  %arrayidx200 = getelementptr inbounds i32, i32* %169, i64 %idxprom199, !dbg !6580
  store i32 %167, i32* %arrayidx200, align 4, !dbg !6581
  br label %for.inc201, !dbg !6582

for.inc201:                                       ; preds = %for.body192
  %170 = load i32, i32* %i, align 4, !dbg !6583
  %inc202 = add nsw i32 %170, 1, !dbg !6583
  store i32 %inc202, i32* %i, align 4, !dbg !6583
  br label %for.cond190, !dbg !6585, !llvm.loop !6586

for.end203:                                       ; preds = %for.cond190
  %171 = load i32, i32* %Ystride, align 4, !dbg !6588
  %172 = load i32*, i32** %Y, align 8, !dbg !6589
  %idx.ext204 = sext i32 %171 to i64, !dbg !6589
  %add.ptr205 = getelementptr inbounds i32, i32* %172, i64 %idx.ext204, !dbg !6589
  store i32* %add.ptr205, i32** %Y, align 8, !dbg !6589
  %173 = load i32, i32* %oYstride, align 4, !dbg !6590
  %174 = load i32*, i32** %Yo, align 8, !dbg !6591
  %idx.ext206 = sext i32 %173 to i64, !dbg !6591
  %add.ptr207 = getelementptr inbounds i32, i32* %174, i64 %idx.ext206, !dbg !6591
  store i32* %add.ptr207, i32** %Yo, align 8, !dbg !6591
  br label %for.inc208, !dbg !6592

for.inc208:                                       ; preds = %for.end203
  %175 = load i32, i32* %j, align 4, !dbg !6593
  %inc209 = add nsw i32 %175, 1, !dbg !6593
  store i32 %inc209, i32* %j, align 4, !dbg !6593
  br label %for.cond187, !dbg !6595, !llvm.loop !6596

for.end210:                                       ; preds = %for.cond187
  ret void, !dbg !6598
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_motion_block(%struct.TM2Context* %ctx, %struct.AVFrame* %pic, i32 %bx, i32 %by) #4 !dbg !6599 {
entry:
  %retval.i273 = alloca i32, align 4
  %a.addr.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i274, metadata !6600, metadata !1653), !dbg !6604
  %amin.addr.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i275, metadata !6606, metadata !1653), !dbg !6607
  %amax.addr.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i276, metadata !6608, metadata !1653), !dbg !6609
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6600, metadata !1653), !dbg !6610
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6606, metadata !1653), !dbg !6612
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6608, metadata !1653), !dbg !6613
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %pic.addr = alloca %struct.AVFrame*, align 8
  %bx.addr = alloca i32, align 4
  %by.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mx = alloca i32, align 4
  %my = alloca i32, align 4
  %Yo = alloca i32*, align 8
  %Uo = alloca i32*, align 8
  %Vo = alloca i32*, align 8
  %oYstride = alloca i32, align 4
  %oUstride = alloca i32, align 4
  %oVstride = alloca i32, align 4
  %last = alloca i32*, align 8
  %clast = alloca i32*, align 8
  %Y = alloca i32*, align 8
  %U = alloca i32*, align 8
  %V = alloca i32*, align 8
  %Ystride = alloca i32, align 4
  %Ustride = alloca i32, align 4
  %Vstride = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !6614, metadata !1653), !dbg !6615
  store %struct.AVFrame* %pic, %struct.AVFrame** %pic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pic.addr, metadata !6616, metadata !1653), !dbg !6617
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !6618, metadata !1653), !dbg !6619
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !6620, metadata !1653), !dbg !6621
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6622, metadata !1653), !dbg !6623
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6624, metadata !1653), !dbg !6625
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !6626, metadata !1653), !dbg !6627
  call void @llvm.dbg.declare(metadata i32* %my, metadata !6628, metadata !1653), !dbg !6629
  call void @llvm.dbg.declare(metadata i32** %Yo, metadata !6630, metadata !1653), !dbg !6631
  call void @llvm.dbg.declare(metadata i32** %Uo, metadata !6632, metadata !1653), !dbg !6633
  call void @llvm.dbg.declare(metadata i32** %Vo, metadata !6634, metadata !1653), !dbg !6635
  call void @llvm.dbg.declare(metadata i32* %oYstride, metadata !6636, metadata !1653), !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %oUstride, metadata !6638, metadata !1653), !dbg !6639
  call void @llvm.dbg.declare(metadata i32* %oVstride, metadata !6640, metadata !1653), !dbg !6641
  call void @llvm.dbg.declare(metadata i32** %last, metadata !6642, metadata !1653), !dbg !6643
  call void @llvm.dbg.declare(metadata i32** %clast, metadata !6644, metadata !1653), !dbg !6645
  call void @llvm.dbg.declare(metadata i32** %Y, metadata !6646, metadata !1653), !dbg !6647
  call void @llvm.dbg.declare(metadata i32** %U, metadata !6648, metadata !1653), !dbg !6649
  call void @llvm.dbg.declare(metadata i32** %V, metadata !6650, metadata !1653), !dbg !6651
  call void @llvm.dbg.declare(metadata i32* %Ystride, metadata !6652, metadata !1653), !dbg !6653
  call void @llvm.dbg.declare(metadata i32* %Ustride, metadata !6654, metadata !1653), !dbg !6655
  call void @llvm.dbg.declare(metadata i32* %Vstride, metadata !6656, metadata !1653), !dbg !6657
  %0 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6658
  %y_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %0, i32 0, i32 27, !dbg !6659
  %1 = load i32, i32* %y_stride, align 8, !dbg !6659
  store i32 %1, i32* %Ystride, align 4, !dbg !6660
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6661
  %uv_stride = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 28, !dbg !6662
  %3 = load i32, i32* %uv_stride, align 4, !dbg !6662
  store i32 %3, i32* %Vstride, align 4, !dbg !6663
  %4 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6664
  %uv_stride1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %4, i32 0, i32 28, !dbg !6665
  %5 = load i32, i32* %uv_stride1, align 4, !dbg !6665
  store i32 %5, i32* %Ustride, align 4, !dbg !6666
  %6 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6667
  %cur = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %6, i32 0, i32 29, !dbg !6668
  %7 = load i32, i32* %cur, align 8, !dbg !6668
  %tobool = icmp ne i32 %7, 0, !dbg !6667
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6667

cond.true:                                        ; preds = %entry
  %8 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6669
  %Y2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %8, i32 0, i32 24, !dbg !6671
  %9 = load i32*, i32** %Y2, align 8, !dbg !6671
  br label %cond.end, !dbg !6672

cond.false:                                       ; preds = %entry
  %10 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6673
  %Y1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %10, i32 0, i32 21, !dbg !6675
  %11 = load i32*, i32** %Y1, align 8, !dbg !6675
  br label %cond.end, !dbg !6676

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !6677
  %12 = load i32, i32* %by.addr, align 4, !dbg !6679
  %mul = mul nsw i32 %12, 4, !dbg !6680
  %13 = load i32, i32* %Ystride, align 4, !dbg !6681
  %mul2 = mul nsw i32 %mul, %13, !dbg !6682
  %idx.ext = sext i32 %mul2 to i64, !dbg !6683
  %add.ptr = getelementptr inbounds i32, i32* %cond, i64 %idx.ext, !dbg !6683
  %14 = load i32, i32* %bx.addr, align 4, !dbg !6684
  %mul3 = mul nsw i32 %14, 4, !dbg !6685
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !6686
  %add.ptr5 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext4, !dbg !6686
  store i32* %add.ptr5, i32** %Y, align 8, !dbg !6687
  %15 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6688
  %cur6 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %15, i32 0, i32 29, !dbg !6689
  %16 = load i32, i32* %cur6, align 8, !dbg !6689
  %tobool7 = icmp ne i32 %16, 0, !dbg !6688
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !6688

cond.true8:                                       ; preds = %cond.end
  %17 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6690
  %V2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %17, i32 0, i32 26, !dbg !6692
  %18 = load i32*, i32** %V2, align 8, !dbg !6692
  br label %cond.end10, !dbg !6693

cond.false9:                                      ; preds = %cond.end
  %19 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6694
  %V1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %19, i32 0, i32 23, !dbg !6696
  %20 = load i32*, i32** %V1, align 8, !dbg !6696
  br label %cond.end10, !dbg !6697

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32* [ %18, %cond.true8 ], [ %20, %cond.false9 ], !dbg !6698
  %21 = load i32, i32* %by.addr, align 4, !dbg !6700
  %mul12 = mul nsw i32 %21, 2, !dbg !6701
  %22 = load i32, i32* %Vstride, align 4, !dbg !6702
  %mul13 = mul nsw i32 %mul12, %22, !dbg !6703
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !6704
  %add.ptr15 = getelementptr inbounds i32, i32* %cond11, i64 %idx.ext14, !dbg !6704
  %23 = load i32, i32* %bx.addr, align 4, !dbg !6705
  %mul16 = mul nsw i32 %23, 2, !dbg !6706
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !6707
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr15, i64 %idx.ext17, !dbg !6707
  store i32* %add.ptr18, i32** %V, align 8, !dbg !6708
  %24 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6709
  %cur19 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %24, i32 0, i32 29, !dbg !6710
  %25 = load i32, i32* %cur19, align 8, !dbg !6710
  %tobool20 = icmp ne i32 %25, 0, !dbg !6709
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6709

cond.true21:                                      ; preds = %cond.end10
  %26 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6711
  %U2 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %26, i32 0, i32 25, !dbg !6713
  %27 = load i32*, i32** %U2, align 8, !dbg !6713
  br label %cond.end23, !dbg !6714

cond.false22:                                     ; preds = %cond.end10
  %28 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6715
  %U1 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %28, i32 0, i32 22, !dbg !6717
  %29 = load i32*, i32** %U1, align 8, !dbg !6717
  br label %cond.end23, !dbg !6718

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32* [ %27, %cond.true21 ], [ %29, %cond.false22 ], !dbg !6719
  %30 = load i32, i32* %by.addr, align 4, !dbg !6721
  %mul25 = mul nsw i32 %30, 2, !dbg !6722
  %31 = load i32, i32* %Ustride, align 4, !dbg !6723
  %mul26 = mul nsw i32 %mul25, %31, !dbg !6724
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !6725
  %add.ptr28 = getelementptr inbounds i32, i32* %cond24, i64 %idx.ext27, !dbg !6725
  %32 = load i32, i32* %bx.addr, align 4, !dbg !6726
  %mul29 = mul nsw i32 %32, 2, !dbg !6727
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !6728
  %add.ptr31 = getelementptr inbounds i32, i32* %add.ptr28, i64 %idx.ext30, !dbg !6728
  store i32* %add.ptr31, i32** %U, align 8, !dbg !6729
  %33 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6730
  %last32 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %33, i32 0, i32 13, !dbg !6731
  %34 = load i32*, i32** %last32, align 8, !dbg !6731
  %35 = load i32, i32* %bx.addr, align 4, !dbg !6732
  %mul33 = mul nsw i32 %35, 4, !dbg !6733
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !6734
  %add.ptr35 = getelementptr inbounds i32, i32* %34, i64 %idx.ext34, !dbg !6734
  store i32* %add.ptr35, i32** %last, align 8, !dbg !6735
  %36 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6736
  %clast36 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %36, i32 0, i32 14, !dbg !6737
  %37 = load i32*, i32** %clast36, align 8, !dbg !6737
  %38 = load i32, i32* %bx.addr, align 4, !dbg !6738
  %mul37 = mul nsw i32 %38, 4, !dbg !6739
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !6740
  %add.ptr39 = getelementptr inbounds i32, i32* %37, i64 %idx.ext38, !dbg !6740
  store i32* %add.ptr39, i32** %clast, align 8, !dbg !6741
  %39 = load i32, i32* %Ystride, align 4, !dbg !6742
  store i32 %39, i32* %oYstride, align 4, !dbg !6743
  %40 = load i32, i32* %Vstride, align 4, !dbg !6744
  store i32 %40, i32* %oVstride, align 4, !dbg !6745
  %41 = load i32, i32* %Ustride, align 4, !dbg !6746
  store i32 %41, i32* %oUstride, align 4, !dbg !6747
  %42 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6748
  %cur40 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %42, i32 0, i32 29, !dbg !6749
  %43 = load i32, i32* %cur40, align 8, !dbg !6749
  %tobool41 = icmp ne i32 %43, 0, !dbg !6748
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !6748

cond.true42:                                      ; preds = %cond.end23
  %44 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6750
  %Y143 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %44, i32 0, i32 21, !dbg !6752
  %45 = load i32*, i32** %Y143, align 8, !dbg !6752
  br label %cond.end46, !dbg !6753

cond.false44:                                     ; preds = %cond.end23
  %46 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6754
  %Y245 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %46, i32 0, i32 24, !dbg !6756
  %47 = load i32*, i32** %Y245, align 8, !dbg !6756
  br label %cond.end46, !dbg !6757

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i32* [ %45, %cond.true42 ], [ %47, %cond.false44 ], !dbg !6758
  %48 = load i32, i32* %by.addr, align 4, !dbg !6760
  %mul48 = mul nsw i32 %48, 4, !dbg !6761
  %49 = load i32, i32* %oYstride, align 4, !dbg !6762
  %mul49 = mul nsw i32 %mul48, %49, !dbg !6763
  %idx.ext50 = sext i32 %mul49 to i64, !dbg !6764
  %add.ptr51 = getelementptr inbounds i32, i32* %cond47, i64 %idx.ext50, !dbg !6764
  %50 = load i32, i32* %bx.addr, align 4, !dbg !6765
  %mul52 = mul nsw i32 %50, 4, !dbg !6766
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !6767
  %add.ptr54 = getelementptr inbounds i32, i32* %add.ptr51, i64 %idx.ext53, !dbg !6767
  store i32* %add.ptr54, i32** %Yo, align 8, !dbg !6768
  %51 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6769
  %cur55 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %51, i32 0, i32 29, !dbg !6770
  %52 = load i32, i32* %cur55, align 8, !dbg !6770
  %tobool56 = icmp ne i32 %52, 0, !dbg !6769
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !6769

cond.true57:                                      ; preds = %cond.end46
  %53 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6771
  %V158 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %53, i32 0, i32 23, !dbg !6773
  %54 = load i32*, i32** %V158, align 8, !dbg !6773
  br label %cond.end61, !dbg !6774

cond.false59:                                     ; preds = %cond.end46
  %55 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6775
  %V260 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %55, i32 0, i32 26, !dbg !6777
  %56 = load i32*, i32** %V260, align 8, !dbg !6777
  br label %cond.end61, !dbg !6778

cond.end61:                                       ; preds = %cond.false59, %cond.true57
  %cond62 = phi i32* [ %54, %cond.true57 ], [ %56, %cond.false59 ], !dbg !6779
  %57 = load i32, i32* %by.addr, align 4, !dbg !6781
  %mul63 = mul nsw i32 %57, 2, !dbg !6782
  %58 = load i32, i32* %oVstride, align 4, !dbg !6783
  %mul64 = mul nsw i32 %mul63, %58, !dbg !6784
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !6785
  %add.ptr66 = getelementptr inbounds i32, i32* %cond62, i64 %idx.ext65, !dbg !6785
  %59 = load i32, i32* %bx.addr, align 4, !dbg !6786
  %mul67 = mul nsw i32 %59, 2, !dbg !6787
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !6788
  %add.ptr69 = getelementptr inbounds i32, i32* %add.ptr66, i64 %idx.ext68, !dbg !6788
  store i32* %add.ptr69, i32** %Vo, align 8, !dbg !6789
  %60 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6790
  %cur70 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %60, i32 0, i32 29, !dbg !6791
  %61 = load i32, i32* %cur70, align 8, !dbg !6791
  %tobool71 = icmp ne i32 %61, 0, !dbg !6790
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !6790

cond.true72:                                      ; preds = %cond.end61
  %62 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6792
  %U173 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %62, i32 0, i32 22, !dbg !6794
  %63 = load i32*, i32** %U173, align 8, !dbg !6794
  br label %cond.end76, !dbg !6795

cond.false74:                                     ; preds = %cond.end61
  %64 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6796
  %U275 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %64, i32 0, i32 25, !dbg !6798
  %65 = load i32*, i32** %U275, align 8, !dbg !6798
  br label %cond.end76, !dbg !6799

cond.end76:                                       ; preds = %cond.false74, %cond.true72
  %cond77 = phi i32* [ %63, %cond.true72 ], [ %65, %cond.false74 ], !dbg !6800
  %66 = load i32, i32* %by.addr, align 4, !dbg !6802
  %mul78 = mul nsw i32 %66, 2, !dbg !6803
  %67 = load i32, i32* %oUstride, align 4, !dbg !6804
  %mul79 = mul nsw i32 %mul78, %67, !dbg !6805
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !6806
  %add.ptr81 = getelementptr inbounds i32, i32* %cond77, i64 %idx.ext80, !dbg !6806
  %68 = load i32, i32* %bx.addr, align 4, !dbg !6807
  %mul82 = mul nsw i32 %68, 2, !dbg !6808
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !6809
  %add.ptr84 = getelementptr inbounds i32, i32* %add.ptr81, i64 %idx.ext83, !dbg !6809
  store i32* %add.ptr84, i32** %Uo, align 8, !dbg !6810
  %69 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6811
  %call = call i32 @GET_TOK(%struct.TM2Context* %69, i32 5), !dbg !6812
  store i32 %call, i32* %mx, align 4, !dbg !6813
  %70 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6814
  %call85 = call i32 @GET_TOK(%struct.TM2Context* %70, i32 5), !dbg !6815
  store i32 %call85, i32* %my, align 4, !dbg !6816
  %71 = load i32, i32* %mx, align 4, !dbg !6817
  %72 = load i32, i32* %bx.addr, align 4, !dbg !6818
  %mul86 = mul nsw i32 %72, 4, !dbg !6819
  %add = add nsw i32 %mul86, 4, !dbg !6820
  %sub = sub nsw i32 0, %add, !dbg !6821
  %73 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6822
  %avctx = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %73, i32 0, i32 0, !dbg !6823
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6823
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 20, !dbg !6824
  %75 = load i32, i32* %width, align 4, !dbg !6824
  %76 = load i32, i32* %bx.addr, align 4, !dbg !6825
  %mul87 = mul nsw i32 %76, 4, !dbg !6826
  %sub88 = sub nsw i32 %75, %mul87, !dbg !6827
  store i32 %71, i32* %a.addr.i, align 4, !dbg !6828
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !6828
  store i32 %sub88, i32* %amax.addr.i, align 4, !dbg !6828
  %77 = load i32, i32* %a.addr.i, align 4, !dbg !6829
  %78 = load i32, i32* %amin.addr.i, align 4, !dbg !6831
  %cmp.i = icmp slt i32 %77, %78, !dbg !6832
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6833

if.then.i:                                        ; preds = %cond.end76
  %79 = load i32, i32* %amin.addr.i, align 4, !dbg !6834
  store i32 %79, i32* %retval.i, align 4, !dbg !6836
  br label %av_clip_c.exit, !dbg !6836

if.else.i:                                        ; preds = %cond.end76
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !6837
  %81 = load i32, i32* %amax.addr.i, align 4, !dbg !6839
  %cmp1.i = icmp sgt i32 %80, %81, !dbg !6840
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6841

if.then2.i:                                       ; preds = %if.else.i
  %82 = load i32, i32* %amax.addr.i, align 4, !dbg !6842
  store i32 %82, i32* %retval.i, align 4, !dbg !6844
  br label %av_clip_c.exit, !dbg !6844

if.else3.i:                                       ; preds = %if.else.i
  %83 = load i32, i32* %a.addr.i, align 4, !dbg !6845
  store i32 %83, i32* %retval.i, align 4, !dbg !6846
  br label %av_clip_c.exit, !dbg !6846

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %84 = load i32, i32* %retval.i, align 4, !dbg !6847
  store i32 %84, i32* %mx, align 4, !dbg !6848
  %85 = load i32, i32* %my, align 4, !dbg !6849
  %86 = load i32, i32* %by.addr, align 4, !dbg !6850
  %mul90 = mul nsw i32 %86, 4, !dbg !6851
  %add91 = add nsw i32 %mul90, 4, !dbg !6852
  %sub92 = sub nsw i32 0, %add91, !dbg !6853
  %87 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6854
  %avctx93 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %87, i32 0, i32 0, !dbg !6855
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx93, align 8, !dbg !6855
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 21, !dbg !6856
  %89 = load i32, i32* %height, align 8, !dbg !6856
  %90 = load i32, i32* %by.addr, align 4, !dbg !6857
  %mul94 = mul nsw i32 %90, 4, !dbg !6858
  %sub95 = sub nsw i32 %89, %mul94, !dbg !6859
  store i32 %85, i32* %a.addr.i274, align 4, !dbg !6860
  store i32 %sub92, i32* %amin.addr.i275, align 4, !dbg !6860
  store i32 %sub95, i32* %amax.addr.i276, align 4, !dbg !6860
  %91 = load i32, i32* %a.addr.i274, align 4, !dbg !6861
  %92 = load i32, i32* %amin.addr.i275, align 4, !dbg !6862
  %cmp.i277 = icmp slt i32 %91, %92, !dbg !6863
  br i1 %cmp.i277, label %if.then.i278, label %if.else.i280, !dbg !6864

if.then.i278:                                     ; preds = %av_clip_c.exit
  %93 = load i32, i32* %amin.addr.i275, align 4, !dbg !6865
  store i32 %93, i32* %retval.i273, align 4, !dbg !6866
  br label %av_clip_c.exit283, !dbg !6866

if.else.i280:                                     ; preds = %av_clip_c.exit
  %94 = load i32, i32* %a.addr.i274, align 4, !dbg !6867
  %95 = load i32, i32* %amax.addr.i276, align 4, !dbg !6868
  %cmp1.i279 = icmp sgt i32 %94, %95, !dbg !6869
  br i1 %cmp1.i279, label %if.then2.i281, label %if.else3.i282, !dbg !6870

if.then2.i281:                                    ; preds = %if.else.i280
  %96 = load i32, i32* %amax.addr.i276, align 4, !dbg !6871
  store i32 %96, i32* %retval.i273, align 4, !dbg !6872
  br label %av_clip_c.exit283, !dbg !6872

if.else3.i282:                                    ; preds = %if.else.i280
  %97 = load i32, i32* %a.addr.i274, align 4, !dbg !6873
  store i32 %97, i32* %retval.i273, align 4, !dbg !6874
  br label %av_clip_c.exit283, !dbg !6874

av_clip_c.exit283:                                ; preds = %if.then.i278, %if.then2.i281, %if.else3.i282
  %98 = load i32, i32* %retval.i273, align 4, !dbg !6875
  store i32 %98, i32* %my, align 4, !dbg !6876
  %99 = load i32, i32* %bx.addr, align 4, !dbg !6877
  %mul97 = mul nsw i32 4, %99, !dbg !6879
  %100 = load i32, i32* %mx, align 4, !dbg !6880
  %add98 = add nsw i32 %mul97, %100, !dbg !6881
  %cmp = icmp slt i32 %add98, 0, !dbg !6882
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6883

lor.lhs.false:                                    ; preds = %av_clip_c.exit283
  %101 = load i32, i32* %by.addr, align 4, !dbg !6884
  %mul99 = mul nsw i32 4, %101, !dbg !6886
  %102 = load i32, i32* %my, align 4, !dbg !6887
  %add100 = add nsw i32 %mul99, %102, !dbg !6888
  %cmp101 = icmp slt i32 %add100, 0, !dbg !6889
  br i1 %cmp101, label %if.then, label %lor.lhs.false102, !dbg !6890

lor.lhs.false102:                                 ; preds = %lor.lhs.false
  %103 = load i32, i32* %bx.addr, align 4, !dbg !6891
  %mul103 = mul nsw i32 4, %103, !dbg !6893
  %104 = load i32, i32* %mx, align 4, !dbg !6894
  %add104 = add nsw i32 %mul103, %104, !dbg !6895
  %add105 = add nsw i32 %add104, 4, !dbg !6896
  %105 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6897
  %avctx106 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %105, i32 0, i32 0, !dbg !6898
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx106, align 8, !dbg !6898
  %width107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %106, i32 0, i32 20, !dbg !6899
  %107 = load i32, i32* %width107, align 4, !dbg !6899
  %cmp108 = icmp sgt i32 %add105, %107, !dbg !6900
  br i1 %cmp108, label %if.then, label %lor.lhs.false109, !dbg !6901

lor.lhs.false109:                                 ; preds = %lor.lhs.false102
  %108 = load i32, i32* %by.addr, align 4, !dbg !6902
  %mul110 = mul nsw i32 4, %108, !dbg !6904
  %109 = load i32, i32* %my, align 4, !dbg !6905
  %add111 = add nsw i32 %mul110, %109, !dbg !6906
  %add112 = add nsw i32 %add111, 4, !dbg !6907
  %110 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6908
  %avctx113 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %110, i32 0, i32 0, !dbg !6909
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx113, align 8, !dbg !6909
  %height114 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 21, !dbg !6910
  %112 = load i32, i32* %height114, align 8, !dbg !6910
  %cmp115 = icmp sgt i32 %add112, %112, !dbg !6911
  br i1 %cmp115, label %if.then, label %if.end, !dbg !6912

if.then:                                          ; preds = %lor.lhs.false109, %lor.lhs.false102, %lor.lhs.false, %av_clip_c.exit283
  %113 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6913
  %avctx116 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %113, i32 0, i32 0, !dbg !6915
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx116, align 8, !dbg !6915
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !6913
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0)), !dbg !6916
  br label %for.end272, !dbg !6917

if.end:                                           ; preds = %lor.lhs.false109
  %116 = load i32, i32* %my, align 4, !dbg !6918
  %117 = load i32, i32* %oYstride, align 4, !dbg !6919
  %mul117 = mul nsw i32 %116, %117, !dbg !6920
  %118 = load i32, i32* %mx, align 4, !dbg !6921
  %add118 = add nsw i32 %mul117, %118, !dbg !6922
  %119 = load i32*, i32** %Yo, align 8, !dbg !6923
  %idx.ext119 = sext i32 %add118 to i64, !dbg !6923
  %add.ptr120 = getelementptr inbounds i32, i32* %119, i64 %idx.ext119, !dbg !6923
  store i32* %add.ptr120, i32** %Yo, align 8, !dbg !6923
  %120 = load i32, i32* %my, align 4, !dbg !6924
  %shr = ashr i32 %120, 1, !dbg !6925
  %121 = load i32, i32* %oUstride, align 4, !dbg !6926
  %mul121 = mul nsw i32 %shr, %121, !dbg !6927
  %122 = load i32, i32* %mx, align 4, !dbg !6928
  %shr122 = ashr i32 %122, 1, !dbg !6929
  %add123 = add nsw i32 %mul121, %shr122, !dbg !6930
  %123 = load i32*, i32** %Uo, align 8, !dbg !6931
  %idx.ext124 = sext i32 %add123 to i64, !dbg !6931
  %add.ptr125 = getelementptr inbounds i32, i32* %123, i64 %idx.ext124, !dbg !6931
  store i32* %add.ptr125, i32** %Uo, align 8, !dbg !6931
  %124 = load i32, i32* %my, align 4, !dbg !6932
  %shr126 = ashr i32 %124, 1, !dbg !6933
  %125 = load i32, i32* %oVstride, align 4, !dbg !6934
  %mul127 = mul nsw i32 %shr126, %125, !dbg !6935
  %126 = load i32, i32* %mx, align 4, !dbg !6936
  %shr128 = ashr i32 %126, 1, !dbg !6937
  %add129 = add nsw i32 %mul127, %shr128, !dbg !6938
  %127 = load i32*, i32** %Vo, align 8, !dbg !6939
  %idx.ext130 = sext i32 %add129 to i64, !dbg !6939
  %add.ptr131 = getelementptr inbounds i32, i32* %127, i64 %idx.ext130, !dbg !6939
  store i32* %add.ptr131, i32** %Vo, align 8, !dbg !6939
  store i32 0, i32* %j, align 4, !dbg !6940
  br label %for.cond, !dbg !6942

for.cond:                                         ; preds = %for.inc150, %if.end
  %128 = load i32, i32* %j, align 4, !dbg !6943
  %cmp132 = icmp slt i32 %128, 2, !dbg !6946
  br i1 %cmp132, label %for.body, label %for.end152, !dbg !6947

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6948
  br label %for.cond133, !dbg !6951

for.cond133:                                      ; preds = %for.inc, %for.body
  %129 = load i32, i32* %i, align 4, !dbg !6952
  %cmp134 = icmp slt i32 %129, 2, !dbg !6955
  br i1 %cmp134, label %for.body135, label %for.end, !dbg !6956

for.body135:                                      ; preds = %for.cond133
  %130 = load i32, i32* %i, align 4, !dbg !6957
  %idxprom = sext i32 %130 to i64, !dbg !6959
  %131 = load i32*, i32** %Uo, align 8, !dbg !6959
  %arrayidx = getelementptr inbounds i32, i32* %131, i64 %idxprom, !dbg !6959
  %132 = load i32, i32* %arrayidx, align 4, !dbg !6959
  %133 = load i32, i32* %i, align 4, !dbg !6960
  %idxprom136 = sext i32 %133 to i64, !dbg !6961
  %134 = load i32*, i32** %U, align 8, !dbg !6961
  %arrayidx137 = getelementptr inbounds i32, i32* %134, i64 %idxprom136, !dbg !6961
  store i32 %132, i32* %arrayidx137, align 4, !dbg !6962
  %135 = load i32, i32* %i, align 4, !dbg !6963
  %idxprom138 = sext i32 %135 to i64, !dbg !6964
  %136 = load i32*, i32** %Vo, align 8, !dbg !6964
  %arrayidx139 = getelementptr inbounds i32, i32* %136, i64 %idxprom138, !dbg !6964
  %137 = load i32, i32* %arrayidx139, align 4, !dbg !6964
  %138 = load i32, i32* %i, align 4, !dbg !6965
  %idxprom140 = sext i32 %138 to i64, !dbg !6966
  %139 = load i32*, i32** %V, align 8, !dbg !6966
  %arrayidx141 = getelementptr inbounds i32, i32* %139, i64 %idxprom140, !dbg !6966
  store i32 %137, i32* %arrayidx141, align 4, !dbg !6967
  br label %for.inc, !dbg !6968

for.inc:                                          ; preds = %for.body135
  %140 = load i32, i32* %i, align 4, !dbg !6969
  %inc = add nsw i32 %140, 1, !dbg !6969
  store i32 %inc, i32* %i, align 4, !dbg !6969
  br label %for.cond133, !dbg !6971, !llvm.loop !6972

for.end:                                          ; preds = %for.cond133
  %141 = load i32, i32* %Ustride, align 4, !dbg !6974
  %142 = load i32*, i32** %U, align 8, !dbg !6975
  %idx.ext142 = sext i32 %141 to i64, !dbg !6975
  %add.ptr143 = getelementptr inbounds i32, i32* %142, i64 %idx.ext142, !dbg !6975
  store i32* %add.ptr143, i32** %U, align 8, !dbg !6975
  %143 = load i32, i32* %Vstride, align 4, !dbg !6976
  %144 = load i32*, i32** %V, align 8, !dbg !6977
  %idx.ext144 = sext i32 %143 to i64, !dbg !6977
  %add.ptr145 = getelementptr inbounds i32, i32* %144, i64 %idx.ext144, !dbg !6977
  store i32* %add.ptr145, i32** %V, align 8, !dbg !6977
  %145 = load i32, i32* %oUstride, align 4, !dbg !6978
  %146 = load i32*, i32** %Uo, align 8, !dbg !6979
  %idx.ext146 = sext i32 %145 to i64, !dbg !6979
  %add.ptr147 = getelementptr inbounds i32, i32* %146, i64 %idx.ext146, !dbg !6979
  store i32* %add.ptr147, i32** %Uo, align 8, !dbg !6979
  %147 = load i32, i32* %oVstride, align 4, !dbg !6980
  %148 = load i32*, i32** %Vo, align 8, !dbg !6981
  %idx.ext148 = sext i32 %147 to i64, !dbg !6981
  %add.ptr149 = getelementptr inbounds i32, i32* %148, i64 %idx.ext148, !dbg !6981
  store i32* %add.ptr149, i32** %Vo, align 8, !dbg !6981
  br label %for.inc150, !dbg !6982

for.inc150:                                       ; preds = %for.end
  %149 = load i32, i32* %j, align 4, !dbg !6983
  %inc151 = add nsw i32 %149, 1, !dbg !6983
  store i32 %inc151, i32* %j, align 4, !dbg !6983
  br label %for.cond, !dbg !6985, !llvm.loop !6986

for.end152:                                       ; preds = %for.cond
  %150 = load i32, i32* %Ustride, align 4, !dbg !6988
  %mul153 = mul nsw i32 %150, 2, !dbg !6989
  %151 = load i32*, i32** %U, align 8, !dbg !6990
  %idx.ext154 = sext i32 %mul153 to i64, !dbg !6990
  %idx.neg = sub i64 0, %idx.ext154, !dbg !6990
  %add.ptr155 = getelementptr inbounds i32, i32* %151, i64 %idx.neg, !dbg !6990
  store i32* %add.ptr155, i32** %U, align 8, !dbg !6990
  %152 = load i32, i32* %Vstride, align 4, !dbg !6991
  %mul156 = mul nsw i32 %152, 2, !dbg !6992
  %153 = load i32*, i32** %V, align 8, !dbg !6993
  %idx.ext157 = sext i32 %mul156 to i64, !dbg !6993
  %idx.neg158 = sub i64 0, %idx.ext157, !dbg !6993
  %add.ptr159 = getelementptr inbounds i32, i32* %153, i64 %idx.neg158, !dbg !6993
  store i32* %add.ptr159, i32** %V, align 8, !dbg !6993
  %154 = load i32*, i32** %U, align 8, !dbg !6994
  %arrayidx160 = getelementptr inbounds i32, i32* %154, i64 1, !dbg !6994
  %155 = load i32, i32* %arrayidx160, align 4, !dbg !6994
  %156 = load i32*, i32** %clast, align 8, !dbg !6996
  %arrayidx161 = getelementptr inbounds i32, i32* %156, i64 1, !dbg !6996
  %157 = load i32, i32* %arrayidx161, align 4, !dbg !6996
  %sub162 = sub i32 %155, %157, !dbg !6997
  %158 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !6998
  %CD = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %158, i32 0, i32 12, !dbg !6999
  %arrayidx163 = getelementptr inbounds [4 x i32], [4 x i32]* %CD, i64 0, i64 0, !dbg !6998
  store i32 %sub162, i32* %arrayidx163, align 8, !dbg !7000
  %159 = load i32, i32* %Ustride, align 4, !dbg !7001
  %add164 = add nsw i32 %159, 1, !dbg !7002
  %idxprom165 = sext i32 %add164 to i64, !dbg !7003
  %160 = load i32*, i32** %U, align 8, !dbg !7003
  %arrayidx166 = getelementptr inbounds i32, i32* %160, i64 %idxprom165, !dbg !7003
  %161 = load i32, i32* %arrayidx166, align 4, !dbg !7003
  %162 = load i32*, i32** %U, align 8, !dbg !7004
  %arrayidx167 = getelementptr inbounds i32, i32* %162, i64 1, !dbg !7004
  %163 = load i32, i32* %arrayidx167, align 4, !dbg !7004
  %sub168 = sub i32 %161, %163, !dbg !7005
  %164 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7006
  %CD169 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %164, i32 0, i32 12, !dbg !7007
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %CD169, i64 0, i64 1, !dbg !7006
  store i32 %sub168, i32* %arrayidx170, align 4, !dbg !7008
  %165 = load i32, i32* %Ustride, align 4, !dbg !7009
  %add171 = add nsw i32 %165, 0, !dbg !7010
  %idxprom172 = sext i32 %add171 to i64, !dbg !7011
  %166 = load i32*, i32** %U, align 8, !dbg !7011
  %arrayidx173 = getelementptr inbounds i32, i32* %166, i64 %idxprom172, !dbg !7011
  %167 = load i32, i32* %arrayidx173, align 4, !dbg !7011
  %168 = load i32*, i32** %clast, align 8, !dbg !7012
  %arrayidx174 = getelementptr inbounds i32, i32* %168, i64 0, !dbg !7012
  store i32 %167, i32* %arrayidx174, align 4, !dbg !7013
  %169 = load i32, i32* %Ustride, align 4, !dbg !7014
  %add175 = add nsw i32 %169, 1, !dbg !7015
  %idxprom176 = sext i32 %add175 to i64, !dbg !7016
  %170 = load i32*, i32** %U, align 8, !dbg !7016
  %arrayidx177 = getelementptr inbounds i32, i32* %170, i64 %idxprom176, !dbg !7016
  %171 = load i32, i32* %arrayidx177, align 4, !dbg !7016
  %172 = load i32*, i32** %clast, align 8, !dbg !7017
  %arrayidx178 = getelementptr inbounds i32, i32* %172, i64 1, !dbg !7017
  store i32 %171, i32* %arrayidx178, align 4, !dbg !7018
  %173 = load i32*, i32** %V, align 8, !dbg !7019
  %arrayidx179 = getelementptr inbounds i32, i32* %173, i64 1, !dbg !7019
  %174 = load i32, i32* %arrayidx179, align 4, !dbg !7019
  %175 = load i32*, i32** %clast, align 8, !dbg !7021
  %add.ptr180 = getelementptr inbounds i32, i32* %175, i64 2, !dbg !7022
  %arrayidx181 = getelementptr inbounds i32, i32* %add.ptr180, i64 1, !dbg !7023
  %176 = load i32, i32* %arrayidx181, align 4, !dbg !7023
  %sub182 = sub i32 %174, %176, !dbg !7024
  %177 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7025
  %CD183 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %177, i32 0, i32 12, !dbg !7026
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %CD183, i32 0, i32 0, !dbg !7025
  %add.ptr184 = getelementptr inbounds i32, i32* %arraydecay, i64 2, !dbg !7027
  %arrayidx185 = getelementptr inbounds i32, i32* %add.ptr184, i64 0, !dbg !7028
  store i32 %sub182, i32* %arrayidx185, align 4, !dbg !7029
  %178 = load i32, i32* %Vstride, align 4, !dbg !7030
  %add186 = add nsw i32 %178, 1, !dbg !7031
  %idxprom187 = sext i32 %add186 to i64, !dbg !7032
  %179 = load i32*, i32** %V, align 8, !dbg !7032
  %arrayidx188 = getelementptr inbounds i32, i32* %179, i64 %idxprom187, !dbg !7032
  %180 = load i32, i32* %arrayidx188, align 4, !dbg !7032
  %181 = load i32*, i32** %V, align 8, !dbg !7033
  %arrayidx189 = getelementptr inbounds i32, i32* %181, i64 1, !dbg !7033
  %182 = load i32, i32* %arrayidx189, align 4, !dbg !7033
  %sub190 = sub i32 %180, %182, !dbg !7034
  %183 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7035
  %CD191 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %183, i32 0, i32 12, !dbg !7036
  %arraydecay192 = getelementptr inbounds [4 x i32], [4 x i32]* %CD191, i32 0, i32 0, !dbg !7035
  %add.ptr193 = getelementptr inbounds i32, i32* %arraydecay192, i64 2, !dbg !7037
  %arrayidx194 = getelementptr inbounds i32, i32* %add.ptr193, i64 1, !dbg !7038
  store i32 %sub190, i32* %arrayidx194, align 4, !dbg !7039
  %184 = load i32, i32* %Vstride, align 4, !dbg !7040
  %add195 = add nsw i32 %184, 0, !dbg !7041
  %idxprom196 = sext i32 %add195 to i64, !dbg !7042
  %185 = load i32*, i32** %V, align 8, !dbg !7042
  %arrayidx197 = getelementptr inbounds i32, i32* %185, i64 %idxprom196, !dbg !7042
  %186 = load i32, i32* %arrayidx197, align 4, !dbg !7042
  %187 = load i32*, i32** %clast, align 8, !dbg !7043
  %add.ptr198 = getelementptr inbounds i32, i32* %187, i64 2, !dbg !7044
  %arrayidx199 = getelementptr inbounds i32, i32* %add.ptr198, i64 0, !dbg !7045
  store i32 %186, i32* %arrayidx199, align 4, !dbg !7046
  %188 = load i32, i32* %Vstride, align 4, !dbg !7047
  %add200 = add nsw i32 %188, 1, !dbg !7048
  %idxprom201 = sext i32 %add200 to i64, !dbg !7049
  %189 = load i32*, i32** %V, align 8, !dbg !7049
  %arrayidx202 = getelementptr inbounds i32, i32* %189, i64 %idxprom201, !dbg !7049
  %190 = load i32, i32* %arrayidx202, align 4, !dbg !7049
  %191 = load i32*, i32** %clast, align 8, !dbg !7050
  %add.ptr203 = getelementptr inbounds i32, i32* %191, i64 2, !dbg !7051
  %arrayidx204 = getelementptr inbounds i32, i32* %add.ptr203, i64 1, !dbg !7052
  store i32 %190, i32* %arrayidx204, align 4, !dbg !7053
  store i32 0, i32* %j, align 4, !dbg !7054
  br label %for.cond205, !dbg !7056

for.cond205:                                      ; preds = %for.inc222, %for.end152
  %192 = load i32, i32* %j, align 4, !dbg !7057
  %cmp206 = icmp slt i32 %192, 4, !dbg !7060
  br i1 %cmp206, label %for.body207, label %for.end224, !dbg !7061

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4, !dbg !7062
  br label %for.cond208, !dbg !7065

for.cond208:                                      ; preds = %for.inc215, %for.body207
  %193 = load i32, i32* %i, align 4, !dbg !7066
  %cmp209 = icmp slt i32 %193, 4, !dbg !7069
  br i1 %cmp209, label %for.body210, label %for.end217, !dbg !7070

for.body210:                                      ; preds = %for.cond208
  %194 = load i32, i32* %i, align 4, !dbg !7071
  %idxprom211 = sext i32 %194 to i64, !dbg !7073
  %195 = load i32*, i32** %Yo, align 8, !dbg !7073
  %arrayidx212 = getelementptr inbounds i32, i32* %195, i64 %idxprom211, !dbg !7073
  %196 = load i32, i32* %arrayidx212, align 4, !dbg !7073
  %197 = load i32, i32* %i, align 4, !dbg !7074
  %idxprom213 = sext i32 %197 to i64, !dbg !7075
  %198 = load i32*, i32** %Y, align 8, !dbg !7075
  %arrayidx214 = getelementptr inbounds i32, i32* %198, i64 %idxprom213, !dbg !7075
  store i32 %196, i32* %arrayidx214, align 4, !dbg !7076
  br label %for.inc215, !dbg !7077

for.inc215:                                       ; preds = %for.body210
  %199 = load i32, i32* %i, align 4, !dbg !7078
  %inc216 = add nsw i32 %199, 1, !dbg !7078
  store i32 %inc216, i32* %i, align 4, !dbg !7078
  br label %for.cond208, !dbg !7080, !llvm.loop !7081

for.end217:                                       ; preds = %for.cond208
  %200 = load i32, i32* %Ystride, align 4, !dbg !7083
  %201 = load i32*, i32** %Y, align 8, !dbg !7084
  %idx.ext218 = sext i32 %200 to i64, !dbg !7084
  %add.ptr219 = getelementptr inbounds i32, i32* %201, i64 %idx.ext218, !dbg !7084
  store i32* %add.ptr219, i32** %Y, align 8, !dbg !7084
  %202 = load i32, i32* %oYstride, align 4, !dbg !7085
  %203 = load i32*, i32** %Yo, align 8, !dbg !7086
  %idx.ext220 = sext i32 %202 to i64, !dbg !7086
  %add.ptr221 = getelementptr inbounds i32, i32* %203, i64 %idx.ext220, !dbg !7086
  store i32* %add.ptr221, i32** %Yo, align 8, !dbg !7086
  br label %for.inc222, !dbg !7087

for.inc222:                                       ; preds = %for.end217
  %204 = load i32, i32* %j, align 4, !dbg !7088
  %inc223 = add nsw i32 %204, 1, !dbg !7088
  store i32 %inc223, i32* %j, align 4, !dbg !7088
  br label %for.cond205, !dbg !7090, !llvm.loop !7091

for.end224:                                       ; preds = %for.cond205
  %205 = load i32, i32* %Ystride, align 4, !dbg !7093
  %mul225 = mul nsw i32 %205, 4, !dbg !7094
  %206 = load i32*, i32** %Y, align 8, !dbg !7095
  %idx.ext226 = sext i32 %mul225 to i64, !dbg !7095
  %idx.neg227 = sub i64 0, %idx.ext226, !dbg !7095
  %add.ptr228 = getelementptr inbounds i32, i32* %206, i64 %idx.neg227, !dbg !7095
  store i32* %add.ptr228, i32** %Y, align 8, !dbg !7095
  %207 = load i32*, i32** %Y, align 8, !dbg !7096
  %arrayidx229 = getelementptr inbounds i32, i32* %207, i64 3, !dbg !7096
  %208 = load i32, i32* %arrayidx229, align 4, !dbg !7096
  %209 = load i32*, i32** %last, align 8, !dbg !7097
  %arrayidx230 = getelementptr inbounds i32, i32* %209, i64 3, !dbg !7097
  %210 = load i32, i32* %arrayidx230, align 4, !dbg !7097
  %sub231 = sub nsw i32 %208, %210, !dbg !7098
  %211 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7099
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %211, i32 0, i32 11, !dbg !7100
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 0, !dbg !7099
  store i32 %sub231, i32* %arrayidx232, align 8, !dbg !7101
  %212 = load i32, i32* %Ystride, align 4, !dbg !7102
  %add233 = add nsw i32 3, %212, !dbg !7103
  %idxprom234 = sext i32 %add233 to i64, !dbg !7104
  %213 = load i32*, i32** %Y, align 8, !dbg !7104
  %arrayidx235 = getelementptr inbounds i32, i32* %213, i64 %idxprom234, !dbg !7104
  %214 = load i32, i32* %arrayidx235, align 4, !dbg !7104
  %215 = load i32*, i32** %Y, align 8, !dbg !7105
  %arrayidx236 = getelementptr inbounds i32, i32* %215, i64 3, !dbg !7105
  %216 = load i32, i32* %arrayidx236, align 4, !dbg !7105
  %sub237 = sub nsw i32 %214, %216, !dbg !7106
  %217 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7107
  %D238 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %217, i32 0, i32 11, !dbg !7108
  %arrayidx239 = getelementptr inbounds [4 x i32], [4 x i32]* %D238, i64 0, i64 1, !dbg !7107
  store i32 %sub237, i32* %arrayidx239, align 4, !dbg !7109
  %218 = load i32, i32* %Ystride, align 4, !dbg !7110
  %mul240 = mul nsw i32 %218, 2, !dbg !7111
  %add241 = add nsw i32 3, %mul240, !dbg !7112
  %idxprom242 = sext i32 %add241 to i64, !dbg !7113
  %219 = load i32*, i32** %Y, align 8, !dbg !7113
  %arrayidx243 = getelementptr inbounds i32, i32* %219, i64 %idxprom242, !dbg !7113
  %220 = load i32, i32* %arrayidx243, align 4, !dbg !7113
  %221 = load i32, i32* %Ystride, align 4, !dbg !7114
  %add244 = add nsw i32 3, %221, !dbg !7115
  %idxprom245 = sext i32 %add244 to i64, !dbg !7116
  %222 = load i32*, i32** %Y, align 8, !dbg !7116
  %arrayidx246 = getelementptr inbounds i32, i32* %222, i64 %idxprom245, !dbg !7116
  %223 = load i32, i32* %arrayidx246, align 4, !dbg !7116
  %sub247 = sub nsw i32 %220, %223, !dbg !7117
  %224 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7118
  %D248 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %224, i32 0, i32 11, !dbg !7119
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %D248, i64 0, i64 2, !dbg !7118
  store i32 %sub247, i32* %arrayidx249, align 8, !dbg !7120
  %225 = load i32, i32* %Ystride, align 4, !dbg !7121
  %mul250 = mul nsw i32 %225, 3, !dbg !7122
  %add251 = add nsw i32 3, %mul250, !dbg !7123
  %idxprom252 = sext i32 %add251 to i64, !dbg !7124
  %226 = load i32*, i32** %Y, align 8, !dbg !7124
  %arrayidx253 = getelementptr inbounds i32, i32* %226, i64 %idxprom252, !dbg !7124
  %227 = load i32, i32* %arrayidx253, align 4, !dbg !7124
  %228 = load i32, i32* %Ystride, align 4, !dbg !7125
  %mul254 = mul nsw i32 %228, 2, !dbg !7126
  %add255 = add nsw i32 3, %mul254, !dbg !7127
  %idxprom256 = sext i32 %add255 to i64, !dbg !7128
  %229 = load i32*, i32** %Y, align 8, !dbg !7128
  %arrayidx257 = getelementptr inbounds i32, i32* %229, i64 %idxprom256, !dbg !7128
  %230 = load i32, i32* %arrayidx257, align 4, !dbg !7128
  %sub258 = sub nsw i32 %227, %230, !dbg !7129
  %231 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7130
  %D259 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %231, i32 0, i32 11, !dbg !7131
  %arrayidx260 = getelementptr inbounds [4 x i32], [4 x i32]* %D259, i64 0, i64 3, !dbg !7130
  store i32 %sub258, i32* %arrayidx260, align 4, !dbg !7132
  store i32 0, i32* %i, align 4, !dbg !7133
  br label %for.cond261, !dbg !7135

for.cond261:                                      ; preds = %for.inc270, %for.end224
  %232 = load i32, i32* %i, align 4, !dbg !7136
  %cmp262 = icmp slt i32 %232, 4, !dbg !7139
  br i1 %cmp262, label %for.body263, label %for.end272, !dbg !7140

for.body263:                                      ; preds = %for.cond261
  %233 = load i32, i32* %i, align 4, !dbg !7141
  %234 = load i32, i32* %Ystride, align 4, !dbg !7142
  %mul264 = mul nsw i32 %234, 3, !dbg !7143
  %add265 = add nsw i32 %233, %mul264, !dbg !7144
  %idxprom266 = sext i32 %add265 to i64, !dbg !7145
  %235 = load i32*, i32** %Y, align 8, !dbg !7145
  %arrayidx267 = getelementptr inbounds i32, i32* %235, i64 %idxprom266, !dbg !7145
  %236 = load i32, i32* %arrayidx267, align 4, !dbg !7145
  %237 = load i32, i32* %i, align 4, !dbg !7146
  %idxprom268 = sext i32 %237 to i64, !dbg !7147
  %238 = load i32*, i32** %last, align 8, !dbg !7147
  %arrayidx269 = getelementptr inbounds i32, i32* %238, i64 %idxprom268, !dbg !7147
  store i32 %236, i32* %arrayidx269, align 4, !dbg !7148
  br label %for.inc270, !dbg !7147

for.inc270:                                       ; preds = %for.body263
  %239 = load i32, i32* %i, align 4, !dbg !7149
  %inc271 = add nsw i32 %239, 1, !dbg !7149
  store i32 %inc271, i32* %i, align 4, !dbg !7149
  br label %for.cond261, !dbg !7151, !llvm.loop !7152

for.end272:                                       ; preds = %if.then, %for.cond261
  ret void, !dbg !7154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_high_chroma(i32* %data, i32 %stride, i32* %last, i32* %CD, i32* %deltas) #4 !dbg !7155 {
entry:
  %data.addr = alloca i32*, align 8
  %stride.addr = alloca i32, align 4
  %last.addr = alloca i32*, align 8
  %CD.addr = alloca i32*, align 8
  %deltas.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7159, metadata !1653), !dbg !7160
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7161, metadata !1653), !dbg !7162
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !7163, metadata !1653), !dbg !7164
  store i32* %CD, i32** %CD.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %CD.addr, metadata !7165, metadata !1653), !dbg !7166
  store i32* %deltas, i32** %deltas.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %deltas.addr, metadata !7167, metadata !1653), !dbg !7168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7169, metadata !1653), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7171, metadata !1653), !dbg !7172
  store i32 0, i32* %j, align 4, !dbg !7173
  br label %for.cond, !dbg !7175

for.cond:                                         ; preds = %for.inc16, %entry
  %0 = load i32, i32* %j, align 4, !dbg !7176
  %cmp = icmp slt i32 %0, 2, !dbg !7179
  br i1 %cmp, label %for.body, label %for.end18, !dbg !7180

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7181
  br label %for.cond1, !dbg !7184

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !7185
  %cmp2 = icmp slt i32 %1, 2, !dbg !7188
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7189

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %i, align 4, !dbg !7190
  %3 = load i32, i32* %j, align 4, !dbg !7192
  %mul = mul nsw i32 %3, 2, !dbg !7193
  %add = add nsw i32 %2, %mul, !dbg !7194
  %idxprom = sext i32 %add to i64, !dbg !7195
  %4 = load i32*, i32** %deltas.addr, align 8, !dbg !7195
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !7195
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7195
  %6 = load i32, i32* %j, align 4, !dbg !7196
  %idxprom4 = sext i32 %6 to i64, !dbg !7197
  %7 = load i32*, i32** %CD.addr, align 8, !dbg !7197
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom4, !dbg !7197
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7198
  %add6 = add i32 %8, %5, !dbg !7198
  store i32 %add6, i32* %arrayidx5, align 4, !dbg !7198
  %9 = load i32, i32* %j, align 4, !dbg !7199
  %idxprom7 = sext i32 %9 to i64, !dbg !7200
  %10 = load i32*, i32** %CD.addr, align 8, !dbg !7200
  %arrayidx8 = getelementptr inbounds i32, i32* %10, i64 %idxprom7, !dbg !7200
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !7200
  %12 = load i32, i32* %i, align 4, !dbg !7201
  %idxprom9 = sext i32 %12 to i64, !dbg !7202
  %13 = load i32*, i32** %last.addr, align 8, !dbg !7202
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !7202
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !7203
  %add11 = add i32 %14, %11, !dbg !7203
  store i32 %add11, i32* %arrayidx10, align 4, !dbg !7203
  %15 = load i32, i32* %i, align 4, !dbg !7204
  %idxprom12 = sext i32 %15 to i64, !dbg !7205
  %16 = load i32*, i32** %last.addr, align 8, !dbg !7205
  %arrayidx13 = getelementptr inbounds i32, i32* %16, i64 %idxprom12, !dbg !7205
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !7205
  %18 = load i32, i32* %i, align 4, !dbg !7206
  %idxprom14 = sext i32 %18 to i64, !dbg !7207
  %19 = load i32*, i32** %data.addr, align 8, !dbg !7207
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 %idxprom14, !dbg !7207
  store i32 %17, i32* %arrayidx15, align 4, !dbg !7208
  br label %for.inc, !dbg !7209

for.inc:                                          ; preds = %for.body3
  %20 = load i32, i32* %i, align 4, !dbg !7210
  %inc = add nsw i32 %20, 1, !dbg !7210
  store i32 %inc, i32* %i, align 4, !dbg !7210
  br label %for.cond1, !dbg !7212, !llvm.loop !7213

for.end:                                          ; preds = %for.cond1
  %21 = load i32, i32* %stride.addr, align 4, !dbg !7215
  %22 = load i32*, i32** %data.addr, align 8, !dbg !7216
  %idx.ext = sext i32 %21 to i64, !dbg !7216
  %add.ptr = getelementptr inbounds i32, i32* %22, i64 %idx.ext, !dbg !7216
  store i32* %add.ptr, i32** %data.addr, align 8, !dbg !7216
  br label %for.inc16, !dbg !7217

for.inc16:                                        ; preds = %for.end
  %23 = load i32, i32* %j, align 4, !dbg !7218
  %inc17 = add nsw i32 %23, 1, !dbg !7218
  store i32 %inc17, i32* %j, align 4, !dbg !7218
  br label %for.cond, !dbg !7220, !llvm.loop !7221

for.end18:                                        ; preds = %for.cond
  ret void, !dbg !7223
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_apply_deltas(%struct.TM2Context* %ctx, i32* %Y, i32 %stride, i32* %deltas, i32* %last) #4 !dbg !7224 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3187, metadata !1653), !dbg !7227
  %ctx.addr = alloca %struct.TM2Context*, align 8
  %Y.addr = alloca i32*, align 8
  %stride.addr = alloca i32, align 4
  %deltas.addr = alloca i32*, align 8
  %last.addr = alloca i32*, align 8
  %ct = alloca i32, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.TM2Context* %ctx, %struct.TM2Context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TM2Context** %ctx.addr, metadata !7235, metadata !1653), !dbg !7236
  store i32* %Y, i32** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %Y.addr, metadata !7237, metadata !1653), !dbg !7238
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7239, metadata !1653), !dbg !7240
  store i32* %deltas, i32** %deltas.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %deltas.addr, metadata !7241, metadata !1653), !dbg !7242
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !7243, metadata !1653), !dbg !7244
  call void @llvm.dbg.declare(metadata i32* %ct, metadata !7245, metadata !1653), !dbg !7246
  call void @llvm.dbg.declare(metadata i32* %d, metadata !7247, metadata !1653), !dbg !7248
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7249, metadata !1653), !dbg !7250
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7251, metadata !1653), !dbg !7252
  store i32 0, i32* %j, align 4, !dbg !7253
  br label %for.cond, !dbg !7254

for.cond:                                         ; preds = %for.inc17, %entry
  %0 = load i32, i32* %j, align 4, !dbg !7255
  %cmp = icmp slt i32 %0, 4, !dbg !7257
  br i1 %cmp, label %for.body, label %for.end19, !dbg !7258

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !7259
  %idxprom = sext i32 %1 to i64, !dbg !7260
  %2 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7260
  %D = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %2, i32 0, i32 11, !dbg !7261
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %D, i64 0, i64 %idxprom, !dbg !7260
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7260
  store i32 %3, i32* %ct, align 4, !dbg !7262
  store i32 0, i32* %i, align 4, !dbg !7263
  br label %for.cond1, !dbg !7264

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !7265
  %cmp2 = icmp slt i32 %4, 4, !dbg !7267
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7268

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %i, align 4, !dbg !7269
  %6 = load i32, i32* %j, align 4, !dbg !7270
  %mul = mul nsw i32 %6, 4, !dbg !7271
  %add = add nsw i32 %5, %mul, !dbg !7272
  %idxprom4 = sext i32 %add to i64, !dbg !7273
  %7 = load i32*, i32** %deltas.addr, align 8, !dbg !7273
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom4, !dbg !7273
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7273
  store i32 %8, i32* %d, align 4, !dbg !7274
  %9 = load i32, i32* %d, align 4, !dbg !7275
  %10 = load i32, i32* %ct, align 4, !dbg !7276
  %add6 = add i32 %10, %9, !dbg !7276
  store i32 %add6, i32* %ct, align 4, !dbg !7276
  %11 = load i32, i32* %ct, align 4, !dbg !7277
  %12 = load i32, i32* %i, align 4, !dbg !7278
  %idxprom7 = sext i32 %12 to i64, !dbg !7279
  %13 = load i32*, i32** %last.addr, align 8, !dbg !7279
  %arrayidx8 = getelementptr inbounds i32, i32* %13, i64 %idxprom7, !dbg !7279
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !7280
  %add9 = add i32 %14, %11, !dbg !7280
  store i32 %add9, i32* %arrayidx8, align 4, !dbg !7280
  %15 = load i32, i32* %i, align 4, !dbg !7281
  %idxprom10 = sext i32 %15 to i64, !dbg !7282
  %16 = load i32*, i32** %last.addr, align 8, !dbg !7282
  %arrayidx11 = getelementptr inbounds i32, i32* %16, i64 %idxprom10, !dbg !7282
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !7282
  store i32 %17, i32* %a.addr.i, align 4, !dbg !7283
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !7284
  %and.i = and i32 %18, -256, !dbg !7285
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7285
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7286

if.then.i:                                        ; preds = %for.body3
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !7287
  %neg.i = xor i32 %19, -1, !dbg !7288
  %shr.i = ashr i32 %neg.i, 31, !dbg !7289
  %conv.i = trunc i32 %shr.i to i8, !dbg !7290
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !7291
  br label %av_clip_uint8_c.exit, !dbg !7291

if.else.i:                                        ; preds = %for.body3
  %20 = load i32, i32* %a.addr.i, align 4, !dbg !7292
  %conv1.i = trunc i32 %20 to i8, !dbg !7292
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !7293
  br label %av_clip_uint8_c.exit, !dbg !7293

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %21 = load i8, i8* %retval.i, align 1, !dbg !7294
  %conv = zext i8 %21 to i32, !dbg !7283
  %22 = load i32, i32* %i, align 4, !dbg !7295
  %idxprom12 = sext i32 %22 to i64, !dbg !7296
  %23 = load i32*, i32** %Y.addr, align 8, !dbg !7296
  %arrayidx13 = getelementptr inbounds i32, i32* %23, i64 %idxprom12, !dbg !7296
  store i32 %conv, i32* %arrayidx13, align 4, !dbg !7297
  br label %for.inc, !dbg !7298

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %24 = load i32, i32* %i, align 4, !dbg !7299
  %inc = add nsw i32 %24, 1, !dbg !7299
  store i32 %inc, i32* %i, align 4, !dbg !7299
  br label %for.cond1, !dbg !7301, !llvm.loop !7302

for.end:                                          ; preds = %for.cond1
  %25 = load i32, i32* %stride.addr, align 4, !dbg !7304
  %26 = load i32*, i32** %Y.addr, align 8, !dbg !7305
  %idx.ext = sext i32 %25 to i64, !dbg !7305
  %add.ptr = getelementptr inbounds i32, i32* %26, i64 %idx.ext, !dbg !7305
  store i32* %add.ptr, i32** %Y.addr, align 8, !dbg !7305
  %27 = load i32, i32* %ct, align 4, !dbg !7306
  %28 = load i32, i32* %j, align 4, !dbg !7307
  %idxprom14 = sext i32 %28 to i64, !dbg !7308
  %29 = load %struct.TM2Context*, %struct.TM2Context** %ctx.addr, align 8, !dbg !7308
  %D15 = getelementptr inbounds %struct.TM2Context, %struct.TM2Context* %29, i32 0, i32 11, !dbg !7309
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %D15, i64 0, i64 %idxprom14, !dbg !7308
  store i32 %27, i32* %arrayidx16, align 4, !dbg !7310
  br label %for.inc17, !dbg !7311

for.inc17:                                        ; preds = %for.end
  %30 = load i32, i32* %j, align 4, !dbg !7312
  %inc18 = add nsw i32 %30, 1, !dbg !7312
  store i32 %inc18, i32* %j, align 4, !dbg !7312
  br label %for.cond, !dbg !7314, !llvm.loop !7315

for.end19:                                        ; preds = %for.cond
  ret void, !dbg !7317
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tm2_low_chroma(i32* %data, i32 %stride, i32* %clast, i32* %CD, i32* %deltas, i32 %bx) #4 !dbg !7318 {
entry:
  %data.addr = alloca i32*, align 8
  %stride.addr = alloca i32, align 4
  %clast.addr = alloca i32*, align 8
  %CD.addr = alloca i32*, align 8
  %deltas.addr = alloca i32*, align 8
  %bx.addr = alloca i32, align 4
  %t = alloca i32, align 4
  %l = alloca i32, align 4
  %prev = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7321, metadata !1653), !dbg !7322
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7323, metadata !1653), !dbg !7324
  store i32* %clast, i32** %clast.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %clast.addr, metadata !7325, metadata !1653), !dbg !7326
  store i32* %CD, i32** %CD.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %CD.addr, metadata !7327, metadata !1653), !dbg !7328
  store i32* %deltas, i32** %deltas.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %deltas.addr, metadata !7329, metadata !1653), !dbg !7330
  store i32 %bx, i32* %bx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bx.addr, metadata !7331, metadata !1653), !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %t, metadata !7333, metadata !1653), !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %l, metadata !7335, metadata !1653), !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !7337, metadata !1653), !dbg !7338
  %0 = load i32, i32* %bx.addr, align 4, !dbg !7339
  %cmp = icmp sgt i32 %0, 0, !dbg !7341
  br i1 %cmp, label %if.then, label %if.else, !dbg !7342

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %clast.addr, align 8, !dbg !7343
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 -3, !dbg !7343
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7343
  store i32 %2, i32* %prev, align 4, !dbg !7344
  br label %if.end, !dbg !7345

if.else:                                          ; preds = %entry
  store i32 0, i32* %prev, align 4, !dbg !7346
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i32*, i32** %CD.addr, align 8, !dbg !7347
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !7347
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !7347
  %5 = load i32*, i32** %CD.addr, align 8, !dbg !7348
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !7348
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !7348
  %add = add i32 %4, %6, !dbg !7349
  %shr = ashr i32 %add, 1, !dbg !7350
  store i32 %shr, i32* %t, align 4, !dbg !7351
  %7 = load i32, i32* %prev, align 4, !dbg !7352
  %8 = load i32*, i32** %CD.addr, align 8, !dbg !7353
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 0, !dbg !7353
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !7353
  %sub = sub i32 %7, %9, !dbg !7354
  %10 = load i32*, i32** %CD.addr, align 8, !dbg !7355
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !7355
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !7355
  %sub5 = sub i32 %sub, %11, !dbg !7356
  %12 = load i32*, i32** %clast.addr, align 8, !dbg !7357
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 1, !dbg !7357
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !7357
  %add7 = add i32 %sub5, %13, !dbg !7358
  %shr8 = ashr i32 %add7, 1, !dbg !7359
  store i32 %shr8, i32* %l, align 4, !dbg !7360
  %14 = load i32*, i32** %CD.addr, align 8, !dbg !7361
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !7361
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !7361
  %16 = load i32*, i32** %CD.addr, align 8, !dbg !7362
  %arrayidx10 = getelementptr inbounds i32, i32* %16, i64 1, !dbg !7362
  %17 = load i32, i32* %arrayidx10, align 4, !dbg !7362
  %add11 = add i32 %15, %17, !dbg !7363
  %18 = load i32, i32* %t, align 4, !dbg !7364
  %sub12 = sub i32 %add11, %18, !dbg !7365
  %19 = load i32*, i32** %CD.addr, align 8, !dbg !7366
  %arrayidx13 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !7366
  store i32 %sub12, i32* %arrayidx13, align 4, !dbg !7367
  %20 = load i32, i32* %t, align 4, !dbg !7368
  %21 = load i32*, i32** %CD.addr, align 8, !dbg !7369
  %arrayidx14 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !7369
  store i32 %20, i32* %arrayidx14, align 4, !dbg !7370
  %22 = load i32, i32* %l, align 4, !dbg !7371
  %23 = load i32*, i32** %clast.addr, align 8, !dbg !7372
  %arrayidx15 = getelementptr inbounds i32, i32* %23, i64 0, !dbg !7372
  store i32 %22, i32* %arrayidx15, align 4, !dbg !7373
  %24 = load i32*, i32** %data.addr, align 8, !dbg !7374
  %25 = load i32, i32* %stride.addr, align 4, !dbg !7375
  %26 = load i32*, i32** %clast.addr, align 8, !dbg !7376
  %27 = load i32*, i32** %CD.addr, align 8, !dbg !7377
  %28 = load i32*, i32** %deltas.addr, align 8, !dbg !7378
  call void @tm2_high_chroma(i32* %24, i32 %25, i32* %26, i32* %27, i32* %28), !dbg !7379
  ret void, !dbg !7380
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1647, !1648}
!llvm.ident = !{!1649}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !898, globals: !915)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--truemotion2.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TM2_STREAMS", file: !888, line: 39, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/truemotion2.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897}
!890 = !DIEnumerator(name: "TM2_C_HI", value: 0)
!891 = !DIEnumerator(name: "TM2_C_LO", value: 1)
!892 = !DIEnumerator(name: "TM2_L_HI", value: 2)
!893 = !DIEnumerator(name: "TM2_L_LO", value: 3)
!894 = !DIEnumerator(name: "TM2_UPD", value: 4)
!895 = !DIEnumerator(name: "TM2_MOT", value: 5)
!896 = !DIEnumerator(name: "TM2_TYPE", value: 6)
!897 = !DIEnumerator(name: "TM2_NUM_STREAMS", value: 7)
!898 = !{!899, !903, !905, !902, !906, !912, !913}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !901, line: 51, baseType: !902)
!901 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!902 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!905 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !909, line: 221, size: 32, align: 8, elements: !910)
!909 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !908, file: !909, line: 221, baseType: !900, size: 32, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !901, line: 48, baseType: !914)
!914 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!915 = !{!916, !1643}
!916 = distinct !DIGlobalVariable(name: "ff_truemotion2_decoder", scope: !0, file: !888, line: 1045, type: !917, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_truemotion2_decoder)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !919)
!919 = !{!920, !924, !925, !926, !927, !928, !937, !940, !943, !946, !951, !952, !993, !1001, !1002, !1003, !1005, !1558, !1564, !1572, !1576, !1577, !1614, !1618, !1622, !1623, !1627, !1631, !1632, !1636, !1637, !1638}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !918, file: !14, line: 3475, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!923 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !918, file: !14, line: 3480, baseType: !921, size: 64, align: 64, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !918, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !918, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !918, file: !14, line: 3487, baseType: !905, size: 32, align: 32, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !918, file: !14, line: 3488, baseType: !929, size: 64, align: 64, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64, align: 64)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !932, line: 61, baseType: !933)
!932 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !932, line: 58, size: 64, align: 32, elements: !934)
!934 = !{!935, !936}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !933, file: !932, line: 59, baseType: !905, size: 32, align: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !933, file: !932, line: 60, baseType: !905, size: 32, align: 32, offset: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !918, file: !14, line: 3489, baseType: !938, size: 64, align: 64, offset: 320)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !918, file: !14, line: 3490, baseType: !941, size: 64, align: 64, offset: 384)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !918, file: !14, line: 3491, baseType: !944, size: 64, align: 64, offset: 448)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !918, file: !14, line: 3492, baseType: !947, size: 64, align: 64, offset: 512)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !901, line: 55, baseType: !950)
!950 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !918, file: !14, line: 3493, baseType: !913, size: 8, align: 8, offset: 576)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !918, file: !14, line: 3494, baseType: !953, size: 64, align: 64, offset: 640)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !957)
!957 = !{!958, !959, !963, !967, !968, !969, !970, !974, !980, !982, !986}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !956, file: !691, line: 72, baseType: !921, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !956, file: !691, line: 78, baseType: !960, size: 64, align: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{!921, !912}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !956, file: !691, line: 85, baseType: !964, size: 64, align: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !956, file: !691, line: 93, baseType: !905, size: 32, align: 32, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !956, file: !691, line: 99, baseType: !905, size: 32, align: 32, offset: 224)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !956, file: !691, line: 108, baseType: !905, size: 32, align: 32, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !956, file: !691, line: 113, baseType: !971, size: 64, align: 64, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!912, !912, !912}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !956, file: !691, line: 123, baseType: !975, size: 64, align: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !956, file: !691, line: 130, baseType: !981, size: 32, align: 32, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !956, file: !691, line: 136, baseType: !983, size: 64, align: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!981, !912}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !956, file: !691, line: 142, baseType: !987, size: 64, align: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!905, !990, !912, !921, !905}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !918, file: !14, line: 3495, baseType: !994, size: 64, align: 64, offset: 704)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !997, file: !14, line: 3402, baseType: !905, size: 32, align: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !997, file: !14, line: 3403, baseType: !921, size: 64, align: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !918, file: !14, line: 3507, baseType: !921, size: 64, align: 64, offset: 768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !918, file: !14, line: 3516, baseType: !905, size: 32, align: 32, offset: 832)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !918, file: !14, line: 3517, baseType: !1004, size: 64, align: 64, offset: 896)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !918, file: !14, line: 3527, baseType: !1006, size: 64, align: 64, offset: 960)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!905, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1019, !1020, !1021, !1022, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1304, !1308, !1309, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1496, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1011, file: !14, line: 1561, baseType: !953, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1011, file: !14, line: 1562, baseType: !905, size: 32, align: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1011, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1011, file: !14, line: 1565, baseType: !1017, size: 64, align: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1011, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1011, file: !14, line: 1581, baseType: !902, size: 32, align: 32, offset: 224)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1011, file: !14, line: 1583, baseType: !912, size: 64, align: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1011, file: !14, line: 1591, baseType: !1023, size: 64, align: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1025, line: 129, size: 1664, align: 64, elements: !1026)
!1025 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1026 = !{!1027, !1028, !1029, !1030, !1130, !1151, !1152, !1181, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1024, file: !1025, line: 136, baseType: !905, size: 32, align: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1024, file: !1025, line: 151, baseType: !905, size: 32, align: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1024, file: !1025, line: 157, baseType: !905, size: 32, align: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1024, file: !1025, line: 159, baseType: !1031, size: 64, align: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1034)
!1034 = !{!1035, !1040, !1042, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1082, !1084, !1085, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1118, !1119, !1120, !1121, !1122, !1123, !1126, !1127, !1128, !1129}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1033, file: !722, line: 282, baseType: !1036, size: 512, align: 64)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 512, align: 64, elements: !1038)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64, align: 64)
!1038 = !{!1039}
!1039 = !DISubrange(count: 8)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1033, file: !722, line: 299, baseType: !1041, size: 256, align: 32, offset: 512)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 256, align: 32, elements: !1038)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1033, file: !722, line: 315, baseType: !1043, size: 64, align: 64, offset: 768)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1033, file: !722, line: 326, baseType: !905, size: 32, align: 32, offset: 832)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1033, file: !722, line: 326, baseType: !905, size: 32, align: 32, offset: 864)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1033, file: !722, line: 334, baseType: !905, size: 32, align: 32, offset: 896)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1033, file: !722, line: 341, baseType: !905, size: 32, align: 32, offset: 928)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1033, file: !722, line: 346, baseType: !905, size: 32, align: 32, offset: 960)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1033, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1033, file: !722, line: 356, baseType: !931, size: 64, align: 32, offset: 1024)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1033, file: !722, line: 361, baseType: !1052, size: 64, align: 64, offset: 1088)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !901, line: 40, baseType: !1053)
!1053 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1033, file: !722, line: 369, baseType: !1052, size: 64, align: 64, offset: 1152)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1033, file: !722, line: 377, baseType: !1052, size: 64, align: 64, offset: 1216)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1033, file: !722, line: 382, baseType: !905, size: 32, align: 32, offset: 1280)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1033, file: !722, line: 386, baseType: !905, size: 32, align: 32, offset: 1312)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1033, file: !722, line: 391, baseType: !905, size: 32, align: 32, offset: 1344)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1033, file: !722, line: 396, baseType: !912, size: 64, align: 64, offset: 1408)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1033, file: !722, line: 403, baseType: !1061, size: 512, align: 64, offset: 1472)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 512, align: 64, elements: !1038)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1033, file: !722, line: 410, baseType: !905, size: 32, align: 32, offset: 1984)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1033, file: !722, line: 415, baseType: !905, size: 32, align: 32, offset: 2016)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1033, file: !722, line: 420, baseType: !905, size: 32, align: 32, offset: 2048)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1033, file: !722, line: 425, baseType: !905, size: 32, align: 32, offset: 2080)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1033, file: !722, line: 435, baseType: !1052, size: 64, align: 64, offset: 2112)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1033, file: !722, line: 440, baseType: !905, size: 32, align: 32, offset: 2176)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1033, file: !722, line: 445, baseType: !949, size: 64, align: 64, offset: 2240)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1033, file: !722, line: 459, baseType: !1070, size: 512, align: 64, offset: 2304)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 512, align: 64, elements: !1038)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1073, line: 94, baseType: !1074)
!1073 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1073, line: 81, size: 192, align: 64, elements: !1075)
!1075 = !{!1076, !1080, !1081}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1074, file: !1073, line: 82, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1073, line: 73, baseType: !1079)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1073, line: 73, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1074, file: !1073, line: 89, baseType: !1037, size: 64, align: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1074, file: !1073, line: 93, baseType: !905, size: 32, align: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1033, file: !722, line: 473, baseType: !1083, size: 64, align: 64, offset: 2816)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1033, file: !722, line: 477, baseType: !905, size: 32, align: 32, offset: 2880)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1033, file: !722, line: 479, baseType: !1086, size: 64, align: 64, offset: 2944)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1099}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1089, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1089, file: !722, line: 203, baseType: !1037, size: 64, align: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1089, file: !722, line: 204, baseType: !905, size: 32, align: 32, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1089, file: !722, line: 205, baseType: !1095, size: 64, align: 64, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1097, line: 86, baseType: !1098)
!1097 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1097, line: 86, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1089, file: !722, line: 206, baseType: !1071, size: 64, align: 64, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1033, file: !722, line: 480, baseType: !905, size: 32, align: 32, offset: 3008)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1033, file: !722, line: 505, baseType: !905, size: 32, align: 32, offset: 3040)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1033, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1033, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1033, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1033, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1033, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1033, file: !722, line: 532, baseType: !1052, size: 64, align: 64, offset: 3264)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1033, file: !722, line: 539, baseType: !1052, size: 64, align: 64, offset: 3328)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1033, file: !722, line: 547, baseType: !1052, size: 64, align: 64, offset: 3392)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1033, file: !722, line: 554, baseType: !1095, size: 64, align: 64, offset: 3456)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1033, file: !722, line: 563, baseType: !905, size: 32, align: 32, offset: 3520)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1033, file: !722, line: 572, baseType: !905, size: 32, align: 32, offset: 3552)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1033, file: !722, line: 581, baseType: !905, size: 32, align: 32, offset: 3584)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1033, file: !722, line: 588, baseType: !1115, size: 64, align: 64, offset: 3648)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !901, line: 36, baseType: !1117)
!1117 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1033, file: !722, line: 593, baseType: !905, size: 32, align: 32, offset: 3712)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1033, file: !722, line: 596, baseType: !905, size: 32, align: 32, offset: 3744)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1033, file: !722, line: 599, baseType: !1071, size: 64, align: 64, offset: 3776)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1033, file: !722, line: 605, baseType: !1071, size: 64, align: 64, offset: 3840)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1033, file: !722, line: 616, baseType: !1071, size: 64, align: 64, offset: 3904)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1033, file: !722, line: 626, baseType: !1124, size: 64, align: 64, offset: 3968)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1125, line: 216, baseType: !950)
!1125 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1033, file: !722, line: 627, baseType: !1124, size: 64, align: 64, offset: 4032)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1033, file: !722, line: 628, baseType: !1124, size: 64, align: 64, offset: 4096)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1033, file: !722, line: 629, baseType: !1124, size: 64, align: 64, offset: 4160)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1033, file: !722, line: 645, baseType: !1071, size: 64, align: 64, offset: 4224)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1024, file: !1025, line: 161, baseType: !1131, size: 64, align: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1025, line: 117, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1025, line: 100, size: 832, align: 64, elements: !1134)
!1134 = !{!1135, !1142, !1143, !1144, !1145, !1146, !1148, !1149, !1150}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1133, file: !1025, line: 105, baseType: !1136, size: 256, align: 64)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 256, align: 64, elements: !1140)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1073, line: 238, baseType: !1139)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1073, line: 238, flags: DIFlagFwdDecl)
!1140 = !{!1141}
!1141 = !DISubrange(count: 4)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1133, file: !1025, line: 110, baseType: !905, size: 32, align: 32, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1133, file: !1025, line: 111, baseType: !905, size: 32, align: 32, offset: 288)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1133, file: !1025, line: 111, baseType: !905, size: 32, align: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1133, file: !1025, line: 112, baseType: !1041, size: 256, align: 32, offset: 352)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1133, file: !1025, line: 113, baseType: !1147, size: 128, align: 32, offset: 608)
!1147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 128, align: 32, elements: !1140)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1133, file: !1025, line: 114, baseType: !905, size: 32, align: 32, offset: 736)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1133, file: !1025, line: 115, baseType: !905, size: 32, align: 32, offset: 768)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1133, file: !1025, line: 116, baseType: !905, size: 32, align: 32, offset: 800)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1024, file: !1025, line: 163, baseType: !912, size: 64, align: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1024, file: !1025, line: 165, baseType: !1153, size: 128, align: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1025, line: 122, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1025, line: 119, size: 128, align: 64, elements: !1155)
!1155 = !{!1156, !1180}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1154, file: !1025, line: 120, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1176, !1177, !1178, !1179}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1159, file: !14, line: 1451, baseType: !1071, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1159, file: !14, line: 1461, baseType: !1052, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1159, file: !14, line: 1467, baseType: !1052, size: 64, align: 64, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1159, file: !14, line: 1468, baseType: !1037, size: 64, align: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1159, file: !14, line: 1469, baseType: !905, size: 32, align: 32, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1159, file: !14, line: 1470, baseType: !905, size: 32, align: 32, offset: 288)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1159, file: !14, line: 1474, baseType: !905, size: 32, align: 32, offset: 320)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1159, file: !14, line: 1479, baseType: !1169, size: 64, align: 64, offset: 384)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1172)
!1172 = !{!1173, !1174, !1175}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1171, file: !14, line: 1412, baseType: !1037, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1171, file: !14, line: 1413, baseType: !905, size: 32, align: 32, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1171, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1159, file: !14, line: 1480, baseType: !905, size: 32, align: 32, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1159, file: !14, line: 1486, baseType: !1052, size: 64, align: 64, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1159, file: !14, line: 1488, baseType: !1052, size: 64, align: 64, offset: 576)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1159, file: !14, line: 1497, baseType: !1052, size: 64, align: 64, offset: 640)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1154, file: !1025, line: 121, baseType: !1031, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1024, file: !1025, line: 166, baseType: !1182, size: 128, align: 64, offset: 448)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1025, line: 127, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1025, line: 124, size: 128, align: 64, elements: !1184)
!1184 = !{!1185, !1258}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1183, file: !1025, line: 125, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1190)
!1190 = !{!1191, !1192, !1216, !1220, !1221, !1255, !1256, !1257}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1189, file: !14, line: 5751, baseType: !953, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1189, file: !14, line: 5756, baseType: !1193, size: 64, align: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1196)
!1196 = !{!1197, !1198, !1201, !1202, !1203, !1207, !1211, !1215}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !14, line: 5797, baseType: !921, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1195, file: !14, line: 5804, baseType: !1199, size: 64, align: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1195, file: !14, line: 5815, baseType: !953, size: 64, align: 64, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1195, file: !14, line: 5825, baseType: !905, size: 32, align: 32, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1195, file: !14, line: 5826, baseType: !1204, size: 64, align: 64, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!905, !1187}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1195, file: !14, line: 5827, baseType: !1208, size: 64, align: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!905, !1187, !1157}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1195, file: !14, line: 5828, baseType: !1212, size: 64, align: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64, align: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{null, !1187}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1195, file: !14, line: 5829, baseType: !1212, size: 64, align: 64, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1189, file: !14, line: 5762, baseType: !1217, size: 64, align: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1219)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1189, file: !14, line: 5768, baseType: !912, size: 64, align: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1189, file: !14, line: 5775, baseType: !1222, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1224, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1224, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1224, file: !14, line: 3948, baseType: !900, size: 32, align: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1224, file: !14, line: 3958, baseType: !1037, size: 64, align: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1224, file: !14, line: 3962, baseType: !905, size: 32, align: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1224, file: !14, line: 3968, baseType: !905, size: 32, align: 32, offset: 224)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1224, file: !14, line: 3973, baseType: !1052, size: 64, align: 64, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1224, file: !14, line: 3986, baseType: !905, size: 32, align: 32, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1224, file: !14, line: 3999, baseType: !905, size: 32, align: 32, offset: 352)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1224, file: !14, line: 4004, baseType: !905, size: 32, align: 32, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1224, file: !14, line: 4005, baseType: !905, size: 32, align: 32, offset: 416)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1224, file: !14, line: 4010, baseType: !905, size: 32, align: 32, offset: 448)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1224, file: !14, line: 4011, baseType: !905, size: 32, align: 32, offset: 480)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1224, file: !14, line: 4020, baseType: !931, size: 64, align: 32, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1224, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1224, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1224, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1224, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1224, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1224, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1224, file: !14, line: 4039, baseType: !905, size: 32, align: 32, offset: 768)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1224, file: !14, line: 4046, baseType: !949, size: 64, align: 64, offset: 832)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1224, file: !14, line: 4050, baseType: !905, size: 32, align: 32, offset: 896)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1224, file: !14, line: 4054, baseType: !905, size: 32, align: 32, offset: 928)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1224, file: !14, line: 4061, baseType: !905, size: 32, align: 32, offset: 960)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1224, file: !14, line: 4065, baseType: !905, size: 32, align: 32, offset: 992)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1224, file: !14, line: 4073, baseType: !905, size: 32, align: 32, offset: 1024)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1224, file: !14, line: 4080, baseType: !905, size: 32, align: 32, offset: 1056)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1224, file: !14, line: 4084, baseType: !905, size: 32, align: 32, offset: 1088)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1189, file: !14, line: 5781, baseType: !1222, size: 64, align: 64, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1189, file: !14, line: 5787, baseType: !931, size: 64, align: 32, offset: 384)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1189, file: !14, line: 5793, baseType: !931, size: 64, align: 32, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1183, file: !1025, line: 126, baseType: !905, size: 32, align: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1024, file: !1025, line: 172, baseType: !1157, size: 64, align: 64, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1024, file: !1025, line: 177, baseType: !1037, size: 64, align: 64, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1024, file: !1025, line: 178, baseType: !902, size: 32, align: 32, offset: 704)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1024, file: !1025, line: 180, baseType: !912, size: 64, align: 64, offset: 768)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1024, file: !1025, line: 185, baseType: !905, size: 32, align: 32, offset: 832)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1024, file: !1025, line: 190, baseType: !912, size: 64, align: 64, offset: 896)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1024, file: !1025, line: 195, baseType: !905, size: 32, align: 32, offset: 960)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1024, file: !1025, line: 200, baseType: !1157, size: 64, align: 64, offset: 1024)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1024, file: !1025, line: 201, baseType: !905, size: 32, align: 32, offset: 1088)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1024, file: !1025, line: 202, baseType: !1031, size: 64, align: 64, offset: 1152)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1024, file: !1025, line: 203, baseType: !905, size: 32, align: 32, offset: 1216)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1024, file: !1025, line: 205, baseType: !905, size: 32, align: 32, offset: 1248)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1024, file: !1025, line: 206, baseType: !905, size: 32, align: 32, offset: 1280)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1024, file: !1025, line: 209, baseType: !1124, size: 64, align: 64, offset: 1344)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1024, file: !1025, line: 212, baseType: !1124, size: 64, align: 64, offset: 1408)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1024, file: !1025, line: 213, baseType: !1031, size: 64, align: 64, offset: 1472)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1024, file: !1025, line: 215, baseType: !905, size: 32, align: 32, offset: 1536)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1024, file: !1025, line: 217, baseType: !905, size: 32, align: 32, offset: 1568)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1024, file: !1025, line: 220, baseType: !905, size: 32, align: 32, offset: 1600)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1011, file: !14, line: 1598, baseType: !912, size: 64, align: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1011, file: !14, line: 1606, baseType: !1052, size: 64, align: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1011, file: !14, line: 1614, baseType: !905, size: 32, align: 32, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1011, file: !14, line: 1622, baseType: !905, size: 32, align: 32, offset: 544)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1011, file: !14, line: 1628, baseType: !905, size: 32, align: 32, offset: 576)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1011, file: !14, line: 1636, baseType: !905, size: 32, align: 32, offset: 608)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1011, file: !14, line: 1643, baseType: !905, size: 32, align: 32, offset: 640)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1011, file: !14, line: 1657, baseType: !1037, size: 64, align: 64, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1011, file: !14, line: 1658, baseType: !905, size: 32, align: 32, offset: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1011, file: !14, line: 1679, baseType: !931, size: 64, align: 32, offset: 800)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1011, file: !14, line: 1688, baseType: !905, size: 32, align: 32, offset: 864)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1011, file: !14, line: 1712, baseType: !905, size: 32, align: 32, offset: 896)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1011, file: !14, line: 1729, baseType: !905, size: 32, align: 32, offset: 928)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1011, file: !14, line: 1729, baseType: !905, size: 32, align: 32, offset: 960)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1011, file: !14, line: 1744, baseType: !905, size: 32, align: 32, offset: 992)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1011, file: !14, line: 1744, baseType: !905, size: 32, align: 32, offset: 1024)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1011, file: !14, line: 1751, baseType: !905, size: 32, align: 32, offset: 1056)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1011, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1011, file: !14, line: 1791, baseType: !1297, size: 64, align: 64, offset: 1152)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !1300, !1301, !1303, !905, !905, !905}
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1011, file: !14, line: 1808, baseType: !1305, size: 64, align: 64, offset: 1216)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!473, !1300, !938}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1011, file: !14, line: 1816, baseType: !905, size: 32, align: 32, offset: 1280)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1011, file: !14, line: 1825, baseType: !1310, size: 32, align: 32, offset: 1312)
!1310 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1011, file: !14, line: 1830, baseType: !905, size: 32, align: 32, offset: 1344)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1011, file: !14, line: 1838, baseType: !1310, size: 32, align: 32, offset: 1376)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1011, file: !14, line: 1846, baseType: !905, size: 32, align: 32, offset: 1408)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1011, file: !14, line: 1851, baseType: !905, size: 32, align: 32, offset: 1440)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1011, file: !14, line: 1861, baseType: !1310, size: 32, align: 32, offset: 1472)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1011, file: !14, line: 1868, baseType: !1310, size: 32, align: 32, offset: 1504)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1011, file: !14, line: 1875, baseType: !1310, size: 32, align: 32, offset: 1536)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1011, file: !14, line: 1882, baseType: !1310, size: 32, align: 32, offset: 1568)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1011, file: !14, line: 1889, baseType: !1310, size: 32, align: 32, offset: 1600)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1011, file: !14, line: 1896, baseType: !1310, size: 32, align: 32, offset: 1632)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1011, file: !14, line: 1903, baseType: !1310, size: 32, align: 32, offset: 1664)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1011, file: !14, line: 1910, baseType: !905, size: 32, align: 32, offset: 1696)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1011, file: !14, line: 1915, baseType: !905, size: 32, align: 32, offset: 1728)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1011, file: !14, line: 1926, baseType: !1303, size: 64, align: 64, offset: 1792)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1011, file: !14, line: 1935, baseType: !931, size: 64, align: 32, offset: 1856)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1011, file: !14, line: 1942, baseType: !905, size: 32, align: 32, offset: 1920)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1011, file: !14, line: 1948, baseType: !905, size: 32, align: 32, offset: 1952)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1011, file: !14, line: 1954, baseType: !905, size: 32, align: 32, offset: 1984)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1011, file: !14, line: 1960, baseType: !905, size: 32, align: 32, offset: 2016)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1011, file: !14, line: 1984, baseType: !905, size: 32, align: 32, offset: 2048)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1011, file: !14, line: 1991, baseType: !905, size: 32, align: 32, offset: 2080)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1011, file: !14, line: 1996, baseType: !905, size: 32, align: 32, offset: 2112)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1011, file: !14, line: 2004, baseType: !905, size: 32, align: 32, offset: 2144)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1011, file: !14, line: 2011, baseType: !905, size: 32, align: 32, offset: 2176)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1011, file: !14, line: 2018, baseType: !905, size: 32, align: 32, offset: 2208)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1011, file: !14, line: 2027, baseType: !905, size: 32, align: 32, offset: 2240)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1011, file: !14, line: 2034, baseType: !905, size: 32, align: 32, offset: 2272)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1011, file: !14, line: 2044, baseType: !905, size: 32, align: 32, offset: 2304)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1011, file: !14, line: 2054, baseType: !1340, size: 64, align: 64, offset: 2368)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !901, line: 49, baseType: !1342)
!1342 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1011, file: !14, line: 2061, baseType: !1340, size: 64, align: 64, offset: 2432)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1011, file: !14, line: 2066, baseType: !905, size: 32, align: 32, offset: 2496)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1011, file: !14, line: 2070, baseType: !905, size: 32, align: 32, offset: 2528)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1011, file: !14, line: 2078, baseType: !905, size: 32, align: 32, offset: 2560)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1011, file: !14, line: 2085, baseType: !905, size: 32, align: 32, offset: 2592)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1011, file: !14, line: 2092, baseType: !905, size: 32, align: 32, offset: 2624)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1011, file: !14, line: 2099, baseType: !905, size: 32, align: 32, offset: 2656)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1011, file: !14, line: 2106, baseType: !905, size: 32, align: 32, offset: 2688)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1011, file: !14, line: 2113, baseType: !905, size: 32, align: 32, offset: 2720)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1011, file: !14, line: 2120, baseType: !905, size: 32, align: 32, offset: 2752)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1011, file: !14, line: 2125, baseType: !905, size: 32, align: 32, offset: 2784)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1011, file: !14, line: 2133, baseType: !905, size: 32, align: 32, offset: 2816)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1011, file: !14, line: 2140, baseType: !905, size: 32, align: 32, offset: 2848)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1011, file: !14, line: 2145, baseType: !905, size: 32, align: 32, offset: 2880)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1011, file: !14, line: 2153, baseType: !905, size: 32, align: 32, offset: 2912)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1011, file: !14, line: 2158, baseType: !905, size: 32, align: 32, offset: 2944)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1011, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1011, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1011, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1011, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1011, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1011, file: !14, line: 2203, baseType: !905, size: 32, align: 32, offset: 3136)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1011, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1011, file: !14, line: 2212, baseType: !905, size: 32, align: 32, offset: 3200)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1011, file: !14, line: 2213, baseType: !905, size: 32, align: 32, offset: 3232)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1011, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1011, file: !14, line: 2232, baseType: !905, size: 32, align: 32, offset: 3296)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1011, file: !14, line: 2243, baseType: !905, size: 32, align: 32, offset: 3328)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1011, file: !14, line: 2249, baseType: !905, size: 32, align: 32, offset: 3360)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1011, file: !14, line: 2256, baseType: !905, size: 32, align: 32, offset: 3392)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1011, file: !14, line: 2263, baseType: !949, size: 64, align: 64, offset: 3456)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1011, file: !14, line: 2270, baseType: !949, size: 64, align: 64, offset: 3520)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1011, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1011, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1011, file: !14, line: 2367, baseType: !1378, size: 64, align: 64, offset: 3648)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64, align: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!905, !1300, !1031, !905}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1011, file: !14, line: 2383, baseType: !905, size: 32, align: 32, offset: 3712)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1011, file: !14, line: 2386, baseType: !1310, size: 32, align: 32, offset: 3744)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1011, file: !14, line: 2387, baseType: !1310, size: 32, align: 32, offset: 3776)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1011, file: !14, line: 2394, baseType: !905, size: 32, align: 32, offset: 3808)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1011, file: !14, line: 2401, baseType: !905, size: 32, align: 32, offset: 3840)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1011, file: !14, line: 2408, baseType: !905, size: 32, align: 32, offset: 3872)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1011, file: !14, line: 2415, baseType: !905, size: 32, align: 32, offset: 3904)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1011, file: !14, line: 2422, baseType: !905, size: 32, align: 32, offset: 3936)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1011, file: !14, line: 2423, baseType: !1390, size: 64, align: 64, offset: 3968)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1392, file: !14, line: 827, baseType: !905, size: 32, align: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1392, file: !14, line: 828, baseType: !905, size: 32, align: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1392, file: !14, line: 829, baseType: !905, size: 32, align: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1392, file: !14, line: 830, baseType: !1310, size: 32, align: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1011, file: !14, line: 2430, baseType: !1052, size: 64, align: 64, offset: 4032)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1011, file: !14, line: 2437, baseType: !1052, size: 64, align: 64, offset: 4096)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1011, file: !14, line: 2444, baseType: !1310, size: 32, align: 32, offset: 4160)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1011, file: !14, line: 2451, baseType: !1310, size: 32, align: 32, offset: 4192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1011, file: !14, line: 2458, baseType: !905, size: 32, align: 32, offset: 4224)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1011, file: !14, line: 2469, baseType: !905, size: 32, align: 32, offset: 4256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1011, file: !14, line: 2475, baseType: !905, size: 32, align: 32, offset: 4288)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1011, file: !14, line: 2481, baseType: !905, size: 32, align: 32, offset: 4320)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1011, file: !14, line: 2485, baseType: !905, size: 32, align: 32, offset: 4352)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1011, file: !14, line: 2489, baseType: !905, size: 32, align: 32, offset: 4384)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1011, file: !14, line: 2493, baseType: !905, size: 32, align: 32, offset: 4416)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1011, file: !14, line: 2501, baseType: !905, size: 32, align: 32, offset: 4448)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1011, file: !14, line: 2506, baseType: !905, size: 32, align: 32, offset: 4480)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1011, file: !14, line: 2510, baseType: !905, size: 32, align: 32, offset: 4512)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1011, file: !14, line: 2514, baseType: !1052, size: 64, align: 64, offset: 4544)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1011, file: !14, line: 2528, baseType: !1414, size: 64, align: 64, offset: 4608)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64, align: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{null, !1300, !912, !905, !905}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1011, file: !14, line: 2534, baseType: !905, size: 32, align: 32, offset: 4672)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1011, file: !14, line: 2545, baseType: !905, size: 32, align: 32, offset: 4704)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1011, file: !14, line: 2547, baseType: !905, size: 32, align: 32, offset: 4736)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1011, file: !14, line: 2549, baseType: !905, size: 32, align: 32, offset: 4768)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1011, file: !14, line: 2551, baseType: !905, size: 32, align: 32, offset: 4800)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1011, file: !14, line: 2553, baseType: !905, size: 32, align: 32, offset: 4832)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1011, file: !14, line: 2555, baseType: !905, size: 32, align: 32, offset: 4864)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1011, file: !14, line: 2557, baseType: !905, size: 32, align: 32, offset: 4896)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1011, file: !14, line: 2559, baseType: !905, size: 32, align: 32, offset: 4928)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1011, file: !14, line: 2563, baseType: !905, size: 32, align: 32, offset: 4960)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1011, file: !14, line: 2571, baseType: !1428, size: 64, align: 64, offset: 4992)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64, align: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1011, file: !14, line: 2579, baseType: !1428, size: 64, align: 64, offset: 5056)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1011, file: !14, line: 2586, baseType: !905, size: 32, align: 32, offset: 5120)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1011, file: !14, line: 2615, baseType: !905, size: 32, align: 32, offset: 5152)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1011, file: !14, line: 2627, baseType: !905, size: 32, align: 32, offset: 5184)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1011, file: !14, line: 2637, baseType: !905, size: 32, align: 32, offset: 5216)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1011, file: !14, line: 2681, baseType: !905, size: 32, align: 32, offset: 5248)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1011, file: !14, line: 2709, baseType: !1052, size: 64, align: 64, offset: 5312)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1011, file: !14, line: 2716, baseType: !1437, size: 64, align: 64, offset: 5376)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1439)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1450, !1456, !1460, !1461, !1462, !1463, !1469, !1470, !1471, !1472, !1473}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1439, file: !14, line: 3642, baseType: !921, size: 64, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1439, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1439, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1439, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1439, file: !14, line: 3669, baseType: !905, size: 32, align: 32, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1439, file: !14, line: 3682, baseType: !1447, size: 64, align: 64, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64, align: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!905, !1009, !1031}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1439, file: !14, line: 3698, baseType: !1451, size: 64, align: 64, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!905, !1009, !1454, !900}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1439, file: !14, line: 3712, baseType: !1457, size: 64, align: 64, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!905, !1009, !905, !1454, !900}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1439, file: !14, line: 3726, baseType: !1451, size: 64, align: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1439, file: !14, line: 3737, baseType: !1006, size: 64, align: 64, offset: 448)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1439, file: !14, line: 3746, baseType: !905, size: 32, align: 32, offset: 512)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1439, file: !14, line: 3757, baseType: !1464, size: 64, align: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !1467}
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1439, file: !14, line: 3766, baseType: !1006, size: 64, align: 64, offset: 640)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1439, file: !14, line: 3774, baseType: !1006, size: 64, align: 64, offset: 704)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1439, file: !14, line: 3780, baseType: !905, size: 32, align: 32, offset: 768)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1439, file: !14, line: 3785, baseType: !905, size: 32, align: 32, offset: 800)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1439, file: !14, line: 3795, baseType: !1474, size: 64, align: 64, offset: 832)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!905, !1009, !1071}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1011, file: !14, line: 2728, baseType: !912, size: 64, align: 64, offset: 5440)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1011, file: !14, line: 2735, baseType: !1061, size: 512, align: 64, offset: 5504)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1011, file: !14, line: 2742, baseType: !905, size: 32, align: 32, offset: 6016)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1011, file: !14, line: 2755, baseType: !905, size: 32, align: 32, offset: 6048)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1011, file: !14, line: 2776, baseType: !905, size: 32, align: 32, offset: 6080)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1011, file: !14, line: 2783, baseType: !905, size: 32, align: 32, offset: 6112)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1011, file: !14, line: 2791, baseType: !905, size: 32, align: 32, offset: 6144)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1011, file: !14, line: 2802, baseType: !1031, size: 64, align: 64, offset: 6208)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1011, file: !14, line: 2811, baseType: !905, size: 32, align: 32, offset: 6272)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1011, file: !14, line: 2821, baseType: !905, size: 32, align: 32, offset: 6304)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1011, file: !14, line: 2830, baseType: !905, size: 32, align: 32, offset: 6336)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1011, file: !14, line: 2840, baseType: !905, size: 32, align: 32, offset: 6368)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1011, file: !14, line: 2851, baseType: !1490, size: 64, align: 64, offset: 6400)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!905, !1300, !1493, !912, !1303, !905, !905}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!905, !1300, !912}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1011, file: !14, line: 2871, baseType: !1497, size: 64, align: 64, offset: 6464)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64, align: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!905, !1300, !1500, !912, !1303, !905}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!905, !1300, !912, !905, !905}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1011, file: !14, line: 2878, baseType: !905, size: 32, align: 32, offset: 6528)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1011, file: !14, line: 2885, baseType: !905, size: 32, align: 32, offset: 6560)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1011, file: !14, line: 3005, baseType: !905, size: 32, align: 32, offset: 6592)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1011, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1011, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1011, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1011, file: !14, line: 3037, baseType: !1037, size: 64, align: 64, offset: 6720)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1011, file: !14, line: 3038, baseType: !905, size: 32, align: 32, offset: 6784)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1011, file: !14, line: 3050, baseType: !949, size: 64, align: 64, offset: 6848)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1011, file: !14, line: 3065, baseType: !905, size: 32, align: 32, offset: 6912)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1011, file: !14, line: 3083, baseType: !905, size: 32, align: 32, offset: 6944)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1011, file: !14, line: 3092, baseType: !931, size: 64, align: 32, offset: 6976)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1011, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1011, file: !14, line: 3106, baseType: !931, size: 64, align: 32, offset: 7072)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1011, file: !14, line: 3113, baseType: !1518, size: 64, align: 64, offset: 7168)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1531}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1521, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1521, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1521, file: !14, line: 720, baseType: !921, size: 64, align: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1521, file: !14, line: 724, baseType: !921, size: 64, align: 64, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1521, file: !14, line: 728, baseType: !905, size: 32, align: 32, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1521, file: !14, line: 734, baseType: !1529, size: 64, align: 64, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1521, file: !14, line: 739, baseType: !1532, size: 64, align: 64, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1011, file: !14, line: 3129, baseType: !1052, size: 64, align: 64, offset: 7232)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1011, file: !14, line: 3130, baseType: !1052, size: 64, align: 64, offset: 7296)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1011, file: !14, line: 3131, baseType: !1052, size: 64, align: 64, offset: 7360)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1011, file: !14, line: 3132, baseType: !1052, size: 64, align: 64, offset: 7424)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1011, file: !14, line: 3139, baseType: !1428, size: 64, align: 64, offset: 7488)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1011, file: !14, line: 3147, baseType: !905, size: 32, align: 32, offset: 7552)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1011, file: !14, line: 3165, baseType: !905, size: 32, align: 32, offset: 7584)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1011, file: !14, line: 3172, baseType: !905, size: 32, align: 32, offset: 7616)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1011, file: !14, line: 3180, baseType: !905, size: 32, align: 32, offset: 7648)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1011, file: !14, line: 3191, baseType: !1340, size: 64, align: 64, offset: 7680)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1011, file: !14, line: 3199, baseType: !1037, size: 64, align: 64, offset: 7744)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1011, file: !14, line: 3207, baseType: !1428, size: 64, align: 64, offset: 7808)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1011, file: !14, line: 3214, baseType: !902, size: 32, align: 32, offset: 7872)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1011, file: !14, line: 3224, baseType: !1169, size: 64, align: 64, offset: 7936)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1011, file: !14, line: 3225, baseType: !905, size: 32, align: 32, offset: 8000)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1011, file: !14, line: 3249, baseType: !1071, size: 64, align: 64, offset: 8064)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1011, file: !14, line: 3256, baseType: !905, size: 32, align: 32, offset: 8128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1011, file: !14, line: 3271, baseType: !905, size: 32, align: 32, offset: 8160)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1011, file: !14, line: 3279, baseType: !1052, size: 64, align: 64, offset: 8192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1011, file: !14, line: 3301, baseType: !1071, size: 64, align: 64, offset: 8256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1011, file: !14, line: 3310, baseType: !905, size: 32, align: 32, offset: 8320)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1011, file: !14, line: 3337, baseType: !905, size: 32, align: 32, offset: 8352)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1011, file: !14, line: 3351, baseType: !905, size: 32, align: 32, offset: 8384)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1011, file: !14, line: 3359, baseType: !905, size: 32, align: 32, offset: 8416)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !918, file: !14, line: 3535, baseType: !1559, size: 64, align: 64, offset: 1024)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!905, !1009, !1562}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !918, file: !14, line: 3541, baseType: !1565, size: 64, align: 64, offset: 1088)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64, align: 64)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1025, line: 223, size: 128, align: 64, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1568, file: !1025, line: 224, baseType: !1454, size: 64, align: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1568, file: !1025, line: 225, baseType: !1454, size: 64, align: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !918, file: !14, line: 3549, baseType: !1573, size: 64, align: 64, offset: 1152)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !1004}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !918, file: !14, line: 3551, baseType: !1006, size: 64, align: 64, offset: 1216)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !918, file: !14, line: 3552, baseType: !1578, size: 64, align: 64, offset: 1280)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!905, !1009, !1037, !905, !1581}
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1613}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1583, file: !14, line: 3921, baseType: !1341, size: 16, align: 16)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1583, file: !14, line: 3922, baseType: !900, size: 32, align: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1583, file: !14, line: 3923, baseType: !900, size: 32, align: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1583, file: !14, line: 3924, baseType: !902, size: 32, align: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1583, file: !14, line: 3925, baseType: !1590, size: 64, align: 64, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1606, !1608, !1609, !1610, !1611, !1612}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1593, file: !14, line: 3886, baseType: !905, size: 32, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1593, file: !14, line: 3887, baseType: !905, size: 32, align: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1593, file: !14, line: 3888, baseType: !905, size: 32, align: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1593, file: !14, line: 3889, baseType: !905, size: 32, align: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1593, file: !14, line: 3890, baseType: !905, size: 32, align: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1593, file: !14, line: 3897, baseType: !1601, size: 768, align: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1603)
!1603 = !{!1604, !1605}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1602, file: !14, line: 3855, baseType: !1036, size: 512, align: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1602, file: !14, line: 3857, baseType: !1041, size: 256, align: 32, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1593, file: !14, line: 3903, baseType: !1607, size: 256, align: 64, offset: 960)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 256, align: 64, elements: !1140)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1593, file: !14, line: 3904, baseType: !1147, size: 128, align: 32, offset: 1216)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1593, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1593, file: !14, line: 3908, baseType: !1428, size: 64, align: 64, offset: 1408)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1593, file: !14, line: 3915, baseType: !1428, size: 64, align: 64, offset: 1472)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1593, file: !14, line: 3917, baseType: !905, size: 32, align: 32, offset: 1536)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1583, file: !14, line: 3926, baseType: !1052, size: 64, align: 64, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !918, file: !14, line: 3564, baseType: !1615, size: 64, align: 64, offset: 1344)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!905, !1009, !1157, !1301, !1303}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !918, file: !14, line: 3566, baseType: !1619, size: 64, align: 64, offset: 1408)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!905, !1009, !912, !1303, !1157}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !918, file: !14, line: 3567, baseType: !1006, size: 64, align: 64, offset: 1472)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !918, file: !14, line: 3576, baseType: !1624, size: 64, align: 64, offset: 1536)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!905, !1009, !1301}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !918, file: !14, line: 3577, baseType: !1628, size: 64, align: 64, offset: 1600)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64, align: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!905, !1009, !1157}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !918, file: !14, line: 3584, baseType: !1447, size: 64, align: 64, offset: 1664)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !918, file: !14, line: 3589, baseType: !1633, size: 64, align: 64, offset: 1728)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64, align: 64)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !1009}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !918, file: !14, line: 3594, baseType: !905, size: 32, align: 32, offset: 1792)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !918, file: !14, line: 3600, baseType: !921, size: 64, align: 64, offset: 1856)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !918, file: !14, line: 3609, baseType: !1639, size: 64, align: 64, offset: 1920)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1643 = distinct !DIGlobalVariable(name: "tm2_stream_order", scope: !0, file: !888, line: 892, type: !1644, isLocal: true, isDefinition: true, variable: [7 x i32]* @tm2_stream_order)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !942, size: 224, align: 32, elements: !1645)
!1645 = !{!1646}
!1646 = !DISubrange(count: 7)
!1647 = !{i32 2, !"Dwarf Version", i32 4}
!1648 = !{i32 2, !"Debug Info Version", i32 3}
!1649 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1650 = distinct !DISubprogram(name: "decode_init", scope: !888, file: !888, line: 956, type: !1007, isLocal: true, isDefinition: true, scopeLine: 957, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!1651 = !{}
!1652 = !DILocalVariable(name: "avctx", arg: 1, scope: !1650, file: !888, line: 956, type: !1009)
!1653 = !DIExpression()
!1654 = !DILocation(line: 956, column: 62, scope: !1650)
!1655 = !DILocalVariable(name: "l", scope: !1650, file: !888, line: 958, type: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "TM2Context", file: !888, line: 88, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TM2Context", file: !888, line: 61, size: 17216, align: 64, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1673, !1674, !1689, !1690, !1691, !1693, !1695, !1696, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1659, file: !888, line: 62, baseType: !1009, size: 64, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1659, file: !888, line: 63, baseType: !1031, size: 64, align: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1659, file: !888, line: 65, baseType: !1664, size: 256, align: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1665, line: 70, baseType: !1666)
!1665 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1665, line: 61, size: 256, align: 64, elements: !1667)
!1667 = !{!1668, !1669, !1670, !1671, !1672}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1666, file: !1665, line: 62, baseType: !1454, size: 64, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1666, file: !1665, line: 62, baseType: !1454, size: 64, align: 64, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1666, file: !1665, line: 67, baseType: !905, size: 32, align: 32, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1666, file: !1665, line: 68, baseType: !905, size: 32, align: 32, offset: 160)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1666, file: !1665, line: 69, baseType: !905, size: 32, align: 32, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1659, file: !888, line: 66, baseType: !905, size: 32, align: 32, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1659, file: !888, line: 67, baseType: !1675, size: 128, align: 64, offset: 448)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !1676, line: 27, baseType: !1677)
!1676 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !1676, line: 24, size: 128, align: 64, elements: !1678)
!1678 = !{!1679, !1683}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !1677, file: !1676, line: 25, baseType: !1680, size: 64, align: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{null, !899, !903, !905}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !1677, file: !1676, line: 26, baseType: !1684, size: 64, align: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1340, !1687, !905}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1659, file: !888, line: 69, baseType: !1037, size: 64, align: 64, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1659, file: !888, line: 70, baseType: !905, size: 32, align: 32, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tokens", scope: !1659, file: !888, line: 73, baseType: !1692, size: 448, align: 64, offset: 704)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1303, size: 448, align: 64, elements: !1645)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "tok_lens", scope: !1659, file: !888, line: 74, baseType: !1694, size: 224, align: 32, offset: 1152)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 224, align: 32, elements: !1645)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "tok_ptrs", scope: !1659, file: !888, line: 75, baseType: !1694, size: 224, align: 32, offset: 1376)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "deltas", scope: !1659, file: !888, line: 76, baseType: !1697, size: 14336, align: 32, offset: 1600)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 14336, align: 32, elements: !1698)
!1698 = !{!1646, !1699}
!1699 = !DISubrange(count: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !1659, file: !888, line: 78, baseType: !1147, size: 128, align: 32, offset: 15936)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "CD", scope: !1659, file: !888, line: 79, baseType: !1147, size: 128, align: 32, offset: 16064)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1659, file: !888, line: 80, baseType: !1303, size: 64, align: 64, offset: 16192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "clast", scope: !1659, file: !888, line: 81, baseType: !1303, size: 64, align: 64, offset: 16256)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "Y1_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16320)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "U1_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16384)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "V1_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16448)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "Y2_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16512)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "U2_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16576)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "V2_base", scope: !1659, file: !888, line: 84, baseType: !1303, size: 64, align: 64, offset: 16640)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "Y1", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 16704)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "U1", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 16768)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "V1", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 16832)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "Y2", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 16896)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "U2", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 16960)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "V2", scope: !1659, file: !888, line: 85, baseType: !1303, size: 64, align: 64, offset: 17024)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "y_stride", scope: !1659, file: !888, line: 86, baseType: !905, size: 32, align: 32, offset: 17088)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "uv_stride", scope: !1659, file: !888, line: 86, baseType: !905, size: 32, align: 32, offset: 17120)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1659, file: !888, line: 87, baseType: !905, size: 32, align: 32, offset: 17152)
!1719 = !DILocation(line: 958, column: 24, scope: !1650)
!1720 = !DILocation(line: 958, column: 28, scope: !1650)
!1721 = !DILocation(line: 958, column: 35, scope: !1650)
!1722 = !DILocalVariable(name: "i", scope: !1650, file: !888, line: 959, type: !905)
!1723 = !DILocation(line: 959, column: 9, scope: !1650)
!1724 = !DILocalVariable(name: "w", scope: !1650, file: !888, line: 959, type: !905)
!1725 = !DILocation(line: 959, column: 12, scope: !1650)
!1726 = !DILocation(line: 959, column: 16, scope: !1650)
!1727 = !DILocation(line: 959, column: 23, scope: !1650)
!1728 = !DILocalVariable(name: "h", scope: !1650, file: !888, line: 959, type: !905)
!1729 = !DILocation(line: 959, column: 30, scope: !1650)
!1730 = !DILocation(line: 959, column: 34, scope: !1650)
!1731 = !DILocation(line: 959, column: 41, scope: !1650)
!1732 = !DILocation(line: 961, column: 10, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1650, file: !888, line: 961, column: 9)
!1734 = !DILocation(line: 961, column: 17, scope: !1733)
!1735 = !DILocation(line: 961, column: 23, scope: !1733)
!1736 = !DILocation(line: 961, column: 28, scope: !1733)
!1737 = !DILocation(line: 961, column: 32, scope: !1738)
!1738 = !DILexicalBlockFile(scope: !1733, file: !888, discriminator: 1)
!1739 = !DILocation(line: 961, column: 39, scope: !1738)
!1740 = !DILocation(line: 961, column: 46, scope: !1738)
!1741 = !DILocation(line: 961, column: 9, scope: !1738)
!1742 = !DILocation(line: 962, column: 16, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1733, file: !888, line: 961, column: 52)
!1744 = !DILocation(line: 962, column: 9, scope: !1743)
!1745 = !DILocation(line: 963, column: 9, scope: !1743)
!1746 = !DILocation(line: 966, column: 16, scope: !1650)
!1747 = !DILocation(line: 966, column: 5, scope: !1650)
!1748 = !DILocation(line: 966, column: 8, scope: !1650)
!1749 = !DILocation(line: 966, column: 14, scope: !1650)
!1750 = !DILocation(line: 967, column: 5, scope: !1650)
!1751 = !DILocation(line: 967, column: 12, scope: !1650)
!1752 = !DILocation(line: 967, column: 20, scope: !1650)
!1753 = !DILocation(line: 969, column: 14, scope: !1650)
!1754 = !DILocation(line: 969, column: 5, scope: !1650)
!1755 = !DILocation(line: 969, column: 8, scope: !1650)
!1756 = !DILocation(line: 969, column: 12, scope: !1650)
!1757 = !DILocation(line: 970, column: 10, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1650, file: !888, line: 970, column: 9)
!1759 = !DILocation(line: 970, column: 13, scope: !1758)
!1760 = !DILocation(line: 970, column: 9, scope: !1650)
!1761 = !DILocation(line: 971, column: 9, scope: !1758)
!1762 = !DILocation(line: 973, column: 23, scope: !1650)
!1763 = !DILocation(line: 973, column: 26, scope: !1650)
!1764 = !DILocation(line: 973, column: 5, scope: !1650)
!1765 = !DILocation(line: 975, column: 31, scope: !1650)
!1766 = !DILocation(line: 975, column: 33, scope: !1650)
!1767 = !DILocation(line: 975, column: 15, scope: !1650)
!1768 = !DILocation(line: 975, column: 5, scope: !1650)
!1769 = !DILocation(line: 975, column: 8, scope: !1650)
!1770 = !DILocation(line: 975, column: 13, scope: !1650)
!1771 = !DILocation(line: 976, column: 32, scope: !1650)
!1772 = !DILocation(line: 976, column: 34, scope: !1650)
!1773 = !DILocation(line: 976, column: 16, scope: !1650)
!1774 = !DILocation(line: 976, column: 5, scope: !1650)
!1775 = !DILocation(line: 976, column: 8, scope: !1650)
!1776 = !DILocation(line: 976, column: 14, scope: !1650)
!1777 = !DILocation(line: 978, column: 12, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1650, file: !888, line: 978, column: 5)
!1779 = !DILocation(line: 978, column: 10, scope: !1778)
!1780 = !DILocation(line: 978, column: 17, scope: !1781)
!1781 = !DILexicalBlockFile(scope: !1782, file: !888, discriminator: 1)
!1782 = distinct !DILexicalBlock(scope: !1778, file: !888, line: 978, column: 5)
!1783 = !DILocation(line: 978, column: 19, scope: !1781)
!1784 = !DILocation(line: 978, column: 5, scope: !1781)
!1785 = !DILocation(line: 979, column: 19, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1782, file: !888, line: 978, column: 43)
!1787 = !DILocation(line: 979, column: 9, scope: !1786)
!1788 = !DILocation(line: 979, column: 12, scope: !1786)
!1789 = !DILocation(line: 979, column: 22, scope: !1786)
!1790 = !DILocation(line: 980, column: 21, scope: !1786)
!1791 = !DILocation(line: 980, column: 9, scope: !1786)
!1792 = !DILocation(line: 980, column: 12, scope: !1786)
!1793 = !DILocation(line: 980, column: 24, scope: !1786)
!1794 = !DILocation(line: 981, column: 5, scope: !1786)
!1795 = !DILocation(line: 978, column: 39, scope: !1796)
!1796 = !DILexicalBlockFile(scope: !1782, file: !888, discriminator: 2)
!1797 = !DILocation(line: 978, column: 5, scope: !1796)
!1798 = distinct !{!1798, !1799}
!1799 = !DILocation(line: 978, column: 5, scope: !1650)
!1800 = !DILocation(line: 983, column: 7, scope: !1650)
!1801 = !DILocation(line: 984, column: 7, scope: !1650)
!1802 = !DILocation(line: 985, column: 28, scope: !1650)
!1803 = !DILocation(line: 985, column: 32, scope: !1650)
!1804 = !DILocation(line: 985, column: 30, scope: !1650)
!1805 = !DILocation(line: 985, column: 18, scope: !1650)
!1806 = !DILocation(line: 985, column: 5, scope: !1650)
!1807 = !DILocation(line: 985, column: 8, scope: !1650)
!1808 = !DILocation(line: 985, column: 16, scope: !1650)
!1809 = !DILocation(line: 986, column: 28, scope: !1650)
!1810 = !DILocation(line: 986, column: 32, scope: !1650)
!1811 = !DILocation(line: 986, column: 30, scope: !1650)
!1812 = !DILocation(line: 986, column: 18, scope: !1650)
!1813 = !DILocation(line: 986, column: 5, scope: !1650)
!1814 = !DILocation(line: 986, column: 8, scope: !1650)
!1815 = !DILocation(line: 986, column: 16, scope: !1650)
!1816 = !DILocation(line: 987, column: 19, scope: !1650)
!1817 = !DILocation(line: 987, column: 5, scope: !1650)
!1818 = !DILocation(line: 987, column: 8, scope: !1650)
!1819 = !DILocation(line: 987, column: 17, scope: !1650)
!1820 = !DILocation(line: 988, column: 10, scope: !1650)
!1821 = !DILocation(line: 988, column: 12, scope: !1650)
!1822 = !DILocation(line: 988, column: 17, scope: !1650)
!1823 = !DILocation(line: 988, column: 7, scope: !1650)
!1824 = !DILocation(line: 989, column: 10, scope: !1650)
!1825 = !DILocation(line: 989, column: 12, scope: !1650)
!1826 = !DILocation(line: 989, column: 17, scope: !1650)
!1827 = !DILocation(line: 989, column: 7, scope: !1650)
!1828 = !DILocation(line: 990, column: 28, scope: !1650)
!1829 = !DILocation(line: 990, column: 32, scope: !1650)
!1830 = !DILocation(line: 990, column: 30, scope: !1650)
!1831 = !DILocation(line: 990, column: 18, scope: !1650)
!1832 = !DILocation(line: 990, column: 5, scope: !1650)
!1833 = !DILocation(line: 990, column: 8, scope: !1650)
!1834 = !DILocation(line: 990, column: 16, scope: !1650)
!1835 = !DILocation(line: 991, column: 28, scope: !1650)
!1836 = !DILocation(line: 991, column: 32, scope: !1650)
!1837 = !DILocation(line: 991, column: 30, scope: !1650)
!1838 = !DILocation(line: 991, column: 18, scope: !1650)
!1839 = !DILocation(line: 991, column: 5, scope: !1650)
!1840 = !DILocation(line: 991, column: 8, scope: !1650)
!1841 = !DILocation(line: 991, column: 16, scope: !1650)
!1842 = !DILocation(line: 992, column: 28, scope: !1650)
!1843 = !DILocation(line: 992, column: 32, scope: !1650)
!1844 = !DILocation(line: 992, column: 30, scope: !1650)
!1845 = !DILocation(line: 992, column: 18, scope: !1650)
!1846 = !DILocation(line: 992, column: 5, scope: !1650)
!1847 = !DILocation(line: 992, column: 8, scope: !1650)
!1848 = !DILocation(line: 992, column: 16, scope: !1650)
!1849 = !DILocation(line: 993, column: 28, scope: !1650)
!1850 = !DILocation(line: 993, column: 32, scope: !1650)
!1851 = !DILocation(line: 993, column: 30, scope: !1650)
!1852 = !DILocation(line: 993, column: 18, scope: !1650)
!1853 = !DILocation(line: 993, column: 5, scope: !1650)
!1854 = !DILocation(line: 993, column: 8, scope: !1650)
!1855 = !DILocation(line: 993, column: 16, scope: !1650)
!1856 = !DILocation(line: 994, column: 20, scope: !1650)
!1857 = !DILocation(line: 994, column: 5, scope: !1650)
!1858 = !DILocation(line: 994, column: 8, scope: !1650)
!1859 = !DILocation(line: 994, column: 18, scope: !1650)
!1860 = !DILocation(line: 995, column: 5, scope: !1650)
!1861 = !DILocation(line: 995, column: 8, scope: !1650)
!1862 = !DILocation(line: 995, column: 12, scope: !1650)
!1863 = !DILocation(line: 996, column: 10, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1650, file: !888, line: 996, column: 9)
!1865 = !DILocation(line: 996, column: 13, scope: !1864)
!1866 = !DILocation(line: 996, column: 21, scope: !1864)
!1867 = !DILocation(line: 996, column: 25, scope: !1868)
!1868 = !DILexicalBlockFile(scope: !1864, file: !888, discriminator: 1)
!1869 = !DILocation(line: 996, column: 28, scope: !1868)
!1870 = !DILocation(line: 996, column: 36, scope: !1868)
!1871 = !DILocation(line: 996, column: 40, scope: !1872)
!1872 = !DILexicalBlockFile(scope: !1864, file: !888, discriminator: 2)
!1873 = !DILocation(line: 996, column: 43, scope: !1872)
!1874 = !DILocation(line: 996, column: 51, scope: !1872)
!1875 = !DILocation(line: 997, column: 10, scope: !1864)
!1876 = !DILocation(line: 997, column: 13, scope: !1864)
!1877 = !DILocation(line: 997, column: 21, scope: !1864)
!1878 = !DILocation(line: 997, column: 25, scope: !1868)
!1879 = !DILocation(line: 997, column: 28, scope: !1868)
!1880 = !DILocation(line: 997, column: 36, scope: !1868)
!1881 = !DILocation(line: 997, column: 40, scope: !1872)
!1882 = !DILocation(line: 997, column: 43, scope: !1872)
!1883 = !DILocation(line: 997, column: 51, scope: !1872)
!1884 = !DILocation(line: 998, column: 10, scope: !1864)
!1885 = !DILocation(line: 998, column: 13, scope: !1864)
!1886 = !DILocation(line: 998, column: 18, scope: !1864)
!1887 = !DILocation(line: 998, column: 22, scope: !1868)
!1888 = !DILocation(line: 998, column: 25, scope: !1868)
!1889 = !DILocation(line: 996, column: 9, scope: !1890)
!1890 = !DILexicalBlockFile(scope: !1650, file: !888, discriminator: 3)
!1891 = !DILocation(line: 999, column: 19, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1864, file: !888, line: 998, column: 32)
!1893 = !DILocation(line: 999, column: 22, scope: !1892)
!1894 = !DILocation(line: 999, column: 18, scope: !1892)
!1895 = !DILocation(line: 999, column: 9, scope: !1892)
!1896 = !DILocation(line: 1000, column: 19, scope: !1892)
!1897 = !DILocation(line: 1000, column: 22, scope: !1892)
!1898 = !DILocation(line: 1000, column: 18, scope: !1892)
!1899 = !DILocation(line: 1000, column: 9, scope: !1892)
!1900 = !DILocation(line: 1001, column: 19, scope: !1892)
!1901 = !DILocation(line: 1001, column: 22, scope: !1892)
!1902 = !DILocation(line: 1001, column: 18, scope: !1892)
!1903 = !DILocation(line: 1001, column: 9, scope: !1892)
!1904 = !DILocation(line: 1002, column: 19, scope: !1892)
!1905 = !DILocation(line: 1002, column: 22, scope: !1892)
!1906 = !DILocation(line: 1002, column: 18, scope: !1892)
!1907 = !DILocation(line: 1002, column: 9, scope: !1892)
!1908 = !DILocation(line: 1003, column: 19, scope: !1892)
!1909 = !DILocation(line: 1003, column: 22, scope: !1892)
!1910 = !DILocation(line: 1003, column: 18, scope: !1892)
!1911 = !DILocation(line: 1003, column: 9, scope: !1892)
!1912 = !DILocation(line: 1004, column: 19, scope: !1892)
!1913 = !DILocation(line: 1004, column: 22, scope: !1892)
!1914 = !DILocation(line: 1004, column: 18, scope: !1892)
!1915 = !DILocation(line: 1004, column: 9, scope: !1892)
!1916 = !DILocation(line: 1005, column: 19, scope: !1892)
!1917 = !DILocation(line: 1005, column: 22, scope: !1892)
!1918 = !DILocation(line: 1005, column: 18, scope: !1892)
!1919 = !DILocation(line: 1005, column: 9, scope: !1892)
!1920 = !DILocation(line: 1006, column: 19, scope: !1892)
!1921 = !DILocation(line: 1006, column: 22, scope: !1892)
!1922 = !DILocation(line: 1006, column: 18, scope: !1892)
!1923 = !DILocation(line: 1006, column: 9, scope: !1892)
!1924 = !DILocation(line: 1007, column: 24, scope: !1892)
!1925 = !DILocation(line: 1007, column: 27, scope: !1892)
!1926 = !DILocation(line: 1007, column: 9, scope: !1892)
!1927 = !DILocation(line: 1008, column: 9, scope: !1892)
!1928 = !DILocation(line: 1010, column: 13, scope: !1650)
!1929 = !DILocation(line: 1010, column: 16, scope: !1650)
!1930 = !DILocation(line: 1010, column: 26, scope: !1650)
!1931 = !DILocation(line: 1010, column: 29, scope: !1650)
!1932 = !DILocation(line: 1010, column: 38, scope: !1650)
!1933 = !DILocation(line: 1010, column: 24, scope: !1650)
!1934 = !DILocation(line: 1010, column: 42, scope: !1650)
!1935 = !DILocation(line: 1010, column: 5, scope: !1650)
!1936 = !DILocation(line: 1010, column: 8, scope: !1650)
!1937 = !DILocation(line: 1010, column: 11, scope: !1650)
!1938 = !DILocation(line: 1011, column: 13, scope: !1650)
!1939 = !DILocation(line: 1011, column: 16, scope: !1650)
!1940 = !DILocation(line: 1011, column: 26, scope: !1650)
!1941 = !DILocation(line: 1011, column: 29, scope: !1650)
!1942 = !DILocation(line: 1011, column: 38, scope: !1650)
!1943 = !DILocation(line: 1011, column: 24, scope: !1650)
!1944 = !DILocation(line: 1011, column: 42, scope: !1650)
!1945 = !DILocation(line: 1011, column: 5, scope: !1650)
!1946 = !DILocation(line: 1011, column: 8, scope: !1650)
!1947 = !DILocation(line: 1011, column: 11, scope: !1650)
!1948 = !DILocation(line: 1012, column: 13, scope: !1650)
!1949 = !DILocation(line: 1012, column: 16, scope: !1650)
!1950 = !DILocation(line: 1012, column: 26, scope: !1650)
!1951 = !DILocation(line: 1012, column: 29, scope: !1650)
!1952 = !DILocation(line: 1012, column: 39, scope: !1650)
!1953 = !DILocation(line: 1012, column: 24, scope: !1650)
!1954 = !DILocation(line: 1012, column: 43, scope: !1650)
!1955 = !DILocation(line: 1012, column: 5, scope: !1650)
!1956 = !DILocation(line: 1012, column: 8, scope: !1650)
!1957 = !DILocation(line: 1012, column: 11, scope: !1650)
!1958 = !DILocation(line: 1013, column: 13, scope: !1650)
!1959 = !DILocation(line: 1013, column: 16, scope: !1650)
!1960 = !DILocation(line: 1013, column: 26, scope: !1650)
!1961 = !DILocation(line: 1013, column: 29, scope: !1650)
!1962 = !DILocation(line: 1013, column: 39, scope: !1650)
!1963 = !DILocation(line: 1013, column: 24, scope: !1650)
!1964 = !DILocation(line: 1013, column: 43, scope: !1650)
!1965 = !DILocation(line: 1013, column: 5, scope: !1650)
!1966 = !DILocation(line: 1013, column: 8, scope: !1650)
!1967 = !DILocation(line: 1013, column: 11, scope: !1650)
!1968 = !DILocation(line: 1014, column: 13, scope: !1650)
!1969 = !DILocation(line: 1014, column: 16, scope: !1650)
!1970 = !DILocation(line: 1014, column: 26, scope: !1650)
!1971 = !DILocation(line: 1014, column: 29, scope: !1650)
!1972 = !DILocation(line: 1014, column: 39, scope: !1650)
!1973 = !DILocation(line: 1014, column: 24, scope: !1650)
!1974 = !DILocation(line: 1014, column: 43, scope: !1650)
!1975 = !DILocation(line: 1014, column: 5, scope: !1650)
!1976 = !DILocation(line: 1014, column: 8, scope: !1650)
!1977 = !DILocation(line: 1014, column: 11, scope: !1650)
!1978 = !DILocation(line: 1015, column: 13, scope: !1650)
!1979 = !DILocation(line: 1015, column: 16, scope: !1650)
!1980 = !DILocation(line: 1015, column: 26, scope: !1650)
!1981 = !DILocation(line: 1015, column: 29, scope: !1650)
!1982 = !DILocation(line: 1015, column: 39, scope: !1650)
!1983 = !DILocation(line: 1015, column: 24, scope: !1650)
!1984 = !DILocation(line: 1015, column: 43, scope: !1650)
!1985 = !DILocation(line: 1015, column: 5, scope: !1650)
!1986 = !DILocation(line: 1015, column: 8, scope: !1650)
!1987 = !DILocation(line: 1015, column: 11, scope: !1650)
!1988 = !DILocation(line: 1017, column: 5, scope: !1650)
!1989 = !DILocation(line: 1018, column: 1, scope: !1650)
!1990 = distinct !DISubprogram(name: "decode_frame", scope: !888, file: !888, line: 898, type: !1620, isLocal: true, isDefinition: true, scopeLine: 901, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!1991 = !DILocalVariable(name: "avctx", arg: 1, scope: !1990, file: !888, line: 898, type: !1009)
!1992 = !DILocation(line: 898, column: 41, scope: !1990)
!1993 = !DILocalVariable(name: "data", arg: 2, scope: !1990, file: !888, line: 899, type: !912)
!1994 = !DILocation(line: 899, column: 31, scope: !1990)
!1995 = !DILocalVariable(name: "got_frame", arg: 3, scope: !1990, file: !888, line: 899, type: !1303)
!1996 = !DILocation(line: 899, column: 42, scope: !1990)
!1997 = !DILocalVariable(name: "avpkt", arg: 4, scope: !1990, file: !888, line: 900, type: !1157)
!1998 = !DILocation(line: 900, column: 35, scope: !1990)
!1999 = !DILocalVariable(name: "l", scope: !1990, file: !888, line: 902, type: !1656)
!2000 = !DILocation(line: 902, column: 24, scope: !1990)
!2001 = !DILocation(line: 902, column: 28, scope: !1990)
!2002 = !DILocation(line: 902, column: 35, scope: !1990)
!2003 = !DILocalVariable(name: "buf", scope: !1990, file: !888, line: 903, type: !1454)
!2004 = !DILocation(line: 903, column: 20, scope: !1990)
!2005 = !DILocation(line: 903, column: 26, scope: !1990)
!2006 = !DILocation(line: 903, column: 33, scope: !1990)
!2007 = !DILocalVariable(name: "buf_size", scope: !1990, file: !888, line: 904, type: !905)
!2008 = !DILocation(line: 904, column: 9, scope: !1990)
!2009 = !DILocation(line: 904, column: 20, scope: !1990)
!2010 = !DILocation(line: 904, column: 27, scope: !1990)
!2011 = !DILocation(line: 904, column: 32, scope: !1990)
!2012 = !DILocalVariable(name: "p", scope: !1990, file: !888, line: 905, type: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!2014 = !DILocation(line: 905, column: 21, scope: !1990)
!2015 = !DILocation(line: 905, column: 25, scope: !1990)
!2016 = !DILocation(line: 905, column: 28, scope: !1990)
!2017 = !DILocalVariable(name: "offset", scope: !1990, file: !888, line: 906, type: !905)
!2018 = !DILocation(line: 906, column: 9, scope: !1990)
!2019 = !DILocalVariable(name: "i", scope: !1990, file: !888, line: 907, type: !905)
!2020 = !DILocation(line: 907, column: 9, scope: !1990)
!2021 = !DILocalVariable(name: "t", scope: !1990, file: !888, line: 907, type: !905)
!2022 = !DILocation(line: 907, column: 12, scope: !1990)
!2023 = !DILocalVariable(name: "ret", scope: !1990, file: !888, line: 907, type: !905)
!2024 = !DILocation(line: 907, column: 15, scope: !1990)
!2025 = !DILocation(line: 909, column: 5, scope: !1990)
!2026 = !DILocation(line: 909, column: 8, scope: !1990)
!2027 = !DILocation(line: 909, column: 14, scope: !1990)
!2028 = !DILocation(line: 911, column: 28, scope: !1990)
!2029 = !DILocation(line: 911, column: 31, scope: !1990)
!2030 = !DILocation(line: 911, column: 27, scope: !1990)
!2031 = !DILocation(line: 911, column: 40, scope: !1990)
!2032 = !DILocation(line: 911, column: 43, scope: !1990)
!2033 = !DILocation(line: 911, column: 56, scope: !1990)
!2034 = !DILocation(line: 911, column: 5, scope: !1990)
!2035 = !DILocation(line: 912, column: 10, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !1990, file: !888, line: 912, column: 9)
!2037 = !DILocation(line: 912, column: 13, scope: !2036)
!2038 = !DILocation(line: 912, column: 9, scope: !1990)
!2039 = !DILocation(line: 913, column: 16, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2036, file: !888, line: 912, column: 21)
!2041 = !DILocation(line: 913, column: 9, scope: !2040)
!2042 = !DILocation(line: 914, column: 9, scope: !2040)
!2043 = !DILocation(line: 917, column: 32, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !1990, file: !888, line: 917, column: 9)
!2045 = !DILocation(line: 917, column: 39, scope: !2044)
!2046 = !DILocation(line: 917, column: 16, scope: !2044)
!2047 = !DILocation(line: 917, column: 14, scope: !2044)
!2048 = !DILocation(line: 917, column: 43, scope: !2044)
!2049 = !DILocation(line: 917, column: 9, scope: !1990)
!2050 = !DILocation(line: 918, column: 16, scope: !2044)
!2051 = !DILocation(line: 918, column: 9, scope: !2044)
!2052 = !DILocation(line: 920, column: 5, scope: !1990)
!2053 = !DILocation(line: 920, column: 8, scope: !1990)
!2054 = !DILocation(line: 920, column: 13, scope: !1990)
!2055 = !DILocation(line: 920, column: 36, scope: !1990)
!2056 = !DILocation(line: 920, column: 39, scope: !1990)
!2057 = !DILocation(line: 920, column: 23, scope: !1990)
!2058 = !DILocation(line: 920, column: 66, scope: !1990)
!2059 = !DILocation(line: 920, column: 47, scope: !1990)
!2060 = !DILocation(line: 921, column: 23, scope: !1990)
!2061 = !DILocation(line: 921, column: 32, scope: !1990)
!2062 = !DILocation(line: 923, column: 32, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !1990, file: !888, line: 923, column: 9)
!2064 = !DILocation(line: 923, column: 35, scope: !2063)
!2065 = !DILocation(line: 923, column: 38, scope: !2063)
!2066 = !DILocation(line: 923, column: 16, scope: !2063)
!2067 = !DILocation(line: 923, column: 14, scope: !2063)
!2068 = !DILocation(line: 923, column: 47, scope: !2063)
!2069 = !DILocation(line: 923, column: 9, scope: !1990)
!2070 = !DILocation(line: 924, column: 16, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2063, file: !888, line: 923, column: 52)
!2072 = !DILocation(line: 924, column: 9, scope: !2071)
!2073 = !DILocation(line: 927, column: 12, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !1990, file: !888, line: 927, column: 5)
!2075 = !DILocation(line: 927, column: 10, scope: !2074)
!2076 = !DILocation(line: 927, column: 17, scope: !2077)
!2077 = !DILexicalBlockFile(scope: !2078, file: !888, discriminator: 1)
!2078 = distinct !DILexicalBlock(scope: !2074, file: !888, line: 927, column: 5)
!2079 = !DILocation(line: 927, column: 19, scope: !2077)
!2080 = !DILocation(line: 927, column: 5, scope: !2077)
!2081 = !DILocation(line: 928, column: 13, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2083, file: !888, line: 928, column: 13)
!2083 = distinct !DILexicalBlock(scope: !2078, file: !888, line: 927, column: 43)
!2084 = !DILocation(line: 928, column: 23, scope: !2082)
!2085 = !DILocation(line: 928, column: 20, scope: !2082)
!2086 = !DILocation(line: 928, column: 13, scope: !2083)
!2087 = !DILocation(line: 929, column: 20, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2082, file: !888, line: 928, column: 33)
!2089 = !DILocation(line: 929, column: 13, scope: !2088)
!2090 = !DILocation(line: 930, column: 13, scope: !2088)
!2091 = !DILocation(line: 933, column: 29, scope: !2083)
!2092 = !DILocation(line: 933, column: 32, scope: !2083)
!2093 = !DILocation(line: 933, column: 35, scope: !2083)
!2094 = !DILocation(line: 933, column: 44, scope: !2083)
!2095 = !DILocation(line: 933, column: 42, scope: !2083)
!2096 = !DILocation(line: 933, column: 69, scope: !2083)
!2097 = !DILocation(line: 933, column: 52, scope: !2083)
!2098 = !DILocation(line: 934, column: 29, scope: !2083)
!2099 = !DILocation(line: 934, column: 40, scope: !2083)
!2100 = !DILocation(line: 934, column: 38, scope: !2083)
!2101 = !DILocation(line: 933, column: 13, scope: !2083)
!2102 = !DILocation(line: 933, column: 11, scope: !2083)
!2103 = !DILocation(line: 935, column: 13, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2083, file: !888, line: 935, column: 13)
!2105 = !DILocation(line: 935, column: 15, scope: !2104)
!2106 = !DILocation(line: 935, column: 13, scope: !2083)
!2107 = !DILocalVariable(name: "j", scope: !2108, file: !888, line: 936, type: !905)
!2108 = distinct !DILexicalBlock(scope: !2104, file: !888, line: 935, column: 20)
!2109 = !DILocation(line: 936, column: 17, scope: !2108)
!2110 = !DILocation(line: 936, column: 38, scope: !2108)
!2111 = !DILocation(line: 936, column: 21, scope: !2108)
!2112 = !DILocation(line: 937, column: 29, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2108, file: !888, line: 937, column: 17)
!2114 = !DILocation(line: 937, column: 17, scope: !2113)
!2115 = !DILocation(line: 937, column: 20, scope: !2113)
!2116 = !DILocation(line: 937, column: 17, scope: !2108)
!2117 = !DILocation(line: 938, column: 34, scope: !2113)
!2118 = !DILocation(line: 938, column: 24, scope: !2113)
!2119 = !DILocation(line: 938, column: 27, scope: !2113)
!2120 = !DILocation(line: 938, column: 17, scope: !2113)
!2121 = !DILocation(line: 938, column: 75, scope: !2113)
!2122 = !DILocation(line: 938, column: 63, scope: !2113)
!2123 = !DILocation(line: 938, column: 66, scope: !2113)
!2124 = !DILocation(line: 938, column: 61, scope: !2113)
!2125 = !DILocation(line: 939, column: 20, scope: !2108)
!2126 = !DILocation(line: 939, column: 13, scope: !2108)
!2127 = !DILocation(line: 941, column: 19, scope: !2083)
!2128 = !DILocation(line: 941, column: 16, scope: !2083)
!2129 = !DILocation(line: 942, column: 5, scope: !2083)
!2130 = !DILocation(line: 927, column: 39, scope: !2131)
!2131 = !DILexicalBlockFile(scope: !2078, file: !888, discriminator: 2)
!2132 = !DILocation(line: 927, column: 5, scope: !2131)
!2133 = distinct !{!2133, !2134}
!2134 = !DILocation(line: 927, column: 5, scope: !1990)
!2135 = !DILocation(line: 943, column: 38, scope: !1990)
!2136 = !DILocation(line: 943, column: 41, scope: !1990)
!2137 = !DILocation(line: 943, column: 20, scope: !1990)
!2138 = !DILocation(line: 943, column: 5, scope: !1990)
!2139 = !DILocation(line: 943, column: 8, scope: !1990)
!2140 = !DILocation(line: 943, column: 18, scope: !1990)
!2141 = !DILocation(line: 944, column: 9, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !1990, file: !888, line: 944, column: 9)
!2143 = !DILocation(line: 944, column: 12, scope: !2142)
!2144 = !DILocation(line: 944, column: 9, scope: !1990)
!2145 = !DILocation(line: 945, column: 9, scope: !2142)
!2146 = !DILocation(line: 945, column: 12, scope: !2142)
!2147 = !DILocation(line: 945, column: 22, scope: !2142)
!2148 = !DILocation(line: 947, column: 9, scope: !2142)
!2149 = !DILocation(line: 947, column: 12, scope: !2142)
!2150 = !DILocation(line: 947, column: 22, scope: !2142)
!2151 = !DILocation(line: 949, column: 15, scope: !1990)
!2152 = !DILocation(line: 949, column: 18, scope: !1990)
!2153 = !DILocation(line: 949, column: 14, scope: !1990)
!2154 = !DILocation(line: 949, column: 5, scope: !1990)
!2155 = !DILocation(line: 949, column: 8, scope: !1990)
!2156 = !DILocation(line: 949, column: 12, scope: !1990)
!2157 = !DILocation(line: 950, column: 6, scope: !1990)
!2158 = !DILocation(line: 950, column: 16, scope: !1990)
!2159 = !DILocation(line: 951, column: 24, scope: !1990)
!2160 = !DILocation(line: 951, column: 30, scope: !1990)
!2161 = !DILocation(line: 951, column: 33, scope: !1990)
!2162 = !DILocation(line: 951, column: 11, scope: !1990)
!2163 = !DILocation(line: 951, column: 9, scope: !1990)
!2164 = !DILocation(line: 953, column: 13, scope: !1990)
!2165 = !DILocation(line: 953, column: 17, scope: !1990)
!2166 = !DILocation(line: 953, column: 12, scope: !1990)
!2167 = !DILocation(line: 953, column: 24, scope: !2168)
!2168 = !DILexicalBlockFile(scope: !1990, file: !888, discriminator: 1)
!2169 = !DILocation(line: 953, column: 12, scope: !2168)
!2170 = !DILocation(line: 953, column: 30, scope: !2171)
!2171 = !DILexicalBlockFile(scope: !1990, file: !888, discriminator: 2)
!2172 = !DILocation(line: 953, column: 12, scope: !2171)
!2173 = !DILocation(line: 953, column: 12, scope: !2174)
!2174 = !DILexicalBlockFile(scope: !1990, file: !888, discriminator: 3)
!2175 = !DILocation(line: 953, column: 5, scope: !2174)
!2176 = !DILocation(line: 954, column: 1, scope: !1990)
!2177 = distinct !DISubprogram(name: "decode_end", scope: !888, file: !888, line: 1020, type: !1007, isLocal: true, isDefinition: true, scopeLine: 1021, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2178 = !DILocalVariable(name: "avctx", arg: 1, scope: !2177, file: !888, line: 1020, type: !1009)
!2179 = !DILocation(line: 1020, column: 61, scope: !2177)
!2180 = !DILocalVariable(name: "l", scope: !2177, file: !888, line: 1022, type: !1656)
!2181 = !DILocation(line: 1022, column: 24, scope: !2177)
!2182 = !DILocation(line: 1022, column: 28, scope: !2177)
!2183 = !DILocation(line: 1022, column: 35, scope: !2177)
!2184 = !DILocalVariable(name: "i", scope: !2177, file: !888, line: 1023, type: !905)
!2185 = !DILocation(line: 1023, column: 9, scope: !2177)
!2186 = !DILocation(line: 1025, column: 13, scope: !2177)
!2187 = !DILocation(line: 1025, column: 16, scope: !2177)
!2188 = !DILocation(line: 1025, column: 5, scope: !2177)
!2189 = !DILocation(line: 1026, column: 13, scope: !2177)
!2190 = !DILocation(line: 1026, column: 16, scope: !2177)
!2191 = !DILocation(line: 1026, column: 5, scope: !2177)
!2192 = !DILocation(line: 1027, column: 12, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2177, file: !888, line: 1027, column: 5)
!2194 = !DILocation(line: 1027, column: 10, scope: !2193)
!2195 = !DILocation(line: 1027, column: 17, scope: !2196)
!2196 = !DILexicalBlockFile(scope: !2197, file: !888, discriminator: 1)
!2197 = distinct !DILexicalBlock(scope: !2193, file: !888, line: 1027, column: 5)
!2198 = !DILocation(line: 1027, column: 19, scope: !2196)
!2199 = !DILocation(line: 1027, column: 5, scope: !2196)
!2200 = !DILocation(line: 1028, column: 29, scope: !2197)
!2201 = !DILocation(line: 1028, column: 19, scope: !2197)
!2202 = !DILocation(line: 1028, column: 22, scope: !2197)
!2203 = !DILocation(line: 1028, column: 18, scope: !2197)
!2204 = !DILocation(line: 1028, column: 9, scope: !2197)
!2205 = !DILocation(line: 1027, column: 39, scope: !2206)
!2206 = !DILexicalBlockFile(scope: !2197, file: !888, discriminator: 2)
!2207 = !DILocation(line: 1027, column: 5, scope: !2206)
!2208 = distinct !{!2208, !2209}
!2209 = !DILocation(line: 1027, column: 5, scope: !2177)
!2210 = !DILocation(line: 1029, column: 9, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2177, file: !888, line: 1029, column: 9)
!2212 = !DILocation(line: 1029, column: 12, scope: !2211)
!2213 = !DILocation(line: 1029, column: 9, scope: !2177)
!2214 = !DILocation(line: 1030, column: 19, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2211, file: !888, line: 1029, column: 16)
!2216 = !DILocation(line: 1030, column: 22, scope: !2215)
!2217 = !DILocation(line: 1030, column: 18, scope: !2215)
!2218 = !DILocation(line: 1030, column: 9, scope: !2215)
!2219 = !DILocation(line: 1031, column: 19, scope: !2215)
!2220 = !DILocation(line: 1031, column: 22, scope: !2215)
!2221 = !DILocation(line: 1031, column: 18, scope: !2215)
!2222 = !DILocation(line: 1031, column: 9, scope: !2215)
!2223 = !DILocation(line: 1032, column: 19, scope: !2215)
!2224 = !DILocation(line: 1032, column: 22, scope: !2215)
!2225 = !DILocation(line: 1032, column: 18, scope: !2215)
!2226 = !DILocation(line: 1032, column: 9, scope: !2215)
!2227 = !DILocation(line: 1033, column: 19, scope: !2215)
!2228 = !DILocation(line: 1033, column: 22, scope: !2215)
!2229 = !DILocation(line: 1033, column: 18, scope: !2215)
!2230 = !DILocation(line: 1033, column: 9, scope: !2215)
!2231 = !DILocation(line: 1034, column: 19, scope: !2215)
!2232 = !DILocation(line: 1034, column: 22, scope: !2215)
!2233 = !DILocation(line: 1034, column: 18, scope: !2215)
!2234 = !DILocation(line: 1034, column: 9, scope: !2215)
!2235 = !DILocation(line: 1035, column: 19, scope: !2215)
!2236 = !DILocation(line: 1035, column: 22, scope: !2215)
!2237 = !DILocation(line: 1035, column: 18, scope: !2215)
!2238 = !DILocation(line: 1035, column: 9, scope: !2215)
!2239 = !DILocation(line: 1036, column: 5, scope: !2215)
!2240 = !DILocation(line: 1037, column: 15, scope: !2177)
!2241 = !DILocation(line: 1037, column: 18, scope: !2177)
!2242 = !DILocation(line: 1037, column: 14, scope: !2177)
!2243 = !DILocation(line: 1037, column: 5, scope: !2177)
!2244 = !DILocation(line: 1038, column: 5, scope: !2177)
!2245 = !DILocation(line: 1038, column: 8, scope: !2177)
!2246 = !DILocation(line: 1038, column: 20, scope: !2177)
!2247 = !DILocation(line: 1040, column: 20, scope: !2177)
!2248 = !DILocation(line: 1040, column: 23, scope: !2177)
!2249 = !DILocation(line: 1040, column: 5, scope: !2177)
!2250 = !DILocation(line: 1042, column: 5, scope: !2177)
!2251 = distinct !DISubprogram(name: "tm2_read_header", scope: !888, file: !888, line: 251, type: !2252, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!905, !1657, !1454}
!2254 = !DILocalVariable(name: "ctx", arg: 1, scope: !2251, file: !888, line: 251, type: !1657)
!2255 = !DILocation(line: 251, column: 47, scope: !2251)
!2256 = !DILocalVariable(name: "buf", arg: 2, scope: !2251, file: !888, line: 251, type: !1454)
!2257 = !DILocation(line: 251, column: 67, scope: !2251)
!2258 = !DILocalVariable(name: "magic", scope: !2251, file: !888, line: 253, type: !900)
!2259 = !DILocation(line: 253, column: 14, scope: !2251)
!2260 = !DILocation(line: 253, column: 54, scope: !2251)
!2261 = !DILocation(line: 253, column: 61, scope: !2251)
!2262 = !DILocation(line: 255, column: 13, scope: !2251)
!2263 = !DILocation(line: 255, column: 5, scope: !2251)
!2264 = !DILocation(line: 257, column: 31, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2251, file: !888, line: 255, column: 20)
!2266 = !DILocation(line: 257, column: 36, scope: !2265)
!2267 = !DILocation(line: 257, column: 9, scope: !2265)
!2268 = !DILocation(line: 258, column: 9, scope: !2265)
!2269 = !DILocation(line: 260, column: 9, scope: !2265)
!2270 = !DILocation(line: 262, column: 16, scope: !2265)
!2271 = !DILocation(line: 262, column: 21, scope: !2265)
!2272 = !DILocation(line: 263, column: 16, scope: !2265)
!2273 = !DILocation(line: 262, column: 9, scope: !2265)
!2274 = !DILocation(line: 264, column: 9, scope: !2265)
!2275 = !DILocation(line: 266, column: 1, scope: !2251)
!2276 = distinct !DISubprogram(name: "tm2_read_stream", scope: !888, file: !888, line: 295, type: !2277, isLocal: true, isDefinition: true, scopeLine: 296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!905, !1657, !1454, !905, !905}
!2279 = !DILocalVariable(name: "g", arg: 1, scope: !2280, file: !2281, line: 188, type: !2284)
!2280 = distinct !DISubprogram(name: "bytestream2_tell", scope: !2281, file: !2281, line: 188, type: !2282, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2281 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!905, !2284}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64, align: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !2281, line: 35, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !2281, line: 33, size: 192, align: 64, elements: !2287)
!2287 = !{!2288, !2289, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2286, file: !2281, line: 34, baseType: !1454, size: 64, align: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2286, file: !2281, line: 34, baseType: !1454, size: 64, align: 64, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !2286, file: !2281, line: 34, baseType: !1454, size: 64, align: 64, offset: 128)
!2291 = !DILocation(line: 188, column: 83, scope: !2280, inlinedAt: !2292)
!2292 = distinct !DILocation(line: 345, column: 11, scope: !2276)
!2293 = !DILocalVariable(name: "g", arg: 1, scope: !2294, file: !2281, line: 164, type: !2284)
!2294 = distinct !DISubprogram(name: "bytestream2_skip", scope: !2281, file: !2281, line: 164, type: !2295, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{null, !2284, !902}
!2297 = !DILocation(line: 164, column: 84, scope: !2294, inlinedAt: !2298)
!2298 = distinct !DILocation(line: 342, column: 9, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !888, line: 341, column: 12)
!2300 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 339, column: 9)
!2301 = !DILocalVariable(name: "size", arg: 2, scope: !2294, file: !2281, line: 165, type: !902)
!2302 = !DILocation(line: 165, column: 60, scope: !2294, inlinedAt: !2298)
!2303 = !DILocation(line: 164, column: 84, scope: !2294, inlinedAt: !2304)
!2304 = distinct !DILocation(line: 340, column: 9, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2300, file: !888, line: 339, column: 28)
!2306 = !DILocation(line: 165, column: 60, scope: !2294, inlinedAt: !2304)
!2307 = !DILocalVariable(name: "x", arg: 1, scope: !2308, file: !2309, line: 66, type: !900)
!2308 = distinct !DISubprogram(name: "av_bswap32", scope: !2309, file: !2309, line: 66, type: !2310, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2309 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!900, !900}
!2312 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2313)
!2313 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2318)
!2314 = distinct !DISubprogram(name: "bytestream_get_be32", scope: !2281, file: !2281, line: 92, type: !2315, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!902, !2317}
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64, align: 64)
!2318 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2322)
!2319 = distinct !DISubprogram(name: "bytestream2_get_be32u", scope: !2281, file: !2281, line: 92, type: !2320, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!902, !2284}
!2322 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2325)
!2323 = !DILexicalBlockFile(scope: !2324, file: !2281, discriminator: 2)
!2324 = distinct !DISubprogram(name: "bytestream2_get_be32", scope: !2281, file: !2281, line: 92, type: !2320, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2325 = distinct !DILocation(line: 338, column: 11, scope: !2276)
!2326 = !DILocalVariable(name: "b", arg: 1, scope: !2314, file: !2281, line: 92, type: !2317)
!2327 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2318)
!2328 = !DILocalVariable(name: "g", arg: 1, scope: !2319, file: !2281, line: 92, type: !2284)
!2329 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2322)
!2330 = !DILocalVariable(name: "g", arg: 1, scope: !2324, file: !2281, line: 92, type: !2284)
!2331 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2325)
!2332 = !DILocation(line: 164, column: 84, scope: !2294, inlinedAt: !2333)
!2333 = distinct !DILocation(line: 351, column: 5, scope: !2334)
!2334 = !DILexicalBlockFile(scope: !2276, file: !888, discriminator: 1)
!2335 = !DILocation(line: 165, column: 60, scope: !2294, inlinedAt: !2333)
!2336 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2337)
!2337 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2339)
!2339 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2340)
!2340 = distinct !DILocation(line: 366, column: 11, scope: !2276)
!2341 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2338)
!2342 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2339)
!2343 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2340)
!2344 = !DILocation(line: 188, column: 83, scope: !2280, inlinedAt: !2345)
!2345 = distinct !DILocation(line: 368, column: 15, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !888, line: 367, column: 18)
!2347 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 367, column: 9)
!2348 = !DILocation(line: 164, column: 84, scope: !2294, inlinedAt: !2349)
!2349 = distinct !DILocation(line: 334, column: 13, scope: !2350)
!2350 = !DILexicalBlockFile(scope: !2351, file: !888, discriminator: 1)
!2351 = distinct !DILexicalBlock(scope: !2352, file: !888, line: 327, column: 22)
!2352 = distinct !DILexicalBlock(scope: !2353, file: !888, line: 327, column: 13)
!2353 = distinct !DILexicalBlock(scope: !2354, file: !888, line: 322, column: 19)
!2354 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 322, column: 9)
!2355 = !DILocation(line: 165, column: 60, scope: !2294, inlinedAt: !2349)
!2356 = !DILocation(line: 188, column: 83, scope: !2280, inlinedAt: !2357)
!2357 = distinct !DILocation(line: 328, column: 19, scope: !2351)
!2358 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2359)
!2359 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2360)
!2360 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2361)
!2361 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2362)
!2362 = distinct !DILocation(line: 325, column: 19, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !888, line: 324, column: 32)
!2364 = distinct !DILexicalBlock(scope: !2353, file: !888, line: 324, column: 13)
!2365 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2360)
!2366 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2361)
!2367 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2362)
!2368 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2369)
!2369 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2370)
!2370 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2371)
!2371 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2372)
!2372 = distinct !DILocation(line: 323, column: 15, scope: !2353)
!2373 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2370)
!2374 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2371)
!2375 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2372)
!2376 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2377)
!2377 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2378)
!2378 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2379)
!2379 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2380)
!2380 = distinct !DILocation(line: 321, column: 12, scope: !2276)
!2381 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2378)
!2382 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2379)
!2383 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2380)
!2384 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !2385)
!2385 = distinct !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2386)
!2386 = distinct !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2387)
!2387 = distinct !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2388)
!2388 = distinct !DILocation(line: 310, column: 11, scope: !2276)
!2389 = !DILocation(line: 92, column: 95, scope: !2314, inlinedAt: !2386)
!2390 = !DILocation(line: 92, column: 892, scope: !2319, inlinedAt: !2387)
!2391 = !DILocation(line: 92, column: 1034, scope: !2324, inlinedAt: !2388)
!2392 = !DILocalVariable(name: "g", arg: 1, scope: !2393, file: !2281, line: 133, type: !2284)
!2393 = distinct !DISubprogram(name: "bytestream2_init", scope: !2281, file: !2281, line: 133, type: !2394, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !2284, !1454, !905}
!2396 = !DILocation(line: 133, column: 84, scope: !2393, inlinedAt: !2397)
!2397 = distinct !DILocation(line: 309, column: 5, scope: !2276)
!2398 = !DILocalVariable(name: "buf", arg: 2, scope: !2393, file: !2281, line: 134, type: !1454)
!2399 = !DILocation(line: 134, column: 62, scope: !2393, inlinedAt: !2397)
!2400 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2393, file: !2281, line: 135, type: !905)
!2401 = !DILocation(line: 135, column: 51, scope: !2393, inlinedAt: !2397)
!2402 = !DILocalVariable(name: "ctx", arg: 1, scope: !2276, file: !888, line: 295, type: !1657)
!2403 = !DILocation(line: 295, column: 40, scope: !2276)
!2404 = !DILocalVariable(name: "buf", arg: 2, scope: !2276, file: !888, line: 295, type: !1454)
!2405 = !DILocation(line: 295, column: 60, scope: !2276)
!2406 = !DILocalVariable(name: "stream_id", arg: 3, scope: !2276, file: !888, line: 295, type: !905)
!2407 = !DILocation(line: 295, column: 69, scope: !2276)
!2408 = !DILocalVariable(name: "buf_size", arg: 4, scope: !2276, file: !888, line: 295, type: !905)
!2409 = !DILocation(line: 295, column: 84, scope: !2276)
!2410 = !DILocalVariable(name: "i", scope: !2276, file: !888, line: 297, type: !905)
!2411 = !DILocation(line: 297, column: 9, scope: !2276)
!2412 = !DILocalVariable(name: "ret", scope: !2276, file: !888, line: 297, type: !905)
!2413 = !DILocation(line: 297, column: 12, scope: !2276)
!2414 = !DILocalVariable(name: "skip", scope: !2276, file: !888, line: 298, type: !905)
!2415 = !DILocation(line: 298, column: 9, scope: !2276)
!2416 = !DILocalVariable(name: "len", scope: !2276, file: !888, line: 299, type: !905)
!2417 = !DILocation(line: 299, column: 9, scope: !2276)
!2418 = !DILocalVariable(name: "toks", scope: !2276, file: !888, line: 299, type: !905)
!2419 = !DILocation(line: 299, column: 14, scope: !2276)
!2420 = !DILocalVariable(name: "pos", scope: !2276, file: !888, line: 299, type: !905)
!2421 = !DILocation(line: 299, column: 20, scope: !2276)
!2422 = !DILocalVariable(name: "codes", scope: !2276, file: !888, line: 300, type: !2423)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "TM2Codes", file: !888, line: 98, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TM2Codes", file: !888, line: 93, size: 384, align: 64, elements: !2425)
!2425 = !{!2426, !2441, !2442, !2443}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vlc", scope: !2424, file: !888, line: 94, baseType: !2427, size: 192, align: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !2428, line: 30, baseType: !2429)
!2428 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !2428, line: 26, size: 192, align: 64, elements: !2430)
!2430 = !{!2431, !2432, !2439, !2440}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2429, file: !2428, line: 27, baseType: !905, size: 32, align: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2429, file: !2428, line: 28, baseType: !2433, size: 64, align: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64, align: 64)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 32, align: 16, elements: !2437)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !901, line: 37, baseType: !2436)
!2436 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!2437 = !{!2438}
!2438 = !DISubrange(count: 2)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !2429, file: !2428, line: 29, baseType: !905, size: 32, align: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !2429, file: !2428, line: 29, baseType: !905, size: 32, align: 32, offset: 160)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2424, file: !888, line: 95, baseType: !905, size: 32, align: 32, offset: 192)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "recode", scope: !2424, file: !888, line: 96, baseType: !1303, size: 64, align: 64, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2424, file: !888, line: 97, baseType: !905, size: 32, align: 32, offset: 320)
!2444 = !DILocation(line: 300, column: 14, scope: !2276)
!2445 = !DILocalVariable(name: "gb", scope: !2276, file: !888, line: 301, type: !2285)
!2446 = !DILocation(line: 301, column: 20, scope: !2276)
!2447 = !DILocation(line: 303, column: 9, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 303, column: 9)
!2449 = !DILocation(line: 303, column: 18, scope: !2448)
!2450 = !DILocation(line: 303, column: 9, scope: !2276)
!2451 = !DILocation(line: 304, column: 16, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2448, file: !888, line: 303, column: 23)
!2453 = !DILocation(line: 304, column: 21, scope: !2452)
!2454 = !DILocation(line: 304, column: 9, scope: !2452)
!2455 = !DILocation(line: 305, column: 9, scope: !2452)
!2456 = !DILocation(line: 309, column: 27, scope: !2276)
!2457 = !DILocation(line: 309, column: 32, scope: !2276)
!2458 = !DILocation(line: 309, column: 5, scope: !2276)
!2459 = !DILocation(line: 137, column: 16, scope: !2460, inlinedAt: !2397)
!2460 = !DILexicalBlockFile(scope: !2461, file: !2281, discriminator: 1)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !2281, line: 137, column: 14)
!2462 = distinct !DILexicalBlock(scope: !2393, file: !2281, line: 137, column: 8)
!2463 = !DILocation(line: 137, column: 25, scope: !2460, inlinedAt: !2397)
!2464 = !DILocation(line: 137, column: 14, scope: !2460, inlinedAt: !2397)
!2465 = !DILocation(line: 137, column: 34, scope: !2466, inlinedAt: !2397)
!2466 = !DILexicalBlockFile(scope: !2467, file: !2281, discriminator: 2)
!2467 = distinct !DILexicalBlock(scope: !2461, file: !2281, line: 137, column: 32)
!2468 = !DILocation(line: 137, column: 93, scope: !2469, inlinedAt: !2397)
!2469 = !DILexicalBlockFile(scope: !2466, file: !2281, discriminator: 4)
!2470 = !DILocation(line: 137, column: 93, scope: !2466, inlinedAt: !2397)
!2471 = !DILocation(line: 138, column: 17, scope: !2393, inlinedAt: !2397)
!2472 = !DILocation(line: 138, column: 5, scope: !2393, inlinedAt: !2397)
!2473 = !DILocation(line: 138, column: 8, scope: !2393, inlinedAt: !2397)
!2474 = !DILocation(line: 138, column: 15, scope: !2393, inlinedAt: !2397)
!2475 = !DILocation(line: 139, column: 23, scope: !2393, inlinedAt: !2397)
!2476 = !DILocation(line: 139, column: 5, scope: !2393, inlinedAt: !2397)
!2477 = !DILocation(line: 139, column: 8, scope: !2393, inlinedAt: !2397)
!2478 = !DILocation(line: 139, column: 21, scope: !2393, inlinedAt: !2397)
!2479 = !DILocation(line: 140, column: 21, scope: !2393, inlinedAt: !2397)
!2480 = !DILocation(line: 140, column: 27, scope: !2393, inlinedAt: !2397)
!2481 = !DILocation(line: 140, column: 25, scope: !2393, inlinedAt: !2397)
!2482 = !DILocation(line: 140, column: 5, scope: !2393, inlinedAt: !2397)
!2483 = !DILocation(line: 140, column: 8, scope: !2393, inlinedAt: !2397)
!2484 = !DILocation(line: 140, column: 19, scope: !2393, inlinedAt: !2397)
!2485 = !DILocation(line: 310, column: 11, scope: !2276)
!2486 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2388)
!2487 = distinct !DILexicalBlock(scope: !2324, file: !2281, line: 92, column: 1043)
!2488 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2388)
!2489 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2388)
!2490 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2388)
!2491 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2388)
!2492 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2388)
!2493 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2388)
!2494 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2388)
!2495 = !DILexicalBlockFile(scope: !2496, file: !2281, discriminator: 1)
!2496 = distinct !DILexicalBlock(scope: !2487, file: !2281, line: 92, column: 1074)
!2497 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2388)
!2498 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2388)
!2499 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2388)
!2500 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2388)
!2501 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2388)
!2502 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2388)
!2503 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2388)
!2504 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2387)
!2505 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2387)
!2506 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2387)
!2507 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2386)
!2508 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2386)
!2509 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2386)
!2510 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2386)
!2511 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2386)
!2512 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2386)
!2513 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2386)
!2514 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2385)
!2515 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2385)
!2516 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2385)
!2517 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2385)
!2518 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2385)
!2519 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2385)
!2520 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2385)
!2521 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2385)
!2522 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2385)
!2523 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2385)
!2524 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2385)
!2525 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2385)
!2526 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2385)
!2527 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2385)
!2528 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2385)
!2529 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2385)
!2530 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2385)
!2531 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2385)
!2532 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2388)
!2533 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2388)
!2534 = !DILexicalBlockFile(scope: !2324, file: !2281, discriminator: 3)
!2535 = !DILocation(line: 310, column: 9, scope: !2276)
!2536 = !DILocation(line: 312, column: 9, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 312, column: 9)
!2538 = !DILocation(line: 312, column: 13, scope: !2537)
!2539 = !DILocation(line: 312, column: 9, scope: !2276)
!2540 = !DILocation(line: 313, column: 9, scope: !2537)
!2541 = !DILocation(line: 315, column: 9, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 315, column: 9)
!2543 = !DILocation(line: 315, column: 13, scope: !2542)
!2544 = !DILocation(line: 315, column: 35, scope: !2542)
!2545 = !DILocation(line: 315, column: 38, scope: !2546)
!2546 = !DILexicalBlockFile(scope: !2542, file: !888, discriminator: 1)
!2547 = !DILocation(line: 315, column: 42, scope: !2546)
!2548 = !DILocation(line: 315, column: 46, scope: !2546)
!2549 = !DILocation(line: 315, column: 49, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2542, file: !888, discriminator: 2)
!2551 = !DILocation(line: 315, column: 53, scope: !2550)
!2552 = !DILocation(line: 315, column: 57, scope: !2550)
!2553 = !DILocation(line: 315, column: 63, scope: !2550)
!2554 = !DILocation(line: 315, column: 61, scope: !2550)
!2555 = !DILocation(line: 315, column: 9, scope: !2550)
!2556 = !DILocation(line: 316, column: 16, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2542, file: !888, line: 315, column: 73)
!2558 = !DILocation(line: 316, column: 21, scope: !2557)
!2559 = !DILocation(line: 316, column: 9, scope: !2557)
!2560 = !DILocation(line: 317, column: 9, scope: !2557)
!2561 = !DILocation(line: 319, column: 12, scope: !2276)
!2562 = !DILocation(line: 319, column: 16, scope: !2276)
!2563 = !DILocation(line: 319, column: 20, scope: !2276)
!2564 = !DILocation(line: 319, column: 10, scope: !2276)
!2565 = !DILocation(line: 321, column: 12, scope: !2276)
!2566 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2380)
!2567 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2380)
!2568 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2380)
!2569 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2380)
!2570 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2380)
!2571 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2380)
!2572 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2380)
!2573 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2380)
!2574 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2380)
!2575 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2380)
!2576 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2380)
!2577 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2380)
!2578 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2380)
!2579 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2380)
!2580 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2380)
!2581 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2379)
!2582 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2379)
!2583 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2379)
!2584 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2378)
!2585 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2378)
!2586 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2378)
!2587 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2378)
!2588 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2378)
!2589 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2378)
!2590 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2378)
!2591 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2377)
!2592 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2377)
!2593 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2377)
!2594 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2377)
!2595 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2377)
!2596 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2377)
!2597 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2377)
!2598 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2377)
!2599 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2377)
!2600 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2377)
!2601 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2377)
!2602 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2377)
!2603 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2377)
!2604 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2377)
!2605 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2377)
!2606 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2377)
!2607 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2377)
!2608 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2377)
!2609 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2380)
!2610 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2380)
!2611 = !DILocation(line: 321, column: 10, scope: !2276)
!2612 = !DILocation(line: 322, column: 9, scope: !2354)
!2613 = !DILocation(line: 322, column: 14, scope: !2354)
!2614 = !DILocation(line: 322, column: 9, scope: !2276)
!2615 = !DILocation(line: 323, column: 15, scope: !2353)
!2616 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2372)
!2617 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2372)
!2618 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2372)
!2619 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2372)
!2620 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2372)
!2621 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2372)
!2622 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2372)
!2623 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2372)
!2624 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2372)
!2625 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2372)
!2626 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2372)
!2627 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2372)
!2628 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2372)
!2629 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2372)
!2630 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2372)
!2631 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2371)
!2632 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2371)
!2633 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2371)
!2634 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2370)
!2635 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2370)
!2636 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2370)
!2637 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2370)
!2638 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2370)
!2639 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2370)
!2640 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2370)
!2641 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2369)
!2642 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2369)
!2643 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2369)
!2644 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2369)
!2645 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2369)
!2646 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2369)
!2647 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2369)
!2648 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2369)
!2649 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2369)
!2650 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2369)
!2651 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2369)
!2652 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2369)
!2653 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2369)
!2654 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2369)
!2655 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2369)
!2656 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2369)
!2657 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2369)
!2658 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2369)
!2659 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2372)
!2660 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2372)
!2661 = !DILocation(line: 323, column: 13, scope: !2353)
!2662 = !DILocation(line: 324, column: 13, scope: !2364)
!2663 = !DILocation(line: 324, column: 17, scope: !2364)
!2664 = !DILocation(line: 324, column: 13, scope: !2353)
!2665 = !DILocation(line: 325, column: 19, scope: !2363)
!2666 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2362)
!2667 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2362)
!2668 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2362)
!2669 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2362)
!2670 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2362)
!2671 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2362)
!2672 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2362)
!2673 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2362)
!2674 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2362)
!2675 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2362)
!2676 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2362)
!2677 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2362)
!2678 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2362)
!2679 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2362)
!2680 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2362)
!2681 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2361)
!2682 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2361)
!2683 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2361)
!2684 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2360)
!2685 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2360)
!2686 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2360)
!2687 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2360)
!2688 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2360)
!2689 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2360)
!2690 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2360)
!2691 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2359)
!2692 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2359)
!2693 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2359)
!2694 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2359)
!2695 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2359)
!2696 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2359)
!2697 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2359)
!2698 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2359)
!2699 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2359)
!2700 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2359)
!2701 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2359)
!2702 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2359)
!2703 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2359)
!2704 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2359)
!2705 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2359)
!2706 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2359)
!2707 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2359)
!2708 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2359)
!2709 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2362)
!2710 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2362)
!2711 = !DILocation(line: 325, column: 17, scope: !2363)
!2712 = !DILocation(line: 326, column: 9, scope: !2363)
!2713 = !DILocation(line: 327, column: 13, scope: !2352)
!2714 = !DILocation(line: 327, column: 17, scope: !2352)
!2715 = !DILocation(line: 327, column: 13, scope: !2353)
!2716 = !DILocation(line: 328, column: 19, scope: !2351)
!2717 = !DILocation(line: 190, column: 18, scope: !2280, inlinedAt: !2357)
!2718 = !DILocation(line: 190, column: 21, scope: !2280, inlinedAt: !2357)
!2719 = !DILocation(line: 190, column: 30, scope: !2280, inlinedAt: !2357)
!2720 = !DILocation(line: 190, column: 33, scope: !2280, inlinedAt: !2357)
!2721 = !DILocation(line: 190, column: 28, scope: !2280, inlinedAt: !2357)
!2722 = !DILocation(line: 190, column: 12, scope: !2280, inlinedAt: !2357)
!2723 = !DILocation(line: 328, column: 17, scope: !2351)
!2724 = !DILocation(line: 329, column: 17, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2351, file: !888, line: 329, column: 17)
!2726 = !DILocation(line: 329, column: 25, scope: !2725)
!2727 = !DILocation(line: 329, column: 22, scope: !2725)
!2728 = !DILocation(line: 329, column: 17, scope: !2351)
!2729 = !DILocation(line: 330, column: 17, scope: !2725)
!2730 = !DILocation(line: 331, column: 28, scope: !2351)
!2731 = !DILocation(line: 331, column: 33, scope: !2351)
!2732 = !DILocation(line: 331, column: 37, scope: !2351)
!2733 = !DILocation(line: 331, column: 43, scope: !2351)
!2734 = !DILocation(line: 331, column: 41, scope: !2351)
!2735 = !DILocation(line: 331, column: 49, scope: !2351)
!2736 = !DILocation(line: 331, column: 56, scope: !2351)
!2737 = !DILocation(line: 331, column: 54, scope: !2351)
!2738 = !DILocation(line: 331, column: 61, scope: !2351)
!2739 = !DILocation(line: 331, column: 13, scope: !2351)
!2740 = !DILocation(line: 332, column: 40, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2351, file: !888, line: 332, column: 17)
!2742 = !DILocation(line: 332, column: 45, scope: !2741)
!2743 = !DILocation(line: 332, column: 24, scope: !2741)
!2744 = !DILocation(line: 332, column: 22, scope: !2741)
!2745 = !DILocation(line: 332, column: 57, scope: !2741)
!2746 = !DILocation(line: 332, column: 17, scope: !2351)
!2747 = !DILocation(line: 333, column: 24, scope: !2741)
!2748 = !DILocation(line: 333, column: 17, scope: !2741)
!2749 = !DILocation(line: 334, column: 53, scope: !2351)
!2750 = !DILocation(line: 334, column: 58, scope: !2351)
!2751 = !DILocation(line: 334, column: 37, scope: !2351)
!2752 = !DILocation(line: 334, column: 62, scope: !2351)
!2753 = !DILocation(line: 334, column: 68, scope: !2351)
!2754 = !DILocation(line: 334, column: 74, scope: !2351)
!2755 = !DILocation(line: 334, column: 13, scope: !2350)
!2756 = !DILocation(line: 167, column: 20, scope: !2294, inlinedAt: !2349)
!2757 = !DILocation(line: 167, column: 23, scope: !2294, inlinedAt: !2349)
!2758 = !DILocation(line: 167, column: 36, scope: !2294, inlinedAt: !2349)
!2759 = !DILocation(line: 167, column: 39, scope: !2294, inlinedAt: !2349)
!2760 = !DILocation(line: 167, column: 34, scope: !2294, inlinedAt: !2349)
!2761 = !DILocation(line: 167, column: 50, scope: !2294, inlinedAt: !2349)
!2762 = !DILocation(line: 167, column: 49, scope: !2294, inlinedAt: !2349)
!2763 = !DILocation(line: 167, column: 47, scope: !2294, inlinedAt: !2349)
!2764 = !DILocation(line: 167, column: 19, scope: !2294, inlinedAt: !2349)
!2765 = !DILocation(line: 167, column: 59, scope: !2766, inlinedAt: !2349)
!2766 = !DILexicalBlockFile(scope: !2294, file: !2281, discriminator: 1)
!2767 = !DILocation(line: 167, column: 58, scope: !2766, inlinedAt: !2349)
!2768 = !DILocation(line: 167, column: 19, scope: !2766, inlinedAt: !2349)
!2769 = !DILocation(line: 167, column: 68, scope: !2770, inlinedAt: !2349)
!2770 = !DILexicalBlockFile(scope: !2294, file: !2281, discriminator: 2)
!2771 = !DILocation(line: 167, column: 71, scope: !2770, inlinedAt: !2349)
!2772 = !DILocation(line: 167, column: 84, scope: !2770, inlinedAt: !2349)
!2773 = !DILocation(line: 167, column: 87, scope: !2770, inlinedAt: !2349)
!2774 = !DILocation(line: 167, column: 82, scope: !2770, inlinedAt: !2349)
!2775 = !DILocation(line: 167, column: 19, scope: !2770, inlinedAt: !2349)
!2776 = !DILocation(line: 167, column: 19, scope: !2777, inlinedAt: !2349)
!2777 = !DILexicalBlockFile(scope: !2294, file: !2281, discriminator: 3)
!2778 = !DILocation(line: 167, column: 5, scope: !2777, inlinedAt: !2349)
!2779 = !DILocation(line: 167, column: 8, scope: !2777, inlinedAt: !2349)
!2780 = !DILocation(line: 167, column: 15, scope: !2777, inlinedAt: !2349)
!2781 = !DILocation(line: 335, column: 9, scope: !2351)
!2782 = !DILocation(line: 336, column: 5, scope: !2353)
!2783 = !DILocation(line: 338, column: 11, scope: !2276)
!2784 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2325)
!2785 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2325)
!2786 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2325)
!2787 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2325)
!2788 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2325)
!2789 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2325)
!2790 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2325)
!2791 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2325)
!2792 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2325)
!2793 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2325)
!2794 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2325)
!2795 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2325)
!2796 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2325)
!2797 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2325)
!2798 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2325)
!2799 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2322)
!2800 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2322)
!2801 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2322)
!2802 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2318)
!2803 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2318)
!2804 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2318)
!2805 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2318)
!2806 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2318)
!2807 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2318)
!2808 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2318)
!2809 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2313)
!2810 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2313)
!2811 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2313)
!2812 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2313)
!2813 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2313)
!2814 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2313)
!2815 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2313)
!2816 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2313)
!2817 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2313)
!2818 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2313)
!2819 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2313)
!2820 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2313)
!2821 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2313)
!2822 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2313)
!2823 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2313)
!2824 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2313)
!2825 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2313)
!2826 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2313)
!2827 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2325)
!2828 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2325)
!2829 = !DILocation(line: 338, column: 9, scope: !2276)
!2830 = !DILocation(line: 339, column: 9, scope: !2300)
!2831 = !DILocation(line: 339, column: 13, scope: !2300)
!2832 = !DILocation(line: 339, column: 9, scope: !2276)
!2833 = !DILocation(line: 340, column: 9, scope: !2305)
!2834 = !DILocation(line: 167, column: 20, scope: !2294, inlinedAt: !2304)
!2835 = !DILocation(line: 167, column: 23, scope: !2294, inlinedAt: !2304)
!2836 = !DILocation(line: 167, column: 36, scope: !2294, inlinedAt: !2304)
!2837 = !DILocation(line: 167, column: 39, scope: !2294, inlinedAt: !2304)
!2838 = !DILocation(line: 167, column: 34, scope: !2294, inlinedAt: !2304)
!2839 = !DILocation(line: 167, column: 50, scope: !2294, inlinedAt: !2304)
!2840 = !DILocation(line: 167, column: 49, scope: !2294, inlinedAt: !2304)
!2841 = !DILocation(line: 167, column: 47, scope: !2294, inlinedAt: !2304)
!2842 = !DILocation(line: 167, column: 19, scope: !2294, inlinedAt: !2304)
!2843 = !DILocation(line: 167, column: 59, scope: !2766, inlinedAt: !2304)
!2844 = !DILocation(line: 167, column: 58, scope: !2766, inlinedAt: !2304)
!2845 = !DILocation(line: 167, column: 19, scope: !2766, inlinedAt: !2304)
!2846 = !DILocation(line: 167, column: 68, scope: !2770, inlinedAt: !2304)
!2847 = !DILocation(line: 167, column: 71, scope: !2770, inlinedAt: !2304)
!2848 = !DILocation(line: 167, column: 84, scope: !2770, inlinedAt: !2304)
!2849 = !DILocation(line: 167, column: 87, scope: !2770, inlinedAt: !2304)
!2850 = !DILocation(line: 167, column: 82, scope: !2770, inlinedAt: !2304)
!2851 = !DILocation(line: 167, column: 19, scope: !2770, inlinedAt: !2304)
!2852 = !DILocation(line: 167, column: 19, scope: !2777, inlinedAt: !2304)
!2853 = !DILocation(line: 167, column: 5, scope: !2777, inlinedAt: !2304)
!2854 = !DILocation(line: 167, column: 8, scope: !2777, inlinedAt: !2304)
!2855 = !DILocation(line: 167, column: 15, scope: !2777, inlinedAt: !2304)
!2856 = !DILocation(line: 341, column: 5, scope: !2305)
!2857 = !DILocation(line: 342, column: 9, scope: !2299)
!2858 = !DILocation(line: 167, column: 20, scope: !2294, inlinedAt: !2298)
!2859 = !DILocation(line: 167, column: 23, scope: !2294, inlinedAt: !2298)
!2860 = !DILocation(line: 167, column: 36, scope: !2294, inlinedAt: !2298)
!2861 = !DILocation(line: 167, column: 39, scope: !2294, inlinedAt: !2298)
!2862 = !DILocation(line: 167, column: 34, scope: !2294, inlinedAt: !2298)
!2863 = !DILocation(line: 167, column: 50, scope: !2294, inlinedAt: !2298)
!2864 = !DILocation(line: 167, column: 49, scope: !2294, inlinedAt: !2298)
!2865 = !DILocation(line: 167, column: 47, scope: !2294, inlinedAt: !2298)
!2866 = !DILocation(line: 167, column: 19, scope: !2294, inlinedAt: !2298)
!2867 = !DILocation(line: 167, column: 59, scope: !2766, inlinedAt: !2298)
!2868 = !DILocation(line: 167, column: 58, scope: !2766, inlinedAt: !2298)
!2869 = !DILocation(line: 167, column: 19, scope: !2766, inlinedAt: !2298)
!2870 = !DILocation(line: 167, column: 68, scope: !2770, inlinedAt: !2298)
!2871 = !DILocation(line: 167, column: 71, scope: !2770, inlinedAt: !2298)
!2872 = !DILocation(line: 167, column: 84, scope: !2770, inlinedAt: !2298)
!2873 = !DILocation(line: 167, column: 87, scope: !2770, inlinedAt: !2298)
!2874 = !DILocation(line: 167, column: 82, scope: !2770, inlinedAt: !2298)
!2875 = !DILocation(line: 167, column: 19, scope: !2770, inlinedAt: !2298)
!2876 = !DILocation(line: 167, column: 19, scope: !2777, inlinedAt: !2298)
!2877 = !DILocation(line: 167, column: 5, scope: !2777, inlinedAt: !2298)
!2878 = !DILocation(line: 167, column: 8, scope: !2777, inlinedAt: !2298)
!2879 = !DILocation(line: 167, column: 15, scope: !2777, inlinedAt: !2298)
!2880 = !DILocation(line: 345, column: 11, scope: !2276)
!2881 = !DILocation(line: 190, column: 18, scope: !2280, inlinedAt: !2292)
!2882 = !DILocation(line: 190, column: 21, scope: !2280, inlinedAt: !2292)
!2883 = !DILocation(line: 190, column: 30, scope: !2280, inlinedAt: !2292)
!2884 = !DILocation(line: 190, column: 33, scope: !2280, inlinedAt: !2292)
!2885 = !DILocation(line: 190, column: 28, scope: !2280, inlinedAt: !2292)
!2886 = !DILocation(line: 190, column: 12, scope: !2280, inlinedAt: !2292)
!2887 = !DILocation(line: 345, column: 9, scope: !2276)
!2888 = !DILocation(line: 346, column: 9, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 346, column: 9)
!2890 = !DILocation(line: 346, column: 17, scope: !2889)
!2891 = !DILocation(line: 346, column: 14, scope: !2889)
!2892 = !DILocation(line: 346, column: 9, scope: !2276)
!2893 = !DILocation(line: 347, column: 9, scope: !2889)
!2894 = !DILocation(line: 348, column: 20, scope: !2276)
!2895 = !DILocation(line: 348, column: 25, scope: !2276)
!2896 = !DILocation(line: 348, column: 29, scope: !2276)
!2897 = !DILocation(line: 348, column: 35, scope: !2276)
!2898 = !DILocation(line: 348, column: 33, scope: !2276)
!2899 = !DILocation(line: 348, column: 41, scope: !2276)
!2900 = !DILocation(line: 348, column: 48, scope: !2276)
!2901 = !DILocation(line: 348, column: 46, scope: !2276)
!2902 = !DILocation(line: 348, column: 53, scope: !2276)
!2903 = !DILocation(line: 348, column: 5, scope: !2276)
!2904 = !DILocation(line: 349, column: 37, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 349, column: 9)
!2906 = !DILocation(line: 349, column: 16, scope: !2905)
!2907 = !DILocation(line: 349, column: 14, scope: !2905)
!2908 = !DILocation(line: 349, column: 51, scope: !2905)
!2909 = !DILocation(line: 349, column: 9, scope: !2276)
!2910 = !DILocation(line: 350, column: 16, scope: !2905)
!2911 = !DILocation(line: 350, column: 9, scope: !2905)
!2912 = !DILocation(line: 351, column: 45, scope: !2276)
!2913 = !DILocation(line: 351, column: 50, scope: !2276)
!2914 = !DILocation(line: 351, column: 29, scope: !2276)
!2915 = !DILocation(line: 351, column: 54, scope: !2276)
!2916 = !DILocation(line: 351, column: 60, scope: !2276)
!2917 = !DILocation(line: 351, column: 66, scope: !2276)
!2918 = !DILocation(line: 351, column: 5, scope: !2334)
!2919 = !DILocation(line: 167, column: 20, scope: !2294, inlinedAt: !2333)
!2920 = !DILocation(line: 167, column: 23, scope: !2294, inlinedAt: !2333)
!2921 = !DILocation(line: 167, column: 36, scope: !2294, inlinedAt: !2333)
!2922 = !DILocation(line: 167, column: 39, scope: !2294, inlinedAt: !2333)
!2923 = !DILocation(line: 167, column: 34, scope: !2294, inlinedAt: !2333)
!2924 = !DILocation(line: 167, column: 50, scope: !2294, inlinedAt: !2333)
!2925 = !DILocation(line: 167, column: 49, scope: !2294, inlinedAt: !2333)
!2926 = !DILocation(line: 167, column: 47, scope: !2294, inlinedAt: !2333)
!2927 = !DILocation(line: 167, column: 19, scope: !2294, inlinedAt: !2333)
!2928 = !DILocation(line: 167, column: 59, scope: !2766, inlinedAt: !2333)
!2929 = !DILocation(line: 167, column: 58, scope: !2766, inlinedAt: !2333)
!2930 = !DILocation(line: 167, column: 19, scope: !2766, inlinedAt: !2333)
!2931 = !DILocation(line: 167, column: 68, scope: !2770, inlinedAt: !2333)
!2932 = !DILocation(line: 167, column: 71, scope: !2770, inlinedAt: !2333)
!2933 = !DILocation(line: 167, column: 84, scope: !2770, inlinedAt: !2333)
!2934 = !DILocation(line: 167, column: 87, scope: !2770, inlinedAt: !2333)
!2935 = !DILocation(line: 167, column: 82, scope: !2770, inlinedAt: !2333)
!2936 = !DILocation(line: 167, column: 19, scope: !2770, inlinedAt: !2333)
!2937 = !DILocation(line: 167, column: 19, scope: !2777, inlinedAt: !2333)
!2938 = !DILocation(line: 167, column: 5, scope: !2777, inlinedAt: !2333)
!2939 = !DILocation(line: 167, column: 8, scope: !2777, inlinedAt: !2333)
!2940 = !DILocation(line: 167, column: 15, scope: !2777, inlinedAt: !2333)
!2941 = !DILocation(line: 353, column: 10, scope: !2276)
!2942 = !DILocation(line: 355, column: 10, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 355, column: 9)
!2944 = !DILocation(line: 355, column: 15, scope: !2943)
!2945 = !DILocation(line: 355, column: 20, scope: !2943)
!2946 = !DILocation(line: 355, column: 24, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !2943, file: !888, discriminator: 1)
!2948 = !DILocation(line: 355, column: 29, scope: !2947)
!2949 = !DILocation(line: 355, column: 9, scope: !2947)
!2950 = !DILocation(line: 356, column: 16, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !888, line: 355, column: 42)
!2952 = !DILocation(line: 356, column: 21, scope: !2951)
!2953 = !DILocation(line: 356, column: 68, scope: !2951)
!2954 = !DILocation(line: 356, column: 9, scope: !2951)
!2955 = !DILocation(line: 357, column: 13, scope: !2951)
!2956 = !DILocation(line: 358, column: 9, scope: !2951)
!2957 = !DILocation(line: 360, column: 42, scope: !2276)
!2958 = !DILocation(line: 360, column: 30, scope: !2276)
!2959 = !DILocation(line: 360, column: 35, scope: !2276)
!2960 = !DILocation(line: 360, column: 29, scope: !2276)
!2961 = !DILocation(line: 360, column: 54, scope: !2276)
!2962 = !DILocation(line: 360, column: 11, scope: !2276)
!2963 = !DILocation(line: 360, column: 9, scope: !2276)
!2964 = !DILocation(line: 361, column: 9, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2276, file: !888, line: 361, column: 9)
!2966 = !DILocation(line: 361, column: 13, scope: !2965)
!2967 = !DILocation(line: 361, column: 9, scope: !2276)
!2968 = !DILocation(line: 362, column: 23, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2965, file: !888, line: 361, column: 18)
!2970 = !DILocation(line: 362, column: 9, scope: !2969)
!2971 = !DILocation(line: 362, column: 14, scope: !2969)
!2972 = !DILocation(line: 362, column: 34, scope: !2969)
!2973 = !DILocation(line: 363, column: 9, scope: !2969)
!2974 = !DILocation(line: 365, column: 32, scope: !2276)
!2975 = !DILocation(line: 365, column: 19, scope: !2276)
!2976 = !DILocation(line: 365, column: 5, scope: !2276)
!2977 = !DILocation(line: 365, column: 10, scope: !2276)
!2978 = !DILocation(line: 365, column: 30, scope: !2276)
!2979 = !DILocation(line: 366, column: 11, scope: !2276)
!2980 = !DILocation(line: 92, column: 1043, scope: !2487, inlinedAt: !2340)
!2981 = !DILocation(line: 92, column: 1046, scope: !2487, inlinedAt: !2340)
!2982 = !DILocation(line: 92, column: 1059, scope: !2487, inlinedAt: !2340)
!2983 = !DILocation(line: 92, column: 1062, scope: !2487, inlinedAt: !2340)
!2984 = !DILocation(line: 92, column: 1057, scope: !2487, inlinedAt: !2340)
!2985 = !DILocation(line: 92, column: 1069, scope: !2487, inlinedAt: !2340)
!2986 = !DILocation(line: 92, column: 1043, scope: !2324, inlinedAt: !2340)
!2987 = !DILocation(line: 92, column: 1088, scope: !2495, inlinedAt: !2340)
!2988 = !DILocation(line: 92, column: 1091, scope: !2495, inlinedAt: !2340)
!2989 = !DILocation(line: 92, column: 1076, scope: !2495, inlinedAt: !2340)
!2990 = !DILocation(line: 92, column: 1079, scope: !2495, inlinedAt: !2340)
!2991 = !DILocation(line: 92, column: 1086, scope: !2495, inlinedAt: !2340)
!2992 = !DILocation(line: 92, column: 1103, scope: !2495, inlinedAt: !2340)
!2993 = !DILocation(line: 92, column: 1144, scope: !2323, inlinedAt: !2340)
!2994 = !DILocation(line: 92, column: 1122, scope: !2323, inlinedAt: !2340)
!2995 = !DILocation(line: 92, column: 925, scope: !2319, inlinedAt: !2339)
!2996 = !DILocation(line: 92, column: 928, scope: !2319, inlinedAt: !2339)
!2997 = !DILocation(line: 92, column: 904, scope: !2319, inlinedAt: !2339)
!2998 = !DILocation(line: 92, column: 102, scope: !2314, inlinedAt: !2338)
!2999 = !DILocation(line: 92, column: 105, scope: !2314, inlinedAt: !2338)
!3000 = !DILocation(line: 92, column: 162, scope: !2314, inlinedAt: !2338)
!3001 = !DILocation(line: 92, column: 161, scope: !2314, inlinedAt: !2338)
!3002 = !DILocation(line: 92, column: 164, scope: !2314, inlinedAt: !2338)
!3003 = !DILocation(line: 92, column: 171, scope: !2314, inlinedAt: !2338)
!3004 = !DILocation(line: 92, column: 118, scope: !2314, inlinedAt: !2338)
!3005 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !2337)
!3006 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !2337)
!3007 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !2337)
!3008 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !2337)
!3009 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !2337)
!3010 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !2337)
!3011 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !2337)
!3012 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !2337)
!3013 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !2337)
!3014 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !2337)
!3015 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !2337)
!3016 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !2337)
!3017 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !2337)
!3018 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !2337)
!3019 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !2337)
!3020 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !2337)
!3021 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !2337)
!3022 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !2337)
!3023 = !DILocation(line: 92, column: 1115, scope: !2323, inlinedAt: !2340)
!3024 = !DILocation(line: 92, column: 1148, scope: !2534, inlinedAt: !2340)
!3025 = !DILocation(line: 366, column: 9, scope: !2276)
!3026 = !DILocation(line: 367, column: 9, scope: !2347)
!3027 = !DILocation(line: 367, column: 13, scope: !2347)
!3028 = !DILocation(line: 367, column: 9, scope: !2276)
!3029 = !DILocation(line: 368, column: 15, scope: !2346)
!3030 = !DILocation(line: 190, column: 18, scope: !2280, inlinedAt: !2345)
!3031 = !DILocation(line: 190, column: 21, scope: !2280, inlinedAt: !2345)
!3032 = !DILocation(line: 190, column: 30, scope: !2280, inlinedAt: !2345)
!3033 = !DILocation(line: 190, column: 33, scope: !2280, inlinedAt: !2345)
!3034 = !DILocation(line: 190, column: 28, scope: !2280, inlinedAt: !2345)
!3035 = !DILocation(line: 190, column: 12, scope: !2280, inlinedAt: !2345)
!3036 = !DILocation(line: 368, column: 13, scope: !2346)
!3037 = !DILocation(line: 369, column: 13, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2346, file: !888, line: 369, column: 13)
!3039 = !DILocation(line: 369, column: 21, scope: !3038)
!3040 = !DILocation(line: 369, column: 18, scope: !3038)
!3041 = !DILocation(line: 369, column: 13, scope: !2346)
!3042 = !DILocation(line: 370, column: 17, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3038, file: !888, line: 369, column: 26)
!3044 = !DILocation(line: 371, column: 13, scope: !3043)
!3045 = !DILocation(line: 373, column: 24, scope: !2346)
!3046 = !DILocation(line: 373, column: 29, scope: !2346)
!3047 = !DILocation(line: 373, column: 33, scope: !2346)
!3048 = !DILocation(line: 373, column: 39, scope: !2346)
!3049 = !DILocation(line: 373, column: 37, scope: !2346)
!3050 = !DILocation(line: 373, column: 45, scope: !2346)
!3051 = !DILocation(line: 373, column: 52, scope: !2346)
!3052 = !DILocation(line: 373, column: 50, scope: !2346)
!3053 = !DILocation(line: 373, column: 57, scope: !2346)
!3054 = !DILocation(line: 373, column: 9, scope: !2346)
!3055 = !DILocation(line: 374, column: 16, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2346, file: !888, line: 374, column: 9)
!3057 = !DILocation(line: 374, column: 14, scope: !3056)
!3058 = !DILocation(line: 374, column: 21, scope: !3059)
!3059 = !DILexicalBlockFile(scope: !3060, file: !888, discriminator: 1)
!3060 = distinct !DILexicalBlock(scope: !3056, file: !888, line: 374, column: 9)
!3061 = !DILocation(line: 374, column: 25, scope: !3059)
!3062 = !DILocation(line: 374, column: 23, scope: !3059)
!3063 = !DILocation(line: 374, column: 9, scope: !3059)
!3064 = !DILocation(line: 375, column: 32, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !888, line: 375, column: 17)
!3066 = distinct !DILexicalBlock(scope: !3060, file: !888, line: 374, column: 36)
!3067 = !DILocation(line: 375, column: 37, scope: !3065)
!3068 = !DILocation(line: 375, column: 17, scope: !3065)
!3069 = !DILocation(line: 375, column: 41, scope: !3065)
!3070 = !DILocation(line: 375, column: 17, scope: !3066)
!3071 = !DILocation(line: 376, column: 24, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3065, file: !888, line: 375, column: 47)
!3073 = !DILocation(line: 376, column: 29, scope: !3072)
!3074 = !DILocation(line: 376, column: 76, scope: !3072)
!3075 = !DILocation(line: 376, column: 17, scope: !3072)
!3076 = !DILocation(line: 377, column: 21, scope: !3072)
!3077 = !DILocation(line: 378, column: 17, scope: !3072)
!3078 = !DILocation(line: 380, column: 56, scope: !3066)
!3079 = !DILocation(line: 380, column: 61, scope: !3066)
!3080 = !DILocation(line: 380, column: 41, scope: !3066)
!3081 = !DILocation(line: 380, column: 36, scope: !3066)
!3082 = !DILocation(line: 380, column: 13, scope: !3066)
!3083 = !DILocation(line: 380, column: 25, scope: !3066)
!3084 = !DILocation(line: 380, column: 18, scope: !3066)
!3085 = !DILocation(line: 380, column: 39, scope: !3066)
!3086 = !DILocation(line: 381, column: 17, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3066, file: !888, line: 381, column: 17)
!3088 = !DILocation(line: 381, column: 27, scope: !3087)
!3089 = !DILocation(line: 381, column: 38, scope: !3087)
!3090 = !DILocation(line: 381, column: 64, scope: !3091)
!3091 = !DILexicalBlockFile(scope: !3087, file: !888, discriminator: 1)
!3092 = !DILocation(line: 381, column: 41, scope: !3091)
!3093 = !DILocation(line: 381, column: 53, scope: !3091)
!3094 = !DILocation(line: 381, column: 46, scope: !3091)
!3095 = !DILocation(line: 381, column: 67, scope: !3091)
!3096 = !DILocation(line: 381, column: 73, scope: !3091)
!3097 = !DILocation(line: 381, column: 99, scope: !3098)
!3098 = !DILexicalBlockFile(scope: !3087, file: !888, discriminator: 2)
!3099 = !DILocation(line: 381, column: 76, scope: !3098)
!3100 = !DILocation(line: 381, column: 88, scope: !3098)
!3101 = !DILocation(line: 381, column: 81, scope: !3098)
!3102 = !DILocation(line: 381, column: 101, scope: !3098)
!3103 = !DILocation(line: 381, column: 17, scope: !3098)
!3104 = !DILocation(line: 382, column: 24, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3087, file: !888, line: 381, column: 105)
!3106 = !DILocation(line: 382, column: 29, scope: !3105)
!3107 = !DILocation(line: 383, column: 47, scope: !3105)
!3108 = !DILocation(line: 383, column: 24, scope: !3105)
!3109 = !DILocation(line: 383, column: 36, scope: !3105)
!3110 = !DILocation(line: 383, column: 29, scope: !3105)
!3111 = !DILocation(line: 383, column: 51, scope: !3105)
!3112 = !DILocation(line: 383, column: 62, scope: !3105)
!3113 = !DILocation(line: 382, column: 17, scope: !3105)
!3114 = !DILocation(line: 384, column: 21, scope: !3105)
!3115 = !DILocation(line: 385, column: 17, scope: !3105)
!3116 = !DILocation(line: 387, column: 9, scope: !3066)
!3117 = !DILocation(line: 374, column: 32, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3060, file: !888, discriminator: 2)
!3119 = !DILocation(line: 374, column: 9, scope: !3118)
!3120 = distinct !{!3120, !3121}
!3121 = !DILocation(line: 374, column: 9, scope: !2346)
!3122 = !DILocation(line: 388, column: 5, scope: !2346)
!3123 = !DILocation(line: 389, column: 13, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !888, line: 389, column: 13)
!3125 = distinct !DILexicalBlock(scope: !2347, file: !888, line: 388, column: 12)
!3126 = !DILocation(line: 389, column: 17, scope: !3124)
!3127 = !DILocation(line: 389, column: 13, scope: !3125)
!3128 = !DILocation(line: 390, column: 17, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3124, file: !888, line: 389, column: 22)
!3130 = !DILocation(line: 391, column: 13, scope: !3129)
!3131 = !DILocation(line: 393, column: 16, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3125, file: !888, line: 393, column: 9)
!3133 = !DILocation(line: 393, column: 14, scope: !3132)
!3134 = !DILocation(line: 393, column: 21, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !3136, file: !888, discriminator: 1)
!3136 = distinct !DILexicalBlock(scope: !3132, file: !888, line: 393, column: 9)
!3137 = !DILocation(line: 393, column: 25, scope: !3135)
!3138 = !DILocation(line: 393, column: 23, scope: !3135)
!3139 = !DILocation(line: 393, column: 9, scope: !3135)
!3140 = !DILocation(line: 394, column: 47, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !888, line: 393, column: 36)
!3142 = !DILocation(line: 394, column: 41, scope: !3141)
!3143 = !DILocation(line: 394, column: 36, scope: !3141)
!3144 = !DILocation(line: 394, column: 13, scope: !3141)
!3145 = !DILocation(line: 394, column: 25, scope: !3141)
!3146 = !DILocation(line: 394, column: 18, scope: !3141)
!3147 = !DILocation(line: 394, column: 39, scope: !3141)
!3148 = !DILocation(line: 395, column: 17, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3141, file: !888, line: 395, column: 17)
!3150 = !DILocation(line: 395, column: 27, scope: !3149)
!3151 = !DILocation(line: 395, column: 38, scope: !3149)
!3152 = !DILocation(line: 395, column: 64, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3149, file: !888, discriminator: 1)
!3154 = !DILocation(line: 395, column: 41, scope: !3153)
!3155 = !DILocation(line: 395, column: 53, scope: !3153)
!3156 = !DILocation(line: 395, column: 46, scope: !3153)
!3157 = !DILocation(line: 395, column: 67, scope: !3153)
!3158 = !DILocation(line: 395, column: 17, scope: !3153)
!3159 = !DILocation(line: 396, column: 24, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3149, file: !888, line: 395, column: 74)
!3161 = !DILocation(line: 396, column: 29, scope: !3160)
!3162 = !DILocation(line: 397, column: 47, scope: !3160)
!3163 = !DILocation(line: 397, column: 24, scope: !3160)
!3164 = !DILocation(line: 397, column: 36, scope: !3160)
!3165 = !DILocation(line: 397, column: 29, scope: !3160)
!3166 = !DILocation(line: 397, column: 51, scope: !3160)
!3167 = !DILocation(line: 397, column: 62, scope: !3160)
!3168 = !DILocation(line: 396, column: 17, scope: !3160)
!3169 = !DILocation(line: 398, column: 21, scope: !3160)
!3170 = !DILocation(line: 399, column: 17, scope: !3160)
!3171 = !DILocation(line: 401, column: 9, scope: !3141)
!3172 = !DILocation(line: 393, column: 32, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3136, file: !888, discriminator: 2)
!3174 = !DILocation(line: 393, column: 9, scope: !3173)
!3175 = distinct !{!3175, !3176}
!3176 = !DILocation(line: 393, column: 9, scope: !3125)
!3177 = !DILocation(line: 404, column: 11, scope: !2276)
!3178 = !DILocation(line: 404, column: 9, scope: !2276)
!3179 = !DILocation(line: 404, column: 5, scope: !2276)
!3180 = !DILocation(line: 407, column: 5, scope: !2276)
!3181 = !DILocation(line: 408, column: 12, scope: !2276)
!3182 = !DILocation(line: 408, column: 5, scope: !2276)
!3183 = !DILocation(line: 409, column: 1, scope: !2276)
!3184 = distinct !DISubprogram(name: "tm2_decode_blocks", scope: !888, file: !888, line: 774, type: !3185, isLocal: true, isDefinition: true, scopeLine: 775, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!905, !1657, !1031}
!3187 = !DILocalVariable(name: "a", arg: 1, scope: !3188, file: !3189, line: 159, type: !905)
!3188 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !3189, file: !3189, line: 159, type: !3190, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3189 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3190 = !DISubroutineType(types: !3191)
!3191 = !{!913, !905}
!3192 = !DILocation(line: 159, column: 97, scope: !3188, inlinedAt: !3193)
!3193 = distinct !DILocation(line: 841, column: 26, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3195, file: !888, line: 838, column: 33)
!3195 = distinct !DILexicalBlock(scope: !3196, file: !888, line: 838, column: 9)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !888, line: 838, column: 9)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !888, line: 837, column: 29)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !888, line: 837, column: 5)
!3199 = distinct !DILexicalBlock(scope: !3184, file: !888, line: 837, column: 5)
!3200 = !DILocation(line: 159, column: 97, scope: !3188, inlinedAt: !3201)
!3201 = distinct !DILocation(line: 842, column: 26, scope: !3194)
!3202 = !DILocation(line: 159, column: 97, scope: !3188, inlinedAt: !3203)
!3203 = distinct !DILocation(line: 840, column: 26, scope: !3194)
!3204 = !DILocalVariable(name: "ctx", arg: 1, scope: !3184, file: !888, line: 774, type: !1657)
!3205 = !DILocation(line: 774, column: 42, scope: !3184)
!3206 = !DILocalVariable(name: "p", arg: 2, scope: !3184, file: !888, line: 774, type: !1031)
!3207 = !DILocation(line: 774, column: 56, scope: !3184)
!3208 = !DILocalVariable(name: "i", scope: !3184, file: !888, line: 776, type: !905)
!3209 = !DILocation(line: 776, column: 9, scope: !3184)
!3210 = !DILocalVariable(name: "j", scope: !3184, file: !888, line: 776, type: !905)
!3211 = !DILocation(line: 776, column: 12, scope: !3184)
!3212 = !DILocalVariable(name: "w", scope: !3184, file: !888, line: 777, type: !905)
!3213 = !DILocation(line: 777, column: 9, scope: !3184)
!3214 = !DILocation(line: 777, column: 13, scope: !3184)
!3215 = !DILocation(line: 777, column: 18, scope: !3184)
!3216 = !DILocation(line: 777, column: 25, scope: !3184)
!3217 = !DILocalVariable(name: "h", scope: !3184, file: !888, line: 777, type: !905)
!3218 = !DILocation(line: 777, column: 32, scope: !3184)
!3219 = !DILocation(line: 777, column: 36, scope: !3184)
!3220 = !DILocation(line: 777, column: 41, scope: !3184)
!3221 = !DILocation(line: 777, column: 48, scope: !3184)
!3222 = !DILocalVariable(name: "bw", scope: !3184, file: !888, line: 777, type: !905)
!3223 = !DILocation(line: 777, column: 56, scope: !3184)
!3224 = !DILocation(line: 777, column: 61, scope: !3184)
!3225 = !DILocation(line: 777, column: 63, scope: !3184)
!3226 = !DILocalVariable(name: "bh", scope: !3184, file: !888, line: 777, type: !905)
!3227 = !DILocation(line: 777, column: 69, scope: !3184)
!3228 = !DILocation(line: 777, column: 74, scope: !3184)
!3229 = !DILocation(line: 777, column: 76, scope: !3184)
!3230 = !DILocalVariable(name: "cw", scope: !3184, file: !888, line: 777, type: !905)
!3231 = !DILocation(line: 777, column: 82, scope: !3184)
!3232 = !DILocation(line: 777, column: 87, scope: !3184)
!3233 = !DILocation(line: 777, column: 89, scope: !3184)
!3234 = !DILocalVariable(name: "type", scope: !3184, file: !888, line: 778, type: !905)
!3235 = !DILocation(line: 778, column: 9, scope: !3184)
!3236 = !DILocalVariable(name: "keyframe", scope: !3184, file: !888, line: 779, type: !905)
!3237 = !DILocation(line: 779, column: 9, scope: !3184)
!3238 = !DILocalVariable(name: "Y", scope: !3184, file: !888, line: 780, type: !1303)
!3239 = !DILocation(line: 780, column: 10, scope: !3184)
!3240 = !DILocalVariable(name: "U", scope: !3184, file: !888, line: 780, type: !1303)
!3241 = !DILocation(line: 780, column: 14, scope: !3184)
!3242 = !DILocalVariable(name: "V", scope: !3184, file: !888, line: 780, type: !1303)
!3243 = !DILocation(line: 780, column: 18, scope: !3184)
!3244 = !DILocalVariable(name: "dst", scope: !3184, file: !888, line: 781, type: !1037)
!3245 = !DILocation(line: 781, column: 14, scope: !3184)
!3246 = !DILocation(line: 783, column: 12, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3184, file: !888, line: 783, column: 5)
!3248 = !DILocation(line: 783, column: 10, scope: !3247)
!3249 = !DILocation(line: 783, column: 17, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3251, file: !888, discriminator: 1)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !888, line: 783, column: 5)
!3252 = !DILocation(line: 783, column: 19, scope: !3250)
!3253 = !DILocation(line: 783, column: 5, scope: !3250)
!3254 = !DILocation(line: 784, column: 23, scope: !3251)
!3255 = !DILocation(line: 784, column: 9, scope: !3251)
!3256 = !DILocation(line: 784, column: 14, scope: !3251)
!3257 = !DILocation(line: 784, column: 26, scope: !3251)
!3258 = !DILocation(line: 783, column: 39, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3251, file: !888, discriminator: 2)
!3260 = !DILocation(line: 783, column: 5, scope: !3259)
!3261 = distinct !{!3261, !3262}
!3262 = !DILocation(line: 783, column: 5, scope: !3184)
!3263 = !DILocation(line: 786, column: 9, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3184, file: !888, line: 786, column: 9)
!3265 = !DILocation(line: 786, column: 14, scope: !3264)
!3266 = !DILocation(line: 786, column: 33, scope: !3264)
!3267 = !DILocation(line: 786, column: 36, scope: !3264)
!3268 = !DILocation(line: 786, column: 35, scope: !3264)
!3269 = !DILocation(line: 786, column: 32, scope: !3264)
!3270 = !DILocation(line: 786, column: 9, scope: !3184)
!3271 = !DILocation(line: 787, column: 16, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3264, file: !888, line: 786, column: 40)
!3273 = !DILocation(line: 787, column: 21, scope: !3272)
!3274 = !DILocation(line: 787, column: 62, scope: !3272)
!3275 = !DILocation(line: 787, column: 67, scope: !3272)
!3276 = !DILocation(line: 787, column: 86, scope: !3272)
!3277 = !DILocation(line: 787, column: 89, scope: !3272)
!3278 = !DILocation(line: 787, column: 88, scope: !3272)
!3279 = !DILocation(line: 787, column: 9, scope: !3272)
!3280 = !DILocation(line: 788, column: 9, scope: !3272)
!3281 = !DILocation(line: 791, column: 12, scope: !3184)
!3282 = !DILocation(line: 791, column: 17, scope: !3184)
!3283 = !DILocation(line: 791, column: 5, scope: !3184)
!3284 = !DILocation(line: 791, column: 30, scope: !3184)
!3285 = !DILocation(line: 791, column: 28, scope: !3184)
!3286 = !DILocation(line: 791, column: 26, scope: !3184)
!3287 = !DILocation(line: 791, column: 33, scope: !3184)
!3288 = !DILocation(line: 792, column: 12, scope: !3184)
!3289 = !DILocation(line: 792, column: 17, scope: !3184)
!3290 = !DILocation(line: 792, column: 5, scope: !3184)
!3291 = !DILocation(line: 792, column: 31, scope: !3184)
!3292 = !DILocation(line: 792, column: 29, scope: !3184)
!3293 = !DILocation(line: 792, column: 27, scope: !3184)
!3294 = !DILocation(line: 792, column: 34, scope: !3184)
!3295 = !DILocation(line: 794, column: 12, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3184, file: !888, line: 794, column: 5)
!3297 = !DILocation(line: 794, column: 10, scope: !3296)
!3298 = !DILocation(line: 794, column: 17, scope: !3299)
!3299 = !DILexicalBlockFile(scope: !3300, file: !888, discriminator: 1)
!3300 = distinct !DILexicalBlock(scope: !3296, file: !888, line: 794, column: 5)
!3301 = !DILocation(line: 794, column: 21, scope: !3299)
!3302 = !DILocation(line: 794, column: 19, scope: !3299)
!3303 = !DILocation(line: 794, column: 5, scope: !3299)
!3304 = !DILocation(line: 795, column: 16, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !888, line: 794, column: 30)
!3306 = !DILocation(line: 795, column: 21, scope: !3305)
!3307 = !DILocation(line: 795, column: 9, scope: !3305)
!3308 = !DILocation(line: 796, column: 16, scope: !3305)
!3309 = !DILocation(line: 796, column: 21, scope: !3305)
!3310 = !DILocation(line: 796, column: 9, scope: !3305)
!3311 = !DILocation(line: 797, column: 16, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3305, file: !888, line: 797, column: 9)
!3313 = !DILocation(line: 797, column: 14, scope: !3312)
!3314 = !DILocation(line: 797, column: 21, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3316, file: !888, discriminator: 1)
!3316 = distinct !DILexicalBlock(scope: !3312, file: !888, line: 797, column: 9)
!3317 = !DILocation(line: 797, column: 25, scope: !3315)
!3318 = !DILocation(line: 797, column: 23, scope: !3315)
!3319 = !DILocation(line: 797, column: 9, scope: !3315)
!3320 = !DILocation(line: 798, column: 28, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !888, line: 797, column: 34)
!3322 = !DILocation(line: 798, column: 20, scope: !3321)
!3323 = !DILocation(line: 798, column: 18, scope: !3321)
!3324 = !DILocation(line: 799, column: 20, scope: !3321)
!3325 = !DILocation(line: 799, column: 13, scope: !3321)
!3326 = !DILocation(line: 801, column: 34, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3321, file: !888, line: 799, column: 26)
!3328 = !DILocation(line: 801, column: 39, scope: !3327)
!3329 = !DILocation(line: 801, column: 42, scope: !3327)
!3330 = !DILocation(line: 801, column: 45, scope: !3327)
!3331 = !DILocation(line: 801, column: 17, scope: !3327)
!3332 = !DILocation(line: 802, column: 17, scope: !3327)
!3333 = !DILocation(line: 804, column: 35, scope: !3327)
!3334 = !DILocation(line: 804, column: 40, scope: !3327)
!3335 = !DILocation(line: 804, column: 43, scope: !3327)
!3336 = !DILocation(line: 804, column: 46, scope: !3327)
!3337 = !DILocation(line: 804, column: 17, scope: !3327)
!3338 = !DILocation(line: 805, column: 17, scope: !3327)
!3339 = !DILocation(line: 807, column: 35, scope: !3327)
!3340 = !DILocation(line: 807, column: 40, scope: !3327)
!3341 = !DILocation(line: 807, column: 43, scope: !3327)
!3342 = !DILocation(line: 807, column: 46, scope: !3327)
!3343 = !DILocation(line: 807, column: 17, scope: !3327)
!3344 = !DILocation(line: 808, column: 17, scope: !3327)
!3345 = !DILocation(line: 810, column: 36, scope: !3327)
!3346 = !DILocation(line: 810, column: 41, scope: !3327)
!3347 = !DILocation(line: 810, column: 44, scope: !3327)
!3348 = !DILocation(line: 810, column: 47, scope: !3327)
!3349 = !DILocation(line: 810, column: 17, scope: !3327)
!3350 = !DILocation(line: 811, column: 17, scope: !3327)
!3351 = !DILocation(line: 813, column: 34, scope: !3327)
!3352 = !DILocation(line: 813, column: 39, scope: !3327)
!3353 = !DILocation(line: 813, column: 42, scope: !3327)
!3354 = !DILocation(line: 813, column: 45, scope: !3327)
!3355 = !DILocation(line: 813, column: 17, scope: !3327)
!3356 = !DILocation(line: 814, column: 26, scope: !3327)
!3357 = !DILocation(line: 815, column: 17, scope: !3327)
!3358 = !DILocation(line: 817, column: 33, scope: !3327)
!3359 = !DILocation(line: 817, column: 38, scope: !3327)
!3360 = !DILocation(line: 817, column: 41, scope: !3327)
!3361 = !DILocation(line: 817, column: 44, scope: !3327)
!3362 = !DILocation(line: 817, column: 17, scope: !3327)
!3363 = !DILocation(line: 818, column: 26, scope: !3327)
!3364 = !DILocation(line: 819, column: 17, scope: !3327)
!3365 = !DILocation(line: 821, column: 34, scope: !3327)
!3366 = !DILocation(line: 821, column: 39, scope: !3327)
!3367 = !DILocation(line: 821, column: 42, scope: !3327)
!3368 = !DILocation(line: 821, column: 45, scope: !3327)
!3369 = !DILocation(line: 821, column: 17, scope: !3327)
!3370 = !DILocation(line: 822, column: 26, scope: !3327)
!3371 = !DILocation(line: 823, column: 17, scope: !3327)
!3372 = !DILocation(line: 825, column: 24, scope: !3327)
!3373 = !DILocation(line: 825, column: 29, scope: !3327)
!3374 = !DILocation(line: 825, column: 76, scope: !3327)
!3375 = !DILocation(line: 825, column: 17, scope: !3327)
!3376 = !DILocation(line: 826, column: 13, scope: !3327)
!3377 = !DILocation(line: 827, column: 17, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3321, file: !888, line: 827, column: 17)
!3379 = !DILocation(line: 827, column: 22, scope: !3378)
!3380 = !DILocation(line: 827, column: 17, scope: !3321)
!3381 = !DILocation(line: 828, column: 17, scope: !3378)
!3382 = !DILocation(line: 829, column: 9, scope: !3321)
!3383 = !DILocation(line: 797, column: 30, scope: !3384)
!3384 = !DILexicalBlockFile(scope: !3316, file: !888, discriminator: 2)
!3385 = !DILocation(line: 797, column: 9, scope: !3384)
!3386 = distinct !{!3386, !3387}
!3387 = !DILocation(line: 797, column: 9, scope: !3305)
!3388 = !DILocation(line: 830, column: 5, scope: !3305)
!3389 = !DILocation(line: 794, column: 26, scope: !3390)
!3390 = !DILexicalBlockFile(scope: !3300, file: !888, discriminator: 2)
!3391 = !DILocation(line: 794, column: 5, scope: !3390)
!3392 = distinct !{!3392, !3393}
!3393 = !DILocation(line: 794, column: 5, scope: !3184)
!3394 = !DILocation(line: 833, column: 10, scope: !3184)
!3395 = !DILocation(line: 833, column: 15, scope: !3184)
!3396 = !DILocation(line: 833, column: 19, scope: !3397)
!3397 = !DILexicalBlockFile(scope: !3184, file: !888, discriminator: 1)
!3398 = !DILocation(line: 833, column: 24, scope: !3397)
!3399 = !DILocation(line: 833, column: 10, scope: !3397)
!3400 = !DILocation(line: 833, column: 27, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !3184, file: !888, discriminator: 2)
!3402 = !DILocation(line: 833, column: 32, scope: !3401)
!3403 = !DILocation(line: 833, column: 10, scope: !3401)
!3404 = !DILocation(line: 833, column: 10, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !3184, file: !888, discriminator: 3)
!3406 = !DILocation(line: 833, column: 7, scope: !3405)
!3407 = !DILocation(line: 834, column: 10, scope: !3184)
!3408 = !DILocation(line: 834, column: 15, scope: !3184)
!3409 = !DILocation(line: 834, column: 19, scope: !3397)
!3410 = !DILocation(line: 834, column: 24, scope: !3397)
!3411 = !DILocation(line: 834, column: 10, scope: !3397)
!3412 = !DILocation(line: 834, column: 27, scope: !3401)
!3413 = !DILocation(line: 834, column: 32, scope: !3401)
!3414 = !DILocation(line: 834, column: 10, scope: !3401)
!3415 = !DILocation(line: 834, column: 10, scope: !3405)
!3416 = !DILocation(line: 834, column: 7, scope: !3405)
!3417 = !DILocation(line: 835, column: 10, scope: !3184)
!3418 = !DILocation(line: 835, column: 15, scope: !3184)
!3419 = !DILocation(line: 835, column: 19, scope: !3397)
!3420 = !DILocation(line: 835, column: 24, scope: !3397)
!3421 = !DILocation(line: 835, column: 10, scope: !3397)
!3422 = !DILocation(line: 835, column: 27, scope: !3401)
!3423 = !DILocation(line: 835, column: 32, scope: !3401)
!3424 = !DILocation(line: 835, column: 10, scope: !3401)
!3425 = !DILocation(line: 835, column: 10, scope: !3405)
!3426 = !DILocation(line: 835, column: 7, scope: !3405)
!3427 = !DILocation(line: 836, column: 11, scope: !3184)
!3428 = !DILocation(line: 836, column: 14, scope: !3184)
!3429 = !DILocation(line: 836, column: 9, scope: !3184)
!3430 = !DILocation(line: 837, column: 12, scope: !3199)
!3431 = !DILocation(line: 837, column: 10, scope: !3199)
!3432 = !DILocation(line: 837, column: 17, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3198, file: !888, discriminator: 1)
!3434 = !DILocation(line: 837, column: 21, scope: !3433)
!3435 = !DILocation(line: 837, column: 19, scope: !3433)
!3436 = !DILocation(line: 837, column: 5, scope: !3433)
!3437 = !DILocation(line: 838, column: 16, scope: !3196)
!3438 = !DILocation(line: 838, column: 14, scope: !3196)
!3439 = !DILocation(line: 838, column: 21, scope: !3440)
!3440 = !DILexicalBlockFile(scope: !3195, file: !888, discriminator: 1)
!3441 = !DILocation(line: 838, column: 25, scope: !3440)
!3442 = !DILocation(line: 838, column: 23, scope: !3440)
!3443 = !DILocation(line: 838, column: 9, scope: !3440)
!3444 = !DILocalVariable(name: "y", scope: !3194, file: !888, line: 839, type: !905)
!3445 = !DILocation(line: 839, column: 17, scope: !3194)
!3446 = !DILocation(line: 839, column: 23, scope: !3194)
!3447 = !DILocation(line: 839, column: 21, scope: !3194)
!3448 = !DILocalVariable(name: "u", scope: !3194, file: !888, line: 839, type: !905)
!3449 = !DILocation(line: 839, column: 27, scope: !3194)
!3450 = !DILocation(line: 839, column: 33, scope: !3194)
!3451 = !DILocation(line: 839, column: 35, scope: !3194)
!3452 = !DILocation(line: 839, column: 31, scope: !3194)
!3453 = !DILocalVariable(name: "v", scope: !3194, file: !888, line: 839, type: !905)
!3454 = !DILocation(line: 839, column: 42, scope: !3194)
!3455 = !DILocation(line: 839, column: 48, scope: !3194)
!3456 = !DILocation(line: 839, column: 50, scope: !3194)
!3457 = !DILocation(line: 839, column: 46, scope: !3194)
!3458 = !DILocation(line: 840, column: 42, scope: !3194)
!3459 = !DILocation(line: 840, column: 46, scope: !3194)
!3460 = !DILocation(line: 840, column: 44, scope: !3194)
!3461 = !DILocation(line: 840, column: 26, scope: !3194)
!3462 = !DILocation(line: 161, column: 9, scope: !3463, inlinedAt: !3203)
!3463 = distinct !DILexicalBlock(scope: !3188, file: !3189, line: 161, column: 9)
!3464 = !DILocation(line: 161, column: 10, scope: !3463, inlinedAt: !3203)
!3465 = !DILocation(line: 161, column: 9, scope: !3188, inlinedAt: !3203)
!3466 = !DILocation(line: 161, column: 29, scope: !3467, inlinedAt: !3203)
!3467 = !DILexicalBlockFile(scope: !3463, file: !3189, discriminator: 1)
!3468 = !DILocation(line: 161, column: 28, scope: !3467, inlinedAt: !3203)
!3469 = !DILocation(line: 161, column: 31, scope: !3467, inlinedAt: !3203)
!3470 = !DILocation(line: 161, column: 27, scope: !3467, inlinedAt: !3203)
!3471 = !DILocation(line: 161, column: 20, scope: !3467, inlinedAt: !3203)
!3472 = !DILocation(line: 162, column: 17, scope: !3463, inlinedAt: !3203)
!3473 = !DILocation(line: 162, column: 10, scope: !3463, inlinedAt: !3203)
!3474 = !DILocation(line: 163, column: 1, scope: !3188, inlinedAt: !3203)
!3475 = !DILocation(line: 840, column: 19, scope: !3194)
!3476 = !DILocation(line: 840, column: 18, scope: !3194)
!3477 = !DILocation(line: 840, column: 20, scope: !3194)
!3478 = !DILocation(line: 840, column: 13, scope: !3194)
!3479 = !DILocation(line: 840, column: 24, scope: !3194)
!3480 = !DILocation(line: 841, column: 42, scope: !3194)
!3481 = !DILocation(line: 841, column: 26, scope: !3194)
!3482 = !DILocation(line: 161, column: 9, scope: !3463, inlinedAt: !3193)
!3483 = !DILocation(line: 161, column: 10, scope: !3463, inlinedAt: !3193)
!3484 = !DILocation(line: 161, column: 9, scope: !3188, inlinedAt: !3193)
!3485 = !DILocation(line: 161, column: 29, scope: !3467, inlinedAt: !3193)
!3486 = !DILocation(line: 161, column: 28, scope: !3467, inlinedAt: !3193)
!3487 = !DILocation(line: 161, column: 31, scope: !3467, inlinedAt: !3193)
!3488 = !DILocation(line: 161, column: 27, scope: !3467, inlinedAt: !3193)
!3489 = !DILocation(line: 161, column: 20, scope: !3467, inlinedAt: !3193)
!3490 = !DILocation(line: 162, column: 17, scope: !3463, inlinedAt: !3193)
!3491 = !DILocation(line: 162, column: 10, scope: !3463, inlinedAt: !3193)
!3492 = !DILocation(line: 163, column: 1, scope: !3188, inlinedAt: !3193)
!3493 = !DILocation(line: 841, column: 19, scope: !3194)
!3494 = !DILocation(line: 841, column: 18, scope: !3194)
!3495 = !DILocation(line: 841, column: 20, scope: !3194)
!3496 = !DILocation(line: 841, column: 13, scope: !3194)
!3497 = !DILocation(line: 841, column: 24, scope: !3194)
!3498 = !DILocation(line: 842, column: 42, scope: !3194)
!3499 = !DILocation(line: 842, column: 46, scope: !3194)
!3500 = !DILocation(line: 842, column: 44, scope: !3194)
!3501 = !DILocation(line: 842, column: 26, scope: !3194)
!3502 = !DILocation(line: 161, column: 9, scope: !3463, inlinedAt: !3201)
!3503 = !DILocation(line: 161, column: 10, scope: !3463, inlinedAt: !3201)
!3504 = !DILocation(line: 161, column: 9, scope: !3188, inlinedAt: !3201)
!3505 = !DILocation(line: 161, column: 29, scope: !3467, inlinedAt: !3201)
!3506 = !DILocation(line: 161, column: 28, scope: !3467, inlinedAt: !3201)
!3507 = !DILocation(line: 161, column: 31, scope: !3467, inlinedAt: !3201)
!3508 = !DILocation(line: 161, column: 27, scope: !3467, inlinedAt: !3201)
!3509 = !DILocation(line: 161, column: 20, scope: !3467, inlinedAt: !3201)
!3510 = !DILocation(line: 162, column: 17, scope: !3463, inlinedAt: !3201)
!3511 = !DILocation(line: 162, column: 10, scope: !3463, inlinedAt: !3201)
!3512 = !DILocation(line: 163, column: 1, scope: !3188, inlinedAt: !3201)
!3513 = !DILocation(line: 842, column: 19, scope: !3194)
!3514 = !DILocation(line: 842, column: 18, scope: !3194)
!3515 = !DILocation(line: 842, column: 20, scope: !3194)
!3516 = !DILocation(line: 842, column: 13, scope: !3194)
!3517 = !DILocation(line: 842, column: 24, scope: !3194)
!3518 = !DILocation(line: 843, column: 9, scope: !3194)
!3519 = !DILocation(line: 838, column: 29, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3195, file: !888, discriminator: 2)
!3521 = !DILocation(line: 838, column: 9, scope: !3520)
!3522 = distinct !{!3522, !3523}
!3523 = !DILocation(line: 838, column: 9, scope: !3197)
!3524 = !DILocation(line: 846, column: 41, scope: !3197)
!3525 = !DILocation(line: 846, column: 33, scope: !3197)
!3526 = !DILocation(line: 846, column: 39, scope: !3197)
!3527 = !DILocation(line: 846, column: 25, scope: !3197)
!3528 = !DILocation(line: 846, column: 31, scope: !3197)
!3529 = !DILocation(line: 846, column: 17, scope: !3197)
!3530 = !DILocation(line: 846, column: 23, scope: !3197)
!3531 = !DILocation(line: 846, column: 9, scope: !3197)
!3532 = !DILocation(line: 846, column: 15, scope: !3197)
!3533 = !DILocation(line: 847, column: 51, scope: !3197)
!3534 = !DILocation(line: 847, column: 53, scope: !3197)
!3535 = !DILocation(line: 847, column: 49, scope: !3197)
!3536 = !DILocation(line: 847, column: 44, scope: !3197)
!3537 = !DILocation(line: 847, column: 42, scope: !3197)
!3538 = !DILocation(line: 847, column: 47, scope: !3197)
!3539 = !DILocation(line: 847, column: 33, scope: !3197)
!3540 = !DILocation(line: 847, column: 35, scope: !3197)
!3541 = !DILocation(line: 847, column: 31, scope: !3197)
!3542 = !DILocation(line: 847, column: 40, scope: !3197)
!3543 = !DILocation(line: 847, column: 22, scope: !3197)
!3544 = !DILocation(line: 847, column: 24, scope: !3197)
!3545 = !DILocation(line: 847, column: 20, scope: !3197)
!3546 = !DILocation(line: 847, column: 29, scope: !3197)
!3547 = !DILocation(line: 847, column: 11, scope: !3197)
!3548 = !DILocation(line: 847, column: 13, scope: !3197)
!3549 = !DILocation(line: 847, column: 9, scope: !3197)
!3550 = !DILocation(line: 847, column: 18, scope: !3197)
!3551 = !DILocation(line: 850, column: 13, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3197, file: !888, line: 850, column: 13)
!3553 = !DILocation(line: 850, column: 15, scope: !3552)
!3554 = !DILocation(line: 850, column: 13, scope: !3197)
!3555 = !DILocation(line: 851, column: 20, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !888, line: 850, column: 21)
!3557 = !DILocation(line: 851, column: 22, scope: !3556)
!3558 = !DILocation(line: 851, column: 32, scope: !3556)
!3559 = !DILocation(line: 851, column: 37, scope: !3556)
!3560 = !DILocation(line: 851, column: 30, scope: !3556)
!3561 = !DILocation(line: 851, column: 26, scope: !3556)
!3562 = !DILocation(line: 851, column: 13, scope: !3556)
!3563 = !DILocation(line: 851, column: 47, scope: !3556)
!3564 = !DILocation(line: 851, column: 49, scope: !3556)
!3565 = !DILocation(line: 851, column: 54, scope: !3556)
!3566 = !DILocation(line: 851, column: 59, scope: !3556)
!3567 = !DILocation(line: 852, column: 20, scope: !3556)
!3568 = !DILocation(line: 852, column: 22, scope: !3556)
!3569 = !DILocation(line: 852, column: 32, scope: !3556)
!3570 = !DILocation(line: 852, column: 37, scope: !3556)
!3571 = !DILocation(line: 852, column: 30, scope: !3556)
!3572 = !DILocation(line: 852, column: 26, scope: !3556)
!3573 = !DILocation(line: 852, column: 13, scope: !3556)
!3574 = !DILocation(line: 852, column: 47, scope: !3556)
!3575 = !DILocation(line: 852, column: 49, scope: !3556)
!3576 = !DILocation(line: 852, column: 54, scope: !3556)
!3577 = !DILocation(line: 852, column: 59, scope: !3556)
!3578 = !DILocation(line: 853, column: 20, scope: !3556)
!3579 = !DILocation(line: 853, column: 22, scope: !3556)
!3580 = !DILocation(line: 853, column: 32, scope: !3556)
!3581 = !DILocation(line: 853, column: 37, scope: !3556)
!3582 = !DILocation(line: 853, column: 30, scope: !3556)
!3583 = !DILocation(line: 853, column: 26, scope: !3556)
!3584 = !DILocation(line: 853, column: 13, scope: !3556)
!3585 = !DILocation(line: 853, column: 47, scope: !3556)
!3586 = !DILocation(line: 853, column: 49, scope: !3556)
!3587 = !DILocation(line: 853, column: 54, scope: !3556)
!3588 = !DILocation(line: 853, column: 59, scope: !3556)
!3589 = !DILocation(line: 854, column: 20, scope: !3556)
!3590 = !DILocation(line: 854, column: 22, scope: !3556)
!3591 = !DILocation(line: 854, column: 32, scope: !3556)
!3592 = !DILocation(line: 854, column: 37, scope: !3556)
!3593 = !DILocation(line: 854, column: 30, scope: !3556)
!3594 = !DILocation(line: 854, column: 26, scope: !3556)
!3595 = !DILocation(line: 854, column: 13, scope: !3556)
!3596 = !DILocation(line: 854, column: 47, scope: !3556)
!3597 = !DILocation(line: 854, column: 49, scope: !3556)
!3598 = !DILocation(line: 854, column: 54, scope: !3556)
!3599 = !DILocation(line: 854, column: 59, scope: !3556)
!3600 = !DILocation(line: 855, column: 9, scope: !3556)
!3601 = !DILocation(line: 855, column: 20, scope: !3602)
!3602 = !DILexicalBlockFile(scope: !3603, file: !888, discriminator: 1)
!3603 = distinct !DILexicalBlock(scope: !3552, file: !888, line: 855, column: 20)
!3604 = !DILocation(line: 855, column: 25, scope: !3602)
!3605 = !DILocation(line: 855, column: 27, scope: !3602)
!3606 = !DILocation(line: 855, column: 22, scope: !3602)
!3607 = !DILocation(line: 856, column: 20, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3603, file: !888, line: 855, column: 32)
!3609 = !DILocation(line: 856, column: 22, scope: !3608)
!3610 = !DILocation(line: 856, column: 32, scope: !3608)
!3611 = !DILocation(line: 856, column: 37, scope: !3608)
!3612 = !DILocation(line: 856, column: 30, scope: !3608)
!3613 = !DILocation(line: 856, column: 26, scope: !3608)
!3614 = !DILocation(line: 856, column: 13, scope: !3608)
!3615 = !DILocation(line: 856, column: 47, scope: !3608)
!3616 = !DILocation(line: 856, column: 49, scope: !3608)
!3617 = !DILocation(line: 856, column: 54, scope: !3608)
!3618 = !DILocation(line: 856, column: 59, scope: !3608)
!3619 = !DILocation(line: 857, column: 20, scope: !3608)
!3620 = !DILocation(line: 857, column: 22, scope: !3608)
!3621 = !DILocation(line: 857, column: 32, scope: !3608)
!3622 = !DILocation(line: 857, column: 37, scope: !3608)
!3623 = !DILocation(line: 857, column: 30, scope: !3608)
!3624 = !DILocation(line: 857, column: 26, scope: !3608)
!3625 = !DILocation(line: 857, column: 13, scope: !3608)
!3626 = !DILocation(line: 857, column: 47, scope: !3608)
!3627 = !DILocation(line: 857, column: 49, scope: !3608)
!3628 = !DILocation(line: 857, column: 54, scope: !3608)
!3629 = !DILocation(line: 857, column: 59, scope: !3608)
!3630 = !DILocation(line: 858, column: 20, scope: !3608)
!3631 = !DILocation(line: 858, column: 22, scope: !3608)
!3632 = !DILocation(line: 858, column: 32, scope: !3608)
!3633 = !DILocation(line: 858, column: 37, scope: !3608)
!3634 = !DILocation(line: 858, column: 30, scope: !3608)
!3635 = !DILocation(line: 858, column: 26, scope: !3608)
!3636 = !DILocation(line: 858, column: 13, scope: !3608)
!3637 = !DILocation(line: 858, column: 47, scope: !3608)
!3638 = !DILocation(line: 858, column: 49, scope: !3608)
!3639 = !DILocation(line: 858, column: 54, scope: !3608)
!3640 = !DILocation(line: 858, column: 59, scope: !3608)
!3641 = !DILocation(line: 859, column: 20, scope: !3608)
!3642 = !DILocation(line: 859, column: 22, scope: !3608)
!3643 = !DILocation(line: 859, column: 32, scope: !3608)
!3644 = !DILocation(line: 859, column: 37, scope: !3608)
!3645 = !DILocation(line: 859, column: 30, scope: !3608)
!3646 = !DILocation(line: 859, column: 26, scope: !3608)
!3647 = !DILocation(line: 859, column: 13, scope: !3608)
!3648 = !DILocation(line: 859, column: 47, scope: !3608)
!3649 = !DILocation(line: 859, column: 49, scope: !3608)
!3650 = !DILocation(line: 859, column: 54, scope: !3608)
!3651 = !DILocation(line: 859, column: 59, scope: !3608)
!3652 = !DILocation(line: 860, column: 9, scope: !3608)
!3653 = !DILocation(line: 862, column: 14, scope: !3197)
!3654 = !DILocation(line: 862, column: 19, scope: !3197)
!3655 = !DILocation(line: 862, column: 11, scope: !3197)
!3656 = !DILocation(line: 863, column: 13, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3197, file: !888, line: 863, column: 13)
!3658 = !DILocation(line: 863, column: 15, scope: !3657)
!3659 = !DILocation(line: 863, column: 13, scope: !3197)
!3660 = !DILocation(line: 865, column: 29, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !888, line: 863, column: 20)
!3662 = !DILocation(line: 865, column: 21, scope: !3661)
!3663 = !DILocation(line: 865, column: 27, scope: !3661)
!3664 = !DILocation(line: 865, column: 13, scope: !3661)
!3665 = !DILocation(line: 865, column: 19, scope: !3661)
!3666 = !DILocation(line: 866, column: 29, scope: !3661)
!3667 = !DILocation(line: 866, column: 21, scope: !3661)
!3668 = !DILocation(line: 866, column: 27, scope: !3661)
!3669 = !DILocation(line: 866, column: 13, scope: !3661)
!3670 = !DILocation(line: 866, column: 19, scope: !3661)
!3671 = !DILocation(line: 867, column: 35, scope: !3661)
!3672 = !DILocation(line: 867, column: 38, scope: !3661)
!3673 = !DILocation(line: 867, column: 33, scope: !3661)
!3674 = !DILocation(line: 867, column: 27, scope: !3661)
!3675 = !DILocation(line: 867, column: 25, scope: !3661)
!3676 = !DILocation(line: 867, column: 31, scope: !3661)
!3677 = !DILocation(line: 867, column: 15, scope: !3661)
!3678 = !DILocation(line: 867, column: 18, scope: !3661)
!3679 = !DILocation(line: 867, column: 13, scope: !3661)
!3680 = !DILocation(line: 867, column: 23, scope: !3661)
!3681 = !DILocation(line: 868, column: 35, scope: !3661)
!3682 = !DILocation(line: 868, column: 38, scope: !3661)
!3683 = !DILocation(line: 868, column: 33, scope: !3661)
!3684 = !DILocation(line: 868, column: 27, scope: !3661)
!3685 = !DILocation(line: 868, column: 25, scope: !3661)
!3686 = !DILocation(line: 868, column: 31, scope: !3661)
!3687 = !DILocation(line: 868, column: 15, scope: !3661)
!3688 = !DILocation(line: 868, column: 18, scope: !3661)
!3689 = !DILocation(line: 868, column: 13, scope: !3661)
!3690 = !DILocation(line: 868, column: 23, scope: !3661)
!3691 = !DILocation(line: 871, column: 17, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3661, file: !888, line: 871, column: 17)
!3693 = !DILocation(line: 871, column: 19, scope: !3692)
!3694 = !DILocation(line: 871, column: 17, scope: !3661)
!3695 = !DILocation(line: 872, column: 24, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3692, file: !888, line: 871, column: 25)
!3697 = !DILocation(line: 872, column: 26, scope: !3696)
!3698 = !DILocation(line: 872, column: 36, scope: !3696)
!3699 = !DILocation(line: 872, column: 41, scope: !3696)
!3700 = !DILocation(line: 872, column: 34, scope: !3696)
!3701 = !DILocation(line: 872, column: 30, scope: !3696)
!3702 = !DILocation(line: 872, column: 17, scope: !3696)
!3703 = !DILocation(line: 872, column: 52, scope: !3696)
!3704 = !DILocation(line: 872, column: 54, scope: !3696)
!3705 = !DILocation(line: 872, column: 59, scope: !3696)
!3706 = !DILocation(line: 872, column: 64, scope: !3696)
!3707 = !DILocation(line: 873, column: 24, scope: !3696)
!3708 = !DILocation(line: 873, column: 26, scope: !3696)
!3709 = !DILocation(line: 873, column: 36, scope: !3696)
!3710 = !DILocation(line: 873, column: 41, scope: !3696)
!3711 = !DILocation(line: 873, column: 34, scope: !3696)
!3712 = !DILocation(line: 873, column: 30, scope: !3696)
!3713 = !DILocation(line: 873, column: 17, scope: !3696)
!3714 = !DILocation(line: 873, column: 52, scope: !3696)
!3715 = !DILocation(line: 873, column: 54, scope: !3696)
!3716 = !DILocation(line: 873, column: 59, scope: !3696)
!3717 = !DILocation(line: 873, column: 64, scope: !3696)
!3718 = !DILocation(line: 874, column: 24, scope: !3696)
!3719 = !DILocation(line: 874, column: 26, scope: !3696)
!3720 = !DILocation(line: 874, column: 36, scope: !3696)
!3721 = !DILocation(line: 874, column: 41, scope: !3696)
!3722 = !DILocation(line: 874, column: 34, scope: !3696)
!3723 = !DILocation(line: 874, column: 30, scope: !3696)
!3724 = !DILocation(line: 874, column: 17, scope: !3696)
!3725 = !DILocation(line: 874, column: 52, scope: !3696)
!3726 = !DILocation(line: 874, column: 54, scope: !3696)
!3727 = !DILocation(line: 874, column: 59, scope: !3696)
!3728 = !DILocation(line: 874, column: 64, scope: !3696)
!3729 = !DILocation(line: 875, column: 24, scope: !3696)
!3730 = !DILocation(line: 875, column: 26, scope: !3696)
!3731 = !DILocation(line: 875, column: 36, scope: !3696)
!3732 = !DILocation(line: 875, column: 41, scope: !3696)
!3733 = !DILocation(line: 875, column: 34, scope: !3696)
!3734 = !DILocation(line: 875, column: 30, scope: !3696)
!3735 = !DILocation(line: 875, column: 17, scope: !3696)
!3736 = !DILocation(line: 875, column: 52, scope: !3696)
!3737 = !DILocation(line: 875, column: 54, scope: !3696)
!3738 = !DILocation(line: 875, column: 59, scope: !3696)
!3739 = !DILocation(line: 875, column: 64, scope: !3696)
!3740 = !DILocation(line: 876, column: 13, scope: !3696)
!3741 = !DILocation(line: 876, column: 24, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3743, file: !888, discriminator: 1)
!3743 = distinct !DILexicalBlock(scope: !3692, file: !888, line: 876, column: 24)
!3744 = !DILocation(line: 876, column: 29, scope: !3742)
!3745 = !DILocation(line: 876, column: 31, scope: !3742)
!3746 = !DILocation(line: 876, column: 26, scope: !3742)
!3747 = !DILocation(line: 877, column: 24, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3743, file: !888, line: 876, column: 36)
!3749 = !DILocation(line: 877, column: 26, scope: !3748)
!3750 = !DILocation(line: 877, column: 36, scope: !3748)
!3751 = !DILocation(line: 877, column: 41, scope: !3748)
!3752 = !DILocation(line: 877, column: 34, scope: !3748)
!3753 = !DILocation(line: 877, column: 30, scope: !3748)
!3754 = !DILocation(line: 877, column: 17, scope: !3748)
!3755 = !DILocation(line: 877, column: 52, scope: !3748)
!3756 = !DILocation(line: 877, column: 54, scope: !3748)
!3757 = !DILocation(line: 877, column: 59, scope: !3748)
!3758 = !DILocation(line: 877, column: 64, scope: !3748)
!3759 = !DILocation(line: 878, column: 24, scope: !3748)
!3760 = !DILocation(line: 878, column: 26, scope: !3748)
!3761 = !DILocation(line: 878, column: 36, scope: !3748)
!3762 = !DILocation(line: 878, column: 41, scope: !3748)
!3763 = !DILocation(line: 878, column: 34, scope: !3748)
!3764 = !DILocation(line: 878, column: 30, scope: !3748)
!3765 = !DILocation(line: 878, column: 17, scope: !3748)
!3766 = !DILocation(line: 878, column: 52, scope: !3748)
!3767 = !DILocation(line: 878, column: 54, scope: !3748)
!3768 = !DILocation(line: 878, column: 59, scope: !3748)
!3769 = !DILocation(line: 878, column: 64, scope: !3748)
!3770 = !DILocation(line: 879, column: 24, scope: !3748)
!3771 = !DILocation(line: 879, column: 26, scope: !3748)
!3772 = !DILocation(line: 879, column: 36, scope: !3748)
!3773 = !DILocation(line: 879, column: 41, scope: !3748)
!3774 = !DILocation(line: 879, column: 34, scope: !3748)
!3775 = !DILocation(line: 879, column: 30, scope: !3748)
!3776 = !DILocation(line: 879, column: 17, scope: !3748)
!3777 = !DILocation(line: 879, column: 52, scope: !3748)
!3778 = !DILocation(line: 879, column: 54, scope: !3748)
!3779 = !DILocation(line: 879, column: 59, scope: !3748)
!3780 = !DILocation(line: 879, column: 64, scope: !3748)
!3781 = !DILocation(line: 880, column: 24, scope: !3748)
!3782 = !DILocation(line: 880, column: 26, scope: !3748)
!3783 = !DILocation(line: 880, column: 36, scope: !3748)
!3784 = !DILocation(line: 880, column: 41, scope: !3748)
!3785 = !DILocation(line: 880, column: 34, scope: !3748)
!3786 = !DILocation(line: 880, column: 30, scope: !3748)
!3787 = !DILocation(line: 880, column: 17, scope: !3748)
!3788 = !DILocation(line: 880, column: 52, scope: !3748)
!3789 = !DILocation(line: 880, column: 54, scope: !3748)
!3790 = !DILocation(line: 880, column: 59, scope: !3748)
!3791 = !DILocation(line: 880, column: 64, scope: !3748)
!3792 = !DILocation(line: 881, column: 13, scope: !3748)
!3793 = !DILocation(line: 883, column: 18, scope: !3661)
!3794 = !DILocation(line: 883, column: 23, scope: !3661)
!3795 = !DILocation(line: 883, column: 15, scope: !3661)
!3796 = !DILocation(line: 884, column: 18, scope: !3661)
!3797 = !DILocation(line: 884, column: 23, scope: !3661)
!3798 = !DILocation(line: 884, column: 15, scope: !3661)
!3799 = !DILocation(line: 885, column: 9, scope: !3661)
!3800 = !DILocation(line: 886, column: 16, scope: !3197)
!3801 = !DILocation(line: 886, column: 19, scope: !3197)
!3802 = !DILocation(line: 886, column: 13, scope: !3197)
!3803 = !DILocation(line: 887, column: 5, scope: !3197)
!3804 = !DILocation(line: 837, column: 25, scope: !3805)
!3805 = !DILexicalBlockFile(scope: !3198, file: !888, discriminator: 2)
!3806 = !DILocation(line: 837, column: 5, scope: !3805)
!3807 = distinct !{!3807, !3808}
!3808 = !DILocation(line: 837, column: 5, scope: !3184)
!3809 = !DILocation(line: 889, column: 12, scope: !3184)
!3810 = !DILocation(line: 889, column: 5, scope: !3184)
!3811 = !DILocation(line: 890, column: 1, scope: !3184)
!3812 = distinct !DISubprogram(name: "init_get_bits", scope: !1665, file: !1665, line: 615, type: !3813, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!905, !3815, !1454, !905}
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64, align: 64)
!3816 = !DILocalVariable(name: "s", arg: 1, scope: !3812, file: !1665, line: 615, type: !3815)
!3817 = !DILocation(line: 615, column: 48, scope: !3812)
!3818 = !DILocalVariable(name: "buffer", arg: 2, scope: !3812, file: !1665, line: 615, type: !1454)
!3819 = !DILocation(line: 615, column: 66, scope: !3812)
!3820 = !DILocalVariable(name: "bit_size", arg: 3, scope: !3812, file: !1665, line: 616, type: !905)
!3821 = !DILocation(line: 616, column: 37, scope: !3812)
!3822 = !DILocalVariable(name: "buffer_size", scope: !3812, file: !1665, line: 618, type: !905)
!3823 = !DILocation(line: 618, column: 9, scope: !3812)
!3824 = !DILocalVariable(name: "ret", scope: !3812, file: !1665, line: 619, type: !905)
!3825 = !DILocation(line: 619, column: 9, scope: !3812)
!3826 = !DILocation(line: 621, column: 9, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3812, file: !1665, line: 621, column: 9)
!3828 = !DILocation(line: 621, column: 18, scope: !3827)
!3829 = !DILocation(line: 621, column: 64, scope: !3827)
!3830 = !DILocation(line: 621, column: 67, scope: !3831)
!3831 = !DILexicalBlockFile(scope: !3827, file: !1665, discriminator: 1)
!3832 = !DILocation(line: 621, column: 76, scope: !3831)
!3833 = !DILocation(line: 621, column: 80, scope: !3831)
!3834 = !DILocation(line: 621, column: 84, scope: !3835)
!3835 = !DILexicalBlockFile(scope: !3827, file: !1665, discriminator: 2)
!3836 = !DILocation(line: 621, column: 9, scope: !3835)
!3837 = !DILocation(line: 622, column: 18, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3827, file: !1665, line: 621, column: 92)
!3839 = !DILocation(line: 623, column: 16, scope: !3838)
!3840 = !DILocation(line: 624, column: 13, scope: !3838)
!3841 = !DILocation(line: 625, column: 5, scope: !3838)
!3842 = !DILocation(line: 627, column: 20, scope: !3812)
!3843 = !DILocation(line: 627, column: 29, scope: !3812)
!3844 = !DILocation(line: 627, column: 34, scope: !3812)
!3845 = !DILocation(line: 627, column: 17, scope: !3812)
!3846 = !DILocation(line: 629, column: 17, scope: !3812)
!3847 = !DILocation(line: 629, column: 5, scope: !3812)
!3848 = !DILocation(line: 629, column: 8, scope: !3812)
!3849 = !DILocation(line: 629, column: 15, scope: !3812)
!3850 = !DILocation(line: 630, column: 23, scope: !3812)
!3851 = !DILocation(line: 630, column: 5, scope: !3812)
!3852 = !DILocation(line: 630, column: 8, scope: !3812)
!3853 = !DILocation(line: 630, column: 21, scope: !3812)
!3854 = !DILocation(line: 631, column: 29, scope: !3812)
!3855 = !DILocation(line: 631, column: 38, scope: !3812)
!3856 = !DILocation(line: 631, column: 5, scope: !3812)
!3857 = !DILocation(line: 631, column: 8, scope: !3812)
!3858 = !DILocation(line: 631, column: 27, scope: !3812)
!3859 = !DILocation(line: 632, column: 21, scope: !3812)
!3860 = !DILocation(line: 632, column: 30, scope: !3812)
!3861 = !DILocation(line: 632, column: 28, scope: !3812)
!3862 = !DILocation(line: 632, column: 5, scope: !3812)
!3863 = !DILocation(line: 632, column: 8, scope: !3812)
!3864 = !DILocation(line: 632, column: 19, scope: !3812)
!3865 = !DILocation(line: 633, column: 5, scope: !3812)
!3866 = !DILocation(line: 633, column: 8, scope: !3812)
!3867 = !DILocation(line: 633, column: 14, scope: !3812)
!3868 = !DILocation(line: 639, column: 12, scope: !3812)
!3869 = !DILocation(line: 639, column: 5, scope: !3812)
!3870 = distinct !DISubprogram(name: "tm2_read_deltas", scope: !888, file: !888, line: 268, type: !3871, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!905, !1657, !905}
!3873 = !DILocalVariable(name: "ctx", arg: 1, scope: !3870, file: !888, line: 268, type: !1657)
!3874 = !DILocation(line: 268, column: 40, scope: !3870)
!3875 = !DILocalVariable(name: "stream_id", arg: 2, scope: !3870, file: !888, line: 268, type: !905)
!3876 = !DILocation(line: 268, column: 49, scope: !3870)
!3877 = !DILocalVariable(name: "d", scope: !3870, file: !888, line: 270, type: !905)
!3878 = !DILocation(line: 270, column: 9, scope: !3870)
!3879 = !DILocalVariable(name: "mb", scope: !3870, file: !888, line: 270, type: !905)
!3880 = !DILocation(line: 270, column: 12, scope: !3870)
!3881 = !DILocalVariable(name: "i", scope: !3870, file: !888, line: 271, type: !905)
!3882 = !DILocation(line: 271, column: 9, scope: !3870)
!3883 = !DILocalVariable(name: "v", scope: !3870, file: !888, line: 271, type: !905)
!3884 = !DILocation(line: 271, column: 12, scope: !3870)
!3885 = !DILocation(line: 273, column: 19, scope: !3870)
!3886 = !DILocation(line: 273, column: 24, scope: !3870)
!3887 = !DILocation(line: 273, column: 9, scope: !3870)
!3888 = !DILocation(line: 273, column: 7, scope: !3870)
!3889 = !DILocation(line: 274, column: 20, scope: !3870)
!3890 = !DILocation(line: 274, column: 25, scope: !3870)
!3891 = !DILocation(line: 274, column: 10, scope: !3870)
!3892 = !DILocation(line: 274, column: 8, scope: !3870)
!3893 = !DILocation(line: 277, column: 10, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3870, file: !888, line: 277, column: 9)
!3895 = !DILocation(line: 277, column: 12, scope: !3894)
!3896 = !DILocation(line: 277, column: 17, scope: !3894)
!3897 = !DILocation(line: 277, column: 21, scope: !3898)
!3898 = !DILexicalBlockFile(scope: !3894, file: !888, discriminator: 1)
!3899 = !DILocation(line: 277, column: 23, scope: !3898)
!3900 = !DILocation(line: 277, column: 29, scope: !3898)
!3901 = !DILocation(line: 277, column: 33, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !3894, file: !888, discriminator: 2)
!3903 = !DILocation(line: 277, column: 36, scope: !3902)
!3904 = !DILocation(line: 277, column: 9, scope: !3902)
!3905 = !DILocation(line: 278, column: 16, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3894, file: !888, line: 277, column: 42)
!3907 = !DILocation(line: 278, column: 21, scope: !3906)
!3908 = !DILocation(line: 278, column: 80, scope: !3906)
!3909 = !DILocation(line: 278, column: 83, scope: !3906)
!3910 = !DILocation(line: 278, column: 9, scope: !3906)
!3911 = !DILocation(line: 279, column: 9, scope: !3906)
!3912 = !DILocation(line: 282, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3870, file: !888, line: 282, column: 5)
!3914 = !DILocation(line: 282, column: 10, scope: !3913)
!3915 = !DILocation(line: 282, column: 17, scope: !3916)
!3916 = !DILexicalBlockFile(scope: !3917, file: !888, discriminator: 1)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !888, line: 282, column: 5)
!3918 = !DILocation(line: 282, column: 21, scope: !3916)
!3919 = !DILocation(line: 282, column: 19, scope: !3916)
!3920 = !DILocation(line: 282, column: 5, scope: !3916)
!3921 = !DILocation(line: 283, column: 28, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3917, file: !888, line: 282, column: 29)
!3923 = !DILocation(line: 283, column: 33, scope: !3922)
!3924 = !DILocation(line: 283, column: 37, scope: !3922)
!3925 = !DILocation(line: 283, column: 13, scope: !3922)
!3926 = !DILocation(line: 283, column: 11, scope: !3922)
!3927 = !DILocation(line: 284, column: 13, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3922, file: !888, line: 284, column: 13)
!3929 = !DILocation(line: 284, column: 24, scope: !3928)
!3930 = !DILocation(line: 284, column: 27, scope: !3928)
!3931 = !DILocation(line: 284, column: 20, scope: !3928)
!3932 = !DILocation(line: 284, column: 15, scope: !3928)
!3933 = !DILocation(line: 284, column: 13, scope: !3922)
!3934 = !DILocation(line: 285, column: 41, scope: !3928)
!3935 = !DILocation(line: 285, column: 52, scope: !3928)
!3936 = !DILocation(line: 285, column: 49, scope: !3928)
!3937 = !DILocation(line: 285, column: 43, scope: !3928)
!3938 = !DILocation(line: 285, column: 36, scope: !3928)
!3939 = !DILocation(line: 285, column: 13, scope: !3928)
!3940 = !DILocation(line: 285, column: 25, scope: !3928)
!3941 = !DILocation(line: 285, column: 18, scope: !3928)
!3942 = !DILocation(line: 285, column: 39, scope: !3928)
!3943 = !DILocation(line: 287, column: 41, scope: !3928)
!3944 = !DILocation(line: 287, column: 36, scope: !3928)
!3945 = !DILocation(line: 287, column: 13, scope: !3928)
!3946 = !DILocation(line: 287, column: 25, scope: !3928)
!3947 = !DILocation(line: 287, column: 18, scope: !3928)
!3948 = !DILocation(line: 287, column: 39, scope: !3928)
!3949 = !DILocation(line: 288, column: 5, scope: !3922)
!3950 = !DILocation(line: 282, column: 25, scope: !3951)
!3951 = !DILexicalBlockFile(scope: !3917, file: !888, discriminator: 2)
!3952 = !DILocation(line: 282, column: 5, scope: !3951)
!3953 = distinct !{!3953, !3954}
!3954 = !DILocation(line: 282, column: 5, scope: !3870)
!3955 = !DILocation(line: 289, column: 5, scope: !3870)
!3956 = !DILocation(line: 289, column: 12, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3958, file: !888, discriminator: 1)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !888, line: 289, column: 5)
!3959 = distinct !DILexicalBlock(scope: !3870, file: !888, line: 289, column: 5)
!3960 = !DILocation(line: 289, column: 14, scope: !3957)
!3961 = !DILocation(line: 289, column: 5, scope: !3957)
!3962 = !DILocation(line: 290, column: 32, scope: !3958)
!3963 = !DILocation(line: 290, column: 9, scope: !3958)
!3964 = !DILocation(line: 290, column: 21, scope: !3958)
!3965 = !DILocation(line: 290, column: 14, scope: !3958)
!3966 = !DILocation(line: 290, column: 35, scope: !3958)
!3967 = !DILocation(line: 289, column: 21, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !3958, file: !888, discriminator: 2)
!3969 = !DILocation(line: 289, column: 5, scope: !3968)
!3970 = distinct !{!3970, !3955}
!3971 = !DILocation(line: 292, column: 5, scope: !3870)
!3972 = !DILocation(line: 293, column: 1, scope: !3870)
!3973 = distinct !DISubprogram(name: "get_bits_count", scope: !1665, file: !1665, line: 219, type: !3974, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!905, !3976}
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64, align: 64)
!3977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!3978 = !DILocalVariable(name: "s", arg: 1, scope: !3973, file: !1665, line: 219, type: !3976)
!3979 = !DILocation(line: 219, column: 55, scope: !3973)
!3980 = !DILocation(line: 224, column: 12, scope: !3973)
!3981 = !DILocation(line: 224, column: 15, scope: !3973)
!3982 = !DILocation(line: 224, column: 5, scope: !3973)
!3983 = distinct !DISubprogram(name: "tm2_build_huff_table", scope: !888, file: !888, line: 150, type: !3984, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!905, !1657, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64, align: 64)
!3987 = !DILocalVariable(name: "ctx", arg: 1, scope: !3983, file: !888, line: 150, type: !1657)
!3988 = !DILocation(line: 150, column: 45, scope: !3983)
!3989 = !DILocalVariable(name: "code", arg: 2, scope: !3983, file: !888, line: 150, type: !3986)
!3990 = !DILocation(line: 150, column: 60, scope: !3983)
!3991 = !DILocalVariable(name: "huff", scope: !3983, file: !888, line: 152, type: !3992)
!3992 = !DIDerivedType(tag: DW_TAG_typedef, name: "TM2Huff", file: !888, line: 113, baseType: !3993)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TM2Huff", file: !888, line: 103, size: 384, align: 64, elements: !3994)
!3994 = !{!3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "val_bits", scope: !3993, file: !888, line: 104, baseType: !905, size: 32, align: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "max_bits", scope: !3993, file: !888, line: 105, baseType: !905, size: 32, align: 32, offset: 32)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "min_bits", scope: !3993, file: !888, line: 106, baseType: !905, size: 32, align: 32, offset: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3993, file: !888, line: 107, baseType: !905, size: 32, align: 32, offset: 96)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3993, file: !888, line: 108, baseType: !905, size: 32, align: 32, offset: 128)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "max_num", scope: !3993, file: !888, line: 109, baseType: !905, size: 32, align: 32, offset: 160)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "nums", scope: !3993, file: !888, line: 110, baseType: !1303, size: 64, align: 64, offset: 192)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3993, file: !888, line: 111, baseType: !899, size: 64, align: 64, offset: 256)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !3993, file: !888, line: 112, baseType: !1303, size: 64, align: 64, offset: 320)
!4004 = !DILocation(line: 152, column: 13, scope: !3983)
!4005 = !DILocalVariable(name: "res", scope: !3983, file: !888, line: 153, type: !905)
!4006 = !DILocation(line: 153, column: 9, scope: !3983)
!4007 = !DILocation(line: 155, column: 31, scope: !3983)
!4008 = !DILocation(line: 155, column: 36, scope: !3983)
!4009 = !DILocation(line: 155, column: 21, scope: !3983)
!4010 = !DILocation(line: 155, column: 10, scope: !3983)
!4011 = !DILocation(line: 155, column: 19, scope: !3983)
!4012 = !DILocation(line: 156, column: 31, scope: !3983)
!4013 = !DILocation(line: 156, column: 36, scope: !3983)
!4014 = !DILocation(line: 156, column: 21, scope: !3983)
!4015 = !DILocation(line: 156, column: 10, scope: !3983)
!4016 = !DILocation(line: 156, column: 19, scope: !3983)
!4017 = !DILocation(line: 157, column: 31, scope: !3983)
!4018 = !DILocation(line: 157, column: 36, scope: !3983)
!4019 = !DILocation(line: 157, column: 21, scope: !3983)
!4020 = !DILocation(line: 157, column: 10, scope: !3983)
!4021 = !DILocation(line: 157, column: 19, scope: !3983)
!4022 = !DILocation(line: 158, column: 33, scope: !3983)
!4023 = !DILocation(line: 158, column: 38, scope: !3983)
!4024 = !DILocation(line: 158, column: 18, scope: !3983)
!4025 = !DILocation(line: 158, column: 10, scope: !3983)
!4026 = !DILocation(line: 158, column: 16, scope: !3983)
!4027 = !DILocation(line: 159, column: 10, scope: !3983)
!4028 = !DILocation(line: 159, column: 14, scope: !3983)
!4029 = !DILocation(line: 162, column: 15, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 162, column: 9)
!4031 = !DILocation(line: 162, column: 24, scope: !4030)
!4032 = !DILocation(line: 162, column: 29, scope: !4030)
!4033 = !DILocation(line: 162, column: 38, scope: !4034)
!4034 = !DILexicalBlockFile(scope: !4030, file: !888, discriminator: 1)
!4035 = !DILocation(line: 162, column: 47, scope: !4034)
!4036 = !DILocation(line: 162, column: 53, scope: !4034)
!4037 = !DILocation(line: 163, column: 15, scope: !4030)
!4038 = !DILocation(line: 163, column: 24, scope: !4030)
!4039 = !DILocation(line: 163, column: 29, scope: !4030)
!4040 = !DILocation(line: 163, column: 38, scope: !4034)
!4041 = !DILocation(line: 163, column: 47, scope: !4034)
!4042 = !DILocation(line: 162, column: 9, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !3983, file: !888, discriminator: 2)
!4044 = !DILocation(line: 164, column: 16, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4030, file: !888, line: 163, column: 54)
!4046 = !DILocation(line: 164, column: 21, scope: !4045)
!4047 = !DILocation(line: 165, column: 58, scope: !4045)
!4048 = !DILocation(line: 165, column: 73, scope: !4045)
!4049 = !DILocation(line: 164, column: 9, scope: !4045)
!4050 = !DILocation(line: 166, column: 9, scope: !4045)
!4051 = !DILocation(line: 168, column: 15, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 168, column: 9)
!4053 = !DILocation(line: 168, column: 21, scope: !4052)
!4054 = !DILocation(line: 168, column: 27, scope: !4052)
!4055 = !DILocation(line: 168, column: 36, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !4052, file: !888, discriminator: 1)
!4057 = !DILocation(line: 168, column: 42, scope: !4056)
!4058 = !DILocation(line: 168, column: 9, scope: !4056)
!4059 = !DILocation(line: 169, column: 16, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4052, file: !888, line: 168, column: 54)
!4061 = !DILocation(line: 169, column: 21, scope: !4060)
!4062 = !DILocation(line: 170, column: 36, scope: !4060)
!4063 = !DILocation(line: 169, column: 9, scope: !4060)
!4064 = !DILocation(line: 171, column: 9, scope: !4060)
!4065 = !DILocation(line: 174, column: 14, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 174, column: 9)
!4067 = !DILocation(line: 174, column: 23, scope: !4066)
!4068 = !DILocation(line: 174, column: 9, scope: !3983)
!4069 = !DILocation(line: 175, column: 14, scope: !4066)
!4070 = !DILocation(line: 175, column: 23, scope: !4066)
!4071 = !DILocation(line: 175, column: 9, scope: !4066)
!4072 = !DILocation(line: 178, column: 26, scope: !3983)
!4073 = !DILocation(line: 178, column: 32, scope: !3983)
!4074 = !DILocation(line: 178, column: 37, scope: !3983)
!4075 = !DILocation(line: 178, column: 10, scope: !3983)
!4076 = !DILocation(line: 178, column: 18, scope: !3983)
!4077 = !DILocation(line: 179, column: 32, scope: !3983)
!4078 = !DILocation(line: 179, column: 27, scope: !3983)
!4079 = !DILocation(line: 179, column: 17, scope: !3983)
!4080 = !DILocation(line: 179, column: 10, scope: !3983)
!4081 = !DILocation(line: 179, column: 15, scope: !3983)
!4082 = !DILocation(line: 180, column: 32, scope: !3983)
!4083 = !DILocation(line: 180, column: 27, scope: !3983)
!4084 = !DILocation(line: 180, column: 17, scope: !3983)
!4085 = !DILocation(line: 180, column: 10, scope: !3983)
!4086 = !DILocation(line: 180, column: 15, scope: !3983)
!4087 = !DILocation(line: 181, column: 32, scope: !3983)
!4088 = !DILocation(line: 181, column: 27, scope: !3983)
!4089 = !DILocation(line: 181, column: 17, scope: !3983)
!4090 = !DILocation(line: 181, column: 10, scope: !3983)
!4091 = !DILocation(line: 181, column: 15, scope: !3983)
!4092 = !DILocation(line: 183, column: 15, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 183, column: 9)
!4094 = !DILocation(line: 183, column: 10, scope: !4093)
!4095 = !DILocation(line: 183, column: 20, scope: !4093)
!4096 = !DILocation(line: 183, column: 29, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !4093, file: !888, discriminator: 1)
!4098 = !DILocation(line: 183, column: 24, scope: !4097)
!4099 = !DILocation(line: 183, column: 34, scope: !4097)
!4100 = !DILocation(line: 183, column: 43, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4093, file: !888, discriminator: 2)
!4102 = !DILocation(line: 183, column: 38, scope: !4101)
!4103 = !DILocation(line: 183, column: 9, scope: !4101)
!4104 = !DILocation(line: 184, column: 13, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4093, file: !888, line: 183, column: 49)
!4106 = !DILocation(line: 185, column: 9, scope: !4105)
!4107 = !DILocation(line: 188, column: 25, scope: !3983)
!4108 = !DILocation(line: 188, column: 11, scope: !3983)
!4109 = !DILocation(line: 188, column: 9, scope: !3983)
!4110 = !DILocation(line: 190, column: 9, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 190, column: 9)
!4112 = !DILocation(line: 190, column: 13, scope: !4111)
!4113 = !DILocation(line: 190, column: 18, scope: !4111)
!4114 = !DILocation(line: 190, column: 21, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4111, file: !888, discriminator: 1)
!4116 = !DILocation(line: 190, column: 33, scope: !4115)
!4117 = !DILocation(line: 190, column: 25, scope: !4115)
!4118 = !DILocation(line: 190, column: 9, scope: !4115)
!4119 = !DILocation(line: 191, column: 16, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4111, file: !888, line: 190, column: 43)
!4121 = !DILocation(line: 191, column: 21, scope: !4120)
!4122 = !DILocation(line: 192, column: 16, scope: !4120)
!4123 = !DILocation(line: 192, column: 26, scope: !4120)
!4124 = !DILocation(line: 191, column: 9, scope: !4120)
!4125 = !DILocation(line: 193, column: 13, scope: !4120)
!4126 = !DILocation(line: 194, column: 5, scope: !4120)
!4127 = !DILocation(line: 195, column: 14, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 195, column: 9)
!4129 = !DILocation(line: 195, column: 26, scope: !4128)
!4130 = !DILocation(line: 195, column: 18, scope: !4128)
!4131 = !DILocation(line: 195, column: 9, scope: !3983)
!4132 = !DILocation(line: 196, column: 16, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !888, line: 195, column: 35)
!4134 = !DILocation(line: 196, column: 21, scope: !4133)
!4135 = !DILocation(line: 197, column: 21, scope: !4133)
!4136 = !DILocation(line: 197, column: 31, scope: !4133)
!4137 = !DILocation(line: 196, column: 9, scope: !4133)
!4138 = !DILocation(line: 198, column: 13, scope: !4133)
!4139 = !DILocation(line: 199, column: 5, scope: !4133)
!4140 = !DILocation(line: 202, column: 9, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !3983, file: !888, line: 202, column: 9)
!4142 = !DILocation(line: 202, column: 13, scope: !4141)
!4143 = !DILocation(line: 202, column: 9, scope: !3983)
!4144 = !DILocalVariable(name: "i", scope: !4145, file: !888, line: 203, type: !905)
!4145 = distinct !DILexicalBlock(scope: !4141, file: !888, line: 202, column: 19)
!4146 = !DILocation(line: 203, column: 13, scope: !4145)
!4147 = !DILocation(line: 205, column: 35, scope: !4145)
!4148 = !DILocation(line: 205, column: 41, scope: !4145)
!4149 = !DILocation(line: 205, column: 51, scope: !4145)
!4150 = !DILocation(line: 205, column: 66, scope: !4145)
!4151 = !DILocation(line: 205, column: 80, scope: !4145)
!4152 = !DILocation(line: 205, column: 75, scope: !4145)
!4153 = !DILocation(line: 205, column: 117, scope: !4145)
!4154 = !DILocation(line: 205, column: 112, scope: !4145)
!4155 = !DILocation(line: 205, column: 15, scope: !4145)
!4156 = !DILocation(line: 205, column: 13, scope: !4145)
!4157 = !DILocation(line: 208, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4145, file: !888, line: 208, column: 13)
!4159 = !DILocation(line: 208, column: 17, scope: !4158)
!4160 = !DILocation(line: 208, column: 13, scope: !4145)
!4161 = !DILocation(line: 209, column: 20, scope: !4158)
!4162 = !DILocation(line: 209, column: 25, scope: !4158)
!4163 = !DILocation(line: 209, column: 13, scope: !4158)
!4164 = !DILocation(line: 211, column: 31, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4158, file: !888, line: 210, column: 14)
!4166 = !DILocation(line: 211, column: 13, scope: !4165)
!4167 = !DILocation(line: 211, column: 19, scope: !4165)
!4168 = !DILocation(line: 211, column: 24, scope: !4165)
!4169 = !DILocation(line: 212, column: 33, scope: !4165)
!4170 = !DILocation(line: 212, column: 13, scope: !4165)
!4171 = !DILocation(line: 212, column: 19, scope: !4165)
!4172 = !DILocation(line: 212, column: 26, scope: !4165)
!4173 = !DILocation(line: 213, column: 44, scope: !4165)
!4174 = !DILocation(line: 213, column: 50, scope: !4165)
!4175 = !DILocation(line: 213, column: 28, scope: !4165)
!4176 = !DILocation(line: 213, column: 13, scope: !4165)
!4177 = !DILocation(line: 213, column: 19, scope: !4165)
!4178 = !DILocation(line: 213, column: 26, scope: !4165)
!4179 = !DILocation(line: 214, column: 18, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4165, file: !888, line: 214, column: 17)
!4181 = !DILocation(line: 214, column: 24, scope: !4180)
!4182 = !DILocation(line: 214, column: 17, scope: !4165)
!4183 = !DILocation(line: 215, column: 21, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4180, file: !888, line: 214, column: 32)
!4185 = !DILocation(line: 216, column: 17, scope: !4184)
!4186 = !DILocation(line: 218, column: 20, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4165, file: !888, line: 218, column: 13)
!4188 = !DILocation(line: 218, column: 18, scope: !4187)
!4189 = !DILocation(line: 218, column: 25, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4191, file: !888, discriminator: 1)
!4191 = distinct !DILexicalBlock(scope: !4187, file: !888, line: 218, column: 13)
!4192 = !DILocation(line: 218, column: 29, scope: !4190)
!4193 = !DILocation(line: 218, column: 35, scope: !4190)
!4194 = !DILocation(line: 218, column: 27, scope: !4190)
!4195 = !DILocation(line: 218, column: 13, scope: !4190)
!4196 = !DILocation(line: 219, column: 45, scope: !4191)
!4197 = !DILocation(line: 219, column: 35, scope: !4191)
!4198 = !DILocation(line: 219, column: 40, scope: !4191)
!4199 = !DILocation(line: 219, column: 30, scope: !4191)
!4200 = !DILocation(line: 219, column: 17, scope: !4191)
!4201 = !DILocation(line: 219, column: 23, scope: !4191)
!4202 = !DILocation(line: 219, column: 33, scope: !4191)
!4203 = !DILocation(line: 218, column: 44, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4191, file: !888, discriminator: 2)
!4205 = !DILocation(line: 218, column: 13, scope: !4204)
!4206 = distinct !{!4206, !4207}
!4207 = !DILocation(line: 218, column: 13, scope: !4165)
!4208 = !DILocation(line: 221, column: 5, scope: !4145)
!4209 = !DILocation(line: 202, column: 16, scope: !4210)
!4210 = !DILexicalBlockFile(scope: !4141, file: !888, discriminator: 1)
!4211 = !DILocation(line: 225, column: 18, scope: !3983)
!4212 = !DILocation(line: 225, column: 13, scope: !3983)
!4213 = !DILocation(line: 225, column: 5, scope: !3983)
!4214 = !DILocation(line: 226, column: 18, scope: !3983)
!4215 = !DILocation(line: 226, column: 13, scope: !3983)
!4216 = !DILocation(line: 226, column: 5, scope: !3983)
!4217 = !DILocation(line: 227, column: 18, scope: !3983)
!4218 = !DILocation(line: 227, column: 13, scope: !3983)
!4219 = !DILocation(line: 227, column: 5, scope: !3983)
!4220 = !DILocation(line: 229, column: 12, scope: !3983)
!4221 = !DILocation(line: 229, column: 5, scope: !3983)
!4222 = !DILocation(line: 230, column: 1, scope: !3983)
!4223 = distinct !DISubprogram(name: "get_bits_left", scope: !1665, file: !1665, line: 814, type: !4224, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!905, !3815}
!4226 = !DILocalVariable(name: "gb", arg: 1, scope: !4223, file: !1665, line: 814, type: !3815)
!4227 = !DILocation(line: 814, column: 48, scope: !4223)
!4228 = !DILocation(line: 816, column: 12, scope: !4223)
!4229 = !DILocation(line: 816, column: 16, scope: !4223)
!4230 = !DILocation(line: 816, column: 46, scope: !4223)
!4231 = !DILocation(line: 816, column: 31, scope: !4223)
!4232 = !DILocation(line: 816, column: 29, scope: !4223)
!4233 = !DILocation(line: 816, column: 5, scope: !4223)
!4234 = distinct !DISubprogram(name: "tm2_get_token", scope: !888, file: !888, line: 239, type: !4235, isLocal: true, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!905, !3815, !3986}
!4237 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !4238)
!4238 = distinct !DILocation(line: 788, column: 601, scope: !4239, inlinedAt: !4248)
!4239 = !DILexicalBlockFile(scope: !4240, file: !1665, discriminator: 11)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !1665, line: 788, column: 490)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !1665, line: 788, column: 466)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !1665, line: 788, column: 154)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 788, column: 130)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !1665, line: 788, column: 8)
!4245 = distinct !DISubprogram(name: "get_vlc2", scope: !1665, file: !1665, line: 762, type: !4246, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{!905, !3815, !2433, !905, !905}
!4248 = distinct !DILocation(line: 242, column: 11, scope: !4234)
!4249 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !4250)
!4250 = distinct !DILocation(line: 788, column: 259, scope: !4251, inlinedAt: !4248)
!4251 = !DILexicalBlockFile(scope: !4242, file: !1665, discriminator: 6)
!4252 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !4253)
!4253 = distinct !DILocation(line: 786, column: 16, scope: !4245, inlinedAt: !4248)
!4254 = !DILocalVariable(name: "s", arg: 1, scope: !4245, file: !1665, line: 762, type: !3815)
!4255 = !DILocation(line: 762, column: 74, scope: !4245, inlinedAt: !4248)
!4256 = !DILocalVariable(name: "table", arg: 2, scope: !4245, file: !1665, line: 762, type: !2433)
!4257 = !DILocation(line: 762, column: 87, scope: !4245, inlinedAt: !4248)
!4258 = !DILocalVariable(name: "bits", arg: 3, scope: !4245, file: !1665, line: 763, type: !905)
!4259 = !DILocation(line: 763, column: 42, scope: !4245, inlinedAt: !4248)
!4260 = !DILocalVariable(name: "max_depth", arg: 4, scope: !4245, file: !1665, line: 763, type: !905)
!4261 = !DILocation(line: 763, column: 52, scope: !4245, inlinedAt: !4248)
!4262 = !DILocalVariable(name: "code", scope: !4245, file: !1665, line: 783, type: !905)
!4263 = !DILocation(line: 783, column: 9, scope: !4245, inlinedAt: !4248)
!4264 = !DILocalVariable(name: "re_index", scope: !4245, file: !1665, line: 785, type: !902)
!4265 = !DILocation(line: 785, column: 18, scope: !4245, inlinedAt: !4248)
!4266 = !DILocalVariable(name: "re_cache", scope: !4245, file: !1665, line: 785, type: !902)
!4267 = !DILocation(line: 785, column: 78, scope: !4245, inlinedAt: !4248)
!4268 = !DILocalVariable(name: "re_size_plus8", scope: !4245, file: !1665, line: 785, type: !902)
!4269 = !DILocation(line: 785, column: 101, scope: !4245, inlinedAt: !4248)
!4270 = !DILocalVariable(name: "n", scope: !4244, file: !1665, line: 788, type: !905)
!4271 = !DILocation(line: 788, column: 14, scope: !4244, inlinedAt: !4248)
!4272 = !DILocalVariable(name: "nb_bits", scope: !4244, file: !1665, line: 788, type: !905)
!4273 = !DILocation(line: 788, column: 17, scope: !4244, inlinedAt: !4248)
!4274 = !DILocalVariable(name: "index", scope: !4244, file: !1665, line: 788, type: !902)
!4275 = !DILocation(line: 788, column: 39, scope: !4244, inlinedAt: !4248)
!4276 = !DILocalVariable(name: "gb", arg: 1, scope: !4234, file: !888, line: 239, type: !3815)
!4277 = !DILocation(line: 239, column: 48, scope: !4234)
!4278 = !DILocalVariable(name: "code", arg: 2, scope: !4234, file: !888, line: 239, type: !3986)
!4279 = !DILocation(line: 239, column: 62, scope: !4234)
!4280 = !DILocalVariable(name: "val", scope: !4234, file: !888, line: 241, type: !905)
!4281 = !DILocation(line: 241, column: 9, scope: !4234)
!4282 = !DILocation(line: 242, column: 20, scope: !4234)
!4283 = !DILocation(line: 242, column: 24, scope: !4234)
!4284 = !DILocation(line: 242, column: 30, scope: !4234)
!4285 = !DILocation(line: 242, column: 34, scope: !4234)
!4286 = !DILocation(line: 242, column: 41, scope: !4234)
!4287 = !DILocation(line: 242, column: 47, scope: !4234)
!4288 = !DILocation(line: 242, column: 11, scope: !4234)
!4289 = !DILocation(line: 785, column: 30, scope: !4245, inlinedAt: !4248)
!4290 = !DILocation(line: 785, column: 34, scope: !4245, inlinedAt: !4248)
!4291 = !DILocation(line: 785, column: 118, scope: !4245, inlinedAt: !4248)
!4292 = !DILocation(line: 785, column: 122, scope: !4245, inlinedAt: !4248)
!4293 = !DILocation(line: 786, column: 60, scope: !4245, inlinedAt: !4248)
!4294 = !DILocation(line: 786, column: 64, scope: !4245, inlinedAt: !4248)
!4295 = !DILocation(line: 786, column: 74, scope: !4245, inlinedAt: !4248)
!4296 = !DILocation(line: 786, column: 83, scope: !4245, inlinedAt: !4248)
!4297 = !DILocation(line: 786, column: 71, scope: !4245, inlinedAt: !4248)
!4298 = !DILocation(line: 786, column: 92, scope: !4245, inlinedAt: !4248)
!4299 = !DILocation(line: 786, column: 16, scope: !4245, inlinedAt: !4248)
!4300 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !4253)
!4301 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !4253)
!4302 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !4253)
!4303 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !4253)
!4304 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !4253)
!4305 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !4253)
!4306 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !4253)
!4307 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !4253)
!4308 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !4253)
!4309 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !4253)
!4310 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !4253)
!4311 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !4253)
!4312 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !4253)
!4313 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !4253)
!4314 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !4253)
!4315 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !4253)
!4316 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !4253)
!4317 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !4253)
!4318 = !DILocation(line: 786, column: 100, scope: !4245, inlinedAt: !4248)
!4319 = !DILocation(line: 786, column: 109, scope: !4245, inlinedAt: !4248)
!4320 = !DILocation(line: 786, column: 96, scope: !4245, inlinedAt: !4248)
!4321 = !DILocation(line: 786, column: 14, scope: !4245, inlinedAt: !4248)
!4322 = !DILocation(line: 788, column: 64, scope: !4323, inlinedAt: !4248)
!4323 = !DILexicalBlockFile(scope: !4244, file: !1665, discriminator: 1)
!4324 = !DILocation(line: 788, column: 74, scope: !4323, inlinedAt: !4248)
!4325 = !DILocation(line: 788, column: 54, scope: !4323, inlinedAt: !4248)
!4326 = !DILocation(line: 788, column: 52, scope: !4323, inlinedAt: !4248)
!4327 = !DILocation(line: 788, column: 94, scope: !4323, inlinedAt: !4248)
!4328 = !DILocation(line: 788, column: 88, scope: !4323, inlinedAt: !4248)
!4329 = !DILocation(line: 788, column: 86, scope: !4323, inlinedAt: !4248)
!4330 = !DILocation(line: 788, column: 115, scope: !4323, inlinedAt: !4248)
!4331 = !DILocation(line: 788, column: 109, scope: !4323, inlinedAt: !4248)
!4332 = !DILocation(line: 788, column: 107, scope: !4323, inlinedAt: !4248)
!4333 = !DILocation(line: 788, column: 130, scope: !4323, inlinedAt: !4248)
!4334 = !DILocation(line: 788, column: 140, scope: !4323, inlinedAt: !4248)
!4335 = !DILocation(line: 788, column: 144, scope: !4323, inlinedAt: !4248)
!4336 = !DILocation(line: 788, column: 147, scope: !4337, inlinedAt: !4248)
!4337 = !DILexicalBlockFile(scope: !4243, file: !1665, discriminator: 2)
!4338 = !DILocation(line: 788, column: 149, scope: !4337, inlinedAt: !4248)
!4339 = !DILocation(line: 788, column: 130, scope: !4337, inlinedAt: !4248)
!4340 = !DILocation(line: 788, column: 169, scope: !4341, inlinedAt: !4248)
!4341 = !DILexicalBlockFile(scope: !4242, file: !1665, discriminator: 3)
!4342 = !DILocation(line: 788, column: 187, scope: !4341, inlinedAt: !4248)
!4343 = !DILocation(line: 788, column: 199, scope: !4341, inlinedAt: !4248)
!4344 = !DILocation(line: 788, column: 196, scope: !4341, inlinedAt: !4248)
!4345 = !DILocation(line: 788, column: 184, scope: !4341, inlinedAt: !4248)
!4346 = !DILocation(line: 788, column: 168, scope: !4341, inlinedAt: !4248)
!4347 = !DILocation(line: 788, column: 209, scope: !4348, inlinedAt: !4248)
!4348 = !DILexicalBlockFile(scope: !4242, file: !1665, discriminator: 4)
!4349 = !DILocation(line: 788, column: 221, scope: !4348, inlinedAt: !4248)
!4350 = !DILocation(line: 788, column: 218, scope: !4348, inlinedAt: !4248)
!4351 = !DILocation(line: 788, column: 168, scope: !4348, inlinedAt: !4248)
!4352 = !DILocation(line: 788, column: 231, scope: !4353, inlinedAt: !4248)
!4353 = !DILexicalBlockFile(scope: !4242, file: !1665, discriminator: 5)
!4354 = !DILocation(line: 788, column: 168, scope: !4353, inlinedAt: !4248)
!4355 = !DILocation(line: 788, column: 168, scope: !4251, inlinedAt: !4248)
!4356 = !DILocation(line: 788, column: 165, scope: !4251, inlinedAt: !4248)
!4357 = !DILocation(line: 788, column: 303, scope: !4251, inlinedAt: !4248)
!4358 = !DILocation(line: 788, column: 307, scope: !4251, inlinedAt: !4248)
!4359 = !DILocation(line: 788, column: 317, scope: !4251, inlinedAt: !4248)
!4360 = !DILocation(line: 788, column: 326, scope: !4251, inlinedAt: !4248)
!4361 = !DILocation(line: 788, column: 314, scope: !4251, inlinedAt: !4248)
!4362 = !DILocation(line: 788, column: 335, scope: !4251, inlinedAt: !4248)
!4363 = !DILocation(line: 788, column: 259, scope: !4251, inlinedAt: !4248)
!4364 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !4250)
!4365 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !4250)
!4366 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !4250)
!4367 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !4250)
!4368 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !4250)
!4369 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !4250)
!4370 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !4250)
!4371 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !4250)
!4372 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !4250)
!4373 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !4250)
!4374 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !4250)
!4375 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !4250)
!4376 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !4250)
!4377 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !4250)
!4378 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !4250)
!4379 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !4250)
!4380 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !4250)
!4381 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !4250)
!4382 = !DILocation(line: 788, column: 343, scope: !4251, inlinedAt: !4248)
!4383 = !DILocation(line: 788, column: 352, scope: !4251, inlinedAt: !4248)
!4384 = !DILocation(line: 788, column: 339, scope: !4251, inlinedAt: !4248)
!4385 = !DILocation(line: 788, column: 257, scope: !4251, inlinedAt: !4248)
!4386 = !DILocation(line: 788, column: 369, scope: !4251, inlinedAt: !4248)
!4387 = !DILocation(line: 788, column: 368, scope: !4251, inlinedAt: !4248)
!4388 = !DILocation(line: 788, column: 366, scope: !4251, inlinedAt: !4248)
!4389 = !DILocation(line: 788, column: 390, scope: !4251, inlinedAt: !4248)
!4390 = !DILocation(line: 788, column: 400, scope: !4251, inlinedAt: !4248)
!4391 = !DILocation(line: 788, column: 380, scope: !4392, inlinedAt: !4248)
!4392 = !DILexicalBlockFile(scope: !4251, file: !1665, discriminator: 19)
!4393 = !DILocation(line: 788, column: 411, scope: !4251, inlinedAt: !4248)
!4394 = !DILocation(line: 788, column: 409, scope: !4251, inlinedAt: !4248)
!4395 = !DILocation(line: 788, column: 378, scope: !4251, inlinedAt: !4248)
!4396 = !DILocation(line: 788, column: 430, scope: !4251, inlinedAt: !4248)
!4397 = !DILocation(line: 788, column: 424, scope: !4251, inlinedAt: !4248)
!4398 = !DILocation(line: 788, column: 422, scope: !4251, inlinedAt: !4248)
!4399 = !DILocation(line: 788, column: 451, scope: !4251, inlinedAt: !4248)
!4400 = !DILocation(line: 788, column: 445, scope: !4251, inlinedAt: !4248)
!4401 = !DILocation(line: 788, column: 443, scope: !4251, inlinedAt: !4248)
!4402 = !DILocation(line: 788, column: 466, scope: !4251, inlinedAt: !4248)
!4403 = !DILocation(line: 788, column: 476, scope: !4251, inlinedAt: !4248)
!4404 = !DILocation(line: 788, column: 480, scope: !4251, inlinedAt: !4248)
!4405 = !DILocation(line: 788, column: 483, scope: !4406, inlinedAt: !4248)
!4406 = !DILexicalBlockFile(scope: !4241, file: !1665, discriminator: 7)
!4407 = !DILocation(line: 788, column: 485, scope: !4406, inlinedAt: !4248)
!4408 = !DILocation(line: 788, column: 466, scope: !4406, inlinedAt: !4248)
!4409 = !DILocation(line: 788, column: 505, scope: !4410, inlinedAt: !4248)
!4410 = !DILexicalBlockFile(scope: !4240, file: !1665, discriminator: 8)
!4411 = !DILocation(line: 788, column: 523, scope: !4410, inlinedAt: !4248)
!4412 = !DILocation(line: 788, column: 535, scope: !4410, inlinedAt: !4248)
!4413 = !DILocation(line: 788, column: 532, scope: !4410, inlinedAt: !4248)
!4414 = !DILocation(line: 788, column: 520, scope: !4410, inlinedAt: !4248)
!4415 = !DILocation(line: 788, column: 504, scope: !4410, inlinedAt: !4248)
!4416 = !DILocation(line: 788, column: 548, scope: !4417, inlinedAt: !4248)
!4417 = !DILexicalBlockFile(scope: !4240, file: !1665, discriminator: 9)
!4418 = !DILocation(line: 788, column: 560, scope: !4417, inlinedAt: !4248)
!4419 = !DILocation(line: 788, column: 557, scope: !4417, inlinedAt: !4248)
!4420 = !DILocation(line: 788, column: 504, scope: !4417, inlinedAt: !4248)
!4421 = !DILocation(line: 788, column: 573, scope: !4422, inlinedAt: !4248)
!4422 = !DILexicalBlockFile(scope: !4240, file: !1665, discriminator: 10)
!4423 = !DILocation(line: 788, column: 504, scope: !4422, inlinedAt: !4248)
!4424 = !DILocation(line: 788, column: 504, scope: !4239, inlinedAt: !4248)
!4425 = !DILocation(line: 788, column: 501, scope: !4239, inlinedAt: !4248)
!4426 = !DILocation(line: 788, column: 645, scope: !4239, inlinedAt: !4248)
!4427 = !DILocation(line: 788, column: 649, scope: !4239, inlinedAt: !4248)
!4428 = !DILocation(line: 788, column: 659, scope: !4239, inlinedAt: !4248)
!4429 = !DILocation(line: 788, column: 668, scope: !4239, inlinedAt: !4248)
!4430 = !DILocation(line: 788, column: 656, scope: !4239, inlinedAt: !4248)
!4431 = !DILocation(line: 788, column: 677, scope: !4239, inlinedAt: !4248)
!4432 = !DILocation(line: 788, column: 601, scope: !4239, inlinedAt: !4248)
!4433 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !4238)
!4434 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !4238)
!4435 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !4238)
!4436 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !4238)
!4437 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !4238)
!4438 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !4238)
!4439 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !4238)
!4440 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !4238)
!4441 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !4238)
!4442 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !4238)
!4443 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !4238)
!4444 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !4238)
!4445 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !4238)
!4446 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !4238)
!4447 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !4238)
!4448 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !4238)
!4449 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !4238)
!4450 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !4238)
!4451 = !DILocation(line: 788, column: 685, scope: !4239, inlinedAt: !4248)
!4452 = !DILocation(line: 788, column: 694, scope: !4239, inlinedAt: !4248)
!4453 = !DILocation(line: 788, column: 681, scope: !4239, inlinedAt: !4248)
!4454 = !DILocation(line: 788, column: 599, scope: !4239, inlinedAt: !4248)
!4455 = !DILocation(line: 788, column: 711, scope: !4239, inlinedAt: !4248)
!4456 = !DILocation(line: 788, column: 710, scope: !4239, inlinedAt: !4248)
!4457 = !DILocation(line: 788, column: 708, scope: !4239, inlinedAt: !4248)
!4458 = !DILocation(line: 788, column: 732, scope: !4239, inlinedAt: !4248)
!4459 = !DILocation(line: 788, column: 742, scope: !4239, inlinedAt: !4248)
!4460 = !DILocation(line: 788, column: 722, scope: !4461, inlinedAt: !4248)
!4461 = !DILexicalBlockFile(scope: !4239, file: !1665, discriminator: 20)
!4462 = !DILocation(line: 788, column: 753, scope: !4239, inlinedAt: !4248)
!4463 = !DILocation(line: 788, column: 751, scope: !4239, inlinedAt: !4248)
!4464 = !DILocation(line: 788, column: 720, scope: !4239, inlinedAt: !4248)
!4465 = !DILocation(line: 788, column: 772, scope: !4239, inlinedAt: !4248)
!4466 = !DILocation(line: 788, column: 766, scope: !4239, inlinedAt: !4248)
!4467 = !DILocation(line: 788, column: 764, scope: !4239, inlinedAt: !4248)
!4468 = !DILocation(line: 788, column: 793, scope: !4239, inlinedAt: !4248)
!4469 = !DILocation(line: 788, column: 787, scope: !4239, inlinedAt: !4248)
!4470 = !DILocation(line: 788, column: 785, scope: !4239, inlinedAt: !4248)
!4471 = !DILocation(line: 788, column: 804, scope: !4239, inlinedAt: !4248)
!4472 = !DILocation(line: 788, column: 806, scope: !4473, inlinedAt: !4248)
!4473 = !DILexicalBlockFile(scope: !4242, file: !1665, discriminator: 12)
!4474 = !DILocation(line: 788, column: 827, scope: !4475, inlinedAt: !4248)
!4475 = !DILexicalBlockFile(scope: !4476, file: !1665, discriminator: 14)
!4476 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 788, column: 811)
!4477 = !DILocation(line: 788, column: 822, scope: !4475, inlinedAt: !4248)
!4478 = !DILocation(line: 788, column: 844, scope: !4475, inlinedAt: !4248)
!4479 = !DILocation(line: 788, column: 862, scope: !4475, inlinedAt: !4248)
!4480 = !DILocation(line: 788, column: 874, scope: !4475, inlinedAt: !4248)
!4481 = !DILocation(line: 788, column: 871, scope: !4475, inlinedAt: !4248)
!4482 = !DILocation(line: 788, column: 859, scope: !4475, inlinedAt: !4248)
!4483 = !DILocation(line: 788, column: 843, scope: !4475, inlinedAt: !4248)
!4484 = !DILocation(line: 788, column: 881, scope: !4485, inlinedAt: !4248)
!4485 = !DILexicalBlockFile(scope: !4476, file: !1665, discriminator: 15)
!4486 = !DILocation(line: 788, column: 893, scope: !4485, inlinedAt: !4248)
!4487 = !DILocation(line: 788, column: 890, scope: !4485, inlinedAt: !4248)
!4488 = !DILocation(line: 788, column: 843, scope: !4485, inlinedAt: !4248)
!4489 = !DILocation(line: 788, column: 900, scope: !4490, inlinedAt: !4248)
!4490 = !DILexicalBlockFile(scope: !4476, file: !1665, discriminator: 16)
!4491 = !DILocation(line: 788, column: 843, scope: !4490, inlinedAt: !4248)
!4492 = !DILocation(line: 788, column: 843, scope: !4493, inlinedAt: !4248)
!4493 = !DILexicalBlockFile(scope: !4476, file: !1665, discriminator: 17)
!4494 = !DILocation(line: 788, column: 840, scope: !4493, inlinedAt: !4248)
!4495 = !DILocation(line: 790, column: 18, scope: !4245, inlinedAt: !4248)
!4496 = !DILocation(line: 790, column: 6, scope: !4245, inlinedAt: !4248)
!4497 = !DILocation(line: 790, column: 10, scope: !4245, inlinedAt: !4248)
!4498 = !DILocation(line: 790, column: 16, scope: !4245, inlinedAt: !4248)
!4499 = !DILocation(line: 792, column: 12, scope: !4245, inlinedAt: !4248)
!4500 = !DILocation(line: 242, column: 9, scope: !4234)
!4501 = !DILocation(line: 243, column: 8, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4234, file: !888, line: 243, column: 8)
!4503 = !DILocation(line: 243, column: 11, scope: !4502)
!4504 = !DILocation(line: 243, column: 8, scope: !4234)
!4505 = !DILocation(line: 244, column: 9, scope: !4502)
!4506 = !DILocation(line: 245, column: 25, scope: !4234)
!4507 = !DILocation(line: 245, column: 12, scope: !4234)
!4508 = !DILocation(line: 245, column: 18, scope: !4234)
!4509 = !DILocation(line: 245, column: 5, scope: !4234)
!4510 = !DILocation(line: 246, column: 1, scope: !4234)
!4511 = distinct !DISubprogram(name: "tm2_free_codes", scope: !888, file: !888, line: 232, type: !4512, isLocal: true, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !3986}
!4514 = !DILocalVariable(name: "code", arg: 1, scope: !4511, file: !888, line: 232, type: !3986)
!4515 = !DILocation(line: 232, column: 38, scope: !4511)
!4516 = !DILocation(line: 234, column: 13, scope: !4511)
!4517 = !DILocation(line: 234, column: 19, scope: !4511)
!4518 = !DILocation(line: 234, column: 5, scope: !4511)
!4519 = !DILocation(line: 235, column: 9, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4511, file: !888, line: 235, column: 9)
!4521 = !DILocation(line: 235, column: 15, scope: !4520)
!4522 = !DILocation(line: 235, column: 19, scope: !4520)
!4523 = !DILocation(line: 235, column: 9, scope: !4511)
!4524 = !DILocation(line: 236, column: 22, scope: !4520)
!4525 = !DILocation(line: 236, column: 28, scope: !4520)
!4526 = !DILocation(line: 236, column: 9, scope: !4520)
!4527 = !DILocation(line: 237, column: 1, scope: !4511)
!4528 = distinct !DISubprogram(name: "get_bits", scope: !1665, file: !1665, line: 381, type: !4529, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!902, !3815, !905}
!4531 = !DILocation(line: 66, column: 98, scope: !2308, inlinedAt: !4532)
!4532 = distinct !DILocation(line: 401, column: 16, scope: !4528)
!4533 = !DILocalVariable(name: "s", arg: 1, scope: !4528, file: !1665, line: 381, type: !3815)
!4534 = !DILocation(line: 381, column: 52, scope: !4528)
!4535 = !DILocalVariable(name: "n", arg: 2, scope: !4528, file: !1665, line: 381, type: !905)
!4536 = !DILocation(line: 381, column: 59, scope: !4528)
!4537 = !DILocalVariable(name: "tmp", scope: !4528, file: !1665, line: 383, type: !905)
!4538 = !DILocation(line: 383, column: 18, scope: !4528)
!4539 = !DILocalVariable(name: "re_index", scope: !4528, file: !1665, line: 399, type: !902)
!4540 = !DILocation(line: 399, column: 18, scope: !4528)
!4541 = !DILocation(line: 399, column: 30, scope: !4528)
!4542 = !DILocation(line: 399, column: 34, scope: !4528)
!4543 = !DILocalVariable(name: "re_cache", scope: !4528, file: !1665, line: 399, type: !902)
!4544 = !DILocation(line: 399, column: 78, scope: !4528)
!4545 = !DILocalVariable(name: "re_size_plus8", scope: !4528, file: !1665, line: 399, type: !902)
!4546 = !DILocation(line: 399, column: 101, scope: !4528)
!4547 = !DILocation(line: 399, column: 118, scope: !4528)
!4548 = !DILocation(line: 399, column: 122, scope: !4528)
!4549 = !DILocation(line: 401, column: 60, scope: !4528)
!4550 = !DILocation(line: 401, column: 64, scope: !4528)
!4551 = !DILocation(line: 401, column: 74, scope: !4528)
!4552 = !DILocation(line: 401, column: 83, scope: !4528)
!4553 = !DILocation(line: 401, column: 71, scope: !4528)
!4554 = !DILocation(line: 401, column: 92, scope: !4528)
!4555 = !DILocation(line: 401, column: 16, scope: !4528)
!4556 = !DILocation(line: 68, column: 16, scope: !2308, inlinedAt: !4532)
!4557 = !DILocation(line: 68, column: 19, scope: !2308, inlinedAt: !4532)
!4558 = !DILocation(line: 68, column: 24, scope: !2308, inlinedAt: !4532)
!4559 = !DILocation(line: 68, column: 38, scope: !2308, inlinedAt: !4532)
!4560 = !DILocation(line: 68, column: 41, scope: !2308, inlinedAt: !4532)
!4561 = !DILocation(line: 68, column: 46, scope: !2308, inlinedAt: !4532)
!4562 = !DILocation(line: 68, column: 34, scope: !2308, inlinedAt: !4532)
!4563 = !DILocation(line: 68, column: 57, scope: !2308, inlinedAt: !4532)
!4564 = !DILocation(line: 68, column: 69, scope: !2308, inlinedAt: !4532)
!4565 = !DILocation(line: 68, column: 72, scope: !2308, inlinedAt: !4532)
!4566 = !DILocation(line: 68, column: 79, scope: !2308, inlinedAt: !4532)
!4567 = !DILocation(line: 68, column: 84, scope: !2308, inlinedAt: !4532)
!4568 = !DILocation(line: 68, column: 99, scope: !2308, inlinedAt: !4532)
!4569 = !DILocation(line: 68, column: 102, scope: !2308, inlinedAt: !4532)
!4570 = !DILocation(line: 68, column: 109, scope: !2308, inlinedAt: !4532)
!4571 = !DILocation(line: 68, column: 114, scope: !2308, inlinedAt: !4532)
!4572 = !DILocation(line: 68, column: 94, scope: !2308, inlinedAt: !4532)
!4573 = !DILocation(line: 68, column: 63, scope: !2308, inlinedAt: !4532)
!4574 = !DILocation(line: 401, column: 100, scope: !4528)
!4575 = !DILocation(line: 401, column: 109, scope: !4528)
!4576 = !DILocation(line: 401, column: 96, scope: !4528)
!4577 = !DILocation(line: 401, column: 14, scope: !4528)
!4578 = !DILocation(line: 402, column: 21, scope: !4528)
!4579 = !DILocation(line: 402, column: 31, scope: !4528)
!4580 = !DILocation(line: 402, column: 11, scope: !4528)
!4581 = !DILocation(line: 402, column: 9, scope: !4528)
!4582 = !DILocation(line: 403, column: 18, scope: !4528)
!4583 = !DILocation(line: 403, column: 36, scope: !4528)
!4584 = !DILocation(line: 403, column: 48, scope: !4528)
!4585 = !DILocation(line: 403, column: 45, scope: !4528)
!4586 = !DILocation(line: 403, column: 33, scope: !4528)
!4587 = !DILocation(line: 403, column: 17, scope: !4528)
!4588 = !DILocation(line: 403, column: 55, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4528, file: !1665, discriminator: 1)
!4590 = !DILocation(line: 403, column: 67, scope: !4589)
!4591 = !DILocation(line: 403, column: 64, scope: !4589)
!4592 = !DILocation(line: 403, column: 17, scope: !4589)
!4593 = !DILocation(line: 403, column: 74, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !4528, file: !1665, discriminator: 2)
!4595 = !DILocation(line: 403, column: 17, scope: !4594)
!4596 = !DILocation(line: 403, column: 17, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !4528, file: !1665, discriminator: 3)
!4598 = !DILocation(line: 403, column: 14, scope: !4597)
!4599 = !DILocation(line: 404, column: 18, scope: !4528)
!4600 = !DILocation(line: 404, column: 6, scope: !4528)
!4601 = !DILocation(line: 404, column: 10, scope: !4528)
!4602 = !DILocation(line: 404, column: 16, scope: !4528)
!4603 = !DILocation(line: 406, column: 12, scope: !4528)
!4604 = !DILocation(line: 406, column: 5, scope: !4528)
!4605 = distinct !DISubprogram(name: "get_bits_long", scope: !1665, file: !1665, line: 531, type: !4529, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4606 = !DILocalVariable(name: "s", arg: 1, scope: !4605, file: !1665, line: 531, type: !3815)
!4607 = !DILocation(line: 531, column: 57, scope: !4605)
!4608 = !DILocalVariable(name: "n", arg: 2, scope: !4605, file: !1665, line: 531, type: !905)
!4609 = !DILocation(line: 531, column: 64, scope: !4605)
!4610 = !DILocation(line: 534, column: 10, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4605, file: !1665, line: 534, column: 9)
!4612 = !DILocation(line: 534, column: 9, scope: !4605)
!4613 = !DILocation(line: 535, column: 9, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4611, file: !1665, line: 534, column: 13)
!4615 = !DILocation(line: 540, column: 16, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4611, file: !1665, line: 540, column: 16)
!4617 = !DILocation(line: 540, column: 18, scope: !4616)
!4618 = !DILocation(line: 540, column: 16, scope: !4611)
!4619 = !DILocation(line: 541, column: 25, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4616, file: !1665, line: 540, column: 25)
!4621 = !DILocation(line: 541, column: 28, scope: !4620)
!4622 = !DILocation(line: 541, column: 16, scope: !4620)
!4623 = !DILocation(line: 541, column: 9, scope: !4620)
!4624 = !DILocalVariable(name: "ret", scope: !4625, file: !1665, line: 547, type: !902)
!4625 = distinct !DILexicalBlock(scope: !4616, file: !1665, line: 542, column: 12)
!4626 = !DILocation(line: 547, column: 18, scope: !4625)
!4627 = !DILocation(line: 547, column: 33, scope: !4625)
!4628 = !DILocation(line: 547, column: 24, scope: !4625)
!4629 = !DILocation(line: 547, column: 44, scope: !4625)
!4630 = !DILocation(line: 547, column: 46, scope: !4625)
!4631 = !DILocation(line: 547, column: 40, scope: !4625)
!4632 = !DILocation(line: 548, column: 16, scope: !4625)
!4633 = !DILocation(line: 548, column: 31, scope: !4625)
!4634 = !DILocation(line: 548, column: 34, scope: !4625)
!4635 = !DILocation(line: 548, column: 36, scope: !4625)
!4636 = !DILocation(line: 548, column: 22, scope: !4625)
!4637 = !DILocation(line: 548, column: 20, scope: !4625)
!4638 = !DILocation(line: 548, column: 9, scope: !4625)
!4639 = !DILocation(line: 552, column: 1, scope: !4605)
!4640 = distinct !DISubprogram(name: "NEG_USR32", scope: !4641, file: !4641, line: 124, type: !4642, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4641 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!900, !900, !1116}
!4644 = !DILocalVariable(name: "a", arg: 1, scope: !4640, file: !4641, line: 124, type: !900)
!4645 = !DILocation(line: 124, column: 43, scope: !4640)
!4646 = !DILocalVariable(name: "s", arg: 2, scope: !4640, file: !4641, line: 124, type: !1116)
!4647 = !DILocation(line: 124, column: 53, scope: !4640)
!4648 = !DILocation(line: 125, column: 5, scope: !4640)
!4649 = !DILocation(line: 127, column: 29, scope: !4640)
!4650 = !DILocation(line: 127, column: 28, scope: !4640)
!4651 = !DILocation(line: 127, column: 18, scope: !4640)
!4652 = !{i32 201343, i32 201357}
!4653 = !DILocation(line: 129, column: 12, scope: !4640)
!4654 = !DILocation(line: 129, column: 5, scope: !4640)
!4655 = distinct !DISubprogram(name: "tm2_read_tree", scope: !888, file: !888, line: 119, type: !4656, isLocal: true, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!905, !1657, !900, !905, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64, align: 64)
!4659 = !DILocalVariable(name: "ctx", arg: 1, scope: !4655, file: !888, line: 119, type: !1657)
!4660 = !DILocation(line: 119, column: 38, scope: !4655)
!4661 = !DILocalVariable(name: "prefix", arg: 2, scope: !4655, file: !888, line: 119, type: !900)
!4662 = !DILocation(line: 119, column: 52, scope: !4655)
!4663 = !DILocalVariable(name: "length", arg: 3, scope: !4655, file: !888, line: 119, type: !905)
!4664 = !DILocation(line: 119, column: 64, scope: !4655)
!4665 = !DILocalVariable(name: "huff", arg: 4, scope: !4655, file: !888, line: 119, type: !4658)
!4666 = !DILocation(line: 119, column: 81, scope: !4655)
!4667 = !DILocalVariable(name: "ret", scope: !4655, file: !888, line: 121, type: !905)
!4668 = !DILocation(line: 121, column: 9, scope: !4655)
!4669 = !DILocalVariable(name: "ret2", scope: !4655, file: !888, line: 121, type: !905)
!4670 = !DILocation(line: 121, column: 14, scope: !4655)
!4671 = !DILocation(line: 122, column: 9, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4655, file: !888, line: 122, column: 9)
!4673 = !DILocation(line: 122, column: 18, scope: !4672)
!4674 = !DILocation(line: 122, column: 24, scope: !4672)
!4675 = !DILocation(line: 122, column: 16, scope: !4672)
!4676 = !DILocation(line: 122, column: 9, scope: !4655)
!4677 = !DILocation(line: 123, column: 16, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4672, file: !888, line: 122, column: 34)
!4679 = !DILocation(line: 123, column: 21, scope: !4678)
!4680 = !DILocation(line: 124, column: 16, scope: !4678)
!4681 = !DILocation(line: 124, column: 22, scope: !4678)
!4682 = !DILocation(line: 123, column: 9, scope: !4678)
!4683 = !DILocation(line: 125, column: 9, scope: !4678)
!4684 = !DILocation(line: 128, column: 21, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4655, file: !888, line: 128, column: 9)
!4686 = !DILocation(line: 128, column: 26, scope: !4685)
!4687 = !DILocation(line: 128, column: 10, scope: !4685)
!4688 = !DILocation(line: 128, column: 9, scope: !4655)
!4689 = !DILocation(line: 129, column: 13, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !888, line: 129, column: 13)
!4691 = distinct !DILexicalBlock(scope: !4685, file: !888, line: 128, column: 31)
!4692 = !DILocation(line: 129, column: 20, scope: !4690)
!4693 = !DILocation(line: 129, column: 13, scope: !4691)
!4694 = !DILocation(line: 130, column: 20, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4690, file: !888, line: 129, column: 26)
!4696 = !DILocation(line: 131, column: 9, scope: !4695)
!4697 = !DILocation(line: 132, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4691, file: !888, line: 132, column: 13)
!4699 = !DILocation(line: 132, column: 19, scope: !4698)
!4700 = !DILocation(line: 132, column: 26, scope: !4698)
!4701 = !DILocation(line: 132, column: 32, scope: !4698)
!4702 = !DILocation(line: 132, column: 23, scope: !4698)
!4703 = !DILocation(line: 132, column: 13, scope: !4691)
!4704 = !DILocation(line: 133, column: 20, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !888, line: 132, column: 41)
!4706 = !DILocation(line: 133, column: 25, scope: !4705)
!4707 = !DILocation(line: 133, column: 13, scope: !4705)
!4708 = !DILocation(line: 134, column: 13, scope: !4705)
!4709 = !DILocation(line: 136, column: 48, scope: !4691)
!4710 = !DILocation(line: 136, column: 53, scope: !4691)
!4711 = !DILocation(line: 136, column: 57, scope: !4691)
!4712 = !DILocation(line: 136, column: 63, scope: !4691)
!4713 = !DILocation(line: 136, column: 33, scope: !4691)
!4714 = !DILocation(line: 136, column: 20, scope: !4691)
!4715 = !DILocation(line: 136, column: 26, scope: !4691)
!4716 = !DILocation(line: 136, column: 9, scope: !4691)
!4717 = !DILocation(line: 136, column: 15, scope: !4691)
!4718 = !DILocation(line: 136, column: 31, scope: !4691)
!4719 = !DILocation(line: 137, column: 33, scope: !4691)
!4720 = !DILocation(line: 137, column: 20, scope: !4691)
!4721 = !DILocation(line: 137, column: 26, scope: !4691)
!4722 = !DILocation(line: 137, column: 9, scope: !4691)
!4723 = !DILocation(line: 137, column: 15, scope: !4691)
!4724 = !DILocation(line: 137, column: 31, scope: !4691)
!4725 = !DILocation(line: 138, column: 33, scope: !4691)
!4726 = !DILocation(line: 138, column: 20, scope: !4691)
!4727 = !DILocation(line: 138, column: 26, scope: !4691)
!4728 = !DILocation(line: 138, column: 9, scope: !4691)
!4729 = !DILocation(line: 138, column: 15, scope: !4691)
!4730 = !DILocation(line: 138, column: 31, scope: !4691)
!4731 = !DILocation(line: 139, column: 9, scope: !4691)
!4732 = !DILocation(line: 139, column: 15, scope: !4691)
!4733 = !DILocation(line: 139, column: 18, scope: !4691)
!4734 = !DILocation(line: 140, column: 16, scope: !4691)
!4735 = !DILocation(line: 140, column: 9, scope: !4691)
!4736 = !DILocation(line: 142, column: 35, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !888, line: 142, column: 13)
!4738 = distinct !DILexicalBlock(scope: !4685, file: !888, line: 141, column: 12)
!4739 = !DILocation(line: 142, column: 40, scope: !4737)
!4740 = !DILocation(line: 142, column: 47, scope: !4737)
!4741 = !DILocation(line: 142, column: 53, scope: !4737)
!4742 = !DILocation(line: 142, column: 60, scope: !4737)
!4743 = !DILocation(line: 142, column: 65, scope: !4737)
!4744 = !DILocation(line: 142, column: 21, scope: !4737)
!4745 = !DILocation(line: 142, column: 19, scope: !4737)
!4746 = !DILocation(line: 142, column: 72, scope: !4737)
!4747 = !DILocation(line: 142, column: 13, scope: !4738)
!4748 = !DILocation(line: 143, column: 20, scope: !4737)
!4749 = !DILocation(line: 143, column: 13, scope: !4737)
!4750 = !DILocation(line: 144, column: 34, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4738, file: !888, line: 144, column: 13)
!4752 = !DILocation(line: 144, column: 40, scope: !4751)
!4753 = !DILocation(line: 144, column: 47, scope: !4751)
!4754 = !DILocation(line: 144, column: 53, scope: !4751)
!4755 = !DILocation(line: 144, column: 58, scope: !4751)
!4756 = !DILocation(line: 144, column: 65, scope: !4751)
!4757 = !DILocation(line: 144, column: 70, scope: !4751)
!4758 = !DILocation(line: 144, column: 20, scope: !4751)
!4759 = !DILocation(line: 144, column: 18, scope: !4751)
!4760 = !DILocation(line: 144, column: 77, scope: !4751)
!4761 = !DILocation(line: 144, column: 13, scope: !4738)
!4762 = !DILocation(line: 145, column: 20, scope: !4751)
!4763 = !DILocation(line: 145, column: 13, scope: !4751)
!4764 = !DILocation(line: 147, column: 14, scope: !4655)
!4765 = !DILocation(line: 147, column: 22, scope: !4655)
!4766 = !DILocation(line: 147, column: 19, scope: !4655)
!4767 = !DILocation(line: 147, column: 13, scope: !4655)
!4768 = !DILocation(line: 147, column: 31, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4655, file: !888, discriminator: 1)
!4770 = !DILocation(line: 147, column: 13, scope: !4769)
!4771 = !DILocation(line: 147, column: 39, scope: !4772)
!4772 = !DILexicalBlockFile(scope: !4655, file: !888, discriminator: 2)
!4773 = !DILocation(line: 147, column: 13, scope: !4772)
!4774 = !DILocation(line: 147, column: 13, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4655, file: !888, discriminator: 3)
!4776 = !DILocation(line: 147, column: 5, scope: !4775)
!4777 = !DILocation(line: 148, column: 1, scope: !4655)
!4778 = distinct !DISubprogram(name: "get_bits1", scope: !1665, file: !1665, line: 487, type: !4779, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!902, !3815}
!4781 = !DILocalVariable(name: "s", arg: 1, scope: !4778, file: !1665, line: 487, type: !3815)
!4782 = !DILocation(line: 487, column: 53, scope: !4778)
!4783 = !DILocalVariable(name: "index", scope: !4778, file: !1665, line: 499, type: !902)
!4784 = !DILocation(line: 499, column: 18, scope: !4778)
!4785 = !DILocation(line: 499, column: 26, scope: !4778)
!4786 = !DILocation(line: 499, column: 29, scope: !4778)
!4787 = !DILocalVariable(name: "result", scope: !4778, file: !1665, line: 500, type: !913)
!4788 = !DILocation(line: 500, column: 13, scope: !4778)
!4789 = !DILocation(line: 500, column: 32, scope: !4778)
!4790 = !DILocation(line: 500, column: 38, scope: !4778)
!4791 = !DILocation(line: 500, column: 22, scope: !4778)
!4792 = !DILocation(line: 500, column: 25, scope: !4778)
!4793 = !DILocation(line: 505, column: 16, scope: !4778)
!4794 = !DILocation(line: 505, column: 22, scope: !4778)
!4795 = !DILocation(line: 505, column: 12, scope: !4778)
!4796 = !DILocation(line: 506, column: 12, scope: !4778)
!4797 = !DILocation(line: 509, column: 9, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4778, file: !1665, line: 509, column: 9)
!4799 = !DILocation(line: 509, column: 12, scope: !4798)
!4800 = !DILocation(line: 509, column: 20, scope: !4798)
!4801 = !DILocation(line: 509, column: 23, scope: !4798)
!4802 = !DILocation(line: 509, column: 18, scope: !4798)
!4803 = !DILocation(line: 509, column: 9, scope: !4778)
!4804 = !DILocation(line: 511, column: 14, scope: !4798)
!4805 = !DILocation(line: 511, column: 9, scope: !4798)
!4806 = !DILocation(line: 512, column: 16, scope: !4778)
!4807 = !DILocation(line: 512, column: 5, scope: !4778)
!4808 = !DILocation(line: 512, column: 8, scope: !4778)
!4809 = !DILocation(line: 512, column: 14, scope: !4778)
!4810 = !DILocation(line: 514, column: 12, scope: !4778)
!4811 = !DILocation(line: 514, column: 5, scope: !4778)
!4812 = distinct !DISubprogram(name: "GET_TOK", scope: !888, file: !888, line: 411, type: !3871, isLocal: true, isDefinition: true, scopeLine: 412, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4813 = !DILocalVariable(name: "ctx", arg: 1, scope: !4812, file: !888, line: 411, type: !1657)
!4814 = !DILocation(line: 411, column: 39, scope: !4812)
!4815 = !DILocalVariable(name: "type", arg: 2, scope: !4812, file: !888, line: 411, type: !905)
!4816 = !DILocation(line: 411, column: 47, scope: !4812)
!4817 = !DILocation(line: 413, column: 23, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4812, file: !888, line: 413, column: 9)
!4819 = !DILocation(line: 413, column: 9, scope: !4818)
!4820 = !DILocation(line: 413, column: 14, scope: !4818)
!4821 = !DILocation(line: 413, column: 46, scope: !4818)
!4822 = !DILocation(line: 413, column: 32, scope: !4818)
!4823 = !DILocation(line: 413, column: 37, scope: !4818)
!4824 = !DILocation(line: 413, column: 29, scope: !4818)
!4825 = !DILocation(line: 413, column: 9, scope: !4812)
!4826 = !DILocation(line: 414, column: 16, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4818, file: !888, line: 413, column: 53)
!4828 = !DILocation(line: 414, column: 21, scope: !4827)
!4829 = !DILocation(line: 414, column: 86, scope: !4827)
!4830 = !DILocation(line: 414, column: 106, scope: !4827)
!4831 = !DILocation(line: 414, column: 92, scope: !4827)
!4832 = !DILocation(line: 414, column: 97, scope: !4827)
!4833 = !DILocation(line: 414, column: 127, scope: !4827)
!4834 = !DILocation(line: 414, column: 113, scope: !4827)
!4835 = !DILocation(line: 414, column: 118, scope: !4827)
!4836 = !DILocation(line: 414, column: 9, scope: !4827)
!4837 = !DILocation(line: 415, column: 9, scope: !4827)
!4838 = !DILocation(line: 415, column: 14, scope: !4827)
!4839 = !DILocation(line: 415, column: 20, scope: !4827)
!4840 = !DILocation(line: 416, column: 9, scope: !4827)
!4841 = !DILocation(line: 418, column: 9, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4812, file: !888, line: 418, column: 9)
!4843 = !DILocation(line: 418, column: 14, scope: !4842)
!4844 = !DILocation(line: 418, column: 9, scope: !4812)
!4845 = !DILocation(line: 419, column: 45, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !888, line: 419, column: 13)
!4847 = distinct !DILexicalBlock(scope: !4842, file: !888, line: 418, column: 26)
!4848 = !DILocation(line: 419, column: 31, scope: !4846)
!4849 = !DILocation(line: 419, column: 36, scope: !4846)
!4850 = !DILocation(line: 419, column: 13, scope: !4846)
!4851 = !DILocation(line: 419, column: 25, scope: !4846)
!4852 = !DILocation(line: 419, column: 18, scope: !4846)
!4853 = !DILocation(line: 419, column: 52, scope: !4846)
!4854 = !DILocation(line: 419, column: 13, scope: !4847)
!4855 = !DILocation(line: 420, column: 20, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4846, file: !888, line: 419, column: 59)
!4857 = !DILocation(line: 420, column: 25, scope: !4856)
!4858 = !DILocation(line: 420, column: 95, scope: !4856)
!4859 = !DILocation(line: 420, column: 81, scope: !4856)
!4860 = !DILocation(line: 420, column: 86, scope: !4856)
!4861 = !DILocation(line: 420, column: 63, scope: !4856)
!4862 = !DILocation(line: 420, column: 75, scope: !4856)
!4863 = !DILocation(line: 420, column: 68, scope: !4856)
!4864 = !DILocation(line: 420, column: 13, scope: !4856)
!4865 = !DILocation(line: 421, column: 13, scope: !4856)
!4866 = !DILocation(line: 423, column: 66, scope: !4847)
!4867 = !DILocation(line: 423, column: 52, scope: !4847)
!4868 = !DILocation(line: 423, column: 57, scope: !4847)
!4869 = !DILocation(line: 423, column: 71, scope: !4847)
!4870 = !DILocation(line: 423, column: 34, scope: !4847)
!4871 = !DILocation(line: 423, column: 46, scope: !4847)
!4872 = !DILocation(line: 423, column: 39, scope: !4847)
!4873 = !DILocation(line: 423, column: 16, scope: !4847)
!4874 = !DILocation(line: 423, column: 28, scope: !4847)
!4875 = !DILocation(line: 423, column: 21, scope: !4847)
!4876 = !DILocation(line: 423, column: 9, scope: !4847)
!4877 = !DILocation(line: 425, column: 44, scope: !4812)
!4878 = !DILocation(line: 425, column: 30, scope: !4812)
!4879 = !DILocation(line: 425, column: 35, scope: !4812)
!4880 = !DILocation(line: 425, column: 49, scope: !4812)
!4881 = !DILocation(line: 425, column: 12, scope: !4812)
!4882 = !DILocation(line: 425, column: 24, scope: !4812)
!4883 = !DILocation(line: 425, column: 17, scope: !4812)
!4884 = !DILocation(line: 425, column: 5, scope: !4812)
!4885 = !DILocation(line: 426, column: 1, scope: !4812)
!4886 = distinct !DISubprogram(name: "tm2_hi_res_block", scope: !888, file: !888, line: 515, type: !4887, isLocal: true, isDefinition: true, scopeLine: 516, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !1657, !1031, !905, !905}
!4889 = !DILocalVariable(name: "ctx", arg: 1, scope: !4886, file: !888, line: 515, type: !1657)
!4890 = !DILocation(line: 515, column: 49, scope: !4886)
!4891 = !DILocalVariable(name: "pic", arg: 2, scope: !4886, file: !888, line: 515, type: !1031)
!4892 = !DILocation(line: 515, column: 63, scope: !4886)
!4893 = !DILocalVariable(name: "bx", arg: 3, scope: !4886, file: !888, line: 515, type: !905)
!4894 = !DILocation(line: 515, column: 72, scope: !4886)
!4895 = !DILocalVariable(name: "by", arg: 4, scope: !4886, file: !888, line: 515, type: !905)
!4896 = !DILocation(line: 515, column: 80, scope: !4886)
!4897 = !DILocalVariable(name: "i", scope: !4886, file: !888, line: 517, type: !905)
!4898 = !DILocation(line: 517, column: 9, scope: !4886)
!4899 = !DILocalVariable(name: "deltas", scope: !4886, file: !888, line: 518, type: !4900)
!4900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 512, align: 32, elements: !4901)
!4901 = !{!4902}
!4902 = !DISubrange(count: 16)
!4903 = !DILocation(line: 518, column: 9, scope: !4886)
!4904 = !DILocalVariable(name: "last", scope: !4886, file: !888, line: 519, type: !1303)
!4905 = !DILocation(line: 519, column: 10, scope: !4886)
!4906 = !DILocalVariable(name: "clast", scope: !4886, file: !888, line: 519, type: !1303)
!4907 = !DILocation(line: 519, column: 17, scope: !4886)
!4908 = !DILocalVariable(name: "Y", scope: !4886, file: !888, line: 519, type: !1303)
!4909 = !DILocation(line: 519, column: 29, scope: !4886)
!4910 = !DILocalVariable(name: "U", scope: !4886, file: !888, line: 519, type: !1303)
!4911 = !DILocation(line: 519, column: 33, scope: !4886)
!4912 = !DILocalVariable(name: "V", scope: !4886, file: !888, line: 519, type: !1303)
!4913 = !DILocation(line: 519, column: 37, scope: !4886)
!4914 = !DILocalVariable(name: "Ystride", scope: !4886, file: !888, line: 519, type: !905)
!4915 = !DILocation(line: 519, column: 44, scope: !4886)
!4916 = !DILocalVariable(name: "Ustride", scope: !4886, file: !888, line: 519, type: !905)
!4917 = !DILocation(line: 519, column: 53, scope: !4886)
!4918 = !DILocalVariable(name: "Vstride", scope: !4886, file: !888, line: 519, type: !905)
!4919 = !DILocation(line: 519, column: 62, scope: !4886)
!4920 = !DILocation(line: 519, column: 81, scope: !4886)
!4921 = !DILocation(line: 519, column: 86, scope: !4886)
!4922 = !DILocation(line: 519, column: 79, scope: !4886)
!4923 = !DILocation(line: 519, column: 106, scope: !4886)
!4924 = !DILocation(line: 519, column: 111, scope: !4886)
!4925 = !DILocation(line: 519, column: 104, scope: !4886)
!4926 = !DILocation(line: 519, column: 132, scope: !4886)
!4927 = !DILocation(line: 519, column: 137, scope: !4886)
!4928 = !DILocation(line: 519, column: 130, scope: !4886)
!4929 = !DILocation(line: 519, column: 153, scope: !4886)
!4930 = !DILocation(line: 519, column: 158, scope: !4886)
!4931 = !DILocation(line: 519, column: 162, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 1)
!4933 = !DILocation(line: 519, column: 167, scope: !4932)
!4934 = !DILocation(line: 519, column: 153, scope: !4932)
!4935 = !DILocation(line: 519, column: 170, scope: !4936)
!4936 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 2)
!4937 = !DILocation(line: 519, column: 175, scope: !4936)
!4938 = !DILocation(line: 519, column: 153, scope: !4936)
!4939 = !DILocation(line: 519, column: 153, scope: !4940)
!4940 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 3)
!4941 = !DILocation(line: 519, column: 181, scope: !4940)
!4942 = !DILocation(line: 519, column: 184, scope: !4940)
!4943 = !DILocation(line: 519, column: 190, scope: !4940)
!4944 = !DILocation(line: 519, column: 188, scope: !4940)
!4945 = !DILocation(line: 519, column: 179, scope: !4940)
!4946 = !DILocation(line: 519, column: 200, scope: !4940)
!4947 = !DILocation(line: 519, column: 203, scope: !4940)
!4948 = !DILocation(line: 519, column: 198, scope: !4940)
!4949 = !DILocation(line: 519, column: 150, scope: !4940)
!4950 = !DILocation(line: 519, column: 213, scope: !4940)
!4951 = !DILocation(line: 519, column: 218, scope: !4940)
!4952 = !DILocation(line: 519, column: 222, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 4)
!4954 = !DILocation(line: 519, column: 227, scope: !4953)
!4955 = !DILocation(line: 519, column: 213, scope: !4953)
!4956 = !DILocation(line: 519, column: 230, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 5)
!4958 = !DILocation(line: 519, column: 235, scope: !4957)
!4959 = !DILocation(line: 519, column: 213, scope: !4957)
!4960 = !DILocation(line: 519, column: 213, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 6)
!4962 = !DILocation(line: 519, column: 241, scope: !4961)
!4963 = !DILocation(line: 519, column: 244, scope: !4961)
!4964 = !DILocation(line: 519, column: 250, scope: !4961)
!4965 = !DILocation(line: 519, column: 248, scope: !4961)
!4966 = !DILocation(line: 519, column: 239, scope: !4961)
!4967 = !DILocation(line: 519, column: 260, scope: !4961)
!4968 = !DILocation(line: 519, column: 263, scope: !4961)
!4969 = !DILocation(line: 519, column: 258, scope: !4961)
!4970 = !DILocation(line: 519, column: 210, scope: !4961)
!4971 = !DILocation(line: 519, column: 273, scope: !4961)
!4972 = !DILocation(line: 519, column: 278, scope: !4961)
!4973 = !DILocation(line: 519, column: 282, scope: !4974)
!4974 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 7)
!4975 = !DILocation(line: 519, column: 287, scope: !4974)
!4976 = !DILocation(line: 519, column: 273, scope: !4974)
!4977 = !DILocation(line: 519, column: 290, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 8)
!4979 = !DILocation(line: 519, column: 295, scope: !4978)
!4980 = !DILocation(line: 519, column: 273, scope: !4978)
!4981 = !DILocation(line: 519, column: 273, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4886, file: !888, discriminator: 9)
!4983 = !DILocation(line: 519, column: 301, scope: !4982)
!4984 = !DILocation(line: 519, column: 304, scope: !4982)
!4985 = !DILocation(line: 519, column: 310, scope: !4982)
!4986 = !DILocation(line: 519, column: 308, scope: !4982)
!4987 = !DILocation(line: 519, column: 299, scope: !4982)
!4988 = !DILocation(line: 519, column: 320, scope: !4982)
!4989 = !DILocation(line: 519, column: 323, scope: !4982)
!4990 = !DILocation(line: 519, column: 318, scope: !4982)
!4991 = !DILocation(line: 519, column: 270, scope: !4982)
!4992 = !DILocation(line: 519, column: 335, scope: !4982)
!4993 = !DILocation(line: 519, column: 340, scope: !4982)
!4994 = !DILocation(line: 519, column: 347, scope: !4982)
!4995 = !DILocation(line: 519, column: 350, scope: !4982)
!4996 = !DILocation(line: 519, column: 345, scope: !4982)
!4997 = !DILocation(line: 519, column: 333, scope: !4982)
!4998 = !DILocation(line: 519, column: 363, scope: !4982)
!4999 = !DILocation(line: 519, column: 368, scope: !4982)
!5000 = !DILocation(line: 519, column: 376, scope: !4982)
!5001 = !DILocation(line: 519, column: 379, scope: !4982)
!5002 = !DILocation(line: 519, column: 374, scope: !4982)
!5003 = !DILocation(line: 519, column: 361, scope: !4982)
!5004 = !DILocation(line: 522, column: 12, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4886, file: !888, line: 522, column: 5)
!5006 = !DILocation(line: 522, column: 10, scope: !5005)
!5007 = !DILocation(line: 522, column: 17, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !5009, file: !888, discriminator: 1)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !888, line: 522, column: 5)
!5010 = !DILocation(line: 522, column: 19, scope: !5008)
!5011 = !DILocation(line: 522, column: 5, scope: !5008)
!5012 = !DILocation(line: 523, column: 29, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !888, line: 522, column: 29)
!5014 = !DILocation(line: 523, column: 21, scope: !5013)
!5015 = !DILocation(line: 523, column: 16, scope: !5013)
!5016 = !DILocation(line: 523, column: 9, scope: !5013)
!5017 = !DILocation(line: 523, column: 19, scope: !5013)
!5018 = !DILocation(line: 524, column: 33, scope: !5013)
!5019 = !DILocation(line: 524, column: 25, scope: !5013)
!5020 = !DILocation(line: 524, column: 16, scope: !5013)
!5021 = !DILocation(line: 524, column: 18, scope: !5013)
!5022 = !DILocation(line: 524, column: 9, scope: !5013)
!5023 = !DILocation(line: 524, column: 23, scope: !5013)
!5024 = !DILocation(line: 525, column: 5, scope: !5013)
!5025 = !DILocation(line: 522, column: 25, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !5009, file: !888, discriminator: 2)
!5027 = !DILocation(line: 522, column: 5, scope: !5026)
!5028 = distinct !{!5028, !5029}
!5029 = !DILocation(line: 522, column: 5, scope: !4886)
!5030 = !DILocation(line: 526, column: 21, scope: !4886)
!5031 = !DILocation(line: 526, column: 24, scope: !4886)
!5032 = !DILocation(line: 526, column: 33, scope: !4886)
!5033 = !DILocation(line: 526, column: 40, scope: !4886)
!5034 = !DILocation(line: 526, column: 45, scope: !4886)
!5035 = !DILocation(line: 526, column: 49, scope: !4886)
!5036 = !DILocation(line: 526, column: 5, scope: !4886)
!5037 = !DILocation(line: 527, column: 21, scope: !4886)
!5038 = !DILocation(line: 527, column: 24, scope: !4886)
!5039 = !DILocation(line: 527, column: 33, scope: !4886)
!5040 = !DILocation(line: 527, column: 39, scope: !4886)
!5041 = !DILocation(line: 527, column: 44, scope: !4886)
!5042 = !DILocation(line: 527, column: 49, scope: !4886)
!5043 = !DILocation(line: 527, column: 52, scope: !4886)
!5044 = !DILocation(line: 527, column: 57, scope: !4886)
!5045 = !DILocation(line: 527, column: 64, scope: !4886)
!5046 = !DILocation(line: 527, column: 5, scope: !4886)
!5047 = !DILocation(line: 530, column: 12, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4886, file: !888, line: 530, column: 5)
!5049 = !DILocation(line: 530, column: 10, scope: !5048)
!5050 = !DILocation(line: 530, column: 17, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5052, file: !888, discriminator: 1)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !888, line: 530, column: 5)
!5053 = !DILocation(line: 530, column: 19, scope: !5051)
!5054 = !DILocation(line: 530, column: 5, scope: !5051)
!5055 = !DILocation(line: 531, column: 29, scope: !5052)
!5056 = !DILocation(line: 531, column: 21, scope: !5052)
!5057 = !DILocation(line: 531, column: 16, scope: !5052)
!5058 = !DILocation(line: 531, column: 9, scope: !5052)
!5059 = !DILocation(line: 531, column: 19, scope: !5052)
!5060 = !DILocation(line: 530, column: 26, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5052, file: !888, discriminator: 2)
!5062 = !DILocation(line: 530, column: 5, scope: !5061)
!5063 = distinct !{!5063, !5064}
!5064 = !DILocation(line: 530, column: 5, scope: !4886)
!5065 = !DILocation(line: 533, column: 22, scope: !4886)
!5066 = !DILocation(line: 533, column: 27, scope: !4886)
!5067 = !DILocation(line: 533, column: 30, scope: !4886)
!5068 = !DILocation(line: 533, column: 39, scope: !4886)
!5069 = !DILocation(line: 533, column: 47, scope: !4886)
!5070 = !DILocation(line: 533, column: 5, scope: !4886)
!5071 = !DILocation(line: 534, column: 1, scope: !4886)
!5072 = distinct !DISubprogram(name: "tm2_med_res_block", scope: !888, file: !888, line: 536, type: !4887, isLocal: true, isDefinition: true, scopeLine: 537, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!5073 = !DILocalVariable(name: "ctx", arg: 1, scope: !5072, file: !888, line: 536, type: !1657)
!5074 = !DILocation(line: 536, column: 50, scope: !5072)
!5075 = !DILocalVariable(name: "pic", arg: 2, scope: !5072, file: !888, line: 536, type: !1031)
!5076 = !DILocation(line: 536, column: 64, scope: !5072)
!5077 = !DILocalVariable(name: "bx", arg: 3, scope: !5072, file: !888, line: 536, type: !905)
!5078 = !DILocation(line: 536, column: 73, scope: !5072)
!5079 = !DILocalVariable(name: "by", arg: 4, scope: !5072, file: !888, line: 536, type: !905)
!5080 = !DILocation(line: 536, column: 81, scope: !5072)
!5081 = !DILocalVariable(name: "i", scope: !5072, file: !888, line: 538, type: !905)
!5082 = !DILocation(line: 538, column: 9, scope: !5072)
!5083 = !DILocalVariable(name: "deltas", scope: !5072, file: !888, line: 539, type: !4900)
!5084 = !DILocation(line: 539, column: 9, scope: !5072)
!5085 = !DILocalVariable(name: "last", scope: !5072, file: !888, line: 540, type: !1303)
!5086 = !DILocation(line: 540, column: 10, scope: !5072)
!5087 = !DILocalVariable(name: "clast", scope: !5072, file: !888, line: 540, type: !1303)
!5088 = !DILocation(line: 540, column: 17, scope: !5072)
!5089 = !DILocalVariable(name: "Y", scope: !5072, file: !888, line: 540, type: !1303)
!5090 = !DILocation(line: 540, column: 29, scope: !5072)
!5091 = !DILocalVariable(name: "U", scope: !5072, file: !888, line: 540, type: !1303)
!5092 = !DILocation(line: 540, column: 33, scope: !5072)
!5093 = !DILocalVariable(name: "V", scope: !5072, file: !888, line: 540, type: !1303)
!5094 = !DILocation(line: 540, column: 37, scope: !5072)
!5095 = !DILocalVariable(name: "Ystride", scope: !5072, file: !888, line: 540, type: !905)
!5096 = !DILocation(line: 540, column: 44, scope: !5072)
!5097 = !DILocalVariable(name: "Ustride", scope: !5072, file: !888, line: 540, type: !905)
!5098 = !DILocation(line: 540, column: 53, scope: !5072)
!5099 = !DILocalVariable(name: "Vstride", scope: !5072, file: !888, line: 540, type: !905)
!5100 = !DILocation(line: 540, column: 62, scope: !5072)
!5101 = !DILocation(line: 540, column: 81, scope: !5072)
!5102 = !DILocation(line: 540, column: 86, scope: !5072)
!5103 = !DILocation(line: 540, column: 79, scope: !5072)
!5104 = !DILocation(line: 540, column: 106, scope: !5072)
!5105 = !DILocation(line: 540, column: 111, scope: !5072)
!5106 = !DILocation(line: 540, column: 104, scope: !5072)
!5107 = !DILocation(line: 540, column: 132, scope: !5072)
!5108 = !DILocation(line: 540, column: 137, scope: !5072)
!5109 = !DILocation(line: 540, column: 130, scope: !5072)
!5110 = !DILocation(line: 540, column: 153, scope: !5072)
!5111 = !DILocation(line: 540, column: 158, scope: !5072)
!5112 = !DILocation(line: 540, column: 162, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 1)
!5114 = !DILocation(line: 540, column: 167, scope: !5113)
!5115 = !DILocation(line: 540, column: 153, scope: !5113)
!5116 = !DILocation(line: 540, column: 170, scope: !5117)
!5117 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 2)
!5118 = !DILocation(line: 540, column: 175, scope: !5117)
!5119 = !DILocation(line: 540, column: 153, scope: !5117)
!5120 = !DILocation(line: 540, column: 153, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 3)
!5122 = !DILocation(line: 540, column: 181, scope: !5121)
!5123 = !DILocation(line: 540, column: 184, scope: !5121)
!5124 = !DILocation(line: 540, column: 190, scope: !5121)
!5125 = !DILocation(line: 540, column: 188, scope: !5121)
!5126 = !DILocation(line: 540, column: 179, scope: !5121)
!5127 = !DILocation(line: 540, column: 200, scope: !5121)
!5128 = !DILocation(line: 540, column: 203, scope: !5121)
!5129 = !DILocation(line: 540, column: 198, scope: !5121)
!5130 = !DILocation(line: 540, column: 150, scope: !5121)
!5131 = !DILocation(line: 540, column: 213, scope: !5121)
!5132 = !DILocation(line: 540, column: 218, scope: !5121)
!5133 = !DILocation(line: 540, column: 222, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 4)
!5135 = !DILocation(line: 540, column: 227, scope: !5134)
!5136 = !DILocation(line: 540, column: 213, scope: !5134)
!5137 = !DILocation(line: 540, column: 230, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 5)
!5139 = !DILocation(line: 540, column: 235, scope: !5138)
!5140 = !DILocation(line: 540, column: 213, scope: !5138)
!5141 = !DILocation(line: 540, column: 213, scope: !5142)
!5142 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 6)
!5143 = !DILocation(line: 540, column: 241, scope: !5142)
!5144 = !DILocation(line: 540, column: 244, scope: !5142)
!5145 = !DILocation(line: 540, column: 250, scope: !5142)
!5146 = !DILocation(line: 540, column: 248, scope: !5142)
!5147 = !DILocation(line: 540, column: 239, scope: !5142)
!5148 = !DILocation(line: 540, column: 260, scope: !5142)
!5149 = !DILocation(line: 540, column: 263, scope: !5142)
!5150 = !DILocation(line: 540, column: 258, scope: !5142)
!5151 = !DILocation(line: 540, column: 210, scope: !5142)
!5152 = !DILocation(line: 540, column: 273, scope: !5142)
!5153 = !DILocation(line: 540, column: 278, scope: !5142)
!5154 = !DILocation(line: 540, column: 282, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 7)
!5156 = !DILocation(line: 540, column: 287, scope: !5155)
!5157 = !DILocation(line: 540, column: 273, scope: !5155)
!5158 = !DILocation(line: 540, column: 290, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 8)
!5160 = !DILocation(line: 540, column: 295, scope: !5159)
!5161 = !DILocation(line: 540, column: 273, scope: !5159)
!5162 = !DILocation(line: 540, column: 273, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !5072, file: !888, discriminator: 9)
!5164 = !DILocation(line: 540, column: 301, scope: !5163)
!5165 = !DILocation(line: 540, column: 304, scope: !5163)
!5166 = !DILocation(line: 540, column: 310, scope: !5163)
!5167 = !DILocation(line: 540, column: 308, scope: !5163)
!5168 = !DILocation(line: 540, column: 299, scope: !5163)
!5169 = !DILocation(line: 540, column: 320, scope: !5163)
!5170 = !DILocation(line: 540, column: 323, scope: !5163)
!5171 = !DILocation(line: 540, column: 318, scope: !5163)
!5172 = !DILocation(line: 540, column: 270, scope: !5163)
!5173 = !DILocation(line: 540, column: 335, scope: !5163)
!5174 = !DILocation(line: 540, column: 340, scope: !5163)
!5175 = !DILocation(line: 540, column: 347, scope: !5163)
!5176 = !DILocation(line: 540, column: 350, scope: !5163)
!5177 = !DILocation(line: 540, column: 345, scope: !5163)
!5178 = !DILocation(line: 540, column: 333, scope: !5163)
!5179 = !DILocation(line: 540, column: 363, scope: !5163)
!5180 = !DILocation(line: 540, column: 368, scope: !5163)
!5181 = !DILocation(line: 540, column: 376, scope: !5163)
!5182 = !DILocation(line: 540, column: 379, scope: !5163)
!5183 = !DILocation(line: 540, column: 374, scope: !5163)
!5184 = !DILocation(line: 540, column: 361, scope: !5163)
!5185 = !DILocation(line: 543, column: 25, scope: !5072)
!5186 = !DILocation(line: 543, column: 17, scope: !5072)
!5187 = !DILocation(line: 543, column: 5, scope: !5072)
!5188 = !DILocation(line: 543, column: 15, scope: !5072)
!5189 = !DILocation(line: 544, column: 29, scope: !5072)
!5190 = !DILocation(line: 544, column: 39, scope: !5072)
!5191 = !DILocation(line: 544, column: 17, scope: !5072)
!5192 = !DILocation(line: 544, column: 27, scope: !5072)
!5193 = !DILocation(line: 544, column: 5, scope: !5072)
!5194 = !DILocation(line: 544, column: 15, scope: !5072)
!5195 = !DILocation(line: 545, column: 20, scope: !5072)
!5196 = !DILocation(line: 545, column: 23, scope: !5072)
!5197 = !DILocation(line: 545, column: 32, scope: !5072)
!5198 = !DILocation(line: 545, column: 39, scope: !5072)
!5199 = !DILocation(line: 545, column: 44, scope: !5072)
!5200 = !DILocation(line: 545, column: 48, scope: !5072)
!5201 = !DILocation(line: 545, column: 56, scope: !5072)
!5202 = !DILocation(line: 545, column: 5, scope: !5072)
!5203 = !DILocation(line: 547, column: 25, scope: !5072)
!5204 = !DILocation(line: 547, column: 17, scope: !5072)
!5205 = !DILocation(line: 547, column: 5, scope: !5072)
!5206 = !DILocation(line: 547, column: 15, scope: !5072)
!5207 = !DILocation(line: 548, column: 29, scope: !5072)
!5208 = !DILocation(line: 548, column: 39, scope: !5072)
!5209 = !DILocation(line: 548, column: 17, scope: !5072)
!5210 = !DILocation(line: 548, column: 27, scope: !5072)
!5211 = !DILocation(line: 548, column: 5, scope: !5072)
!5212 = !DILocation(line: 548, column: 15, scope: !5072)
!5213 = !DILocation(line: 549, column: 20, scope: !5072)
!5214 = !DILocation(line: 549, column: 23, scope: !5072)
!5215 = !DILocation(line: 549, column: 32, scope: !5072)
!5216 = !DILocation(line: 549, column: 38, scope: !5072)
!5217 = !DILocation(line: 549, column: 43, scope: !5072)
!5218 = !DILocation(line: 549, column: 48, scope: !5072)
!5219 = !DILocation(line: 549, column: 51, scope: !5072)
!5220 = !DILocation(line: 549, column: 56, scope: !5072)
!5221 = !DILocation(line: 549, column: 64, scope: !5072)
!5222 = !DILocation(line: 549, column: 5, scope: !5072)
!5223 = !DILocation(line: 552, column: 12, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5072, file: !888, line: 552, column: 5)
!5225 = !DILocation(line: 552, column: 10, scope: !5224)
!5226 = !DILocation(line: 552, column: 17, scope: !5227)
!5227 = !DILexicalBlockFile(scope: !5228, file: !888, discriminator: 1)
!5228 = distinct !DILexicalBlock(scope: !5224, file: !888, line: 552, column: 5)
!5229 = !DILocation(line: 552, column: 19, scope: !5227)
!5230 = !DILocation(line: 552, column: 5, scope: !5227)
!5231 = !DILocation(line: 553, column: 29, scope: !5228)
!5232 = !DILocation(line: 553, column: 21, scope: !5228)
!5233 = !DILocation(line: 553, column: 16, scope: !5228)
!5234 = !DILocation(line: 553, column: 9, scope: !5228)
!5235 = !DILocation(line: 553, column: 19, scope: !5228)
!5236 = !DILocation(line: 552, column: 26, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !5228, file: !888, discriminator: 2)
!5238 = !DILocation(line: 552, column: 5, scope: !5237)
!5239 = distinct !{!5239, !5240}
!5240 = !DILocation(line: 552, column: 5, scope: !5072)
!5241 = !DILocation(line: 555, column: 22, scope: !5072)
!5242 = !DILocation(line: 555, column: 27, scope: !5072)
!5243 = !DILocation(line: 555, column: 30, scope: !5072)
!5244 = !DILocation(line: 555, column: 39, scope: !5072)
!5245 = !DILocation(line: 555, column: 47, scope: !5072)
!5246 = !DILocation(line: 555, column: 5, scope: !5072)
!5247 = !DILocation(line: 556, column: 1, scope: !5072)
!5248 = distinct !DISubprogram(name: "tm2_low_res_block", scope: !888, file: !888, line: 558, type: !4887, isLocal: true, isDefinition: true, scopeLine: 559, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!5249 = !DILocalVariable(name: "ctx", arg: 1, scope: !5248, file: !888, line: 558, type: !1657)
!5250 = !DILocation(line: 558, column: 50, scope: !5248)
!5251 = !DILocalVariable(name: "pic", arg: 2, scope: !5248, file: !888, line: 558, type: !1031)
!5252 = !DILocation(line: 558, column: 64, scope: !5248)
!5253 = !DILocalVariable(name: "bx", arg: 3, scope: !5248, file: !888, line: 558, type: !905)
!5254 = !DILocation(line: 558, column: 73, scope: !5248)
!5255 = !DILocalVariable(name: "by", arg: 4, scope: !5248, file: !888, line: 558, type: !905)
!5256 = !DILocation(line: 558, column: 81, scope: !5248)
!5257 = !DILocalVariable(name: "i", scope: !5248, file: !888, line: 560, type: !905)
!5258 = !DILocation(line: 560, column: 9, scope: !5248)
!5259 = !DILocalVariable(name: "t1", scope: !5248, file: !888, line: 561, type: !905)
!5260 = !DILocation(line: 561, column: 9, scope: !5248)
!5261 = !DILocalVariable(name: "t2", scope: !5248, file: !888, line: 561, type: !905)
!5262 = !DILocation(line: 561, column: 13, scope: !5248)
!5263 = !DILocalVariable(name: "deltas", scope: !5248, file: !888, line: 562, type: !4900)
!5264 = !DILocation(line: 562, column: 9, scope: !5248)
!5265 = !DILocalVariable(name: "last", scope: !5248, file: !888, line: 563, type: !1303)
!5266 = !DILocation(line: 563, column: 10, scope: !5248)
!5267 = !DILocalVariable(name: "clast", scope: !5248, file: !888, line: 563, type: !1303)
!5268 = !DILocation(line: 563, column: 17, scope: !5248)
!5269 = !DILocalVariable(name: "Y", scope: !5248, file: !888, line: 563, type: !1303)
!5270 = !DILocation(line: 563, column: 29, scope: !5248)
!5271 = !DILocalVariable(name: "U", scope: !5248, file: !888, line: 563, type: !1303)
!5272 = !DILocation(line: 563, column: 33, scope: !5248)
!5273 = !DILocalVariable(name: "V", scope: !5248, file: !888, line: 563, type: !1303)
!5274 = !DILocation(line: 563, column: 37, scope: !5248)
!5275 = !DILocalVariable(name: "Ystride", scope: !5248, file: !888, line: 563, type: !905)
!5276 = !DILocation(line: 563, column: 44, scope: !5248)
!5277 = !DILocalVariable(name: "Ustride", scope: !5248, file: !888, line: 563, type: !905)
!5278 = !DILocation(line: 563, column: 53, scope: !5248)
!5279 = !DILocalVariable(name: "Vstride", scope: !5248, file: !888, line: 563, type: !905)
!5280 = !DILocation(line: 563, column: 62, scope: !5248)
!5281 = !DILocation(line: 563, column: 81, scope: !5248)
!5282 = !DILocation(line: 563, column: 86, scope: !5248)
!5283 = !DILocation(line: 563, column: 79, scope: !5248)
!5284 = !DILocation(line: 563, column: 106, scope: !5248)
!5285 = !DILocation(line: 563, column: 111, scope: !5248)
!5286 = !DILocation(line: 563, column: 104, scope: !5248)
!5287 = !DILocation(line: 563, column: 132, scope: !5248)
!5288 = !DILocation(line: 563, column: 137, scope: !5248)
!5289 = !DILocation(line: 563, column: 130, scope: !5248)
!5290 = !DILocation(line: 563, column: 153, scope: !5248)
!5291 = !DILocation(line: 563, column: 158, scope: !5248)
!5292 = !DILocation(line: 563, column: 162, scope: !5293)
!5293 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 1)
!5294 = !DILocation(line: 563, column: 167, scope: !5293)
!5295 = !DILocation(line: 563, column: 153, scope: !5293)
!5296 = !DILocation(line: 563, column: 170, scope: !5297)
!5297 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 2)
!5298 = !DILocation(line: 563, column: 175, scope: !5297)
!5299 = !DILocation(line: 563, column: 153, scope: !5297)
!5300 = !DILocation(line: 563, column: 153, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 3)
!5302 = !DILocation(line: 563, column: 181, scope: !5301)
!5303 = !DILocation(line: 563, column: 184, scope: !5301)
!5304 = !DILocation(line: 563, column: 190, scope: !5301)
!5305 = !DILocation(line: 563, column: 188, scope: !5301)
!5306 = !DILocation(line: 563, column: 179, scope: !5301)
!5307 = !DILocation(line: 563, column: 200, scope: !5301)
!5308 = !DILocation(line: 563, column: 203, scope: !5301)
!5309 = !DILocation(line: 563, column: 198, scope: !5301)
!5310 = !DILocation(line: 563, column: 150, scope: !5301)
!5311 = !DILocation(line: 563, column: 213, scope: !5301)
!5312 = !DILocation(line: 563, column: 218, scope: !5301)
!5313 = !DILocation(line: 563, column: 222, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 4)
!5315 = !DILocation(line: 563, column: 227, scope: !5314)
!5316 = !DILocation(line: 563, column: 213, scope: !5314)
!5317 = !DILocation(line: 563, column: 230, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 5)
!5319 = !DILocation(line: 563, column: 235, scope: !5318)
!5320 = !DILocation(line: 563, column: 213, scope: !5318)
!5321 = !DILocation(line: 563, column: 213, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 6)
!5323 = !DILocation(line: 563, column: 241, scope: !5322)
!5324 = !DILocation(line: 563, column: 244, scope: !5322)
!5325 = !DILocation(line: 563, column: 250, scope: !5322)
!5326 = !DILocation(line: 563, column: 248, scope: !5322)
!5327 = !DILocation(line: 563, column: 239, scope: !5322)
!5328 = !DILocation(line: 563, column: 260, scope: !5322)
!5329 = !DILocation(line: 563, column: 263, scope: !5322)
!5330 = !DILocation(line: 563, column: 258, scope: !5322)
!5331 = !DILocation(line: 563, column: 210, scope: !5322)
!5332 = !DILocation(line: 563, column: 273, scope: !5322)
!5333 = !DILocation(line: 563, column: 278, scope: !5322)
!5334 = !DILocation(line: 563, column: 282, scope: !5335)
!5335 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 7)
!5336 = !DILocation(line: 563, column: 287, scope: !5335)
!5337 = !DILocation(line: 563, column: 273, scope: !5335)
!5338 = !DILocation(line: 563, column: 290, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 8)
!5340 = !DILocation(line: 563, column: 295, scope: !5339)
!5341 = !DILocation(line: 563, column: 273, scope: !5339)
!5342 = !DILocation(line: 563, column: 273, scope: !5343)
!5343 = !DILexicalBlockFile(scope: !5248, file: !888, discriminator: 9)
!5344 = !DILocation(line: 563, column: 301, scope: !5343)
!5345 = !DILocation(line: 563, column: 304, scope: !5343)
!5346 = !DILocation(line: 563, column: 310, scope: !5343)
!5347 = !DILocation(line: 563, column: 308, scope: !5343)
!5348 = !DILocation(line: 563, column: 299, scope: !5343)
!5349 = !DILocation(line: 563, column: 320, scope: !5343)
!5350 = !DILocation(line: 563, column: 323, scope: !5343)
!5351 = !DILocation(line: 563, column: 318, scope: !5343)
!5352 = !DILocation(line: 563, column: 270, scope: !5343)
!5353 = !DILocation(line: 563, column: 335, scope: !5343)
!5354 = !DILocation(line: 563, column: 340, scope: !5343)
!5355 = !DILocation(line: 563, column: 347, scope: !5343)
!5356 = !DILocation(line: 563, column: 350, scope: !5343)
!5357 = !DILocation(line: 563, column: 345, scope: !5343)
!5358 = !DILocation(line: 563, column: 333, scope: !5343)
!5359 = !DILocation(line: 563, column: 363, scope: !5343)
!5360 = !DILocation(line: 563, column: 368, scope: !5343)
!5361 = !DILocation(line: 563, column: 376, scope: !5343)
!5362 = !DILocation(line: 563, column: 379, scope: !5343)
!5363 = !DILocation(line: 563, column: 374, scope: !5343)
!5364 = !DILocation(line: 563, column: 361, scope: !5343)
!5365 = !DILocation(line: 566, column: 25, scope: !5248)
!5366 = !DILocation(line: 566, column: 17, scope: !5248)
!5367 = !DILocation(line: 566, column: 5, scope: !5248)
!5368 = !DILocation(line: 566, column: 15, scope: !5248)
!5369 = !DILocation(line: 567, column: 29, scope: !5248)
!5370 = !DILocation(line: 567, column: 39, scope: !5248)
!5371 = !DILocation(line: 567, column: 17, scope: !5248)
!5372 = !DILocation(line: 567, column: 27, scope: !5248)
!5373 = !DILocation(line: 567, column: 5, scope: !5248)
!5374 = !DILocation(line: 567, column: 15, scope: !5248)
!5375 = !DILocation(line: 568, column: 20, scope: !5248)
!5376 = !DILocation(line: 568, column: 23, scope: !5248)
!5377 = !DILocation(line: 568, column: 32, scope: !5248)
!5378 = !DILocation(line: 568, column: 39, scope: !5248)
!5379 = !DILocation(line: 568, column: 44, scope: !5248)
!5380 = !DILocation(line: 568, column: 48, scope: !5248)
!5381 = !DILocation(line: 568, column: 56, scope: !5248)
!5382 = !DILocation(line: 568, column: 5, scope: !5248)
!5383 = !DILocation(line: 570, column: 25, scope: !5248)
!5384 = !DILocation(line: 570, column: 17, scope: !5248)
!5385 = !DILocation(line: 570, column: 5, scope: !5248)
!5386 = !DILocation(line: 570, column: 15, scope: !5248)
!5387 = !DILocation(line: 571, column: 29, scope: !5248)
!5388 = !DILocation(line: 571, column: 39, scope: !5248)
!5389 = !DILocation(line: 571, column: 17, scope: !5248)
!5390 = !DILocation(line: 571, column: 27, scope: !5248)
!5391 = !DILocation(line: 571, column: 5, scope: !5248)
!5392 = !DILocation(line: 571, column: 15, scope: !5248)
!5393 = !DILocation(line: 572, column: 20, scope: !5248)
!5394 = !DILocation(line: 572, column: 23, scope: !5248)
!5395 = !DILocation(line: 572, column: 32, scope: !5248)
!5396 = !DILocation(line: 572, column: 38, scope: !5248)
!5397 = !DILocation(line: 572, column: 43, scope: !5248)
!5398 = !DILocation(line: 572, column: 48, scope: !5248)
!5399 = !DILocation(line: 572, column: 51, scope: !5248)
!5400 = !DILocation(line: 572, column: 56, scope: !5248)
!5401 = !DILocation(line: 572, column: 64, scope: !5248)
!5402 = !DILocation(line: 572, column: 5, scope: !5248)
!5403 = !DILocation(line: 575, column: 12, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5248, file: !888, line: 575, column: 5)
!5405 = !DILocation(line: 575, column: 10, scope: !5404)
!5406 = !DILocation(line: 575, column: 17, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5408, file: !888, discriminator: 1)
!5408 = distinct !DILexicalBlock(scope: !5404, file: !888, line: 575, column: 5)
!5409 = !DILocation(line: 575, column: 19, scope: !5407)
!5410 = !DILocation(line: 575, column: 5, scope: !5407)
!5411 = !DILocation(line: 576, column: 16, scope: !5408)
!5412 = !DILocation(line: 576, column: 9, scope: !5408)
!5413 = !DILocation(line: 576, column: 19, scope: !5408)
!5414 = !DILocation(line: 575, column: 26, scope: !5415)
!5415 = !DILexicalBlockFile(scope: !5408, file: !888, discriminator: 2)
!5416 = !DILocation(line: 575, column: 5, scope: !5415)
!5417 = distinct !{!5417, !5418}
!5418 = !DILocation(line: 575, column: 5, scope: !5248)
!5419 = !DILocation(line: 578, column: 26, scope: !5248)
!5420 = !DILocation(line: 578, column: 18, scope: !5248)
!5421 = !DILocation(line: 578, column: 5, scope: !5248)
!5422 = !DILocation(line: 578, column: 16, scope: !5248)
!5423 = !DILocation(line: 579, column: 26, scope: !5248)
!5424 = !DILocation(line: 579, column: 18, scope: !5248)
!5425 = !DILocation(line: 579, column: 5, scope: !5248)
!5426 = !DILocation(line: 579, column: 16, scope: !5248)
!5427 = !DILocation(line: 580, column: 26, scope: !5248)
!5428 = !DILocation(line: 580, column: 18, scope: !5248)
!5429 = !DILocation(line: 580, column: 5, scope: !5248)
!5430 = !DILocation(line: 580, column: 16, scope: !5248)
!5431 = !DILocation(line: 581, column: 26, scope: !5248)
!5432 = !DILocation(line: 581, column: 18, scope: !5248)
!5433 = !DILocation(line: 581, column: 5, scope: !5248)
!5434 = !DILocation(line: 581, column: 16, scope: !5248)
!5435 = !DILocation(line: 583, column: 9, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5248, file: !888, line: 583, column: 9)
!5437 = !DILocation(line: 583, column: 12, scope: !5436)
!5438 = !DILocation(line: 583, column: 9, scope: !5248)
!5439 = !DILocation(line: 584, column: 20, scope: !5436)
!5440 = !DILocation(line: 584, column: 31, scope: !5436)
!5441 = !DILocation(line: 584, column: 36, scope: !5436)
!5442 = !DILocation(line: 584, column: 29, scope: !5436)
!5443 = !DILocation(line: 584, column: 43, scope: !5436)
!5444 = !DILocation(line: 584, column: 48, scope: !5436)
!5445 = !DILocation(line: 584, column: 41, scope: !5436)
!5446 = !DILocation(line: 584, column: 55, scope: !5436)
!5447 = !DILocation(line: 584, column: 60, scope: !5436)
!5448 = !DILocation(line: 584, column: 53, scope: !5436)
!5449 = !DILocation(line: 584, column: 67, scope: !5436)
!5450 = !DILocation(line: 584, column: 72, scope: !5436)
!5451 = !DILocation(line: 584, column: 65, scope: !5436)
!5452 = !DILocation(line: 584, column: 79, scope: !5436)
!5453 = !DILocation(line: 584, column: 77, scope: !5436)
!5454 = !DILocation(line: 584, column: 88, scope: !5436)
!5455 = !DILocation(line: 584, column: 9, scope: !5436)
!5456 = !DILocation(line: 584, column: 17, scope: !5436)
!5457 = !DILocation(line: 586, column: 20, scope: !5436)
!5458 = !DILocation(line: 586, column: 30, scope: !5436)
!5459 = !DILocation(line: 586, column: 35, scope: !5436)
!5460 = !DILocation(line: 586, column: 28, scope: !5436)
!5461 = !DILocation(line: 586, column: 42, scope: !5436)
!5462 = !DILocation(line: 586, column: 47, scope: !5436)
!5463 = !DILocation(line: 586, column: 40, scope: !5436)
!5464 = !DILocation(line: 586, column: 54, scope: !5436)
!5465 = !DILocation(line: 586, column: 59, scope: !5436)
!5466 = !DILocation(line: 586, column: 52, scope: !5436)
!5467 = !DILocation(line: 586, column: 66, scope: !5436)
!5468 = !DILocation(line: 586, column: 71, scope: !5436)
!5469 = !DILocation(line: 586, column: 64, scope: !5436)
!5470 = !DILocation(line: 586, column: 76, scope: !5436)
!5471 = !DILocation(line: 586, column: 9, scope: !5436)
!5472 = !DILocation(line: 586, column: 17, scope: !5436)
!5473 = !DILocation(line: 587, column: 16, scope: !5248)
!5474 = !DILocation(line: 587, column: 26, scope: !5248)
!5475 = !DILocation(line: 587, column: 24, scope: !5248)
!5476 = !DILocation(line: 587, column: 35, scope: !5248)
!5477 = !DILocation(line: 587, column: 5, scope: !5248)
!5478 = !DILocation(line: 587, column: 13, scope: !5248)
!5479 = !DILocation(line: 589, column: 10, scope: !5248)
!5480 = !DILocation(line: 589, column: 15, scope: !5248)
!5481 = !DILocation(line: 589, column: 22, scope: !5248)
!5482 = !DILocation(line: 589, column: 27, scope: !5248)
!5483 = !DILocation(line: 589, column: 20, scope: !5248)
!5484 = !DILocation(line: 589, column: 8, scope: !5248)
!5485 = !DILocation(line: 590, column: 17, scope: !5248)
!5486 = !DILocation(line: 590, column: 20, scope: !5248)
!5487 = !DILocation(line: 590, column: 5, scope: !5248)
!5488 = !DILocation(line: 590, column: 10, scope: !5248)
!5489 = !DILocation(line: 590, column: 15, scope: !5248)
!5490 = !DILocation(line: 591, column: 17, scope: !5248)
!5491 = !DILocation(line: 591, column: 23, scope: !5248)
!5492 = !DILocation(line: 591, column: 26, scope: !5248)
!5493 = !DILocation(line: 591, column: 20, scope: !5248)
!5494 = !DILocation(line: 591, column: 5, scope: !5248)
!5495 = !DILocation(line: 591, column: 10, scope: !5248)
!5496 = !DILocation(line: 591, column: 15, scope: !5248)
!5497 = !DILocation(line: 592, column: 10, scope: !5248)
!5498 = !DILocation(line: 592, column: 15, scope: !5248)
!5499 = !DILocation(line: 592, column: 22, scope: !5248)
!5500 = !DILocation(line: 592, column: 27, scope: !5248)
!5501 = !DILocation(line: 592, column: 20, scope: !5248)
!5502 = !DILocation(line: 592, column: 8, scope: !5248)
!5503 = !DILocation(line: 593, column: 17, scope: !5248)
!5504 = !DILocation(line: 593, column: 20, scope: !5248)
!5505 = !DILocation(line: 593, column: 5, scope: !5248)
!5506 = !DILocation(line: 593, column: 10, scope: !5248)
!5507 = !DILocation(line: 593, column: 15, scope: !5248)
!5508 = !DILocation(line: 594, column: 17, scope: !5248)
!5509 = !DILocation(line: 594, column: 23, scope: !5248)
!5510 = !DILocation(line: 594, column: 26, scope: !5248)
!5511 = !DILocation(line: 594, column: 20, scope: !5248)
!5512 = !DILocation(line: 594, column: 5, scope: !5248)
!5513 = !DILocation(line: 594, column: 10, scope: !5248)
!5514 = !DILocation(line: 594, column: 15, scope: !5248)
!5515 = !DILocation(line: 596, column: 22, scope: !5248)
!5516 = !DILocation(line: 596, column: 27, scope: !5248)
!5517 = !DILocation(line: 596, column: 30, scope: !5248)
!5518 = !DILocation(line: 596, column: 39, scope: !5248)
!5519 = !DILocation(line: 596, column: 47, scope: !5248)
!5520 = !DILocation(line: 596, column: 5, scope: !5248)
!5521 = !DILocation(line: 597, column: 1, scope: !5248)
!5522 = distinct !DISubprogram(name: "tm2_null_res_block", scope: !888, file: !888, line: 599, type: !4887, isLocal: true, isDefinition: true, scopeLine: 600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!5523 = !DILocalVariable(name: "ctx", arg: 1, scope: !5522, file: !888, line: 599, type: !1657)
!5524 = !DILocation(line: 599, column: 51, scope: !5522)
!5525 = !DILocalVariable(name: "pic", arg: 2, scope: !5522, file: !888, line: 599, type: !1031)
!5526 = !DILocation(line: 599, column: 65, scope: !5522)
!5527 = !DILocalVariable(name: "bx", arg: 3, scope: !5522, file: !888, line: 599, type: !905)
!5528 = !DILocation(line: 599, column: 74, scope: !5522)
!5529 = !DILocalVariable(name: "by", arg: 4, scope: !5522, file: !888, line: 599, type: !905)
!5530 = !DILocation(line: 599, column: 82, scope: !5522)
!5531 = !DILocalVariable(name: "i", scope: !5522, file: !888, line: 601, type: !905)
!5532 = !DILocation(line: 601, column: 9, scope: !5522)
!5533 = !DILocalVariable(name: "ct", scope: !5522, file: !888, line: 602, type: !905)
!5534 = !DILocation(line: 602, column: 9, scope: !5522)
!5535 = !DILocalVariable(name: "left", scope: !5522, file: !888, line: 603, type: !905)
!5536 = !DILocation(line: 603, column: 9, scope: !5522)
!5537 = !DILocalVariable(name: "right", scope: !5522, file: !888, line: 603, type: !905)
!5538 = !DILocation(line: 603, column: 15, scope: !5522)
!5539 = !DILocalVariable(name: "diff", scope: !5522, file: !888, line: 603, type: !905)
!5540 = !DILocation(line: 603, column: 22, scope: !5522)
!5541 = !DILocalVariable(name: "deltas", scope: !5522, file: !888, line: 604, type: !4900)
!5542 = !DILocation(line: 604, column: 9, scope: !5522)
!5543 = !DILocalVariable(name: "last", scope: !5522, file: !888, line: 605, type: !1303)
!5544 = !DILocation(line: 605, column: 10, scope: !5522)
!5545 = !DILocalVariable(name: "clast", scope: !5522, file: !888, line: 605, type: !1303)
!5546 = !DILocation(line: 605, column: 17, scope: !5522)
!5547 = !DILocalVariable(name: "Y", scope: !5522, file: !888, line: 605, type: !1303)
!5548 = !DILocation(line: 605, column: 29, scope: !5522)
!5549 = !DILocalVariable(name: "U", scope: !5522, file: !888, line: 605, type: !1303)
!5550 = !DILocation(line: 605, column: 33, scope: !5522)
!5551 = !DILocalVariable(name: "V", scope: !5522, file: !888, line: 605, type: !1303)
!5552 = !DILocation(line: 605, column: 37, scope: !5522)
!5553 = !DILocalVariable(name: "Ystride", scope: !5522, file: !888, line: 605, type: !905)
!5554 = !DILocation(line: 605, column: 44, scope: !5522)
!5555 = !DILocalVariable(name: "Ustride", scope: !5522, file: !888, line: 605, type: !905)
!5556 = !DILocation(line: 605, column: 53, scope: !5522)
!5557 = !DILocalVariable(name: "Vstride", scope: !5522, file: !888, line: 605, type: !905)
!5558 = !DILocation(line: 605, column: 62, scope: !5522)
!5559 = !DILocation(line: 605, column: 81, scope: !5522)
!5560 = !DILocation(line: 605, column: 86, scope: !5522)
!5561 = !DILocation(line: 605, column: 79, scope: !5522)
!5562 = !DILocation(line: 605, column: 106, scope: !5522)
!5563 = !DILocation(line: 605, column: 111, scope: !5522)
!5564 = !DILocation(line: 605, column: 104, scope: !5522)
!5565 = !DILocation(line: 605, column: 132, scope: !5522)
!5566 = !DILocation(line: 605, column: 137, scope: !5522)
!5567 = !DILocation(line: 605, column: 130, scope: !5522)
!5568 = !DILocation(line: 605, column: 153, scope: !5522)
!5569 = !DILocation(line: 605, column: 158, scope: !5522)
!5570 = !DILocation(line: 605, column: 162, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 1)
!5572 = !DILocation(line: 605, column: 167, scope: !5571)
!5573 = !DILocation(line: 605, column: 153, scope: !5571)
!5574 = !DILocation(line: 605, column: 170, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 2)
!5576 = !DILocation(line: 605, column: 175, scope: !5575)
!5577 = !DILocation(line: 605, column: 153, scope: !5575)
!5578 = !DILocation(line: 605, column: 153, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 3)
!5580 = !DILocation(line: 605, column: 181, scope: !5579)
!5581 = !DILocation(line: 605, column: 184, scope: !5579)
!5582 = !DILocation(line: 605, column: 190, scope: !5579)
!5583 = !DILocation(line: 605, column: 188, scope: !5579)
!5584 = !DILocation(line: 605, column: 179, scope: !5579)
!5585 = !DILocation(line: 605, column: 200, scope: !5579)
!5586 = !DILocation(line: 605, column: 203, scope: !5579)
!5587 = !DILocation(line: 605, column: 198, scope: !5579)
!5588 = !DILocation(line: 605, column: 150, scope: !5579)
!5589 = !DILocation(line: 605, column: 213, scope: !5579)
!5590 = !DILocation(line: 605, column: 218, scope: !5579)
!5591 = !DILocation(line: 605, column: 222, scope: !5592)
!5592 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 4)
!5593 = !DILocation(line: 605, column: 227, scope: !5592)
!5594 = !DILocation(line: 605, column: 213, scope: !5592)
!5595 = !DILocation(line: 605, column: 230, scope: !5596)
!5596 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 5)
!5597 = !DILocation(line: 605, column: 235, scope: !5596)
!5598 = !DILocation(line: 605, column: 213, scope: !5596)
!5599 = !DILocation(line: 605, column: 213, scope: !5600)
!5600 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 6)
!5601 = !DILocation(line: 605, column: 241, scope: !5600)
!5602 = !DILocation(line: 605, column: 244, scope: !5600)
!5603 = !DILocation(line: 605, column: 250, scope: !5600)
!5604 = !DILocation(line: 605, column: 248, scope: !5600)
!5605 = !DILocation(line: 605, column: 239, scope: !5600)
!5606 = !DILocation(line: 605, column: 260, scope: !5600)
!5607 = !DILocation(line: 605, column: 263, scope: !5600)
!5608 = !DILocation(line: 605, column: 258, scope: !5600)
!5609 = !DILocation(line: 605, column: 210, scope: !5600)
!5610 = !DILocation(line: 605, column: 273, scope: !5600)
!5611 = !DILocation(line: 605, column: 278, scope: !5600)
!5612 = !DILocation(line: 605, column: 282, scope: !5613)
!5613 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 7)
!5614 = !DILocation(line: 605, column: 287, scope: !5613)
!5615 = !DILocation(line: 605, column: 273, scope: !5613)
!5616 = !DILocation(line: 605, column: 290, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 8)
!5618 = !DILocation(line: 605, column: 295, scope: !5617)
!5619 = !DILocation(line: 605, column: 273, scope: !5617)
!5620 = !DILocation(line: 605, column: 273, scope: !5621)
!5621 = !DILexicalBlockFile(scope: !5522, file: !888, discriminator: 9)
!5622 = !DILocation(line: 605, column: 301, scope: !5621)
!5623 = !DILocation(line: 605, column: 304, scope: !5621)
!5624 = !DILocation(line: 605, column: 310, scope: !5621)
!5625 = !DILocation(line: 605, column: 308, scope: !5621)
!5626 = !DILocation(line: 605, column: 299, scope: !5621)
!5627 = !DILocation(line: 605, column: 320, scope: !5621)
!5628 = !DILocation(line: 605, column: 323, scope: !5621)
!5629 = !DILocation(line: 605, column: 318, scope: !5621)
!5630 = !DILocation(line: 605, column: 270, scope: !5621)
!5631 = !DILocation(line: 605, column: 335, scope: !5621)
!5632 = !DILocation(line: 605, column: 340, scope: !5621)
!5633 = !DILocation(line: 605, column: 347, scope: !5621)
!5634 = !DILocation(line: 605, column: 350, scope: !5621)
!5635 = !DILocation(line: 605, column: 345, scope: !5621)
!5636 = !DILocation(line: 605, column: 333, scope: !5621)
!5637 = !DILocation(line: 605, column: 363, scope: !5621)
!5638 = !DILocation(line: 605, column: 368, scope: !5621)
!5639 = !DILocation(line: 605, column: 376, scope: !5621)
!5640 = !DILocation(line: 605, column: 379, scope: !5621)
!5641 = !DILocation(line: 605, column: 374, scope: !5621)
!5642 = !DILocation(line: 605, column: 361, scope: !5621)
!5643 = !DILocation(line: 608, column: 41, scope: !5522)
!5644 = !DILocation(line: 608, column: 51, scope: !5522)
!5645 = !DILocation(line: 608, column: 29, scope: !5522)
!5646 = !DILocation(line: 608, column: 39, scope: !5522)
!5647 = !DILocation(line: 608, column: 17, scope: !5522)
!5648 = !DILocation(line: 608, column: 27, scope: !5522)
!5649 = !DILocation(line: 608, column: 5, scope: !5522)
!5650 = !DILocation(line: 608, column: 15, scope: !5522)
!5651 = !DILocation(line: 609, column: 20, scope: !5522)
!5652 = !DILocation(line: 609, column: 23, scope: !5522)
!5653 = !DILocation(line: 609, column: 32, scope: !5522)
!5654 = !DILocation(line: 609, column: 39, scope: !5522)
!5655 = !DILocation(line: 609, column: 44, scope: !5522)
!5656 = !DILocation(line: 609, column: 48, scope: !5522)
!5657 = !DILocation(line: 609, column: 56, scope: !5522)
!5658 = !DILocation(line: 609, column: 5, scope: !5522)
!5659 = !DILocation(line: 611, column: 41, scope: !5522)
!5660 = !DILocation(line: 611, column: 51, scope: !5522)
!5661 = !DILocation(line: 611, column: 29, scope: !5522)
!5662 = !DILocation(line: 611, column: 39, scope: !5522)
!5663 = !DILocation(line: 611, column: 17, scope: !5522)
!5664 = !DILocation(line: 611, column: 27, scope: !5522)
!5665 = !DILocation(line: 611, column: 5, scope: !5522)
!5666 = !DILocation(line: 611, column: 15, scope: !5522)
!5667 = !DILocation(line: 612, column: 20, scope: !5522)
!5668 = !DILocation(line: 612, column: 23, scope: !5522)
!5669 = !DILocation(line: 612, column: 32, scope: !5522)
!5670 = !DILocation(line: 612, column: 38, scope: !5522)
!5671 = !DILocation(line: 612, column: 43, scope: !5522)
!5672 = !DILocation(line: 612, column: 48, scope: !5522)
!5673 = !DILocation(line: 612, column: 51, scope: !5522)
!5674 = !DILocation(line: 612, column: 56, scope: !5522)
!5675 = !DILocation(line: 612, column: 64, scope: !5522)
!5676 = !DILocation(line: 612, column: 5, scope: !5522)
!5677 = !DILocation(line: 615, column: 12, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5522, file: !888, line: 615, column: 5)
!5679 = !DILocation(line: 615, column: 10, scope: !5678)
!5680 = !DILocation(line: 615, column: 17, scope: !5681)
!5681 = !DILexicalBlockFile(scope: !5682, file: !888, discriminator: 1)
!5682 = distinct !DILexicalBlock(scope: !5678, file: !888, line: 615, column: 5)
!5683 = !DILocation(line: 615, column: 19, scope: !5681)
!5684 = !DILocation(line: 615, column: 5, scope: !5681)
!5685 = !DILocation(line: 616, column: 16, scope: !5682)
!5686 = !DILocation(line: 616, column: 9, scope: !5682)
!5687 = !DILocation(line: 616, column: 19, scope: !5682)
!5688 = !DILocation(line: 615, column: 26, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5682, file: !888, discriminator: 2)
!5690 = !DILocation(line: 615, column: 5, scope: !5689)
!5691 = distinct !{!5691, !5692}
!5692 = !DILocation(line: 615, column: 5, scope: !5522)
!5693 = !DILocation(line: 618, column: 10, scope: !5522)
!5694 = !DILocation(line: 618, column: 15, scope: !5522)
!5695 = !DILocation(line: 618, column: 22, scope: !5522)
!5696 = !DILocation(line: 618, column: 27, scope: !5522)
!5697 = !DILocation(line: 618, column: 20, scope: !5522)
!5698 = !DILocation(line: 618, column: 34, scope: !5522)
!5699 = !DILocation(line: 618, column: 39, scope: !5522)
!5700 = !DILocation(line: 618, column: 32, scope: !5522)
!5701 = !DILocation(line: 618, column: 46, scope: !5522)
!5702 = !DILocation(line: 618, column: 51, scope: !5522)
!5703 = !DILocation(line: 618, column: 44, scope: !5522)
!5704 = !DILocation(line: 618, column: 8, scope: !5522)
!5705 = !DILocation(line: 620, column: 9, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5522, file: !888, line: 620, column: 9)
!5707 = !DILocation(line: 620, column: 12, scope: !5706)
!5708 = !DILocation(line: 620, column: 9, scope: !5522)
!5709 = !DILocation(line: 621, column: 16, scope: !5706)
!5710 = !DILocation(line: 621, column: 27, scope: !5706)
!5711 = !DILocation(line: 621, column: 25, scope: !5706)
!5712 = !DILocation(line: 621, column: 14, scope: !5706)
!5713 = !DILocation(line: 621, column: 9, scope: !5706)
!5714 = !DILocation(line: 623, column: 14, scope: !5706)
!5715 = !DILocation(line: 625, column: 13, scope: !5522)
!5716 = !DILocation(line: 625, column: 11, scope: !5522)
!5717 = !DILocation(line: 626, column: 12, scope: !5522)
!5718 = !DILocation(line: 626, column: 20, scope: !5522)
!5719 = !DILocation(line: 626, column: 18, scope: !5522)
!5720 = !DILocation(line: 626, column: 10, scope: !5522)
!5721 = !DILocation(line: 627, column: 15, scope: !5522)
!5722 = !DILocation(line: 627, column: 23, scope: !5522)
!5723 = !DILocation(line: 627, column: 28, scope: !5522)
!5724 = !DILocation(line: 627, column: 20, scope: !5522)
!5725 = !DILocation(line: 627, column: 5, scope: !5522)
!5726 = !DILocation(line: 627, column: 13, scope: !5522)
!5727 = !DILocation(line: 628, column: 15, scope: !5522)
!5728 = !DILocation(line: 628, column: 23, scope: !5522)
!5729 = !DILocation(line: 628, column: 28, scope: !5522)
!5730 = !DILocation(line: 628, column: 20, scope: !5522)
!5731 = !DILocation(line: 628, column: 5, scope: !5522)
!5732 = !DILocation(line: 628, column: 13, scope: !5522)
!5733 = !DILocation(line: 629, column: 15, scope: !5522)
!5734 = !DILocation(line: 629, column: 24, scope: !5522)
!5735 = !DILocation(line: 629, column: 29, scope: !5522)
!5736 = !DILocation(line: 629, column: 21, scope: !5522)
!5737 = !DILocation(line: 629, column: 5, scope: !5522)
!5738 = !DILocation(line: 629, column: 13, scope: !5522)
!5739 = !DILocation(line: 630, column: 15, scope: !5522)
!5740 = !DILocation(line: 630, column: 5, scope: !5522)
!5741 = !DILocation(line: 630, column: 13, scope: !5522)
!5742 = !DILocalVariable(name: "tp", scope: !5743, file: !888, line: 632, type: !905)
!5743 = distinct !DILexicalBlock(scope: !5522, file: !888, line: 631, column: 5)
!5744 = !DILocation(line: 632, column: 13, scope: !5743)
!5745 = !DILocation(line: 632, column: 18, scope: !5743)
!5746 = !DILocation(line: 634, column: 22, scope: !5743)
!5747 = !DILocation(line: 634, column: 28, scope: !5743)
!5748 = !DILocation(line: 634, column: 31, scope: !5743)
!5749 = !DILocation(line: 634, column: 25, scope: !5743)
!5750 = !DILocation(line: 634, column: 40, scope: !5743)
!5751 = !DILocation(line: 634, column: 38, scope: !5743)
!5752 = !DILocation(line: 634, column: 9, scope: !5743)
!5753 = !DILocation(line: 634, column: 14, scope: !5743)
!5754 = !DILocation(line: 634, column: 19, scope: !5743)
!5755 = !DILocation(line: 635, column: 17, scope: !5743)
!5756 = !DILocation(line: 635, column: 22, scope: !5743)
!5757 = !DILocation(line: 635, column: 14, scope: !5743)
!5758 = !DILocation(line: 636, column: 22, scope: !5743)
!5759 = !DILocation(line: 636, column: 28, scope: !5743)
!5760 = !DILocation(line: 636, column: 31, scope: !5743)
!5761 = !DILocation(line: 636, column: 25, scope: !5743)
!5762 = !DILocation(line: 636, column: 40, scope: !5743)
!5763 = !DILocation(line: 636, column: 38, scope: !5743)
!5764 = !DILocation(line: 636, column: 9, scope: !5743)
!5765 = !DILocation(line: 636, column: 14, scope: !5743)
!5766 = !DILocation(line: 636, column: 19, scope: !5743)
!5767 = !DILocation(line: 637, column: 17, scope: !5743)
!5768 = !DILocation(line: 637, column: 22, scope: !5743)
!5769 = !DILocation(line: 637, column: 14, scope: !5743)
!5770 = !DILocation(line: 638, column: 23, scope: !5743)
!5771 = !DILocation(line: 638, column: 28, scope: !5743)
!5772 = !DILocation(line: 638, column: 26, scope: !5743)
!5773 = !DILocation(line: 638, column: 35, scope: !5743)
!5774 = !DILocation(line: 638, column: 38, scope: !5743)
!5775 = !DILocation(line: 638, column: 32, scope: !5743)
!5776 = !DILocation(line: 638, column: 47, scope: !5743)
!5777 = !DILocation(line: 638, column: 45, scope: !5743)
!5778 = !DILocation(line: 638, column: 9, scope: !5743)
!5779 = !DILocation(line: 638, column: 14, scope: !5743)
!5780 = !DILocation(line: 638, column: 19, scope: !5743)
!5781 = !DILocation(line: 639, column: 17, scope: !5743)
!5782 = !DILocation(line: 639, column: 22, scope: !5743)
!5783 = !DILocation(line: 639, column: 14, scope: !5743)
!5784 = !DILocation(line: 640, column: 22, scope: !5743)
!5785 = !DILocation(line: 640, column: 27, scope: !5743)
!5786 = !DILocation(line: 640, column: 25, scope: !5743)
!5787 = !DILocation(line: 640, column: 33, scope: !5743)
!5788 = !DILocation(line: 640, column: 31, scope: !5743)
!5789 = !DILocation(line: 640, column: 9, scope: !5743)
!5790 = !DILocation(line: 640, column: 14, scope: !5743)
!5791 = !DILocation(line: 640, column: 19, scope: !5743)
!5792 = !DILocation(line: 642, column: 22, scope: !5522)
!5793 = !DILocation(line: 642, column: 27, scope: !5522)
!5794 = !DILocation(line: 642, column: 30, scope: !5522)
!5795 = !DILocation(line: 642, column: 39, scope: !5522)
!5796 = !DILocation(line: 642, column: 47, scope: !5522)
!5797 = !DILocation(line: 642, column: 5, scope: !5522)
!5798 = !DILocation(line: 643, column: 1, scope: !5522)
!5799 = distinct !DISubprogram(name: "tm2_update_block", scope: !888, file: !888, line: 680, type: !4887, isLocal: true, isDefinition: true, scopeLine: 681, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!5800 = !DILocalVariable(name: "ctx", arg: 1, scope: !5799, file: !888, line: 680, type: !1657)
!5801 = !DILocation(line: 680, column: 49, scope: !5799)
!5802 = !DILocalVariable(name: "pic", arg: 2, scope: !5799, file: !888, line: 680, type: !1031)
!5803 = !DILocation(line: 680, column: 63, scope: !5799)
!5804 = !DILocalVariable(name: "bx", arg: 3, scope: !5799, file: !888, line: 680, type: !905)
!5805 = !DILocation(line: 680, column: 72, scope: !5799)
!5806 = !DILocalVariable(name: "by", arg: 4, scope: !5799, file: !888, line: 680, type: !905)
!5807 = !DILocation(line: 680, column: 80, scope: !5799)
!5808 = !DILocalVariable(name: "i", scope: !5799, file: !888, line: 682, type: !905)
!5809 = !DILocation(line: 682, column: 9, scope: !5799)
!5810 = !DILocalVariable(name: "j", scope: !5799, file: !888, line: 682, type: !905)
!5811 = !DILocation(line: 682, column: 12, scope: !5799)
!5812 = !DILocalVariable(name: "d", scope: !5799, file: !888, line: 683, type: !905)
!5813 = !DILocation(line: 683, column: 9, scope: !5799)
!5814 = !DILocalVariable(name: "Yo", scope: !5799, file: !888, line: 684, type: !1303)
!5815 = !DILocation(line: 684, column: 10, scope: !5799)
!5816 = !DILocalVariable(name: "Uo", scope: !5799, file: !888, line: 684, type: !1303)
!5817 = !DILocation(line: 684, column: 15, scope: !5799)
!5818 = !DILocalVariable(name: "Vo", scope: !5799, file: !888, line: 684, type: !1303)
!5819 = !DILocation(line: 684, column: 20, scope: !5799)
!5820 = !DILocalVariable(name: "oYstride", scope: !5799, file: !888, line: 684, type: !905)
!5821 = !DILocation(line: 684, column: 28, scope: !5799)
!5822 = !DILocalVariable(name: "oUstride", scope: !5799, file: !888, line: 684, type: !905)
!5823 = !DILocation(line: 684, column: 38, scope: !5799)
!5824 = !DILocalVariable(name: "oVstride", scope: !5799, file: !888, line: 684, type: !905)
!5825 = !DILocation(line: 684, column: 48, scope: !5799)
!5826 = !DILocalVariable(name: "last", scope: !5799, file: !888, line: 684, type: !1303)
!5827 = !DILocation(line: 684, column: 63, scope: !5799)
!5828 = !DILocalVariable(name: "clast", scope: !5799, file: !888, line: 684, type: !1303)
!5829 = !DILocation(line: 684, column: 70, scope: !5799)
!5830 = !DILocalVariable(name: "Y", scope: !5799, file: !888, line: 684, type: !1303)
!5831 = !DILocation(line: 684, column: 82, scope: !5799)
!5832 = !DILocalVariable(name: "U", scope: !5799, file: !888, line: 684, type: !1303)
!5833 = !DILocation(line: 684, column: 86, scope: !5799)
!5834 = !DILocalVariable(name: "V", scope: !5799, file: !888, line: 684, type: !1303)
!5835 = !DILocation(line: 684, column: 90, scope: !5799)
!5836 = !DILocalVariable(name: "Ystride", scope: !5799, file: !888, line: 684, type: !905)
!5837 = !DILocation(line: 684, column: 97, scope: !5799)
!5838 = !DILocalVariable(name: "Ustride", scope: !5799, file: !888, line: 684, type: !905)
!5839 = !DILocation(line: 684, column: 106, scope: !5799)
!5840 = !DILocalVariable(name: "Vstride", scope: !5799, file: !888, line: 684, type: !905)
!5841 = !DILocation(line: 684, column: 115, scope: !5799)
!5842 = !DILocation(line: 684, column: 134, scope: !5799)
!5843 = !DILocation(line: 684, column: 139, scope: !5799)
!5844 = !DILocation(line: 684, column: 132, scope: !5799)
!5845 = !DILocation(line: 684, column: 159, scope: !5799)
!5846 = !DILocation(line: 684, column: 164, scope: !5799)
!5847 = !DILocation(line: 684, column: 157, scope: !5799)
!5848 = !DILocation(line: 684, column: 185, scope: !5799)
!5849 = !DILocation(line: 684, column: 190, scope: !5799)
!5850 = !DILocation(line: 684, column: 183, scope: !5799)
!5851 = !DILocation(line: 684, column: 206, scope: !5799)
!5852 = !DILocation(line: 684, column: 211, scope: !5799)
!5853 = !DILocation(line: 684, column: 215, scope: !5854)
!5854 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 1)
!5855 = !DILocation(line: 684, column: 220, scope: !5854)
!5856 = !DILocation(line: 684, column: 206, scope: !5854)
!5857 = !DILocation(line: 684, column: 223, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 2)
!5859 = !DILocation(line: 684, column: 228, scope: !5858)
!5860 = !DILocation(line: 684, column: 206, scope: !5858)
!5861 = !DILocation(line: 684, column: 206, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 3)
!5863 = !DILocation(line: 684, column: 234, scope: !5862)
!5864 = !DILocation(line: 684, column: 237, scope: !5862)
!5865 = !DILocation(line: 684, column: 243, scope: !5862)
!5866 = !DILocation(line: 684, column: 241, scope: !5862)
!5867 = !DILocation(line: 684, column: 232, scope: !5862)
!5868 = !DILocation(line: 684, column: 253, scope: !5862)
!5869 = !DILocation(line: 684, column: 256, scope: !5862)
!5870 = !DILocation(line: 684, column: 251, scope: !5862)
!5871 = !DILocation(line: 684, column: 203, scope: !5862)
!5872 = !DILocation(line: 684, column: 266, scope: !5862)
!5873 = !DILocation(line: 684, column: 271, scope: !5862)
!5874 = !DILocation(line: 684, column: 275, scope: !5875)
!5875 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 4)
!5876 = !DILocation(line: 684, column: 280, scope: !5875)
!5877 = !DILocation(line: 684, column: 266, scope: !5875)
!5878 = !DILocation(line: 684, column: 283, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 5)
!5880 = !DILocation(line: 684, column: 288, scope: !5879)
!5881 = !DILocation(line: 684, column: 266, scope: !5879)
!5882 = !DILocation(line: 684, column: 266, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 6)
!5884 = !DILocation(line: 684, column: 294, scope: !5883)
!5885 = !DILocation(line: 684, column: 297, scope: !5883)
!5886 = !DILocation(line: 684, column: 303, scope: !5883)
!5887 = !DILocation(line: 684, column: 301, scope: !5883)
!5888 = !DILocation(line: 684, column: 292, scope: !5883)
!5889 = !DILocation(line: 684, column: 313, scope: !5883)
!5890 = !DILocation(line: 684, column: 316, scope: !5883)
!5891 = !DILocation(line: 684, column: 311, scope: !5883)
!5892 = !DILocation(line: 684, column: 263, scope: !5883)
!5893 = !DILocation(line: 684, column: 326, scope: !5883)
!5894 = !DILocation(line: 684, column: 331, scope: !5883)
!5895 = !DILocation(line: 684, column: 335, scope: !5896)
!5896 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 7)
!5897 = !DILocation(line: 684, column: 340, scope: !5896)
!5898 = !DILocation(line: 684, column: 326, scope: !5896)
!5899 = !DILocation(line: 684, column: 343, scope: !5900)
!5900 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 8)
!5901 = !DILocation(line: 684, column: 348, scope: !5900)
!5902 = !DILocation(line: 684, column: 326, scope: !5900)
!5903 = !DILocation(line: 684, column: 326, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 9)
!5905 = !DILocation(line: 684, column: 354, scope: !5904)
!5906 = !DILocation(line: 684, column: 357, scope: !5904)
!5907 = !DILocation(line: 684, column: 363, scope: !5904)
!5908 = !DILocation(line: 684, column: 361, scope: !5904)
!5909 = !DILocation(line: 684, column: 352, scope: !5904)
!5910 = !DILocation(line: 684, column: 373, scope: !5904)
!5911 = !DILocation(line: 684, column: 376, scope: !5904)
!5912 = !DILocation(line: 684, column: 371, scope: !5904)
!5913 = !DILocation(line: 684, column: 323, scope: !5904)
!5914 = !DILocation(line: 684, column: 388, scope: !5904)
!5915 = !DILocation(line: 684, column: 393, scope: !5904)
!5916 = !DILocation(line: 684, column: 400, scope: !5904)
!5917 = !DILocation(line: 684, column: 403, scope: !5904)
!5918 = !DILocation(line: 684, column: 398, scope: !5904)
!5919 = !DILocation(line: 684, column: 386, scope: !5904)
!5920 = !DILocation(line: 684, column: 416, scope: !5904)
!5921 = !DILocation(line: 684, column: 421, scope: !5904)
!5922 = !DILocation(line: 684, column: 429, scope: !5904)
!5923 = !DILocation(line: 684, column: 432, scope: !5904)
!5924 = !DILocation(line: 684, column: 427, scope: !5904)
!5925 = !DILocation(line: 684, column: 414, scope: !5904)
!5926 = !DILocation(line: 684, column: 449, scope: !5904)
!5927 = !DILocation(line: 684, column: 447, scope: !5904)
!5928 = !DILocation(line: 684, column: 469, scope: !5904)
!5929 = !DILocation(line: 684, column: 467, scope: !5904)
!5930 = !DILocation(line: 684, column: 489, scope: !5904)
!5931 = !DILocation(line: 684, column: 487, scope: !5904)
!5932 = !DILocation(line: 684, column: 504, scope: !5904)
!5933 = !DILocation(line: 684, column: 509, scope: !5904)
!5934 = !DILocation(line: 684, column: 513, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 10)
!5936 = !DILocation(line: 684, column: 518, scope: !5935)
!5937 = !DILocation(line: 684, column: 504, scope: !5935)
!5938 = !DILocation(line: 684, column: 521, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 11)
!5940 = !DILocation(line: 684, column: 526, scope: !5939)
!5941 = !DILocation(line: 684, column: 504, scope: !5939)
!5942 = !DILocation(line: 684, column: 504, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 12)
!5944 = !DILocation(line: 684, column: 532, scope: !5943)
!5945 = !DILocation(line: 684, column: 535, scope: !5943)
!5946 = !DILocation(line: 684, column: 541, scope: !5943)
!5947 = !DILocation(line: 684, column: 539, scope: !5943)
!5948 = !DILocation(line: 684, column: 530, scope: !5943)
!5949 = !DILocation(line: 684, column: 552, scope: !5943)
!5950 = !DILocation(line: 684, column: 555, scope: !5943)
!5951 = !DILocation(line: 684, column: 550, scope: !5943)
!5952 = !DILocation(line: 684, column: 501, scope: !5943)
!5953 = !DILocation(line: 684, column: 566, scope: !5943)
!5954 = !DILocation(line: 684, column: 571, scope: !5943)
!5955 = !DILocation(line: 684, column: 575, scope: !5956)
!5956 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 13)
!5957 = !DILocation(line: 684, column: 580, scope: !5956)
!5958 = !DILocation(line: 684, column: 566, scope: !5956)
!5959 = !DILocation(line: 684, column: 583, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 14)
!5961 = !DILocation(line: 684, column: 588, scope: !5960)
!5962 = !DILocation(line: 684, column: 566, scope: !5960)
!5963 = !DILocation(line: 684, column: 566, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 15)
!5965 = !DILocation(line: 684, column: 594, scope: !5964)
!5966 = !DILocation(line: 684, column: 597, scope: !5964)
!5967 = !DILocation(line: 684, column: 603, scope: !5964)
!5968 = !DILocation(line: 684, column: 601, scope: !5964)
!5969 = !DILocation(line: 684, column: 592, scope: !5964)
!5970 = !DILocation(line: 684, column: 614, scope: !5964)
!5971 = !DILocation(line: 684, column: 617, scope: !5964)
!5972 = !DILocation(line: 684, column: 612, scope: !5964)
!5973 = !DILocation(line: 684, column: 563, scope: !5964)
!5974 = !DILocation(line: 684, column: 628, scope: !5964)
!5975 = !DILocation(line: 684, column: 633, scope: !5964)
!5976 = !DILocation(line: 684, column: 637, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 16)
!5978 = !DILocation(line: 684, column: 642, scope: !5977)
!5979 = !DILocation(line: 684, column: 628, scope: !5977)
!5980 = !DILocation(line: 684, column: 645, scope: !5981)
!5981 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 17)
!5982 = !DILocation(line: 684, column: 650, scope: !5981)
!5983 = !DILocation(line: 684, column: 628, scope: !5981)
!5984 = !DILocation(line: 684, column: 628, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !5799, file: !888, discriminator: 18)
!5986 = !DILocation(line: 684, column: 656, scope: !5985)
!5987 = !DILocation(line: 684, column: 659, scope: !5985)
!5988 = !DILocation(line: 684, column: 665, scope: !5985)
!5989 = !DILocation(line: 684, column: 663, scope: !5985)
!5990 = !DILocation(line: 684, column: 654, scope: !5985)
!5991 = !DILocation(line: 684, column: 676, scope: !5985)
!5992 = !DILocation(line: 684, column: 679, scope: !5985)
!5993 = !DILocation(line: 684, column: 674, scope: !5985)
!5994 = !DILocation(line: 684, column: 625, scope: !5985)
!5995 = !DILocation(line: 687, column: 12, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5799, file: !888, line: 687, column: 5)
!5997 = !DILocation(line: 687, column: 10, scope: !5996)
!5998 = !DILocation(line: 687, column: 17, scope: !5999)
!5999 = !DILexicalBlockFile(scope: !6000, file: !888, discriminator: 1)
!6000 = distinct !DILexicalBlock(scope: !5996, file: !888, line: 687, column: 5)
!6001 = !DILocation(line: 687, column: 19, scope: !5999)
!6002 = !DILocation(line: 687, column: 5, scope: !5999)
!6003 = !DILocation(line: 688, column: 16, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !888, line: 688, column: 9)
!6005 = distinct !DILexicalBlock(scope: !6000, file: !888, line: 687, column: 29)
!6006 = !DILocation(line: 688, column: 14, scope: !6004)
!6007 = !DILocation(line: 688, column: 21, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !6009, file: !888, discriminator: 1)
!6009 = distinct !DILexicalBlock(scope: !6004, file: !888, line: 688, column: 9)
!6010 = !DILocation(line: 688, column: 23, scope: !6008)
!6011 = !DILocation(line: 688, column: 9, scope: !6008)
!6012 = !DILocation(line: 689, column: 23, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !888, line: 688, column: 33)
!6014 = !DILocation(line: 689, column: 20, scope: !6013)
!6015 = !DILocation(line: 689, column: 36, scope: !6013)
!6016 = !DILocation(line: 689, column: 28, scope: !6013)
!6017 = !DILocation(line: 689, column: 26, scope: !6013)
!6018 = !DILocation(line: 689, column: 15, scope: !6013)
!6019 = !DILocation(line: 689, column: 13, scope: !6013)
!6020 = !DILocation(line: 689, column: 18, scope: !6013)
!6021 = !DILocation(line: 690, column: 23, scope: !6013)
!6022 = !DILocation(line: 690, column: 20, scope: !6013)
!6023 = !DILocation(line: 690, column: 36, scope: !6013)
!6024 = !DILocation(line: 690, column: 28, scope: !6013)
!6025 = !DILocation(line: 690, column: 26, scope: !6013)
!6026 = !DILocation(line: 690, column: 15, scope: !6013)
!6027 = !DILocation(line: 690, column: 13, scope: !6013)
!6028 = !DILocation(line: 690, column: 18, scope: !6013)
!6029 = !DILocation(line: 691, column: 9, scope: !6013)
!6030 = !DILocation(line: 688, column: 29, scope: !6031)
!6031 = !DILexicalBlockFile(scope: !6009, file: !888, discriminator: 2)
!6032 = !DILocation(line: 688, column: 9, scope: !6031)
!6033 = distinct !{!6033, !6034}
!6034 = !DILocation(line: 688, column: 9, scope: !6005)
!6035 = !DILocation(line: 692, column: 14, scope: !6005)
!6036 = !DILocation(line: 692, column: 11, scope: !6005)
!6037 = !DILocation(line: 693, column: 14, scope: !6005)
!6038 = !DILocation(line: 693, column: 11, scope: !6005)
!6039 = !DILocation(line: 694, column: 15, scope: !6005)
!6040 = !DILocation(line: 694, column: 12, scope: !6005)
!6041 = !DILocation(line: 695, column: 15, scope: !6005)
!6042 = !DILocation(line: 695, column: 12, scope: !6005)
!6043 = !DILocation(line: 696, column: 5, scope: !6005)
!6044 = !DILocation(line: 687, column: 25, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6000, file: !888, discriminator: 2)
!6046 = !DILocation(line: 687, column: 5, scope: !6045)
!6047 = distinct !{!6047, !6048}
!6048 = !DILocation(line: 687, column: 5, scope: !5799)
!6049 = !DILocation(line: 697, column: 10, scope: !5799)
!6050 = !DILocation(line: 697, column: 18, scope: !5799)
!6051 = !DILocation(line: 697, column: 7, scope: !5799)
!6052 = !DILocation(line: 698, column: 10, scope: !5799)
!6053 = !DILocation(line: 698, column: 18, scope: !5799)
!6054 = !DILocation(line: 698, column: 7, scope: !5799)
!6055 = !DILocation(line: 699, column: 30, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !5799, file: !888, line: 699, column: 5)
!6057 = !DILocation(line: 699, column: 48, scope: !6056)
!6058 = !DILocation(line: 699, column: 36, scope: !6056)
!6059 = !DILocation(line: 699, column: 7, scope: !6056)
!6060 = !DILocation(line: 699, column: 12, scope: !6056)
!6061 = !DILocation(line: 699, column: 18, scope: !6056)
!6062 = !DILocation(line: 699, column: 83, scope: !6056)
!6063 = !DILocation(line: 699, column: 91, scope: !6056)
!6064 = !DILocation(line: 699, column: 81, scope: !6056)
!6065 = !DILocation(line: 699, column: 109, scope: !6056)
!6066 = !DILocation(line: 699, column: 96, scope: !6056)
!6067 = !DILocation(line: 699, column: 58, scope: !6056)
!6068 = !DILocation(line: 699, column: 63, scope: !6056)
!6069 = !DILocation(line: 699, column: 69, scope: !6056)
!6070 = !DILocation(line: 699, column: 133, scope: !6056)
!6071 = !DILocation(line: 699, column: 141, scope: !6056)
!6072 = !DILocation(line: 699, column: 131, scope: !6056)
!6073 = !DILocation(line: 699, column: 115, scope: !6056)
!6074 = !DILocation(line: 699, column: 124, scope: !6056)
!6075 = !DILocation(line: 699, column: 165, scope: !6056)
!6076 = !DILocation(line: 699, column: 173, scope: !6056)
!6077 = !DILocation(line: 699, column: 163, scope: !6056)
!6078 = !DILocation(line: 699, column: 147, scope: !6056)
!6079 = !DILocation(line: 699, column: 156, scope: !6056)
!6080 = !DILocation(line: 700, column: 36, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !5799, file: !888, line: 700, column: 5)
!6082 = !DILocation(line: 700, column: 55, scope: !6081)
!6083 = !DILocation(line: 700, column: 61, scope: !6081)
!6084 = !DILocation(line: 700, column: 54, scope: !6081)
!6085 = !DILocation(line: 700, column: 42, scope: !6081)
!6086 = !DILocation(line: 700, column: 8, scope: !6081)
!6087 = !DILocation(line: 700, column: 13, scope: !6081)
!6088 = !DILocation(line: 700, column: 16, scope: !6081)
!6089 = !DILocation(line: 700, column: 7, scope: !6081)
!6090 = !DILocation(line: 700, column: 24, scope: !6081)
!6091 = !DILocation(line: 700, column: 101, scope: !6081)
!6092 = !DILocation(line: 700, column: 109, scope: !6081)
!6093 = !DILocation(line: 700, column: 99, scope: !6081)
!6094 = !DILocation(line: 700, column: 127, scope: !6081)
!6095 = !DILocation(line: 700, column: 114, scope: !6081)
!6096 = !DILocation(line: 700, column: 71, scope: !6081)
!6097 = !DILocation(line: 700, column: 76, scope: !6081)
!6098 = !DILocation(line: 700, column: 79, scope: !6081)
!6099 = !DILocation(line: 700, column: 70, scope: !6081)
!6100 = !DILocation(line: 700, column: 87, scope: !6081)
!6101 = !DILocation(line: 700, column: 157, scope: !6081)
!6102 = !DILocation(line: 700, column: 165, scope: !6081)
!6103 = !DILocation(line: 700, column: 155, scope: !6081)
!6104 = !DILocation(line: 700, column: 134, scope: !6081)
!6105 = !DILocation(line: 700, column: 140, scope: !6081)
!6106 = !DILocation(line: 700, column: 133, scope: !6081)
!6107 = !DILocation(line: 700, column: 148, scope: !6081)
!6108 = !DILocation(line: 700, column: 195, scope: !6081)
!6109 = !DILocation(line: 700, column: 203, scope: !6081)
!6110 = !DILocation(line: 700, column: 193, scope: !6081)
!6111 = !DILocation(line: 700, column: 172, scope: !6081)
!6112 = !DILocation(line: 700, column: 178, scope: !6081)
!6113 = !DILocation(line: 700, column: 171, scope: !6081)
!6114 = !DILocation(line: 700, column: 186, scope: !6081)
!6115 = !DILocation(line: 703, column: 17, scope: !5799)
!6116 = !DILocation(line: 703, column: 25, scope: !5799)
!6117 = !DILocation(line: 703, column: 23, scope: !5799)
!6118 = !DILocation(line: 703, column: 5, scope: !5799)
!6119 = !DILocation(line: 703, column: 10, scope: !5799)
!6120 = !DILocation(line: 703, column: 15, scope: !5799)
!6121 = !DILocation(line: 704, column: 24, scope: !5799)
!6122 = !DILocation(line: 704, column: 22, scope: !5799)
!6123 = !DILocation(line: 704, column: 17, scope: !5799)
!6124 = !DILocation(line: 704, column: 36, scope: !5799)
!6125 = !DILocation(line: 704, column: 34, scope: !5799)
!6126 = !DILocation(line: 704, column: 5, scope: !5799)
!6127 = !DILocation(line: 704, column: 10, scope: !5799)
!6128 = !DILocation(line: 704, column: 15, scope: !5799)
!6129 = !DILocation(line: 705, column: 24, scope: !5799)
!6130 = !DILocation(line: 705, column: 33, scope: !5799)
!6131 = !DILocation(line: 705, column: 22, scope: !5799)
!6132 = !DILocation(line: 705, column: 17, scope: !5799)
!6133 = !DILocation(line: 705, column: 47, scope: !5799)
!6134 = !DILocation(line: 705, column: 45, scope: !5799)
!6135 = !DILocation(line: 705, column: 40, scope: !5799)
!6136 = !DILocation(line: 705, column: 38, scope: !5799)
!6137 = !DILocation(line: 705, column: 5, scope: !5799)
!6138 = !DILocation(line: 705, column: 10, scope: !5799)
!6139 = !DILocation(line: 705, column: 15, scope: !5799)
!6140 = !DILocation(line: 706, column: 24, scope: !5799)
!6141 = !DILocation(line: 706, column: 33, scope: !5799)
!6142 = !DILocation(line: 706, column: 22, scope: !5799)
!6143 = !DILocation(line: 706, column: 17, scope: !5799)
!6144 = !DILocation(line: 706, column: 47, scope: !5799)
!6145 = !DILocation(line: 706, column: 56, scope: !5799)
!6146 = !DILocation(line: 706, column: 45, scope: !5799)
!6147 = !DILocation(line: 706, column: 40, scope: !5799)
!6148 = !DILocation(line: 706, column: 38, scope: !5799)
!6149 = !DILocation(line: 706, column: 5, scope: !5799)
!6150 = !DILocation(line: 706, column: 10, scope: !5799)
!6151 = !DILocation(line: 706, column: 15, scope: !5799)
!6152 = !DILocation(line: 708, column: 12, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !5799, file: !888, line: 708, column: 5)
!6154 = !DILocation(line: 708, column: 10, scope: !6153)
!6155 = !DILocation(line: 708, column: 17, scope: !6156)
!6156 = !DILexicalBlockFile(scope: !6157, file: !888, discriminator: 1)
!6157 = distinct !DILexicalBlock(scope: !6153, file: !888, line: 708, column: 5)
!6158 = !DILocation(line: 708, column: 19, scope: !6156)
!6159 = !DILocation(line: 708, column: 5, scope: !6156)
!6160 = !DILocation(line: 709, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6157, file: !888, line: 708, column: 29)
!6162 = !DILocation(line: 709, column: 11, scope: !6161)
!6163 = !DILocation(line: 710, column: 16, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !888, line: 710, column: 9)
!6165 = !DILocation(line: 710, column: 14, scope: !6164)
!6166 = !DILocation(line: 710, column: 21, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !6168, file: !888, discriminator: 1)
!6168 = distinct !DILexicalBlock(scope: !6164, file: !888, line: 710, column: 9)
!6169 = !DILocation(line: 710, column: 23, scope: !6167)
!6170 = !DILocation(line: 710, column: 9, scope: !6167)
!6171 = !DILocation(line: 711, column: 23, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !888, line: 710, column: 33)
!6173 = !DILocation(line: 711, column: 20, scope: !6172)
!6174 = !DILocation(line: 711, column: 36, scope: !6172)
!6175 = !DILocation(line: 711, column: 28, scope: !6172)
!6176 = !DILocation(line: 711, column: 26, scope: !6172)
!6177 = !DILocation(line: 711, column: 15, scope: !6172)
!6178 = !DILocation(line: 711, column: 13, scope: !6172)
!6179 = !DILocation(line: 711, column: 18, scope: !6172)
!6180 = !DILocation(line: 712, column: 25, scope: !6172)
!6181 = !DILocation(line: 712, column: 23, scope: !6172)
!6182 = !DILocation(line: 712, column: 18, scope: !6172)
!6183 = !DILocation(line: 712, column: 13, scope: !6172)
!6184 = !DILocation(line: 712, column: 21, scope: !6172)
!6185 = !DILocation(line: 713, column: 9, scope: !6172)
!6186 = !DILocation(line: 710, column: 29, scope: !6187)
!6187 = !DILexicalBlockFile(scope: !6168, file: !888, discriminator: 2)
!6188 = !DILocation(line: 710, column: 9, scope: !6187)
!6189 = distinct !{!6189, !6190}
!6190 = !DILocation(line: 710, column: 9, scope: !6161)
!6191 = !DILocation(line: 714, column: 21, scope: !6161)
!6192 = !DILocation(line: 714, column: 31, scope: !6161)
!6193 = !DILocation(line: 714, column: 29, scope: !6161)
!6194 = !DILocation(line: 714, column: 16, scope: !6161)
!6195 = !DILocation(line: 714, column: 9, scope: !6161)
!6196 = !DILocation(line: 714, column: 14, scope: !6161)
!6197 = !DILocation(line: 714, column: 19, scope: !6161)
!6198 = !DILocation(line: 715, column: 14, scope: !6161)
!6199 = !DILocation(line: 715, column: 11, scope: !6161)
!6200 = !DILocation(line: 716, column: 15, scope: !6161)
!6201 = !DILocation(line: 716, column: 12, scope: !6161)
!6202 = !DILocation(line: 717, column: 5, scope: !6161)
!6203 = !DILocation(line: 708, column: 25, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !6157, file: !888, discriminator: 2)
!6205 = !DILocation(line: 708, column: 5, scope: !6204)
!6206 = distinct !{!6206, !6207}
!6207 = !DILocation(line: 708, column: 5, scope: !5799)
!6208 = !DILocation(line: 718, column: 1, scope: !5799)
!6209 = distinct !DISubprogram(name: "tm2_still_block", scope: !888, file: !888, line: 645, type: !4887, isLocal: true, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!6210 = !DILocalVariable(name: "ctx", arg: 1, scope: !6209, file: !888, line: 645, type: !1657)
!6211 = !DILocation(line: 645, column: 48, scope: !6209)
!6212 = !DILocalVariable(name: "pic", arg: 2, scope: !6209, file: !888, line: 645, type: !1031)
!6213 = !DILocation(line: 645, column: 62, scope: !6209)
!6214 = !DILocalVariable(name: "bx", arg: 3, scope: !6209, file: !888, line: 645, type: !905)
!6215 = !DILocation(line: 645, column: 71, scope: !6209)
!6216 = !DILocalVariable(name: "by", arg: 4, scope: !6209, file: !888, line: 645, type: !905)
!6217 = !DILocation(line: 645, column: 79, scope: !6209)
!6218 = !DILocalVariable(name: "i", scope: !6209, file: !888, line: 647, type: !905)
!6219 = !DILocation(line: 647, column: 9, scope: !6209)
!6220 = !DILocalVariable(name: "j", scope: !6209, file: !888, line: 647, type: !905)
!6221 = !DILocation(line: 647, column: 12, scope: !6209)
!6222 = !DILocalVariable(name: "Yo", scope: !6209, file: !888, line: 648, type: !1303)
!6223 = !DILocation(line: 648, column: 10, scope: !6209)
!6224 = !DILocalVariable(name: "Uo", scope: !6209, file: !888, line: 648, type: !1303)
!6225 = !DILocation(line: 648, column: 15, scope: !6209)
!6226 = !DILocalVariable(name: "Vo", scope: !6209, file: !888, line: 648, type: !1303)
!6227 = !DILocation(line: 648, column: 20, scope: !6209)
!6228 = !DILocalVariable(name: "oYstride", scope: !6209, file: !888, line: 648, type: !905)
!6229 = !DILocation(line: 648, column: 28, scope: !6209)
!6230 = !DILocalVariable(name: "oUstride", scope: !6209, file: !888, line: 648, type: !905)
!6231 = !DILocation(line: 648, column: 38, scope: !6209)
!6232 = !DILocalVariable(name: "oVstride", scope: !6209, file: !888, line: 648, type: !905)
!6233 = !DILocation(line: 648, column: 48, scope: !6209)
!6234 = !DILocalVariable(name: "last", scope: !6209, file: !888, line: 648, type: !1303)
!6235 = !DILocation(line: 648, column: 63, scope: !6209)
!6236 = !DILocalVariable(name: "clast", scope: !6209, file: !888, line: 648, type: !1303)
!6237 = !DILocation(line: 648, column: 70, scope: !6209)
!6238 = !DILocalVariable(name: "Y", scope: !6209, file: !888, line: 648, type: !1303)
!6239 = !DILocation(line: 648, column: 82, scope: !6209)
!6240 = !DILocalVariable(name: "U", scope: !6209, file: !888, line: 648, type: !1303)
!6241 = !DILocation(line: 648, column: 86, scope: !6209)
!6242 = !DILocalVariable(name: "V", scope: !6209, file: !888, line: 648, type: !1303)
!6243 = !DILocation(line: 648, column: 90, scope: !6209)
!6244 = !DILocalVariable(name: "Ystride", scope: !6209, file: !888, line: 648, type: !905)
!6245 = !DILocation(line: 648, column: 97, scope: !6209)
!6246 = !DILocalVariable(name: "Ustride", scope: !6209, file: !888, line: 648, type: !905)
!6247 = !DILocation(line: 648, column: 106, scope: !6209)
!6248 = !DILocalVariable(name: "Vstride", scope: !6209, file: !888, line: 648, type: !905)
!6249 = !DILocation(line: 648, column: 115, scope: !6209)
!6250 = !DILocation(line: 648, column: 134, scope: !6209)
!6251 = !DILocation(line: 648, column: 139, scope: !6209)
!6252 = !DILocation(line: 648, column: 132, scope: !6209)
!6253 = !DILocation(line: 648, column: 159, scope: !6209)
!6254 = !DILocation(line: 648, column: 164, scope: !6209)
!6255 = !DILocation(line: 648, column: 157, scope: !6209)
!6256 = !DILocation(line: 648, column: 185, scope: !6209)
!6257 = !DILocation(line: 648, column: 190, scope: !6209)
!6258 = !DILocation(line: 648, column: 183, scope: !6209)
!6259 = !DILocation(line: 648, column: 206, scope: !6209)
!6260 = !DILocation(line: 648, column: 211, scope: !6209)
!6261 = !DILocation(line: 648, column: 215, scope: !6262)
!6262 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 1)
!6263 = !DILocation(line: 648, column: 220, scope: !6262)
!6264 = !DILocation(line: 648, column: 206, scope: !6262)
!6265 = !DILocation(line: 648, column: 223, scope: !6266)
!6266 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 2)
!6267 = !DILocation(line: 648, column: 228, scope: !6266)
!6268 = !DILocation(line: 648, column: 206, scope: !6266)
!6269 = !DILocation(line: 648, column: 206, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 3)
!6271 = !DILocation(line: 648, column: 234, scope: !6270)
!6272 = !DILocation(line: 648, column: 237, scope: !6270)
!6273 = !DILocation(line: 648, column: 243, scope: !6270)
!6274 = !DILocation(line: 648, column: 241, scope: !6270)
!6275 = !DILocation(line: 648, column: 232, scope: !6270)
!6276 = !DILocation(line: 648, column: 253, scope: !6270)
!6277 = !DILocation(line: 648, column: 256, scope: !6270)
!6278 = !DILocation(line: 648, column: 251, scope: !6270)
!6279 = !DILocation(line: 648, column: 203, scope: !6270)
!6280 = !DILocation(line: 648, column: 266, scope: !6270)
!6281 = !DILocation(line: 648, column: 271, scope: !6270)
!6282 = !DILocation(line: 648, column: 275, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 4)
!6284 = !DILocation(line: 648, column: 280, scope: !6283)
!6285 = !DILocation(line: 648, column: 266, scope: !6283)
!6286 = !DILocation(line: 648, column: 283, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 5)
!6288 = !DILocation(line: 648, column: 288, scope: !6287)
!6289 = !DILocation(line: 648, column: 266, scope: !6287)
!6290 = !DILocation(line: 648, column: 266, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 6)
!6292 = !DILocation(line: 648, column: 294, scope: !6291)
!6293 = !DILocation(line: 648, column: 297, scope: !6291)
!6294 = !DILocation(line: 648, column: 303, scope: !6291)
!6295 = !DILocation(line: 648, column: 301, scope: !6291)
!6296 = !DILocation(line: 648, column: 292, scope: !6291)
!6297 = !DILocation(line: 648, column: 313, scope: !6291)
!6298 = !DILocation(line: 648, column: 316, scope: !6291)
!6299 = !DILocation(line: 648, column: 311, scope: !6291)
!6300 = !DILocation(line: 648, column: 263, scope: !6291)
!6301 = !DILocation(line: 648, column: 326, scope: !6291)
!6302 = !DILocation(line: 648, column: 331, scope: !6291)
!6303 = !DILocation(line: 648, column: 335, scope: !6304)
!6304 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 7)
!6305 = !DILocation(line: 648, column: 340, scope: !6304)
!6306 = !DILocation(line: 648, column: 326, scope: !6304)
!6307 = !DILocation(line: 648, column: 343, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 8)
!6309 = !DILocation(line: 648, column: 348, scope: !6308)
!6310 = !DILocation(line: 648, column: 326, scope: !6308)
!6311 = !DILocation(line: 648, column: 326, scope: !6312)
!6312 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 9)
!6313 = !DILocation(line: 648, column: 354, scope: !6312)
!6314 = !DILocation(line: 648, column: 357, scope: !6312)
!6315 = !DILocation(line: 648, column: 363, scope: !6312)
!6316 = !DILocation(line: 648, column: 361, scope: !6312)
!6317 = !DILocation(line: 648, column: 352, scope: !6312)
!6318 = !DILocation(line: 648, column: 373, scope: !6312)
!6319 = !DILocation(line: 648, column: 376, scope: !6312)
!6320 = !DILocation(line: 648, column: 371, scope: !6312)
!6321 = !DILocation(line: 648, column: 323, scope: !6312)
!6322 = !DILocation(line: 648, column: 388, scope: !6312)
!6323 = !DILocation(line: 648, column: 393, scope: !6312)
!6324 = !DILocation(line: 648, column: 400, scope: !6312)
!6325 = !DILocation(line: 648, column: 403, scope: !6312)
!6326 = !DILocation(line: 648, column: 398, scope: !6312)
!6327 = !DILocation(line: 648, column: 386, scope: !6312)
!6328 = !DILocation(line: 648, column: 416, scope: !6312)
!6329 = !DILocation(line: 648, column: 421, scope: !6312)
!6330 = !DILocation(line: 648, column: 429, scope: !6312)
!6331 = !DILocation(line: 648, column: 432, scope: !6312)
!6332 = !DILocation(line: 648, column: 427, scope: !6312)
!6333 = !DILocation(line: 648, column: 414, scope: !6312)
!6334 = !DILocation(line: 648, column: 449, scope: !6312)
!6335 = !DILocation(line: 648, column: 447, scope: !6312)
!6336 = !DILocation(line: 648, column: 469, scope: !6312)
!6337 = !DILocation(line: 648, column: 467, scope: !6312)
!6338 = !DILocation(line: 648, column: 489, scope: !6312)
!6339 = !DILocation(line: 648, column: 487, scope: !6312)
!6340 = !DILocation(line: 648, column: 504, scope: !6312)
!6341 = !DILocation(line: 648, column: 509, scope: !6312)
!6342 = !DILocation(line: 648, column: 513, scope: !6343)
!6343 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 10)
!6344 = !DILocation(line: 648, column: 518, scope: !6343)
!6345 = !DILocation(line: 648, column: 504, scope: !6343)
!6346 = !DILocation(line: 648, column: 521, scope: !6347)
!6347 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 11)
!6348 = !DILocation(line: 648, column: 526, scope: !6347)
!6349 = !DILocation(line: 648, column: 504, scope: !6347)
!6350 = !DILocation(line: 648, column: 504, scope: !6351)
!6351 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 12)
!6352 = !DILocation(line: 648, column: 532, scope: !6351)
!6353 = !DILocation(line: 648, column: 535, scope: !6351)
!6354 = !DILocation(line: 648, column: 541, scope: !6351)
!6355 = !DILocation(line: 648, column: 539, scope: !6351)
!6356 = !DILocation(line: 648, column: 530, scope: !6351)
!6357 = !DILocation(line: 648, column: 552, scope: !6351)
!6358 = !DILocation(line: 648, column: 555, scope: !6351)
!6359 = !DILocation(line: 648, column: 550, scope: !6351)
!6360 = !DILocation(line: 648, column: 501, scope: !6351)
!6361 = !DILocation(line: 648, column: 566, scope: !6351)
!6362 = !DILocation(line: 648, column: 571, scope: !6351)
!6363 = !DILocation(line: 648, column: 575, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 13)
!6365 = !DILocation(line: 648, column: 580, scope: !6364)
!6366 = !DILocation(line: 648, column: 566, scope: !6364)
!6367 = !DILocation(line: 648, column: 583, scope: !6368)
!6368 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 14)
!6369 = !DILocation(line: 648, column: 588, scope: !6368)
!6370 = !DILocation(line: 648, column: 566, scope: !6368)
!6371 = !DILocation(line: 648, column: 566, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 15)
!6373 = !DILocation(line: 648, column: 594, scope: !6372)
!6374 = !DILocation(line: 648, column: 597, scope: !6372)
!6375 = !DILocation(line: 648, column: 603, scope: !6372)
!6376 = !DILocation(line: 648, column: 601, scope: !6372)
!6377 = !DILocation(line: 648, column: 592, scope: !6372)
!6378 = !DILocation(line: 648, column: 614, scope: !6372)
!6379 = !DILocation(line: 648, column: 617, scope: !6372)
!6380 = !DILocation(line: 648, column: 612, scope: !6372)
!6381 = !DILocation(line: 648, column: 563, scope: !6372)
!6382 = !DILocation(line: 648, column: 628, scope: !6372)
!6383 = !DILocation(line: 648, column: 633, scope: !6372)
!6384 = !DILocation(line: 648, column: 637, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 16)
!6386 = !DILocation(line: 648, column: 642, scope: !6385)
!6387 = !DILocation(line: 648, column: 628, scope: !6385)
!6388 = !DILocation(line: 648, column: 645, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 17)
!6390 = !DILocation(line: 648, column: 650, scope: !6389)
!6391 = !DILocation(line: 648, column: 628, scope: !6389)
!6392 = !DILocation(line: 648, column: 628, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6209, file: !888, discriminator: 18)
!6394 = !DILocation(line: 648, column: 656, scope: !6393)
!6395 = !DILocation(line: 648, column: 659, scope: !6393)
!6396 = !DILocation(line: 648, column: 665, scope: !6393)
!6397 = !DILocation(line: 648, column: 663, scope: !6393)
!6398 = !DILocation(line: 648, column: 654, scope: !6393)
!6399 = !DILocation(line: 648, column: 676, scope: !6393)
!6400 = !DILocation(line: 648, column: 679, scope: !6393)
!6401 = !DILocation(line: 648, column: 674, scope: !6393)
!6402 = !DILocation(line: 648, column: 625, scope: !6393)
!6403 = !DILocation(line: 651, column: 12, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6209, file: !888, line: 651, column: 5)
!6405 = !DILocation(line: 651, column: 10, scope: !6404)
!6406 = !DILocation(line: 651, column: 17, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6408, file: !888, discriminator: 1)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !888, line: 651, column: 5)
!6409 = !DILocation(line: 651, column: 19, scope: !6407)
!6410 = !DILocation(line: 651, column: 5, scope: !6407)
!6411 = !DILocation(line: 652, column: 16, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !888, line: 652, column: 9)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !888, line: 651, column: 29)
!6414 = !DILocation(line: 652, column: 14, scope: !6412)
!6415 = !DILocation(line: 652, column: 21, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6417, file: !888, discriminator: 1)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !888, line: 652, column: 9)
!6418 = !DILocation(line: 652, column: 23, scope: !6416)
!6419 = !DILocation(line: 652, column: 9, scope: !6416)
!6420 = !DILocation(line: 653, column: 23, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !888, line: 652, column: 32)
!6422 = !DILocation(line: 653, column: 20, scope: !6421)
!6423 = !DILocation(line: 653, column: 15, scope: !6421)
!6424 = !DILocation(line: 653, column: 13, scope: !6421)
!6425 = !DILocation(line: 653, column: 18, scope: !6421)
!6426 = !DILocation(line: 654, column: 23, scope: !6421)
!6427 = !DILocation(line: 654, column: 20, scope: !6421)
!6428 = !DILocation(line: 654, column: 15, scope: !6421)
!6429 = !DILocation(line: 654, column: 13, scope: !6421)
!6430 = !DILocation(line: 654, column: 18, scope: !6421)
!6431 = !DILocation(line: 655, column: 9, scope: !6421)
!6432 = !DILocation(line: 652, column: 29, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6417, file: !888, discriminator: 2)
!6434 = !DILocation(line: 652, column: 9, scope: !6433)
!6435 = distinct !{!6435, !6436}
!6436 = !DILocation(line: 652, column: 9, scope: !6413)
!6437 = !DILocation(line: 656, column: 14, scope: !6413)
!6438 = !DILocation(line: 656, column: 11, scope: !6413)
!6439 = !DILocation(line: 656, column: 28, scope: !6413)
!6440 = !DILocation(line: 656, column: 25, scope: !6413)
!6441 = !DILocation(line: 657, column: 15, scope: !6413)
!6442 = !DILocation(line: 657, column: 12, scope: !6413)
!6443 = !DILocation(line: 657, column: 31, scope: !6413)
!6444 = !DILocation(line: 657, column: 28, scope: !6413)
!6445 = !DILocation(line: 658, column: 5, scope: !6413)
!6446 = !DILocation(line: 651, column: 25, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !6408, file: !888, discriminator: 2)
!6448 = !DILocation(line: 651, column: 5, scope: !6447)
!6449 = distinct !{!6449, !6450}
!6450 = !DILocation(line: 651, column: 5, scope: !6209)
!6451 = !DILocation(line: 659, column: 10, scope: !6209)
!6452 = !DILocation(line: 659, column: 18, scope: !6209)
!6453 = !DILocation(line: 659, column: 7, scope: !6209)
!6454 = !DILocation(line: 660, column: 10, scope: !6209)
!6455 = !DILocation(line: 660, column: 18, scope: !6209)
!6456 = !DILocation(line: 660, column: 7, scope: !6209)
!6457 = !DILocation(line: 661, column: 30, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6209, file: !888, line: 661, column: 5)
!6459 = !DILocation(line: 661, column: 48, scope: !6458)
!6460 = !DILocation(line: 661, column: 36, scope: !6458)
!6461 = !DILocation(line: 661, column: 7, scope: !6458)
!6462 = !DILocation(line: 661, column: 12, scope: !6458)
!6463 = !DILocation(line: 661, column: 18, scope: !6458)
!6464 = !DILocation(line: 661, column: 83, scope: !6458)
!6465 = !DILocation(line: 661, column: 91, scope: !6458)
!6466 = !DILocation(line: 661, column: 81, scope: !6458)
!6467 = !DILocation(line: 661, column: 109, scope: !6458)
!6468 = !DILocation(line: 661, column: 96, scope: !6458)
!6469 = !DILocation(line: 661, column: 58, scope: !6458)
!6470 = !DILocation(line: 661, column: 63, scope: !6458)
!6471 = !DILocation(line: 661, column: 69, scope: !6458)
!6472 = !DILocation(line: 661, column: 133, scope: !6458)
!6473 = !DILocation(line: 661, column: 141, scope: !6458)
!6474 = !DILocation(line: 661, column: 131, scope: !6458)
!6475 = !DILocation(line: 661, column: 115, scope: !6458)
!6476 = !DILocation(line: 661, column: 124, scope: !6458)
!6477 = !DILocation(line: 661, column: 165, scope: !6458)
!6478 = !DILocation(line: 661, column: 173, scope: !6458)
!6479 = !DILocation(line: 661, column: 163, scope: !6458)
!6480 = !DILocation(line: 661, column: 147, scope: !6458)
!6481 = !DILocation(line: 661, column: 156, scope: !6458)
!6482 = !DILocation(line: 662, column: 36, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6209, file: !888, line: 662, column: 5)
!6484 = !DILocation(line: 662, column: 55, scope: !6483)
!6485 = !DILocation(line: 662, column: 61, scope: !6483)
!6486 = !DILocation(line: 662, column: 54, scope: !6483)
!6487 = !DILocation(line: 662, column: 42, scope: !6483)
!6488 = !DILocation(line: 662, column: 8, scope: !6483)
!6489 = !DILocation(line: 662, column: 13, scope: !6483)
!6490 = !DILocation(line: 662, column: 16, scope: !6483)
!6491 = !DILocation(line: 662, column: 7, scope: !6483)
!6492 = !DILocation(line: 662, column: 24, scope: !6483)
!6493 = !DILocation(line: 662, column: 101, scope: !6483)
!6494 = !DILocation(line: 662, column: 109, scope: !6483)
!6495 = !DILocation(line: 662, column: 99, scope: !6483)
!6496 = !DILocation(line: 662, column: 127, scope: !6483)
!6497 = !DILocation(line: 662, column: 114, scope: !6483)
!6498 = !DILocation(line: 662, column: 71, scope: !6483)
!6499 = !DILocation(line: 662, column: 76, scope: !6483)
!6500 = !DILocation(line: 662, column: 79, scope: !6483)
!6501 = !DILocation(line: 662, column: 70, scope: !6483)
!6502 = !DILocation(line: 662, column: 87, scope: !6483)
!6503 = !DILocation(line: 662, column: 157, scope: !6483)
!6504 = !DILocation(line: 662, column: 165, scope: !6483)
!6505 = !DILocation(line: 662, column: 155, scope: !6483)
!6506 = !DILocation(line: 662, column: 134, scope: !6483)
!6507 = !DILocation(line: 662, column: 140, scope: !6483)
!6508 = !DILocation(line: 662, column: 133, scope: !6483)
!6509 = !DILocation(line: 662, column: 148, scope: !6483)
!6510 = !DILocation(line: 662, column: 195, scope: !6483)
!6511 = !DILocation(line: 662, column: 203, scope: !6483)
!6512 = !DILocation(line: 662, column: 193, scope: !6483)
!6513 = !DILocation(line: 662, column: 172, scope: !6483)
!6514 = !DILocation(line: 662, column: 178, scope: !6483)
!6515 = !DILocation(line: 662, column: 171, scope: !6483)
!6516 = !DILocation(line: 662, column: 186, scope: !6483)
!6517 = !DILocation(line: 665, column: 17, scope: !6209)
!6518 = !DILocation(line: 665, column: 25, scope: !6209)
!6519 = !DILocation(line: 665, column: 23, scope: !6209)
!6520 = !DILocation(line: 665, column: 5, scope: !6209)
!6521 = !DILocation(line: 665, column: 10, scope: !6209)
!6522 = !DILocation(line: 665, column: 15, scope: !6209)
!6523 = !DILocation(line: 666, column: 24, scope: !6209)
!6524 = !DILocation(line: 666, column: 22, scope: !6209)
!6525 = !DILocation(line: 666, column: 17, scope: !6209)
!6526 = !DILocation(line: 666, column: 36, scope: !6209)
!6527 = !DILocation(line: 666, column: 34, scope: !6209)
!6528 = !DILocation(line: 666, column: 5, scope: !6209)
!6529 = !DILocation(line: 666, column: 10, scope: !6209)
!6530 = !DILocation(line: 666, column: 15, scope: !6209)
!6531 = !DILocation(line: 667, column: 24, scope: !6209)
!6532 = !DILocation(line: 667, column: 33, scope: !6209)
!6533 = !DILocation(line: 667, column: 22, scope: !6209)
!6534 = !DILocation(line: 667, column: 17, scope: !6209)
!6535 = !DILocation(line: 667, column: 47, scope: !6209)
!6536 = !DILocation(line: 667, column: 45, scope: !6209)
!6537 = !DILocation(line: 667, column: 40, scope: !6209)
!6538 = !DILocation(line: 667, column: 38, scope: !6209)
!6539 = !DILocation(line: 667, column: 5, scope: !6209)
!6540 = !DILocation(line: 667, column: 10, scope: !6209)
!6541 = !DILocation(line: 667, column: 15, scope: !6209)
!6542 = !DILocation(line: 668, column: 24, scope: !6209)
!6543 = !DILocation(line: 668, column: 33, scope: !6209)
!6544 = !DILocation(line: 668, column: 22, scope: !6209)
!6545 = !DILocation(line: 668, column: 17, scope: !6209)
!6546 = !DILocation(line: 668, column: 47, scope: !6209)
!6547 = !DILocation(line: 668, column: 56, scope: !6209)
!6548 = !DILocation(line: 668, column: 45, scope: !6209)
!6549 = !DILocation(line: 668, column: 40, scope: !6209)
!6550 = !DILocation(line: 668, column: 38, scope: !6209)
!6551 = !DILocation(line: 668, column: 5, scope: !6209)
!6552 = !DILocation(line: 668, column: 10, scope: !6209)
!6553 = !DILocation(line: 668, column: 15, scope: !6209)
!6554 = !DILocation(line: 670, column: 12, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6209, file: !888, line: 670, column: 5)
!6556 = !DILocation(line: 670, column: 10, scope: !6555)
!6557 = !DILocation(line: 670, column: 17, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6559, file: !888, discriminator: 1)
!6559 = distinct !DILexicalBlock(scope: !6555, file: !888, line: 670, column: 5)
!6560 = !DILocation(line: 670, column: 19, scope: !6558)
!6561 = !DILocation(line: 670, column: 5, scope: !6558)
!6562 = !DILocation(line: 671, column: 16, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !888, line: 671, column: 9)
!6564 = distinct !DILexicalBlock(scope: !6559, file: !888, line: 670, column: 29)
!6565 = !DILocation(line: 671, column: 14, scope: !6563)
!6566 = !DILocation(line: 671, column: 21, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !6568, file: !888, discriminator: 1)
!6568 = distinct !DILexicalBlock(scope: !6563, file: !888, line: 671, column: 9)
!6569 = !DILocation(line: 671, column: 23, scope: !6567)
!6570 = !DILocation(line: 671, column: 9, scope: !6567)
!6571 = !DILocation(line: 672, column: 23, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !888, line: 671, column: 33)
!6573 = !DILocation(line: 672, column: 20, scope: !6572)
!6574 = !DILocation(line: 672, column: 15, scope: !6572)
!6575 = !DILocation(line: 672, column: 13, scope: !6572)
!6576 = !DILocation(line: 672, column: 18, scope: !6572)
!6577 = !DILocation(line: 673, column: 26, scope: !6572)
!6578 = !DILocation(line: 673, column: 23, scope: !6572)
!6579 = !DILocation(line: 673, column: 18, scope: !6572)
!6580 = !DILocation(line: 673, column: 13, scope: !6572)
!6581 = !DILocation(line: 673, column: 21, scope: !6572)
!6582 = !DILocation(line: 674, column: 9, scope: !6572)
!6583 = !DILocation(line: 671, column: 29, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !6568, file: !888, discriminator: 2)
!6585 = !DILocation(line: 671, column: 9, scope: !6584)
!6586 = distinct !{!6586, !6587}
!6587 = !DILocation(line: 671, column: 9, scope: !6564)
!6588 = !DILocation(line: 675, column: 14, scope: !6564)
!6589 = !DILocation(line: 675, column: 11, scope: !6564)
!6590 = !DILocation(line: 676, column: 15, scope: !6564)
!6591 = !DILocation(line: 676, column: 12, scope: !6564)
!6592 = !DILocation(line: 677, column: 5, scope: !6564)
!6593 = !DILocation(line: 670, column: 25, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6559, file: !888, discriminator: 2)
!6595 = !DILocation(line: 670, column: 5, scope: !6594)
!6596 = distinct !{!6596, !6597}
!6597 = !DILocation(line: 670, column: 5, scope: !6209)
!6598 = !DILocation(line: 678, column: 1, scope: !6209)
!6599 = distinct !DISubprogram(name: "tm2_motion_block", scope: !888, file: !888, line: 720, type: !4887, isLocal: true, isDefinition: true, scopeLine: 721, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!6600 = !DILocalVariable(name: "a", arg: 1, scope: !6601, file: !3189, line: 127, type: !905)
!6601 = distinct !DISubprogram(name: "av_clip_c", scope: !3189, file: !3189, line: 127, type: !6602, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{!905, !905, !905, !905}
!6604 = !DILocation(line: 127, column: 87, scope: !6601, inlinedAt: !6605)
!6605 = distinct !DILocation(line: 729, column: 10, scope: !6599)
!6606 = !DILocalVariable(name: "amin", arg: 2, scope: !6601, file: !3189, line: 127, type: !905)
!6607 = !DILocation(line: 127, column: 94, scope: !6601, inlinedAt: !6605)
!6608 = !DILocalVariable(name: "amax", arg: 3, scope: !6601, file: !3189, line: 127, type: !905)
!6609 = !DILocation(line: 127, column: 104, scope: !6601, inlinedAt: !6605)
!6610 = !DILocation(line: 127, column: 87, scope: !6601, inlinedAt: !6611)
!6611 = distinct !DILocation(line: 728, column: 10, scope: !6599)
!6612 = !DILocation(line: 127, column: 94, scope: !6601, inlinedAt: !6611)
!6613 = !DILocation(line: 127, column: 104, scope: !6601, inlinedAt: !6611)
!6614 = !DILocalVariable(name: "ctx", arg: 1, scope: !6599, file: !888, line: 720, type: !1657)
!6615 = !DILocation(line: 720, column: 49, scope: !6599)
!6616 = !DILocalVariable(name: "pic", arg: 2, scope: !6599, file: !888, line: 720, type: !1031)
!6617 = !DILocation(line: 720, column: 63, scope: !6599)
!6618 = !DILocalVariable(name: "bx", arg: 3, scope: !6599, file: !888, line: 720, type: !905)
!6619 = !DILocation(line: 720, column: 72, scope: !6599)
!6620 = !DILocalVariable(name: "by", arg: 4, scope: !6599, file: !888, line: 720, type: !905)
!6621 = !DILocation(line: 720, column: 80, scope: !6599)
!6622 = !DILocalVariable(name: "i", scope: !6599, file: !888, line: 722, type: !905)
!6623 = !DILocation(line: 722, column: 9, scope: !6599)
!6624 = !DILocalVariable(name: "j", scope: !6599, file: !888, line: 722, type: !905)
!6625 = !DILocation(line: 722, column: 12, scope: !6599)
!6626 = !DILocalVariable(name: "mx", scope: !6599, file: !888, line: 723, type: !905)
!6627 = !DILocation(line: 723, column: 9, scope: !6599)
!6628 = !DILocalVariable(name: "my", scope: !6599, file: !888, line: 723, type: !905)
!6629 = !DILocation(line: 723, column: 13, scope: !6599)
!6630 = !DILocalVariable(name: "Yo", scope: !6599, file: !888, line: 724, type: !1303)
!6631 = !DILocation(line: 724, column: 10, scope: !6599)
!6632 = !DILocalVariable(name: "Uo", scope: !6599, file: !888, line: 724, type: !1303)
!6633 = !DILocation(line: 724, column: 15, scope: !6599)
!6634 = !DILocalVariable(name: "Vo", scope: !6599, file: !888, line: 724, type: !1303)
!6635 = !DILocation(line: 724, column: 20, scope: !6599)
!6636 = !DILocalVariable(name: "oYstride", scope: !6599, file: !888, line: 724, type: !905)
!6637 = !DILocation(line: 724, column: 28, scope: !6599)
!6638 = !DILocalVariable(name: "oUstride", scope: !6599, file: !888, line: 724, type: !905)
!6639 = !DILocation(line: 724, column: 38, scope: !6599)
!6640 = !DILocalVariable(name: "oVstride", scope: !6599, file: !888, line: 724, type: !905)
!6641 = !DILocation(line: 724, column: 48, scope: !6599)
!6642 = !DILocalVariable(name: "last", scope: !6599, file: !888, line: 724, type: !1303)
!6643 = !DILocation(line: 724, column: 63, scope: !6599)
!6644 = !DILocalVariable(name: "clast", scope: !6599, file: !888, line: 724, type: !1303)
!6645 = !DILocation(line: 724, column: 70, scope: !6599)
!6646 = !DILocalVariable(name: "Y", scope: !6599, file: !888, line: 724, type: !1303)
!6647 = !DILocation(line: 724, column: 82, scope: !6599)
!6648 = !DILocalVariable(name: "U", scope: !6599, file: !888, line: 724, type: !1303)
!6649 = !DILocation(line: 724, column: 86, scope: !6599)
!6650 = !DILocalVariable(name: "V", scope: !6599, file: !888, line: 724, type: !1303)
!6651 = !DILocation(line: 724, column: 90, scope: !6599)
!6652 = !DILocalVariable(name: "Ystride", scope: !6599, file: !888, line: 724, type: !905)
!6653 = !DILocation(line: 724, column: 97, scope: !6599)
!6654 = !DILocalVariable(name: "Ustride", scope: !6599, file: !888, line: 724, type: !905)
!6655 = !DILocation(line: 724, column: 106, scope: !6599)
!6656 = !DILocalVariable(name: "Vstride", scope: !6599, file: !888, line: 724, type: !905)
!6657 = !DILocation(line: 724, column: 115, scope: !6599)
!6658 = !DILocation(line: 724, column: 134, scope: !6599)
!6659 = !DILocation(line: 724, column: 139, scope: !6599)
!6660 = !DILocation(line: 724, column: 132, scope: !6599)
!6661 = !DILocation(line: 724, column: 159, scope: !6599)
!6662 = !DILocation(line: 724, column: 164, scope: !6599)
!6663 = !DILocation(line: 724, column: 157, scope: !6599)
!6664 = !DILocation(line: 724, column: 185, scope: !6599)
!6665 = !DILocation(line: 724, column: 190, scope: !6599)
!6666 = !DILocation(line: 724, column: 183, scope: !6599)
!6667 = !DILocation(line: 724, column: 206, scope: !6599)
!6668 = !DILocation(line: 724, column: 211, scope: !6599)
!6669 = !DILocation(line: 724, column: 215, scope: !6670)
!6670 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 1)
!6671 = !DILocation(line: 724, column: 220, scope: !6670)
!6672 = !DILocation(line: 724, column: 206, scope: !6670)
!6673 = !DILocation(line: 724, column: 223, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 2)
!6675 = !DILocation(line: 724, column: 228, scope: !6674)
!6676 = !DILocation(line: 724, column: 206, scope: !6674)
!6677 = !DILocation(line: 724, column: 206, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 3)
!6679 = !DILocation(line: 724, column: 234, scope: !6678)
!6680 = !DILocation(line: 724, column: 237, scope: !6678)
!6681 = !DILocation(line: 724, column: 243, scope: !6678)
!6682 = !DILocation(line: 724, column: 241, scope: !6678)
!6683 = !DILocation(line: 724, column: 232, scope: !6678)
!6684 = !DILocation(line: 724, column: 253, scope: !6678)
!6685 = !DILocation(line: 724, column: 256, scope: !6678)
!6686 = !DILocation(line: 724, column: 251, scope: !6678)
!6687 = !DILocation(line: 724, column: 203, scope: !6678)
!6688 = !DILocation(line: 724, column: 266, scope: !6678)
!6689 = !DILocation(line: 724, column: 271, scope: !6678)
!6690 = !DILocation(line: 724, column: 275, scope: !6691)
!6691 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 4)
!6692 = !DILocation(line: 724, column: 280, scope: !6691)
!6693 = !DILocation(line: 724, column: 266, scope: !6691)
!6694 = !DILocation(line: 724, column: 283, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 5)
!6696 = !DILocation(line: 724, column: 288, scope: !6695)
!6697 = !DILocation(line: 724, column: 266, scope: !6695)
!6698 = !DILocation(line: 724, column: 266, scope: !6699)
!6699 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 6)
!6700 = !DILocation(line: 724, column: 294, scope: !6699)
!6701 = !DILocation(line: 724, column: 297, scope: !6699)
!6702 = !DILocation(line: 724, column: 303, scope: !6699)
!6703 = !DILocation(line: 724, column: 301, scope: !6699)
!6704 = !DILocation(line: 724, column: 292, scope: !6699)
!6705 = !DILocation(line: 724, column: 313, scope: !6699)
!6706 = !DILocation(line: 724, column: 316, scope: !6699)
!6707 = !DILocation(line: 724, column: 311, scope: !6699)
!6708 = !DILocation(line: 724, column: 263, scope: !6699)
!6709 = !DILocation(line: 724, column: 326, scope: !6699)
!6710 = !DILocation(line: 724, column: 331, scope: !6699)
!6711 = !DILocation(line: 724, column: 335, scope: !6712)
!6712 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 7)
!6713 = !DILocation(line: 724, column: 340, scope: !6712)
!6714 = !DILocation(line: 724, column: 326, scope: !6712)
!6715 = !DILocation(line: 724, column: 343, scope: !6716)
!6716 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 8)
!6717 = !DILocation(line: 724, column: 348, scope: !6716)
!6718 = !DILocation(line: 724, column: 326, scope: !6716)
!6719 = !DILocation(line: 724, column: 326, scope: !6720)
!6720 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 9)
!6721 = !DILocation(line: 724, column: 354, scope: !6720)
!6722 = !DILocation(line: 724, column: 357, scope: !6720)
!6723 = !DILocation(line: 724, column: 363, scope: !6720)
!6724 = !DILocation(line: 724, column: 361, scope: !6720)
!6725 = !DILocation(line: 724, column: 352, scope: !6720)
!6726 = !DILocation(line: 724, column: 373, scope: !6720)
!6727 = !DILocation(line: 724, column: 376, scope: !6720)
!6728 = !DILocation(line: 724, column: 371, scope: !6720)
!6729 = !DILocation(line: 724, column: 323, scope: !6720)
!6730 = !DILocation(line: 724, column: 388, scope: !6720)
!6731 = !DILocation(line: 724, column: 393, scope: !6720)
!6732 = !DILocation(line: 724, column: 400, scope: !6720)
!6733 = !DILocation(line: 724, column: 403, scope: !6720)
!6734 = !DILocation(line: 724, column: 398, scope: !6720)
!6735 = !DILocation(line: 724, column: 386, scope: !6720)
!6736 = !DILocation(line: 724, column: 416, scope: !6720)
!6737 = !DILocation(line: 724, column: 421, scope: !6720)
!6738 = !DILocation(line: 724, column: 429, scope: !6720)
!6739 = !DILocation(line: 724, column: 432, scope: !6720)
!6740 = !DILocation(line: 724, column: 427, scope: !6720)
!6741 = !DILocation(line: 724, column: 414, scope: !6720)
!6742 = !DILocation(line: 724, column: 449, scope: !6720)
!6743 = !DILocation(line: 724, column: 447, scope: !6720)
!6744 = !DILocation(line: 724, column: 469, scope: !6720)
!6745 = !DILocation(line: 724, column: 467, scope: !6720)
!6746 = !DILocation(line: 724, column: 489, scope: !6720)
!6747 = !DILocation(line: 724, column: 487, scope: !6720)
!6748 = !DILocation(line: 724, column: 504, scope: !6720)
!6749 = !DILocation(line: 724, column: 509, scope: !6720)
!6750 = !DILocation(line: 724, column: 513, scope: !6751)
!6751 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 10)
!6752 = !DILocation(line: 724, column: 518, scope: !6751)
!6753 = !DILocation(line: 724, column: 504, scope: !6751)
!6754 = !DILocation(line: 724, column: 521, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 11)
!6756 = !DILocation(line: 724, column: 526, scope: !6755)
!6757 = !DILocation(line: 724, column: 504, scope: !6755)
!6758 = !DILocation(line: 724, column: 504, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 12)
!6760 = !DILocation(line: 724, column: 532, scope: !6759)
!6761 = !DILocation(line: 724, column: 535, scope: !6759)
!6762 = !DILocation(line: 724, column: 541, scope: !6759)
!6763 = !DILocation(line: 724, column: 539, scope: !6759)
!6764 = !DILocation(line: 724, column: 530, scope: !6759)
!6765 = !DILocation(line: 724, column: 552, scope: !6759)
!6766 = !DILocation(line: 724, column: 555, scope: !6759)
!6767 = !DILocation(line: 724, column: 550, scope: !6759)
!6768 = !DILocation(line: 724, column: 501, scope: !6759)
!6769 = !DILocation(line: 724, column: 566, scope: !6759)
!6770 = !DILocation(line: 724, column: 571, scope: !6759)
!6771 = !DILocation(line: 724, column: 575, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 13)
!6773 = !DILocation(line: 724, column: 580, scope: !6772)
!6774 = !DILocation(line: 724, column: 566, scope: !6772)
!6775 = !DILocation(line: 724, column: 583, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 14)
!6777 = !DILocation(line: 724, column: 588, scope: !6776)
!6778 = !DILocation(line: 724, column: 566, scope: !6776)
!6779 = !DILocation(line: 724, column: 566, scope: !6780)
!6780 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 15)
!6781 = !DILocation(line: 724, column: 594, scope: !6780)
!6782 = !DILocation(line: 724, column: 597, scope: !6780)
!6783 = !DILocation(line: 724, column: 603, scope: !6780)
!6784 = !DILocation(line: 724, column: 601, scope: !6780)
!6785 = !DILocation(line: 724, column: 592, scope: !6780)
!6786 = !DILocation(line: 724, column: 614, scope: !6780)
!6787 = !DILocation(line: 724, column: 617, scope: !6780)
!6788 = !DILocation(line: 724, column: 612, scope: !6780)
!6789 = !DILocation(line: 724, column: 563, scope: !6780)
!6790 = !DILocation(line: 724, column: 628, scope: !6780)
!6791 = !DILocation(line: 724, column: 633, scope: !6780)
!6792 = !DILocation(line: 724, column: 637, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 16)
!6794 = !DILocation(line: 724, column: 642, scope: !6793)
!6795 = !DILocation(line: 724, column: 628, scope: !6793)
!6796 = !DILocation(line: 724, column: 645, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 17)
!6798 = !DILocation(line: 724, column: 650, scope: !6797)
!6799 = !DILocation(line: 724, column: 628, scope: !6797)
!6800 = !DILocation(line: 724, column: 628, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !6599, file: !888, discriminator: 18)
!6802 = !DILocation(line: 724, column: 656, scope: !6801)
!6803 = !DILocation(line: 724, column: 659, scope: !6801)
!6804 = !DILocation(line: 724, column: 665, scope: !6801)
!6805 = !DILocation(line: 724, column: 663, scope: !6801)
!6806 = !DILocation(line: 724, column: 654, scope: !6801)
!6807 = !DILocation(line: 724, column: 676, scope: !6801)
!6808 = !DILocation(line: 724, column: 679, scope: !6801)
!6809 = !DILocation(line: 724, column: 674, scope: !6801)
!6810 = !DILocation(line: 724, column: 625, scope: !6801)
!6811 = !DILocation(line: 726, column: 18, scope: !6599)
!6812 = !DILocation(line: 726, column: 10, scope: !6599)
!6813 = !DILocation(line: 726, column: 8, scope: !6599)
!6814 = !DILocation(line: 727, column: 18, scope: !6599)
!6815 = !DILocation(line: 727, column: 10, scope: !6599)
!6816 = !DILocation(line: 727, column: 8, scope: !6599)
!6817 = !DILocation(line: 728, column: 20, scope: !6599)
!6818 = !DILocation(line: 728, column: 26, scope: !6599)
!6819 = !DILocation(line: 728, column: 29, scope: !6599)
!6820 = !DILocation(line: 728, column: 33, scope: !6599)
!6821 = !DILocation(line: 728, column: 24, scope: !6599)
!6822 = !DILocation(line: 728, column: 39, scope: !6599)
!6823 = !DILocation(line: 728, column: 44, scope: !6599)
!6824 = !DILocation(line: 728, column: 51, scope: !6599)
!6825 = !DILocation(line: 728, column: 59, scope: !6599)
!6826 = !DILocation(line: 728, column: 62, scope: !6599)
!6827 = !DILocation(line: 728, column: 57, scope: !6599)
!6828 = !DILocation(line: 728, column: 10, scope: !6599)
!6829 = !DILocation(line: 132, column: 9, scope: !6830, inlinedAt: !6611)
!6830 = distinct !DILexicalBlock(scope: !6601, file: !3189, line: 132, column: 9)
!6831 = !DILocation(line: 132, column: 13, scope: !6830, inlinedAt: !6611)
!6832 = !DILocation(line: 132, column: 11, scope: !6830, inlinedAt: !6611)
!6833 = !DILocation(line: 132, column: 9, scope: !6601, inlinedAt: !6611)
!6834 = !DILocation(line: 132, column: 26, scope: !6835, inlinedAt: !6611)
!6835 = !DILexicalBlockFile(scope: !6830, file: !3189, discriminator: 1)
!6836 = !DILocation(line: 132, column: 19, scope: !6835, inlinedAt: !6611)
!6837 = !DILocation(line: 133, column: 14, scope: !6838, inlinedAt: !6611)
!6838 = distinct !DILexicalBlock(scope: !6830, file: !3189, line: 133, column: 14)
!6839 = !DILocation(line: 133, column: 18, scope: !6838, inlinedAt: !6611)
!6840 = !DILocation(line: 133, column: 16, scope: !6838, inlinedAt: !6611)
!6841 = !DILocation(line: 133, column: 14, scope: !6830, inlinedAt: !6611)
!6842 = !DILocation(line: 133, column: 31, scope: !6843, inlinedAt: !6611)
!6843 = !DILexicalBlockFile(scope: !6838, file: !3189, discriminator: 1)
!6844 = !DILocation(line: 133, column: 24, scope: !6843, inlinedAt: !6611)
!6845 = !DILocation(line: 134, column: 17, scope: !6838, inlinedAt: !6611)
!6846 = !DILocation(line: 134, column: 10, scope: !6838, inlinedAt: !6611)
!6847 = !DILocation(line: 135, column: 1, scope: !6601, inlinedAt: !6611)
!6848 = !DILocation(line: 728, column: 8, scope: !6599)
!6849 = !DILocation(line: 729, column: 20, scope: !6599)
!6850 = !DILocation(line: 729, column: 26, scope: !6599)
!6851 = !DILocation(line: 729, column: 29, scope: !6599)
!6852 = !DILocation(line: 729, column: 33, scope: !6599)
!6853 = !DILocation(line: 729, column: 24, scope: !6599)
!6854 = !DILocation(line: 729, column: 39, scope: !6599)
!6855 = !DILocation(line: 729, column: 44, scope: !6599)
!6856 = !DILocation(line: 729, column: 51, scope: !6599)
!6857 = !DILocation(line: 729, column: 60, scope: !6599)
!6858 = !DILocation(line: 729, column: 63, scope: !6599)
!6859 = !DILocation(line: 729, column: 58, scope: !6599)
!6860 = !DILocation(line: 729, column: 10, scope: !6599)
!6861 = !DILocation(line: 132, column: 9, scope: !6830, inlinedAt: !6605)
!6862 = !DILocation(line: 132, column: 13, scope: !6830, inlinedAt: !6605)
!6863 = !DILocation(line: 132, column: 11, scope: !6830, inlinedAt: !6605)
!6864 = !DILocation(line: 132, column: 9, scope: !6601, inlinedAt: !6605)
!6865 = !DILocation(line: 132, column: 26, scope: !6835, inlinedAt: !6605)
!6866 = !DILocation(line: 132, column: 19, scope: !6835, inlinedAt: !6605)
!6867 = !DILocation(line: 133, column: 14, scope: !6838, inlinedAt: !6605)
!6868 = !DILocation(line: 133, column: 18, scope: !6838, inlinedAt: !6605)
!6869 = !DILocation(line: 133, column: 16, scope: !6838, inlinedAt: !6605)
!6870 = !DILocation(line: 133, column: 14, scope: !6830, inlinedAt: !6605)
!6871 = !DILocation(line: 133, column: 31, scope: !6843, inlinedAt: !6605)
!6872 = !DILocation(line: 133, column: 24, scope: !6843, inlinedAt: !6605)
!6873 = !DILocation(line: 134, column: 17, scope: !6838, inlinedAt: !6605)
!6874 = !DILocation(line: 134, column: 10, scope: !6838, inlinedAt: !6605)
!6875 = !DILocation(line: 135, column: 1, scope: !6601, inlinedAt: !6605)
!6876 = !DILocation(line: 729, column: 8, scope: !6599)
!6877 = !DILocation(line: 731, column: 11, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 731, column: 9)
!6879 = !DILocation(line: 731, column: 10, scope: !6878)
!6880 = !DILocation(line: 731, column: 14, scope: !6878)
!6881 = !DILocation(line: 731, column: 13, scope: !6878)
!6882 = !DILocation(line: 731, column: 16, scope: !6878)
!6883 = !DILocation(line: 731, column: 19, scope: !6878)
!6884 = !DILocation(line: 731, column: 24, scope: !6885)
!6885 = !DILexicalBlockFile(scope: !6878, file: !888, discriminator: 1)
!6886 = !DILocation(line: 731, column: 23, scope: !6885)
!6887 = !DILocation(line: 731, column: 27, scope: !6885)
!6888 = !DILocation(line: 731, column: 26, scope: !6885)
!6889 = !DILocation(line: 731, column: 29, scope: !6885)
!6890 = !DILocation(line: 731, column: 32, scope: !6885)
!6891 = !DILocation(line: 731, column: 37, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6878, file: !888, discriminator: 2)
!6893 = !DILocation(line: 731, column: 36, scope: !6892)
!6894 = !DILocation(line: 731, column: 40, scope: !6892)
!6895 = !DILocation(line: 731, column: 39, scope: !6892)
!6896 = !DILocation(line: 731, column: 42, scope: !6892)
!6897 = !DILocation(line: 731, column: 47, scope: !6892)
!6898 = !DILocation(line: 731, column: 52, scope: !6892)
!6899 = !DILocation(line: 731, column: 59, scope: !6892)
!6900 = !DILocation(line: 731, column: 45, scope: !6892)
!6901 = !DILocation(line: 731, column: 65, scope: !6892)
!6902 = !DILocation(line: 731, column: 70, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !6878, file: !888, discriminator: 3)
!6904 = !DILocation(line: 731, column: 69, scope: !6903)
!6905 = !DILocation(line: 731, column: 73, scope: !6903)
!6906 = !DILocation(line: 731, column: 72, scope: !6903)
!6907 = !DILocation(line: 731, column: 75, scope: !6903)
!6908 = !DILocation(line: 731, column: 80, scope: !6903)
!6909 = !DILocation(line: 731, column: 85, scope: !6903)
!6910 = !DILocation(line: 731, column: 92, scope: !6903)
!6911 = !DILocation(line: 731, column: 78, scope: !6903)
!6912 = !DILocation(line: 731, column: 9, scope: !6903)
!6913 = !DILocation(line: 732, column: 16, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6878, file: !888, line: 731, column: 100)
!6915 = !DILocation(line: 732, column: 21, scope: !6914)
!6916 = !DILocation(line: 732, column: 9, scope: !6914)
!6917 = !DILocation(line: 733, column: 9, scope: !6914)
!6918 = !DILocation(line: 736, column: 11, scope: !6599)
!6919 = !DILocation(line: 736, column: 16, scope: !6599)
!6920 = !DILocation(line: 736, column: 14, scope: !6599)
!6921 = !DILocation(line: 736, column: 27, scope: !6599)
!6922 = !DILocation(line: 736, column: 25, scope: !6599)
!6923 = !DILocation(line: 736, column: 8, scope: !6599)
!6924 = !DILocation(line: 737, column: 12, scope: !6599)
!6925 = !DILocation(line: 737, column: 15, scope: !6599)
!6926 = !DILocation(line: 737, column: 23, scope: !6599)
!6927 = !DILocation(line: 737, column: 21, scope: !6599)
!6928 = !DILocation(line: 737, column: 35, scope: !6599)
!6929 = !DILocation(line: 737, column: 38, scope: !6599)
!6930 = !DILocation(line: 737, column: 32, scope: !6599)
!6931 = !DILocation(line: 737, column: 8, scope: !6599)
!6932 = !DILocation(line: 738, column: 12, scope: !6599)
!6933 = !DILocation(line: 738, column: 15, scope: !6599)
!6934 = !DILocation(line: 738, column: 23, scope: !6599)
!6935 = !DILocation(line: 738, column: 21, scope: !6599)
!6936 = !DILocation(line: 738, column: 35, scope: !6599)
!6937 = !DILocation(line: 738, column: 38, scope: !6599)
!6938 = !DILocation(line: 738, column: 32, scope: !6599)
!6939 = !DILocation(line: 738, column: 8, scope: !6599)
!6940 = !DILocation(line: 741, column: 12, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 741, column: 5)
!6942 = !DILocation(line: 741, column: 10, scope: !6941)
!6943 = !DILocation(line: 741, column: 17, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6945, file: !888, discriminator: 1)
!6945 = distinct !DILexicalBlock(scope: !6941, file: !888, line: 741, column: 5)
!6946 = !DILocation(line: 741, column: 19, scope: !6944)
!6947 = !DILocation(line: 741, column: 5, scope: !6944)
!6948 = !DILocation(line: 742, column: 16, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !888, line: 742, column: 9)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !888, line: 741, column: 29)
!6951 = !DILocation(line: 742, column: 14, scope: !6949)
!6952 = !DILocation(line: 742, column: 21, scope: !6953)
!6953 = !DILexicalBlockFile(scope: !6954, file: !888, discriminator: 1)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !888, line: 742, column: 9)
!6955 = !DILocation(line: 742, column: 23, scope: !6953)
!6956 = !DILocation(line: 742, column: 9, scope: !6953)
!6957 = !DILocation(line: 743, column: 23, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6954, file: !888, line: 742, column: 33)
!6959 = !DILocation(line: 743, column: 20, scope: !6958)
!6960 = !DILocation(line: 743, column: 15, scope: !6958)
!6961 = !DILocation(line: 743, column: 13, scope: !6958)
!6962 = !DILocation(line: 743, column: 18, scope: !6958)
!6963 = !DILocation(line: 744, column: 23, scope: !6958)
!6964 = !DILocation(line: 744, column: 20, scope: !6958)
!6965 = !DILocation(line: 744, column: 15, scope: !6958)
!6966 = !DILocation(line: 744, column: 13, scope: !6958)
!6967 = !DILocation(line: 744, column: 18, scope: !6958)
!6968 = !DILocation(line: 745, column: 9, scope: !6958)
!6969 = !DILocation(line: 742, column: 29, scope: !6970)
!6970 = !DILexicalBlockFile(scope: !6954, file: !888, discriminator: 2)
!6971 = !DILocation(line: 742, column: 9, scope: !6970)
!6972 = distinct !{!6972, !6973}
!6973 = !DILocation(line: 742, column: 9, scope: !6950)
!6974 = !DILocation(line: 746, column: 14, scope: !6950)
!6975 = !DILocation(line: 746, column: 11, scope: !6950)
!6976 = !DILocation(line: 747, column: 14, scope: !6950)
!6977 = !DILocation(line: 747, column: 11, scope: !6950)
!6978 = !DILocation(line: 748, column: 15, scope: !6950)
!6979 = !DILocation(line: 748, column: 12, scope: !6950)
!6980 = !DILocation(line: 749, column: 15, scope: !6950)
!6981 = !DILocation(line: 749, column: 12, scope: !6950)
!6982 = !DILocation(line: 750, column: 5, scope: !6950)
!6983 = !DILocation(line: 741, column: 25, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !6945, file: !888, discriminator: 2)
!6985 = !DILocation(line: 741, column: 5, scope: !6984)
!6986 = distinct !{!6986, !6987}
!6987 = !DILocation(line: 741, column: 5, scope: !6599)
!6988 = !DILocation(line: 751, column: 10, scope: !6599)
!6989 = !DILocation(line: 751, column: 18, scope: !6599)
!6990 = !DILocation(line: 751, column: 7, scope: !6599)
!6991 = !DILocation(line: 752, column: 10, scope: !6599)
!6992 = !DILocation(line: 752, column: 18, scope: !6599)
!6993 = !DILocation(line: 752, column: 7, scope: !6599)
!6994 = !DILocation(line: 753, column: 30, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 753, column: 5)
!6996 = !DILocation(line: 753, column: 48, scope: !6995)
!6997 = !DILocation(line: 753, column: 36, scope: !6995)
!6998 = !DILocation(line: 753, column: 7, scope: !6995)
!6999 = !DILocation(line: 753, column: 12, scope: !6995)
!7000 = !DILocation(line: 753, column: 18, scope: !6995)
!7001 = !DILocation(line: 753, column: 83, scope: !6995)
!7002 = !DILocation(line: 753, column: 91, scope: !6995)
!7003 = !DILocation(line: 753, column: 81, scope: !6995)
!7004 = !DILocation(line: 753, column: 109, scope: !6995)
!7005 = !DILocation(line: 753, column: 96, scope: !6995)
!7006 = !DILocation(line: 753, column: 58, scope: !6995)
!7007 = !DILocation(line: 753, column: 63, scope: !6995)
!7008 = !DILocation(line: 753, column: 69, scope: !6995)
!7009 = !DILocation(line: 753, column: 133, scope: !6995)
!7010 = !DILocation(line: 753, column: 141, scope: !6995)
!7011 = !DILocation(line: 753, column: 131, scope: !6995)
!7012 = !DILocation(line: 753, column: 115, scope: !6995)
!7013 = !DILocation(line: 753, column: 124, scope: !6995)
!7014 = !DILocation(line: 753, column: 165, scope: !6995)
!7015 = !DILocation(line: 753, column: 173, scope: !6995)
!7016 = !DILocation(line: 753, column: 163, scope: !6995)
!7017 = !DILocation(line: 753, column: 147, scope: !6995)
!7018 = !DILocation(line: 753, column: 156, scope: !6995)
!7019 = !DILocation(line: 754, column: 36, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 754, column: 5)
!7021 = !DILocation(line: 754, column: 55, scope: !7020)
!7022 = !DILocation(line: 754, column: 61, scope: !7020)
!7023 = !DILocation(line: 754, column: 54, scope: !7020)
!7024 = !DILocation(line: 754, column: 42, scope: !7020)
!7025 = !DILocation(line: 754, column: 8, scope: !7020)
!7026 = !DILocation(line: 754, column: 13, scope: !7020)
!7027 = !DILocation(line: 754, column: 16, scope: !7020)
!7028 = !DILocation(line: 754, column: 7, scope: !7020)
!7029 = !DILocation(line: 754, column: 24, scope: !7020)
!7030 = !DILocation(line: 754, column: 101, scope: !7020)
!7031 = !DILocation(line: 754, column: 109, scope: !7020)
!7032 = !DILocation(line: 754, column: 99, scope: !7020)
!7033 = !DILocation(line: 754, column: 127, scope: !7020)
!7034 = !DILocation(line: 754, column: 114, scope: !7020)
!7035 = !DILocation(line: 754, column: 71, scope: !7020)
!7036 = !DILocation(line: 754, column: 76, scope: !7020)
!7037 = !DILocation(line: 754, column: 79, scope: !7020)
!7038 = !DILocation(line: 754, column: 70, scope: !7020)
!7039 = !DILocation(line: 754, column: 87, scope: !7020)
!7040 = !DILocation(line: 754, column: 157, scope: !7020)
!7041 = !DILocation(line: 754, column: 165, scope: !7020)
!7042 = !DILocation(line: 754, column: 155, scope: !7020)
!7043 = !DILocation(line: 754, column: 134, scope: !7020)
!7044 = !DILocation(line: 754, column: 140, scope: !7020)
!7045 = !DILocation(line: 754, column: 133, scope: !7020)
!7046 = !DILocation(line: 754, column: 148, scope: !7020)
!7047 = !DILocation(line: 754, column: 195, scope: !7020)
!7048 = !DILocation(line: 754, column: 203, scope: !7020)
!7049 = !DILocation(line: 754, column: 193, scope: !7020)
!7050 = !DILocation(line: 754, column: 172, scope: !7020)
!7051 = !DILocation(line: 754, column: 178, scope: !7020)
!7052 = !DILocation(line: 754, column: 171, scope: !7020)
!7053 = !DILocation(line: 754, column: 186, scope: !7020)
!7054 = !DILocation(line: 757, column: 12, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 757, column: 5)
!7056 = !DILocation(line: 757, column: 10, scope: !7055)
!7057 = !DILocation(line: 757, column: 17, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !7059, file: !888, discriminator: 1)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !888, line: 757, column: 5)
!7060 = !DILocation(line: 757, column: 19, scope: !7058)
!7061 = !DILocation(line: 757, column: 5, scope: !7058)
!7062 = !DILocation(line: 758, column: 16, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !888, line: 758, column: 9)
!7064 = distinct !DILexicalBlock(scope: !7059, file: !888, line: 757, column: 29)
!7065 = !DILocation(line: 758, column: 14, scope: !7063)
!7066 = !DILocation(line: 758, column: 21, scope: !7067)
!7067 = !DILexicalBlockFile(scope: !7068, file: !888, discriminator: 1)
!7068 = distinct !DILexicalBlock(scope: !7063, file: !888, line: 758, column: 9)
!7069 = !DILocation(line: 758, column: 23, scope: !7067)
!7070 = !DILocation(line: 758, column: 9, scope: !7067)
!7071 = !DILocation(line: 759, column: 23, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7068, file: !888, line: 758, column: 33)
!7073 = !DILocation(line: 759, column: 20, scope: !7072)
!7074 = !DILocation(line: 759, column: 15, scope: !7072)
!7075 = !DILocation(line: 759, column: 13, scope: !7072)
!7076 = !DILocation(line: 759, column: 18, scope: !7072)
!7077 = !DILocation(line: 760, column: 9, scope: !7072)
!7078 = !DILocation(line: 758, column: 29, scope: !7079)
!7079 = !DILexicalBlockFile(scope: !7068, file: !888, discriminator: 2)
!7080 = !DILocation(line: 758, column: 9, scope: !7079)
!7081 = distinct !{!7081, !7082}
!7082 = !DILocation(line: 758, column: 9, scope: !7064)
!7083 = !DILocation(line: 761, column: 14, scope: !7064)
!7084 = !DILocation(line: 761, column: 11, scope: !7064)
!7085 = !DILocation(line: 762, column: 15, scope: !7064)
!7086 = !DILocation(line: 762, column: 12, scope: !7064)
!7087 = !DILocation(line: 763, column: 5, scope: !7064)
!7088 = !DILocation(line: 757, column: 25, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !7059, file: !888, discriminator: 2)
!7090 = !DILocation(line: 757, column: 5, scope: !7089)
!7091 = distinct !{!7091, !7092}
!7092 = !DILocation(line: 757, column: 5, scope: !6599)
!7093 = !DILocation(line: 765, column: 10, scope: !6599)
!7094 = !DILocation(line: 765, column: 18, scope: !6599)
!7095 = !DILocation(line: 765, column: 7, scope: !6599)
!7096 = !DILocation(line: 766, column: 17, scope: !6599)
!7097 = !DILocation(line: 766, column: 24, scope: !6599)
!7098 = !DILocation(line: 766, column: 22, scope: !6599)
!7099 = !DILocation(line: 766, column: 5, scope: !6599)
!7100 = !DILocation(line: 766, column: 10, scope: !6599)
!7101 = !DILocation(line: 766, column: 15, scope: !6599)
!7102 = !DILocation(line: 767, column: 23, scope: !6599)
!7103 = !DILocation(line: 767, column: 21, scope: !6599)
!7104 = !DILocation(line: 767, column: 17, scope: !6599)
!7105 = !DILocation(line: 767, column: 34, scope: !6599)
!7106 = !DILocation(line: 767, column: 32, scope: !6599)
!7107 = !DILocation(line: 767, column: 5, scope: !6599)
!7108 = !DILocation(line: 767, column: 10, scope: !6599)
!7109 = !DILocation(line: 767, column: 15, scope: !6599)
!7110 = !DILocation(line: 768, column: 23, scope: !6599)
!7111 = !DILocation(line: 768, column: 31, scope: !6599)
!7112 = !DILocation(line: 768, column: 21, scope: !6599)
!7113 = !DILocation(line: 768, column: 17, scope: !6599)
!7114 = !DILocation(line: 768, column: 44, scope: !6599)
!7115 = !DILocation(line: 768, column: 42, scope: !6599)
!7116 = !DILocation(line: 768, column: 38, scope: !6599)
!7117 = !DILocation(line: 768, column: 36, scope: !6599)
!7118 = !DILocation(line: 768, column: 5, scope: !6599)
!7119 = !DILocation(line: 768, column: 10, scope: !6599)
!7120 = !DILocation(line: 768, column: 15, scope: !6599)
!7121 = !DILocation(line: 769, column: 23, scope: !6599)
!7122 = !DILocation(line: 769, column: 31, scope: !6599)
!7123 = !DILocation(line: 769, column: 21, scope: !6599)
!7124 = !DILocation(line: 769, column: 17, scope: !6599)
!7125 = !DILocation(line: 769, column: 44, scope: !6599)
!7126 = !DILocation(line: 769, column: 52, scope: !6599)
!7127 = !DILocation(line: 769, column: 42, scope: !6599)
!7128 = !DILocation(line: 769, column: 38, scope: !6599)
!7129 = !DILocation(line: 769, column: 36, scope: !6599)
!7130 = !DILocation(line: 769, column: 5, scope: !6599)
!7131 = !DILocation(line: 769, column: 10, scope: !6599)
!7132 = !DILocation(line: 769, column: 15, scope: !6599)
!7133 = !DILocation(line: 770, column: 12, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !6599, file: !888, line: 770, column: 5)
!7135 = !DILocation(line: 770, column: 10, scope: !7134)
!7136 = !DILocation(line: 770, column: 17, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !7138, file: !888, discriminator: 1)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !888, line: 770, column: 5)
!7139 = !DILocation(line: 770, column: 19, scope: !7137)
!7140 = !DILocation(line: 770, column: 5, scope: !7137)
!7141 = !DILocation(line: 771, column: 21, scope: !7138)
!7142 = !DILocation(line: 771, column: 25, scope: !7138)
!7143 = !DILocation(line: 771, column: 33, scope: !7138)
!7144 = !DILocation(line: 771, column: 23, scope: !7138)
!7145 = !DILocation(line: 771, column: 19, scope: !7138)
!7146 = !DILocation(line: 771, column: 14, scope: !7138)
!7147 = !DILocation(line: 771, column: 9, scope: !7138)
!7148 = !DILocation(line: 771, column: 17, scope: !7138)
!7149 = !DILocation(line: 770, column: 25, scope: !7150)
!7150 = !DILexicalBlockFile(scope: !7138, file: !888, discriminator: 2)
!7151 = !DILocation(line: 770, column: 5, scope: !7150)
!7152 = distinct !{!7152, !7153}
!7153 = !DILocation(line: 770, column: 5, scope: !6599)
!7154 = !DILocation(line: 772, column: 1, scope: !6599)
!7155 = distinct !DISubprogram(name: "tm2_high_chroma", scope: !888, file: !888, line: 483, type: !7156, isLocal: true, isDefinition: true, scopeLine: 484, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{null, !1303, !905, !1303, !7158, !1303}
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64, align: 64)
!7159 = !DILocalVariable(name: "data", arg: 1, scope: !7155, file: !888, line: 483, type: !1303)
!7160 = !DILocation(line: 483, column: 41, scope: !7155)
!7161 = !DILocalVariable(name: "stride", arg: 2, scope: !7155, file: !888, line: 483, type: !905)
!7162 = !DILocation(line: 483, column: 51, scope: !7155)
!7163 = !DILocalVariable(name: "last", arg: 3, scope: !7155, file: !888, line: 483, type: !1303)
!7164 = !DILocation(line: 483, column: 64, scope: !7155)
!7165 = !DILocalVariable(name: "CD", arg: 4, scope: !7155, file: !888, line: 483, type: !7158)
!7166 = !DILocation(line: 483, column: 80, scope: !7155)
!7167 = !DILocalVariable(name: "deltas", arg: 5, scope: !7155, file: !888, line: 483, type: !1303)
!7168 = !DILocation(line: 483, column: 89, scope: !7155)
!7169 = !DILocalVariable(name: "i", scope: !7155, file: !888, line: 485, type: !905)
!7170 = !DILocation(line: 485, column: 9, scope: !7155)
!7171 = !DILocalVariable(name: "j", scope: !7155, file: !888, line: 485, type: !905)
!7172 = !DILocation(line: 485, column: 12, scope: !7155)
!7173 = !DILocation(line: 486, column: 12, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7155, file: !888, line: 486, column: 5)
!7175 = !DILocation(line: 486, column: 10, scope: !7174)
!7176 = !DILocation(line: 486, column: 17, scope: !7177)
!7177 = !DILexicalBlockFile(scope: !7178, file: !888, discriminator: 1)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !888, line: 486, column: 5)
!7179 = !DILocation(line: 486, column: 19, scope: !7177)
!7180 = !DILocation(line: 486, column: 5, scope: !7177)
!7181 = !DILocation(line: 487, column: 16, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !888, line: 487, column: 9)
!7183 = distinct !DILexicalBlock(scope: !7178, file: !888, line: 486, column: 29)
!7184 = !DILocation(line: 487, column: 14, scope: !7182)
!7185 = !DILocation(line: 487, column: 21, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7187, file: !888, discriminator: 1)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !888, line: 487, column: 9)
!7188 = !DILocation(line: 487, column: 23, scope: !7186)
!7189 = !DILocation(line: 487, column: 9, scope: !7186)
!7190 = !DILocation(line: 488, column: 29, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7187, file: !888, line: 487, column: 33)
!7192 = !DILocation(line: 488, column: 33, scope: !7191)
!7193 = !DILocation(line: 488, column: 35, scope: !7191)
!7194 = !DILocation(line: 488, column: 31, scope: !7191)
!7195 = !DILocation(line: 488, column: 22, scope: !7191)
!7196 = !DILocation(line: 488, column: 16, scope: !7191)
!7197 = !DILocation(line: 488, column: 13, scope: !7191)
!7198 = !DILocation(line: 488, column: 19, scope: !7191)
!7199 = !DILocation(line: 489, column: 27, scope: !7191)
!7200 = !DILocation(line: 489, column: 24, scope: !7191)
!7201 = !DILocation(line: 489, column: 18, scope: !7191)
!7202 = !DILocation(line: 489, column: 13, scope: !7191)
!7203 = !DILocation(line: 489, column: 21, scope: !7191)
!7204 = !DILocation(line: 490, column: 28, scope: !7191)
!7205 = !DILocation(line: 490, column: 23, scope: !7191)
!7206 = !DILocation(line: 490, column: 18, scope: !7191)
!7207 = !DILocation(line: 490, column: 13, scope: !7191)
!7208 = !DILocation(line: 490, column: 21, scope: !7191)
!7209 = !DILocation(line: 491, column: 9, scope: !7191)
!7210 = !DILocation(line: 487, column: 29, scope: !7211)
!7211 = !DILexicalBlockFile(scope: !7187, file: !888, discriminator: 2)
!7212 = !DILocation(line: 487, column: 9, scope: !7211)
!7213 = distinct !{!7213, !7214}
!7214 = !DILocation(line: 487, column: 9, scope: !7183)
!7215 = !DILocation(line: 492, column: 17, scope: !7183)
!7216 = !DILocation(line: 492, column: 14, scope: !7183)
!7217 = !DILocation(line: 493, column: 5, scope: !7183)
!7218 = !DILocation(line: 486, column: 25, scope: !7219)
!7219 = !DILexicalBlockFile(scope: !7178, file: !888, discriminator: 2)
!7220 = !DILocation(line: 486, column: 5, scope: !7219)
!7221 = distinct !{!7221, !7222}
!7222 = !DILocation(line: 486, column: 5, scope: !7155)
!7223 = !DILocation(line: 494, column: 1, scope: !7155)
!7224 = distinct !DISubprogram(name: "tm2_apply_deltas", scope: !888, file: !888, line: 465, type: !7225, isLocal: true, isDefinition: true, scopeLine: 466, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{null, !1657, !1303, !905, !1303, !1303}
!7227 = !DILocation(line: 159, column: 97, scope: !3188, inlinedAt: !7228)
!7228 = distinct !DILocation(line: 476, column: 20, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !888, line: 472, column: 32)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !888, line: 472, column: 9)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !888, line: 472, column: 9)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !888, line: 470, column: 28)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !888, line: 470, column: 5)
!7234 = distinct !DILexicalBlock(scope: !7224, file: !888, line: 470, column: 5)
!7235 = !DILocalVariable(name: "ctx", arg: 1, scope: !7224, file: !888, line: 465, type: !1657)
!7236 = !DILocation(line: 465, column: 49, scope: !7224)
!7237 = !DILocalVariable(name: "Y", arg: 2, scope: !7224, file: !888, line: 465, type: !1303)
!7238 = !DILocation(line: 465, column: 59, scope: !7224)
!7239 = !DILocalVariable(name: "stride", arg: 3, scope: !7224, file: !888, line: 465, type: !905)
!7240 = !DILocation(line: 465, column: 66, scope: !7224)
!7241 = !DILocalVariable(name: "deltas", arg: 4, scope: !7224, file: !888, line: 465, type: !1303)
!7242 = !DILocation(line: 465, column: 79, scope: !7224)
!7243 = !DILocalVariable(name: "last", arg: 5, scope: !7224, file: !888, line: 465, type: !1303)
!7244 = !DILocation(line: 465, column: 92, scope: !7224)
!7245 = !DILocalVariable(name: "ct", scope: !7224, file: !888, line: 467, type: !902)
!7246 = !DILocation(line: 467, column: 14, scope: !7224)
!7247 = !DILocalVariable(name: "d", scope: !7224, file: !888, line: 467, type: !902)
!7248 = !DILocation(line: 467, column: 18, scope: !7224)
!7249 = !DILocalVariable(name: "i", scope: !7224, file: !888, line: 468, type: !905)
!7250 = !DILocation(line: 468, column: 9, scope: !7224)
!7251 = !DILocalVariable(name: "j", scope: !7224, file: !888, line: 468, type: !905)
!7252 = !DILocation(line: 468, column: 12, scope: !7224)
!7253 = !DILocation(line: 470, column: 12, scope: !7234)
!7254 = !DILocation(line: 470, column: 10, scope: !7234)
!7255 = !DILocation(line: 470, column: 17, scope: !7256)
!7256 = !DILexicalBlockFile(scope: !7233, file: !888, discriminator: 1)
!7257 = !DILocation(line: 470, column: 19, scope: !7256)
!7258 = !DILocation(line: 470, column: 5, scope: !7256)
!7259 = !DILocation(line: 471, column: 21, scope: !7232)
!7260 = !DILocation(line: 471, column: 14, scope: !7232)
!7261 = !DILocation(line: 471, column: 19, scope: !7232)
!7262 = !DILocation(line: 471, column: 12, scope: !7232)
!7263 = !DILocation(line: 472, column: 16, scope: !7231)
!7264 = !DILocation(line: 472, column: 14, scope: !7231)
!7265 = !DILocation(line: 472, column: 21, scope: !7266)
!7266 = !DILexicalBlockFile(scope: !7230, file: !888, discriminator: 1)
!7267 = !DILocation(line: 472, column: 23, scope: !7266)
!7268 = !DILocation(line: 472, column: 9, scope: !7266)
!7269 = !DILocation(line: 473, column: 24, scope: !7229)
!7270 = !DILocation(line: 473, column: 28, scope: !7229)
!7271 = !DILocation(line: 473, column: 30, scope: !7229)
!7272 = !DILocation(line: 473, column: 26, scope: !7229)
!7273 = !DILocation(line: 473, column: 17, scope: !7229)
!7274 = !DILocation(line: 473, column: 15, scope: !7229)
!7275 = !DILocation(line: 474, column: 19, scope: !7229)
!7276 = !DILocation(line: 474, column: 16, scope: !7229)
!7277 = !DILocation(line: 475, column: 24, scope: !7229)
!7278 = !DILocation(line: 475, column: 18, scope: !7229)
!7279 = !DILocation(line: 475, column: 13, scope: !7229)
!7280 = !DILocation(line: 475, column: 21, scope: !7229)
!7281 = !DILocation(line: 476, column: 41, scope: !7229)
!7282 = !DILocation(line: 476, column: 36, scope: !7229)
!7283 = !DILocation(line: 476, column: 20, scope: !7229)
!7284 = !DILocation(line: 161, column: 9, scope: !3463, inlinedAt: !7228)
!7285 = !DILocation(line: 161, column: 10, scope: !3463, inlinedAt: !7228)
!7286 = !DILocation(line: 161, column: 9, scope: !3188, inlinedAt: !7228)
!7287 = !DILocation(line: 161, column: 29, scope: !3467, inlinedAt: !7228)
!7288 = !DILocation(line: 161, column: 28, scope: !3467, inlinedAt: !7228)
!7289 = !DILocation(line: 161, column: 31, scope: !3467, inlinedAt: !7228)
!7290 = !DILocation(line: 161, column: 27, scope: !3467, inlinedAt: !7228)
!7291 = !DILocation(line: 161, column: 20, scope: !3467, inlinedAt: !7228)
!7292 = !DILocation(line: 162, column: 17, scope: !3463, inlinedAt: !7228)
!7293 = !DILocation(line: 162, column: 10, scope: !3463, inlinedAt: !7228)
!7294 = !DILocation(line: 163, column: 1, scope: !3188, inlinedAt: !7228)
!7295 = !DILocation(line: 476, column: 15, scope: !7229)
!7296 = !DILocation(line: 476, column: 13, scope: !7229)
!7297 = !DILocation(line: 476, column: 18, scope: !7229)
!7298 = !DILocation(line: 477, column: 9, scope: !7229)
!7299 = !DILocation(line: 472, column: 29, scope: !7300)
!7300 = !DILexicalBlockFile(scope: !7230, file: !888, discriminator: 2)
!7301 = !DILocation(line: 472, column: 9, scope: !7300)
!7302 = distinct !{!7302, !7303}
!7303 = !DILocation(line: 472, column: 9, scope: !7232)
!7304 = !DILocation(line: 478, column: 14, scope: !7232)
!7305 = !DILocation(line: 478, column: 11, scope: !7232)
!7306 = !DILocation(line: 479, column: 21, scope: !7232)
!7307 = !DILocation(line: 479, column: 16, scope: !7232)
!7308 = !DILocation(line: 479, column: 9, scope: !7232)
!7309 = !DILocation(line: 479, column: 14, scope: !7232)
!7310 = !DILocation(line: 479, column: 19, scope: !7232)
!7311 = !DILocation(line: 480, column: 5, scope: !7232)
!7312 = !DILocation(line: 470, column: 25, scope: !7313)
!7313 = !DILexicalBlockFile(scope: !7233, file: !888, discriminator: 2)
!7314 = !DILocation(line: 470, column: 5, scope: !7313)
!7315 = distinct !{!7315, !7316}
!7316 = !DILocation(line: 470, column: 5, scope: !7224)
!7317 = !DILocation(line: 481, column: 1, scope: !7224)
!7318 = distinct !DISubprogram(name: "tm2_low_chroma", scope: !888, file: !888, line: 496, type: !7319, isLocal: true, isDefinition: true, scopeLine: 497, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1651)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{null, !1303, !905, !1303, !7158, !1303, !905}
!7321 = !DILocalVariable(name: "data", arg: 1, scope: !7318, file: !888, line: 496, type: !1303)
!7322 = !DILocation(line: 496, column: 40, scope: !7318)
!7323 = !DILocalVariable(name: "stride", arg: 2, scope: !7318, file: !888, line: 496, type: !905)
!7324 = !DILocation(line: 496, column: 50, scope: !7318)
!7325 = !DILocalVariable(name: "clast", arg: 3, scope: !7318, file: !888, line: 496, type: !1303)
!7326 = !DILocation(line: 496, column: 63, scope: !7318)
!7327 = !DILocalVariable(name: "CD", arg: 4, scope: !7318, file: !888, line: 496, type: !7158)
!7328 = !DILocation(line: 496, column: 80, scope: !7318)
!7329 = !DILocalVariable(name: "deltas", arg: 5, scope: !7318, file: !888, line: 496, type: !1303)
!7330 = !DILocation(line: 496, column: 89, scope: !7318)
!7331 = !DILocalVariable(name: "bx", arg: 6, scope: !7318, file: !888, line: 496, type: !905)
!7332 = !DILocation(line: 496, column: 101, scope: !7318)
!7333 = !DILocalVariable(name: "t", scope: !7318, file: !888, line: 498, type: !905)
!7334 = !DILocation(line: 498, column: 9, scope: !7318)
!7335 = !DILocalVariable(name: "l", scope: !7318, file: !888, line: 499, type: !905)
!7336 = !DILocation(line: 499, column: 9, scope: !7318)
!7337 = !DILocalVariable(name: "prev", scope: !7318, file: !888, line: 500, type: !905)
!7338 = !DILocation(line: 500, column: 9, scope: !7318)
!7339 = !DILocation(line: 502, column: 9, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7318, file: !888, line: 502, column: 9)
!7341 = !DILocation(line: 502, column: 12, scope: !7340)
!7342 = !DILocation(line: 502, column: 9, scope: !7318)
!7343 = !DILocation(line: 503, column: 16, scope: !7340)
!7344 = !DILocation(line: 503, column: 14, scope: !7340)
!7345 = !DILocation(line: 503, column: 9, scope: !7340)
!7346 = !DILocation(line: 505, column: 14, scope: !7340)
!7347 = !DILocation(line: 506, column: 15, scope: !7318)
!7348 = !DILocation(line: 506, column: 23, scope: !7318)
!7349 = !DILocation(line: 506, column: 21, scope: !7318)
!7350 = !DILocation(line: 506, column: 30, scope: !7318)
!7351 = !DILocation(line: 506, column: 7, scope: !7318)
!7352 = !DILocation(line: 507, column: 15, scope: !7318)
!7353 = !DILocation(line: 507, column: 22, scope: !7318)
!7354 = !DILocation(line: 507, column: 20, scope: !7318)
!7355 = !DILocation(line: 507, column: 30, scope: !7318)
!7356 = !DILocation(line: 507, column: 28, scope: !7318)
!7357 = !DILocation(line: 507, column: 38, scope: !7318)
!7358 = !DILocation(line: 507, column: 36, scope: !7318)
!7359 = !DILocation(line: 507, column: 48, scope: !7318)
!7360 = !DILocation(line: 507, column: 7, scope: !7318)
!7361 = !DILocation(line: 508, column: 13, scope: !7318)
!7362 = !DILocation(line: 508, column: 21, scope: !7318)
!7363 = !DILocation(line: 508, column: 19, scope: !7318)
!7364 = !DILocation(line: 508, column: 29, scope: !7318)
!7365 = !DILocation(line: 508, column: 27, scope: !7318)
!7366 = !DILocation(line: 508, column: 5, scope: !7318)
!7367 = !DILocation(line: 508, column: 11, scope: !7318)
!7368 = !DILocation(line: 509, column: 13, scope: !7318)
!7369 = !DILocation(line: 509, column: 5, scope: !7318)
!7370 = !DILocation(line: 509, column: 11, scope: !7318)
!7371 = !DILocation(line: 510, column: 16, scope: !7318)
!7372 = !DILocation(line: 510, column: 5, scope: !7318)
!7373 = !DILocation(line: 510, column: 14, scope: !7318)
!7374 = !DILocation(line: 512, column: 21, scope: !7318)
!7375 = !DILocation(line: 512, column: 27, scope: !7318)
!7376 = !DILocation(line: 512, column: 35, scope: !7318)
!7377 = !DILocation(line: 512, column: 42, scope: !7318)
!7378 = !DILocation(line: 512, column: 46, scope: !7318)
!7379 = !DILocation(line: 512, column: 5, scope: !7318)
!7380 = !DILocation(line: 513, column: 1, scope: !7318)
